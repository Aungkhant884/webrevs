{"files":[{"patch":"@@ -49,3 +49,0 @@\n-#define IS_MUL_OVERFLOW(m, n) \\\n-        ((m) != 0 && (n) != 0 && (((size_t)((m)*(n))) != (((size_t)(m)) * ((size_t)(n)))))\n-\n@@ -54,2 +51,1 @@\n-     ((m) == 0 || (n) == 0 || (size_t)(n) <= (SIZE_MAX \/ (size_t)(m))) && \\\n-     !IS_MUL_OVERFLOW(m, n))\n+     ((m) == 0 || (n) == 0 || (size_t)(n) <= (SIZE_MAX \/ (size_t)(m))))\n@@ -78,1 +74,1 @@\n-    (IS_SAFE_SIZE_MUL((m), (n)) ? ((func)((m) * (n))) : FAILURE_RESULT)\n+    (IS_SAFE_SIZE_MUL((m), (n)) ? ((func)((size_t)(m) * (size_t)(n))) : FAILURE_RESULT)\n@@ -81,1 +77,1 @@\n-    (IS_SAFE_SIZE_MUL((m), (n)) ? ((func)((p), (m) * (n))) : FAILURE_RESULT)\n+    (IS_SAFE_SIZE_MUL((m), (n)) ? ((func)((p), (size_t)(m) * (size_t)(n))) : FAILURE_RESULT)\n@@ -95,1 +91,1 @@\n-    (IS_SAFE_SIZE_MUL(sizeof(type), (n)) ? (new type[(n)]) : throw std::bad_alloc())\n+    (IS_SAFE_SIZE_MUL(sizeof(type), (n)) ? (new type[(size_t)(n)]) : throw std::bad_alloc())\n@@ -99,1 +95,1 @@\n-     (new type[(n) * (m)]) : throw std::bad_alloc())\n+     (new type[(size_t)(n) * (size_t)(m)]) : throw std::bad_alloc())\n@@ -107,1 +103,1 @@\n-      IS_SAFE_SIZE_MUL((m), (n)) && IS_SAFE_SIZE_ADD((m) * (n), (a)) \\\n+      IS_SAFE_SIZE_MUL((m), (n)) && IS_SAFE_SIZE_ADD((size_t)(m) * (size_t)(n), (a)) \\\n@@ -119,1 +115,1 @@\n-    (IS_SAFE_STRUCT_SIZE((a), (m), (n)) ? ((func)((a) + (m) * (n))) : FAILURE_RESULT)\n+    (IS_SAFE_STRUCT_SIZE((a), (m), (n)) ? ((func)((size_t)(a) + (size_t)(m) * (size_t)(n))) : FAILURE_RESULT)\n","filename":"src\/java.desktop\/share\/native\/common\/awt\/utility\/sizecalc.h","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"}]}