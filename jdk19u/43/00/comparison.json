{"files":[{"patch":"@@ -1818,1 +1818,1 @@\n-     * @param prevSrc the previous queue stolen from in current phase, or 0\n+     * @param prevSrc the two previous queues (if nonzero) stolen from in current phase, packed as int\n@@ -1820,1 +1820,1 @@\n-     * @return id of queue if taken, negative if none found, prevSrc for retry\n+     * @return the next prevSrc value to use, or negative if none found\n@@ -1838,2 +1838,3 @@\n-                    if (prevSrc == 0 && q.base == nb && a[nk] != null)\n-                        signalWork();           \/\/ propagate\n+                    if (src + (src << SWIDTH) != prevSrc &&\n+                        q.base == nb && a[nk] != null)\n+                        signalWork();           \/\/ propagate at most twice\/run\n@@ -1841,1 +1842,1 @@\n-                    return src;\n+                    return src + (prevSrc << SWIDTH);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}