{"files":[{"patch":"@@ -54,0 +54,3 @@\n+DEFAULT_JUNIT_PLATFORM_VERSION=1.8.1\n+DEFAULT_JUNIT_PLATFORM_JAR_CHECKSUM=0e01bf93820f644fbcf46ff20f43833c6624d8dd\n+\n","filename":"make\/build-support\/version-numbers","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -358,0 +358,4 @@\n+JUNIT_PLATFORM_VERSION=\"${JUNIT_PLATFORM_VERSION:-${DEFAULT_JUNIT_PLATFORM_VERSION}}\"\n+JUNIT_PLATFORM_JAR_URL_BASE=\"${JUNIT_PLATFORM_JAR_URL_BASE:-${MAVEN_REPO_URL_BASE}}\"\n+JUNIT_PLATFORM_JAR_CHECKSUM=\"${JUNIT_PLATFORM_JAR_CHECKSUM:-${DEFAULT_JUNIT_PLATFORM_JAR_CHECKSUM}}\"\n+\n@@ -718,0 +722,28 @@\n+#----- JUnit Platform (Console Standalone) -----\n+setup_junit_platform() {\n+    check_arguments \"${FUNCNAME}\" 0 $#\n+\n+    if [ -n \"${JUNIT_PLATFORM_JAR:-}\" ]; then\n+        return\n+    fi\n+\n+    if [ -z \"${JUNIT_PLATFORM_JAR_URL:-}\" ]; then\n+        if [ -n \"${JUNIT_PLATFORM_JAR_URL_BASE:-}\" ]; then\n+            JUNIT_PLATFORM_JAR_URL=\"${JUNIT_PLATFORM_JAR_URL_BASE}\/org\/junit\/platform\/junit-platform-console-standalone\/${JUNIT_PLATFORM_VERSION}\/junit-platform-console-standalone-${JUNIT_PLATFORM_VERSION}.jar\"\n+        fi\n+    fi\n+\n+    local JUNIT_PLATFORM_DEPS_DIR=\"${DEPS_DIR}\/junit-platform\"\n+\n+    if [ -n \"${JUNIT_PLATFORM_JAR_URL:-}\" ]; then\n+        JUNIT_PLATFORM_JAR=\"${JUNIT_PLATFORM_DEPS_DIR}\/$(basename ${JUNIT_PLATFORM_JAR_URL})\"\n+        download_and_checksum \"${JUNIT_PLATFORM_JAR_URL}\" \"${JUNIT_PLATFORM_JAR}\" \"${JUNIT_PLATFORM_JAR_CHECKSUM}\"\n+        return\n+    fi\n+\n+    error \"None of JUNIT_PLATFORM_JAR, JUNIT_PLATFORM_JAR_URL or JUNIT_PLATFORM_JAR_URL_BASE is set\"\n+    exit 1\n+}\n+setup_junit_platform\n+info \"JUNIT_PLATFORM_JAR ${JUNIT_PLATFORM_JAR}\"\n+\n@@ -904,0 +936,1 @@\n+check_file \"${JUNIT_PLATFORM_JAR}\"\n@@ -934,0 +967,1 @@\n+     JUNIT_PLATFORM_JAR=\"$(mixed_path \"${JUNIT_PLATFORM_JAR}\")\" \\\n","filename":"make\/build.sh","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-\tCLASSPATH=\"$(CLASSDIR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n+\tCLASSPATH=\"$(CLASSDIR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)$(PS)$(JUNIT_PLATFORM_JAR)\" \\\n@@ -71,1 +71,1 @@\n-\tCLASSPATH=\"$(CLASSDIR)$(PS)$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n+\tCLASSPATH=\"$(CLASSDIR)$(PS)$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)$(PS)$(JUNIT_PLATFORM_JAR)\" \\\n@@ -199,1 +199,1 @@\n-\t\t-classpath \"$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n+\t\t-classpath \"$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)$(PS)$(JUNIT_PLATFORM_JAR)\" \\\n@@ -209,1 +209,1 @@\n-\t\t-classpath \"$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n+\t\t-classpath \"$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)$(PS)$(JUNIT_PLATFORM_JAR)\" \\\n@@ -296,0 +296,11 @@\n+#----------------------------------------------------------------------\n+#\n+# import JUnit Platform\n+\n+$(JTREG_IMAGEDIR)\/lib\/junit-platform-console-standalone.jar: $(call PosixPath,$(JUNIT_PLATFORM_JAR))\n+\t$(RM) -f $@\n+\t$(MKDIR) -p $(@D)\n+\t$(CP) $< $@\n+\n+TARGETS.ZIP.jtreg += $(JTREG_IMAGEJARDIR)\/junit-platform-console-standalone.jar\n+\n","filename":"make\/jtreg.gmk","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javatest.regtest.agent;\n+\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.Launcher;\n+import org.junit.platform.launcher.LauncherDiscoveryRequest;\n+import org.junit.platform.launcher.LauncherSession;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junit.platform.launcher.listeners.SummaryGeneratingListener;\n+import org.junit.platform.launcher.listeners.TestExecutionSummary;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.lang.reflect.Method;\n+\n+\/**\n+ * TestRunner to run tests on the JUnit Platform.\n+ *\n+ * @author Christian Stein\n+ *\/\n+public class JUnitPlatformRunner implements MainActionHelper.TestRunner {\n+    private static final String\n+        JUNIT_NO_DRIVER        = \"No JUnit Platform driver (install junit-platform-console-standalone.jar next to jtreg.jar)\";\n+\n+    public static void main(String... args) throws Exception {\n+        main(null, args);\n+    }\n+\n+    public static void main(ClassLoader loader, String... args) throws Exception {\n+        if (args.length != 2) {\n+            throw new Error(\"wrong number of arguments\");\n+        }\n+        \/\/ String testName = args[0];  \/\/ not used\n+        String moduleClassName = args[1];\n+        int sep = moduleClassName.indexOf('\/');\n+        String moduleName = (sep == -1) ? null : moduleClassName.substring(0, sep);\n+        String className = (sep == -1) ? moduleClassName : moduleClassName.substring(sep + 1);\n+        \/\/            Class<?> mainClass = (loader == null) ? Class.forName(className) : loader.loadClass(className);\n+        ClassLoader cl;\n+        if (moduleName != null) {\n+            Class<?> layerClass;\n+            try {\n+                layerClass = Class.forName(\"java.lang.ModuleLayer\");\n+            } catch (ClassNotFoundException e) {\n+                layerClass = Class.forName(\"java.lang.reflect.Layer\");\n+            }\n+            Method bootMethod = layerClass.getMethod(\"boot\");\n+            Object bootLayer = bootMethod.invoke(null);\n+            Method findLoaderMth = layerClass.getMethod(\"findLoader\", String.class);\n+            cl = (ClassLoader) findLoaderMth.invoke(bootLayer, moduleName);\n+        } else if (loader != null) {\n+            cl = loader;\n+        } else {\n+            cl = JUnitPlatformRunner.class.getClassLoader();\n+        }\n+        Class<?> mainClass = Class.forName(className, false, cl);\n+\n+        \/\/ https:\/\/junit.org\/junit5\/docs\/current\/user-guide\/#launcher-api-execution\n+        Thread.currentThread().setContextClassLoader(cl);\n+        try {\n+\n+            LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n+                .selectors(DiscoverySelectors.selectClass(mainClass))\n+                .build();\n+\n+            SummaryGeneratingListener listener = new SummaryGeneratingListener();\n+\n+            try (LauncherSession session = LauncherFactory.openSession()) {\n+                Launcher launcher = session.getLauncher();\n+                launcher.registerTestExecutionListeners(listener);\n+                launcher.execute(request);\n+            }\n+\n+            TestExecutionSummary summary = listener.getSummary();\n+            if (summary.getTotalFailureCount() > 0) {\n+                StringWriter sw = new StringWriter();\n+                try (PrintWriter pw = new PrintWriter(sw)) {\n+                    pw.println(\"JavaTest Message: JUnit Platform Failure(s): \" + summary.getTotalFailureCount());\n+                    summary.printTo(pw);\n+                }\n+                System.err.println(sw);\n+            }\n+\n+        } catch (NoClassDefFoundError ex) {\n+            throw new Exception(JUNIT_NO_DRIVER, ex);\n+        }\n+\n+    }\n+\n+}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/JUnitPlatformRunner.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -613,0 +613,1 @@\n+    private static final String JUNIT_PLATFORM = \".junitPlatform\";\n@@ -678,0 +679,4 @@\n+        v = data.get(prefix + JUNIT_PLATFORM);\n+        if (v != null)\n+            setJUnitPlatformPath(new SearchPath(v));\n+\n@@ -752,0 +757,3 @@\n+        if (junitPlatformPath != null)\n+            data.put(prefix + JUNIT_PLATFORM, junitPlatformPath.toString());\n+\n@@ -933,0 +941,17 @@\n+    public void setJUnitPlatformPath(SearchPath junitPlatformPath) {\n+        junitPlatformPath.getClass(); \/\/ null check\n+        this.junitPlatformPath = junitPlatformPath;\n+    }\n+\n+    public SearchPath getJUnitPlatformPath() {\n+        return junitPlatformPath;\n+    }\n+\n+    private SearchPath junitPlatformPath;\n+\n+    public boolean isJUnitPlatformAvailable() {\n+        return (junitPlatformPath != null) && !junitPlatformPath.isEmpty();\n+    }\n+\n+    \/\/---------------------------------------------------------------------\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionParameters.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -302,0 +302,3 @@\n+                if (script.isJUnitPlatformRequired()) {\n+                    libs.addAll(script.getJUnitPlatformPath().asList());\n+                }\n@@ -795,0 +798,4 @@\n+        \/\/ junit-platform\n+        JUNIT_PLATFORM_NO_CLASSNAME     = \"No class provided for `junit-platform'\",\n+        JUNIT_PLATFORM_BAD_MAIN_ARG     = \"Bad argument provided for class in `junit-platform'\",\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Action.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javatest.regtest.exec;\n+\n+import com.sun.javatest.regtest.agent.JUnitPlatformRunner;\n+import com.sun.javatest.regtest.config.ParseException;\n+import java.util.List;\n+import java.util.Map;\n+\n+\/**\n+ * This class implements the \"junit-platform\" action, which is a variation of \"main\".\n+ *\n+ * @author Christian Stein\n+ * @see MainAction\n+ *\/\n+public class JUnitPlatformAction extends MainAction\n+{\n+    public static final String NAME = \"junit-platform\";\n+\n+    @Override\n+    public String getName() {\n+        return NAME;\n+    }\n+\n+    @Override\n+    public void init(Map<String,String> opts, List<String> args, String reason,\n+                     RegressionScript script)\n+        throws ParseException\n+    {\n+        if (args.isEmpty())\n+            throw new ParseException(JUNIT_PLATFORM_NO_CLASSNAME);\n+\n+        init(opts, args, reason, script,\n+                JUnitPlatformRunner.class,\n+                script.getTestResult().getTestName());\n+\n+        if (!getClassArgs().isEmpty())\n+            throw new ParseException(JUNIT_PLATFORM_BAD_MAIN_ARG);\n+\n+    } \/\/ init()\n+}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/JUnitPlatformAction.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -254,1 +254,1 @@\n-        if (!othervm && (this instanceof TestNGAction || this instanceof JUnitAction)) {\n+        if (!othervm && (this instanceof TestNGAction || this instanceof JUnitAction || this instanceof JUnitPlatformAction)) {\n@@ -260,1 +260,1 @@\n-                othervmOverrideReasons.add(\"test requires testng and\/or junit as modules\");\n+                othervmOverrideReasons.add(\"test requires testng and\/or junit(platform) as modules\");\n@@ -577,0 +577,1 @@\n+                .append(script.getJUnitPlatformPath())\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/MainAction.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,0 +181,1 @@\n+            needJUnitPlatform = false;\n@@ -186,1 +187,6 @@\n-            } else {\n+            }\n+            if (td.getParameter(\"importsJUnitPlatform\") != null) {\n+                needJUnitPlatform = true;\n+            }\n+\n+            if (!needJUnit && !needJUnitPlatform && !needTestNG) {\n@@ -190,0 +196,2 @@\n+                    } else if (a instanceof JUnitPlatformAction) {\n+                        needJUnitPlatform = true;\n@@ -199,0 +207,3 @@\n+            if (needJUnitPlatform && !params.isJUnitPlatformAvailable()) {\n+                throw new TestRunException(\"JUnit Platform not available: see the FAQ for details\");\n+            }\n@@ -567,0 +578,1 @@\n+        addAction(JUnitPlatformAction.NAME, JUnitPlatformAction.class);\n@@ -813,1 +825,1 @@\n-            if (needJUnit || needTestNG) {\n+            if (needJUnit || needJUnitPlatform || needTestNG) {\n@@ -820,0 +832,2 @@\n+                if (needJUnitPlatform)\n+                    install(params.getJUnitPlatformPath(), md);\n@@ -827,1 +841,2 @@\n-\n+            if (needJUnitPlatform)\n+                cp.append(params.getJUnitPlatformPath());\n@@ -914,1 +929,1 @@\n-            if (needJUnit || needTestNG) {\n+            if (needJUnit || needJUnitPlatform || needTestNG) {\n@@ -921,0 +936,2 @@\n+                if (needJUnitPlatform)\n+                    install(params.getJUnitPlatformPath(), md);\n@@ -929,1 +946,2 @@\n-\n+            if (needJUnitPlatform)\n+                fp.append(params.getJUnitPlatformPath());\n@@ -1047,0 +1065,4 @@\n+    boolean isJUnitPlatformRequired() {\n+        return needJUnitPlatform;\n+    }\n+\n@@ -1051,0 +1073,4 @@\n+    SearchPath getJUnitPlatformPath() {\n+        return params.getJUnitPlatformPath();\n+    }\n+\n@@ -1321,0 +1347,1 @@\n+    private boolean needJUnitPlatform;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":33,"deletions":6,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -1706,0 +1706,8 @@\n+\n+        \/\/ handle JUnitPlatform via its standalone JAR\n+        junitPlatformPath = new JarFinder(\"junit-platform-console-standalone.jar\")\n+            .classes(\"org.junit.platform.launcher.Launcher\")\n+            .libDir(libDir)\n+            .getPath();\n+\n+        help.addPathVersionHelper(\"JUnit Platform\", junitPlatformPath);\n@@ -1875,0 +1883,3 @@\n+            if (junitPlatformPath != null)\n+                rp.setJUnitPlatformPath(junitPlatformPath);\n+\n@@ -2461,0 +2472,1 @@\n+    private SearchPath junitPlatformPath;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+#\n+# Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#----------------------------------------------------------------------\n+\n+$(BUILDDIR)\/JUnitPlatform.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/junit-platform-console-standalone.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-agentvm \\\n+\t\t$(TESTDIR)\/junitPlatform\/  \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1\n+\t$(GREP) -s 'Test results: passed: 2' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\tif $(GREP) -s \"^\\s\\s*at \" $(@:%.ok=%\/work\/TestJupiter.jtr) > \/dev\/null ; then \\\n+\t\techo \"unexpected text\"; exit 1; \\\n+\tfi\n+\tif $(GREP) -s \"^\\s\\s*at \" $(@:%.ok=%\/work\/TestVintage.jtr) > \/dev\/null ; then \\\n+\t\techo \"unexpected text\"; exit 1; \\\n+\tfi\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += $(BUILDDIR)\/JUnitPlatform.ok\n+\n","filename":"test\/junitPlatform\/JUnitPlatform.gmk","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"","filename":"test\/junitPlatform\/TEST.ROOT","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/4499340\/test\/TEST.ROOT","status":"copied"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run junit-platform TestJupiter\n+ *\/\n+\n+class TestJupiter {\n+    @org.junit.jupiter.api.Test\n+    void test() {\n+        System.out.println(\"Pass\");\n+    }\n+}\n","filename":"test\/junitPlatform\/TestJupiter.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run junit-platform TestVintage\n+ *\/\n+\n+public class TestVintage {\n+    @org.junit.Test\n+    public void test() {\n+        System.out.println(\"Pass\");\n+    }\n+}\n","filename":"test\/junitPlatform\/TestVintage.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"}]}