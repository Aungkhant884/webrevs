{"files":[{"patch":"@@ -144,1 +144,0 @@\n-OLD_JAVAC_SOURCE_TARGET = --release 8\n@@ -147,1 +146,0 @@\n-EXTRA_LINT_OPTS = -rawtypes,-unchecked\n@@ -150,6 +148,1 @@\n-# for files needed to run othervm tests (on platforms back to JDK 8)\n-REGTEST_OLD_JAVAC = $(JDKHOME)\/bin\/javac\n-REGTEST_OLD_JAVAC_OPTIONS = \\\n-\t$(OLD_JAVAC_SOURCE_TARGET) -Xlint:all,-options,-deprecation,$(EXTRA_LINT_OPTS) -Werror\n-\n-# for files needed to run agentvm tests (on platforms back to JDK 8)\n+# for files needed to run agentvm and othervm tests (on platforms back to JDK 8)\n@@ -158,1 +151,1 @@\n-\t$(AGENT_JAVAC_SOURCE_TARGET) -Xlint:all,-options,-deprecation,$(EXTRA_LINT_OPTS) -Werror\n+\t$(AGENT_JAVAC_SOURCE_TARGET) -Xlint:all,-options,-deprecation -Werror\n","filename":"make\/Defs.gmk","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -30,19 +30,1 @@\n-### The following files are required to run othervm tests\n-\n-REGTEST-OTHERVM-CLASSES = AppletWrapper GetSystemProperty MainWrapper AStatus StringArray\n-JAVAFILES.com.sun.javatest.regtest-othervm = \\\n-\t$(REGTEST-OTHERVM-CLASSES:%=$(JAVADIR)\/com\/sun\/javatest\/regtest\/agent\/%.java)\n-\n-# TODO: set -bootclasspath to JDK 1.1 classes?\n-$(BUILDDIR)\/classes.com.sun.javatest.regtest-othervm.ok: \\\n-\t\t$(JAVAFILES.com.sun.javatest.regtest-othervm) \\\n-\t\t$(call PosixPath,$(JAVATEST_JAR))\n-\t$(MKDIR) -p $(CLASSDIR)\n-\tCLASSPATH=\"$(CLASSDIR)$(PS)$(JAVATEST_JAR)\" \\\n-\t    $(REGTEST_OLD_JAVAC) $(REGTEST_OLD_JAVAC_OPTIONS) \\\n-\t\t-d $(CLASSDIR) \\\n-\t\t-encoding ISO8859-1 \\\n-\t\t$(JAVAFILES.com.sun.javatest.regtest-othervm)\n-\techo \"classes built at `date`\" > $@\n-\n-### The following files are required to run agentvm tests, as far back as JDK 1.5\n+### The following files are required to run agentvm and othervm tests, as far back as JDK 8\n@@ -51,1 +33,1 @@\n-\t$(filter-out $(JAVAFILES.com.sun.javatest.regtest-othervm), $(shell $(FIND) $(JAVADIR)\/com\/sun\/javatest\/regtest\/agent -name \\*.java ))\n+\t$(shell $(FIND) $(JAVADIR)\/com\/sun\/javatest\/regtest\/agent -name \\*.java )\n@@ -54,2 +36,1 @@\n-\t\t$(JAVAFILES.com.sun.javatest.regtest-agentvm) \\\n-\t\t$(BUILDDIR)\/classes.com.sun.javatest.regtest-othervm.ok\n+\t\t$(JAVAFILES.com.sun.javatest.regtest-agentvm)\n@@ -84,0 +65,1 @@\n+# The hardcoded use of --release 9 reflects the introduction of the Java Platform Module System\n","filename":"make\/jtreg.gmk","additions":4,"deletions":22,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -50,2 +50,0 @@\n-import java.awt.event.ItemEvent;\n-import java.awt.event.ItemListener;\n@@ -59,2 +57,2 @@\n-import java.util.Dictionary;\n-import java.util.Hashtable;\n+import java.util.Map;\n+import java.util.HashMap;\n@@ -68,1 +66,1 @@\n-\/\/ @SuppressWarnings(\"removal\") \/\/ Applet and related APIs\n+@SuppressWarnings(\"removal\") \/\/ Applet and related APIs\n@@ -71,2 +69,2 @@\n-    public static void main(String [] args) {\n-        String [] appArgs;\n+    public static void main(String[] args) {\n+        String[] appArgs;\n@@ -77,1 +75,1 @@\n-            char [] buf = new char[1024];\n+            char[] buf = new char[1024];\n@@ -95,2 +93,2 @@\n-            appletParams = stringToDictionary(appArgs[i++]);\n-            appletAtts   = stringToDictionary(appArgs[i++]);\n+            appletParams = stringToMap(appArgs[i++]);\n+            appletAtts   = stringToMap(appArgs[i++]);\n@@ -109,1 +107,1 @@\n-            status = AStatus.failed(\"Thread interrupted: \" + t.toString());\n+            status = AStatus.failed(\"Thread interrupted: \" + t);\n@@ -116,1 +114,1 @@\n-    private static Dictionary stringToDictionary(String s) {\n+    private static Map<String,String> stringToMap(String s) {\n@@ -118,1 +116,1 @@\n-        Dictionary retVal = new Hashtable(3);\n+        Map<String,String> retVal = new HashMap<>(3);\n@@ -122,1 +120,1 @@\n-    } \/\/ stringToDictionary()\n+    } \/\/ stringToMap()\n@@ -135,2 +133,2 @@\n-            int width  = Integer.parseInt((String) appletAtts.get(\"width\"));\n-            int height = Integer.parseInt((String) appletAtts.get(\"height\"));\n+            int width  = Integer.parseInt(appletAtts.get(\"width\"));\n+            int height = Integer.parseInt(appletAtts.get(\"height\"));\n@@ -169,1 +167,1 @@\n-                    status = AStatus.failed(\"Thread interrupted: \" + e.toString());\n+                    status = AStatus.failed(\"Thread interrupted: \" + e);\n@@ -192,9 +190,5 @@\n-                Class eventQueueClass = EventQueue.class;\n-                Method isDispatchThread  = eventQueueClass.getMethod(\"isDispatchThread\", new Class[] {});\n-                Method invokeAndWait = eventQueueClass.getMethod(\"invokeAndWait\", new Class[] { Runnable.class });\n-                if (!((Boolean) (isDispatchThread.invoke(null, new Object[] { }))).booleanValue()) {\n-                    invokeAndWait.invoke(null, new Object[] { new Runnable() {\n-                            public void run() {\n-                                c.validate();\n-                            }\n-                        }});\n+                Class<?> eventQueueClass = EventQueue.class;\n+                Method isDispatchThread  = eventQueueClass.getMethod(\"isDispatchThread\");\n+                Method invokeAndWait = eventQueueClass.getMethod(\"invokeAndWait\", Runnable.class );\n+                if (!((Boolean) (isDispatchThread.invoke(null)))) {\n+                    invokeAndWait.invoke(null, (Runnable) c::validate);\n@@ -231,1 +225,1 @@\n-            return (String) appletParams.get(name);\n+            return appletParams.get(name);\n@@ -263,1 +257,1 @@\n-            status = AStatus.failed(\"Applet thread threw exception: \" + e.toString());\n+            status = AStatus.failed(\"Applet thread threw exception: \" + e);\n@@ -339,1 +333,1 @@\n-                    String [] boxNames = {\"fixed\", \"variable\"};\n+                    String[] boxNames = {\"fixed\", \"variable\"};\n@@ -416,1 +410,1 @@\n-                Class cls = Class.forName(className);\n+                Class<?> cls = Class.forName(className);\n@@ -463,1 +457,1 @@\n-        private void makeCheckboxPanel(String [] name, GridBagLayout gridbag, GridBagConstraints c) {\n+        private void makeCheckboxPanel(String[] name, GridBagLayout gridbag, GridBagConstraints c) {\n@@ -487,2 +481,2 @@\n-    private static Dictionary appletParams;\n-    private static Dictionary appletAtts;\n+    private static Map<String,String> appletParams;\n+    private static Map<String,String> appletAtts;\n@@ -499,1 +493,1 @@\n-    public CheckboxPanel(AppletPanel appletPanel, String [] boxNames) {\n+    public CheckboxPanel(AppletPanel appletPanel, String[] boxNames) {\n@@ -513,5 +507,1 @@\n-        b1.addItemListener(new ItemListener() {\n-            public void itemStateChanged(ItemEvent event) {\n-                panel.setFixedSize();\n-            }\n-        });\n+        b1.addItemListener(event -> panel.setFixedSize());\n@@ -519,5 +509,1 @@\n-        b2.addItemListener(new ItemListener() {\n-            public void itemStateChanged(ItemEvent event) {\n-                panel.setVariableSize();\n-            }\n-        });\n+        b2.addItemListener(event -> panel.setVariableSize());\n@@ -677,1 +663,1 @@\n-                AStatus.failed(\"Thread interrupted: \" + e.toString()).exit();\n+                AStatus.failed(\"Thread interrupted: \" + e).exit();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/AppletWrapper.java","additions":31,"deletions":45,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    public static void main(String [] args) {\n+    public static void main(String[] args) {\n@@ -65,1 +65,1 @@\n-            AStatus.failed(MAIN_CANT_READ_ARGS + e.toString()).exit();\n+            AStatus.failed(MAIN_CANT_READ_ARGS + e).exit();\n@@ -91,1 +91,1 @@\n-            AStatus.passed(MAIN_SKIPPED + e.toString())\n+            AStatus.passed(MAIN_SKIPPED + e)\n@@ -94,1 +94,1 @@\n-            AStatus.failed(MAIN_THREW_EXCEPT + e.toString())\n+            AStatus.failed(MAIN_THREW_EXCEPT + e)\n@@ -110,1 +110,1 @@\n-                    Class layerClass;\n+                    Class<?> layerClass;\n@@ -116,4 +116,4 @@\n-                    Method bootMethod = layerClass.getMethod(\"boot\", new Class[] { });\n-                    Object bootLayer = bootMethod.invoke(null, new Object[] { });\n-                    Method findLoaderMth = layerClass.getMethod(\"findLoader\", new Class[] { String.class });\n-                    cl = (ClassLoader) findLoaderMth.invoke(bootLayer, new Object[] { moduleName });\n+                    Method bootMethod = layerClass.getMethod(\"boot\");\n+                    Object bootLayer = bootMethod.invoke(null);\n+                    Method findLoaderMth = layerClass.getMethod(\"findLoader\", String.class);\n+                    cl = (ClassLoader) findLoaderMth.invoke(bootLayer, moduleName);\n@@ -125,3 +125,3 @@\n-                Class c = Class.forName(className, false, cl);\n-                Method mainMethod = c.getMethod(\"main\", new Class[] { String[].class });\n-                mainMethod.invoke(null, new Object[] { args });\n+                Class<?> c = Class.forName(className, false, cl);\n+                Method mainMethod = c.getMethod(\"main\", String[].class);\n+                mainMethod.invoke(null, (Object) args);\n@@ -163,1 +163,1 @@\n-        private final String [] args;\n+        private final String[] args;\n@@ -181,1 +181,1 @@\n-            AStatus.failed(MAIN_THREW_EXCEPT + e.toString()).exit();\n+            AStatus.failed(MAIN_THREW_EXCEPT + e).exit();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/MainWrapper.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n-import java.util.Vector;\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -70,1 +71,1 @@\n-     * array of arbitrary length.  Then end of each element in the array is\n+     * array of arbitrary length.  The end of each element in the array is\n@@ -72,1 +73,1 @@\n-     * separator immeidately before the end of the string, the final element\n+     * separator immediately before the end of the string, the final element\n@@ -84,1 +85,1 @@\n-        Vector v = new Vector();\n+        List<String> v = new ArrayList<>();\n@@ -86,1 +87,1 @@\n-        int tokenEnd   = 0;\n+        int tokenEnd;\n@@ -89,1 +90,1 @@\n-            v.addElement(s.substring(tokenStart, tokenEnd));\n+            v.add(s.substring(tokenStart, tokenEnd));\n@@ -92,1 +93,1 @@\n-        v.addElement(s.substring(tokenStart));\n+        v.add(s.substring(tokenStart));\n@@ -94,3 +95,1 @@\n-        String [] retVal = new String[v.size()];\n-        v.copyInto(retVal);\n-        return retVal;\n+        return v.toArray(new String[0]);\n@@ -114,1 +113,1 @@\n-        Vector v = new Vector();\n+        List<String> v = new ArrayList<>();\n@@ -116,1 +115,1 @@\n-        int tokenEnd   = 0;\n+        int tokenEnd;\n@@ -119,1 +118,1 @@\n-            v.addElement(s.substring(tokenStart, tokenEnd));\n+            v.add(s.substring(tokenStart, tokenEnd));\n@@ -123,3 +122,1 @@\n-        String [] retVal = new String[v.size()];\n-        v.copyInto(retVal);\n-        return retVal;\n+        return v.toArray(new String[0]);\n@@ -142,1 +139,1 @@\n-        Vector v = new Vector();\n+        List<String> v = new ArrayList<>();\n@@ -144,1 +141,1 @@\n-        int tokenEnd   = 0;\n+        int tokenEnd;\n@@ -158,1 +155,1 @@\n-            v.addElement(s.substring(tokenStart, tokenEnd));\n+            v.add(s.substring(tokenStart, tokenEnd));\n@@ -162,3 +159,1 @@\n-        String [] retVal = new String[v.size()];\n-        v.copyInto(retVal);\n-        return retVal;\n+        return v.toArray(new String[0]);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/StringArray.java","additions":17,"deletions":22,"binary":false,"changes":39,"status":"modified"}]}