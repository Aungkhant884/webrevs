{"files":[{"patch":"@@ -53,0 +53,1 @@\n+import com.sun.javatest.regtest.agent.Flags;\n@@ -130,0 +131,4 @@\n+        if (traceFinder) {\n+            System.err.println(\"RegressionTestFinder: reading \" + file);\n+        }\n+\n@@ -1061,0 +1066,2 @@\n+\n+    private static final boolean traceFinder = Flags.get(\"traceFinder\");\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionTestFinder.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -396,1 +396,1 @@\n-            public void process(String opt, String arg) {\n+            public void process(String opt, String arg) throws BadArgs {\n@@ -407,0 +407,3 @@\n+                    case \"files\":\n+                        reportMode = ReportMode.FILES;\n+                        break;\n@@ -410,0 +413,2 @@\n+                    default:\n+                        throw new BadArgs(i18n, \"main.badReportOption\", arg);\n@@ -1931,1 +1936,1 @@\n-                        case EXECUTED:\n+                        case EXECUTED: {\n@@ -1936,0 +1941,1 @@\n+                        }\n@@ -1949,1 +1955,0 @@\n-                    }\n@@ -1951,0 +1956,14 @@\n+                        case FILES: {\n+                            try {\n+                                RegressionParameters reportParams = new RegressionParameters(\"regtest\", params.getTestSuite(), out::println);\n+                                reportParams.setWorkDirectory(params.getWorkDirectory());\n+                                reportParams.setTests(params.getTests());\n+                                ParameterFilter pf = new ParameterFilter();\n+                                pf.update(reportParams);\n+                                tf = pf;\n+                                break;\n+                            } catch (Interview.Fault e) {\n+                                throw new Fault(i18n, \"main.cantCreateReportParameters\", e);\n+                            }\n+                        }\n+                    }\n@@ -2250,1 +2269,1 @@\n-    public enum ReportMode { NONE, EXECUTED, ALL_EXECUTED, ALL }\n+    public enum ReportMode { NONE, EXECUTED, FILES, ALL_EXECUTED, ALL }\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -199,0 +199,2 @@\n+help.main.report.files.desc=Include all tests specified by groups and paths \\\n+     on the command line, ignoring filters like status, exclude lists, and keywords.\n@@ -447,0 +449,1 @@\n+main.badReportOption=Bad value for -report: {0}\n@@ -453,0 +456,1 @@\n+main.cantCreateReportParameters=Cannot create report parameters: {0}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/i18n.properties","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-It is recommended that you run jtreg using JDK 1.8 or later.\n+It is recommended that you run jtreg using JDK 11 or later.\n@@ -562,1 +562,2 @@\n-Reports can be disabled with the `-noreport` option.\n+Reports can be disabled with the `-noreport` option; the set of tests included\n+in the report can be selected with the `-report:`_value_ option.\n@@ -1094,0 +1095,10 @@\n+### Why is there a delay after the tests have been run, before jtreg exits?\n+\n+By default, jtreg reports on all the tests that have been executed\n+and which have results in the work directory. It may take a few seconds\n+to find the set of tests for the report. You can use the `-report:`_value_\n+option to specify which tests should be in the report. If you are just\n+running a single test or a few tests, you may want to use `-report:files`,\n+to just report on the tests specified in the files and\/or groups given on the\n+command line.\n+\n","filename":"src\/share\/doc\/javatest\/regtest\/faq.md","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,322 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# These tests first do an initial run of jtreg to set up results in\n+# a work directory, and then do a subsequent run with varying options\n+# to verify the expected set of tests are reported.\n+\n+#-------------------------------------------------------------------------------\n+#\n+# -report:none\n+#\n+# No report directory should be written.\n+# Just the test files and no extra files should be read.\n+\n+$(BUILDTESTDIR)\/ReportOptionTest.none.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -nr \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t$(TESTDIR)\/reportOption\/also-run $(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/setup-jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\tJTREG_TRACEFINDER=1 \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-report:none \\\n+\t\t$(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\t$(GREP) -s 'Test results: passed: 1; failed: 1; error: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\tif grep 'Report written' $(@:%.ok=%\/jt.log) ; then \\\n+\t    echo \"error: report written unexpectedly\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(GREP) RegressionTestFinder $(@:%.ok=%\/jt.log) | $(WC) -l`\" -ne \"3\" ]; then \\\n+\t    echo \"error: unexpected number of files read\" ; exit 1 ; \\\n+\tfi\n+\tif $(GREP) \"do-not-run\" $(@:%.ok=%\/jt.log) ; then \\\n+\t    echo \"error: do-not-run files were read unexpectedly\" ; exit 1 ; \\\n+\tfi\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDTESTDIR)\/ReportOptionTest.none.ok\n+\n+\n+#-------------------------------------------------------------------------------\n+#\n+# -report:executed\n+#\n+# The report directory should be written.\n+# The report should just list the executed tests.\n+# Just the test files and no extra files should be read.\n+\n+$(BUILDTESTDIR)\/ReportOptionTest.executed.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -nr \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t$(TESTDIR)\/reportOption\/also-run $(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/setup-jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\tJTREG_TRACEFINDER=1 \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-report:executed \\\n+\t\t$(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\t$(GREP) -s 'Test results: passed: 1; failed: 1; error: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\tif [ ! -d $(@:%.ok=%)\/report ]; then \\\n+\t    echo \"error: report not found\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(CAT) $(@:%.ok=%)\/report\/text\/summary.txt | $(WC) -l`\" -ne \"3\" ]; then \\\n+\t    echo \"error: unexpected number of tests in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif $(GREP) \"do-not-run\" $(@:%.ok=%)\/report\/text\/summary.txt ; then \\\n+\t    echo \"error: do-not-run tests in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(GREP) RegressionTestFinder $(@:%.ok=%\/jt.log) | $(WC) -l`\" -ne \"3\" ]; then \\\n+\t    echo \"error: unexpected number of files read\" ; exit 1 ; \\\n+\tfi\n+\tif $(GREP) \"do-not-run\" $(@:%.ok=%\/jt.log) ; then \\\n+\t    echo \"error: do-not-run files were read unexpectedly\" ; exit 1 ; \\\n+\tfi\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDTESTDIR)\/ReportOptionTest.executed.ok\n+\n+\n+#-------------------------------------------------------------------------------\n+#\n+# -report:all-executed\n+#\n+# The report directory should be written.\n+# The report should just list all the executed tests.\n+# All the test files should be read.\n+\n+$(BUILDTESTDIR)\/ReportOptionTest.all-executed.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -nr \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t$(TESTDIR)\/reportOption\/also-run $(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/setup-jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\tJTREG_TRACEFINDER=1 \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-report:all-executed \\\n+\t\t$(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\t$(GREP) -s 'Test results: passed: 1; failed: 1; error: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\tif [ ! -d $(@:%.ok=%)\/report ]; then \\\n+\t    echo \"error: report not found\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(CAT) $(@:%.ok=%)\/report\/text\/summary.txt | $(WC) -l`\" -ne \"6\" ]; then \\\n+\t    echo \"error: unexpected number of tests in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif $(GREP) \"do-not-run\" $(@:%.ok=%)\/report\/text\/summary.txt ; then \\\n+\t    echo \"error: do-not-run tests in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(GREP) RegressionTestFinder $(@:%.ok=%\/jt.log) | $(WC) -l`\" -ne \"9\" ]; then \\\n+\t    echo \"error: unexpected number of files read\" ; exit 1 ; \\\n+\tfi\n+\tif ! $(GREP) \"do-not-run\" $(@:%.ok=%\/jt.log) ; then \\\n+\t    echo \"error: do-not-run files were not read\" ; exit 1 ; \\\n+\tfi\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDTESTDIR)\/ReportOptionTest.all-executed.ok\n+\n+\n+#-------------------------------------------------------------------------------\n+#\n+# -report:all\n+#\n+# The report directory should be written.\n+# The report should list all the tests.\n+# All the test files should be read.\n+\n+$(BUILDTESTDIR)\/ReportOptionTest.all.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -nr \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t$(TESTDIR)\/reportOption\/also-run $(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/setup-jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\tJTREG_TRACEFINDER=1 \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-report:all \\\n+\t\t$(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\t$(GREP) -s 'Test results: passed: 1; failed: 1; error: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\tif [ ! -d $(@:%.ok=%)\/report ]; then \\\n+\t    echo \"error: report not found\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(CAT) $(@:%.ok=%)\/report\/text\/summary.txt | $(WC) -l`\" -ne \"9\" ]; then \\\n+\t    echo \"error: unexpected number of tests in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif ! $(GREP) \"do-not-run\" $(@:%.ok=%)\/report\/text\/summary.txt ; then \\\n+\t    echo \"error: do-not-run tests not found in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(GREP) RegressionTestFinder $(@:%.ok=%\/jt.log) | $(WC) -l`\" -ne \"9\" ]; then \\\n+\t    echo \"error: unexpected number of files read\" ; exit 1 ; \\\n+\tfi\n+\tif ! $(GREP) \"do-not-run\" $(@:%.ok=%\/jt.log) ; then \\\n+\t    echo \"error: do-not-run files were not read\" ; exit 1 ; \\\n+\tfi\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDTESTDIR)\/ReportOptionTest.all.ok\n+\n+\n+#-------------------------------------------------------------------------------\n+#\n+# -report:files\n+#\n+# The report directory should be written.\n+# The report should just list all the tests given on the command line.\n+# Just the test files and no extra files should be read.\n+\n+$(BUILDTESTDIR)\/ReportOptionTest.files.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -nr \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t$(TESTDIR)\/reportOption\/also-run $(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/setup-jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\tJTREG_TRACEFINDER=1 \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-report:files \\\n+\t\t$(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\t$(GREP) -s 'Test results: passed: 1; failed: 1; error: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\tif [ ! -d $(@:%.ok=%)\/report ]; then \\\n+\t    echo \"error: report not found\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(CAT) $(@:%.ok=%)\/report\/text\/summary.txt | $(WC) -l`\" -ne \"3\" ]; then \\\n+\t    echo \"error: unexpected number of tests in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif $(GREP) \"do-not-run\" $(@:%.ok=%)\/report\/text\/summary.txt ; then \\\n+\t    echo \"error: do-not-run tests found in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(GREP) RegressionTestFinder $(@:%.ok=%\/jt.log) | $(WC) -l`\" -ne \"3\" ]; then \\\n+\t    echo \"error: unexpected number of files read\" ; exit 1 ; \\\n+\tfi\n+\tif $(GREP) \"do-not-run\" $(@:%.ok=%\/jt.log) ; then \\\n+\t    echo \"error: do-not-run files were read unexpectedly\" ; exit 1 ; \\\n+\tfi\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDTESTDIR)\/ReportOptionTest.files.ok\n+\n+\n+#-------------------------------------------------------------------------------\n+#\n+# -report:files -status:fail\n+#\n+# The report directory should be written.\n+# The report should just list all the tests given on the command line.\n+# Just the test files and no extra files should be read.\n+\n+$(BUILDTESTDIR)\/ReportOptionTest.files-status.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -nr \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t$(TESTDIR)\/reportOption\/also-run $(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/setup-jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\tJTREG_TRACEFINDER=1 \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-report:files -status:fail \\\n+\t\t$(TESTDIR)\/reportOption\/to-be-run \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from jtreg intentionally ignored\"\n+\t$(GREP) -s 'Test results: failed: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\tif [ ! -d $(@:%.ok=%)\/report ]; then \\\n+\t    echo \"error: report not found\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(CAT) $(@:%.ok=%)\/report\/text\/summary.txt | $(WC) -l`\" -ne \"3\" ]; then \\\n+\t    echo \"error: unexpected number of tests in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif $(GREP) \"do-not-run\" $(@:%.ok=%)\/report\/text\/summary.txt ; then \\\n+\t    echo \"error: do-not-run tests found in summary report\" ; exit 1 ; \\\n+\tfi\n+\tif [ \"`$(GREP) RegressionTestFinder $(@:%.ok=%\/jt.log) | $(WC) -l`\" -ne \"3\" ]; then \\\n+\t    echo \"error: unexpected number of files read\" ; exit 1 ; \\\n+\tfi\n+\tif $(GREP) \"do-not-run\" $(@:%.ok=%\/jt.log) ; then \\\n+\t    echo \"error: do-not-run files were read unexpectedly\" ; exit 1 ; \\\n+\tfi\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDTESTDIR)\/ReportOptionTest.files-status.ok\n+\n+\n+\n+#----------------------------------------------------------------------\n+#\n+# Convenience target\n+\n+report-option-tests: \\\n+    $(BUILDTESTDIR)\/ReportOptionTest.none.ok \\\n+    $(BUILDTESTDIR)\/ReportOptionTest.executed.ok \\\n+    $(BUILDTESTDIR)\/ReportOptionTest.all-executed.ok \\\n+    $(BUILDTESTDIR)\/ReportOptionTest.all.ok \\\n+    $(BUILDTESTDIR)\/ReportOptionTest.files.ok \\\n+    $(BUILDTESTDIR)\/ReportOptionTest.files-status.ok\n\\ No newline at end of file\n","filename":"test\/reportOption\/ReportOptionTest.gmk","additions":322,"deletions":0,"binary":false,"changes":322,"status":"added"},{"patch":"","filename":"test\/reportOption\/TEST.ROOT","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/4499340\/test\/TEST.ROOT","status":"copied"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory may be run\n+\n+\/*\n+ * @test\n+ * @run syntax-error\n+ *\/\n+public class Error {\n+    public static void main(String... args) { }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/also-run\/Error.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory may be run\n+\n+\/*\n+ * @test\n+ * @run main Fail\n+ *\/\n+public class Fail {\n+    public static void main(String... args) {\n+        throw new RuntimeException(\"this test should fail\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/also-run\/Fail.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory may be run\n+\n+\/*\n+ * @test\n+ * @run main Pass\n+ *\/\n+public class Pass {\n+    public static void main(String... args) { }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/also-run\/Pass.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory should not be run\n+\n+\/*\n+ * @test\n+ * @run syntax-error\n+ *\/\n+public class Error {\n+    public static void main(String... args) { }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/do-not-run\/Error.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory should not be run\n+\n+\/*\n+ * @test\n+ * @run main Fail\n+ *\/\n+public class Fail {\n+    public static void main(String... args) {\n+        throw new RuntimeException(\"this test should fail\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/do-not-run\/Fail.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory should not be run\n+\n+\/*\n+ * @test\n+ * @run main Pass\n+ *\/\n+public class Pass {\n+    public static void main(String... args) { }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/do-not-run\/Pass.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory are to be run\n+\n+\/*\n+ * @test\n+ * @run syntax-error\n+ *\/\n+public class Error {\n+    public static void main(String... args) { }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/to-be-run\/Error.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory are to be run\n+\n+\/*\n+ * @test\n+ * @run main Fail\n+ *\/\n+public class Fail {\n+    public static void main(String... args) {\n+        throw new RuntimeException(\"this test should fail\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/to-be-run\/Fail.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ tests in this directory are to be run\n+\n+\/*\n+ * @test\n+ * @run main Pass\n+ *\/\n+public class Pass {\n+    public static void main(String... args) { }\n+}\n\\ No newline at end of file\n","filename":"test\/reportOption\/to-be-run\/Pass.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"}]}