{"files":[{"patch":"@@ -220,1 +220,1 @@\n-         * @return\n+         * @return the path for a test\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/TestManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1104,2 +1104,0 @@\n-\/\/        testManager.addTestFiles(testFileArgs);\n-\/\/        testManager.addTestFileIds(testFileIdArgs);\n@@ -1107,1 +1105,0 @@\n-\/\/        testManager.addGroups(testGroupArgs);\n@@ -2221,1 +2218,1 @@\n-     * by examining to see whether wsl.exe can be found on the path.\n+     * by examining whether wsl.exe can be found on the path.\n@@ -2277,5 +2274,0 @@\n-\/\/    public List<String> testGroupArgs = new ArrayList<>();\n-    public List<TestManager.GroupSpec> testGroupSpecArgs = new ArrayList<>();\n-\/\/    public List<Path> testFileArgs = new ArrayList<>();\n-\/\/    public List<TestManager.FileId> testFileIdArgs = new ArrayList<>();\n-    public List<TestManager.TestSpec> testSpecArgs = new ArrayList<>();\n@@ -2284,0 +2276,2 @@\n+    public List<TestManager.GroupSpec> testGroupSpecArgs = new ArrayList<>();\n+    public List<TestManager.TestSpec> testSpecArgs = new ArrayList<>();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -447,1 +447,3 @@\n-as the name of a single method in the test to be executed.\n+as the name of a single method in the test to be executed.  If you give\n+conflicting values for the string, including not setting any value, the last\n+one specified will be used.\n@@ -492,1 +494,1 @@\n-### How do I specify to run a single test method in a JUnit test?\n+### How do I run a single test method in a JUnit test?\n","filename":"src\/share\/doc\/javatest\/regtest\/faq.md","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -234,0 +234,24 @@\n+\n+#----------------------------------------------------------------------\n+#\n+# Invalid method name\n+\n+$(BUILDTESTDIR)\/JUnitQueryTest.invalidMethod.ok: $(JTREG_IMAGEDIR)\/lib\/javatest.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%)\n+\t$(MKDIR) $(@:%.ok=%)\n+\tJT_JAVA=$(JDKHOME) JTHOME=$(JTREG_IMAGEDIR) \\\n+\t\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-va \\\n+\t\t$(TESTDIR)\/junitQueryTest\/a\/b\/c\/Test1.java?m14 \\\n+\t\t\t> $(@:%.ok=%)\/jt.log 2>&1 || \\\n+\t\ttrue \"non-zero exit code from jtreg intentionally ignored\"\n+\t$(GREP) -s 'Could not find method with name \\[m14] in class \\[Test1]' $(@:%.ok=%)\/jt.log\n+\t$(GREP) -s \"TEST RESULT: Failed. Execution failed: .*JUnitException: .* failed to discover tests\" $(@:%.ok=%)\/jt.log\n+\techo $@ passed at `date` > $@\n+\n+TESTS.jtreg += $(BUILDTESTDIR)\/JUnitQueryTest.invalidMethod.ok\n+\n@@ -246,1 +270,2 @@\n-    $(BUILDTESTDIR)\/JUnitQueryTest.invalidQuery.ok\n\\ No newline at end of file\n+    $(BUILDTESTDIR)\/JUnitQueryTest.invalidQuery.ok \\\n+    $(BUILDTESTDIR)\/JUnitQueryTest.invalidMethod.ok\n\\ No newline at end of file\n","filename":"test\/junitQueryTest\/JUnitQueryTest.gmk","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"}]}