{"files":[{"patch":"@@ -521,2 +521,8 @@\n-        for (Path dir: pp.asList()) {\n-            getModules(dir, results);\n+        for (Path element : pp.asList()) {\n+            if (Files.isRegularFile(element)) {\n+                getModule(element, results);\n+                continue;\n+            }\n+            for (Path file: FileUtils.listFiles(element)) {\n+                getModule(file, results);\n+            }\n@@ -527,7 +533,7 @@\n-    private void getModules(Path dir, Set<String> results) {\n-        for (Path f: FileUtils.listFiles(dir)) {\n-            if (isModule(f)) {\n-                results.add(f.getFileName().toString());\n-            } else if (f.getFileName().toString().endsWith(\".jar\")) {\n-                results.add(getAutomaticModuleName(f));\n-            }\n+    private void getModule(Path file, Set<String> results) {\n+        if (isModule(file)) {\n+            results.add(file.getFileName().toString());\n+            return;\n+        }\n+        if (file.getFileName().toString().endsWith(\".jar\")) {\n+            results.add(getAutomaticModuleName(file));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Action.java","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n@@ -850,6 +847,2 @@\n-                Path md = workDir.getFile(\"modules\").toPath();\n-                if (needJUnit)\n-                    install(params.getJUnitPath(), md);\n-                if (needTestNG)\n-                    install(params.getTestNGPath(), md);\n-                mp.append(md);\n+                if (needJUnit) params.getJUnitPath().asList().forEach(mp::append);\n+                if (needTestNG) params.getTestNGPath().asList().forEach(mp::append);\n@@ -951,6 +944,2 @@\n-                Path md = workDir.getFile(\"modules\").toPath();\n-                if (needJUnit)\n-                    install(params.getJUnitPath(), md);\n-                if (needTestNG)\n-                    install(params.getTestNGPath(), md);\n-                mp.append(md);\n+                if (needJUnit) params.getJUnitPath().asList().forEach(mp::append);\n+                if (needTestNG) params.getTestNGPath().asList().forEach(mp::append);\n@@ -1000,37 +989,0 @@\n-    private void install(SearchPath path, Path dir) throws TestRunException {\n-        synchronized (params.getWorkDirectory()) { \/\/ avoid multiple tests doing simultaneous install\n-            if (Files.exists(dir)) {\n-                if (!Files.isDirectory(dir))\n-                    throw new TestRunException(\"modules in work directory is not a directory\");\n-            } else {\n-                FileUtils.createDirectories(dir);\n-            }\n-\n-            for (Path jar: path.asList()) {\n-                Path target = dir.resolve(jar.getFileName());\n-                if (Files.exists(target)\n-                        && FileUtils.size(target) == FileUtils.size(jar)\n-                        && FileUtils.compareLastModifiedTimes(target, jar) == 0) {\n-                    return;\n-                }\n-\n-                \/\/ Eventually replace with java.nio.file.Files::copy\n-                try (OutputStream out = Files.newOutputStream(target);\n-                        InputStream in = Files.newInputStream(jar)) {\n-                    byte[] buf = new byte[8192];\n-                    int n;\n-                    while ((n = in.read(buf)) != -1) {\n-                        out.write(buf, 0, n);\n-                    }\n-                } catch (IOException e) {\n-                    throw new TestRunException(\"cannot init modules directory\", e);\n-                }\n-                try {\n-                    Files.setLastModifiedTime(target, FileUtils.getLastModifiedTime(jar));\n-                } catch (IOException e) {\n-                    throw new TestRunException(\"cannot set last modified time for \" + target, e);\n-                }\n-            }\n-        }\n-    }\n-\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":4,"deletions":52,"binary":false,"changes":56,"status":"modified"}]}