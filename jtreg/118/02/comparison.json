{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import java.util.Arrays;\n@@ -72,1 +71,1 @@\n-            commandLineHelpQuery.addAll(Arrays.asList(query.trim().split(\"\\\\s+\")));\n+            commandLineHelpQuery.addAll(List.of(query.trim().split(\"\\\\s+\")));\n@@ -247,1 +246,1 @@\n-                    nodesForGroup.toArray(new HelpTree.Node[nodesForGroup.size()]));\n+                    nodesForGroup.toArray(new HelpTree.Node[0]));\n@@ -271,1 +270,1 @@\n-                String[] query = commandLineHelpQuery.toArray(new String[commandLineHelpQuery.size()]);\n+                String[] query = commandLineHelpQuery.toArray(new String[0]);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/diff\/Help.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import java.util.Arrays;\n@@ -60,1 +59,1 @@\n-    List<Option> options = Arrays.asList(\n+    List<Option> options = List.of(\n@@ -222,2 +221,2 @@\n-    private PrintWriter out;\n-    private PrintWriter err;\n+    private final PrintWriter out;\n+    private final PrintWriter err;\n@@ -229,1 +228,1 @@\n-    private List<File> fileArgs = new ArrayList<>();\n+    private final List<File> fileArgs = new ArrayList<>();\n@@ -233,1 +232,1 @@\n-    private static I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(Main.class);\n+    private static final I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(Main.class);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/diff\/Main.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import com.sun.javatest.TestFinder;\n@@ -62,5 +61,1 @@\n-            TestSuite ts = new RegressionTestSuite(tsp, new TestFinder.ErrorHandler() {\n-                public void error(String msg) {\n-                    WorkDirectoryReader.this.error(msg);\n-                }\n-            });\n+            TestSuite ts = new RegressionTestSuite(tsp, WorkDirectoryReader.this::error);\n@@ -84,1 +79,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -118,2 +112,2 @@\n-    private File file;;\n-    private WorkDirectory wd;\n+    private final File file;\n+    private final WorkDirectory wd;\n@@ -121,1 +115,1 @@\n-    private static I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(WorkDirectoryReader.class);\n+    private static final I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(WorkDirectoryReader.class);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/diff\/WorkDirectoryReader.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.util.stream.Collectors;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/SearchPath.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-        boolean mixedMode = Boolean.valueOf(args[1]);\n+        boolean mixedMode = Boolean.parseBoolean(args[1]);\n@@ -101,1 +101,1 @@\n-        enum InfoKind { CONFIG, TEST };\n+        enum InfoKind { CONFIG, TEST }\n@@ -171,2 +171,1 @@\n-                PrintWriter pw = new PrintWriter(trace);\n-                try {\n+                try (PrintWriter pw = new PrintWriter(trace)) {\n@@ -174,2 +173,0 @@\n-                } finally {\n-                    pw.close();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/TestNGRunner.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    };\n+    }\n@@ -296,1 +296,1 @@\n-                        StringBuffer sb = new StringBuffer();\n+                        StringBuilder sb = new StringBuilder();\n@@ -397,1 +397,1 @@\n-    static enum Token {\n+    enum Token {\n@@ -429,1 +429,1 @@\n-    };\n+    }\n@@ -505,1 +505,1 @@\n-            return String.valueOf(left.evalBoolean(c) ? right.evalBoolean(c) : false);\n+            return String.valueOf(left.evalBoolean(c) && right.evalBoolean(c));\n@@ -814,1 +814,1 @@\n-            return String.valueOf(left.evalBoolean(c) ? true : right.evalBoolean(c));\n+            return String.valueOf(left.evalBoolean(c) || right.evalBoolean(c));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/Expr.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.io.FileReader;\n@@ -34,1 +33,0 @@\n-import java.nio.file.DirectoryStream;\n@@ -38,1 +36,0 @@\n-import java.util.Arrays;\n@@ -234,4 +231,3 @@\n-                \/\/ pass thru any output from the compiler\n-                BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));\n-                String line;\n-                try {\n+                \/\/ pass through any output from the compiler\n+                try (BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()))) {\n+                    String line;\n@@ -241,2 +237,0 @@\n-                } finally {\n-                    in.close();\n@@ -248,3 +242,2 @@\n-            } catch (IOException e) {\n-                throw new Fault(\"Compilation of extra property definition files failed.\", e);\n-            } catch (InterruptedException e) {\n+            } catch (IOException\n+                     | InterruptedException e) {\n@@ -311,1 +304,1 @@\n-    private static Pattern packagePattern =\n+    private static final Pattern packagePattern =\n@@ -313,1 +306,1 @@\n-    private static Pattern classPattern =\n+    private static final Pattern classPattern =\n@@ -334,1 +327,1 @@\n-        return (s == null) ? Collections.<String>emptyList() : Arrays.asList(s.split(\"\\\\s+\"));\n+        return (s == null) ? Collections.emptyList() : List.of(s.split(\"\\\\s+\"));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/ExtraPropDefns.java","additions":8,"deletions":15,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.File;\n@@ -36,1 +35,0 @@\n-import java.util.Arrays;\n@@ -41,1 +39,0 @@\n-import java.util.Iterator;\n@@ -62,2 +59,1 @@\n-        for (int i = 1; i < args.length; i++)\n-            files.add(args[i]);\n+        files.addAll(List.of(args).subList(1, args.length));\n@@ -67,1 +63,1 @@\n-            gm.setAllowedExtensions(Arrays.asList(\".java\", \".sh\", \".html\"));\n+            gm.setAllowedExtensions(List.of(\".java\", \".sh\", \".html\"));\n@@ -157,2 +153,1 @@\n-                @SuppressWarnings(\"unchecked\")\n-                List<Set<Path>> allFiles = Arrays.asList(e.includeFiles, e.excludeFiles);\n+                List<Set<Path>> allFiles = List.of(e.includeFiles, e.excludeFiles);\n@@ -278,9 +273,0 @@\n-        private void addFile(Collection<File> files, File file) {\n-            for (Iterator<File> iter = files.iterator(); iter.hasNext(); ) {\n-                File f = iter.next();\n-                if (contains(file, f))\n-                    iter.remove();\n-            }\n-            files.add(file);\n-        }\n-\n@@ -288,5 +274,1 @@\n-            for (Iterator<Path> iter = files.iterator(); iter.hasNext(); ) {\n-                Path f = iter.next();\n-                if (contains(file, f))\n-                    iter.remove();\n-            }\n+            files.removeIf(f -> contains(file, f));\n@@ -296,9 +278,0 @@\n-        private boolean contains(Collection<File> files, File file) {\n-            for (File f: files) {\n-                if (f.equals(file) || contains(f, file)) {\n-                    return true;\n-                }\n-            }\n-            return false;\n-        }\n-\n@@ -314,7 +287,0 @@\n-        private boolean contains(File dir, File file) {\n-            String dirPath = dir.getPath();\n-            if (!dirPath.endsWith(File.separator))\n-                dirPath += File.separator;\n-            return file.getPath().startsWith(dirPath);\n-        }\n-\n@@ -325,15 +291,0 @@\n-        private Set<File> filter(File dir, Collection<File> files) {\n-            Set<File> results = null;\n-            String dirPath = dir.getPath();\n-            if (!dirPath.endsWith(File.separator))\n-                dirPath += File.separator;\n-            for (File f: files) {\n-                String fp = f.getPath();\n-                if (fp.startsWith(dirPath)) {\n-                    if (results == null) results = new LinkedHashSet<>();\n-                    results.add(f);\n-                }\n-            }\n-            return results == null ? Collections.<File>emptySet() : results;\n-        }\n-\n@@ -351,11 +302,0 @@\n-        private List<File> list(File file) {\n-            List<File> children = new ArrayList<>();\n-            for (File f: file.listFiles()) {\n-                String fn = f.getName();\n-                if (f.isDirectory() && !ignoreDirs.contains(fn)\n-                        || f.isFile() && allowExtns.contains(getExtension(fn)))\n-                    children.add(f);\n-            }\n-            return children;\n-        }\n-\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/GroupManager.java","additions":4,"deletions":64,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import java.util.Arrays;\n@@ -355,4 +354,2 @@\n-        } catch (InterruptedException e) {\n-            \/\/ ignore, leave version as default\n-            logger.accept(\"Error getting \" + VERSION_PROPERTY + \" for \" + jdk + \": \" + e);\n-        } catch (IOException e) {\n+        } catch (InterruptedException\n+                 | IOException e) {\n@@ -405,4 +402,2 @@\n-            } catch (InterruptedException e) {\n-                \/\/ ignore, leave version as default\n-                logger.accept(\"Error running 'java \" + VERSION_OPTION + \"' for \" + jdk + \": \" + e);\n-            } catch (IOException e) {\n+            } catch (InterruptedException\n+                     | IOException e) {\n@@ -443,1 +438,1 @@\n-                    Arrays.asList(\"--system-properties\", \"--modules=boot-layer\"),\n+                    List.of(\"--system-properties\", \"--modules=boot-layer\"),\n@@ -492,1 +487,1 @@\n-                                new LinkedHashSet<>(Arrays.asList(m.split(\" +\"))));\n+                                new LinkedHashSet<>(List.of(m.split(\" +\"))));\n@@ -542,1 +537,1 @@\n-                            Arrays.asList(modulesOpt), false, logger);  \/\/ requested info from probe\n+                            List.of(modulesOpt), false, logger);  \/\/ requested info from probe\n@@ -548,1 +543,1 @@\n-                                new LinkedHashSet<>(Arrays.asList(m.split(\" +\"))));\n+                                new LinkedHashSet<>(List.of(m.split(\" +\"))));\n@@ -672,4 +667,2 @@\n-        } catch (InterruptedException e) {\n-            logger.accept(\"Error accessing extra property definitions: \" + e);\n-            throw new Fault(\"Error accessing extra property definitions: \" + e, e);\n-        } catch (IOException e) {\n+        } catch (InterruptedException\n+                 | IOException e) {\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/JDK.java","additions":10,"deletions":17,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.util.Arrays;\n@@ -56,1 +55,1 @@\n-     * Options names will be converted their canonical form.\n+     * Option names will be converted their canonical form.\n@@ -261,1 +260,1 @@\n-         * Update the list of options with a single-word multi-valued option.\n+         * Update the list of options with a single-word multivalued option.\n@@ -282,2 +281,2 @@\n-                allValues.addAll(Arrays.asList(oldValues));\n-                allValues.addAll(Arrays.asList(optValues.split(String.valueOf(valSep))));\n+                allValues.addAll(List.of(oldValues));\n+                allValues.addAll(List.of(optValues.split(String.valueOf(valSep))));\n@@ -349,1 +348,1 @@\n-    };\n+    }\n@@ -353,1 +352,1 @@\n-            handleOptions(Arrays.asList(opts));\n+            handleOptions(List.of(opts));\n@@ -365,1 +364,1 @@\n-            handleOption(opt, Collections.<String>emptyIterator());\n+            handleOption(opt, Collections.emptyIterator());\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/JDKOpts.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    public enum Phase { STATIC, DYNAMIC };\n+    public enum Phase { STATIC, DYNAMIC }\n@@ -224,4 +224,1 @@\n-        Map<String, Entry> cache = caches.get(params);\n-        if (cache == null) {\n-            caches.put(params, cache = new HashMap<>());\n-        }\n+        Map<String, Entry> cache = caches.computeIfAbsent(params, k -> new HashMap<>());\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/Modules.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.Map;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionEnvironment.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+import java.util.stream.Stream;\n@@ -108,1 +109,1 @@\n-        setTests(tests == null ? null : tests.toArray(new String[tests.size()]));\n+        setTests(tests == null ? null : tests.toArray(new String[0]));\n@@ -222,1 +223,1 @@\n-            final TestFilter f = new CompositeFilter(filters.toArray(new TestFilter[filters.size()]));\n+            final TestFilter f = new CompositeFilter(filters.toArray(new TestFilter[0]));\n@@ -243,1 +244,1 @@\n-        if (jdk == null || jdk.getVersion(this, logger).compareTo(JDK_Version.V9) == -1)\n+        if (jdk == null || jdk.getVersion(this, logger).compareTo(JDK_Version.V9) < 0)\n@@ -383,3 +384,3 @@\n-            for (String p: Arrays.asList(os.name, os.name.replaceAll(\"\\\\s\", \"\"), os.family, \"generic\")) {\n-                for (String q: Arrays.asList(null, os.arch, os.simple_arch, os.version, os.simple_version, \"all\")) {\n-                    String ep = (q == null) ? p : p + \"-\" + q;\n+            for (String p: List.of(os.name, os.name.replaceAll(\"\\\\s\", \"\"), os.family, \"generic\")) {\n+                for (String q: List.of(\"\", os.arch, os.simple_arch, os.version, os.simple_version, \"all\")) {\n+                    String ep = q.isEmpty() ? p : p + \"-\" + q;\n@@ -480,2 +481,1 @@\n-                            .collect(Collectors.toList())\n-                            .toArray(new File[0]));\n+                            .toArray(File[]::new));\n@@ -573,1 +573,1 @@\n-    private static KeywordsTestFilter UNSET_KEYWORDS_FILTER = new KeywordsTestFilter(UNSET);\n+    private static final KeywordsTestFilter UNSET_KEYWORDS_FILTER = new KeywordsTestFilter(UNSET);\n@@ -634,2 +634,2 @@\n-    @Override @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n-    public void load(Map data, boolean checkChecksum) throws Interview.Fault {\n+    @Override\n+    public void load(Map<String, String> data, boolean checkChecksum) throws Interview.Fault {\n@@ -637,4 +637,0 @@\n-        load0((Map<String,String>) data, checkChecksum);\n-    }\n-\n-    private void load0(Map<String,String> data, boolean checkChecksum) throws Interview.Fault {\n@@ -672,1 +668,1 @@\n-                setTestVMOptions(Arrays.asList(StringUtils.splitSeparator(\"\\n\", v)));\n+                setTestVMOptions(List.of(StringUtils.splitSeparator(\"\\n\", v)));\n@@ -676,1 +672,1 @@\n-                setTestCompilerOptions(Arrays.asList(StringUtils.splitSeparator(\"\\n\", v)));\n+                setTestCompilerOptions(List.of(StringUtils.splitSeparator(\"\\n\", v)));\n@@ -680,1 +676,1 @@\n-                setTestJavaOptions(Arrays.asList(StringUtils.splitSeparator(\"\\n\", v)));\n+                setTestJavaOptions(List.of(StringUtils.splitSeparator(\"\\n\", v)));\n@@ -684,1 +680,1 @@\n-                setRetainArgs(Arrays.asList(StringUtils.splitSeparator(\"\\n\", v)));\n+                setRetainArgs(List.of(StringUtils.splitSeparator(\"\\n\", v)));\n@@ -739,3 +735,1 @@\n-    @Override @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n-    public void save(Map data) {\n-        save0((Map<String, String>) data);\n+    public void save(Map<String, String> data) {\n@@ -743,1 +737,0 @@\n-    }\n@@ -745,1 +738,0 @@\n-    private void save0(Map<String, String> data) {\n@@ -894,2 +886,1 @@\n-        ignoreKind.getClass(); \/\/ null-check\n-        this.ignoreKind = ignoreKind;\n+        this.ignoreKind = Objects.requireNonNull(ignoreKind);\n@@ -919,2 +910,1 @@\n-        compileJDK.getClass(); \/\/ null check\n-        this.compileJDK = compileJDK;\n+        this.compileJDK = Objects.requireNonNull(compileJDK);\n@@ -932,2 +922,1 @@\n-        testJDK.getClass(); \/\/ null check\n-        this.testJDK = testJDK;\n+        this.testJDK = Objects.requireNonNull(testJDK);\n@@ -945,2 +934,1 @@\n-        junitPath.getClass(); \/\/ null check\n-        this.junitPath = junitPath;\n+        this.junitPath = Objects.requireNonNull(junitPath);\n@@ -962,2 +950,1 @@\n-        testngPath.getClass(); \/\/ null check\n-        this.testngPath = testngPath;\n+        this.testngPath = Objects.requireNonNull(testngPath);\n@@ -979,2 +966,1 @@\n-        asmToolsPath.getClass(); \/\/ null check\n-        this.asmToolsPath = asmToolsPath;\n+        this.asmToolsPath = Objects.requireNonNull(asmToolsPath);\n@@ -1216,2 +1202,1 @@\n-        timeoutHandlerClassName.getClass(); \/\/ null check\n-        this.timeoutHandlerClassName = timeoutHandlerClassName;\n+        this.timeoutHandlerClassName = Objects.requireNonNull(timeoutHandlerClassName);\n@@ -1229,1 +1214,1 @@\n-        timeoutHandlerPath.getClass(); \/\/ null check\n+        Objects.requireNonNull(timeoutHandlerPath);\n@@ -1267,1 +1252,1 @@\n-        this.matchLists = Arrays.asList(files);\n+        this.matchLists = List.of(files);\n@@ -1331,1 +1316,1 @@\n-                re = Arrays.asList(refIgnoreLines.trim().split(\"\\\\s+\")).stream()\n+                re = Arrays.stream(refIgnoreLines.trim().split(\"\\\\s+\"))\n@@ -1338,1 +1323,1 @@\n-                re = Arrays.asList(\"JAVA_TOOL_OPTIONS\", \"_JAVA_OPTIONS\").stream()\n+                re = Stream.of(\"JAVA_TOOL_OPTIONS\", \"_JAVA_OPTIONS\")\n@@ -1354,1 +1339,1 @@\n-    private static Pattern UNSET_PATTERN = Pattern.compile(\"\");\n+    private static final Pattern UNSET_PATTERN = Pattern.compile(\"\");\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionParameters.java","additions":28,"deletions":43,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.util.Arrays;\n@@ -40,0 +39,1 @@\n+import java.util.List;\n@@ -97,1 +97,1 @@\n-        return ((HashMap) getField(\"extensionTable\")).keySet();\n+        return ((Map<String, ?>) getField(\"extensionTable\")).keySet();\n@@ -102,1 +102,1 @@\n-        return ((HashMap) getField(\"excludeList\")).keySet();\n+        return ((Map<String, ?>) getField(\"excludeList\")).keySet();\n@@ -105,1 +105,1 @@\n-    Object getField(String name) {\n+    private Object getField(String name) {\n@@ -114,10 +114,4 @@\n-        } catch (NoSuchFieldException e) {\n-            e.printStackTrace(System.err);\n-            return null;\n-        } catch (SecurityException e) {\n-            e.printStackTrace(System.err);\n-            return null;\n-        } catch (IllegalArgumentException e) {\n-            e.printStackTrace(System.err);\n-            return null;\n-        } catch (IllegalAccessException e) {\n+        } catch (NoSuchFieldException\n+                 | SecurityException\n+                 | IllegalArgumentException\n+                 | IllegalAccessException e) {\n@@ -187,2 +181,1 @@\n-        @SuppressWarnings(\"unchecked\")\n-        Class<? extends CommentStream> csc = (Class<? extends CommentStream>) getClassForExtension(extn);\n+        Class<? extends CommentStream> csc = getClassForExtension(extn);\n@@ -211,2 +204,1 @@\n-                @SuppressWarnings({\"unchecked\", \"cast\"}) \/\/ temporary, to cover transition generifying TestFinder\n-                Map<String,String> tagValues = (Map<String,String>) parseComment(comment, file);\n+                Map<String,String> tagValues = parseComment(comment, file);\n@@ -263,1 +255,1 @@\n-    private class LineCounterBufferedReader extends BufferedReader {\n+    private static class LineCounterBufferedReader extends BufferedReader {\n@@ -433,1 +425,0 @@\n-            @SuppressWarnings(\"unchecked\")\n@@ -484,6 +475,1 @@\n-    @Override @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n-    protected Map<String, String> normalize(Map tv) {\n-        return normalize0((Map<String, String>) tv);\n-    }\n-\n-    private Map<String, String> normalize0(Map<String, String> tagValues) {\n+    protected Map<String, String> normalize(Map<String, String> tagValues) {\n@@ -682,1 +668,1 @@\n-            result.addAll(Arrays.asList(s.split(regex)));\n+            result.addAll(List.of(s.split(regex)));\n@@ -688,1 +674,1 @@\n-     * Make sure that the provide name-value pair is of the proper format as\n+     * Make sure that the provided name-value pair is of the proper format as\n@@ -695,2 +681,1 @@\n-    @Override @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n-    protected void processEntry(Map entries, String name, String value)\n+    protected void processEntry(Map<String, String> entries, String name, String value)\n@@ -698,2 +683,0 @@\n-        Map<String, String> tagValues = (Map<String, String>) entries;\n-\n@@ -712,1 +695,1 @@\n-                    processRun(tagValues, value);\n+                    processRun(entries, value);\n@@ -716,1 +699,1 @@\n-                    processBug(tagValues, value);\n+                    processBug(entries, value);\n@@ -720,1 +703,1 @@\n-                    processRequires(tagValues, value);\n+                    processRequires(entries, value);\n@@ -724,1 +707,1 @@\n-                    processKey(tagValues, value);\n+                    processKey(entries, value);\n@@ -728,1 +711,1 @@\n-                    processModules(tagValues, value);\n+                    processModules(entries, value);\n@@ -732,1 +715,1 @@\n-                    processLibrary(tagValues, value);\n+                    processLibrary(entries, value);\n@@ -740,1 +723,1 @@\n-                    processEnablePreview(tagValues, value);\n+                    processEnablePreview(entries, value);\n@@ -745,1 +728,1 @@\n-                        parseError(tagValues, PARSE_TAG_BAD + name);\n+                        parseError(entries, PARSE_TAG_BAD + name);\n@@ -747,1 +730,1 @@\n-                        tagValues.put(name, value);\n+                        entries.put(name, value);\n@@ -751,1 +734,1 @@\n-            reportError(tagValues, e.getMessage());\n+            reportError(entries, e.getMessage());\n@@ -783,2 +766,1 @@\n-        if (tagValues.get(ERROR) == null)\n-            tagValues.put(ERROR, value);\n+        tagValues.putIfAbsent(ERROR, value);\n@@ -864,6 +846,1 @@\n-        String oldValue = tagValues.get(REQUIRES);\n-        if (oldValue == null) {\n-            tagValues.put(REQUIRES, value);\n-        } else {\n-            tagValues.put(REQUIRES, \"(\" + oldValue + \") & (\" + value + \")\");\n-        }\n+        tagValues.merge(REQUIRES, value, (a, b) -> \"(\" + a + \") & (\" + b + \")\");\n@@ -879,1 +856,0 @@\n-     * @return    A string which contains the new value for the \"key\" tag.\n@@ -910,1 +886,0 @@\n-     * @return    A string which contains the new value for the \"key\" tag.\n@@ -919,1 +894,1 @@\n-        processModules(tagValues, Arrays.asList(value.trim().split(\"\\\\s+\")));\n+        processModules(tagValues, List.of(value.trim().split(\"\\\\s+\")));\n@@ -941,1 +916,1 @@\n-     * Create the library-directory list.  Pathnames are prepended left to\n+     * Create the library-directory list.  Path names are prepended left to\n@@ -946,1 +921,0 @@\n-     * @return    A string which contains the new value for the \"library\" tag.\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionTestFinder.java","additions":29,"deletions":55,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.util.Arrays;\n@@ -71,2 +70,2 @@\n-                ? Collections.<String>emptyList()\n-                : Arrays.asList(gf.split(\"\\\\s+\"));\n+                ? Collections.emptyList()\n+                : List.of(gf.split(\"\\\\s+\"));\n@@ -322,1 +321,1 @@\n-                    \/\/set.addAll(Arrays.asList(values));\n+                    \/\/set.addAll(List.of(values));\n@@ -380,1 +379,1 @@\n-                    set.addAll(Arrays.asList(values));\n+                    set.addAll(List.of(values));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/TestProperties.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import java.util.Arrays;\n@@ -431,1 +430,1 @@\n-        showCmd(action, Arrays.asList(cmdArgs), section);\n+        showCmd(action, List.of(cmdArgs), section);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Action.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import java.util.Arrays;\n@@ -128,1 +127,1 @@\n-                        name = optValue.substring(1, optValue.length());\n+                        name = optValue.substring(1);\n@@ -192,1 +191,1 @@\n-        List<String> buildArgs = Arrays.asList(clsName);\n+        List<String> buildArgs = List.of(clsName);\n@@ -261,1 +260,1 @@\n-            if (opt.startsWith(\"-mx\") || opt.startsWith(\"-Xmx\"))\n+            if (opt.startsWith(\"-mx\") || opt.startsWith(\"-Xmx\")) {\n@@ -263,0 +262,2 @@\n+                break;\n+            }\n@@ -288,3 +289,3 @@\n-        PrintWriter sysOut = section.createOutput(\"System.out\");\n-        PrintWriter sysErr = section.createOutput(\"System.err\");\n-        try {\n+        try (PrintWriter sysOut = section.createOutput(\"System.out\");\n+             PrintWriter sysErr = section.createOutput(\"System.err\")) {\n+\n@@ -305,1 +306,1 @@\n-                                 passed(EXEC_PASS));\n+                    passed(EXEC_PASS));\n@@ -307,1 +308,1 @@\n-                                 failed(EXEC_FAIL));\n+                    failed(EXEC_FAIL));\n@@ -311,1 +312,1 @@\n-                script.getTimeoutHandlerProvider().createHandler(this.getClass(), script, section);\n+                    script.getTimeoutHandlerProvider().createHandler(this.getClass(), script, section);\n@@ -314,4 +315,4 @@\n-                .setEnvironment(env)\n-                .setStreams(sysOut, sysErr)\n-                .setTimeout(timeout, TimeUnit.SECONDS)\n-                .setTimeoutHandler(timeoutHandler);\n+                    .setEnvironment(env)\n+                    .setStreams(sysOut, sysErr)\n+                    .setTimeout(timeout, TimeUnit.SECONDS)\n+                    .setTimeoutHandler(timeoutHandler);\n@@ -321,1 +322,1 @@\n-            synchronized(appletLock) {\n+            synchronized (appletLock) {\n@@ -324,3 +325,0 @@\n-        } finally {\n-            if (sysOut != null) sysOut.close();\n-            if (sysErr != null) sysErr.close();\n@@ -566,2 +564,1 @@\n-                int[] result = {nameStart, nameEnd, valStart, valEnd};\n-                return result;\n+                return new int[] { nameStart, nameEnd, valStart, valEnd };\n@@ -601,1 +598,1 @@\n-            int[] result = { tagStart, tagStart + tagName.length() + 1,\n+            return new int[] { tagStart, tagStart + tagName.length() + 1,\n@@ -603,1 +600,0 @@\n-            return result;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/AppletAction.java","additions":18,"deletions":22,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import java.util.Arrays;\n@@ -552,1 +551,1 @@\n-                        return (v == null) ? false : v.compareTo(JDK_Version.V9) >= 0;\n+                        return v != null && v.compareTo(JDK_Version.V9) >= 0;\n@@ -560,1 +559,1 @@\n-                        return (v == null) ? false : v.compareTo(JDK_Version.V9) >= 0;\n+                        return v != null && v.compareTo(JDK_Version.V9) >= 0;\n@@ -608,1 +607,1 @@\n-            javacArgs = Arrays.asList(\"@\" + argFile);\n+            javacArgs = List.of(\"@\" + argFile);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/CompileAction.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.util.Arrays;\n@@ -161,1 +160,1 @@\n-                        name = optValue.substring(1, optValue.length());\n+                        name = optValue.substring(1);\n@@ -184,1 +183,1 @@\n-            this.driverArgs = Arrays.asList(driverArgs);\n+            this.driverArgs = List.of(driverArgs);\n@@ -287,1 +286,1 @@\n-            List<String> buildArgs = Arrays.asList(join(testModuleName, testClassName));\n+            List<String> buildArgs = List.of(join(testModuleName, testClassName));\n@@ -303,1 +302,1 @@\n-                ? Collections.<String>emptySet()\n+                ? Collections.emptySet()\n@@ -377,1 +376,1 @@\n-        List<String> buildArgs = Arrays.asList(join(testModuleName, testClassName));\n+        List<String> buildArgs = List.of(join(testModuleName, testClassName));\n@@ -504,3 +503,3 @@\n-        PrintWriter sysOut = section.createOutput(\"System.out\");\n-        PrintWriter sysErr = section.createOutput(\"System.err\");\n-        try {\n+        try (PrintWriter sysOut = section.createOutput(\"System.out\");\n+             PrintWriter sysErr = section.createOutput(\"System.err\")) {\n+\n@@ -527,1 +526,1 @@\n-                script.getTimeoutHandlerProvider().createHandler(this.getClass(), script, section);\n+                    script.getTimeoutHandlerProvider().createHandler(this.getClass(), script, section);\n@@ -530,4 +529,4 @@\n-                .setEnvironment(env)\n-                .setStreams(sysOut, sysErr)\n-                .setTimeout(timeout, TimeUnit.SECONDS)\n-                .setTimeoutHandler(timeoutHandler);\n+                    .setEnvironment(env)\n+                    .setStreams(sysOut, sysErr)\n+                    .setTimeout(timeout, TimeUnit.SECONDS)\n+                    .setTimeoutHandler(timeoutHandler);\n@@ -537,3 +536,0 @@\n-        } finally {\n-            sysOut.close();\n-            sysErr.close();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/MainAction.java","additions":13,"deletions":17,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.File;\n@@ -32,1 +31,0 @@\n-import java.util.Arrays;\n@@ -219,1 +217,1 @@\n-                label = null;\n+                label = \"\";\n@@ -227,1 +225,1 @@\n-                label = null;\n+                label = \"\";\n@@ -235,1 +233,1 @@\n-                label = null;\n+                label = \"\";\n@@ -243,1 +241,1 @@\n-                label = null;\n+                label = \"\";\n@@ -251,1 +249,1 @@\n-                label = null;\n+                label = \"\";\n@@ -259,1 +257,1 @@\n-                label = null;\n+                label = \"\";\n@@ -267,1 +265,1 @@\n-                label = null;\n+                label = \"\";\n@@ -277,2 +275,2 @@\n-                    label = null;\n-                    module = null;\n+                    label = \"\";\n+                    module = \"\";\n@@ -295,1 +293,1 @@\n-            rows.add(Arrays.asList(items));\n+            rows.add(List.of(items));\n@@ -312,1 +310,1 @@\n-                    if (item != null && col < row.size() - 1) {\n+                    if (col < row.size() - 1) {\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/ModuleConfig.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -40,1 +41,0 @@\n-import java.util.Arrays;\n@@ -125,3 +125,1 @@\n-        } catch (IOException e) {\n-            log.println(\"Error while writing report: \" + e);\n-        } catch (SecurityException e) {\n+        } catch (IOException | SecurityException e) {\n@@ -273,1 +271,1 @@\n-        return URLEncoder.encode(s, \"UTF-8\");\n+        return URLEncoder.encode(s, StandardCharsets.UTF_8);\n@@ -349,1 +347,1 @@\n-                    URLEncoder.encode(String.valueOf(ch), \"UTF-8\");\n+                    URLEncoder.encode(String.valueOf(ch), StandardCharsets.UTF_8);\n@@ -508,1 +506,1 @@\n-            Arrays.asList(System.getProperty(\"javatest.report.kinds\", \"html text\").split(\"[ ,]+\"));\n+            List.of(System.getProperty(\"javatest.report.kinds\", \"html text\").split(\"[ ,]+\"));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/report\/RegressionReporter.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.Arrays;\n@@ -30,0 +29,1 @@\n+import java.util.List;\n@@ -36,1 +36,1 @@\n-    public static enum Mode { NONE, DEFAULT, SUMMARY, BRIEF, FULL };\n+    public enum Mode { NONE, DEFAULT, SUMMARY, BRIEF, FULL }\n@@ -62,1 +62,1 @@\n-        Set<String> opts = new HashSet<>(Arrays.asList(s.split(\",\")));\n+        Set<String> opts = new HashSet<>(List.of(s.split(\",\")));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/report\/Verbose.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-        isoDateFmt = new SimpleDateFormat(\"yyyy-MM-DD'T'HH:mm:ssZ\");\n+        isoDateFmt = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\n@@ -110,1 +110,1 @@\n-        String f[] = elapsedTime.split(\"\\\\s\");\n+        String[] f = elapsedTime.split(\"\\\\s\");\n@@ -151,1 +151,0 @@\n-        @SuppressWarnings(\"unchecked\")\n@@ -164,1 +163,0 @@\n-        @SuppressWarnings(\"unchecked\")\n@@ -240,1 +238,1 @@\n-    private void process(String encoding) throws ParseException, TestResult.Fault {\n+    private void process(String encoding) throws TestResult.Fault {\n@@ -282,1 +280,0 @@\n-        BufferedReader br = null;\n@@ -284,3 +281,2 @@\n-        String in = arg.replaceFirst(\"^\\\\-@|^@\", \"\");\n-        try {\n-            br = new BufferedReader(new FileReader(in));\n+        String in = arg.replaceFirst(\"^-@|^@\", \"\");\n+        try (BufferedReader br = new BufferedReader(new FileReader(in))) {\n@@ -292,4 +288,0 @@\n-        } finally {\n-            if (br != null) {\n-                br.close();\n-            }\n@@ -367,6 +359,0 @@\n-        private XMLHarnessObserver() {\n-            harnessOut = null;\n-            harnessErr = null;\n-            mustVerify = false;\n-        }\n-\n@@ -385,5 +371,3 @@\n-            } catch (IOException ex) {\n-                ex.printStackTrace(harnessOut);\n-            } catch (ParseException ex) {\n-                ex.printStackTrace(harnessOut);\n-            } catch (TestResult.Fault ex) {\n+            } catch (IOException\n+                     | ParseException\n+                     | TestResult.Fault ex) {\n@@ -471,1 +455,1 @@\n-                        ps.print(String.format(\"\\\\u%04x\", (int) ch));\n+                        ps.printf(\"\\\\u%04x\", (int) ch);\n@@ -502,7 +486,1 @@\n-        } catch (IOException ex) {\n-            err.println(\"File: \" + xmlFile + \":\" + ex);\n-            err.println(toString());\n-        } catch (ParserConfigurationException ex) {\n-            err.println(\"File: \" + xmlFile + \":\" + ex);\n-            err.println(toString());\n-        } catch (SAXException ex) {\n+        } catch (IOException | ParserConfigurationException | SAXException ex) {\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/report\/XMLWriter.java","additions":11,"deletions":33,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import java.util.Arrays;\n@@ -89,20 +88,0 @@\n-    void addJarVersionHelper(final String name, final File jar, final String pomProperties) {\n-        addVersionHelper(new Help.VersionHelper() {\n-            @Override\n-            public void showVersion(PrintWriter out) {\n-                try (JarFile j = new JarFile(jar)) {\n-                    String v = (String) j.getManifest().getMainAttributes().get(Attributes.Name.IMPLEMENTATION_VERSION);\n-                    if (v == null && pomProperties != null) {\n-                        Properties p = new Properties();\n-                        try (InputStream in = j.getInputStream(j.getEntry(pomProperties))) {\n-                            p.load(in);\n-                            v = p.getProperty(\"version\");\n-                        }\n-                    }\n-                    out.println(name + \": version \" + (v == null ? \"unknown\" : v)); \/\/ need i18n\n-                } catch (IOException e) {\n-                }\n-            }\n-        });\n-    }\n-\n@@ -110,23 +89,17 @@\n-        addVersionHelper(new Help.VersionHelper() {\n-            @Override\n-            public void showVersion(PrintWriter out) {\n-                \/\/ print list of jar files in path\n-                out.println(name + \": \" + path.asList().stream()\n-                        .map(Path::getFileName)\n-                        .map(Object::toString)\n-                        .collect(Collectors.joining(\", \")));\n-                try {\n-                    \/\/ look inside jar metadata for details for those jar files that do\n-                    \/\/ not seem to have a version in their filename\n-                    for (Path jar: path.asList()) {\n-                        String fn = jar.getFileName().toString();\n-                        if (!fn.matches(\"(?i)[a-z0-9-_]+-[0-9](\\\\.[0-9]+)+\\\\.jar\")) {\n-                            try (JarFile j = new JarFile(jar.toFile())) {\n-                                Attributes attrs = j.getManifest().getMainAttributes();\n-                                String v = attrs.getValue(Attributes.Name.IMPLEMENTATION_VERSION);\n-                                if (v == null) {\n-                                    v = attrs.getValue(\"Bundle-Version\");\n-                                }\n-                                String suffix = (path.asList().size() == 1)\n-                                        ? \"\" : \" (\" + jar.getFileName() + \")\";\n-                                out.println(name + suffix + \": version \" + (v == null ? \"unknown\" : v)); \/\/ need i18n\n+        addVersionHelper(out -> {\n+            \/\/ print list of jar files in path\n+            out.println(name + \": \" + path.asList().stream()\n+                    .map(Path::getFileName)\n+                    .map(Object::toString)\n+                    .collect(Collectors.joining(\", \")));\n+            try {\n+                \/\/ look inside jar metadata for details for those jar files that do\n+                \/\/ not seem to have a version in their filename\n+                for (Path jar: path.asList()) {\n+                    String fn = jar.getFileName().toString();\n+                    if (!fn.matches(\"(?i)[a-z0-9-_]+-[0-9](\\\\.[0-9]+)+\\\\.jar\")) {\n+                        try (JarFile j = new JarFile(jar.toFile())) {\n+                            Attributes attrs = j.getManifest().getMainAttributes();\n+                            String v = attrs.getValue(Attributes.Name.IMPLEMENTATION_VERSION);\n+                            if (v == null) {\n+                                v = attrs.getValue(\"Bundle-Version\");\n@@ -134,0 +107,3 @@\n+                            String suffix = (path.asList().size() == 1)\n+                                    ? \"\" : \" (\" + jar.getFileName() + \")\";\n+                            out.println(name + suffix + \": version \" + (v == null ? \"unknown\" : v)); \/\/ need i18n\n@@ -136,1 +112,0 @@\n-                } catch (IOException e) {\n@@ -138,0 +113,1 @@\n+            } catch (IOException e) {\n@@ -158,1 +134,1 @@\n-            commandLineHelpQuery.addAll(Arrays.asList(query.trim().split(\"\\\\s+\")));\n+            commandLineHelpQuery.addAll(List.of(query.trim().split(\"\\\\s+\")));\n@@ -383,1 +359,1 @@\n-                    nodesForGroup.toArray(new HelpTree.Node[nodesForGroup.size()]));\n+                    nodesForGroup.toArray(new HelpTree.Node[0]));\n@@ -392,1 +368,1 @@\n-                        new String[] { \"directory\", \"file\", \"group\", \"at-file\" }));\n+                        \"directory\", \"file\", \"group\", \"at-file\"));\n@@ -415,1 +391,1 @@\n-                String[] query = commandLineHelpQuery.toArray(new String[commandLineHelpQuery.size()]);\n+                String[] query = commandLineHelpQuery.toArray(new String[0]);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Help.java","additions":25,"deletions":49,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,1 +117,1 @@\n-        return (\"Option[\" + argType + \",\" + group +\",\" + lockName + \",\" + Arrays.asList(names) + \"]\");\n+        return \"Option[\" + argType + \",\" + group +\",\" + lockName + \",\" + Arrays.toString(names) + \"]\";\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Option.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.util.Arrays;\n@@ -73,1 +72,1 @@\n-        decodeArgs(Arrays.asList(args));\n+        decodeArgs(List.of(args));\n@@ -237,2 +236,2 @@\n-    private Map<String, Option> simpleOptions = new HashMap<>();\n-    private List<Option> matchOptions = new ArrayList<>();\n+    private final Map<String, Option> simpleOptions = new HashMap<>();\n+    private final List<Option> matchOptions = new ArrayList<>();\n@@ -241,1 +240,1 @@\n-    private Map<String, String> locks = new HashMap<>();\n+    private final Map<String, String> locks = new HashMap<>();\n@@ -245,1 +244,1 @@\n-    private static I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(Tool.class);\n+    private static final I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(Tool.class);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/OptionDecoder.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -29,2 +30,0 @@\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n@@ -33,1 +32,0 @@\n-import java.util.Arrays;\n@@ -70,6 +68,1 @@\n-            mi.addActionListener(new ActionListener() {\n-                @Override\n-                public void actionPerformed(ActionEvent e) {\n-                    showAbout((JComponent) e.getSource());\n-                }\n-            });\n+            mi.addActionListener(e -> showAbout((JComponent) e.getSource()));\n@@ -86,1 +79,1 @@\n-            content.addAll(Arrays.asList(copyright.split(\"\\n\")));\n+            content.addAll(List.of(copyright.split(\"\\n\")));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/RegressionContextManager.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n@@ -54,1 +52,0 @@\n-import java.util.Arrays;\n@@ -84,1 +81,0 @@\n-import com.sun.javatest.TestFinder;\n@@ -232,1 +228,1 @@\n-            ((JavaTestSecurityManager) sc).setAllowExit(true);\n+            JavaTestSecurityManager.setAllowExit(true);\n@@ -246,1 +242,1 @@\n-    public List<Option> options = Arrays.asList(new Option(OPT, VERBOSE, \"verbose\", \"-v\", \"-verbose\") {\n+    public List<Option> options = List.of(new Option(OPT, VERBOSE, \"verbose\", \"-v\", \"-verbose\") {\n@@ -342,1 +338,1 @@\n-                    retainArgs = Arrays.asList(arg.split(\",\"));\n+                    retainArgs = List.of(arg.split(\",\"));\n@@ -392,1 +388,1 @@\n-            public void process(String opt, String arg) throws BadArgs {\n+            public void process(String opt, String arg) {\n@@ -481,1 +477,1 @@\n-                boolean b = (arg == null || Arrays.asList(\"yes\", \"on\", \"true\").contains(arg));\n+                boolean b = (arg == null || List.of(\"yes\", \"on\", \"true\").contains(arg));\n@@ -551,1 +547,1 @@\n-            public void process(String opt, String arg) throws BadArgs {\n+            public void process(String opt, String arg) {\n@@ -640,1 +636,1 @@\n-                envVarArgs.addAll(Arrays.asList(arg.split(\",\")));\n+                envVarArgs.addAll(List.of(arg.split(\",\")));\n@@ -910,1 +906,1 @@\n-                testVMOpts.addAll(Arrays.asList(arg.split(\"\\\\s+\")));\n+                testVMOpts.addAll(List.of(arg.split(\"\\\\s+\")));\n@@ -951,1 +947,1 @@\n-                testCompilerOpts.addAll(Arrays.asList(arg.split(\"\\\\s+\")));\n+                testCompilerOpts.addAll(List.of(arg.split(\"\\\\s+\")));\n@@ -971,1 +967,1 @@\n-                testJavaOpts.addAll(Arrays.asList(arg.split(\"\\\\s+\")));\n+                testJavaOpts.addAll(List.of(arg.split(\"\\\\s+\")));\n@@ -981,1 +977,1 @@\n-                testDebugOpts.addAll(Arrays.asList(arg.split(\"\\\\s+\")));\n+                testDebugOpts.addAll(List.of(arg.split(\"\\\\s+\")));\n@@ -1026,1 +1022,0 @@\n-        jarManager = new JarManager(jtreg_jar.getParent());\n@@ -1098,6 +1093,1 @@\n-        final TestManager testManager = new TestManager(out, baseDir, new TestFinder.ErrorHandler() {\n-            @Override\n-            public void error(String msg) {\n-                Tool.this.error(msg);\n-            }\n-        });\n+        final TestManager testManager = new TestManager(out, baseDir, Tool.this::error);\n@@ -1151,1 +1141,1 @@\n-                    && f.getName().toLowerCase().equals(\"jre\")\n+                    && f.getName().equalsIgnoreCase(\"jre\")\n@@ -1172,3 +1162,1 @@\n-                useWindowsSubsystemForLinux = isCygwinDetected()\n-                        ? false\n-                        : isWindowsSubsystemForLinuxDetected();\n+                useWindowsSubsystemForLinux = !isCygwinDetected() && isWindowsSubsystemForLinuxDetected();\n@@ -1180,1 +1168,1 @@\n-        if (jitFlag == false) {\n+        if (!jitFlag) {\n@@ -1210,10 +1198,6 @@\n-        RegressionTestSuite.setParametersFactory(new RegressionTestSuite.ParametersFactory() {\n-            @Override\n-            public RegressionParameters create(RegressionTestSuite ts) throws TestSuite.Fault {\n-                try {\n-                    return createParameters(testManager, ts);\n-                } catch (BadArgs ex) {\n-                    throw new TestSuite.Fault(i18n, \"main.cantCreateParameters\", ex.getMessage());\n-                } catch (Fault ex) {\n-                    throw new TestSuite.Fault(i18n, \"main.cantCreateParameters\", ex.getMessage());\n-                }\n+        RegressionTestSuite.setParametersFactory(ts -> {\n+            try {\n+                return createParameters(testManager, ts);\n+            } catch (BadArgs\n+                     | Fault ex) {\n+                throw new TestSuite.Fault(i18n, \"main.cantCreateParameters\", ex.getMessage());\n@@ -1498,10 +1482,0 @@\n-    private static List<Path> readFileList(Path file) throws Fault {\n-        try {\n-            List<String> lines = Files.readAllLines(file);\n-            return lines.stream().map(Path::of).collect(Collectors.toList());\n-        } catch (IOException e) {\n-            throw new Fault(i18n, \"main.cantRead\", file, e);\n-\n-        }\n-    }\n-\n@@ -1563,1 +1537,1 @@\n-            for (Path f: Arrays.asList(jtreg_jar, javatest_jar)) {\n+            for (Path f: List.of(jtreg_jar, javatest_jar)) {\n@@ -1589,12 +1563,0 @@\n-    private void makeDir(File dir, boolean quiet) throws Fault {\n-        \/\/ FIXME: I18N\n-        if (dir.isDirectory())\n-            return;\n-        if (!quiet)\n-            out.println(\"Directory \\\"\" + dir + \"\\\" not found: creating\");\n-        dir.mkdirs();\n-        if (!dir.isDirectory()) {\n-            throw new Fault(i18n, \"main.cantCreateDir\", dir);\n-        }\n-    }\n-\n@@ -2041,1 +2003,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -2051,1 +2012,1 @@\n-            return Collections.<TestResult>emptySet().iterator();\n+            return Collections.emptyIterator();\n@@ -2061,7 +2022,3 @@\n-                Timer t = new Timer(1000, new ActionListener() {\n-                    @Override\n-                    public void actionPerformed(ActionEvent e) {\n-                        showGUI();\n-                        startup.dispose();\n-                    }\n-\n+                Timer t = new Timer(1000, e -> {\n+                    showGUI();\n+                    startup.dispose();\n@@ -2171,1 +2128,1 @@\n-        addEnvVars(table, Arrays.asList(list));\n+        addEnvVars(table, List.of(list));\n@@ -2259,2 +2216,2 @@\n-    private PrintWriter out;\n-    private PrintWriter err;\n+    private final PrintWriter out;\n+    private final PrintWriter err;\n@@ -2317,3 +2274,2 @@\n-    private final JarManager jarManager;\n-    private Path javatest_jar;\n-    private Path jtreg_jar;\n+    private final Path javatest_jar;\n+    private final Path jtreg_jar;\n@@ -2339,1 +2295,1 @@\n-    private static I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(Tool.class);\n+    private static final I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(Tool.class);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":32,"deletions":76,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.Arrays;\n@@ -30,0 +29,1 @@\n+import java.util.List;\n@@ -39,1 +39,1 @@\n-        set.addAll(Arrays.asList(args));\n+        set.addAll(List.of(args));\n@@ -70,1 +70,1 @@\n-                int cmp = ((Character) c1).compareTo(c2);\n+                int cmp = Character.compare(c1, c2);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/util\/NaturalComparator.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.Arrays;\n@@ -72,1 +71,1 @@\n-        return Arrays.asList(s.split(\"\\\\Q\" + sep + \"\\\\E\"));\n+        return List.of(s.split(\"\\\\Q\" + sep + \"\\\\E\"));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/util\/StringUtils.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}