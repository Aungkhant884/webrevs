{"files":[{"patch":"@@ -78,1 +78,1 @@\n-     * it contains (including i in subdirecories.\n+     * it contains (including in subdirectories).\n@@ -87,1 +87,1 @@\n-     * it contains (including i in subdirecories.\n+     * it contains (including in subdirectories).\n@@ -125,0 +125,2 @@\n+    private static final boolean trace = Boolean.getBoolean(\"trace.extraPropDefns\");\n+\n@@ -224,0 +226,3 @@\n+            if (trace) {\n+                System.err.println(\"Compiling extra property definition files: \" + javacArgs);\n+            }\n@@ -304,0 +309,2 @@\n+    private static final Pattern commentPattern =\n+            Pattern.compile(\"(?s)(\\\\s+\/\/.*?\\n|\/\\\\*.*?\\\\*\/)\");\n@@ -305,1 +312,1 @@\n-            Pattern.compile(\"package\\\\s+(((?:\\\\w+\\\\.)*)(?:\\\\w+))\\\\s*;\");\n+            Pattern.compile(\"package\\\\s+(((?:\\\\w+\\\\.)*)\\\\w+)\\\\s*;\");\n@@ -310,0 +317,11 @@\n+        \/\/ strip comments\n+        StringBuilder sb = new StringBuilder();\n+        Matcher matcher = commentPattern.matcher(source);\n+        int start = 0;\n+        while (matcher.find()) {\n+            sb.append(source, start, matcher.start());\n+            start = matcher.end();\n+        }\n+        sb.append(source.substring(start));\n+        source = sb.toString();\n+\n@@ -312,1 +330,1 @@\n-        Matcher matcher = packagePattern.matcher(source);\n+        matcher = packagePattern.matcher(source);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/ExtraPropDefns.java","additions":22,"deletions":4,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -115,0 +115,34 @@\n+\n+#-------------------------------------------------------------------------------\n+#\n+# verify no false positives found in comments\n+# verify extra prop definition files are not recompiled unnecessarily\n+\n+$(BUILDTESTDIR)\/ExtraPropDefnsTest.comments.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-J-Dtrace.extraPropDefns=true \\\n+\t\t$(TESTDIR)\/extra-props\/comments \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1\n+\t$(GREP) -s \"Compiling extra property definition files\" $(@:%.ok=%\/jt.log)\n+\t$(GREP) -s 'Test results: passed: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-J-Dtrace.extraPropDefns=true \\\n+\t\t$(TESTDIR)\/extra-props\/comments \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1\n+\tif $(GREP) -s \"Compiling extra property definition files\" $(@:%.ok=%\/jt.log) ; then \\\n+\t    echo \"error: files compiled unexpectedly\" ; exit 1 ; \\\n+\telse \\\n+\t    echo \"no files recompiled, as expected\" ; \\\n+\tfi\n+\t$(GREP) -s 'Test results: passed: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDTESTDIR)\/ExtraPropDefnsTest.comments.ok\n","filename":"test\/extra-props\/ExtraPropDefnsTest.gmk","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"","filename":"test\/extra-props\/comments\/TEST.ROOT","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/extra-props\/bad-compile\/TEST.ROOT","status":"copied"},{"patch":"","filename":"test\/extra-props\/comments\/Test1.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/extra-props\/bad-compile\/Test1.java","status":"copied"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.util.concurrent.Callable;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+\/\/ The declaration in this line should be ignored: public class InLineComment\n+\/*\n+ * The declaration in this line should be ignored: public class InBlockComment\n+ *\/\n+public class ExtraProps implements Callable<Map<String, String>> {\n+    public Map<String,String> call() {\n+        File cwd = new File(\".\").getAbsoluteFile().getParentFile();\n+        if (!cwd.getName().equals(\"scratch\"))\n+            throw new Error(\"unexpected working directory name\");\n+\n+        Map<String,String> map = new HashMap<String,String>();\n+        map.put(\"extra\", \"true\");\n+        return map;\n+    }\n+}\n+\n","filename":"test\/extra-props\/comments\/support\/ExtraProps.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"}]}