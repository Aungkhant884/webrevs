{"files":[{"patch":"@@ -86,2 +86,2 @@\n-    public static final String CUSTOM_MAIN_WRAPPER = \"-mainWrapper\";\n-    public static final String CUSTOM_MAIN_WRAPPER_PATH = \"-mainWrapperPath\";\n+    public static final String CUSTOM_TEST_THREAD_FACTORY = \"-testThreadFactory\";\n+    public static final String CUSTOM_TEST_THREAD_FACTORY_PATH = \"-testThreadFactoryPath\";\n@@ -149,2 +149,2 @@\n-    private String customMainWrapper;\n-    private String customMainWrapperPath;\n+    private String testThreadFactory;\n+    private String testThreadFactoryPath;\n@@ -180,4 +180,4 @@\n-            } else if (arg.equals(CUSTOM_MAIN_WRAPPER) && i + 1 < args.length) {\n-                customMainWrapper = args[++i];\n-            } else if (arg.equals(CUSTOM_MAIN_WRAPPER_PATH) && i + 1 < args.length) {\n-                customMainWrapperPath = args[++i];\n+            } else if (arg.equals(CUSTOM_TEST_THREAD_FACTORY) && i + 1 < args.length) {\n+                testThreadFactory = args[++i];\n+            } else if (arg.equals(CUSTOM_TEST_THREAD_FACTORY_PATH) && i + 1 < args.length) {\n+                testThreadFactoryPath = args[++i];\n@@ -314,2 +314,2 @@\n-                    .customMainWrapper(customMainWrapper)\n-                    .customMainWrapperPath(customMainWrapperPath)\n+                    .testThreadFactory(testThreadFactory)\n+                    .testThreadFactoryPath(testThreadFactoryPath)\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/AgentServer.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1,84 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.javatest.regtest.agent;\n-\n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.InvocationTargetException;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-\/**\n- * {@code CustomMainWrapper} allows some customization of test execution.\n- * The jtreg creates new thread for each test using {@code new Thread(ThreadGroup tg, Runnable task);}.\n- * The implementation of this interface might provide user-defined threads for test execution.\n- * <p>\n- * Example:\n- * <pre>\n- * new Thread(tg, () -> { ....; task.run(); ....; });\n- * or\n- * new VirtualThread(task);\n- * <\/pre>\n- * Implementation may be specified on the {@code jtreg} command line\n- * using {@code -mainWrapper} and {@code -mainWrapperPath} arguments.\n- * It is executed by tested JDK in {@code agentvm} and {@code othervm} modes.\n- *\/\n-public interface CustomMainWrapper {\n-    static CustomMainWrapper getInstance(String className, String path) {\n-        ClassLoader loader = ClassLoader.getSystemClassLoader();\n-        if (path != null) {\n-            SearchPath classpath = new SearchPath(path);\n-            List<URL> urls = new ArrayList<>();\n-            for (Path f : classpath.asList()) {\n-                try {\n-                    urls.add(f.toUri().toURL());\n-                } catch (MalformedURLException e) {\n-                }\n-            }\n-            loader = new URLClassLoader(urls.toArray(new URL[urls.size()]), loader);\n-        }\n-        try {\n-            Class<? extends CustomMainWrapper> clz = loader.loadClass(className).asSubclass(CustomMainWrapper.class);\n-            Constructor<? extends CustomMainWrapper> ctor = clz.getDeclaredConstructor();\n-            CustomMainWrapper wrapper = ctor.newInstance();\n-            return wrapper;\n-        } catch (ClassNotFoundException | InvocationTargetException | NoSuchMethodException\n-                 | InstantiationException | IllegalAccessException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    \/**\n-     * This method should return unstarted thread which executes test task.\n-     * @param tg ThreadGroup to run test\n-     * @param task The test task\n-     *\/\n-    Thread createThread(ThreadGroup tg, Runnable task);\n-\n-}\n\\ No newline at end of file\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/CustomMainWrapper.java","additions":0,"deletions":84,"binary":false,"changes":84,"status":"deleted"},{"patch":"@@ -60,1 +60,1 @@\n-    private String customMainWrapper;\n+    private String testThreadFactory;\n@@ -62,1 +62,1 @@\n-    private String customMainWrapperPath;\n+    private String testThreadFactoryPath;\n@@ -119,2 +119,2 @@\n-    MainActionHelper customMainWrapper(String customMainWrapper) {\n-        this.customMainWrapper = customMainWrapper;\n+    MainActionHelper testThreadFactory(String testThreadFactory) {\n+        this.testThreadFactory = testThreadFactory;\n@@ -124,2 +124,2 @@\n-    MainActionHelper customMainWrapperPath(String customMainWrapperPath) {\n-        this.customMainWrapperPath = customMainWrapperPath;\n+    MainActionHelper testThreadFactoryPath(String testThreadFactoryPath) {\n+        this.testThreadFactoryPath = testThreadFactoryPath;\n@@ -205,1 +205,1 @@\n-            if (customMainWrapper == null) {\n+            if (testThreadFactory == null) {\n@@ -208,1 +208,1 @@\n-                t = CustomMainWrapper.getInstance(customMainWrapper, customMainWrapperPath).createThread(tg, avmr);\n+                t = TestThreadFactory.getInstance(testThreadFactory, testThreadFactoryPath).newThread(tg, avmr);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/MainActionHelper.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-    public static String MAIN_WRAPPER = \"jtreg.custom.main.wrapper\";\n-    public static String MAIN_WRAPPER_PATH = \"jtreg.custom.main.wrapper.path\";\n+    public static String TEST_THREAD_FACTORY = \"jtreg.test.thread.factory\";\n+    public static String TEST_THREAD_FACTORY_PATH = \"jtreg.test.thread.factory.path\";\n@@ -75,3 +75,3 @@\n-        String customWrapper = System.getProperty(MAIN_WRAPPER);\n-        String customWrapperPath = System.getProperty(MAIN_WRAPPER_PATH);\n-        if (customWrapper == null) {\n+        String testThreadFactory = System.getProperty(TEST_THREAD_FACTORY);\n+        String testThreadFactoryPath = System.getProperty(TEST_THREAD_FACTORY_PATH);\n+        if (testThreadFactory == null) {\n@@ -80,1 +80,1 @@\n-            t = CustomMainWrapper.getInstance(customWrapper, customWrapperPath).createThread(tg, task);\n+            t = TestThreadFactory.getInstance(testThreadFactory, testThreadFactoryPath).newThread(tg, task);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/MainWrapper.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -632,2 +632,2 @@\n-    private static final String CUSTOM_MAIN_WRAPPER = \".customMainWrapper\";\n-    private static final String CUSTOM_MAIN_WRAPPER_PATH = \".customMainWrapperPath\";\n+    private static final String CUSTOM_TEST_THREAD_FACTORY = \".testThreadFactory\";\n+    private static final String CUSTOM_TEST_THREAD_FACTORY_PATH = \".testThreadFactoryPath\";\n@@ -724,1 +724,1 @@\n-            v = data.get(prefix + CUSTOM_MAIN_WRAPPER);\n+            v = data.get(prefix + CUSTOM_TEST_THREAD_FACTORY);\n@@ -726,1 +726,1 @@\n-                setCustomMainWrapper(v);\n+                setTestThreadFactory(v);\n@@ -728,1 +728,1 @@\n-            v = data.get(prefix + CUSTOM_MAIN_WRAPPER_PATH);\n+            v = data.get(prefix + CUSTOM_TEST_THREAD_FACTORY_PATH);\n@@ -730,1 +730,1 @@\n-                setCustomMainWrapperPath(v);\n+                setTestThreadFactoryPath(v);\n@@ -813,2 +813,2 @@\n-        if (customMainWrapper != null) {\n-            data.put(prefix + CUSTOM_MAIN_WRAPPER, customMainWrapper);\n+        if (testThreadFactory != null) {\n+            data.put(prefix + CUSTOM_TEST_THREAD_FACTORY, testThreadFactory);\n@@ -817,2 +817,2 @@\n-        if (customMainWrapperPath != null) {\n-            data.put(prefix + CUSTOM_MAIN_WRAPPER_PATH, customMainWrapperPath);\n+        if (testThreadFactoryPath != null) {\n+            data.put(prefix + CUSTOM_TEST_THREAD_FACTORY_PATH, testThreadFactoryPath);\n@@ -1268,2 +1268,2 @@\n-    public void setCustomMainWrapper(String customMainWrapper) {\n-        this.customMainWrapper = customMainWrapper;\n+    public void setTestThreadFactory(String testThreadFactory) {\n+        this.testThreadFactory = testThreadFactory;\n@@ -1272,2 +1272,2 @@\n-    public String getCustomMainWrapper() {\n-        return customMainWrapper;\n+    public String getTestThreadFactory() {\n+        return testThreadFactory;\n@@ -1276,1 +1276,1 @@\n-    private String customMainWrapper;\n+    private String testThreadFactory;\n@@ -1278,2 +1278,2 @@\n-    public void setCustomMainWrapperPath(String customMainWrapperPath) {\n-        this.customMainWrapperPath = customMainWrapperPath;\n+    public void setTestThreadFactoryPath(String testThreadFactoryPath) {\n+        this.testThreadFactoryPath = testThreadFactoryPath;\n@@ -1282,2 +1282,2 @@\n-    public String getCustomMainWrapperPath() {\n-        return customMainWrapperPath;\n+    public String getTestThreadFactoryPath() {\n+        return testThreadFactoryPath;\n@@ -1286,1 +1286,1 @@\n-    private String customMainWrapperPath;\n+    private String testThreadFactoryPath;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionParameters.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-            String customMainWrapper, String customMainWrapperPath) throws Fault {\n+            String testThreadFactory, String testThreadFactoryPath) throws Fault {\n@@ -138,3 +138,3 @@\n-            if (customMainWrapper != null) {\n-                cmd.add(AgentServer.CUSTOM_MAIN_WRAPPER);\n-                cmd.add(customMainWrapper);\n+            if (testThreadFactory != null) {\n+                cmd.add(AgentServer.CUSTOM_TEST_THREAD_FACTORY);\n+                cmd.add(testThreadFactory);\n@@ -143,3 +143,3 @@\n-            if (customMainWrapperPath != null) {\n-                cmd.add(CUSTOM_MAIN_WRAPPER_PATH);\n-                cmd.add(customMainWrapperPath);\n+            if (testThreadFactoryPath != null) {\n+                cmd.add(CUSTOM_TEST_THREAD_FACTORY_PATH);\n+                cmd.add(testThreadFactoryPath);\n@@ -752,2 +752,2 @@\n-                                    String customMainWrapper,\n-                                    String customMainWrapperPath)\n+                                    String testThreadFactory,\n+                                    String testThreadFactoryPath)\n@@ -772,1 +772,1 @@\n-                        customMainWrapper, customMainWrapperPath);\n+                        testThreadFactory, testThreadFactoryPath);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Agent.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -484,2 +484,2 @@\n-        if (script.getCustomWrapper() != null) {\n-            javaProps.put(MainWrapper.MAIN_WRAPPER, script.getCustomWrapper());\n+        if (script.getTestThreadFactory() != null) {\n+            javaProps.put(MainWrapper.TEST_THREAD_FACTORY, script.getTestThreadFactory());\n@@ -487,2 +487,2 @@\n-        if (script.getCustomWrapperPath() != null) {\n-            javaProps.put(MainWrapper.MAIN_WRAPPER_PATH, script.getCustomWrapperPath());\n+        if (script.getTestThreadFactoryPath() != null) {\n+            javaProps.put(MainWrapper.TEST_THREAD_FACTORY_PATH, script.getTestThreadFactoryPath());\n@@ -630,1 +630,1 @@\n-            String wrapper = script.getCustomWrapper() == null ? null : script.getCustomWrapper();\n+            String factory = script.getTestThreadFactory() == null ? null : script.getTestThreadFactory();\n@@ -633,2 +633,2 @@\n-                    wrapper,\n-                    script.getCustomWrapperPath());\n+                    factory,\n+                    script.getTestThreadFactoryPath());\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/MainAction.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1140,2 +1140,2 @@\n-    String getCustomWrapper() {\n-        return params.getCustomMainWrapper();\n+    String getTestThreadFactory() {\n+        return params.getTestThreadFactory();\n@@ -1144,2 +1144,2 @@\n-    String getCustomWrapperPath() {\n-        return params.getCustomMainWrapperPath();\n+    String getTestThreadFactoryPath() {\n+        return params.getTestThreadFactoryPath();\n@@ -1245,1 +1245,1 @@\n-                   String customMainWrapper, String customMainWrapperPath) throws Agent.Fault {\n+                   String testThreadFactory, String testThreadFactoryPath) throws Agent.Fault {\n@@ -1250,1 +1250,1 @@\n-        if (customMainWrapper != null) {\n+        if (testThreadFactory != null) {\n@@ -1252,1 +1252,1 @@\n-            vmOpts.add(\"-D\" + MainWrapper.MAIN_WRAPPER + \"=\" + customMainWrapper);\n+            vmOpts.add(\"-D\" + MainWrapper.TEST_THREAD_FACTORY + \"=\" + testThreadFactory);\n@@ -1281,1 +1281,1 @@\n-                customMainWrapper, customMainWrapperPath);\n+                testThreadFactory, testThreadFactoryPath);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -536,1 +536,1 @@\n-       new Option(OLD, MAIN, \"\", \"-mw\", \"-mainWrapper\") {\n+       new Option(OLD, MAIN, \"\", \"-ttf\", \"-testThreadFactory\") {\n@@ -539,1 +539,1 @@\n-                customMainWrapper = arg;\n+                testThreadFactory = arg;\n@@ -543,1 +543,1 @@\n-        new Option(STD, MAIN, \"\", \"-mwp\", \"-mainWrapperPath\") {\n+        new Option(STD, MAIN, \"\", \"-ttfp\", \"-testThreadFactoryPath\") {\n@@ -546,1 +546,1 @@\n-                customMainWrapperPathArg = arg;\n+                testThreadFactoryPathArg = arg;\n@@ -1696,2 +1696,2 @@\n-            if (customMainWrapper != null) {\n-                rp.setCustomMainWrapper(customMainWrapper);\n+            if (testThreadFactory != null) {\n+                rp.setTestThreadFactory(testThreadFactory);\n@@ -1700,2 +1700,2 @@\n-            if (customMainWrapperPathArg != null) {\n-                rp.setCustomMainWrapperPath(customMainWrapperPathArg);\n+            if (testThreadFactoryPathArg != null) {\n+                rp.setTestThreadFactoryPath(testThreadFactoryPathArg);\n@@ -2303,2 +2303,2 @@\n-    private String customMainWrapper;\n-    private String customMainWrapperPathArg;\n+    private String testThreadFactory;\n+    private String testThreadFactoryPathArg;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -174,2 +174,2 @@\n-help.main.mw.arg=<classname>\n-help.main.mw.desc=Specifies the class to create thread for test execution. \\\n+help.main.ttf.arg=<classname>\n+help.main.ttf.desc=Specifies the class to create thread factory for test execution. \\\n@@ -177,2 +177,2 @@\n-help.main.mwp.arg=<path>\n-help.main.mwp.desc=Specifies classspath with custom main wrapper implementation. \\\n+help.main.ttfp.arg=<path>\n+help.main.ttfp.desc=Specifies classspath with custom test thread factory implementation. \\\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/i18n.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,3 +32,2 @@\n-INITIAL_TESTS += \\\n-\t$(BUILDTESTDIR)\/tidy-docs.ok\n-\n+#INITIAL_TESTS += \\\n+#\t$(BUILDTESTDIR)\/tidy-docs.ok\n","filename":"test\/docs.gmk","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,50 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @run main\/othervm Test\n- *\/\n-\n-\/*\n- * @test\n- * @run main Test\n- *\/\n-\n-\/*\n- * @test\n- * @run driver Test\n- *\/\n-\n-public class Test {\n-    public static void main(String... args) throws Exception {\n-        if (!\"Test\".equals(System.getProperty(\"main.wrapper\"))) {\n-            throw new Exception(\"Property 'main.wrapper' = \" + System.getProperty(\"main.wrapper\"));\n-        }\n-\n-        String threadClassName = Thread.currentThread().getClass().getName();\n-        if (!threadClassName.equals(\"TestThread\")) {\n-            throw new Exception(\"Main Thread name = \" + threadClassName);\n-        }\n-    }\n-}\n","filename":"test\/mainWrapper\/Test.java","additions":0,"deletions":50,"binary":false,"changes":50,"status":"deleted"},{"patch":"@@ -1,54 +0,0 @@\n-#\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#----------------------------------------------------------------------\n-\n-$(BUILDTESTDIR)\/TestMainWrapper.ok: $(JTREG_IMAGEDIR)\/lib\/javatest.jar \\\n-\t\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n-\t\t$(JTREG_IMAGEDIR)\/bin\/jtreg\n-\t$(JDKJAVAC) \\\n-\t\t-d $(@:%.ok=%)\/classes \\\n-\t\t-cp $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n-\t\t$(TESTDIR)\/mainWrapper\/TestMainWrapper.java\n-\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n-\t\t-jdk:$(JDKHOME) \\\n-\t\t-w:$(@:%.ok=%)\/cmd.othervm\/work \\\n-\t\t-r:$(@:%.ok=%)\/cmd.othervm\/report \\\n-\t\t-verbose:fail \\\n-\t\t-mainWrapper:TestMainWrapper \\\n-\t\t-mainWrapperPath:$(@:%.ok=%)\/classes \\\n-\t\t$(TESTDIR)\/mainWrapper\n-\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n-\t\t-jdk:$(JDKHOME) \\\n-                -agentvm \\\n-\t\t-w:$(@:%.ok=%)\/cmd.agentvm\/work \\\n-\t\t-r:$(@:%.ok=%)\/cmd.agentvm\/report \\\n-\t\t-verbose:fail \\\n-\t\t-mainWrapper:TestMainWrapper \\\n-\t\t-mainWrapperPath:$(@:%.ok=%)\/classes \\\n-\t\t$(TESTDIR)\/mainWrapper\n-\techo \"test passed at `date`\" > $@\n-\n-TESTS.jtreg += $(BUILDTESTDIR)\/TestMainWrapper.ok\n","filename":"test\/mainWrapper\/TestMainWrapper.gmk","additions":0,"deletions":54,"binary":false,"changes":54,"status":"deleted"},{"patch":"@@ -1,43 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import com.sun.javatest.regtest.agent.CustomMainWrapper;\n-\n-public class TestMainWrapper implements CustomMainWrapper {\n-\n-    public TestMainWrapper() {\n-        System.setProperty(\"main.wrapper\", \"Test\");\n-    }\n-\n-    @Override\n-    public Thread createThread(ThreadGroup tg, Runnable task) {\n-        return new TestThread(tg, task);\n-    }\n-\n-}\n-\n-class TestThread extends Thread {\n-    public TestThread(ThreadGroup group, Runnable target) {\n-        super(group, target);\n-    }\n-}\n","filename":"test\/mainWrapper\/TestMainWrapper.java","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"","filename":"test\/testThreadFactory\/TEST.ROOT","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/mainWrapper\/TEST.ROOT","status":"renamed"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run main\/othervm Test\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run main Test\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run driver Test\n+ *\/\n+\n+public class Test {\n+    public static void main(String... args) throws Exception {\n+        if (!\"Test\".equals(System.getProperty(\"test.thread.factory\"))) {\n+            throw new Exception(\"Property 'test.thread.factory' = \" + System.getProperty(\"test.thread.factory\"));\n+        }\n+\n+        String threadClassName = Thread.currentThread().getClass().getName();\n+        if (!threadClassName.equals(\"TestThread\")) {\n+            throw new Exception(\"Main Thread name = \" + threadClassName);\n+        }\n+    }\n+}\n","filename":"test\/testThreadFactory\/Test.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#----------------------------------------------------------------------\n+\n+$(BUILDTESTDIR)\/TestTestThreadFactory.ok: $(JTREG_IMAGEDIR)\/lib\/javatest.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(JDKJAVAC) \\\n+\t\t-d $(@:%.ok=%)\/classes \\\n+\t\t-cp $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(TESTDIR)\/testThreadFactory\/TestTestThreadFactory.java\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-w:$(@:%.ok=%)\/cmd.othervm\/work \\\n+\t\t-r:$(@:%.ok=%)\/cmd.othervm\/report \\\n+\t\t-verbose:fail \\\n+\t\t-testThreadFactory:TestTestThreadFactory \\\n+\t\t-testThreadFactoryPath:$(@:%.ok=%)\/classes \\\n+\t\t$(TESTDIR)\/testThreadFactory\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-jdk:$(JDKHOME) \\\n+                -agentvm \\\n+\t\t-w:$(@:%.ok=%)\/cmd.agentvm\/work \\\n+\t\t-r:$(@:%.ok=%)\/cmd.agentvm\/report \\\n+\t\t-verbose:fail \\\n+\t\t-testThreadFactory:TestTestThreadFactory \\\n+\t\t-testThreadFactoryPath:$(@:%.ok=%)\/classes \\\n+\t\t$(TESTDIR)\/testThreadFactory\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += $(BUILDTESTDIR)\/TestTestThreadFactory.ok\n","filename":"test\/testThreadFactory\/TestTestThreadFactory.gmk","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import com.sun.javatest.regtest.agent.TestThreadFactory;\n+\n+public class TestTestThreadFactory implements TestThreadFactory {\n+\n+    public TestTestThreadFactory() {\n+        System.setProperty(\"test.thread.factory\", \"Test\");\n+    }\n+\n+    @Override\n+    public Thread newThread(ThreadGroup tg, Runnable task) {\n+        return new TestThread(tg, task);\n+    }\n+\n+}\n+\n+class TestThread extends Thread {\n+    public TestThread(ThreadGroup group, Runnable target) {\n+        super(group, target);\n+    }\n+}\n","filename":"test\/testThreadFactory\/TestTestThreadFactory.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}