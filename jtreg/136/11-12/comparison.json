{"files":[{"patch":"@@ -207,1 +207,1 @@\n-                t = TestThreadFactory.getInstance(testThreadFactory, testThreadFactoryPath).newThread(tg, avmr);\n+                t = TestThreadFactoryProvider.loadThreadFactory(testThreadFactory, testThreadFactoryPath).newThread(avmr);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/MainActionHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-            t = TestThreadFactory.getInstance(testThreadFactory, testThreadFactoryPath).newThread(tg, task);\n+            t = TestThreadFactoryProvider.loadThreadFactory(testThreadFactory, testThreadFactoryPath).newThread(task);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/MainWrapper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,86 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.javatest.regtest.agent;\n-\n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.InvocationTargetException;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-\/**\n- * A factory for threads used to run tests.\n- * By default, jtreg creates a new thread for each test using {@code new Thread(ThreadGroup tg, Runnable task);},\n- * but this may be overridden by providing an implementation of this interface,\n- * which might provide user-defined threads for test execution.\n- * An implementation of this interface might provide user-defined threads for test execution.\n- * <p>\n- * Example:\n- * <pre>\n- * new Thread(tg, () -> { ....; task.run(); ....; });\n- * or\n- * new VirtualThread(task);\n- * <\/pre>\n- * Implementation may be specified on the {@code jtreg} command line\n- * using {@code -testThreadFactory} and {@code -testThreadFactoryPath} arguments.\n- * It is executed by tested JDK in {@code agentvm} and {@code othervm} modes.\n- *\/\n-public interface TestThreadFactory {\n-    static TestThreadFactory getInstance(String className, String path) {\n-        ClassLoader loader = ClassLoader.getSystemClassLoader();\n-        if (path != null) {\n-            SearchPath classpath = new SearchPath(path);\n-            List<URL> urls = new ArrayList<>();\n-            for (Path f : classpath.asList()) {\n-                try {\n-                    urls.add(f.toUri().toURL());\n-                } catch (MalformedURLException e) {\n-                }\n-            }\n-            loader = new URLClassLoader(urls.toArray(new URL[urls.size()]), loader);\n-        }\n-        try {\n-            Class<? extends TestThreadFactory> clz = loader.loadClass(className).asSubclass(TestThreadFactory.class);\n-            Constructor<? extends TestThreadFactory> ctor = clz.getDeclaredConstructor();\n-            TestThreadFactory factory = ctor.newInstance();\n-            return factory;\n-        } catch (ClassNotFoundException | InvocationTargetException | NoSuchMethodException\n-                 | InstantiationException | IllegalAccessException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    \/**\n-     * This method should return unstarted thread which executes test task.\n-     * @param tg ThreadGroup to run test\n-     * @param task The test task\n-     *\/\n-    Thread newThread(ThreadGroup tg, Runnable task);\n-\n-}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/TestThreadFactory.java","additions":0,"deletions":86,"binary":false,"changes":86,"status":"deleted"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javatest.regtest.agent;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ThreadFactory;\n+\n+\/**\n+ * A provider which loads thread factory for threads used to run tests.\n+ * By default, jtreg creates a new thread for each test using {@code new Thread(ThreadGroup tg, Runnable task);},\n+ * but this may be overridden by providing an implementation of {@link java.util.concurrent.ThreadFactory},\n+ * which might provide user-defined threads for test execution.\n+ * An implementation might provide user-defined threads for test execution.\n+ * <p>\n+ * Example:\n+ * <pre>\n+ * new Thread(() -> { ....; task.run(); ....; });\n+ * or\n+ * new VirtualThread(task);\n+ * <\/pre>\n+ * Implementation may be specified on the {@code jtreg} command line\n+ * using {@code -testThreadFactory} and {@code -testThreadFactoryPath} arguments.\n+ * It is executed by tested JDK in {@code agentvm} and {@code othervm} modes.\n+ *\/\n+public final class TestThreadFactoryProvider {\n+    static ThreadFactory loadThreadFactory(String className, String path) {\n+        ClassLoader loader = ClassLoader.getSystemClassLoader();\n+        if (path != null) {\n+            SearchPath classpath = new SearchPath(path);\n+            List<URL> urls = new ArrayList<>();\n+            for (Path f : classpath.asList()) {\n+                try {\n+                    urls.add(f.toUri().toURL());\n+                } catch (MalformedURLException e) {\n+                }\n+            }\n+            loader = new URLClassLoader(urls.toArray(new URL[urls.size()]), loader);\n+        }\n+        try {\n+            Class<? extends ThreadFactory> clz = loader.loadClass(className).asSubclass(ThreadFactory.class);\n+            Constructor<? extends ThreadFactory> ctor = clz.getDeclaredConstructor();\n+            ThreadFactory factory = ctor.newInstance();\n+            return factory;\n+        } catch (ClassNotFoundException | InvocationTargetException | NoSuchMethodException\n+                 | InstantiationException | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/TestThreadFactoryProvider.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -176,1 +176,1 @@\n-    The class should implement a specific interface.\n+    The class should implement a j.u.c.TestFactory interface.\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/i18n.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,54 +0,0 @@\n-#\n-# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#----------------------------------------------------------------------\n-\n-$(BUILDTESTDIR)\/TestTestThreadFactory.ok: $(JTREG_IMAGEDIR)\/lib\/javatest.jar \\\n-\t\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n-\t\t$(JTREG_IMAGEDIR)\/bin\/jtreg\n-\t$(JDKJAVAC) \\\n-\t\t-d $(@:%.ok=%)\/classes \\\n-\t\t-cp $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n-\t\t$(TESTDIR)\/testThreadFactory\/TestTestThreadFactory.java\n-\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n-\t\t-jdk:$(JDKHOME) \\\n-\t\t-w:$(@:%.ok=%)\/cmd.othervm\/work \\\n-\t\t-r:$(@:%.ok=%)\/cmd.othervm\/report \\\n-\t\t-verbose:fail \\\n-\t\t-testThreadFactory:TestTestThreadFactory \\\n-\t\t-testThreadFactoryPath:$(@:%.ok=%)\/classes \\\n-\t\t$(TESTDIR)\/testThreadFactory\n-\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n-\t\t-jdk:$(JDKHOME) \\\n-                -agentvm \\\n-\t\t-w:$(@:%.ok=%)\/cmd.agentvm\/work \\\n-\t\t-r:$(@:%.ok=%)\/cmd.agentvm\/report \\\n-\t\t-verbose:fail \\\n-\t\t-testThreadFactory:TestTestThreadFactory \\\n-\t\t-testThreadFactoryPath:$(@:%.ok=%)\/classes \\\n-\t\t$(TESTDIR)\/testThreadFactory\n-\techo \"test passed at `date`\" > $@\n-\n-TESTS.jtreg += $(BUILDTESTDIR)\/TestTestThreadFactory.ok\n","filename":"test\/testThreadFactory\/TestTestThreadFactory.gmk","additions":0,"deletions":54,"binary":false,"changes":54,"status":"deleted"},{"patch":"@@ -1,43 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import com.sun.javatest.regtest.agent.TestThreadFactory;\n-\n-public class TestTestThreadFactory implements TestThreadFactory {\n-\n-    public TestTestThreadFactory() {\n-        System.setProperty(\"test.thread.factory\", \"Test\");\n-    }\n-\n-    @Override\n-    public Thread newThread(ThreadGroup tg, Runnable task) {\n-        return new TestThread(tg, task);\n-    }\n-\n-}\n-\n-class TestThread extends Thread {\n-    public TestThread(ThreadGroup group, Runnable target) {\n-        super(group, target);\n-    }\n-}\n","filename":"test\/testThreadFactory\/TestTestThreadFactory.java","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -0,0 +1,53 @@\n+#\n+# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#----------------------------------------------------------------------\n+\n+$(BUILDTESTDIR)\/TestThreadFactory.ok: $(JTREG_IMAGEDIR)\/lib\/javatest.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(JDKJAVAC) \\\n+\t\t-d $(@:%.ok=%)\/classes \\\n+\t\t$(TESTDIR)\/testThreadFactory\/TestThreadFactory.java\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-w:$(@:%.ok=%)\/cmd.othervm\/work \\\n+\t\t-r:$(@:%.ok=%)\/cmd.othervm\/report \\\n+\t\t-verbose:fail \\\n+\t\t-testThreadFactory:TestThreadFactory \\\n+\t\t-testThreadFactoryPath:$(@:%.ok=%)\/classes \\\n+\t\t$(TESTDIR)\/testThreadFactory\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-jdk:$(JDKHOME) \\\n+                -agentvm \\\n+\t\t-w:$(@:%.ok=%)\/cmd.agentvm\/work \\\n+\t\t-r:$(@:%.ok=%)\/cmd.agentvm\/report \\\n+\t\t-verbose:fail \\\n+\t\t-testThreadFactory:TestThreadFactory \\\n+\t\t-testThreadFactoryPath:$(@:%.ok=%)\/classes \\\n+\t\t$(TESTDIR)\/testThreadFactory\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += $(BUILDTESTDIR)\/TestThreadFactory.ok\n","filename":"test\/testThreadFactory\/TestThreadFactory.gmk","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.concurrent.ThreadFactory;\n+\n+public class TestThreadFactory implements ThreadFactory {\n+\n+    public TestThreadFactory() {\n+        System.setProperty(\"test.thread.factory\", \"Test\");\n+    }\n+\n+    @Override\n+    public Thread newThread(Runnable task) {\n+        return new TestThread(task);\n+    }\n+\n+}\n+\n+class TestThread extends Thread {\n+    public TestThread(Runnable target) {\n+        super(target);\n+    }\n+}\n","filename":"test\/testThreadFactory\/TestThreadFactory.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}