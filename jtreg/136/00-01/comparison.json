{"files":[{"patch":"@@ -29,1 +29,0 @@\n-import java.lang.reflect.InvocationTargetException;\n@@ -35,1 +34,0 @@\n-import java.util.Collections;\n@@ -38,0 +36,4 @@\n+\/**\n+ * Interface which should be implemented to customize execution of test.\n+ * It is used by main and driver actions to execute test.\n+ *\/\n@@ -40,1 +42,1 @@\n-        String[] args = mainWrapper.split(\"=\", 2);\n+        String[] args = mainWrapper.split(\":\", 2);\n@@ -42,1 +44,1 @@\n-        String options = args.length > 1 ? args[1] : \"\";\n+        String actionName = args[1].split(\"=\")[1];\n@@ -59,1 +61,1 @@\n-            wrapper.setOption(options);\n+            wrapper.setAction(actionName);\n@@ -61,2 +63,1 @@\n-        } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | IllegalAccessException |\n-                 InvocationTargetException e) {\n+        } catch (Exception e) {\n@@ -67,33 +68,7 @@\n-    default void setOption(String options) {\n-    }\n-\n-    default Thread createThread(ThreadGroup tg, Runnable task) {\n-        return new Thread(tg, task);\n-    }\n-\n-    default List<String> getAdditionalVMOpts() {\n-        return Collections.emptyList();\n-    }\n-}\n-\n-class TestThread extends Thread {\n-    public TestThread(ThreadGroup group, Runnable target) {\n-        super(group, target);\n-    }\n-}\n-class TestMainWrapper implements CustomMainWrapper {\n-    private List<String>vmOpts = new ArrayList<>();\n-\n-    public TestMainWrapper() {\n-        vmOpts.add(\"-Dtest.property=test\");\n-    }\n-\n-    @Override\n-    public void setOption(String options) {\n-        System.setProperty(\"main.wrapper\", options);\n-    }\n-\n-    @Override\n-    public Thread createThread(ThreadGroup tg, Runnable task) {\n-        return new TestThread(tg, task);\n-    }\n+    \/**\n+     * This method should be implemented to run test task.\n+     * Default jtreg implementation is return new Thread(tg, task);\n+     * @param tg ThreadGroup to run test\n+     * @param task The task which executes test\n+     *\/\n+    Thread createThread(ThreadGroup tg, Runnable task);\n@@ -101,3 +76,5 @@\n-    @Override\n-    public List<String> getAdditionalVMOpts() {\n-        return vmOpts;\n+    \/**\n+     * This method is used to get information about current action.\n+     * @param actionName name of action\n+     *\/\n+    default void setAction(String actionName) {\n@@ -105,1 +82,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/CustomMainWrapper.java","additions":21,"deletions":44,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/MainWrapper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -632,0 +632,5 @@\n+\n+    private static final String CUSTOM_MAIN_WRAPPER = \".customMainWrapper\";\n+\n+    private static final String CUSTOM_MAIN_WRAPPER_PATH = \".customMainWrapperPath\";\n+\n@@ -722,0 +727,8 @@\n+            v = data.get(prefix + CUSTOM_MAIN_WRAPPER);\n+            if (v != null)\n+                setCustomMainWrapper(v);\n+\n+            v = data.get(prefix + CUSTOM_MAIN_WRAPPER_PATH);\n+            if (v != null)\n+                setCustomMainWrapperPath(v);\n+\n@@ -803,0 +816,8 @@\n+        if (customMainWrapper != null) {\n+            data.put(prefix + CUSTOM_MAIN_WRAPPER, customMainWrapper);\n+        }\n+\n+        if (customMainWrapperPath != null) {\n+            data.put(prefix + CUSTOM_MAIN_WRAPPER_PATH, customMainWrapperPath);\n+        }\n+\n@@ -1254,1 +1275,1 @@\n-    String getCustomMainWrapper() {\n+    public String getCustomMainWrapper() {\n@@ -1260,1 +1281,1 @@\n-    public void setCustomMainWrapperPath(List<Path>  customMainWrapperPath) {\n+    public void setCustomMainWrapperPath(String customMainWrapperPath) {\n@@ -1264,1 +1285,1 @@\n-    List<Path>  getCustomMainWrapperPath() {\n+    public String getCustomMainWrapperPath() {\n@@ -1268,1 +1289,1 @@\n-    private List<Path>  customMainWrapperPath;\n+    private String customMainWrapperPath;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionParameters.java","additions":25,"deletions":4,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -97,1 +97,2 @@\n-            File policyFile, float timeoutFactor, Logger logger, String customMainWrapper, String customMainWrapperPath) throws Fault {\n+            File policyFile, float timeoutFactor, Logger logger,\n+            String customMainWrapper, String customMainWrapperPath) throws Fault {\n@@ -712,8 +713,0 @@\n-        public void setCustomMainWrapper(String wrapper) {\n-            this.customMainWrapper = wrapper;\n-        }\n-\n-        public void setCustomMainWrapperPath(String wrapperPath) {\n-            this.customMainWrapperPath = wrapperPath;\n-        }\n-\n@@ -758,1 +751,3 @@\n-                                    Map<String, String> envVars)\n+                                    Map<String, String> envVars,\n+                                    String customMainWrapper,\n+                                    String customMainWrapperPath)\n@@ -776,1 +771,2 @@\n-                a = new Agent(dir, jdk, vmOpts, envVars, policyFile, timeoutFactor, logger, customMainWrapper, customMainWrapperPath);\n+                a = new Agent(dir, jdk, vmOpts, envVars, policyFile, timeoutFactor, logger,\n+                        customMainWrapper, customMainWrapperPath);\n@@ -932,2 +928,0 @@\n-        private String customMainWrapper;\n-        private String customMainWrapperPath;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Agent.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -700,1 +700,1 @@\n-            agent = script.getAgent(jdk, agentClasspath, vmOpts);\n+            agent = script.getAgent(jdk, agentClasspath, vmOpts, null, null);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/CompileAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -483,0 +483,7 @@\n+\n+        if (script.getCustomWrapper() != null) {\n+            javaProps.put(MainWrapper.MAIN_WRAPPER, script.getCustomWrapper() + \":\" + \"action=\" + this.getName());\n+        }\n+        if (script.getCustomWrapperPath() != null) {\n+            javaProps.put(MainWrapper.MAIN_WRAPPER_PATH, script.getCustomWrapperPath());\n+        }\n@@ -623,0 +630,1 @@\n+            String wrapper = script.getCustomWrapper() == null ? null : script.getCustomWrapper() + \":\" + \"action=\" + this.getName();\n@@ -624,1 +632,3 @@\n-                    filterJavaOpts(join(script.getTestVMJavaOptions(), script.getTestDebugOptions())));\n+                    filterJavaOpts(join(script.getTestVMJavaOptions(), script.getTestDebugOptions())),\n+                    wrapper,\n+                    script.getCustomWrapperPath());\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/MainAction.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+import com.sun.javatest.regtest.agent.MainWrapper;\n@@ -1131,0 +1132,1 @@\n+\n@@ -1138,0 +1140,8 @@\n+    String getCustomWrapper() {\n+        return params.getCustomMainWrapper();\n+    }\n+\n+    String getCustomWrapperPath() {\n+        return params.getCustomMainWrapperPath();\n+    }\n+\n@@ -1234,1 +1244,2 @@\n-    Agent getAgent(JDK jdk, SearchPath classpath, List<String> testVMOpts) throws Agent.Fault {\n+    Agent getAgent(JDK jdk, SearchPath classpath, List<String> testVMOpts,\n+                   String customMainWrapper, String customMainWrapperPath) throws Agent.Fault {\n@@ -1238,0 +1249,6 @@\n+\n+        if (customMainWrapper != null) {\n+            \/\/ Add property to differ agents with and without MainWrapper\n+            vmOpts.add(\"-D\" + MainWrapper.MAIN_WRAPPER + \"=\" + customMainWrapper);\n+        }\n+\n@@ -1263,1 +1280,2 @@\n-        Agent agent = p.getAgent(absTestScratchDir().toFile(), jdk, vmOpts.toList(), envVars);\n+        Agent agent = p.getAgent(absTestScratchDir().toFile(), jdk, vmOpts.toList(), envVars,\n+                customMainWrapper, customMainWrapperPath);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1222,11 +1222,0 @@\n-        if (customMainWrapper != null) {\n-            CustomMainWrapper cmw = CustomMainWrapper.getInstance(customMainWrapper, customMainWrapperPathArg);\n-            testVMOpts.add(\"-D\" + MainWrapper.MAIN_WRAPPER + \"=\" + customMainWrapper);\n-            testVMOpts.addAll(cmw.getAdditionalVMOpts());\n-        }\n-\n-        if (customMainWrapperPathArg != null) {\n-            testVMOpts.add(\"-D\" + MainWrapper.MAIN_WRAPPER_PATH + \"=\" + customMainWrapperPathArg);\n-        }\n-\n-\n@@ -1315,6 +1304,0 @@\n-                    if (customMainWrapper != null) {\n-                        p.setCustomMainWrapper(customMainWrapper);\n-                    }\n-                    if (customMainWrapperPathArg != null) {\n-                        p.setCustomMainWrapperPath(customMainWrapperPathArg);\n-                    }\n@@ -1714,0 +1697,8 @@\n+            if (customMainWrapper != null) {\n+                rp.setCustomMainWrapper(customMainWrapper);\n+            }\n+\n+            if (customMainWrapperPathArg != null) {\n+                rp.setCustomMainWrapperPath(customMainWrapperPathArg);\n+            }\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":8,"deletions":17,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -174,3 +174,3 @@\n-help.main.mw.arg=<classname>=[options]\n-help.main.mw.desc=Main wrapper classname and arguments.\n-help.main.mwp.arg=Main wrapper classpath\n+help.main.mw.arg=<classname>\n+help.main.mw.desc=Main wrapper classname.\n+help.main.mwp.arg=<path>\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/i18n.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-        if (!\"test\".equals(System.getProperty(\"test.property\"))) {\n-            throw new Exception(\"Property 'test.property'  = \" + System.getProperty(\"test.property\"));\n+        if (!\"driver\".equals(System.getProperty(\"jtreg.action\"))) {\n+            throw new Exception(\"Property 'jtreg.action'  = \" + System.getProperty(\"jtreg.action\"));\n@@ -40,2 +40,2 @@\n-        if (!threadClassName.equals(\"com.sun.javatest.regtest.agent.TestThread\")) {\n-            throw new Exception(\"Main Thread is expected : \" + threadClassName);\n+        if (!threadClassName.equals(\"TestThread\")) {\n+            throw new Exception(\"Main Thread name = \" + threadClassName);\n","filename":"test\/mainWrapper\/DriverTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n-        if (!\"test\".equals(System.getProperty(\"test.property\"))) {\n-            throw new Exception(\"Property 'test.property'  = \" + System.getProperty(\"test.property\"));\n+        if (!\"main\".equals(System.getProperty(\"jtreg.action\"))) {\n+            throw new Exception(\"Property 'jtreg.action'  = \" + System.getProperty(\"jtreg.action\"));\n@@ -45,2 +45,2 @@\n-        if (!threadClassName.equals(\"com.sun.javatest.regtest.agent.TestThread\")) {\n-            throw new Exception(\"Main Thread is expected : \" + threadClassName);\n+        if (!threadClassName.equals(\"TestThread\")) {\n+            throw new Exception(\"Main Thread name = \" + threadClassName);\n","filename":"test\/mainWrapper\/Test.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-JTREG_OPTS += \\\n-\t-mainWrapper:com.sun.javatest.regtest.agent.TestMainWrapper=Test\n-\n@@ -34,0 +31,4 @@\n+\t$(JDKJAVAC) \\\n+\t\t-d $(@:%.ok=%)\/classes \\\n+\t\t-cp $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(TESTDIR)\/mainWrapper\/TestMainWrapper.java\n@@ -39,0 +40,2 @@\n+\t\t-mainWrapper:TestMainWrapper \\\n+\t\t-mainWrapperPath:$(@:%.ok=%)\/classes \\\n@@ -46,0 +49,2 @@\n+\t\t-mainWrapper:TestMainWrapper \\\n+\t\t-mainWrapperPath:$(@:%.ok=%)\/classes \\\n","filename":"test\/mainWrapper\/TestMainWrapper.gmk","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import com.sun.javatest.regtest.agent.CustomMainWrapper;\n+\n+public class TestMainWrapper implements CustomMainWrapper {\n+\n+    public TestMainWrapper() {\n+        System.setProperty(\"main.wrapper\", \"Test\");\n+    }\n+\n+    @Override\n+    public void setAction(String actionName) {\n+        System.setProperty(\"jtreg.action\", actionName);\n+    }\n+\n+    @Override\n+    public Thread createThread(ThreadGroup tg, Runnable task) {\n+\n+        return new TestThread(tg, task);\n+    }\n+\n+}\n+\n+class TestThread extends Thread {\n+    public TestThread(ThreadGroup group, Runnable target) {\n+        super(group, target);\n+    }\n+}\n","filename":"test\/mainWrapper\/TestMainWrapper.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"}]}