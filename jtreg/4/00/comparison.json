{"files":[{"patch":"@@ -34,1 +34,1 @@\n-import java.util.concurrent.locks.ReentrantLock;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n@@ -56,1 +56,1 @@\n-    public abstract void lock();\n+    public abstract Lock lock(boolean exclusive);\n@@ -63,1 +63,1 @@\n-        ReentrantLock lock = new ReentrantLock();\n+        ReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n@@ -66,2 +66,19 @@\n-        public void lock() {\n-            lock.lock();\n+        public Lock lock(boolean exclusive) {\n+            final java.util.concurrent.locks.Lock l;\n+            if (exclusive) {\n+                l = lock.writeLock();\n+            } else {\n+                l = lock.readLock();\n+            }\n+            l.lock();\n+            return new Lock() {\n+                @Override\n+                public Lock lock(boolean exclusive) {\n+                    throw new UnsupportedOperationException();\n+                }\n+\n+                @Override\n+                public void unlock() {\n+                    l.unlock();\n+                }\n+            };\n@@ -72,1 +89,1 @@\n-            lock.unlock();\n+            throw new UnsupportedOperationException();\n@@ -77,1 +94,0 @@\n-        private File file;\n@@ -79,1 +95,0 @@\n-        private FileLock fileLock;\n@@ -83,1 +98,0 @@\n-                this.file = file;\n@@ -94,2 +108,3 @@\n-        public void lock() {\n-            super.lock();\n+        public Lock lock(boolean exclusive) {\n+            final Lock l = super.lock(exclusive);\n+            final FileLock fileLock;\n@@ -98,1 +113,1 @@\n-                fileLock = raf.getChannel().lock();\n+                fileLock = raf.getChannel().lock(0, 0, !exclusive);\n@@ -104,1 +119,1 @@\n-                    super.unlock();\n+                    l.unlock();\n@@ -106,0 +121,18 @@\n+\n+            return new Lock() {\n+                @Override\n+                public Lock lock(boolean exclusive) {\n+                    throw new UnsupportedOperationException();\n+                }\n+\n+                @Override\n+                public void unlock() {\n+                    try {\n+                        fileLock.release();\n+                    } catch (IOException e) {\n+                        throw new Error(e);\n+                    } finally {\n+                        l.unlock();\n+                    }\n+                }\n+            };\n@@ -110,7 +143,1 @@\n-            try {\n-                fileLock.release();\n-            } catch (IOException e) {\n-                throw new Error(e);\n-            } finally {\n-                super.unlock();\n-            }\n+            throw new UnsupportedOperationException();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Lock.java","additions":47,"deletions":20,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -341,2 +341,1 @@\n-            Lock lock = script.getLockIfRequired();\n-            if (lock != null) lock.lock();\n+            Lock lock = script.acquireLock();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/MainAction.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1067,1 +1067,2 @@\n-    Lock getLockIfRequired() throws TestRunException {\n+    Lock acquireLock() throws TestRunException{\n+        boolean exclusive;\n@@ -1069,2 +1070,1 @@\n-            if (!testSuite.needsExclusiveAccess(td))\n-                return null;\n+            exclusive = testSuite.needsExclusiveAccess(td);\n@@ -1075,1 +1075,1 @@\n-        return Lock.get(params);\n+        return Lock.get(params).lock(exclusive);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -281,2 +281,1 @@\n-            Lock lock = script.getLockIfRequired();\n-            if (lock != null) lock.lock();\n+            Lock lock = script.acquireLock();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/ShellAction.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}