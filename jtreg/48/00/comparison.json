{"files":[{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Checks the value of System.getProperty(\"os.version\") against an expected value.\n+ * For more info, see\n+ * JDK-8253702: BigSur version number reported as 10.16, should be 11.nn\n+ * https:\/\/bugs.openjdk.java.net\/browse\/JDK-8253702\n+ *\/\n+public class CheckJavaOSVersion {\n+    public static void main(String... args) {\n+        checkJavaOSVersion(args[0]);\n+    }\n+\n+    private static void checkJavaOSVersion(String expectVersion) {\n+        String osVersion = System.getProperty(\"os.version\");\n+        if (!osVersion.equals(expectVersion)) {\n+            System.err.println(\"The version of JDK you are using does not report the OS version correctly.\");\n+            System.err.println(\"    java.home:    \" + System.getProperty(\"java.home\"));\n+            System.err.println(\"    java.version: \" + System.getProperty(\"java.version\"));\n+            System.err.println(\"    os.version:   \" + osVersion + \"  (expected: \" + expectVersion + \")\");\n+            System.err.println(\"Use a more recent update of this version of JDK, or a newer version of JDK.\");\n+            System.exit(1);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"make\/CheckJavaOSVersion.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,19 +144,5 @@\n-# Only use -source -target, to support legacy platforms, when building with JDK 8\n-# Otherwise, use default values for $JDKHOME\/bin\/javac\n-SUPPORT_OLD_SOURCE_TARGET = $(shell $(JDKJAVAC) -version 2>&1 | grep '[8]' > \/dev\/null && echo true )\n-ifneq ($(SUPPORT_OLD_SOURCE_TARGET),)\n-    OLD_JAVAC_SOURCE_TARGET = -source 1.2 -target 1.1\n-    AGENT_JAVAC_SOURCE_TARGET = -source 5 -target 5\n-    TOOL_JAVAC_SOURCE_TARGET = -source 8 -target 8\n-    REGTEST_TOOL_PATCH_JAVA_BASE_OPTIONS =\n-else\n-    EXTRA_LINT_OPTS = -rawtypes,-unchecked\n-    REGTEST_TOOL_PATCH_JAVA_BASE_OPTIONS = --patch-module java.base=$(JAVADIR)\n-endif \n-\n-ifdef JDK5HOME\n-    JDK5_BOOTCLASSPATH = -bootclasspath $(JDK5HOME)\/jre\/lib\/rt.jar\n-endif\n-ifdef JDK8HOME\n-    JDK8_BOOTCLASSPATH = -bootclasspath $(JDK8HOME)\/jre\/lib\/rt.jar\n-endif\n+OLD_JAVAC_SOURCE_TARGET = --release 8\n+AGENT_JAVAC_SOURCE_TARGET = --release 8\n+TOOL_JAVAC_SOURCE_TARGET = --release 11\n+EXTRA_LINT_OPTS = -rawtypes,-unchecked\n+REGTEST_TOOL_PATCH_JAVA_BASE_OPTIONS = --patch-module java.base=$(JAVADIR)\n@@ -164,1 +150,1 @@\n-# for files needed to run othervm tests on oldest supported platforms\n+# for files needed to run othervm tests (on platforms back to JDK 8)\n@@ -167,1 +153,1 @@\n-\t$(OLD_JAVAC_SOURCE_TARGET) $(JDK5_BOOTCLASSPATH) -Xlint:all,-options,-deprecation,$(EXTRA_LINT_OPTS) -Werror\n+\t$(OLD_JAVAC_SOURCE_TARGET) -Xlint:all,-options,-deprecation,$(EXTRA_LINT_OPTS) -Werror\n@@ -169,1 +155,1 @@\n-# for files needed to run agentvm tests (on platforms back to JDK 1.5)\n+# for files needed to run agentvm tests (on platforms back to JDK 8)\n@@ -172,1 +158,1 @@\n-\t$(AGENT_JAVAC_SOURCE_TARGET) $(JDK5_BOOTCLASSPATH) -Xlint:all,-options,-deprecation,$(EXTRA_LINT_OPTS) -Werror\n+\t$(AGENT_JAVAC_SOURCE_TARGET) -Xlint:all,-options,-deprecation,$(EXTRA_LINT_OPTS) -Werror\n@@ -177,1 +163,1 @@\n-\t$(TOOL_JAVAC_SOURCE_TARGET) $(JDK8_BOOTCLASSPATH) -Xlint:all,-options,-deprecation -Werror\n+\t$(TOOL_JAVAC_SOURCE_TARGET) -Xlint:all,-options,-deprecation -Werror\n","filename":"make\/Defs.gmk","additions":11,"deletions":25,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-test: $(INITIAL_TESTS) $(TESTS) $(FINAL_TESTS)\n+test: checkJavaOSVersion $(INITIAL_TESTS) $(TESTS) $(FINAL_TESTS)\n@@ -49,1 +49,1 @@\n-quick-test: $(INITIAL_TESTS)\n+quick-test: checkJavaOSVersion $(INITIAL_TESTS)\n@@ -114,0 +114,7 @@\n+checkJavaOSVersion:\n+ifeq ($(OS_NAME), macosx)\n+\t$(JDKJAVA) CheckJavaOSVersion.java $(OS_VERSION)\n+endif\n+\n+#----------------------------------------------------------------------\n+\n","filename":"make\/Makefile","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-JTREG_VERSION=6.2\n+JTREG_VERSION=7\n","filename":"make\/build-support\/version-numbers","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -261,1 +261,1 @@\n-    echo \"      Path to JDK; must be JDK 8 or higher\"\n+    echo \"      Path to JDK; must be JDK 11 or higher\"\n@@ -444,2 +444,2 @@\n-    if [ \"${vnum:-0}\" -lt \"8\" ]; then\n-        error \"JDK 8 or newer is required to build jtreg\"\n+    if [ \"${vnum:-0}\" -lt \"11\" ]; then\n+        error \"JDK 11 or newer is required to build jtreg\"\n@@ -449,0 +449,13 @@\n+\n+checkJavaOSVersion() {\n+  # This checks that the value in the Java \"os.version\" system property\n+  # is as expected.  While it is OK to *build* jtreg with a JDK with this bug,\n+  # some of the `jtreg` self-tests will fail: notably, test\/problemList.\n+  # See https:\/\/bugs.openjdk.java.net\/browse\/JDK-8253702\n+  case `uname` in\n+    Darwin )\n+      OS_VERSION=`defaults read loginwindow SystemVersionStampAsString`\n+      ${JAVA_HOME}\/bin\/java ${mydir}\/CheckJavaOSVersion.java ${OS_VERSION}\n+  esac\n+}\n+\n@@ -451,0 +464,1 @@\n+#checkJavaOSVersion   #temp: check for presence of the JDK os.version bug (JDK-8253702)\n","filename":"make\/build.sh","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-\t    $(REGTEST_TOOL_JAVAC) $(REGTEST_TOOL_JAVAC_OPTIONS) $(REGTEST_TOOL_PATCH_JAVA_BASE_OPTIONS) \\\n+\t    $(REGTEST_TOOL_JAVAC) $(REGTEST_TOOL_JAVAC_OPTIONS) --release 9 $(REGTEST_TOOL_PATCH_JAVA_BASE_OPTIONS) \\\n","filename":"make\/jtreg.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-# Verify java version (1.)8 or newer used to run jtreg\n+# Verify java version 11 or newer used to run jtreg\n@@ -148,2 +148,2 @@\n-elif [ \"$version\" -lt 8 ]; then\n-    echo \"java version 8 or later is required to run jtreg\"\n+elif [ \"$version\" -lt 11 ]; then\n+    echo \"java version 11 or later is required to run jtreg\"\n","filename":"src\/share\/bin\/jtreg.sh","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import java.io.InputStreamReader;\n@@ -67,0 +68,1 @@\n+import java.util.stream.Collectors;\n@@ -143,0 +145,2 @@\n+        checkJavaOSVersion();\n+\n@@ -185,0 +189,36 @@\n+    private static void checkJavaOSVersion() {\n+        String osName = System.getProperty(\"os.name\");\n+        if (osName != null && osName.equals(\"Mac OS X\")) {\n+            try {\n+                String expectVersion;\n+                Process p = new ProcessBuilder(\"defaults\", \"read\", \"loginwindow\", \"SystemVersionStampAsString\")\n+                        .redirectErrorStream(true)\n+                        .start();\n+                try (InputStream in = p.getInputStream();\n+                    BufferedReader r = new BufferedReader(new InputStreamReader(in))) {\n+                    expectVersion = r.lines().collect(Collectors.joining());\n+                }\n+                p.waitFor();\n+\n+                checkJavaOSVersion(expectVersion);\n+                return;\n+\n+            } catch (IOException | InterruptedException e) {\n+                System.err.println(\"Error getting OS version: \" + e);\n+                System.exit(99);\n+            }\n+        }\n+    }\n+\n+    private static void checkJavaOSVersion(String expectVersion) {\n+        String osVersion = System.getProperty(\"os.version\");\n+        if (!osVersion.equals(expectVersion)) {\n+            System.err.println(\"The version of JDK you are using to run jtreg does not report the OS version correctly.\");\n+            System.err.println(\"    java.home:    \" + System.getProperty(\"java.home\"));\n+            System.err.println(\"    java.version: \" + System.getProperty(\"java.version\"));\n+            System.err.println(\"    os.version:   \" + osVersion + \"  (expected: \" + expectVersion + \")\");\n+            System.err.println(\"Use a more recent update of this version of JDK, or a newer version of JDK.\");\n+            System.exit(1);\n+        }\n+    }\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":41,"deletions":1,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,1 +100,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/SecurityManager\/SecurityManagerTests.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/addmods\/AddModulesTest.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/bootclasspath\/BootClassPathTest.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-\t$(JDK8HOME)\/bin\/java \\\n+\t$(JDKHOME)\/bin\/java \\\n@@ -40,0 +40,1 @@\n+\t\t-jdk:$(JDK8HOME) \\\n","filename":"test\/ignoresymbolfile\/IgnoreSymbolFileTest.gmk","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/javac\/JavacTests.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-ifdef JDK9HOME\n-\n@@ -41,1 +39,4 @@\n-\t$(JDK9HOME)\/bin\/java -cp \"$(@:%.ok=%)\/classes$(PS)$(JTREG_IMAGEDIR)\/lib\/jtreg.jar\" \\\n+\t$(JDKHOME)\/bin\/java -cp \"$(@:%.ok=%)\/classes$(PS)$(JTREG_IMAGEDIR)\/lib\/jtreg.jar\" \\\n+\t\t-Djava.io.tmpdir=$(@:%.ok=%) \\\n+\t\tJDKModulesTest -Ddummy.vm.option\n+\t$(JDKHOME)\/bin\/java -cp \"$(@:%.ok=%)\/classes$(PS)$(JTREG_IMAGEDIR)\/lib\/jtreg.jar\" \\\n@@ -48,1 +49,0 @@\n-endif\n","filename":"test\/jdkModulesTest\/JDKModulesTest.gmk","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,3 @@\n-        Files.createFile(testSuiteDir.resolve(\"TEST.ROOT\"));\n+        if (!Files.exists(testSuiteDir.resolve(\"TEST.ROOT\"))) {\n+            Files.createFile(testSuiteDir.resolve(\"TEST.ROOT\"));\n+        }\n@@ -78,2 +80,2 @@\n-                Arrays.asList(\"java.desktop\", \"jdk.compiler\", \"java.corba\"),\n-                Arrays.asList(\"java.corba\"));\n+                Arrays.asList(\"java.desktop\", \"jdk.compiler\", \"java.se\"),\n+                Arrays.asList(\"java.se\"));\n@@ -85,1 +87,1 @@\n-                Arrays.asList(\"java.desktop\", \"jdk.compiler\", \"java.corba\"),\n+                Arrays.asList(\"java.desktop\", \"jdk.compiler\", \"java.se\"),\n@@ -92,2 +94,2 @@\n-                Arrays.asList(\"java.desktop\", \"jdk.compiler\", \"java.corba\"),\n-                Arrays.asList(\"java.desktop\", \"java.corba\"));\n+                Arrays.asList(\"java.desktop\", \"jdk.compiler\", \"java.se\"),\n+                Arrays.asList(\"java.desktop\", \"java.se\"));\n","filename":"test\/jdkModulesTest\/JDKModulesTest.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg \\\n@@ -46,1 +46,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg \\\n@@ -60,1 +60,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg \\\n","filename":"test\/keywords\/testKeywords.gmk","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/modlibs\/ModLibsTest.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -55,1 +55,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -68,1 +68,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/modules\/ModulesTest.gmk","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -47,1 +47,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/preview\/PreviewTest.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -55,1 +55,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -79,1 +79,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -107,1 +107,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/refIgnoreLines\/RefIgnoreLines.gmk","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -54,1 +54,1 @@\n-\t    $(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\t    JTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg \\\n@@ -63,0 +63,1 @@\n+\t\t    -e '\/JTREG_JAVA=\/d' \\\n","filename":"test\/rerun\/RerunTest.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2017, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-\t$(JDK8HOME)\/bin\/javac \\\n+\t$(JDKHOME)\/bin\/javac \\\n@@ -41,1 +41,1 @@\n-\tcd $(@:%.ok=%) && $(JDK8HOME)\/bin\/java \\\n+\tcd $(@:%.ok=%) && $(JDKJAVA) \\\n@@ -44,0 +44,1 @@\n+\t\t$(JDK8HOME) \\\n","filename":"test\/rerun2\/RerunTest2.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,2 @@\n-        File testSuite = new File(args[0]);\n+        File jdk = new File(args[0]);\n+        File testSuite = new File(args[1]);\n@@ -40,1 +41,1 @@\n-            test(testSuite, mode);\n+            test(jdk, testSuite, mode);\n@@ -46,1 +47,1 @@\n-    void test(File testSuite, String mode) throws Exception {\n+    void test(File jdk, File testSuite, String mode) throws Exception {\n@@ -51,1 +52,1 @@\n-        runTests(testSuite, initialWorkDir, initialReportDir, mode);\n+        runTests(jdk, testSuite, initialWorkDir, initialReportDir, mode);\n@@ -62,1 +63,1 @@\n-    void runTests(File ts, File wd, File rd, String mode) throws Exception {\n+    void runTests(File jdk, File ts, File wd, File rd, String mode) throws Exception {\n@@ -64,0 +65,1 @@\n+            \"-jdk:\" + jdk,\n","filename":"test\/rerun2\/RerunTest2.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg \\\n","filename":"test\/shell\/testShell.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg \\\n","filename":"test\/testng-junit\/TestNGJUnitTest.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -53,1 +53,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -79,1 +79,1 @@\n-\t$(JDK8HOME)\/bin\/javac -cp $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t$(JDKHOME)\/bin\/javac -cp $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n@@ -82,1 +82,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -100,1 +100,1 @@\n-\t$(JDK8HOME)\/bin\/javac -cp $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t$(JDKHOME)\/bin\/javac -cp $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n@@ -103,1 +103,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n","filename":"test\/timeouthandlers\/TimeoutHandlerTest.gmk","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\tJTREG_JAVA=$(JDKJAVA) $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n@@ -41,1 +41,1 @@\n-\tJAVA_HOME=$(JDK8HOME) $(ANT) -f $(TESTDIR)\/vmopts\/build.xml \\\n+\tJAVA_HOME=$(JDKHOME) $(ANT) -f $(TESTDIR)\/vmopts\/build.xml \\\n","filename":"test\/vmopts\/TestVMOpts.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}