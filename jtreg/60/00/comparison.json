{"files":[{"patch":"@@ -98,2 +98,0 @@\n-\t@echo \"ANTHOME             = $(ANTHOME)\"\n-\t@echo \"ANT_JAR             = $(ANT_JAR)\"\n","filename":"make\/Makefile","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-# specified checksums.\n+# checksums.\n@@ -120,1 +120,1 @@\n-# Ant\n+# Ant (required to build AsmTools, JCov and JT Harness)\n@@ -131,11 +131,0 @@\n-# Ant jar\n-#     Checksum variables:\n-#         ANT_JAR_CHECKSUM: checksum of binary archive\n-#\n-#     1. ANT_JAR\n-#         The path to ant.jar.\n-#     2a. ANT_JAR_URL\n-#         The full URL for the jar.\n-#     2b. ANT_JAR_URL_BASE + ANT_JAR_VERSION\n-#         The individual URL components used to construct the full URL.\n-#\n@@ -324,5 +313,0 @@\n-ANT_JAR_VERSION=\"${ANT_JAR_VERSION:-${ANT_VERSION}}\"\n-ANT_JAR_URL_BASE=\"${ANT_JAR_URL_BASE:-${MAVEN_REPO_URL_BASE}}\"\n-ANT_JAR_VERSION=\"${ANT_JAR_VERSION:-${DEFAULT_ANT_JAR_VERSION:-${ANT_VERSION}}}\"\n-ANT_JAR_CHECKSUM=\"${ANT_JAR_CHECKSUM:-${DEFAULT_ANT_JAR_CHECKSUM}}\"\n-\n@@ -472,32 +456,0 @@\n-#----- Ant jar -----\n-setup_ant_jar() {\n-    check_arguments \"${FUNCNAME}\" 0 $#\n-\n-    if [ -n \"${ANT_JAR:-}\" ]; then\n-        return\n-    fi\n-\n-    if [ -z \"${ANT_JAR_URL:-}\" ]; then\n-        if [ -n \"${ANT_JAR_URL_BASE:-}\" ]; then\n-            if [ -z \"${ANT_JAR_VERSION:-}\" ]; then\n-                error \"ANT_JAR_VERSION not set\"\n-                exit 1\n-            fi\n-            ANT_JAR_URL=\"${ANT_JAR_URL_BASE}\/org\/apache\/ant\/ant\/${ANT_JAR_VERSION}\/ant-${ANT_JAR_VERSION}.jar\"\n-        fi\n-    fi\n-\n-    local ANT_JAR_DEPS_DIR=\"${DEPS_DIR}\/ant-jar\"\n-\n-    if [ -n \"${ANT_JAR_URL:-}\" ]; then\n-        ANT_JAR=\"${ANT_JAR_DEPS_DIR}\/$(basename ${ANT_JAR_URL})\"\n-        download_and_checksum \"${ANT_JAR_URL}\" \"${ANT_JAR}\" \"${ANT_JAR_CHECKSUM}\"\n-        return\n-    fi\n-\n-    error \"None of ANT_JAR, ANT_JAR_URL or ANT_JAR_URL_BASE are set\"\n-    exit 1\n-}\n-setup_ant_jar\n-info \"ANT_JAR: ${ANT_JAR}\"\n-\n@@ -903,1 +855,0 @@\n-check_file \"${ANT_JAR}\"\n@@ -927,3 +878,1 @@\n-make ANT=\"${ANT}\"                                             \\\n-     ANT_JAR=\"$(mixed_path \"${ANT_JAR}\")\"                     \\\n-     ASMTOOLS_JAR=\"${ASMTOOLS_JAR}\"                           \\\n+make ASMTOOLS_JAR=\"${ASMTOOLS_JAR}\"                           \\\n","filename":"make\/build.sh","additions":3,"deletions":54,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-\tCLASSPATH=\"$(CLASSDIR)$(PS)$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n+\tCLASSPATH=\"$(CLASSDIR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n@@ -84,1 +84,0 @@\n-\t$(CLASSDIR)\/com\/sun\/javatest\/regtest\/i18n.properties \\\n@@ -182,1 +181,1 @@\n-\t\t-classpath \"$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n+\t\t-classpath \"$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n@@ -192,1 +191,1 @@\n-\t\t-classpath \"$(ANT_JAR)$(PS)$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n+\t\t-classpath \"$(JAVATEST_JAR)$(PS)$(JUNIT_JAR)$(PS)$(TESTNG_JAR)\" \\\n","filename":"make\/jtreg.gmk","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,6 +41,0 @@\n-import org.apache.tools.ant.BuildException;\n-import org.apache.tools.ant.Project;\n-import org.apache.tools.ant.taskdefs.MatchingTask;\n-import org.apache.tools.ant.types.Commandline;\n-\n-import com.sun.javatest.regtest.tool.AntOptionDecoder;\n@@ -122,68 +116,0 @@\n-    \/\/---------- Ant Invovation ------------------------------------------------\n-\n-    public static class Ant extends MatchingTask {\n-        private final Main m = new Main();\n-        private final List<Commandline.Argument> args = new ArrayList<>();\n-        private String format;\n-        private File outFile;\n-        private String title;\n-        private boolean failOnError = true;\n-        private String resultProperty;\n-\n-        public void setFormat(String format) {\n-            this.format = format;\n-        }\n-\n-        public void setOutFile(File outFile) {\n-            this.outFile = outFile;\n-        }\n-\n-        public void setTitle(String title) {\n-            this.title = title;\n-        }\n-\n-        public void setResultProperty(String name) {\n-            this.resultProperty = name;\n-        }\n-\n-        public void setFailOnError(boolean yes) {\n-            this.failOnError = yes;\n-        }\n-\n-        public void addArg(Commandline.Argument arg) {\n-            args.add(arg);\n-        }\n-\n-        @Override\n-        public void execute() {\n-            try {\n-                AntOptionDecoder decoder = new AntOptionDecoder(m.options);\n-                decoder.process(\"format\", format);\n-                decoder.process(\"outFile\", outFile);\n-                decoder.process(\"title\", title);\n-\n-                if (args.size() > 0) {\n-                    List<String> allArgs = new ArrayList<>();\n-                    for (Commandline.Argument a: args)\n-                        allArgs.addAll(Arrays.asList(a.getParts()));\n-                    decoder.decodeArgs(allArgs);\n-                }\n-\n-                boolean ok = m.run();\n-\n-                if (resultProperty != null) {\n-                    Project p = getProject();\n-                    p.setProperty(resultProperty, String.valueOf(ok ? 0 : 1));\n-                }\n-\n-                if (failOnError && !ok)\n-                    throw new BuildException(i18n.getString(\"main.diffsFound\"));\n-\n-            } catch (BadArgs | Fault e) {\n-                throw new BuildException(e.getMessage(), e);\n-            } catch (InterruptedException e) {\n-                throw new BuildException(i18n.getString(\"main.interrupted\"), e);\n-            }\n-        }\n-    }\n-\n","filename":"src\/share\/classes\/com\/sun\/javatest\/diff\/Main.java","additions":1,"deletions":75,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -28,14 +28,0 @@\n-import java.io.File;\n-import java.io.PrintWriter;\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Map;\n-\n-import org.apache.tools.ant.BuildException;\n-import org.apache.tools.ant.DirectoryScanner;\n-import org.apache.tools.ant.Project;\n-import org.apache.tools.ant.taskdefs.MatchingTask;\n-import org.apache.tools.ant.types.Commandline;\n-\n@@ -43,1 +29,0 @@\n-import com.sun.javatest.regtest.tool.AntOptionDecoder;\n@@ -47,0 +32,2 @@\n+import java.io.PrintWriter;\n+\n@@ -111,211 +98,0 @@\n-\n-    \/\/---------- Ant Invocation ------------------------------------------------\n-\n-    \/**\n-     * Ant task to invoke jtreg.\n-     *\/\n-    public static class Ant extends MatchingTask {\n-        private final Tool tool = new Tool();\n-        private File jdk;\n-        private File dir;\n-        private File reportDir;\n-        private File workDir;\n-        private File nativeDir;\n-        private boolean wsl;\n-        private String concurrency;\n-        private String status;\n-        private String vmOption;\n-        private String vmOptions;\n-        private String javacOption;\n-        private String javacOptions;\n-        private String javaOption;\n-        private String javaOptions;\n-        private String verbose;\n-        private boolean agentVM;\n-        private boolean sameVM;\n-        private boolean otherVM;\n-        private Boolean failOnError;  \/\/ yes, no, or unset\n-        private String resultProperty;\n-        private String failureProperty;\n-        private String errorProperty;\n-        private final List<Commandline.Argument> args = new ArrayList<>();\n-\n-        public void setDir(File dir) {\n-            this.dir = dir;\n-        }\n-\n-        public void setReportDir(File reportDir) {\n-            this.reportDir = reportDir;\n-        }\n-\n-        public void setWorkDir(File workDir) {\n-            this.workDir = workDir;\n-        }\n-\n-        public void setNativeDir(File nativeDir) {\n-            this.nativeDir = nativeDir;\n-        }\n-\n-        public void setWSL(boolean wsl) {\n-            this.wsl = wsl;\n-        }\n-\n-        public void setJDK(File jdk) {\n-            this.jdk = jdk;\n-        }\n-\n-        public void setConcurrency(String concurrency) {\n-            this.concurrency = concurrency;\n-        }\n-\n-        \/\/ Should rethink this, and perhaps allow nested vmoption elements.\n-        \/\/ On the other hand, users can give nested <args> for vmoptions too.\n-        public void setVMOption(String vmOpt) {\n-            this.vmOption = vmOpt;\n-        }\n-\n-        public void setVMOptions(String vmOpts) {\n-            this.vmOptions = vmOpts;\n-        }\n-\n-        \/\/ Should rethink this, and perhaps allow nested javacoption elements.\n-        \/\/ On the other hand, users can give nested <args> for vmoptions too.\n-        public void setJavacOption(String javacOpt) {\n-            this.javacOption = javacOpt;\n-        }\n-\n-        public void setJavacOptions(String javacOpts) {\n-            this.javacOptions = javacOpts;\n-        }\n-\n-        \/\/ Should rethink this, and perhaps allow nested javaoption elements.\n-        \/\/ On the other hand, users can give nested <args> for vmoptions too.\n-        public void setJavaOption(String javaOpt) {\n-            this.javaOption = javaOpt;\n-        }\n-\n-        public void setJavaOptions(String javaOpts) {\n-            this.javaOptions = javaOpts;\n-        }\n-\n-        public void setStatus(String status) {\n-            this.status = status;\n-        }\n-\n-        public void setVerbose(String verbose) {\n-            this.verbose = verbose;\n-        }\n-\n-        public void setAgentVM(boolean yes) {\n-            this.agentVM = yes;\n-        }\n-\n-        public void setSameVM(boolean yes) {\n-            this.sameVM = yes;\n-        }\n-\n-        public void setOtherVM(boolean yes) {\n-            this.otherVM = yes;\n-        }\n-\n-        public void setResultProperty(String name) {\n-            this.resultProperty = name;\n-        }\n-\n-        public void setFailureProperty(String name) {\n-            this.failureProperty = name;\n-        }\n-\n-        public void setErrorProperty(String name) {\n-            this.errorProperty = name;\n-        }\n-\n-        public void setFailOnError(boolean yes) {\n-            this.failOnError = yes;\n-        }\n-\n-        public void addArg(Commandline.Argument arg) {\n-            args.add(arg);\n-        }\n-\n-        @Override\n-        public void execute() {\n-            Project p = getProject();\n-\n-            \/\/ import javatest.* properties as system properties\n-            Map<?, ?> properties = p.getProperties();\n-            for (Map.Entry<?, ?> e: properties.entrySet()) {\n-                String key = (String) e.getKey();\n-                if (key.startsWith(\"javatest.\"))\n-                    System.setProperty(key, (String) e.getValue());\n-            }\n-\n-            try {\n-                AntOptionDecoder decoder = new AntOptionDecoder(tool.options);\n-                decoder.process(\"-concurrency\", concurrency);\n-                decoder.process(\"-dir\", dir);\n-                decoder.process(\"-reportDir\", reportDir);\n-                decoder.process(\"-workDir\", workDir);\n-                decoder.process(\"-nativeDir\", nativeDir);\n-                decoder.process(\"-wsl\", wsl);\n-                decoder.process(\"-jdk\", jdk);\n-                decoder.process(\"-verbose\", verbose);\n-                decoder.process(\"-agentVM\", agentVM);\n-                decoder.process(\"-sameVM\", sameVM);\n-                decoder.process(\"-otherVM\", otherVM);\n-                decoder.process(\"-vmoption\", vmOption);\n-                decoder.process(\"-vmoptions\", vmOptions);\n-                decoder.process(\"-javaoption\", javaOption);\n-                decoder.process(\"-javaoptions\", javaOptions);\n-                decoder.process(\"-javacoption\", javacOption);\n-                decoder.process(\"-javacoptions\", javacOptions);\n-                decoder.process(\"-status\", status);\n-\n-                if (args.size() > 0) {\n-                    List<String> allArgs = new ArrayList<>();\n-                    for (Commandline.Argument a: args)\n-                        allArgs.addAll(Arrays.asList(a.getParts()));\n-                    decoder.decodeArgs(allArgs);\n-                }\n-\n-                if (tool.testFileArgs.isEmpty()\n-                        && tool.testFileIdArgs.isEmpty()\n-                        && tool.testGroupArgs.isEmpty()\n-                        && dir != null) {\n-                    DirectoryScanner s = getDirectoryScanner(dir);\n-                    addPaths(dir.toPath(), s.getIncludedFiles());\n-                }\n-\n-                int rc = tool.run();\n-\n-                if (resultProperty != null)\n-                    p.setProperty(resultProperty, String.valueOf(rc));\n-\n-                if (failureProperty != null && (rc >= EXIT_TEST_FAILED))\n-                    p.setProperty(failureProperty, i18n.getString(\"main.testsFailed\"));\n-\n-                if (errorProperty != null && (rc >= EXIT_TEST_ERROR))\n-                    p.setProperty(errorProperty, i18n.getString(\"main.testsError\"));\n-\n-                if (failOnError == null)\n-                    failOnError = (resultProperty == null && failureProperty == null && errorProperty == null);\n-\n-                if (failOnError && rc != EXIT_OK)\n-                    throw new BuildException(i18n.getString(\"main.testsFailed\"));\n-\n-            } catch (BadArgs | Fault | Harness.Fault e) {\n-                throw new BuildException(e.getMessage(), e);\n-            } catch (InterruptedException e) {\n-                throw new BuildException(i18n.getString(\"main.interrupted\"), e);\n-            }\n-        }\n-\n-        private void addPaths(Path dir, String[] paths) {\n-            if (paths != null) {\n-                for (String p: paths)\n-                    tool.antFileArgs.add(dir.resolve(p));\n-            }\n-        }\n-    }\n-\n-    private static I18NResourceBundle i18n = I18NResourceBundle.getBundleForClass(Main.class);\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/Main.java","additions":2,"deletions":226,"binary":false,"changes":228,"status":"modified"},{"patch":"@@ -1,28 +0,0 @@\n-#\n-# Copyright (c) 1999, 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-main.interrupted=Error: Interrupted!\n-main.testsError=Error: Errors occurred while running tests.\n-main.testsFailed=Error: Some tests failed or other problems occurred.\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/i18n.properties","additions":0,"deletions":28,"binary":false,"changes":28,"status":"deleted"},{"patch":"@@ -1,92 +0,0 @@\n-\/*\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.javatest.regtest.tool;\n-\n-import java.io.File;\n-import java.util.List;\n-\n-import com.sun.javatest.regtest.BadArgs;\n-\n-public class AntOptionDecoder extends OptionDecoder {\n-    public AntOptionDecoder(List<Option> options) {\n-        super(options);\n-    }\n-\n-    public void process(String name, boolean value) throws BadArgs {\n-        if (value)\n-            process(name, name);\n-    }\n-\n-    public void process(String name, File value) throws BadArgs {\n-        if (value != null)\n-            process(name, value.getPath());\n-    }\n-\n-    public void process(String name, String value) throws BadArgs {\n-        if (value == null)\n-            return;\n-\n-        Option o = getOption(name);\n-        if (o == null)\n-            throw new AssertionError(\"can't find \" + name);\n-\n-        checkConflicts(o, name);\n-\n-        \/\/ synthesize a command line option in case jtreg gets redispatched\n-        \/\/ in child\n-        String opt;\n-        switch(o.argType) {\n-            case FILE:\n-            case NONE:\n-            case REST:\n-            case GNU:\n-                opt = name;\n-                break;\n-\n-            case OLD:\n-            case STD:\n-                opt = name + \":\" + value;\n-                break;\n-\n-            case OPT:\n-                opt = name + (value == null ? \"\" : \":\" + value);\n-                break;\n-\n-            case WILDCARD:\n-                opt = name + value;\n-                break;\n-\n-            default:\n-                throw new Error();\n-        }\n-\n-        if (debugOptions)\n-            System.err.println(\"AntOptionDecoder.process: \" + name + \" \" + value);\n-\n-        o.process(opt, value);\n-    }\n-\n-}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/AntOptionDecoder.java","additions":0,"deletions":92,"binary":false,"changes":92,"status":"deleted"},{"patch":"@@ -52,1 +52,3 @@\n-\t\t$(BUILDDIR)\/i18n.com.sun.javatest.regtest.ok \\\n+\t\t$(BUILDDIR)\/i18n.com.sun.javatest.regtest.config.ok \\\n+\t\t$(BUILDDIR)\/i18n.com.sun.javatest.regtest.report.ok \\\n+\t\t$(BUILDDIR)\/i18n.com.sun.javatest.regtest.tool.ok \\\n@@ -106,1 +108,3 @@\n-\t\t$(BUILDDIR)\/i18n.com.sun.javatest.regtest.ok \\\n+\t\t$(BUILDDIR)\/i18n.com.sun.javatest.regtest.config.ok \\\n+\t\t$(BUILDDIR)\/i18n.com.sun.javatest.regtest.report.ok \\\n+\t\t$(BUILDDIR)\/i18n.com.sun.javatest.regtest.tool.ok \\\n","filename":"test\/basic\/Basic.gmk","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,7 +35,0 @@\n-$(BUILDDIR)\/i18n.com.sun.javatest.regtest.ok: \\\n-\t\t$(JAVADIR)\/com\/sun\/javatest\/regtest\/i18n.properties \\\n-\t\t$(BUILDDIR)\/classes.com.sun.javatest.regtest.ok \\\n-\t\t$(TESTDIR)\/i18n\/checkI18NProps.sh\n-\t$(SH) $(TESTDIR)\/i18n\/checkI18NProps.sh $(JAVADIR)\/com\/sun\/javatest\/regtest\n-\techo $@ passed at `date` > $@\n-\n@@ -71,1 +64,0 @@\n-    $(BUILDDIR)\/i18n.com.sun.javatest.regtest.ok \\\n@@ -77,1 +69,0 @@\n-    $(BUILDDIR)\/i18n.com.sun.javatest.regtest.ok \\\n","filename":"test\/i18n\/i18n.com.sun.javatest.regtest.gmk","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}