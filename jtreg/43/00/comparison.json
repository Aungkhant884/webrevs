{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,1 @@\n+import com.sun.javatest.regtest.exec.Exclusiveness;\n@@ -218,2 +219,2 @@\n-    public boolean needsExclusiveAccess(TestDescription td) throws TestSuite.Fault {\n-        return properties.needsExclusiveAccess(td.getFile());\n+    public Exclusiveness exclusiveness(TestDescription td) {\n+        return properties.exclusiveness(td.getFile());\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionTestSuite.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+import com.sun.javatest.regtest.exec.Exclusiveness;\n@@ -126,2 +127,5 @@\n-    boolean needsExclusiveAccess(File file) throws TestSuite.Fault {\n-        return getEntry(file).needsExclusiveAccess;\n+    Exclusiveness exclusiveness(File file) {\n+        TestProperties.Cache.Entry entry = getEntry(file);\n+        return entry.exclusiveAccessMachine ? Exclusiveness.MACHINE\n+                : entry.needsExclusiveAccessDirs ? Exclusiveness.DIRECTORY\n+                : Exclusiveness.NONE;\n@@ -203,1 +207,1 @@\n-            final boolean needsExclusiveAccess;\n+            final boolean needsExclusiveAccessDirs;\n@@ -205,0 +209,1 @@\n+            private boolean exclusiveAccessMachine;\n@@ -242,0 +247,1 @@\n+                    exclusiveAccessMachine = getBoolean(\"exclusiveAccess.machine\", false);\n@@ -275,0 +281,1 @@\n+                    exclusiveAccessMachine = parent.exclusiveAccessMachine;\n@@ -287,1 +294,2 @@\n-                needsExclusiveAccess = initNeedsExclusiveAccess(parent, dir);\n+                needsExclusiveAccessDirs = initNeedsExclusiveAccessDirs(parent, dir);\n+                exclusiveAccessMachine = initExclusiveAccessMachine(parent);\n@@ -303,0 +311,9 @@\n+            private boolean getBoolean(String propertyName, boolean defaultValue) {\n+                String v = properties.getProperty(propertyName);\n+                if (v == null) {\n+                    return defaultValue;\n+                } else {\n+                    return Boolean.parseBoolean(v);\n+                }\n+            }\n+\n@@ -402,1 +419,1 @@\n-            private boolean initNeedsExclusiveAccess(Entry parent, File dir) {\n+            private boolean initNeedsExclusiveAccessDirs(Entry parent, File dir) {\n@@ -406,1 +423,1 @@\n-                if (parent.needsExclusiveAccess)\n+                if (parent.needsExclusiveAccessDirs)\n@@ -417,0 +434,5 @@\n+            private boolean initExclusiveAccessMachine(Entry parent) {\n+                return parent == null ? this.exclusiveAccessMachine\n+                                      : parent.exclusiveAccessMachine || this.exclusiveAccessMachine;\n+            }\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/TestProperties.java","additions":29,"deletions":7,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javatest.regtest.exec;\n+\n+\/**\n+ * A scope which a test requires exclusive access to\n+ *\n+ *\/\n+public enum Exclusiveness {NONE, DIRECTORY, MACHINE}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Exclusiveness.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n@@ -56,1 +57,1 @@\n-    public abstract void lock();\n+    public abstract Lock lock(Exclusiveness exclusiveness);\n@@ -62,0 +63,1 @@\n+\n@@ -63,1 +65,2 @@\n-        ReentrantLock lock = new ReentrantLock();\n+        ReentrantReadWriteLock machineLock = new ReentrantReadWriteLock();\n+        ReentrantLock directoryLock = new ReentrantLock();\n@@ -66,2 +69,34 @@\n-        public void lock() {\n-            lock.lock();\n+        public Lock lock(Exclusiveness exclusiveness) {\n+            final java.util.concurrent.locks.Lock l;\n+            if (exclusiveness == Exclusiveness.DIRECTORY) {\n+                l = machineLock.readLock();\n+                l.lock();\n+                directoryLock.lock();\n+                return new Lock() {\n+                    @Override\n+                    public Lock lock(Exclusiveness ignored) {\n+                        throw new UnsupportedOperationException();\n+                    }\n+\n+                    @Override\n+                    public void unlock() {\n+                        directoryLock.unlock();\n+                        l.unlock();\n+                    }\n+                };\n+            } else {\n+                l = exclusiveness == Exclusiveness.MACHINE\n+                        ? machineLock.writeLock() : machineLock.readLock();\n+                l.lock();\n+                return new Lock() {\n+                    @Override\n+                    public Lock lock(Exclusiveness ignored) {\n+                        throw new UnsupportedOperationException();\n+                    }\n+\n+                    @Override\n+                    public void unlock() {\n+                        l.unlock();\n+                    }\n+                };\n+            }\n@@ -72,1 +107,1 @@\n-            lock.unlock();\n+            throw new UnsupportedOperationException();\n@@ -77,1 +112,0 @@\n-        private File file;\n@@ -79,1 +113,0 @@\n-        private FileLock fileLock;\n@@ -83,1 +116,0 @@\n-                this.file = file;\n@@ -94,2 +126,3 @@\n-        public void lock() {\n-            super.lock();\n+        public Lock lock(Exclusiveness exclusiveness) {\n+            final Lock l = super.lock(exclusiveness);\n+            final FileLock fileLock;\n@@ -98,1 +131,1 @@\n-                fileLock = raf.getChannel().lock();\n+                fileLock = raf.getChannel().lock(0, 0, exclusiveness != Exclusiveness.MACHINE);\n@@ -104,1 +137,1 @@\n-                    super.unlock();\n+                    l.unlock();\n@@ -106,0 +139,18 @@\n+\n+            return new Lock() {\n+                @Override\n+                public Lock lock(Exclusiveness ignored) {\n+                    throw new UnsupportedOperationException();\n+                }\n+\n+                @Override\n+                public void unlock() {\n+                    try {\n+                        fileLock.release();\n+                    } catch (IOException e) {\n+                        throw new Error(e);\n+                    } finally {\n+                        l.unlock();\n+                    }\n+                }\n+            };\n@@ -110,7 +161,1 @@\n-            try {\n-                fileLock.release();\n-            } catch (IOException e) {\n-                throw new Error(e);\n-            } finally {\n-                super.unlock();\n-            }\n+            throw new UnsupportedOperationException();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Lock.java","additions":65,"deletions":20,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -341,2 +341,1 @@\n-            Lock lock = script.getLockIfRequired();\n-            if (lock != null) lock.lock();\n+            Lock lock = script.acquireLock();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/MainAction.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1067,9 +1067,2 @@\n-    Lock getLockIfRequired() throws TestRunException {\n-        try {\n-            if (!testSuite.needsExclusiveAccess(td))\n-                return null;\n-        } catch (TestSuite.Fault e) {\n-            throw new TestRunException(\"Can't determine if lock required\", e);\n-        }\n-\n-        return Lock.get(params);\n+    Lock acquireLock() {\n+        return Lock.get(params).lock(testSuite.exclusiveness(td));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,2 +281,1 @@\n-            Lock lock = script.getLockIfRequired();\n-            if (lock != null) lock.lock();\n+            Lock lock = script.acquireLock();\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/ShellAction.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,62 +0,0 @@\n-#\n-# Copyright (c) 2011, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-$(BUILDDIR)\/ExclusiveAccessTest.ref:\n-\t( for t in 1 2 3 4 ; do for i in 1 2 3 4 5 ; do echo \"Test: $$i\" ; done ; done ) > $@\n-\n-$(BUILDDIR)\/ExclusiveAccessTest.single.ok: \\\n-\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n-\t$(BUILDDIR)\/ExclusiveAccessTest.ref\n-\t$(RM) $(@:%.ok=%) && $(MKDIR) $(@:%.ok=%)\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n-\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n-\t\t-jdk:$(JDKHOME) \\\n-\t\t-conc:4 \\\n-\t\t$(TESTDIR)\/exclusive \\\n-\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n-\t    true \"non-zero exit code from JavaTest intentionally ignored\"\n-\t$(GREP) -s 'Test results: passed: 4' $(@:%.ok=%\/jt.log)  > \/dev\/null\n-\t$(DIFF) $(BUILDDIR)\/ExclusiveAccessTest.ref $(@:%.ok=%)\/Test.log\n-\techo \"test passed at `date`\" > $@\n-\n-$(BUILDDIR)\/ExclusiveAccessTest.multi.ok: \\\n-\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n-\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n-\t$(BUILDDIR)\/ExclusiveAccessTest.ref\n-\t$(RM) $(@:%.ok=%) && $(MKDIR) $(@:%.ok=%)\n-\tfor i in 1 2 3 4 ; do \\\n-\t    $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n-\t\t-w:$(@:%.ok=%)\/work.$$i -r:$(@:%.ok=%)\/report.$$i \\\n-\t\t-jdk:$(JDKHOME) \\\n-\t\t-lock:$(@:%.ok=%)\/Test.lck \\\n-\t\t$(TESTDIR)\/exclusive\/dir\/Test$$i.sh \\\n-\t\t\t> $(@:%.ok=%\/jt.$$i.log) 2>&1 & \\\n-        done ; wait\n-\t$(DIFF) $(BUILDDIR)\/ExclusiveAccessTest.ref $(@:%.ok=%)\/Test.log\n-\techo \"test passed at `date`\" > $@\n-\n-TESTS.jtreg += \\\n-\t$(BUILDDIR)\/ExclusiveAccessTest.single.ok\n","filename":"test\/exclusive\/ExclusiveAccessTest.gmk","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/exclusiveAccessDir\/Common.sh","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/exclusive\/dir\/Test.sh","status":"copied"},{"patch":"@@ -0,0 +1,62 @@\n+#\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+$(BUILDDIR)\/ExclusiveAccessDirTest.ref:\n+\t( for i in 1 2 3 4 5 ; do for t in 1 5 6 ; do echo \"Test: $$i\" ; done ; done; for t in 2 3 4 ; do for i in 1 2 3 4 5 ; do echo \"Test: $$i\" ; done ; done) > $@\n+\n+$(BUILDDIR)\/ExclusiveAccessDirTest.single.ok: \\\n+\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\t$(BUILDDIR)\/ExclusiveAccessDirTest.ref\n+\t$(RM) $(@:%.ok=%) && $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-conc:6 \\\n+\t\t$(TESTDIR)\/exclusiveAccessDir \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from JavaTest intentionally ignored\"\n+\t$(GREP) -s 'Test results: passed: 6' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\t$(DIFF) $(BUILDDIR)\/ExclusiveAccessDirTest.ref $(@:%.ok=%)\/Test.log\n+\techo \"test passed at `date`\" > $@\n+\n+$(BUILDDIR)\/ExclusiveAccessDirTest.multi.ok: \\\n+\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\t$(BUILDDIR)\/ExclusiveAccessDirTest.ref\n+\t$(RM) $(@:%.ok=%) && $(MKDIR) $(@:%.ok=%)\n+\tfor i in 1 2 3 4 ; do \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work.$$i -r:$(@:%.ok=%)\/report.$$i \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-lock:$(@:%.ok=%)\/Test.lck \\\n+\t\t$(TESTDIR)\/exclusiveAccessDir\/exclusive\/Test$$i.sh \\\n+\t\t\t> $(@:%.ok=%\/jt.$$i.log) 2>&1 & \\\n+        done ; wait\n+\t$(DIFF) $(BUILDDIR)\/ExclusiveAccessDirTest.ref $(@:%.ok=%)\/Test.log\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDDIR)\/ExclusiveAccessDirTest.single.ok\n","filename":"test\/exclusiveAccessDir\/ExclusiveAccessDirTest.gmk","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-exclusiveAccess.dirs = dir\n+exclusiveAccess.dirs = exclusive\n","filename":"test\/exclusiveAccessDir\/TEST.ROOT","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/TEST.ROOT","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell ..\/Common.sh\n","filename":"test\/exclusiveAccessDir\/concurrent\/Test5.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test2.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell ..\/Common.sh\n","filename":"test\/exclusiveAccessDir\/concurrent\/Test6.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test2.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell ..\/Common.sh\n","filename":"test\/exclusiveAccessDir\/exclusive\/Test1.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test1.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell ..\/Common.sh\n","filename":"test\/exclusiveAccessDir\/exclusive\/Test2.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test2.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell ..\/Common.sh\n","filename":"test\/exclusiveAccessDir\/exclusive\/Test3.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test3.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell ..\/Common.sh\n","filename":"test\/exclusiveAccessDir\/exclusive\/Test4.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test4.sh","status":"copied"},{"patch":"@@ -0,0 +1,50 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+$(BUILDDIR)\/ExclusiveAccessMachineTest.ref:\n+\t( for t in 1 2 3 4 5 6 ; do for i in 1 2 3 4 5 ; do echo \"Test: $$i\" ; done ; done ) > $@\n+\n+$(BUILDDIR)\/ExclusiveAccessMachineTest.ok: \\\n+\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg \\\n+\t$(BUILDDIR)\/ExclusiveAccessMachineTest.ref\n+\t$(RM) $(@:%.ok=%) && $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-conc:6 \\\n+\t\t$(TESTDIR)\/exclusiveAccessMachine \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t    true \"non-zero exit code from JavaTest intentionally ignored\"\n+\t$(GREP) -s 'Test results: passed: 8' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\t# All exclusives should be uninterrupted\n+\tcat $(@:%.ok=%)\/Test.log | $(GREP) \"Exclusive\" | $(DIFF) $(TESTDIR)\/exclusiveAccessMachine\/expect-exclusive.txt -\n+\t# There should be at least one parallel run (Two consequent 'Test: 1' lines)\n+\tcat $(@:%.ok=%)\/Test.log | \\\n+\t\tawk 'BEGIN {rc=1} ; \/Concurrent: 1\/ {if (found==1) { rc=0 } else {found=1}}; !\/Concurrent: 1\/ {found=0}; END { exit rc} '\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDDIR)\/ExclusiveAccessMachineTest.ok\n","filename":"test\/exclusiveAccessMachine\/ExclusiveAccessMachineTest.gmk","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-exclusiveAccess.dirs = dir\n-\n","filename":"test\/exclusiveAccessMachine\/TEST.ROOT","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/TEST.ROOT","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    echo \"Test: $i\" >> $logfile\n+    echo \"Concurrent: $i\" >> $logfile\n","filename":"test\/exclusiveAccessMachine\/concurrent\/Common.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell Common.sh\n","filename":"test\/exclusiveAccessMachine\/concurrent\/Test4.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test4.sh","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell Common.sh\n","filename":"test\/exclusiveAccessMachine\/concurrent\/Test5.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test3.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell Common.sh\n","filename":"test\/exclusiveAccessMachine\/concurrent\/Test6.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test3.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell Common.sh\n","filename":"test\/exclusiveAccessMachine\/concurrent\/Test7.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test3.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell Common.sh\n","filename":"test\/exclusiveAccessMachine\/concurrent\/Test8.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test3.sh","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n-for i in 1 2 3 4 5 ; do\n-    echo \"Test: $i\" >> $logfile\n+for i in 1 2 3 4 ; do\n+    echo -n \"Exclusive: $i \" >> $logfile\n@@ -44,0 +44,2 @@\n+echo \"Exclusive 5\" >> $logfile\n+sleep 1\n","filename":"test\/exclusiveAccessMachine\/exclusive\/Common.sh","additions":5,"deletions":3,"binary":false,"changes":8,"previous_filename":"test\/exclusive\/dir\/Test.sh","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,1 @@\n-lib.dirs = \/lib\n-\n+exclusiveAccess.machine=true\n","filename":"test\/exclusiveAccessMachine\/exclusive\/TEST.properties","additions":2,"deletions":3,"binary":false,"changes":5,"previous_filename":"test\/testng\/tngAbsLib\/TEST.properties","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell Common.sh\n","filename":"test\/exclusiveAccessMachine\/exclusive\/Test1.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test1.sh","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell Common.sh\n","filename":"test\/exclusiveAccessMachine\/exclusive\/Test2.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test2.sh","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-# @run shell Test.sh\n+# @run shell Common.sh\n","filename":"test\/exclusiveAccessMachine\/exclusive\/Test3.sh","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/exclusive\/dir\/Test3.sh","status":"renamed"},{"patch":"@@ -0,0 +1,3 @@\n+Exclusive: 1 Exclusive: 2 Exclusive: 3 Exclusive: 4 Exclusive 5\n+Exclusive: 1 Exclusive: 2 Exclusive: 3 Exclusive: 4 Exclusive 5\n+Exclusive: 1 Exclusive: 2 Exclusive: 3 Exclusive: 4 Exclusive 5\n","filename":"test\/exclusiveAccessMachine\/expect-exclusive.txt","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"}]}