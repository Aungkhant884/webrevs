{"files":[{"patch":"@@ -257,38 +257,19 @@\n-                    \/\/ at the timeout, as the last resort, we will exit all the (possibly hanging),\n-                    \/\/ descendants of the process, in the hope that doing so will unstuck the process itself\n-                    public void run() {\n-                        long pid = getTimeoutHandler().getProcessId(process);\n-                        Optional<ProcessHandle> oph = ProcessHandle.of(pid);\n-                        if (oph.isPresent()) {\n-                            ProcessHandle processHandle = oph.get();\n-                            Stream<ProcessHandle> descendants = processHandle.descendants();\n-                            long count = descendants.count();\n-                            if (count > 0) {\n-                                OutputStream processOut = process.getOutputStream();  \/\/ input stream to process\n-                                if (processOut != null) {\n-                                    try {\n-                                        processOut.write(new String(\"Detected a possibly stuck process (pid:\"+pid+\") with \"+count+\" descendants\").getBytes());\n-                                        processOut.write(new String(\"Attempting to kill:\").getBytes());\n-                                    } catch (IOException e) {\n-                                        \/\/ ignore\n-                                    }\n-                                }\n-                                descendants = processHandle.descendants();\n-                                if (processOut != null) {\n-                                    List<Long> pids = new java.util.ArrayList<Long>();\n-                                    descendants.forEachOrdered(child -> pids.add(Long.valueOf(child.pid())));\n-                                    try {\n-                                        for (Long l : pids) {\n-                                            processOut.write(new String(\" child process with pid:\"+l.longValue()).getBytes());\n-                                        }\n-                                        processOut.flush();\n-                                    } catch (IOException e) {\n-                                        \/\/ ignore\n-                                    }\n-                                }\n-                                descendants = processHandle.descendants();\n-                                descendants.forEachOrdered(child -> child.destroy());\n-                                descendants = processHandle.descendants();\n-                                descendants.forEachOrdered(child -> child.destroyForcibly());\n-                            }\n-                        }\n+                  \/\/ at the timeout, as the last resort, we will exit all the (possibly hanging),\n+                  \/\/ descendants of the process, in the hope that doing so will unstuck the process itself\n+                  public void run() {\n+                    long pid = getTimeoutHandler().getProcessId(process);\n+                    Optional<ProcessHandle> oph = ProcessHandle.of(pid);\n+                    if (oph.isPresent()) {\n+                      ProcessHandle processHandle = oph.get();\n+                      Stream<ProcessHandle> descendants = processHandle.descendants();\n+                      long count = descendants.count();\n+                      if (count > 0) {\n+                        err.println(\"Detected a possibly stuck process (pid:\"+pid+\") with \"+count+\" descendants\");\n+                        err.println(\"Attempting to kill:\");\n+                        descendants = processHandle.descendants();\n+                        descendants.forEachOrdered(child -> err.println(\" child process with pid:\"+child.pid()));\n+                        descendants = processHandle.descendants();\n+                        descendants.forEachOrdered(child -> child.destroy());\n+                        descendants = processHandle.descendants();\n+                        descendants.forEachOrdered(child -> child.destroyForcibly());\n+                      }\n@@ -296,0 +277,1 @@\n+                  }\n@@ -298,4 +280,4 @@\n-                    \/\/ if we reach here, then we tried everything and the only option now is to timeout\n-                    public void run() {\n-                        invokeTimeoutHandler(timeoutHandler, timeoutHandlerDone, process, victim);\n-                    }\n+                  \/\/ if we reach here, then we tried everything and the only option now is to timeout\n+                  public void run() {\n+                    invokeTimeoutHandler(timeoutHandler, timeoutHandlerDone, process, victim);\n+                  }\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/ProcessCommand.java","additions":24,"deletions":42,"binary":false,"changes":66,"status":"modified"}]}