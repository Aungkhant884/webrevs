{"files":[{"patch":"@@ -0,0 +1,3 @@\n+# Default ignored files\n+\/shelf\/\n+\/workspace.xml\n","filename":"plugins\/idea\/.idea\/.gitignore","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -1,1 +0,0 @@\n-jtreg-plugin\n\\ No newline at end of file\n","filename":"plugins\/idea\/.idea\/.name","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"CompilerConfiguration\">\n-    <resourceExtensions \/>\n-    <wildcardResourcePatterns>\n-      <entry name=\"!?*.java\" \/>\n-      <entry name=\"!?*.form\" \/>\n-      <entry name=\"!?*.class\" \/>\n-      <entry name=\"!?*.groovy\" \/>\n-      <entry name=\"!?*.scala\" \/>\n-      <entry name=\"!?*.flex\" \/>\n-      <entry name=\"!?*.kt\" \/>\n-      <entry name=\"!?*.clj\" \/>\n-      <entry name=\"!?*.aj\" \/>\n-    <\/wildcardResourcePatterns>\n-    <annotationProcessing>\n-      <profile default=\"true\" name=\"Default\" enabled=\"false\">\n-        <processorPath useClasspath=\"true\" \/>\n-      <\/profile>\n-    <\/annotationProcessing>\n-  <\/component>\n-<\/project>\n\\ No newline at end of file\n","filename":"plugins\/idea\/.idea\/compiler.xml","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" \/>\n+  <component name=\"GradleSettings\">\n+    <option name=\"linkedExternalProjectsSettings\">\n+      <GradleProjectSettings>\n+        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" \/>\n+        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" \/>\n+        <option name=\"modules\">\n+          <set>\n+            <option value=\"$PROJECT_DIR$\" \/>\n+          <\/set>\n+        <\/option>\n+      <\/GradleProjectSettings>\n+    <\/option>\n+  <\/component>\n+<\/project>\n\\ No newline at end of file\n","filename":"plugins\/idea\/.idea\/gradle.xml","additions":17,"deletions":0,"binary":false,"changes":17,"status":"added"},{"patch":"@@ -1,40 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"PLUGIN_MODULE\" version=\"4\">\n-  <component name=\"DevKit.ModuleBuildProperties\" url=\"file:\/\/$MODULE_DIR$\/resources\/META-INF\/plugin.xml\" \/>\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/src\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"jdk\" jdkName=\"IDEA JDK\" jdkType=\"IDEA JDK\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module-library\" scope=\"PROVIDED\">\n-      <library>\n-        <CLASSES>\n-          <root url=\"jar:\/\/$APPLICATION_HOME_DIR$\/plugins\/ant\/lib\/antIntegration.jar!\/\" \/>\n-        <\/CLASSES>\n-        <JAVADOC \/>\n-        <SOURCES \/>\n-      <\/library>\n-    <\/orderEntry>\n-    <orderEntry type=\"module-library\" scope=\"PROVIDED\">\n-      <library>\n-        <CLASSES>\n-          <root url=\"jar:\/\/$APPLICATION_HOME_DIR$\/plugins\/testng\/lib\/testng-plugin.jar!\/\" \/>\n-        <\/CLASSES>\n-        <JAVADOC \/>\n-        <SOURCES \/>\n-      <\/library>\n-    <\/orderEntry>\n-    <orderEntry type=\"module-library\" scope=\"PROVIDED\">\n-      <library>\n-        <CLASSES>\n-          <root url=\"jar:\/\/$JTREG_HOME$\/lib\/javatest.jar!\/\" \/>\n-        <\/CLASSES>\n-        <JAVADOC \/>\n-        <SOURCES \/>\n-      <\/library>\n-    <\/orderEntry>\n-  <\/component>\n-<\/module>\n\\ No newline at end of file\n","filename":"plugins\/idea\/.idea\/jtreg-plugin.iml","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -3,2 +3,3 @@\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"false\" project-jdk-name=\"IDEA JDK\" project-jdk-type=\"IDEA JDK\">\n-    <output url=\"file:\/\/$PROJECT_DIR$\/build\" \/>\n+  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" \/>\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_16\" default=\"true\" project-jdk-name=\"panama\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file:\/\/$PROJECT_DIR$\/out\" \/>\n","filename":"plugins\/idea\/.idea\/misc.xml","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/.idea\/jtreg-plugin.iml\" filepath=\"$PROJECT_DIR$\/.idea\/jtreg-plugin.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/.idea\/modules\/jtreg-plugin.iml\" filepath=\"$PROJECT_DIR$\/.idea\/modules\/jtreg-plugin.iml\" \/>\n@@ -8,1 +8,1 @@\n-<\/project>\n+<\/project>\n\\ No newline at end of file\n","filename":"plugins\/idea\/.idea\/modules.xml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,10 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module external.linked.project.id=\"jtreg-plugin-gradle\" external.linked.project.path=\"$MODULE_DIR$\/..\/..\" external.root.project.path=\"$MODULE_DIR$\/..\/..\" external.system.id=\"GRADLE\" type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/..\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/..\/src\/main\/java\" isTestSource=\"false\" \/>\n+    <\/content>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+  <\/component>\n+<\/module>\n\\ No newline at end of file\n","filename":"plugins\/idea\/.idea\/modules\/jtreg-plugin.iml","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -1,9 +0,0 @@\n-<component name=\"ProjectRunConfigurationManager\">\n-  <configuration default=\"false\" name=\"jtreg-plugin\" type=\"#org.jetbrains.idea.devkit.run.PluginConfigurationType\" factoryName=\"Plugin\">\n-    <module name=\"jtreg-plugin\" \/>\n-    <option name=\"VM_PARAMETERS\" value=\"-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea\" \/>\n-    <option name=\"PROGRAM_PARAMETERS\" value=\"\" \/>\n-    <predefined_log_file id=\"idea.log\" enabled=\"true\" \/>\n-    <method \/>\n-  <\/configuration>\n-<\/component>\n\\ No newline at end of file\n","filename":"plugins\/idea\/.idea\/runConfigurations\/jtreg_plugin.xml","additions":0,"deletions":9,"binary":false,"changes":9,"status":"deleted"},{"patch":"@@ -4,1 +4,1 @@\n-    <mapping directory=\"$PROJECT_DIR$\/..\/..\" vcs=\"hg4idea\" \/>\n+    <mapping directory=\"$PROJECT_DIR$\/..\/..\" vcs=\"Git\" \/>\n","filename":"plugins\/idea\/.idea\/vcs.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-##### *Maurizio Cimadamore and Chris Hegarty, September 2016, version 0.3*\n+##### *Maurizio Cimadamore and Chris Hegarty, September 2016, version 0.4*\n@@ -7,0 +7,5 @@\n+### Changes from 0.3\n+\n+* updated build instructions for new gradle build\n+* added note on known issue when debugging with multiple test actions\n+\n@@ -26,3 +31,5 @@\n-   |-src (plugin sources)\n-   |-build (where build files are stored)\n-   |-resources (plugin resources - the plugin.xml file lives here)\n+   |-src\n+     |-main\n+       |-java (plugin sources)\n+       |-resources (plugin resources - the plugin.xml file lives here)\n+   |-build (where build files are stored)   \n@@ -30,0 +37,2 @@\n+   |-build.gradle (the gradle build file)\n+   |-gradle.properties (contains properties required to build this project)\n@@ -34,1 +43,0 @@\n-To build the plugin, you need to have IntelliJ installed. From IntelliJ, simply browse to the location of this folder, and open it as an IntelliJ project. The project can be built by clicking on `Build -> Build Project`. Once this step is done, you should be able to run\/debug the plugin.\n@@ -36,1 +44,3 @@\n-Note: You might need to tweak the IDE project settings to correctly configure the plugin project. The two following steps are required:\n+This plugin can be built with `gradle`. To build the plugin, simply run the following command from the `idea` folder:\n+\n+`sh gradlew clean build`\n@@ -38,1 +48,1 @@\n-* When the IDE project for the plugin is first opened, IntelliJ will complain about the lack of a path variable called `JTREG_HOME`. Please follow the IDE instructions, and set this path variable to point to the root of your jtreg build output or your jtreg installation (`JTREG_HOME\/libs\/javatest.jar` must exist). The setting can also be found in under `Settings -> Appearance and Behavior -> Path Variables`. This step is required as the project depends on some of the jtreg libraries.\n+This will download the required IntelliJ dependencies, will build the plugin and will place the results in the `build\/distributions` folder.\n@@ -40,3 +50,5 @@\n-* You need to create an Intellij SDK and name it `IDEA JDK` for the project to work correctly. To create a new SDK, click on `File -> Project Structure`. When the dialog opens, click on the `SDKs` entry in the left pane, and add a new SDK (by clicking on the *plus* icon). The SDK we want to create is an 'IntelliJ Platform Plugin SDK'. Once the new SDK type has been selected, you will have to tell IntelliJ what's the SDK path - you will see that IntelliJ will already point to the folder containing your IntelliJ installation - that is a fine choice. Rename it to `IDEA JDK`. Secondly, you will have to tell IntelliJ which JDK to use together with the plugin SDK. Any JDK 8 (or greater) is a fine choice here.\n-  \n-Note: by running the plugin here we mean running it in a sandbox environment - for truly installing the plugin in your IDE, see the steps below.\n+> Note: to build the plugin, the build script must point to a valid jtreg installation; see the property `jtregHome` in the `gradle.properties` file, and tweak accordingly.\n+\n+Once the build is configured correctly, the plugin can even be tested in a sandbox environment, as follows:\n+\n+`sh gradlew runIde`\n@@ -46,1 +58,1 @@\n-To install the plugin in your IDE, first you need to prepare a plugin module file (a `.jar` file). This can be done by selecting `Build -> Prepare Plugin Module for Deployment`. Once that is done, a new jar file should be created under the hidden `.idea` folder (and a related pop up notification should appear).\n+To install the plugin in your IDE, first you need to build a plugin module file (a `.jar` file), as described in the previous section.\n@@ -48,1 +60,1 @@\n-Once you have a jar file, you can easily install it in your IDE; go in `File -> Settings`, and select `Plugins` from the right panel. Then click on `Install plugin from disk` and point the IDE to the zip file you have created in the step above. The IDE will ask you to restart - once restart is completed the installation process is completed, and the plugin is ready to be used to run and debug jtreg tests.\n+Once the plugin jar has been obtained, it can be installed in the IDE; go in `File -> Settings`, and select `Plugins` from the right panel. Then click on `Install plugin from disk` and point the IDE to the zip file you have created in the step above. The IDE will require a restart - once restart is completed the installation process is completed, and the plugin is ready to be used to run and debug jtreg tests.\n@@ -86,0 +98,2 @@\n+> Note: debugging only works with a _single_ test action (e.g. `@run` or `@compile`). If multiple test actions are present, debugging will not work correctly. This is a known issue. To workaround, please manually remove the test actions that do not need to be debugged. \n+\n@@ -115,1 +129,1 @@\n-In the unfortunate case you run into a plugin bug, you will notice a red mark in the bottom right part of the IDE. If you click on that icon, you will have the ability to show the stack trace associated with the error (and you will also be offered the option of disabling the plugin). If you want to report a bug against the jtreg plugin, we recommend that you copy the stack trace along with the IDE log file (this can be found under `Help -> Show Log in Files`) and submit them along with a description of the experienced buggy behavior. Please forward such bug reports to `jtreg-dev@openjdk.java.net`.\n+In the unfortunate case you run into a plugin bug, you will notice a red mark in the bottom right part of the IDE. If you click on that icon, you will have the ability to show the stack trace associated with the error (and you will also be offered the option of disabling the plugin). If you want to report a bug against the jtreg plugin, we recommend that you copy the stack trace along with the IDE log file (this can be found under `Help -> Show Log in Files`) and submit them along with a description of the experienced buggy behavior. Please forward such bug reports to `jtreg-dev@openjdk.java.net`, or `ide-support-dev@openjdk.java.net` \n","filename":"plugins\/idea\/README.md","additions":27,"deletions":13,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -0,0 +1,30 @@\n+plugins {\n+    id 'java'\n+    id 'org.jetbrains.intellij' version '0.7.3'\n+}\n+\n+def jtregLib = jtregHome + File.separator + \"lib\" + File.separator + \"jtreg.jar\"\n+\n+assert file(jtregLib).exists() : \"\"\"Could not find jtreg in ${jtregHome}.\n+Please make sure that 'jtregHome' in 'gradle.properties' points to a valid jtreg root.\n+\"\"\"\n+\n+version '1.12'\n+\n+repositories {\n+    mavenCentral()\n+}\n+\n+dependencies {\n+    implementation files(jtregLib)\n+}\n+\n+\/\/ See https:\/\/github.com\/JetBrains\/gradle-intellij-plugin\/\n+intellij {\n+    version intellijVersion\n+    plugins = ['java', 'AntSupport', 'TestNG-J']\n+}\n+\n+patchPluginXml {\n+    changeNotes notes\n+}\n","filename":"plugins\/idea\/build.gradle","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+jtregHome = \/opt\/jtreg\/4.2\/jtreg\n+intellijVersion = 2021.1.1\n+notes = <ul>\\\n+<li>Fix compatibility with 2020.3<\/li>\\\n+<\/ul>\n","filename":"plugins\/idea\/gradle.properties","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"filename":"plugins\/idea\/gradle\/wrapper\/gradle-wrapper.jar","binary":true,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper\/dists\n+distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-7.0-bin.zip\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper\/dists\n","filename":"plugins\/idea\/gradle\/wrapper\/gradle-wrapper.properties","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,185 @@\n+#!\/usr\/bin\/env sh\n+\n+#\n+# Copyright 2015 the original author or authors.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      https:\/\/www.apache.org\/licenses\/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '\/.*' > \/dev\/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"\/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`\/\" >\/dev\/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >\/dev\/null\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn () {\n+    echo \"$*\"\n+}\n+\n+die () {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+nonstop=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+  NONSTOP* )\n+    nonstop=true\n+    ;;\n+esac\n+\n+CLASSPATH=$APP_HOME\/gradle\/wrapper\/gradle-wrapper.jar\n+\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME\/jre\/sh\/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME\/jre\/sh\/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME\/bin\/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >\/dev\/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME\/media\/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin or MSYS, switch paths to Windows format before running java\n+if [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L \/ -maxdepth 1 -mindepth 1 -type d 2>\/dev\/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to \/bin\/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=`expr $i + 1`\n+    done\n+    case $i in\n+        0) set -- ;;\n+        1) set -- \"$args0\" ;;\n+        2) set -- \"$args0\" \"$args1\" ;;\n+        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Escape application args\n+save () {\n+    for i do printf %s\\\\n \"$i\" | sed \"s\/'\/'\\\\\\\\''\/g;1s\/^\/'\/;\\$s\/\\$\/' \\\\\\\\\/\" ; done\n+    echo \" \"\n+}\n+APP_ARGS=`save \"$@\"`\n+\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+exec \"$JAVACMD\" \"$@\"\n","filename":"plugins\/idea\/gradlew","additions":185,"deletions":0,"binary":false,"changes":185,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+@rem\r\n+@rem Copyright 2015 the original author or authors.\r\n+@rem\r\n+@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+@rem you may not use this file except in compliance with the License.\r\n+@rem You may obtain a copy of the License at\r\n+@rem\r\n+@rem      https:\/\/www.apache.org\/licenses\/LICENSE-2.0\r\n+@rem\r\n+@rem Unless required by applicable law or agreed to in writing, software\r\n+@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+@rem See the License for the specific language governing permissions and\r\n+@rem limitations under the License.\r\n+@rem\r\n+\r\n+@if \"%DEBUG%\" == \"\" @echo off\r\n+@rem ##########################################################################\r\n+@rem\r\n+@rem  Gradle startup script for Windows\r\n+@rem\r\n+@rem ##########################################################################\r\n+\r\n+@rem Set local scope for the variables with windows NT shell\r\n+if \"%OS%\"==\"Windows_NT\" setlocal\r\n+\r\n+set DIRNAME=%~dp0\r\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\r\n+set APP_BASE_NAME=%~n0\r\n+set APP_HOME=%DIRNAME%\r\n+\r\n+@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\n+for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n+\r\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\n+set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n+\r\n+@rem Find java.exe\r\n+if defined JAVA_HOME goto findJavaFromJavaHome\r\n+\r\n+set JAVA_EXE=java.exe\r\n+%JAVA_EXE% -version >NUL 2>&1\r\n+if \"%ERRORLEVEL%\" == \"0\" goto execute\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:findJavaFromJavaHome\r\n+set JAVA_HOME=%JAVA_HOME:\"=%\r\n+set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe\r\n+\r\n+if exist \"%JAVA_EXE%\" goto execute\r\n+\r\n+echo.\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n+echo.\r\n+echo Please set the JAVA_HOME variable in your environment to match the\r\n+echo location of your Java installation.\r\n+\r\n+goto fail\r\n+\r\n+:execute\r\n+@rem Setup the command line\r\n+\r\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n+\r\n+\r\n+@rem Execute Gradle\r\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n+\r\n+:end\r\n+@rem End local scope for the variables with windows NT shell\r\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n+\r\n+:fail\r\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\n+rem the _cmd.exe \/c_ return code!\r\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\n+exit \/b 1\r\n+\r\n+:mainEnd\r\n+if \"%OS%\"==\"Windows_NT\" endlocal\r\n+\r\n+:omega\r\n","filename":"plugins\/idea\/gradlew.bat","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+rootProject.name = 'jtreg-plugin-gradle'\n+\n","filename":"plugins\/idea\/settings.gradle","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/components\/JTRegApplicationComponent.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/components\/JTRegApplicationComponent.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/components\/JTRegFileManagerListener.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/components\/JTRegFileManagerListener.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfiguration.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfiguration.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfigurationConsoleProperties.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfigurationConsoleProperties.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfigurationRunnableState.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfigurationRunnableState.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfigurationType.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfigurationType.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegClassConfigurationProducer.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegClassConfigurationProducer.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegConfigurationProducer.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegConfigurationProducer.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegDirectoryConfigurationProducer.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegDirectoryConfigurationProducer.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/ui\/JTRegConfigurable.form","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/ui\/JTRegConfigurable.form","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/ui\/JTRegConfigurable.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/configuration\/ui\/JTRegConfigurable.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/executors\/JTRegDebuggerRunner.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/executors\/JTRegDebuggerRunner.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/runtime\/JTRegTestListener.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/runtime\/JTRegTestListener.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/service\/JTRegService.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/service\/JTRegService.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/service\/ui\/JTRegServiceConfigurable.form","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/service\/ui\/JTRegServiceConfigurable.form","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/service\/ui\/JTRegServiceConfigurable.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/service\/ui\/JTRegServiceConfigurable.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/templates\/JTRegTemplateProvider.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/templates\/JTRegTemplateProvider.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/util\/JTRegTagParser.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/util\/JTRegTagParser.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/util\/JTRegUtils.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/util\/JTRegUtils.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/util\/MapSerializerUtil.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/util\/MapSerializerUtil.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/util\/Tag.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/com\/oracle\/plugin\/jtreg\/util\/Tag.java","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/java\/icons\/JTRegPluginIcons.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/src\/icons\/JTRegPluginIcons.java","status":"renamed"},{"patch":"@@ -29,1 +29,0 @@\n-    <version>1.12<\/version>\n@@ -34,9 +33,0 @@\n-    <change-notes><![CDATA[\n-    <ul>\n-      <li>Fix compatibility with 2020.3<\/li>\n-    <\/ul>\n-    ]]>\n-    <\/change-notes>\n-\n-    <idea-version since-build=\"162.0\"\/>\n-\n","filename":"plugins\/idea\/src\/main\/resources\/META-INF\/plugin.xml","additions":0,"deletions":10,"binary":false,"changes":10,"previous_filename":"plugins\/idea\/resources\/META-INF\/plugin.xml","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/resources\/com\/oracle\/plugin\/jtreg\/icons\/JavaCup16.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/resources\/com\/oracle\/plugin\/jtreg\/icons\/JavaCup16.png","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/resources\/com\/oracle\/plugin\/jtreg\/icons\/JavaCup32.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/resources\/com\/oracle\/plugin\/jtreg\/icons\/JavaCup32.png","status":"renamed"},{"patch":"","filename":"plugins\/idea\/src\/main\/resources\/liveTemplates\/jtreg.xml","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"plugins\/idea\/resources\/liveTemplates\/jtreg.xml","status":"renamed"}]}