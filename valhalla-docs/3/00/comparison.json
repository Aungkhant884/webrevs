{"files":[{"patch":"@@ -192,1 +192,1 @@\n-Identity effectively requires that an object live in exactly one place, and if\n+Identity effectively requires that an object lives in exactly one place, and if\n@@ -205,1 +205,1 @@\n-layout-polymorphic -- but in return for giving up these characteristics, are be\n+layout-polymorphic -- but in return for giving up these characteristics, are \n","filename":"site\/design-notes\/state-of-valhalla\/01-background.md","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-any other `int` value of \"3\".  Values are atomic (its parts cannot be updated\n+any other `int` value of \"3\".  Values are atomic (their parts cannot be updated\n@@ -58,1 +58,1 @@\n-The design of primitives represents various tradeoffs aimed at maximing\n+The design of primitives represents various tradeoffs aimed at maximizing\n@@ -80,1 +80,1 @@\n-Valhalla aims to unify primitives and objects in that that they can both be\n+Valhalla aims to unify primitives and objects in that they can both be\n@@ -340,1 +340,1 @@\n-will behave as if both sides were lifted to the approrpriate reference\n+will behave as if both sides were lifted to the appropriate reference\n@@ -364,1 +364,1 @@\n-reference companion (though no actual boxing need occur).  Evaluating `a == b`,\n+reference companion (though no actual boxing needs to occur.)  Evaluating `a == b`,\n","filename":"site\/design-notes\/state-of-valhalla\/02-object-model.md","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}