{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,0 @@\n-  inline bool pop_object(oop& obj);\n-  inline bool pop_objarray(ObjArrayTask& array);\n@@ -83,0 +81,8 @@\n+\n+  inline void drain_oop_stack();\n+  \/\/ Transfer contents from the objArray task queue overflow stack to the shared\n+  \/\/ objArray stack.\n+  \/\/ Returns true and a valid task if there has not been enough space in the shared\n+  \/\/ objArray stack, otherwise the task is invalid.\n+  inline bool transfer_objArray_overflow_stack(ObjArrayTask& task);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.hpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,4 +96,0 @@\n-inline bool G1FullGCMarker::pop_object(oop& oop) {\n-  return _oop_stack.pop_overflow(oop) || _oop_stack.pop_local(oop);\n-}\n-\n@@ -106,4 +102,0 @@\n-inline bool G1FullGCMarker::pop_objarray(ObjArrayTask& arr) {\n-  return _objarray_stack.pop_overflow(arr) || _objarray_stack.pop_local(arr);\n-}\n-\n@@ -164,4 +156,4 @@\n-void G1FullGCMarker::drain_stack() {\n-  do {\n-    oop obj;\n-    while (pop_object(obj)) {\n+inline void G1FullGCMarker::drain_oop_stack() {\n+  oop obj;\n+  while (_oop_stack.pop_overflow(obj)) {\n+    if (!_oop_stack.try_push_to_taskqueue(obj)) {\n@@ -171,1 +163,24 @@\n-    \/\/ Process ObjArrays one at a time to avoid marking stack bloat.\n+  }\n+  while (_oop_stack.pop_local(obj)) {\n+    assert(_bitmap->is_marked(obj), \"must be marked\");\n+    follow_object(obj);\n+  }\n+}\n+\n+inline bool G1FullGCMarker::transfer_objArray_overflow_stack(ObjArrayTask& task) {\n+  \/\/ It is desirable to move as much as possible work from the overflow queue to\n+  \/\/ the shared queue as quickly as possible.\n+  while (_objarray_stack.pop_overflow(task)) {\n+    if (!_objarray_stack.try_push_to_taskqueue(task)) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n+void G1FullGCMarker::drain_stack() {\n+  do {\n+    \/\/ First, drain regular oop stack.\n+    drain_oop_stack();\n+\n+    \/\/ Then process ObjArrays one at a time to avoid marking stack bloat.\n@@ -173,1 +188,2 @@\n-    if (pop_objarray(task)) {\n+    if (transfer_objArray_overflow_stack(task) ||\n+      _objarray_stack.pop_local(task)) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":31,"deletions":15,"binary":false,"changes":46,"status":"modified"}]}