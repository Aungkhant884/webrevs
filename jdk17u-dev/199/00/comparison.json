{"files":[{"patch":"@@ -1189,1 +1189,3 @@\n-                for (;; U1 = (rng.nextLong() >>> 1)) {\n+                \/\/ At this point, the high-order bits of U1 have not been used yet,\n+                \/\/ but we need the value in U1 to be positive.\n+                for (U1 = (U1 >>> 1);; U1 = (rng.nextLong() >>> 1)) {\n@@ -1191,2 +1193,0 @@\n-                    \/\/ Compute the actual x-coordinate of the randomly chosen point.\n-                    double x = (X[j] * 0x1.0p63) + ((X[j-1] - X[j]) * (double)U1);\n@@ -1203,0 +1203,2 @@\n+                    \/\/ Compute the actual x-coordinate of the randomly chosen point.\n+                    double x = (X[j] * 0x1.0p63) + ((X[j-1] - X[j]) * (double)U1);\n@@ -1207,1 +1209,1 @@\n-                    double y = (Y[j] * 0x1.0p63) + ((Y[j] - Y[j-1]) * (double)U2);\n+                    double y = (Y[j] * 0x1.0p63) + ((Y[j-1] - Y[j]) * (double)U2);\n@@ -1326,1 +1328,1 @@\n-                double y = (Y[j] * 0x1.0p63) + ((Y[j] - Y[j-1]) * (double)U2);\n+                double y = (Y[j] * 0x1.0p63) + ((Y[j-1] - Y[j]) * (double)U2);\n@@ -1351,2 +1353,0 @@\n-                \/\/ Compute the actual x-coordinate of the randomly chosen point.\n-                x = (X[j] * 0x1.0p63) + ((X[j-1] - X[j]) * (double)U1);\n@@ -1363,0 +1363,2 @@\n+                \/\/ Compute the actual x-coordinate of the randomly chosen point.\n+                x = (X[j] * 0x1.0p63) + ((X[j-1] - X[j]) * (double)U1);\n@@ -1367,1 +1369,1 @@\n-                double y = (Y[j] * 0x1.0p63) + ((Y[j] - Y[j-1]) * (double)U2);\n+                double y = (Y[j] * 0x1.0p63) + ((Y[j-1] - Y[j]) * (double)U2);\n@@ -1387,1 +1389,1 @@\n-                double y = (Y[j] * 0x1.0p63) + ((Y[j] - Y[j-1]) * (double)U2);\n+                double y = (Y[j] * 0x1.0p63) + ((Y[j-1] - Y[j]) * (double)U2);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/random\/RandomSupport.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"}]}