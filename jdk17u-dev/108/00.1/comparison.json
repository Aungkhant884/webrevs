{"files":[{"patch":"@@ -592,1 +592,4 @@\n-  release_C_heap_structures_internal();\n+  \/\/ Can't release the constant pool here because the constant pool can be\n+  \/\/ deallocated separately from the InstanceKlass for default methods and\n+  \/\/ redefine classes.\n+  release_C_heap_structures(\/* release_constant_pool *\/ false);\n@@ -1596,1 +1599,2 @@\n-  if (!is_loaded()) {\n+  \/\/ Redefined scratch classes are on the list and need to be cleaned\n+  if (!is_loaded() && !is_scratch_class()) {\n@@ -2012,2 +2016,2 @@\n-\/* jni_id_for_impl for jfieldIds only *\/\n-JNIid* InstanceKlass::jni_id_for_impl(int offset) {\n+\/* jni_id_for for jfieldIds only *\/\n+JNIid* InstanceKlass::jni_id_for(int offset) {\n@@ -2015,1 +2019,0 @@\n-  \/\/ Retry lookup after we got the lock\n@@ -2018,1 +2021,1 @@\n-    \/\/ Slow case, allocate new static field identifier\n+    \/\/ Allocate new static field identifier\n@@ -2025,10 +2028,0 @@\n-\n-\/* jni_id_for for jfieldIds only *\/\n-JNIid* InstanceKlass::jni_id_for(int offset) {\n-  JNIid* probe = jni_ids() == NULL ? NULL : jni_ids()->find(offset);\n-  if (probe == NULL) {\n-    probe = jni_id_for_impl(offset);\n-  }\n-  return probe;\n-}\n-\n@@ -2644,2 +2637,2 @@\n-void InstanceKlass::release_C_heap_structures() {\n-\n+\/\/ Called also by InstanceKlass::deallocate_contents, with false for release_constant_pool.\n+void InstanceKlass::release_C_heap_structures(bool release_constant_pool) {\n@@ -2647,2 +2640,1 @@\n-  release_C_heap_structures_internal();\n-  constants()->release_C_heap_structures();\n+  Klass::release_C_heap_structures();\n@@ -2652,8 +2644,0 @@\n-}\n-\n-void InstanceKlass::release_C_heap_structures_internal() {\n-  Klass::release_C_heap_structures();\n-\n-  \/\/ Can't release the constant pool here because the constant pool can be\n-  \/\/ deallocated separately from the InstanceKlass for default methods and\n-  \/\/ redefine classes.\n@@ -2695,0 +2679,4 @@\n+\n+  if (release_constant_pool) {\n+    constants()->release_C_heap_structures();\n+  }\n@@ -3959,2 +3947,0 @@\n-      \/\/ For debugging purposes.\n-      pv_node->set_is_scratch_class();\n@@ -4075,2 +4061,0 @@\n-    \/\/ For debugging purposes.\n-    scratch_class->set_is_scratch_class();\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":16,"deletions":32,"binary":false,"changes":48,"status":"modified"}]}