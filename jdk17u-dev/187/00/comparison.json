{"files":[{"patch":"@@ -1513,1 +1513,1 @@\n-static PhiNode* countedloop_phi_from_cmp(CmpINode* cmp, Node* n) {\n+static PhiNode* countedloop_phi_from_cmp(CmpNode* cmp, Node* n) {\n@@ -1518,2 +1518,2 @@\n-      if (iff->is_CountedLoopEnd()) {\n-        CountedLoopEndNode* cle = iff->as_CountedLoopEnd();\n+      if (iff->is_BaseCountedLoopEnd()) {\n+        BaseCountedLoopEndNode* cle = iff->as_BaseCountedLoopEnd();\n@@ -1837,2 +1837,2 @@\n-        if (m_op == Op_CmpI) {\n-          PhiNode* phi = countedloop_phi_from_cmp((CmpINode*)m, n);\n+        if (m_op == Op_CmpI || m_op == Op_CmpL) {\n+          PhiNode* phi = countedloop_phi_from_cmp(m->as_Cmp(), n);\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8277906\n+ * @summary Incorrect type for IV phi of long counted loops after CCP\n+ *\n+ * @run main\/othervm -XX:-TieredCompilation -XX:CompileCommand=compileonly,TestIVPhiTypeIncorrectAfterCCP::test -XX:-BackgroundCompilation TestIVPhiTypeIncorrectAfterCCP\n+ *\n+ *\/\n+\n+public class TestIVPhiTypeIncorrectAfterCCP {\n+\n+    static int test() {\n+        int array[] = new int[50];\n+\n+        float f = 0;\n+        for (int i = 3; i < 49; i++) {\n+            for (long l = 1; l < i; l++) {\n+                array[(int)l] = i;\n+                f += l;\n+            }\n+        }\n+        int sum = 0;\n+        for (int i = 0; i < array.length; i++) {\n+            sum += array[i];\n+        }\n+        return sum;\n+    }\n+\n+    public static void main(String[] args) {\n+        long expected = test();\n+        for (int i = 0; i < 10_000; i++) {\n+            int res = test();\n+            if (res != expected) {\n+                throw new RuntimeException(\"Unexpected result: \" + res + \" != \" + expected);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/longcountedloops\/TestIVPhiTypeIncorrectAfterCCP.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}