{"files":[{"patch":"@@ -255,0 +255,1 @@\n+\n@@ -261,0 +262,2 @@\n+\n+    virtual void print_version_specific_info(outputStream* st) = 0;\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,0 +215,32 @@\n+\n+jlong CgroupV1Subsystem::kernel_memory_usage_in_bytes() {\n+  GET_CONTAINER_INFO(jlong, _memory->controller(), \"\/memory.kmem.usage_in_bytes\",\n+                     \"Kernel Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_usage);\n+  return kmem_usage;\n+}\n+\n+jlong CgroupV1Subsystem::kernel_memory_limit_in_bytes() {\n+  GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.kmem.limit_in_bytes\",\n+                     \"Kernel Memory Limit is: \" JULONG_FORMAT, JULONG_FORMAT, kmem_limit);\n+  if (kmem_limit >= os::Linux::physical_memory()) {\n+    return (jlong)-1;\n+  }\n+  return (jlong)kmem_limit;\n+}\n+\n+jlong CgroupV1Subsystem::kernel_memory_max_usage_in_bytes() {\n+  GET_CONTAINER_INFO(jlong, _memory->controller(), \"\/memory.kmem.max_usage_in_bytes\",\n+                     \"Maximum Kernel Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_max_usage);\n+  return kmem_max_usage;\n+}\n+\n+void CgroupV1Subsystem::print_version_specific_info(outputStream* st) {\n+  jlong kmem_usage = kernel_memory_usage_in_bytes();\n+  jlong kmem_limit = kernel_memory_limit_in_bytes();\n+  jlong kmem_max_usage = kernel_memory_max_usage_in_bytes();\n+\n+  OSContainer::print_container_helper(st, kmem_usage, \"kernel_memory_usage_in_bytes\");\n+  OSContainer::print_container_helper(st, kmem_limit, \"kernel_memory_max_usage_in_bytes\");\n+  OSContainer::print_container_helper(st, kmem_max_usage, \"kernel_memory_limit_in_bytes\");\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -82,0 +82,5 @@\n+\n+    jlong kernel_memory_usage_in_bytes();\n+    jlong kernel_memory_limit_in_bytes();\n+    jlong kernel_memory_max_usage_in_bytes();\n+\n@@ -93,0 +98,2 @@\n+    void print_version_specific_info(outputStream* st);\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -185,0 +185,10 @@\n+\/\/ memory.swap.current : total amount of swap currently used by the cgroup and its descendants\n+char* CgroupV2Subsystem::mem_swp_current_val() {\n+  GET_CONTAINER_INFO_CPTR(cptr, _unified, \"\/memory.swap.current\",\n+                         \"Swap currently used is: %s\", \"%s\", mem_swp_current_str, 1024);\n+  if (mem_swp_current_str == NULL) {\n+    return NULL;\n+  }\n+  return os::strdup(mem_swp_current_str);\n+}\n+\n@@ -215,0 +225,11 @@\n+void CgroupV2Subsystem::print_version_specific_info(outputStream* st) {\n+  char* mem_swp_current_str = mem_swp_current_val();\n+  jlong swap_current = limit_from_str(mem_swp_current_str);\n+\n+  char* mem_swp_limit_str = mem_swp_limit_val();\n+  jlong swap_limit = limit_from_str(mem_swp_limit_str);\n+\n+  OSContainer::print_container_helper(st, swap_current, \"memory_swap_current_in_bytes\");\n+  OSContainer::print_container_helper(st, swap_limit, \"memory_swap_max_limit_in_bytes\");\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.cpp","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat Inc.\n+ * Copyright (c) 2020, 2022, Red Hat Inc.\n@@ -61,0 +61,1 @@\n+    char *mem_swp_current_val();\n@@ -80,0 +81,1 @@\n+\n@@ -85,0 +87,2 @@\n+    void print_version_specific_info(outputStream* st);\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,0 +94,5 @@\n+void OSContainer::print_version_specific_info(outputStream* st) {\n+  assert(cgroup_subsystem != NULL, \"cgroup subsystem not available\");\n+  cgroup_subsystem->print_version_specific_info(st);\n+}\n+\n@@ -133,0 +138,13 @@\n+\n+void OSContainer::print_container_helper(outputStream* st, jlong j, const char* metrics) {\n+  st->print(\"%s: \", metrics);\n+  if (j > 0) {\n+    if (j >= 1024) {\n+      st->print_cr(UINT64_FORMAT \" k\", uint64_t(j) \/ 1024);\n+    } else {\n+      st->print_cr(UINT64_FORMAT, uint64_t(j));\n+    }\n+  } else {\n+    st->print_cr(\"%s\", j == OSCONTAINER_ERROR ? \"not supported\" : \"unlimited\");\n+  }\n+}\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -46,0 +47,3 @@\n+  static void print_version_specific_info(outputStream* st);\n+  static void print_container_helper(outputStream* st, jlong j, const char* metrics);\n+\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2281,13 +2281,0 @@\n-static void print_container_helper(outputStream* st, jlong j, const char* metrics) {\n-  st->print(\"%s: \", metrics);\n-  if (j > 0) {\n-    if (j >= 1024) {\n-      st->print_cr(UINT64_FORMAT \" k\", uint64_t(j) \/ 1024);\n-    } else {\n-      st->print_cr(UINT64_FORMAT, uint64_t(j));\n-    }\n-  } else {\n-    st->print_cr(\"%s\", j == OSCONTAINER_ERROR ? \"not supported\" : \"unlimited\");\n-  }\n-}\n-\n@@ -2349,5 +2336,7 @@\n-  print_container_helper(st, OSContainer::memory_limit_in_bytes(), \"memory_limit_in_bytes\");\n-  print_container_helper(st, OSContainer::memory_and_swap_limit_in_bytes(), \"memory_and_swap_limit_in_bytes\");\n-  print_container_helper(st, OSContainer::memory_soft_limit_in_bytes(), \"memory_soft_limit_in_bytes\");\n-  print_container_helper(st, OSContainer::memory_usage_in_bytes(), \"memory_usage_in_bytes\");\n-  print_container_helper(st, OSContainer::memory_max_usage_in_bytes(), \"memory_max_usage_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_limit_in_bytes(), \"memory_limit_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_and_swap_limit_in_bytes(), \"memory_and_swap_limit_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_soft_limit_in_bytes(), \"memory_soft_limit_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_usage_in_bytes(), \"memory_usage_in_bytes\");\n+  OSContainer::print_container_helper(st, OSContainer::memory_max_usage_in_bytes(), \"memory_max_usage_in_bytes\");\n+\n+  OSContainer::print_version_specific_info(st);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":7,"deletions":18,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -126,0 +126,13 @@\n+        String str = out.getOutput();\n+        if (str.contains(\"cgroupv1\")) {\n+            out.shouldContain(\"kernel_memory_usage_in_bytes\");\n+            out.shouldContain(\"kernel_memory_max_usage_in_bytes\");\n+            out.shouldContain(\"kernel_memory_limit_in_bytes\");\n+        } else {\n+            if (str.contains(\"cgroupv2\")) {\n+                out.shouldContain(\"memory_swap_current_in_bytes\");\n+                out.shouldContain(\"memory_swap_max_limit_in_bytes\");\n+            } else {\n+                throw new RuntimeException(\"Output has to contain information about cgroupv1 or cgroupv2\");\n+            }\n+        }\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMisc.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}