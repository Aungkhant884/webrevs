{"files":[{"patch":"@@ -257,1 +257,1 @@\n-            Pattern.compile(OPTION_PATTERN.pattern() + \"\\\\s+(?<val>\\\\S*)\");\n+            Pattern.compile(OPTION_PATTERN.pattern() + \"\\\\s+(?<val>(\\\\S|\\\\\\\\ )*)\");\n@@ -1558,2 +1558,2 @@\n-            String path = code.substring(0, lastSlash + 1);\n-            String prefix = lastSlash != (-1) ? code.substring(lastSlash + 1) : code;\n+            String path = code.substring(0, lastSlash + 1).replace(\"\\\\ \", \" \");\n+            String prefix = (lastSlash != (-1) ? code.substring(lastSlash + 1) : code).replace(\"\\\\ \", \" \");\n@@ -1564,1 +1564,1 @@\n-                   .map(f -> new ArgSuggestion(f.getFileName() + (Files.isDirectory(f) ? \"\/\" : \"\")))\n+                   .map(f -> new ArgSuggestion(f.getFileName().toString().replace(\" \", \"\\\\ \") + (Files.isDirectory(f) ? \"\/\" : \"\")))\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8144095 8164825 8169818 8153402 8165405 8177079 8178013 8167554 8166232\n+ * @bug 8144095 8164825 8169818 8153402 8165405 8177079 8178013 8167554 8166232 8277328\n@@ -334,0 +334,16 @@\n+    @Test\n+    public void testClassPathWithSpace() throws IOException {\n+        Compiler compiler = new Compiler();\n+        Path outDir = compiler.getPath(\"testClassPathWithSpace\");\n+        Path dirWithSpace = Files.createDirectories(outDir.resolve(\"dir with space\"));\n+        Files.createDirectories(dirWithSpace.resolve(\"nested with space\"));\n+        String[] pathArray = new String[] {\"dir\\\\ with\\\\ space\/\"};\n+        String[] pathArray2 = new String[] {\"nested\\\\ with\\\\ space\/\"};\n+        testNoStartUp(\n+                a -> assertCompletion(a, \"\/env -class-path \" + outDir + \"\/|\", false, pathArray),\n+                a -> assertCompletion(a, \"\/env -class-path \" + outDir + \"\/dir|\", false, pathArray),\n+                a -> assertCompletion(a, \"\/env -class-path \" + outDir + \"\/dir\\\\ with|\", false, pathArray),\n+                a -> assertCompletion(a, \"\/env -class-path \" + outDir + \"\/dir\\\\ with\\\\ space\/|\", false, pathArray2)\n+        );\n+    }\n+\n@@ -341,0 +357,1 @@\n+                                  .filter(file -> file.getFileName().toString().contains(\" \"))\n@@ -342,1 +359,1 @@\n-                                  .map(file -> file.getFileName().toString())\n+                                  .map(file -> file.getFileName().toString().replace(\" \", \"\\\\ \"))\n@@ -350,2 +367,2 @@\n-                                 .filter(file -> file.getFileName().toString().startsWith(selectedFile))\n-                                 .map(file -> file.getFileName().toString() + (Files.isDirectory(file) ? \"\/\" : \"\"))\n+                                 .filter(file -> file.getFileName().toString().startsWith(selectedFile.replace(\"\\\\ \", \" \")))\n+                                 .map(file -> file.getFileName().toString().replace(\" \", \"\\\\ \") + (Files.isDirectory(file) ? \"\/\" : \"\"))\n","filename":"test\/langtools\/jdk\/jshell\/CommandCompletionTest.java","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"}]}