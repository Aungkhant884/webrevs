{"files":[{"patch":"@@ -297,2 +297,4 @@\n-        \/\/ This region should lose its Phis and be optimized out by igvn but there's a chance the if folds to top first\n-        \/\/ which then causes a reachable part of the graph to become dead.\n+        \/\/ This region should lose its Phis. They are removed either in PhaseRemoveUseless (for data phis) or in IGVN\n+        \/\/ (for memory phis). During IGVN, there is a chance that the If folds to top before the Region is processed\n+        \/\/ which then causes a reachable part of the graph to become dead. To prevent this, set the boolean input of\n+        \/\/ the If to a constant to nicely let the diamond Region\/If fold away.\n@@ -300,1 +302,1 @@\n-        C->gvn_replace_by(n, iff->in(0));\n+        C->gvn_replace_by(iff->in(1), _stringopts->gvn()->intcon(0));\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,0 +33,3 @@\n+ * @run main\/othervm -Xbatch -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:+AlwaysIncrementalInline\n+ *      compiler.c2.Test7179138_1\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/Test7179138_1.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}