{"files":[{"patch":"@@ -568,2 +568,2 @@\n-  declare_constant(Deoptimization::Reason_LIMIT)                          \\\n-  declare_constant(Deoptimization::_support_large_access_byte_array_virtualization)               \\\n+  declare_constant(Deoptimization::Reason_TRAP_HISTORY_LENGTH)            \\\n+  declare_constant(Deoptimization::_support_large_access_byte_array_virtualization) \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"runtime\/deoptimization.hpp\"\n@@ -1968,1 +1969,1 @@\n-    _trap_hist_limit    = 25 JVMCI_ONLY(+5),   \/\/ decoupled from Deoptimization::Reason_LIMIT\n+    _trap_hist_limit    = Deoptimization::Reason_TRAP_HISTORY_LENGTH,\n@@ -1983,0 +1984,1 @@\n+      \/\/ JVMCI separates trap history for OSR compilations from normal compilations\n@@ -1999,1 +2001,1 @@\n-      assert((uint)reason < JVMCI_ONLY(2*) _trap_hist_limit, \"oob\");\n+      assert((uint)reason < ARRAY_SIZE(_trap_hist._array), \"oob\");\n@@ -2006,1 +2008,1 @@\n-      assert((uint)reason < JVMCI_ONLY(2*) _trap_hist_limit, \"oob\");\n+      assert((uint)reason < ARRAY_SIZE(_trap_hist._array), \"oob\");\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2387,1 +2387,2 @@\n-      idx += Reason_LIMIT;\n+      \/\/ Upper half of history array used for traps in OSR compilations\n+      idx += Reason_TRAP_HISTORY_LENGTH;\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+  \/\/ Note: Keep this enum in sync. with Deoptimization::_trap_reason_name.\n@@ -101,0 +102,3 @@\n+    \/\/ Used to define MethodData::_trap_hist_limit where Reason_tenured isn't included\n+    Reason_TRAP_HISTORY_LENGTH,\n+\n@@ -102,2 +106,1 @@\n-    \/\/ Related to MethodData::_trap_hist_limit where Reason_tenured isn't included\n-    Reason_tenured,               \/\/ age of the code has reached the limit\n+    Reason_tenured = Reason_TRAP_HISTORY_LENGTH, \/\/ age of the code has reached the limit\n@@ -106,2 +109,0 @@\n-    \/\/ Note:  Keep this enum in sync. with _trap_reason_name.\n-    Reason_RECORDED_LIMIT = Reason_profile_predicate  \/\/ some are not recorded per bc\n@@ -112,0 +113,1 @@\n+    Reason_RECORDED_LIMIT = Reason_profile_predicate,  \/\/ some are not recorded per bc\n@@ -115,0 +117,1 @@\n+  \/\/ Note: Keep this enum in sync. with Deoptimization::_trap_action_name.\n@@ -122,1 +125,0 @@\n-    \/\/ Note:  Keep this enum in sync. with _trap_action_name.\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-    final int deoptReasonOSROffset = getConstant(\"Deoptimization::Reason_LIMIT\", Integer.class);\n+    final int deoptReasonOSROffset = getConstant(\"Deoptimization::Reason_TRAP_HISTORY_LENGTH\", Integer.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfig.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}