{"files":[{"patch":"@@ -1159,1 +1159,3 @@\n-            return node != null && node.prev != null && isEnqueued(node);\n+            Node p; \/\/ traverse unless known to be bidirectionally linked\n+            return node != null && (p = node.prev) != null &&\n+                (p.next == node || isEnqueued(node));\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedLongSynchronizer.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1527,1 +1527,3 @@\n-            return node != null && node.prev != null && isEnqueued(node);\n+            Node p; \/\/ traverse unless known to be bidirectionally linked\n+            return node != null && (p = node.prev) != null &&\n+                (p.next == node || isEnqueued(node));\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedSynchronizer.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}