{"files":[{"patch":"@@ -592,1 +592,4 @@\n-  release_C_heap_structures_internal();\n+  \/\/ Can't release the constant pool here because the constant pool can be\n+  \/\/ deallocated separately from the InstanceKlass for default methods and\n+  \/\/ redefine classes.\n+  release_C_heap_structures(\/* release_constant_pool *\/ false);\n@@ -1596,1 +1599,2 @@\n-  if (!is_loaded()) {\n+  \/\/ Redefined scratch classes are on the list and need to be cleaned\n+  if (!is_loaded() && !is_scratch_class()) {\n@@ -2642,2 +2646,2 @@\n-void InstanceKlass::release_C_heap_structures() {\n-\n+\/\/ Called also by InstanceKlass::deallocate_contents, with false for release_constant_pool.\n+void InstanceKlass::release_C_heap_structures(bool release_constant_pool) {\n@@ -2645,2 +2649,1 @@\n-  release_C_heap_structures_internal();\n-  constants()->release_C_heap_structures();\n+  Klass::release_C_heap_structures();\n@@ -2650,8 +2653,0 @@\n-}\n-\n-void InstanceKlass::release_C_heap_structures_internal() {\n-  Klass::release_C_heap_structures();\n-\n-  \/\/ Can't release the constant pool here because the constant pool can be\n-  \/\/ deallocated separately from the InstanceKlass for default methods and\n-  \/\/ redefine classes.\n@@ -2693,0 +2688,4 @@\n+\n+  if (release_constant_pool) {\n+    constants()->release_C_heap_structures();\n+  }\n@@ -3957,2 +3956,0 @@\n-      \/\/ For debugging purposes.\n-      pv_node->set_is_scratch_class();\n@@ -4073,2 +4070,0 @@\n-    \/\/ For debugging purposes.\n-    scratch_class->set_is_scratch_class();\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":13,"deletions":18,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1111,1 +1111,1 @@\n-  virtual void release_C_heap_structures();\n+  virtual void release_C_heap_structures(bool release_constant_pool = true);\n@@ -1224,3 +1224,0 @@\n-  \/\/ Free CHeap allocated fields.\n-  void release_C_heap_structures_internal();\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-void Klass::release_C_heap_structures() {\n+void Klass::release_C_heap_structures(bool release_constant_pool) {\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -696,1 +696,1 @@\n-  virtual void release_C_heap_structures();\n+  virtual void release_C_heap_structures(bool release_constant_pool = true);\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4422,0 +4422,3 @@\n+  \/\/ Scratch class is unloaded but still needs cleaning, and skipping for CDS.\n+  scratch_class->set_is_scratch_class();\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}