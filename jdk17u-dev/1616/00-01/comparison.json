{"files":[{"patch":"@@ -38,1 +38,1 @@\n-        default: '10.3.0-1ubuntu1~20.04'\n+        default: '10.4.0-4ubuntu1~22.04'\n@@ -47,1 +47,1 @@\n-    runs-on: ubuntu-20.04\n+    runs-on: ubuntu-22.04\n","filename":".github\/workflows\/build-cross-compile.yml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -169,1 +169,3 @@\n-    # On windows and aix default is bundled, on others default is system\n+    # On windows and aix default is bundled\n+    DEFAULT_ZLIB=bundled\n+  elif test \"x$OPENJDK_TARGET_OS\" = xmacosx -a \"x$OPENJDK_TARGET_CPU\" = xaarch64; then\n","filename":"make\/autoconf\/lib-bundled.m4","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -460,1 +460,1 @@\n-            configure_args: concat(common.configure_args_64bit, \"--with-zlib=system\",\n+            configure_args: concat(common.configure_args_64bit,\n","filename":"make\/conf\/jib-profiles.js","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,0 +83,1 @@\n+\n@@ -87,1 +88,2 @@\n-  }  else {\n+    _reference_stack[_depth] = reference;\n+  } else {\n@@ -91,0 +93,6 @@\n+    _mark_bits->mark_obj(pointee);\n+    _reference_stack[_depth] = reference;\n+    \/\/ is the pointee a sample object?\n+    if (pointee->mark().is_marked()) {\n+      add_chain();\n+    }\n@@ -92,9 +100,0 @@\n-  _reference_stack[_depth] = reference;\n-  _mark_bits->mark_obj(pointee);\n-  assert(_mark_bits->is_marked(pointee), \"invariant\");\n-\n-  \/\/ is the pointee a sample object?\n-  if (pointee->mark().is_marked()) {\n-    add_chain();\n-  }\n-\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/dfsClosure.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"jfr\/leakprofiler\/sampling\/objectSample.hpp\"\n@@ -30,0 +31,1 @@\n+#include \"runtime\/safepoint.hpp\"\n@@ -39,9 +41,0 @@\n-EdgeStore::EdgeStore() : _edges(NULL) {\n-  _edges = new EdgeHashTable(this);\n-}\n-\n-EdgeStore::~EdgeStore() {\n-  assert(_edges != NULL, \"invariant\");\n-  delete _edges;\n-}\n-\n@@ -227,1 +220,80 @@\n-\/\/ Install the immediate edge into the mark word of the leak candidate object\n+static GrowableArray<const StoredEdge*>* _leak_context_edges = nullptr;\n+\n+EdgeStore::EdgeStore() : _edges(new EdgeHashTable(this)) {}\n+\n+EdgeStore::~EdgeStore() {\n+  assert(_edges != NULL, \"invariant\");\n+  delete _edges;\n+  delete _leak_context_edges;\n+  _leak_context_edges = nullptr;\n+}\n+\n+static int leak_context_edge_idx(const ObjectSample* sample) {\n+  assert(sample != nullptr, \"invariant\");\n+  return static_cast<int>(sample->object()->mark().value()) >> markWord::lock_bits;\n+}\n+\n+bool EdgeStore::has_leak_context(const ObjectSample* sample) const {\n+  const int idx = leak_context_edge_idx(sample);\n+  if (idx == 0) {\n+    return false;\n+  }\n+  assert(idx > 0, \"invariant\");\n+  assert(_leak_context_edges != nullptr, \"invariant\");\n+  assert(idx < _leak_context_edges->length(), \"invariant\");\n+  assert(_leak_context_edges->at(idx) != nullptr, \"invariant\");\n+  return true;\n+}\n+\n+const StoredEdge* EdgeStore::get(const ObjectSample* sample) const {\n+  assert(sample != nullptr, \"invariant\");\n+  if (_leak_context_edges != nullptr) {\n+    assert(SafepointSynchronize::is_at_safepoint(), \"invariant\");\n+    const int idx = leak_context_edge_idx(sample);\n+    if (idx > 0) {\n+      assert(idx < _leak_context_edges->length(), \"invariant\");\n+      const StoredEdge* const edge =_leak_context_edges->at(idx);\n+      assert(edge != nullptr, \"invariant\");\n+      return edge;\n+    }\n+  }\n+  return get(UnifiedOopRef::encode_in_native(sample->object_addr()));\n+}\n+\n+#ifdef ASSERT\n+\/\/ max_idx to ensure idx fit in lower 32-bits of markword together with lock bits.\n+static constexpr const int max_idx =  right_n_bits(32 - markWord::lock_bits);\n+\n+static void store_idx_precondition(oop sample_object, int idx) {\n+  assert(sample_object != NULL, \"invariant\");\n+  assert(sample_object->mark().is_marked(), \"invariant\");\n+  assert(idx > 0, \"invariant\");\n+  assert(idx <= max_idx, \"invariant\");\n+}\n+#endif\n+\n+static void store_idx_in_markword(oop sample_object, int idx) {\n+  DEBUG_ONLY(store_idx_precondition(sample_object, idx);)\n+  const markWord idx_mark_word(sample_object->mark().value() | idx << markWord::lock_bits);\n+  sample_object->set_mark(idx_mark_word);\n+  assert(sample_object->mark().is_marked(), \"must still be marked\");\n+}\n+\n+static const int initial_size = 64;\n+\n+static int save(const StoredEdge* edge) {\n+  assert(edge != nullptr, \"invariant\");\n+  if (_leak_context_edges == nullptr) {\n+    _leak_context_edges = new (ResourceObj::C_HEAP, mtTracing)GrowableArray<const StoredEdge*>(initial_size, mtTracing);\n+    _leak_context_edges->append(nullptr); \/\/ next idx now at 1, for disambiguation in markword.\n+  }\n+  return _leak_context_edges->append(edge);\n+}\n+\n+\/\/ We associate the leak context edge with the leak candidate object by saving the\n+\/\/ edge in an array and storing the array idx (shifted) into the markword of the candidate object.\n+static void associate_with_candidate(const StoredEdge* leak_context_edge) {\n+  assert(leak_context_edge != nullptr, \"invariant\");\n+  store_idx_in_markword(leak_context_edge->pointee(), save(leak_context_edge));\n+}\n+\n@@ -232,4 +304,1 @@\n-  oop sample_object = edge->pointee();\n-  assert(sample_object != NULL, \"invariant\");\n-  assert(sample_object->mark().is_marked(), \"invariant\");\n-  sample_object->set_mark(markWord::from_pointer(leak_context_edge));\n+  associate_with_candidate(leak_context_edge);\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/edgeStore.cpp","additions":84,"deletions":15,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+class ObjectSample;\n@@ -82,0 +83,1 @@\n+  const StoredEdge* get(const ObjectSample* sample) const;\n@@ -93,0 +95,1 @@\n+  bool has_leak_context(const ObjectSample* sample) const;\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/edgeStore.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,1 +123,1 @@\n-    if (!sample->object()->mark().is_marked()) {\n+    if (edge_store->has_leak_context(sample)) {\n@@ -140,12 +140,1 @@\n-  traceid gc_root_id = 0;\n-  const Edge* edge = NULL;\n-  if (SafepointSynchronize::is_at_safepoint()) {\n-    if (!sample->object()->mark().is_marked()) {\n-      edge = (const Edge*)(sample->object())->mark().to_pointer();\n-    }\n-  }\n-  if (edge == NULL) {\n-    edge = edge_store->get(UnifiedOopRef::encode_in_native(sample->object_addr()));\n-  } else {\n-    gc_root_id = edge_store->gc_root_id(edge);\n-  }\n+  const StoredEdge* const edge = edge_store->get(sample);\n@@ -153,0 +142,1 @@\n+  assert(edge->pointee() == sample->object(), \"invariant\");\n@@ -155,0 +145,1 @@\n+  const traceid gc_root_id = edge->gc_root_id();\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/eventEmitter.cpp","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -778,0 +778,4 @@\n+    if (call->is_CallStaticJava() && call->as_CallStaticJava()->is_boxing_method()) {\n+      result = kit.must_be_not_null(result, false);\n+    }\n+\n","filename":"src\/hotspot\/share\/opto\/callGenerator.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -822,1 +822,3 @@\n-    extypes->append(TypeOopPtr::make_from_klass(env()->Throwable_klass())->is_instptr());\n+    const Type* extype = TypeOopPtr::make_from_klass(env()->Throwable_klass())->is_instptr();\n+    extype = extype->join(TypeInstPtr::NOTNULL);\n+    extypes->append(extype);\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,2 @@\n-  for( i4 = 1; i4 < phi->req(); i4++ ) {\n+  RegionNode* phi_region = phi->region();\n+  for (i4 = 1; i4 < phi->req(); i4++ ) {\n@@ -96,1 +97,5 @@\n-    if( !con1 ) return nullptr;    \/\/ Do not optimize partially collapsed merges\n+    \/\/ Do not optimize partially collapsed merges\n+    if (con1 == nullptr || phi_region->in(i4) == nullptr || igvn->type(phi_region->in(i4)) == Type::TOP) {\n+      igvn->_worklist.push(iff);\n+      return nullptr;\n+    }\n@@ -118,1 +123,1 @@\n-  if (!r->is_Region() || r->is_Loop() || phi->region() != r || r->as_Region()->is_copy()) {\n+  if (!r->is_Region() || r->is_Loop() || phi_region != r || r->as_Region()->is_copy()) {\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -3478,1 +3478,1 @@\n-      slow_call = generate_method_call(vmIntrinsics::_allocateUninitializedArray, false, false);\n+      slow_call = generate_method_call(vmIntrinsics::_allocateUninitializedArray, false, false, true);\n@@ -3480,1 +3480,1 @@\n-      slow_call = generate_method_call_static(vmIntrinsics::_newArray);\n+      slow_call = generate_method_call_static(vmIntrinsics::_newArray, true);\n@@ -3725,1 +3725,1 @@\n-LibraryCallKit::generate_method_call(vmIntrinsics::ID method_id, bool is_virtual, bool is_static) {\n+LibraryCallKit::generate_method_call(vmIntrinsicID method_id, bool is_virtual, bool is_static, bool res_not_null) {\n@@ -3734,0 +3734,8 @@\n+  if (res_not_null) {\n+    assert(tf->return_type() == T_OBJECT, \"\");\n+    const TypeTuple* range = tf->range();\n+    const Type** fields = TypeTuple::fields(range->cnt());\n+    fields[TypeFunc::Parms] = range->field_at(TypeFunc::Parms)->filter_speculative(TypePtr::NOTNULL);\n+    const TypeTuple* new_range = TypeTuple::make(range->cnt(), fields);\n+    tf = TypeFunc::make(tf->domain(), new_range);\n+  }\n@@ -3883,1 +3891,1 @@\n-    CallJavaNode* slow_call = generate_method_call(hashCode_id, is_virtual, is_static);\n+    CallJavaNode* slow_call = generate_method_call(hashCode_id, is_virtual, is_static, false);\n@@ -4353,1 +4361,1 @@\n-      CallJavaNode* slow_call = generate_method_call(vmIntrinsics::_clone, is_virtual);\n+      CallJavaNode* slow_call = generate_method_call(vmIntrinsics::_clone, is_virtual, false, true);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -176,7 +176,3 @@\n-  CallJavaNode* generate_method_call(vmIntrinsics::ID method_id,\n-                                     bool is_virtual = false, bool is_static = false);\n-  CallJavaNode* generate_method_call_static(vmIntrinsics::ID method_id) {\n-    return generate_method_call(method_id, false, true);\n-  }\n-  CallJavaNode* generate_method_call_virtual(vmIntrinsics::ID method_id) {\n-    return generate_method_call(method_id, true, false);\n+  CallJavaNode* generate_method_call(vmIntrinsicID method_id, bool is_virtual, bool is_static, bool res_not_null);\n+  CallJavaNode* generate_method_call_static(vmIntrinsicID method_id, bool res_not_null) {\n+    return generate_method_call(method_id, false, true, res_not_null);\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+  assert(sub_t != Type::TOP && !TypePtr::NULL_PTR->higher_equal(sub_t), \"should be not null\");\n","filename":"src\/hotspot\/share\/opto\/subtypenode.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -832,12 +832,14 @@\n-    ThreadsListHandle tlh;\n-    JavaThread* thr = NULL;\n-    oop java_thread = NULL;\n-    (void) tlh.cv_internal_thread_to_JavaThread(jthread, &thr, &java_thread);\n-    if (java_thread != NULL) {\n-      \/\/ This is a valid oop.\n-      if (thr != NULL) {\n-        \/\/ The JavaThread is alive.\n-        Parker* p = thr->parker();\n-        HOTSPOT_THREAD_UNPARK((uintptr_t) p);\n-        p->unpark();\n-      }\n+    oop thread_oop = JNIHandles::resolve_non_null(jthread);\n+    \/\/ Get the JavaThread* stored in the java.lang.Thread object _before_\n+    \/\/ the embedded ThreadsListHandle is constructed so we know if the\n+    \/\/ early life stage of the JavaThread* is protected. We use acquire\n+    \/\/ here to ensure that if we see a non-nullptr value, then we also\n+    \/\/ see the main ThreadsList updates from the JavaThread* being added.\n+    FastThreadsListHandle ftlh(thread_oop, java_lang_Thread::thread_acquire(thread_oop));\n+    JavaThread* thr = ftlh.protected_java_thread();\n+    if (thr != nullptr) {\n+      \/\/ The still live JavaThread* is protected by the FastThreadsListHandle\n+      \/\/ so it is safe to access.\n+      Parker* p = thr->parker();\n+      HOTSPOT_THREAD_UNPARK((uintptr_t) p);\n+      p->unpark();\n@@ -845,2 +847,1 @@\n-  } \/\/ ThreadsListHandle is destroyed here.\n-\n+  } \/\/ FastThreadsListHandle is destroyed here.\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -819,0 +819,14 @@\n+FastThreadsListHandle::FastThreadsListHandle(oop thread_oop, JavaThread* java_thread) : _protected_java_thread(nullptr) {\n+  assert(thread_oop != nullptr, \"must be\");\n+  if (java_thread != nullptr) {\n+    \/\/ We captured a non-nullptr JavaThread* before the _tlh was created\n+    \/\/ so that covers the early life stage of the target JavaThread.\n+    _protected_java_thread = java_lang_Thread::thread(thread_oop);\n+    assert(_protected_java_thread == nullptr || _tlh.includes(_protected_java_thread), \"must be\");\n+    \/\/ If we captured a non-nullptr JavaThread* after the _tlh was created\n+    \/\/ then that covers the end life stage of the target JavaThread and we\n+    \/\/ we know that _tlh protects the JavaThread*. The underlying atomic\n+    \/\/ load is sufficient (no acquire necessary here).\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -323,0 +323,23 @@\n+\/\/ This stack allocated FastThreadsListHandle implements the special case\n+\/\/ where we want to quickly determine if a JavaThread* is protected by the\n+\/\/ embedded ThreadsListHandle.\n+\/\/\n+class FastThreadsListHandle : public StackObj {\n+  JavaThread* _protected_java_thread;\n+  ThreadsListHandle _tlh;\n+\n+public:\n+  \/\/ The 'java_thread' parameter to the constructor must be provided\n+  \/\/ by a java_lang_Thread::thread_acquire(thread_oop) call which gets\n+  \/\/ us the JavaThread* stored in the java.lang.Thread object _before_\n+  \/\/ the embedded ThreadsListHandle is constructed. We use acquire there\n+  \/\/ to ensure that if we see a non-nullptr value, then we also see the\n+  \/\/ main ThreadsList updates from the JavaThread* being added.\n+  \/\/\n+  FastThreadsListHandle(oop thread_oop, JavaThread* java_thread);\n+\n+  JavaThread* protected_java_thread() {\n+    return _protected_java_thread;\n+  }\n+};\n+\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.hpp","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## The FreeType Project: Freetype v2.12.1\n+## The FreeType Project: Freetype v2.13.0\n@@ -24,21 +24,20 @@\n-Copyright (C) 1996-2022 by David Turner, Robert Wilhelm, and Werner Lemberg.\n-Copyright (C) 2007-2022 by Dereg Clegg and Michael Toftdal.\n-Copyright (C) 1996-2022 by Just van Rossum, David Turner, Robert Wilhelm, and Werner Lemberg.\n-Copyright (C) 2004-2022 by Masatake YAMATO and Redhat K.K.\n-Copyright (C) 2007-2022 by Derek Clegg and Michael Toftdal.\n-Copyright (C) 2007-2022 by David Turner.\n-Copyright (C) 2022 by David Turner, Robert Wilhelm, Werner Lemberg, and Moazin Khatti.\n-Copyright (C) 2007-2022 by Rahul Bhalerao <rahul.bhalerao@redhat.com>, <b.rahul.pm@gmail.com>.\n-Copyright (C) 2008-2022 by David Turner, Robert Wilhelm, Werner Lemberg, and suzuki toshiya.\n-Copyright (C) 2019-2022 by Nikhil Ramakrishnan, David Turner, Robert Wilhelm, and Werner Lemberg.\n-Copyright (C) 2009-2022 by Oran Agra and Mickey Gabel.\n-Copyright (C) 2004-2022 by David Turner, Robert Wilhelm, Werner Lemberg, and George Williams.\n-Copyright (C) 2004-2022 by Masatake YAMATO, Red Hat K.K.,\n-Copyright (C) 2003-2022 by Masatake YAMATO, Redhat K.K.,\n-Copyright (C) 2013-2022 by Google, Inc.\n-Copyright (C) 2018-2022 by David Turner, Robert Wilhelm, Dominik Röttsches, and Werner Lemberg.\n-Copyright (C) 2005-2022 by David Turner, Robert Wilhelm, and Werner Lemberg.\n-Copyright 2013 by Google, Inc.\n-\n-\n-                   The FreeType Project LICENSE\n+Copyright (C) 1996-2023 by David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2007-2023 by Dereg Clegg and Michael Toftdal.\n+Copyright (C) 1996-2023 by Just van Rossum, David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2022-2023 by David Turner, Robert Wilhelm, Werner Lemberg, George Williams, and\n+Copyright (C) 2004-2023 by Masatake YAMATO and Redhat K.K.\n+Copyright (C) 2007-2023 by Derek Clegg and Michael Toftdal.\n+Copyright (C) 2003-2023 by Masatake YAMATO, Red Hat K.K.,\n+Copyright (C) 1996-2023 by David Turner, Robert Wilhelm, Werner Lemberg, and Dominik Röttsches.\n+Copyright (C) 2007-2023 by David Turner.\n+Copyright (C) 2022-2023 by David Turner, Robert Wilhelm, Werner Lemberg, and Moazin Khatti.\n+Copyright (C) 2007-2023 by Rahul Bhalerao <rahul.bhalerao@redhat.com>, <b.rahul.pm@gmail.com>.\n+Copyright (C) 2008-2023 by David Turner, Robert Wilhelm, Werner Lemberg, and suzuki toshiya.\n+Copyright (C) 2013-2023 by Google, Inc.\n+Copyright (C) 2019-2023 by Nikhil Ramakrishnan, David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2009-2023 by Oran Agra and Mickey Gabel.\n+Copyright (C) 2018-2023 by David Turner, Robert Wilhelm, Dominik Röttsches, and Werner Lemberg.\n+Copyright (C) 2004-2023 by David Turner, Robert Wilhelm, Werner Lemberg, and George Williams.\n+\n+\n+                    The FreeType Project LICENSE\n@@ -209,1 +208,1 @@\n-    http:\/\/www.freetype.org\n+    https:\/\/www.freetype.org\n","filename":"src\/java.desktop\/share\/legal\/freetype.md","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftconfig.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftheader.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -464,3 +464,3 @@\n-   *     _af_debug_disable_horz_hints\n-   *     _af_debug_disable_vert_hints\n-   *     _af_debug_disable_blue_hints\n+   *     af_debug_disable_horz_hints_\n+   *     af_debug_disable_vert_hints_\n+   *     af_debug_disable_blue_hints_\n@@ -483,1 +483,1 @@\n-   *     _af_debug_hints\n+   *     af_debug_hints_\n@@ -587,1 +587,1 @@\n-   * load and enumerate the glyph Postscript names in a TrueType or OpenType\n+   * load and enumerate Postscript names of glyphs in a TrueType or OpenType\n@@ -590,3 +590,3 @@\n-   * Note that when you do not compile the 'psnames' module by undefining the\n-   * above `FT_CONFIG_OPTION_POSTSCRIPT_NAMES`, the 'sfnt' module will\n-   * contain additional code used to read the PS Names table from a font.\n+   * Note that if you do not compile the 'psnames' module by undefining the\n+   * above `FT_CONFIG_OPTION_POSTSCRIPT_NAMES` macro, the 'sfnt' module will\n+   * contain additional code to read the PostScript name table from a font.\n@@ -742,0 +742,18 @@\n+  \/**************************************************************************\n+   *\n+   * Define `TT_CONFIG_OPTION_NO_BORING_EXPANSION` if you want to exclude\n+   * support for 'boring' OpenType specification expansions.\n+   *\n+   *   https:\/\/github.com\/harfbuzz\/boring-expansion-spec\n+   *\n+   * Right now, the following features are covered:\n+   *\n+   *   - 'avar' version 2.0\n+   *\n+   * Most likely, this is a temporary configuration option to be removed in\n+   * the near future, since it is assumed that eventually those features are\n+   * added to the OpenType standard.\n+   *\/\n+\/* #define TT_CONFIG_OPTION_NO_BORING_EXPANSION *\/\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftoption.h","additions":27,"deletions":9,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftstdlib.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/integer-types.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/mac-support.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2020-2022 by\n+ * Copyright (C) 2020-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/public-macros.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -218,1 +218,0 @@\n-   *   FT_Get_Name_Index\n@@ -257,2 +256,0 @@\n-   *   FT_Get_Glyph_Name\n-   *   FT_Get_Postscript_Name\n@@ -265,0 +262,3 @@\n+   *   FT_Get_Name_Index\n+   *   FT_Get_Glyph_Name\n+   *   FT_Get_Postscript_Name\n@@ -649,1 +649,1 @@\n-   *   repertories (i.e., charsets), and not text encoding methods (e.g.,\n+   *   repertoires (i.e., charsets), and not text encoding methods (e.g.,\n@@ -782,1 +782,1 @@\n-   *   `TT_MAC_LANGID_FARSI` means the Farsi variant the Arabic encoding.\n+   *   `TT_MAC_LANGID_FARSI` means the Farsi variant of the Arabic encoding.\n@@ -1170,3 +1170,3 @@\n-   *     function always return the vector (0,0).  Note that FreeType doesn't\n-   *     handle kerning data from the SFNT 'GPOS' table (as present in many\n-   *     OpenType fonts).\n+   *     function always returns the vector (0,0).  Note that FreeType\n+   *     doesn't handle kerning data from the SFNT 'GPOS' table (as present\n+   *     in many OpenType fonts).\n@@ -1895,1 +1895,1 @@\n-   *     WYSIWYG layout.  Only relevant for outline glyphs.\n+   *     WYSIWYG layout.  Only relevant for scalable glyphs.\n@@ -1901,1 +1901,1 @@\n-   *     WYSIWYG layout.  Only relevant for outline glyphs.\n+   *     WYSIWYG layout.  Only relevant for scalable glyphs.\n@@ -2596,2 +2596,2 @@\n-  FT_Attach_Stream( FT_Face        face,\n-                    FT_Open_Args*  parameters );\n+  FT_Attach_Stream( FT_Face              face,\n+                    const FT_Open_Args*  parameters );\n@@ -3080,1 +3080,1 @@\n-   *     when the glyph are rendered in any of the anti-aliased modes.  See\n+   *     when the glyphs are rendered in any of the anti-aliased modes.  See\n@@ -3437,1 +3437,1 @@\n-   *     A pointer a translation vector.  Set this to NULL if you are not\n+   *     A pointer to a translation vector.  Set this to NULL if you are not\n@@ -3562,3 +3562,4 @@\n-   *      Self-intersection happens when a single connected contour intersect\n-   *      itself at some point; having these in your font definitely pose a\n-   *      problem to the rasterizer and cause artifacts, too.\n+   *      Self-intersection happens when a single connected contour\n+   *      intersects itself at some point; having these in your font\n+   *      definitely poses a problem to the rasterizer and cause artifacts,\n+   *      too.\n@@ -3843,83 +3844,0 @@\n-  \/**************************************************************************\n-   *\n-   * @function:\n-   *   FT_Get_Glyph_Name\n-   *\n-   * @description:\n-   *   Retrieve the ASCII name of a given glyph in a face.  This only works\n-   *   for those faces where @FT_HAS_GLYPH_NAMES(face) returns~1.\n-   *\n-   * @input:\n-   *   face ::\n-   *     A handle to a source face object.\n-   *\n-   *   glyph_index ::\n-   *     The glyph index.\n-   *\n-   *   buffer_max ::\n-   *     The maximum number of bytes available in the buffer.\n-   *\n-   * @output:\n-   *   buffer ::\n-   *     A pointer to a target buffer where the name is copied to.\n-   *\n-   * @return:\n-   *   FreeType error code.  0~means success.\n-   *\n-   * @note:\n-   *   An error is returned if the face doesn't provide glyph names or if the\n-   *   glyph index is invalid.  In all cases of failure, the first byte of\n-   *   `buffer` is set to~0 to indicate an empty name.\n-   *\n-   *   The glyph name is truncated to fit within the buffer if it is too\n-   *   long.  The returned string is always zero-terminated.\n-   *\n-   *   Be aware that FreeType reorders glyph indices internally so that glyph\n-   *   index~0 always corresponds to the 'missing glyph' (called '.notdef').\n-   *\n-   *   This function always returns an error if the config macro\n-   *   `FT_CONFIG_OPTION_NO_GLYPH_NAMES` is not defined in `ftoption.h`.\n-   *\/\n-  FT_EXPORT( FT_Error )\n-  FT_Get_Glyph_Name( FT_Face     face,\n-                     FT_UInt     glyph_index,\n-                     FT_Pointer  buffer,\n-                     FT_UInt     buffer_max );\n-\n-\n-  \/**************************************************************************\n-   *\n-   * @function:\n-   *   FT_Get_Postscript_Name\n-   *\n-   * @description:\n-   *   Retrieve the ASCII PostScript name of a given face, if available.\n-   *   This only works with PostScript, TrueType, and OpenType fonts.\n-   *\n-   * @input:\n-   *   face ::\n-   *     A handle to the source face object.\n-   *\n-   * @return:\n-   *   A pointer to the face's PostScript name.  `NULL` if unavailable.\n-   *\n-   * @note:\n-   *   The returned pointer is owned by the face and is destroyed with it.\n-   *\n-   *   For variation fonts, this string changes if you select a different\n-   *   instance, and you have to call `FT_Get_PostScript_Name` again to\n-   *   retrieve it.  FreeType follows Adobe TechNote #5902, 'Generating\n-   *   PostScript Names for Fonts Using OpenType Font Variations'.\n-   *\n-   *     https:\/\/download.macromedia.com\/pub\/developer\/opentype\/tech-notes\/5902.AdobePSNameGeneration.html\n-   *\n-   *   [Since 2.9] Special PostScript names for named instances are only\n-   *   returned if the named instance is set with @FT_Set_Named_Instance (and\n-   *   the font has corresponding entries in its 'fvar' table).  If\n-   *   @FT_IS_VARIATION returns true, the algorithmically derived PostScript\n-   *   name is provided, not looking up special entries for named instances.\n-   *\/\n-  FT_EXPORT( const char* )\n-  FT_Get_Postscript_Name( FT_Face  face );\n-\n-\n@@ -4246,1 +4164,2 @@\n-   *   Return the glyph index of a given glyph name.\n+   *   Return the glyph index of a given glyph name.  This only works\n+   *   for those faces where @FT_HAS_GLYPH_NAMES returns true.\n@@ -4257,0 +4176,10 @@\n+   *\n+   * @note:\n+   *   Acceptable glyph names might come from the [Adobe Glyph\n+   *   List](https:\/\/github.com\/adobe-type-tools\/agl-aglfn).  See\n+   *   @FT_Get_Glyph_Name for the inverse functionality.\n+   *\n+   *   This function has limited capabilities if the config macro\n+   *   `FT_CONFIG_OPTION_POSTSCRIPT_NAMES` is not defined in `ftoption.h`:\n+   *   It then works only for fonts that actually embed glyph names (which\n+   *   many recent OpenType fonts do not).\n@@ -4263,0 +4192,85 @@\n+  \/**************************************************************************\n+   *\n+   * @function:\n+   *   FT_Get_Glyph_Name\n+   *\n+   * @description:\n+   *   Retrieve the ASCII name of a given glyph in a face.  This only works\n+   *   for those faces where @FT_HAS_GLYPH_NAMES returns true.\n+   *\n+   * @input:\n+   *   face ::\n+   *     A handle to a source face object.\n+   *\n+   *   glyph_index ::\n+   *     The glyph index.\n+   *\n+   *   buffer_max ::\n+   *     The maximum number of bytes available in the buffer.\n+   *\n+   * @output:\n+   *   buffer ::\n+   *     A pointer to a target buffer where the name is copied to.\n+   *\n+   * @return:\n+   *   FreeType error code.  0~means success.\n+   *\n+   * @note:\n+   *   An error is returned if the face doesn't provide glyph names or if the\n+   *   glyph index is invalid.  In all cases of failure, the first byte of\n+   *   `buffer` is set to~0 to indicate an empty name.\n+   *\n+   *   The glyph name is truncated to fit within the buffer if it is too\n+   *   long.  The returned string is always zero-terminated.\n+   *\n+   *   Be aware that FreeType reorders glyph indices internally so that glyph\n+   *   index~0 always corresponds to the 'missing glyph' (called '.notdef').\n+   *\n+   *   This function has limited capabilities if the config macro\n+   *   `FT_CONFIG_OPTION_POSTSCRIPT_NAMES` is not defined in `ftoption.h`:\n+   *   It then works only for fonts that actually embed glyph names (which\n+   *   many recent OpenType fonts do not).\n+   *\/\n+  FT_EXPORT( FT_Error )\n+  FT_Get_Glyph_Name( FT_Face     face,\n+                     FT_UInt     glyph_index,\n+                     FT_Pointer  buffer,\n+                     FT_UInt     buffer_max );\n+\n+\n+  \/**************************************************************************\n+   *\n+   * @function:\n+   *   FT_Get_Postscript_Name\n+   *\n+   * @description:\n+   *   Retrieve the ASCII PostScript name of a given face, if available.\n+   *   This only works with PostScript, TrueType, and OpenType fonts.\n+   *\n+   * @input:\n+   *   face ::\n+   *     A handle to the source face object.\n+   *\n+   * @return:\n+   *   A pointer to the face's PostScript name.  `NULL` if unavailable.\n+   *\n+   * @note:\n+   *   The returned pointer is owned by the face and is destroyed with it.\n+   *\n+   *   For variation fonts, this string changes if you select a different\n+   *   instance, and you have to call `FT_Get_PostScript_Name` again to\n+   *   retrieve it.  FreeType follows Adobe TechNote #5902, 'Generating\n+   *   PostScript Names for Fonts Using OpenType Font Variations'.\n+   *\n+   *     https:\/\/download.macromedia.com\/pub\/developer\/opentype\/tech-notes\/5902.AdobePSNameGeneration.html\n+   *\n+   *   [Since 2.9] Special PostScript names for named instances are only\n+   *   returned if the named instance is set with @FT_Set_Named_Instance (and\n+   *   the font has corresponding entries in its 'fvar' table).  If\n+   *   @FT_IS_VARIATION returns true, the algorithmically derived PostScript\n+   *   name is provided, not looking up special entries for named instances.\n+   *\/\n+  FT_EXPORT( const char* )\n+  FT_Get_Postscript_Name( FT_Face  face );\n+\n+\n@@ -4349,7 +4363,0 @@\n-  \/**************************************************************************\n-   *\n-   * @section:\n-   *   base_interface\n-   *\n-   *\/\n-\n@@ -4691,1 +4698,2 @@\n-   *   on 16.16 fixed-float numbers or 2d vectors.\n+   *   on 16.16 fixed-point numbers or 2D vectors.  FreeType does not use\n+   *   floating-point data types.\n@@ -4944,2 +4952,2 @@\n-#define FREETYPE_MINOR  12\n-#define FREETYPE_PATCH  1\n+#define FREETYPE_MINOR  13\n+#define FREETYPE_PATCH  0\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/freetype.h","additions":120,"deletions":112,"binary":false,"changes":232,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2008-2022 by\n+ * Copyright (C) 2008-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftadvanc.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbbox.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbdf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbitmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftcid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2022 by\n+ * Copyright (C) 2018-2023 by\n@@ -459,0 +459,3 @@\n+   *\n+   * @since:\n+   *   2.10\n@@ -478,1 +481,1 @@\n-   *   The enumeration values losely correspond with the format numbers of\n+   *   The enumeration values loosely correspond with the format numbers of\n@@ -492,3 +495,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -524,3 +525,4 @@\n-   *   state while iterating over the stops of an @FT_ColorLine,\n-   *   representing the `ColorLine` struct of the v1 extensions to 'COLR',\n-   *   see 'https:\/\/github.com\/googlefonts\/colr-gradients-spec'.\n+   *   state while iterating over the stops of an @FT_ColorLine, representing\n+   *   the `ColorLine` struct of the v1 extensions to 'COLR', see\n+   *   'https:\/\/github.com\/googlefonts\/colr-gradients-spec'.  Do not manually\n+   *   modify fields of this iterator.\n@@ -540,3 +542,3 @@\n-   * @since:\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n+   *   read_variable ::\n+   *     A boolean keeping track of whether variable color lines are to be\n+   *     read.  Set by @FT_Get_Paint.\n@@ -544,0 +546,2 @@\n+   * @since:\n+   *   2.13\n@@ -552,0 +556,2 @@\n+    FT_Bool  read_variable;\n+\n@@ -572,3 +578,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -595,1 +599,2 @@\n-   *     The stop offset between 0 and 1 along the gradient.\n+   *     The stop offset along the gradient, expressed as a 16.16 fixed-point\n+   *     coordinate.\n@@ -601,3 +606,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -607,1 +610,1 @@\n-    FT_F2Dot14     stop_offset;\n+    FT_Fixed       stop_offset;\n@@ -624,3 +627,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -656,3 +657,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -702,3 +701,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -725,3 +722,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -789,3 +784,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -818,3 +811,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -845,3 +836,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -886,3 +875,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -911,2 +898,1 @@\n-   *   layer filled with this paint is drawn filled filled with a radial\n-   *   gradient.\n+   *   layer filled with this paint is drawn filled with a radial gradient.\n@@ -936,3 +922,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -986,3 +970,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1019,3 +1001,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1045,3 +1025,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1073,3 +1051,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1108,3 +1084,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1159,3 +1133,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward-compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1197,1 +1169,1 @@\n-   *     units) represented as a 16.16 fixed-point value.\n+   *     units represented as a 16.16 fixed-point value.\n@@ -1204,3 +1176,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1255,3 +1225,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1278,3 +1246,2 @@\n-   *   A structure representing a 'COLR'v1 `PaintComposite` paint table.\n-   *   Used for compositing two paints in a 'COLR' v1 directed acycling\n-   *   graph.\n+   *   A structure representing a 'COLR' v1 `PaintComposite` paint table.\n+   *   Used for compositing two paints in a 'COLR' v1 directed acyclic graph.\n@@ -1296,3 +1263,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1342,3 +1307,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1389,3 +1352,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1432,3 +1393,1 @@\n-   *   2.12 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1527,3 +1486,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1571,3 +1528,1 @@\n-   *   2.12 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1620,3 +1575,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1663,3 +1616,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n@@ -1701,3 +1652,1 @@\n-   *   2.11 -- **currently experimental only!**  There might be changes\n-   *   without retaining backward compatibility of both the API and ABI.\n-   *\n+   *   2.13\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftcolor.h","additions":52,"deletions":103,"binary":false,"changes":155,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2022 by\n+ * Copyright (C) 2017-2023 by\n@@ -823,1 +823,0 @@\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftdriver.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fterrdef.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -32,1 +32,1 @@\n-   *   `freetype.h` defines the handling of FreeType's enumeration\n+   *   `freetype.h`) defines the handling of FreeType's enumeration\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fterrors.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftfntfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftgasp.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -358,1 +358,1 @@\n-   *     A handle to the glyph object.\n+   *     A handle to the glyph object.  `NULL` in case of error.\n@@ -388,1 +388,1 @@\n-   *     A handle to the target glyph object.  0~in case of error.\n+   *     A handle to the target glyph object.  `NULL` in case of error.\n@@ -416,1 +416,1 @@\n-   *     1\/64th of a pixel.\n+   *     1\/64 of a pixel.\n@@ -503,1 +503,1 @@\n-   *     1\/64th of pixels if it is grid-fitted.\n+   *     1\/64 of pixels if it is grid-fitted.\n@@ -674,1 +674,1 @@\n-   *     A handle to the target glyph object.\n+   *     A handle to the target glyph object.  Can be `NULL`.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftglyph.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftgzip.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftimage.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftincrem.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n@@ -140,1 +140,1 @@\n-   *     with weights of [0x08 0x4D 0x56 0x4D 0x08] in 1\/256th units.\n+   *     with weights of [0x08 0x4D 0x56 0x4D 0x08] in 1\/256 units.\n@@ -144,1 +144,1 @@\n-   *     weights of [0x00 0x55 0x56 0x55 0x00] in 1\/256th units.\n+   *     weights of [0x00 0x55 0x56 0x55 0x00] in 1\/256 units.\n@@ -229,1 +229,1 @@\n-   *     uses them to specify the filter weights in 1\/256th units.\n+   *     uses them to specify the filter weights in 1\/256 units.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftlcdfil.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftlist.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2020-2022 by\n+ * Copyright (C) 2020-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftlogging.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmac.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -401,0 +401,4 @@\n+   *   The design coordinates are 16.16 fractional values for TrueType GX and\n+   *   OpenType variation fonts.  For Adobe MM fonts, the values are\n+   *   integers.\n+   *\n@@ -443,0 +447,5 @@\n+   * @note:\n+   *   The design coordinates are 16.16 fractional values for TrueType GX and\n+   *   OpenType variation fonts.  For Adobe MM fonts, the values are\n+   *   integers.\n+   *\n@@ -474,3 +483,3 @@\n-   *     The design coordinates array (each element must be between 0 and 1.0\n-   *     for Adobe MM fonts, and between -1.0 and 1.0 for TrueType GX and\n-   *     OpenType variation fonts).\n+   *     The design coordinates array.  Each element is a 16.16 fractional\n+   *     value and must be between 0 and 1.0 for Adobe MM fonts, and between\n+   *     -1.0 and 1.0 for TrueType GX and OpenType variation fonts.\n@@ -521,1 +530,1 @@\n-   *     The normalized blend coordinates array.\n+   *     The normalized blend coordinates array (as 16.16 fractional values).\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmm.h","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmodapi.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmoderr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftoutln.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2022 by\n+ * Copyright (C) 2017-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftparams.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftrender.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsizes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsnames.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n@@ -296,1 +296,1 @@\n-   *     expressed as 16.16 fixed point value.\n+   *     expressed as 16.16 fixed-point value.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftstroke.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n@@ -71,1 +71,1 @@\n-  \/* Slant an outline glyph to the right by about 12 degrees. *\/\n+  \/* Slant an outline glyph to the right by about 12 degrees.              *\/\n@@ -75,0 +75,9 @@\n+  \/* Slant an outline glyph by a given sine of an angle.  You can apply    *\/\n+  \/* slant along either x- or y-axis by choosing a corresponding non-zero  *\/\n+  \/* argument.  If both slants are non-zero, some affine transformation    *\/\n+  \/* will result.                                                          *\/\n+  FT_EXPORT( void )\n+  FT_GlyphSlot_Slant( FT_GlyphSlot  slot,\n+                      FT_Fixed      xslant,\n+                      FT_Fixed      yslant );\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsynth.h","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -232,1 +232,2 @@\n-   *     The offset of read in stream (always from start).\n+   *     The offset from the start of the stream to seek to if this is a seek\n+   *     operation (see note).\n@@ -244,2 +245,7 @@\n-   *   This function might be called to perform a seek or skip operation with\n-   *   a `count` of~0.  A non-zero return value then indicates an error.\n+   *   This function performs a seek *or* a read operation depending on the\n+   *   argument values.  If `count` is zero, the operation is a seek to\n+   *   `offset` bytes.  If `count` is >~0, the operation is a read of `count`\n+   *   bytes from the current position in the stream, and the `offset` value\n+   *   should be ignored.\n+   *\n+   *   For seek operations, a non-zero return value indicates an error.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsystem.h","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fttrigon.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -48,1 +48,4 @@\n-   *   font-specific structures are defined in a different section.\n+   *   font-specific structures are defined in a different section.  Note\n+   *   that FreeType does not use floating-point data types.  Fractional\n+   *   values are represented by fixed-point integers, with lower bits\n+   *   storing the fractional part.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fttypes.h","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/autohint.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2022 by\n+ * Copyright (C) 2017-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/cffotypes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -318,1 +318,1 @@\n-    \/* Blended values are stored as 5-byte fixed point values.            *\/\n+    \/* Blended values are stored as 5-byte fixed-point values.            *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/cfftypes.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2020-2022 by\n+ * Copyright (C) 2020-2023 by\n@@ -37,0 +37,13 @@\n+#endif\n+\n+  \/* Newer compilers warn for fall-through case statements. *\/\n+#ifndef FALL_THROUGH\n+#  if ( defined( __STDC_VERSION__ ) && __STDC_VERSION__ > 201710L ) || \\\n+      ( defined( __cplusplus ) && __cplusplus > 201402L )\n+#    define FALL_THROUGH  [[__fallthrough__]]\n+#  elif ( defined( __GNUC__ ) && __GNUC__ >= 7 )          || \\\n+        ( defined( __clang__ ) && __clang_major__ >= 10 )\n+#    define FALL_THROUGH  __attribute__(( __fallthrough__ ))\n+#  else\n+#    define FALL_THROUGH  ( (void)0 )\n+#  endif\n@@ -261,1 +274,1 @@\n-  \/* See `freetype\/config\/compiler_macros.h` for the `FT_EXPORT` definition *\/\n+  \/* See `freetype\/config\/public-macros.h` for the `FT_EXPORT` definition *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/compiler-macros.h","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -281,0 +281,34 @@\n+  \/**************************************************************************\n+   *\n+   * @function:\n+   *   FT_MulAddFix\n+   *\n+   * @description:\n+   *   Compute `(s[0] * f[0] + s[1] * f[1] + ...) \/ 0x10000`, where `s[n]` is\n+   *   usually a 16.16 scalar.\n+   *\n+   * @input:\n+   *   s ::\n+   *     The array of scalars.\n+   *   f ::\n+   *     The array of factors.\n+   *   count ::\n+   *     The number of entries in the array.\n+   *\n+   * @return:\n+   *   The result of `(s[0] * f[0] + s[1] * f[1] + ...) \/ 0x10000`.\n+   *\n+   * @note:\n+   *   This function is currently used for the scaled delta computation of\n+   *   variation stores.  It internally uses 64-bit data types when\n+   *   available, otherwise it emulates 64-bit math by using 32-bit\n+   *   operations, which produce a correct result but most likely at a slower\n+   *   performance in comparison to the implementation base on `int64_t`.\n+   *\n+   *\/\n+  FT_BASE( FT_Int32 )\n+  FT_MulAddFix( FT_Fixed*  s,\n+                FT_Int32*  f,\n+                FT_UInt    count );\n+\n+\n@@ -416,5 +450,5 @@\n-#pragma aux FT_MSB_i386 =     \\\n-  \"bsr eax, eax\"              \\\n-  parm [eax] nomemory         \\\n-  value [eax]                 \\\n-  modify exact [eax] nomemory;\n+#pragma aux FT_MSB_i386 =             \\\n+  \"bsr eax, eax\"                      \\\n+  __parm [__eax] __nomemory           \\\n+  __value [__eax]                     \\\n+  __modify __exact [__eax] __nomemory;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftcalc.h","additions":40,"deletions":6,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftdebug.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftdrv.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftgloadr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -99,2 +99,2 @@\n-  FT_BASE( const char* )  _ft_debug_file;\n-  FT_BASE( long )         _ft_debug_lineno;\n+  FT_BASE( const char* )  ft_debug_file_;\n+  FT_BASE( long )         ft_debug_lineno_;\n@@ -102,2 +102,2 @@\n-#define FT_DEBUG_INNER( exp )  ( _ft_debug_file   = __FILE__, \\\n-                                 _ft_debug_lineno = __LINE__, \\\n+#define FT_DEBUG_INNER( exp )  ( ft_debug_file_   = __FILE__, \\\n+                                 ft_debug_lineno_ = __LINE__, \\\n@@ -106,2 +106,2 @@\n-#define FT_ASSIGNP_INNER( p, exp )  ( _ft_debug_file   = __FILE__, \\\n-                                      _ft_debug_lineno = __LINE__, \\\n+#define FT_ASSIGNP_INNER( p, exp )  ( ft_debug_file_   = __FILE__, \\\n+                                      ft_debug_lineno_ = __LINE__, \\\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftmemory.h","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,85 @@\n+\/****************************************************************************\n+ *\n+ * ftmmtypes.h\n+ *\n+ *   OpenType Variations type definitions for internal use\n+ *   with the multi-masters service (specification).\n+ *\n+ * Copyright (C) 2022-2023 by\n+ * David Turner, Robert Wilhelm, Werner Lemberg, George Williams, and\n+ * Dominik Röttsches.\n+ *\n+ * This file is part of the FreeType project, and may only be used,\n+ * modified, and distributed under the terms of the FreeType project\n+ * license, LICENSE.TXT.  By continuing to use, modify, or distribute\n+ * this file you indicate that you have read the license and\n+ * understand and accept it fully.\n+ *\n+ *\/\n+\n+\n+#ifndef FTMMTYPES_H_\n+#define FTMMTYPES_H_\n+\n+FT_BEGIN_HEADER\n+\n+\n+  typedef FT_Int32  FT_ItemVarDelta;\n+\n+  typedef struct  GX_ItemVarDataRec_\n+  {\n+    FT_UInt            itemCount;       \/* number of delta sets per item    *\/\n+    FT_UInt            regionIdxCount;  \/* number of region indices         *\/\n+    FT_UInt*           regionIndices;   \/* array of `regionCount' indices;  *\/\n+                                        \/* these index `varRegionList'      *\/\n+    FT_ItemVarDelta*   deltaSet;        \/* array of `itemCount' deltas      *\/\n+                                        \/* use `innerIndex' for this array  *\/\n+\n+  } GX_ItemVarDataRec, *GX_ItemVarData;\n+\n+\n+  \/* contribution of one axis to a region *\/\n+  typedef struct  GX_AxisCoordsRec_\n+  {\n+    FT_Fixed  startCoord;\n+    FT_Fixed  peakCoord;      \/* zero means no effect (factor = 1) *\/\n+    FT_Fixed  endCoord;\n+\n+  } GX_AxisCoordsRec, *GX_AxisCoords;\n+\n+\n+  typedef struct  GX_VarRegionRec_\n+  {\n+    GX_AxisCoords  axisList;               \/* array of axisCount records *\/\n+\n+  } GX_VarRegionRec, *GX_VarRegion;\n+\n+\n+  \/* item variation store *\/\n+  typedef struct  GX_ItemVarStoreRec_\n+  {\n+    FT_UInt         dataCount;\n+    GX_ItemVarData  varData;            \/* array of dataCount records;     *\/\n+                                        \/* use `outerIndex' for this array *\/\n+    FT_UShort     axisCount;\n+    FT_UInt       regionCount;          \/* total number of regions defined *\/\n+    GX_VarRegion  varRegionList;\n+\n+  } GX_ItemVarStoreRec, *GX_ItemVarStore;\n+\n+\n+  typedef struct  GX_DeltaSetIdxMapRec_\n+  {\n+    FT_ULong  mapCount;\n+    FT_UInt*  outerIndex;               \/* indices to item var data *\/\n+    FT_UInt*  innerIndex;               \/* indices to delta set     *\/\n+\n+  } GX_DeltaSetIdxMapRec, *GX_DeltaSetIdxMap;\n+\n+\n+FT_END_HEADER\n+\n+#endif \/* FTMMTYPES_H_ *\/\n+\n+\n+\/* END *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftmmtypes.h","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2022 by\n+ * Copyright (C) 2017-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftpsprop.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftrfork.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftserv.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -241,2 +241,2 @@\n-#define FT_NEXT_SHORT( buffer )                                   \\\n-          ( (short)( buffer += 2, FT_PEEK_SHORT( buffer - 2 ) ) )\n+#define FT_NEXT_SHORT( buffer )                        \\\n+          ( buffer += 2, FT_PEEK_SHORT( buffer - 2 ) )\n@@ -244,2 +244,2 @@\n-#define FT_NEXT_USHORT( buffer )                                            \\\n-          ( (unsigned short)( buffer += 2, FT_PEEK_USHORT( buffer - 2 ) ) )\n+#define FT_NEXT_USHORT( buffer )                        \\\n+          ( buffer += 2, FT_PEEK_USHORT( buffer - 2 ) )\n@@ -247,2 +247,2 @@\n-#define FT_NEXT_OFF3( buffer )                                  \\\n-          ( (long)( buffer += 3, FT_PEEK_OFF3( buffer - 3 ) ) )\n+#define FT_NEXT_OFF3( buffer )                        \\\n+          ( buffer += 3, FT_PEEK_OFF3( buffer - 3 ) )\n@@ -250,2 +250,2 @@\n-#define FT_NEXT_UOFF3( buffer )                                           \\\n-          ( (unsigned long)( buffer += 3, FT_PEEK_UOFF3( buffer - 3 ) ) )\n+#define FT_NEXT_UOFF3( buffer )                        \\\n+          ( buffer += 3, FT_PEEK_UOFF3( buffer - 3 ) )\n@@ -253,2 +253,2 @@\n-#define FT_NEXT_LONG( buffer )                                  \\\n-          ( (long)( buffer += 4, FT_PEEK_LONG( buffer - 4 ) ) )\n+#define FT_NEXT_LONG( buffer )                        \\\n+          ( buffer += 4, FT_PEEK_LONG( buffer - 4 ) )\n@@ -256,2 +256,2 @@\n-#define FT_NEXT_ULONG( buffer )                                           \\\n-          ( (unsigned long)( buffer += 4, FT_PEEK_ULONG( buffer - 4 ) ) )\n+#define FT_NEXT_ULONG( buffer )                        \\\n+          ( buffer += 4, FT_PEEK_ULONG( buffer - 4 ) )\n@@ -260,2 +260,2 @@\n-#define FT_NEXT_SHORT_LE( buffer )                                   \\\n-          ( (short)( buffer += 2, FT_PEEK_SHORT_LE( buffer - 2 ) ) )\n+#define FT_NEXT_SHORT_LE( buffer )                        \\\n+          ( buffer += 2, FT_PEEK_SHORT_LE( buffer - 2 ) )\n@@ -263,2 +263,2 @@\n-#define FT_NEXT_USHORT_LE( buffer )                                            \\\n-          ( (unsigned short)( buffer += 2, FT_PEEK_USHORT_LE( buffer - 2 ) ) )\n+#define FT_NEXT_USHORT_LE( buffer )                        \\\n+          ( buffer += 2, FT_PEEK_USHORT_LE( buffer - 2 ) )\n@@ -266,2 +266,2 @@\n-#define FT_NEXT_OFF3_LE( buffer )                                  \\\n-          ( (long)( buffer += 3, FT_PEEK_OFF3_LE( buffer - 3 ) ) )\n+#define FT_NEXT_OFF3_LE( buffer )                        \\\n+          ( buffer += 3, FT_PEEK_OFF3_LE( buffer - 3 ) )\n@@ -269,2 +269,2 @@\n-#define FT_NEXT_UOFF3_LE( buffer )                                           \\\n-          ( (unsigned long)( buffer += 3, FT_PEEK_UOFF3_LE( buffer - 3 ) ) )\n+#define FT_NEXT_UOFF3_LE( buffer )                        \\\n+          ( buffer += 3, FT_PEEK_UOFF3_LE( buffer - 3 ) )\n@@ -272,2 +272,2 @@\n-#define FT_NEXT_LONG_LE( buffer )                                  \\\n-          ( (long)( buffer += 4, FT_PEEK_LONG_LE( buffer - 4 ) ) )\n+#define FT_NEXT_LONG_LE( buffer )                        \\\n+          ( buffer += 4, FT_PEEK_LONG_LE( buffer - 4 ) )\n@@ -275,2 +275,2 @@\n-#define FT_NEXT_ULONG_LE( buffer )                                           \\\n-          ( (unsigned long)( buffer += 4, FT_PEEK_ULONG_LE( buffer - 4 ) ) )\n+#define FT_NEXT_ULONG_LE( buffer )                        \\\n+          ( buffer += 4, FT_PEEK_ULONG_LE( buffer - 4 ) )\n@@ -310,11 +310,11 @@\n-#define FT_GET_SHORT()      FT_GET_MACRO( FT_Stream_GetUShort, FT_Short )\n-#define FT_GET_USHORT()     FT_GET_MACRO( FT_Stream_GetUShort, FT_UShort )\n-#define FT_GET_UOFF3()      FT_GET_MACRO( FT_Stream_GetUOffset, FT_ULong )\n-#define FT_GET_LONG()       FT_GET_MACRO( FT_Stream_GetULong, FT_Long )\n-#define FT_GET_ULONG()      FT_GET_MACRO( FT_Stream_GetULong, FT_ULong )\n-#define FT_GET_TAG4()       FT_GET_MACRO( FT_Stream_GetULong, FT_ULong )\n-\n-#define FT_GET_SHORT_LE()   FT_GET_MACRO( FT_Stream_GetUShortLE, FT_Short )\n-#define FT_GET_USHORT_LE()  FT_GET_MACRO( FT_Stream_GetUShortLE, FT_UShort )\n-#define FT_GET_LONG_LE()    FT_GET_MACRO( FT_Stream_GetULongLE, FT_Long )\n-#define FT_GET_ULONG_LE()   FT_GET_MACRO( FT_Stream_GetULongLE, FT_ULong )\n+#define FT_GET_SHORT()      FT_GET_MACRO( FT_Stream_GetUShort, FT_Int16 )\n+#define FT_GET_USHORT()     FT_GET_MACRO( FT_Stream_GetUShort, FT_UInt16 )\n+#define FT_GET_UOFF3()      FT_GET_MACRO( FT_Stream_GetUOffset, FT_UInt32 )\n+#define FT_GET_LONG()       FT_GET_MACRO( FT_Stream_GetULong, FT_Int32 )\n+#define FT_GET_ULONG()      FT_GET_MACRO( FT_Stream_GetULong, FT_UInt32 )\n+#define FT_GET_TAG4()       FT_GET_MACRO( FT_Stream_GetULong, FT_UInt32 )\n+\n+#define FT_GET_SHORT_LE()   FT_GET_MACRO( FT_Stream_GetUShortLE, FT_Int16 )\n+#define FT_GET_USHORT_LE()  FT_GET_MACRO( FT_Stream_GetUShortLE, FT_UInt16 )\n+#define FT_GET_LONG_LE()    FT_GET_MACRO( FT_Stream_GetULongLE, FT_Int32 )\n+#define FT_GET_ULONG_LE()   FT_GET_MACRO( FT_Stream_GetULongLE, FT_UInt32 )\n@@ -337,5 +337,5 @@\n-#define FT_READ_SHORT( var )      FT_READ_MACRO( FT_Stream_ReadUShort, FT_Short, var )\n-#define FT_READ_USHORT( var )     FT_READ_MACRO( FT_Stream_ReadUShort, FT_UShort, var )\n-#define FT_READ_UOFF3( var )      FT_READ_MACRO( FT_Stream_ReadUOffset, FT_ULong, var )\n-#define FT_READ_LONG( var )       FT_READ_MACRO( FT_Stream_ReadULong, FT_Long, var )\n-#define FT_READ_ULONG( var )      FT_READ_MACRO( FT_Stream_ReadULong, FT_ULong, var )\n+#define FT_READ_SHORT( var )      FT_READ_MACRO( FT_Stream_ReadUShort, FT_Int16, var )\n+#define FT_READ_USHORT( var )     FT_READ_MACRO( FT_Stream_ReadUShort, FT_UInt16, var )\n+#define FT_READ_UOFF3( var )      FT_READ_MACRO( FT_Stream_ReadUOffset, FT_UInt32, var )\n+#define FT_READ_LONG( var )       FT_READ_MACRO( FT_Stream_ReadULong, FT_Int32, var )\n+#define FT_READ_ULONG( var )      FT_READ_MACRO( FT_Stream_ReadULong, FT_UInt32, var )\n@@ -343,4 +343,4 @@\n-#define FT_READ_SHORT_LE( var )   FT_READ_MACRO( FT_Stream_ReadUShortLE, FT_Short, var )\n-#define FT_READ_USHORT_LE( var )  FT_READ_MACRO( FT_Stream_ReadUShortLE, FT_UShort, var )\n-#define FT_READ_LONG_LE( var )    FT_READ_MACRO( FT_Stream_ReadULongLE, FT_Long, var )\n-#define FT_READ_ULONG_LE( var )   FT_READ_MACRO( FT_Stream_ReadULongLE, FT_ULong, var )\n+#define FT_READ_SHORT_LE( var )   FT_READ_MACRO( FT_Stream_ReadUShortLE, FT_Int16, var )\n+#define FT_READ_USHORT_LE( var )  FT_READ_MACRO( FT_Stream_ReadUShortLE, FT_UInt16, var )\n+#define FT_READ_LONG_LE( var )    FT_READ_MACRO( FT_Stream_ReadULongLE, FT_Int32, var )\n+#define FT_READ_ULONG_LE( var )   FT_READ_MACRO( FT_Stream_ReadULongLE, FT_UInt32, var )\n@@ -462,1 +462,1 @@\n-  FT_BASE( FT_UShort )\n+  FT_BASE( FT_UInt16 )\n@@ -466,1 +466,1 @@\n-  FT_BASE( FT_ULong )\n+  FT_BASE( FT_UInt32 )\n@@ -470,1 +470,1 @@\n-  FT_BASE( FT_ULong )\n+  FT_BASE( FT_UInt32 )\n@@ -474,1 +474,1 @@\n-  FT_BASE( FT_UShort )\n+  FT_BASE( FT_UInt16 )\n@@ -478,1 +478,1 @@\n-  FT_BASE( FT_ULong )\n+  FT_BASE( FT_UInt32 )\n@@ -488,1 +488,1 @@\n-  FT_BASE( FT_UShort )\n+  FT_BASE( FT_UInt16 )\n@@ -498,1 +498,1 @@\n-  FT_BASE( FT_ULong )\n+  FT_BASE( FT_UInt32 )\n@@ -503,1 +503,1 @@\n-  FT_BASE( FT_UShort )\n+  FT_BASE( FT_UInt16 )\n@@ -508,1 +508,1 @@\n-  FT_BASE( FT_ULong )\n+  FT_BASE( FT_UInt32 )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftstream.h","additions":54,"deletions":54,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/fttrace.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftvalid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -135,3 +135,0 @@\n-   *   num_elems ::\n-   *     The current number of elements in table.\n-   *\n@@ -158,1 +155,0 @@\n-    FT_Int             num_elems;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/psaux.h","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n@@ -297,1 +297,1 @@\n-   *   output, they are in 1\/64th of pixels.\n+   *   output, they are in 1\/64 of pixels.\n@@ -610,1 +610,1 @@\n-   *   output, they are in 1\/64th of pixels.\n+   *   output, they are in 1\/64 of pixels.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/pshints.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svbdf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2022 by\n+ * Copyright (C) 2017-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svcfftl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svcid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svfntfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svgldict.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svgxval.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svkern.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2016-2022 by\n+ * Copyright (C) 2016-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svmetric.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * Copyright (C) 2003-2022 by\n- * David Turner, Robert Wilhelm, and Werner Lemberg.\n+ * Copyright (C) 2003-2023 by\n+ * David Turner, Robert Wilhelm, Werner Lemberg, and Dominik Röttsches.\n@@ -22,0 +22,1 @@\n+#include <freetype\/ftmm.h>\n@@ -23,0 +24,1 @@\n+#include <freetype\/internal\/ftmmtypes.h>\n@@ -99,0 +101,26 @@\n+  typedef FT_Error\n+  (*FT_Var_Load_Delta_Set_Idx_Map_Func)( FT_Face            face,\n+                                         FT_ULong           offset,\n+                                         GX_DeltaSetIdxMap  map,\n+                                         GX_ItemVarStore    itemStore,\n+                                         FT_ULong           table_len );\n+\n+  typedef FT_Error\n+  (*FT_Var_Load_Item_Var_Store_Func)( FT_Face          face,\n+                                      FT_ULong         offset,\n+                                      GX_ItemVarStore  itemStore );\n+\n+  typedef FT_ItemVarDelta\n+  (*FT_Var_Get_Item_Delta_Func)( FT_Face          face,\n+                                 GX_ItemVarStore  itemStore,\n+                                 FT_UInt          outerIndex,\n+                                 FT_UInt          innerIndex );\n+\n+  typedef void\n+  (*FT_Var_Done_Item_Var_Store_Func)( FT_Face          face,\n+                                      GX_ItemVarStore  itemStore );\n+\n+  typedef void\n+  (*FT_Var_Done_Delta_Set_Idx_Map_Func)( FT_Face            face,\n+                                         GX_DeltaSetIdxMap  deltaSetIdxMap );\n+\n@@ -102,10 +130,10 @@\n-    FT_Get_MM_Func               get_mm;\n-    FT_Set_MM_Design_Func        set_mm_design;\n-    FT_Set_MM_Blend_Func         set_mm_blend;\n-    FT_Get_MM_Blend_Func         get_mm_blend;\n-    FT_Get_MM_Var_Func           get_mm_var;\n-    FT_Set_Var_Design_Func       set_var_design;\n-    FT_Get_Var_Design_Func       get_var_design;\n-    FT_Set_Instance_Func         set_instance;\n-    FT_Set_MM_WeightVector_Func  set_mm_weightvector;\n-    FT_Get_MM_WeightVector_Func  get_mm_weightvector;\n+    FT_Get_MM_Func                        get_mm;\n+    FT_Set_MM_Design_Func                 set_mm_design;\n+    FT_Set_MM_Blend_Func                  set_mm_blend;\n+    FT_Get_MM_Blend_Func                  get_mm_blend;\n+    FT_Get_MM_Var_Func                    get_mm_var;\n+    FT_Set_Var_Design_Func                set_var_design;\n+    FT_Get_Var_Design_Func                get_var_design;\n+    FT_Set_Instance_Func                  set_instance;\n+    FT_Set_MM_WeightVector_Func           set_mm_weightvector;\n+    FT_Get_MM_WeightVector_Func           get_mm_weightvector;\n@@ -114,2 +142,7 @@\n-    FT_Get_Var_Blend_Func  get_var_blend;\n-    FT_Done_Blend_Func     done_blend;\n+    FT_Var_Load_Delta_Set_Idx_Map_Func    load_delta_set_idx_map;\n+    FT_Var_Load_Item_Var_Store_Func       load_item_var_store;\n+    FT_Var_Get_Item_Delta_Func            get_item_delta;\n+    FT_Var_Done_Item_Var_Store_Func       done_item_var_store;\n+    FT_Var_Done_Delta_Set_Idx_Map_Func    done_delta_set_idx_map;\n+    FT_Get_Var_Blend_Func                 get_var_blend;\n+    FT_Done_Blend_Func                    done_blend;\n@@ -119,27 +152,37 @@\n-#define FT_DEFINE_SERVICE_MULTIMASTERSREC( class_,            \\\n-                                           get_mm_,           \\\n-                                           set_mm_design_,    \\\n-                                           set_mm_blend_,     \\\n-                                           get_mm_blend_,     \\\n-                                           get_mm_var_,       \\\n-                                           set_var_design_,   \\\n-                                           get_var_design_,   \\\n-                                           set_instance_,     \\\n-                                           set_weightvector_, \\\n-                                           get_weightvector_, \\\n-                                           get_var_blend_,    \\\n-                                           done_blend_ )      \\\n-  static const FT_Service_MultiMastersRec  class_ =           \\\n-  {                                                           \\\n-    get_mm_,                                                  \\\n-    set_mm_design_,                                           \\\n-    set_mm_blend_,                                            \\\n-    get_mm_blend_,                                            \\\n-    get_mm_var_,                                              \\\n-    set_var_design_,                                          \\\n-    get_var_design_,                                          \\\n-    set_instance_,                                            \\\n-    set_weightvector_,                                        \\\n-    get_weightvector_,                                        \\\n-    get_var_blend_,                                           \\\n-    done_blend_                                               \\\n+#define FT_DEFINE_SERVICE_MULTIMASTERSREC( class_,                  \\\n+                                           get_mm_,                 \\\n+                                           set_mm_design_,          \\\n+                                           set_mm_blend_,           \\\n+                                           get_mm_blend_,           \\\n+                                           get_mm_var_,             \\\n+                                           set_var_design_,         \\\n+                                           get_var_design_,         \\\n+                                           set_instance_,           \\\n+                                           set_weightvector_,       \\\n+                                           get_weightvector_,       \\\n+                                           load_delta_set_idx_map_, \\\n+                                           load_item_var_store_,    \\\n+                                           get_item_delta_,         \\\n+                                           done_item_var_store_,    \\\n+                                           done_delta_set_idx_map_, \\\n+                                           get_var_blend_,          \\\n+                                           done_blend_ )            \\\n+  static const FT_Service_MultiMastersRec  class_ =                 \\\n+  {                                                                 \\\n+    get_mm_,                                                        \\\n+    set_mm_design_,                                                 \\\n+    set_mm_blend_,                                                  \\\n+    get_mm_blend_,                                                  \\\n+    get_mm_var_,                                                    \\\n+    set_var_design_,                                                \\\n+    get_var_design_,                                                \\\n+    set_instance_,                                                  \\\n+    set_weightvector_,                                              \\\n+    get_weightvector_,                                              \\\n+    load_delta_set_idx_map_,                                        \\\n+    load_item_var_store_,                                           \\\n+    get_item_delta_,                                                \\\n+    done_item_var_store_,                                           \\\n+    done_delta_set_idx_map_,                                        \\\n+    get_var_blend_,                                                 \\\n+    done_blend_                                                     \\\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svmm.h","additions":84,"deletions":41,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svotval.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpfr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpostnm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2012-2022 by\n+ * Copyright (C) 2012-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svprop.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpscmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpsinfo.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svsfnt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svttcmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svtteng.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svttglyf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svwinfnt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/sfnt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2022 by\n+ * Copyright (C) 2022-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/svginterface.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -175,2 +175,2 @@\n-    FT_Fixed       Ascender;\n-    FT_Fixed       Descender;\n+    FT_Fixed       Ascender;     \/* optional, mind the zero *\/\n+    FT_Fixed       Descender;    \/* optional, mind the zero *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/t1types.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/tttypes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/wofftypes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2022 by\n+ * Copyright (C) 2022-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/otsvg.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/t1tables.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ttnameid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -427,2 +427,2 @@\n-    FT_UShort  usLowerOpticalPointSize;       \/* in twips (1\/20th points) *\/\n-    FT_UShort  usUpperOpticalPointSize;       \/* in twips (1\/20th points) *\/\n+    FT_UShort  usLowerOpticalPointSize;       \/* in twips (1\/20 points) *\/\n+    FT_UShort  usUpperOpticalPointSize;       \/* in twips (1\/20 points) *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/tttables.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/tttags.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/ft2build.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.cin","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-\/\/ Copyright (C) 2013-2022 by\n+\/\/ Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.dat","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.hin","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n@@ -653,1 +653,1 @@\n-    FT_Set_Charmap( face, oldmap );\n+    face->charmap = oldmap;\n@@ -744,1 +744,2 @@\n-                    blue->ref.cur \/ 64.0, blue->ref.fit \/ 64.0 ));\n+                    (double)blue->ref.cur \/ 64,\n+                    (double)blue->ref.fit \/ 64 ));\n@@ -746,1 +747,2 @@\n-                    blue->shoot.cur \/ 64.0, blue->shoot.fit \/ 64.0 ));\n+                    (double)blue->shoot.cur \/ 64,\n+                    (double)blue->shoot.fit \/ 64 ));\n@@ -1047,1 +1049,1 @@\n-      FT_Int   ee;\n+      FT_UInt  ee;\n@@ -1632,2 +1634,4 @@\n-                stem_edge->opos \/ 64.0, stem_edge->pos \/ 64.0,\n-                dist \/ 64.0, fitted_width \/ 64.0 ));\n+                (double)stem_edge->opos \/ 64,\n+                (double)stem_edge->pos \/ 64,\n+                (double)dist \/ 64,\n+                (double)fitted_width \/ 64 ));\n@@ -1853,2 +1857,2 @@\n-                    edge1 - edges, edge1->fpos, edge1->opos \/ 64.0,\n-                    blue->fit \/ 64.0, edge1->pos \/ 64.0 ));\n+                    edge1 - edges, edge1->fpos, (double)edge1->opos \/ 64,\n+                    (double)blue->fit \/ 64, (double)edge1->pos \/ 64 ));\n@@ -2027,2 +2031,2 @@\n-               ( edge->pos - edge->opos ) \/ 64.0,\n-               ( edge2->pos - edge2->opos ) \/ 64.0 );\n+               (double)( edge->pos - edge->opos ) \/ 64,\n+               (double)( edge2->pos - edge2->opos ) \/ 64 );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afcjk.c","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afcjk.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afcover.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afdummy.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afdummy.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2005-2022 by\n+ * Copyright (C) 2005-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aferrors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -132,1 +132,2 @@\n-    FT_UInt     ss;\n+    FT_UShort   ss;\n+    FT_UShort   dflt        = 0xFFFFU; \/* a non-valid value *\/\n@@ -134,1 +135,0 @@\n-    FT_UInt     dflt        = ~0U; \/* a non-valid value *\/\n@@ -138,1 +138,1 @@\n-    for ( i = 0; i < (FT_UInt)globals->glyph_count; i++ )\n+    for ( i = 0; i < globals->glyph_count; i++ )\n@@ -171,2 +171,1 @@\n-        if ( (FT_UInt)style_class->script ==\n-             globals->module->default_script )\n+        if ( style_class->script == globals->module->default_script )\n@@ -186,1 +185,1 @@\n-               gindex < (FT_ULong)globals->glyph_count                    &&\n+               gindex < globals->glyph_count                              &&\n@@ -188,1 +187,1 @@\n-            gstyles[gindex] = (FT_UShort)ss;\n+            gstyles[gindex] = ss;\n@@ -197,1 +196,1 @@\n-            if ( gindex < (FT_ULong)globals->glyph_count                    &&\n+            if ( gindex < globals->glyph_count                              &&\n@@ -199,1 +198,1 @@\n-              gstyles[gindex] = (FT_UShort)ss;\n+              gstyles[gindex] = ss;\n@@ -214,3 +213,3 @@\n-          if ( gindex != 0                                          &&\n-               gindex < (FT_ULong)globals->glyph_count              &&\n-               ( gstyles[gindex] & AF_STYLE_MASK ) == (FT_UShort)ss )\n+          if ( gindex != 0                               &&\n+               gindex < globals->glyph_count             &&\n+               ( gstyles[gindex] & AF_STYLE_MASK ) == ss )\n@@ -226,2 +225,2 @@\n-            if ( gindex < (FT_ULong)globals->glyph_count              &&\n-                 ( gstyles[gindex] & AF_STYLE_MASK ) == (FT_UShort)ss )\n+            if ( gindex < globals->glyph_count             &&\n+                 ( gstyles[gindex] & AF_STYLE_MASK ) == ss )\n@@ -258,1 +257,1 @@\n-      if ( gindex != 0 && gindex < (FT_ULong)globals->glyph_count )\n+      if ( gindex != 0 && gindex < globals->glyph_count )\n@@ -269,1 +268,1 @@\n-      FT_Long  nn;\n+      FT_UInt  nn;\n@@ -293,1 +292,1 @@\n-      FT_Long        idx;\n+      FT_UInt        idx;\n@@ -305,1 +304,1 @@\n-          FT_TRACE4(( \" %ld\", idx ));\n+          FT_TRACE4(( \" %d\", idx ));\n@@ -321,1 +320,1 @@\n-    FT_Set_Charmap( face, old_charmap );\n+    face->charmap = old_charmap;\n@@ -348,1 +347,1 @@\n-    globals->glyph_count               = face->num_glyphs;\n+    globals->glyph_count               = (FT_UInt)face->num_glyphs;\n@@ -360,1 +359,1 @@\n-    globals->hb_font = hb_ft_font_create( face, NULL );\n+    globals->hb_font = hb_ft_font_create_( face, NULL );\n@@ -432,1 +431,1 @@\n-    if ( gindex >= (FT_ULong)globals->glyph_count )\n+    if ( gindex >= globals->glyph_count )\n@@ -504,1 +503,1 @@\n-    if ( gindex < (FT_ULong)globals->glyph_count )\n+    if ( gindex < globals->glyph_count )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afglobal.c","additions":23,"deletions":24,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -108,1 +108,1 @@\n-    FT_Long          glyph_count;    \/* same as face->num_glyphs *\/\n+    FT_UInt          glyph_count;    \/* unsigned face->num_glyphs *\/\n@@ -161,1 +161,1 @@\n-  FT_LOCAL_DEF( FT_Bool )\n+  FT_LOCAL( FT_Bool )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afglobal.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -154,3 +154,3 @@\n-      FT_Int  old_max = axis->max_segments;\n-      FT_Int  new_max = old_max;\n-      FT_Int  big_max = (FT_Int)( FT_INT_MAX \/ sizeof ( *segment ) );\n+      FT_UInt  old_max = axis->max_segments;\n+      FT_UInt  new_max = old_max;\n+      FT_UInt  big_max = FT_INT_MAX \/ sizeof ( *segment );\n@@ -196,1 +196,1 @@\n-  FT_LOCAL( FT_Error )\n+  FT_LOCAL_DEF( FT_Error )\n@@ -219,3 +219,3 @@\n-      FT_Int  old_max = axis->max_edges;\n-      FT_Int  new_max = old_max;\n-      FT_Int  big_max = (FT_Int)( FT_INT_MAX \/ sizeof ( *edge ) );\n+      FT_UInt  old_max = axis->max_edges;\n+      FT_UInt  new_max = old_max;\n+      FT_UInt  big_max = FT_INT_MAX \/ sizeof ( *edge );\n@@ -474,4 +474,4 @@\n-                point->ox \/ 64.0,\n-                point->oy \/ 64.0,\n-                point->x \/ 64.0,\n-                point->y \/ 64.0,\n+                (double)point->ox \/ 64,\n+                (double)point->oy \/ 64,\n+                (double)point->x \/ 64,\n+                (double)point->y \/ 64,\n@@ -600,1 +600,1 @@\n-                                   FT_Int*        num_segments )\n+                                   FT_UInt*       num_segments )\n@@ -626,1 +626,1 @@\n-                                     FT_Int         idx,\n+                                     FT_UInt        idx,\n@@ -643,1 +643,1 @@\n-    if ( idx < 0 || idx >= axis->num_segments )\n+    if ( idx >= axis->num_segments )\n@@ -695,2 +695,2 @@\n-                  65536.0 * 64.0 \/ hints->x_scale,\n-                  10.0 * hints->x_scale \/ 65536.0 \/ 64.0 ));\n+                  65536 * 64 \/ (double)hints->x_scale,\n+                  10 * (double)hints->x_scale \/ 65536 \/ 64 ));\n@@ -700,2 +700,2 @@\n-                  65536.0 * 64.0 \/ hints->y_scale,\n-                  10.0 * hints->y_scale \/ 65536.0 \/ 64.0 ));\n+                  65536 * 64 \/ (double)hints->y_scale,\n+                  10 * (double)hints->y_scale \/ 65536 \/ 64 ));\n@@ -717,1 +717,1 @@\n-                  (int)edge->opos \/ 64.0,\n+                  (double)(int)edge->opos \/ 64,\n@@ -723,2 +723,2 @@\n-                  edge->opos \/ 64.0,\n-                  edge->pos \/ 64.0,\n+                  (double)edge->opos \/ 64,\n+                  (double)edge->pos \/ 64,\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afhints.c","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -24,2 +24,0 @@\n-#define xxAF_SORT_SEGMENTS\n-\n@@ -313,2 +311,2 @@\n-    FT_Int        num_segments; \/* number of used segments      *\/\n-    FT_Int        max_segments; \/* number of allocated segments *\/\n+    FT_UInt       num_segments; \/* number of used segments      *\/\n+    FT_UInt       max_segments; \/* number of allocated segments *\/\n@@ -316,3 +314,0 @@\n-#ifdef AF_SORT_SEGMENTS\n-    FT_Int        mid_segments;\n-#endif\n@@ -320,2 +315,2 @@\n-    FT_Int        num_edges;    \/* number of used edges      *\/\n-    FT_Int        max_edges;    \/* number of allocated edges *\/\n+    FT_UInt       num_edges;    \/* number of used edges      *\/\n+    FT_UInt       max_edges;    \/* number of allocated edges *\/\n@@ -383,1 +378,1 @@\n-          ( !_af_debug_disable_horz_hints                            && \\\n+          ( !af_debug_disable_horz_hints_                            && \\\n@@ -387,1 +382,1 @@\n-          ( !_af_debug_disable_vert_hints                          && \\\n+          ( !af_debug_disable_vert_hints_                          && \\\n@@ -390,1 +385,1 @@\n-#define AF_HINTS_DO_BLUES( h )  ( !_af_debug_disable_blue_hints )\n+#define AF_HINTS_DO_BLUES( h )  ( !af_debug_disable_blue_hints_ )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afhints.h","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n@@ -52,2 +52,1 @@\n-    FT_Set_Charmap( face, oldmap );\n-\n+    face->charmap = oldmap;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afindic.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afindic.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -1046,1 +1046,1 @@\n-      FT_Long  i;\n+      FT_UInt  i;\n@@ -1160,1 +1160,1 @@\n-    FT_Set_Charmap( face, oldmap );\n+    face->charmap = oldmap;\n@@ -1278,2 +1278,2 @@\n-                          scale \/ 65536.0,\n-                          new_scale \/ 65536.0,\n+                          (double)scale \/ 65536,\n+                          (double)new_scale \/ 65536,\n@@ -1330,1 +1330,1 @@\n-                  width->cur \/ 64.0 ));\n+                  (double)width->cur \/ 64 ));\n@@ -1474,1 +1474,1 @@\n-                    blue->ref.fit \/ 64.0,\n+                    (double)blue->ref.fit \/ 64,\n@@ -1480,1 +1480,1 @@\n-                    blue->shoot.fit \/ 64.0,\n+                    (double)blue->shoot.fit \/ 64,\n@@ -2206,1 +2206,1 @@\n-      FT_Int   ee;\n+      FT_UInt  ee;\n@@ -2280,1 +2280,1 @@\n-      FT_Int   ee;\n+      FT_UInt  ee;\n@@ -2958,2 +2958,3 @@\n-                stem_edge - hints->axis[dim].edges, stem_edge->opos \/ 64.0,\n-                stem_edge->pos \/ 64.0, dist \/ 64.0, fitted_width \/ 64.0 ));\n+                stem_edge - hints->axis[dim].edges,\n+                (double)stem_edge->opos \/ 64, (double)stem_edge->pos \/ 64,\n+                (double)dist \/ 64, (double)fitted_width \/ 64 ));\n@@ -3082,2 +3083,3 @@\n-                      edge1 - edges, edge1->opos \/ 64.0, blue->fit \/ 64.0,\n-                      edge1->pos \/ 64.0, edge - edges ));\n+                      edge1 - edges,\n+                      (double)edge1->opos \/ 64, (double)blue->fit \/ 64,\n+                      (double)edge1->pos \/ 64, edge - edges ));\n@@ -3087,2 +3089,3 @@\n-                      edge1 - edges, edge1->opos \/ 64.0, blue->fit \/ 64.0,\n-                      edge1->pos \/ 64.0 ));\n+                      edge1 - edges,\n+                      (double)edge1->opos \/ 64, (double)blue->fit \/ 64,\n+                      (double)edge1->pos \/ 64 ));\n@@ -3204,3 +3207,3 @@\n-                    edge - edges, edge->opos \/ 64.0,\n-                    edge2 - edges, edge2->opos \/ 64.0,\n-                    edge->pos \/ 64.0, edge2->pos \/ 64.0 ));\n+                    edge - edges, (double)edge->opos \/ 64,\n+                    edge2 - edges, (double)edge2->opos \/ 64,\n+                    (double)edge->pos \/ 64, (double)edge2->pos \/ 64 ));\n@@ -3232,2 +3235,2 @@\n-                      edge - edges, edge->pos \/ 64.0,\n-                      ( edge2->pos - cur_len ) \/ 64.0 ));\n+                      edge - edges, (double)edge->pos \/ 64,\n+                      (double)( edge2->pos - cur_len ) \/ 64 ));\n@@ -3274,3 +3277,3 @@\n-                      edge - edges, edge->opos \/ 64.0,\n-                      edge2 - edges, edge2->opos \/ 64.0,\n-                      edge->pos \/ 64.0, edge2->pos \/ 64.0 ));\n+                      edge - edges, (double)edge->opos \/ 64,\n+                      edge2 - edges, (double)edge2->opos \/ 64,\n+                      (double)edge->pos \/ 64, (double)edge2->pos \/ 64 ));\n@@ -3305,3 +3308,3 @@\n-                      edge - edges, edge->opos \/ 64.0,\n-                      edge2 - edges, edge2->opos \/ 64.0,\n-                      edge->pos \/ 64.0, edge2->pos \/ 64.0 ));\n+                      edge - edges, (double)edge->opos \/ 64,\n+                      edge2 - edges, (double)edge2->opos \/ 64,\n+                      (double)edge->pos \/ 64, (double)edge2->pos \/ 64 ));\n@@ -3328,2 +3331,2 @@\n-                        edge->pos \/ 64.0,\n-                        edge[-1].pos \/ 64.0 ));\n+                        (double)edge->pos \/ 64,\n+                        (double)edge[-1].pos \/ 64 ));\n@@ -3430,3 +3433,3 @@\n-                      edge - edges, edge->opos \/ 64.0,\n-                      edge->serif - edges, edge->serif->opos \/ 64.0,\n-                      edge->pos \/ 64.0 ));\n+                      edge - edges, (double)edge->opos \/ 64,\n+                      edge->serif - edges, (double)edge->serif->opos \/ 64,\n+                      (double)edge->pos \/ 64 ));\n@@ -3440,1 +3443,2 @@\n-                      edge-edges, edge->opos \/ 64.0, edge->pos \/ 64.0 ));\n+                      edge-edges,\n+                      (double)edge->opos \/ 64, (double)edge->pos \/ 64 ));\n@@ -3468,3 +3472,3 @@\n-                        edge - edges, edge->opos \/ 64.0,\n-                        edge->pos \/ 64.0,\n-                        before - edges, before->opos \/ 64.0 ));\n+                        edge - edges, (double)edge->opos \/ 64,\n+                        (double)edge->pos \/ 64,\n+                        before - edges, (double)before->opos \/ 64 ));\n@@ -3478,1 +3482,2 @@\n-                        edge - edges, edge->opos \/ 64.0, edge->pos \/ 64.0 ));\n+                        edge - edges,\n+                        (double)edge->opos \/ 64, (double)edge->pos \/ 64 ));\n@@ -3498,2 +3503,2 @@\n-                        edge->pos \/ 64.0,\n-                        edge[-1].pos \/ 64.0 ));\n+                        (double)edge->pos \/ 64,\n+                        (double)edge[-1].pos \/ 64 ));\n@@ -3519,2 +3524,2 @@\n-                        edge->pos \/ 64.0,\n-                        edge[1].pos \/ 64.0 ));\n+                        (double)edge->pos \/ 64,\n+                        (double)edge[1].pos \/ 64 ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aflatin.c","additions":46,"deletions":41,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aflatin.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -232,3 +232,0 @@\n-    if ( !size )\n-      return FT_THROW( Invalid_Size_Handle );\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afloader.c","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -78,1 +78,1 @@\n-  FT_LOCAL_DEF( FT_Fixed )\n+  FT_LOCAL( FT_Fixed )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afloader.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -46,3 +46,3 @@\n-  int  _af_debug_disable_horz_hints;\n-  int  _af_debug_disable_vert_hints;\n-  int  _af_debug_disable_blue_hints;\n+  int  af_debug_disable_horz_hints_;\n+  int  af_debug_disable_vert_hints_;\n+  int  af_debug_disable_blue_hints_;\n@@ -51,1 +51,1 @@\n-  static AF_GlyphHintsRec  _af_debug_hints_rec[1];\n+  static AF_GlyphHintsRec  af_debug_hints_rec_[1];\n@@ -53,1 +53,1 @@\n-  void*  _af_debug_hints = _af_debug_hints_rec;\n+  void*  af_debug_hints_ = af_debug_hints_rec_;\n@@ -122,2 +122,2 @@\n-      FT_UInt*  fallback_script;\n-      FT_UInt   ss;\n+      AF_Script*  fallback_script;\n+      FT_UInt     ss;\n@@ -131,1 +131,1 @@\n-      fallback_script = (FT_UInt*)value;\n+      fallback_script = (AF_Script*)value;\n@@ -141,2 +141,2 @@\n-        if ( (FT_UInt)style_class->script == *fallback_script &&\n-             style_class->coverage == AF_COVERAGE_DEFAULT     )\n+        if ( style_class->script   == *fallback_script    &&\n+             style_class->coverage == AF_COVERAGE_DEFAULT )\n@@ -160,1 +160,1 @@\n-      FT_UInt*  default_script;\n+      AF_Script*  default_script;\n@@ -168,1 +168,1 @@\n-      default_script = (FT_UInt*)value;\n+      default_script = (AF_Script*)value;\n@@ -294,2 +294,0 @@\n-    FT_UInt    fallback_style = module->fallback_style;\n-    FT_UInt    default_script = module->default_script;\n@@ -312,1 +310,1 @@\n-      FT_UInt*  val = (FT_UInt*)value;\n+      AF_Script*  val = (AF_Script*)value;\n@@ -314,1 +312,1 @@\n-      AF_StyleClass  style_class = af_style_classes[fallback_style];\n+      AF_StyleClass  style_class = af_style_classes[module->fallback_style];\n@@ -323,1 +321,1 @@\n-      FT_UInt*  val = (FT_UInt*)value;\n+      AF_Script*  val = (AF_Script*)value;\n@@ -326,1 +324,1 @@\n-      *val = default_script;\n+      *val = module->default_script;\n@@ -428,2 +426,2 @@\n-    if ( _af_debug_hints_rec->memory )\n-      af_glyph_hints_done( _af_debug_hints_rec );\n+    if ( af_debug_hints_rec_->memory )\n+      af_glyph_hints_done( af_debug_hints_rec_ );\n@@ -448,1 +446,1 @@\n-    AF_GlyphHints  hints = _af_debug_hints_rec;\n+    AF_GlyphHints  hints = af_debug_hints_rec_;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afmodule.c","additions":20,"deletions":22,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -39,1 +39,1 @@\n-    FT_UInt       default_script;\n+    AF_Script     default_script;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afmodule.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afranges.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afranges.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afscript.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afshaper.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n@@ -30,1 +30,1 @@\n-#include <hb-ft.h>\n+#include \"ft-hb.h\"\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afshaper.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afstyles.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n@@ -60,4 +60,4 @@\n-extern int    _af_debug_disable_horz_hints;\n-extern int    _af_debug_disable_vert_hints;\n-extern int    _af_debug_disable_blue_hints;\n-extern void*  _af_debug_hints;\n+extern int    af_debug_disable_horz_hints_;\n+extern int    af_debug_disable_vert_hints_;\n+extern int    af_debug_disable_blue_hints_;\n+extern void*  af_debug_hints_;\n@@ -122,7 +122,7 @@\n-    FT_Face         face;        \/* source font face                        *\/\n-    FT_Fixed        x_scale;     \/* from font units to 1\/64th device pixels *\/\n-    FT_Fixed        y_scale;     \/* from font units to 1\/64th device pixels *\/\n-    FT_Pos          x_delta;     \/* in 1\/64th device pixels                 *\/\n-    FT_Pos          y_delta;     \/* in 1\/64th device pixels                 *\/\n-    FT_Render_Mode  render_mode; \/* monochrome, anti-aliased, LCD, etc.     *\/\n-    FT_UInt32       flags;       \/* additional control flags, see above     *\/\n+    FT_Face         face;        \/* source font face                      *\/\n+    FT_Fixed        x_scale;     \/* from font units to 1\/64 device pixels *\/\n+    FT_Fixed        y_scale;     \/* from font units to 1\/64 device pixels *\/\n+    FT_Pos          x_delta;     \/* in 1\/64 device pixels                 *\/\n+    FT_Pos          y_delta;     \/* in 1\/64 device pixels                 *\/\n+    FT_Render_Mode  render_mode; \/* monochrome, anti-aliased, LCD, etc.   *\/\n+    FT_UInt32       flags;       \/* additional control flags, see above   *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aftypes.h","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afws-decl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afws-iter.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2008-2022 by\n+ * Copyright (C) 2008-2023 by\n@@ -26,1 +26,1 @@\n-  _ft_face_scale_advances( FT_Face    face,\n+  ft_face_scale_advances_( FT_Face    face,\n@@ -99,1 +99,1 @@\n-        return _ft_face_scale_advances( face, padvance, 1, flags );\n+        return ft_face_scale_advances_( face, padvance, 1, flags );\n@@ -145,1 +145,1 @@\n-        return _ft_face_scale_advances( face, padvances, count, flags );\n+        return ft_face_scale_advances_( face, padvances, count, flags );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftadvanc.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2008-2022 by\n+ * Copyright (C) 2008-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbase.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbbox.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n@@ -69,5 +69,2 @@\n-\n-    FT_Int    pitch;\n-    FT_ULong  size;\n-\n-    FT_Int  source_pitch_sign, target_pitch_sign;\n+    FT_Int     pitch;\n+    FT_Int     flip;\n@@ -85,2 +82,2 @@\n-    source_pitch_sign = source->pitch < 0 ? -1 : 1;\n-    target_pitch_sign = target->pitch < 0 ? -1 : 1;\n+    flip = ( source->pitch < 0 && target->pitch > 0 ) ||\n+           ( source->pitch > 0 && target->pitch < 0 );\n@@ -88,5 +85,7 @@\n-    if ( !source->buffer )\n-    {\n-      *target = *source;\n-      if ( source_pitch_sign != target_pitch_sign )\n-        target->pitch = -target->pitch;\n+    memory = library->memory;\n+    FT_FREE( target->buffer );\n+\n+    *target = *source;\n+\n+    if ( flip )\n+      target->pitch = -target->pitch;\n@@ -94,0 +93,1 @@\n+    if ( !source->buffer )\n@@ -95,1 +95,0 @@\n-    }\n@@ -97,1 +96,0 @@\n-    memory = library->memory;\n@@ -99,1 +97,0 @@\n-\n@@ -102,6 +99,0 @@\n-    size = (FT_ULong)pitch * source->rows;\n-\n-    if ( target->buffer )\n-    {\n-      FT_Int    target_pitch = target->pitch;\n-      FT_ULong  target_size;\n@@ -109,10 +100,1 @@\n-\n-      if ( target_pitch < 0 )\n-        target_pitch = -target_pitch;\n-      target_size = (FT_ULong)target_pitch * target->rows;\n-\n-      if ( target_size != size )\n-        FT_MEM_QREALLOC( target->buffer, target_size, size );\n-    }\n-    else\n-      FT_MEM_QALLOC( target->buffer, size );\n+    FT_MEM_QALLOC_MULT( target->buffer, target->rows, pitch );\n@@ -122,10 +104,1 @@\n-      unsigned char *p;\n-\n-\n-      p = target->buffer;\n-      *target = *source;\n-      target->buffer = p;\n-\n-      if ( source_pitch_sign == target_pitch_sign )\n-        FT_MEM_COPY( target->buffer, source->buffer, size );\n-      else\n+      if ( flip )\n@@ -149,0 +122,3 @@\n+      else\n+        FT_MEM_COPY( target->buffer, source->buffer,\n+                     (FT_Long)source->rows * pitch );\n@@ -545,2 +521,3 @@\n-        FT_Int    pad, old_target_pitch, target_pitch;\n-        FT_ULong  old_size;\n+        FT_Int  width = (FT_Int)source->width;\n+        FT_Int  neg   = ( target->pitch == 0 && source->pitch < 0 ) ||\n+                          target->pitch  < 0;\n@@ -549,5 +526,1 @@\n-        old_target_pitch = target->pitch;\n-        if ( old_target_pitch < 0 )\n-          old_target_pitch = -old_target_pitch;\n-\n-        old_size = target->rows * (FT_UInt)old_target_pitch;\n+        FT_Bitmap_Done( library, target );\n@@ -559,2 +532,1 @@\n-        pad = 0;\n-        if ( alignment > 0 )\n+        if ( alignment )\n@@ -562,4 +534,1 @@\n-          pad = (FT_Int)source->width % alignment;\n-          if ( pad != 0 )\n-            pad = alignment - pad;\n-        }\n+          FT_Int  rem = width % alignment;\n@@ -567,1 +536,0 @@\n-        target_pitch = (FT_Int)source->width + pad;\n@@ -569,3 +537,4 @@\n-        if ( target_pitch > 0                                               &&\n-             (FT_ULong)target->rows > FT_ULONG_MAX \/ (FT_ULong)target_pitch )\n-          return FT_THROW( Invalid_Argument );\n+          if ( rem )\n+            width = alignment > 0 ? width - rem + alignment\n+                                  : width - rem - alignment;\n+        }\n@@ -573,2 +542,1 @@\n-        if ( FT_QREALLOC( target->buffer,\n-                          old_size, target->rows * (FT_UInt)target_pitch ) )\n+        if ( FT_QALLOC_MULT( target->buffer, target->rows, width ) )\n@@ -577,1 +545,1 @@\n-        target->pitch = target->pitch < 0 ? -target_pitch : target_pitch;\n+        target->pitch = neg ? -width : width;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbitmap.c","additions":30,"deletions":62,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -1088,0 +1088,67 @@\n+  FT_BASE_DEF( FT_Int32 )\n+  FT_MulAddFix( FT_Fixed*  s,\n+                FT_Int32*  f,\n+                FT_UInt    count )\n+  {\n+    FT_UInt   i;\n+    FT_Int64  temp;\n+#ifndef FT_INT64\n+    FT_Int64  halfUnit;\n+#endif\n+\n+\n+#ifdef FT_INT64\n+    temp = 0;\n+\n+    for ( i = 0; i < count; ++i )\n+      temp += (FT_Int64)s[i] * f[i];\n+\n+    return ( temp + 0x8000 ) >> 16;\n+#else\n+    temp.hi = 0;\n+    temp.lo = 0;\n+\n+    for ( i = 0; i < count; ++i )\n+    {\n+      FT_Int64  multResult;\n+\n+      FT_Int     sign  = 1;\n+      FT_UInt32  carry = 0;\n+\n+      FT_UInt32  scalar;\n+      FT_UInt32  factor;\n+\n+\n+      scalar = (FT_UInt32)s[i];\n+      factor = (FT_UInt32)f[i];\n+\n+      FT_MOVE_SIGN( s[i], scalar, sign );\n+      FT_MOVE_SIGN( f[i], factor, sign );\n+\n+      ft_multo64( scalar, factor, &multResult );\n+\n+      if ( sign < 0 )\n+      {\n+        \/* Emulated `FT_Int64` negation. *\/\n+        carry = ( multResult.lo == 0 );\n+\n+        multResult.lo = ~multResult.lo + 1;\n+        multResult.hi = ~multResult.hi + carry;\n+      }\n+\n+      FT_Add64( &temp, &multResult, &temp );\n+    }\n+\n+    \/* Round value. *\/\n+    halfUnit.hi = 0;\n+    halfUnit.lo = 0x8000;\n+    FT_Add64( &temp, &halfUnit, &temp );\n+\n+    return (FT_Int32)( ( (FT_Int32)( temp.hi & 0xFFFF ) << 16 ) |\n+                                   ( temp.lo >> 16 )            );\n+\n+#endif \/* !FT_INT64 *\/\n+\n+  }\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcalc.c","additions":68,"deletions":1,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcid.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2022 by\n+ * Copyright (C) 2018-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcolor.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n@@ -38,2 +38,2 @@\n-  FT_BASE_DEF( const char* )  _ft_debug_file   = NULL;\n-  FT_BASE_DEF( long )         _ft_debug_lineno = 0;\n+  FT_BASE_DEF( const char* )  ft_debug_file_   = NULL;\n+  FT_BASE_DEF( long )         ft_debug_lineno_ = 0;\n@@ -418,2 +418,2 @@\n-    hash  = (FT_UInt32)(FT_PtrDist)(void*)_ft_debug_file +\n-              (FT_UInt32)( 5 * _ft_debug_lineno );\n+    hash  = (FT_UInt32)(FT_PtrDist)(void*)ft_debug_file_ +\n+              (FT_UInt32)( 5 * ft_debug_lineno_ );\n@@ -428,2 +428,2 @@\n-      if ( node->file_name == _ft_debug_file   &&\n-           node->line_no   == _ft_debug_lineno )\n+      if ( node->file_name == ft_debug_file_   &&\n+           node->line_no   == ft_debug_lineno_ )\n@@ -440,2 +440,2 @@\n-    node->file_name = _ft_debug_file;\n-    node->line_no   = _ft_debug_lineno;\n+    node->file_name = ft_debug_file_;\n+    node->line_no   = ft_debug_lineno_;\n@@ -498,1 +498,1 @@\n-            FT_FILENAME( _ft_debug_file ), _ft_debug_lineno );\n+            FT_FILENAME( ft_debug_file_ ), ft_debug_lineno_ );\n@@ -585,1 +585,1 @@\n-            FT_FILENAME( _ft_debug_file ), _ft_debug_lineno,\n+            FT_FILENAME( ft_debug_file_ ), ft_debug_lineno_,\n@@ -607,2 +607,2 @@\n-          node->free_file_name = _ft_debug_file;\n-          node->free_line_no   = _ft_debug_lineno;\n+          node->free_file_name = ft_debug_file_;\n+          node->free_line_no   = ft_debug_lineno_;\n@@ -630,1 +630,1 @@\n-          FT_FILENAME( _ft_debug_file ), _ft_debug_lineno );\n+          FT_FILENAME( ft_debug_file_ ), ft_debug_lineno_ );\n@@ -664,2 +664,2 @@\n-    _ft_debug_file   = \"<unknown>\";\n-    _ft_debug_lineno = 0;\n+    ft_debug_file_   = \"<unknown>\";\n+    ft_debug_lineno_ = 0;\n@@ -680,2 +680,2 @@\n-                          FT_FILENAME( _ft_debug_file ),\n-                          _ft_debug_lineno );\n+                          FT_FILENAME( ft_debug_file_ ),\n+                          ft_debug_lineno_ );\n@@ -690,2 +690,2 @@\n-    _ft_debug_file   = \"<unknown>\";\n-    _ft_debug_lineno = 0;\n+    ft_debug_file_   = \"<unknown>\";\n+    ft_debug_lineno_ = 0;\n@@ -706,2 +706,2 @@\n-    const char*  file_name = FT_FILENAME( _ft_debug_file );\n-    FT_Long      line_no   = _ft_debug_lineno;\n+    const char*  file_name = FT_FILENAME( ft_debug_file_ );\n+    FT_Long      line_no   = ft_debug_lineno_;\n@@ -770,2 +770,2 @@\n-    _ft_debug_file   = \"<unknown>\";\n-    _ft_debug_lineno = 0;\n+    ft_debug_file_   = \"<unknown>\";\n+    ft_debug_lineno_ = 0;\n@@ -877,1 +877,1 @@\n-  static int\n+  FT_COMPARE_DEF( int )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftdbgmem.c","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftdebug.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftfntfmt.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2008-2022 by\n+ * Copyright (C) 2008-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftfstype.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftgasp.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n@@ -215,1 +215,1 @@\n-    FT_UInt      new_max, old_max;\n+    FT_UInt  new_max, old_max, min_new_max;\n@@ -220,1 +220,1 @@\n-      return error;\n+      goto Exit;\n@@ -229,1 +229,5 @@\n-      new_max = FT_PAD_CEIL( new_max, 8 );\n+      if ( new_max > FT_OUTLINE_POINTS_MAX )\n+      {\n+        error = FT_THROW( Array_Too_Large );\n+        goto Exit;\n+      }\n@@ -231,0 +235,4 @@\n+      min_new_max = old_max + ( old_max >> 1 );\n+      if ( new_max < min_new_max )\n+        new_max = min_new_max;\n+      new_max = FT_PAD_CEIL( new_max, 8 );\n@@ -232,1 +240,1 @@\n-        return FT_THROW( Array_Too_Large );\n+        new_max = FT_OUTLINE_POINTS_MAX;\n@@ -257,1 +265,1 @@\n-      return error;\n+      goto Exit;\n@@ -265,1 +273,5 @@\n-      new_max = FT_PAD_CEIL( new_max, 4 );\n+      if ( new_max > FT_OUTLINE_CONTOURS_MAX )\n+      {\n+        error = FT_THROW( Array_Too_Large );\n+        goto Exit;\n+      }\n@@ -267,0 +279,4 @@\n+      min_new_max = old_max + ( old_max >> 1 );\n+      if ( new_max < min_new_max )\n+        new_max = min_new_max;\n+      new_max = FT_PAD_CEIL( new_max, 4 );\n@@ -268,1 +284,1 @@\n-        return FT_THROW( Array_Too_Large );\n+        new_max = FT_OUTLINE_CONTOURS_MAX;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftgloadr.c","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -685,0 +685,1 @@\n+    {\n@@ -686,0 +687,2 @@\n+      *aglyph = NULL;\n+    }\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftglyph.c","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftinit.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftlcdfil.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -70,0 +70,1 @@\n+#include <freetype\/internal\/ftdebug.h>\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftmac.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftmm.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -511,1 +511,1 @@\n-      \/* fall through *\/\n+      FALL_THROUGH;\n@@ -608,1 +608,1 @@\n-        slot->internal->load_flags &= ~FT_GLYPH_OWN_GZIP_SVG;\n+        slot->internal->flags &= ~FT_GLYPH_OWN_GZIP_SVG;\n@@ -634,2 +634,3 @@\n-      \/* free memory in case SVG was there *\/\n-      if ( slot->internal->flags & FT_GLYPH_OWN_GZIP_SVG )\n+      \/* Free memory in case SVG was there.                          *\/\n+      \/* `slot->internal` might be NULL in out-of-memory situations. *\/\n+      if ( slot->internal && slot->internal->flags & FT_GLYPH_OWN_GZIP_SVG )\n@@ -1187,2 +1188,2 @@\n-    FT_TRACE5(( \"  x advance: %f\\n\", slot->advance.x \/ 64.0 ));\n-    FT_TRACE5(( \"  y advance: %f\\n\", slot->advance.y \/ 64.0 ));\n+    FT_TRACE5(( \"  x advance: %f\\n\", (double)slot->advance.x \/ 64 ));\n+    FT_TRACE5(( \"  y advance: %f\\n\", (double)slot->advance.y \/ 64 ));\n@@ -1190,1 +1191,1 @@\n-                slot->linearHoriAdvance \/ 65536.0 ));\n+                (double)slot->linearHoriAdvance \/ 65536 ));\n@@ -1192,1 +1193,1 @@\n-                slot->linearVertAdvance \/ 65536.0 ));\n+                (double)slot->linearVertAdvance \/ 65536 ));\n@@ -1199,2 +1200,2 @@\n-      FT_TRACE5(( \"    width:  %f\\n\", metrics->width  \/ 64.0 ));\n-      FT_TRACE5(( \"    height: %f\\n\", metrics->height \/ 64.0 ));\n+      FT_TRACE5(( \"    width:  %f\\n\", (double)metrics->width \/ 64 ));\n+      FT_TRACE5(( \"    height: %f\\n\", (double)metrics->height \/ 64 ));\n@@ -1202,3 +1203,6 @@\n-      FT_TRACE5(( \"    horiBearingX: %f\\n\", metrics->horiBearingX \/ 64.0 ));\n-      FT_TRACE5(( \"    horiBearingY: %f\\n\", metrics->horiBearingY \/ 64.0 ));\n-      FT_TRACE5(( \"    horiAdvance:  %f\\n\", metrics->horiAdvance  \/ 64.0 ));\n+      FT_TRACE5(( \"    horiBearingX: %f\\n\",\n+                  (double)metrics->horiBearingX \/ 64 ));\n+      FT_TRACE5(( \"    horiBearingY: %f\\n\",\n+                  (double)metrics->horiBearingY \/ 64 ));\n+      FT_TRACE5(( \"    horiAdvance:  %f\\n\",\n+                  (double)metrics->horiAdvance \/ 64 ));\n@@ -1206,3 +1210,6 @@\n-      FT_TRACE5(( \"    vertBearingX: %f\\n\", metrics->vertBearingX \/ 64.0 ));\n-      FT_TRACE5(( \"    vertBearingY: %f\\n\", metrics->vertBearingY \/ 64.0 ));\n-      FT_TRACE5(( \"    vertAdvance:  %f\\n\", metrics->vertAdvance  \/ 64.0 ));\n+      FT_TRACE5(( \"    vertBearingX: %f\\n\",\n+                  (double)metrics->vertBearingX \/ 64 ));\n+      FT_TRACE5(( \"    vertBearingY: %f\\n\",\n+                  (double)metrics->vertBearingY \/ 64 ));\n+      FT_TRACE5(( \"    vertAdvance:  %f\\n\",\n+                  (double)metrics->vertAdvance \/ 64 ));\n@@ -1491,1 +1498,1 @@\n-             FT_Bool        external_stream,\n+             FT_Bool        *anexternal_stream,\n@@ -1517,1 +1524,1 @@\n-    if ( external_stream )\n+    if ( *anexternal_stream )\n@@ -1547,1 +1554,4 @@\n-    *astream = face->stream; \/* Stream may have been changed. *\/\n+    \/* Stream may have been changed. *\/\n+    *astream = face->stream;\n+    *anexternal_stream =\n+      ( face->face_flags & FT_FACE_FLAG_EXTERNAL_STREAM ) != 0;\n@@ -1671,1 +1681,1 @@\n-    FT_Memory  memory = stream->memory;\n+    FT_Memory  memory = (FT_Memory)stream->descriptor.pointer;\n@@ -1675,1 +1685,0 @@\n-\n@@ -1678,0 +1687,1 @@\n+    FT_FREE( stream );\n@@ -1708,1 +1718,2 @@\n-    stream->close = close;\n+    stream->descriptor.pointer = memory;\n+    stream->close              = close;\n@@ -1729,1 +1740,0 @@\n-    FT_Stream     stream = NULL;\n@@ -1733,0 +1743,15 @@\n+    args.flags = 0;\n+\n+    if ( driver_name )\n+    {\n+      args.driver = FT_Get_Module( library, driver_name );\n+      if ( !args.driver )\n+      {\n+        FT_FREE( base );\n+        return FT_THROW( Missing_Module );\n+      }\n+\n+      args.flags = args.flags | FT_OPEN_DRIVER;\n+    }\n+\n+    \/* `memory_stream_close` also frees the stream object. *\/\n@@ -1737,1 +1762,1 @@\n-                               &stream );\n+                               &args.stream );\n@@ -1744,7 +1769,1 @@\n-    args.flags  = FT_OPEN_STREAM;\n-    args.stream = stream;\n-    if ( driver_name )\n-    {\n-      args.flags  = args.flags | FT_OPEN_DRIVER;\n-      args.driver = FT_Get_Module( library, driver_name );\n-    }\n+    args.flags |= FT_OPEN_STREAM;\n@@ -1762,15 +1781,1 @@\n-    error = ft_open_face_internal( library, &args, face_index, aface, 0 );\n-\n-    if ( !error )\n-      (*aface)->face_flags &= ~FT_FACE_FLAG_EXTERNAL_STREAM;\n-    else\n-#ifdef FT_MACINTOSH\n-      FT_Stream_Free( stream, 0 );\n-#else\n-    {\n-      FT_Stream_Close( stream );\n-      FT_FREE( stream );\n-    }\n-#endif\n-\n-    return error;\n+    return ft_open_face_internal( library, &args, face_index, aface, 0 );\n@@ -1919,1 +1924,1 @@\n-                                   is_sfnt_cid ? \"cid\" : \"type1\",\n+                                   is_sfnt_cid ? \"t1cid\" : \"type1\",\n@@ -2180,1 +2185,1 @@\n-    FT_Long    rlen;\n+    FT_ULong   rlen;\n@@ -2195,1 +2200,1 @@\n-    if ( FT_READ_LONG( rlen ) )\n+    if ( FT_READ_ULONG( rlen ) )\n@@ -2197,1 +2202,1 @@\n-    if ( rlen < 1 )\n+    if ( !rlen )\n@@ -2199,1 +2204,1 @@\n-    if ( (FT_ULong)rlen > FT_MAC_RFORK_MAX_LEN )\n+    if ( rlen > FT_MAC_RFORK_MAX_LEN )\n@@ -2217,2 +2222,3 @@\n-    error = FT_Stream_Read( stream, (FT_Byte *)sfnt_data, (FT_ULong)rlen );\n-    if ( error ) {\n+    error = FT_Stream_Read( stream, (FT_Byte *)sfnt_data, rlen );\n+    if ( error )\n+    {\n@@ -2226,1 +2232,1 @@\n-                                   (FT_ULong)rlen,\n+                                   rlen,\n@@ -2555,1 +2561,1 @@\n-    if ( ( !aface && face_index >= 0 ) || !args )\n+    if ( !args )\n@@ -2566,0 +2572,8 @@\n+    \/* Do this error check after `FT_Stream_New` to ensure that the *\/\n+    \/* 'close' callback is called.                                  *\/\n+    if ( !aface && face_index >= 0 )\n+    {\n+      error = FT_THROW( Invalid_Argument );\n+      goto Fail3;\n+    }\n+\n@@ -2587,1 +2601,1 @@\n-        error = open_face( driver, &stream, external_stream, face_index,\n+        error = open_face( driver, &stream, &external_stream, face_index,\n@@ -2623,1 +2637,1 @@\n-          error = open_face( driver, &stream, external_stream, face_index,\n+          error = open_face( driver, &stream, &external_stream, face_index,\n@@ -2855,2 +2869,2 @@\n-  FT_Attach_Stream( FT_Face        face,\n-                    FT_Open_Args*  parameters )\n+  FT_Attach_Stream( FT_Face              face,\n+                    const FT_Open_Args*  parameters )\n@@ -3281,1 +3295,1 @@\n-      if ( req->width )\n+      if ( req->height || !req->width )\n@@ -3283,3 +3297,1 @@\n-        metrics->x_scale = FT_DivFix( scaled_w, w );\n-\n-        if ( req->height )\n+        if ( h == 0 )\n@@ -3287,9 +3299,3 @@\n-          metrics->y_scale = FT_DivFix( scaled_h, h );\n-\n-          if ( req->type == FT_SIZE_REQUEST_TYPE_CELL )\n-          {\n-            if ( metrics->y_scale > metrics->x_scale )\n-              metrics->y_scale = metrics->x_scale;\n-            else\n-              metrics->x_scale = metrics->y_scale;\n-          }\n+          FT_ERROR(( \"FT_Request_Metrics: Divide by zero\\n\" ));\n+          error = FT_ERR( Divide_By_Zero );\n+          goto Exit;\n@@ -3297,1 +3303,7 @@\n-        else\n+\n+        metrics->y_scale = FT_DivFix( scaled_h, h );\n+      }\n+\n+      if ( req->width )\n+      {\n+        if ( w == 0 )\n@@ -3299,2 +3311,3 @@\n-          metrics->y_scale = metrics->x_scale;\n-          scaled_h = FT_MulDiv( scaled_w, h, w );\n+          FT_ERROR(( \"FT_Request_Metrics: Divide by zero\\n\" ));\n+          error = FT_ERR( Divide_By_Zero );\n+          goto Exit;\n@@ -3302,0 +3315,2 @@\n+\n+        metrics->x_scale = FT_DivFix( scaled_w, w );\n@@ -3305,1 +3320,1 @@\n-        metrics->x_scale = metrics->y_scale = FT_DivFix( scaled_h, h );\n+        metrics->x_scale = metrics->y_scale;\n@@ -3309,0 +3324,14 @@\n+      if ( !req->height )\n+      {\n+        metrics->y_scale = metrics->x_scale;\n+        scaled_h = FT_MulDiv( scaled_w, h, w );\n+      }\n+\n+      if ( req->type == FT_SIZE_REQUEST_TYPE_CELL )\n+      {\n+        if ( metrics->y_scale > metrics->x_scale )\n+          metrics->y_scale = metrics->x_scale;\n+        else\n+          metrics->x_scale = metrics->y_scale;\n+      }\n+\n@@ -3382,1 +3411,1 @@\n-                  metrics->x_scale, metrics->x_scale \/ 65536.0 ));\n+                  metrics->x_scale, (double)metrics->x_scale \/ 65536 ));\n@@ -3384,7 +3413,11 @@\n-                  metrics->y_scale, metrics->y_scale \/ 65536.0 ));\n-      FT_TRACE5(( \"  ascender: %f\\n\",    metrics->ascender \/ 64.0 ));\n-      FT_TRACE5(( \"  descender: %f\\n\",   metrics->descender \/ 64.0 ));\n-      FT_TRACE5(( \"  height: %f\\n\",      metrics->height \/ 64.0 ));\n-      FT_TRACE5(( \"  max advance: %f\\n\", metrics->max_advance \/ 64.0 ));\n-      FT_TRACE5(( \"  x ppem: %d\\n\",      metrics->x_ppem ));\n-      FT_TRACE5(( \"  y ppem: %d\\n\",      metrics->y_ppem ));\n+                  metrics->y_scale, (double)metrics->y_scale \/ 65536 ));\n+      FT_TRACE5(( \"  ascender: %f\\n\",\n+                  (double)metrics->ascender \/ 64 ));\n+      FT_TRACE5(( \"  descender: %f\\n\",\n+                  (double)metrics->descender \/ 64 ));\n+      FT_TRACE5(( \"  height: %f\\n\",\n+                  (double)metrics->height \/ 64 ));\n+      FT_TRACE5(( \"  max advance: %f\\n\",\n+                  (double)metrics->max_advance \/ 64 ));\n+      FT_TRACE5(( \"  x ppem: %d\\n\", metrics->x_ppem ));\n+      FT_TRACE5(( \"  y ppem: %d\\n\", metrics->y_ppem ));\n@@ -3462,1 +3495,1 @@\n-                  metrics->x_scale, metrics->x_scale \/ 65536.0 ));\n+                  metrics->x_scale, (double)metrics->x_scale \/ 65536 ));\n@@ -3464,7 +3497,11 @@\n-                  metrics->y_scale, metrics->y_scale \/ 65536.0 ));\n-      FT_TRACE5(( \"  ascender: %f\\n\",    metrics->ascender \/ 64.0 ));\n-      FT_TRACE5(( \"  descender: %f\\n\",   metrics->descender \/ 64.0 ));\n-      FT_TRACE5(( \"  height: %f\\n\",      metrics->height \/ 64.0 ));\n-      FT_TRACE5(( \"  max advance: %f\\n\", metrics->max_advance \/ 64.0 ));\n-      FT_TRACE5(( \"  x ppem: %d\\n\",      metrics->x_ppem ));\n-      FT_TRACE5(( \"  y ppem: %d\\n\",      metrics->y_ppem ));\n+                  metrics->y_scale, (double)metrics->y_scale \/ 65536 ));\n+      FT_TRACE5(( \"  ascender: %f\\n\",\n+                  (double)metrics->ascender \/ 64 ));\n+      FT_TRACE5(( \"  descender: %f\\n\",\n+                  (double)metrics->descender \/ 64 ));\n+      FT_TRACE5(( \"  height: %f\\n\",\n+                  (double)metrics->height \/ 64 ));\n+      FT_TRACE5(( \"  max advance: %f\\n\",\n+                  (double)metrics->max_advance \/ 64 ));\n+      FT_TRACE5(( \"  x ppem: %d\\n\", metrics->x_ppem ));\n+      FT_TRACE5(( \"  y ppem: %d\\n\", metrics->y_ppem ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftobjs.c","additions":130,"deletions":93,"binary":false,"changes":223,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -133,1 +133,1 @@\n-                  v_start.x \/ 64.0, v_start.y \/ 64.0 ));\n+                  (double)v_start.x \/ 64, (double)v_start.y \/ 64 ));\n@@ -155,1 +155,1 @@\n-                        vec.x \/ 64.0, vec.y \/ 64.0 ));\n+                        (double)vec.x \/ 64, (double)vec.y \/ 64 ));\n@@ -184,2 +184,4 @@\n-                          vec.x \/ 64.0, vec.y \/ 64.0,\n-                          v_control.x \/ 64.0, v_control.y \/ 64.0 ));\n+                          (double)vec.x \/ 64,\n+                          (double)vec.y \/ 64,\n+                          (double)v_control.x \/ 64,\n+                          (double)v_control.y \/ 64 ));\n@@ -200,2 +202,4 @@\n-                        v_middle.x \/ 64.0, v_middle.y \/ 64.0,\n-                        v_control.x \/ 64.0, v_control.y \/ 64.0 ));\n+                        (double)v_middle.x \/ 64,\n+                        (double)v_middle.y \/ 64,\n+                        (double)v_control.x \/ 64,\n+                        (double)v_control.y \/ 64 ));\n@@ -212,2 +216,4 @@\n-                      v_start.x \/ 64.0, v_start.y \/ 64.0,\n-                      v_control.x \/ 64.0, v_control.y \/ 64.0 ));\n+                      (double)v_start.x \/ 64,\n+                      (double)v_start.y \/ 64,\n+                      (double)v_control.x \/ 64,\n+                      (double)v_control.y \/ 64 ));\n@@ -245,3 +251,6 @@\n-                          vec.x \/ 64.0, vec.y \/ 64.0,\n-                          vec1.x \/ 64.0, vec1.y \/ 64.0,\n-                          vec2.x \/ 64.0, vec2.y \/ 64.0 ));\n+                          (double)vec.x \/ 64,\n+                          (double)vec.y \/ 64,\n+                          (double)vec1.x \/ 64,\n+                          (double)vec1.y \/ 64,\n+                          (double)vec2.x \/ 64,\n+                          (double)vec2.y \/ 64 ));\n@@ -256,3 +265,6 @@\n-                        v_start.x \/ 64.0, v_start.y \/ 64.0,\n-                        vec1.x \/ 64.0, vec1.y \/ 64.0,\n-                        vec2.x \/ 64.0, vec2.y \/ 64.0 ));\n+                        (double)v_start.x \/ 64,\n+                        (double)v_start.y \/ 64,\n+                        (double)vec1.x \/ 64,\n+                        (double)vec1.y \/ 64,\n+                        (double)vec2.x \/ 64,\n+                        (double)vec2.y \/ 64 ));\n@@ -267,1 +279,1 @@\n-                  v_start.x \/ 64.0, v_start.y \/ 64.0 ));\n+                  (double)v_start.x \/ 64, (double)v_start.y \/ 64 ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftoutln.c","additions":28,"deletions":16,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2007-2022 by\n+ * Copyright (C) 2007-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftpatent.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2017-2022 by\n+ * Copyright (C) 2017-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftpsprop.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftrfork.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsnames.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n@@ -264,1 +264,1 @@\n-      \/* assume _ft_debug_file and _ft_debug_lineno are already set *\/\n+      \/* assume `ft_debug_file_` and `ft_debug_lineno_` are already set *\/\n@@ -366,1 +366,1 @@\n-  FT_BASE_DEF( FT_UShort )\n+  FT_BASE_DEF( FT_UInt16 )\n@@ -370,1 +370,1 @@\n-    FT_UShort  result;\n+    FT_UInt16  result;\n@@ -385,1 +385,1 @@\n-  FT_BASE_DEF( FT_UShort )\n+  FT_BASE_DEF( FT_UInt16 )\n@@ -389,1 +389,1 @@\n-    FT_UShort  result;\n+    FT_UInt16  result;\n@@ -404,1 +404,1 @@\n-  FT_BASE_DEF( FT_ULong )\n+  FT_BASE_DEF( FT_UInt32 )\n@@ -408,1 +408,1 @@\n-    FT_ULong  result;\n+    FT_UInt32 result;\n@@ -422,1 +422,1 @@\n-  FT_BASE_DEF( FT_ULong )\n+  FT_BASE_DEF( FT_UInt32 )\n@@ -426,1 +426,1 @@\n-    FT_ULong  result;\n+    FT_UInt32 result;\n@@ -440,1 +440,1 @@\n-  FT_BASE_DEF( FT_ULong )\n+  FT_BASE_DEF( FT_UInt32 )\n@@ -444,1 +444,1 @@\n-    FT_ULong  result;\n+    FT_UInt32 result;\n@@ -496,1 +496,1 @@\n-  FT_BASE_DEF( FT_UShort )\n+  FT_BASE_DEF( FT_UInt16 )\n@@ -502,1 +502,1 @@\n-    FT_UShort  result = 0;\n+    FT_UInt16  result = 0;\n@@ -541,1 +541,1 @@\n-  FT_BASE_DEF( FT_UShort )\n+  FT_BASE_DEF( FT_UInt16 )\n@@ -547,1 +547,1 @@\n-    FT_UShort  result = 0;\n+    FT_UInt16  result = 0;\n@@ -631,1 +631,1 @@\n-  FT_BASE_DEF( FT_ULong )\n+  FT_BASE_DEF( FT_UInt32 )\n@@ -637,1 +637,1 @@\n-    FT_ULong  result = 0;\n+    FT_UInt32 result = 0;\n@@ -676,1 +676,1 @@\n-  FT_BASE_DEF( FT_ULong )\n+  FT_BASE_DEF( FT_UInt32 )\n@@ -682,1 +682,1 @@\n-    FT_ULong  result = 0;\n+    FT_UInt32 result = 0;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftstream.c","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftstroke.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n@@ -48,0 +48,12 @@\n+  {\n+    \/* Value '0x0366A' corresponds to a shear angle of about 12 degrees. *\/\n+    FT_GlyphSlot_Slant( slot, 0x0366A, 0 );\n+  }\n+\n+\n+  \/* documentation is in ftsynth.h *\/\n+\n+  FT_EXPORT_DEF( void )\n+  FT_GlyphSlot_Slant( FT_GlyphSlot  slot,\n+                      FT_Fixed      xslant,\n+                      FT_Fixed      yslant )\n@@ -64,3 +76,1 @@\n-    \/* For italic, simply apply a shear transform, with an angle *\/\n-    \/* of about 12 degrees.                                      *\/\n-\n+    \/* For italic, simply apply a shear transform *\/\n@@ -68,1 +78,1 @@\n-    transform.yx = 0x00000L;\n+    transform.yx = -yslant;\n@@ -70,1 +80,1 @@\n-    transform.xy = 0x0366AL;\n+    transform.xy = xslant;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsynth.c","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsystem.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/fttrigon.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/fttype1.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftutil.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffcmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffcmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * Copyright (C) 1996-2022 by\n- * David Turner, Robert Wilhelm, and Werner Lemberg.\n+ * Copyright (C) 1996-2023 by\n+ * David Turner, Robert Wilhelm, Werner Lemberg, and Dominik Röttsches.\n@@ -939,0 +939,64 @@\n+  static FT_Error\n+  cff_load_item_variation_store( CFF_Face         face,\n+                                 FT_ULong         offset,\n+                                 GX_ItemVarStore  itemStore )\n+  {\n+    FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+\n+    return mm->load_item_var_store( FT_FACE(face), offset, itemStore );\n+  }\n+\n+\n+  static FT_Error\n+  cff_load_delta_set_index_mapping( CFF_Face           face,\n+                                    FT_ULong           offset,\n+                                    GX_DeltaSetIdxMap  map,\n+                                    GX_ItemVarStore    itemStore,\n+                                    FT_ULong           table_len )\n+  {\n+    FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+\n+    return mm->load_delta_set_idx_map( FT_FACE( face ), offset, map,\n+                                       itemStore, table_len );\n+  }\n+\n+\n+  static FT_Int\n+  cff_get_item_delta( CFF_Face         face,\n+                      GX_ItemVarStore  itemStore,\n+                      FT_UInt          outerIndex,\n+                      FT_UInt          innerIndex )\n+  {\n+    FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+\n+    return mm->get_item_delta( FT_FACE( face ), itemStore,\n+                               outerIndex, innerIndex );\n+  }\n+\n+\n+  static void\n+  cff_done_item_variation_store( CFF_Face          face,\n+                                 GX_ItemVarStore  itemStore )\n+  {\n+    FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+\n+    mm->done_item_var_store( FT_FACE( face ), itemStore );\n+  }\n+\n+\n+  static void\n+  cff_done_delta_set_index_map( CFF_Face           face,\n+                                GX_DeltaSetIdxMap  deltaSetIdxMap )\n+  {\n+    FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+\n+    mm->done_delta_set_idx_map( FT_FACE ( face ), deltaSetIdxMap );\n+  }\n+\n+\n+\n@@ -942,13 +1006,30 @@\n-    (FT_Get_MM_Func)             NULL,                    \/* get_mm              *\/\n-    (FT_Set_MM_Design_Func)      NULL,                    \/* set_mm_design       *\/\n-    (FT_Set_MM_Blend_Func)       cff_set_mm_blend,        \/* set_mm_blend        *\/\n-    (FT_Get_MM_Blend_Func)       cff_get_mm_blend,        \/* get_mm_blend        *\/\n-    (FT_Get_MM_Var_Func)         cff_get_mm_var,          \/* get_mm_var          *\/\n-    (FT_Set_Var_Design_Func)     cff_set_var_design,      \/* set_var_design      *\/\n-    (FT_Get_Var_Design_Func)     cff_get_var_design,      \/* get_var_design      *\/\n-    (FT_Set_Instance_Func)       cff_set_instance,        \/* set_instance        *\/\n-    (FT_Set_MM_WeightVector_Func)cff_set_mm_weightvector, \/* set_mm_weightvector *\/\n-    (FT_Get_MM_WeightVector_Func)cff_get_mm_weightvector, \/* get_mm_weightvector *\/\n-\n-    (FT_Get_Var_Blend_Func)      cff_get_var_blend,       \/* get_var_blend       *\/\n-    (FT_Done_Blend_Func)         cff_done_blend           \/* done_blend          *\/\n+    (FT_Get_MM_Func)        NULL,               \/* get_mm                    *\/\n+    (FT_Set_MM_Design_Func) NULL,               \/* set_mm_design             *\/\n+    (FT_Set_MM_Blend_Func)  cff_set_mm_blend,   \/* set_mm_blend              *\/\n+    (FT_Get_MM_Blend_Func)  cff_get_mm_blend,   \/* get_mm_blend              *\/\n+    (FT_Get_MM_Var_Func)    cff_get_mm_var,     \/* get_mm_var                *\/\n+    (FT_Set_Var_Design_Func)cff_set_var_design, \/* set_var_design            *\/\n+    (FT_Get_Var_Design_Func)cff_get_var_design, \/* get_var_design            *\/\n+    (FT_Set_Instance_Func)  cff_set_instance,   \/* set_instance              *\/\n+    (FT_Set_MM_WeightVector_Func)\n+                            cff_set_mm_weightvector,\n+                                                \/* set_mm_weightvector       *\/\n+    (FT_Get_MM_WeightVector_Func)\n+                            cff_get_mm_weightvector,\n+                                                \/* get_mm_weightvector       *\/\n+    (FT_Var_Load_Delta_Set_Idx_Map_Func)\n+                            cff_load_delta_set_index_mapping,\n+                                                \/* load_delta_set_idx_map    *\/\n+    (FT_Var_Load_Item_Var_Store_Func)\n+                            cff_load_item_variation_store,\n+                                                \/* load_item_variation_store *\/\n+    (FT_Var_Get_Item_Delta_Func)\n+                            cff_get_item_delta, \/* get_item_delta            *\/\n+    (FT_Var_Done_Item_Var_Store_Func)\n+                            cff_done_item_variation_store,\n+                                                \/* done_item_variation_store *\/\n+    (FT_Var_Done_Delta_Set_Idx_Map_Func)\n+                            cff_done_delta_set_index_map,\n+                                                \/* done_delta_set_index_map  *\/\n+    (FT_Get_Var_Blend_Func) cff_get_var_blend,  \/* get_var_blend             *\/\n+    (FT_Done_Blend_Func)    cff_done_blend      \/* done_blend                *\/\n@@ -1030,2 +1111,1 @@\n-#if !defined FT_CONFIG_OPTION_NO_GLYPH_NAMES && \\\n-     defined TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+#if defined TT_CONFIG_OPTION_GX_VAR_SUPPORT\n@@ -1046,1 +1126,1 @@\n-#elif !defined FT_CONFIG_OPTION_NO_GLYPH_NAMES\n+#else\n@@ -1059,26 +1139,0 @@\n-#elif defined TT_CONFIG_OPTION_GX_VAR_SUPPORT\n-  FT_DEFINE_SERVICEDESCREC9(\n-    cff_services,\n-\n-    FT_SERVICE_ID_FONT_FORMAT,          FT_FONT_FORMAT_CFF,\n-    FT_SERVICE_ID_MULTI_MASTERS,        &cff_service_multi_masters,\n-    FT_SERVICE_ID_METRICS_VARIATIONS,   &cff_service_metrics_var,\n-    FT_SERVICE_ID_POSTSCRIPT_INFO,      &cff_service_ps_info,\n-    FT_SERVICE_ID_POSTSCRIPT_FONT_NAME, &cff_service_ps_name,\n-    FT_SERVICE_ID_TT_CMAP,              &cff_service_get_cmap_info,\n-    FT_SERVICE_ID_CID,                  &cff_service_cid_info,\n-    FT_SERVICE_ID_PROPERTIES,           &cff_service_properties,\n-    FT_SERVICE_ID_CFF_LOAD,             &cff_service_cff_load\n-  )\n-#else\n-  FT_DEFINE_SERVICEDESCREC7(\n-    cff_services,\n-\n-    FT_SERVICE_ID_FONT_FORMAT,          FT_FONT_FORMAT_CFF,\n-    FT_SERVICE_ID_POSTSCRIPT_INFO,      &cff_service_ps_info,\n-    FT_SERVICE_ID_POSTSCRIPT_FONT_NAME, &cff_service_ps_name,\n-    FT_SERVICE_ID_TT_CMAP,              &cff_service_get_cmap_info,\n-    FT_SERVICE_ID_CID,                  &cff_service_cid_info,\n-    FT_SERVICE_ID_PROPERTIES,           &cff_service_properties,\n-    FT_SERVICE_ID_CFF_LOAD,             &cff_service_cff_load\n-  )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffdrivr.c","additions":98,"deletions":44,"binary":false,"changes":142,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffdrivr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cfferrs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -359,2 +359,1 @@\n-    if ( ( load_flags & FT_LOAD_COLOR )     &&\n-         ( (TT_Face)glyph->root.face )->svg )\n+    if ( ( load_flags & FT_LOAD_COLOR ) && face->svg )\n@@ -367,4 +366,1 @@\n-      FT_Short      dummy;\n-      FT_UShort     advanceX;\n-      FT_UShort     advanceY;\n-      SFNT_Service  sfnt;\n+      SFNT_Service  sfnt  = (SFNT_Service)face->sfnt;\n@@ -382,1 +378,0 @@\n-      sfnt  = (SFNT_Service)((TT_Face)glyph->root.face)->sfnt;\n@@ -386,0 +381,8 @@\n+        FT_Fixed  x_scale = size->root.metrics.x_scale;\n+        FT_Fixed  y_scale = size->root.metrics.y_scale;\n+\n+        FT_Short   dummy;\n+        FT_UShort  advanceX;\n+        FT_UShort  advanceY;\n+\n+\n@@ -407,8 +410,2 @@\n-        advanceX =\n-          (FT_UShort)FT_MulDiv( advanceX,\n-                                glyph->root.face->size->metrics.x_ppem,\n-                                glyph->root.face->units_per_EM );\n-        advanceY =\n-          (FT_UShort)FT_MulDiv( advanceY,\n-                                glyph->root.face->size->metrics.y_ppem,\n-                                glyph->root.face->units_per_EM );\n+        glyph->root.linearHoriAdvance = advanceX;\n+        glyph->root.linearVertAdvance = advanceY;\n@@ -416,2 +413,2 @@\n-        glyph->root.metrics.horiAdvance = advanceX << 6;\n-        glyph->root.metrics.vertAdvance = advanceY << 6;\n+        glyph->root.metrics.horiAdvance = FT_MulFix( advanceX, x_scale );\n+        glyph->root.metrics.vertAdvance = FT_MulFix( advanceY, y_scale );\n@@ -494,3 +491,2 @@\n-      \/* now load the unscaled outline *\/\n-      error = cff_get_glyph_data( face, glyph_index,\n-                                  &charstring, &charstring_len );\n+      \/* this function also checks for a valid subfont index *\/\n+      error = decoder_funcs->prepare( &decoder, size, glyph_index );\n@@ -500,1 +496,3 @@\n-      error = decoder_funcs->prepare( &decoder, size, glyph_index );\n+      \/* now load the unscaled outline *\/\n+      error = cff_get_glyph_data( face, glyph_index,\n+                                  &charstring, &charstring_len );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffgload.c","additions":20,"deletions":22,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffgload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -1291,1 +1291,1 @@\n-  \/* Blend calculation is done in 16.16 fixed point.       *\/\n+  \/* Blend calculation is done in 16.16 fixed-point.       *\/\n@@ -1367,1 +1367,1 @@\n-      \/* convert inputs to 16.16 fixed point *\/\n+      \/* convert inputs to 16.16 fixed-point *\/\n@@ -1376,1 +1376,1 @@\n-      \/* Push blended result as Type 2 5-byte fixed point number.  This *\/\n+      \/* Push blended result as Type 2 5-byte fixed-point number.  This *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffload.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -1034,1 +1034,0 @@\n-#ifndef FT_CONFIG_OPTION_NO_GLYPH_NAMES\n@@ -1039,1 +1038,0 @@\n-#endif\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffobjs.c","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -533,1 +533,1 @@\n-      \/* 16.16 fixed point is used internally for CFF2 blend results. *\/\n+      \/* 16.16 fixed-point is used internally for CFF2 blend results. *\/\n@@ -761,6 +761,6 @@\n-                  (double)matrix->xx \/ *upm \/ 65536,\n-                  (double)matrix->xy \/ *upm \/ 65536,\n-                  (double)matrix->yx \/ *upm \/ 65536,\n-                  (double)matrix->yy \/ *upm \/ 65536,\n-                  (double)offset->x  \/ *upm \/ 65536,\n-                  (double)offset->y  \/ *upm \/ 65536 ));\n+                  (double)matrix->xx \/ (double)*upm \/ 65536,\n+                  (double)matrix->xy \/ (double)*upm \/ 65536,\n+                  (double)matrix->yx \/ (double)*upm \/ 65536,\n+                  (double)matrix->yy \/ (double)*upm \/ 65536,\n+                  (double)offset->x  \/ (double)*upm \/ 65536,\n+                  (double)offset->y  \/ (double)*upm \/ 65536 ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffparse.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffparse.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cfftoken.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/ciderrs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidgload.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidgload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidload.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -156,1 +156,1 @@\n-  FT_LOCAL( FT_Error )\n+  FT_LOCAL_DEF( FT_Error )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidobjs.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidparse.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidparse.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidriver.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidriver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidtoken.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n@@ -566,1 +566,1 @@\n-  FT_LOCAL( void )\n+  FT_LOCAL_DEF( void )\n@@ -1064,1 +1064,1 @@\n-        \/* fall through                      *\/\n+        FALL_THROUGH;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/afmparse.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/afmparse.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2022 by\n+ * Copyright (C) 2017-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/cffdecode.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2022 by\n+ * Copyright (C) 2017-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/cffdecode.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxerr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxmod.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxmod.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psconv.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psconv.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- *   Adobe's code for Fixed Point Mathematics (specification only).\n+ *   Adobe's code for Fixed-Point Mathematics (specification only).\n@@ -46,1 +46,1 @@\n-  \/* rasterizer integer and fixed point arithmetic must be 32-bit *\/\n+  \/* rasterizer integer and fixed-point arithmetic must be 32-bit *\/\n@@ -49,1 +49,1 @@\n-  typedef FT_Int32   CF2_Frac;   \/* 2.30 fixed point *\/\n+  typedef FT_Int32   CF2_Frac;   \/* 2.30 fixed-point *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psfixed.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -71,2 +71,0 @@\n-    FT_ASSERT( unitsPerEm > 0 );\n-\n@@ -76,0 +74,1 @@\n+    FT_ASSERT( unitsPerEm > 0 );\n@@ -300,1 +299,0 @@\n-    FT_ASSERT( decoder->builder.face->units_per_EM );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psft.c","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-  \/* a matrix of fixed point values *\/\n+  \/* a matrix of fixed-point values *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psglue.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -696,2 +696,4 @@\n-                       ADD_INT32( secondHintEdge->csCoord,\n-                                  firstHintEdge->csCoord ) \/ 2 );\n+                       ADD_INT32(\n+                         firstHintEdge->csCoord,\n+                         SUB_INT32 ( secondHintEdge->csCoord,\n+                                     firstHintEdge->csCoord ) \/ 2 ) );\n@@ -1037,1 +1039,1 @@\n-      FT_TRACE6(( \"Initial hintmap\" ));\n+      FT_TRACE6(( \"Initial hintmap:\\n\" ));\n@@ -1040,1 +1042,1 @@\n-      FT_TRACE6(( \"Hints:\" ));\n+      FT_TRACE6(( \"Hints:\\n\" ));\n@@ -1057,1 +1059,1 @@\n-    FT_TRACE6(( \"(adjusted)\\n\" ));\n+    FT_TRACE6(( \"Hints adjusted:\\n\" ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/pshints.c","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -87,1 +87,0 @@\n-    table->num_elems = 0;\n@@ -238,1 +237,1 @@\n-    if ( (FT_ULong)table->init == 0xDEADBEEFUL )\n+    if ( table->init == 0xDEADBEEFUL )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psobjs.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-      CF2_Fixed  r;      \/* 16.16 fixed point *\/\n-      CF2_Frac   f;      \/* 2.30 fixed point (for font matrix) *\/\n+      CF2_Fixed  r;      \/* 16.16 fixed-point *\/\n+      CF2_Frac   f;      \/* 2.30 fixed-point (for font matrix) *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psstack.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1cmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1cmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1decode.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1decode.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshalgo.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshalgo.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshglob.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshglob.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshmod.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshmod.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2022 by\n+ * Copyright (C) 2003-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshnterr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n@@ -768,1 +768,1 @@\n-  FT_LOCAL( void )\n+  FT_LOCAL_DEF( void )\n@@ -782,1 +782,1 @@\n-  FT_LOCAL( void )\n+  FT_LOCAL_DEF( void )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshrec.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshrec.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -415,1 +415,4 @@\n-    PS_UniMap  *min, *max, *mid, *result = NULL;\n+    PS_UniMap  *result = NULL;\n+    PS_UniMap  *min = table->maps;\n+    PS_UniMap  *max = min + table->num_maps;\n+    PS_UniMap  *mid = min + ( ( max - min ) >> 1 );\n@@ -419,5 +422,1 @@\n-\n-    min = table->maps;\n-    max = min + table->num_maps - 1;\n-\n-    while ( min <= max )\n+    while ( min < max )\n@@ -428,2 +427,0 @@\n-      mid = min + ( ( max - min ) >> 1 );\n-\n@@ -441,3 +438,0 @@\n-      if ( min == max )\n-        break;\n-\n@@ -447,1 +441,6 @@\n-        max = mid - 1;\n+        max = mid;\n+\n+      \/* reasonable prediction in a continuous block *\/\n+      mid += unicode - base_glyph;\n+      if ( mid >= max || mid < min )\n+        mid = min + ( ( max - min ) >> 1 );\n@@ -468,1 +467,1 @@\n-      FT_UInt     mid;\n+      FT_UInt     mid = min + ( ( max - min ) >> 1 );\n@@ -475,1 +474,0 @@\n-        mid = min + ( ( max - min ) >> 1 );\n@@ -493,0 +491,5 @@\n+\n+        \/* reasonable prediction in a continuous block *\/\n+        mid += char_code - base_glyph;\n+        if ( mid >= max || mid < min )\n+          mid = min + ( max - min ) \/ 2;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psmodule.c","additions":18,"deletions":15,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psmodule.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psnamerr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2005-2022 by\n+ * Copyright (C) 2005-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/pstables.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2005-2022 by\n+ * Copyright (C) 2005-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftmisc.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -2222,2 +2222,2 @@\n-                x1 \/ (double)ras.precision,\n-                x2 \/ (double)ras.precision ));\n+                (double)x1 \/ (double)ras.precision,\n+                (double)x2 \/ (double)ras.precision ));\n@@ -2297,2 +2297,2 @@\n-                x1 \/ (double)ras.precision,\n-                x2 \/ (double)ras.precision ));\n+                (double)x1 \/ (double)ras.precision,\n+                (double)x2 \/ (double)ras.precision ));\n@@ -2480,2 +2480,2 @@\n-                x1 \/ (double)ras.precision,\n-                x2 \/ (double)ras.precision ));\n+                (double)x1 \/ (double)ras.precision,\n+                (double)x2 \/ (double)ras.precision ));\n@@ -2551,2 +2551,2 @@\n-                x1 \/ (double)ras.precision,\n-                x2 \/ (double)ras.precision ));\n+                (double)x1 \/ (double)ras.precision,\n+                (double)x2 \/ (double)ras.precision ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftraster.c","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftraster.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftrend1.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftrend1.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/rasterrs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n@@ -242,1 +242,1 @@\n-      return;\n+      \/* return; (never reached) *\/\n@@ -410,1 +410,2 @@\n-      \/* Shouldn't happen, but fall through. *\/\n+      \/* Shouldn't happen, but ... *\/\n+      FALL_THROUGH;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/pngshim.c","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2022 by\n+ * Copyright (C) 2013-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/pngshim.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -381,1 +381,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -384,1 +384,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -391,1 +391,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -395,1 +395,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -398,1 +398,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -401,1 +401,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -408,1 +408,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -412,1 +412,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -415,1 +415,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -418,1 +418,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -425,1 +425,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -429,1 +429,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -432,1 +432,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -435,1 +435,1 @@\n-        \/* fall through *\/\n+        FALL_THROUGH;\n@@ -660,1 +660,1 @@\n-   * Find the shortest decimal representation of a 16.16 fixed point\n+   * Find the shortest decimal representation of a 16.16 fixed-point\n@@ -736,1 +736,1 @@\n-        verified this by iterating over all possible fixed point numbers.\n+        verified this by iterating over all possible fixed-point numbers.\n@@ -744,1 +744,1 @@\n-        also found by testing all possible fixed point values).\n+        also found by testing all possible fixed-point values).\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfdriver.c","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfdriver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sferrors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -1110,7 +1110,1 @@\n-      {\n-        if ( tt_face_lookup_table( face, TTAG_glyf ) != 0 &&\n-             tt_face_lookup_table( face, TTAG_gvar ) != 0 )\n-          flags |= FT_FACE_FLAG_MULTIPLE_MASTERS;\n-        if ( tt_face_lookup_table( face, TTAG_CFF2 ) != 0 )\n-          flags |= FT_FACE_FLAG_MULTIPLE_MASTERS;\n-      }\n+        flags |= FT_FACE_FLAG_MULTIPLE_MASTERS;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfobjs.c","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -165,2 +165,1 @@\n-    if ( FT_QALLOC( sfnt, 12 + woff.num_tables * 16UL ) ||\n-         FT_NEW( sfnt_stream )                          )\n+    if ( FT_QALLOC( sfnt, 12 ) || FT_NEW( sfnt_stream ) )\n@@ -199,2 +198,2 @@\n-    if ( FT_NEW_ARRAY( tables, woff.num_tables )  ||\n-         FT_NEW_ARRAY( indices, woff.num_tables ) )\n+    if ( FT_QNEW_ARRAY( tables, woff.num_tables )  ||\n+         FT_QNEW_ARRAY( indices, woff.num_tables ) )\n@@ -331,3 +330,1 @@\n-    if ( FT_REALLOC( sfnt,\n-                     12 + woff.num_tables * 16UL,\n-                     woff.totalSfntSize ) )\n+    if ( FT_QREALLOC( sfnt, 12, woff.totalSfntSize ) )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff.c","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2019-2022 by\n+ * Copyright (C) 2019-2023 by\n@@ -232,3 +232,3 @@\n-      if ( FT_REALLOC( dst,\n-                       (FT_ULong)( *dst_size ),\n-                       (FT_ULong)( *offset + size ) ) )\n+      if ( FT_QREALLOC( dst,\n+                        (FT_ULong)( *dst_size ),\n+                        (FT_ULong)( *offset + size ) ) )\n@@ -787,1 +787,1 @@\n-    if ( FT_QNEW_ARRAY( loca_buf, loca_buf_size ) )\n+    if ( FT_QALLOC( loca_buf, loca_buf_size ) )\n@@ -866,1 +866,1 @@\n-    if ( FT_NEW_ARRAY( substreams, num_substreams ) )\n+    if ( FT_QNEW_ARRAY( substreams, num_substreams ) )\n@@ -929,1 +929,1 @@\n-    if ( FT_NEW_ARRAY( loca_values, num_glyphs + 1 ) )\n+    if ( FT_QNEW_ARRAY( loca_values, num_glyphs + 1 ) )\n@@ -941,1 +941,1 @@\n-    if ( FT_NEW_ARRAY( glyph_buf, glyph_buf_size ) )\n+    if ( FT_QALLOC( glyph_buf, glyph_buf_size ) )\n@@ -944,1 +944,1 @@\n-    if ( FT_NEW_ARRAY( info->x_mins, num_glyphs ) )\n+    if ( FT_QNEW_ARRAY( info->x_mins, num_glyphs ) )\n@@ -1002,1 +1002,1 @@\n-          if ( FT_RENEW_ARRAY( glyph_buf, glyph_buf_size, size_needed ) )\n+          if ( FT_QREALLOC( glyph_buf, glyph_buf_size, size_needed ) )\n@@ -1078,1 +1078,1 @@\n-        if ( FT_NEW_ARRAY( n_points_arr, n_contours ) )\n+        if ( FT_QNEW_ARRAY( n_points_arr, n_contours ) )\n@@ -1115,1 +1115,1 @@\n-        if ( FT_NEW_ARRAY( points, points_size ) )\n+        if ( FT_QNEW_ARRAY( points, points_size ) )\n@@ -1144,1 +1144,1 @@\n-          if ( FT_RENEW_ARRAY( glyph_buf, glyph_buf_size, size_needed ) )\n+          if ( FT_QREALLOC( glyph_buf, glyph_buf_size, size_needed ) )\n@@ -1229,2 +1229,1 @@\n-      if ( n_contours > 0 )\n-        info->x_mins[i] = (FT_Short)x_min;\n+      info->x_mins[i] = (FT_Short)x_min;\n@@ -1347,1 +1346,1 @@\n-    if ( FT_NEW_ARRAY( info->x_mins, num_glyphs ) )\n+    if ( FT_QNEW_ARRAY( info->x_mins, num_glyphs ) )\n@@ -1435,2 +1434,2 @@\n-    if ( FT_NEW_ARRAY( advance_widths, num_hmetrics ) ||\n-         FT_NEW_ARRAY( lsbs, num_glyphs )             )\n+    if ( FT_QNEW_ARRAY( advance_widths, num_hmetrics ) ||\n+         FT_QNEW_ARRAY( lsbs, num_glyphs )             )\n@@ -1487,1 +1486,1 @@\n-    if ( FT_NEW_ARRAY( hmtx_table, hmtx_table_size ) )\n+    if ( FT_QALLOC( hmtx_table, hmtx_table_size ) )\n@@ -1544,4 +1543,4 @@\n-    FT_Error   error       = FT_Err_Ok;\n-    FT_Stream  stream      = NULL;\n-    FT_Byte*   buf_cursor  = NULL;\n-    FT_Byte*   table_entry = NULL;\n+    FT_Error   error      = FT_Err_Ok;\n+    FT_Stream  stream     = NULL;\n+    FT_Byte*   buf_cursor = NULL;\n+    FT_Byte    table_entry[16];\n@@ -1588,4 +1587,0 @@\n-    \/* Create buffer for table entries. *\/\n-    if ( FT_NEW_ARRAY( table_entry, 16 ) )\n-      goto Fail;\n-\n@@ -1754,1 +1749,0 @@\n-    FT_FREE( table_entry );\n@@ -1767,1 +1761,0 @@\n-    FT_FREE( table_entry );\n@@ -1880,2 +1873,2 @@\n-    if ( FT_NEW_ARRAY( tables, woff2.num_tables )  ||\n-         FT_NEW_ARRAY( indices, woff2.num_tables ) )\n+    if ( FT_QNEW_ARRAY( tables, woff2.num_tables )  ||\n+         FT_QNEW_ARRAY( indices, woff2.num_tables ) )\n@@ -1952,0 +1945,1 @@\n+      table->flags      = flags;\n@@ -1955,1 +1949,1 @@\n-      table->flags      = flags;\n+      table->dst_offset = 0;\n@@ -2013,0 +2007,1 @@\n+      \/* pre-zero pointers within in case of failure *\/\n@@ -2026,1 +2021,1 @@\n-        if ( FT_NEW_ARRAY( ttc_font->table_indices, ttc_font->num_tables ) )\n+        if ( FT_QNEW_ARRAY( ttc_font->table_indices, ttc_font->num_tables ) )\n@@ -2305,3 +2300,3 @@\n-      if ( FT_REALLOC( sfnt,\n-                       (FT_ULong)( sfnt_size ),\n-                       (FT_ULong)( woff2.actual_sfnt_size ) ) )\n+      if ( FT_QREALLOC( sfnt,\n+                        (FT_ULong)( sfnt_size ),\n+                        (FT_ULong)( woff2.actual_sfnt_size ) ) )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff2.c","additions":31,"deletions":36,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2019-2022 by\n+ * Copyright (C) 2019-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff2.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n@@ -3882,1 +3882,1 @@\n-  FT_LOCAL( FT_Error )\n+  FT_LOCAL_DEF( FT_Error )\n@@ -3889,0 +3889,1 @@\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmap.c","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2022 by\n+ * Copyright (C) 2002-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2009-2022 by\n+ * Copyright (C) 2009-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmapc.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2022 by\n+ * Copyright (C) 2018-2023 by\n@@ -37,0 +37,3 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+#include <freetype\/internal\/services\/svmm.h>\n+#endif\n@@ -49,0 +52,1 @@\n+#define VAR_IDX_BASE_SIZE                 4U\n@@ -50,1 +54,11 @@\n-#define COLR_HEADER_SIZE                 14U\n+\/* https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/colr#colr-header *\/\n+\/* 3 * uint16 + 2 * Offset32 *\/\n+#define COLRV0_HEADER_SIZE               14U\n+\/* COLRV0_HEADER_SIZE + 5 * Offset32 *\/\n+#define COLRV1_HEADER_SIZE               34U\n+\n+\n+#define ENSURE_READ_BYTES( byte_size )                             \\\n+  if ( p < colr->paints_start_v1                                || \\\n+       p > (FT_Byte*)colr->table + colr->table_size - byte_size )  \\\n+    return 0\n@@ -55,5 +69,19 @@\n-    FT_COLR_PAINTFORMAT_INTERNAL_SCALE_CENTER         = 18,\n-    FT_COLR_PAINTFORMAT_INTERNAL_SCALE_UNIFORM        = 20,\n-    FT_COLR_PAINTFORMAT_INTERNAL_SCALE_UNIFORM_CENTER = 22,\n-    FT_COLR_PAINTFORMAT_INTERNAL_ROTATE_CENTER        = 26,\n-    FT_COLR_PAINTFORMAT_INTERNAL_SKEW_CENTER          = 30\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SOLID                = 3,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_LINEAR_GRADIENT      = 5,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_RADIAL_GRADIENT      = 7,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SWEEP_GRADIENT       = 9,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_TRANSFORM            = 13,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_TRANSLATE            = 15,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE                = 17,\n+    FT_COLR_PAINTFORMAT_INTERNAL_SCALE_CENTER             = 18,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_CENTER         = 19,\n+    FT_COLR_PAINTFORMAT_INTERNAL_SCALE_UNIFORM            = 20,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_UNIFORM        = 21,\n+    FT_COLR_PAINTFORMAT_INTERNAL_SCALE_UNIFORM_CENTER     = 22,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_UNIFORM_CENTER = 23,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE               = 25,\n+    FT_COLR_PAINTFORMAT_INTERNAL_ROTATE_CENTER            = 26,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE_CENTER        = 27,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW                 = 29,\n+    FT_COLR_PAINTFORMAT_INTERNAL_SKEW_CENTER              = 30,\n+    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW_CENTER          = 31,\n@@ -107,0 +135,6 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+    \/* Item Variation Store for variable 'COLR' v1. *\/\n+    GX_ItemVarStoreRec    var_store;\n+    GX_DeltaSetIdxMapRec  delta_set_idx_map;\n+#endif\n+\n@@ -142,0 +176,3 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+    FT_ULong  colr_offset_in_stream;\n+#endif\n@@ -152,2 +189,6 @@\n-    if ( table_size < COLR_HEADER_SIZE )\n-      goto InvalidTable;\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+    colr_offset_in_stream = FT_STREAM_POS();\n+#endif\n+\n+    if ( table_size < COLRV0_HEADER_SIZE )\n+      goto NoColr;\n@@ -186,0 +227,3 @@\n+      if ( table_size < COLRV1_HEADER_SIZE )\n+        goto InvalidTable;\n+\n@@ -188,1 +232,1 @@\n-      if ( base_glyphs_offset_v1 >= table_size )\n+      if ( base_glyphs_offset_v1 + 4 >= table_size )\n@@ -208,0 +252,3 @@\n+        if ( layer_offset_v1 + 4 >= table_size )\n+          goto InvalidTable;\n+\n@@ -242,0 +289,59 @@\n+\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      colr->var_store.dataCount     = 0;\n+      colr->var_store.varData       = NULL;\n+      colr->var_store.axisCount     = 0;\n+      colr->var_store.regionCount   = 0;\n+      colr->var_store.varRegionList = 0;\n+\n+      colr->delta_set_idx_map.mapCount   = 0;\n+      colr->delta_set_idx_map.outerIndex = NULL;\n+      colr->delta_set_idx_map.innerIndex = NULL;\n+\n+      if ( face->variation_support & TT_FACE_FLAG_VAR_FVAR )\n+      {\n+        FT_ULong  var_idx_map_offset, var_store_offset;\n+\n+        FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+\n+        var_idx_map_offset = FT_NEXT_ULONG( p );\n+\n+        if ( var_idx_map_offset >= table_size )\n+          goto InvalidTable;\n+\n+        var_store_offset = FT_NEXT_ULONG( p );\n+        if ( var_store_offset >= table_size )\n+          goto InvalidTable;\n+\n+        if ( var_store_offset )\n+        {\n+          \/* If variation info has not been initialized yet, try doing so, *\/\n+          \/* otherwise loading the variation store will fail as it         *\/\n+          \/* requires access to `blend` for checking the number of axes.   *\/\n+          if ( !face->blend )\n+            if ( mm->get_mm_var( FT_FACE( face ), NULL ) )\n+              goto InvalidTable;\n+\n+          \/* Try loading `VarIdxMap` and `VarStore`. *\/\n+          error = mm->load_item_var_store(\n+                    FT_FACE( face ),\n+                    colr_offset_in_stream + var_store_offset,\n+                    &colr->var_store );\n+          if ( error != FT_Err_Ok )\n+            goto InvalidTable;\n+        }\n+\n+        if ( colr->var_store.axisCount && var_idx_map_offset )\n+        {\n+          error = mm->load_delta_set_idx_map(\n+                    FT_FACE( face ),\n+                    colr_offset_in_stream + var_idx_map_offset,\n+                    &colr->delta_set_idx_map,\n+                    &colr->var_store,\n+                    table_size );\n+          if ( error != FT_Err_Ok )\n+            goto InvalidTable;\n+        }\n+      }\n+#endif \/* TT_CONFIG_OPTION_GX_VAR_SUPPORT *\/\n@@ -254,0 +360,12 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+    {\n+      FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+\n+      mm->done_delta_set_idx_map( FT_FACE( face ),\n+                                  &colr->delta_set_idx_map );\n+      mm->done_item_var_store( FT_FACE( face ),\n+                               &colr->var_store );\n+    }\n+#endif\n+\n@@ -275,0 +393,11 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      {\n+        FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+\n+        mm->done_delta_set_idx_map( FT_FACE( face ),\n+                                    &colr->delta_set_idx_map );\n+        mm->done_item_var_store( FT_FACE( face ),\n+                                 &colr->var_store );\n+      }\n+#endif\n@@ -357,1 +486,3 @@\n-    if ( iterator->layer >= iterator->num_layers )\n+    if ( iterator->layer >= iterator->num_layers                     ||\n+         iterator->p < colr->layers                                  ||\n+         iterator->p >= ( (FT_Byte*)colr->table + colr->table_size ) )\n@@ -375,2 +506,4 @@\n-  read_color_line( FT_Byte*      color_line_p,\n-                   FT_ColorLine  *colorline )\n+  read_color_line( Colr*          colr,\n+                   FT_Byte*       color_line_p,\n+                   FT_ColorLine*  colorline,\n+                   FT_Bool        read_variable )\n@@ -382,0 +515,2 @@\n+    ENSURE_READ_BYTES( 3 );\n+\n@@ -391,0 +526,1 @@\n+    colorline->color_stop_iterator.read_variable      = read_variable;\n@@ -416,0 +552,4 @@\n+    if ( *p < colr->paints_start_v1                            ||\n+         *p > (FT_Byte*)colr->table + colr->table_size - 1 - 3 )\n+      return 0;\n+\n@@ -431,0 +571,2 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+\n@@ -432,1 +574,53 @@\n-  read_paint( Colr*           colr,\n+  get_deltas_for_var_index_base ( TT_Face           face,\n+                                  Colr*             colr,\n+                                  FT_ULong          var_index_base,\n+                                  FT_UInt           num_deltas,\n+                                  FT_ItemVarDelta*  deltas )\n+  {\n+    FT_UInt   outer_index    = 0;\n+    FT_UInt   inner_index    = 0;\n+    FT_ULong  loop_var_index = var_index_base;\n+\n+    FT_Service_MultiMasters  mm = (FT_Service_MultiMasters)face->mm;\n+\n+    FT_UInt  i = 0;\n+\n+\n+    if ( var_index_base == 0xFFFFFFFF )\n+    {\n+      for ( i = 0; i < num_deltas; ++i )\n+        deltas[i] = 0;\n+      return 1;\n+    }\n+\n+    for ( i = 0; i < num_deltas; ++i )\n+    {\n+      loop_var_index = var_index_base + i;\n+\n+      if ( colr->delta_set_idx_map.innerIndex )\n+      {\n+        if ( loop_var_index >= colr->delta_set_idx_map.mapCount )\n+          loop_var_index = colr->delta_set_idx_map.mapCount - 1;\n+\n+        outer_index = colr->delta_set_idx_map.outerIndex[loop_var_index];\n+        inner_index = colr->delta_set_idx_map.innerIndex[loop_var_index];\n+      }\n+      else\n+      {\n+        outer_index = 0;\n+        inner_index = loop_var_index;\n+      }\n+\n+      deltas[i] = mm->get_item_delta( FT_FACE( face ), &colr->var_store,\n+                                      outer_index, inner_index );\n+    }\n+\n+    return 1;\n+  }\n+\n+#endif \/* TT_CONFIG_OPTION_GX_VAR_SUPPORT *\/\n+\n+\n+  static FT_Bool\n+  read_paint( TT_Face         face,\n+              Colr*           colr,\n@@ -436,2 +630,11 @@\n-    FT_Byte*  paint_base     = p;\n-    FT_Byte*  child_table_p  = NULL;\n+    FT_Byte*  paint_base    = p;\n+    FT_Byte*  child_table_p = NULL;\n+    FT_Bool   do_read_var   = FALSE;\n+\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+    FT_ULong         var_index_base = 0;\n+    \/* Longest varIndexBase offset is 5 in the spec. *\/\n+    FT_ItemVarDelta  item_deltas[6] = { 0, 0, 0, 0, 0, 0 };\n+#else\n+    FT_UNUSED( face );\n+#endif\n@@ -443,2 +646,4 @@\n-    if ( p < colr->paints_start_v1                         ||\n-         p >= ( (FT_Byte*)colr->table + colr->table_size ) )\n+    \/* The last byte of the 'COLR' table is at 'size-1'; subtract 1 of    *\/\n+    \/* that to account for the expected format byte we are going to read. *\/\n+    if ( p < colr->paints_start_v1                        ||\n+         p > (FT_Byte*)colr->table + colr->table_size - 2 )\n@@ -478,1 +683,3 @@\n-    else if ( apaint->format == FT_COLR_PAINTFORMAT_SOLID )\n+    else if ( apaint->format == FT_COLR_PAINTFORMAT_SOLID ||\n+              (FT_PaintFormat_Internal)apaint->format ==\n+                 FT_COLR_PAINTFORMAT_INTERNAL_VAR_SOLID   )\n@@ -480,0 +687,1 @@\n+      ENSURE_READ_BYTES( 4 );\n@@ -483,0 +691,17 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( (FT_PaintFormat_Internal)apaint->format ==\n+              FT_COLR_PAINTFORMAT_INTERNAL_VAR_SOLID )\n+      {\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG( p );\n+\n+        if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 1,\n+                                             item_deltas ) )\n+          return 0;\n+\n+        apaint->u.solid.color.alpha += item_deltas[0];\n+      }\n+#endif\n+\n+      apaint->format = FT_COLR_PAINTFORMAT_SOLID;\n+\n@@ -488,0 +713,1 @@\n+      ENSURE_READ_BYTES(2);\n@@ -503,1 +729,4 @@\n-    if ( apaint->format == FT_COLR_PAINTFORMAT_LINEAR_GRADIENT )\n+    if ( apaint->format == FT_COLR_PAINTFORMAT_LINEAR_GRADIENT      ||\n+         ( do_read_var =\n+             ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_LINEAR_GRADIENT ) ) )\n@@ -505,2 +734,4 @@\n-      if ( !read_color_line( child_table_p,\n-                             &apaint->u.linear_gradient.colorline ) )\n+      if ( !read_color_line( colr,\n+                             child_table_p,\n+                             &apaint->u.linear_gradient.colorline,\n+                             do_read_var ) )\n@@ -510,2 +741,3 @@\n-       * In order to support variations expose these as FT_Fixed 16.16 values so\n-       * that we can support fractional values after interpolation.\n+       * In order to support variations expose these as FT_Fixed 16.16\n+       * values so that we can support fractional values after\n+       * interpolation.\n@@ -513,0 +745,1 @@\n+      ENSURE_READ_BYTES( 12 );\n@@ -520,0 +753,21 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( do_read_var )\n+      {\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG ( p );\n+\n+        if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 6,\n+                                             item_deltas ) )\n+          return 0;\n+\n+        apaint->u.linear_gradient.p0.x += INT_TO_FIXED( item_deltas[0] );\n+        apaint->u.linear_gradient.p0.y += INT_TO_FIXED( item_deltas[1] );\n+        apaint->u.linear_gradient.p1.x += INT_TO_FIXED( item_deltas[2] );\n+        apaint->u.linear_gradient.p1.y += INT_TO_FIXED( item_deltas[3] );\n+        apaint->u.linear_gradient.p2.x += INT_TO_FIXED( item_deltas[4] );\n+        apaint->u.linear_gradient.p2.y += INT_TO_FIXED( item_deltas[5] );\n+      }\n+#endif\n+\n+      apaint->format = FT_COLR_PAINTFORMAT_LINEAR_GRADIENT;\n+\n@@ -523,1 +777,4 @@\n-    else if ( apaint->format == FT_COLR_PAINTFORMAT_RADIAL_GRADIENT )\n+    else if ( apaint->format == FT_COLR_PAINTFORMAT_RADIAL_GRADIENT      ||\n+              ( do_read_var =\n+                  ( (FT_PaintFormat_Internal)apaint->format ==\n+                    FT_COLR_PAINTFORMAT_INTERNAL_VAR_RADIAL_GRADIENT ) ) )\n@@ -528,2 +785,4 @@\n-      if ( !read_color_line( child_table_p,\n-                             &apaint->u.radial_gradient.colorline ) )\n+      if ( !read_color_line( colr,\n+                             child_table_p,\n+                             &apaint->u.radial_gradient.colorline,\n+                             do_read_var ) )\n@@ -532,0 +791,1 @@\n+\n@@ -537,0 +797,2 @@\n+      ENSURE_READ_BYTES( 12 );\n+\n@@ -549,0 +811,25 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( do_read_var )\n+      {\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG ( p );\n+\n+        if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 6,\n+                                             item_deltas ) )\n+          return 0;\n+\n+        apaint->u.radial_gradient.c0.x += INT_TO_FIXED( item_deltas[0] );\n+        apaint->u.radial_gradient.c0.y += INT_TO_FIXED( item_deltas[1] );\n+\n+        \/\/ TODO: Anything to be done about UFWORD deltas here?\n+        apaint->u.radial_gradient.r0 += INT_TO_FIXED( item_deltas[2] );\n+\n+        apaint->u.radial_gradient.c1.x += INT_TO_FIXED( item_deltas[3] );\n+        apaint->u.radial_gradient.c1.y += INT_TO_FIXED( item_deltas[4] );\n+\n+        apaint->u.radial_gradient.r1 += INT_TO_FIXED( item_deltas[5] );\n+      }\n+#endif\n+\n+      apaint->format = FT_COLR_PAINTFORMAT_RADIAL_GRADIENT;\n+\n@@ -552,1 +839,4 @@\n-    else if ( apaint->format == FT_COLR_PAINTFORMAT_SWEEP_GRADIENT )\n+    else if ( apaint->format == FT_COLR_PAINTFORMAT_SWEEP_GRADIENT      ||\n+              ( do_read_var =\n+                  ( (FT_PaintFormat_Internal)apaint->format ==\n+                    FT_COLR_PAINTFORMAT_INTERNAL_VAR_SWEEP_GRADIENT ) ) )\n@@ -554,2 +844,4 @@\n-      if ( !read_color_line( child_table_p,\n-                             &apaint->u.sweep_gradient.colorline ) )\n+      if ( !read_color_line( colr,\n+                             child_table_p,\n+                             &apaint->u.sweep_gradient.colorline,\n+                             do_read_var) )\n@@ -558,0 +850,2 @@\n+      ENSURE_READ_BYTES( 8 );\n+\n@@ -568,0 +862,22 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( do_read_var )\n+      {\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG ( p );\n+\n+        if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 4,\n+                                             item_deltas ) )\n+          return 0;\n+\n+        \/\/ TODO: Handle overflow?\n+        apaint->u.sweep_gradient.center.x += INT_TO_FIXED( item_deltas[0] );\n+        apaint->u.sweep_gradient.center.y += INT_TO_FIXED( item_deltas[1] );\n+\n+        apaint->u.sweep_gradient.start_angle +=\n+          F2DOT14_TO_FIXED( item_deltas[2] );\n+        apaint->u.sweep_gradient.end_angle +=\n+          F2DOT14_TO_FIXED( item_deltas[3] );\n+      }\n+#endif\n+      apaint->format = FT_COLR_PAINTFORMAT_SWEEP_GRADIENT;\n+\n@@ -573,0 +889,1 @@\n+      ENSURE_READ_BYTES( 2 );\n@@ -580,1 +897,3 @@\n-    else if ( apaint->format == FT_COLR_PAINTFORMAT_TRANSFORM )\n+    else if ( apaint->format == FT_COLR_PAINTFORMAT_TRANSFORM ||\n+              (FT_PaintFormat_Internal)apaint->format ==\n+                FT_COLR_PAINTFORMAT_INTERNAL_VAR_TRANSFORM    )\n@@ -594,0 +913,1 @@\n+      ENSURE_READ_BYTES( 24 );\n@@ -601,0 +921,22 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_TRANSFORM )\n+      {\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG( p );\n+\n+        if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 6,\n+                                             item_deltas ) )\n+          return 0;\n+\n+        apaint->u.transform.affine.xx += (FT_Fixed)item_deltas[0];\n+        apaint->u.transform.affine.yx += (FT_Fixed)item_deltas[1];\n+        apaint->u.transform.affine.xy += (FT_Fixed)item_deltas[2];\n+        apaint->u.transform.affine.yy += (FT_Fixed)item_deltas[3];\n+        apaint->u.transform.affine.dx += (FT_Fixed)item_deltas[4];\n+        apaint->u.transform.affine.dy += (FT_Fixed)item_deltas[5];\n+      }\n+#endif\n+\n+      apaint->format = FT_COLR_PAINTFORMAT_TRANSFORM;\n+\n@@ -604,1 +946,3 @@\n-    else if ( apaint->format == FT_COLR_PAINTFORMAT_TRANSLATE )\n+    else if ( apaint->format == FT_COLR_PAINTFORMAT_TRANSLATE ||\n+              (FT_PaintFormat_Internal)apaint->format ==\n+                FT_COLR_PAINTFORMAT_INTERNAL_VAR_TRANSLATE    )\n@@ -609,0 +953,1 @@\n+      ENSURE_READ_BYTES( 4 );\n@@ -612,0 +957,18 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_TRANSLATE )\n+      {\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG( p );\n+\n+        if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 2,\n+                                             item_deltas ) )\n+          return 0;\n+\n+        apaint->u.translate.dx += INT_TO_FIXED( item_deltas[0] );\n+        apaint->u.translate.dy += INT_TO_FIXED( item_deltas[1] );\n+      }\n+#endif\n+\n+      apaint->format = FT_COLR_PAINTFORMAT_TRANSLATE;\n+\n@@ -615,8 +978,3 @@\n-    else if ( apaint->format ==\n-                FT_COLR_PAINTFORMAT_SCALE                         ||\n-              (FT_PaintFormat_Internal)apaint->format ==\n-                FT_COLR_PAINTFORMAT_INTERNAL_SCALE_CENTER         ||\n-              (FT_PaintFormat_Internal)apaint->format ==\n-                FT_COLR_PAINTFORMAT_INTERNAL_SCALE_UNIFORM        ||\n-              (FT_PaintFormat_Internal)apaint->format ==\n-                FT_COLR_PAINTFORMAT_INTERNAL_SCALE_UNIFORM_CENTER )\n+    else if ( apaint->format >= FT_COLR_PAINTFORMAT_SCALE             &&\n+              (FT_PaintFormat_Internal)apaint->format <=\n+                FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_UNIFORM_CENTER )\n@@ -628,0 +986,1 @@\n+      ENSURE_READ_BYTES( 2 );\n@@ -631,2 +990,5 @@\n-      if ( apaint->format ==\n-             FT_COLR_PAINTFORMAT_SCALE                 ||\n+      if ( apaint->format == FT_COLR_PAINTFORMAT_SCALE     ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE        ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_SCALE_CENTER     ||\n@@ -634,1 +996,3 @@\n-             FT_COLR_PAINTFORMAT_INTERNAL_SCALE_CENTER )\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_CENTER )\n+      {\n+        ENSURE_READ_BYTES( 2 );\n@@ -636,0 +1000,1 @@\n+      }\n@@ -642,1 +1007,3 @@\n-             FT_COLR_PAINTFORMAT_INTERNAL_SCALE_CENTER         ||\n+             FT_COLR_PAINTFORMAT_INTERNAL_SCALE_CENTER             ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_CENTER         ||\n@@ -644,1 +1011,3 @@\n-             FT_COLR_PAINTFORMAT_INTERNAL_SCALE_UNIFORM_CENTER )\n+             FT_COLR_PAINTFORMAT_INTERNAL_SCALE_UNIFORM_CENTER     ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_UNIFORM_CENTER )\n@@ -646,0 +1015,1 @@\n+        ENSURE_READ_BYTES( 4 );\n@@ -655,0 +1025,65 @@\n+      \/* Base values set, now handle variations. *\/\n+\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE                ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_CENTER         ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_UNIFORM        ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_UNIFORM_CENTER )\n+      {\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG( p );\n+\n+        if ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE )\n+        {\n+          if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 2,\n+                                               item_deltas ) )\n+            return 0;\n+\n+          apaint->u.scale.scale_x += F2DOT14_TO_FIXED( item_deltas[0] );\n+          apaint->u.scale.scale_y += F2DOT14_TO_FIXED( item_deltas[1] );\n+        }\n+\n+        if ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_CENTER )\n+        {\n+          if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 4,\n+                                               item_deltas ) )\n+            return 0;\n+\n+          apaint->u.scale.scale_x  += F2DOT14_TO_FIXED( item_deltas[0] );\n+          apaint->u.scale.scale_y  += F2DOT14_TO_FIXED( item_deltas[1] );\n+          apaint->u.scale.center_x += INT_TO_FIXED( item_deltas[2] );\n+          apaint->u.scale.center_y += INT_TO_FIXED( item_deltas[3] );\n+        }\n+\n+        if ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_UNIFORM )\n+        {\n+          if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 1,\n+                                               item_deltas ) )\n+            return 0;\n+\n+          apaint->u.scale.scale_x += F2DOT14_TO_FIXED( item_deltas[0] );\n+          apaint->u.scale.scale_y += F2DOT14_TO_FIXED( item_deltas[0] );\n+        }\n+\n+        if ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_SCALE_UNIFORM_CENTER )\n+        {\n+          if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 3,\n+                                               item_deltas ) )\n+            return 0;\n+\n+          apaint->u.scale.scale_x  += F2DOT14_TO_FIXED( item_deltas[0] );\n+          apaint->u.scale.scale_y  += F2DOT14_TO_FIXED( item_deltas[0] );\n+          apaint->u.scale.center_x += INT_TO_FIXED( item_deltas[1] );\n+          apaint->u.scale.center_y += INT_TO_FIXED( item_deltas[2] );\n+        }\n+      }\n+#endif\n+\n@@ -662,1 +1097,3 @@\n-    else if ( apaint->format == FT_COLR_PAINTFORMAT_ROTATE ||\n+    else if ( apaint->format == FT_COLR_PAINTFORMAT_ROTATE     ||\n+              (FT_PaintFormat_Internal)apaint->format ==\n+                FT_COLR_PAINTFORMAT_INTERNAL_ROTATE_CENTER     ||\n@@ -664,1 +1101,3 @@\n-                FT_COLR_PAINTFORMAT_INTERNAL_ROTATE_CENTER )\n+                FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE        ||\n+              (FT_PaintFormat_Internal)apaint->format ==\n+                FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE_CENTER )\n@@ -669,0 +1108,1 @@\n+      ENSURE_READ_BYTES( 2 );\n@@ -672,1 +1112,3 @@\n-           FT_COLR_PAINTFORMAT_INTERNAL_ROTATE_CENTER )\n+             FT_COLR_PAINTFORMAT_INTERNAL_ROTATE_CENTER     ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE_CENTER )\n@@ -674,0 +1116,1 @@\n+        ENSURE_READ_BYTES( 4 );\n@@ -683,0 +1126,36 @@\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE        ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE_CENTER )\n+      {\n+        FT_UInt  num_deltas = 0;\n+\n+\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG( p );\n+\n+        if ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE_CENTER )\n+          num_deltas = 3;\n+        if ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_ROTATE )\n+          num_deltas = 1;\n+\n+        if ( num_deltas > 0 )\n+        {\n+          if ( !get_deltas_for_var_index_base( face, colr, var_index_base,\n+                                               num_deltas, item_deltas ) )\n+            return 0;\n+\n+          apaint->u.rotate.angle += F2DOT14_TO_FIXED( item_deltas[0] );\n+\n+          if ( num_deltas == 3 )\n+          {\n+            apaint->u.rotate.center_x += INT_TO_FIXED( item_deltas[1] );\n+            apaint->u.rotate.center_y += INT_TO_FIXED( item_deltas[2] );\n+          }\n+        }\n+      }\n+#endif\n+\n@@ -685,0 +1164,1 @@\n+\n@@ -688,1 +1168,5 @@\n-    else if ( apaint->format == FT_COLR_PAINTFORMAT_SKEW ||\n+    else if ( apaint->format == FT_COLR_PAINTFORMAT_SKEW     ||\n+              (FT_PaintFormat_Internal)apaint->format ==\n+                FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW        ||\n+              (FT_PaintFormat_Internal)apaint->format ==\n+                FT_COLR_PAINTFORMAT_INTERNAL_SKEW_CENTER     ||\n@@ -690,1 +1174,1 @@\n-                FT_COLR_PAINTFORMAT_INTERNAL_SKEW_CENTER )\n+                FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW_CENTER )\n@@ -695,0 +1179,1 @@\n+      ENSURE_READ_BYTES( 4 );\n@@ -699,1 +1184,3 @@\n-           FT_COLR_PAINTFORMAT_INTERNAL_SKEW_CENTER )\n+             FT_COLR_PAINTFORMAT_INTERNAL_SKEW_CENTER     ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW_CENTER )\n@@ -701,0 +1188,1 @@\n+        ENSURE_READ_BYTES( 4 );\n@@ -710,0 +1198,36 @@\n+\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      if ( (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW        ||\n+           (FT_PaintFormat_Internal)apaint->format ==\n+             FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW_CENTER )\n+      {\n+        ENSURE_READ_BYTES( 4 );\n+        var_index_base = FT_NEXT_ULONG( p );\n+\n+        if ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW )\n+        {\n+          if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 2,\n+                                               item_deltas ) )\n+            return 0;\n+\n+          apaint->u.skew.x_skew_angle += F2DOT14_TO_FIXED( item_deltas[0] );\n+          apaint->u.skew.y_skew_angle += F2DOT14_TO_FIXED( item_deltas[1] );\n+        }\n+\n+        if ( (FT_PaintFormat_Internal)apaint->format ==\n+               FT_COLR_PAINTFORMAT_INTERNAL_VAR_SKEW_CENTER )\n+        {\n+          if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 4,\n+                                               item_deltas ) )\n+            return 0;\n+\n+          apaint->u.skew.x_skew_angle += F2DOT14_TO_FIXED( item_deltas[0] );\n+          apaint->u.skew.y_skew_angle += F2DOT14_TO_FIXED( item_deltas[1] );\n+          apaint->u.skew.center_x     += INT_TO_FIXED( item_deltas[2] );\n+          apaint->u.skew.center_y     += INT_TO_FIXED( item_deltas[3] );\n+        }\n+      }\n+#endif\n+\n@@ -723,0 +1247,1 @@\n+      ENSURE_READ_BYTES( 1 );\n@@ -874,1 +1399,1 @@\n-    \/* glyph ids; for now we can expect it to be 0.                    *\/\n+    \/* glyph ids; for now we can expect it to be 1.                    *\/\n@@ -902,1 +1427,1 @@\n-        if ( format > 1 )\n+        if ( format > 2 )\n@@ -916,1 +1441,1 @@\n-                                        face->root.size->metrics.x_scale );\n+                                        face->root.size->metrics.y_scale );\n@@ -920,1 +1445,30 @@\n-                                        face->root.size->metrics.x_scale );\n+                                        face->root.size->metrics.y_scale );\n+\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+        if ( format == 2 )\n+        {\n+          FT_ULong         var_index_base = 0;\n+          \/* varIndexBase offset for clipbox is 3 at most. *\/\n+          FT_ItemVarDelta  item_deltas[4] = { 0, 0, 0, 0 };\n+\n+\n+          \/* Check whether we can extract a 32-bit varIndexBase now. *\/\n+          if ( p1 > limit - 4 )\n+            return 0;\n+\n+          var_index_base = FT_NEXT_ULONG( p1 );\n+\n+          if ( !get_deltas_for_var_index_base( face, colr, var_index_base, 4,\n+                                               item_deltas ) )\n+            return 0;\n+\n+          font_clip_box.xMin +=\n+            FT_MulFix( item_deltas[0], face->root.size->metrics.x_scale );\n+          font_clip_box.yMin +=\n+            FT_MulFix( item_deltas[1], face->root.size->metrics.y_scale );\n+          font_clip_box.xMax +=\n+            FT_MulFix( item_deltas[2], face->root.size->metrics.x_scale );\n+          font_clip_box.yMax +=\n+            FT_MulFix( item_deltas[3], face->root.size->metrics.y_scale );\n+        }\n+#endif\n@@ -988,7 +1542,0 @@\n-    \/*\n-     * First ensure that p is within COLRv1.\n-     *\/\n-    if ( p < colr->layers_v1                               ||\n-         p >= ( (FT_Byte*)colr->table + colr->table_size ) )\n-      return 0;\n-\n@@ -1011,0 +1558,8 @@\n+    \/*\n+     * Before reading, ensure that `p` is within 'COLR' v1 and we can read a\n+     * 4-byte ULONG.\n+     *\/\n+    if ( p < colr->layers_v1                              ||\n+         p > (FT_Byte*)colr->table + colr->table_size - 4 )\n+      return 0;\n+\n@@ -1040,0 +1595,3 @@\n+    FT_ULong  var_index_base;\n+    FT_Byte*  last_entry_p = NULL;\n+    FT_UInt   entry_size   = COLOR_STOP_SIZE;\n@@ -1042,1 +1600,1 @@\n-    if ( !colr || !colr->table )\n+    if ( !colr || !colr->table || !iterator )\n@@ -1048,4 +1606,13 @@\n-    if ( iterator->p +\n-           ( ( iterator->num_color_stops - iterator->current_color_stop ) *\n-             COLOR_STOP_SIZE ) >\n-         ( (FT_Byte *)colr->table + colr->table_size ) )\n+    if ( iterator->read_variable )\n+      entry_size += VAR_IDX_BASE_SIZE;\n+\n+    \/* Calculate the start pointer for the last to-be-read (Var)ColorStop *\/\n+    \/* and check whether we can read a full (Var)ColorStop at that        *\/\n+    \/* position by comparing it to the position that is the size of one   *\/\n+    \/* (Var)ColorStop before the end of the 'COLR' table.                 *\/\n+    last_entry_p =\n+      iterator->p + ( iterator->num_color_stops - 1 -\n+                      iterator->current_color_stop ) * entry_size;\n+    if ( iterator->p < colr->paints_start_v1          ||\n+         last_entry_p > (FT_Byte*)colr->table +\n+                        colr->table_size - entry_size )\n@@ -1057,1 +1624,1 @@\n-    color_stop->stop_offset = FT_NEXT_SHORT( p );\n+    color_stop->stop_offset = F2DOT14_TO_FIXED( FT_NEXT_SHORT( p ) );\n@@ -1063,0 +1630,26 @@\n+    if ( iterator->read_variable )\n+    {\n+      \/* Pointer p needs to be advanced independently of whether we intend *\/\n+      \/* to take variable deltas into account or not.  Otherwise iteration *\/\n+      \/* would fail due to wrong offsets.                                  *\/\n+      var_index_base = FT_NEXT_ULONG( p );\n+\n+#ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT\n+      {\n+        FT_Int  item_deltas[2];\n+\n+\n+        if ( !get_deltas_for_var_index_base( face, colr,\n+                                             var_index_base,\n+                                             2,\n+                                             item_deltas ) )\n+          return 0;\n+\n+        color_stop->stop_offset += F2DOT14_TO_FIXED( item_deltas[0] );\n+        color_stop->color.alpha += item_deltas[1];\n+      }\n+#else\n+      FT_UNUSED( var_index_base );\n+#endif\n+    }\n+\n@@ -1142,1 +1735,1 @@\n-    return read_paint( colr, opaque_paint.p, paint );\n+    return read_paint( face, colr, opaque_paint.p, paint );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcolr.c","additions":662,"deletions":69,"binary":false,"changes":731,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2022 by\n+ * Copyright (C) 2018-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcolr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2022 by\n+ * Copyright (C) 2018-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcpal.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2022 by\n+ * Copyright (C) 2018-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcpal.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttkern.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttkern.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -209,1 +209,1 @@\n-                    \" can read only %d table%s in font (instead of %d)\\n\",\n+                    \" can read only %hu table%s in font (instead of %hu)\\n\",\n@@ -219,1 +219,1 @@\n-        FT_TRACE2(( \"check_table_dir: table entry %d invalid\\n\", nn ));\n+        FT_TRACE2(( \"check_table_dir: table entry %hu invalid\\n\", nn ));\n@@ -234,1 +234,1 @@\n-          FT_TRACE2(( \"check_table_dir: table entry %d invalid\\n\", nn ));\n+          FT_TRACE2(( \"check_table_dir: table entry %hu invalid\\n\", nn ));\n@@ -383,1 +383,1 @@\n-    FT_TRACE2(( \"-- Number of tables: %10u\\n\",    sfnt.num_tables ));\n+    FT_TRACE2(( \"-- Number of tables: %10hu\\n\",   sfnt.num_tables ));\n@@ -674,2 +674,2 @@\n-    FT_TRACE3(( \"Units per EM: %4u\\n\", header->Units_Per_EM ));\n-    FT_TRACE3(( \"IndexToLoc:   %4d\\n\", header->Index_To_Loc_Format ));\n+    FT_TRACE3(( \"Units per EM: %4hu\\n\", header->Units_Per_EM ));\n+    FT_TRACE3(( \"IndexToLoc:   %4hd\\n\", header->Index_To_Loc_Format ));\n@@ -805,1 +805,1 @@\n-    FT_TRACE3(( \"numGlyphs: %u\\n\", maxProfile->numGlyphs ));\n+    FT_TRACE3(( \"numGlyphs: %hu\\n\", maxProfile->numGlyphs ));\n@@ -1268,5 +1268,5 @@\n-    FT_TRACE3(( \"sTypoAscender:  %4d\\n\",   os2->sTypoAscender ));\n-    FT_TRACE3(( \"sTypoDescender: %4d\\n\",   os2->sTypoDescender ));\n-    FT_TRACE3(( \"usWinAscent:    %4u\\n\",   os2->usWinAscent ));\n-    FT_TRACE3(( \"usWinDescent:   %4u\\n\",   os2->usWinDescent ));\n-    FT_TRACE3(( \"fsSelection:    0x%2x\\n\", os2->fsSelection ));\n+    FT_TRACE3(( \"sTypoAscender:  %4hd\\n\",   os2->sTypoAscender ));\n+    FT_TRACE3(( \"sTypoDescender: %4hd\\n\",   os2->sTypoDescender ));\n+    FT_TRACE3(( \"usWinAscent:    %4hu\\n\",   os2->usWinAscent ));\n+    FT_TRACE3(( \"usWinDescent:   %4hu\\n\",   os2->usWinDescent ));\n+    FT_TRACE3(( \"fsSelection:    0x%2hx\\n\", os2->fsSelection ));\n@@ -1471,1 +1471,1 @@\n-      FT_TRACE3(( \"gaspRange %d: rangeMaxPPEM %5d, rangeGaspBehavior 0x%x\\n\",\n+      FT_TRACE3(( \"gaspRange %hu: rangeMaxPPEM %5hu, rangeGaspBehavior 0x%hx\\n\",\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttload.c","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n@@ -309,1 +309,1 @@\n-    if ( var )\n+    if ( var && face->blend )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttmtx.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2022 by\n+ * Copyright (C) 2006-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttmtx.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -61,1 +61,1 @@\n-#else \/* FT_CONFIG_OPTION_POSTSCRIPT_NAMES *\/\n+#else \/* !FT_CONFIG_OPTION_POSTSCRIPT_NAMES *\/\n@@ -155,1 +155,1 @@\n-#endif \/* FT_CONFIG_OPTION_POSTSCRIPT_NAMES *\/\n+#endif \/* !FT_CONFIG_OPTION_POSTSCRIPT_NAMES *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttpost.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttpost.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2005-2022 by\n+ * Copyright (C) 2005-2023 by\n@@ -388,2 +388,1 @@\n-        metrics->x_scale = FT_MulDiv( metrics->x_ppem,\n-                                      64 * 0x10000,\n+        metrics->x_scale = FT_DivFix( metrics->x_ppem * 64,\n@@ -391,2 +390,1 @@\n-        metrics->y_scale = FT_MulDiv( metrics->y_ppem,\n-                                      64 * 0x10000,\n+        metrics->y_scale = FT_DivFix( metrics->y_ppem * 64,\n@@ -402,1 +400,1 @@\n-        FT_UShort       upem, ppem, resolution;\n+        FT_UShort       ppem, resolution;\n@@ -404,1 +402,1 @@\n-        FT_Pos          ppem_; \/* to reduce casts *\/\n+        FT_Fixed        scale;\n@@ -427,3 +425,0 @@\n-        upem = face->header.Units_Per_EM;\n-        hori = &face->horizontal;\n-\n@@ -433,1 +428,2 @@\n-        ppem_ = (FT_Pos)ppem;\n+        scale = FT_DivFix( ppem * 64, face->header.Units_Per_EM );\n+        hori  = &face->horizontal;\n@@ -435,9 +431,6 @@\n-        metrics->ascender =\n-          FT_MulDiv( hori->Ascender, ppem_ * 64, upem );\n-        metrics->descender =\n-          FT_MulDiv( hori->Descender, ppem_ * 64, upem );\n-        metrics->height =\n-          FT_MulDiv( hori->Ascender - hori->Descender + hori->Line_Gap,\n-                     ppem_ * 64, upem );\n-        metrics->max_advance =\n-          FT_MulDiv( hori->advance_Width_Max, ppem_ * 64, upem );\n+        metrics->ascender    = FT_MulFix( hori->Ascender, scale );\n+        metrics->descender   = FT_MulFix( hori->Descender, scale );\n+        metrics->height      =\n+          FT_MulFix( hori->Ascender - hori->Descender + hori->Line_Gap,\n+                     scale );\n+        metrics->max_advance = FT_MulFix( hori->advance_Width_Max, scale );\n@@ -447,6 +440,2 @@\n-        metrics->x_scale = FT_MulDiv( metrics->x_ppem,\n-                                      64 * 0x10000,\n-                                      face->header.Units_Per_EM );\n-        metrics->y_scale = FT_MulDiv( metrics->y_ppem,\n-                                      64 * 0x10000,\n-                                      face->header.Units_Per_EM );\n+        metrics->x_scale = scale;\n+        metrics->y_scale = scale;\n@@ -1207,1 +1196,1 @@\n-        \/* fall-through *\/\n+        FALL_THROUGH;\n@@ -1607,1 +1596,1 @@\n-  FT_LOCAL( FT_Error )\n+  FT_LOCAL_DEF( FT_Error )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttsbit.c","additions":17,"deletions":28,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttsbit.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2019-2022 by\n+ * Copyright (C) 2019-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/woff2tags.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2019-2022 by\n+ * Copyright (C) 2019-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/woff2tags.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n@@ -421,15 +421,15 @@\n-#define FT_GRAY_SET( d, s, count )                          \\\n-  FT_BEGIN_STMNT                                            \\\n-    unsigned char* q = d;                                   \\\n-    switch ( count )                                        \\\n-    {                                                       \\\n-      case 7: *q++ = (unsigned char)s; \/* fall through *\/   \\\n-      case 6: *q++ = (unsigned char)s; \/* fall through *\/   \\\n-      case 5: *q++ = (unsigned char)s; \/* fall through *\/   \\\n-      case 4: *q++ = (unsigned char)s; \/* fall through *\/   \\\n-      case 3: *q++ = (unsigned char)s; \/* fall through *\/   \\\n-      case 2: *q++ = (unsigned char)s; \/* fall through *\/   \\\n-      case 1: *q   = (unsigned char)s; \/* fall through *\/   \\\n-      case 0: break;                                        \\\n-      default: FT_MEM_SET( d, s, count );                   \\\n-    }                                                       \\\n+#define FT_GRAY_SET( d, s, count )                   \\\n+  FT_BEGIN_STMNT                                     \\\n+    unsigned char* q = d;                            \\\n+    switch ( count )                                 \\\n+    {                                                \\\n+      case 7: *q++ = (unsigned char)s; FALL_THROUGH; \\\n+      case 6: *q++ = (unsigned char)s; FALL_THROUGH; \\\n+      case 5: *q++ = (unsigned char)s; FALL_THROUGH; \\\n+      case 4: *q++ = (unsigned char)s; FALL_THROUGH; \\\n+      case 3: *q++ = (unsigned char)s; FALL_THROUGH; \\\n+      case 2: *q++ = (unsigned char)s; FALL_THROUGH; \\\n+      case 1: *q   = (unsigned char)s; FALL_THROUGH; \\\n+      case 0: break;                                 \\\n+      default: FT_MEM_SET( d, s, count );            \\\n+    }                                                \\\n@@ -1912,1 +1912,1 @@\n-  gray_convert_glyph_inner( RAS_ARG,\n+  gray_convert_glyph_inner( RAS_ARG_\n@@ -1915,1 +1915,1 @@\n-    int  error;\n+    volatile int  error;\n@@ -2007,1 +2007,1 @@\n-        error     = gray_convert_glyph_inner( RAS_VAR, continued );\n+        error     = gray_convert_glyph_inner( RAS_VAR_ continued );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftgrays.c","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftgrays.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmerrs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2022 by\n+ * Copyright (C) 2000-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmooth.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmooth.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -510,13 +510,28 @@\n-    (FT_Get_MM_Func)             NULL,                  \/* get_mm              *\/\n-    (FT_Set_MM_Design_Func)      NULL,                  \/* set_mm_design       *\/\n-    (FT_Set_MM_Blend_Func)       TT_Set_MM_Blend,       \/* set_mm_blend        *\/\n-    (FT_Get_MM_Blend_Func)       TT_Get_MM_Blend,       \/* get_mm_blend        *\/\n-    (FT_Get_MM_Var_Func)         TT_Get_MM_Var,         \/* get_mm_var          *\/\n-    (FT_Set_Var_Design_Func)     TT_Set_Var_Design,     \/* set_var_design      *\/\n-    (FT_Get_Var_Design_Func)     TT_Get_Var_Design,     \/* get_var_design      *\/\n-    (FT_Set_Instance_Func)       TT_Set_Named_Instance, \/* set_instance        *\/\n-    (FT_Set_MM_WeightVector_Func)NULL,                  \/* set_mm_weightvector *\/\n-    (FT_Get_MM_WeightVector_Func)NULL,                  \/* get_mm_weightvector *\/\n-\n-    (FT_Get_Var_Blend_Func)      tt_get_var_blend,      \/* get_var_blend       *\/\n-    (FT_Done_Blend_Func)         tt_done_blend          \/* done_blend          *\/\n+    (FT_Get_MM_Func)        NULL,                  \/* get_mm                    *\/\n+    (FT_Set_MM_Design_Func) NULL,                  \/* set_mm_design             *\/\n+    (FT_Set_MM_Blend_Func)  TT_Set_MM_Blend,       \/* set_mm_blend              *\/\n+    (FT_Get_MM_Blend_Func)  TT_Get_MM_Blend,       \/* get_mm_blend              *\/\n+    (FT_Get_MM_Var_Func)    TT_Get_MM_Var,         \/* get_mm_var                *\/\n+    (FT_Set_Var_Design_Func)TT_Set_Var_Design,     \/* set_var_design            *\/\n+    (FT_Get_Var_Design_Func)TT_Get_Var_Design,     \/* get_var_design            *\/\n+    (FT_Set_Instance_Func)  TT_Set_Named_Instance, \/* set_instance              *\/\n+    (FT_Set_MM_WeightVector_Func)\n+                            NULL,                  \/* set_mm_weightvector       *\/\n+    (FT_Get_MM_WeightVector_Func)\n+                            NULL,                  \/* get_mm_weightvector       *\/\n+    (FT_Var_Load_Delta_Set_Idx_Map_Func)\n+                            tt_var_load_delta_set_index_mapping,\n+                                                   \/* load_delta_set_idx_map    *\/\n+    (FT_Var_Load_Item_Var_Store_Func)\n+                            tt_var_load_item_variation_store,\n+                                                   \/* load_item_variation_store *\/\n+    (FT_Var_Get_Item_Delta_Func)\n+                            tt_var_get_item_delta, \/* get_item_delta            *\/\n+    (FT_Var_Done_Item_Var_Store_Func)\n+                            tt_var_done_item_variation_store,\n+                                                   \/* done_item_variation_store *\/\n+    (FT_Var_Done_Delta_Set_Idx_Map_Func)\n+                            tt_var_done_delta_set_index_map,\n+                                                   \/* done_delta_set_index_map  *\/\n+    (FT_Get_Var_Blend_Func) tt_get_var_blend,      \/* get_var_blend             *\/\n+    (FT_Done_Blend_Func)    tt_done_blend          \/* done_blend                *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttdriver.c","additions":29,"deletions":14,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttdriver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/tterrors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -740,1 +740,1 @@\n-                      subglyph->transform.xx \/ 65536.0 ));\n+                      (double)subglyph->transform.xx \/ 65536 ));\n@@ -743,2 +743,2 @@\n-                      subglyph->transform.xx \/ 65536.0,\n-                      subglyph->transform.yy \/ 65536.0 ));\n+                      (double)subglyph->transform.xx \/ 65536,\n+                      (double)subglyph->transform.yy \/ 65536 ));\n@@ -748,2 +748,2 @@\n-                      subglyph->transform.xx \/ 65536.0,\n-                      subglyph->transform.yx \/ 65536.0 ));\n+                      (double)subglyph->transform.xx \/ 65536,\n+                      (double)subglyph->transform.yx \/ 65536 ));\n@@ -751,2 +751,2 @@\n-                      subglyph->transform.xy \/ 65536.0,\n-                      subglyph->transform.yy \/ 65536.0 ));\n+                      (double)subglyph->transform.xy \/ 65536,\n+                      (double)subglyph->transform.yy \/ 65536 ));\n@@ -804,1 +804,1 @@\n-    zone->n_points    = (FT_UShort)load->outline.n_points -\n+    zone->n_points    = (FT_UShort)load->outline.n_points + 4 -\n@@ -973,5 +973,0 @@\n-    outline->tags[n_points    ] = 0;\n-    outline->tags[n_points + 1] = 0;\n-    outline->tags[n_points + 2] = 0;\n-    outline->tags[n_points + 3] = 0;\n-\n@@ -988,2 +983,1 @@\n-      error = TT_Vary_Apply_Glyph_Deltas( loader->face,\n-                                          loader->glyph_index,\n+      error = TT_Vary_Apply_Glyph_Deltas( loader,\n@@ -991,15 +985,1 @@\n-                                          unrounded,\n-                                          (FT_UInt)n_points );\n-\n-      \/* recalculate linear horizontal and vertical advances *\/\n-      \/* if we don't have HVAR and VVAR, respectively        *\/\n-\n-      \/* XXX: change all FreeType modules to store `linear' and `vadvance' *\/\n-      \/*      in 26.6 format before the `base' module scales them to 16.16 *\/\n-      if ( !( loader->face->variation_support & TT_FACE_FLAG_VAR_HADVANCE ) )\n-        loader->linear = FT_PIX_ROUND( unrounded[n_points - 3].x -\n-                                       unrounded[n_points - 4].x ) \/ 64;\n-      if ( !( loader->face->variation_support & TT_FACE_FLAG_VAR_VADVANCE ) )\n-        loader->vadvance = FT_PIX_ROUND( unrounded[n_points - 1].x -\n-                                         unrounded[n_points - 2].x ) \/ 64;\n-\n+                                          unrounded );\n@@ -1017,1 +997,1 @@\n-                     loader->zone.n_points + 4 );\n+                     loader->zone.n_points );\n@@ -1159,3 +1139,0 @@\n-    {\n-      loader->zone.n_points += 4;\n-\n@@ -1163,1 +1140,0 @@\n-    }\n@@ -1376,5 +1352,0 @@\n-    outline->tags[outline->n_points    ] = 0;\n-    outline->tags[outline->n_points + 1] = 0;\n-    outline->tags[outline->n_points + 2] = 0;\n-    outline->tags[outline->n_points + 3] = 0;\n-\n@@ -1439,1 +1410,1 @@\n-    for ( i = 0; i < loader->zone.n_points; i++ )\n+    for ( i = 0; i < loader->zone.n_points - 4U; i++ )\n@@ -1442,2 +1413,0 @@\n-    loader->zone.n_points += 4;\n-\n@@ -1764,2 +1733,0 @@\n-        char        tags[4]     = { 1, 1, 1, 1 };\n-        short       contours[4] = { 0, 1, 2, 3 };\n@@ -1772,9 +1739,4 @@\n-        points[0].x = loader->pp1.x;\n-        points[0].y = loader->pp1.y;\n-        points[1].x = loader->pp2.x;\n-        points[1].y = loader->pp2.y;\n-\n-        points[2].x = loader->pp3.x;\n-        points[2].y = loader->pp3.y;\n-        points[3].x = loader->pp4.x;\n-        points[3].y = loader->pp4.y;\n+        points[0] = loader->pp1;\n+        points[1] = loader->pp2;\n+        points[2] = loader->pp3;\n+        points[3] = loader->pp4;\n@@ -1782,2 +1744,2 @@\n-        outline.n_points   = 4;\n-        outline.n_contours = 4;\n+        outline.n_points   = 0;\n+        outline.n_contours = 0;\n@@ -1785,2 +1747,2 @@\n-        outline.tags       = tags;\n-        outline.contours   = contours;\n+        outline.tags       = NULL;\n+        outline.contours   = NULL;\n@@ -1789,2 +1751,1 @@\n-        error = TT_Vary_Apply_Glyph_Deltas( loader->face,\n-                                            glyph_index,\n+        error = TT_Vary_Apply_Glyph_Deltas( loader,\n@@ -1792,2 +1753,1 @@\n-                                            unrounded,\n-                                            (FT_UInt)outline.n_points );\n+                                            unrounded );\n@@ -1796,19 +1756,0 @@\n-\n-        loader->pp1.x = points[0].x;\n-        loader->pp1.y = points[0].y;\n-        loader->pp2.x = points[1].x;\n-        loader->pp2.y = points[1].y;\n-\n-        loader->pp3.x = points[2].x;\n-        loader->pp3.y = points[2].y;\n-        loader->pp4.x = points[3].x;\n-        loader->pp4.y = points[3].y;\n-\n-        \/* recalculate linear horizontal and vertical advances *\/\n-        \/* if we don't have HVAR and VVAR, respectively        *\/\n-        if ( !( loader->face->variation_support & TT_FACE_FLAG_VAR_HADVANCE ) )\n-          loader->linear = FT_PIX_ROUND( unrounded[1].x -\n-                                         unrounded[0].x ) \/ 64;\n-        if ( !( loader->face->variation_support & TT_FACE_FLAG_VAR_VADVANCE ) )\n-          loader->vadvance = FT_PIX_ROUND( unrounded[3].x -\n-                                           unrounded[2].x ) \/ 64;\n@@ -1962,2 +1903,1 @@\n-        outline.n_points   = (short)( gloader->current.num_subglyphs + 4 );\n-        outline.n_contours = outline.n_points;\n+        outline.n_contours = outline.n_points = limit;\n@@ -1969,4 +1909,4 @@\n-        if ( FT_NEW_ARRAY( points, outline.n_points )    ||\n-             FT_NEW_ARRAY( tags, outline.n_points )      ||\n-             FT_NEW_ARRAY( contours, outline.n_points )  ||\n-             FT_NEW_ARRAY( unrounded, outline.n_points ) )\n+        if ( FT_NEW_ARRAY( points, limit + 4 )    ||\n+             FT_NEW_ARRAY( tags, limit + 4 )      ||\n+             FT_NEW_ARRAY( contours, limit + 4 )  ||\n+             FT_NEW_ARRAY( unrounded, limit + 4 ) )\n@@ -1988,22 +1928,4 @@\n-        points[i].x = loader->pp1.x;\n-        points[i].y = loader->pp1.y;\n-        tags[i]     = 1;\n-        contours[i] = i;\n-\n-        i++;\n-        points[i].x = loader->pp2.x;\n-        points[i].y = loader->pp2.y;\n-        tags[i]     = 1;\n-        contours[i] = i;\n-\n-        i++;\n-        points[i].x = loader->pp3.x;\n-        points[i].y = loader->pp3.y;\n-        tags[i]     = 1;\n-        contours[i] = i;\n-\n-        i++;\n-        points[i].x = loader->pp4.x;\n-        points[i].y = loader->pp4.y;\n-        tags[i]     = 1;\n-        contours[i] = i;\n+        points[i++] = loader->pp1;\n+        points[i++] = loader->pp2;\n+        points[i++] = loader->pp3;\n+        points[i  ] = loader->pp4;\n@@ -2017,6 +1939,3 @@\n-        if ( FT_SET_ERROR( TT_Vary_Apply_Glyph_Deltas(\n-                             face,\n-                             glyph_index,\n-                             &outline,\n-                             unrounded,\n-                             (FT_UInt)outline.n_points ) ) )\n+        if ( FT_SET_ERROR( TT_Vary_Apply_Glyph_Deltas( loader,\n+                                                       &outline,\n+                                                       unrounded ) ) )\n@@ -2036,21 +1955,0 @@\n-        loader->pp1.x = points[i + 0].x;\n-        loader->pp1.y = points[i + 0].y;\n-        loader->pp2.x = points[i + 1].x;\n-        loader->pp2.y = points[i + 1].y;\n-\n-        loader->pp3.x = points[i + 2].x;\n-        loader->pp3.y = points[i + 2].y;\n-        loader->pp4.x = points[i + 3].x;\n-        loader->pp4.y = points[i + 3].y;\n-\n-        \/* recalculate linear horizontal and vertical advances *\/\n-        \/* if we don't have HVAR and VVAR, respectively        *\/\n-        if ( !( face->variation_support & TT_FACE_FLAG_VAR_HADVANCE ) )\n-          loader->linear =\n-            FT_PIX_ROUND( unrounded[outline.n_points - 3].x -\n-                          unrounded[outline.n_points - 4].x ) \/ 64;\n-        if ( !( face->variation_support & TT_FACE_FLAG_VAR_VADVANCE ) )\n-          loader->vadvance =\n-            FT_PIX_ROUND( unrounded[outline.n_points - 1].x -\n-                          unrounded[outline.n_points - 2].x ) \/ 64;\n-\n@@ -2232,2 +2130,3 @@\n-    TT_Face    face   = loader->face;\n-\n+    TT_Face       face  = loader->face;\n+    TT_Size       size  = loader->size;\n+    TT_GlyphSlot  glyph = loader->glyph;\n@@ -2236,2 +2135,0 @@\n-    TT_GlyphSlot  glyph = loader->glyph;\n-    TT_Size       size  = loader->size;\n@@ -2375,3 +2272,3 @@\n-    TT_Face             face;\n-    SFNT_Service        sfnt;\n-    FT_Stream           stream;\n+    TT_Face             face   = (TT_Face)glyph->face;\n+    SFNT_Service        sfnt   = (SFNT_Service)face->sfnt;\n+    FT_Stream           stream = face->root.stream;\n@@ -2382,4 +2279,0 @@\n-    face   = (TT_Face)glyph->face;\n-    sfnt   = (SFNT_Service)face->sfnt;\n-    stream = face->root.stream;\n-\n@@ -2436,2 +2329,2 @@\n-    TT_Face    face;\n-    FT_Stream  stream;\n+    TT_Face    face   = (TT_Face)glyph->face;\n+    FT_Stream  stream = face->root.stream;\n@@ -2444,1 +2337,1 @@\n-    TT_Driver  driver = (TT_Driver)FT_FACE_DRIVER( (TT_Face)glyph->face );\n+    TT_Driver  driver   = (TT_Driver)FT_FACE_DRIVER( glyph->face );\n@@ -2449,3 +2342,0 @@\n-    face   = (TT_Face)glyph->face;\n-    stream = face->root.stream;\n-\n@@ -2819,0 +2709,1 @@\n+    TT_Face       face = (TT_Face)glyph->face;\n@@ -2843,2 +2734,0 @@\n-          TT_Face  face = (TT_Face)glyph->face;\n-\n@@ -2903,3 +2792,0 @@\n-          TT_Face  face = (TT_Face)glyph->face;\n-\n-\n@@ -2974,1 +2860,1 @@\n-    if ( ( load_flags & FT_LOAD_COLOR ) && ( (TT_Face)glyph->face )->svg )\n+    if ( ( load_flags & FT_LOAD_COLOR ) && face->svg )\n@@ -2976,6 +2862,1 @@\n-      SFNT_Service  sfnt;\n-\n-      FT_Short   leftBearing;\n-      FT_Short   topBearing;\n-      FT_UShort  advanceX;\n-      FT_UShort  advanceY;\n+      SFNT_Service  sfnt = (SFNT_Service)face->sfnt;\n@@ -2985,1 +2866,0 @@\n-      sfnt = (SFNT_Service)( (TT_Face)glyph->face )->sfnt;\n@@ -2990,1 +2870,7 @@\n-        TT_Face  face = (TT_Face)glyph->face;\n+        FT_Fixed  x_scale = size->root.metrics.x_scale;\n+        FT_Fixed  y_scale = size->root.metrics.y_scale;\n+\n+        FT_Short   leftBearing;\n+        FT_Short   topBearing;\n+        FT_UShort  advanceX;\n+        FT_UShort  advanceY;\n@@ -3008,6 +2894,2 @@\n-        advanceX = (FT_UShort)FT_MulDiv( advanceX,\n-                                         glyph->face->size->metrics.x_ppem,\n-                                         glyph->face->units_per_EM );\n-        advanceY = (FT_UShort)FT_MulDiv( advanceY,\n-                                         glyph->face->size->metrics.y_ppem,\n-                                         glyph->face->units_per_EM );\n+        glyph->linearHoriAdvance = advanceX;\n+        glyph->linearVertAdvance = advanceY;\n@@ -3015,2 +2897,2 @@\n-        glyph->metrics.horiAdvance = advanceX << 6;\n-        glyph->metrics.vertAdvance = advanceY << 6;\n+        glyph->metrics.horiAdvance = FT_MulFix( advanceX, x_scale );\n+        glyph->metrics.vertAdvance = FT_MulFix( advanceY, y_scale );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgload.c","additions":58,"deletions":176,"binary":false,"changes":234,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n@@ -45,0 +45,1 @@\n+#include <freetype\/internal\/ftcalc.h>\n@@ -356,2 +357,5 @@\n-    FT_Stream       stream = FT_FACE_STREAM( face );\n-    FT_Memory       memory = stream->memory;\n+    FT_Error   error;\n+    FT_Stream  stream = FT_FACE_STREAM( face );\n+    FT_Memory  memory = stream->memory;\n+    FT_Int     i, j;\n+\n@@ -360,5 +364,11 @@\n-    FT_Error        error;\n-    FT_Long         version;\n-    FT_Long         axisCount;\n-    FT_Int          i, j;\n-    FT_ULong        table_len;\n+    GX_AVarTable    table;\n+\n+    FT_Long   version;\n+    FT_Long   axisCount;\n+    FT_ULong  table_len;\n+\n+#ifndef TT_CONFIG_OPTION_NO_BORING_EXPANSION\n+    FT_ULong  table_offset;\n+    FT_ULong  store_offset;\n+    FT_ULong  axisMap_offset;\n+#endif\n@@ -377,0 +387,4 @@\n+#ifndef TT_CONFIG_OPTION_NO_BORING_EXPANSION\n+    table_offset = FT_STREAM_POS();\n+#endif\n+\n@@ -383,1 +397,5 @@\n-    if ( version != 0x00010000L )\n+    if ( version != 0x00010000L\n+#ifndef TT_CONFIG_OPTION_NO_BORING_EXPANSION\n+         && version != 0x00020000L\n+#endif\n+       )\n@@ -399,1 +417,1 @@\n-    if ( FT_QNEW_ARRAY( blend->avar_segment, axisCount ) )\n+    if ( FT_NEW( blend->avar_table ) )\n@@ -401,0 +419,1 @@\n+    table = blend->avar_table;\n@@ -402,1 +421,4 @@\n-    segment = &blend->avar_segment[0];\n+    if ( FT_QNEW_ARRAY( table->avar_segment, axisCount ) )\n+      goto Exit;\n+\n+    segment = &table->avar_segment[0];\n@@ -415,1 +437,1 @@\n-          FT_FREE( blend->avar_segment[j].correspondence );\n+          FT_FREE( table->avar_segment[j].correspondence );\n@@ -417,1 +439,1 @@\n-        FT_FREE( blend->avar_segment );\n+        FT_FREE( table->avar_segment );\n@@ -429,2 +451,2 @@\n-                    segment->correspondence[j].fromCoord \/ 65536.0,\n-                    segment->correspondence[j].toCoord \/ 65536.0 ));\n+                    (double)segment->correspondence[j].fromCoord \/ 65536,\n+                    (double)segment->correspondence[j].toCoord \/ 65536 ));\n@@ -436,0 +458,31 @@\n+#ifndef TT_CONFIG_OPTION_NO_BORING_EXPANSION\n+    if ( version < 0x00020000L )\n+      goto Exit;\n+\n+    axisMap_offset = FT_GET_ULONG();\n+    store_offset   = FT_GET_ULONG();\n+\n+    if ( store_offset )\n+    {\n+      error = tt_var_load_item_variation_store(\n+                face,\n+                table_offset + store_offset,\n+                &table->itemStore );\n+      if ( error )\n+        goto Exit;\n+    }\n+\n+    if ( axisMap_offset )\n+    {\n+      error = tt_var_load_delta_set_index_mapping(\n+                face,\n+                table_offset + axisMap_offset,\n+                &table->axisMap,\n+                &table->itemStore,\n+                table_len );\n+      if ( error )\n+        goto Exit;\n+    }\n+#endif\n+\n+\n@@ -441,2 +494,2 @@\n-  static FT_Error\n-  ft_var_load_item_variation_store( TT_Face          face,\n+  FT_LOCAL_DEF( FT_Error )\n+  tt_var_load_item_variation_store( TT_Face          face,\n@@ -452,3 +505,0 @@\n-    FT_UInt    i, j, k;\n-    FT_UInt    wordDeltaCount;\n-    FT_Bool    long_words;\n@@ -456,2 +506,6 @@\n-    GX_Blend        blend = face->blend;\n-    GX_ItemVarData  varData;\n+    FT_UInt    data_count;\n+    FT_UShort  axis_count;\n+    FT_UInt    region_count;\n+\n+    FT_UInt  i, j, k;\n+    FT_Bool  long_words;\n@@ -459,0 +513,1 @@\n+    GX_Blend   blend           = face->blend;\n@@ -468,1 +523,1 @@\n-      FT_TRACE2(( \"ft_var_load_item_variation_store: bad store format %d\\n\",\n+      FT_TRACE2(( \"tt_var_load_item_variation_store: bad store format %d\\n\",\n@@ -475,2 +530,2 @@\n-    if ( FT_READ_ULONG( region_offset )         ||\n-         FT_READ_USHORT( itemStore->dataCount ) )\n+    if ( FT_READ_ULONG( region_offset ) ||\n+         FT_READ_USHORT( data_count )   )\n@@ -480,1 +535,1 @@\n-    if ( !itemStore->dataCount )\n+    if ( !data_count )\n@@ -482,1 +537,1 @@\n-      FT_TRACE2(( \"ft_var_load_item_variation_store: missing varData\\n\" ));\n+      FT_TRACE2(( \"tt_var_load_item_variation_store: missing varData\\n\" ));\n@@ -489,1 +544,1 @@\n-    if ( FT_QNEW_ARRAY( dataOffsetArray, itemStore->dataCount ) )\n+    if ( FT_QNEW_ARRAY( dataOffsetArray, data_count ) )\n@@ -492,1 +547,1 @@\n-    for ( i = 0; i < itemStore->dataCount; i++ )\n+    for ( i = 0; i < data_count; i++ )\n@@ -502,2 +557,2 @@\n-    if ( FT_READ_USHORT( itemStore->axisCount )   ||\n-         FT_READ_USHORT( itemStore->regionCount ) )\n+    if ( FT_READ_USHORT( axis_count )   ||\n+         FT_READ_USHORT( region_count ) )\n@@ -506,1 +561,1 @@\n-    if ( itemStore->axisCount != (FT_Long)blend->mmvar->num_axis )\n+    if ( axis_count != (FT_Long)blend->mmvar->num_axis )\n@@ -508,1 +563,1 @@\n-      FT_TRACE2(( \"ft_var_load_item_variation_store:\"\n+      FT_TRACE2(( \"tt_var_load_item_variation_store:\"\n@@ -515,0 +570,1 @@\n+    itemStore->axisCount = axis_count;\n@@ -517,1 +573,1 @@\n-    if ( itemStore->regionCount >= 32768U )\n+    if ( region_count >= 32768U )\n@@ -519,1 +575,1 @@\n-      FT_TRACE2(( \"ft_var_load_item_variation_store:\"\n+      FT_TRACE2(( \"tt_var_load_item_variation_store:\"\n@@ -525,1 +581,1 @@\n-    if ( FT_NEW_ARRAY( itemStore->varRegionList, itemStore->regionCount ) )\n+    if ( FT_NEW_ARRAY( itemStore->varRegionList, region_count ) )\n@@ -527,0 +583,1 @@\n+    itemStore->regionCount = region_count;\n@@ -533,2 +590,1 @@\n-      if ( FT_NEW_ARRAY( itemStore->varRegionList[i].axisList,\n-                         itemStore->axisCount ) )\n+      if ( FT_NEW_ARRAY( itemStore->varRegionList[i].axisList, axis_count ) )\n@@ -558,1 +614,1 @@\n-    if ( FT_NEW_ARRAY( itemStore->varData, itemStore->dataCount ) )\n+    if ( FT_NEW_ARRAY( itemStore->varData, data_count ) )\n@@ -560,0 +616,1 @@\n+    itemStore->dataCount = data_count;\n@@ -561,1 +618,1 @@\n-    for ( i = 0; i < itemStore->dataCount; i++ )\n+    for ( i = 0; i < data_count; i++ )\n@@ -563,1 +620,6 @@\n-      varData = &itemStore->varData[i];\n+      GX_ItemVarData  varData = &itemStore->varData[i];\n+\n+      FT_UInt  item_count;\n+      FT_UInt  word_delta_count;\n+      FT_UInt  region_idx_count;\n+\n@@ -568,3 +630,3 @@\n-      if ( FT_READ_USHORT( varData->itemCount )      ||\n-           FT_READ_USHORT( wordDeltaCount )          ||\n-           FT_READ_USHORT( varData->regionIdxCount ) )\n+      if ( FT_READ_USHORT( item_count )       ||\n+           FT_READ_USHORT( word_delta_count ) ||\n+           FT_READ_USHORT( region_idx_count ) )\n@@ -573,2 +635,2 @@\n-      long_words      = !!( wordDeltaCount & 0x8000 );\n-      wordDeltaCount &= 0x7FFF;\n+      long_words        = !!( word_delta_count & 0x8000 );\n+      word_delta_count &= 0x7FFF;\n@@ -577,1 +639,1 @@\n-      if ( wordDeltaCount > varData->regionIdxCount )\n+      if ( word_delta_count > region_idx_count )\n@@ -580,2 +642,2 @@\n-                    wordDeltaCount,\n-                    varData->regionIdxCount ));\n+                    word_delta_count,\n+                    region_idx_count ));\n@@ -586,1 +648,1 @@\n-      if ( varData->regionIdxCount > itemStore->regionCount )\n+      if ( region_idx_count > itemStore->regionCount )\n@@ -589,1 +651,1 @@\n-                    varData->regionIdxCount,\n+                    region_idx_count,\n@@ -596,2 +658,1 @@\n-      if ( FT_NEW_ARRAY( varData->regionIndices,\n-                         varData->regionIdxCount ) )\n+      if ( FT_NEW_ARRAY( varData->regionIndices, region_idx_count ) )\n@@ -599,0 +660,1 @@\n+      varData->regionIdxCount = region_idx_count;\n@@ -614,8 +676,7 @@\n-      \/* Parse delta set.                                                *\/\n-      \/*                                                                 *\/\n-      \/* On input, deltas are (wordDeltaCount + regionIdxCount) bytes    *\/\n-      \/* each if `long_words` isn't set, and twice as much otherwise.    *\/\n-      \/*                                                                 *\/\n-      \/* On output, deltas are expanded to `regionIdxCount` shorts each. *\/\n-      if ( FT_NEW_ARRAY( varData->deltaSet,\n-                         varData->regionIdxCount * varData->itemCount ) )\n+      \/* Parse delta set.                                                  *\/\n+      \/*                                                                   *\/\n+      \/* On input, deltas are (word_delta_count + region_idx_count) bytes  *\/\n+      \/* each if `long_words` isn't set, and twice as much otherwise.      *\/\n+      \/*                                                                   *\/\n+      \/* On output, deltas are expanded to `region_idx_count` shorts each. *\/\n+      if ( FT_NEW_ARRAY( varData->deltaSet, item_count * region_idx_count ) )\n@@ -623,0 +684,1 @@\n+      varData->itemCount = item_count;\n@@ -624,2 +686,1 @@\n-      \/* the delta set is stored as a 2-dimensional array of shorts *\/\n-      if ( long_words )\n+      for ( j = 0; j < item_count * region_idx_count; )\n@@ -627,11 +688,1 @@\n-        \/* new in OpenType 1.9, currently for 'COLR' table only;          *\/\n-        \/* the deltas are interpreted as 16.16 fixed-point scaling values *\/\n-\n-        \/* not supported yet *\/\n-\n-        error = FT_THROW( Invalid_Table );\n-        goto Exit;\n-      }\n-      else\n-      {\n-        for ( j = 0; j < varData->itemCount * varData->regionIdxCount; )\n+        if ( long_words )\n@@ -639,7 +690,2 @@\n-          for ( k = 0; k < wordDeltaCount; k++, j++ )\n-          {\n-            \/* read the short deltas *\/\n-            FT_Short  delta;\n-\n-\n-            if ( FT_READ_SHORT( delta ) )\n+          for ( k = 0; k < word_delta_count; k++, j++ )\n+            if ( FT_READ_LONG( varData->deltaSet[j] ) )\n@@ -647,11 +693,11 @@\n-\n-            varData->deltaSet[j] = delta;\n-          }\n-\n-          for ( ; k < varData->regionIdxCount; k++, j++ )\n-          {\n-            \/* read the (signed) byte deltas *\/\n-            FT_Char  delta;\n-\n-\n-            if ( FT_READ_CHAR( delta ) )\n+          for ( ; k < region_idx_count; k++, j++ )\n+            if ( FT_READ_SHORT( varData->deltaSet[j] ) )\n+              goto Exit;\n+        }\n+        else\n+        {\n+          for ( k = 0; k < word_delta_count; k++, j++ )\n+            if ( FT_READ_SHORT( varData->deltaSet[j] ) )\n+              goto Exit;\n+          for ( ; k < region_idx_count; k++, j++ )\n+            if ( FT_READ_CHAR( varData->deltaSet[j] ) )\n@@ -659,3 +705,0 @@\n-\n-            varData->deltaSet[j] = delta;\n-          }\n@@ -673,2 +716,2 @@\n-  static FT_Error\n-  ft_var_load_delta_set_index_mapping( TT_Face            face,\n+  FT_LOCAL_DEF( FT_Error )\n+  tt_var_load_delta_set_index_mapping( TT_Face            face,\n@@ -731,1 +774,1 @@\n-      FT_TRACE1(( \"ft_var_load_delta_set_index_mapping:\"\n+      FT_TRACE1(( \"tt_var_load_delta_set_index_mapping:\"\n@@ -761,0 +804,10 @@\n+      \/* new in OpenType 1.8.4 *\/\n+      if ( mapData == 0xFFFFFFFFUL )\n+      {\n+        \/* no variation data for this item *\/\n+        map->outerIndex[i] = 0xFFFFU;\n+        map->innerIndex[i] = 0xFFFFU;\n+\n+        continue;\n+      }\n+\n@@ -890,1 +943,1 @@\n-    error = ft_var_load_item_variation_store(\n+    error = tt_var_load_item_variation_store(\n@@ -899,1 +952,1 @@\n-      error = ft_var_load_delta_set_index_mapping(\n+      error = tt_var_load_delta_set_index_mapping(\n@@ -941,2 +994,2 @@\n-  static FT_Int\n-  ft_var_get_item_delta( TT_Face          face,\n+  FT_LOCAL_DEF( FT_ItemVarDelta )\n+  tt_var_get_item_delta( TT_Face          face,\n@@ -947,2 +1000,6 @@\n-    GX_ItemVarData  varData;\n-    FT_Short*       deltaSet;\n+    FT_Stream  stream = FT_FACE_STREAM( face );\n+    FT_Memory  memory = stream->memory;\n+    FT_Error   error  = FT_Err_Ok;\n+\n+    GX_ItemVarData    varData;\n+    FT_ItemVarDelta*  deltaSet;\n@@ -950,4 +1007,3 @@\n-    FT_UInt   master, j;\n-    FT_Fixed  netAdjustment = 0;     \/* accumulated adjustment *\/\n-    FT_Fixed  scaledDelta;\n-    FT_Fixed  delta;\n+    FT_UInt          master, j;\n+    FT_Fixed*        scalars = NULL;\n+    FT_ItemVarDelta  returnValue;\n@@ -956,0 +1012,8 @@\n+    if ( !face->blend || !face->blend->normalizedcoords )\n+      return 0;\n+\n+    \/* OpenType 1.8.4+: No variation data for this item *\/\n+    \/* as indices have special value 0xFFFF.            *\/\n+    if ( outerIndex == 0xFFFF && innerIndex == 0xFFFF )\n+      return 0;\n+\n@@ -959,0 +1023,3 @@\n+    if ( outerIndex >= itemStore->dataCount )\n+      return 0; \/* Out of range. *\/\n+\n@@ -960,1 +1027,8 @@\n-    deltaSet = &varData->deltaSet[varData->regionIdxCount * innerIndex];\n+    deltaSet = FT_OFFSET( varData->deltaSet,\n+                          varData->regionIdxCount * innerIndex );\n+\n+    if ( innerIndex >= varData->itemCount )\n+      return 0; \/* Out of range. *\/\n+\n+    if ( FT_QNEW_ARRAY( scalars, varData->regionIdxCount ) )\n+      return 0;\n@@ -1011,1 +1085,0 @@\n-      } \/* per-axis loop *\/\n@@ -1013,3 +1086,1 @@\n-      \/* get the scaled delta for this region *\/\n-      delta       = FT_intToFixed( deltaSet[master] );\n-      scaledDelta = FT_MulFix( scalar, delta );\n+      } \/* per-axis loop *\/\n@@ -1017,2 +1088,1 @@\n-      \/* accumulate the adjustments from each region *\/\n-      netAdjustment = netAdjustment + scaledDelta;\n+      scalars[master] = scalar;\n@@ -1022,1 +1092,20 @@\n-    return FT_fixedToInt( netAdjustment );\n+\n+    \/* Compute the scaled delta for this region.\n+     *\n+     * From: https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/otvarcommonformats#item-variation-store-header-and-item-variation-data-subtables:\n+     *\n+     *   `Fixed` is a 32-bit (16.16) type and, in the general case, requires\n+     *   32-bit deltas.  As described above, the `DeltaSet` record can\n+     *   accommodate deltas that are, logically, either 16-bit or 32-bit.\n+     *   When scaled deltas are applied to `Fixed` values, the `Fixed` value\n+     *   is treated like a 32-bit integer.\n+     *\n+     * `FT_MulAddFix` internally uses 64-bit precision; it thus can handle\n+     * deltas ranging from small 8-bit to large 32-bit values that are\n+     * applied to 16.16 `FT_Fixed` \/ OpenType `Fixed` values.\n+     *\/\n+    returnValue = FT_MulAddFix( scalars, deltaSet, varData->regionIdxCount );\n+\n+    FT_FREE( scalars );\n+\n+    return returnValue;\n@@ -1115,3 +1204,0 @@\n-      GX_ItemVarData  varData;\n-\n-\n@@ -1121,8 +1207,0 @@\n-\n-      varData = &table->itemStore.varData[outerIndex];\n-      if ( gindex >= varData->itemCount )\n-      {\n-        FT_TRACE2(( \"gindex %d out of range\\n\", gindex ));\n-        error = FT_THROW( Invalid_Argument );\n-        goto Exit;\n-      }\n@@ -1131,1 +1209,1 @@\n-    delta = ft_var_get_item_delta( face,\n+    delta = tt_var_get_item_delta( face,\n@@ -1136,8 +1214,11 @@\n-    FT_TRACE5(( \"%s value %d adjusted by %d unit%s (%s)\\n\",\n-                vertical ? \"vertical height\" : \"horizontal width\",\n-                *avalue,\n-                delta,\n-                delta == 1 ? \"\" : \"s\",\n-                vertical ? \"VVAR\" : \"HVAR\" ));\n-\n-    *avalue += delta;\n+    if ( delta )\n+    {\n+      FT_TRACE5(( \"%s value %d adjusted by %d unit%s (%s)\\n\",\n+                  vertical ? \"vertical height\" : \"horizontal width\",\n+                  *avalue,\n+                  delta,\n+                  delta == 1 ? \"\" : \"s\",\n+                  vertical ? \"VVAR\" : \"HVAR\" ));\n+\n+      *avalue = ADD_INT( *avalue, delta );\n+    }\n@@ -1310,1 +1391,1 @@\n-    error = ft_var_load_item_variation_store(\n+    error = tt_var_load_item_variation_store(\n@@ -1326,1 +1407,1 @@\n-    limit     = value + blend->mvar_table->valueCount;\n+    limit     = FT_OFFSET( value, blend->mvar_table->valueCount );\n@@ -1335,0 +1416,7 @@\n+      \/* new in OpenType 1.8.4 *\/\n+      if ( value->outerIndex == 0xFFFFU && value->innerIndex == 0xFFFFU )\n+      {\n+        \/* no variation data for this item *\/\n+        continue;\n+      }\n+\n@@ -1352,1 +1440,1 @@\n-    limit = value + blend->mvar_table->valueCount;\n+    limit = FT_OFFSET( value, blend->mvar_table->valueCount );\n@@ -1417,1 +1505,1 @@\n-    limit = value + blend->mvar_table->valueCount;\n+    limit = FT_OFFSET( value, blend->mvar_table->valueCount );\n@@ -1425,1 +1513,1 @@\n-      delta = ft_var_get_item_delta( face,\n+      delta = tt_var_get_item_delta( face,\n@@ -1430,1 +1518,1 @@\n-      if ( p )\n+      if ( p && delta )\n@@ -1728,1 +1816,1 @@\n-            blend->tuplecoords[i * gvar_head.axisCount + j] \/ 65536.0 ));\n+            (double)blend->tuplecoords[i * gvar_head.axisCount + j] \/ 65536 ));\n@@ -1799,1 +1887,1 @@\n-                  i, blend->normalizedcoords[i] \/ 65536.0 ));\n+                  i, (double)blend->normalizedcoords[i] \/ 65536 ));\n@@ -1822,1 +1910,1 @@\n-                    tuple_coords[i] \/ 65536.0 ));\n+                    (double)tuple_coords[i] \/ 65536 ));\n@@ -1835,1 +1923,1 @@\n-                      tuple_coords[i] \/ 65536.0 ));\n+                      (double)tuple_coords[i] \/ 65536 ));\n@@ -1841,1 +1929,1 @@\n-                    tuple_coords[i] \/ 65536.0 ));\n+                    (double)tuple_coords[i] \/ 65536 ));\n@@ -1855,2 +1943,2 @@\n-                      im_start_coords[i] \/ 65536.0,\n-                      im_end_coords[i] \/ 65536.0 ));\n+                      (double)im_start_coords[i] \/ 65536,\n+                      (double)im_end_coords[i] \/ 65536 ));\n@@ -1862,2 +1950,2 @@\n-                    im_start_coords[i] \/ 65536.0,\n-                    im_end_coords[i] \/ 65536.0 ));\n+                    (double)im_start_coords[i] \/ 65536,\n+                    (double)im_end_coords[i] \/ 65536 ));\n@@ -1875,1 +1963,1 @@\n-    FT_TRACE6(( \"    apply factor is %.5f\\n\", apply \/ 65536.0 ));\n+    FT_TRACE6(( \"    apply factor is %.5f\\n\", (double)apply \/ 65536 ));\n@@ -1889,0 +1977,4 @@\n+    FT_Error   error  = FT_Err_Ok;\n+    FT_Memory  memory = face->root.memory;\n+    FT_UInt    i, j;\n+\n@@ -1891,1 +1983,0 @@\n-    FT_UInt         i, j;\n@@ -1895,0 +1986,3 @@\n+    FT_Fixed*  new_normalized = NULL;\n+    FT_Fixed*  old_normalized;\n+\n@@ -1917,1 +2011,1 @@\n-      FT_TRACE5(( \"    %d: %.5f\\n\", i, coord \/ 65536.0 ));\n+      FT_TRACE5(( \"    %d: %.5f\\n\", i, (double)coord \/ 65536 ));\n@@ -1921,1 +2015,1 @@\n-                    coord \/ 65536.0 ));\n+                    (double)coord \/ 65536 ));\n@@ -1924,2 +2018,2 @@\n-                    a->minimum \/ 65536.0,\n-                    a->maximum \/ 65536.0 ));\n+                    (double)a->minimum \/ 65536,\n+                    (double)a->maximum \/ 65536 ));\n@@ -1945,1 +2039,1 @@\n-    if ( blend->avar_segment )\n+    if ( blend->avar_table )\n@@ -1947,0 +2041,3 @@\n+      GX_AVarTable  table = blend->avar_table;\n+\n+\n@@ -1950,2 +2047,1 @@\n-      av = blend->avar_segment;\n-      for ( i = 0; i < mmvar->num_axis; i++, av++ )\n+      if ( table->avar_segment )\n@@ -1953,1 +2049,3 @@\n-        for ( j = 1; j < (FT_UInt)av->pairCount; j++ )\n+        av = table->avar_segment;\n+\n+        for ( i = 0; i < mmvar->num_axis; i++, av++ )\n@@ -1955,1 +2053,1 @@\n-          if ( normalized[i] < av->correspondence[j].fromCoord )\n+          for ( j = 1; j < (FT_UInt)av->pairCount; j++ )\n@@ -1957,1 +2055,16 @@\n-            FT_TRACE5(( \"  %.5f\\n\", normalized[i] \/ 65536.0 ));\n+            if ( normalized[i] < av->correspondence[j].fromCoord )\n+            {\n+              FT_TRACE5(( \"  %.5f\\n\", (double)normalized[i] \/ 65536 ));\n+\n+              normalized[i] =\n+                FT_MulDiv( normalized[i] - av->correspondence[j - 1].fromCoord,\n+                           av->correspondence[j].toCoord -\n+                             av->correspondence[j - 1].toCoord,\n+                           av->correspondence[j].fromCoord -\n+                             av->correspondence[j - 1].fromCoord ) +\n+                av->correspondence[j - 1].toCoord;\n+              break;\n+            }\n+          }\n+        }\n+      }\n@@ -1959,8 +2072,28 @@\n-            normalized[i] =\n-              FT_MulDiv( normalized[i] - av->correspondence[j - 1].fromCoord,\n-                         av->correspondence[j].toCoord -\n-                           av->correspondence[j - 1].toCoord,\n-                         av->correspondence[j].fromCoord -\n-                           av->correspondence[j - 1].fromCoord ) +\n-              av->correspondence[j - 1].toCoord;\n-            break;\n+      if ( table->itemStore.varData )\n+      {\n+        if ( FT_QNEW_ARRAY( new_normalized, mmvar->num_axis ) )\n+          return;\n+\n+        \/* Install our half-normalized coordinates for the next *\/\n+        \/* Item Variation Store to work with.                   *\/\n+        old_normalized                = face->blend->normalizedcoords;\n+        face->blend->normalizedcoords = normalized;\n+\n+        for ( i = 0; i < mmvar->num_axis; i++ )\n+        {\n+          FT_Fixed  v          = normalized[i];\n+          FT_UInt   innerIndex = i;\n+          FT_UInt   outerIndex = 0;\n+          FT_Int    delta;\n+\n+\n+          if ( table->axisMap.innerIndex )\n+          {\n+            FT_UInt  idx = i;\n+\n+\n+            if ( idx >= table->axisMap.mapCount )\n+              idx = table->axisMap.mapCount - 1;\n+\n+            outerIndex = table->axisMap.outerIndex[idx];\n+            innerIndex = table->axisMap.innerIndex[idx];\n@@ -1968,0 +2101,18 @@\n+\n+          delta = tt_var_get_item_delta( face,\n+                                         &table->itemStore,\n+                                         outerIndex,\n+                                         innerIndex );\n+\n+      v += delta << 2;\n+\n+      \/* Clamp value range. *\/\n+      v = v >=  0x10000L ?  0x10000 : v;\n+      v = v <= -0x10000L ? -0x10000 : v;\n+\n+          new_normalized[i] = v;\n+        }\n+\n+        for ( i = 0; i < mmvar->num_axis; i++ )\n+        {\n+          normalized[i] = new_normalized[i];\n@@ -1969,0 +2120,4 @@\n+\n+        face->blend->normalizedcoords = old_normalized;\n+\n+        FT_FREE( new_normalized );\n@@ -2006,1 +2161,1 @@\n-    if ( blend->avar_segment )\n+    if ( blend->avar_table && blend->avar_table->avar_segment )\n@@ -2008,1 +2163,1 @@\n-      GX_AVarSegment  av = blend->avar_segment;\n+      GX_AVarSegment  av = blend->avar_table->avar_segment;\n@@ -2028,1 +2183,1 @@\n-            FT_TRACE5(( \"  %.5f\\n\", design[i] \/ 65536.0 ));\n+            FT_TRACE5(( \"  %.5f\\n\", (double)design[i] \/ 65536 ));\n@@ -2173,0 +2328,5 @@\n+    \/* `num_instances` holds the number of all named instances including  *\/\n+    \/* the default instance, which might be missing in the table of named *\/\n+    \/* instances (in 'fvar').  This value is validated in `sfobjs.c` and  *\/\n+    \/* may be reset to 0 if consistency checks fail.                      *\/\n+    num_instances = (FT_UInt)face->root.style_flags >> 16;\n@@ -2183,14 +2343,0 @@\n-      \/* both `fvar' and `gvar' must be present *\/\n-      if ( FT_SET_ERROR( face->goto_table( face, TTAG_gvar,\n-                                           stream, &table_len ) ) )\n-      {\n-        \/* CFF2 is an alternate to gvar here *\/\n-        if ( FT_SET_ERROR( face->goto_table( face, TTAG_CFF2,\n-                                             stream, &table_len ) ) )\n-        {\n-          FT_TRACE1(( \"\\n\" ));\n-          FT_TRACE1(( \"TT_Get_MM_Var: `gvar' or `CFF2' table is missing\\n\" ));\n-          goto Exit;\n-        }\n-      }\n-\n@@ -2211,0 +2357,11 @@\n+      \/* If `num_instances` is larger, synthetization of the default  *\/\n+      \/* instance is required.  If `num_instances` is smaller,        *\/\n+      \/* however, the value has been reset to 0 in `sfnt_init_face`   *\/\n+      \/* (in `sfobjs.c`); in this case we have underallocated `mmvar` *\/\n+      \/* structs.                                                     *\/\n+      if ( num_instances < fvar_head.instanceCount )\n+      {\n+        error = FT_THROW( Invalid_Table );\n+        goto Exit;\n+      }\n+\n@@ -2229,5 +2386,0 @@\n-    \/* `num_instances' holds the number of all named instances, *\/\n-    \/* including the default instance which might be missing    *\/\n-    \/* in fvar's table of named instances                       *\/\n-    num_instances = (FT_UInt)face->root.style_flags >> 16;\n-\n@@ -2361,3 +2513,3 @@\n-                    a->minimum \/ 65536.0,\n-                    a->def \/ 65536.0,\n-                    a->maximum \/ 65536.0,\n+                    (double)a->minimum \/ 65536,\n+                    (double)a->def \/ 65536,\n+                    (double)a->maximum \/ 65536,\n@@ -2564,0 +2716,2 @@\n+        else if ( a->tag == TTAG_ital )\n+          a->name = (char*)\"Italic\";\n@@ -2625,1 +2779,1 @@\n-      FT_TRACE5(( \"    %.5f\\n\", coords[i] \/ 65536.0 ));\n+      FT_TRACE5(( \"    %.5f\\n\", (double)coords[i] \/ 65536 ));\n@@ -2629,1 +2783,1 @@\n-                    coords[i] \/ 65536.0 ));\n+                    (double)coords[i] \/ 65536 ));\n@@ -2639,1 +2793,7 @@\n-      if ( FT_SET_ERROR( ft_var_load_gvar( face ) ) )\n+    {\n+      \/* While a missing 'gvar' table is acceptable, for example for *\/\n+      \/* fonts that only vary metrics information or 'COLR' v1       *\/\n+      \/* `PaintVar*` tables, an incorrect SFNT table offset or size  *\/\n+      \/* for 'gvar', or an inconsistent 'gvar' table is not.         *\/\n+      error = ft_var_load_gvar( face );\n+      if ( error != FT_Err_Table_Missing && error != FT_Err_Ok )\n@@ -2641,0 +2801,2 @@\n+      error = FT_Err_Ok;\n+    }\n@@ -3506,4 +3668,4 @@\n-                        ( FT_fdot6ToFixed( face->cvt[j] ) +\n-                          old_cvt_delta ) \/ 65536.0,\n-                        ( FT_fdot6ToFixed( face->cvt[j] ) +\n-                          cvt_deltas[j] ) \/ 65536.0 ));\n+                        (double)( FT_fdot6ToFixed( face->cvt[j] ) +\n+                                    old_cvt_delta ) \/ 65536,\n+                        (double)( FT_fdot6ToFixed( face->cvt[j] ) +\n+                                    cvt_deltas[j] ) \/ 65536 ));\n@@ -3548,4 +3710,4 @@\n-                        ( FT_fdot6ToFixed( face->cvt[pindex] ) +\n-                          old_cvt_delta ) \/ 65536.0,\n-                        ( FT_fdot6ToFixed( face->cvt[pindex] ) +\n-                          cvt_deltas[pindex] ) \/ 65536.0 ));\n+                        (double)( FT_fdot6ToFixed( face->cvt[pindex] ) +\n+                                    old_cvt_delta ) \/ 65536,\n+                        (double)( FT_fdot6ToFixed( face->cvt[pindex] ) +\n+                                    cvt_deltas[pindex] ) \/ 65536 ));\n@@ -3816,11 +3978,0 @@\n-   * @Input:\n-   *   face ::\n-   *     A handle to the target face object.\n-   *\n-   *   glyph_index ::\n-   *     The index of the glyph being modified.\n-   *\n-   *   n_points ::\n-   *     The number of the points in the glyph, including\n-   *     phantom points.\n-   *\n@@ -3828,0 +3979,3 @@\n+   *   loader ::\n+   *     A handle to the loader object.\n+   *\n@@ -3829,1 +3983,1 @@\n-   *     The outline to change.\n+   *     The outline to change, with appended phantom points.\n@@ -3840,2 +3994,1 @@\n-  TT_Vary_Apply_Glyph_Deltas( TT_Face      face,\n-                              FT_UInt      glyph_index,\n+  TT_Vary_Apply_Glyph_Deltas( TT_Loader    loader,\n@@ -3843,2 +3996,1 @@\n-                              FT_Vector*   unrounded,\n-                              FT_UInt      n_points )\n+                              FT_Vector*   unrounded )\n@@ -3847,2 +3999,5 @@\n-    FT_Stream  stream = face->root.stream;\n-    FT_Memory  memory = stream->memory;\n+    TT_Face    face        = loader->face;\n+    FT_Stream  stream      = face->root.stream;\n+    FT_Memory  memory      = stream->memory;\n+    FT_UInt    glyph_index = loader->glyph_index;\n+    FT_UInt    n_points    = (FT_UInt)outline->n_points + 4;\n@@ -4066,30 +4221,2 @@\n-          if ( j < n_points - 4 )\n-          {\n-            point_deltas_x[j] = old_point_delta_x + point_delta_x;\n-            point_deltas_y[j] = old_point_delta_y + point_delta_y;\n-          }\n-          else\n-          {\n-            \/* To avoid double adjustment of advance width or height, *\/\n-            \/* adjust phantom points only if there is no HVAR or VVAR *\/\n-            \/* support, respectively.                                 *\/\n-            if ( j == ( n_points - 4 )        &&\n-                 !( face->variation_support &\n-                    TT_FACE_FLAG_VAR_LSB    ) )\n-              point_deltas_x[j] = old_point_delta_x + point_delta_x;\n-\n-            else if ( j == ( n_points - 3 )          &&\n-                      !( face->variation_support   &\n-                         TT_FACE_FLAG_VAR_HADVANCE ) )\n-              point_deltas_x[j] = old_point_delta_x + point_delta_x;\n-\n-            else if ( j == ( n_points - 2 )        &&\n-                      !( face->variation_support &\n-                         TT_FACE_FLAG_VAR_TSB    ) )\n-              point_deltas_y[j] = old_point_delta_y + point_delta_y;\n-\n-            else if ( j == ( n_points - 1 )          &&\n-                      !( face->variation_support   &\n-                         TT_FACE_FLAG_VAR_VADVANCE ) )\n-              point_deltas_y[j] = old_point_delta_y + point_delta_y;\n-          }\n+          point_deltas_x[j] = old_point_delta_x + point_delta_x;\n+          point_deltas_y[j] = old_point_delta_y + point_delta_y;\n@@ -4102,8 +4229,8 @@\n-                        ( FT_intToFixed( outline->points[j].x ) +\n-                          old_point_delta_x ) \/ 65536.0,\n-                        ( FT_intToFixed( outline->points[j].y ) +\n-                          old_point_delta_y ) \/ 65536.0,\n-                        ( FT_intToFixed( outline->points[j].x ) +\n-                          point_deltas_x[j] ) \/ 65536.0,\n-                        ( FT_intToFixed( outline->points[j].y ) +\n-                          point_deltas_y[j] ) \/ 65536.0 ));\n+                        (double)( FT_intToFixed( outline->points[j].x ) +\n+                                    old_point_delta_x ) \/ 65536,\n+                        (double)( FT_intToFixed( outline->points[j].y ) +\n+                                    old_point_delta_y ) \/ 65536,\n+                        (double)( FT_intToFixed( outline->points[j].x ) +\n+                                    point_deltas_x[j] ) \/ 65536,\n+                        (double)( FT_intToFixed( outline->points[j].y ) +\n+                                    point_deltas_y[j] ) \/ 65536 ));\n@@ -4168,30 +4295,2 @@\n-          if ( j < n_points - 4 )\n-          {\n-            point_deltas_x[j] = old_point_delta_x + point_delta_x;\n-            point_deltas_y[j] = old_point_delta_y + point_delta_y;\n-          }\n-          else\n-          {\n-            \/* To avoid double adjustment of advance width or height, *\/\n-            \/* adjust phantom points only if there is no HVAR or VVAR *\/\n-            \/* support, respectively.                                 *\/\n-            if ( j == ( n_points - 4 )        &&\n-                 !( face->variation_support &\n-                    TT_FACE_FLAG_VAR_LSB    ) )\n-              point_deltas_x[j] = old_point_delta_x + point_delta_x;\n-\n-            else if ( j == ( n_points - 3 )          &&\n-                      !( face->variation_support   &\n-                         TT_FACE_FLAG_VAR_HADVANCE ) )\n-              point_deltas_x[j] = old_point_delta_x + point_delta_x;\n-\n-            else if ( j == ( n_points - 2 )        &&\n-                      !( face->variation_support &\n-                         TT_FACE_FLAG_VAR_TSB    ) )\n-              point_deltas_y[j] = old_point_delta_y + point_delta_y;\n-\n-            else if ( j == ( n_points - 1 )          &&\n-                      !( face->variation_support   &\n-                         TT_FACE_FLAG_VAR_VADVANCE ) )\n-              point_deltas_y[j] = old_point_delta_y + point_delta_y;\n-          }\n+          point_deltas_x[j] = old_point_delta_x + point_delta_x;\n+          point_deltas_y[j] = old_point_delta_y + point_delta_y;\n@@ -4204,8 +4303,8 @@\n-                        ( FT_intToFixed( outline->points[j].x ) +\n-                          old_point_delta_x ) \/ 65536.0,\n-                        ( FT_intToFixed( outline->points[j].y ) +\n-                          old_point_delta_y ) \/ 65536.0,\n-                        ( FT_intToFixed( outline->points[j].x ) +\n-                          point_deltas_x[j] ) \/ 65536.0,\n-                        ( FT_intToFixed( outline->points[j].y ) +\n-                          point_deltas_y[j] ) \/ 65536.0 ));\n+                        (double)( FT_intToFixed( outline->points[j].x ) +\n+                                    old_point_delta_x ) \/ 65536,\n+                        (double)( FT_intToFixed( outline->points[j].y ) +\n+                                    old_point_delta_y ) \/ 65536,\n+                        (double)( FT_intToFixed( outline->points[j].x ) +\n+                                    point_deltas_x[j] ) \/ 65536,\n+                        (double)( FT_intToFixed( outline->points[j].y ) +\n+                                    point_deltas_y[j] ) \/ 65536 ));\n@@ -4235,0 +4334,18 @@\n+    \/* To avoid double adjustment of advance width or height, *\/\n+    \/* do not move phantom points if there is HVAR or VVAR    *\/\n+    \/* support, respectively.                                 *\/\n+    if ( face->variation_support & TT_FACE_FLAG_VAR_HADVANCE )\n+    {\n+      point_deltas_x[n_points - 4] = 0;\n+      point_deltas_y[n_points - 4] = 0;\n+      point_deltas_x[n_points - 3] = 0;\n+      point_deltas_y[n_points - 3] = 0;\n+    }\n+    if ( face->variation_support & TT_FACE_FLAG_VAR_VADVANCE )\n+    {\n+      point_deltas_x[n_points - 2] = 0;\n+      point_deltas_y[n_points - 2] = 0;\n+      point_deltas_x[n_points - 1] = 0;\n+      point_deltas_y[n_points - 1] = 0;\n+    }\n+\n@@ -4244,0 +4361,18 @@\n+    \/* To avoid double adjustment of advance width or height, *\/\n+    \/* adjust phantom points only if there is no HVAR or VVAR *\/\n+    \/* support, respectively.                                 *\/\n+    if ( !( face->variation_support & TT_FACE_FLAG_VAR_HADVANCE ) )\n+    {\n+      loader->pp1      = outline->points[n_points - 4];\n+      loader->pp2      = outline->points[n_points - 3];\n+      loader->linear   = FT_PIX_ROUND( unrounded[n_points - 3].x -\n+                                       unrounded[n_points - 4].x ) \/ 64;\n+    }\n+    if ( !( face->variation_support & TT_FACE_FLAG_VAR_VADVANCE ) )\n+    {\n+      loader->pp3      = outline->points[n_points - 2];\n+      loader->pp4      = outline->points[n_points - 1];\n+      loader->vadvance = FT_PIX_ROUND( unrounded[n_points - 1].y -\n+                                       unrounded[n_points - 2].y ) \/ 64;\n+    }\n+\n@@ -4308,2 +4443,2 @@\n-  static void\n-  ft_var_done_item_variation_store( TT_Face          face,\n+  FT_LOCAL_DEF( void )\n+  tt_var_done_item_variation_store( TT_Face          face,\n@@ -4337,0 +4472,12 @@\n+  FT_LOCAL_DEF( void )\n+  tt_var_done_delta_set_index_map( TT_Face            face,\n+                                   GX_DeltaSetIdxMap  deltaSetIdxMap )\n+  {\n+    FT_Memory  memory = FT_FACE_MEMORY( face );\n+\n+\n+    FT_FREE( deltaSetIdxMap->innerIndex );\n+    FT_FREE( deltaSetIdxMap->outerIndex );\n+  }\n+\n+\n@@ -4365,1 +4512,1 @@\n-      if ( blend->avar_segment )\n+      if ( blend->avar_table )\n@@ -4367,3 +4514,14 @@\n-        for ( i = 0; i < num_axes; i++ )\n-          FT_FREE( blend->avar_segment[i].correspondence );\n-        FT_FREE( blend->avar_segment );\n+        if ( blend->avar_table->avar_segment )\n+        {\n+          for ( i = 0; i < num_axes; i++ )\n+            FT_FREE( blend->avar_table->avar_segment[i].correspondence );\n+          FT_FREE( blend->avar_table->avar_segment );\n+        }\n+\n+        tt_var_done_item_variation_store( face,\n+                                          &blend->avar_table->itemStore );\n+\n+        tt_var_done_delta_set_index_map( face,\n+                                         &blend->avar_table->axisMap );\n+\n+        FT_FREE( blend->avar_table );\n@@ -4374,1 +4532,1 @@\n-        ft_var_done_item_variation_store( face,\n+        tt_var_done_item_variation_store( face,\n@@ -4377,2 +4535,2 @@\n-        FT_FREE( blend->hvar_table->widthMap.innerIndex );\n-        FT_FREE( blend->hvar_table->widthMap.outerIndex );\n+        tt_var_done_delta_set_index_map( face,\n+                                         &blend->hvar_table->widthMap );\n@@ -4384,1 +4542,1 @@\n-        ft_var_done_item_variation_store( face,\n+        tt_var_done_item_variation_store( face,\n@@ -4387,2 +4545,2 @@\n-        FT_FREE( blend->vvar_table->widthMap.innerIndex );\n-        FT_FREE( blend->vvar_table->widthMap.outerIndex );\n+        tt_var_done_delta_set_index_map( face,\n+                                         &blend->vvar_table->widthMap );\n@@ -4394,1 +4552,1 @@\n-        ft_var_done_item_variation_store( face,\n+        tt_var_done_item_variation_store( face,\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgxvar.c","additions":472,"deletions":314,"binary":false,"changes":786,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2022 by\n+ * Copyright (C) 2004-2023 by\n@@ -23,0 +23,1 @@\n+#include <freetype\/internal\/ftmmtypes.h>\n@@ -65,43 +66,9 @@\n-  typedef struct  GX_ItemVarDataRec_\n-  {\n-    FT_UInt    itemCount;      \/* number of delta sets per item         *\/\n-    FT_UInt    regionIdxCount; \/* number of region indices in this data *\/\n-    FT_UInt*   regionIndices;  \/* array of `regionCount' indices;       *\/\n-                               \/* these index `varRegionList'           *\/\n-    FT_Short*  deltaSet;       \/* array of `itemCount' deltas           *\/\n-                               \/* use `innerIndex' for this array       *\/\n-\n-  } GX_ItemVarDataRec, *GX_ItemVarData;\n-\n-\n-  \/* contribution of one axis to a region *\/\n-  typedef struct  GX_AxisCoordsRec_\n-  {\n-    FT_Fixed  startCoord;\n-    FT_Fixed  peakCoord;      \/* zero means no effect (factor = 1) *\/\n-    FT_Fixed  endCoord;\n-\n-  } GX_AxisCoordsRec, *GX_AxisCoords;\n-\n-\n-  typedef struct  GX_VarRegionRec_\n-  {\n-    GX_AxisCoords  axisList;               \/* array of axisCount records *\/\n-\n-  } GX_VarRegionRec, *GX_VarRegion;\n-\n-\n-  \/* item variation store *\/\n-  typedef struct  GX_ItemVarStoreRec_\n-  {\n-    FT_UInt         dataCount;\n-    GX_ItemVarData  varData;            \/* array of dataCount records;     *\/\n-                                        \/* use `outerIndex' for this array *\/\n-    FT_UShort     axisCount;\n-    FT_UInt       regionCount;          \/* total number of regions defined *\/\n-    GX_VarRegion  varRegionList;\n-\n-  } GX_ItemVarStoreRec, *GX_ItemVarStore;\n-\n-\n-  typedef struct  GX_DeltaSetIdxMapRec_\n+  \/**************************************************************************\n+   *\n+   * @Struct:\n+   *   GX_AVarTableRec\n+   *\n+   * @Description:\n+   *   Data from the `avar' table.\n+   *\/\n+  typedef struct  GX_AVarTableRec_\n@@ -109,3 +76,3 @@\n-    FT_ULong  mapCount;\n-    FT_UInt*  outerIndex;               \/* indices to item var data *\/\n-    FT_UInt*  innerIndex;               \/* indices to delta set     *\/\n+    GX_AVarSegment        avar_segment;   \/* avar_segment[num_axis] *\/\n+    GX_ItemVarStoreRec    itemStore;      \/* Item Variation Store   *\/\n+    GX_DeltaSetIdxMapRec  axisMap;        \/* Axis Mapping           *\/\n@@ -113,1 +80,1 @@\n-  } GX_DeltaSetIdxMapRec, *GX_DeltaSetIdxMap;\n+  } GX_AVarTableRec, *GX_AVarTable;\n@@ -248,1 +215,1 @@\n-   *   avar_segment ::\n+   *   avar_table ::\n@@ -313,1 +280,1 @@\n-    GX_AVarSegment  avar_segment;                \/* avar_segment[num_axis] *\/\n+    GX_AVarTable    avar_table;\n@@ -379,0 +346,1 @@\n+#define TTAG_ital  FT_MAKE_TAG( 'i', 't', 'a', 'l' )\n@@ -415,2 +383,1 @@\n-  TT_Vary_Apply_Glyph_Deltas( TT_Face      face,\n-                              FT_UInt      glyph_index,\n+  TT_Vary_Apply_Glyph_Deltas( TT_Loader    loader,\n@@ -418,2 +385,1 @@\n-                              FT_Vector*   unrounded,\n-                              FT_UInt      n_points );\n+                              FT_Vector*   unrounded );\n@@ -434,0 +400,28 @@\n+\n+  FT_LOCAL( FT_Error )\n+  tt_var_load_item_variation_store( TT_Face          face,\n+                                    FT_ULong         offset,\n+                                    GX_ItemVarStore  itemStore );\n+\n+  FT_LOCAL( FT_Error )\n+  tt_var_load_delta_set_index_mapping( TT_Face            face,\n+                                       FT_ULong           offset,\n+                                       GX_DeltaSetIdxMap  map,\n+                                       GX_ItemVarStore    itemStore,\n+                                       FT_ULong           table_len );\n+\n+  FT_LOCAL( FT_ItemVarDelta )\n+  tt_var_get_item_delta( TT_Face          face,\n+                         GX_ItemVarStore  itemStore,\n+                         FT_UInt          outerIndex,\n+                         FT_UInt          innerIndex );\n+\n+  FT_LOCAL( void )\n+  tt_var_done_item_variation_store( TT_Face          face,\n+                                    GX_ItemVarStore  itemStore );\n+\n+  FT_LOCAL( void )\n+  tt_var_done_delta_set_index_map( TT_Face            face,\n+                                   GX_DeltaSetIdxMap  deltaSetIdxMap );\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgxvar.h","additions":48,"deletions":54,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -1530,1 +1530,0 @@\n-    \/* TT_RunIns sets origCvt and restores cvt to origCvt when done. *\/\n@@ -1532,1 +1531,1 @@\n-         exc->cvt == exc->origCvt            )\n+         exc->cvt != exc->glyfCvt            )\n@@ -3118,2 +3117,0 @@\n-      \/* TT_RunIns sets origStorage and restores storage to origStorage *\/\n-      \/* when done.                                                     *\/\n@@ -3121,1 +3118,1 @@\n-           exc->storage == exc->origStorage    )\n+           exc->storage != exc->glyfStorage    )\n@@ -6877,1 +6874,1 @@\n-  _iup_worker_shift( IUP_Worker  worker,\n+  iup_worker_shift_( IUP_Worker  worker,\n@@ -6899,1 +6896,1 @@\n-  _iup_worker_interpolate( IUP_Worker  worker,\n+  iup_worker_interpolate_( IUP_Worker  worker,\n@@ -7093,1 +7090,1 @@\n-            _iup_worker_interpolate( &V,\n+            iup_worker_interpolate_( &V,\n@@ -7105,1 +7102,1 @@\n-          _iup_worker_shift( &V, first_point, end_point, cur_touched );\n+          iup_worker_shift_( &V, first_point, end_point, cur_touched );\n@@ -7108,1 +7105,1 @@\n-          _iup_worker_interpolate( &V,\n+          iup_worker_interpolate_( &V,\n@@ -7115,1 +7112,1 @@\n-            _iup_worker_interpolate( &V,\n+            iup_worker_interpolate_( &V,\n@@ -7835,2 +7832,0 @@\n-    exc->origCvt     = exc->cvt;\n-    exc->origStorage = exc->storage;\n@@ -8573,1 +8568,2 @@\n-      if ( ++ins_counter > TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES ) {\n+      if ( ++ins_counter > TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES )\n+      {\n@@ -8596,3 +8592,0 @@\n-    exc->cvt     = exc->origCvt;\n-    exc->storage = exc->origStorage;\n-\n@@ -8608,3 +8601,0 @@\n-    exc->cvt     = exc->origCvt;\n-    exc->storage = exc->origStorage;\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttinterp.c","additions":11,"deletions":21,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -196,1 +196,0 @@\n-    FT_Long*           origCvt;\n@@ -227,1 +226,0 @@\n-    FT_Long*           origStorage;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttinterp.h","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -1007,1 +1007,1 @@\n-                  i, face->cvt[i] \/ 64.0, size->cvt[i] \/ 64.0 ));\n+                  i, (double)face->cvt[i] \/ 64, (double)size->cvt[i] \/ 64 ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttobjs.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttpload.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttpload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2010-2022 by\n+ * Copyright (C) 2010-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttsubpix.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2010-2022 by\n+ * Copyright (C) 2010-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttsubpix.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -181,1 +181,0 @@\n-    charmap    = NULL;\n@@ -189,3 +188,1 @@\n-        error = FT_Set_Charmap( t1_face, charmap );\n-        if ( error )\n-          goto Exit;\n+        t1_face->charmap = charmap;\n@@ -212,4 +209,1 @@\n-    if ( oldcharmap )\n-      error = FT_Set_Charmap( t1_face, oldcharmap );\n-    if ( error )\n-      goto Exit;\n+    t1_face->charmap = oldcharmap;\n@@ -305,3 +299,8 @@\n-      \/* no `U' suffix here to 0x8000! *\/\n-      t1_face->ascender  = (FT_Short)( ( fi->Ascender  + 0x8000 ) >> 16 );\n-      t1_face->descender = (FT_Short)( ( fi->Descender + 0x8000 ) >> 16 );\n+      \/* ascender and descender are optional and could both be zero *\/\n+      \/* check if values are meaningful before overriding defaults  *\/\n+      if ( fi->Ascender > fi->Descender )\n+      {\n+        \/* no `U' suffix here to 0x8000! *\/\n+        t1_face->ascender  = (FT_Short)( ( fi->Ascender  + 0x8000 ) >> 16 );\n+        t1_face->descender = (FT_Short)( ( fi->Descender + 0x8000 ) >> 16 );\n+      }\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1afm.c","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1afm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -124,13 +124,24 @@\n-    (FT_Get_MM_Func)             T1_Get_Multi_Master,    \/* get_mm              *\/\n-    (FT_Set_MM_Design_Func)      T1_Set_MM_Design,       \/* set_mm_design       *\/\n-    (FT_Set_MM_Blend_Func)       T1_Set_MM_Blend,        \/* set_mm_blend        *\/\n-    (FT_Get_MM_Blend_Func)       T1_Get_MM_Blend,        \/* get_mm_blend        *\/\n-    (FT_Get_MM_Var_Func)         T1_Get_MM_Var,          \/* get_mm_var          *\/\n-    (FT_Set_Var_Design_Func)     T1_Set_Var_Design,      \/* set_var_design      *\/\n-    (FT_Get_Var_Design_Func)     T1_Get_Var_Design,      \/* get_var_design      *\/\n-    (FT_Set_Instance_Func)       T1_Reset_MM_Blend,      \/* set_instance        *\/\n-    (FT_Set_MM_WeightVector_Func)T1_Set_MM_WeightVector, \/* set_mm_weightvector *\/\n-    (FT_Get_MM_WeightVector_Func)T1_Get_MM_WeightVector, \/* get_mm_weightvector *\/\n-\n-    (FT_Get_Var_Blend_Func)      NULL,                   \/* get_var_blend       *\/\n-    (FT_Done_Blend_Func)         T1_Done_Blend           \/* done_blend          *\/\n+    (FT_Get_MM_Func)        T1_Get_Multi_Master,    \/* get_mm                    *\/\n+    (FT_Set_MM_Design_Func) T1_Set_MM_Design,       \/* set_mm_design             *\/\n+    (FT_Set_MM_Blend_Func)  T1_Set_MM_Blend,        \/* set_mm_blend              *\/\n+    (FT_Get_MM_Blend_Func)  T1_Get_MM_Blend,        \/* get_mm_blend              *\/\n+    (FT_Get_MM_Var_Func)    T1_Get_MM_Var,          \/* get_mm_var                *\/\n+    (FT_Set_Var_Design_Func)T1_Set_Var_Design,      \/* set_var_design            *\/\n+    (FT_Get_Var_Design_Func)T1_Get_Var_Design,      \/* get_var_design            *\/\n+    (FT_Set_Instance_Func)  T1_Reset_MM_Blend,      \/* set_instance              *\/\n+    (FT_Set_MM_WeightVector_Func)\n+                            T1_Set_MM_WeightVector, \/* set_mm_weightvector       *\/\n+    (FT_Get_MM_WeightVector_Func)\n+                            T1_Get_MM_WeightVector, \/* get_mm_weightvector       *\/\n+    (FT_Var_Load_Delta_Set_Idx_Map_Func)\n+                            NULL,                   \/* load_delta_set_idx_map    *\/\n+    (FT_Var_Load_Item_Var_Store_Func)\n+                            NULL,                   \/* load_item_variation_store *\/\n+    (FT_Var_Get_Item_Delta_Func)\n+                            NULL,                   \/* get_item_delta            *\/\n+    (FT_Var_Done_Item_Var_Store_Func)\n+                            NULL,                   \/* done_item_variation_store *\/\n+    (FT_Var_Done_Delta_Set_Idx_Map_Func)\n+                            NULL,                   \/* done_delta_set_index_map  *\/\n+    (FT_Get_Var_Blend_Func) NULL,                   \/* get_var_blend             *\/\n+    (FT_Done_Blend_Func)    T1_Done_Blend           \/* done_blend                *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1driver.c","additions":25,"deletions":14,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1driver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2022 by\n+ * Copyright (C) 2001-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1errors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -267,1 +267,1 @@\n-                *max_advance \/ 65536.0 ));\n+                (double)*max_advance \/ 65536 ));\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1gload.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1gload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -358,0 +358,4 @@\n+      else if ( ft_strcmp( mmvar->axis[i].name, \"Slant\" ) == 0 )\n+        mmvar->axis[i].tag = FT_MAKE_TAG( 's', 'l', 'n', 't' );\n+      else if ( ft_strcmp( mmvar->axis[i].name, \"Italic\" ) == 0 )\n+        mmvar->axis[i].tag = FT_MAKE_TAG( 'i', 't', 'a', 'l' );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1load.c","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1load.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -149,1 +149,3 @@\n-    slot->internal->glyph_hints = NULL;\n+    \/* `slot->internal` might be NULL in out-of-memory situations. *\/\n+    if ( slot->internal )\n+      slot->internal->glyph_hints = NULL;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1objs.c","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1objs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n@@ -333,1 +333,3 @@\n-      \/* first of all, look at the `eexec' keyword *\/\n+      \/* First look for the `eexec' keyword. Ensure `eexec' is real -- *\/\n+      \/* it could be in a comment or string (as e.g. in u003043t.gsf   *\/\n+      \/* from ghostscript).                                            *\/\n@@ -340,26 +342,0 @@\n-    Again:\n-      for (;;)\n-      {\n-        if ( cur[0] == 'e'   &&\n-             cur + 9 < limit )      \/* 9 = 5 letters for `eexec' + *\/\n-                                    \/* whitespace + 4 chars        *\/\n-        {\n-          if ( cur[1] == 'e' &&\n-               cur[2] == 'x' &&\n-               cur[3] == 'e' &&\n-               cur[4] == 'c' )\n-            break;\n-        }\n-        cur++;\n-        if ( cur >= limit )\n-        {\n-          FT_ERROR(( \"T1_Get_Private_Dict:\"\n-                     \" could not find `eexec' keyword\\n\" ));\n-          error = FT_THROW( Invalid_File_Format );\n-          goto Exit;\n-        }\n-      }\n-\n-      \/* check whether `eexec' was real -- it could be in a comment *\/\n-      \/* or string (as e.g. in u003043t.gsf from ghostscript)       *\/\n-\n@@ -367,2 +343,1 @@\n-      \/* set limit to `eexec' + whitespace + 4 characters *\/\n-      parser->root.limit  = cur + 10;\n+      parser->root.limit  = parser->base_dict + parser->base_len;\n@@ -375,2 +350,2 @@\n-        if ( cur[0] == 'e'   &&\n-             cur + 5 < limit )\n+        \/* 9 = 5 letters for `eexec' + whitespace + 4 chars *\/\n+        if ( cur[0] == 'e' && cur + 9 < limit )\n@@ -392,15 +367,3 @@\n-      \/* we haven't found the correct `eexec'; go back and continue *\/\n-      \/* searching                                                  *\/\n-\n-      cur   = limit;\n-      limit = parser->base_dict + parser->base_len;\n-\n-      if ( cur >= limit )\n-      {\n-        FT_ERROR(( \"T1_Get_Private_Dict:\"\n-                   \" premature end in private dictionary\\n\" ));\n-        error = FT_THROW( Invalid_File_Format );\n-        goto Exit;\n-      }\n-\n-      goto Again;\n+      FT_ERROR(( \"T1_Get_Private_Dict: could not find `eexec' keyword\\n\" ));\n+      error = FT_THROW( Invalid_File_Format );\n+      goto Exit;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1parse.c","additions":10,"deletions":47,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1parse.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2022 by\n+ * Copyright (C) 1996-2023 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1tokens.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/*! jQuery UI - v1.13.1 - 2022-05-12\n+\/*! jQuery UI - v1.13.2 - 2023-02-27\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.css","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/*! jQuery UI - v1.13.1 - 2022-05-12\n+\/*! jQuery UI - v1.13.2 - 2023-02-27\n@@ -23,1 +23,1 @@\n-var version = $.ui.version = \"1.13.1\";\n+var version = $.ui.version = \"1.13.2\";\n@@ -27,1 +27,1 @@\n- * jQuery UI Widget 1.13.1\n+ * jQuery UI Widget 1.13.2\n@@ -769,1 +769,1 @@\n- * jQuery UI Position 1.13.1\n+ * jQuery UI Position 1.13.2\n@@ -1266,1 +1266,1 @@\n- * jQuery UI Keycode 1.13.1\n+ * jQuery UI Keycode 1.13.2\n@@ -1301,1 +1301,1 @@\n- * jQuery UI Unique ID 1.13.1\n+ * jQuery UI Unique ID 1.13.2\n@@ -1369,1 +1369,1 @@\n- * jQuery UI Menu 1.13.1\n+ * jQuery UI Menu 1.13.2\n@@ -1388,1 +1388,1 @@\n-\tversion: \"1.13.1\",\n+\tversion: \"1.13.2\",\n@@ -2060,1 +2060,1 @@\n- * jQuery UI Autocomplete 1.13.1\n+ * jQuery UI Autocomplete 1.13.2\n@@ -2079,1 +2079,1 @@\n-\tversion: \"1.13.1\",\n+\tversion: \"1.13.2\",\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.js","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/*! jQuery UI - v1.13.1 - 2022-05-12\n+\/*! jQuery UI - v1.13.2 - 2023-02-27\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.min.css","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/*! jQuery UI - v1.13.1 - 2022-05-12\n+\/*! jQuery UI - v1.13.2 - 2023-02-27\n@@ -6,1 +6,1 @@\n-!function(t){\"use strict\";\"function\"==typeof define&&define.amd?define([\"jquery\"],t):t(jQuery)}(function(x){\"use strict\";x.ui=x.ui||{};x.ui.version=\"1.13.1\";var n,i=0,l=Array.prototype.hasOwnProperty,a=Array.prototype.slice;x.cleanData=(n=x.cleanData,function(t){for(var e,i,s=0;null!=(i=t[s]);s++)(e=x._data(i,\"events\"))&&e.remove&&x(i).triggerHandler(\"remove\");n(t)}),x.widget=function(t,i,e){var s,n,o,l={},a=t.split(\".\")[0],r=a+\"-\"+(t=t.split(\".\")[1]);return e||(e=i,i=x.Widget),Array.isArray(e)&&(e=x.extend.apply(null,[{}].concat(e))),x.expr.pseudos[r.toLowerCase()]=function(t){return!!x.data(t,r)},x[a]=x[a]||{},s=x[a][t],n=x[a][t]=function(t,e){if(!this||!this._createWidget)return new n(t,e);arguments.length&&this._createWidget(t,e)},x.extend(n,s,{version:e.version,_proto:x.extend({},e),_childConstructors:[]}),(o=new i).options=x.widget.extend({},o.options),x.each(e,function(e,s){function n(){return i.prototype[e].apply(this,arguments)}function o(t){return i.prototype[e].apply(this,t)}l[e]=\"function\"==typeof s?function(){var t,e=this._super,i=this._superApply;return this._super=n,this._superApply=o,t=s.apply(this,arguments),this._super=e,this._superApply=i,t}:s}),n.prototype=x.widget.extend(o,{widgetEventPrefix:s&&o.widgetEventPrefix||t},l,{constructor:n,namespace:a,widgetName:t,widgetFullName:r}),s?(x.each(s._childConstructors,function(t,e){var i=e.prototype;x.widget(i.namespace+\".\"+i.widgetName,n,e._proto)}),delete s._childConstructors):i._childConstructors.push(n),x.widget.bridge(t,n),n},x.widget.extend=function(t){for(var e,i,s=a.call(arguments,1),n=0,o=s.length;n<o;n++)for(e in s[n])i=s[n][e],l.call(s[n],e)&&void 0!==i&&(x.isPlainObject(i)?t[e]=x.isPlainObject(t[e])?x.widget.extend({},t[e],i):x.widget.extend({},i):t[e]=i);return t},x.widget.bridge=function(o,e){var l=e.prototype.widgetFullName||o;x.fn[o]=function(i){var t=\"string\"==typeof i,s=a.call(arguments,1),n=this;return t?this.length||\"instance\"!==i?this.each(function(){var t,e=x.data(this,l);return\"instance\"===i?(n=e,!1):e?\"function\"!=typeof e[i]||\"_\"===i.charAt(0)?x.error(\"no such method '\"+i+\"' for \"+o+\" widget instance\"):(t=e[i].apply(e,s))!==e&&void 0!==t?(n=t&&t.jquery?n.pushStack(t.get()):t,!1):void 0:x.error(\"cannot call methods on \"+o+\" prior to initialization; attempted to call method '\"+i+\"'\")}):n=void 0:(s.length&&(i=x.widget.extend.apply(null,[i].concat(s))),this.each(function(){var t=x.data(this,l);t?(t.option(i||{}),t._init&&t._init()):x.data(this,l,new e(i,this))})),n}},x.Widget=function(){},x.Widget._childConstructors=[],x.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{classes:{},disabled:!1,create:null},_createWidget:function(t,e){e=x(e||this.defaultElement||this)[0],this.element=x(e),this.uuid=i++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.bindings=x(),this.hoverable=x(),this.focusable=x(),this.classesElementLookup={},e!==this&&(x.data(e,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===e&&this.destroy()}}),this.document=x(e.style?e.ownerDocument:e.document||e),this.window=x(this.document[0].defaultView||this.document[0].parentWindow)),this.options=x.widget.extend({},this.options,this._getCreateOptions(),t),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:x.noop,_create:x.noop,_init:x.noop,destroy:function(){var i=this;this._destroy(),x.each(this.classesElementLookup,function(t,e){i._removeClass(e,t)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr(\"aria-disabled\"),this.bindings.off(this.eventNamespace)},_destroy:x.noop,widget:function(){return this.element},option:function(t,e){var i,s,n,o=t;if(0===arguments.length)return x.widget.extend({},this.options);if(\"string\"==typeof t)if(o={},t=(i=t.split(\".\")).shift(),i.length){for(s=o[t]=x.widget.extend({},this.options[t]),n=0;n<i.length-1;n++)s[i[n]]=s[i[n]]||{},s=s[i[n]];if(t=i.pop(),1===arguments.length)return void 0===s[t]?null:s[t];s[t]=e}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];o[t]=e}return this._setOptions(o),this},_setOptions:function(t){for(var e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return\"classes\"===t&&this._setOptionClasses(e),this.options[t]=e,\"disabled\"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(t){var e,i,s;for(e in t)s=this.classesElementLookup[e],t[e]!==this.options.classes[e]&&s&&s.length&&(i=x(s.get()),this._removeClass(s,e),i.addClass(this._classes({element:i,keys:e,classes:t,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,!!t),t&&(this._removeClass(this.hoverable,null,\"ui-state-hover\"),this._removeClass(this.focusable,null,\"ui-state-focus\"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(n){var o=[],l=this;function t(t,e){for(var i,s=0;s<t.length;s++)i=l.classesElementLookup[t[s]]||x(),i=n.add?(function(){var i=[];n.element.each(function(t,e){x.map(l.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),l._on(x(i),{remove:\"_untrackClassesElement\"})}(),x(x.uniqueSort(i.get().concat(n.element.get())))):x(i.not(n.element).get()),l.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=x.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(\/\\S+\/g)||[],!0),n.extra&&t(n.extra.match(\/\\S+\/g)||[]),o.join(\" \")},_untrackClassesElement:function(i){var s=this;x.each(s.classesElementLookup,function(t,e){-1!==x.inArray(i.target,e)&&(s.classesElementLookup[t]=x(e.not(i.target).get()))}),this._off(x(i.target))},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){var n=\"string\"==typeof t||null===t,i={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s=\"boolean\"==typeof s?s:i};return i.element.toggleClass(this._classes(i),s),this},_on:function(n,o,t){var l,a=this;\"boolean\"!=typeof n&&(t=o,o=n,n=!1),t?(o=l=x(o),this.bindings=this.bindings.add(o)):(t=o,o=this.element,l=this.widget()),x.each(t,function(t,e){function i(){if(n||!0!==a.options.disabled&&!x(this).hasClass(\"ui-state-disabled\"))return(\"string\"==typeof e?a[e]:e).apply(a,arguments)}\"string\"!=typeof e&&(i.guid=e.guid=e.guid||i.guid||x.guid++);var s=t.match(\/^([\\w:-]*)\\s*(.*)$\/),t=s[1]+a.eventNamespace,s=s[2];s?l.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=x(this.bindings.not(t).get()),this.focusable=x(this.focusable.not(t).get()),this.hoverable=x(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(x(t.currentTarget),null,\"ui-state-hover\")},mouseleave:function(t){this._removeClass(x(t.currentTarget),null,\"ui-state-hover\")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){this._addClass(x(t.currentTarget),null,\"ui-state-focus\")},focusout:function(t){this._removeClass(x(t.currentTarget),null,\"ui-state-focus\")}})},_trigger:function(t,e,i){var s,n,o=this.options[t];if(i=i||{},(e=x.Event(e)).type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),e.target=this.element[0],n=e.originalEvent)for(s in n)s in e||(e[s]=n[s]);return this.element.trigger(e,i),!(\"function\"==typeof o&&!1===o.apply(this.element[0],[e].concat(i))||e.isDefaultPrevented())}},x.each({show:\"fadeIn\",hide:\"fadeOut\"},function(o,l){x.Widget.prototype[\"_\"+o]=function(e,t,i){var s,n=(t=\"string\"==typeof t?{effect:t}:t)?!0!==t&&\"number\"!=typeof t&&t.effect||l:o;\"number\"==typeof(t=t||{})?t={duration:t}:!0===t&&(t={}),s=!x.isEmptyObject(t),t.complete=i,t.delay&&e.delay(t.delay),s&&x.effects&&x.effects.effect[n]?e[o](t):n!==o&&e[n]?e[n](t.duration,t.easing,i):e.queue(function(t){x(this)[o](),i&&i.call(e[0]),t()})}});var s,C,E,o,r,u,h,c,k;x.widget;function T(t,e,i){return[parseFloat(t[0])*(c.test(t[0])?e\/100:1),parseFloat(t[1])*(c.test(t[1])?i\/100:1)]}function A(t,e){return parseInt(x.css(t,e),10)||0}function W(t){return null!=t&&t===t.window}C=Math.max,E=Math.abs,o=\/left|center|right\/,r=\/top|center|bottom\/,u=\/[\\+\\-]\\d+(\\.[\\d]+)?%?\/,h=\/^\\w+\/,c=\/%$\/,k=x.fn.position,x.position={scrollbarWidth:function(){if(void 0!==s)return s;var t,e=x(\"<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'><\/div><\/div>\"),i=e.children()[0];return x(\"body\").append(e),t=i.offsetWidth,e.css(\"overflow\",\"scroll\"),t===(i=i.offsetWidth)&&(i=e[0].clientWidth),e.remove(),s=t-i},getScrollInfo:function(t){var e=t.isWindow||t.isDocument?\"\":t.element.css(\"overflow-x\"),i=t.isWindow||t.isDocument?\"\":t.element.css(\"overflow-y\"),e=\"scroll\"===e||\"auto\"===e&&t.width<t.element[0].scrollWidth;return{width:\"scroll\"===i||\"auto\"===i&&t.height<t.element[0].scrollHeight?x.position.scrollbarWidth():0,height:e?x.position.scrollbarWidth():0}},getWithinInfo:function(t){var e=x(t||window),i=W(e[0]),s=!!e[0]&&9===e[0].nodeType;return{element:e,isWindow:i,isDocument:s,offset:!i&&!s?x(t).offset():{left:0,top:0},scrollLeft:e.scrollLeft(),scrollTop:e.scrollTop(),width:e.outerWidth(),height:e.outerHeight()}}},x.fn.position=function(c){if(!c||!c.of)return k.apply(this,arguments);var d,f,m,p,v,t,g=\"string\"==typeof(c=x.extend({},c)).of?x(document).find(c.of):x(c.of),_=x.position.getWithinInfo(c.within),y=x.position.getScrollInfo(_),b=(c.collision||\"flip\").split(\" \"),w={},e=9===(t=(e=g)[0]).nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:W(t)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:t.preventDefault?{width:0,height:0,offset:{top:t.pageY,left:t.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()};return g[0].preventDefault&&(c.at=\"left top\"),f=e.width,m=e.height,v=x.extend({},p=e.offset),x.each([\"my\",\"at\"],function(){var t,e,i=(c[this]||\"\").split(\" \");(i=1===i.length?o.test(i[0])?i.concat([\"center\"]):r.test(i[0])?[\"center\"].concat(i):[\"center\",\"center\"]:i)[0]=o.test(i[0])?i[0]:\"center\",i[1]=r.test(i[1])?i[1]:\"center\",t=u.exec(i[0]),e=u.exec(i[1]),w[this]=[t?t[0]:0,e?e[0]:0],c[this]=[h.exec(i[0])[0],h.exec(i[1])[0]]}),1===b.length&&(b[1]=b[0]),\"right\"===c.at[0]?v.left+=f:\"center\"===c.at[0]&&(v.left+=f\/2),\"bottom\"===c.at[1]?v.top+=m:\"center\"===c.at[1]&&(v.top+=m\/2),d=T(w.at,f,m),v.left+=d[0],v.top+=d[1],this.each(function(){var i,t,l=x(this),a=l.outerWidth(),r=l.outerHeight(),e=A(this,\"marginLeft\"),s=A(this,\"marginTop\"),n=a+e+A(this,\"marginRight\")+y.width,o=r+s+A(this,\"marginBottom\")+y.height,u=x.extend({},v),h=T(w.my,l.outerWidth(),l.outerHeight());\"right\"===c.my[0]?u.left-=a:\"center\"===c.my[0]&&(u.left-=a\/2),\"bottom\"===c.my[1]?u.top-=r:\"center\"===c.my[1]&&(u.top-=r\/2),u.left+=h[0],u.top+=h[1],i={marginLeft:e,marginTop:s},x.each([\"left\",\"top\"],function(t,e){x.ui.position[b[t]]&&x.ui.position[b[t]][e](u,{targetWidth:f,targetHeight:m,elemWidth:a,elemHeight:r,collisionPosition:i,collisionWidth:n,collisionHeight:o,offset:[d[0]+h[0],d[1]+h[1]],my:c.my,at:c.at,within:_,elem:l})}),c.using&&(t=function(t){var e=p.left-u.left,i=e+f-a,s=p.top-u.top,n=s+m-r,o={target:{element:g,left:p.left,top:p.top,width:f,height:m},element:{element:l,left:u.left,top:u.top,width:a,height:r},horizontal:i<0?\"left\":0<e?\"right\":\"center\",vertical:n<0?\"top\":0<s?\"bottom\":\"middle\"};f<a&&E(e+i)<f&&(o.horizontal=\"center\"),m<r&&E(s+n)<m&&(o.vertical=\"middle\"),C(E(e),E(i))>C(E(s),E(n))?o.important=\"horizontal\":o.important=\"vertical\",c.using.call(this,t,o)}),l.offset(x.extend(u,{using:t}))})},x.ui.position={fit:{left:function(t,e){var i=e.within,s=i.isWindow?i.scrollLeft:i.offset.left,n=i.width,o=t.left-e.collisionPosition.marginLeft,l=s-o,a=o+e.collisionWidth-n-s;e.collisionWidth>n?0<l&&a<=0?(i=t.left+l+e.collisionWidth-n-s,t.left+=l-i):t.left=!(0<a&&l<=0)&&a<l?s+n-e.collisionWidth:s:0<l?t.left+=l:0<a?t.left-=a:t.left=C(t.left-o,t.left)},top:function(t,e){var i=e.within,s=i.isWindow?i.scrollTop:i.offset.top,n=e.within.height,o=t.top-e.collisionPosition.marginTop,l=s-o,a=o+e.collisionHeight-n-s;e.collisionHeight>n?0<l&&a<=0?(i=t.top+l+e.collisionHeight-n-s,t.top+=l-i):t.top=!(0<a&&l<=0)&&a<l?s+n-e.collisionHeight:s:0<l?t.top+=l:0<a?t.top-=a:t.top=C(t.top-o,t.top)}},flip:{left:function(t,e){var i=e.within,s=i.offset.left+i.scrollLeft,n=i.width,o=i.isWindow?i.scrollLeft:i.offset.left,l=t.left-e.collisionPosition.marginLeft,a=l-o,r=l+e.collisionWidth-n-o,u=\"left\"===e.my[0]?-e.elemWidth:\"right\"===e.my[0]?e.elemWidth:0,i=\"left\"===e.at[0]?e.targetWidth:\"right\"===e.at[0]?-e.targetWidth:0,l=-2*e.offset[0];a<0?((s=t.left+u+i+l+e.collisionWidth-n-s)<0||s<E(a))&&(t.left+=u+i+l):0<r&&(0<(o=t.left-e.collisionPosition.marginLeft+u+i+l-o)||E(o)<r)&&(t.left+=u+i+l)},top:function(t,e){var i=e.within,s=i.offset.top+i.scrollTop,n=i.height,o=i.isWindow?i.scrollTop:i.offset.top,l=t.top-e.collisionPosition.marginTop,a=l-o,r=l+e.collisionHeight-n-o,u=\"top\"===e.my[1]?-e.elemHeight:\"bottom\"===e.my[1]?e.elemHeight:0,i=\"top\"===e.at[1]?e.targetHeight:\"bottom\"===e.at[1]?-e.targetHeight:0,l=-2*e.offset[1];a<0?((s=t.top+u+i+l+e.collisionHeight-n-s)<0||s<E(a))&&(t.top+=u+i+l):0<r&&(0<(o=t.top-e.collisionPosition.marginTop+u+i+l-o)||E(o)<r)&&(t.top+=u+i+l)}},flipfit:{left:function(){x.ui.position.flip.left.apply(this,arguments),x.ui.position.fit.left.apply(this,arguments)},top:function(){x.ui.position.flip.top.apply(this,arguments),x.ui.position.fit.top.apply(this,arguments)}}};var t;x.ui.position,x.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},x.fn.extend({uniqueId:(t=0,function(){return this.each(function(){this.id||(this.id=\"ui-id-\"+ ++t)})}),removeUniqueId:function(){return this.each(function(){\/^ui-id-\\d+$\/.test(this.id)&&x(this).removeAttr(\"id\")})}}),x.ui.safeActiveElement=function(e){var i;try{i=e.activeElement}catch(t){i=e.body}return i=!(i=i||e.body).nodeName?e.body:i},x.widget(\"ui.menu\",{version:\"1.13.1\",defaultElement:\"<ul>\",delay:300,options:{icons:{submenu:\"ui-icon-caret-1-e\"},items:\"> *\",menus:\"ul\",position:{my:\"left top\",at:\"right top\"},role:\"menu\",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.lastMousePosition={x:null,y:null},this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass(\"ui-menu\",\"ui-widget ui-widget-content\"),this._on({\"mousedown .ui-menu-item\":function(t){t.preventDefault(),this._activateItem(t)},\"click .ui-menu-item\":function(t){var e=x(t.target),i=x(x.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&e.not(\".ui-state-disabled\").length&&(this.select(t),t.isPropagationStopped()||(this.mouseHandled=!0),e.has(\".ui-menu\").length?this.expand(t):!this.element.is(\":focus\")&&i.closest(\".ui-menu\").length&&(this.element.trigger(\"focus\",[!0]),this.active&&1===this.active.parents(\".ui-menu\").length&&clearTimeout(this.timer)))},\"mouseenter .ui-menu-item\":\"_activateItem\",\"mousemove .ui-menu-item\":\"_activateItem\",mouseleave:\"collapseAll\",\"mouseleave .ui-menu\":\"collapseAll\",focus:function(t,e){var i=this.active||this._menuItems().first();e||this.focus(t,i)},blur:function(t){this._delay(function(){x.contains(this.element[0],x.ui.safeActiveElement(this.document[0]))||this.collapseAll(t)})},keydown:\"_keydown\"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t,!0),this.mouseHandled=!1}})},_activateItem:function(t){var e,i;this.previousFilter||t.clientX===this.lastMousePosition.x&&t.clientY===this.lastMousePosition.y||(this.lastMousePosition={x:t.clientX,y:t.clientY},e=x(t.target).closest(\".ui-menu-item\"),i=x(t.currentTarget),e[0]===i[0]&&(i.is(\".ui-state-active\")||(this._removeClass(i.siblings().children(\".ui-state-active\"),null,\"ui-state-active\"),this.focus(t,i))))},_destroy:function(){var t=this.element.find(\".ui-menu-item\").removeAttr(\"role aria-disabled\").children(\".ui-menu-item-wrapper\").removeUniqueId().removeAttr(\"tabIndex role aria-haspopup\");this.element.removeAttr(\"aria-activedescendant\").find(\".ui-menu\").addBack().removeAttr(\"role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex\").removeUniqueId().show(),t.children().each(function(){var t=x(this);t.data(\"ui-menu-submenu-caret\")&&t.remove()})},_keydown:function(t){var e,i,s,n=!0;switch(t.keyCode){case x.ui.keyCode.PAGE_UP:this.previousPage(t);break;case x.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case x.ui.keyCode.HOME:this._move(\"first\",\"first\",t);break;case x.ui.keyCode.END:this._move(\"last\",\"last\",t);break;case x.ui.keyCode.UP:this.previous(t);break;case x.ui.keyCode.DOWN:this.next(t);break;case x.ui.keyCode.LEFT:this.collapse(t);break;case x.ui.keyCode.RIGHT:this.active&&!this.active.is(\".ui-state-disabled\")&&this.expand(t);break;case x.ui.keyCode.ENTER:case x.ui.keyCode.SPACE:this._activate(t);break;case x.ui.keyCode.ESCAPE:this.collapse(t);break;default:e=this.previousFilter||\"\",s=n=!1,i=96<=t.keyCode&&t.keyCode<=105?(t.keyCode-96).toString():String.fromCharCode(t.keyCode),clearTimeout(this.filterTimer),i===e?s=!0:i=e+i,e=this._filterMenuItems(i),(e=s&&-1!==e.index(this.active.next())?this.active.nextAll(\".ui-menu-item\"):e).length||(i=String.fromCharCode(t.keyCode),e=this._filterMenuItems(i)),e.length?(this.focus(t,e),this.previousFilter=i,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}n&&t.preventDefault()},_activate:function(t){this.active&&!this.active.is(\".ui-state-disabled\")&&(this.active.children(\"[aria-haspopup='true']\").length?this.expand(t):this.select(t))},refresh:function(){var t,e,s=this,n=this.options.icons.submenu,i=this.element.find(this.options.menus);this._toggleClass(\"ui-menu-icons\",null,!!this.element.find(\".ui-icon\").length),e=i.filter(\":not(.ui-menu)\").hide().attr({role:this.options.role,\"aria-hidden\":\"true\",\"aria-expanded\":\"false\"}).each(function(){var t=x(this),e=t.prev(),i=x(\"<span>\").data(\"ui-menu-submenu-caret\",!0);s._addClass(i,\"ui-menu-icon\",\"ui-icon \"+n),e.attr(\"aria-haspopup\",\"true\").prepend(i),t.attr(\"aria-labelledby\",e.attr(\"id\"))}),this._addClass(e,\"ui-menu\",\"ui-widget ui-widget-content ui-front\"),(t=i.add(this.element).find(this.options.items)).not(\".ui-menu-item\").each(function(){var t=x(this);s._isDivider(t)&&s._addClass(t,\"ui-menu-divider\",\"ui-widget-content\")}),i=(e=t.not(\".ui-menu-item, .ui-menu-divider\")).children().not(\".ui-menu\").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(e,\"ui-menu-item\")._addClass(i,\"ui-menu-item-wrapper\"),t.filter(\".ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this.active&&!x.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:\"menuitem\",listbox:\"option\"}[this.options.role]},_setOption:function(t,e){var i;\"icons\"===t&&(i=this.element.find(\".ui-menu-icon\"),this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr(\"aria-disabled\",String(t)),this._toggleClass(null,\"ui-state-disabled\",!!t)},focus:function(t,e){var i;this.blur(t,t&&\"focus\"===t.type),this._scrollIntoView(e),this.active=e.first(),i=this.active.children(\".ui-menu-item-wrapper\"),this._addClass(i,null,\"ui-state-active\"),this.options.role&&this.element.attr(\"aria-activedescendant\",i.attr(\"id\")),i=this.active.parent().closest(\".ui-menu-item\").children(\".ui-menu-item-wrapper\"),this._addClass(i,null,\"ui-state-active\"),t&&\"keydown\"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),(i=e.children(\".ui-menu\")).length&&t&&\/^mouse\/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger(\"focus\",t,{item:e})},_scrollIntoView:function(t){var e,i,s;this._hasScroll()&&(i=parseFloat(x.css(this.activeMenu[0],\"borderTopWidth\"))||0,s=parseFloat(x.css(this.activeMenu[0],\"paddingTop\"))||0,e=t.offset().top-this.activeMenu.offset().top-i-s,i=this.activeMenu.scrollTop(),s=this.activeMenu.height(),t=t.outerHeight(),e<0?this.activeMenu.scrollTop(i+e):s<e+t&&this.activeMenu.scrollTop(i+e-s+t))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(\".ui-menu-item-wrapper\"),null,\"ui-state-active\"),this._trigger(\"blur\",t,{item:this.active}),this.active=null)},_startOpening:function(t){clearTimeout(this.timer),\"true\"===t.attr(\"aria-hidden\")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(t){var e=x.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(\".ui-menu\").not(t.parents(\".ui-menu\")).hide().attr(\"aria-hidden\",\"true\"),t.show().removeAttr(\"aria-hidden\").attr(\"aria-expanded\",\"true\").position(e)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var t=i?this.element:x(e&&e.target).closest(this.element.find(\".ui-menu\"));t.length||(t=this.element),this._close(t),this.blur(e),this._removeClass(t.find(\".ui-state-active\"),null,\"ui-state-active\"),this.activeMenu=t},i?0:this.delay)},_close:function(t){(t=t||(this.active?this.active.parent():this.element)).find(\".ui-menu\").hide().attr(\"aria-hidden\",\"true\").attr(\"aria-expanded\",\"false\")},_closeOnDocumentClick:function(t){return!x(t.target).closest(\".ui-menu\").length},_isDivider:function(t){return!\/[^\\-\\u2014\\u2013\\s]\/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(\".ui-menu-item\",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this._menuItems(this.active.children(\".ui-menu\")).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move(\"next\",\"first\",t)},previous:function(t){this._move(\"prev\",\"last\",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(\".ui-menu-item\").length},isLastItem:function(){return this.active&&!this.active.nextAll(\".ui-menu-item\").length},_menuItems:function(t){return(t||this.element).find(this.options.items).filter(\".ui-menu-item\")},_move:function(t,e,i){var s;(s=this.active?\"first\"===t||\"last\"===t?this.active[\"first\"===t?\"prevAll\":\"nextAll\"](\".ui-menu-item\").last():this.active[t+\"All\"](\".ui-menu-item\").first():s)&&s.length&&this.active||(s=this._menuItems(this.activeMenu)[e]()),this.focus(i,s)},nextPage:function(t){var e,i,s;this.active?this.isLastItem()||(this._hasScroll()?(i=this.active.offset().top,s=this.element.innerHeight(),0===x.fn.jquery.indexOf(\"3.2.\")&&(s+=this.element[0].offsetHeight-this.element.outerHeight()),this.active.nextAll(\".ui-menu-item\").each(function(){return(e=x(this)).offset().top-i-s<0}),this.focus(t,e)):this.focus(t,this._menuItems(this.activeMenu)[this.active?\"last\":\"first\"]())):this.next(t)},previousPage:function(t){var e,i,s;this.active?this.isFirstItem()||(this._hasScroll()?(i=this.active.offset().top,s=this.element.innerHeight(),0===x.fn.jquery.indexOf(\"3.2.\")&&(s+=this.element[0].offsetHeight-this.element.outerHeight()),this.active.prevAll(\".ui-menu-item\").each(function(){return 0<(e=x(this)).offset().top-i+s}),this.focus(t,e)):this.focus(t,this._menuItems(this.activeMenu).first())):this.next(t)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop(\"scrollHeight\")},select:function(t){this.active=this.active||x(t.target).closest(\".ui-menu-item\");var e={item:this.active};this.active.has(\".ui-menu\").length||this.collapseAll(t,!0),this._trigger(\"select\",t,e)},_filterMenuItems:function(t){var t=t.replace(\/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]\/g,\"\\\\$&\"),e=new RegExp(\"^\"+t,\"i\");return this.activeMenu.find(this.options.items).filter(\".ui-menu-item\").filter(function(){return e.test(String.prototype.trim.call(x(this).children(\".ui-menu-item-wrapper\").text()))})}});x.widget(\"ui.autocomplete\",{version:\"1.13.1\",defaultElement:\"<input>\",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:\"left top\",at:\"left bottom\",collision:\"none\"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,liveRegionTimer:null,_create:function(){var i,s,n,t=this.element[0].nodeName.toLowerCase(),e=\"textarea\"===t,t=\"input\"===t;this.isMultiLine=e||!t&&this._isContentEditable(this.element),this.valueMethod=this.element[e||t?\"val\":\"text\"],this.isNewMenu=!0,this._addClass(\"ui-autocomplete-input\"),this.element.attr(\"autocomplete\",\"off\"),this._on(this.element,{keydown:function(t){if(this.element.prop(\"readOnly\"))s=n=i=!0;else{s=n=i=!1;var e=x.ui.keyCode;switch(t.keyCode){case e.PAGE_UP:i=!0,this._move(\"previousPage\",t);break;case e.PAGE_DOWN:i=!0,this._move(\"nextPage\",t);break;case e.UP:i=!0,this._keyEvent(\"previous\",t);break;case e.DOWN:i=!0,this._keyEvent(\"next\",t);break;case e.ENTER:this.menu.active&&(i=!0,t.preventDefault(),this.menu.select(t));break;case e.TAB:this.menu.active&&this.menu.select(t);break;case e.ESCAPE:this.menu.element.is(\":visible\")&&(this.isMultiLine||this._value(this.term),this.close(t),t.preventDefault());break;default:s=!0,this._searchTimeout(t)}}},keypress:function(t){if(i)return i=!1,void(this.isMultiLine&&!this.menu.element.is(\":visible\")||t.preventDefault());if(!s){var e=x.ui.keyCode;switch(t.keyCode){case e.PAGE_UP:this._move(\"previousPage\",t);break;case e.PAGE_DOWN:this._move(\"nextPage\",t);break;case e.UP:this._keyEvent(\"previous\",t);break;case e.DOWN:this._keyEvent(\"next\",t)}}},input:function(t){if(n)return n=!1,void t.preventDefault();this._searchTimeout(t)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){clearTimeout(this.searching),this.close(t),this._change(t)}}),this._initSource(),this.menu=x(\"<ul>\").appendTo(this._appendTo()).menu({role:null}).hide().attr({unselectable:\"on\"}).menu(\"instance\"),this._addClass(this.menu.element,\"ui-autocomplete\",\"ui-front\"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault()},menufocus:function(t,e){var i,s;if(this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&\/^mouse\/.test(t.originalEvent.type)))return this.menu.blur(),void this.document.one(\"mousemove\",function(){x(t.target).trigger(t.originalEvent)});s=e.item.data(\"ui-autocomplete-item\"),!1!==this._trigger(\"focus\",t,{item:s})&&t.originalEvent&&\/^key\/.test(t.originalEvent.type)&&this._value(s.value),(i=e.item.attr(\"aria-label\")||s.value)&&String.prototype.trim.call(i).length&&(clearTimeout(this.liveRegionTimer),this.liveRegionTimer=this._delay(function(){this.liveRegion.html(x(\"<div>\").text(i))},100))},menuselect:function(t,e){var i=e.item.data(\"ui-autocomplete-item\"),s=this.previous;this.element[0]!==x.ui.safeActiveElement(this.document[0])&&(this.element.trigger(\"focus\"),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=i})),!1!==this._trigger(\"select\",t,{item:i})&&this._value(i.value),this.term=this._value(),this.close(t),this.selectedItem=i}}),this.liveRegion=x(\"<div>\",{role:\"status\",\"aria-live\":\"assertive\",\"aria-relevant\":\"additions\"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,\"ui-helper-hidden-accessible\"),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr(\"autocomplete\"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),\"source\"===t&&this._initSource(),\"appendTo\"===t&&this.menu.element.appendTo(this._appendTo()),\"disabled\"===t&&e&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(t){var e=this.menu.element[0];return t.target===this.element[0]||t.target===e||x.contains(e,t.target)},_closeOnClickOutside:function(t){this._isEventTargetInWidget(t)||this.close()},_appendTo:function(){var t=this.options.appendTo;return t=!(t=!(t=t&&(t.jquery||t.nodeType?x(t):this.document.find(t).eq(0)))||!t[0]?this.element.closest(\".ui-front, dialog\"):t).length?this.document[0].body:t},_initSource:function(){var i,s,n=this;Array.isArray(this.options.source)?(i=this.options.source,this.source=function(t,e){e(x.ui.autocomplete.filter(i,t.term))}):\"string\"==typeof this.options.source?(s=this.options.source,this.source=function(t,e){n.xhr&&n.xhr.abort(),n.xhr=x.ajax({url:s,data:t,dataType:\"json\",success:function(t){e(t)},error:function(){e([])}})}):this.source=this.options.source},_searchTimeout:function(s){clearTimeout(this.searching),this.searching=this._delay(function(){var t=this.term===this._value(),e=this.menu.element.is(\":visible\"),i=s.altKey||s.ctrlKey||s.metaKey||s.shiftKey;t&&(e||i)||(this.selectedItem=null,this.search(null,s))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):!1!==this._trigger(\"search\",e)?this._search(t):void 0},_search:function(t){this.pending++,this._addClass(\"ui-autocomplete-loading\"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass(\"ui-autocomplete-loading\")}.bind(this)},__response:function(t){t=t&&this._normalize(t),this._trigger(\"response\",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger(\"open\")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this._off(this.document,\"mousedown\"),this.menu.element.is(\":visible\")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger(\"close\",t))},_change:function(t){this.previous!==this._value()&&this._trigger(\"change\",t,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:x.map(t,function(t){return\"string\"==typeof t?{label:t,value:t}:x.extend({},t,{label:t.label||t.value,value:t.value||t.label})})},_suggest:function(t){var e=this.menu.element.empty();this._renderMenu(e,t),this.isNewMenu=!0,this.menu.refresh(),e.show(),this._resizeMenu(),e.position(x.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:\"_closeOnClickOutside\"})},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width(\"\").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(i,t){var s=this;x.each(t,function(t,e){s._renderItemData(i,e)})},_renderItemData:function(t,e){return this._renderItem(t,e).data(\"ui-autocomplete-item\",e)},_renderItem:function(t,e){return x(\"<li>\").append(x(\"<div>\").text(e.label)).appendTo(t)},_move:function(t,e){if(this.menu.element.is(\":visible\"))return this.menu.isFirstItem()&&\/^previous\/.test(t)||this.menu.isLastItem()&&\/^next\/.test(t)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[t](e);this.search(null,e)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){this.isMultiLine&&!this.menu.element.is(\":visible\")||(this._move(t,e),e.preventDefault())},_isContentEditable:function(t){if(!t.length)return!1;var e=t.prop(\"contentEditable\");return\"inherit\"===e?this._isContentEditable(t.parent()):\"true\"===e}}),x.extend(x.ui.autocomplete,{escapeRegex:function(t){return t.replace(\/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]\/g,\"\\\\$&\")},filter:function(t,e){var i=new RegExp(x.ui.autocomplete.escapeRegex(e),\"i\");return x.grep(t,function(t){return i.test(t.label||t.value||t)})}}),x.widget(\"ui.autocomplete\",x.ui.autocomplete,{options:{messages:{noResults:\"No search results.\",results:function(t){return t+(1<t?\" results are\":\" result is\")+\" available, use up and down arrow keys to navigate.\"}}},__response:function(t){var e;this._superApply(arguments),this.options.disabled||this.cancelSearch||(e=t&&t.length?this.options.messages.results(t.length):this.options.messages.noResults,clearTimeout(this.liveRegionTimer),this.liveRegionTimer=this._delay(function(){this.liveRegion.html(x(\"<div>\").text(e))},100))}});x.ui.autocomplete});\n\\ No newline at end of file\n+!function(t){\"use strict\";\"function\"==typeof define&&define.amd?define([\"jquery\"],t):t(jQuery)}(function(x){\"use strict\";x.ui=x.ui||{};x.ui.version=\"1.13.2\";var n,i=0,l=Array.prototype.hasOwnProperty,a=Array.prototype.slice;x.cleanData=(n=x.cleanData,function(t){for(var e,i,s=0;null!=(i=t[s]);s++)(e=x._data(i,\"events\"))&&e.remove&&x(i).triggerHandler(\"remove\");n(t)}),x.widget=function(t,i,e){var s,n,o,l={},a=t.split(\".\")[0],r=a+\"-\"+(t=t.split(\".\")[1]);return e||(e=i,i=x.Widget),Array.isArray(e)&&(e=x.extend.apply(null,[{}].concat(e))),x.expr.pseudos[r.toLowerCase()]=function(t){return!!x.data(t,r)},x[a]=x[a]||{},s=x[a][t],n=x[a][t]=function(t,e){if(!this||!this._createWidget)return new n(t,e);arguments.length&&this._createWidget(t,e)},x.extend(n,s,{version:e.version,_proto:x.extend({},e),_childConstructors:[]}),(o=new i).options=x.widget.extend({},o.options),x.each(e,function(e,s){function n(){return i.prototype[e].apply(this,arguments)}function o(t){return i.prototype[e].apply(this,t)}l[e]=\"function\"==typeof s?function(){var t,e=this._super,i=this._superApply;return this._super=n,this._superApply=o,t=s.apply(this,arguments),this._super=e,this._superApply=i,t}:s}),n.prototype=x.widget.extend(o,{widgetEventPrefix:s&&o.widgetEventPrefix||t},l,{constructor:n,namespace:a,widgetName:t,widgetFullName:r}),s?(x.each(s._childConstructors,function(t,e){var i=e.prototype;x.widget(i.namespace+\".\"+i.widgetName,n,e._proto)}),delete s._childConstructors):i._childConstructors.push(n),x.widget.bridge(t,n),n},x.widget.extend=function(t){for(var e,i,s=a.call(arguments,1),n=0,o=s.length;n<o;n++)for(e in s[n])i=s[n][e],l.call(s[n],e)&&void 0!==i&&(x.isPlainObject(i)?t[e]=x.isPlainObject(t[e])?x.widget.extend({},t[e],i):x.widget.extend({},i):t[e]=i);return t},x.widget.bridge=function(o,e){var l=e.prototype.widgetFullName||o;x.fn[o]=function(i){var t=\"string\"==typeof i,s=a.call(arguments,1),n=this;return t?this.length||\"instance\"!==i?this.each(function(){var t,e=x.data(this,l);return\"instance\"===i?(n=e,!1):e?\"function\"!=typeof e[i]||\"_\"===i.charAt(0)?x.error(\"no such method '\"+i+\"' for \"+o+\" widget instance\"):(t=e[i].apply(e,s))!==e&&void 0!==t?(n=t&&t.jquery?n.pushStack(t.get()):t,!1):void 0:x.error(\"cannot call methods on \"+o+\" prior to initialization; attempted to call method '\"+i+\"'\")}):n=void 0:(s.length&&(i=x.widget.extend.apply(null,[i].concat(s))),this.each(function(){var t=x.data(this,l);t?(t.option(i||{}),t._init&&t._init()):x.data(this,l,new e(i,this))})),n}},x.Widget=function(){},x.Widget._childConstructors=[],x.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{classes:{},disabled:!1,create:null},_createWidget:function(t,e){e=x(e||this.defaultElement||this)[0],this.element=x(e),this.uuid=i++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.bindings=x(),this.hoverable=x(),this.focusable=x(),this.classesElementLookup={},e!==this&&(x.data(e,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===e&&this.destroy()}}),this.document=x(e.style?e.ownerDocument:e.document||e),this.window=x(this.document[0].defaultView||this.document[0].parentWindow)),this.options=x.widget.extend({},this.options,this._getCreateOptions(),t),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:x.noop,_create:x.noop,_init:x.noop,destroy:function(){var i=this;this._destroy(),x.each(this.classesElementLookup,function(t,e){i._removeClass(e,t)}),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr(\"aria-disabled\"),this.bindings.off(this.eventNamespace)},_destroy:x.noop,widget:function(){return this.element},option:function(t,e){var i,s,n,o=t;if(0===arguments.length)return x.widget.extend({},this.options);if(\"string\"==typeof t)if(o={},t=(i=t.split(\".\")).shift(),i.length){for(s=o[t]=x.widget.extend({},this.options[t]),n=0;n<i.length-1;n++)s[i[n]]=s[i[n]]||{},s=s[i[n]];if(t=i.pop(),1===arguments.length)return void 0===s[t]?null:s[t];s[t]=e}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];o[t]=e}return this._setOptions(o),this},_setOptions:function(t){for(var e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return\"classes\"===t&&this._setOptionClasses(e),this.options[t]=e,\"disabled\"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(t){var e,i,s;for(e in t)s=this.classesElementLookup[e],t[e]!==this.options.classes[e]&&s&&s.length&&(i=x(s.get()),this._removeClass(s,e),i.addClass(this._classes({element:i,keys:e,classes:t,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+\"-disabled\",null,!!t),t&&(this._removeClass(this.hoverable,null,\"ui-state-hover\"),this._removeClass(this.focusable,null,\"ui-state-focus\"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(n){var o=[],l=this;function t(t,e){for(var i,s=0;s<t.length;s++)i=l.classesElementLookup[t[s]]||x(),i=n.add?(function(){var i=[];n.element.each(function(t,e){x.map(l.classesElementLookup,function(t){return t}).some(function(t){return t.is(e)})||i.push(e)}),l._on(x(i),{remove:\"_untrackClassesElement\"})}(),x(x.uniqueSort(i.get().concat(n.element.get())))):x(i.not(n.element).get()),l.classesElementLookup[t[s]]=i,o.push(t[s]),e&&n.classes[t[s]]&&o.push(n.classes[t[s]])}return(n=x.extend({element:this.element,classes:this.options.classes||{}},n)).keys&&t(n.keys.match(\/\\S+\/g)||[],!0),n.extra&&t(n.extra.match(\/\\S+\/g)||[]),o.join(\" \")},_untrackClassesElement:function(i){var s=this;x.each(s.classesElementLookup,function(t,e){-1!==x.inArray(i.target,e)&&(s.classesElementLookup[t]=x(e.not(i.target).get()))}),this._off(x(i.target))},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,s){var n=\"string\"==typeof t||null===t,i={extra:n?e:i,keys:n?t:e,element:n?this.element:t,add:s=\"boolean\"==typeof s?s:i};return i.element.toggleClass(this._classes(i),s),this},_on:function(n,o,t){var l,a=this;\"boolean\"!=typeof n&&(t=o,o=n,n=!1),t?(o=l=x(o),this.bindings=this.bindings.add(o)):(t=o,o=this.element,l=this.widget()),x.each(t,function(t,e){function i(){if(n||!0!==a.options.disabled&&!x(this).hasClass(\"ui-state-disabled\"))return(\"string\"==typeof e?a[e]:e).apply(a,arguments)}\"string\"!=typeof e&&(i.guid=e.guid=e.guid||i.guid||x.guid++);var s=t.match(\/^([\\w:-]*)\\s*(.*)$\/),t=s[1]+a.eventNamespace,s=s[2];s?l.on(t,s,i):o.on(t,i)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.off(e),this.bindings=x(this.bindings.not(t).get()),this.focusable=x(this.focusable.not(t).get()),this.hoverable=x(this.hoverable.not(t).get())},_delay:function(t,e){var i=this;return setTimeout(function(){return(\"string\"==typeof t?i[t]:t).apply(i,arguments)},e||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){this._addClass(x(t.currentTarget),null,\"ui-state-hover\")},mouseleave:function(t){this._removeClass(x(t.currentTarget),null,\"ui-state-hover\")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){this._addClass(x(t.currentTarget),null,\"ui-state-focus\")},focusout:function(t){this._removeClass(x(t.currentTarget),null,\"ui-state-focus\")}})},_trigger:function(t,e,i){var s,n,o=this.options[t];if(i=i||{},(e=x.Event(e)).type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),e.target=this.element[0],n=e.originalEvent)for(s in n)s in e||(e[s]=n[s]);return this.element.trigger(e,i),!(\"function\"==typeof o&&!1===o.apply(this.element[0],[e].concat(i))||e.isDefaultPrevented())}},x.each({show:\"fadeIn\",hide:\"fadeOut\"},function(o,l){x.Widget.prototype[\"_\"+o]=function(e,t,i){var s,n=(t=\"string\"==typeof t?{effect:t}:t)?!0!==t&&\"number\"!=typeof t&&t.effect||l:o;\"number\"==typeof(t=t||{})?t={duration:t}:!0===t&&(t={}),s=!x.isEmptyObject(t),t.complete=i,t.delay&&e.delay(t.delay),s&&x.effects&&x.effects.effect[n]?e[o](t):n!==o&&e[n]?e[n](t.duration,t.easing,i):e.queue(function(t){x(this)[o](),i&&i.call(e[0]),t()})}});var s,C,E,o,r,u,h,c,k;x.widget;function T(t,e,i){return[parseFloat(t[0])*(c.test(t[0])?e\/100:1),parseFloat(t[1])*(c.test(t[1])?i\/100:1)]}function A(t,e){return parseInt(x.css(t,e),10)||0}function W(t){return null!=t&&t===t.window}C=Math.max,E=Math.abs,o=\/left|center|right\/,r=\/top|center|bottom\/,u=\/[\\+\\-]\\d+(\\.[\\d]+)?%?\/,h=\/^\\w+\/,c=\/%$\/,k=x.fn.position,x.position={scrollbarWidth:function(){if(void 0!==s)return s;var t,e=x(\"<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'><\/div><\/div>\"),i=e.children()[0];return x(\"body\").append(e),t=i.offsetWidth,e.css(\"overflow\",\"scroll\"),t===(i=i.offsetWidth)&&(i=e[0].clientWidth),e.remove(),s=t-i},getScrollInfo:function(t){var e=t.isWindow||t.isDocument?\"\":t.element.css(\"overflow-x\"),i=t.isWindow||t.isDocument?\"\":t.element.css(\"overflow-y\"),e=\"scroll\"===e||\"auto\"===e&&t.width<t.element[0].scrollWidth;return{width:\"scroll\"===i||\"auto\"===i&&t.height<t.element[0].scrollHeight?x.position.scrollbarWidth():0,height:e?x.position.scrollbarWidth():0}},getWithinInfo:function(t){var e=x(t||window),i=W(e[0]),s=!!e[0]&&9===e[0].nodeType;return{element:e,isWindow:i,isDocument:s,offset:!i&&!s?x(t).offset():{left:0,top:0},scrollLeft:e.scrollLeft(),scrollTop:e.scrollTop(),width:e.outerWidth(),height:e.outerHeight()}}},x.fn.position=function(c){if(!c||!c.of)return k.apply(this,arguments);var d,f,m,p,v,t,g=\"string\"==typeof(c=x.extend({},c)).of?x(document).find(c.of):x(c.of),_=x.position.getWithinInfo(c.within),y=x.position.getScrollInfo(_),b=(c.collision||\"flip\").split(\" \"),w={},e=9===(t=(e=g)[0]).nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:W(t)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:t.preventDefault?{width:0,height:0,offset:{top:t.pageY,left:t.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()};return g[0].preventDefault&&(c.at=\"left top\"),f=e.width,m=e.height,v=x.extend({},p=e.offset),x.each([\"my\",\"at\"],function(){var t,e,i=(c[this]||\"\").split(\" \");(i=1===i.length?o.test(i[0])?i.concat([\"center\"]):r.test(i[0])?[\"center\"].concat(i):[\"center\",\"center\"]:i)[0]=o.test(i[0])?i[0]:\"center\",i[1]=r.test(i[1])?i[1]:\"center\",t=u.exec(i[0]),e=u.exec(i[1]),w[this]=[t?t[0]:0,e?e[0]:0],c[this]=[h.exec(i[0])[0],h.exec(i[1])[0]]}),1===b.length&&(b[1]=b[0]),\"right\"===c.at[0]?v.left+=f:\"center\"===c.at[0]&&(v.left+=f\/2),\"bottom\"===c.at[1]?v.top+=m:\"center\"===c.at[1]&&(v.top+=m\/2),d=T(w.at,f,m),v.left+=d[0],v.top+=d[1],this.each(function(){var i,t,l=x(this),a=l.outerWidth(),r=l.outerHeight(),e=A(this,\"marginLeft\"),s=A(this,\"marginTop\"),n=a+e+A(this,\"marginRight\")+y.width,o=r+s+A(this,\"marginBottom\")+y.height,u=x.extend({},v),h=T(w.my,l.outerWidth(),l.outerHeight());\"right\"===c.my[0]?u.left-=a:\"center\"===c.my[0]&&(u.left-=a\/2),\"bottom\"===c.my[1]?u.top-=r:\"center\"===c.my[1]&&(u.top-=r\/2),u.left+=h[0],u.top+=h[1],i={marginLeft:e,marginTop:s},x.each([\"left\",\"top\"],function(t,e){x.ui.position[b[t]]&&x.ui.position[b[t]][e](u,{targetWidth:f,targetHeight:m,elemWidth:a,elemHeight:r,collisionPosition:i,collisionWidth:n,collisionHeight:o,offset:[d[0]+h[0],d[1]+h[1]],my:c.my,at:c.at,within:_,elem:l})}),c.using&&(t=function(t){var e=p.left-u.left,i=e+f-a,s=p.top-u.top,n=s+m-r,o={target:{element:g,left:p.left,top:p.top,width:f,height:m},element:{element:l,left:u.left,top:u.top,width:a,height:r},horizontal:i<0?\"left\":0<e?\"right\":\"center\",vertical:n<0?\"top\":0<s?\"bottom\":\"middle\"};f<a&&E(e+i)<f&&(o.horizontal=\"center\"),m<r&&E(s+n)<m&&(o.vertical=\"middle\"),C(E(e),E(i))>C(E(s),E(n))?o.important=\"horizontal\":o.important=\"vertical\",c.using.call(this,t,o)}),l.offset(x.extend(u,{using:t}))})},x.ui.position={fit:{left:function(t,e){var i=e.within,s=i.isWindow?i.scrollLeft:i.offset.left,n=i.width,o=t.left-e.collisionPosition.marginLeft,l=s-o,a=o+e.collisionWidth-n-s;e.collisionWidth>n?0<l&&a<=0?(i=t.left+l+e.collisionWidth-n-s,t.left+=l-i):t.left=!(0<a&&l<=0)&&a<l?s+n-e.collisionWidth:s:0<l?t.left+=l:0<a?t.left-=a:t.left=C(t.left-o,t.left)},top:function(t,e){var i=e.within,s=i.isWindow?i.scrollTop:i.offset.top,n=e.within.height,o=t.top-e.collisionPosition.marginTop,l=s-o,a=o+e.collisionHeight-n-s;e.collisionHeight>n?0<l&&a<=0?(i=t.top+l+e.collisionHeight-n-s,t.top+=l-i):t.top=!(0<a&&l<=0)&&a<l?s+n-e.collisionHeight:s:0<l?t.top+=l:0<a?t.top-=a:t.top=C(t.top-o,t.top)}},flip:{left:function(t,e){var i=e.within,s=i.offset.left+i.scrollLeft,n=i.width,o=i.isWindow?i.scrollLeft:i.offset.left,l=t.left-e.collisionPosition.marginLeft,a=l-o,r=l+e.collisionWidth-n-o,u=\"left\"===e.my[0]?-e.elemWidth:\"right\"===e.my[0]?e.elemWidth:0,i=\"left\"===e.at[0]?e.targetWidth:\"right\"===e.at[0]?-e.targetWidth:0,l=-2*e.offset[0];a<0?((s=t.left+u+i+l+e.collisionWidth-n-s)<0||s<E(a))&&(t.left+=u+i+l):0<r&&(0<(o=t.left-e.collisionPosition.marginLeft+u+i+l-o)||E(o)<r)&&(t.left+=u+i+l)},top:function(t,e){var i=e.within,s=i.offset.top+i.scrollTop,n=i.height,o=i.isWindow?i.scrollTop:i.offset.top,l=t.top-e.collisionPosition.marginTop,a=l-o,r=l+e.collisionHeight-n-o,u=\"top\"===e.my[1]?-e.elemHeight:\"bottom\"===e.my[1]?e.elemHeight:0,i=\"top\"===e.at[1]?e.targetHeight:\"bottom\"===e.at[1]?-e.targetHeight:0,l=-2*e.offset[1];a<0?((s=t.top+u+i+l+e.collisionHeight-n-s)<0||s<E(a))&&(t.top+=u+i+l):0<r&&(0<(o=t.top-e.collisionPosition.marginTop+u+i+l-o)||E(o)<r)&&(t.top+=u+i+l)}},flipfit:{left:function(){x.ui.position.flip.left.apply(this,arguments),x.ui.position.fit.left.apply(this,arguments)},top:function(){x.ui.position.flip.top.apply(this,arguments),x.ui.position.fit.top.apply(this,arguments)}}};var t;x.ui.position,x.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},x.fn.extend({uniqueId:(t=0,function(){return this.each(function(){this.id||(this.id=\"ui-id-\"+ ++t)})}),removeUniqueId:function(){return this.each(function(){\/^ui-id-\\d+$\/.test(this.id)&&x(this).removeAttr(\"id\")})}}),x.ui.safeActiveElement=function(e){var i;try{i=e.activeElement}catch(t){i=e.body}return i=!(i=i||e.body).nodeName?e.body:i},x.widget(\"ui.menu\",{version:\"1.13.2\",defaultElement:\"<ul>\",delay:300,options:{icons:{submenu:\"ui-icon-caret-1-e\"},items:\"> *\",menus:\"ul\",position:{my:\"left top\",at:\"right top\"},role:\"menu\",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.lastMousePosition={x:null,y:null},this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass(\"ui-menu\",\"ui-widget ui-widget-content\"),this._on({\"mousedown .ui-menu-item\":function(t){t.preventDefault(),this._activateItem(t)},\"click .ui-menu-item\":function(t){var e=x(t.target),i=x(x.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&e.not(\".ui-state-disabled\").length&&(this.select(t),t.isPropagationStopped()||(this.mouseHandled=!0),e.has(\".ui-menu\").length?this.expand(t):!this.element.is(\":focus\")&&i.closest(\".ui-menu\").length&&(this.element.trigger(\"focus\",[!0]),this.active&&1===this.active.parents(\".ui-menu\").length&&clearTimeout(this.timer)))},\"mouseenter .ui-menu-item\":\"_activateItem\",\"mousemove .ui-menu-item\":\"_activateItem\",mouseleave:\"collapseAll\",\"mouseleave .ui-menu\":\"collapseAll\",focus:function(t,e){var i=this.active||this._menuItems().first();e||this.focus(t,i)},blur:function(t){this._delay(function(){x.contains(this.element[0],x.ui.safeActiveElement(this.document[0]))||this.collapseAll(t)})},keydown:\"_keydown\"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t,!0),this.mouseHandled=!1}})},_activateItem:function(t){var e,i;this.previousFilter||t.clientX===this.lastMousePosition.x&&t.clientY===this.lastMousePosition.y||(this.lastMousePosition={x:t.clientX,y:t.clientY},e=x(t.target).closest(\".ui-menu-item\"),i=x(t.currentTarget),e[0]===i[0]&&(i.is(\".ui-state-active\")||(this._removeClass(i.siblings().children(\".ui-state-active\"),null,\"ui-state-active\"),this.focus(t,i))))},_destroy:function(){var t=this.element.find(\".ui-menu-item\").removeAttr(\"role aria-disabled\").children(\".ui-menu-item-wrapper\").removeUniqueId().removeAttr(\"tabIndex role aria-haspopup\");this.element.removeAttr(\"aria-activedescendant\").find(\".ui-menu\").addBack().removeAttr(\"role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex\").removeUniqueId().show(),t.children().each(function(){var t=x(this);t.data(\"ui-menu-submenu-caret\")&&t.remove()})},_keydown:function(t){var e,i,s,n=!0;switch(t.keyCode){case x.ui.keyCode.PAGE_UP:this.previousPage(t);break;case x.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case x.ui.keyCode.HOME:this._move(\"first\",\"first\",t);break;case x.ui.keyCode.END:this._move(\"last\",\"last\",t);break;case x.ui.keyCode.UP:this.previous(t);break;case x.ui.keyCode.DOWN:this.next(t);break;case x.ui.keyCode.LEFT:this.collapse(t);break;case x.ui.keyCode.RIGHT:this.active&&!this.active.is(\".ui-state-disabled\")&&this.expand(t);break;case x.ui.keyCode.ENTER:case x.ui.keyCode.SPACE:this._activate(t);break;case x.ui.keyCode.ESCAPE:this.collapse(t);break;default:e=this.previousFilter||\"\",s=n=!1,i=96<=t.keyCode&&t.keyCode<=105?(t.keyCode-96).toString():String.fromCharCode(t.keyCode),clearTimeout(this.filterTimer),i===e?s=!0:i=e+i,e=this._filterMenuItems(i),(e=s&&-1!==e.index(this.active.next())?this.active.nextAll(\".ui-menu-item\"):e).length||(i=String.fromCharCode(t.keyCode),e=this._filterMenuItems(i)),e.length?(this.focus(t,e),this.previousFilter=i,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}n&&t.preventDefault()},_activate:function(t){this.active&&!this.active.is(\".ui-state-disabled\")&&(this.active.children(\"[aria-haspopup='true']\").length?this.expand(t):this.select(t))},refresh:function(){var t,e,s=this,n=this.options.icons.submenu,i=this.element.find(this.options.menus);this._toggleClass(\"ui-menu-icons\",null,!!this.element.find(\".ui-icon\").length),e=i.filter(\":not(.ui-menu)\").hide().attr({role:this.options.role,\"aria-hidden\":\"true\",\"aria-expanded\":\"false\"}).each(function(){var t=x(this),e=t.prev(),i=x(\"<span>\").data(\"ui-menu-submenu-caret\",!0);s._addClass(i,\"ui-menu-icon\",\"ui-icon \"+n),e.attr(\"aria-haspopup\",\"true\").prepend(i),t.attr(\"aria-labelledby\",e.attr(\"id\"))}),this._addClass(e,\"ui-menu\",\"ui-widget ui-widget-content ui-front\"),(t=i.add(this.element).find(this.options.items)).not(\".ui-menu-item\").each(function(){var t=x(this);s._isDivider(t)&&s._addClass(t,\"ui-menu-divider\",\"ui-widget-content\")}),i=(e=t.not(\".ui-menu-item, .ui-menu-divider\")).children().not(\".ui-menu\").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(e,\"ui-menu-item\")._addClass(i,\"ui-menu-item-wrapper\"),t.filter(\".ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this.active&&!x.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:\"menuitem\",listbox:\"option\"}[this.options.role]},_setOption:function(t,e){var i;\"icons\"===t&&(i=this.element.find(\".ui-menu-icon\"),this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr(\"aria-disabled\",String(t)),this._toggleClass(null,\"ui-state-disabled\",!!t)},focus:function(t,e){var i;this.blur(t,t&&\"focus\"===t.type),this._scrollIntoView(e),this.active=e.first(),i=this.active.children(\".ui-menu-item-wrapper\"),this._addClass(i,null,\"ui-state-active\"),this.options.role&&this.element.attr(\"aria-activedescendant\",i.attr(\"id\")),i=this.active.parent().closest(\".ui-menu-item\").children(\".ui-menu-item-wrapper\"),this._addClass(i,null,\"ui-state-active\"),t&&\"keydown\"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),(i=e.children(\".ui-menu\")).length&&t&&\/^mouse\/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger(\"focus\",t,{item:e})},_scrollIntoView:function(t){var e,i,s;this._hasScroll()&&(i=parseFloat(x.css(this.activeMenu[0],\"borderTopWidth\"))||0,s=parseFloat(x.css(this.activeMenu[0],\"paddingTop\"))||0,e=t.offset().top-this.activeMenu.offset().top-i-s,i=this.activeMenu.scrollTop(),s=this.activeMenu.height(),t=t.outerHeight(),e<0?this.activeMenu.scrollTop(i+e):s<e+t&&this.activeMenu.scrollTop(i+e-s+t))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(\".ui-menu-item-wrapper\"),null,\"ui-state-active\"),this._trigger(\"blur\",t,{item:this.active}),this.active=null)},_startOpening:function(t){clearTimeout(this.timer),\"true\"===t.attr(\"aria-hidden\")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(t){var e=x.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(\".ui-menu\").not(t.parents(\".ui-menu\")).hide().attr(\"aria-hidden\",\"true\"),t.show().removeAttr(\"aria-hidden\").attr(\"aria-expanded\",\"true\").position(e)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var t=i?this.element:x(e&&e.target).closest(this.element.find(\".ui-menu\"));t.length||(t=this.element),this._close(t),this.blur(e),this._removeClass(t.find(\".ui-state-active\"),null,\"ui-state-active\"),this.activeMenu=t},i?0:this.delay)},_close:function(t){(t=t||(this.active?this.active.parent():this.element)).find(\".ui-menu\").hide().attr(\"aria-hidden\",\"true\").attr(\"aria-expanded\",\"false\")},_closeOnDocumentClick:function(t){return!x(t.target).closest(\".ui-menu\").length},_isDivider:function(t){return!\/[^\\-\\u2014\\u2013\\s]\/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(\".ui-menu-item\",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this._menuItems(this.active.children(\".ui-menu\")).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move(\"next\",\"first\",t)},previous:function(t){this._move(\"prev\",\"last\",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(\".ui-menu-item\").length},isLastItem:function(){return this.active&&!this.active.nextAll(\".ui-menu-item\").length},_menuItems:function(t){return(t||this.element).find(this.options.items).filter(\".ui-menu-item\")},_move:function(t,e,i){var s;(s=this.active?\"first\"===t||\"last\"===t?this.active[\"first\"===t?\"prevAll\":\"nextAll\"](\".ui-menu-item\").last():this.active[t+\"All\"](\".ui-menu-item\").first():s)&&s.length&&this.active||(s=this._menuItems(this.activeMenu)[e]()),this.focus(i,s)},nextPage:function(t){var e,i,s;this.active?this.isLastItem()||(this._hasScroll()?(i=this.active.offset().top,s=this.element.innerHeight(),0===x.fn.jquery.indexOf(\"3.2.\")&&(s+=this.element[0].offsetHeight-this.element.outerHeight()),this.active.nextAll(\".ui-menu-item\").each(function(){return(e=x(this)).offset().top-i-s<0}),this.focus(t,e)):this.focus(t,this._menuItems(this.activeMenu)[this.active?\"last\":\"first\"]())):this.next(t)},previousPage:function(t){var e,i,s;this.active?this.isFirstItem()||(this._hasScroll()?(i=this.active.offset().top,s=this.element.innerHeight(),0===x.fn.jquery.indexOf(\"3.2.\")&&(s+=this.element[0].offsetHeight-this.element.outerHeight()),this.active.prevAll(\".ui-menu-item\").each(function(){return 0<(e=x(this)).offset().top-i+s}),this.focus(t,e)):this.focus(t,this._menuItems(this.activeMenu).first())):this.next(t)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop(\"scrollHeight\")},select:function(t){this.active=this.active||x(t.target).closest(\".ui-menu-item\");var e={item:this.active};this.active.has(\".ui-menu\").length||this.collapseAll(t,!0),this._trigger(\"select\",t,e)},_filterMenuItems:function(t){var t=t.replace(\/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]\/g,\"\\\\$&\"),e=new RegExp(\"^\"+t,\"i\");return this.activeMenu.find(this.options.items).filter(\".ui-menu-item\").filter(function(){return e.test(String.prototype.trim.call(x(this).children(\".ui-menu-item-wrapper\").text()))})}});x.widget(\"ui.autocomplete\",{version:\"1.13.2\",defaultElement:\"<input>\",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:\"left top\",at:\"left bottom\",collision:\"none\"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,liveRegionTimer:null,_create:function(){var i,s,n,t=this.element[0].nodeName.toLowerCase(),e=\"textarea\"===t,t=\"input\"===t;this.isMultiLine=e||!t&&this._isContentEditable(this.element),this.valueMethod=this.element[e||t?\"val\":\"text\"],this.isNewMenu=!0,this._addClass(\"ui-autocomplete-input\"),this.element.attr(\"autocomplete\",\"off\"),this._on(this.element,{keydown:function(t){if(this.element.prop(\"readOnly\"))s=n=i=!0;else{s=n=i=!1;var e=x.ui.keyCode;switch(t.keyCode){case e.PAGE_UP:i=!0,this._move(\"previousPage\",t);break;case e.PAGE_DOWN:i=!0,this._move(\"nextPage\",t);break;case e.UP:i=!0,this._keyEvent(\"previous\",t);break;case e.DOWN:i=!0,this._keyEvent(\"next\",t);break;case e.ENTER:this.menu.active&&(i=!0,t.preventDefault(),this.menu.select(t));break;case e.TAB:this.menu.active&&this.menu.select(t);break;case e.ESCAPE:this.menu.element.is(\":visible\")&&(this.isMultiLine||this._value(this.term),this.close(t),t.preventDefault());break;default:s=!0,this._searchTimeout(t)}}},keypress:function(t){if(i)return i=!1,void(this.isMultiLine&&!this.menu.element.is(\":visible\")||t.preventDefault());if(!s){var e=x.ui.keyCode;switch(t.keyCode){case e.PAGE_UP:this._move(\"previousPage\",t);break;case e.PAGE_DOWN:this._move(\"nextPage\",t);break;case e.UP:this._keyEvent(\"previous\",t);break;case e.DOWN:this._keyEvent(\"next\",t)}}},input:function(t){if(n)return n=!1,void t.preventDefault();this._searchTimeout(t)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){clearTimeout(this.searching),this.close(t),this._change(t)}}),this._initSource(),this.menu=x(\"<ul>\").appendTo(this._appendTo()).menu({role:null}).hide().attr({unselectable:\"on\"}).menu(\"instance\"),this._addClass(this.menu.element,\"ui-autocomplete\",\"ui-front\"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault()},menufocus:function(t,e){var i,s;if(this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&\/^mouse\/.test(t.originalEvent.type)))return this.menu.blur(),void this.document.one(\"mousemove\",function(){x(t.target).trigger(t.originalEvent)});s=e.item.data(\"ui-autocomplete-item\"),!1!==this._trigger(\"focus\",t,{item:s})&&t.originalEvent&&\/^key\/.test(t.originalEvent.type)&&this._value(s.value),(i=e.item.attr(\"aria-label\")||s.value)&&String.prototype.trim.call(i).length&&(clearTimeout(this.liveRegionTimer),this.liveRegionTimer=this._delay(function(){this.liveRegion.html(x(\"<div>\").text(i))},100))},menuselect:function(t,e){var i=e.item.data(\"ui-autocomplete-item\"),s=this.previous;this.element[0]!==x.ui.safeActiveElement(this.document[0])&&(this.element.trigger(\"focus\"),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=i})),!1!==this._trigger(\"select\",t,{item:i})&&this._value(i.value),this.term=this._value(),this.close(t),this.selectedItem=i}}),this.liveRegion=x(\"<div>\",{role:\"status\",\"aria-live\":\"assertive\",\"aria-relevant\":\"additions\"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,\"ui-helper-hidden-accessible\"),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr(\"autocomplete\"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),\"source\"===t&&this._initSource(),\"appendTo\"===t&&this.menu.element.appendTo(this._appendTo()),\"disabled\"===t&&e&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(t){var e=this.menu.element[0];return t.target===this.element[0]||t.target===e||x.contains(e,t.target)},_closeOnClickOutside:function(t){this._isEventTargetInWidget(t)||this.close()},_appendTo:function(){var t=this.options.appendTo;return t=!(t=!(t=t&&(t.jquery||t.nodeType?x(t):this.document.find(t).eq(0)))||!t[0]?this.element.closest(\".ui-front, dialog\"):t).length?this.document[0].body:t},_initSource:function(){var i,s,n=this;Array.isArray(this.options.source)?(i=this.options.source,this.source=function(t,e){e(x.ui.autocomplete.filter(i,t.term))}):\"string\"==typeof this.options.source?(s=this.options.source,this.source=function(t,e){n.xhr&&n.xhr.abort(),n.xhr=x.ajax({url:s,data:t,dataType:\"json\",success:function(t){e(t)},error:function(){e([])}})}):this.source=this.options.source},_searchTimeout:function(s){clearTimeout(this.searching),this.searching=this._delay(function(){var t=this.term===this._value(),e=this.menu.element.is(\":visible\"),i=s.altKey||s.ctrlKey||s.metaKey||s.shiftKey;t&&(e||i)||(this.selectedItem=null,this.search(null,s))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):!1!==this._trigger(\"search\",e)?this._search(t):void 0},_search:function(t){this.pending++,this._addClass(\"ui-autocomplete-loading\"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass(\"ui-autocomplete-loading\")}.bind(this)},__response:function(t){t=t&&this._normalize(t),this._trigger(\"response\",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger(\"open\")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this._off(this.document,\"mousedown\"),this.menu.element.is(\":visible\")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger(\"close\",t))},_change:function(t){this.previous!==this._value()&&this._trigger(\"change\",t,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:x.map(t,function(t){return\"string\"==typeof t?{label:t,value:t}:x.extend({},t,{label:t.label||t.value,value:t.value||t.label})})},_suggest:function(t){var e=this.menu.element.empty();this._renderMenu(e,t),this.isNewMenu=!0,this.menu.refresh(),e.show(),this._resizeMenu(),e.position(x.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:\"_closeOnClickOutside\"})},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width(\"\").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(i,t){var s=this;x.each(t,function(t,e){s._renderItemData(i,e)})},_renderItemData:function(t,e){return this._renderItem(t,e).data(\"ui-autocomplete-item\",e)},_renderItem:function(t,e){return x(\"<li>\").append(x(\"<div>\").text(e.label)).appendTo(t)},_move:function(t,e){if(this.menu.element.is(\":visible\"))return this.menu.isFirstItem()&&\/^previous\/.test(t)||this.menu.isLastItem()&&\/^next\/.test(t)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[t](e);this.search(null,e)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){this.isMultiLine&&!this.menu.element.is(\":visible\")||(this._move(t,e),e.preventDefault())},_isContentEditable:function(t){if(!t.length)return!1;var e=t.prop(\"contentEditable\");return\"inherit\"===e?this._isContentEditable(t.parent()):\"true\"===e}}),x.extend(x.ui.autocomplete,{escapeRegex:function(t){return t.replace(\/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]\/g,\"\\\\$&\")},filter:function(t,e){var i=new RegExp(x.ui.autocomplete.escapeRegex(e),\"i\");return x.grep(t,function(t){return i.test(t.label||t.value||t)})}}),x.widget(\"ui.autocomplete\",x.ui.autocomplete,{options:{messages:{noResults:\"No search results.\",results:function(t){return t+(1<t?\" results are\":\" result is\")+\" available, use up and down arrow keys to navigate.\"}}},__response:function(t){var e;this._superApply(arguments),this.options.disabled||this.cancelSearch||(e=t&&t.length?this.options.messages.results(t.length):this.options.messages.noResults,clearTimeout(this.liveRegionTimer),this.liveRegionTimer=this._delay(function(){this.liveRegion.html(x(\"<div>\").text(e))},100))}});x.ui.autocomplete});\n\\ No newline at end of file\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.min.js","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## jQuery UI v1.12.1\n+## jQuery UI v1.13.2\n","filename":"src\/jdk.javadoc\/share\/legal\/jqueryUI.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        if (!sun.hotspot.code.Compiler.isC1Enabled()) {\n+        if (!jdk.test.whitebox.code.Compiler.isC1Enabled()) {\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/AbstractRootMethod.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        if (!sun.hotspot.code.Compiler.isC1Enabled()) {\n+        if (!jdk.test.whitebox.code.Compiler.isC1Enabled()) {\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/DefaultRootMethod.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-import sun.hotspot.code.BlobType;\n-import sun.hotspot.code.CodeBlob;\n+import jdk.test.whitebox.code.BlobType;\n+import jdk.test.whitebox.code.CodeBlob;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/OverflowCodeCacheTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/TestSegmentedCodeCacheOption.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/codeheapsize\/CodeCacheFreeSpaceRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/codeheapsize\/GenericCodeHeapSizeRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/codeheapsize\/JVMStartupRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/codeheapsize\/TestCodeHeapSizeOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/common\/CodeCacheCLITestCase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/common\/CodeCacheInfoFormatter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/common\/CodeCacheOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/printcodecache\/PrintCodeCacheRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/printcodecache\/TestPrintCodeCacheOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/BeanTypeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-import sun.hotspot.code.BlobType;\n-import sun.hotspot.code.CodeBlob;\n+import jdk.test.whitebox.code.BlobType;\n+import jdk.test.whitebox.code.CodeBlob;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/CodeCacheUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/CodeHeapBeanPresenceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/GetUsageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/InitialAndMaxUsageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/ManagerNamesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/MemoryPoolsPresenceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/PeakUsageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/PoolsIndependenceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/ThresholdNotificationsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/UsageThresholdExceededTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/UsageThresholdIncreasedTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/jmx\/UsageThresholdNotExceededTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/RandomAllocationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/ReturnBlobToWrongHeapTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/Test8292158.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/TestAESMain.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/TestCipherBlockChainingEncrypt.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/base64\/TestBase64.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestAndnI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestAndnL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsiI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsiL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsmskI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsmskL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsrI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsrL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBzhiI2L.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestLzcntI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestLzcntL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestTzcntI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestTzcntL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n-import sun.hotspot.code.NMethod;\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.code.NMethod;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/BmiIntrinsicBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/klass\/CastNullCheckDroppingsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/AllocateCompileIdTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/CompileCodeTestCase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/DisassembleCodeBlobTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/ExecuteInstalledCodeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/HasCompiledCodeForOSRTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/InvalidateInstalledCodeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitAArch64DefaultFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8303279\n+ * @summary C2: crash in SubTypeCheckNode::sub() at IGVN split if\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:StressSeed=598200189 TestCrashAtIGVNSplitIfSubType\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN TestCrashAtIGVNSplitIfSubType\n+ *\/\n+\n+public class TestCrashAtIGVNSplitIfSubType {\n+    private static volatile int barrier;\n+\n+    public static void main(String[] args) {\n+        A a = new A();\n+        B b = new B();\n+        for (int i = 0; i < 20_000; i++) {\n+            test(a);\n+            test(b);\n+            testHelper1(null, 0);\n+        }\n+    }\n+\n+    private static void test(Object o) {\n+        int i = 2;\n+        for (; i < 4; i *= 2) {\n+\n+        }\n+        o = testHelper1(o, i);\n+        if (o instanceof A) {\n+            barrier = 0x42;\n+        }\n+    }\n+\n+    private static Object testHelper1(Object o, int i) {\n+        if (i < 3) {\n+            o = null;\n+        } else {\n+            if (o == null) {\n+            }\n+        }\n+        if (i < 2) {\n+            barrier = 42;\n+        }\n+        return o;\n+    }\n+\n+    private static class A {\n+    }\n+\n+    private static class B {\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/splitif\/TestCrashAtIGVNSplitIfSubType.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -55,1 +55,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/UnsafeGetStableArrayElement.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/AllocationCodeBlobTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/CompilerWhiteBoxTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/DeoptimizeFramesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/ForceNMethodSweepTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-import sun.hotspot.code.BlobType;\n-import sun.hotspot.code.CodeBlob;\n+import jdk.test.whitebox.code.BlobType;\n+import jdk.test.whitebox.code.CodeBlob;\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/GetCodeHeapEntriesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-import sun.hotspot.code.BlobType;\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.BlobType;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/GetNMethodTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/gc\/TestConcurrentGCBreakpoints.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/gc\/TestJNIWeak\/TestJNIWeak.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/gc\/TestSmallHeap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelGCThreads.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelRefProc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestDynamicNumberOfGCThreads.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestInitialGCThreadLogging.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestGCId.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n@@ -42,1 +42,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/UseCompressedOops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-import sun.hotspot.code.Compiler;\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.code.Compiler;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/runtime\/MemberName\/MemberNameLeak.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/CommandLineFlagCombo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,2 +134,2 @@\n-    \/\/ we support only jdk\/test\/whitebox\/WhiteBox$WhiteBoxPermission and\n-    \/\/ sun\/hotspot\/WhiteBox$WhiteBoxPermission. See JDK-8199290\n+    \/\/ we support only jdk\/test\/whitebox\/WhiteBox$WhiteBoxPermission.\n+    \/\/ See JDK-8199290\n@@ -139,2 +139,0 @@\n-        boolean seenOldWb = false;\n-        boolean seenOldWbInner = false;\n@@ -145,2 +143,0 @@\n-        final String oldWb = \"sun\/hotspot\/WhiteBox\";\n-        final String oldWbInner = oldWb + \"$WhiteBoxPermission\";\n@@ -156,2 +152,0 @@\n-            case oldWb:      seenOldWb      = true; break;\n-            case oldWbInner: seenOldWbInner = true; break;\n@@ -163,4 +157,0 @@\n-        if (seenOldWb && !seenOldWbInner) {\n-            list.add(oldWbInner);\n-        }\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/JarBuilder.java","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/CDSStreamTestDriver.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/MainModuleOnly.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/MainModuleOnly.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,2 +74,2 @@\n-import sun.hotspot.code.Compiler;\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.code.Compiler;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/IncompatibleOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/runtime\/stringtable\/StringTableCleaningTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n@@ -32,1 +32,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestUniverse.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n@@ -66,1 +66,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t001\/TestDriver.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -640,2 +640,0 @@\n-sun\/security\/tools\/jarsigner\/warnings\/BadKeyUsageTest.java      8026393 generic-all\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-import sun.hotspot.gc.GC;\n+import jdk.test.whitebox.gc.GC;\n","filename":"test\/jdk\/com\/sun\/jdi\/EATests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-\n@@ -35,0 +34,1 @@\n+import javax.security.auth.login.FailedLoginException;\n@@ -37,0 +37,4 @@\n+\n+    private static final String UNIX_MODULE = \"UnixLoginModule\";\n+    private static final String NT_MODULE = \"NTLoginModule\";\n+\n@@ -39,13 +43,4 @@\n-                \"UnixLoginModule\", \"optional\",\n-                \"NTLoginModule\", \"optional\",\n-                \"SolarisLoginModule\", \"optional\");\n-        try {\n-            login(\"windows\", \"NTLoginModule\", \"required\");\n-            login(\"unix\", \"UnixLoginModule\", \"required\");\n-            login(\"solaris\", \"SolarisLoginModule\", \"required\");\n-        } catch (Exception e) {\n-            e.printStackTrace(System.out);\n-            if (e.toString().contains(\"UnsatisfiedLinkError\")) {\n-                throw new Exception(\"This is ugly\");\n-            }\n-        }\n+                UNIX_MODULE, \"optional\",\n+                NT_MODULE, \"optional\");\n+        login(\"windows\", NT_MODULE, \"required\");\n+        login(\"unix\", UNIX_MODULE, \"required\");\n@@ -59,3 +54,4 @@\n-        for (int i=0; i<conf.length; i+=2) {\n-            sb.append(\"    com.sun.security.auth.module.\" + conf[i]\n-                    + \" \" + conf[i+1] + \";\\n\");\n+        for (int i = 0; i < conf.length; i += 2) {\n+            sb.append(\"    com.sun.security.auth.module.\")\n+                    .append(conf[i]).append(\" \")\n+                    .append(conf[i + 1]).append(\";\\n\");\n@@ -70,3 +66,12 @@\n-        LoginContext lc = new LoginContext(\"hello\");\n-        lc.login();\n-        System.out.println(lc.getSubject());\n+        try {\n+            LoginContext lc = new LoginContext(\"hello\");\n+            lc.login();\n+            System.out.println(lc.getSubject());\n+            lc.logout();\n+        } catch (FailedLoginException e) {\n+            \/\/ This exception can occur in other platform module than the running one.\n+            if(e.getMessage().startsWith(\"Failed in attempt to import\")) {\n+                System.out.println(\"Expected Exception found.\");\n+                e.printStackTrace(System.out);\n+            }\n+        }\n","filename":"test\/jdk\/com\/sun\/security\/auth\/module\/AllPlatforms.java","additions":26,"deletions":21,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/jdk\/java\/lang\/management\/MemoryMXBean\/CollectionUsageThreshold.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/jdk\/java\/lang\/management\/MemoryMXBean\/LowMemoryTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-import sun.hotspot.code.Compiler;\n+import jdk.test.whitebox.code.Compiler;\n","filename":"test\/jdk\/java\/lang\/management\/MemoryMXBean\/ResetPeakMemoryUsage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-import sun.hotspot.code.BlobType;\n+import jdk.test.whitebox.code.BlobType;\n","filename":"test\/jdk\/jdk\/jfr\/event\/compiler\/TestCodeCacheFull.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,2 +38,2 @@\n-import sun.hotspot.code.BlobType;\n-import sun.hotspot.code.CodeBlob;\n+import jdk.test.whitebox.code.BlobType;\n+import jdk.test.whitebox.code.CodeBlob;\n","filename":"test\/jdk\/jdk\/jfr\/event\/compiler\/TestCodeSweeper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-import sun.hotspot.code.NMethod;\n+import jdk.test.whitebox.code.NMethod;\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestJFRIntrinsic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test id=without-inner-class\n- * @summary verify that sun.hotspot.WhiteBox class still can be used\n- * @library \/test\/lib\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI OldWhiteBox\n- *\/\n-\n-\/*\n- * @test id=with-inner-class\n- * @summary verify that sun.hotspot.WhiteBox class still can be used\n- * @library \/test\/lib\n- * @build sun.hotspot.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox sun.hotspot.WhiteBox$WhiteBoxPermission\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI OldWhiteBox\n- *\/\n-\n-import sun.hotspot.WhiteBox;\n-\n-public class OldWhiteBox {\n-    public static void main(String[] args) {\n-        WhiteBox wb = WhiteBox.getWhiteBox();\n-        if (wb.getHeapOopSize() < 0) {\n-            throw new Error(\"wb.getHeapOopSize() < 0\");\n-        }\n-    }\n-}\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/OldWhiteBox.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-import sun.hotspot.cpuinfo.CPUInfo;\n+import jdk.test.whitebox.cpuinfo.CPUInfo;\n","filename":"test\/lib\/jdk\/test\/lib\/cli\/predicate\/CPUSpecificPredicate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,2 +105,2 @@\n-    \/\/ we support only jdk.test.whitebox.WhiteBox$WhiteBoxPermission and\n-    \/\/ jdk\/test\/whitebox\/WhiteBox$WhiteBoxPermission. See JDK-8199290\n+    \/\/ we support only jdk.test.whitebox.WhiteBox$WhiteBoxPermission.\n+    \/\/ See JDK-8199290\n@@ -110,2 +110,0 @@\n-        boolean seenOldWb = false;\n-        boolean seenOldWbInner = false;\n@@ -114,2 +112,0 @@\n-        final String oldWb = \"sun.hotspot.WhiteBox\";\n-        final String oldWbInner = oldWb + \"$WhiteBoxPermission\";\n@@ -125,2 +121,0 @@\n-            case oldWb:      seenOldWb      = true; break;\n-            case oldWbInner: seenOldWbInner = true; break;\n@@ -132,4 +126,0 @@\n-        if (seenOldWb && !seenOldWbInner) {\n-            list.add(oldWbInner);\n-        }\n-\n","filename":"test\/lib\/jdk\/test\/lib\/helpers\/ClassFileInstaller.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1,650 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.hotspot;\n-\n-import java.lang.management.MemoryUsage;\n-import java.lang.reflect.Executable;\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.function.BiFunction;\n-import java.util.function.Function;\n-import java.security.BasicPermission;\n-import java.util.Objects;\n-\n-import jdk.test.whitebox.parser.DiagnosticCommand;\n-\n-@Deprecated\n-public class WhiteBox {\n-  @SuppressWarnings(\"serial\")\n-  public static class WhiteBoxPermission extends BasicPermission {\n-    public WhiteBoxPermission(String s) {\n-      super(s);\n-    }\n-  }\n-\n-  private WhiteBox() {}\n-  private static final WhiteBox instance = new WhiteBox();\n-  private static native void registerNatives();\n-\n-  \/**\n-   * Returns the singleton WhiteBox instance.\n-   *\n-   * The returned WhiteBox object should be carefully guarded\n-   * by the caller, since it can be used to read and write data\n-   * at arbitrary memory addresses. It must never be passed to\n-   * untrusted code.\n-   *\/\n-  public synchronized static WhiteBox getWhiteBox() {\n-    @SuppressWarnings(\"removal\")\n-    SecurityManager sm = System.getSecurityManager();\n-    if (sm != null) {\n-      throw new SecurityException(\"can't use old whitebox with SecurityManager, please switch to jdk.test.whitebox.WhiteBox\");\n-    }\n-    return instance;\n-  }\n-\n-  static {\n-    registerNatives();\n-  }\n-\n-  \/\/ Get the maximum heap size supporting COOPs\n-  public native long getCompressedOopsMaxHeapSize();\n-  \/\/ Arguments\n-  public native void printHeapSizes();\n-\n-  \/\/ Memory\n-  private native long getObjectAddress0(Object o);\n-  public           long getObjectAddress(Object o) {\n-    Objects.requireNonNull(o);\n-    return getObjectAddress0(o);\n-  }\n-\n-  public native int  getHeapOopSize();\n-  public native int  getVMPageSize();\n-  public native long getVMAllocationGranularity();\n-  public native long getVMLargePageSize();\n-  public native long getHeapSpaceAlignment();\n-  public native long getHeapAlignment();\n-\n-  private native boolean isObjectInOldGen0(Object o);\n-  public         boolean isObjectInOldGen(Object o) {\n-    Objects.requireNonNull(o);\n-    return isObjectInOldGen0(o);\n-  }\n-\n-  private native long getObjectSize0(Object o);\n-  public         long getObjectSize(Object o) {\n-    Objects.requireNonNull(o);\n-    return getObjectSize0(o);\n-  }\n-\n-  \/\/ Runtime\n-  \/\/ Make sure class name is in the correct format\n-  public int countAliveClasses(String name) {\n-    return countAliveClasses0(name.replace('.', '\/'));\n-  }\n-  private native int countAliveClasses0(String name);\n-\n-  public boolean isClassAlive(String name) {\n-    return countAliveClasses(name) != 0;\n-  }\n-\n-  public  native int getSymbolRefcount(String name);\n-\n-  public native boolean deflateIdleMonitors();\n-\n-  private native boolean isMonitorInflated0(Object obj);\n-  public         boolean isMonitorInflated(Object obj) {\n-    Objects.requireNonNull(obj);\n-    return isMonitorInflated0(obj);\n-  }\n-\n-  public native void forceSafepoint();\n-\n-  private native long getConstantPool0(Class<?> aClass);\n-  public         long getConstantPool(Class<?> aClass) {\n-    Objects.requireNonNull(aClass);\n-    return getConstantPool0(aClass);\n-  }\n-\n-  private native int getConstantPoolCacheIndexTag0();\n-  public         int getConstantPoolCacheIndexTag() {\n-    return getConstantPoolCacheIndexTag0();\n-  }\n-\n-  private native int getConstantPoolCacheLength0(Class<?> aClass);\n-  public         int getConstantPoolCacheLength(Class<?> aClass) {\n-    Objects.requireNonNull(aClass);\n-    return getConstantPoolCacheLength0(aClass);\n-  }\n-\n-  private native int remapInstructionOperandFromCPCache0(Class<?> aClass, int index);\n-  public         int remapInstructionOperandFromCPCache(Class<?> aClass, int index) {\n-    Objects.requireNonNull(aClass);\n-    return remapInstructionOperandFromCPCache0(aClass, index);\n-  }\n-\n-  private native int encodeConstantPoolIndyIndex0(int index);\n-  public         int encodeConstantPoolIndyIndex(int index) {\n-    return encodeConstantPoolIndyIndex0(index);\n-  }\n-\n-  \/\/ JVMTI\n-  private native void addToBootstrapClassLoaderSearch0(String segment);\n-  public         void addToBootstrapClassLoaderSearch(String segment){\n-    Objects.requireNonNull(segment);\n-    addToBootstrapClassLoaderSearch0(segment);\n-  }\n-\n-  private native void addToSystemClassLoaderSearch0(String segment);\n-  public         void addToSystemClassLoaderSearch(String segment) {\n-    Objects.requireNonNull(segment);\n-    addToSystemClassLoaderSearch0(segment);\n-  }\n-\n-  \/\/ G1\n-  public native boolean g1InConcurrentMark();\n-  public native boolean g1HasRegionsToUncommit();\n-  private native boolean g1IsHumongous0(Object o);\n-  public         boolean g1IsHumongous(Object o) {\n-    Objects.requireNonNull(o);\n-    return g1IsHumongous0(o);\n-  }\n-\n-  private native boolean g1BelongsToHumongousRegion0(long adr);\n-  public         boolean g1BelongsToHumongousRegion(long adr) {\n-    if (adr == 0) {\n-      throw new IllegalArgumentException(\"adr argument should not be null\");\n-    }\n-    return g1BelongsToHumongousRegion0(adr);\n-  }\n-\n-\n-  private native boolean g1BelongsToFreeRegion0(long adr);\n-  public         boolean g1BelongsToFreeRegion(long adr) {\n-    if (adr == 0) {\n-      throw new IllegalArgumentException(\"adr argument should not be null\");\n-    }\n-    return g1BelongsToFreeRegion0(adr);\n-  }\n-\n-  public native long    g1NumMaxRegions();\n-  public native long    g1NumFreeRegions();\n-  public native int     g1RegionSize();\n-  public native MemoryUsage g1AuxiliaryMemoryUsage();\n-  private  native Object[]    parseCommandLine0(String commandline, char delim, DiagnosticCommand[] args);\n-  public          Object[]    parseCommandLine(String commandline, char delim, DiagnosticCommand[] args) {\n-    Objects.requireNonNull(args);\n-    return parseCommandLine0(commandline, delim, args);\n-  }\n-\n-  public native int g1ActiveMemoryNodeCount();\n-  public native int[] g1MemoryNodeIds();\n-\n-  \/\/ Parallel GC\n-  public native long psVirtualSpaceAlignment();\n-  public native long psHeapGenerationAlignment();\n-\n-  \/**\n-   * Enumerates old regions with liveness less than specified and produces some statistics\n-   * @param liveness percent of region's liveness (live_objects \/ total_region_size * 100).\n-   * @return long[3] array where long[0] - total count of old regions\n-   *                             long[1] - total memory of old regions\n-   *                             long[2] - lowest estimation of total memory of old regions to be freed (non-full\n-   *                             regions are not included)\n-   *\/\n-  public native long[] g1GetMixedGCInfo(int liveness);\n-\n-  \/\/ NMT\n-  public native long NMTMalloc(long size);\n-  public native void NMTFree(long mem);\n-  public native long NMTReserveMemory(long size);\n-  public native long NMTAttemptReserveMemoryAt(long addr, long size);\n-  public native void NMTCommitMemory(long addr, long size);\n-  public native void NMTUncommitMemory(long addr, long size);\n-  public native void NMTReleaseMemory(long addr, long size);\n-  public native long NMTMallocWithPseudoStack(long size, int index);\n-  public native long NMTMallocWithPseudoStackAndType(long size, int index, int type);\n-  public native int NMTGetHashSize();\n-  public native long NMTNewArena(long initSize);\n-  public native void NMTFreeArena(long arena);\n-  public native void NMTArenaMalloc(long arena, long size);\n-\n-  \/\/ Compiler\n-  public native boolean isC2OrJVMCIIncluded();\n-  public native boolean isJVMCISupportedByGC();\n-\n-  public native int     matchesMethod(Executable method, String pattern);\n-  public native int     matchesInline(Executable method, String pattern);\n-  public native boolean shouldPrintAssembly(Executable method, int comp_level);\n-  public native int     deoptimizeFrames(boolean makeNotEntrant);\n-  public native boolean isFrameDeoptimized(int depth);\n-  public native void    deoptimizeAll();\n-\n-  public        boolean isMethodCompiled(Executable method) {\n-    return isMethodCompiled(method, false \/*not osr*\/);\n-  }\n-  private native boolean isMethodCompiled0(Executable method, boolean isOsr);\n-  public         boolean isMethodCompiled(Executable method, boolean isOsr){\n-    Objects.requireNonNull(method);\n-    return isMethodCompiled0(method, isOsr);\n-  }\n-  public        boolean isMethodCompilable(Executable method) {\n-    return isMethodCompilable(method, -1 \/*any*\/);\n-  }\n-  public        boolean isMethodCompilable(Executable method, int compLevel) {\n-    return isMethodCompilable(method, compLevel, false \/*not osr*\/);\n-  }\n-  private native boolean isMethodCompilable0(Executable method, int compLevel, boolean isOsr);\n-  public         boolean isMethodCompilable(Executable method, int compLevel, boolean isOsr) {\n-    Objects.requireNonNull(method);\n-    return isMethodCompilable0(method, compLevel, isOsr);\n-  }\n-  private native boolean isMethodQueuedForCompilation0(Executable method);\n-  public         boolean isMethodQueuedForCompilation(Executable method) {\n-    Objects.requireNonNull(method);\n-    return isMethodQueuedForCompilation0(method);\n-  }\n-  \/\/ Determine if the compiler corresponding to the compilation level 'compLevel'\n-  \/\/ and to the compilation context 'compilation_context' provides an intrinsic\n-  \/\/ for the method 'method'. An intrinsic is available for method 'method' if:\n-  \/\/  - the intrinsic is enabled (by using the appropriate command-line flag) and\n-  \/\/  - the platform on which the VM is running provides the instructions necessary\n-  \/\/    for the compiler to generate the intrinsic code.\n-  \/\/\n-  \/\/ The compilation context is related to using the DisableIntrinsic flag on a\n-  \/\/ per-method level, see hotspot\/src\/share\/vm\/compiler\/abstractCompiler.hpp\n-  \/\/ for more details.\n-  public boolean isIntrinsicAvailable(Executable method,\n-                                      Executable compilationContext,\n-                                      int compLevel) {\n-      Objects.requireNonNull(method);\n-      return isIntrinsicAvailable0(method, compilationContext, compLevel);\n-  }\n-  \/\/ If usage of the DisableIntrinsic flag is not expected (or the usage can be ignored),\n-  \/\/ use the below method that does not require the compilation context as argument.\n-  public boolean isIntrinsicAvailable(Executable method, int compLevel) {\n-      return isIntrinsicAvailable(method, null, compLevel);\n-  }\n-  private native boolean isIntrinsicAvailable0(Executable method,\n-                                               Executable compilationContext,\n-                                               int compLevel);\n-  public        int     deoptimizeMethod(Executable method) {\n-    return deoptimizeMethod(method, false \/*not osr*\/);\n-  }\n-  private native int     deoptimizeMethod0(Executable method, boolean isOsr);\n-  public         int     deoptimizeMethod(Executable method, boolean isOsr) {\n-    Objects.requireNonNull(method);\n-    return deoptimizeMethod0(method, isOsr);\n-  }\n-  public        void    makeMethodNotCompilable(Executable method) {\n-    makeMethodNotCompilable(method, -1 \/*any*\/);\n-  }\n-  public        void    makeMethodNotCompilable(Executable method, int compLevel) {\n-    makeMethodNotCompilable(method, compLevel, false \/*not osr*\/);\n-  }\n-  private native void    makeMethodNotCompilable0(Executable method, int compLevel, boolean isOsr);\n-  public         void    makeMethodNotCompilable(Executable method, int compLevel, boolean isOsr) {\n-    Objects.requireNonNull(method);\n-    makeMethodNotCompilable0(method, compLevel, isOsr);\n-  }\n-  public        int     getMethodCompilationLevel(Executable method) {\n-    return getMethodCompilationLevel(method, false \/*not osr*\/);\n-  }\n-  private native int     getMethodCompilationLevel0(Executable method, boolean isOsr);\n-  public         int     getMethodCompilationLevel(Executable method, boolean isOsr) {\n-    Objects.requireNonNull(method);\n-    return getMethodCompilationLevel0(method, isOsr);\n-  }\n-  private native boolean testSetDontInlineMethod0(Executable method, boolean value);\n-  public         boolean testSetDontInlineMethod(Executable method, boolean value) {\n-    Objects.requireNonNull(method);\n-    return testSetDontInlineMethod0(method, value);\n-  }\n-  public        int     getCompileQueuesSize() {\n-    return getCompileQueueSize(-1 \/*any*\/);\n-  }\n-  public native int     getCompileQueueSize(int compLevel);\n-  private native boolean testSetForceInlineMethod0(Executable method, boolean value);\n-  public         boolean testSetForceInlineMethod(Executable method, boolean value) {\n-    Objects.requireNonNull(method);\n-    return testSetForceInlineMethod0(method, value);\n-  }\n-  public        boolean enqueueMethodForCompilation(Executable method, int compLevel) {\n-    return enqueueMethodForCompilation(method, compLevel, -1 \/*InvocationEntryBci*\/);\n-  }\n-  private native boolean enqueueMethodForCompilation0(Executable method, int compLevel, int entry_bci);\n-  public  boolean enqueueMethodForCompilation(Executable method, int compLevel, int entry_bci) {\n-    Objects.requireNonNull(method);\n-    return enqueueMethodForCompilation0(method, compLevel, entry_bci);\n-  }\n-  private native boolean enqueueInitializerForCompilation0(Class<?> aClass, int compLevel);\n-  public  boolean enqueueInitializerForCompilation(Class<?> aClass, int compLevel) {\n-    Objects.requireNonNull(aClass);\n-    return enqueueInitializerForCompilation0(aClass, compLevel);\n-  }\n-  private native void    clearMethodState0(Executable method);\n-  public  native void    markMethodProfiled(Executable method);\n-  public         void    clearMethodState(Executable method) {\n-    Objects.requireNonNull(method);\n-    clearMethodState0(method);\n-  }\n-  public native void    lockCompilation();\n-  public native void    unlockCompilation();\n-  private native int     getMethodEntryBci0(Executable method);\n-  public         int     getMethodEntryBci(Executable method) {\n-    Objects.requireNonNull(method);\n-    return getMethodEntryBci0(method);\n-  }\n-  private native Object[] getNMethod0(Executable method, boolean isOsr);\n-  public         Object[] getNMethod(Executable method, boolean isOsr) {\n-    Objects.requireNonNull(method);\n-    return getNMethod0(method, isOsr);\n-  }\n-  public native long    allocateCodeBlob(int size, int type);\n-  public        long    allocateCodeBlob(long size, int type) {\n-      int intSize = (int) size;\n-      if ((long) intSize != size || size < 0) {\n-          throw new IllegalArgumentException(\n-                \"size argument has illegal value \" + size);\n-      }\n-      return allocateCodeBlob( intSize, type);\n-  }\n-  public native void    freeCodeBlob(long addr);\n-  public native void    forceNMethodSweep();\n-  public native Object[] getCodeHeapEntries(int type);\n-  public native int     getCompilationActivityMode();\n-  private native long getMethodData0(Executable method);\n-  public         long getMethodData(Executable method) {\n-    Objects.requireNonNull(method);\n-    return getMethodData0(method);\n-  }\n-  public native Object[] getCodeBlob(long addr);\n-\n-  private native void clearInlineCaches0(boolean preserve_static_stubs);\n-  public void clearInlineCaches() {\n-    clearInlineCaches0(false);\n-  }\n-  public void clearInlineCaches(boolean preserve_static_stubs) {\n-    clearInlineCaches0(preserve_static_stubs);\n-  }\n-\n-  \/\/ Intered strings\n-  public native boolean isInStringTable(String str);\n-\n-  \/\/ Memory\n-  public native void readReservedMemory();\n-  public native long allocateMetaspace(ClassLoader classLoader, long size);\n-  public native long incMetaspaceCapacityUntilGC(long increment);\n-  public native long metaspaceCapacityUntilGC();\n-  public native long metaspaceSharedRegionAlignment();\n-\n-  \/\/ Metaspace Arena Tests\n-  public native long createMetaspaceTestContext(long commit_limit, long reserve_limit);\n-  public native void destroyMetaspaceTestContext(long context);\n-  public native void purgeMetaspaceTestContext(long context);\n-  public native void printMetaspaceTestContext(long context);\n-  public native long getTotalCommittedWordsInMetaspaceTestContext(long context);\n-  public native long getTotalUsedWordsInMetaspaceTestContext(long context);\n-  public native long createArenaInTestContext(long context, boolean is_micro);\n-  public native void destroyMetaspaceTestArena(long arena);\n-  public native long allocateFromMetaspaceTestArena(long arena, long word_size);\n-  public native void deallocateToMetaspaceTestArena(long arena, long p, long word_size);\n-\n-  public native long maxMetaspaceAllocationSize();\n-\n-  \/\/ Don't use these methods directly\n-  \/\/ Use sun.hotspot.gc.GC class instead.\n-  public native boolean isGCSupported(int name);\n-  public native boolean isGCSupportedByJVMCICompiler(int name);\n-  public native boolean isGCSelected(int name);\n-  public native boolean isGCSelectedErgonomically();\n-\n-  \/\/ Force Young GC\n-  public native void youngGC();\n-\n-  \/\/ Force Full GC\n-  public native void fullGC();\n-\n-  \/\/ Returns true if the current GC supports concurrent collection control.\n-  public native boolean supportsConcurrentGCBreakpoints();\n-\n-  private void checkConcurrentGCBreakpointsSupported() {\n-    if (!supportsConcurrentGCBreakpoints()) {\n-      throw new UnsupportedOperationException(\"Concurrent GC breakpoints not supported\");\n-    }\n-  }\n-\n-  private native void concurrentGCAcquireControl0();\n-  private native void concurrentGCReleaseControl0();\n-  private native void concurrentGCRunToIdle0();\n-  private native boolean concurrentGCRunTo0(String breakpoint);\n-\n-  private static boolean concurrentGCIsControlled = false;\n-  private void checkConcurrentGCIsControlled() {\n-    if (!concurrentGCIsControlled) {\n-      throw new IllegalStateException(\"Not controlling concurrent GC\");\n-    }\n-  }\n-\n-  \/\/ All collectors supporting concurrent GC breakpoints are expected\n-  \/\/ to provide at least the following breakpoints.\n-  public final String AFTER_MARKING_STARTED = \"AFTER MARKING STARTED\";\n-  public final String BEFORE_MARKING_COMPLETED = \"BEFORE MARKING COMPLETED\";\n-\n-  \/\/ Collectors supporting concurrent GC breakpoints that do reference\n-  \/\/ processing concurrently should provide the following breakpoint.\n-  public final String AFTER_CONCURRENT_REFERENCE_PROCESSING_STARTED =\n-    \"AFTER CONCURRENT REFERENCE PROCESSING STARTED\";\n-\n-  public void concurrentGCAcquireControl() {\n-    checkConcurrentGCBreakpointsSupported();\n-    if (concurrentGCIsControlled) {\n-      throw new IllegalStateException(\"Already controlling concurrent GC\");\n-    }\n-    concurrentGCAcquireControl0();\n-    concurrentGCIsControlled = true;\n-  }\n-\n-  public void concurrentGCReleaseControl() {\n-    checkConcurrentGCBreakpointsSupported();\n-    concurrentGCReleaseControl0();\n-    concurrentGCIsControlled = false;\n-  }\n-\n-  \/\/ Keep concurrent GC idle.  Release from breakpoint.\n-  public void concurrentGCRunToIdle() {\n-    checkConcurrentGCBreakpointsSupported();\n-    checkConcurrentGCIsControlled();\n-    concurrentGCRunToIdle0();\n-  }\n-\n-  \/\/ Allow concurrent GC to run to breakpoint.\n-  \/\/ Throws IllegalStateException if reached end of cycle first.\n-  public void concurrentGCRunTo(String breakpoint) {\n-    concurrentGCRunTo(breakpoint, true);\n-  }\n-\n-  \/\/ Allow concurrent GC to run to breakpoint.\n-  \/\/ Returns true if reached breakpoint.  If reached end of cycle first,\n-  \/\/ then throws IllegalStateException if errorIfFail is true, returning\n-  \/\/ false otherwise.\n-  public boolean concurrentGCRunTo(String breakpoint, boolean errorIfFail) {\n-    checkConcurrentGCBreakpointsSupported();\n-    checkConcurrentGCIsControlled();\n-    if (breakpoint == null) {\n-      throw new NullPointerException(\"null breakpoint\");\n-    } else if (concurrentGCRunTo0(breakpoint)) {\n-      return true;\n-    } else if (errorIfFail) {\n-      throw new IllegalStateException(\"Missed requested breakpoint \\\"\" + breakpoint + \"\\\"\");\n-    } else {\n-      return false;\n-    }\n-  }\n-\n-  \/\/ Method tries to start concurrent mark cycle.\n-  \/\/ It returns false if CM Thread is always in concurrent cycle.\n-  public native boolean g1StartConcMarkCycle();\n-\n-  \/\/ Tests on ReservedSpace\/VirtualSpace classes\n-  public native int stressVirtualSpaceResize(long reservedSpaceSize, long magnitude, long iterations);\n-  public native void readFromNoaccessArea();\n-  public native long getThreadStackSize();\n-  public native long getThreadRemainingStackSize();\n-\n-  \/\/ CPU features\n-  public native String getCPUFeatures();\n-\n-  \/\/ VM flags\n-  public native boolean isConstantVMFlag(String name);\n-  public native boolean isLockedVMFlag(String name);\n-  public native void    setBooleanVMFlag(String name, boolean value);\n-  public native void    setIntVMFlag(String name, long value);\n-  public native void    setUintVMFlag(String name, long value);\n-  public native void    setIntxVMFlag(String name, long value);\n-  public native void    setUintxVMFlag(String name, long value);\n-  public native void    setUint64VMFlag(String name, long value);\n-  public native void    setSizeTVMFlag(String name, long value);\n-  public native void    setStringVMFlag(String name, String value);\n-  public native void    setDoubleVMFlag(String name, double value);\n-  public native Boolean getBooleanVMFlag(String name);\n-  public native Long    getIntVMFlag(String name);\n-  public native Long    getUintVMFlag(String name);\n-  public native Long    getIntxVMFlag(String name);\n-  public native Long    getUintxVMFlag(String name);\n-  public native Long    getUint64VMFlag(String name);\n-  public native Long    getSizeTVMFlag(String name);\n-  public native String  getStringVMFlag(String name);\n-  public native Double  getDoubleVMFlag(String name);\n-  private final List<Function<String,Object>> flagsGetters = Arrays.asList(\n-    this::getBooleanVMFlag, this::getIntVMFlag, this::getUintVMFlag,\n-    this::getIntxVMFlag, this::getUintxVMFlag, this::getUint64VMFlag,\n-    this::getSizeTVMFlag, this::getStringVMFlag, this::getDoubleVMFlag);\n-\n-  public Object getVMFlag(String name) {\n-    return flagsGetters.stream()\n-                       .map(f -> f.apply(name))\n-                       .filter(x -> x != null)\n-                       .findAny()\n-                       .orElse(null);\n-  }\n-\n-  \/\/ Jigsaw\n-  public native void DefineModule(Object module, boolean is_open, String version,\n-                                  String location, Object[] packages);\n-  public native void AddModuleExports(Object from_module, String pkg, Object to_module);\n-  public native void AddReadsModule(Object from_module, Object source_module);\n-  public native void AddModuleExportsToAllUnnamed(Object module, String pkg);\n-  public native void AddModuleExportsToAll(Object module, String pkg);\n-\n-  public native int getOffsetForName0(String name);\n-  public int getOffsetForName(String name) throws Exception {\n-    int offset = getOffsetForName0(name);\n-    if (offset == -1) {\n-      throw new RuntimeException(name + \" not found\");\n-    }\n-    return offset;\n-  }\n-  public native Boolean getMethodBooleanOption(Executable method, String name);\n-  public native Long    getMethodIntxOption(Executable method, String name);\n-  public native Long    getMethodUintxOption(Executable method, String name);\n-  public native Double  getMethodDoubleOption(Executable method, String name);\n-  public native String  getMethodStringOption(Executable method, String name);\n-  private final List<BiFunction<Executable,String,Object>> methodOptionGetters\n-      = Arrays.asList(this::getMethodBooleanOption, this::getMethodIntxOption,\n-          this::getMethodUintxOption, this::getMethodDoubleOption,\n-          this::getMethodStringOption);\n-\n-  public Object getMethodOption(Executable method, String name) {\n-    return methodOptionGetters.stream()\n-                              .map(f -> f.apply(method, name))\n-                              .filter(x -> x != null)\n-                              .findAny()\n-                              .orElse(null);\n-  }\n-\n-  \/\/ Sharing & archiving\n-  public native String  getDefaultArchivePath();\n-  public native boolean cdsMemoryMappingFailed();\n-  public native boolean isSharingEnabled();\n-  public native boolean isShared(Object o);\n-  public native boolean isSharedClass(Class<?> c);\n-  public native boolean areSharedStringsIgnored();\n-  public native boolean isCDSIncluded();\n-  public native boolean isJFRIncluded();\n-  public native boolean isDTraceIncluded();\n-  public native boolean isJavaHeapArchiveSupported();\n-  public native Object  getResolvedReferences(Class<?> c);\n-  public native void    linkClass(Class<?> c);\n-  public native boolean areOpenArchiveHeapObjectsMapped();\n-\n-  \/\/ Compiler Directive\n-  public native int addCompilerDirective(String compDirect);\n-  public native void removeCompilerDirective(int count);\n-\n-  \/\/ Handshakes\n-  public native int handshakeWalkStack(Thread t, boolean all_threads);\n-  public native void asyncHandshakeWalkStack(Thread t);\n-\n-  public native void lockAndBlock(boolean suspender);\n-\n-  \/\/ Returns true on linux if library has the noexecstack flag set.\n-  public native boolean checkLibSpecifiesNoexecstack(String libfilename);\n-\n-  \/\/ Container testing\n-  public native boolean isContainerized();\n-  public native int validateCgroup(String procCgroups,\n-                                   String procSelfCgroup,\n-                                   String procSelfMountinfo);\n-  public native void printOsInfo();\n-\n-  \/\/ Decoder\n-  public native void disableElfSectionCache();\n-\n-  \/\/ Resolved Method Table\n-  public native long resolvedMethodItemsCount();\n-\n-  \/\/ Protection Domain Table\n-  public native int protectionDomainRemovedCount();\n-\n-  public native int getKlassMetadataSize(Class<?> c);\n-\n-  \/\/ ThreadSMR GC safety check for threadObj\n-  public native void checkThreadObjOfTerminatingThread(Thread target);\n-\n-  \/\/ libc name\n-  public native String getLibcName();\n-\n-  \/\/ Walk stack frames of current thread\n-  public native void verifyFrames(boolean log, boolean updateRegisterMap);\n-\n-  public native boolean isJVMTIIncluded();\n-\n-  public native void waitUnsafe(int time_ms);\n-\n-  public native void lockCritical();\n-\n-  public native void unlockCritical();\n-}\n","filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","additions":0,"deletions":650,"binary":false,"changes":650,"status":"deleted"},{"patch":"@@ -1,108 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.hotspot.code;\n-\n-import java.lang.management.ManagementFactory;\n-import java.lang.management.MemoryPoolMXBean;\n-import java.util.EnumSet;\n-\n-import jdk.test.whitebox.WhiteBox;\n-\n-public enum BlobType {\n-    \/\/ Execution level 1 and 4 (non-profiled) nmethods (including native nmethods)\n-    MethodNonProfiled(0, \"CodeHeap 'non-profiled nmethods'\", \"NonProfiledCodeHeapSize\") {\n-        @Override\n-        public boolean allowTypeWhenOverflow(BlobType type) {\n-            return super.allowTypeWhenOverflow(type)\n-                    || type == BlobType.MethodProfiled;\n-        }\n-    },\n-    \/\/ Execution level 2 and 3 (profiled) nmethods\n-    MethodProfiled(1, \"CodeHeap 'profiled nmethods'\", \"ProfiledCodeHeapSize\") {\n-        @Override\n-        public boolean allowTypeWhenOverflow(BlobType type) {\n-            return super.allowTypeWhenOverflow(type)\n-                    || type == BlobType.MethodNonProfiled;\n-        }\n-    },\n-    \/\/ Non-nmethods like Buffers, Adapters and Runtime Stubs\n-    NonNMethod(2, \"CodeHeap 'non-nmethods'\", \"NonNMethodCodeHeapSize\") {\n-        @Override\n-        public boolean allowTypeWhenOverflow(BlobType type) {\n-            return super.allowTypeWhenOverflow(type)\n-                    || type == BlobType.MethodNonProfiled\n-                    || type == BlobType.MethodProfiled;\n-        }\n-    },\n-    \/\/ All types (No code cache segmentation)\n-    All(3, \"CodeCache\", \"ReservedCodeCacheSize\");\n-\n-    public final int id;\n-    public final String sizeOptionName;\n-    public final String beanName;\n-\n-    private BlobType(int id, String beanName, String sizeOptionName) {\n-        this.id = id;\n-        this.beanName = beanName;\n-        this.sizeOptionName = sizeOptionName;\n-    }\n-\n-    public MemoryPoolMXBean getMemoryPool() {\n-        for (MemoryPoolMXBean bean : ManagementFactory.getMemoryPoolMXBeans()) {\n-            String name = bean.getName();\n-            if (beanName.equals(name)) {\n-                return bean;\n-            }\n-        }\n-        return null;\n-    }\n-\n-    public boolean allowTypeWhenOverflow(BlobType type) {\n-        return type == this;\n-    }\n-\n-    public static EnumSet<BlobType> getAvailable() {\n-        WhiteBox whiteBox = WhiteBox.getWhiteBox();\n-        if (!whiteBox.getBooleanVMFlag(\"SegmentedCodeCache\")) {\n-            \/\/ only All for non segmented world\n-            return EnumSet.of(All);\n-        }\n-        if (System.getProperty(\"java.vm.info\").startsWith(\"interpreted \")) {\n-            \/\/ only NonNMethod for -Xint\n-            return EnumSet.of(NonNMethod);\n-        }\n-\n-        EnumSet<BlobType> result = EnumSet.complementOf(EnumSet.of(All));\n-        if (!whiteBox.getBooleanVMFlag(\"TieredCompilation\")\n-                || whiteBox.getIntxVMFlag(\"TieredStopAtLevel\") <= 1) {\n-            \/\/ there is no MethodProfiled in non tiered world or pure C1\n-            result.remove(MethodProfiled);\n-        }\n-        return result;\n-    }\n-\n-    public long getSize() {\n-        return WhiteBox.getWhiteBox().getUintxVMFlag(sizeOptionName);\n-    }\n-}\n","filename":"test\/lib\/sun\/hotspot\/code\/BlobType.java","additions":0,"deletions":108,"binary":false,"changes":108,"status":"deleted"},{"patch":"@@ -1,71 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.hotspot.code;\n-\n-import jdk.test.whitebox.WhiteBox;\n-\n-@Deprecated\n-public class CodeBlob {\n-  private static final WhiteBox WB = WhiteBox.getWhiteBox();\n-  public static CodeBlob[] getCodeBlobs(BlobType type) {\n-    Object[] obj = WB.getCodeHeapEntries(type.id);\n-    if (obj == null) {\n-      return null;\n-    }\n-    CodeBlob[] result = new CodeBlob[obj.length];\n-    for (int i = 0, n = result.length; i < n; ++i) {\n-      result[i] = new CodeBlob((Object[]) obj[i]);\n-    }\n-    return result;\n-  }\n-  public static CodeBlob getCodeBlob(long addr) {\n-    Object[] obj = WB.getCodeBlob(addr);\n-    if (obj == null) {\n-      return null;\n-    }\n-    return new CodeBlob(obj);\n-  }\n-  protected CodeBlob(Object[] obj) {\n-    assert obj.length == 4;\n-    name = (String) obj[0];\n-    size = (Integer) obj[1];\n-    int blob_type_index = (Integer) obj[2];\n-    code_blob_type = BlobType.values()[blob_type_index];\n-    assert code_blob_type.id == (Integer) obj[2];\n-    address = (Long) obj[3];\n-  }\n-  public final String name;\n-  public final int size;\n-  public final BlobType code_blob_type;\n-  public final long address;\n-  @Override\n-  public String toString() {\n-    return \"CodeBlob{\"\n-        + \"name=\" + name\n-        + \", size=\" + size\n-        + \", code_blob_type=\" + code_blob_type\n-        + \", address=\" + address\n-        + '}';\n-  }\n-}\n","filename":"test\/lib\/sun\/hotspot\/code\/CodeBlob.java","additions":0,"deletions":71,"binary":false,"changes":71,"status":"deleted"},{"patch":"@@ -1,171 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.hotspot.code;\n-\n-import java.lang.reflect.Executable;\n-import jdk.test.whitebox.WhiteBox;\n-\n-\/**\n- * API to obtain information about enabled JIT compilers\n- * retrieved from the VM with the WhiteBox API.\n- *\/\n-public class Compiler {\n-\n-    private static final WhiteBox WB = WhiteBox.getWhiteBox();\n-\n-    \/**\n-     * Check if C2 or JVMCI were included in the VM build\n-     *\n-     * @return true if either C2 or JVMCI were included in the VM build.\n-     *\/\n-    public static boolean isC2OrJVMCIIncluded() {\n-        return WB.isC2OrJVMCIIncluded();\n-    }\n-\n-    \/**\n-     * Check if JVMCI is enabled.\n-     *\n-     * @return true if JVMCI is enabled\n-     *\/\n-    public static boolean isJVMCIEnabled() {\n-        Boolean enableJvmci = WB.getBooleanVMFlag(\"EnableJVMCI\");\n-        if (enableJvmci == null || !enableJvmci) {\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    \/**\n-     * Check if Graal is used as JIT compiler.\n-     *\n-     * Graal is enabled if following conditions are true:\n-     * - we are not in Interpreter mode\n-     * - UseJVMCICompiler flag is true\n-     * - jvmci.Compiler variable is equal to 'graal'\n-     * - TieredCompilation is not used or TieredStopAtLevel is greater than 3\n-     * No need to check client mode because it set UseJVMCICompiler to false.\n-     *\n-     * @return true if Graal is used as JIT compiler.\n-     *\/\n-    public static boolean isGraalEnabled() {\n-        Boolean useCompiler = WB.getBooleanVMFlag(\"UseCompiler\");\n-        if (useCompiler == null || !useCompiler) {\n-            return false;\n-        }\n-        Boolean useJvmciComp = WB.getBooleanVMFlag(\"UseJVMCICompiler\");\n-        if (useJvmciComp == null || !useJvmciComp) {\n-            return false;\n-        }\n-\n-        Boolean tieredCompilation = WB.getBooleanVMFlag(\"TieredCompilation\");\n-        Long compLevel = WB.getIntxVMFlag(\"TieredStopAtLevel\");\n-        \/\/ if TieredCompilation is enabled and compilation level is <= 3 then no Graal is used\n-        if (tieredCompilation != null && tieredCompilation &&\n-            compLevel != null && compLevel <= 3) {\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    \/**\n-     * Check if C2 is used as JIT compiler.\n-     *\n-     * C2 is enabled if following conditions are true:\n-     * - we are not in Interpreter mode\n-     * - we are in Server compilation mode\n-     * - TieredCompilation is not used or TieredStopAtLevel is greater than 3\n-     * - Graal is not used\n-     *\n-     * @return true if C2 is used as JIT compiler.\n-     *\/\n-    public static boolean isC2Enabled() {\n-        Boolean useCompiler = WB.getBooleanVMFlag(\"UseCompiler\");\n-        if (useCompiler == null || !useCompiler) {\n-            return false;\n-        }\n-        Boolean serverMode = WB.getBooleanVMFlag(\"ProfileInterpreter\");\n-        if (serverMode == null || !serverMode) {\n-            return false;\n-        }\n-\n-        Boolean tieredCompilation = WB.getBooleanVMFlag(\"TieredCompilation\");\n-        Long compLevel = WB.getIntxVMFlag(\"TieredStopAtLevel\");\n-        \/\/ if TieredCompilation is enabled and compilation level is <= 3 then no Graal is used\n-        if (tieredCompilation != null && tieredCompilation &&\n-            compLevel != null && compLevel <= 3) {\n-            return false;\n-        }\n-\n-        if (isGraalEnabled()) {\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    \/*\n-     * Check if C1 is used as JIT compiler.\n-     *\n-     * C1 is enabled if following conditions are true:\n-     * - we are not in Interpreter mode\n-     * - we are not in Server compilation mode\n-     * - TieredCompilation is used in Server mode\n-     *\n-     * @return true if C1 is used as JIT compiler.\n-     *\/\n-    public static boolean isC1Enabled() {\n-        Boolean useCompiler = WB.getBooleanVMFlag(\"UseCompiler\");\n-        if (useCompiler == null || !useCompiler) {\n-            return false;\n-        }\n-        Boolean serverMode = WB.getBooleanVMFlag(\"ProfileInterpreter\");\n-        if (serverMode == null || !serverMode) {\n-            return true; \/\/ Client mode\n-        }\n-\n-        Boolean tieredCompilation = WB.getBooleanVMFlag(\"TieredCompilation\");\n-        \/\/ C1 is not used in server mode if TieredCompilation is off.\n-        if (tieredCompilation != null && !tieredCompilation) {\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    \/*\n-     * Determine if the compiler corresponding to the compilation level 'compLevel'\n-     * provides an intrinsic for 'class'.'method'.\n-     *\/\n-    public static boolean isIntrinsicAvailable(int compLevel, String klass, String method, Class<?>... parameterTypes) {\n-        Executable intrinsicMethod;\n-        try {\n-            intrinsicMethod = Class.forName(klass).getDeclaredMethod(method, parameterTypes);\n-        } catch (NoSuchMethodException e) {\n-            throw new RuntimeException(\"Test bug, '\" + method + \"' method unavailable. \" + e);\n-        } catch (ClassNotFoundException e) {\n-            throw new RuntimeException(\"Test bug, '\" + klass + \"' class unavailable. \" + e);\n-        }\n-        return WB.isIntrinsicAvailable(intrinsicMethod, compLevel);\n-    }\n-}\n","filename":"test\/lib\/sun\/hotspot\/code\/Compiler.java","additions":0,"deletions":171,"binary":false,"changes":171,"status":"deleted"},{"patch":"@@ -1,59 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.hotspot.code;\n-\n-import java.lang.reflect.Executable;\n-import jdk.test.whitebox.WhiteBox;\n-\n-@Deprecated\n-public class NMethod extends CodeBlob {\n-  private static final WhiteBox wb = WhiteBox.getWhiteBox();\n-  public static NMethod get(Executable method, boolean isOsr) {\n-    Object[] obj = wb.getNMethod(method, isOsr);\n-    return obj == null ? null : new NMethod(obj);\n-  }\n-  private NMethod(Object[] obj) {\n-    super((Object[])obj[0]);\n-    assert obj.length == 5;\n-    comp_level = (Integer) obj[1];\n-    insts = (byte[]) obj[2];\n-    compile_id = (Integer) obj[3];\n-    entry_point = (Long) obj[4];\n-  }\n-  public final byte[] insts;\n-  public final int comp_level;\n-  public final int compile_id;\n-  public final long entry_point;\n-\n-  @Override\n-  public String toString() {\n-    return \"NMethod{\"\n-        + super.toString()\n-        + \", insts=\" + insts\n-        + \", comp_level=\" + comp_level\n-        + \", compile_id=\" + compile_id\n-        + \", entry_point=\" + entry_point\n-        + '}';\n-  }\n-}\n","filename":"test\/lib\/sun\/hotspot\/code\/NMethod.java","additions":0,"deletions":59,"binary":false,"changes":59,"status":"deleted"},{"patch":"@@ -1,97 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.hotspot.cpuinfo;\n-\n-import java.util.List;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.regex.Pattern;\n-import java.util.regex.Matcher;\n-\n-import jdk.test.whitebox.WhiteBox;\n-\n-\/**\n- * Information about CPU on test box.\n- *\n- * CPUInfo uses WhiteBox to gather information,\n- * so WhiteBox class should be added to bootclasspath\n- * and option -XX:+WhiteBoxAPI should be explicitly\n- * specified on command line.\n- *\/\n-@Deprecated\n-public class CPUInfo {\n-\n-    private static final List<String> features;\n-    private static final String additionalCPUInfo;\n-\n-    static {\n-        WhiteBox wb = WhiteBox.getWhiteBox();\n-\n-        Pattern additionalCPUInfoRE =\n-            Pattern.compile(\"([^(]*\\\\([^)]*\\\\)[^,]*),\\\\s*\");\n-\n-        String cpuFeaturesString = wb.getCPUFeatures();\n-        Matcher matcher = additionalCPUInfoRE.matcher(cpuFeaturesString);\n-        if (matcher.find()) {\n-            additionalCPUInfo = matcher.group(1);\n-        } else {\n-            additionalCPUInfo = \"\";\n-        }\n-        String splittedFeatures[] = matcher.replaceAll(\"\").split(\"(, )| \");\n-\n-        features = Collections.unmodifiableList(Arrays.\n-                                                asList(splittedFeatures));\n-    }\n-\n-    \/**\n-     * Get additional information about CPU.\n-     * For example, on X86 in will be family\/model\/stepping\n-     * and number of cores.\n-     *\n-     * @return additional CPU info\n-     *\/\n-    public static String getAdditionalCPUInfo() {\n-        return additionalCPUInfo;\n-    }\n-\n-    \/**\n-     * Get all known features supported by CPU.\n-     *\n-     * @return unmodifiable list with names of all known features\n-     *         supported by CPU.\n-     *\/\n-    public static List<String> getFeatures() {\n-        return features;\n-    }\n-\n-    \/**\n-     * Check if some feature is supported by CPU.\n-     *\n-     * @param feature Name of feature to be tested.\n-     * @return <b>true<\/b> if tested feature is supported by CPU.\n-     *\/\n-    public static boolean hasFeature(String feature) {\n-        return features.contains(feature.toLowerCase());\n-    }\n-}\n","filename":"test\/lib\/sun\/hotspot\/cpuinfo\/CPUInfo.java","additions":0,"deletions":97,"binary":false,"changes":97,"status":"deleted"},{"patch":"@@ -1,91 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.hotspot.gc;\n-\n-import jdk.test.whitebox.WhiteBox;\n-\n-\/**\n- * API to obtain information about selected and supported Garbage Collectors\n- * retrieved from the VM with the WhiteBox API.\n- *\/\n-public enum GC {\n-    \/*\n-     * Enum values must match CollectedHeap::Name\n-     *\/\n-    Serial(1),\n-    Parallel(2),\n-    G1(3),\n-    Epsilon(4),\n-    Z(5),\n-    Shenandoah(6);\n-\n-    private static final WhiteBox WB = WhiteBox.getWhiteBox();\n-\n-    private final int name;\n-\n-    private GC(int name) {\n-        this.name = name;\n-    }\n-\n-    \/**\n-     * @return true if this GC is supported by the VM, i.e., it is built into the VM.\n-     *\/\n-    public boolean isSupported() {\n-        return WB.isGCSupported(name);\n-    }\n-\n-    \/**\n-     * @return true if this GC is supported by the JVMCI compiler\n-     *\/\n-    public boolean isSupportedByJVMCICompiler() {\n-        return WB.isGCSupportedByJVMCICompiler(name);\n-    }\n-\n-    \/**\n-     * @return true if this GC is currently selected\/used\n-     *\/\n-    public boolean isSelected() {\n-        return WB.isGCSelected(name);\n-    }\n-\n-    \/**\n-     * @return true if GC was selected ergonomically, as opposed\n-     *         to being explicitly specified on the command line\n-     *\/\n-    public static boolean isSelectedErgonomically() {\n-        return WB.isGCSelectedErgonomically();\n-    }\n-\n-    \/**\n-     * @return the selected GC.\n-     *\/\n-    public static GC selected() {\n-      for (GC gc : values()) {\n-        if (gc.isSelected()) {\n-          return gc;\n-        }\n-      }\n-      throw new IllegalStateException(\"No selected GC found\");\n-    }\n-}\n","filename":"test\/lib\/sun\/hotspot\/gc\/GC.java","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"}]}