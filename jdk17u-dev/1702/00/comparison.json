{"files":[{"patch":"@@ -35,0 +35,2 @@\n+import jdk.test.lib.net.IPSupport;\n+\n@@ -42,0 +44,2 @@\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.Platform jdk.test.lib.net.IPSupport\n@@ -109,0 +113,3 @@\n+        if (!IPSupport.hasIPv6()) {\n+            return ExpectedOrder.IPV4_ONLY;\n+        }\n","filename":"test\/jdk\/java\/net\/InetAddress\/HostsFileOrderingTest.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.IPSupport\n@@ -41,0 +43,2 @@\n+import jdk.test.lib.net.IPSupport;\n+\n@@ -131,11 +135,10 @@\n-\n-        \/\/ IPV6 tests\n-        addMappingToHostsFile(\"host-ipv6.sample-domain\", \"::1\", hostsFileName,\n-                true);\n-        testAddress = InetAddress.getByName(\"host-ipv6.sample-domain\");\n-        retrievedIpAddr = testAddress.getAddress();\n-        if (!Arrays.equals(retrievedIpAddr, expectedIpAddrIpv6_1)) {\n-            System.out.println(\"retrieved ipv6 addr == \" + Arrays.toString(retrievedIpAddr));\n-            System.out.println(\"expected ipv6 addr == \" + Arrays.toString(expectedIpAddrIpv6_1));\n-            throw new RuntimeException(\n-                    \"retrieved IPV6 Addr not equal to expected IPV6 Addr\");\n+        if (IPSupport.hasIPv6()) {\n+            addMappingToHostsFile(\"host-ipv6.sample-domain\", \"::1\", hostsFileName, true);\n+            testAddress = InetAddress.getByName(\"host-ipv6.sample-domain\");\n+            retrievedIpAddr = testAddress.getAddress();\n+            if (!Arrays.equals(retrievedIpAddr, expectedIpAddrIpv6_1)) {\n+                System.out.println(\"retrieved ipv6 addr == \" + Arrays.toString(retrievedIpAddr));\n+                System.out.println(\"expected ipv6 addr == \" + Arrays.toString(expectedIpAddrIpv6_1));\n+                throw new RuntimeException(\n+                        \"retrieved IPV6 Addr not equal to expected IPV6 Addr\");\n+            }\n","filename":"test\/jdk\/java\/net\/InetAddress\/InternalNameServiceTest.java","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.net.IPSupport\n@@ -39,0 +41,2 @@\n+import jdk.test.lib.net.IPSupport;\n+\n@@ -55,6 +59,9 @@\n-        \/\/ ::1     ip6-localhost ip6-loopback\n-        testHostsMapping(expectedIpv6LocalhostAddress, \"ip6-localhost\");\n-        \/\/ fe00::0 ip6-localnet\n-        testHostsMapping(expectedIpv6LocalAddress, \"ip6-localnet\");\n-        \/\/ fe80::1 link-local-host\n-        testHostsMapping(expectedIpv6Address, \"link-local-host\");\n+\n+        if (IPSupport.hasIPv6()) {\n+            \/\/ ::1     ip6-localhost ip6-loopback\n+            testHostsMapping(expectedIpv6LocalhostAddress, \"ip6-localhost\");\n+            \/\/ fe00::0 ip6-localnet\n+            testHostsMapping(expectedIpv6LocalAddress, \"ip6-localnet\");\n+            \/\/ fe80::1 link-local-host\n+            testHostsMapping(expectedIpv6Address, \"link-local-host\");\n+        }\n@@ -64,3 +71,4 @@\n-        testReverseLookup(\"::1\", \"ip6-localhost\");\n-        testReverseLookup(\"0:0:0:0:0:0:0:1\", \"ip6-localhost\");\n-        testReverseLookup(\"0000:0000:0000:0000:0000:0000:0000:0001\", \"ip6-localhost\");\n+        if (IPSupport.hasIPv6()) {\n+            testReverseLookup(\"::1\", \"ip6-localhost\");\n+            testReverseLookup(\"0:0:0:0:0:0:0:1\", \"ip6-localhost\");\n+            testReverseLookup(\"0000:0000:0000:0000:0000:0000:0000:0001\", \"ip6-localhost\");\n@@ -68,3 +76,3 @@\n-        testReverseLookup(\"fe00::0\", \"ip6-localnet\");\n-        testReverseLookup(\"fe00:0:0:0:0:0:0:0\", \"ip6-localnet\");\n-        testReverseLookup(\"fe00:0000:0000:0000:0000:0000:0000:0000\", \"ip6-localnet\");\n+            testReverseLookup(\"fe00::0\", \"ip6-localnet\");\n+            testReverseLookup(\"fe00:0:0:0:0:0:0:0\", \"ip6-localnet\");\n+            testReverseLookup(\"fe00:0000:0000:0000:0000:0000:0000:0000\", \"ip6-localnet\");\n@@ -72,3 +80,4 @@\n-        testReverseLookup(\"fe80::1\", \"link-local-host\");\n-        testReverseLookup(\"fe80:000:0:00:0:000:00:1\", \"link-local-host\");\n-        testReverseLookup(\"fe80:0000:0000:0000:0000:0000:0000:0001\", \"link-local-host\");\n+            testReverseLookup(\"fe80::1\", \"link-local-host\");\n+            testReverseLookup(\"fe80:000:0:00:0:000:00:1\", \"link-local-host\");\n+            testReverseLookup(\"fe80:0000:0000:0000:0000:0000:0000:0001\", \"link-local-host\");\n+        }\n","filename":"test\/jdk\/java\/net\/InetAddress\/InternalNameServiceWithHostsFileTest.java","additions":24,"deletions":15,"binary":false,"changes":39,"status":"modified"}]}