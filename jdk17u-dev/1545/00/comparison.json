{"files":[{"patch":"@@ -26,1 +26,1 @@\n-  @key headful\n+   @key headful\n@@ -29,1 +29,0 @@\n-   @author Alexander Potochkin\n@@ -32,1 +31,9 @@\n-import javax.swing.*;\n+import java.awt.Cursor;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.image.BufferedImage;\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n@@ -35,1 +42,2 @@\n-import java.awt.*;\n+import javax.swing.JTable;\n+import javax.swing.SwingUtilities;\n@@ -39,0 +47,6 @@\n+    static JFrame frame;\n+    static Robot robot;\n+    static volatile Point point;\n+    static volatile int width;\n+    static volatile int height;\n+\n@@ -40,2 +54,3 @@\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(20);\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n@@ -43,2 +58,3 @@\n-        final JFrame frame = new JFrame();\n-        frame.setUndecorated(true);\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                frame.setUndecorated(true);\n@@ -46,2 +62,0 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n@@ -59,0 +73,14 @@\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                point = frame.getLocationOnScreen();\n+                width = frame.getWidth();\n+                height = frame.getHeight();\n+            });\n+            int shift = 10;\n+            int x = point.x;\n+            int y = point.y + height\/2;\n+            for(int i = -shift; i < width + 2*shift; i++) {\n+                robot.mouseMove(x++, y);\n+                robot.waitForIdle();\n@@ -60,14 +88,12 @@\n-        });\n-        robot.waitForIdle();\n-        Point point = frame.getLocationOnScreen();\n-        int shift = 10;\n-        int x = point.x;\n-        int y = point.y + frame.getHeight()\/2;\n-        for(int i = -shift; i < frame.getWidth() + 2*shift; i++) {\n-            robot.mouseMove(x++, y);\n-        }\n-        robot.waitForIdle();\n-        \/\/ 9 is a magic test number\n-        if (MyTableHeaderUI.getTestValue() != 9) {\n-            throw new RuntimeException(\"Unexpected test number \"\n-                    + MyTableHeaderUI.getTestValue());\n+            robot.waitForIdle();\n+            \/\/ 9 is a magic test number\n+            if (MyTableHeaderUI.getTestValue() != 9) {\n+                throw new RuntimeException(\"Unexpected test number \"\n+                        + MyTableHeaderUI.getTestValue());\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -86,0 +112,9 @@\n+                try {\n+                    Dimension screenSize =\n+                               Toolkit.getDefaultToolkit().getScreenSize();\n+                    Rectangle screen = new Rectangle(0, 0,\n+                                               (int) screenSize.getWidth(),\n+                                               (int) screenSize.getHeight());\n+                    BufferedImage img = robot.createScreenCapture(screen);\n+                    ImageIO.write(img, \"png\", new java.io.File(\"image.png\"));\n+                } catch (Exception e) {}\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/6889007\/bug6889007.java","additions":59,"deletions":24,"binary":false,"changes":83,"status":"modified"}]}