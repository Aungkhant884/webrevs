{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,1 @@\n+import java.nio.file.Path;\n@@ -105,8 +106,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/CDSMHTest_generate.sh","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ this file is auto-generated by .\/CDSMHTest_generate.sh. Do not edit manually.\n+\/\/ this file is auto-generated by CDSMHTest_generate.sh. Do not edit manually.\n@@ -50,0 +50,1 @@\n+import java.nio.file.Path;\n@@ -73,8 +74,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesAsCollectorTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ this file is auto-generated by .\/CDSMHTest_generate.sh. Do not edit manually.\n+\/\/ this file is auto-generated by CDSMHTest_generate.sh. Do not edit manually.\n@@ -50,0 +50,1 @@\n+import java.nio.file.Path;\n@@ -73,8 +74,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesCastFailureTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ this file is auto-generated by .\/CDSMHTest_generate.sh. Do not edit manually.\n+\/\/ this file is auto-generated by CDSMHTest_generate.sh. Do not edit manually.\n@@ -50,0 +50,1 @@\n+import java.nio.file.Path;\n@@ -73,8 +74,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesGeneralTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ this file is auto-generated by .\/CDSMHTest_generate.sh. Do not edit manually.\n+\/\/ this file is auto-generated by CDSMHTest_generate.sh. Do not edit manually.\n@@ -50,0 +50,1 @@\n+import java.nio.file.Path;\n@@ -73,8 +74,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesInvokersTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ this file is auto-generated by .\/CDSMHTest_generate.sh. Do not edit manually.\n+\/\/ this file is auto-generated by CDSMHTest_generate.sh. Do not edit manually.\n@@ -50,0 +50,1 @@\n+import java.nio.file.Path;\n@@ -73,8 +74,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesPermuteArgumentsTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ this file is auto-generated by .\/CDSMHTest_generate.sh. Do not edit manually.\n+\/\/ this file is auto-generated by CDSMHTest_generate.sh. Do not edit manually.\n@@ -50,0 +50,1 @@\n+import java.nio.file.Path;\n@@ -73,8 +74,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/methodHandles\/MethodHandlesSpreadArgumentsTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,0 +81,1 @@\n+import java.nio.file.Path;\n@@ -109,8 +110,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/CDSMHTest_generate.sh","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.nio.file.Path;\n@@ -77,8 +78,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesAsCollectorTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.nio.file.Path;\n@@ -77,8 +78,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesCastFailureTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.nio.file.Path;\n@@ -77,8 +78,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesGeneralTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.nio.file.Path;\n@@ -77,8 +78,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesInvokersTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.nio.file.Path;\n@@ -77,8 +78,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesPermuteArgumentsTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.nio.file.Path;\n@@ -77,8 +78,1 @@\n-        String[] classPaths = javaClassPath.split(File.pathSeparator);\n-        String junitJar = null;\n-        for (String path : classPaths) {\n-            if (path.endsWith(\"junit.jar\")) {\n-                junitJar = path;\n-                break;\n-            }\n-        }\n+        String junitJar = Path.of(Test.class.getProtectionDomain().getCodeSource().getLocation().toURI()).toString();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesSpreadArgumentsTest.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}