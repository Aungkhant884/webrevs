{"files":[{"patch":"@@ -506,1 +506,1 @@\n-bool os::platform_print_native_stack(outputStream* st, void* context, char *buf, int buf_size) {\n+bool os::platform_print_native_stack(outputStream* st, void* context, char *buf, int buf_size, address& lastpc) {\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-                                          char *buf, int buf_size);\n+                                          char *buf, int buf_size, address& lastpc);\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -226,1 +226,1 @@\n-                                     char *buf, int buf_size)\n+                                     char *buf, int buf_size, address& lastpc)\n@@ -247,1 +247,1 @@\n-  address lastpc = 0;\n+  address lastpc_internal = 0;\n@@ -254,1 +254,1 @@\n-      if (count == 2 && lastpc == pc) {\n+      if (count == 2 && lastpc_internal == pc) {\n@@ -270,1 +270,1 @@\n-      lastpc = pc;\n+      lastpc_internal = pc;\n@@ -276,0 +276,1 @@\n+      lastpc = lastpc_internal;\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/os_windows_x86.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                                        char *buf, int buf_size);\n+                                        char *buf, int buf_size, address& lastpc);\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/os_windows_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -889,1 +889,1 @@\n-                                          char *buf, int buf_size) {\n+                                          char *buf, int buf_size, address& lastpc) {\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -679,1 +679,2 @@\n-  if (os::platform_print_native_stack(tty, NULL, buf, sizeof(buf))) {\n+  address lastpc = nullptr;\n+  if (os::platform_print_native_stack(tty, NULL, buf, sizeof(buf), lastpc)) {\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -316,0 +316,21 @@\n+\/\/ Like above, but only try to figure out a short name. Return nullptr if not found.\n+static const char* find_code_name(address pc) {\n+  if (Interpreter::contains(pc)) {\n+    InterpreterCodelet* codelet = Interpreter::codelet_containing(pc);\n+    if (codelet != nullptr) {\n+      return codelet->description();\n+    }\n+  } else {\n+    StubCodeDesc* desc = StubCodeDesc::desc_for(pc);\n+    if (desc != nullptr) {\n+      return desc->name();\n+    } else {\n+      CodeBlob* cb = CodeCache::find_blob(pc);\n+      if (cb != nullptr) {\n+        return cb->name();\n+      }\n+    }\n+  }\n+  return nullptr;\n+}\n+\n@@ -531,0 +552,4 @@\n+  \/\/ Native stack trace may get stuck. We try to handle the last pc if it\n+  \/\/ belongs to VM generated code.\n+  address lastpc = nullptr;\n+\n@@ -827,1 +852,1 @@\n-     if (os::platform_print_native_stack(st, _context, buf, sizeof(buf))) {\n+     if (os::platform_print_native_stack(st, _context, buf, sizeof(buf), lastpc)) {\n@@ -830,0 +855,7 @@\n+       \/\/ Stack walking may get stuck. Try to find the calling code.\n+       if (lastpc != nullptr) {\n+         const char* name = find_code_name(lastpc);\n+         if (name != nullptr) {\n+           st->print_cr(\"The last pc belongs to %s (printed below).\", name);\n+         }\n+       }\n@@ -923,0 +955,7 @@\n+         \/\/ Check if a pc was found by native stack trace above.\n+         if (lastpc != nullptr) {\n+           if (print_code(st, _thread, lastpc, true, printed, printed_capacity)) {\n+             printed_len++;\n+           }\n+         }\n+\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":40,"deletions":1,"binary":false,"changes":41,"status":"modified"}]}