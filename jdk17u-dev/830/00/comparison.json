{"files":[{"patch":"@@ -618,2 +618,5 @@\n-                [fActions setObject:action forKey:[sActions objectForKey:[action getDescription]]];\n-                [fActionSelectors addObject:[sActionSelectors objectForKey:[sActions objectForKey:[action getDescription]]]];\n+                NSString *nsActionName = [sActions objectForKey:[action getDescription]];\n+                if (nsActionName != nil) {\n+                    [fActions setObject:action forKey:nsActionName];\n+                    [fActionSelectors addObject:[sActionSelectors objectForKey:nsActionName]];\n+                }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,0 +43,2 @@\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n@@ -95,0 +97,26 @@\n+  private void createEditableTextArea() {\n+    AccessibleComponentTest.INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+            + \"Check a11y show context menu in editable JTextArea.\\n\\n\"\n+            + \"Turn screen reader on and press Tab to move to the text area\\n\"\n+            + \"Perform the VO action \\\"Open a shortcut menu\\\" (VO+Shift+m)\\n\\n\"\n+            + \"If the menu appears  tab further and press PASS, otherwise press FAIL.\";\n+\n+    JTextArea textArea = new MyTextArea(\"some text to edit\");\n+    JLabel label = new JLabel(textArea.getText().length() + \" chars\");\n+    label.setLabelFor(textArea);\n+    textArea.setEditable(true);\n+    textArea.addKeyListener(new KeyAdapter() {\n+      @Override\n+      public void keyReleased(KeyEvent e) {\n+        label.setText(String.valueOf(textArea.getText().length()) + \" chars\");\n+      }\n+    });\n+\n+    JPanel panel = new JPanel();\n+    panel.setLayout(new FlowLayout());\n+    panel.add(textArea);\n+    panel.add(label);\n+    exceptionString = \"Editable text area test failed!\";\n+    super.createUI(panel, \"AccessibleTextTest\");\n+  }\n+\n@@ -113,0 +141,8 @@\n+\n+    countDownLatch = test.createCountDownLatch();\n+    SwingUtilities.invokeLater(test::createEditableTextArea);\n+    countDownLatch.await();\n+\n+    if (!testResult) {\n+      throw new RuntimeException(a11yTest.exceptionString);\n+    }\n@@ -170,7 +206,1 @@\n-    private static JPopupMenu createPopup() {\n-      JPopupMenu popup = new JPopupMenu(\"MENU\");\n-      popup.add(\"One\");\n-      popup.add(\"Two\");\n-      popup.add(\"Three\");\n-      return popup;\n-    }\n+\n@@ -183,0 +213,59 @@\n+\n+  private static class MyTextArea extends JTextArea {\n+\n+    public MyTextArea(String some_text_to_edit) {\n+    }\n+\n+    @Override\n+    public AccessibleContext getAccessibleContext() {\n+      if (accessibleContext == null) {\n+        accessibleContext = new MyAccessibleJTextArea();\n+      }\n+      return accessibleContext;\n+    }\n+\n+    private class MyAccessibleJTextArea extends JTextArea.AccessibleJTextArea {\n+      @Override\n+      public AccessibleAction getAccessibleAction() {\n+        return new AccessibleAction() {\n+          @Override\n+          public int getAccessibleActionCount() {\n+            AccessibleAction aa = MyAccessibleJTextArea.super.getAccessibleAction();\n+            if (aa == null) {\n+              return 1;\n+            }\n+            int count = aa.getAccessibleActionCount();\n+            return aa.getAccessibleActionCount() + 1;\n+}\n+\n+          @Override\n+          public String getAccessibleActionDescription(int i) {\n+            AccessibleAction aa = MyAccessibleJTextArea.super.getAccessibleAction();\n+            if ((aa != null) && (i >= 0) && (i < aa.getAccessibleActionCount())) {\n+              return aa.getAccessibleActionDescription(i);\n+            }\n+            return AccessibleAction.TOGGLE_POPUP;\n+          }\n+\n+          @Override\n+          public boolean doAccessibleAction(int i) {\n+            AccessibleAction aa = MyAccessibleJTextArea.super.getAccessibleAction();\n+            if ((aa != null) && (i >= 0) && (i < aa.getAccessibleActionCount())) {\n+              return aa.doAccessibleAction(i);\n+            }\n+            JPopupMenu popup = createPopup();\n+            popup.show(MyTextArea.this, 0, 0);\n+            return true;\n+          }\n+        };\n+      }\n+    }\n+  }\n+\n+  private static JPopupMenu createPopup() {\n+    JPopupMenu popup = new JPopupMenu(\"MENU\");\n+    popup.add(\"One\");\n+    popup.add(\"Two\");\n+    popup.add(\"Three\");\n+    return popup;\n+  }\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleActionsTest.java","additions":96,"deletions":7,"binary":false,"changes":103,"status":"modified"}]}