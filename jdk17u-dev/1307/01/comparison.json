{"files":[{"patch":"@@ -970,0 +970,15 @@\n+static bool trace_compiler_threads() {\n+  LogTarget(Debug, jit, thread) lt;\n+  return TraceCompilerThreads || lt.is_enabled();\n+}\n+\n+static void print_compiler_threads(stringStream& msg) {\n+  if (TraceCompilerThreads) {\n+    tty->print_cr(\"%7d %s\", (int)tty->time_stamp().milliseconds(), msg.as_string());\n+  }\n+  LogTarget(Debug, jit, thread) lt;\n+  if (lt.is_enabled()) {\n+    LogStream ls(lt);\n+    ls.print_cr(\"%s\", msg.as_string());\n+  }\n+}\n@@ -1012,1 +1027,1 @@\n-      if (TraceCompilerThreads) {\n+      if (trace_compiler_threads()) {\n@@ -1016,1 +1031,3 @@\n-        tty->print_cr(\"Added initial compiler thread %s\", ct->get_thread_name());\n+        stringStream msg;\n+        msg.print(\"Added initial compiler thread %s\", ct->get_thread_name());\n+        print_compiler_threads(msg);\n@@ -1033,1 +1050,1 @@\n-      if (TraceCompilerThreads) {\n+      if (trace_compiler_threads()) {\n@@ -1037,1 +1054,3 @@\n-        tty->print_cr(\"Added initial compiler thread %s\", ct->get_thread_name());\n+        stringStream msg;\n+        msg.print(\"Added initial compiler thread %s\", ct->get_thread_name());\n+        print_compiler_threads(msg);\n@@ -1102,1 +1121,1 @@\n-          if (TraceCompilerThreads) {\n+          if (trace_compiler_threads()) {\n@@ -1104,2 +1123,4 @@\n-            tty->print_cr(\"JVMCI compiler thread creation failed:\");\n-            PENDING_EXCEPTION->print();\n+            stringStream msg;\n+            msg.print_cr(\"JVMCI compiler thread creation failed:\");\n+            PENDING_EXCEPTION->print_on(&msg);\n+            print_compiler_threads(msg);\n@@ -1120,1 +1141,1 @@\n-      if (TraceCompilerThreads) {\n+      if (trace_compiler_threads()) {\n@@ -1124,2 +1145,4 @@\n-        tty->print_cr(\"Added compiler thread %s (available memory: %dMB, available non-profiled code cache: %dMB)\",\n-                      ct->get_thread_name(), (int)(available_memory\/M), (int)(available_cc_np\/M));\n+        stringStream msg;\n+        msg.print(\"Added compiler thread %s (available memory: %dMB, available non-profiled code cache: %dMB)\",\n+                  ct->get_thread_name(), (int)(available_memory\/M), (int)(available_cc_np\/M));\n+        print_compiler_threads(msg);\n@@ -1141,1 +1164,1 @@\n-      if (TraceCompilerThreads) {\n+      if (trace_compiler_threads()) {\n@@ -1145,2 +1168,4 @@\n-        tty->print_cr(\"Added compiler thread %s (available memory: %dMB, available profiled code cache: %dMB)\",\n-                      ct->get_thread_name(), (int)(available_memory\/M), (int)(available_cc_p\/M));\n+        stringStream msg;\n+        msg.print(\"Added compiler thread %s (available memory: %dMB, available profiled code cache: %dMB)\",\n+                  ct->get_thread_name(), (int)(available_memory\/M), (int)(available_cc_p\/M));\n+        print_compiler_threads(msg);\n@@ -1962,3 +1987,6 @@\n-          if (TraceCompilerThreads) {\n-            tty->print_cr(\"Removing compiler thread %s after \" JLONG_FORMAT \" ms idle time\",\n-                          thread->name(), thread->idle_time_millis());\n+          if (trace_compiler_threads()) {\n+            ResourceMark rm;\n+            stringStream msg;\n+            msg.print(\"Removing compiler thread %s after \" JLONG_FORMAT \" ms idle time\",\n+                      thread->name(), thread->idle_time_millis());\n+            print_compiler_threads(msg);\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":44,"deletions":16,"binary":false,"changes":60,"status":"modified"}]}