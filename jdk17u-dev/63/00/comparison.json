{"files":[{"patch":"@@ -205,1 +205,1 @@\n-  return sample->has_stack_trace_id() && !sample->is_dead() && !sample->stacktrace().valid();\n+  return sample->has_stack_trace_id() && !sample->is_dead();\n@@ -252,1 +252,1 @@\n-  blob = writer.move();\n+  blob = writer.copy();\n@@ -281,1 +281,1 @@\n-  assert_locked_or_safepoint(ClassLoaderDataGraph_lock);\n+  assert(ClassLoaderDataGraph_lock->owned_by_self(), \"invariant\");\n@@ -384,6 +384,0 @@\n-  {\n-    \/\/ First install stacktrace blobs for the most recently added candidates.\n-    MutexLocker lock(SafepointSynchronize::is_at_safepoint() ? nullptr : ClassLoaderDataGraph_lock);\n-    \/\/ the lock is needed to ensure the unload lists do not grow in the middle of inspection.\n-    install_stack_traces(sampler);\n-  }\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/objectSampleCheckpoint.cpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}