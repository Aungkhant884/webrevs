{"files":[{"patch":"@@ -553,1 +553,1 @@\n-  GrowableArray<Handle> _loaded_cld_handles; \/\/ keep the CLDs alive\n+  GrowableArray<OopHandle> _loaded_cld_handles; \/\/ keep the CLDs alive\n@@ -558,2 +558,2 @@\n-    for (int i = 0; i < _loaded_cld.length(); i++) {\n-      ClassLoaderData* cld = _loaded_cld.at(i);\n+    for (int i = 0; i < _loaded_cld_handles.length(); i++) {\n+      _loaded_cld_handles.at(i).release(Universe::vm_global());\n@@ -563,4 +563,3 @@\n-    if (!cld->is_unloading()) {\n-      _loaded_cld.append(cld);\n-      _loaded_cld_handles.append(Handle(_current_thread, cld->holder_phantom()));\n-    }\n+    assert(cld->is_alive(), \"must be\");\n+    _loaded_cld.append(cld);\n+    _loaded_cld_handles.append(OopHandle(Universe::vm_global(), cld->holder_phantom()));\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+#include \"classfile\/systemDictionaryShared.hpp\"\n@@ -889,0 +890,2 @@\n+      \/\/ But still have to remove it from the dumptime_table.\n+      SystemDictionaryShared::handle_class_unloading(ik);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -55,0 +55,17 @@\n+\/**\n+ * @test id=custom-cl-zgc\n+ * @requires vm.cds.custom.loaders\n+ * @requires vm.gc.Z\n+ * @summary Test dumptime_table entries are removed with zgc eager class unloading\n+ * @bug 8274935\n+ * @library \/test\/lib\n+ *          \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ *          \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n+ *          \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\n+ * @modules java.base\/jdk.internal.misc\n+ *          jdk.httpserver\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm\/timeout=180 -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:. DynamicLoaderConstraintsTest custom-zgc\n+ *\/\n+\n@@ -86,0 +103,1 @@\n+    static boolean useZGC;\n@@ -89,0 +107,1 @@\n+        useZGC = (args.length != 0 && args[0].equals(\"custom-zgc\"));\n@@ -127,2 +146,9 @@\n-                cmdLine = TestCommon.concat(cmdLine, \"-cp\", loaderJar,\n-                                          loaderMainClass, appJar);\n+                if (useZGC) {\n+                    \/\/ Add options to force eager class unloading.\n+                    cmdLine = TestCommon.concat(cmdLine, \"-cp\", loaderJar,\n+                                                \"-XX:+UseZGC\", \"-XX:ZCollectionInterval=0.01\",\n+                                                loaderMainClass, appJar);\n+                } else {\n+                    cmdLine = TestCommon.concat(cmdLine, \"-cp\", loaderJar,\n+                                                loaderMainClass, appJar);\n+                }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/loaderConstraints\/DynamicLoaderConstraintsTest.java","additions":28,"deletions":2,"binary":false,"changes":30,"status":"modified"}]}