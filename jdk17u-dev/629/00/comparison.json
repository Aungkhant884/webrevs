{"files":[{"patch":"@@ -2541,19 +2541,0 @@\n-bool os::message_box(const char* title, const char* message) {\n-  int i;\n-  fdStream err(defaultStream::error_fd());\n-  for (i = 0; i < 78; i++) err.print_raw(\"=\");\n-  err.cr();\n-  err.print_raw_cr(title);\n-  for (i = 0; i < 78; i++) err.print_raw(\"-\");\n-  err.cr();\n-  err.print_raw_cr(message);\n-  for (i = 0; i < 78; i++) err.print_raw(\"=\");\n-  err.cr();\n-\n-  char buf[16];\n-  \/\/ Prevent process from exiting upon \"read error\" without consuming all CPU\n-  while (::read(0, buf, sizeof(buf)) <= 0) { ::sleep(100); }\n-\n-  return buf[0] == 'y' || buf[0] == 'Y';\n-}\n-\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2242,19 +2242,0 @@\n-bool os::message_box(const char* title, const char* message) {\n-  int i;\n-  fdStream err(defaultStream::error_fd());\n-  for (i = 0; i < 78; i++) err.print_raw(\"=\");\n-  err.cr();\n-  err.print_raw_cr(title);\n-  for (i = 0; i < 78; i++) err.print_raw(\"-\");\n-  err.cr();\n-  err.print_raw_cr(message);\n-  for (i = 0; i < 78; i++) err.print_raw(\"=\");\n-  err.cr();\n-\n-  char buf[16];\n-  \/\/ Prevent process from exiting upon \"read error\" without consuming all CPU\n-  while (::read(0, buf, sizeof(buf)) <= 0) { ::sleep(100); }\n-\n-  return buf[0] == 'y' || buf[0] == 'Y';\n-}\n-\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -4911,19 +4911,0 @@\n-bool os::message_box(const char* title, const char* message) {\n-  int i;\n-  fdStream err(defaultStream::error_fd());\n-  for (i = 0; i < 78; i++) err.print_raw(\"=\");\n-  err.cr();\n-  err.print_raw_cr(title);\n-  for (i = 0; i < 78; i++) err.print_raw(\"-\");\n-  err.cr();\n-  err.print_raw_cr(message);\n-  for (i = 0; i < 78; i++) err.print_raw(\"=\");\n-  err.cr();\n-\n-  char buf[16];\n-  \/\/ Prevent process from exiting upon \"read error\" without consuming all CPU\n-  while (::read(0, buf, sizeof(buf)) <= 0) { ::sleep(100); }\n-\n-  return buf[0] == 'y' || buf[0] == 'Y';\n-}\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"utilities\/defaultStream.hpp\"\n@@ -1998,0 +1999,19 @@\n+bool os::message_box(const char* title, const char* message) {\n+  int i;\n+  fdStream err(defaultStream::error_fd());\n+  for (i = 0; i < 78; i++) err.print_raw(\"=\");\n+  err.cr();\n+  err.print_raw_cr(title);\n+  for (i = 0; i < 78; i++) err.print_raw(\"-\");\n+  err.cr();\n+  err.print_raw_cr(message);\n+  for (i = 0; i < 78; i++) err.print_raw(\"=\");\n+  err.cr();\n+\n+  char buf[16];\n+  \/\/ Prevent process from exiting upon \"read error\" without consuming all CPU\n+  while (::read(0, buf, sizeof(buf)) <= 0) { ::sleep(100); }\n+\n+  return buf[0] == 'y' || buf[0] == 'Y';\n+}\n+\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"}]}