{"files":[{"patch":"@@ -39,0 +39,2 @@\n+import java.util.ArrayList;\n+import java.util.Comparator;\n@@ -282,0 +284,8 @@\n+        \/\/ Order substitution data by the length of keys.\n+        \/\/ Longer keys go first.\n+        \/\/ This is needed to properly handle cases when one key is\n+        \/\/ a subtring of another and try the later first.\n+        var orderedEntries = substitutionData.entrySet().stream()\n+                .sorted(Map.Entry.<String, String>comparingByKey(\n+                        Comparator.comparingInt(String::length)).reversed())\n+                .toList();\n@@ -284,3 +294,19 @@\n-            for (var entry : substitutionData.entrySet()) {\n-                result = result.replace(entry.getKey(), Optional.ofNullable(\n-                        entry.getValue()).orElse(\"\"));\n+            var workEntries = orderedEntries;\n+            var it = workEntries.listIterator();\n+            while (it.hasNext()) {\n+                var entry = it.next();\n+                String newResult = result.replace(entry.getKey(),\n+                        Optional.ofNullable(entry.getValue()).orElse(\"\"));\n+                if (!newResult.equals(result)) {\n+                    \/\/ Substitution occured.\n+                    \/\/ Remove the matching substitution key from the list and\n+                    \/\/ go over the list of substitution entries again.\n+                    if (workEntries == orderedEntries) {\n+                        workEntries = new ArrayList<>(orderedEntries);\n+                        it = workEntries.listIterator(it.nextIndex() - 1);\n+                        it.next();\n+                    }\n+                    it.remove();\n+                    it = workEntries.listIterator();\n+                    result = newResult;\n+                }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/OverridableResource.java","additions":29,"deletions":3,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -139,2 +139,2 @@\n-        final List<String> resourceData = List.of(\"A\", \"[BB]\", \"C\", \"Foo\",\n-                \"GoodbyeHello\");\n+        final List<String> resourceData = List.of(\"A\", \"[BB]\", \"C\", \"Foo\", \"Foo\",\n+                \"GoodbyeHello\", \"_B\");\n@@ -144,1 +144,1 @@\n-                \"Bar\", \"Foo\", \"B\"));\n+                \"Bar\", \"Foo\", \"B\", \"_B\", \"JJ\"));\n@@ -148,1 +148,1 @@\n-                \"B\", \"Goodbye\");\n+                \"Bar\", \"Bar\", \"Goodbye\", \"JJ\");\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/OverridableResourceTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}