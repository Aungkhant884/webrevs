{"files":[{"patch":"@@ -490,9 +490,9 @@\n-                            setFileContents(prog, \"exec \/bin\/true\\n\");\n-                            prog.setExecutable(true);\n-                            equal(run(pb).exitValue(),\n-                                  True.exitValue());\n-                            prog.delete();\n-                            setFileContents(prog, \"exec \/bin\/false\\n\");\n-                            prog.setExecutable(true);\n-                            equal(run(pb).exitValue(),\n-                                  False.exitValue());\n+                            if (!(Platform.isLinux() && Platform.isMusl())) {\n+                                setFileContents(prog, \"exec \/bin\/true\\n\");\n+                                prog.setExecutable(true);\n+                                equal(run(pb).exitValue(), True.exitValue());\n+                                prog.delete();\n+                                setFileContents(prog, \"exec \/bin\/false\\n\");\n+                                prog.setExecutable(true);\n+                                equal(run(pb).exitValue(), False.exitValue());\n+                            }\n@@ -515,8 +515,10 @@\n-                        setFileContents(dir1Prog, \"\/bin\/echo \\\"$@\\\"\\n\");\n-                        pb.command(new String[] {\"prog\", \"hello\", \"world\"});\n-                        checkPermissionDenied(pb);\n-                        dir1Prog.setExecutable(true);\n-                        equal(run(pb).out(), \"hello world\\n\");\n-                        equal(run(pb).exitValue(), True.exitValue());\n-                        dir1Prog.delete();\n-                        pb.command(cmd);\n+                        if (!(Platform.isLinux() && Platform.isMusl())) {\n+                            setFileContents(dir1Prog, \"\/bin\/echo \\\"$@\\\"\\n\");\n+                            pb.command(new String[] {\"prog\", \"hello\", \"world\"});\n+                            checkPermissionDenied(pb);\n+                            dir1Prog.setExecutable(true);\n+                            equal(run(pb).out(), \"hello world\\n\");\n+                            equal(run(pb).exitValue(), True.exitValue());\n+                            dir1Prog.delete();\n+                            pb.command(cmd);\n+                        }\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/Basic.java","additions":19,"deletions":17,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+ * @comment musl\/Alpine has problems executing some shell scripts, see 8285987\n+ * @requires !vm.musl\n","filename":"test\/langtools\/jdk\/jshell\/ExternalEditorTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -190,0 +190,13 @@\n+    public static boolean isMusl() {\n+        try {\n+            ProcessBuilder pb = new ProcessBuilder(\"ldd\", \"--version\");\n+            pb.redirectErrorStream(true);\n+            Process p = pb.start();\n+            BufferedReader b = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+            String l = b.readLine();\n+            if (l != null && l.contains(\"musl\")) { return true; }\n+        } catch(Exception e) {\n+        }\n+        return false;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}