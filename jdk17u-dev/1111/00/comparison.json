{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,3 @@\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+\n@@ -40,0 +43,5 @@\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        PrintStream ps = new PrintStream(baos);\n+        PrintStream oldOut = System.out;\n+        System.setOut(ps);\n+\n@@ -47,4 +55,1 @@\n-            if (Utils.notAllBailedOut(sDefault, s1, s3)) {\n-                \/\/ Not all scenarios had a bailout which means that at least one exception should have been thrown.\n-                Asserts.fail(\"Should have thrown an exception\");\n-            }\n+            Utils.shouldHaveThrownException(baos.toString());\n@@ -53,2 +58,1 @@\n-                \/\/ Was there a bailout in a scenario? If not fail.\n-                Asserts.assertTrue(Utils.anyBailedOut(sDefault, s1, s3), e.getMessage());\n+                Utils.throwIfNoSafepointPrinting(baos.toString(), e);\n@@ -57,0 +61,2 @@\n+\n+        baos.reset();\n@@ -59,4 +65,1 @@\n-            if (Utils.notAllBailedOut(s1, s3)) {\n-                \/\/ Not all scenarios had a bailout which means that at least one exception should have been thrown.\n-                Asserts.fail(\"Should have thrown an exception\");\n-            }\n+            Utils.shouldHaveThrownException(baos.toString());\n@@ -65,2 +68,1 @@\n-                \/\/ Was there a bailout in a scenario? If not fail.\n-                Asserts.assertTrue(Utils.anyBailedOut(sDefault, s1, s3), e.getMessage());\n+                Utils.throwIfNoSafepointPrinting(baos.toString(), e);\n@@ -69,0 +71,1 @@\n+        System.setOut(oldOut);\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestScenarios.java","additions":16,"deletions":13,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    public static void shouldHaveThrownException(String s) {\n+    public static void shouldHaveThrownException(String output) {\n@@ -36,1 +36,1 @@\n-        if (!s.contains(IRMatcher.SAFEPOINT_WHILE_PRINTING_MESSAGE)) {\n+        if (!output.contains(IRMatcher.SAFEPOINT_WHILE_PRINTING_MESSAGE)) {\n@@ -41,12 +41,4 @@\n-    \/**\n-     * Is there at least one scenario which hit a safepoint while printing (i.e. a bailout)?\n-     *\/\n-    public static boolean anyBailedOut(Scenario... scenarios) {\n-        return Arrays.stream(scenarios).anyMatch(s -> s.getTestVMOutput().contains(IRMatcher.SAFEPOINT_WHILE_PRINTING_MESSAGE));\n-    }\n-\n-    \/**\n-     * Is there at least one scenario which did not hit a safepoint while printing (i.e. a bailout)?\n-     *\/\n-    public static boolean notAllBailedOut(Scenario... scenarios) {\n-        return Arrays.stream(scenarios).anyMatch(s -> !s.getTestVMOutput().contains(IRMatcher.SAFEPOINT_WHILE_PRINTING_MESSAGE));\n+    public static void throwIfNoSafepointPrinting(String output, RuntimeException e) {\n+        if (!output.contains(IRMatcher.SAFEPOINT_WHILE_PRINTING_MESSAGE)) {\n+            throw e;\n+        }\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/Utils.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"}]}