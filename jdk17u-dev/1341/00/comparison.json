{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,0 +180,5 @@\n+            if (nanos > MILLISECONDS.toNanos(millis)) {\n+                \/\/ Round up any excess nanos to the nearest millisecond to\n+                \/\/ avoid parking for less than requested.\n+                millis++;\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/NioSocketImpl.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n@@ -91,0 +92,5 @@\n+            if (nanos > MILLISECONDS.toNanos(millis)) {\n+                \/\/ Round up any excess nanos to the nearest millisecond to\n+                \/\/ avoid parking for less than requested.\n+                millis++;\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SelChImpl.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}