{"files":[{"patch":"@@ -1475,1 +1475,6 @@\n-Node *LoadNode::split_through_phi(PhaseGVN *phase) {\n+Node* LoadNode::split_through_phi(PhaseGVN* phase) {\n+  if (req() > 3) {\n+    assert(is_LoadVector() && Opcode() != Op_LoadVector, \"load has too many inputs\");\n+    \/\/ LoadVector subclasses such as LoadVectorMasked have extra inputs that the logic below doesn't take into account\n+    return NULL;\n+  }\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug JDK-8292780\n+ * @summary misc tests failed \"assert(false) failed: graph should be schedulable\"\n+ *\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement TestArrayCopyPartialInliningLoadSplit\n+ *\/\n+\n+public class TestArrayCopyPartialInliningLoadSplit {\n+    public static void main(String[] args) {\n+        byte[] array = new byte[16];\n+        for (int i = 0; i < 20_0000; i++) {\n+            test(array, 16, 0, 0);\n+        }\n+    }\n+\n+    private static void test(byte[] array, int length, int srcPos, int dstPos) {\n+        byte[] nonEscaping = new byte[16];\n+        nonEscaping[0] = 0x42;\n+        System.arraycopy(array, srcPos, nonEscaping, 1, 8);\n+        System.arraycopy(nonEscaping, 0, array, 0, length);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyPartialInliningLoadSplit.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"}]}