{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -289,0 +289,1 @@\n+extern jint sctpHandleSocketErrorWithMessage(JNIEnv *env, jint errorValue, const char* message);\n","filename":"src\/jdk.sctp\/unix\/native\/libsctp\/Sctp.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,2 +119,2 @@\n-jint\n-sctpHandleSocketError(JNIEnv *env, jint errorValue)\n+jint sctpHandleSocketErrorWithMessage(JNIEnv *env, jint errorValue,\n+                                      const char* message)\n@@ -130,2 +130,0 @@\n-            xn = JNU_JAVANETPKG \"ConnectException\";\n-            break;\n@@ -133,0 +131,1 @@\n+        case ENOTCONN:\n@@ -147,1 +146,5 @@\n-    JNU_ThrowByNameWithLastError(env, xn, \"NioSocketError\");\n+    if (message == NULL) {\n+        JNU_ThrowByNameWithLastError(env, xn, \"NioSocketError\");\n+    } else {\n+        JNU_ThrowByNameWithMessageAndLastError(env, xn, message);\n+    }\n@@ -151,0 +154,5 @@\n+jint sctpHandleSocketError(JNIEnv *env, jint errorValue)\n+{\n+    return sctpHandleSocketErrorWithMessage(env, errorValue, NULL);\n+}\n+\n@@ -197,1 +205,1 @@\n-            return sctpHandleSocketError(env, errno);\n+            return sctpHandleSocketErrorWithMessage(env, errno, \"socket call failed\");\n@@ -212,1 +220,1 @@\n-       sctpHandleSocketError(env, errno);\n+       sctpHandleSocketErrorWithMessage(env, errno, \"setsockopt failed\");\n","filename":"src\/jdk.sctp\/unix\/native\/libsctp\/SctpNet.c","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"}]}