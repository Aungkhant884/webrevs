{"files":[{"patch":"@@ -1346,7 +1346,5 @@\n-    \/\/ Fall through into rest of the clean up code which will move\n-    \/\/ any dependent nodes onto the upper bound test.\n-    new_predicate_proj = upper_bound_proj;\n-\n-    if (iff->is_RangeCheck()) {\n-      new_predicate_proj = insert_initial_skeleton_predicate(iff, loop, proj, predicate_proj, upper_bound_proj, scale, offset, init, limit, stride, rng, overflow, reason);\n-    }\n+    \/\/ Fall through into rest of the cleanup code which will move any dependent nodes to the skeleton predicates of the\n+    \/\/ upper bound test. We always need to create skeleton predicates in order to properly remove dead loops when later\n+    \/\/ splitting the predicated loop into (unreachable) sub-loops (i.e. done by unrolling, peeling, pre\/main\/post etc.).\n+    new_predicate_proj = insert_initial_skeleton_predicate(iff, loop, proj, predicate_proj, upper_bound_proj, scale,\n+                                                           offset, init, limit, stride, rng, overflow, reason);\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"}]}