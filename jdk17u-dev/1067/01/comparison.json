{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,1 +134,1 @@\n-  if (_cpu == CPU_AMCC && (_model == 0) && (_variant == 0x3)) {\n+  if (_cpu == CPU_AMCC && (_model == CPU_MODEL_EMAG) && (_variant == 0x3)) {\n@@ -146,0 +146,7 @@\n+  \/\/ Ampere CPUs: Ampere-1 and Ampere-1A\n+  if (_cpu == CPU_AMPERE && ((_model == CPU_MODEL_AMPERE_1) || (_model == CPU_MODEL_AMPERE_1A))) {\n+    if (FLAG_IS_DEFAULT(UseSIMDForMemoryOps)) {\n+      FLAG_SET_DEFAULT(UseSIMDForMemoryOps, true);\n+    }\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,0 +102,8 @@\n+  enum Ampere_CPU_Model {\n+    CPU_MODEL_EMAG      = 0x0,   \/* CPU implementer is CPU_AMCC *\/\n+    CPU_MODEL_ALTRA     = 0xd0c, \/* CPU implementer is CPU_ARM, Neoverse N1 *\/\n+    CPU_MODEL_ALTRAMAX  = 0xd0c, \/* CPU implementer is CPU_ARM, Neoverse N1 *\/\n+    CPU_MODEL_AMPERE_1  = 0xac3, \/* CPU implementer is CPU_AMPERE *\/\n+    CPU_MODEL_AMPERE_1A = 0xac4  \/* CPU implementer is CPU_AMPERE *\/\n+  };\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}