{"files":[{"patch":"@@ -175,1 +175,2 @@\n-                    } else if (thisRole == AccessibleRole.MENU_ITEM) {\n+                    } else if (thisRole == AccessibleRole.MENU_ITEM ||\n+                            (thisRole == AccessibleRole.MENU)) {\n@@ -203,1 +204,0 @@\n-\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessible.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:51];\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:50];\n@@ -161,1 +161,0 @@\n-    [rolesMap setObject:@\"MenuItemAccessibility\" forKey:@\"menuitem\"];\n@@ -189,1 +188,2 @@\n-    rowRolesMapForParent = [[NSMutableDictionary alloc] initWithCapacity:2];\n+    rowRolesMapForParent = [[NSMutableDictionary alloc] initWithCapacity:3];\n+    [rowRolesMapForParent setObject:@\"MenuItemAccessibility\" forKey:@\"MenuAccessibility\"];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test implementation of NSAccessibilityMenu and NSAccessibilityMenuItem roles peer\n+ * @author Artem.Semenov@jetbrains.com\n+ * @run main\/manual AccessibleJPopupMenuTest\n+ * @requires (os.family == \"mac\")\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JMenu;\n+import javax.swing.JPanel;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+import java.util.concurrent.CountDownLatch;\n+\n+public class AccessibleJPopupMenuTest extends AccessibleComponentTest {\n+\n+    @Override\n+    public CountDownLatch createCountDownLatch() {\n+        return new CountDownLatch(1);\n+    }\n+\n+\n+    private static JPopupMenu createPopup() {\n+        JPopupMenu popup = new JPopupMenu(\"MENU\");\n+        popup.add(\"One\");\n+        popup.add(\"Two\");\n+        popup.add(\"Three\");\n+        popup.addSeparator();\n+        JMenu menu = new JMenu(\"For submenu\");\n+        menu.add(\"subOne\");\n+        menu.add(\"subTwo\");\n+        menu.add(\"subThree\");\n+        popup.add(menu);\n+        return popup;\n+    }\n+\n+    public void createTest() {\n+        INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+                + \"Check a11y of JPopupMenu.\\n\\n\"\n+                + \"Turn screen reader on, and Tab to the show button and press space.\\n\"\n+                + \"Press the up and down arrow buttons to move through the menu, and open submenu.\\n\\n\"\n+                + \"If you can hear popup menu items tab further and press PASS, otherwise press FAIL.\\n\";\n+\n+        JPanel frame = new JPanel();\n+\n+        JButton button = new JButton(\"show\");\n+        button.setPreferredSize(new Dimension(100, 35));\n+\n+        button.addActionListener(new ActionListener() {\n+\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                createPopup().show(button, button.getX(), button.getY());\n+            }\n+        });\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(button);\n+        exceptionString = \"Accessible JPopupMenu test failed!\";\n+        super.createUI(frame, \"Accessible JPopupMenu test\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        AccessibleJPopupMenuTest a11yTest = new AccessibleJPopupMenuTest();\n+\n+        CountDownLatch countDownLatch = a11yTest.createCountDownLatch();\n+        SwingUtilities.invokeLater(a11yTest::createTest);\n+        countDownLatch.await();\n+\n+        if (!testResult) {\n+            throw new RuntimeException(a11yTest.exceptionString);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleJPopupMenuTest.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"}]}