{"files":[{"patch":"@@ -758,0 +758,1 @@\n+  if (r->is_KRegister()) return rc_kreg;\n@@ -1252,20 +1253,0 @@\n-  assert( size > 0, \"missed a case\" );\n-\n-  \/\/ --------------------------------------------------------------------\n-  \/\/ Check for second bits still needing moving.\n-  if( src_second == dst_second )\n-    return size;               \/\/ Self copy; no move\n-  assert( src_second_rc != rc_bad && dst_second_rc != rc_bad, \"src_second & dst_second cannot be Bad\" );\n-\n-  \/\/ Check for second word int-int move\n-  if( src_second_rc == rc_int && dst_second_rc == rc_int )\n-    return impl_mov_helper(cbuf,do_size,src_second,dst_second,size, st);\n-\n-  \/\/ Check for second word integer store\n-  if( src_second_rc == rc_int && dst_second_rc == rc_stack )\n-    return impl_helper(cbuf,do_size,false,ra_->reg2offset(dst_second),src_second,0x89,\"MOV \",size, st);\n-\n-  \/\/ Check for second word integer load\n-  if( dst_second_rc == rc_int && src_second_rc == rc_stack )\n-    return impl_helper(cbuf,do_size,true ,ra_->reg2offset(src_second),dst_second,0x8B,\"MOV \",size, st);\n-\n@@ -1309,0 +1290,20 @@\n+  assert( size > 0, \"missed a case\" );\n+\n+  \/\/ --------------------------------------------------------------------\n+  \/\/ Check for second bits still needing moving.\n+  if( src_second == dst_second )\n+    return size;               \/\/ Self copy; no move\n+  assert( src_second_rc != rc_bad && dst_second_rc != rc_bad, \"src_second & dst_second cannot be Bad\" );\n+\n+  \/\/ Check for second word int-int move\n+  if( src_second_rc == rc_int && dst_second_rc == rc_int )\n+    return impl_mov_helper(cbuf,do_size,src_second,dst_second,size, st);\n+\n+  \/\/ Check for second word integer store\n+  if( src_second_rc == rc_int && dst_second_rc == rc_stack )\n+    return impl_helper(cbuf,do_size,false,ra_->reg2offset(dst_second),src_second,0x89,\"MOV \",size, st);\n+\n+  \/\/ Check for second word integer load\n+  if( dst_second_rc == rc_int && src_second_rc == rc_stack )\n+    return impl_helper(cbuf,do_size,true ,ra_->reg2offset(src_second),dst_second,0x8B,\"MOV \",size, st);\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"}]}