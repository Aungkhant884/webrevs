{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.lang.ref.SoftReference;\n@@ -56,0 +57,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -103,0 +105,2 @@\n+    private volatile SoftReference<Map<String, Boolean>> cacheRef =\n+            new SoftReference<>(null);\n@@ -160,1 +164,1 @@\n-        if (!checkAlgorithm(disabledAlgorithms, algorithm, decomposer)) {\n+        if (!cachedCheckAlgorithm(algorithm)) {\n@@ -243,1 +247,1 @@\n-                if (!checkAlgorithm(disabledAlgorithms, curve, decomposer)) {\n+                if (!cachedCheckAlgorithm(curve)) {\n@@ -964,0 +968,19 @@\n+    private boolean cachedCheckAlgorithm(String algorithm) {\n+        Map<String, Boolean> cache;\n+        if ((cache = cacheRef.get()) == null) {\n+            synchronized (this) {\n+                if ((cache = cacheRef.get()) == null) {\n+                    cache = new ConcurrentHashMap<>();\n+                    cacheRef = new SoftReference<>(cache);\n+                }\n+            }\n+        }\n+        Boolean result = cache.get(algorithm);\n+        if (result != null) {\n+            return result;\n+        }\n+        result = checkAlgorithm(disabledAlgorithms, algorithm, decomposer);\n+        cache.put(algorithm, result);\n+        return result;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DisabledAlgorithmConstraints.java","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"}]}