{"files":[{"patch":"@@ -153,2 +153,2 @@\n-  static OopMap* save_live_registers(MacroAssembler* masm, int additional_frame_words, int* total_frame_words, bool save_vectors);\n-  static void restore_live_registers(MacroAssembler* masm, bool restore_vectors = false);\n+  static OopMap* save_live_registers(MacroAssembler* masm, int additional_frame_words, int* total_frame_words, bool save_wide_vectors);\n+  static void restore_live_registers(MacroAssembler* masm, bool restore_wide_vectors = false);\n@@ -171,1 +171,1 @@\n-OopMap* RegisterSaver::save_live_registers(MacroAssembler* masm, int additional_frame_words, int* total_frame_words, bool save_vectors) {\n+OopMap* RegisterSaver::save_live_registers(MacroAssembler* masm, int additional_frame_words, int* total_frame_words, bool save_wide_vectors) {\n@@ -178,2 +178,2 @@\n-  if (save_vectors && UseAVX == 0) {\n-    save_vectors = false; \/\/ vectors larger than 16 byte long are supported only with AVX\n+  if (save_wide_vectors && UseAVX == 0) {\n+    save_wide_vectors = false; \/\/ vectors larger than 16 byte long are supported only with AVX\n@@ -181,1 +181,1 @@\n-  assert(!save_vectors || MaxVectorSize <= 64, \"Only up to 64 byte long vectors are supported\");\n+  assert(!save_wide_vectors || MaxVectorSize <= 64, \"Only up to 64 byte long vectors are supported\");\n@@ -183,1 +183,1 @@\n-  save_vectors = false; \/\/ vectors are generated only by C2 and JVMCI\n+  save_wide_vectors = false; \/\/ vectors are generated only by C2 and JVMCI\n@@ -204,1 +204,1 @@\n-  if (save_vectors) {\n+  if (save_wide_vectors) {\n@@ -233,1 +233,1 @@\n-      \/\/ Save upper bank of ZMM registers(16..31) for double\/float usage\n+      \/\/ Save upper bank of XMM registers(16..31) for scalar or 16-byte vector usage\n@@ -236,0 +236,1 @@\n+      int vector_len = VM_Version::supports_avx512vl() ?  Assembler::AVX_128bit : Assembler::AVX_512bit;\n@@ -237,1 +238,1 @@\n-        __ movsd(Address(rsp, base_addr+(off++*64)), as_XMMRegister(n));\n+        __ evmovdqul(Address(rsp, base_addr+(off++*64)), as_XMMRegister(n), vector_len);\n@@ -301,1 +302,1 @@\n-  if (save_vectors) {\n+  if (save_wide_vectors) {\n@@ -364,1 +365,1 @@\n-void RegisterSaver::restore_live_registers(MacroAssembler* masm, bool restore_vectors) {\n+void RegisterSaver::restore_live_registers(MacroAssembler* masm, bool restore_wide_vectors) {\n@@ -375,1 +376,1 @@\n-  if (restore_vectors) {\n+  if (restore_wide_vectors) {\n@@ -380,1 +381,1 @@\n-  assert(!restore_vectors, \"vectors are generated only by C2\");\n+  assert(!restore_wide_vectors, \"vectors are generated only by C2\");\n@@ -386,1 +387,1 @@\n-  if (restore_vectors) {\n+  if (restore_wide_vectors) {\n@@ -415,1 +416,1 @@\n-      \/\/ Restore upper bank of ZMM registers(16..31) for double\/float usage\n+      \/\/ Restore upper bank of XMM registers(16..31) for scalar or 16-byte vector usage\n@@ -418,0 +419,1 @@\n+      int vector_len = VM_Version::supports_avx512vl() ?  Assembler::AVX_128bit : Assembler::AVX_512bit;\n@@ -419,1 +421,1 @@\n-        __ movsd(as_XMMRegister(n), Address(rsp, base_addr+(off++*64)));\n+        __ evmovdqul(as_XMMRegister(n), Address(rsp, base_addr+(off++*64)), vector_len);\n@@ -2504,1 +2506,1 @@\n-  map = RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_vectors*\/ true);\n+  map = RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_wide_vectors*\/ true);\n@@ -2522,1 +2524,1 @@\n-  (void) RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_vectors*\/ true);\n+  (void) RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_wide_vectors*\/ true);\n@@ -2541,1 +2543,1 @@\n-    RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_vectors*\/ true);\n+    RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_wide_vectors*\/ true);\n@@ -2588,1 +2590,1 @@\n-  map = RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_vectors*\/ true);\n+  map = RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_wide_vectors*\/ true);\n@@ -3019,1 +3021,1 @@\n-  bool save_vectors = (poll_type == POLL_AT_VECTOR_LOOP);\n+  bool save_wide_vectors = (poll_type == POLL_AT_VECTOR_LOOP);\n@@ -3034,1 +3036,1 @@\n-  map = RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, save_vectors);\n+  map = RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, save_wide_vectors);\n@@ -3073,1 +3075,1 @@\n-  RegisterSaver::restore_live_registers(masm, save_vectors);\n+  RegisterSaver::restore_live_registers(masm, save_wide_vectors);\n@@ -3146,1 +3148,1 @@\n-  RegisterSaver::restore_live_registers(masm, save_vectors);\n+  RegisterSaver::restore_live_registers(masm, save_wide_vectors);\n@@ -3186,1 +3188,1 @@\n-  map = RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_vectors*\/ false);\n+  map = RegisterSaver::save_live_registers(masm, 0, &frame_size_in_words, \/*save_wide_vectors*\/ false);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":28,"deletions":26,"binary":false,"changes":54,"status":"modified"}]}