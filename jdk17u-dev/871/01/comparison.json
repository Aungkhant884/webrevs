{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,0 +73,1 @@\n+jmethodID AwtTrayIcon::updateImageID;\n@@ -77,0 +78,1 @@\n+bool AwtTrayIcon::m_bDPIChanged = false;\n@@ -224,0 +226,12 @@\n+\/\/ Call updateImage() method on the peer when screen scale changes\n+void AwtTrayIcon::UpdateImage()\n+{\n+    JNIEnv *env =(JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+\n+    jobject peer = GetPeer(env);\n+    if (peer != NULL) {\n+        env->CallVoidMethod(peer, updateImageID);\n+        env->ExceptionClear();\n+    }\n+}\n+\n@@ -251,0 +265,4 @@\n+        case WM_DPICHANGED:\n+            \/\/ Set the flag to update icon images, see WmTaskbarCreated\n+            m_bDPIChanged = true;\n+            break;\n@@ -477,4 +495,3 @@\n-        BOOL result = item->m_trayIcon->SendTrayMessage(NIM_ADD);\n-        \/\/ 6270114: Instructs the taskbar to behave according to the Shell version 5.0\n-        if (result) {\n-            item->m_trayIcon->SendTrayMessage(NIM_SETVERSION);\n+        if (m_bDPIChanged) {\n+            \/\/ Update the icon image\n+            item->m_trayIcon->UpdateImage();\n@@ -482,0 +499,1 @@\n+        item->m_trayIcon->AddTrayIcon();\n@@ -483,0 +501,1 @@\n+    m_bDPIChanged = false;\n@@ -728,1 +747,1 @@\n-    SendTrayMessage(NIM_MODIFY);\n+    ModifyTrayIcon();\n@@ -796,4 +815,4 @@\n-    BOOL result = trayIcon->SendTrayMessage(jupdate == JNI_TRUE ? NIM_MODIFY : NIM_ADD);\n-    \/\/ 6270114: Instructs the taskbar to behave according to the Shell version 5.0\n-    if (result && jupdate == JNI_FALSE) {\n-        trayIcon->SendTrayMessage(NIM_SETVERSION);\n+    if (jupdate == JNI_TRUE) {\n+        trayIcon->ModifyTrayIcon();\n+    } else {\n+        trayIcon->AddTrayIcon();\n@@ -848,1 +867,1 @@\n-    SendTrayMessage(NIM_MODIFY);\n+    ModifyTrayIcon();\n@@ -920,0 +939,8 @@\n+    jclass wPeerCls = env->FindClass(\"sun\/awt\/windows\/WTrayIconPeer\");\n+    DASSERT(wPeerCls != NULL);\n+    CHECK_NULL(wPeerCls);\n+\n+    AwtTrayIcon::updateImageID = env->GetMethodID(wPeerCls, \"updateImage\", \"()V\");\n+    DASSERT(AwtTrayIcon::updateImageID != NULL);\n+    CHECK_NULL(AwtTrayIcon::updateImageID);\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_TrayIcon.cpp","additions":38,"deletions":11,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,0 @@\n-    BOOL SendTrayMessage(DWORD dwMessage);\n@@ -89,0 +88,2 @@\n+    void UpdateImage();\n+\n@@ -124,0 +125,1 @@\n+    static jmethodID updateImageID;\n@@ -154,0 +156,16 @@\n+    BOOL SendTrayMessage(DWORD dwMessage);\n+\n+    INLINE void AddTrayIcon() {\n+        BOOL result = SendTrayMessage(NIM_ADD);\n+        \/\/ 6270114: Instructs the taskbar to behave according to the Shell version 5.0\n+        if (result) {\n+            SendTrayMessage(NIM_SETVERSION);\n+        }\n+    }\n+\n+    INLINE void ModifyTrayIcon() {\n+        SendTrayMessage(NIM_MODIFY);\n+    }\n+\n+    static bool m_bDPIChanged;\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_TrayIcon.h","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255439\n+ * @key headful\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary To test tray icon scaling with on-the-fly DPI\/Scale changes on Windows\n+ * @run main\/manual TrayIconScalingTest\n+ * @requires (os.family == \"windows\")\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.RenderingHints;\n+import java.awt.SystemTray;\n+import java.awt.TrayIcon;\n+import java.awt.font.TextLayout;\n+import java.awt.image.BaseMultiResolutionImage;\n+import java.awt.image.BufferedImage;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.ArrayList;\n+\n+public class TrayIconScalingTest {\n+\n+    private static SystemTray tray;\n+    private static TrayIcon icon;\n+\n+    private static final String INSTRUCTIONS =\n+            \"This test checks if the tray icon gets updated when DPI \/ Scale\" +\n+            \" is changed on the fly.\\n\\n\" +\n+            \"STEPS: \\n\\n\" +\n+            \"1. Check the system tray \/ notification area on Windows\" +\n+            \" taskbar, you should see a white icon which displays a\" +\n+            \" number.\\n\\n\" +\n+            \"2. Navigate to Settings > System > Display and change the\" +\n+            \" display scale by selecting any value from\" +\n+            \" Scale & Layout dropdown.\\n\\n\"+\n+            \"3. When the scale changes, check the white tray icon,\" +\n+            \" there should be no distortion, it should be displayed sharp,\\n\" +\n+            \" and the displayed number should correspond to the current\"+\n+            \" scale:\\n\" +\n+            \" 100% - 16, 125% - 20, 150% - 24, 175% - 28, 200% - 32.\\n\\n\"+\n+            \" If the icon is displayed sharp and without any distortion,\" +\n+            \" press PASS, otherwise press FAIL.\\n\";\n+\n+    private static final Font font = new Font(\"Dialog\", Font.BOLD, 12);\n+\n+    public static void main(String[] args)\n+            throws InterruptedException, InvocationTargetException {\n+        \/\/ check if SystemTray supported on the machine\n+        if (!SystemTray.isSupported()) {\n+            System.out.println(\"SystemTray is not supported\");\n+            return;\n+        }\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(\"TrayIcon \" +\n+                \"Test Instructions\", INSTRUCTIONS, 8, 18, 85);\n+        createAndShowGUI();\n+        try {\n+            passFailJFrame.awaitAndCheck();\n+        } finally {\n+            tray.remove(icon);\n+        }\n+    }\n+\n+    private static void createAndShowGUI() {\n+        ArrayList<Image> imageList = new ArrayList<>();\n+        for (int size = 16; size <= 48; size += 4) {\n+            imageList.add(createIcon(size));\n+        }\n+        Image mRImage =\n+                new BaseMultiResolutionImage(imageList.toArray(new Image[0]));\n+\n+        tray = SystemTray.getSystemTray();\n+        icon = new TrayIcon(mRImage);\n+\n+        try {\n+            tray.add(icon);\n+        } catch (AWTException e) {\n+            throw new RuntimeException(\"Error while adding icon to system tray\");\n+        }\n+    }\n+\n+    private static Image createIcon(int size) {\n+        BufferedImage image = new BufferedImage(size, size,\n+                BufferedImage.TYPE_INT_ARGB);\n+        Graphics2D g = image.createGraphics();\n+        g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n+        g.setColor(Color.WHITE);\n+        g.fillRect(0, 0, size, size);\n+        g.setFont(font);\n+        g.setColor(Color.BLACK);\n+\n+        TextLayout layout = new TextLayout(String.valueOf(size),\n+                g.getFont(), g.getFontRenderContext());\n+        int height = (int) layout.getBounds().getHeight();\n+        int width = (int) layout.getBounds().getWidth();\n+        layout.draw(g, (size - width) \/ 2f - 1, (size + height) \/ 2f);\n+        g.dispose();\n+        return image;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconScalingTest.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"}]}