{"files":[{"patch":"@@ -5356,0 +5356,28 @@\n+  if (least != early) {\n+    \/\/ Move the node above predicates as far up as possible so a\n+    \/\/ following pass of loop predication doesn't hoist a predicate\n+    \/\/ that depends on it above that node.\n+    Node* new_ctrl = least;\n+    for (;;) {\n+      if (!new_ctrl->is_Proj()) {\n+        break;\n+      }\n+      CallStaticJavaNode* call = new_ctrl->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n+      if (call == NULL) {\n+        break;\n+      }\n+      int req = call->uncommon_trap_request();\n+      Deoptimization::DeoptReason trap_reason = Deoptimization::trap_request_reason(req);\n+      if (trap_reason != Deoptimization::Reason_loop_limit_check &&\n+          trap_reason != Deoptimization::Reason_predicate &&\n+          trap_reason != Deoptimization::Reason_profile_predicate) {\n+        break;\n+      }\n+      Node* c = new_ctrl->in(0)->in(0);\n+      if (is_dominator(c, early) && c != early) {\n+        break;\n+      }\n+      new_ctrl = c;\n+    }\n+    least = new_ctrl;\n+  }\n@@ -5361,25 +5389,5 @@\n-        least == ctrl_out->in(LoopNode::EntryControl)) {\n-      \/\/ Move the node above predicates as far up as possible so a\n-      \/\/ following pass of loop predication doesn't hoist a predicate\n-      \/\/ that depends on it above that node.\n-      Node* new_ctrl = least;\n-      for (;;) {\n-        if (!new_ctrl->is_Proj()) {\n-          break;\n-        }\n-        CallStaticJavaNode* call = new_ctrl->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n-        if (call == NULL) {\n-          break;\n-        }\n-        int req = call->uncommon_trap_request();\n-        Deoptimization::DeoptReason trap_reason = Deoptimization::trap_request_reason(req);\n-        if (trap_reason != Deoptimization::Reason_loop_limit_check &&\n-            trap_reason != Deoptimization::Reason_predicate &&\n-            trap_reason != Deoptimization::Reason_profile_predicate) {\n-          break;\n-        }\n-        Node* c = new_ctrl->in(0)->in(0);\n-        if (is_dominator(c, early) && c != early) {\n-          break;\n-        }\n-        new_ctrl = c;\n+        least == ctrl_out->in(LoopNode::EntryControl) &&\n+        (ctrl_out->is_CountedLoop() || ctrl_out->is_OuterStripMinedLoop())) {\n+      Node* least_dom = idom(least);\n+      if (get_loop(least_dom)->is_member(get_loop(least))) {\n+        least = least_dom;\n@@ -5387,1 +5395,0 @@\n-      least = new_ctrl;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":33,"deletions":26,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -204,0 +204,18 @@\n+  if (n->Opcode() == Op_OpaqueLoopStride || n->Opcode() == Op_OpaqueLoopInit) {\n+    Unique_Node_List wq;\n+    wq.push(n);\n+    for (uint i = 0; i < wq.size(); i++) {\n+      Node* m = wq.at(i);\n+      if (m->is_If()) {\n+        assert(skeleton_predicate_has_opaque(m->as_If()), \"opaque node not reachable from if?\");\n+        Node* bol = clone_skeleton_predicate_bool(m, NULL, NULL, m->in(0));\n+        _igvn.replace_input_of(m, 1, bol);\n+      } else {\n+        assert(!m->is_CFG(), \"not CFG expected\");\n+        for (DUIterator_Fast jmax, j = m->fast_outs(jmax); j < jmax; j++) {\n+          Node* u = m->fast_out(j);\n+          wq.push(u);\n+        }\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,268 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8280799\n+ * @summary ะก2: assert(false) failed: cyclic dependency prevents range check elimination\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:-UseCountedLoopSafepoints TestPredicateInputBelowLoopPredicate\n+ *\/\n+\n+public class TestPredicateInputBelowLoopPredicate {\n+    private static final Object object = new Object();\n+    private static int fieldStop = 100;\n+    private static int[] array = new int[200];\n+    private static int[] array2 = new int[200];\n+    private static int fieldStart = 0;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test(true);\n+            test(false);\n+        }\n+    }\n+\n+    private static void test(boolean flag) {\n+        if (array == null) {\n+        }\n+        int start = fieldStart;\n+        int i = start;\n+        for(;;) {\n+            int j;\n+            for (j = -10; j < 0; j++) {\n+            }\n+            int stop = fieldStop;\n+             \/\/ bound check becomes candidate for predication once\n+             \/\/ loop above is optimized out\n+            array[stop - i + j] = 0;\n+\n+            \/\/ A bunch of stuff to grow loop body size and prevent peeling:\n+            array2[0] = 0;\n+            array2[1] = 0;\n+            array2[2] = 0;\n+            array2[3] = 0;\n+            array2[4] = 0;\n+            array2[5] = 0;\n+            array2[6] = 0;\n+            array2[7] = 0;\n+            array2[8] = 0;\n+            array2[9] = 0;\n+            array2[10] = 0;\n+            array2[11] = 0;\n+            array2[12] = 0;\n+            array2[13] = 0;\n+            array2[14] = 0;\n+            array2[15] = 0;\n+            array2[16] = 0;\n+            array2[17] = 0;\n+            array2[18] = 0;\n+            array2[19] = 0;\n+            array2[20] = 0;\n+            array2[21] = 0;\n+            array2[22] = 0;\n+            array2[23] = 0;\n+            array2[24] = 0;\n+            array2[25] = 0;\n+            array2[26] = 0;\n+            array2[27] = 0;\n+            array2[28] = 0;\n+            array2[29] = 0;\n+            array2[30] = 0;\n+            array2[31] = 0;\n+            array2[32] = 0;\n+            array2[33] = 0;\n+            array2[34] = 0;\n+            array2[35] = 0;\n+            array2[36] = 0;\n+            array2[37] = 0;\n+            array2[38] = 0;\n+            array2[39] = 0;\n+            array2[40] = 0;\n+            array2[41] = 0;\n+            array2[42] = 0;\n+            array2[43] = 0;\n+            array2[44] = 0;\n+            array2[45] = 0;\n+            array2[46] = 0;\n+            array2[47] = 0;\n+            array2[48] = 0;\n+            array2[49] = 0;\n+            array2[50] = 0;\n+            array2[51] = 0;\n+            array2[52] = 0;\n+            array2[53] = 0;\n+            array2[54] = 0;\n+            array2[55] = 0;\n+            array2[56] = 0;\n+            array2[57] = 0;\n+            array2[58] = 0;\n+            array2[59] = 0;\n+            array2[60] = 0;\n+            array2[61] = 0;\n+            array2[62] = 0;\n+            array2[63] = 0;\n+            array2[64] = 0;\n+            array2[65] = 0;\n+            array2[66] = 0;\n+            array2[67] = 0;\n+            array2[68] = 0;\n+            array2[69] = 0;\n+            array2[70] = 0;\n+            array2[71] = 0;\n+            array2[72] = 0;\n+            array2[73] = 0;\n+            array2[74] = 0;\n+            array2[75] = 0;\n+            array2[76] = 0;\n+            array2[77] = 0;\n+            array2[78] = 0;\n+            array2[79] = 0;\n+            array2[80] = 0;\n+            array2[81] = 0;\n+            array2[82] = 0;\n+            array2[83] = 0;\n+            array2[84] = 0;\n+            array2[85] = 0;\n+            array2[86] = 0;\n+            array2[87] = 0;\n+            array2[88] = 0;\n+            array2[89] = 0;\n+            array2[90] = 0;\n+            array2[91] = 0;\n+            array2[92] = 0;\n+            array2[93] = 0;\n+            array2[94] = 0;\n+            array2[95] = 0;\n+            array2[96] = 0;\n+            array2[97] = 0;\n+            array2[98] = 0;\n+            array2[99] = 0;\n+\n+            array2[100] = 0;\n+            array2[101] = 0;\n+            array2[102] = 0;\n+            array2[103] = 0;\n+            array2[104] = 0;\n+            array2[105] = 0;\n+            array2[106] = 0;\n+            array2[107] = 0;\n+            array2[108] = 0;\n+            array2[109] = 0;\n+            array2[110] = 0;\n+            array2[111] = 0;\n+            array2[112] = 0;\n+            array2[113] = 0;\n+            array2[114] = 0;\n+            array2[115] = 0;\n+            array2[116] = 0;\n+            array2[117] = 0;\n+            array2[118] = 0;\n+            array2[119] = 0;\n+            array2[120] = 0;\n+            array2[121] = 0;\n+            array2[122] = 0;\n+            array2[123] = 0;\n+            array2[124] = 0;\n+            array2[125] = 0;\n+            array2[126] = 0;\n+            array2[127] = 0;\n+            array2[128] = 0;\n+            array2[129] = 0;\n+            array2[130] = 0;\n+            array2[131] = 0;\n+            array2[132] = 0;\n+            array2[133] = 0;\n+            array2[134] = 0;\n+            array2[135] = 0;\n+            array2[136] = 0;\n+            array2[137] = 0;\n+            array2[138] = 0;\n+            array2[139] = 0;\n+            array2[140] = 0;\n+            array2[141] = 0;\n+            array2[142] = 0;\n+            array2[143] = 0;\n+            array2[144] = 0;\n+            array2[145] = 0;\n+            array2[146] = 0;\n+            array2[147] = 0;\n+            array2[148] = 0;\n+            array2[149] = 0;\n+            array2[150] = 0;\n+            array2[151] = 0;\n+            array2[152] = 0;\n+            array2[153] = 0;\n+            array2[154] = 0;\n+            array2[155] = 0;\n+            array2[156] = 0;\n+            array2[157] = 0;\n+            array2[158] = 0;\n+            array2[159] = 0;\n+            array2[160] = 0;\n+            array2[161] = 0;\n+            array2[162] = 0;\n+            array2[163] = 0;\n+            array2[164] = 0;\n+            array2[165] = 0;\n+            array2[166] = 0;\n+            array2[167] = 0;\n+            array2[168] = 0;\n+            array2[169] = 0;\n+            array2[170] = 0;\n+            array2[171] = 0;\n+            array2[172] = 0;\n+            array2[173] = 0;\n+            array2[174] = 0;\n+            array2[175] = 0;\n+            array2[176] = 0;\n+            array2[177] = 0;\n+            array2[178] = 0;\n+            array2[179] = 0;\n+            array2[180] = 0;\n+            array2[181] = 0;\n+            array2[182] = 0;\n+            array2[183] = 0;\n+            array2[184] = 0;\n+            array2[185] = 0;\n+            array2[186] = 0;\n+            array2[187] = 0;\n+            array2[188] = 0;\n+            array2[189] = 0;\n+            array2[190] = 0;\n+            array2[191] = 0;\n+            array2[192] = 0;\n+            array2[193] = 0;\n+            array2[194] = 0;\n+            array2[195] = 0;\n+            array2[196] = 0;\n+            array2[197] = 0;\n+            array2[198] = 0;\n+            array2[199] = 0;\n+            i++;\n+\n+            if (i == stop) { \/\/ requires a loop limit predicate\n+                break;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPredicateInputBelowLoopPredicate.java","additions":268,"deletions":0,"binary":false,"changes":268,"status":"added"}]}