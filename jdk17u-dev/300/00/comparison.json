{"files":[{"patch":"@@ -80,1 +80,1 @@\n-make_sgn_ordered_dither_array(char* oda, int minerr, int maxerr)\n+make_sgn_ordered_dither_array(signed char* oda, int minerr, int maxerr)\n","filename":"src\/java.desktop\/share\/native\/libawt\/awt\/image\/cvutils\/img_globals.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-typedef char sgn_ordered_dither_array[8][8];\n+typedef signed char sgn_ordered_dither_array[8][8];\n@@ -151,1 +151,1 @@\n-extern void make_sgn_ordered_dither_array(char* oda, int errmin, int errmax);\n+extern void make_sgn_ordered_dither_array(signed char* oda, int errmin, int errmax);\n","filename":"src\/java.desktop\/share\/native\/libawt\/awt\/image\/cvutils\/img_globals.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -132,3 +132,3 @@\n- *      char *redErrTable;\n- *      char *grnErrTable;\n- *      char *bluErrTable;\n+ *      signed char *redErrTable;\n+ *      signed char *grnErrTable;\n+ *      signed char *bluErrTable;\n@@ -162,3 +162,3 @@\n-    char                *redErrTable;           \/* Red ordered dither table *\/\n-    char                *grnErrTable;           \/* Green ordered dither table *\/\n-    char                *bluErrTable;           \/* Blue ordered dither table *\/\n+    signed char         *redErrTable;           \/* Red ordered dither table *\/\n+    signed char         *grnErrTable;           \/* Green ordered dither table *\/\n+    signed char         *bluErrTable;           \/* Blue ordered dither table *\/\n","filename":"src\/java.desktop\/share\/native\/libawt\/java2d\/SurfaceData.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    char *PREFIX ## rerr, *PREFIX ## gerr, *PREFIX ## berr; \\\n+    signed char *PREFIX ## rerr, *PREFIX ## gerr, *PREFIX ## berr; \\\n","filename":"src\/java.desktop\/share\/native\/libawt\/java2d\/loops\/ByteIndexed.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    char *PREFIX ## rerr, *PREFIX ## gerr, *PREFIX ## berr; \\\n+    signed char *PREFIX ## rerr, *PREFIX ## gerr, *PREFIX ## berr; \\\n","filename":"src\/java.desktop\/share\/native\/libawt\/java2d\/loops\/UshortIndexed.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n-    char* img_oda_red;\n-    char* img_oda_green;\n-    char* img_oda_blue;\n+    signed char* img_oda_red;\n+    signed char* img_oda_green;\n+    signed char* img_oda_blue;\n","filename":"src\/java.desktop\/unix\/native\/common\/awt\/colordata.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,3 +31,3 @@\n-    char* img_oda_red;\n-    char* img_oda_green;\n-    char* img_oda_blue;\n+    signed char* img_oda_red;\n+    signed char* img_oda_green;\n+    signed char* img_oda_blue;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/colordata.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8280964\n+ * @summary Tests that drawing to a ByteIndexed image dithers correctly.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+\n+public class ByteIndexedDitherTest {\n+\n+    public static void main(String[] args) {\n+        BufferedImage bgr = createBGRImage();\n+        BufferedImage indexed = createIndexedImage(bgr);\n+        checkImage(indexed);\n+    }\n+\n+    static BufferedImage createBGRImage() {\n+\n+        int sz = 8;\n+        BufferedImage img;\n+        img = new BufferedImage(sz, sz, BufferedImage.TYPE_3BYTE_BGR);\n+        Graphics2D g = img.createGraphics();\n+        Color c = new Color(0, 0, 254);\n+        g.setColor(c);\n+        g.fillRect(0, 0, sz, sz);\n+        g.dispose();\n+\n+        return img;\n+    }\n+\n+    static BufferedImage createIndexedImage(BufferedImage srcImage) {\n+\n+        int w = srcImage.getWidth(null);\n+        int h = srcImage.getHeight(null);\n+        BufferedImage\n+        indexedImg = new BufferedImage(w, h, BufferedImage.TYPE_BYTE_INDEXED);\n+        Graphics2D g = indexedImg.createGraphics();\n+        g.drawImage(srcImage, 0, 0, w, h, null);\n+        g.dispose();\n+        return indexedImg;\n+    }\n+\n+     static void checkImage(BufferedImage image) {\n+         int wid = image.getWidth();\n+         int hgt = image.getHeight();\n+         for (int y=0; y<hgt; y++) {\n+             for (int x=0; x<wid; x++) {\n+                 int v = image.getRGB(x, y);\n+                 if ((v & 0x00ffff00) != 0) {\n+                     System.err.println(\"(\"+x+\",\"+y+\") = \" +\n+                          Integer.toHexString(v));\n+                     throw new RuntimeException(\"Unexpected Red or Green\");\n+                 }\n+             }\n+         }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/image\/DrawImage\/ByteIndexedDitherTest.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"}]}