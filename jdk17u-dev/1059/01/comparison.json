{"files":[{"patch":"@@ -1012,1 +1012,1 @@\n-                    && (if_ctrl->in(0)->is_MultiBranch() && if_ctrl->in(0)->Opcode() == Op_NeverBranch)) {\n+                    && if_ctrl->in(0)->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1031,1 +1031,1 @@\n-                      && (if_ctrl->in(0)->is_MultiBranch() && if_ctrl->in(0)->Opcode() == Op_NeverBranch)) {\n+                      && if_ctrl->in(0)->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -760,1 +760,1 @@\n-      } else if (c->Opcode() == Op_CProj && next->Opcode() == Op_NeverBranch) {\n+      } else if (c->Opcode() == Op_CProj && next->is_NeverBranch()) {\n@@ -2128,1 +2128,1 @@\n-    if (in != NULL && in->Opcode() == Op_Halt && in->in(0)->is_Proj() && in->in(0)->in(0)->Opcode() == Op_NeverBranch) {\n+    if (in != NULL && in->Opcode() == Op_Halt && in->in(0)->is_Proj() && in->in(0)->in(0)->is_NeverBranch()) {\n@@ -2159,1 +2159,1 @@\n-              assert(r->in(j)->Opcode() != Op_NeverBranch, \"\");\n+              assert(!r->in(j)->is_NeverBranch(), \"\");\n@@ -2165,1 +2165,1 @@\n-            assert(in->is_CallStaticJava() || in->Opcode() == Op_NeverBranch || in->Opcode() == Op_Catch || proj->is_IfProj(), \"\");\n+            assert(in->is_CallStaticJava() || in->is_NeverBranch() || in->Opcode() == Op_Catch || proj->is_IfProj(), \"\");\n@@ -2172,1 +2172,1 @@\n-            } else if (in->Opcode() == Op_NeverBranch) {\n+            } else if (in->is_NeverBranch()) {\n@@ -2644,1 +2644,1 @@\n-                     !(u->Opcode() == Op_CProj && u->in(0)->Opcode() == Op_NeverBranch && u->as_Proj()->_con == 1)) {\n+                     !(u->Opcode() == Op_CProj && u->in(0)->is_NeverBranch() && u->as_Proj()->_con == 1)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -623,1 +623,0 @@\n-  \/\/ Find true target\n@@ -625,2 +624,6 @@\n-  int idx = b->get_node(end_idx+1)->as_Proj()->_con;\n-  Block *succ = b->_succs[idx];\n+  NeverBranchNode* never_branch = b->get_node(end_idx)->as_NeverBranch();\n+  Block* succ = get_block_for_node(never_branch->proj_out(0)->unique_ctrl_out_or_null());\n+  Block* dead = get_block_for_node(never_branch->proj_out(1)->unique_ctrl_out_or_null());\n+  assert(succ == b->_succs[0] || succ == b->_succs[1], \"succ is a successor\");\n+  assert(dead == b->_succs[0] || dead == b->_succs[1], \"dead is a successor\");\n+\n@@ -645,1 +648,0 @@\n-  Block* dead = b->_succs[1 - idx];\n@@ -743,1 +745,1 @@\n-    if (block->get_node(block->end_idx())->Opcode() == Op_NeverBranch) {\n+    if (block->get_node(block->end_idx())->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/opto\/block.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -605,1 +605,4 @@\n-  NeverBranchNode( Node *ctrl ) : MultiBranchNode(1) { init_req(0,ctrl); }\n+  NeverBranchNode(Node* ctrl) : MultiBranchNode(1) {\n+    init_req(0, ctrl);\n+    init_class_id(Class_NeverBranch);\n+  }\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1423,1 +1423,1 @@\n-  if (head->unique_ctrl_out()->Opcode() == Op_NeverBranch) {\n+  if (head->unique_ctrl_out()->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3714,1 +3714,1 @@\n-    } else if (n->Opcode() == Op_NeverBranch) {\n+    } else if (n->is_NeverBranch()) {\n@@ -3716,1 +3716,1 @@\n-      ProjNode* proj = n->as_Multi()->proj_out_or_null(0);\n+      ProjNode* proj = n->as_NeverBranch()->proj_out_or_null(0);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -777,2 +777,2 @@\n-      if (u->Opcode() == Op_NeverBranch) {\n-        u = ((NeverBranchNode*)u)->proj_out(0);\n+      if (u->is_NeverBranch()) {\n+        u = u->as_NeverBranch()->proj_out(0);\n@@ -961,1 +961,1 @@\n-            assert(get_loop(lca)->_nest < n_loop->_nest || lca->in(0)->Opcode() == Op_NeverBranch, \"must not be moved into inner loop\");\n+            assert(get_loop(lca)->_nest < n_loop->_nest || lca->in(0)->is_NeverBranch(), \"must not be moved into inner loop\");\n@@ -1162,1 +1162,1 @@\n-        (dom->Opcode() == Op_NeverBranch && loop->is_member(get_loop(dom->in(0))))) {\n+        (dom->is_NeverBranch() && loop->is_member(get_loop(dom->in(0))))) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -917,0 +917,1 @@\n+  DEFINE_CLASS_QUERY(NeverBranch)\n@@ -1073,0 +1074,2 @@\n+  \/\/ Placeholder until 8281732 is backported.\n+  Node* unique_ctrl_out_or_null() const { return unique_ctrl_out(); }\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}