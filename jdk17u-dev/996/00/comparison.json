{"files":[{"patch":"@@ -88,1 +88,0 @@\n-        boolean loadedProps = false;\n@@ -94,29 +93,3 @@\n-        if (propFile.exists()) {\n-            InputStream is = null;\n-            try {\n-                FileInputStream fis = new FileInputStream(propFile);\n-                is = new BufferedInputStream(fis);\n-                props.load(is);\n-                loadedProps = true;\n-\n-                if (sdebug != null) {\n-                    sdebug.println(\"reading security properties file: \" +\n-                                propFile);\n-                }\n-            } catch (IOException e) {\n-                if (sdebug != null) {\n-                    sdebug.println(\"unable to load security properties from \" +\n-                                propFile);\n-                    e.printStackTrace();\n-                }\n-            } finally {\n-                if (is != null) {\n-                    try {\n-                        is.close();\n-                    } catch (IOException ioe) {\n-                        if (sdebug != null) {\n-                            sdebug.println(\"unable to close input stream\");\n-                        }\n-                    }\n-                }\n-            }\n+        boolean success = loadProps(propFile, null, false);\n+        if (!success) {\n+            throw new InternalError(\"Error loading java.security file\");\n@@ -129,1 +102,1 @@\n-                                        (\"java.security.properties\");\n+                    (\"java.security.properties\");\n@@ -134,0 +107,3 @@\n+            loadProps(null, extraPropFile, overrideAll);\n+        }\n+    }\n@@ -135,5 +111,14 @@\n-            if (overrideAll) {\n-                props = new Properties();\n-                if (sdebug != null) {\n-                    sdebug.println\n-                        (\"overriding other security properties files!\");\n+    private static boolean loadProps(File masterFile, String extraPropFile, boolean overrideAll) {\n+        InputStream is = null;\n+        try {\n+            if (masterFile != null && masterFile.exists()) {\n+                is = new FileInputStream(masterFile);\n+            } else if (extraPropFile != null) {\n+                extraPropFile = PropertyExpander.expand(extraPropFile);\n+                File propFile = new File(extraPropFile);\n+                URL propURL;\n+                if (propFile.exists()) {\n+                    propURL = new URL\n+                            (\"file:\" + propFile.getCanonicalPath());\n+                } else {\n+                    propURL = new URL(extraPropFile);\n@@ -141,20 +126,0 @@\n-            }\n-\n-            \/\/ now load the user-specified file so its values\n-            \/\/ will win if they conflict with the earlier values\n-            if (extraPropFile != null) {\n-                BufferedInputStream bis = null;\n-                try {\n-                    URL propURL;\n-\n-                    extraPropFile = PropertyExpander.expand(extraPropFile);\n-                    propFile = new File(extraPropFile);\n-                    if (propFile.exists()) {\n-                        propURL = new URL\n-                                (\"file:\" + propFile.getCanonicalPath());\n-                    } else {\n-                        propURL = new URL(extraPropFile);\n-                    }\n-                    bis = new BufferedInputStream(propURL.openStream());\n-                    props.load(bis);\n-                    loadedProps = true;\n@@ -162,0 +127,3 @@\n+                is = propURL.openStream();\n+                if (overrideAll) {\n+                    props = new Properties();\n@@ -163,4 +131,1 @@\n-                        sdebug.println(\"reading security properties file: \" +\n-                                        propURL);\n-                        if (overrideAll) {\n-                            sdebug.println\n+                        sdebug.println\n@@ -168,1 +133,0 @@\n-                        }\n@@ -170,1 +134,25 @@\n-                } catch (Exception e) {\n+                }\n+            } else {\n+                \/\/ unexpected\n+                return false;\n+            }\n+            props.load(is);\n+            if (sdebug != null) {\n+                \/\/ ExceptionInInitializerError if masterFile.getName() is\n+                \/\/ called here (NPE!). Leave as is (and few lines down)\n+                sdebug.println(\"reading security properties file: \" +\n+                        masterFile == null ? extraPropFile : \"java.security\");\n+            }\n+            return true;\n+        } catch (IOException | PropertyExpander.ExpandException e) {\n+            if (sdebug != null) {\n+                sdebug.println(\"unable to load security properties from \" +\n+                        masterFile == null ? extraPropFile : \"java.security\");\n+                e.printStackTrace();\n+            }\n+            return false;\n+        } finally {\n+            if (is != null) {\n+                try {\n+                    is.close();\n+                } catch (IOException ioe) {\n@@ -172,14 +160,1 @@\n-                        sdebug.println\n-                                (\"unable to load security properties from \" +\n-                                extraPropFile);\n-                        e.printStackTrace();\n-                    }\n-                } finally {\n-                    if (bis != null) {\n-                        try {\n-                            bis.close();\n-                        } catch (IOException ioe) {\n-                            if (sdebug != null) {\n-                                sdebug.println(\"unable to close input stream\");\n-                            }\n-                        }\n+                        sdebug.println(\"unable to close input stream\");\n@@ -190,5 +165,0 @@\n-\n-        if (!loadedProps) {\n-            throw new InternalError(\"java.security file missing\");\n-        }\n-\n","filename":"src\/java.base\/share\/classes\/java\/security\/Security.java","additions":51,"deletions":81,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.security.Provider;\n@@ -38,1 +39,1 @@\n- * @bug 8155246\n+ * @bug 8155246 8292297\n@@ -53,1 +54,2 @@\n-            System.out.println(Arrays.toString(Security.getProviders()));\n+            Provider[] provs = Security.getProviders();\n+            System.out.println(Arrays.toString(provs) + \"NumProviders: \" + provs.length);\n@@ -60,1 +62,1 @@\n-            copyJDKMinusJavaSecurity(jdkTestDir, copyJdkDir);\n+            copyJDK(jdkTestDir, copyJdkDir);\n@@ -64,2 +66,3 @@\n-            \/\/ launch JDK without java.security file being present or specified\n-            exerciseSecurity(copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+            \/\/ regular JDK install - should expect success\n+            exerciseSecurity(0, \"java\",\n+                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n@@ -68,0 +71,25 @@\n+            \/\/ given an overriding security conf file that doesn't exist, we shouldn't\n+            \/\/ overwrite the properties from original\/master security conf file\n+            exerciseSecurity(0, \"SUN version\",\n+                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+                    \"-Djava.security.debug=all\", \"-Djavax.net.debug=all\",\n+                    \"-Djava.security.properties==file:\/\/\/\" + extraPropsFile + \"badFileName\",\n+                    \"ConfigFileTest\", \"runner\");\n+\n+            \/\/ test JDK launch with customized properties file\n+            exerciseSecurity(0, \"NumProviders: 6\",\n+                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+                    \"-Djava.security.debug=all\", \"-Djavax.net.debug=all\",\n+                    \"-Djava.security.properties==file:\/\/\/\" + extraPropsFile,\n+                    \"ConfigFileTest\", \"runner\");\n+\n+            \/\/ delete the master conf file\n+            Files.delete(Path.of(copyJdkDir.toString(), \"conf\",\n+                    \"security\",\"java.security\"));\n+\n+            \/\/ launch JDK without java.security file being present or specified\n+            exerciseSecurity(1, \"Error loading java.security file\",\n+                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+                    \"-Djava.security.debug=all\", \"-Djavax.net.debug=all\",\n+                    \"ConfigFileTest\", \"runner\");\n+\n@@ -70,1 +98,2 @@\n-            exerciseSecurity(copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+            exerciseSecurity(1, \"Error loading java.security file\",\n+                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n@@ -72,1 +101,1 @@\n-                    \"-Djava.security.properties==file:\/\/\" + extraPropsFile, \"ConfigFileTest\", \"runner\");\n+                    \"-Djava.security.properties==file:\/\/\/\" + extraPropsFile, \"ConfigFileTest\", \"runner\");\n@@ -76,1 +105,1 @@\n-    private static void exerciseSecurity(String... args) throws Exception {\n+    private static void exerciseSecurity(int exitCode, String output, String... args) throws Exception {\n@@ -79,1 +108,1 @@\n-        oa.shouldHaveExitValue(1).shouldContain(\"java.security file missing\");\n+        oa.shouldHaveExitValue(exitCode).shouldContain(output);\n@@ -82,1 +111,1 @@\n-    private static void copyJDKMinusJavaSecurity(Path src, Path dst) throws Exception {\n+    private static void copyJDK(Path src, Path dst) throws Exception {\n@@ -85,1 +114,0 @@\n-            .filter(p -> !p.toString().endsWith(\"java.security\"))\n@@ -94,1 +122,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/security\/Security\/ConfigFileTest.java","additions":40,"deletions":12,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+# exercise ServiceLoader and legacy (class load) approach\n@@ -2,1 +3,1 @@\n-security.provider.2=sun.security.rsa.SunRsaSign\n+security.provider.2=SunRsaSign\n@@ -5,3 +6,2 @@\n-security.provider.5=sun.security.jgss.SunProvider\n-security.provider.6=com.sun.security.sasl.Provider\n-\n+security.provider.5=SunJGSS\n+security.provider.6=SunSASL\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/security\/Security\/override.props","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}