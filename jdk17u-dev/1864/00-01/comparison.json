{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n- * must be the same as the size of the modulus (i.e. 128 byte for a 1024-bit\n+ * must be the same as the size of the modulus (i.e. 128 byte for a 1024 bit\n@@ -70,1 +70,1 @@\n- * latter versions based on real-world experience (e.g. stricter v1.5\n+ * later versions based on real-world experience (e.g. stricter v1.5\n@@ -104,0 +104,3 @@\n+    \/\/ OAEP: main message digest\n+    private MessageDigest md;\n+\n@@ -150,2 +153,0 @@\n-        \/\/ OAEP: main message digest\n-        MessageDigest md;\n@@ -203,1 +204,1 @@\n-        Collections.synchronizedMap(new HashMap<>());\n+        Collections.synchronizedMap(new HashMap<String,byte[]>());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPadding.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-        if (!digestReset) {\n+        if (digestReset == false) {\n@@ -262,1 +262,1 @@\n-        if (!algId.getOID().equals(oid)) {\n+        if (algId.getOID().equals(oid) == false) {\n@@ -269,4 +269,2 @@\n-        if (values[1].isConstructed()) {\n-            throw new IOException(\"Unexpected constructed digest value\");\n-        }\n-        return values[1].getOctetString();\n+        byte[] digest = values[1].getOctetString();\n+        return digest;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSASignature.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"}]}