{"files":[{"patch":"@@ -286,1 +286,1 @@\n-    private static Executable getMethod(HotSpotResolvedJavaMethodImpl method) {\n+    static Executable getMethod(HotSpotResolvedJavaMethodImpl method) {\n@@ -306,1 +306,1 @@\n-    private static Field getField(HotSpotResolvedJavaFieldImpl field) {\n+    static Field getField(HotSpotResolvedJavaFieldImpl field) {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotJDKReflection.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import java.lang.reflect.Executable;\n+import java.lang.reflect.Field;\n@@ -63,0 +65,2 @@\n+import jdk.vm.ci.meta.ResolvedJavaField;\n+import jdk.vm.ci.meta.ResolvedJavaMethod;\n@@ -770,1 +774,1 @@\n-     * Get the {@link Class} corresponding to {@code type}.\n+     * Gets the {@link Class} corresponding to {@code type}.\n@@ -784,0 +788,30 @@\n+    \/**\n+     * Gets the {@link Executable} corresponding to {@code method}.\n+     *\n+     * @param method the method for which an {@link Executable} is requested\n+     * @return the original Java method or constructor corresponding to {@code method} or\n+     *         {@code null} if this runtime does not support mapping {@link ResolvedJavaMethod}\n+     *         instances to {@link Executable} instances\n+     *\/\n+    public Executable getMirror(ResolvedJavaMethod method) {\n+        if (method instanceof HotSpotResolvedJavaMethodImpl && reflection instanceof HotSpotJDKReflection) {\n+            return HotSpotJDKReflection.getMethod((HotSpotResolvedJavaMethodImpl) method);\n+        }\n+        return null;\n+    }\n+\n+    \/**\n+     * Gets the {@link Field} corresponding to {@code field}.\n+     *\n+     * @param field the field for which a {@link Field} is requested\n+     * @return the original Java field corresponding to {@code field} or {@code null} if this\n+     *         runtime does not support mapping {@link ResolvedJavaField} instances to {@link Field}\n+     *         instances\n+     *\/\n+    public Field getMirror(ResolvedJavaField field) {\n+        if (field instanceof HotSpotResolvedJavaFieldImpl && reflection instanceof HotSpotJDKReflection) {\n+            return HotSpotJDKReflection.getField((HotSpotResolvedJavaFieldImpl) field);\n+        }\n+        return null;\n+    }\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotJVMCIRuntime.java","additions":35,"deletions":1,"binary":false,"changes":36,"status":"modified"}]}