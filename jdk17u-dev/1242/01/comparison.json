{"files":[{"patch":"@@ -43,1 +43,0 @@\n-    FLAG_SET_DEFAULT(ShenandoahSuspendibleWorkers, true);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahIUMode.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-    FLAG_SET_DEFAULT(ShenandoahSuspendibleWorkers, true);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahSATBMode.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1743,14 +1743,2 @@\n-  while (true) {\n-    jbyte prev = _cancelled_gc.cmpxchg(CANCELLED, CANCELLABLE);\n-    if (prev == CANCELLABLE) return true;\n-    else if (prev == CANCELLED) return false;\n-    assert(ShenandoahSuspendibleWorkers, \"should not get here when not using suspendible workers\");\n-    assert(prev == NOT_CANCELLED, \"must be NOT_CANCELLED\");\n-    Thread* thread = Thread::current();\n-    if (thread->is_Java_thread()) {\n-      \/\/ We need to provide a safepoint here, otherwise we might\n-      \/\/ spin forever if a SP is pending.\n-      ThreadBlockInVM sp(thread->as_Java_thread());\n-      SpinPause();\n-    }\n-  }\n+  jbyte prev = _cancelled_gc.cmpxchg(CANCELLED, CANCELLABLE);\n+  return prev == CANCELLABLE;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -329,6 +329,1 @@\n-    CANCELLED,\n-\n-    \/\/ GC has not been cancelled and must not be cancelled. At least\n-    \/\/ one worker thread checks for pending safepoint and may suspend\n-    \/\/ if a safepoint is pending.\n-    NOT_CANCELLED\n+    CANCELLED\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -165,6 +165,1 @@\n-  if (! (sts_active && ShenandoahSuspendibleWorkers)) {\n-    return cancelled_gc();\n-  }\n-\n-  jbyte prev = _cancelled_gc.cmpxchg(NOT_CANCELLED, CANCELLABLE);\n-  if (prev == CANCELLABLE || prev == NOT_CANCELLED) {\n+  if (sts_active && ShenandoahSuspendibleWorkers && !cancelled_gc()) {\n@@ -174,9 +169,0 @@\n-\n-    \/\/ Back to CANCELLABLE. The thread that poked NOT_CANCELLED first gets\n-    \/\/ to restore to CANCELLABLE.\n-    if (prev == CANCELLABLE) {\n-      _cancelled_gc.set(CANCELLABLE);\n-    }\n-    return false;\n-  } else {\n-    return true;\n@@ -184,0 +170,1 @@\n+  return cancelled_gc();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-  product(bool, ShenandoahSuspendibleWorkers, false, EXPERIMENTAL,          \\\n+  product(bool, ShenandoahSuspendibleWorkers, true, EXPERIMENTAL,           \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}