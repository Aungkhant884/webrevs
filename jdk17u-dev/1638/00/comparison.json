{"files":[{"patch":"@@ -34,0 +34,5 @@\n+template <typename T>\n+static inline void put_native(address p, T x) {\n+    memcpy((void*)p, &x, sizeof x);\n+}\n+\n@@ -209,1 +214,4 @@\n-  void emit_int16(int16_t x) { *((int16_t*) end()) = x; set_end(end() + sizeof(int16_t)); }\n+  template <typename T>\n+  void emit_native(T x) { put_native(end(), x); set_end(end() + sizeof x); }\n+\n+  void emit_int16(int16_t x) { emit_native(x); }\n@@ -225,1 +233,1 @@\n-  void emit_int32(int32_t x) { *((int32_t*) end()) = x; set_end(end() + sizeof(int32_t)); }\n+  void emit_int32(int32_t x) { emit_native(x); }\n@@ -235,5 +243,4 @@\n-  void emit_int64( int64_t x)  { *((int64_t*) end()) = x; set_end(end() + sizeof(int64_t)); }\n-\n-  void emit_float( jfloat  x)  { *((jfloat*)  end()) = x; set_end(end() + sizeof(jfloat)); }\n-  void emit_double(jdouble x)  { *((jdouble*) end()) = x; set_end(end() + sizeof(jdouble)); }\n-  void emit_address(address x) { *((address*) end()) = x; set_end(end() + sizeof(address)); }\n+  void emit_int64(int64_t x)  { emit_native(x); }\n+  void emit_float(jfloat  x)   { emit_native(x); }\n+  void emit_double(jdouble x)  { emit_native(x); }\n+  void emit_address(address x) { emit_native(x); }\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"}]}