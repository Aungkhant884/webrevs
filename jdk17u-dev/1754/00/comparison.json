{"files":[{"patch":"@@ -1396,1 +1396,0 @@\n-    int extraBottomInsets = 0;\n@@ -1408,1 +1407,1 @@\n-        m_insets.bottom = outside.bottom - inside.bottom + extraBottomInsets;\n+        m_insets.bottom = outside.bottom - inside.bottom;\n@@ -1414,0 +1413,1 @@\n+\n@@ -1421,12 +1421,5 @@\n-            LONG style = GetStyle();\n-            if (style & WS_THICKFRAME) {\n-                m_insets.left = m_insets.right =\n-                    ::GetSystemMetrics(SM_CXSIZEFRAME) + extraPaddedBorderInsets;\n-                m_insets.top = m_insets.bottom =\n-                    ::GetSystemMetrics(SM_CYSIZEFRAME) + extraPaddedBorderInsets;\n-            } else {\n-                m_insets.left = m_insets.right =\n-                    ::GetSystemMetrics(SM_CXDLGFRAME) + extraPaddedBorderInsets;\n-                m_insets.top = m_insets.bottom =\n-                    ::GetSystemMetrics(SM_CYDLGFRAME) + extraPaddedBorderInsets;\n-            }\n+            \/\/ System metrics are same for resizable & non-resizable frame.\n+            m_insets.left = m_insets.right =\n+                ::GetSystemMetrics(SM_CXFRAME) + extraPaddedBorderInsets;\n+            m_insets.top = m_insets.bottom =\n+                ::GetSystemMetrics(SM_CYFRAME) + extraPaddedBorderInsets;\n@@ -1440,1 +1433,1 @@\n-                \/* Also, 5089312: Window insets should be 0. *\/\n+            \/* Also, 5089312: Window insets should be 0. *\/\n@@ -1453,1 +1446,0 @@\n-        m_insets.bottom += extraBottomInsets;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Window.cpp","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -42,2 +42,3 @@\n- * @summary Tests whether insets are calculated correctly on Windows\n- * for AWT Frame by checking the actual and expected\/preferred frame sizes.\n+ * @summary Tests whether correct native frame insets are obtained\n+ * for Resizable & Non-Resizable AWT Frame by checking the actual\n+ * and expected\/preferred frame sizes.\n@@ -46,1 +47,0 @@\n-\n@@ -48,1 +48,0 @@\n-\n@@ -51,0 +50,1 @@\n+    private static StringBuffer errorLog = new StringBuffer();\n@@ -53,3 +53,5 @@\n-        try {\n-            robot = new Robot();\n-            robot.setAutoDelay(300);\n+        robot = new Robot();\n+        robot.setAutoDelay(300);\n+\n+        \/\/ Resizable frame\n+        createAWTFrame(true);\n@@ -57,0 +59,14 @@\n+        robot.waitForIdle();\n+        robot.delay(500);\n+\n+        \/\/ Non-Resizable frame\n+        createAWTFrame(false);\n+\n+        if (!errorLog.isEmpty()) {\n+            throw new RuntimeException(\"Test failed due to the following\" +\n+                    \" one or more errors: \\n\" + errorLog);\n+        }\n+    }\n+\n+    private static void createAWTFrame(boolean isResizable) {\n+        try {\n@@ -70,0 +86,1 @@\n+            frame.setResizable(isResizable);\n@@ -73,1 +90,0 @@\n-            robot.delay(500);\n@@ -75,0 +91,1 @@\n+            robot.delay(500);\n@@ -80,5 +97,6 @@\n-                System.out.println(\"Expected frame size: \"+ expectedFrameSize);\n-                System.out.println(\"Actual frame size: \"+ actualFrameSize);\n-                saveScreenCapture();\n-                throw new RuntimeException(\"Expected and Actual frame size\" +\n-                        \" are different. frame.pack() does not work!!\");\n+                String frameType = isResizable ? \"ResizableFrame\" : \"NonResizableFrame\";\n+                System.out.println(\"Expected frame size: \" + expectedFrameSize);\n+                System.out.println(\"Actual frame size: \" + actualFrameSize);\n+                saveScreenCapture(frameType + \".png\");\n+                errorLog.append(frameType + \": Expected and Actual frame size\" +\n+                        \" are different. frame.pack() does not work!! \\n\");\n@@ -87,1 +105,3 @@\n-            frame.dispose();\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n@@ -92,1 +112,1 @@\n-    private static void saveScreenCapture() {\n+    private static void saveScreenCapture(String filename) {\n@@ -95,1 +115,1 @@\n-            ImageIO.write(image,\"png\", new File(\"Frame.png\"));\n+            ImageIO.write(image,\"png\", new File(filename));\n","filename":"test\/jdk\/java\/awt\/Frame\/AwtFramePackTest.java","additions":36,"deletions":16,"binary":false,"changes":52,"status":"modified"}]}