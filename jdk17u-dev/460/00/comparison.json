{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,3 @@\n+ * @key randomness\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.RandomFactory\n@@ -37,0 +40,1 @@\n+import jdk.test.lib.RandomFactory;\n@@ -44,0 +48,2 @@\n+        Random r = RandomFactory.getRandom();\n+\n@@ -53,1 +59,1 @@\n-            double[] rand = new Random().doubles(1_000_000)\n+            double[] rand = r.doubles(1_000_000)\n@@ -88,1 +94,1 @@\n-        Assert.assertTrue(badParallelStreamError > jdkParallelStreamError);\n+        Assert.assertTrue(badParallelStreamError >= jdkParallelStreamError);\n@@ -100,1 +106,1 @@\n-    \/\/ from OpenJDK8 Collectors, unmodified\n+    \/\/ from OpenJDK 18 Collectors, unmodified\n@@ -110,1 +116,1 @@\n-    \/\/ from OpenJDK8 Collectors, unmodified\n+    \/\/ from OpenJDK 18 Collectors, unmodified\n@@ -112,1 +118,2 @@\n-        double tmp = summands[0] + summands[1];\n+        \/\/ Final sum with better error bounds subtract second summand as it is negated\n+        double tmp = summands[0] - summands[1];\n","filename":"test\/jdk\/java\/util\/DoubleStreamSums\/CompensatedSums.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"}]}