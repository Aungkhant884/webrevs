{"files":[{"patch":"@@ -581,1 +581,1 @@\n-      BasicType bt = field_type->basic_type();\n+      BasicType bt = type2field[field_type->basic_type()];\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3494,0 +3494,18 @@\n+\n+    \/\/ Test that correct basic types are used when folding field\n+    \/\/ loads from a scalar replaced array through an arraycopy.\n+    @Test\n+    public void test148(MyValue1 vt) {\n+        MyValue1[] src = new MyValue1[1];\n+        MyValue1[] dst = new MyValue1[1];\n+        src[0] = vt;\n+        System.arraycopy(src, 0, dst, 0, 1);\n+        if (src[0].hash() != dst[0].hash()) {\n+          throw new RuntimeException(\"Unexpected hash\");\n+        }\n+    }\n+\n+    @Run(test = \"test148\")\n+    public void test148_verifier() {\n+        test148(MyValue1.createWithFieldsInline(rI, rL));\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestArrays.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}