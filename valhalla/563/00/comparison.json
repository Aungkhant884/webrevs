{"files":[{"patch":"@@ -1916,1 +1916,1 @@\n-InlineTypeBaseNode* PhiNode::push_inline_types_through(PhaseGVN* phase, bool can_reshape, ciInlineKlass* vk) {\n+InlineTypeBaseNode* PhiNode::push_inline_types_through(PhaseGVN* phase, bool can_reshape, ciInlineKlass* vk, bool not_null) {\n@@ -1919,1 +1919,1 @@\n-    vt = InlineTypePtrNode::make_null(*phase, vk)->clone_with_phis(phase, in(0));\n+    vt = InlineTypePtrNode::make_null(*phase, vk)->clone_with_phis(phase, in(0), not_null);\n@@ -1921,1 +1921,1 @@\n-    vt = InlineTypeNode::make_null(*phase, vk)->clone_with_phis(phase, in(0));\n+    vt = InlineTypeNode::make_null(*phase, vk)->clone_with_phis(phase, in(0), not_null);\n@@ -1944,1 +1944,1 @@\n-      other = phase->transform(n->as_Phi()->push_inline_types_through(phase, can_reshape, vk));\n+      other = phase->transform(n->as_Phi()->push_inline_types_through(phase, can_reshape, vk, not_null));\n@@ -2512,0 +2512,1 @@\n+    bool not_null = true;\n@@ -2526,0 +2527,3 @@\n+          if (phase->type(n->as_InlineTypeBase()->get_oop())->maybe_null()) {\n+            not_null = false;\n+          }\n@@ -2528,1 +2532,3 @@\n-        } else if (!t->is_zero_type()) {\n+        } else if (t->is_zero_type()) {\n+          not_null = false;\n+        } else {\n@@ -2534,1 +2540,2 @@\n-      progress = push_inline_types_through(phase, can_reshape, vk);\n+      assert(!_type->isa_ptr() || _type->maybe_null() || not_null, \"Phi not null but a null input was seen\");\n+      progress = push_inline_types_through(phase, can_reshape, vk, not_null);\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-  InlineTypeBaseNode* push_inline_types_through(PhaseGVN* phase, bool can_reshape, ciInlineKlass* vk);\n+  InlineTypeBaseNode* push_inline_types_through(PhaseGVN* phase, bool can_reshape, ciInlineKlass* vk, bool not_null);\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-InlineTypeBaseNode* InlineTypeBaseNode::clone_with_phis(PhaseGVN* gvn, Node* region) {\n+InlineTypeBaseNode* InlineTypeBaseNode::clone_with_phis(PhaseGVN* gvn, Node* region, bool not_null) {\n@@ -49,0 +49,3 @@\n+  if (not_null) {\n+    phi_type = phi_type->join_speculative(TypePtr::NOTNULL);\n+  }\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-  InlineTypeBaseNode* clone_with_phis(PhaseGVN* gvn, Node* region);\n+  InlineTypeBaseNode* clone_with_phis(PhaseGVN* gvn, Node* region, bool not_null = false);\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}