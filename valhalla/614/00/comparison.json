{"files":[{"patch":"@@ -1020,8 +1020,0 @@\n-    public boolean isPrimitiveClass(Type t) {\n-        return t != null && t.isPrimitiveClass();\n-    }\n-\n-    public boolean isValueClass(Type t) {\n-        return t != null && t.isValueClass();\n-    }\n-\n@@ -1054,1 +1046,1 @@\n-                    if (isPrimitiveClass(et)) {\n+                    if (et.isPrimitiveClass()) {\n@@ -1056,1 +1048,1 @@\n-                        if (isPrimitiveClass(es))\n+                        if (es.isPrimitiveClass())\n@@ -1158,1 +1150,1 @@\n-                         s.hasTag(BOT) || (s.hasTag(CLASS) && !isPrimitiveClass(s)) ||\n+                         s.hasTag(BOT) || (s.hasTag(CLASS) && !s.isPrimitiveClass()) ||\n@@ -1241,1 +1233,1 @@\n-                        if (isPrimitiveClass(et)) {\n+                        if (et.isPrimitiveClass()) {\n@@ -1243,1 +1235,1 @@\n-                            if (isPrimitiveClass(es))\n+                            if (es.isPrimitiveClass())\n@@ -1795,1 +1787,1 @@\n-                if (s.hasTag(ERROR) || (s.hasTag(BOT) && !isPrimitiveClass(t)))\n+                if (s.hasTag(ERROR) || (s.hasTag(BOT) && !t.isPrimitiveClass()))\n@@ -1814,1 +1806,1 @@\n-                    if (isPrimitiveClass(t)) {\n+                    if (t.isPrimitiveClass()) {\n@@ -1818,1 +1810,1 @@\n-                    if (isPrimitiveClass(s)) {\n+                    if (s.isPrimitiveClass()) {\n@@ -2261,1 +2253,1 @@\n-        if (isPrimitiveClass(t)) {\n+        if (t.isPrimitiveClass()) {\n@@ -5330,1 +5322,1 @@\n-                    if (types.isPrimitiveClass(type))\n+                    if (type.isPrimitiveClass())\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":10,"deletions":18,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-                if (env.info.inWithField && v.getKind() == ElementKind.FIELD && (v.flags() & STATIC) == 0 && types.isPrimitiveClass(v.owner.type)) {\n+                if (env.info.inWithField && v.getKind() == ElementKind.FIELD && (v.flags() & STATIC) == 0 && v.owner.type.isPrimitiveClass()) {\n@@ -1334,1 +1334,1 @@\n-                if ((v.flags_field & FINAL) == 0 || ((v.flags_field & STATIC) == 0 && types.isPrimitiveClass(v.owner.type)) ||\n+                if ((v.flags_field & FINAL) == 0 || ((v.flags_field & STATIC) == 0 && v.owner.isPrimitiveClass()) ||\n@@ -1537,1 +1537,1 @@\n-                        (sym.flags() & STATIC) != 0 || !types.isPrimitiveClass(sym.owner.type)) {\n+                        (sym.flags() & STATIC) != 0 || !sym.owner.type.isPrimitiveClass()) {\n@@ -2659,1 +2659,1 @@\n-                boolean superCallOnPrimitiveReceiver = types.isPrimitiveClass(env.enclClass.sym.type)\n+                boolean superCallOnPrimitiveReceiver = env.enclClass.sym.type.isPrimitiveClass()\n@@ -2663,1 +2663,1 @@\n-                if (types.isPrimitiveClass(qualifier) || superCallOnPrimitiveReceiver) {\n+                if (qualifier.isPrimitiveClass() || superCallOnPrimitiveReceiver) {\n@@ -3134,1 +3134,1 @@\n-        if (types.isPrimitiveClass(arg.type))\n+        if (arg.type.isPrimitiveClass())\n@@ -5377,1 +5377,1 @@\n-            if (types.isPrimitiveClass(c.type)) {\n+            if (c.type.isPrimitiveClass()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -854,1 +854,1 @@\n-        if (t.isReference() && (primitiveClassOK || !types.isPrimitiveClass(t)))\n+        if (t.isReference() && (primitiveClassOK || !t.isPrimitiveClass()))\n@@ -956,1 +956,1 @@\n-                if (types.isPrimitiveClass(targ)) {\n+                if (targ.isPrimitiveClass()) {\n@@ -1372,1 +1372,1 @@\n-                if (types.isValueClass(sym.owner.type) && (flags & STATIC) == 0) {\n+                if (sym.owner.type.isValueClass() && (flags & STATIC) == 0) {\n@@ -2509,1 +2509,1 @@\n-            return (symbol.flags() & STATIC) == 0 && types.isPrimitiveClass(symbol.type);\n+            return (symbol.flags() & STATIC) == 0 && symbol.type.isPrimitiveClass();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2205,1 +2205,1 @@\n-                        if (types.isValueClass(tree.sym.owner.type))\n+                        if (tree.sym.owner.type.isValueClass())\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -295,1 +295,1 @@\n-            if ((v.flags_field & FINAL) != 0 && ((v.flags_field & STATIC) != 0 || !types.isPrimitiveClass(v.owner.type)) &&\n+            if ((v.flags_field & FINAL) != 0 && ((v.flags_field & STATIC) != 0 || !v.owner.isPrimitiveClass()) &&\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/MemberEnter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1246,1 +1246,1 @@\n-                databuf.appendChar(types.isPrimitiveClass(t) ? poolWriter.putClass(new ConstantPoolQType(types.erasure(t), types)) : poolWriter.putClass(types.erasure(t)));\n+                databuf.appendChar(t.isPrimitiveClass() ? poolWriter.putClass(new ConstantPoolQType(types.erasure(t), types)) : poolWriter.putClass(types.erasure(t)));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2060,1 +2060,1 @@\n-                code.emitAnewarray(makeRef(pos, elemtype, types.isPrimitiveClass(elemtype)), type);\n+                code.emitAnewarray(makeRef(pos, elemtype, elemtype.isPrimitiveClass()), type);\n@@ -2292,1 +2292,1 @@\n-            if (types.isPrimitiveClass(tree.clazz.type)) {\n+            if (tree.clazz.type.isPrimitiveClass()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -349,1 +349,1 @@\n-        if (types.isValueClass(tree.clazz.type)) {\n+        if (tree.clazz.type.isValueClass()) {\n@@ -382,1 +382,1 @@\n-        Assert.check(types.isValueClass(init.owner.type));\n+        Assert.check(init.owner.type.isValueClass());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/TransValues.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}