{"files":[{"patch":"@@ -117,2 +117,2 @@\n-reg_def R18     ( SOC, SOC, Op_RegI, 18, r18->as_VMReg()        );\n-reg_def R18_H   ( SOC, SOC, Op_RegI, 18, r18->as_VMReg()->next());\n+reg_def R18     ( SOC, SOC, Op_RegI, 18, r18_tls->as_VMReg()        );\n+reg_def R18_H   ( SOC, SOC, Op_RegI, 18, r18_tls->as_VMReg()->next());\n@@ -719,0 +719,4 @@\n+#ifdef R18_RESERVED\n+    \/\/ See comment in register_aarch64.hpp\n+    R18,                        \/\/ tls on Windows\n+#endif\n@@ -726,0 +730,4 @@\n+#ifdef R18_RESERVED\n+    \/\/ See comment in register_aarch64.hpp\n+    R18, R18_H,                 \/\/ tls on Windows, platform register on macOS\n+#endif\n@@ -6330,1 +6338,1 @@\n-  max_instructions_per_bundle = 2;   \/\/ A53 = 2, A57 = 4\n+  max_instructions_per_bundle = 4;   \/\/ A53 = 2, A57 = 4\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-    narrowOop n = CompressedOops::encode((oop)o);\n+    uint32_t n = CompressedOops::narrow_oop_value((oop)o);\n@@ -2700,0 +2700,8 @@\n+RegSet MacroAssembler::call_clobbered_registers() {\n+  RegSet regs = RegSet::range(r0, r17) - RegSet::of(rscratch1, rscratch2);\n+#ifndef R18_RESERVED\n+  regs += r18_tls;\n+#endif\n+  return regs;\n+}\n+\n@@ -2702,1 +2710,1 @@\n-  push(RegSet::range(r0, r18) - RegSet::of(rscratch1, rscratch2) - exclude, sp);\n+  push(call_clobbered_registers() - exclude, sp);\n@@ -2722,1 +2730,1 @@\n-  pop(RegSet::range(r0, r18) - RegSet::of(rscratch1, rscratch2) - exclude, sp);\n+  pop(call_clobbered_registers() - exclude, sp);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -196,0 +196,7 @@\n+\/\/ Microsoft's MSVC team thinks that the __FUNCSIG__ is approximately (sympathy for calling conventions) equivalent to __PRETTY_FUNCTION__\n+\/\/ Also, from Clang patch: \"It is very similar to GCC's PRETTY_FUNCTION, except it prints the calling convention.\"\n+\/\/ https:\/\/reviews.llvm.org\/D3311\n+\n+#ifdef _WIN64\n+#define call_Unimplemented() _call_Unimplemented((address)__FUNCSIG__)\n+#else\n@@ -197,0 +204,1 @@\n+#endif\n@@ -204,1 +212,1 @@\n-  inline void cmp(Register Rd, unsigned imm) __attribute__ ((deprecated));\n+  inline void cmp(Register Rd, unsigned imm) = delete;\n@@ -478,0 +486,2 @@\n+  static RegSet call_clobbered_registers();\n+\n@@ -530,1 +540,1 @@\n-  void tbr(Condition cond, Register Rt, int bitpos, Label &dest, bool far = false) {\n+  void tbr(Condition cond, Register Rt, int bitpos, Label &dest, bool isfar = false) {\n@@ -533,1 +543,1 @@\n-    if (far)\n+    if (isfar)\n@@ -542,1 +552,1 @@\n-    if (far) {\n+    if (isfar) {\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1110,1 +1110,1 @@\n-    const Register send = r17, dend = r18;\n+    const Register send = r17, dend = r16;\n@@ -1300,0 +1300,2 @@\n+    RegSet clobbered\n+      = MacroAssembler::call_clobbered_registers() - rscratch1;\n@@ -1302,2 +1304,3 @@\n-    for (Register r = r3; r <= r18; r++)\n-      if (r != rscratch1) __ mov(r, rscratch1);\n+    for (RegSetIterator it = clobbered.begin(); *it != noreg; ++it) {\n+      __ mov(*it, rscratch1);\n+    }\n@@ -1305,0 +1308,1 @@\n+\n@@ -1737,1 +1741,2 @@\n-    \/\/ Registers used as temps (r18, r19, r20 are save-on-entry)\n+    \/\/ Registers used as temps (r19, r20, r21, r22 are save-on-entry)\n+    const Register copied_oop  = r22;       \/\/ actual oop copied\n@@ -1740,1 +1745,0 @@\n-    const Register copied_oop  = r18;       \/\/ actual oop copied\n@@ -1777,2 +1781,1 @@\n-\n-    __ push(RegSet::of(r18, r19, r20, r21), sp);\n+    __ push(RegSet::of(r19, r20, r21, r22), sp);\n@@ -1847,1 +1850,1 @@\n-    __ pop(RegSet::of(r18, r19, r20, r21), sp);\n+    __ pop(RegSet::of(r19, r20, r21, r22), sp);\n@@ -2024,1 +2027,1 @@\n-    const Register lh                = r18; \/\/ layout helper\n+    const Register lh                = r15; \/\/ layout helper\n@@ -2095,1 +2098,1 @@\n-    const Register r18_elsize = lh; \/\/ element size\n+    const Register r15_elsize = lh; \/\/ element size\n@@ -2116,2 +2119,2 @@\n-    __ tbnz(r18_elsize, 1, L_copy_ints);\n-    __ tbnz(r18_elsize, 0, L_copy_shorts);\n+    __ tbnz(r15_elsize, 1, L_copy_ints);\n+    __ tbnz(r15_elsize, 0, L_copy_shorts);\n@@ -2130,1 +2133,1 @@\n-    __ tbnz(r18_elsize, 0, L_copy_longs);\n+    __ tbnz(r15_elsize, 0, L_copy_longs);\n@@ -2141,2 +2144,2 @@\n-      __ andw(lh, lh, Klass::_lh_log2_element_size_mask); \/\/ lh -> r18_elsize\n-      __ cmpw(r18_elsize, LogBytesPerLong);\n+      __ andw(lh, lh, Klass::_lh_log2_element_size_mask); \/\/ lh -> r15_elsize\n+      __ cmpw(r15_elsize, LogBytesPerLong);\n@@ -2160,2 +2163,2 @@\n-    __ load_klass(r18, dst);\n-    __ cmp(scratch_src_klass, r18); \/\/ usual case is exact equality\n+    __ load_klass(r15, dst);\n+    __ cmp(scratch_src_klass, r15); \/\/ usual case is exact equality\n@@ -2177,1 +2180,1 @@\n-    \/\/ live at this point:  scratch_src_klass, scratch_length, r18 (dst_klass)\n+    \/\/ live at this point:  scratch_src_klass, scratch_length, r15 (dst_klass)\n@@ -2180,1 +2183,1 @@\n-      __ ldrw(rscratch1, Address(r18, lh_offset));\n+      __ ldrw(rscratch1, Address(r15, lh_offset));\n@@ -2187,1 +2190,1 @@\n-                             r18, L_failed);\n+                             r15, L_failed);\n@@ -5084,2 +5087,2 @@\n-      Register reg = c_rarg0;\n-      Pa_base = reg;       \/\/ Argument registers\n+      RegSetIterator regs = (RegSet::range(r0, r26) - r18_tls).begin();\n+      Pa_base = *regs;       \/\/ Argument registers\n@@ -5089,5 +5092,5 @@\n-        Pb_base = ++reg;\n-      Pn_base = ++reg;\n-      Rlen= ++reg;\n-      inv = ++reg;\n-      Pm_base = ++reg;\n+        Pb_base = *++regs;\n+      Pn_base = *++regs;\n+      Rlen= *++regs;\n+      inv = *++regs;\n+      Pm_base = *++regs;\n@@ -5096,4 +5099,4 @@\n-      Ra =  ++reg;        \/\/ The current digit of a, b, n, and m.\n-      Rb =  ++reg;\n-      Rm =  ++reg;\n-      Rn =  ++reg;\n+      Ra =  *++regs;        \/\/ The current digit of a, b, n, and m.\n+      Rb =  *++regs;\n+      Rm =  *++regs;\n+      Rn =  *++regs;\n@@ -5101,4 +5104,4 @@\n-      Pa =  ++reg;        \/\/ Pointers to the current\/next digit of a, b, n, and m.\n-      Pb =  ++reg;\n-      Pm =  ++reg;\n-      Pn =  ++reg;\n+      Pa =  *++regs;        \/\/ Pointers to the current\/next digit of a, b, n, and m.\n+      Pb =  *++regs;\n+      Pm =  *++regs;\n+      Pn =  *++regs;\n@@ -5106,3 +5109,3 @@\n-      t0 =  ++reg;        \/\/ Three registers which form a\n-      t1 =  ++reg;        \/\/ triple-precision accumuator.\n-      t2 =  ++reg;\n+      t0 =  *++regs;        \/\/ Three registers which form a\n+      t1 =  *++regs;        \/\/ triple-precision accumuator.\n+      t2 =  *++regs;\n@@ -5110,2 +5113,2 @@\n-      Ri =  ++reg;        \/\/ Inner and outer loop indexes.\n-      Rj =  ++reg;\n+      Ri =  *++regs;        \/\/ Inner and outer loop indexes.\n+      Rj =  *++regs;\n@@ -5113,4 +5116,4 @@\n-      Rhi_ab = ++reg;     \/\/ Product registers: low and high parts\n-      Rlo_ab = ++reg;     \/\/ of a*b and m*n.\n-      Rhi_mn = ++reg;\n-      Rlo_mn = ++reg;\n+      Rhi_ab = *++regs;     \/\/ Product registers: low and high parts\n+      Rlo_ab = *++regs;     \/\/ of a*b and m*n.\n+      Rhi_mn = *++regs;\n+      Rlo_mn = *++regs;\n@@ -5119,1 +5122,1 @@\n-      _toSave = RegSet::range(r19, reg) + Pm_base;\n+      _toSave = RegSet::range(r19, *regs) + Pm_base;\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":48,"deletions":45,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -47,6 +47,0 @@\n-\/\/ Platform-dependent initialization\n-\n-void TemplateTable::pd_initialize() {\n-  \/\/ No aarch64 specific initialization\n-}\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-  product(uintx, PowerArchitecturePPC64, 0,                                 \\\n+  product(uintx, PowerArchitecturePPC64, 0, DIAGNOSTIC,                     \\\n@@ -92,3 +92,0 @@\n-  product(bool, SuperwordUseVSX, false,                                     \\\n-          \"Use Power8 VSX instructions for superword optimization.\")        \\\n-                                                                            \\\n@@ -97,1 +94,1 @@\n-  product(bool, ReoptimizeCallSequences, true,                              \\\n+  product(bool, ReoptimizeCallSequences, true, DIAGNOSTIC,                  \\\n@@ -101,1 +98,1 @@\n-  product(uint64_t,DSCR_PPC64, (uintx)-1,                                   \\\n+  product(uint64_t, DSCR_PPC64, (uint64_t)-1,                               \\\n@@ -104,1 +101,1 @@\n-  product(uint64_t,DSCR_DPFD_PPC64, 8,                                      \\\n+  product(uint64_t, DSCR_DPFD_PPC64, 8,                                     \\\n@@ -108,1 +105,1 @@\n-  product(uint64_t,DSCR_URG_PPC64, 8,                                       \\\n+  product(uint64_t, DSCR_URG_PPC64, 8,                                      \\\n@@ -113,1 +110,1 @@\n-  product(bool, UseLoadInstructionsForStackBangingPPC64, false,             \\\n+  product(bool, UseLoadInstructionsForStackBangingPPC64, false, DIAGNOSTIC, \\\n@@ -116,0 +113,5 @@\n+  product(bool, UseStaticBranchPredictionInCompareAndSwapPPC64, true, DIAGNOSTIC,\\\n+          \"Use static branch prediction hints in CAS operations.\")          \\\n+  product(bool, UseStaticBranchPredictionForUncommonPathsPPC64, false, DIAGNOSTIC,\\\n+          \"Use static branch prediction hints for uncommon paths.\")         \\\n+                                                                            \\\n@@ -117,1 +119,4 @@\n-  product(bool, UseByteReverseInstructions, false,                          \\\n+  product(bool, SuperwordUseVSX, false,                                     \\\n+          \"Use Power8 VSX instructions for superword optimization.\")        \\\n+                                                                            \\\n+  product(bool, UseByteReverseInstructions, false, DIAGNOSTIC,              \\\n@@ -120,1 +125,1 @@\n-  product(bool, UseVectorByteReverseInstructionsPPC64, false,               \\\n+  product(bool, UseVectorByteReverseInstructionsPPC64, false, DIAGNOSTIC,   \\\n@@ -123,1 +128,1 @@\n-  product(bool, UseCountLeadingZerosInstructionsPPC64, true,                \\\n+  product(bool, UseCountLeadingZerosInstructionsPPC64, true, DIAGNOSTIC,    \\\n@@ -126,1 +131,1 @@\n-  product(bool, UseCountTrailingZerosInstructionsPPC64, false,              \\\n+  product(bool, UseCountTrailingZerosInstructionsPPC64, false, DIAGNOSTIC,  \\\n@@ -129,1 +134,1 @@\n-  product(bool, UseExtendedLoadAndReserveInstructionsPPC64, false,          \\\n+  product(bool, UseExtendedLoadAndReserveInstructionsPPC64, false, DIAGNOSTIC,\\\n@@ -132,1 +137,1 @@\n-  product(bool, UseRotateAndMaskInstructionsPPC64, true,                    \\\n+  product(bool, UseRotateAndMaskInstructionsPPC64, true, DIAGNOSTIC,        \\\n@@ -135,5 +140,0 @@\n-  product(bool, UseStaticBranchPredictionInCompareAndSwapPPC64, true,       \\\n-          \"Use static branch prediction hints in CAS operations.\")          \\\n-  product(bool, UseStaticBranchPredictionForUncommonPathsPPC64, false,      \\\n-          \"Use static branch prediction hints for uncommon paths.\")         \\\n-                                                                            \\\n@@ -147,1 +147,1 @@\n-  product(bool, TrapBasedICMissChecks, true,                                \\\n+  product(bool, TrapBasedICMissChecks, true, DIAGNOSTIC,                    \\\n@@ -149,4 +149,5 @@\n-  product(bool, TraceTraps, false, \"Trace all traps the signal handler\"     \\\n-          \"handles.\")                                                       \\\n-  product(bool, ZapMemory, false, \"Write 0x0101... to empty memory.\"        \\\n-          \" Use this to ease debugging.\")                                   \\\n+  product(bool, TraceTraps, false, DIAGNOSTIC,                              \\\n+          \"Trace all traps the signal handler handles.\")                    \\\n+                                                                            \\\n+  develop(bool, ZapMemory, false,                                           \\\n+          \"Write 0x0101... to empty memory. Use this to ease debugging.\")   \\\n","filename":"src\/hotspot\/cpu\/ppc\/globals_ppc.hpp","additions":26,"deletions":25,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -2265,1 +2265,1 @@\n-\/\/   @HotSpotIntrinsicCandidate\n+\/\/   @IntrinsicCandidate\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5835,1 +5835,1 @@\n-   \/\/@HotSpotIntrinsicCandidate\n+   \/\/@IntrinsicCandidate\n@@ -8212,1 +8212,1 @@\n-\/\/   @HotSpotIntrinsicCandidate\n+\/\/   @IntrinsicCandidate\n@@ -8428,1 +8428,1 @@\n-\/\/   @HotSpotIntrinsicCandidate\n+\/\/   @IntrinsicCandidate\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,5 +51,0 @@\n-\/\/ Platform-dependent initialization\n-void TemplateTable::pd_initialize() {\n-  \/\/ No x86 specific initialization\n-}\n-\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -782,1 +782,1 @@\n-  assert(exact_log2(CPU_MAX_FEATURE) + 1 == sizeof(_features_names) \/ sizeof(char*), \"wrong size features_names\");\n+  assert(exact_log2_long(CPU_MAX_FEATURE) + 1 == sizeof(_features_names) \/ sizeof(char*), \"wrong size features_names\");\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1131,1 +1131,1 @@\n-    _method_HotSpotIntrinsicCandidate,\n+    _method_IntrinsicCandidate,\n@@ -2204,1 +2204,1 @@\n-    case vmSymbols::VM_SYMBOL_ENUM_NAME(jdk_internal_HotSpotIntrinsicCandidate_signature): {\n+    case vmSymbols::VM_SYMBOL_ENUM_NAME(jdk_internal_vm_annotation_IntrinsicCandidate_signature): {\n@@ -2207,1 +2207,1 @@\n-      return _method_HotSpotIntrinsicCandidate;\n+      return _method_IntrinsicCandidate;\n@@ -2261,1 +2261,1 @@\n-  if (has_annotation(_method_HotSpotIntrinsicCandidate) && !m->is_synthetic())\n+  if (has_annotation(_method_IntrinsicCandidate) && !m->is_synthetic())\n@@ -5424,1 +5424,1 @@\n-        \/\/ but the method is not annotated with @HotSpotIntrinsicCandidate.\n+        \/\/ but the method is not annotated with @IntrinsicCandidate.\n@@ -5428,1 +5428,1 @@\n-              \"but the method is not annotated with @HotSpotIntrinsicCandidate.%s\",\n+              \"but the method is not annotated with @IntrinsicCandidate.%s\",\n@@ -5435,1 +5435,1 @@\n-        \/\/ Check is the method 'method' is annotated with @HotSpotIntrinsicCandidate,\n+        \/\/ Check is the method 'method' is annotated with @IntrinsicCandidate,\n@@ -5439,1 +5439,1 @@\n-            tty->print(\"Method [%s] is annotated with @HotSpotIntrinsicCandidate, \"\n+            tty->print(\"Method [%s] is annotated with @IntrinsicCandidate, \"\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-\/\/ Intrinsic methods are marked by the jdk.internal.HotSpotIntrinsicCandidate\n+\/\/ Intrinsic methods are marked by the jdk.internal.vm.annotation.IntrinsicCandidate\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -289,1 +289,0 @@\n-  template(jdk_internal_HotSpotIntrinsicCandidate_signature, \"Ljdk\/internal\/HotSpotIntrinsicCandidate;\") \\\n@@ -293,0 +292,1 @@\n+  template(jdk_internal_vm_annotation_IntrinsicCandidate_signature, \"Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\") \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -635,4 +635,0 @@\n-  bool exception_address_is_unpack_entry(address pc) const {\n-    address unpack_pc = unpack();\n-    return (pc == unpack_pc || (pc + frame::pc_return_offset) == unpack_pc);\n-  }\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -509,2 +509,0 @@\n-  \/\/ platform specific bytecodes\n-  pd_initialize();\n","filename":"src\/hotspot\/share\/interpreter\/templateTable.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -346,1 +346,0 @@\n-  static void pd_initialize();\n","filename":"src\/hotspot\/share\/interpreter\/templateTable.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -900,2 +900,8 @@\n-          JVMCI_event_4(\"implicit exception at %i\", pc_offset);\n-          _implicit_exception_table.add_deoptimize(pc_offset);\n+          if (jvmci_env()->isa_site_ImplicitExceptionDispatch(site)) {\n+            jint dispatch_offset = jvmci_env()->get_site_ImplicitExceptionDispatch_dispatchOffset(site);\n+            JVMCI_event_4(\"implicit exception at %i, dispatch to %i\", pc_offset, dispatch_offset);\n+            _implicit_exception_table.append(pc_offset, dispatch_offset);\n+          } else {\n+            JVMCI_event_4(\"implicit exception at %i\", pc_offset);\n+            _implicit_exception_table.add_deoptimize(pc_offset);\n+          }\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -458,1 +458,0 @@\n-  size_t alignment = BytesPerWord;\n@@ -471,1 +470,1 @@\n-      dump_region->allocate(sizeof(address), BytesPerWord);\n+      dump_region->allocate(sizeof(address));\n@@ -474,1 +473,1 @@\n-  dest = dump_region->allocate(bytes, alignment);\n+  dest = dump_region->allocate(bytes);\n","filename":"src\/hotspot\/share\/memory\/archiveBuilder.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-  _info = (CppVtableInfo*)mc_region()->allocate(CppVtableInfo::byte_size(n), sizeof(intptr_t));\n+  _info = (CppVtableInfo*)mc_region()->allocate(CppVtableInfo::byte_size(n));\n@@ -249,1 +249,1 @@\n-  _cloned_cpp_vtptrs = (intptr_t**)mc_region()->allocate(vtptrs_bytes, sizeof(intptr_t*));\n+  _cloned_cpp_vtptrs = (intptr_t**)mc_region()->allocate(vtptrs_bytes);\n","filename":"src\/hotspot\/share\/memory\/cppVtables.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-  CDS_JAVA_HEAP_ONLY(_archived_mirror = 0;)\n+  CDS_JAVA_HEAP_ONLY(_archived_mirror = narrowOop::null;)\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-  narrowOop archived_java_mirror_raw_narrow() NOT_CDS_JAVA_HEAP_RETURN_(0); \/\/ no GC barrier\n+  narrowOop archived_java_mirror_raw_narrow() NOT_CDS_JAVA_HEAP_RETURN_(narrowOop::null); \/\/ no GC barrier\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,1 +162,1 @@\n-    if (narrow_oop == 0) return NULL;\n+    if (CompressedOops::is_null(narrow_oop)) return NULL;\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,2 @@\n-typedef juint narrowOop; \/\/ Offset instead of address for an oop within a java object\n+\/\/ Global offset instead of address for an oop within a java object.\n+enum class narrowOop : uint32_t { null = 0 };\n","filename":"src\/hotspot\/share\/oops\/oopsHierarchy.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -108,0 +108,4 @@\n+  notproduct(uintx, PrintIdealIndentThreshold, 0,                           \\\n+          \"A depth threshold of ideal graph. Indentation is disabled \"      \\\n+          \"when users attempt to dump an ideal graph deeper than it.\")      \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -332,0 +332,1 @@\n+  , _indent(0)\n@@ -352,0 +353,1 @@\n+  , _indent(0)\n@@ -365,0 +367,1 @@\n+  , _indent(0)\n@@ -380,0 +383,1 @@\n+  , _indent(0)\n@@ -397,0 +401,1 @@\n+  , _indent(0)\n@@ -416,0 +421,1 @@\n+  , _indent(0)\n@@ -438,0 +444,1 @@\n+  , _indent(0)\n@@ -462,0 +469,1 @@\n+  , _indent(0)\n@@ -1048,1 +1056,1 @@\n-  assert(_max_classes <= max_jushort, \"too many NodeProperty classes\");\n+  assert(_max_classes <= max_juint, \"too many NodeProperty classes\");\n@@ -1730,1 +1738,6 @@\n-  st->print(\"%c%d%s\\t%s\\t=== \", is_new ? ' ' : 'o', _idx, mark ? \" >\" : \"\", Name());\n+\n+  if (_indent > 0) {\n+    st->print(\"%*s\", (_indent << 1), \"  \");\n+  }\n+\n+  st->print(\"%c%d%s%s  === \", is_new ? ' ' : 'o', _idx, mark ? \" >\" : \"  \", Name());\n@@ -1855,1 +1868,1 @@\n-\/\/   nstack:        the nodes are collected into this array.\n+\/\/   queue:         the nodes are collected into this array.\n@@ -1863,1 +1876,2 @@\n-static void collect_nodes_i(GrowableArray<Node*> *nstack, const Node* start, int direction, uint depth, bool include_start, bool only_ctrl, bool only_data) {\n+static void collect_nodes_i(GrowableArray<Node*>* queue, const Node* start, int direction, uint depth, bool include_start, bool only_ctrl, bool only_data) {\n+  bool indent = depth <= PrintIdealIndentThreshold;\n@@ -1865,1 +1879,1 @@\n-  nstack->append(s);\n+  queue->append(s);\n@@ -1868,0 +1882,2 @@\n+\n+  s->set_indent(0);\n@@ -1869,1 +1885,1 @@\n-    end = nstack->length();\n+    end = queue->length();\n@@ -1871,1 +1887,1 @@\n-      Node* tp  = nstack->at(j);\n+      Node* tp  = queue->at(j);\n@@ -1881,4 +1897,4 @@\n-\n-        bool on_stack = nstack->contains(n);\n-        if (!on_stack) {\n-          nstack->append(n);\n+        bool in_queue = queue->contains(n);\n+        if (!in_queue) {\n+          queue->append(n);\n+          n->set_indent(indent ? (i + 1) : 0);\n@@ -1891,1 +1907,1 @@\n-    nstack->remove(s);\n+    queue->remove(s);\n@@ -1899,2 +1915,2 @@\n-  GrowableArray <Node *> nstack(Compile::current()->live_nodes());\n-  collect_nodes_i(&nstack, start, d, (uint) ABS(d), true, only_ctrl, false);\n+  GrowableArray <Node *> queue(Compile::current()->live_nodes());\n+  collect_nodes_i(&queue, start, d, (uint) ABS(d), true, only_ctrl, false);\n@@ -1902,1 +1918,1 @@\n-  int end = nstack.length();\n+  int end = queue.length();\n@@ -1905,1 +1921,1 @@\n-      nstack.at(j)->dump();\n+      queue.at(j)->dump();\n@@ -1909,1 +1925,1 @@\n-      nstack.at(j)->dump();\n+      queue.at(j)->dump();\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":34,"deletions":18,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -616,1 +616,1 @@\n-  \/\/ so that it's values fits into 16 bits.\n+  \/\/ so that its values fit into 32 bits.\n@@ -732,1 +732,1 @@\n-    _max_classes  = ClassMask_Halt\n+    _max_classes  = ClassMask_Opaque1\n@@ -1137,0 +1137,6 @@\n+  int _indent;\n+\n+ public:\n+  void set_indent(int indent) { _indent = indent; }\n+\n+ private:\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-#ifdef _WIN32\n+#if defined(_WIN32) && !defined(USE_VECTORED_EXCEPTION_HANDLING)\n@@ -4261,1 +4261,1 @@\n-#ifdef _WIN32\n+#if defined(_WIN32) && !defined(USE_VECTORED_EXCEPTION_HANDLING)\n@@ -4265,1 +4265,1 @@\n-#ifdef _WIN32\n+#if defined(_WIN32) && !defined(USE_VECTORED_EXCEPTION_HANDLING)\n@@ -4333,1 +4333,1 @@\n-#ifdef _WIN32\n+#if defined(_WIN32) && !defined(USE_VECTORED_EXCEPTION_HANDLING)\n@@ -4337,1 +4337,1 @@\n-#ifdef _WIN32\n+#if defined(_WIN32) && !defined(USE_VECTORED_EXCEPTION_HANDLING)\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2386,0 +2386,4 @@\n+WB_ENTRY(void, WB_WaitUnsafe(JNIEnv* env, jobject wb, jint time))\n+    os::naked_short_sleep(time);\n+WB_END\n+\n@@ -2643,0 +2647,1 @@\n+  {CC\"waitUnsafe\", CC\"(I)V\",                          (void*)&WB_WaitUnsafe},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -556,0 +556,1 @@\n+  { \"Debugging\",                     JDK_Version::undefined(), JDK_Version::jdk(16), JDK_Version::jdk(17) },\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-          \"Print information about Java monitor locks when the stacks are\"  \\\n+          \"Print information about Java monitor locks when the stacks are \" \\\n@@ -398,4 +398,0 @@\n-  product(bool, Debugging, false,                                           \\\n-          \"Set when executing debug methods in debug.cpp \"                  \\\n-          \"(to prevent triggering assertions)\")                             \\\n-                                                                            \\\n@@ -2442,1 +2438,1 @@\n-             \"@HotSpotIntrinsicCandidate annotation, that \"                 \\\n+             \"@IntrinsicCandidate annotation, that \"                        \\\n@@ -2444,2 +2440,2 @@\n-             \"that are annotated with the @HotSpotIntrinsicCandidate \"      \\\n-             \"annotation, and that \"                                        \\\n+             \"that are annotated with the @IntrinsicCandidate annotation, \" \\\n+             \"and that \"                                                    \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -939,5 +939,11 @@\n-  st->print(\" [stack: \" PTR_FORMAT \",\" PTR_FORMAT \"]\",\n-            p2i(stack_end()), p2i(stack_base()));\n-\n-  if (osthread()) {\n-    st->print(\" [id=%d]\", osthread()->thread_id());\n+  OSThread* os_thr = osthread();\n+  if (os_thr != NULL) {\n+    if (os_thr->get_state() != ZOMBIE) {\n+      st->print(\" [stack: \" PTR_FORMAT \",\" PTR_FORMAT \"]\",\n+                p2i(stack_end()), p2i(stack_base()));\n+      st->print(\" [id=%d]\", osthread()->thread_id());\n+    } else {\n+      st->print(\" terminated\");\n+    }\n+  } else {\n+    st->print(\" unknown state (no osThread)\");\n@@ -945,1 +951,0 @@\n-\n@@ -1335,0 +1340,1 @@\n+  osthread()->set_state(ZOMBIE);\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -494,0 +494,1 @@\n+  virtual bool is_JfrSampler_thread() const          { return false; }\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -301,2 +301,2 @@\n-    tty->print(\"Growable Array \" INTPTR_FORMAT, this);\n-    tty->print(\": length %ld (_max %ld) { \", _len, _max);\n+    tty->print(\"Growable Array \" INTPTR_FORMAT, p2i(this));\n+    tty->print(\": length %d (_max %d) { \", _len, _max);\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,1 +69,0 @@\n-import jdk.internal.HotSpotIntrinsicCandidate;\n@@ -79,0 +78,1 @@\n+import jdk.internal.vm.annotation.IntrinsicCandidate;\n@@ -869,1 +869,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -898,1 +898,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -909,1 +909,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -920,1 +920,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -952,1 +952,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1171,1 +1171,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1470,1 +1470,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -4005,1 +4005,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -4581,1 +4581,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.internal.HotSpotIntrinsicCandidate;\n+import jdk.internal.vm.annotation.IntrinsicCandidate;\n@@ -51,1 +51,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -73,1 +73,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -108,1 +108,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -221,1 +221,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -291,1 +291,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -316,1 +316,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -72,1 +72,0 @@\n-import jdk.internal.HotSpotIntrinsicCandidate;\n@@ -80,0 +79,1 @@\n+import jdk.internal.vm.annotation.IntrinsicCandidate;\n@@ -430,1 +430,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -474,1 +474,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -569,1 +569,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -587,1 +587,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -698,1 +698,1 @@\n-    @jdk.internal.HotSpotIntrinsicCandidate\n+    @jdk.internal.vm.annotation.IntrinsicCandidate\n@@ -713,1 +713,1 @@\n-    @jdk.internal.HotSpotIntrinsicCandidate\n+    @jdk.internal.vm.annotation.IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import jdk.internal.HotSpotIntrinsicCandidate;\n+import jdk.internal.vm.annotation.IntrinsicCandidate;\n@@ -331,1 +331,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-import jdk.internal.HotSpotIntrinsicCandidate;\n+import jdk.internal.vm.annotation.IntrinsicCandidate;\n@@ -126,1 +126,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -505,1 +505,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Array.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.HotSpotIntrinsicCandidate;\n@@ -34,0 +33,1 @@\n+import jdk.internal.vm.annotation.IntrinsicCandidate;\n@@ -550,1 +550,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.HotSpotIntrinsicCandidate;\n@@ -31,0 +30,1 @@\n+import jdk.internal.vm.annotation.IntrinsicCandidate;\n@@ -154,1 +154,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -177,1 +177,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -201,1 +201,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -216,1 +216,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -236,1 +236,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -256,1 +256,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -299,1 +299,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -308,1 +308,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -321,1 +321,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -325,1 +325,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -329,1 +329,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -333,1 +333,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -337,1 +337,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -341,1 +341,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -345,1 +345,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -349,1 +349,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -353,1 +353,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -357,1 +357,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -361,1 +361,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -365,1 +365,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -369,1 +369,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -373,1 +373,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1139,1 +1139,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1145,1 +1145,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1151,1 +1151,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1494,1 +1494,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1536,1 +1536,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1563,1 +1563,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1615,1 +1615,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1651,1 +1651,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1673,1 +1673,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1695,1 +1695,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1721,1 +1721,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1747,1 +1747,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1773,1 +1773,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1808,1 +1808,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1813,1 +1813,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1818,1 +1818,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1825,1 +1825,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1832,1 +1832,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1839,1 +1839,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1846,1 +1846,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1853,1 +1853,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1860,1 +1860,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1882,1 +1882,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1889,1 +1889,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1896,1 +1896,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1903,1 +1903,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1910,1 +1910,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1917,1 +1917,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1924,1 +1924,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1931,1 +1931,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1957,1 +1957,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1964,1 +1964,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1971,1 +1971,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1978,1 +1978,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1985,1 +1985,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -1993,1 +1993,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2000,1 +2000,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2355,1 +2355,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2360,1 +2360,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2365,1 +2365,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2372,1 +2372,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2379,1 +2379,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2386,1 +2386,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2393,1 +2393,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2400,1 +2400,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2411,1 +2411,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2431,1 +2431,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2441,1 +2441,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2445,1 +2445,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2449,1 +2449,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2453,1 +2453,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2457,1 +2457,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2461,1 +2461,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2465,1 +2465,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2469,1 +2469,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2473,1 +2473,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2477,1 +2477,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2481,1 +2481,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2485,1 +2485,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2489,1 +2489,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2493,1 +2493,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2497,1 +2497,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2501,1 +2501,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2507,1 +2507,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2517,1 +2517,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2523,1 +2523,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2529,1 +2529,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2535,1 +2535,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2541,1 +2541,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2547,1 +2547,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2553,1 +2553,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2559,1 +2559,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2575,1 +2575,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2585,1 +2585,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2591,1 +2591,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2597,1 +2597,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2603,1 +2603,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2609,1 +2609,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2615,1 +2615,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2621,1 +2621,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2627,1 +2627,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2635,1 +2635,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2645,1 +2645,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2651,1 +2651,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2657,1 +2657,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2663,1 +2663,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2669,1 +2669,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2675,1 +2675,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2681,1 +2681,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2687,1 +2687,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2693,1 +2693,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2703,1 +2703,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2709,1 +2709,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2715,1 +2715,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2721,1 +2721,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2727,1 +2727,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2733,1 +2733,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2739,1 +2739,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2745,1 +2745,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2762,1 +2762,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2776,1 +2776,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2816,1 +2816,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2854,1 +2854,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2881,1 +2881,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -2908,1 +2908,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3051,1 +3051,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3089,1 +3089,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3127,1 +3127,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3173,1 +3173,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3215,1 +3215,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3788,1 +3788,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3803,1 +3803,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3815,1 +3815,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3908,1 +3908,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3947,1 +3947,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3967,1 +3967,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -3982,1 +3982,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -4025,1 +4025,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -4068,1 +4068,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -4090,1 +4090,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -4106,1 +4106,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n@@ -4215,1 +4215,1 @@\n-    @HotSpotIntrinsicCandidate\n+    @IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java","additions":145,"deletions":145,"binary":false,"changes":290,"status":"modified"},{"patch":"@@ -142,1 +142,0 @@\n-        jdk.jfr,\n@@ -232,0 +231,1 @@\n+        jdk.jfr,\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2801,1 +2801,1 @@\n-                spMethod.owner == sym.owner) {\n+                    spMethod.owner == sym.owner) {\n@@ -2806,0 +2806,12 @@\n+        Type spReturnType = spMethod.asType().getReturnType();\n+        if (types.isSameType(spReturnType, syms.objectType)) {\n+            \/\/ Polymorphic return, pass through mtype\n+        } else if (!types.isSameType(spReturnType, mtype.getReturnType())) {\n+            \/\/ Retain the sig poly method's return type, which differs from that of mtype\n+            \/\/ Will result in an incompatible return type error\n+            mtype = new MethodType(mtype.getParameterTypes(),\n+                    spReturnType,\n+                    mtype.getThrownTypes(),\n+                    syms.methodClass);\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -483,0 +483,5 @@\n+        if (method.isConstructor()) {\n+            \/\/ Constructor calls should have been checked in the verifier and method's\n+            \/\/ declaring class is assignable from this (see above) so treat it as resolved.\n+            return method;\n+        }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotResolvedObjectTypeImpl.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -110,0 +110,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.CommentUtils;\n@@ -112,1 +113,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.WorkArounds;\n@@ -285,2 +285,1 @@\n-     * According to\n-     * <cite>The Java Language Specification<\/cite>,\n+     * According to <cite>The Java Language Specification<\/cite>,\n@@ -2271,1 +2270,1 @@\n-    public String constantValueExpresion(VariableElement ve) {\n+    public String constantValueExpression(VariableElement ve) {\n@@ -2274,22 +2273,2 @@\n-        return cve.constantValueExpression(configuration.workArounds, ve);\n-    }\n-\n-    private static class ConstantValueExpression {\n-        public String constantValueExpression(WorkArounds workArounds, VariableElement ve) {\n-            return new TypeKindVisitor9<String, Object>() {\n-                \/* TODO: we need to fix this correctly.\n-                 * we have a discrepancy here, note the use of getConstValue\n-                 * vs. getConstantValue, at some point we need to use\n-                 * getConstantValue.\n-                 * In the legacy world byte and char primitives appear as Integer values,\n-                 * thus a byte value of 127 will appear as 127, but in the new world,\n-                 * a byte value appears as Byte thus 0x7f will be printed, similarly\n-                 * chars will be  translated to \\n, \\r etc. however, in the new world,\n-                 * they will be printed as decimal values. The new world is correct,\n-                 * and we should fix this by using getConstantValue and the visitor to\n-                 * address this in the future.\n-                 *\/\n-                @Override\n-                public String visitPrimitiveAsBoolean(PrimitiveType t, Object val) {\n-                    return (int)val == 0 ? \"false\" : \"true\";\n-                }\n+        return cve.visit(ve.asType(), ve.getConstantValue());\n+    }\n@@ -2297,4 +2276,8 @@\n-                @Override\n-                public String visitPrimitiveAsDouble(PrimitiveType t, Object val) {\n-                    return sourceForm(((Double)val), 'd');\n-                }\n+    \/\/ We could also use Elements.getConstantValueExpression, which provides\n+    \/\/ similar functionality, but which also includes casts to provide valid\n+    \/\/ compilable constants:  e.g. (byte) 0x7f\n+    private static class ConstantValueExpression extends TypeKindVisitor9<String, Object> {\n+        @Override\n+        public String visitPrimitiveAsBoolean(PrimitiveType t, Object val) {\n+            return ((boolean) val) ? \"true\" : \"false\";\n+        }\n@@ -2302,4 +2285,4 @@\n-                @Override\n-                public String visitPrimitiveAsFloat(PrimitiveType t, Object val) {\n-                    return sourceForm(((Float)val).doubleValue(), 'f');\n-                }\n+        @Override\n+        public String visitPrimitiveAsByte(PrimitiveType t, Object val) {\n+            return \"0x\" + Integer.toString(((Byte) val) & 0xff, 16);\n+        }\n@@ -2307,4 +2290,8 @@\n-                @Override\n-                public String visitPrimitiveAsLong(PrimitiveType t, Object val) {\n-                    return val + \"L\";\n-                }\n+        @Override\n+        public String visitPrimitiveAsChar(PrimitiveType t, Object val) {\n+            StringBuilder buf = new StringBuilder(8);\n+            buf.append('\\'');\n+            sourceChar((char) val, buf);\n+            buf.append('\\'');\n+            return buf.toString();\n+        }\n@@ -2312,13 +2299,22 @@\n-                @Override\n-                protected String defaultAction(TypeMirror e, Object val) {\n-                    if (val == null)\n-                        return null;\n-                    else if (val instanceof Character)\n-                        return sourceForm(((Character)val));\n-                    else if (val instanceof Byte)\n-                        return sourceForm(((Byte)val));\n-                    else if (val instanceof String)\n-                        return sourceForm((String)val);\n-                    return val.toString(); \/\/ covers int, short\n-                }\n-            }.visit(ve.asType(), workArounds.getConstValue(ve));\n+        @Override\n+        public String visitPrimitiveAsDouble(PrimitiveType t, Object val) {\n+            return sourceForm(((Double) val), 'd');\n+        }\n+\n+        @Override\n+        public String visitPrimitiveAsFloat(PrimitiveType t, Object val) {\n+            return sourceForm(((Float) val).doubleValue(), 'f');\n+        }\n+\n+        @Override\n+        public String visitPrimitiveAsLong(PrimitiveType t, Object val) {\n+            return val + \"L\";\n+        }\n+\n+        @Override\n+        protected String defaultAction(TypeMirror e, Object val) {\n+            if (val == null)\n+                return null;\n+            else if (val instanceof String)\n+                return sourceForm((String) val);\n+            return val.toString(); \/\/ covers int, short\n@@ -2327,1 +2323,0 @@\n-        \/\/ where\n@@ -2338,12 +2333,0 @@\n-        private  String sourceForm(char c) {\n-            StringBuilder buf = new StringBuilder(8);\n-            buf.append('\\'');\n-            sourceChar(c, buf);\n-            buf.append('\\'');\n-            return buf.toString();\n-        }\n-\n-        private String sourceForm(byte c) {\n-            return \"0x\" + Integer.toString(c & 0xff, 16);\n-        }\n-\n@@ -2353,1 +2336,1 @@\n-            for (int i=0; i<s.length(); i++) {\n+            for (int i = 0; i < s.length(); i++) {\n@@ -2363,11 +2346,14 @@\n-            case '\\b': buf.append(\"\\\\b\"); return;\n-            case '\\t': buf.append(\"\\\\t\"); return;\n-            case '\\n': buf.append(\"\\\\n\"); return;\n-            case '\\f': buf.append(\"\\\\f\"); return;\n-            case '\\r': buf.append(\"\\\\r\"); return;\n-            case '\\\"': buf.append(\"\\\\\\\"\"); return;\n-            case '\\'': buf.append(\"\\\\\\'\"); return;\n-            case '\\\\': buf.append(\"\\\\\\\\\"); return;\n-            default:\n-                if (isPrintableAscii(c)) {\n-                    buf.append(c); return;\n+                case '\\b' -> buf.append(\"\\\\b\");\n+                case '\\t' -> buf.append(\"\\\\t\");\n+                case '\\n' -> buf.append(\"\\\\n\");\n+                case '\\f' -> buf.append(\"\\\\f\");\n+                case '\\r' -> buf.append(\"\\\\r\");\n+                case '\\\"' -> buf.append(\"\\\\\\\"\");\n+                case '\\'' -> buf.append(\"\\\\\\'\");\n+                case '\\\\' -> buf.append(\"\\\\\\\\\");\n+                default -> {\n+                    if (isPrintableAscii(c)) {\n+                        buf.append(c);\n+                        return;\n+                    }\n+                    unicodeEscape(c, buf);\n@@ -2375,2 +2361,0 @@\n-                unicodeEscape(c, buf);\n-                return;\n@@ -2383,4 +2367,4 @@\n-            buf.append(chars.charAt(15 & (c>>12)));\n-            buf.append(chars.charAt(15 & (c>>8)));\n-            buf.append(chars.charAt(15 & (c>>4)));\n-            buf.append(chars.charAt(15 & (c>>0)));\n+            buf.append(chars.charAt(15 & (c >> 12)));\n+            buf.append(chars.charAt(15 & (c >> 8)));\n+            buf.append(chars.charAt(15 & (c >> 4)));\n+            buf.append(chars.charAt(15 & (c >> 0)));\n@@ -2388,0 +2372,1 @@\n+\n@@ -2725,1 +2710,1 @@\n-                configuration.workArounds.runDocLint(path);\n+                configuration.runDocLint(path);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":68,"deletions":83,"binary":false,"changes":151,"status":"modified"},{"patch":"@@ -86,1 +86,0 @@\n-@SuppressWarnings(\"unchecked\")\n@@ -93,0 +92,1 @@\n+    @SuppressWarnings(\"unchecked\")\n@@ -188,2 +188,4 @@\n-        class LocalClass {}\n-        Cloneable clone = new Cloneable() {};\n+        class LocalClass {\n+        }\n+        Cloneable clone = new Cloneable() {\n+        };\n@@ -776,1 +778,1 @@\n-                            ResolvedJavaMethod resolvedmethod = type.resolveMethod(m, context);\n+                            ResolvedJavaMethod resolvedMethod = type.resolveMethod(m, context);\n@@ -779,1 +781,1 @@\n-                                assertNull(resolvedmethod);\n+                                assertNull(resolvedMethod);\n@@ -782,1 +784,1 @@\n-                                assertEquals(m.toString(), i, resolvedmethod);\n+                                assertEquals(m.toString(), i, resolvedMethod);\n@@ -787,0 +789,19 @@\n+                \/\/ For backwards compatibility treat constructors as resolvable even though they\n+                \/\/ aren't virtually dispatched.\n+                ResolvedJavaType declaringClass = metaAccess.lookupJavaType(c);\n+                for (Constructor<?> m : c.getDeclaredConstructors()) {\n+                    ResolvedJavaMethod decl = metaAccess.lookupJavaMethod(m);\n+                    ResolvedJavaMethod impl = type.resolveMethod(decl, declaringClass);\n+                    assertEquals(m.toString(), decl, impl);\n+                }\n+                for (Method m : c.getDeclaredMethods()) {\n+                    if (isStatic(m.getModifiers())) {\n+                        \/\/ resolveMethod really shouldn't be called with static methods and the\n+                        \/\/ result is is somewhat inconsistent so just ignore them\n+                        continue;\n+                    }\n+                    ResolvedJavaMethod decl = metaAccess.lookupJavaMethod(m);\n+                    ResolvedJavaMethod impl = type.resolveMethod(decl, declaringClass);\n+                    ResolvedJavaMethod expected = isSignaturePolymorphic(decl) ? null : decl;\n+                    assertEquals(m.toString(), expected, impl);\n+                }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TestResolvedJavaType.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -198,2 +198,2 @@\n-    protected static final String START = \"(\\\\d+\\\\t(.*\";\n-    protected static final String MID = \".*)+\\\\t===.*\";\n+    protected static final String START = \"(\\\\d+ (.*\";\n+    protected static final String MID = \".*)+ ===.*\";\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/InlineTypeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -634,0 +634,2 @@\n+\n+  public native void waitUnsafe(int time_ms);\n","filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}