{"files":[{"patch":"@@ -2653,1 +2653,1 @@\n-                \/* Is this an ill conceived attempt to invoke jlO methods not available on primitive class types ??\n+                \/* Is this an ill-conceived attempt to invoke jlO methods not available on value class types ??\n@@ -2655,1 +2655,1 @@\n-                boolean superCallOnPrimitiveReceiver = env.enclClass.sym.type.isPrimitiveClass()\n+                boolean superCallOnValueReceiver = env.enclClass.sym.type.isValueClass()\n@@ -2659,1 +2659,1 @@\n-                if (qualifier.isPrimitiveClass() || superCallOnPrimitiveReceiver) {\n+                if (qualifier.isValueClass() || superCallOnValueReceiver) {\n@@ -2667,1 +2667,1 @@\n-                                log.error(tree.pos(), Errors.PrimitiveClassDoesNotSupport(name));\n+                                log.error(tree.pos(), Errors.ValueClassDoesNotSupport(name));\n@@ -2674,1 +2674,1 @@\n-                                log.error(tree.pos(), Errors.PrimitiveClassDoesNotSupport(name));\n+                                log.error(tree.pos(), Errors.ValueClassDoesNotSupport(name));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3937,2 +3937,2 @@\n-compiler.err.primitive.class.does.not.support=\\\n-    primitive classes do not support {0}\n+compiler.err.value.class.does.not.support=\\\n+    value classes do not support {0}\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-compiler.err.primitive.class.does.not.support\n+compiler.err.value.class.does.not.support\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,2 +4,2 @@\n-CheckFinalize.java:15:21: compiler.err.primitive.class.does.not.support: finalize\n-CheckFinalize.java:16:20: compiler.err.primitive.class.does.not.support: finalize\n+CheckFinalize.java:15:21: compiler.err.value.class.does.not.support: finalize\n+CheckFinalize.java:16:20: compiler.err.value.class.does.not.support: finalize\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckFinalize.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,11 +3,11 @@\n-CheckObjectMethodsUsage.java:15:23: compiler.err.primitive.class.does.not.support: finalize\n-CheckObjectMethodsUsage.java:16:13: compiler.err.primitive.class.does.not.support: wait\n-CheckObjectMethodsUsage.java:17:19: compiler.err.primitive.class.does.not.support: wait\n-CheckObjectMethodsUsage.java:18:13: compiler.err.primitive.class.does.not.support: wait\n-CheckObjectMethodsUsage.java:19:19: compiler.err.primitive.class.does.not.support: wait\n-CheckObjectMethodsUsage.java:20:13: compiler.err.primitive.class.does.not.support: wait\n-CheckObjectMethodsUsage.java:21:19: compiler.err.primitive.class.does.not.support: wait\n-CheckObjectMethodsUsage.java:22:15: compiler.err.primitive.class.does.not.support: notify\n-CheckObjectMethodsUsage.java:23:21: compiler.err.primitive.class.does.not.support: notify\n-CheckObjectMethodsUsage.java:24:18: compiler.err.primitive.class.does.not.support: notifyAll\n-CheckObjectMethodsUsage.java:25:24: compiler.err.primitive.class.does.not.support: notifyAll\n+CheckObjectMethodsUsage.java:15:23: compiler.err.value.class.does.not.support: finalize\n+CheckObjectMethodsUsage.java:16:13: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:17:19: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:18:13: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:19:19: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:20:13: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:21:19: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:22:15: compiler.err.value.class.does.not.support: notify\n+CheckObjectMethodsUsage.java:23:21: compiler.err.value.class.does.not.support: notify\n+CheckObjectMethodsUsage.java:24:18: compiler.err.value.class.does.not.support: notifyAll\n+CheckObjectMethodsUsage.java:25:24: compiler.err.value.class.does.not.support: notifyAll\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckObjectMethodsUsage.out","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1,5 +1,5 @@\n-CheckSync.java:18:17: compiler.err.primitive.class.does.not.support: wait\n-CheckSync.java:19:17: compiler.err.primitive.class.does.not.support: wait\n-CheckSync.java:20:17: compiler.err.primitive.class.does.not.support: wait\n-CheckSync.java:21:19: compiler.err.primitive.class.does.not.support: notify\n-CheckSync.java:22:22: compiler.err.primitive.class.does.not.support: notifyAll\n+CheckSync.java:18:17: compiler.err.value.class.does.not.support: wait\n+CheckSync.java:19:17: compiler.err.value.class.does.not.support: wait\n+CheckSync.java:20:17: compiler.err.value.class.does.not.support: wait\n+CheckSync.java:21:19: compiler.err.value.class.does.not.support: notify\n+CheckSync.java:22:22: compiler.err.value.class.does.not.support: notifyAll\n@@ -7,3 +7,3 @@\n-CheckSync.java:23:21: compiler.err.primitive.class.does.not.support: finalize\n-CheckSync.java:31:17: compiler.err.primitive.class.does.not.support: wait\n-CheckSync.java:32:17: compiler.err.primitive.class.does.not.support: wait\n+CheckSync.java:23:21: compiler.err.value.class.does.not.support: finalize\n+CheckSync.java:31:17: compiler.err.value.class.does.not.support: wait\n+CheckSync.java:32:17: compiler.err.value.class.does.not.support: wait\n@@ -11,1 +11,1 @@\n-CheckSync.java:33:17: compiler.err.primitive.class.does.not.support: wait\n+CheckSync.java:33:17: compiler.err.value.class.does.not.support: wait\n@@ -13,5 +13,5 @@\n-CheckSync.java:34:17: compiler.err.primitive.class.does.not.support: wait\n-CheckSync.java:35:17: compiler.err.primitive.class.does.not.support: wait\n-CheckSync.java:36:17: compiler.err.primitive.class.does.not.support: wait\n-CheckSync.java:37:19: compiler.err.primitive.class.does.not.support: notify\n-CheckSync.java:38:22: compiler.err.primitive.class.does.not.support: notifyAll\n+CheckSync.java:34:17: compiler.err.value.class.does.not.support: wait\n+CheckSync.java:35:17: compiler.err.value.class.does.not.support: wait\n+CheckSync.java:36:17: compiler.err.value.class.does.not.support: wait\n+CheckSync.java:37:19: compiler.err.value.class.does.not.support: notify\n+CheckSync.java:38:22: compiler.err.value.class.does.not.support: notifyAll\n@@ -19,1 +19,1 @@\n-3 warnings\n\\ No newline at end of file\n+3 warnings\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckSync.out","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-SneakThroSuperCallTest.java:13:21: compiler.err.primitive.class.does.not.support: notify\n+SneakThroSuperCallTest.java:13:21: compiler.err.value.class.does.not.support: notify\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/SneakThroSuperCallTest.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8237066 8281013\n+ * @summary  Adjust value type's interactions with jlO methods per latest spec\n+ * @compile\/fail\/ref=CheckObjectMethodsUsage.out -XDrawDiagnostics CheckObjectMethodsUsage.java\n+ *\/\n+\n+public value class CheckObjectMethodsUsage {\n+\n+\n+    public void finalize() {}\n+    public Object clone() {}\n+\n+    void testObjectMethods() {\n+        super.finalize();\n+        wait(0L, 0);\n+        super.wait(0L, 0);\n+        wait(0L);\n+        super.wait(0L);\n+        wait();\n+        super.wait();\n+        notify();\n+        super.notify();\n+        notifyAll();\n+        super.notifyAll();\n+        super.clone();\n+        super.hashCode();\n+        super.toString();\n+        super.equals(this);\n+        super.getClass();\n+    }\n+    public static void main(String [] args) {\n+        new CheckObjectMethodsUsage().testObjectMethods();\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/CheckObjectMethodsUsage.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+CheckObjectMethodsUsage.java:11:17: compiler.err.value.class.may.not.override: finalize\n+CheckObjectMethodsUsage.java:15:14: compiler.warn.has.been.deprecated.for.removal: finalize(), java.lang.Object\n+CheckObjectMethodsUsage.java:15:23: compiler.err.value.class.does.not.support: finalize\n+CheckObjectMethodsUsage.java:16:13: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:17:19: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:18:13: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:19:19: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:20:13: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:21:19: compiler.err.value.class.does.not.support: wait\n+CheckObjectMethodsUsage.java:22:15: compiler.err.value.class.does.not.support: notify\n+CheckObjectMethodsUsage.java:23:21: compiler.err.value.class.does.not.support: notify\n+CheckObjectMethodsUsage.java:24:18: compiler.err.value.class.does.not.support: notifyAll\n+CheckObjectMethodsUsage.java:25:24: compiler.err.value.class.does.not.support: notifyAll\n+12 errors\n+1 warning\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/CheckObjectMethodsUsage.out","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"}]}