[{"commit":{"message":"Restore some tests and cleanup"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Type.java"},{"filename":"test\/jdk\/valhalla\/valuetypes\/StaticFactoryTest.java"}],"sha":"754c41c2465be2d17cd6433b562e1a4ba7bb1111"},{"commit":{"message":"Resync with mainline AccessFlag changes"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ModuleDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/ClassAccessFlagTest.java"}],"sha":"ea58a934bc09a2144386ec31d3edbb8ac1c65a08"},{"commit":{"message":"Merge branch '8287250-class-identity' into 8281463-value-modifiers"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"}],"sha":"dcd5d4430c03bdd5a8b4b5aa5f1ee217404827ec"},{"commit":{"message":"Merge branch 'lworld' into 8287250-class-identity"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"}],"sha":"a220770098b8aa1ad3e8369be25e48145190271e"},{"commit":{"message":"Merge branch 'lworld' into 8287250-class-identity"},"files":[],"sha":"f089c2241e01b9a53f698c61bf7837159e6340f7"},{"commit":{"message":"Merge branch 'lworld' into 8287250-class-identity"},"files":[],"sha":"cd8d0def0b1ab4b0226d1169e81fec3599bcd5ac"},{"commit":{"message":"Update handling of obsolete ACC_SUPER and remove ACC_PERMITSVALUE"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"test\/jdk\/valhalla\/valuetypes\/StaticFactoryTest.java"}],"sha":"33e24a0560068e252c2ade9c59343061dbd3e572"},{"commit":{"message":"Re-enable StaticFactoryTest"},"files":[{"filename":"test\/jdk\/valhalla\/valuetypes\/StaticFactoryTest.java"}],"sha":"482e3f46ad0753fb9edfe556450f902ccf236e55"},{"commit":{"message":"Add Class.isIdentity\nhack instanceKlass.cpp: ACC_SUPER to allow ACC_IDENTITY to getModifiers"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"test\/jdk\/valhalla\/valuetypes\/StaticFactoryTest.java"}],"sha":"f28fb084e0f63641d98f795778d5d434f0b1942f"},{"commit":{"message":"Cleanup of modifier use"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Proxy.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/ClassAccessFlagTest.java"}],"sha":"b3a7ea74da582c3dcd74103fc043d4c4e8615a24"},{"commit":{"message":"Merge branch 'lworld' into 8281463-value-modifiers"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java"}],"sha":"8f37b1457ad48095ff18174b6f38749c0d54ab06"},{"commit":{"message":"Sync with jdk AccessFlag updates."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Executable.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Member.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/BasicAccessFlagTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/ClassAccessFlagTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/FieldAccessFlagTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/MethodAccessFlagTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/ModuleDescriptorAccessFlagTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/StrictAccessFlagTest.java"}],"sha":"605d386c67924fcee78679c7a8dc318b63cc5c57"},{"commit":{"message":"Merge branch 'lworld' into 8281463-value-modifiers"},"files":[],"sha":"558d873435f0b2d89e54b97aab3f2f5c155694ca"},{"commit":{"message":"Proxy class definition needs ACC_IDENTITY\nRestore ACC_SUPER to AccessFlag and adjust test"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Proxy.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/BasicAccessFlagTest.java"}],"sha":"d6dbe8f9fe127dd3156c434f4971e0ce4cb8d81e"},{"commit":{"message":"Replace static int constants with AccessFlag method calls."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"}],"sha":"349a9399a5c3459d3cf1ccf21683b385871bb748"},{"commit":{"message":"Revert changes and simplify\nUpdate GenericStringTest to work with value and primitive classes."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ModuleDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Type.java"},{"filename":"test\/jdk\/java\/lang\/Class\/GenericStringTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/InnerClassAttributeValuenessTest.java"}],"sha":"cab6cae4301d0891e1e5f9a61033842fd3381efe"},{"commit":{"message":"Address review comments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/BasicAccessFlagTest.java"}],"sha":"9af6875ed4d287b8de6a800a091de4c138197a3a"},{"commit":{"message":"Merge branch 'lworld' into 8281463-value-modifiers"},"files":[],"sha":"946eea0fa66b43fde51fa11a8444ab6193be07a2"},{"commit":{"message":"Add Class.is(AccessFlag) to test for a single flag."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Type.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/InnerClassAttributeValuenessTest.java"}],"sha":"c7883a6a0af2317cf88245552bd2d48c32c01689"},{"commit":{"message":"Restore AccessFlag SUPER"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"}],"sha":"f83c35fd20b0d05e0755f5bf58f6afbb79834b02"},{"commit":{"message":"8281463: [lworld] VALUE \/ PRIMITIVE modifiers should be supported by reflection\nUse java.lang.reflect.AccessFlag for equivalent functions for value objects.\nCorrected ModuleDescriptor.STATIC flags to be STATIC_PHASE\nAdded flags to j.l.reflect.Modifier."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ModuleDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java"}],"sha":"96578de2c2c8168f11f05091c85d664d900a11b1"}]