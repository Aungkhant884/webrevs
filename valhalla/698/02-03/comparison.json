{"files":[{"patch":"@@ -76,2 +76,1 @@\n- * @see java.compiler\/javax.lang.model.element.Modifier\n- * @since 20\n+ * @since Valhalla\n@@ -127,0 +126,1 @@\n+     * @apiNote\n@@ -138,0 +138,1 @@\n+     * @jls 4.1-B. Class access and property modifiers\n@@ -139,1 +140,1 @@\n-    IDENTITY(0x0000_0020, false, Set.of(Location.CLASS)),\n+    IDENTITY(0x0000_0020, true, Set.of(Location.CLASS, Location.INNER_CLASS)),\n@@ -171,0 +172,1 @@\n+     * @jls 4.1-B. Class access and property modifiers\n@@ -172,1 +174,1 @@\n-    VALUE(0x0000_0040, false, Set.of(Location.CLASS)),\n+    VALUE(0x0000_0040, true, Set.of(Location.CLASS, Location.INNER_CLASS)),\n@@ -227,0 +229,1 @@\n+     * @jls 4.1-B. Class access and property modifiers\n@@ -228,1 +231,1 @@\n-    PRIMITIVE(0x0000_0800, false, Set.of(Location.CLASS)),\n+    PRIMITIVE(0x0000_0800, true, Set.of(Location.CLASS, Location.INNER_CLASS)),\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8266670\n+ * @bug 8266670 8281463\n@@ -34,0 +34,1 @@\n+import java.util.List;\n@@ -49,0 +50,2 @@\n+        List<AccessFlag> valhallaOnly =\n+                List.of(AccessFlag.IDENTITY, AccessFlag.VALUE, AccessFlag.PRIMITIVE);\n@@ -51,1 +54,1 @@\n-            if (accessFlag.sourceModifier()) {\n+            if (accessFlag.sourceModifier()  && !valhallaOnly.contains(accessFlag)) {\n","filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/BasicAccessFlagTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}