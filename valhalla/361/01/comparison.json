{"files":[{"patch":"@@ -1067,0 +1067,8 @@\n+  \/\/ Flat array element shouldn't get their own memory slice until flattened_accesses_share_alias is cleared.\n+  \/\/ It could be the graph has no loads\/stores and flattened_accesses_share_alias is never cleared. EA could still\n+  \/\/ creates per element Phis but that wouldn't be a problem as there are no memory accesses for that array.\n+  assert(_adr_type == NULL || _adr_type->isa_aryptr() == NULL ||\n+         _adr_type->is_aryptr()->is_known_instance() ||\n+         !_adr_type->is_aryptr()->is_flat() ||\n+         !Compile::current()->flattened_accesses_share_alias() ||\n+         _adr_type == TypeAryPtr::INLINES, \"flat array element shouldn't get its own slice yet\");\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3965,1 +3965,3 @@\n-  kit.set_memory(init_out_raw, alias_idx);\n+  if (init_out_raw != NULL) {\n+    kit.set_memory(init_out_raw, alias_idx);\n+  }\n@@ -4029,1 +4031,4 @@\n-          hook_memory_on_init(*this, fieldidx, minit_in, minit_out);\n+          \/\/ Pass NULL for init_out. Having per flat array element field memory edges as uses of the Initialize node\n+          \/\/ can result in per flat array field Phis to be created which confuses the logic of\n+          \/\/ Compile::adjust_flattened_array_access_aliases().\n+          hook_memory_on_init(*this, fieldidx, minit_in, NULL);\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1221,0 +1221,1 @@\n+    case Type::InlineType:\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -56,0 +56,5 @@\n+primitive class MyValue4 {\n+    short b = 2;\n+    int c = 8;\n+}\n+\n@@ -160,0 +165,20 @@\n+    MyValue4[] d = {new MyValue4()};\n+    MyValue4 e;\n+    byte f;\n+    byte test12() {\n+        MyValue4 i = new MyValue4();\n+        for (int j = 0; j < 6; ++j) {\n+            MyValue4[] k = {};\n+            if (i.b < 0101)\n+                i = e;\n+            for (int l = 0; l < 9; ++l) {\n+                MyValue4 m = new MyValue4();\n+                i = m;\n+            }\n+        }\n+        if (d[0].c > 1)\n+            for (int n = 0; n < 7; ++n)\n+                ;\n+        return f;\n+    }\n+\n@@ -180,0 +205,1 @@\n+            t.test12();\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestGenerated.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}