{"files":[{"patch":"@@ -356,1 +356,1 @@\n-    save_stack_increment(sp_inc, sp_inc_offset);\n+    save_stack_increment(sp_inc, frame_size_in_bytes, sp_inc_offset);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -837,1 +837,2 @@\n-    \/\/ The stack increment resides just below the saved FP on the stack\n+    \/\/ The stack increment resides just below the saved FP on the stack and\n+    \/\/ records the total frame size exluding the two words for saving FP and LR.\n@@ -840,2 +841,1 @@\n-    int sp_inc = *sp_inc_addr \/ wordSize;\n-    int real_frame_size = _cb->frame_size() + sp_inc;\n+    int real_frame_size = (*sp_inc_addr \/ wordSize) + 2;\n@@ -843,1 +843,0 @@\n-    assert(unextended_sp() + real_frame_size == sender_sp + sp_inc, \"sanity\");\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -4831,2 +4831,1 @@\n-    \/\/ | sp_inc - 2*wordSize bytes |\n-    \/\/ |   of stack extension for  |\n+    \/\/ | Extension space for       |\n@@ -4845,0 +4844,3 @@\n+    \/\/\n+    \/\/ The sp_inc stack slot holds the total size of the frame including the\n+    \/\/ extension space minus two words for the saved FP and LR.\n@@ -4846,2 +4848,0 @@\n-    \/\/ This pops the stack extension and regular frame in the wrong\n-    \/\/ order but it doesn't matter because the result is the same.\n@@ -4850,0 +4850,3 @@\n+    ldp(rfp, lr, Address(post(sp, 2 * wordSize)));\n+  } else {\n+    remove_frame(initial_framesize);\n@@ -4851,2 +4854,0 @@\n-\n-  remove_frame(initial_framesize);\n@@ -4855,9 +4856,10 @@\n-void MacroAssembler::save_stack_increment(int sp_inc, int sp_inc_offset) {\n-  if (sp_inc == 0) {\n-    str(zr, Address(sp, sp_inc_offset));\n-  } else {\n-    assert((sp_inc & (StackAlignmentInBytes-1)) == 0, \"stack increment not aligned\");\n-    assert(sp_inc > 2*wordSize, \"must include FP\/LR space\");\n-    mov(rscratch1, sp_inc);\n-    str(rscratch1, Address(sp, sp_inc_offset));\n-  }\n+void MacroAssembler::save_stack_increment(int sp_inc, int frame_size, int sp_inc_offset) {\n+  int real_frame_size = frame_size + sp_inc;\n+  assert(sp_inc == 0 || sp_inc > 2*wordSize, \"invalid sp_inc value\");\n+  assert(real_frame_size >= 2*wordSize, \"frame size must include FP\/LR space\");\n+  assert((real_frame_size & (StackAlignmentInBytes-1)) == 0, \"frame size not aligned\");\n+\n+  \/\/ Subtract two words for the saved FP and LR as these will be popped\n+  \/\/ separately. See remove_frame above.\n+  mov(rscratch1, real_frame_size - 2*wordSize);\n+  str(rscratch1, Address(sp, sp_inc_offset));\n@@ -5688,1 +5690,1 @@\n-    save_stack_increment(sp_inc, C->output()->sp_inc_offset());\n+    save_stack_increment(sp_inc, framesize, C->output()->sp_inc_offset());\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -1272,1 +1272,1 @@\n-  void save_stack_increment(int sp_inc, int sp_inc_offset);\n+  void save_stack_increment(int sp_inc, int frame_size, int sp_inc_offset);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}