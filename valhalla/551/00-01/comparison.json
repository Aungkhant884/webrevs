{"files":[{"patch":"@@ -2052,1 +2052,1 @@\n-    CodeStub* stub = new DeoptimizeStub(info,\n+    CodeStub* stub = new DeoptimizeStub(new CodeEmitInfo(info),\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -325,13 +325,0 @@\n-\/\/ ------------------------------------------------------------------\n-\/\/ ciBytecodeStream::get_field_signature_index\n-\/\/\n-\/\/ Get the constant pool index of the signature of the field\n-\/\/ referenced by the current bytecode.  Used for generating\n-\/\/ deoptimization information.\n-int ciBytecodeStream::get_field_signature_index() {\n-  VM_ENTRY_MARK;\n-  ConstantPool* cpool = _holder->get_instanceKlass()->constants();\n-  int nt_index = cpool->name_and_type_ref_index_at(get_field_index());\n-  return cpool->signature_ref_index_at(nt_index);\n-}\n-\n","filename":"src\/hotspot\/share\/ci\/ciStreams.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -248,1 +248,0 @@\n-  int      get_field_signature_index();\n","filename":"src\/hotspot\/share\/ci\/ciStreams.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -676,1 +676,4 @@\n-        trap(str, field_type->as_klass(), str->get_field_signature_index());\n+        trap(str, field_type->as_klass(),\n+             Deoptimization::make_trap_request\n+             (Deoptimization::Reason_unloaded,\n+              Deoptimization::Action_reinterpret));\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}