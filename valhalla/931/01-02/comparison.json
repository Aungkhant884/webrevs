{"files":[{"patch":"@@ -660,0 +660,4 @@\n+\n+int VM_Version::max_vector_size(BasicType bt) {\n+  return MaxVectorSize \/ type2aelembytes(bt);\n+}\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -193,0 +193,3 @@\n+\n+  \/\/ Max supported vector lane count for a particular lane type.\n+  static int max_vector_size(BasicType bt);\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -110,0 +110,4 @@\n+\n+  \/\/ Max supported vector lane count for a particular lane type.\n+  static int max_vector_size(BasicType bt);\n+\n","filename":"src\/hotspot\/cpu\/arm\/vm_version_arm.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -364,0 +364,4 @@\n+\n+int VM_Version::max_vector_size(BasicType bt) {\n+  return MaxVectorSize \/ type2aelembytes(bt);\n+}\n","filename":"src\/hotspot\/cpu\/arm\/vm_version_arm_32.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -705,0 +705,4 @@\n+\n+int VM_Version::max_vector_size(BasicType bt) {\n+  return MaxVectorSize \/ type2aelembytes(bt);\n+}\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -130,0 +130,4 @@\n+\n+  \/\/ Max supported vector lane count for a particular lane type.\n+  static int max_vector_size(BasicType bt);\n+\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -352,0 +352,4 @@\n+\n+int VM_Version::max_vector_size(BasicType bt) {\n+  return MaxVectorSize \/ type2aelembytes(bt);\n+}\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -204,0 +204,3 @@\n+\n+  \/\/ Max supported vector lane count for a particular lane type.\n+  static int max_vector_size(BasicType bt);\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1517,0 +1517,4 @@\n+\n+int VM_Version::max_vector_size(BasicType bt) {\n+  return MaxVectorSize \/ type2aelembytes(bt);\n+}\n","filename":"src\/hotspot\/cpu\/s390\/vm_version_s390.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -570,0 +570,3 @@\n+\n+  \/\/ Max supported vector lane count for a particular lane type.\n+  static int max_vector_size(BasicType bt);\n","filename":"src\/hotspot\/cpu\/s390\/vm_version_s390.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+\n+  static int max_vector_size(BasicType bt) { return -1;}\n","filename":"src\/hotspot\/cpu\/zero\/vm_version_zero.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -188,0 +188,1 @@\n+\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -156,0 +156,3 @@\n+  if (VectorSupport::is_vector_payload_mf(this) || VectorSupport::is_vector(this)) {\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -143,1 +143,0 @@\n-  static bool is_vector_payload(const Symbol* metadata);\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-            if (false == max_payload) {\n+            if (!max_payload) {\n@@ -186,1 +186,1 @@\n-                } else if (elemType == int.class) {\n+                } else if (elemType == int.class || elemType == float.class) {\n@@ -188,1 +188,1 @@\n-                } else if (elemType == long.class) {\n+                } else if (elemType == long.class || elemType == double.class) {\n@@ -190,2 +190,0 @@\n-                } else if (elemType == float.class) {\n-                   return new VectorPayloadMFMaxIZ();\n@@ -193,2 +191,1 @@\n-                   assert elemType == double.class;\n-                   return new VectorPayloadMFMaxLZ();\n+                   assert false : \"Unexpected lane type\";\n@@ -202,1 +199,1 @@\n-            if (false == max_payload) {\n+            if (!max_payload) {\n@@ -218,1 +215,1 @@\n-                } else if (elemType == int.class) {\n+                } else if (elemType == int.class || elemType == float.class) {\n@@ -220,1 +217,1 @@\n-                } else if (elemType == long.class) {\n+                } else if (elemType == long.class || elemType == double.class) {\n@@ -222,2 +219,0 @@\n-                } else if (elemType == float.class) {\n-                   return new VectorPayloadMFMaxIB();\n@@ -225,2 +220,1 @@\n-                   assert elemType == double.class;\n-                   return new VectorPayloadMFMaxLB();\n+                   assert false : \"Unexpected lane type\";\n@@ -305,1 +299,1 @@\n-        public static VectorPayloadMF createVectPayloadInstanceB(int length, byte [] init, boolean max_payload) {\n+        public static VectorPayloadMF createVectPayloadInstanceB(int length, byte[] init, boolean max_payload) {\n@@ -317,1 +311,1 @@\n-        public static VectorPayloadMF createVectPayloadInstanceS(int length, short [] init, boolean max_payload) {\n+        public static VectorPayloadMF createVectPayloadInstanceS(int length, short[] init, boolean max_payload) {\n@@ -329,1 +323,1 @@\n-        public static VectorPayloadMF createVectPayloadInstanceI(int length, int [] init, boolean max_payload) {\n+        public static VectorPayloadMF createVectPayloadInstanceI(int length, int[] init, boolean max_payload) {\n@@ -341,1 +335,1 @@\n-        public static VectorPayloadMF createVectPayloadInstanceL(int length, long [] init, boolean max_payload) {\n+        public static VectorPayloadMF createVectPayloadInstanceL(int length, long[] init, boolean max_payload) {\n@@ -353,1 +347,1 @@\n-        public static VectorPayloadMF createVectPayloadInstanceF(int length, float [] init, boolean max_payload) {\n+        public static VectorPayloadMF createVectPayloadInstanceF(int length, float[] init, boolean max_payload) {\n@@ -365,1 +359,1 @@\n-        public static VectorPayloadMF createVectPayloadInstanceD(int length, double [] init, boolean max_payload) {\n+        public static VectorPayloadMF createVectPayloadInstanceD(int length, double[] init, boolean max_payload) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -44,2 +44,3 @@\n-    static VectorPayloadMF prepare(VectorPayloadMF payload, int offset, Class<?> elementType, int length, boolean is_max_species) {\n-        VectorPayloadMF res = VectorPayloadMF.newMaskInstanceFactory(elementType, length, is_max_species);\n+    static <F> VectorPayloadMF prepare(VectorPayloadMF payload, int offset, VectorSpecies<F> species) {\n+        boolean isMaxShape  = species.vectorShape() == VectorShape.S_Max_BIT;\n+        VectorPayloadMF res = VectorPayloadMF.newMaskInstanceFactory(species.elementType(), species.length(), isMaxShape);\n@@ -48,1 +49,1 @@\n-        for (int i = 0; i < length; i++) {\n+        for (int i = 0; i < species.length(); i++) {\n@@ -56,2 +57,3 @@\n-    static VectorPayloadMF prepare(boolean val, Class<?> elementType, int length, boolean is_max_species) {\n-        VectorPayloadMF res = VectorPayloadMF.newMaskInstanceFactory(elementType, length, is_max_species);\n+    static <F> VectorPayloadMF prepare(boolean val, VectorSpecies<F> species) {\n+        boolean isMaxShape  = species.vectorShape() == VectorShape.S_Max_BIT;\n+        VectorPayloadMF res = VectorPayloadMF.newMaskInstanceFactory(species.elementType(), species.length(), isMaxShape);\n@@ -60,1 +62,1 @@\n-        for (int i = 0; i < length; i++) {\n+        for (int i = 0; i < species.length(); i++) {\n@@ -141,1 +143,1 @@\n-                (m, s) -> s.maskFactory(m.getBits()).check(s));\n+                (m, s) -> VectorMask.fromLong(s, m.toLong()).check(s));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractMask.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -42,2 +42,4 @@\n-    static VectorPayloadMF prepare(Class<?> elemType, int length, int[] indices, int offset, boolean is_max_species) {\n-        VectorPayloadMF payload = VectorPayloadMF.newShuffleInstanceFactory(elemType, length, is_max_species);\n+    static <F> VectorPayloadMF prepare(int[] indices, int offset, VectorSpecies<F> species) {\n+        int length = species.length();\n+        boolean isMaxShape  = species.vectorShape() == VectorShape.S_Max_BIT;\n+        VectorPayloadMF payload = VectorPayloadMF.newShuffleInstanceFactory(species.elementType(), length, isMaxShape);\n@@ -55,2 +57,4 @@\n-    static VectorPayloadMF prepare(Class<?> elemType, int length, IntUnaryOperator f, boolean is_max_species) {\n-        VectorPayloadMF payload = VectorPayloadMF.newShuffleInstanceFactory(elemType, length, is_max_species);\n+    static <F> VectorPayloadMF prepare(IntUnaryOperator f, VectorSpecies<F> species) {\n+        int length = species.length();\n+        boolean isMaxShape  = species.vectorShape() == VectorShape.S_Max_BIT;\n+        VectorPayloadMF payload = VectorPayloadMF.newShuffleInstanceFactory(species.elementType(), length, isMaxShape);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractShuffle.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -596,1 +596,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -600,1 +600,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -772,1 +772,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -776,1 +776,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -628,1 +628,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -632,1 +632,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -804,1 +804,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -808,1 +808,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -692,1 +692,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -696,1 +696,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -868,1 +868,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -872,1 +872,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -580,1 +580,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -584,1 +584,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -756,1 +756,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -760,1 +760,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -566,1 +566,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, true));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -570,1 +570,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, true));\n+            this(prepare(val, VSPECIES));\n@@ -742,1 +742,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, true));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -746,1 +746,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, true));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -557,1 +557,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -561,1 +561,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -733,1 +733,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -737,1 +737,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -561,1 +561,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -565,1 +565,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -737,1 +737,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -741,1 +741,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -569,1 +569,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -573,1 +573,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -745,1 +745,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -749,1 +749,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -555,1 +555,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -559,1 +559,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -731,1 +731,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -735,1 +735,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -554,1 +554,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, true));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -558,1 +558,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, true));\n+            this(prepare(val, VSPECIES));\n@@ -730,1 +730,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, true));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -734,1 +734,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, true));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -561,1 +561,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -565,1 +565,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -737,1 +737,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -741,1 +741,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -569,1 +569,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -573,1 +573,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -745,1 +745,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -749,1 +749,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -585,1 +585,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -589,1 +589,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -761,1 +761,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -765,1 +765,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -557,1 +557,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -561,1 +561,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -733,1 +733,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -737,1 +737,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -554,1 +554,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, true));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -558,1 +558,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, true));\n+            this(prepare(val, VSPECIES));\n@@ -730,1 +730,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, true));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -734,1 +734,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, true));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -572,1 +572,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -576,1 +576,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -748,1 +748,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -752,1 +752,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -580,1 +580,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -584,1 +584,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -756,1 +756,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -760,1 +760,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -596,1 +596,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -600,1 +600,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -772,1 +772,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -776,1 +776,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -568,1 +568,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -572,1 +572,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -744,1 +744,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -748,1 +748,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -566,1 +566,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, true));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -570,1 +570,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, true));\n+            this(prepare(val, VSPECIES));\n@@ -756,1 +756,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, true));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -760,1 +760,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, true));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -558,1 +558,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -562,1 +562,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -734,1 +734,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -738,1 +738,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -562,1 +562,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -566,1 +566,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -738,1 +738,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -742,1 +742,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -570,1 +570,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -574,1 +574,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -746,1 +746,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -750,1 +750,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -556,1 +556,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -560,1 +560,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -732,1 +732,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -736,1 +736,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -556,1 +556,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, true));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -560,1 +560,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, true));\n+            this(prepare(val, VSPECIES));\n@@ -732,1 +732,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, true));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -736,1 +736,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, true));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -580,1 +580,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -584,1 +584,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -756,1 +756,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -760,1 +760,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -596,1 +596,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -600,1 +600,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -772,1 +772,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -776,1 +776,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -628,1 +628,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -632,1 +632,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -804,1 +804,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -808,1 +808,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -572,1 +572,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -576,1 +576,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -748,1 +748,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -752,1 +752,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -566,1 +566,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, true));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -570,1 +570,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, true));\n+            this(prepare(val, VSPECIES));\n@@ -742,1 +742,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, true));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -746,1 +746,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, true));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -849,1 +849,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, true));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -853,1 +853,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, true));\n+            this(prepare(val, VSPECIES));\n@@ -863,1 +863,1 @@\n-            this(prepare(payload, offset, ETYPE, VLENGTH, false));\n+            this(prepare(payload, offset, VSPECIES));\n@@ -867,1 +867,1 @@\n-            this(prepare(val, ETYPE, VLENGTH, false));\n+            this(prepare(val, VSPECIES));\n@@ -1063,1 +1063,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, true));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -1067,1 +1067,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, true));\n+            this(prepare(fn, VSPECIES));\n@@ -1079,1 +1079,1 @@\n-            this(prepare(ETYPE, VLENGTH, indexes, i, false));\n+            this(prepare(indexes, i, VSPECIES));\n@@ -1083,1 +1083,1 @@\n-            this(prepare(ETYPE, VLENGTH, fn, false));\n+            this(prepare(fn, VSPECIES));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -213,0 +213,3 @@\n+\n+# lworld+vector\n+compiler\/vectorapi\/VectorReinterpretTest.java\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}