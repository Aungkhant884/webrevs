{"files":[{"patch":"@@ -2244,0 +2244,1 @@\n+      case Bytecodes::_defaultvalue   : \/\/ fall through\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-\tjava\/lang\/instrument\/valhalla\n+    java\/lang\/instrument\/valhalla\n","filename":"test\/jdk\/TEST.groups","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,0 +61,3 @@\n+        \/\/ This adds a number of new entries in the beginning of the CP\n+        \/\/ and this causes CP mapping during class redefinition.\n+        \/\/ @2 uncomment System.out.println(RedefinePrimitive.class);\n@@ -512,0 +515,20 @@\n+            new Test(\"CP mapping\", \"MyPrimitive\") {\n+                byte[] redefineClassBytes;\n+\n+                @Override\n+                public void prologue() throws Exception {\n+                    String transformedClassFile = ClassTransformer.fromTestSource(SOURCE_FILE)\n+                            .transform(2, className);\n+                    redefineClassBytes = loadClassBytes(new File(transformedClassFile));\n+                }\n+\n+                @Override\n+                public byte[] transform(String className, byte[] classBytes) {\n+                    \/\/ with wrong mapping retransformClasses() fails with InternalError\n+                    return redefineClassBytes;\n+                }\n+\n+                @Override\n+                public void epilogue() throws Exception {\n+                }\n+            },\n","filename":"test\/jdk\/java\/lang\/instrument\/valhalla\/RedefinePrimitive.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}