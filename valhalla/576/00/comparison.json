{"files":[{"patch":"@@ -5754,16 +5754,6 @@\n-  int nfields = ik->java_fields_count();\n-  if (ik->is_inline_klass()) nfields++;\n-  for (int i = 0; i < nfields; i++) {\n-    if (((ik->field_access_flags(i) & JVM_ACC_STATIC) == 0)) {\n-      if (ik->field_is_null_free_inline_type(i)) {\n-        Symbol* klass_name = ik->field_signature(i)->fundamental_name(CHECK);\n-        \/\/ Inline classes for instance fields must have been pre-loaded\n-        \/\/ Inline classes for static fields might not have been loaded yet\n-        InstanceKlass* klass = SystemDictionary::find_instance_klass(klass_name,\n-            Handle(THREAD, ik->class_loader()),\n-            Handle(THREAD, ik->protection_domain()));\n-        assert(klass != NULL, \"Just checking\");\n-        assert(klass->access_flags().is_inline_type(), \"Inline type expected\");\n-        ik->set_inline_type_field_klass(i, klass);\n-        klass_name->decrement_refcount();\n-        if (!InlineKlass::cast(klass)->is_empty_inline_type()) { all_fields_empty = false; }\n+  for (AllFieldStream fs(ik->fields(), ik->constants()); !fs.done(); fs.next()) {\n+    if (!fs.access_flags().is_static()) {\n+      if (fs.field_descriptor().is_inline_type()) {\n+        Klass* k = _inline_type_field_klasses->at(fs.index());\n+        ik->set_inline_type_field_klass(fs.index(), k);\n+        if (!InlineKlass::cast(k)->is_empty_inline_type()) { all_fields_empty = false; }\n@@ -5773,2 +5763,2 @@\n-    } else if (is_inline_type() && ((ik->field_access_flags(i) & JVM_ACC_FIELD_INTERNAL) != 0)) {\n-      InlineKlass::cast(ik)->set_default_value_offset(ik->field_offset(i));\n+    } else if (is_inline_type() && (fs.name() == vmSymbols::default_value_name())) {\n+      InlineKlass::cast(ik)->set_default_value_offset(ik->field_offset(fs.index()));\n@@ -5904,0 +5894,1 @@\n+  _inline_type_field_klasses(NULL),\n@@ -6008,0 +5999,4 @@\n+  if (_inline_type_field_klasses != NULL) {\n+     MetadataFactory::free_array<InlineKlass*>(_loader_data, _inline_type_field_klasses);\n+  }\n+\n@@ -6473,0 +6468,4 @@\n+    _inline_type_field_klasses = MetadataFactory::new_array<InlineKlass*>(_loader_data,\n+                                                   java_fields_count(),\n+                                                   NULL,\n+                                                   CHECK);\n@@ -6488,0 +6487,1 @@\n+        _inline_type_field_klasses->at_put(fs.index(), InlineKlass::cast(klass));\n@@ -6495,1 +6495,1 @@\n-      loader_data(), _protection_domain, _field_info);\n+      _field_info, _inline_type_field_klasses);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -148,0 +148,1 @@\n+  Array<InlineKlass*>* _inline_type_field_klasses;\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -539,2 +539,2 @@\n-                                       Array<u2>* fields, bool is_contended, bool is_inline_type, ClassLoaderData* class_loader_data,\n-                                       Handle protection_domain, FieldLayoutInfo* info) :\n+                                       Array<u2>* fields, bool is_contended, bool is_inline_type,\n+                                       FieldLayoutInfo* info, Array<InlineKlass*>* inline_type_field_klasses) :\n@@ -546,0 +546,1 @@\n+  _inline_type_field_klasses(inline_type_field_klasses),\n@@ -551,2 +552,0 @@\n-  _class_loader_data(class_loader_data),\n-  _protection_domain(protection_domain),\n@@ -646,4 +645,1 @@\n-        Klass* klass =\n-            SystemDictionary::resolve_inline_type_field_or_fail(&fs,\n-                                                                Handle(THREAD, _class_loader_data->class_loader()),\n-                                                                _protection_domain, true, THREAD);\n+        Klass* klass =  _inline_type_field_klasses->at(fs.index());\n@@ -747,4 +743,1 @@\n-        Klass* klass =\n-            SystemDictionary::resolve_inline_type_field_or_fail(&fs,\n-                Handle(THREAD, _class_loader_data->class_loader()),\n-                _protection_domain, true, CHECK);\n+        Klass* klass =  _inline_type_field_klasses->at(fs.index());\n","filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -247,0 +247,1 @@\n+  Array<InlineKlass*>* _inline_type_field_klasses;\n@@ -252,2 +253,0 @@\n-  ClassLoaderData* _class_loader_data;\n-  Handle _protection_domain;\n@@ -270,2 +269,1 @@\n-      Array<u2>* fields, bool is_contended, bool is_inline_type, ClassLoaderData* class_loader_data,\n-      Handle protection_domain, FieldLayoutInfo* info);\n+      Array<u2>* fields, bool is_contended, bool is_inline_type, FieldLayoutInfo* info, Array<InlineKlass*>* inline_type_field_klasses);\n","filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}