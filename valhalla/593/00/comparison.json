{"files":[{"patch":"@@ -205,1 +205,1 @@\n-    private static final int PRIMITIVE_CLASS = 0x00000100;\n+    private static final int PRIMITIVE_CLASS = 0x00000800;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-    JVM_ACC_INLINE        = 0x0100,\n@@ -55,0 +54,1 @@\n+    JVM_ACC_INLINE        = 0x0800,\n","filename":"src\/java.base\/share\/native\/include\/classfile_constants.h.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    public static final int ACC_PRIMITIVE = 0x0100;\n+    public static final int ACC_PRIMITIVE = 0x0800;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -832,1 +832,1 @@\n-            char flags = (char) adjustFlags(inner.flags_field);\n+            char flags = (char) adjustFlags(inner.flags_field & ~STRICTFP); \/\/ inner classes should not have the strictfp flag set.\n@@ -834,1 +834,0 @@\n-            flags &= ~STRICTFP; \/\/inner classes should not have the strictfp flag set.\n@@ -1549,1 +1548,1 @@\n-            flags = adjustFlags(c.flags() & ~DEFAULT);\n+            flags = adjustFlags(c.flags() & ~(DEFAULT | STRICTFP));\n@@ -1551,1 +1550,1 @@\n-            flags = flags & (ClassFlags | ACC_PRIMITIVE) & ~STRICTFP;\n+            flags = flags & ClassFlags;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-    public static final int ACC_PRIMITIVE     = 0x0100; \/\/ class\n@@ -56,0 +55,1 @@\n+    public static final int ACC_PRIMITIVE     = 0x0800; \/\/                      class\n@@ -207,3 +207,2 @@\n-            case 0x100:\n-                \/\/ ACC_NATIVE or ACC_PRIMITIVE\n-                return (t == Kind.Class || t == Kind.InnerClass) ? \"primitive\" : \"native\";\n+            case ACC_NATIVE:\n+                return \"native\";\n@@ -212,2 +211,2 @@\n-            case ACC_STRICT:\n-                return \"strictfp\";\n+            case 0x800:\n+                return (t == Kind.Class || t == Kind.InnerClass) ? \"primitive\" : \"strictfp\";\n@@ -239,2 +238,2 @@\n-        case 0x100:\n-            return (t == Kind.Class || t == Kind.InnerClass) ? \"ACC_PRIMITIVE\" : \"ACC_NATIVE\";\n+        case ACC_NATIVE:\n+            return \"ACC_NATIVE\";\n@@ -245,2 +244,2 @@\n-        case ACC_STRICT:\n-            return \"ACC_STRICT\";\n+        case 0x800:\n+            return (t == Kind.Class || t == Kind.InnerClass) ? \"ACC_PRIMITIVE\" : \"ACC_STRICT\";\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/classfile\/AccessFlags.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -414,1 +414,1 @@\n-  0x0131; \/\/ access\n+  0x0831; \/\/ access\n@@ -618,1 +618,1 @@\n-  0x0131; \/\/ access\n+  0x0831; \/\/ access\n@@ -822,1 +822,1 @@\n-  0x0131; \/\/ access\n+  0x0831; \/\/ access\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/GetfieldChains.jcod","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/HiddenPoint.jcod","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/WithFieldNoAccessTest.jcod","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @summary test that if a class file has ACC_INLINE set then it must be run\n+ * @summary test that if a class file has ACC_PRIMITIVE set then it must be run\n@@ -47,1 +47,1 @@\n-        \/\/ Test ACC_INLINE causes a CFE unless -XX:+EnableValhalla is specified.\n+        \/\/ Test ACC_PRIMITIVE causes a CFE unless -XX:+EnableValhalla is specified.\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/BadACCValue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        \/\/ Test that ACC_INLINE with ACC_ABSTRACT is illegal.\n+        \/\/ Test that ACC_PRIMITIVE with ACC_ABSTRACT is illegal.\n@@ -50,1 +50,1 @@\n-        \/\/ Test that ACC_INLINE with ACC_ENUM is illegal.\n+        \/\/ Test that ACC_PRIMITIVE with ACC_ENUM is illegal.\n@@ -56,1 +56,1 @@\n-        \/\/ Test that ACC_INLINE with ACC_INTERFACE is illegal.\n+        \/\/ Test that ACC_PRIMITIVE with ACC_INTERFACE is illegal.\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/BadInlineTypes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-\/\/ Test that class modifiers cannot have both ACC_INLINE and ACC_ABSTRACT set.\n+\/\/ Test that class modifiers cannot have both ACC_PRIMITIVE and ACC_ABSTRACT set.\n@@ -83,1 +83,1 @@\n-  0x0530; \/\/ access [  ACC_INLINE ACC_ABSTRACT(bad) ACC_SUPER ACC_FINAL ]\n+  0x0C30; \/\/ access [  ACC_PRIMITIVE ACC_ABSTRACT(bad) ACC_SUPER ACC_FINAL ]\n@@ -202,1 +202,1 @@\n-\/\/ Test that class modifiers cannot have both ACC_INLINE and ACC_ENUM set.\n+\/\/ Test that class modifiers cannot have both ACC_PRIMITIVE and ACC_ENUM set.\n@@ -239,1 +239,1 @@\n-  0x04130; \/\/ access [  ACC_INLINE ACC_ENUM(bad) ACC_SUPER ACC_FINAL ]\n+  0x04830; \/\/ access [  ACC_PRIMITIVE ACC_ENUM(bad) ACC_SUPER ACC_FINAL ]\n@@ -395,1 +395,1 @@\n-  0x0130; \/\/ access [ ACC_INLINE ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -514,1 +514,1 @@\n-\/\/ Test that class modifiers cannot have both ACC_INLINE and ACC_INTERFACE set.\n+\/\/ Test that class modifiers cannot have both ACC_PRIMITIVE and ACC_INTERFACE set.\n@@ -550,1 +550,1 @@\n-  0x0330; \/\/ access [ ACC_INLINE ACC_INTERFACE(bad) ACC_SUPER ACC_FINAL ]\n+  0x0A30; \/\/ access [ ACC_PRIMITIVE ACC_INTERFACE(bad) ACC_SUPER ACC_FINAL ]\n@@ -676,1 +676,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -946,1 +946,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -1224,1 +1224,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -1539,1 +1539,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -1817,1 +1817,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -2089,1 +2089,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/cfpTests.jcod","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -357,1 +357,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -617,1 +617,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -876,1 +876,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -1137,1 +1137,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -1399,1 +1399,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -1661,1 +1661,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -1921,1 +1921,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/InlineClassWithBadSupers.jcod","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  0x0130; \/\/ access [ ACC_INLINE ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -195,1 +195,1 @@\n-  0x0130; \/\/ access [ ACC_INLINE ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -296,1 +296,1 @@\n-  0x0130; \/\/ access [ ACC_INLINE ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -390,1 +390,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -481,1 +481,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -571,1 +571,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -669,1 +669,1 @@\n-  0x0130; \/\/ access [ ACC_INLINE ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -763,1 +763,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -880,1 +880,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -1086,1 +1086,1 @@\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n+  0x0830; \/\/ access [ ACC_PRIMITIVE ACC_SUPER ACC_FINAL ]\n@@ -1303,1 +1303,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/verifierTests.jcod","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -368,1 +368,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -509,1 +509,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -632,1 +632,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -742,1 +742,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -831,1 +831,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n@@ -934,1 +934,1 @@\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0831; \/\/ access [ ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/withfieldTests\/withfieldTests.jcod","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-              \"  flags: (0x0130) ACC_FINAL, ACC_SUPER, ACC_PRIMITIVE\",\n+              \"  flags: (0x0830) ACC_FINAL, ACC_SUPER, ACC_PRIMITIVE\",\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/QTypeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}