{"files":[{"patch":"@@ -1019,1 +1019,1 @@\n-  HASHING4(LoadIndexed, !should_profile(), type()->tag(), array()->subst(), index()->subst(), vt())\n+  HASHING4(LoadIndexed, delayed() == NULL && !should_profile(), type()->tag(), array()->subst(), index()->subst(), vt())\n@@ -1040,4 +1040,4 @@\n-  LoadIndexed* load_instr() { return _load_instr; }\n-  ValueStack* state_before() { return _state_before; }\n-  ciField* field() { return _field; }\n-  int offset() { return _offset; }\n+  LoadIndexed* load_instr() const { return _load_instr; }\n+  ValueStack* state_before() const { return _state_before; }\n+  ciField* field() const { return _field; }\n+  int offset() const { return _offset; }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2304,3 +2304,1 @@\n-    access_sub_element(array, index, result,\n-                       x->delayed() == NULL ? 0 : x->delayed()->field(),\n-                       x->delayed() == NULL ? 0 : x->delayed()->offset());\n+    access_sub_element(array, index, result, x->delayed()->field(), x->delayed()->offset());\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8260034 8260225 8260283 8261037 8261874\n+ * @bug 8260034 8260225 8260283 8261037 8261874 8262128\n@@ -51,0 +51,5 @@\n+primitive class MyValue3 {\n+    int[] intArray = new int[1];\n+    float[] floatArray = new float[1];\n+}\n+\n@@ -139,0 +144,16 @@\n+    int[] f6 = new int[1];\n+\n+    void test10(MyValue3[] array) {\n+        float[] floatArray = array[0].floatArray;\n+        if (f6 == f6) {\n+            f6 = array[0].intArray;\n+        }\n+    }\n+\n+    void test11(MyValue3[] array) {\n+        float[] floatArray = array[0].floatArray;\n+        if (array[0].intArray[0] != 42) {\n+            throw new RuntimeException(\"test11 failed\");\n+        }\n+    }\n+\n@@ -144,0 +165,2 @@\n+        MyValue3[] array4 = { new MyValue3() };\n+        array4[0].intArray[0] = 42;\n@@ -155,0 +178,2 @@\n+            t.test10(array4);\n+            t.test11(array4);\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestGenerated.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"}]}