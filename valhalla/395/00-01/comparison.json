{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/c1\/c1_ValueMap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,2 @@\n- * @library \/testlibrary \/test\/lib \/compiler\/whitebox \/\n- * @compile TestC1ValueNumbering.java\n- * @run main\/othervm -Xcomp -XX:TieredStopAtLevel=1 -ea -XX:+UseGlobalValueNumbering\n+ * @library \/testlibrary \/test\/lib\n+ * @run main\/othervm -Xcomp -XX:TieredStopAtLevel=1 -ea\n@@ -40,4 +39,8 @@\n-  static primitive class Point {\n-    int x,y;\n-    public Point() {\n-        x = 0; y = 0;\n+    static primitive class Point {\n+        int x,y;\n+        public Point() {\n+            x = 0; y = 0;\n+        }\n+        public Point(int x, int y) {\n+            this.x = x; this.y = y;\n+        }\n@@ -45,4 +48,0 @@\n-    public Point(int x, int y) {\n-        this.x = x; this.y = y;\n-    }\n-  }\n@@ -50,1 +49,1 @@\n-  Point p;\n+    Point p;\n@@ -52,14 +51,14 @@\n-  \/\/ Notes on test 1:\n-  \/\/ 1 - asserts are important create several basic blocks (asserts create branches)\n-  \/\/ 2 - local variables x, y must be read in the same block as the putfield\n-  static void test1() {\n-    Point p = new Point(4,5);\n-    TestC1ValueNumbering test = new TestC1ValueNumbering();\n-    assert test.p.x == 0;\n-    assert test.p.y == 0;\n-    test.p = p;\n-    int x = test.p.x;\n-    int y = test.p.y;\n-    Asserts.assertEQ(x, 4, \"Bad field value\");\n-    Asserts.assertEQ(y, 5, \"Bad field value\");\n-  }\n+    \/\/ Notes on test 1:\n+    \/\/ 1 - asserts are important create several basic blocks (asserts create branches)\n+    \/\/ 2 - local variables x, y must be read in the same block as the putfield\n+    static void test1() {\n+        Point p = new Point(4,5);\n+        TestC1ValueNumbering test = new TestC1ValueNumbering();\n+        assert test.p.x == 0;\n+        assert test.p.y == 0;\n+        test.p = p;\n+        int x = test.p.x;\n+        int y = test.p.y;\n+        Asserts.assertEQ(x, 4, \"Bad field value\");\n+        Asserts.assertEQ(y, 5, \"Bad field value\");\n+    }\n@@ -67,3 +66,4 @@\n-  public static void main(String[] args) {\n-    for (int i = 0; i < 10; i++) {\n-        test1();\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 10; i++) {\n+            test1();\n+        }\n@@ -72,1 +72,0 @@\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestC1ValueNumbering.java","additions":30,"deletions":31,"binary":false,"changes":61,"status":"modified"}]}