{"files":[{"patch":"@@ -660,1 +660,2 @@\n-        if (!(too_big_to_flatten | too_atomic_to_flatten | too_volatile_to_flatten) || fieldinfo.access_flags().is_final()) {\n+        if (!too_big_to_flatten &&\n+            (!(too_atomic_to_flatten | too_volatile_to_flatten) || fieldinfo.access_flags().is_final())) {\n@@ -759,1 +760,2 @@\n-        if (!(too_big_to_flatten | too_atomic_to_flatten | too_volatile_to_flatten) || fieldinfo.access_flags().is_final()) {\n+        if (!too_big_to_flatten &&\n+            (!(too_atomic_to_flatten | too_volatile_to_flatten) || fieldinfo.access_flags().is_final())) {\n","filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -146,0 +146,3 @@\n+      if (val2->is_Phi()) {\n+        val2 = gvn->transform(val2);\n+      }\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-  } else if (val->is_InlineType() && !field->is_null_free()) {\n+  } else if (val->is_InlineType() && !field->is_flattened()) {\n","filename":"src\/hotspot\/share\/opto\/parseHelper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}