{"files":[{"patch":"@@ -3036,18 +3036,0 @@\n-  if (EnableValhalla) {\n-    \/\/ create_property(\"valhalla.enableValhalla\", \"true\", InternalProperty)\n-    const char* prop_name = \"valhalla.enableValhalla\";\n-    const char* prop_value = \"true\";\n-    const size_t prop_len = strlen(prop_name) + strlen(prop_value) + 2;\n-    char* property = AllocateHeap(prop_len, mtArguments);\n-    int ret = jio_snprintf(property, prop_len, \"%s=%s\", prop_name, prop_value);\n-    if (ret < 0 || ret >= (int)prop_len) {\n-      FreeHeap(property);\n-      return JNI_ENOMEM;\n-    }\n-    bool added = add_property(property, UnwriteableProperty, InternalProperty);\n-    FreeHeap(property);\n-    if (!added) {\n-      return JNI_ENOMEM;\n-    }\n-  }\n-\n@@ -3264,0 +3246,18 @@\n+  if (EnableValhalla) {\n+    \/\/ create_property(\"valhalla.enableValhalla\", \"true\", InternalProperty)\n+    const char* prop_name = \"valhalla.enableValhalla\";\n+    const char* prop_value = \"true\";\n+    const size_t prop_len = strlen(prop_name) + strlen(prop_value) + 2;\n+    char* property = AllocateHeap(prop_len, mtArguments);\n+    int ret = jio_snprintf(property, prop_len, \"%s=%s\", prop_name, prop_value);\n+    if (ret < 0 || ret >= (int)prop_len) {\n+      FreeHeap(property);\n+      return JNI_ENOMEM;\n+    }\n+    bool added = add_property(property, UnwriteableProperty, InternalProperty);\n+    FreeHeap(property);\n+    if (!added) {\n+      return JNI_ENOMEM;\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"}]}