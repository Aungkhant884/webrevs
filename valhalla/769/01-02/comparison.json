{"files":[{"patch":"@@ -159,0 +159,1 @@\n+JVM_IsValhallaEnabled\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -174,0 +174,3 @@\n+JNIEXPORT jboolean JNICALL\n+JVM_IsValhallaEnabled(void);\n+\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3565,0 +3565,4 @@\n+JVM_LEAF(jboolean, JVM_IsValhallaEnabled(void))\n+  return EnableValhalla ? JNI_TRUE : JNI_FALSE;\n+JVM_END\n+\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3246,18 +3246,0 @@\n-  if (EnableValhalla) {\n-    \/\/ create_property(\"valhalla.enableValhalla\", \"true\", InternalProperty)\n-    const char* prop_name = \"valhalla.enableValhalla\";\n-    const char* prop_value = \"true\";\n-    const size_t prop_len = strlen(prop_name) + strlen(prop_value) + 2;\n-    char* property = AllocateHeap(prop_len, mtArguments);\n-    int ret = jio_snprintf(property, prop_len, \"%s=%s\", prop_name, prop_value);\n-    if (ret < 0 || ret >= (int)prop_len) {\n-      FreeHeap(property);\n-      return JNI_ENOMEM;\n-    }\n-    bool added = add_property(property, UnwriteableProperty, InternalProperty);\n-    FreeHeap(property);\n-    if (!added) {\n-      return JNI_ENOMEM;\n-    }\n-  }\n-\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.internal.misc;\n+\n+\/**\n+ * Defines static methods to test if Valhalla features are enabled at run-time.\n+ *\/\n+public class ValhallaFeatures {\n+    private static final boolean ENABLED = isValhallaEnabled();\n+\n+    private ValhallaFeatures() {\n+    }\n+\n+    \/**\n+     * {@return true if Valhalla features are enabled, otherwise false}\n+     *\/\n+    public static boolean isEnabled() {\n+        return ENABLED;\n+    }\n+\n+    \/**\n+     * Ensures that EnableValhalla features are enabled.\n+     * @throws UnsupportedOperationException if EnableValhalla features are not enabled\n+     *\/\n+    public static void ensureValhallaEnabled() {\n+        if (!ENABLED) {\n+            throw new UnsupportedOperationException(\n+                    \"ValhallaFeatures Features not enabled, need to run with -XX:+EnableValhalla\");\n+        }\n+    }\n+\n+    private static native boolean isValhallaEnabled();\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/ValhallaFeatures.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jni.h\"\n+#include \"jvm.h\"\n+\n+#include \"jdk_internal_misc_ValhallaFeatures.h\"\n+\n+JNIEXPORT jboolean JNICALL\n+Java_jdk_internal_misc_ValhallaFeatures_isValhallaEnabled(JNIEnv *env, jclass cls) {\n+    return JVM_IsValhallaEnabled();\n+}\n","filename":"src\/java.base\/share\/native\/libjava\/ValhallaFeatures.c","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.internal.misc.ValhallaFeatures;\n+\n+\/*\n+ * @test\n+ * @modules java.base\/jdk.internal.misc\n+ * @summary Test feature flags reflect command line flags\n+ * @run main\/othervm ValhallaFeaturesTest true\n+ * @run main\/othervm -XX:+EnableValhalla ValhallaFeaturesTest true\n+ * @run main\/othervm -XX:-EnableValhalla ValhallaFeaturesTest false\n+ *\/\n+\n+public class ValhallaFeaturesTest {\n+\n+    public static void main(String[] args) {\n+        boolean expected = args.length > 0 ? args[0].equalsIgnoreCase(\"true\") : false;\n+        boolean enabled = ValhallaFeatures.isEnabled();\n+        System.out.println(\"EnableValhalla: \" + enabled);\n+        if (expected != enabled) {\n+            throw new RuntimeException(\"expected: \" + expected + \", actual: \" + enabled);\n+        }\n+\n+        try {\n+            ValhallaFeatures.ensureValhallaEnabled();\n+            if (!enabled) {\n+                throw new RuntimeException(\"ensureValhallaEnabled should have thrown UOE\");\n+            }\n+        } catch (UnsupportedOperationException uoe) {\n+            if (enabled) {\n+                throw new RuntimeException(\"UnsupportedOperationException not expected\", uoe);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/valhalla\/valuetypes\/ValhallaFeaturesTest.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}