{"files":[{"patch":"@@ -618,1 +618,1 @@\n-        Name constructorName = tsym.isValueClass() ? names.vnew : names.init;\n+        Name constructorName = tsym.isConcreteValueClass() ? names.vnew : names.init;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/api\/JavacTrees.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -427,0 +427,4 @@\n+    public boolean isConcreteValueClass() {\n+        return isValueClass() && !isAbstract();\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3544,1 +3544,1 @@\n-                    Name constructorName = owner.isValueClass() ? names.vnew : names.init;\n+                    Name constructorName = owner.isConcreteValueClass() ? names.vnew : names.init;\n@@ -3611,1 +3611,1 @@\n-                if (lhsSym != null && lhsSym.isValueClass() && that.name == names.init) {\n+                if (lhsSym != null && lhsSym.isConcreteValueClass() && that.name == names.init) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1665,1 +1665,1 @@\n-                Name constructorName = csym.isValueClass() ? names.vnew : names.init;\n+                Name constructorName = csym.isConcreteValueClass() ? names.vnew : names.init;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1267,1 +1267,1 @@\n-                Name constructorName = accOwner.isValueClass() ? names.vnew : names.init;\n+                Name constructorName = accOwner.isConcreteValueClass() ? names.vnew : names.init;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-        if (tree.name == tree.name.table.names.init && allowValueClasses && enclScope.owner.isValueClass()) {\n+        if (tree.name == tree.name.table.names.init && allowValueClasses && enclScope.owner.isConcreteValueClass()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/MemberEnter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1058,1 +1058,1 @@\n-            Name constructorName = tsym.isValueClass() ? names.vnew : names.init;\n+            Name constructorName = tsym.isConcreteValueClass() ? names.vnew : names.init;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Modules.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2930,1 +2930,1 @@\n-        Name constructorName = site.tsym.isValueClass() ? names.vnew : names.init;\n+        Name constructorName = site.tsym.isConcreteValueClass() ? names.vnew : names.init;\n@@ -2965,1 +2965,1 @@\n-        Name constructorName = site.tsym.isValueClass() ? names.vnew : names.init;\n+        Name constructorName = site.tsym.isConcreteValueClass() ? names.vnew : names.init;\n@@ -2990,1 +2990,1 @@\n-        Name constructorName = allowValueClasses && site.tsym.isValueClass() ? names.vnew : names.init;\n+        Name constructorName = allowValueClasses && site.tsym.isConcreteValueClass() ? names.vnew : names.init;\n@@ -3054,1 +3054,1 @@\n-        Name constructorName = site.tsym.isValueClass() ? names.vnew : names.init;\n+        Name constructorName = site.tsym.isConcreteValueClass() ? names.vnew : names.init;\n@@ -3699,1 +3699,1 @@\n-            super(referenceTree, site.tsym.isValueClass() ? names.vnew : names.init, site, argtypes, typeargtypes, maxPhase);\n+            super(referenceTree, site.tsym.isConcreteValueClass() ? names.vnew : names.init, site, argtypes, typeargtypes, maxPhase);\n@@ -3731,1 +3731,1 @@\n-            super(referenceTree, site.tsym.isValueClass() ? names.vnew : names.init, site, argtypes, typeargtypes, maxPhase);\n+            super(referenceTree, site.tsym.isConcreteValueClass() ? names.vnew : names.init, site, argtypes, typeargtypes, maxPhase);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1364,1 +1364,1 @@\n-                Name constructorName = owner().isValueClass() ? names.vnew : names.init;\n+                Name constructorName = owner().isConcreteValueClass() ? names.vnew : names.init;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -431,16 +431,0 @@\n-\n-    private MethodSymbol getDefaultConstructor(Symbol klass) {\n-        Name constructorName = klass.isValueClass() ? names.vnew : names.init;\n-        for (Symbol method : klass.members().getSymbolsByName(constructorName, s->s.kind == MTH && s.type.getParameterTypes().size() == 0, LookupKind.NON_RECURSIVE)) {\n-            return (MethodSymbol) method;\n-        }\n-        \/\/ class defines a non-nullary but no nullary constructor, fabricate a symbol.\n-        MethodType dctorType = new MethodType(List.nil(),\n-                klass.type,\n-                List.nil(),\n-                klass.type.tsym);\n-        return new MethodSymbol(Flags.PUBLIC,\n-                constructorName,\n-                dctorType,\n-                klass);\n-    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/TransValues.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"}]}