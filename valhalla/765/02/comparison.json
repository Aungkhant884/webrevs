{"files":[{"patch":"@@ -613,0 +613,1 @@\n+                if (!success) weakDelay();\n@@ -614,1 +615,1 @@\n-            assertEquals(success, true, \"weakCompareAndSetPlain Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n@@ -616,1 +617,8 @@\n-            assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetPlain Point value\");\n+            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n+        }\n+\n+        {\n+            boolean success = vh.weakCompareAndSetPlain(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n+            Point x = (Point) vh.get(recv);\n+            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n@@ -623,0 +631,1 @@\n+                if (!success) weakDelay();\n@@ -624,1 +633,1 @@\n-            assertEquals(success, true, \"weakCompareAndSetAcquire Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n@@ -626,1 +635,8 @@\n-            assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSetAcquire Point\");\n+            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n+        }\n+\n+        {\n+            boolean success = vh.weakCompareAndSetAcquire(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n+            Point x = (Point) vh.get(recv);\n+            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n@@ -633,0 +649,1 @@\n+                if (!success) weakDelay();\n@@ -634,1 +651,8 @@\n-            assertEquals(success, true, \"weakCompareAndSetRelease Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n+            Point x = (Point) vh.get(recv);\n+            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n+        }\n+\n+        {\n+            boolean success = vh.weakCompareAndSetRelease(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n@@ -636,1 +660,1 @@\n-            assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetRelease Point\");\n+            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n@@ -643,0 +667,1 @@\n+                if (!success) weakDelay();\n@@ -644,1 +669,1 @@\n-            assertEquals(success, true, \"weakCompareAndSet Point\");\n+            assertEquals(success, true, \"success weakCompareAndSet Point\");\n@@ -646,1 +671,8 @@\n-            assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSet Point value\");\n+            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point value\");\n+        }\n+\n+        {\n+            boolean success = vh.weakCompareAndSet(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSet Point\");\n+            Point x = (Point) vh.get(recv);\n+            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n@@ -825,0 +857,1 @@\n+                if (!success) weakDelay();\n@@ -826,1 +859,8 @@\n-            assertEquals(success, true, \"weakCompareAndSetPlain Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n+            Point x = (Point) vh.get();\n+            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n+        }\n+\n+        {\n+            boolean success = vh.weakCompareAndSetPlain(Point.getInstance(1,1), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n@@ -828,1 +868,1 @@\n-            assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetPlain Point value\");\n+            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n@@ -835,0 +875,1 @@\n+                if (!success) weakDelay();\n@@ -836,1 +877,8 @@\n-            assertEquals(success, true, \"weakCompareAndSetAcquire Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n+            Point x = (Point) vh.get();\n+            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n+        }\n+\n+        {\n+            boolean success = vh.weakCompareAndSetAcquire(Point.getInstance(2,2), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n@@ -838,1 +886,1 @@\n-            assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSetAcquire Point\");\n+            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n@@ -845,0 +893,1 @@\n+                if (!success) weakDelay();\n@@ -846,1 +895,1 @@\n-            assertEquals(success, true, \"weakCompareAndSetRelease Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n@@ -848,1 +897,8 @@\n-            assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetRelease Point\");\n+            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n+        }\n+\n+        {\n+            boolean success = vh.weakCompareAndSetRelease(Point.getInstance(1,1), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n+            Point x = (Point) vh.get();\n+            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n@@ -855,0 +911,1 @@\n+                if (!success) weakDelay();\n@@ -856,1 +913,8 @@\n-            assertEquals(success, true, \"weakCompareAndSet Point\");\n+            assertEquals(success, true, \"success weakCompareAndSet Point\");\n+            Point x = (Point) vh.get();\n+            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n+        }\n+\n+        {\n+            boolean success = vh.weakCompareAndSet(Point.getInstance(2,2), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSet Point\");\n@@ -858,1 +922,1 @@\n-            assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSet Point\");\n+            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n@@ -1040,0 +1104,1 @@\n+                    if (!success) weakDelay();\n@@ -1041,1 +1106,8 @@\n-                assertEquals(success, true, \"weakCompareAndSetPlain Point\");\n+                assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n+                Point x = (Point) vh.get(array, i);\n+                assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n+            }\n+\n+            {\n+                boolean success = vh.weakCompareAndSetPlain(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n+                assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n@@ -1043,1 +1115,1 @@\n-                assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetPlain Point value\");\n+                assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n@@ -1050,0 +1122,1 @@\n+                    if (!success) weakDelay();\n@@ -1051,1 +1124,8 @@\n-                assertEquals(success, true, \"weakCompareAndSetAcquire Point\");\n+                assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n+                Point x = (Point) vh.get(array, i);\n+                assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n+            }\n+\n+            {\n+                boolean success = vh.weakCompareAndSetAcquire(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n+                assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n@@ -1053,1 +1133,1 @@\n-                assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSetAcquire Point\");\n+                assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n@@ -1060,0 +1140,1 @@\n+                    if (!success) weakDelay();\n@@ -1061,1 +1142,8 @@\n-                assertEquals(success, true, \"weakCompareAndSetRelease Point\");\n+                assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n+                Point x = (Point) vh.get(array, i);\n+                assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n+            }\n+\n+            {\n+                boolean success = vh.weakCompareAndSetRelease(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n+                assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n@@ -1063,1 +1151,1 @@\n-                assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetRelease Point\");\n+                assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n@@ -1070,0 +1158,1 @@\n+                    if (!success) weakDelay();\n@@ -1071,1 +1160,8 @@\n-                assertEquals(success, true, \"weakCompareAndSet Point\");\n+                assertEquals(success, true, \"success weakCompareAndSet Point\");\n+                Point x = (Point) vh.get(array, i);\n+                assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n+            }\n+\n+            {\n+                boolean success = vh.weakCompareAndSet(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n+                assertEquals(success, false, \"failing weakCompareAndSet Point\");\n@@ -1073,1 +1169,1 @@\n-                assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSet Point\");\n+                assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n@@ -1329,0 +1425,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessPoint.java","additions":121,"deletions":24,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.lang.invoke.MethodHandle;\n@@ -227,0 +228,1 @@\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN);\n@@ -229,1 +231,2 @@\n-                success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n+                success = (boolean) mh.invokeExact(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n+                if (!success) weakDelay();\n@@ -231,1 +234,1 @@\n-            assertEquals(success, true, \"weakCompareAndSetPlain Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n@@ -233,1 +236,1 @@\n-            assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetPlain Point value\");\n+            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n@@ -237,0 +240,8 @@\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n+            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n+            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n+        }\n+\n+        {\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE);\n@@ -239,1 +250,2 @@\n-                success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n+                success = (boolean) mh.invokeExact(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n+                if (!success) weakDelay();\n@@ -241,1 +253,1 @@\n-            assertEquals(success, true, \"weakCompareAndSetAcquire Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n@@ -243,1 +255,1 @@\n-            assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSetAcquire Point\");\n+            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n@@ -247,0 +259,8 @@\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n+            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n+            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n+        }\n+\n+        {\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE);\n@@ -249,1 +269,2 @@\n-                success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n+                success = (boolean) mh.invokeExact(recv, Point.getInstance(1,1), Point.getInstance(2,2));\n+                if (!success) weakDelay();\n@@ -251,1 +272,8 @@\n-            assertEquals(success, true, \"weakCompareAndSetRelease Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n+            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n+            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n+        }\n+\n+        {\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(recv, Point.getInstance(1,1), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n@@ -253,1 +281,1 @@\n-            assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetRelease Point\");\n+            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n@@ -258,0 +286,1 @@\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET);\n@@ -259,1 +288,2 @@\n-                success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n+                success = (boolean) mh.invokeExact(recv, Point.getInstance(2,2), Point.getInstance(1,1));\n+                if (!success) weakDelay();\n@@ -261,1 +291,1 @@\n-            assertEquals(success, true, \"weakCompareAndSet Point\");\n+            assertEquals(success, true, \"success weakCompareAndSet Point\");\n@@ -263,1 +293,8 @@\n-            assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSet Point\");\n+            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n+        }\n+\n+        {\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(recv, Point.getInstance(2,2), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSet Point\");\n+            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(recv);\n+            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n@@ -411,0 +448,1 @@\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN);\n@@ -413,1 +451,2 @@\n-                success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(Point.getInstance(1,1), Point.getInstance(2,2));\n+                success = (boolean) mh.invokeExact(Point.getInstance(1,1), Point.getInstance(2,2));\n+                if (!success) weakDelay();\n@@ -415,1 +454,8 @@\n-            assertEquals(success, true, \"weakCompareAndSetPlain Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n+            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n+            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n+        }\n+\n+        {\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(Point.getInstance(1,1), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n@@ -417,1 +463,1 @@\n-            assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetPlain Point value\");\n+            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n@@ -421,0 +467,1 @@\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE);\n@@ -423,1 +470,2 @@\n-                success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(Point.getInstance(2,2), Point.getInstance(1,1));\n+                success = (boolean) mh.invokeExact(Point.getInstance(2,2), Point.getInstance(1,1));\n+                if (!success) weakDelay();\n@@ -425,1 +473,9 @@\n-            assertEquals(success, true, \"weakCompareAndSetAcquire Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n+            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n+            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n+        }\n+\n+        {\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE);\n+            boolean success = (boolean) mh.invokeExact(Point.getInstance(2,2), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n@@ -427,1 +483,1 @@\n-            assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSetAcquire Point\");\n+            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n@@ -431,0 +487,1 @@\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE);\n@@ -433,1 +490,2 @@\n-                success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(Point.getInstance(1,1), Point.getInstance(2,2));\n+                success = (boolean) mh.invokeExact(Point.getInstance(1,1), Point.getInstance(2,2));\n+                if (!success) weakDelay();\n@@ -435,1 +493,1 @@\n-            assertEquals(success, true, \"weakCompareAndSetRelease Point\");\n+            assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n@@ -437,1 +495,1 @@\n-            assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetRelease Point\");\n+            assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n@@ -441,0 +499,8 @@\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(Point.getInstance(1,1), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSetRelease Point\");\n+            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n+            assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetRelease Point value\");\n+        }\n+\n+        {\n+            MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET);\n@@ -443,1 +509,2 @@\n-                success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(Point.getInstance(2,2), Point.getInstance(1,1));\n+                success = (boolean) mh.invokeExact(Point.getInstance(2,2), Point.getInstance(1,1));\n+                if (!success) weakDelay();\n@@ -445,1 +512,8 @@\n-            assertEquals(success, true, \"weakCompareAndSet Point\");\n+            assertEquals(success, true, \"success weakCompareAndSet Point\");\n+            Point x = (Point) hs.get(TestAccessMode.GET).invokeExact();\n+            assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n+        }\n+\n+        {\n+            boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(Point.getInstance(2,2), Point.getInstance(3,3));\n+            assertEquals(success, false, \"failing weakCompareAndSet Point\");\n@@ -447,1 +521,1 @@\n-            assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSet Point\");\n+            assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetRe Point value\");\n@@ -592,0 +666,1 @@\n+                MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN);\n@@ -594,1 +669,2 @@\n-                    success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n+                    success = (boolean) mh.invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n+                    if (!success) weakDelay();\n@@ -596,1 +672,8 @@\n-                assertEquals(success, true, \"weakCompareAndSetPlain Point\");\n+                assertEquals(success, true, \"success weakCompareAndSetPlain Point\");\n+                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n+                assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetPlain Point value\");\n+            }\n+\n+            {\n+                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_PLAIN).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n+                assertEquals(success, false, \"failing weakCompareAndSetPlain Point\");\n@@ -598,1 +681,1 @@\n-                assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetPlain Point value\");\n+                assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetPlain Point value\");\n@@ -602,0 +685,1 @@\n+                MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE);\n@@ -604,1 +688,2 @@\n-                    success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n+                    success = (boolean) mh.invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n+                    if (!success) weakDelay();\n@@ -606,1 +691,8 @@\n-                assertEquals(success, true, \"weakCompareAndSetAcquire Point\");\n+                assertEquals(success, true, \"success weakCompareAndSetAcquire Point\");\n+                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n+                assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSetAcquire Point\");\n+            }\n+\n+            {\n+                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n+                assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n@@ -608,1 +700,1 @@\n-                assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSetAcquire Point\");\n+                assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSetAcquire Point value\");\n@@ -612,0 +704,1 @@\n+                MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE);\n@@ -614,1 +707,2 @@\n-                    success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_RELEASE).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n+                    success = (boolean) mh.invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(2,2));\n+                    if (!success) weakDelay();\n@@ -616,1 +710,8 @@\n-                assertEquals(success, true, \"weakCompareAndSetRelease Point\");\n+                assertEquals(success, true, \"success weakCompareAndSetRelease Point\");\n+                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n+                assertEquals(x, Point.getInstance(2,2), \"success weakCompareAndSetRelease Point\");\n+            }\n+\n+            {\n+                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET_ACQUIRE).invokeExact(array, i, Point.getInstance(1,1), Point.getInstance(3,3));\n+                assertEquals(success, false, \"failing weakCompareAndSetAcquire Point\");\n@@ -618,1 +719,1 @@\n-                assertEquals(x, Point.getInstance(2,2), \"weakCompareAndSetRelease Point\");\n+                assertEquals(x, Point.getInstance(2,2), \"failing weakCompareAndSetAcquire Point value\");\n@@ -622,0 +723,1 @@\n+                MethodHandle mh = hs.get(TestAccessMode.WEAK_COMPARE_AND_SET);\n@@ -624,1 +726,2 @@\n-                    success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n+                    success = (boolean) mh.invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(1,1));\n+                    if (!success) weakDelay();\n@@ -626,1 +729,8 @@\n-                assertEquals(success, true, \"weakCompareAndSet Point\");\n+                assertEquals(success, true, \"success weakCompareAndSet Point\");\n+                Point x = (Point) hs.get(TestAccessMode.GET).invokeExact(array, i);\n+                assertEquals(x, Point.getInstance(1,1), \"success weakCompareAndSet Point\");\n+            }\n+\n+            {\n+                boolean success = (boolean) hs.get(TestAccessMode.WEAK_COMPARE_AND_SET).invokeExact(array, i, Point.getInstance(2,2), Point.getInstance(3,3));\n+                assertEquals(success, false, \"failing weakCompareAndSet Point\");\n@@ -628,1 +738,1 @@\n-                assertEquals(x, Point.getInstance(1,1), \"weakCompareAndSet Point\");\n+                assertEquals(x, Point.getInstance(1,1), \"failing weakCompareAndSet Point value\");\n@@ -721,0 +831,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessPoint.java","additions":147,"deletions":36,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeBoolean.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeByte.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeChar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeDouble.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeFloat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeInt.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeLong.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeShort.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodTypeString.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,4 @@\n+#if[Point]\n+import jdk.internal.value.PrimitiveClass;\n+\n+#end[Point]\n@@ -48,1 +52,1 @@\n-    static final Class<?> type = $type$.class.asValueType();\n+    static final Class<?> type = PrimitiveClass.asValueType($type$.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestAccess.java.template","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+#if[Point]\n+ * @run testng\/othervm -Diters=2000 VarHandleTestMethodHandleAccess$Type$\n+#else[Point]\n@@ -29,0 +32,1 @@\n+#end[Point]\n@@ -42,0 +46,4 @@\n+#if[Point]\n+import jdk.internal.value.PrimitiveClass;\n+\n+#end[Point]\n@@ -46,1 +54,1 @@\n-    static final Class<?> type = $type$.class.asValueType();\n+    static final Class<?> type = PrimitiveClass.asValueType($type$.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestMethodHandleAccess.java.template","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,4 @@\n+#if[Point]\n+import jdk.internal.value.PrimitiveClass;\n+\n+#end[Point]\n@@ -51,1 +55,1 @@\n-    static final Class<?> type = $type$.class.asValueType();\n+    static final Class<?> type = PrimitiveClass.asValueType($type$.class);\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestMethodType.java.template","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}