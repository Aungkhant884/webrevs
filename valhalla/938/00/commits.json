[{"commit":{"message":"Refine comment, again"},"files":[{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"}],"sha":"30b8870051520d30c4169478ec862c11e0ad48e2"},{"commit":{"message":"Refine comment"},"files":[{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"}],"sha":"27a2d98880cbc5ae55086b31997c5f0a781356b8"},{"commit":{"message":"List new intrinsic consistently with definition order"},"files":[{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"}],"sha":"0ce34426f097ef6dbde8865675dddaab0745c205"},{"commit":{"message":"Simplify microbenchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/intrinsics\/IsFlattenedArray.java"}],"sha":"1a2fc3184957b55fb12700f8d81280a9be0f635f"},{"commit":{"message":"Remove redundant check"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java"}],"sha":"de60233e35cd5c129d68426d9b8702beaec36a48"},{"commit":{"message":"Move implementation of isFlattenedArray into its own function again"},"files":[{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"}],"sha":"308b47178cc51aeb0341a1cd15ca3cc2832163b8"},{"commit":{"message":"Remove unnecessary array check, relax assertion"},"files":[{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/macro.cpp"}],"sha":"1fc74fd070d666628d8e288d6464d05605dbba51"},{"commit":{"message":"Update microbenchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/intrinsics\/IsFlattenedArray.java"}],"sha":"cabd0f91458ddf3c4006f0a38aa955dd4793b547"},{"commit":{"message":"Add microbenchmarks"},"files":[{"filename":"make\/test\/BuildMicrobenchmark.gmk"},{"filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/intrinsics\/IsFlattenedArray.java"}],"sha":"9b93791f199bf20efb6198e3cca9a1f8d63ae545"},{"commit":{"message":"Add basic test cases"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestIntrinsics.java"}],"sha":"66ce618071724fd3f57488b50b86c10745ee3184"},{"commit":{"message":"Use appropriate output pattern depending on context"},"files":[{"filename":"src\/hotspot\/share\/opto\/macro.cpp"}],"sha":"6e2f295ae05a469af79871852194bc42361469d9"},{"commit":{"message":"Use Conv2B node instead of CmpI+Bool to avoid matcher failure"},"files":[{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/macro.cpp"}],"sha":"7b57c036f259a82e5d315ce3aea16afbab653793"},{"commit":{"message":"Cast klass as array on array guard success"},"files":[{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"}],"sha":"1a8a1753a26a9e27fceff70a882cd467c8d9f7f2"},{"commit":{"message":"Reuse LibraryCallKit::inline_native_Class_query, handle non-array classes"},"files":[{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"}],"sha":"868b7526573a02461d140b7cd975ed2da07e7c0f"},{"commit":{"message":"Refine notes"},"files":[{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"}],"sha":"d860f1b8dee2ee20852f69f6a4f2362f57cdc73b"},{"commit":{"message":"Add initial implementation (common case only)"},"files":[{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java"}],"sha":"8e93927d16420b41b4aed8ab9b07f25690ccd084"},{"commit":{"message":"Remove ZGC barrier test from problem list"},"files":[{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"}],"sha":"f89b422a417f53b2dcc476fccc012ed00bbb8376"}]