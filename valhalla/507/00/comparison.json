{"files":[{"patch":"@@ -5792,0 +5792,1 @@\n+  assert(from->is_valid() && to->is_valid(), \"source and destination must be valid\");\n@@ -5876,1 +5877,1 @@\n-  assert(from->is_valid(), \"source must bevalid\");\n+  assert(from->is_valid(), \"source must be valid\");\n@@ -5893,0 +5894,1 @@\n+    assert(toReg->is_valid(), \"destination must be valid\");\n@@ -5977,0 +5979,1 @@\n+    assert(fromReg->is_valid(), \"source must be valid\");\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -5741,0 +5741,1 @@\n+  assert(from->is_valid() && to->is_valid(), \"source and destination must be valid\");\n@@ -5821,1 +5822,1 @@\n-  assert(from->is_valid(), \"source must bevalid\");\n+  assert(from->is_valid(), \"source must be valid\");\n@@ -5837,0 +5838,1 @@\n+    assert(toReg->is_valid(), \"destination must be valid\");\n@@ -5920,0 +5922,1 @@\n+    assert(fromReg->is_valid(), \"source must be valid\");\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -176,1 +176,6 @@\n-        done &= move_helper(from_reg, regs_to[to_index].first(), bt, reg_state);\n+        if (from_reg->is_valid()) {\n+          done &= move_helper(from_reg, regs_to[to_index].first(), bt, reg_state);\n+        } else {\n+          \/\/ halves of T_LONG or T_DOUBLE\n+          assert(bt == T_VOID, \"unexpected basic type\");\n+        }\n","filename":"src\/hotspot\/share\/asm\/macroAssembler_common.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}