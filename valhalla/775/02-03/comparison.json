{"files":[{"patch":"@@ -1515,1 +1515,0 @@\n-        \/\/ Arrays are identity classes but not reflected in modifiers\n@@ -1520,4 +1519,3 @@\n-        final int mask = ((location == AccessFlag.Location.CLASS) ?\n-                getClassAccessFlagsRaw() : getModifiers()) |\n-                (isArray() ? Modifier.IDENTITY : 0);\n-        return AccessFlag.maskToAccessFlags(mask & (~0x800),  \/\/ suppress unspecified bit\n+        return AccessFlag.maskToAccessFlags((location == AccessFlag.Location.CLASS) ?\n+                                            getClassAccessFlagsRaw() & (~0x800) :\n+                                            getModifiers() & (~0x800), \/\/ suppress unspecified bit\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-            expected.add(AccessFlag.IDENTITY);\n+\/\/            expected.add(AccessFlag.IDENTITY);  \/\/ NYI Pending: JDK-8294866\n","filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/ClassAccessFlagTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,5 +107,6 @@\n-        assertEquals(clazz.accessFlags().contains(AccessFlag.IDENTITY),\n-                identityClass, \"AccessFlag.IDENTITY\");\n-\n-        assertEquals(clazz.accessFlags().contains(AccessFlag.VALUE),\n-                valueClass, \"AccessFlag.VALUE\");\n+        \/\/ JDK-8294866: Not yet implemented checks of AccessFlags for the array class\n+\/\/        assertEquals(clazz.accessFlags().contains(AccessFlag.IDENTITY),\n+\/\/                identityClass, \"AccessFlag.IDENTITY\");\n+\/\/\n+\/\/        assertEquals(clazz.accessFlags().contains(AccessFlag.VALUE),\n+\/\/                valueClass, \"AccessFlag.VALUE\");\n","filename":"test\/jdk\/valhalla\/valuetypes\/ObjectMethods.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}