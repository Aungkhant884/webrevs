{"files":[{"patch":"@@ -163,2 +163,8 @@\n-    print_info(); \\\n-    FileMapInfo::fail_continue(\"VM option %s is different between dumptime and runtime\", #n); \\\n+    ResourceMark rm; \\\n+    stringStream ss; \\\n+    ss.print(\"VM option %s is different between dumptime (\", #n);  \\\n+    do_print(&ss, _v_ ## n); \\\n+    ss.print(\") and runtime (\"); \\\n+    do_print(&ss, n); \\\n+    ss.print(\")\"); \\\n+    FileMapInfo::fail_continue(\"%s\", ss.as_string()); \\\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -184,0 +184,1 @@\n+  f(EnableValhalla) \\\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4068,2 +4068,4 @@\n-  if (!EnableValhalla || (is_interpreter_only() && !is_dumping_archive())) {\n-    \/\/ Disable calling convention optimizations if inline types are not supported\n+  if (!EnableValhalla || (is_interpreter_only() && !is_dumping_archive() && !UseSharedSpaces)) {\n+    \/\/ Disable calling convention optimizations if inline types are not supported.\n+    \/\/ Also these aren't useful in -Xint. However, don't disable them when dumping or using\n+    \/\/ the CDS archive, as the values must match between dumptime and runtime.\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}