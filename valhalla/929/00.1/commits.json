[{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.hpp"},{"filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp"},{"filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp"},{"filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.hpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp"},{"filename":"src\/hotspot\/share\/oops\/fieldInfo.hpp"},{"filename":"src\/hotspot\/share\/oops\/fieldStreams.hpp"},{"filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/inlineKlass.hpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/cfgnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"},{"filename":"src\/hotspot\/share\/opto\/parseHelper.cpp"},{"filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.hpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.inline.hpp"}],"sha":"764a320bce510545ff64e9404dc3a334e01af78b"},{"commit":{"message":"8314980: [lworld+vector] consider scalarization conditions during ciMultiField creation.\n\nReviewed-by: xgong"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciField.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp"}],"sha":"4c885f6e8aec5016ce349c98461f5fa380ef8db4"},{"commit":{"message":"Merge lworld\n\nReviewed-by: jbhateja"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.hpp"},{"filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp"},{"filename":"src\/hotspot\/share\/oops\/fieldStreams.hpp"},{"filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/inlineKlass.hpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/cfgnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"},{"filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp"}],"sha":"0a40ef552f1c93f291b11f84d060daa28746d806"},{"commit":{"message":"8314628: [lworld+vector] validation regression fixes and cleanups.\n\nReviewed-by: xgong"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciField.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.hpp"},{"filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"},{"filename":"src\/hotspot\/share\/opto\/parseHelper.cpp"}],"sha":"c073a2fdd938b022c5cda560b201dabec9df1748"},{"commit":{"message":"8311610: [lworld+vector] Clean-up of vector allocation in class VectorSupport\n\nReviewed-by: jbhateja"},"files":[{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp"}],"sha":"656a4bacf6dd22fa24ec13238bcc8aee710cdd44"},{"commit":{"message":"8311080: [lworld+vector] Fix jdk build failures with different options\n\nReviewed-by: jbhateja"},"files":[{"filename":"src\/hotspot\/share\/oops\/fieldInfo.hpp"},{"filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/inlineKlass.hpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp"}],"sha":"bb135138d1314e84bc1371cc9a9d425eafc26c70"},{"commit":{"message":"Merge lworld\n\nCo-authored-by: Xiaohong Gong <xgong@openjdk.org>\nReviewed-by: xgong"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.hpp"},{"filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp"},{"filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp"},{"filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.hpp"},{"filename":"src\/hotspot\/share\/oops\/fieldInfo.hpp"},{"filename":"src\/hotspot\/share\/oops\/fieldStreams.hpp"},{"filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/cfgnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"},{"filename":"src\/hotspot\/share\/opto\/parseHelper.cpp"},{"filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.hpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.inline.hpp"}],"sha":"d44617c37a7e31b6488ce94c24c7dbe04c3d3754"},{"commit":{"message":"8307715: Integrate VectorMask\/Shuffle with value\/primitive classes\n\nReviewed-by: jbhateja"},"files":[{"filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp"},{"filename":"src\/hotspot\/share\/opto\/cfgnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"}],"sha":"4ce98c10963a989fd3ecb52ca346f479c0ae181a"},{"commit":{"message":"8304310: Initial compilers and runtime handling for multifield backed vectors.\n\nReviewed-by: xgong, vlivanov"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInlineKlass.hpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.hpp"},{"filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/cfgnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"},{"filename":"src\/hotspot\/share\/opto\/parseHelper.cpp"},{"filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.hpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.inline.hpp"}],"sha":"d9f744fe6e816a91aa7c8d5e84ce464e8a9d3921"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciField.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciField.hpp"},{"filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp"},{"filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp"},{"filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.hpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/cfgnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp"},{"filename":"src\/hotspot\/share\/opto\/inlinetypenode.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"},{"filename":"src\/hotspot\/share\/opto\/parseHelper.cpp"},{"filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.hpp"}],"sha":"05e4d0dbaf4f9093087b78b065314d6dcaa6ed0a"},{"commit":{"message":"8296767: Support multi-field based vector classes."},"files":[],"sha":"8159184e95f67bb5ea4d3754bfcf7ab7a25a9803"},{"commit":{"message":"[lworld+vector] Borrowing MultiFields initial implementation from https:\/\/github.com\/fparain\/valhalla\/tree\/multifields.\n\nCo-authored-by: Frederic Parain <fparain@openjdk.org>"},"files":[{"filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp"},{"filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.cpp"},{"filename":"src\/hotspot\/share\/classfile\/fieldLayoutBuilder.hpp"},{"filename":"src\/hotspot\/share\/oops\/fieldInfo.hpp"},{"filename":"src\/hotspot\/share\/oops\/fieldStreams.hpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp"},{"filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.hpp"},{"filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.inline.hpp"}],"sha":"ff1901b93c3f58de79c04f770b58c83b7c5b0019"}]