{"files":[{"patch":"@@ -4137,4 +4137,0 @@\n-  if (_preload_classes != NULL) {\n-    k->set_has_preload_attribute();\n-    k->set_preload_classes(_preload_classes);\n-  }\n@@ -4185,0 +4181,1 @@\n+  this_klass->set_preload_classes(_preload_classes);\n@@ -5678,0 +5675,1 @@\n+  assert(NULL == _preload_classes, \"invariant\");\n@@ -6051,0 +6049,1 @@\n+  _preload_classes = NULL;\n@@ -6094,0 +6093,4 @@\n+  if (_preload_classes != NULL) {\n+    MetadataFactory::free_array<u2>(_loader_data, _preload_classes);\n+  }\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -288,2 +288,1 @@\n-    _misc_has_injected_primitiveObject        = 1 << 22, \/\/ PrimitiveObject has been injected by the JVM\n-    _misc_has_preload_attribute               = 1 << 23  \/\/ class has a Preload attribute\n+    _misc_has_injected_primitiveObject        = 1 << 22  \/\/ PrimitiveObject has been injected by the JVM\n@@ -493,5 +492,1 @@\n-    return (_misc_flags & _misc_has_preload_attribute) != 0;\n-  }\n-\n-  void set_has_preload_attribute() {\n-    _misc_flags |= _misc_has_preload_attribute;\n+    return _preload_classes != NULL;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,3 +24,1 @@\n-public value class PreloadValue0 {\n-\n-}\n+public value class PreloadValue0 { }\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/PreloadValue0.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ValuePreloadClient0.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ValuePreloadClient1.jcod","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ValuePreloadTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}