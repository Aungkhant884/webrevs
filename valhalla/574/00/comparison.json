{"files":[{"patch":"@@ -290,0 +290,3 @@\n+  \/\/ Ensure that the class is initialized or being initialized\n+  \/\/ If the class is in error state, the creation of a new value should not be allowed\n+  ik->initialize(CHECK_(ret_adj));\n@@ -405,1 +408,0 @@\n-  assert(field_vklass->is_initialized(), \"Must be initialized at this point\");\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -121,1 +121,2 @@\n-  this->initialize(CHECK_NULL); \/\/ will throw an exception if in error state\n+  assert(is_initialized() || is_being_initialized()|| is_in_error_state(),\n+        \"Must be initialized, initializing or in a corner case of an escaped instance of a class that failed its initialization\");\n","filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,3 +41,3 @@\n-        if (ClassInitializationFailuresTest.failingInitialization) {\n-            throw new RuntimeException(\"Failing initialization\");\n-        }\n+            if (ClassInitializationFailuresTest.failingInitialization) {\n+                throw new RuntimeException(\"Failing initialization\");\n+            }\n@@ -64,1 +64,1 @@\n-        TestClass1 t1 = new TestClass1();\n+            TestClass1 t1 = new TestClass1();\n@@ -66,1 +66,1 @@\n-        e = t;\n+            e = t;\n@@ -74,1 +74,1 @@\n-        TestClass1 t1 = new TestClass1();\n+            TestClass1 t1 = new TestClass1();\n@@ -76,1 +76,1 @@\n-        e = t;\n+            e = t;\n@@ -86,3 +86,3 @@\n-        if (ClassInitializationFailuresTest.failingInitialization) {\n-            throw new RuntimeException(\"Failing initialization\");\n-        }\n+            if (ClassInitializationFailuresTest.failingInitialization) {\n+                throw new RuntimeException(\"Failing initialization\");\n+            }\n@@ -95,3 +95,3 @@\n-        if (ClassInitializationFailuresTest.failingInitialization) {\n-            throw new RuntimeException(\"Failing initialization\");\n-        }\n+            if (ClassInitializationFailuresTest.failingInitialization) {\n+                throw new RuntimeException(\"Failing initialization\");\n+            }\n@@ -106,1 +106,1 @@\n-        BadTwo[] array = new BadTwo[10];\n+            BadTwo[] array = new BadTwo[10];\n@@ -108,1 +108,1 @@\n-        e = t;\n+            e = t;\n@@ -114,1 +114,1 @@\n-        BadTwo[] array = new BadTwo[10];\n+            BadTwo[] array = new BadTwo[10];\n@@ -116,1 +116,1 @@\n-        e = t;\n+            e = t;\n@@ -123,1 +123,1 @@\n-        BadThree[][] array = new BadThree[10][20];\n+            BadThree[][] array = new BadThree[10][20];\n@@ -125,1 +125,1 @@\n-        e = t;\n+            e = t;\n@@ -131,1 +131,1 @@\n-        BadThree[][][] array = new BadThree[10][30][10];\n+            BadThree[][][] array = new BadThree[10][30][10];\n@@ -133,1 +133,1 @@\n-        e = t;\n+            e = t;\n@@ -144,4 +144,4 @@\n-        array = new BadFour[10];\n-        if (ClassInitializationFailuresTest.failingInitialization) {\n-            throw new RuntimeException(\"Failing initialization\");\n-        }\n+            array = new BadFour[10];\n+            if (ClassInitializationFailuresTest.failingInitialization) {\n+                throw new RuntimeException(\"Failing initialization\");\n+            }\n@@ -158,1 +158,1 @@\n-        BadFour bt = new BadFour();\n+            BadFour bt = new BadFour();\n@@ -160,1 +160,1 @@\n-        e = t;\n+            e = t;\n@@ -166,1 +166,1 @@\n-        BadFour t = BadFour.array[0];\n+            BadFour t = BadFour.array[0];\n@@ -168,1 +168,1 @@\n-        e = t;\n+            e = t;\n@@ -178,4 +178,4 @@\n-        ClassInitializationFailuresTest.bo = new BadSix();\n-        if (ClassInitializationFailuresTest.failingInitialization) {\n-            throw new RuntimeException(\"Failing initialization\");\n-        }\n+            ClassInitializationFailuresTest.bo = new BadSix();\n+            if (ClassInitializationFailuresTest.failingInitialization) {\n+                throw new RuntimeException(\"Failing initialization\");\n+            }\n@@ -193,1 +193,1 @@\n-        BadSix bt = new BadSix();\n+            BadSix bt = new BadSix();\n@@ -195,1 +195,1 @@\n-        e = t;\n+            e = t;\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/ClassInitializationFailuresTest.java","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"}]}