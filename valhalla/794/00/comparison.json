{"files":[{"patch":"@@ -157,0 +157,1 @@\n+JVM_IsIdentityClass\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -574,0 +574,3 @@\n+JNIEXPORT jboolean JNICALL\n+JVM_IsIdentityClass(JNIEnv *env, jclass cls);\n+\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1254,0 +1254,13 @@\n+JVM_ENTRY(jboolean, JVM_IsIdentityClass(JNIEnv *env, jclass cls))\n+  oop mirror = JNIHandles::resolve_non_null(cls);\n+  if (java_lang_Class::is_primitive(mirror)) {\n+    return JNI_FALSE;\n+  }\n+  Klass* k = java_lang_Class::as_Klass(mirror);\n+  if (EnableValhalla) {\n+    return k->is_array_klass() || k->is_identity_class();\n+  } else {\n+    return k->is_interface() ? JNI_FALSE : JNI_TRUE;\n+  }\n+JVM_END\n+\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -651,7 +651,1 @@\n-    public boolean isIdentity() {\n-        if (!ValhallaFeatures.isEnabled()) {\n-            \/\/ by default interfaces are not an identity interface\n-            return !isInterface();\n-        }\n-        return (this.getModifiers() & Modifier.IDENTITY) != 0 || isArray();\n-    }\n+    public native boolean isIdentity();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+    {\"isIdentity\",       \"()Z\",             (void *)&JVM_IsIdentityClass},\n","filename":"src\/java.base\/share\/native\/libjava\/Class.c","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}