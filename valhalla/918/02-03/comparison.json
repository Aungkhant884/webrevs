{"files":[{"patch":"@@ -94,1 +94,0 @@\n-  _is_transiant_multifield_base = false;\n@@ -304,1 +303,2 @@\n-  _is_multifield_base = false;\n+  _is_multifield_base = fd->is_multifield_base() &&\n+     !ciEnv::is_multifield_scalarized(fd->field_type(), fd->secondary_fields_count(fd->index()));\n@@ -306,1 +306,0 @@\n-  _is_transiant_multifield_base = fd->is_multifield_base();\n","filename":"src\/hotspot\/share\/ci\/ciField.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-  bool             _is_transiant_multifield_base;\n@@ -115,1 +114,0 @@\n-  bool is_transiant_multifield_base() { return _is_transiant_multifield_base; }\n","filename":"src\/hotspot\/share\/ci\/ciField.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -532,1 +532,1 @@\n-  if (!field->is_transiant_multifield_base()) {\n+  if (!field->is_multifield_base()) {\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -324,1 +324,1 @@\n-  if (f && f->is_transiant_multifield_base()) {\n+  if (f && f->is_multifield_base()) {\n","filename":"src\/hotspot\/share\/ci\/ciStreams.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}