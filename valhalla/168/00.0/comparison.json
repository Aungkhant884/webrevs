{"files":[{"patch":"@@ -657,0 +657,2 @@\n+2dad000726b8d5db9f3df647fb4949d88f269dd4 jdk-15+32\n+4a8fd81d64bafa523cddb45f82805536edace106 jdk-16+6\n","filename":".hgtags","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -533,1 +533,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -646,1 +646,1 @@\n-                         \"<cite>The Java&trade; Virtual Machine Specification<\/cite>\")\n+                         \"<cite>The Java Virtual Machine Specification<\/cite>\")\n@@ -674,1 +674,1 @@\n-                                 \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+                                 \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -709,1 +709,1 @@\n-                                 \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+                                 \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -796,1 +796,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -875,1 +875,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -903,1 +903,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -920,1 +920,1 @@\n-                                 \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+                                 \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -945,1 +945,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -962,1 +962,1 @@\n-                                 \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+                                 \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -1025,1 +1025,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -1035,1 +1035,1 @@\n-                       \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \")\n+                       \"<cite>The Java Virtual Machine Specification<\/cite>. \")\n@@ -1438,1 +1438,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -1494,1 +1494,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>. \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>. \"\n@@ -2085,1 +2085,1 @@\n-        \"<cite>The Java&trade; Virtual Machine Specification<\/cite>) \"\n+        \"<cite>The Java Virtual Machine Specification<\/cite>) \"\n","filename":"make\/data\/jdwp\/jdwp.spec","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1631,1 +1631,1 @@\n-  const long framesize = C->output()->frame_size_in_bytes();\n+  const int framesize = C->output()->frame_size_in_bytes();\n@@ -3203,1 +3203,1 @@\n-          unsigned long offset;\n+          uintptr_t offset;\n@@ -4275,1 +4275,1 @@\n-  predicate(Assembler::operand_valid_for_add_sub_immediate((long)n->get_int()));\n+  predicate(Assembler::operand_valid_for_add_sub_immediate((int64_t)n->get_int()));\n@@ -4286,1 +4286,1 @@\n-  predicate(Assembler::operand_valid_for_logical_immediate(\/*is32*\/true, (unsigned long)n->get_int()));\n+  predicate(Assembler::operand_valid_for_logical_immediate(\/*is32*\/true, (uint64_t)n->get_int()));\n@@ -4364,1 +4364,1 @@\n-  predicate(Assembler::operand_valid_for_logical_immediate(\/*is32*\/false, (unsigned long)n->get_long()));\n+  predicate(Assembler::operand_valid_for_logical_immediate(\/*is32*\/false, (uint64_t)n->get_long()));\n@@ -10892,0 +10892,3 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -10908,0 +10911,3 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -10925,0 +10931,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -10942,0 +10950,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -10959,0 +10969,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -10976,0 +10988,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -10993,0 +11007,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11010,0 +11026,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11027,0 +11045,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11045,0 +11065,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11063,0 +11085,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11081,0 +11105,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11099,0 +11125,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11117,0 +11145,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11135,0 +11165,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11153,0 +11185,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11171,0 +11205,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11189,0 +11225,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11207,0 +11245,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11225,0 +11265,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11243,0 +11285,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11261,0 +11305,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11279,0 +11325,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11297,0 +11345,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11315,0 +11365,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11333,0 +11385,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11351,0 +11405,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11370,0 +11426,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11389,0 +11447,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11408,0 +11468,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11427,0 +11489,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11446,0 +11510,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11465,0 +11531,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11484,0 +11552,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11503,0 +11573,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11522,0 +11594,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11541,0 +11615,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11560,0 +11636,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11579,0 +11657,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11598,0 +11678,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11617,0 +11699,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11636,0 +11720,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11655,0 +11741,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11674,0 +11762,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11693,0 +11783,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11712,0 +11804,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11731,0 +11825,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11750,0 +11846,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11769,0 +11867,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11788,0 +11888,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11807,0 +11909,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11826,0 +11930,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11845,0 +11951,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11864,0 +11972,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11883,0 +11993,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11902,0 +12014,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11921,1 +12035,3 @@\n-\n+ \n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -11943,0 +12059,3 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+\n@@ -11963,0 +12082,3 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+\n@@ -11983,0 +12105,3 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+\n@@ -12002,0 +12127,1 @@\n+\n@@ -12004,0 +12130,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12014,1 +12142,1 @@\n-    long mask = $mask$$constant;\n+    intptr_t mask = $mask$$constant;\n@@ -12021,0 +12149,3 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12031,1 +12162,1 @@\n-    long mask = $mask$$constant;\n+    intptr_t mask = $mask$$constant;\n@@ -12039,0 +12170,4 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+\n@@ -12051,1 +12186,1 @@\n-    long mask = $mask$$constant;\n+    intptr_t mask = $mask$$constant;\n@@ -12059,0 +12194,4 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+\n@@ -12070,1 +12209,1 @@\n-    long mask = $mask$$constant;\n+    intptr_t mask = $mask$$constant;\n@@ -12077,0 +12216,4 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+\n@@ -12088,1 +12231,1 @@\n-    long mask = $mask$$constant;\n+    intptr_t mask = $mask$$constant;\n@@ -12096,0 +12239,4 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n+\n@@ -12106,1 +12253,1 @@\n-    long mask = $mask$$constant;\n+    intptr_t mask = $mask$$constant;\n@@ -12114,1 +12261,3 @@\n-\/\/ Rotations\n+\/\/ Rotations \n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12131,0 +12280,3 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12146,0 +12298,3 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12161,0 +12316,3 @@\n+\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12177,1 +12335,2 @@\n-\/\/ rol expander\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12179,0 +12338,1 @@\n+\/\/ rol expander\n@@ -12193,1 +12353,2 @@\n-\/\/ rol expander\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12195,0 +12356,1 @@\n+\/\/ rol expander\n@@ -12209,0 +12371,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12218,0 +12382,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12227,0 +12393,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12236,0 +12404,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12245,1 +12415,2 @@\n-\/\/ ror expander\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12247,0 +12418,1 @@\n+\/\/ ror expander\n@@ -12260,1 +12432,2 @@\n-\/\/ ror expander\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12262,0 +12435,1 @@\n+\/\/ ror expander\n@@ -12275,0 +12449,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12284,0 +12460,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12293,0 +12471,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12302,0 +12482,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12311,0 +12493,1 @@\n+\n@@ -12313,0 +12496,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12324,1 +12509,1 @@\n-%};\n+%}\n@@ -12326,0 +12511,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12337,2 +12524,1 @@\n-%};\n-\n+%}\n@@ -12340,0 +12526,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12353,0 +12541,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12366,0 +12556,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12379,0 +12571,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12392,0 +12586,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12405,0 +12601,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12418,0 +12616,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12431,1 +12631,2 @@\n-\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12445,0 +12646,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12458,0 +12661,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12471,0 +12676,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12484,0 +12691,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12497,0 +12706,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12510,0 +12721,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12523,0 +12736,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12536,0 +12751,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12549,0 +12766,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12563,0 +12782,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12576,0 +12797,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12589,0 +12812,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12602,0 +12827,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12615,0 +12842,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12628,0 +12857,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12641,0 +12872,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12654,0 +12887,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12667,0 +12902,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12680,0 +12917,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12693,1 +12932,2 @@\n-\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12705,1 +12945,1 @@\n-%};\n+%}\n@@ -12707,0 +12947,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12718,2 +12960,1 @@\n-%};\n-\n+%}\n@@ -12721,0 +12962,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12734,0 +12977,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12747,0 +12992,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12760,0 +13007,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12773,0 +13022,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12786,0 +13037,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12799,0 +13052,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12812,0 +13067,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12825,0 +13082,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12838,0 +13097,2 @@\n+\/\/ This pattern is automatically generated from aarch64_ad.m4\n+\/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n@@ -12850,0 +13111,3 @@\n+\n+\n+\n@@ -12852,0 +13116,1 @@\n+\n@@ -13343,1 +13608,1 @@\n-            (unsigned long)($src2$$constant));\n+            (uint64_t)($src2$$constant));\n@@ -13375,1 +13640,1 @@\n-            (unsigned long)($src2$$constant));\n+            (uint64_t)($src2$$constant));\n@@ -13407,1 +13672,1 @@\n-            (unsigned long)($src2$$constant));\n+            (uint64_t)($src2$$constant));\n@@ -13440,1 +13705,1 @@\n-            (unsigned long)($src2$$constant));\n+            (uint64_t)($src2$$constant));\n@@ -13472,1 +13737,1 @@\n-           (unsigned long)($src2$$constant));\n+           (uint64_t)($src2$$constant));\n@@ -13504,1 +13769,1 @@\n-           (unsigned long)($src2$$constant));\n+           (uint64_t)($src2$$constant));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":296,"deletions":31,"binary":false,"changes":327,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2014, 2020, Red Hat Inc. All rights reserved.\n@@ -1400,1 +1400,1 @@\n-      __ ldr(rscratch1, Address(klass_RInfo, long(k->super_check_offset())));\n+      __ ldr(rscratch1, Address(klass_RInfo, int64_t(k->super_check_offset())));\n@@ -2486,1 +2486,0 @@\n-  int shift_amount;\n@@ -2877,1 +2876,1 @@\n-  unsigned long offset;\n+  uint64_t offset;\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2014, 2020, Red Hat Inc. All rights reserved.\n@@ -657,2 +657,2 @@\n-    unsigned long *p = (unsigned long *)fp;                             \\\n-    printf(\"0x%016lx 0x%016lx %s\\n\", (unsigned long)(p + frame::name##_offset), \\\n+    uintptr_t *p = (uintptr_t *)fp;                                     \\\n+    printf(\"0x%016lx 0x%016lx %s\\n\", (uintptr_t)(p + frame::name##_offset), \\\n@@ -662,3 +662,3 @@\n-static __thread unsigned long nextfp;\n-static __thread unsigned long nextpc;\n-static __thread unsigned long nextsp;\n+static __thread uintptr_t nextfp;\n+static __thread uintptr_t nextpc;\n+static __thread uintptr_t nextsp;\n@@ -683,1 +683,1 @@\n-void internal_pf(unsigned long sp, unsigned long fp, unsigned long pc, unsigned long bcx) {\n+void internal_pf(uintptr_t sp, uintptr_t fp, uintptr_t pc, uintptr_t bcx) {\n@@ -697,1 +697,1 @@\n-  unsigned long *p = (unsigned long *)fp;\n+  uintptr_t *p = (uintptr_t *)fp;\n@@ -707,3 +707,3 @@\n-    nextfp = (unsigned long)sender.fp();\n-    nextpc = (unsigned long)sender.pc();\n-    nextsp = (unsigned long)sender.unextended_sp();\n+    nextfp = (uintptr_t)sender.fp();\n+    nextpc = (uintptr_t)sender.pc();\n+    nextsp = (uintptr_t)sender.unextended_sp();\n@@ -713,1 +713,1 @@\n-    nextsp = (unsigned long)&p[frame::sender_sp_offset];\n+    nextsp = (uintptr_t)&p[frame::sender_sp_offset];\n@@ -716,1 +716,1 @@\n-  if (bcx == -1ul)\n+  if (bcx == -1ULL)\n@@ -750,2 +750,2 @@\n-extern \"C\" void pf(unsigned long sp, unsigned long fp, unsigned long pc,\n-                   unsigned long bcx, unsigned long thread) {\n+extern \"C\" void pf(uintptr_t sp, uintptr_t fp, uintptr_t pc,\n+                   uintptr_t bcx, uintptr_t thread) {\n@@ -770,1 +770,1 @@\n-extern \"C\" void pm(unsigned long fp, unsigned long bcx) {\n+extern \"C\" void pm(uintptr_t fp, uintptr_t bcx) {\n@@ -772,1 +772,1 @@\n-  unsigned long *p = (unsigned long *)fp;\n+  uintptr_t *p = (uintptr_t *)fp;\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-      unsigned long offset;\n+      uint64_t offset;\n@@ -203,1 +203,1 @@\n-      unsigned long offset;\n+      uint64_t offset;\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shared\/barrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n-  __ mov(tmp, (long int)(in_bytes(ZThreadLocalData::address_bad_mask_offset()) -\n+  __ mov(tmp, (int64_t)(in_bytes(ZThreadLocalData::address_bad_mask_offset()) -\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2014, 2020, Red Hat Inc. All rights reserved.\n@@ -172,1 +172,1 @@\n-  unsigned long offset;\n+  uint64_t offset;\n@@ -802,1 +802,1 @@\n-    ands(swap_reg, swap_reg, (unsigned long)(7 - os::vm_page_size()));\n+    ands(swap_reg, swap_reg, (uint64_t)(7 - os::vm_page_size()));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Red Hat Inc. All rights reserved.\n@@ -358,1 +358,1 @@\n-      *_fp_identifiers |= (1 << _num_fp_args); \/\/ mark as double\n+      *_fp_identifiers |= (1ull << _num_fp_args); \/\/ mark as double\n@@ -394,1 +394,1 @@\n-  ssh.iterate(UCONST64(-1));\n+  ssh.iterate((uint64_t)CONST64(-1));\n","filename":"src\/hotspot\/cpu\/aarch64\/interpreterRT_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -74,2 +74,2 @@\n-  assert((uint64_t)target < (1ul << 48), \"48-bit overflow in address constant\");\n-  long offset = (target - branch) >> 2;\n+  assert((uint64_t)target < (1ull << 48), \"48-bit overflow in address constant\");\n+  intptr_t offset = (target - branch) >> 2;\n@@ -138,3 +138,3 @@\n-        long dest = ((long)target & 0xffffffffL) | ((long)branch & 0xffff00000000L);\n-        long pc_page = (long)branch >> 12;\n-        long adr_page = (long)dest >> 12;\n+        uintptr_t dest = ((uintptr_t)target & 0xffffffffULL) | ((uintptr_t)branch & 0xffff00000000ULL);\n+        uintptr_t pc_page = (uintptr_t)branch >> 12;\n+        uintptr_t adr_page = (uintptr_t)dest >> 12;\n@@ -209,1 +209,1 @@\n-  long offset = 0;\n+  intptr_t offset = 0;\n@@ -393,1 +393,1 @@\n-    unsigned long offset;\n+    uintptr_t offset;\n@@ -411,1 +411,1 @@\n-    unsigned long offset;\n+    uintptr_t offset;\n@@ -828,1 +828,1 @@\n-  \/\/ unsigned long offset;\n+  \/\/ uintptr_t offset;\n@@ -1760,1 +1760,1 @@\n-Address MacroAssembler::form_address(Register Rd, Register base, long byte_offset, int shift) {\n+Address MacroAssembler::form_address(Register Rd, Register base, int64_t byte_offset, int shift) {\n@@ -1775,2 +1775,2 @@\n-    unsigned long word_offset = byte_offset >> shift;\n-    unsigned long masked_offset = word_offset & 0xfff000;\n+    uint64_t word_offset = byte_offset >> shift;\n+    uint64_t masked_offset = word_offset & 0xfff000;\n@@ -2017,1 +2017,1 @@\n-    mov(rscratch2, (unsigned long)value);\n+    mov(rscratch2, (uint64_t)value);\n@@ -2769,2 +2769,2 @@\n-                                           long cur_offset,\n-                                           long prev_offset) const {\n+                                           int64_t cur_offset,\n+                                           int64_t prev_offset) const {\n@@ -2774,2 +2774,2 @@\n-      long pair_mask = size * 2 - 1;\n-      long offset = prev_offset > cur_offset ? cur_offset : prev_offset;\n+      int64_t pair_mask = size * 2 - 1;\n+      int64_t offset = prev_offset > cur_offset ? cur_offset : prev_offset;\n@@ -2781,1 +2781,1 @@\n-    long mask = size - 1;\n+    int64_t mask = size - 1;\n@@ -2814,2 +2814,2 @@\n-  long max_offset = 63 * prev_size_in_bytes;\n-  long min_offset = -64 * prev_size_in_bytes;\n+  int64_t max_offset = 63 * prev_size_in_bytes;\n+  int64_t min_offset = -64 * prev_size_in_bytes;\n@@ -2824,2 +2824,2 @@\n-  long cur_offset = adr.offset();\n-  long prev_offset = prev_ldst->offset();\n+  int64_t cur_offset = adr.offset();\n+  int64_t prev_offset = prev_ldst->offset();\n@@ -2842,1 +2842,1 @@\n-  long low_offset = prev_offset > cur_offset ? cur_offset : prev_offset;\n+  int64_t low_offset = prev_offset > cur_offset ? cur_offset : prev_offset;\n@@ -2867,1 +2867,1 @@\n-  long offset;\n+  int64_t offset;\n@@ -3413,1 +3413,1 @@\n-  unsigned long offset;\n+  uint64_t offset;\n@@ -3715,1 +3715,1 @@\n-  unsigned long offset;\n+  uint64_t offset;\n@@ -3744,1 +3744,1 @@\n-  unsigned long offset;\n+  uint64_t offset;\n@@ -4018,1 +4018,1 @@\n-      (1UL << log2_intptr(CompressedKlassPointers::range())) - 1;\n+      (1ULL << log2_intptr(CompressedKlassPointers::range())) - 1;\n@@ -4425,1 +4425,1 @@\n-void MacroAssembler::adrp(Register reg1, const Address &dest, unsigned long &byte_offset) {\n+void MacroAssembler::adrp(Register reg1, const Address &dest, uint64_t &byte_offset) {\n@@ -4427,5 +4427,5 @@\n-  unsigned long low_page = (unsigned long)CodeCache::low_bound() >> 12;\n-  unsigned long high_page = (unsigned long)(CodeCache::high_bound()-1) >> 12;\n-  unsigned long dest_page = (unsigned long)dest.target() >> 12;\n-  long offset_low = dest_page - low_page;\n-  long offset_high = dest_page - high_page;\n+  uint64_t low_page = (uint64_t)CodeCache::low_bound() >> 12;\n+  uint64_t high_page = (uint64_t)(CodeCache::high_bound()-1) >> 12;\n+  uint64_t dest_page = (uint64_t)dest.target() >> 12;\n+  int64_t offset_low = dest_page - low_page;\n+  int64_t offset_high = dest_page - high_page;\n@@ -4443,3 +4443,3 @@\n-    unsigned long target = (unsigned long)dest.target();\n-    unsigned long adrp_target\n-      = (target & 0xffffffffUL) | ((unsigned long)pc() & 0xffff00000000UL);\n+    uint64_t target = (uint64_t)dest.target();\n+    uint64_t adrp_target\n+      = (target & 0xffffffffULL) | ((uint64_t)pc() & 0xffff00000000ULL);\n@@ -4450,1 +4450,1 @@\n-  byte_offset = (unsigned long)dest.target() & 0xfff;\n+  byte_offset = (uint64_t)dest.target() & 0xfff;\n@@ -4460,1 +4460,1 @@\n-    unsigned long offset;\n+    uint64_t offset;\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":39,"deletions":39,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-  inline void mov(Register dst, long l)\n+  inline void mov(Register dst, int64_t l)\n@@ -514,1 +514,1 @@\n-    mov(dst, (long)i);\n+    mov(dst, (int64_t)i);\n@@ -1191,1 +1191,1 @@\n-  void adrp(Register reg1, const Address &dest, unsigned long &byte_offset);\n+  void adrp(Register reg1, const Address &dest, uint64_t &byte_offset);\n@@ -1239,1 +1239,1 @@\n-  Address form_address(Register Rd, Register base, long byte_offset, int shift);\n+  Address form_address(Register Rd, Register base, int64_t byte_offset, int shift);\n@@ -1264,1 +1264,1 @@\n-      unsigned long offset;\n+      uint64_t offset;\n@@ -1364,1 +1364,1 @@\n-  bool merge_alignment_check(Register base, size_t size, long cur_offset, long prev_offset) const;\n+  bool merge_alignment_check(Register base, size_t size, int64_t cur_offset, int64_t prev_offset) const;\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -502,1 +502,1 @@\n-    \/\/ However to make thing extra confusing. Because we can fit a long\/double in\n+    \/\/ However to make thing extra confusing. Because we can fit a Java long\/double in\n@@ -1981,1 +1981,1 @@\n-    unsigned long offset;\n+    uint64_t offset;\n@@ -2196,1 +2196,1 @@\n-    unsigned long offset;\n+    uint64_t offset;\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -715,1 +715,0 @@\n-    int offset;\n@@ -3301,2 +3300,2 @@\n-    unsigned long BASE = 0xfff1;\n-    unsigned long NMAX = 0x15B0;\n+    uint64_t BASE = 0xfff1;\n+    uint64_t NMAX = 0x15B0;\n@@ -5399,6 +5398,6 @@\n-    \/\/ montgomery_multiply(unsigned long Pa_base[], unsigned long Pb_base[],\n-    \/\/                     unsigned long Pn_base[], unsigned long Pm_base[],\n-    \/\/                     unsigned long inv, int len) {\n-    \/\/   unsigned long t0 = 0, t1 = 0, t2 = 0; \/\/ Triple-precision accumulator\n-    \/\/   unsigned long *Pa, *Pb, *Pn, *Pm;\n-    \/\/   unsigned long Ra, Rb, Rn, Rm;\n+    \/\/ montgomery_multiply(julong Pa_base[], julong Pb_base[],\n+    \/\/                     julong Pn_base[], julong Pm_base[],\n+    \/\/                     julong inv, int len) {\n+    \/\/   julong t0 = 0, t1 = 0, t2 = 0; \/\/ Triple-precision accumulator\n+    \/\/   julong *Pa, *Pb, *Pn, *Pm;\n+    \/\/   julong Ra, Rb, Rn, Rm;\n@@ -5612,5 +5611,5 @@\n-    \/\/ montgomery_square(unsigned long Pa_base[], unsigned long Pn_base[],\n-    \/\/                   unsigned long Pm_base[], unsigned long inv, int len) {\n-    \/\/   unsigned long t0 = 0, t1 = 0, t2 = 0; \/\/ Triple-precision accumulator\n-    \/\/   unsigned long *Pa, *Pb, *Pn, *Pm;\n-    \/\/   unsigned long Ra, Rb, Rn, Rm;\n+    \/\/ montgomery_square(julong Pa_base[], julong Pn_base[],\n+    \/\/                   julong Pm_base[], julong inv, int len) {\n+    \/\/   julong t0 = 0, t1 = 0, t2 = 0; \/\/ Triple-precision accumulator\n+    \/\/   julong *Pa, *Pb, *Pn, *Pm;\n+    \/\/   julong Ra, Rb, Rn, Rm;\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2014, 2019, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2014, 2020, Red Hat Inc. All rights reserved.\n@@ -1004,1 +1004,1 @@\n-    unsigned long offset;\n+    uint64_t offset;\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -417,0 +417,1 @@\n+    __ resolve_oop_handle(tmp);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1210,3 +1210,2 @@\n-    Label unused;\n-    gen_c2i_adapter(masm, sig_cc_ro, regs_cc_ro, skip_fixup, i2c_entry, oop_maps, frame_complete, frame_size_in_words, false);\n-    skip_fixup = unused;\n+    Label inline_ro_skip_fixup;\n+    gen_c2i_adapter(masm, sig_cc_ro, regs_cc_ro, inline_ro_skip_fixup, i2c_entry, oop_maps, frame_complete, frame_size_in_words, false);\n@@ -1256,1 +1255,0 @@\n-    Label unused;\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -454,0 +454,1 @@\n+    __ resolve_oop_handle(tmp);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -736,1 +736,1 @@\n-              \"(%u cores per cpu, %u threads per core) family %d model %d stepping %d\"\n+              \"(%u cores per cpu, %u threads per core) family %d model %d stepping %d microcode 0x%x\"\n@@ -740,1 +740,1 @@\n-               cpu_family(), _model, _stepping,\n+               cpu_family(), _model, _stepping, os::cpu_microcode_revision(),\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-#include \"gc\/shared\/oopStorageSet.hpp\"\n@@ -64,0 +63,1 @@\n+#include \"memory\/universe.hpp\"\n@@ -502,1 +502,1 @@\n-    _holder = WeakHandle(OopStorageSet::vm_weak(), loader_or_mirror);\n+    _holder = WeakHandle(Universe::vm_weak(), loader_or_mirror);\n@@ -671,1 +671,1 @@\n-  _holder.release(OopStorageSet::vm_weak());\n+  _holder.release(Universe::vm_weak());\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -441,2 +441,1 @@\n-    JNIEnv *env = thread->jni_environment();\n-    jstring js = (jstring) JNIHandles::make_local(env, java_string());\n+    jstring js = (jstring) JNIHandles::make_local(thread, java_string());\n@@ -446,0 +445,1 @@\n+    JNIEnv *env = thread->jni_environment();\n@@ -2869,1 +2869,1 @@\n-  Handle mname(Thread::current(), stackFrame->obj_field(_memberName_offset));\n+  Handle mname(THREAD, stackFrame->obj_field(_memberName_offset));\n@@ -2872,1 +2872,1 @@\n-  MethodHandles::init_method_MemberName(mname, info);\n+  MethodHandles::init_method_MemberName(mname, info, THREAD);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-#include \"gc\/shared\/oopStorageSet.hpp\"\n@@ -182,1 +181,1 @@\n-  _java_system_loader = OopHandle(OopStorageSet::vm_global(), (oop)result.get_jobject());\n+  _java_system_loader = OopHandle(Universe::vm_global(), (oop)result.get_jobject());\n@@ -190,1 +189,1 @@\n-  _java_platform_loader = OopHandle(OopStorageSet::vm_global(), (oop)result.get_jobject());\n+  _java_platform_loader = OopHandle(Universe::vm_global(), (oop)result.get_jobject());\n@@ -2124,1 +2123,1 @@\n-  _system_loader_lock_obj = OopHandle(OopStorageSet::vm_global(), lock_obj);\n+  _system_loader_lock_obj = OopHandle(Universe::vm_global(), lock_obj);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -300,1 +300,0 @@\n-  JNIEnv *env = thread->jni_environment();\n@@ -309,1 +308,1 @@\n-  ResourceMark rm(THREAD);\n+  ResourceMark rm(thread);\n@@ -312,1 +311,1 @@\n-  jclass cls = (jclass) JNIHandles::make_local(env, klass->java_mirror());\n+  jclass cls = (jclass) JNIHandles::make_local(thread, klass->java_mirror());\n@@ -320,1 +319,1 @@\n-\n+    JNIEnv *env = thread->jni_environment();\n","filename":"src\/hotspot\/share\/classfile\/verifier.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n-#include \"services\/management.hpp\"\n@@ -2024,8 +2023,0 @@\n-    case ParallelRootType::management:\n-      Management::oops_do(&mark_and_push_closure);\n-      break;\n-\n-    case ParallelRootType::jvmti:\n-      JvmtiExport::oops_do(&mark_and_push_closure);\n-      break;\n-\n@@ -2244,2 +2235,0 @@\n-  Management::oops_do(&oop_closure);\n-  JvmtiExport::oops_do(&oop_closure);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -81,15 +81,0 @@\n-class UnlockFlagSaver {\n-  private:\n-    JavaThread* _thread;\n-    bool _do_not_unlock;\n-  public:\n-    UnlockFlagSaver(JavaThread* t) {\n-      _thread = t;\n-      _do_not_unlock = t->do_not_unlock_if_synchronized();\n-      t->set_do_not_unlock_if_synchronized(false);\n-    }\n-    ~UnlockFlagSaver() {\n-      _thread->set_do_not_unlock_if_synchronized(_do_not_unlock);\n-    }\n-};\n-\n@@ -1280,0 +1265,3 @@\n+  if (HAS_PENDING_EXCEPTION) {\n+    return NULL;\n+  }\n@@ -1290,1 +1278,0 @@\n-  assert(!HAS_PENDING_EXCEPTION, \"Should not have any exceptions pending\");\n@@ -1333,0 +1320,3 @@\n+  if (HAS_PENDING_EXCEPTION) {\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":6,"deletions":16,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-  return JNIHandles::make_local(obj);\n+  return JNIHandles::make_local(THREAD, obj);\n@@ -1041,1 +1041,1 @@\n-    return JNIHandles::make_local((oop) result.get_jobject());\n+    return JNIHandles::make_local(THREAD, (oop) result.get_jobject());\n@@ -2317,1 +2317,1 @@\n-  jlongArray info = (jlongArray) JNIHandles::make_local(info_oop);\n+  jlongArray info = (jlongArray) JNIHandles::make_local(THREAD, info_oop);\n@@ -2568,1 +2568,1 @@\n-  return JNIHandles::make_local(env, reflected);\n+  return JNIHandles::make_local(THREAD, reflected);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+#include \"gc\/shared\/oopStorageSet.hpp\"\n@@ -62,0 +63,1 @@\n+#include \"oops\/oopHandle.inline.hpp\"\n@@ -108,3 +110,30 @@\n-oop Universe::_main_thread_group                      = NULL;\n-oop Universe::_system_thread_group                    = NULL;\n-objArrayOop Universe::_the_empty_class_klass_array    = NULL;\n+\n+OopHandle Universe::_main_thread_group;\n+OopHandle Universe::_system_thread_group;\n+OopHandle Universe::_the_empty_class_array;\n+OopHandle Universe::_the_null_string;\n+OopHandle Universe::_the_min_jint_string;\n+\n+OopHandle Universe::_the_null_sentinel;\n+\n+\/\/ _out_of_memory_errors is an objArray\n+enum OutOfMemoryInstance { _oom_java_heap,\n+                           _oom_metaspace,\n+                           _oom_class_metaspace,\n+                           _oom_array_size,\n+                           _oom_gc_overhead_limit,\n+                           _oom_realloc_objects,\n+                           _oom_retry,\n+                           _oom_count };\n+\n+OopHandle Universe::_out_of_memory_errors;\n+OopHandle Universe::_delayed_stack_overflow_error_message;\n+OopHandle Universe::_preallocated_out_of_memory_error_array;\n+volatile jint Universe::_preallocated_out_of_memory_error_avail_count = 0;\n+\n+OopHandle Universe::_null_ptr_exception_instance;\n+OopHandle Universe::_arithmetic_exception_instance;\n+OopHandle Universe::_virtual_machine_error_instance;\n+\n+oop Universe::_reference_pending_list = NULL;\n+\n@@ -112,3 +141,0 @@\n-oop Universe::_the_null_sentinel                      = NULL;\n-oop Universe::_the_null_string                        = NULL;\n-oop Universe::_the_min_jint_string                   = NULL;\n@@ -122,10 +148,1 @@\n-oop Universe::_out_of_memory_error_java_heap          = NULL;\n-oop Universe::_out_of_memory_error_metaspace          = NULL;\n-oop Universe::_out_of_memory_error_class_metaspace    = NULL;\n-oop Universe::_out_of_memory_error_array_size         = NULL;\n-oop Universe::_out_of_memory_error_gc_overhead_limit  = NULL;\n-oop Universe::_out_of_memory_error_realloc_objects    = NULL;\n-oop Universe::_out_of_memory_error_retry              = NULL;\n-oop Universe::_delayed_stack_overflow_error_message   = NULL;\n-objArrayOop Universe::_preallocated_out_of_memory_error_array = NULL;\n-volatile jint Universe::_preallocated_out_of_memory_error_avail_count = 0;\n+\n@@ -134,5 +151,0 @@\n-oop Universe::_null_ptr_exception_instance            = NULL;\n-oop Universe::_arithmetic_exception_instance          = NULL;\n-oop Universe::_virtual_machine_error_instance         = NULL;\n-oop Universe::_vm_exception                           = NULL;\n-oop Universe::_reference_pending_list                 = NULL;\n@@ -148,2 +160,2 @@\n-debug_only(objArrayOop Universe::_fullgc_alot_dummy_array = NULL;)\n-debug_only(int Universe::_fullgc_alot_dummy_next      = 0;)\n+debug_only(OopHandle Universe::_fullgc_alot_dummy_array;)\n+debug_only(int Universe::_fullgc_alot_dummy_next = 0;)\n@@ -166,0 +178,3 @@\n+OopStorage*     Universe::_vm_weak = NULL;\n+OopStorage*     Universe::_vm_global = NULL;\n+\n@@ -168,0 +183,19 @@\n+objArrayOop Universe::the_empty_class_array ()  {\n+  return (objArrayOop)_the_empty_class_array.resolve();\n+}\n+\n+oop Universe::main_thread_group()                 { return _main_thread_group.resolve(); }\n+void Universe::set_main_thread_group(oop group)   { _main_thread_group = OopHandle(vm_global(), group); }\n+\n+oop Universe::system_thread_group()               { return _system_thread_group.resolve(); }\n+void Universe::set_system_thread_group(oop group) { _system_thread_group = OopHandle(vm_global(), group); }\n+\n+oop Universe::the_null_string()                   { return _the_null_string.resolve(); }\n+oop Universe::the_min_jint_string()               { return _the_min_jint_string.resolve(); }\n+\n+oop Universe::null_ptr_exception_instance()       { return _null_ptr_exception_instance.resolve(); }\n+oop Universe::arithmetic_exception_instance()     { return _arithmetic_exception_instance.resolve(); }\n+oop Universe::virtual_machine_error_instance()    { return _virtual_machine_error_instance.resolve(); }\n+\n+oop Universe::the_null_sentinel()                 { return _the_null_sentinel.resolve(); }\n+\n@@ -187,1 +221,1 @@\n-    f->do_oop((oop*) &_mirrors[i]);\n+    f->do_oop(&_mirrors[i]);\n@@ -191,21 +225,1 @@\n-  f->do_oop((oop*)&_the_empty_class_klass_array);\n-  f->do_oop((oop*)&_the_null_sentinel);\n-  f->do_oop((oop*)&_the_null_string);\n-  f->do_oop((oop*)&_the_min_jint_string);\n-  f->do_oop((oop*)&_out_of_memory_error_java_heap);\n-  f->do_oop((oop*)&_out_of_memory_error_metaspace);\n-  f->do_oop((oop*)&_out_of_memory_error_class_metaspace);\n-  f->do_oop((oop*)&_out_of_memory_error_array_size);\n-  f->do_oop((oop*)&_out_of_memory_error_gc_overhead_limit);\n-  f->do_oop((oop*)&_out_of_memory_error_realloc_objects);\n-  f->do_oop((oop*)&_out_of_memory_error_retry);\n-  f->do_oop((oop*)&_delayed_stack_overflow_error_message);\n-  f->do_oop((oop*)&_preallocated_out_of_memory_error_array);\n-  f->do_oop((oop*)&_null_ptr_exception_instance);\n-  f->do_oop((oop*)&_arithmetic_exception_instance);\n-  f->do_oop((oop*)&_virtual_machine_error_instance);\n-  f->do_oop((oop*)&_main_thread_group);\n-  f->do_oop((oop*)&_system_thread_group);\n-  f->do_oop((oop*)&_vm_exception);\n-  f->do_oop((oop*)&_reference_pending_list);\n-  debug_only(f->do_oop((oop*)&_fullgc_alot_dummy_array);)\n+  f->do_oop(&_reference_pending_list);\n@@ -339,1 +353,5 @@\n-    Klass* ok = SystemDictionary::Object_klass();\n+    \/\/ Create string constants\n+    oop s = StringTable::intern(\"null\", CHECK);\n+    _the_null_string = OopHandle(vm_global(), s);\n+    s = StringTable::intern(\"-2147483648\", CHECK);\n+    _the_min_jint_string = OopHandle(vm_global(), s);\n@@ -341,2 +359,0 @@\n-    _the_null_string            = StringTable::intern(\"null\", CHECK);\n-    _the_min_jint_string       = StringTable::intern(\"-2147483648\", CHECK);\n@@ -377,1 +393,1 @@\n-    _the_null_sentinel = tns();\n+    _the_null_sentinel = OopHandle(vm_global(), tns());\n@@ -412,1 +428,0 @@\n-    \/\/ We can allocate directly in the permanent generation, so we do.\n@@ -428,2 +443,2 @@\n-      if (_fullgc_alot_dummy_array == NULL) {\n-        _fullgc_alot_dummy_array = dummy_array();\n+      if (_fullgc_alot_dummy_array.is_empty()) {\n+        _fullgc_alot_dummy_array = OopHandle(vm_global(), dummy_array());\n@@ -432,1 +447,1 @@\n-    assert(i == _fullgc_alot_dummy_array->length(), \"just checking\");\n+    assert(i == ((objArrayOop)_fullgc_alot_dummy_array.resolve())->length(), \"just checking\");\n@@ -531,1 +546,1 @@\n-void Universe::set_reference_pending_list(oop list) {\n+void Universe::clear_reference_pending_list() {\n@@ -533,1 +548,1 @@\n-  _reference_pending_list = list;\n+  _reference_pending_list = NULL;\n@@ -585,0 +600,35 @@\n+\/\/ the array of preallocated errors with backtraces\n+objArrayOop Universe::preallocated_out_of_memory_errors() {\n+  return (objArrayOop)_preallocated_out_of_memory_error_array.resolve();\n+}\n+\n+objArrayOop Universe::out_of_memory_errors() { return (objArrayOop)_out_of_memory_errors.resolve(); }\n+\n+oop Universe::out_of_memory_error_java_heap() {\n+  return gen_out_of_memory_error(out_of_memory_errors()->obj_at(_oom_java_heap));\n+}\n+\n+oop Universe::out_of_memory_error_metaspace() {\n+  return gen_out_of_memory_error(out_of_memory_errors()->obj_at(_oom_metaspace));\n+}\n+\n+oop Universe::out_of_memory_error_class_metaspace() {\n+  return gen_out_of_memory_error(out_of_memory_errors()->obj_at(_oom_class_metaspace));\n+}\n+\n+oop Universe::out_of_memory_error_array_size() {\n+  return gen_out_of_memory_error(out_of_memory_errors()->obj_at(_oom_array_size));\n+}\n+\n+oop Universe::out_of_memory_error_gc_overhead_limit() {\n+  return gen_out_of_memory_error(out_of_memory_errors()->obj_at(_oom_gc_overhead_limit));\n+}\n+\n+oop Universe::out_of_memory_error_realloc_objects() {\n+  return gen_out_of_memory_error(out_of_memory_errors()->obj_at(_oom_realloc_objects));\n+}\n+\n+\/\/ Throw default _out_of_memory_error_retry object as it will never propagate out of the VM\n+oop Universe::out_of_memory_error_retry()              { return out_of_memory_errors()->obj_at(_oom_retry);  }\n+oop Universe::delayed_stack_overflow_error_message()   { return _delayed_stack_overflow_error_message.resolve(); }\n+\n@@ -592,7 +642,7 @@\n-  return ((throwable() != Universe::_out_of_memory_error_java_heap) &&\n-          (throwable() != Universe::_out_of_memory_error_metaspace)  &&\n-          (throwable() != Universe::_out_of_memory_error_class_metaspace)  &&\n-          (throwable() != Universe::_out_of_memory_error_array_size) &&\n-          (throwable() != Universe::_out_of_memory_error_gc_overhead_limit) &&\n-          (throwable() != Universe::_out_of_memory_error_realloc_objects) &&\n-          (throwable() != Universe::_out_of_memory_error_retry));\n+  objArrayOop preallocated_oom = out_of_memory_errors();\n+  for (int i = 0; i < _oom_count; i++) {\n+    if (throwable() == preallocated_oom->obj_at(i)) {\n+      return false;\n+    }\n+  }\n+  return true;\n@@ -641,0 +691,48 @@\n+\/\/ Setup preallocated OutOfMemoryError errors\n+void Universe::create_preallocated_out_of_memory_errors(TRAPS) {\n+  InstanceKlass* ik = SystemDictionary::OutOfMemoryError_klass();\n+  objArrayOop oa = oopFactory::new_objArray(ik, _oom_count, CHECK);\n+  objArrayHandle oom_array(THREAD, oa);\n+\n+  for (int i = 0; i < _oom_count; i++) {\n+    oop oom_obj = ik->allocate_instance(CHECK);\n+    oom_array->obj_at_put(i, oom_obj);\n+  }\n+  _out_of_memory_errors = OopHandle(vm_global(), oom_array());\n+\n+  Handle msg = java_lang_String::create_from_str(\"Java heap space\", CHECK);\n+  java_lang_Throwable::set_message(oom_array->obj_at(_oom_java_heap), msg());\n+\n+  msg = java_lang_String::create_from_str(\"Metaspace\", CHECK);\n+  java_lang_Throwable::set_message(oom_array->obj_at(_oom_metaspace), msg());\n+\n+  msg = java_lang_String::create_from_str(\"Compressed class space\", CHECK);\n+  java_lang_Throwable::set_message(oom_array->obj_at(_oom_class_metaspace), msg());\n+\n+  msg = java_lang_String::create_from_str(\"Requested array size exceeds VM limit\", CHECK);\n+  java_lang_Throwable::set_message(oom_array->obj_at(_oom_array_size), msg());\n+\n+  msg = java_lang_String::create_from_str(\"GC overhead limit exceeded\", CHECK);\n+  java_lang_Throwable::set_message(oom_array->obj_at(_oom_gc_overhead_limit), msg());\n+\n+  msg = java_lang_String::create_from_str(\"Java heap space: failed reallocation of scalar replaced objects\", CHECK);\n+  java_lang_Throwable::set_message(oom_array->obj_at(_oom_realloc_objects), msg());\n+\n+  msg = java_lang_String::create_from_str(\"Java heap space: failed retryable allocation\", CHECK);\n+  java_lang_Throwable::set_message(oom_array->obj_at(_oom_retry), msg());\n+\n+  \/\/ Setup the array of errors that have preallocated backtrace\n+  int len = (StackTraceInThrowable) ? (int)PreallocatedOutOfMemoryErrorCount : 0;\n+  objArrayOop instance = oopFactory::new_objArray(ik, len, CHECK);\n+  _preallocated_out_of_memory_error_array = OopHandle(vm_global(), instance);\n+  objArrayHandle preallocated_oom_array(THREAD, instance);\n+\n+  for (int i=0; i<len; i++) {\n+    oop err = ik->allocate_instance(CHECK);\n+    Handle err_h(THREAD, err);\n+    java_lang_Throwable::allocate_backtrace(err_h, CHECK);\n+    preallocated_oom_array->obj_at_put(i, err_h());\n+  }\n+  _preallocated_out_of_memory_error_avail_count = (jint)len;\n+}\n+\n@@ -816,0 +914,17 @@\n+OopStorage* Universe::vm_weak() {\n+  return Universe::_vm_weak;\n+}\n+\n+OopStorage* Universe::vm_global() {\n+  return Universe::_vm_global;\n+}\n+\n+void Universe::oopstorage_init() {\n+  Universe::_vm_global = OopStorageSet::create_strong(\"VM Global\");\n+  Universe::_vm_weak = OopStorageSet::create_weak(\"VM Weak\");\n+}\n+\n+void universe_oopstorage_init() {\n+  Universe::oopstorage_init();\n+}\n+\n@@ -899,2 +1014,4 @@\n-  \/\/ Setup preallocated empty java.lang.Class array\n-  Universe::_the_empty_class_klass_array = oopFactory::new_objArray(SystemDictionary::Class_klass(), 0, CHECK_false);\n+  \/\/ Setup preallocated empty java.lang.Class array for Method reflection.\n+\n+  objArrayOop the_empty_class_array = oopFactory::new_objArray(SystemDictionary::Class_klass(), 0, CHECK_false);\n+  Universe::_the_empty_class_array = OopHandle(Universe::vm_global(), the_empty_class_array);\n@@ -903,10 +1020,1 @@\n-  Klass* k = SystemDictionary::OutOfMemoryError_klass();\n-  InstanceKlass* ik = InstanceKlass::cast(k);\n-  Universe::_out_of_memory_error_java_heap = ik->allocate_instance(CHECK_false);\n-  Universe::_out_of_memory_error_metaspace = ik->allocate_instance(CHECK_false);\n-  Universe::_out_of_memory_error_class_metaspace = ik->allocate_instance(CHECK_false);\n-  Universe::_out_of_memory_error_array_size = ik->allocate_instance(CHECK_false);\n-  Universe::_out_of_memory_error_gc_overhead_limit =\n-    ik->allocate_instance(CHECK_false);\n-  Universe::_out_of_memory_error_realloc_objects = ik->allocate_instance(CHECK_false);\n-  Universe::_out_of_memory_error_retry = ik->allocate_instance(CHECK_false);\n+  Universe::create_preallocated_out_of_memory_errors(CHECK_false);\n@@ -914,0 +1022,1 @@\n+  oop instance;\n@@ -916,2 +1025,2 @@\n-    Universe::_delayed_stack_overflow_error_message =\n-      java_lang_String::create_oop_from_str(\"Delayed StackOverflowError due to ReservedStackAccess annotated method\", CHECK_false);\n+    instance = java_lang_String::create_oop_from_str(\"Delayed StackOverflowError due to ReservedStackAccess annotated method\", CHECK_false);\n+    Universe::_delayed_stack_overflow_error_message = OopHandle(Universe::vm_global(), instance);\n@@ -922,2 +1031,4 @@\n-  k = SystemDictionary::resolve_or_fail(vmSymbols::java_lang_NullPointerException(), true, CHECK_false);\n-  Universe::_null_ptr_exception_instance = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n+  Klass* k = SystemDictionary::resolve_or_fail(vmSymbols::java_lang_NullPointerException(), true, CHECK_false);\n+  instance = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n+  Universe::_null_ptr_exception_instance = OopHandle(Universe::vm_global(), instance);\n+\n@@ -927,1 +1038,3 @@\n-  Universe::_arithmetic_exception_instance = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n+  instance = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n+  Universe::_arithmetic_exception_instance = OopHandle(Universe::vm_global(), instance);\n+\n@@ -935,15 +1048,2 @@\n-  Universe::_virtual_machine_error_instance =\n-    InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n-\n-  Universe::_vm_exception = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n-\n-  Handle msg = java_lang_String::create_from_str(\"Java heap space\", CHECK_false);\n-  java_lang_Throwable::set_message(Universe::_out_of_memory_error_java_heap, msg());\n-\n-  msg = java_lang_String::create_from_str(\"Metaspace\", CHECK_false);\n-  java_lang_Throwable::set_message(Universe::_out_of_memory_error_metaspace, msg());\n-  msg = java_lang_String::create_from_str(\"Compressed class space\", CHECK_false);\n-  java_lang_Throwable::set_message(Universe::_out_of_memory_error_class_metaspace, msg());\n-\n-  msg = java_lang_String::create_from_str(\"Requested array size exceeds VM limit\", CHECK_false);\n-  java_lang_Throwable::set_message(Universe::_out_of_memory_error_array_size, msg());\n+  instance = InstanceKlass::cast(k)->allocate_instance(CHECK_false);\n+  Universe::_virtual_machine_error_instance = OopHandle(Universe::vm_global(), instance);\n@@ -951,2 +1051,2 @@\n-  msg = java_lang_String::create_from_str(\"GC overhead limit exceeded\", CHECK_false);\n-  java_lang_Throwable::set_message(Universe::_out_of_memory_error_gc_overhead_limit, msg());\n+  Handle msg = java_lang_String::create_from_str(\"\/ by zero\", CHECK_false);\n+  java_lang_Throwable::set_message(Universe::arithmetic_exception_instance(), msg());\n@@ -954,23 +1054,0 @@\n-  msg = java_lang_String::create_from_str(\"Java heap space: failed reallocation of scalar replaced objects\", CHECK_false);\n-  java_lang_Throwable::set_message(Universe::_out_of_memory_error_realloc_objects, msg());\n-\n-  msg = java_lang_String::create_from_str(\"Java heap space: failed retryable allocation\", CHECK_false);\n-  java_lang_Throwable::set_message(Universe::_out_of_memory_error_retry, msg());\n-\n-  msg = java_lang_String::create_from_str(\"\/ by zero\", CHECK_false);\n-  java_lang_Throwable::set_message(Universe::_arithmetic_exception_instance, msg());\n-\n-  \/\/ Setup the array of errors that have preallocated backtrace\n-  k = Universe::_out_of_memory_error_java_heap->klass();\n-  assert(k->name() == vmSymbols::java_lang_OutOfMemoryError(), \"should be out of memory error\");\n-  ik = InstanceKlass::cast(k);\n-\n-  int len = (StackTraceInThrowable) ? (int)PreallocatedOutOfMemoryErrorCount : 0;\n-  Universe::_preallocated_out_of_memory_error_array = oopFactory::new_objArray(ik, len, CHECK_false);\n-  for (int i=0; i<len; i++) {\n-    oop err = ik->allocate_instance(CHECK_false);\n-    Handle err_h = Handle(THREAD, err);\n-    java_lang_Throwable::allocate_backtrace(err_h, CHECK_false);\n-    Universe::preallocated_out_of_memory_errors()->obj_at_put(i, err_h());\n-  }\n-  Universe::_preallocated_out_of_memory_error_avail_count = (jint)len;\n@@ -1242,2 +1319,3 @@\n-  if (_fullgc_alot_dummy_array != NULL) {\n-    if (_fullgc_alot_dummy_next >= _fullgc_alot_dummy_array->length()) {\n+  objArrayOop fullgc_alot_dummy_array = (objArrayOop)_fullgc_alot_dummy_array.resolve();\n+  if (fullgc_alot_dummy_array != NULL) {\n+    if (_fullgc_alot_dummy_next >= fullgc_alot_dummy_array->length()) {\n@@ -1245,1 +1323,1 @@\n-      _fullgc_alot_dummy_array = NULL;\n+      _fullgc_alot_dummy_array.release(Universe::vm_global());\n@@ -1250,4 +1328,1 @@\n-    _fullgc_alot_dummy_array->obj_at_put(_fullgc_alot_dummy_next++, NULL);\n-\n-    \/\/ Release dummy at bottom of permanent generation\n-    _fullgc_alot_dummy_array->obj_at_put(_fullgc_alot_dummy_next++, NULL);\n+    fullgc_alot_dummy_array->obj_at_put(_fullgc_alot_dummy_next++, NULL);\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":201,"deletions":126,"binary":false,"changes":327,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"oops\/oopHandle.hpp\"\n@@ -43,1 +44,1 @@\n-\n+class OopStorage;\n@@ -109,2 +110,14 @@\n-  static oop          _main_thread_group;             \/\/ Reference to the main thread group object\n-  static oop          _system_thread_group;           \/\/ Reference to the system thread group object\n+  static OopHandle    _main_thread_group;             \/\/ Reference to the main thread group object\n+  static OopHandle    _system_thread_group;           \/\/ Reference to the system thread group object\n+\n+  static OopHandle    _the_empty_class_array;         \/\/ Canonicalized obj array of type java.lang.Class\n+  static OopHandle    _the_null_string;               \/\/ A cache of \"null\" as a Java string\n+  static OopHandle    _the_min_jint_string;           \/\/ A cache of \"-2147483648\" as a Java string\n+\n+  static OopHandle    _the_null_sentinel;             \/\/ A unique object pointer unused except as a sentinel for null.\n+\n+  \/\/ preallocated error objects (no backtrace)\n+  static OopHandle    _out_of_memory_errors;\n+\n+  \/\/ preallocated cause message for delayed StackOverflowError\n+  static OopHandle    _delayed_stack_overflow_error_message;\n@@ -112,4 +125,0 @@\n-  static objArrayOop  _the_empty_class_klass_array;   \/\/ Canonicalized obj array of type java.lang.Class\n-  static oop          _the_null_sentinel;             \/\/ A unique object pointer unused except as a sentinel for null.\n-  static oop          _the_null_string;               \/\/ A cache of \"null\" as a Java string\n-  static oop          _the_min_jint_string;          \/\/ A cache of \"-2147483648\" as a Java string\n@@ -124,12 +133,0 @@\n-  \/\/ preallocated error objects (no backtrace)\n-  static oop          _out_of_memory_error_java_heap;\n-  static oop          _out_of_memory_error_metaspace;\n-  static oop          _out_of_memory_error_class_metaspace;\n-  static oop          _out_of_memory_error_array_size;\n-  static oop          _out_of_memory_error_gc_overhead_limit;\n-  static oop          _out_of_memory_error_realloc_objects;\n-  static oop          _out_of_memory_error_retry;\n-\n-  \/\/ preallocated cause message for delayed StackOverflowError\n-  static oop          _delayed_stack_overflow_error_message;\n-\n@@ -146,1 +143,1 @@\n-  static objArrayOop   _preallocated_out_of_memory_error_array;\n+  static OopHandle     _preallocated_out_of_memory_error_array;\n@@ -151,6 +148,3 @@\n-  static oop          _null_ptr_exception_instance;   \/\/ preallocated exception object\n-  static oop          _arithmetic_exception_instance; \/\/ preallocated exception object\n-  static oop          _virtual_machine_error_instance; \/\/ preallocated exception object\n-  \/\/ The object used as an exception dummy when exceptions are thrown for\n-  \/\/ the vm thread.\n-  static oop          _vm_exception;\n+  static OopHandle    _null_ptr_exception_instance;   \/\/ preallocated exception object\n+  static OopHandle    _arithmetic_exception_instance; \/\/ preallocated exception object\n+  static OopHandle    _virtual_machine_error_instance; \/\/ preallocated exception object\n@@ -168,2 +162,1 @@\n-  debug_only(static objArrayOop _fullgc_alot_dummy_array;)\n-  \/\/ index of next entry to clear\n+  debug_only(static OopHandle   _fullgc_alot_dummy_array;)\n@@ -181,1 +174,1 @@\n-  static objArrayOop  preallocated_out_of_memory_errors()     { return _preallocated_out_of_memory_error_array; }\n+  static objArrayOop  preallocated_out_of_memory_errors();\n@@ -183,0 +176,1 @@\n+  static objArrayOop out_of_memory_errors();\n@@ -191,0 +185,3 @@\n+  static OopStorage* _vm_weak;\n+  static OopStorage* _vm_global;\n+\n@@ -269,2 +266,2 @@\n-  static oop      main_thread_group()                 { return _main_thread_group; }\n-  static void set_main_thread_group(oop group)        { _main_thread_group = group;}\n+  static oop      main_thread_group();\n+  static void set_main_thread_group(oop group);\n@@ -272,2 +269,2 @@\n-  static oop      system_thread_group()               { return _system_thread_group; }\n-  static void set_system_thread_group(oop group)      { _system_thread_group = group;}\n+  static oop      system_thread_group();\n+  static void set_system_thread_group(oop group);\n@@ -275,4 +272,1 @@\n-  static objArrayOop  the_empty_class_klass_array ()  { return _the_empty_class_klass_array;   }\n-  static Array<Klass*>* the_array_interfaces_array() { return _the_array_interfaces_array;   }\n-  static oop          the_null_string()               { return _the_null_string;               }\n-  static oop          the_min_jint_string()          { return _the_min_jint_string;          }\n+  static objArrayOop  the_empty_class_array ();\n@@ -280,0 +274,9 @@\n+  static oop          the_null_string();\n+  static oop          the_min_jint_string();\n+\n+  static oop          null_ptr_exception_instance();\n+  static oop          arithmetic_exception_instance();\n+  static oop          virtual_machine_error_instance();\n+  static oop          vm_exception()                  { return virtual_machine_error_instance(); }\n+\n+  static Array<Klass*>* the_array_interfaces_array()  { return _the_array_interfaces_array;   }\n@@ -291,1 +294,1 @@\n-  static oop          the_null_sentinel()             { return _the_null_sentinel;             }\n+  static oop          the_null_sentinel();\n@@ -297,4 +300,1 @@\n-  static oop          null_ptr_exception_instance()   { return _null_ptr_exception_instance;   }\n-  static oop          arithmetic_exception_instance() { return _arithmetic_exception_instance; }\n-  static oop          virtual_machine_error_instance() { return _virtual_machine_error_instance; }\n-  static oop          vm_exception()                  { return _vm_exception; }\n+  static void create_preallocated_out_of_memory_errors(TRAPS);\n@@ -309,1 +309,1 @@\n-  static void         set_reference_pending_list(oop list);\n+  static void         clear_reference_pending_list();\n@@ -328,6 +328,7 @@\n-  static oop out_of_memory_error_java_heap()          { return gen_out_of_memory_error(_out_of_memory_error_java_heap);  }\n-  static oop out_of_memory_error_metaspace()          { return gen_out_of_memory_error(_out_of_memory_error_metaspace);   }\n-  static oop out_of_memory_error_class_metaspace()    { return gen_out_of_memory_error(_out_of_memory_error_class_metaspace);   }\n-  static oop out_of_memory_error_array_size()         { return gen_out_of_memory_error(_out_of_memory_error_array_size); }\n-  static oop out_of_memory_error_gc_overhead_limit()  { return gen_out_of_memory_error(_out_of_memory_error_gc_overhead_limit);  }\n-  static oop out_of_memory_error_realloc_objects()    { return gen_out_of_memory_error(_out_of_memory_error_realloc_objects);  }\n+  static oop out_of_memory_error_java_heap();\n+  static oop out_of_memory_error_metaspace();\n+  static oop out_of_memory_error_class_metaspace();\n+  static oop out_of_memory_error_array_size();\n+  static oop out_of_memory_error_gc_overhead_limit();\n+  static oop out_of_memory_error_realloc_objects();\n+\n@@ -335,2 +336,2 @@\n-  static oop out_of_memory_error_retry()              { return _out_of_memory_error_retry;  }\n-  static oop delayed_stack_overflow_error_message()   { return _delayed_stack_overflow_error_message; }\n+  static oop out_of_memory_error_retry();\n+  static oop delayed_stack_overflow_error_message();\n@@ -349,0 +350,5 @@\n+  \/\/ Global OopStorages\n+  static OopStorage* vm_weak();\n+  static OopStorage* vm_global();\n+  static void oopstorage_init();\n+\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":57,"deletions":51,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -841,1 +841,1 @@\n-    return objArrayHandle(THREAD, Universe::the_empty_class_klass_array());\n+    return objArrayHandle(THREAD, Universe::the_empty_class_array());\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -239,0 +239,2 @@\n+macro(OpaqueLoopInit)\n+macro(OpaqueLoopStride)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1861,0 +1861,9 @@\n+    \/\/ With Opaque4 nodes, the expectation is that the test of input 1\n+    \/\/ is always equal to the constant value of input 2. So we can\n+    \/\/ remove the Opaque4 and replace it by input 2. In debug builds,\n+    \/\/ leave the non constant test in instead to sanity check that it\n+    \/\/ never fails (if it does, that subgraph was constructed so, at\n+    \/\/ runtime, a Halt node is executed).\n+#ifdef ASSERT\n+    igvn.replace_node(opaq, opaq->in(1));\n+#else\n@@ -1862,0 +1871,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -753,2 +753,1 @@\n-          && adr->in(AddPNode::Address)->is_Proj()\n-          && adr->in(AddPNode::Address)->in(0)->is_Allocate())) {\n+          && is_captured_store_address(adr))) {\n@@ -801,2 +800,1 @@\n-           && adr->in(AddPNode::Address)->is_Proj()\n-           && adr->in(AddPNode::Address)->in(0)->is_Allocate())) {\n+           && is_captured_store_address(adr))) {\n@@ -1620,2 +1618,1 @@\n-        assert(adr_type->isa_rawptr() && base->is_Proj() &&\n-               (base->in(0) == alloc),\"unexpected pointer type\");\n+        assert(adr_type->isa_rawptr() && is_captured_store_address(field->ideal_node()), \"unexpected pointer type\");\n@@ -1954,2 +1951,1 @@\n-    assert (alloc->is_Allocate(), \"storestore should point to AllocateNode\");\n-    if (not_global_escape(alloc)) {\n+    if (alloc->is_Allocate() && not_global_escape(alloc)) {\n@@ -2296,0 +2292,20 @@\n+bool ConnectionGraph::is_captured_store_address(Node* addp) {\n+  \/\/ Handle simple case first.\n+  assert(_igvn->type(addp)->isa_oopptr() == NULL, \"should be raw access\");\n+  if (addp->in(AddPNode::Address)->is_Proj() && addp->in(AddPNode::Address)->in(0)->is_Allocate()) {\n+    return true;\n+  } else if (addp->in(AddPNode::Address)->is_Phi()) {\n+    for (DUIterator_Fast imax, i = addp->fast_outs(imax); i < imax; i++) {\n+      Node* addp_use = addp->fast_out(i);\n+      if (addp_use->is_Store()) {\n+        for (DUIterator_Fast jmax, j = addp_use->fast_outs(jmax); j < jmax; j++) {\n+          if (addp_use->fast_out(j)->is_Initialize()) {\n+            return true;\n+          }\n+        }\n+      }\n+    }\n+  }\n+  return false;\n+}\n+\n@@ -2298,3 +2314,1 @@\n-  if (adr->is_AddP() && adr_type->isa_oopptr() == NULL &&\n-      adr->in(AddPNode::Address)->is_Proj() &&\n-      adr->in(AddPNode::Address)->in(0)->is_Allocate()) {\n+  if (adr->is_AddP() && adr_type->isa_oopptr() == NULL && is_captured_store_address(adr)) {\n@@ -2401,1 +2415,1 @@\n-             (uncast_base->is_Proj() && uncast_base->in(0)->is_Allocate()), \"sanity\");\n+             is_captured_store_address(addp), \"sanity\");\n@@ -3035,1 +3049,4 @@\n-        assert(!alloc->is_Allocate(), \"allocation should have unique type\");\n+        \/\/ we could reach here for allocate case if one init is associated with many allocs.\n+        if (alloc->is_Allocate()) {\n+          alloc->as_Allocate()->_is_scalar_replaceable = false;\n+        }\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":31,"deletions":14,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -794,1 +794,1 @@\n-  void copy_skeleton_predicates_to_main_loop_helper(Node* predicate, Node* start, Node* end, IdealLoopTree* outer_loop, LoopNode* outer_main_head,\n+  void copy_skeleton_predicates_to_main_loop_helper(Node* predicate, Node* init, Node* stride, IdealLoopTree* outer_loop, LoopNode* outer_main_head,\n@@ -797,1 +797,1 @@\n-  void copy_skeleton_predicates_to_main_loop(CountedLoopNode* pre_head, Node* start, Node* end, IdealLoopTree* outer_loop, LoopNode* outer_main_head,\n+  void copy_skeleton_predicates_to_main_loop(CountedLoopNode* pre_head, Node* init, Node* stride, IdealLoopTree* outer_loop, LoopNode* outer_main_head,\n@@ -800,1 +800,1 @@\n-  Node* clone_skeleton_predicate(Node* iff, Node* value, Node* predicate, Node* uncommon_proj,\n+  Node* clone_skeleton_predicate(Node* iff, Node* new_init, Node* new_stride, Node* predicate, Node* uncommon_proj,\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -962,2 +962,6 @@\n-  if( n_op == Op_MergeMem ) return n;\n-  if( n->is_Proj() ) return n;\n+  if (n_op == Op_MergeMem) {\n+    return n;\n+  }\n+  if (n->is_Proj()) {\n+    return n;\n+  }\n@@ -966,1 +970,3 @@\n-  if( n->is_Cmp() ) return n;\n+  if (n->is_Cmp()) {\n+    return n;\n+  }\n@@ -968,1 +974,1 @@\n-  if( ConditionalMoveLimit > 0 && n_op == Op_Region ) {\n+  if (ConditionalMoveLimit > 0 && n_op == Op_Region) {\n@@ -970,1 +976,3 @@\n-    if( cmov ) return cmov;\n+    if (cmov) {\n+      return cmov;\n+    }\n@@ -972,1 +980,1 @@\n-  if( n->is_CFG() || n->is_LoadStore() )\n+  if (n->is_CFG() || n->is_LoadStore()) {\n@@ -974,3 +982,4 @@\n-  if( n_op == Op_Opaque1 ||     \/\/ Opaque nodes cannot be mod'd\n-      n_op == Op_Opaque2 ) {\n-    if( !C->major_progress() )   \/\/ If chance of no more loop opts...\n+  }\n+  if (n->is_Opaque1() ||     \/\/ Opaque nodes cannot be mod'd\n+      n_op == Op_Opaque2) {\n+    if (!C->major_progress()) {   \/\/ If chance of no more loop opts...\n@@ -978,0 +987,1 @@\n+    }\n@@ -981,1 +991,3 @@\n-  if( n->is_Con() ) return n;   \/\/ No cloning for Con nodes\n+  if (n->is_Con()) {\n+    return n;   \/\/ No cloning for Con nodes\n+  }\n@@ -984,1 +996,3 @@\n-  if( !n_ctrl ) return n;       \/\/ Dead node\n+  if (!n_ctrl) {\n+    return n;       \/\/ Dead node\n+  }\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":25,"deletions":11,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2957,0 +2957,2 @@\n+      case Node::Class_Opaque1:\n+        break;\n@@ -2959,1 +2961,0 @@\n-               n->Opcode() == Op_Opaque1   ||\n@@ -2998,1 +2999,1 @@\n-      } else if (n->Opcode() == Op_Opaque1 || n->Opcode() == Op_Opaque2) {\n+      } else if (n->is_Opaque1() || n->Opcode() == Op_Opaque2) {\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1566,43 +1566,2 @@\n-\/\/------------------------------find------------------------------------------\n-\/\/ Find a neighbor of this Node with the given _idx\n-\/\/ If idx is negative, find its absolute value, following both _in and _out.\n-static void find_recur(Compile* C,  Node* &result, Node *n, int idx, bool only_ctrl,\n-                        VectorSet* old_space, VectorSet* new_space ) {\n-  int node_idx = (idx >= 0) ? idx : -idx;\n-  if (NotANode(n))  return;  \/\/ Gracefully handle NULL, -1, 0xabababab, etc.\n-  \/\/ Contained in new_space or old_space?   Check old_arena first since it's mostly empty.\n-  VectorSet *v = C->old_arena()->contains(n) ? old_space : new_space;\n-  if( v->test(n->_idx) ) return;\n-  if( (int)n->_idx == node_idx\n-      debug_only(|| n->debug_idx() == node_idx) ) {\n-    if (result != NULL)\n-      tty->print(\"find: \" INTPTR_FORMAT \" and \" INTPTR_FORMAT \" both have idx==%d\\n\",\n-                 (uintptr_t)result, (uintptr_t)n, node_idx);\n-    result = n;\n-  }\n-  v->set(n->_idx);\n-  for( uint i=0; i<n->len(); i++ ) {\n-    if( only_ctrl && !(n->is_Region()) && (n->Opcode() != Op_Root) && (i != TypeFunc::Control) ) continue;\n-    find_recur(C, result, n->in(i), idx, only_ctrl, old_space, new_space );\n-  }\n-  \/\/ Search along forward edges also:\n-  if (idx < 0 && !only_ctrl) {\n-    for( uint j=0; j<n->outcnt(); j++ ) {\n-      find_recur(C, result, n->raw_out(j), idx, only_ctrl, old_space, new_space );\n-    }\n-  }\n-#ifdef ASSERT\n-  \/\/ Search along debug_orig edges last, checking for cycles\n-  Node* orig = n->debug_orig();\n-  if (orig != NULL) {\n-    do {\n-      if (NotANode(orig))  break;\n-      find_recur(C, result, orig, idx, only_ctrl, old_space, new_space );\n-      orig = orig->debug_orig();\n-    } while (orig != NULL && orig != n->debug_orig());\n-  }\n-#endif \/\/ASSERT\n-}\n-\n-\/\/ call this from debugger:\n-Node* find_node(Node* n, int idx) {\n+\/\/ Call this from debugger:\n+Node* find_node(Node* n, const int idx) {\n@@ -1612,2 +1571,2 @@\n-\/\/ call this from debugger with root node as default:\n-Node* find_node(int idx) {\n+\/\/ Call this from debugger with root node as default:\n+Node* find_node(const int idx) {\n@@ -1617,6 +1576,8 @@\n-\/\/------------------------------find-------------------------------------------\n-Node* Node::find(int idx) const {\n-  VectorSet old_space, new_space;\n-  Node* result = NULL;\n-  find_recur(Compile::current(), result, (Node*) this, idx, false, &old_space, &new_space);\n-  return result;\n+\/\/ Call this from debugger:\n+Node* find_ctrl(Node* n, const int idx) {\n+  return n->find_ctrl(idx);\n+}\n+\n+\/\/ Call this from debugger with root node as default:\n+Node* find_ctrl(const int idx) {\n+  return Compile::current()->root()->find_ctrl(idx);\n@@ -1627,2 +1588,16 @@\n-Node* Node::find_ctrl(int idx) const {\n-  VectorSet old_space, new_space;\n+Node* Node::find_ctrl(int idx) {\n+  return find(idx, true);\n+}\n+\n+\/\/------------------------------find-------------------------------------------\n+\/\/ Tries to find the node with the index |idx| starting from this node. If idx is negative,\n+\/\/ the search also includes forward (out) edges. Returns NULL if not found.\n+\/\/ If only_ctrl is set, the search will only be done on control nodes. Returns NULL if\n+\/\/ not found or if the node to be found is not a control node (search will not find it).\n+Node* Node::find(const int idx, bool only_ctrl) {\n+  ResourceMark rm;\n+  VectorSet old_space;\n+  VectorSet new_space;\n+  Node_List worklist;\n+  Arena* old_arena = Compile::current()->old_arena();\n+  add_to_worklist(this, &worklist, old_arena, &old_space, &new_space);\n@@ -1630,1 +1605,34 @@\n-  find_recur(Compile::current(), result, (Node*)this, idx, true, &old_space, &new_space);\n+  int node_idx = (idx >= 0) ? idx : -idx;\n+\n+  for (uint list_index = 0; list_index < worklist.size(); list_index++) {\n+    Node* n = worklist[list_index];\n+\n+    if ((int)n->_idx == node_idx debug_only(|| n->debug_idx() == node_idx)) {\n+      if (result != NULL) {\n+        tty->print(\"find: \" INTPTR_FORMAT \" and \" INTPTR_FORMAT \" both have idx==%d\\n\",\n+                  (uintptr_t)result, (uintptr_t)n, node_idx);\n+      }\n+      result = n;\n+    }\n+\n+    for (uint i = 0; i < n->len(); i++) {\n+      if (!only_ctrl || n->is_Region() || (n->Opcode() == Op_Root) || (i == TypeFunc::Control)) {\n+        \/\/ If only_ctrl is set: Add regions, the root node, or control inputs only\n+        add_to_worklist(n->in(i), &worklist, old_arena, &old_space, &new_space);\n+      }\n+    }\n+\n+    \/\/ Also search along forward edges if idx is negative and the search is not done on control nodes only\n+    if (idx < 0 && !only_ctrl) {\n+      for (uint i = 0; i < n->outcnt(); i++) {\n+        add_to_worklist(n->raw_out(i), &worklist, old_arena, &old_space, &new_space);\n+      }\n+    }\n+#ifdef ASSERT\n+    \/\/ Search along debug_orig edges last\n+    Node* orig = n->debug_orig();\n+    while (orig != NULL && add_to_worklist(orig, &worklist, old_arena, &old_space, &new_space)) {\n+      orig = orig->debug_orig();\n+    }\n+#endif \/\/ ASSERT\n+  }\n@@ -1633,2 +1641,4 @@\n-#endif\n-\n+bool Node::add_to_worklist(Node* n, Node_List* worklist, Arena* old_arena, VectorSet* old_space, VectorSet* new_space) {\n+  if (NotANode(n)) {\n+    return false; \/\/ Gracefully handle NULL, -1, 0xabababab, etc.\n+  }\n@@ -1637,1 +1647,8 @@\n-#ifndef PRODUCT\n+  \/\/ Contained in new_space or old_space? Check old_arena first since it's mostly empty.\n+  VectorSet* v = old_arena->contains(n) ? old_space : new_space;\n+  if (!v->test_set(n->_idx)) {\n+    worklist->push(n);\n+    return true;\n+  }\n+  return false;\n+}\n@@ -2155,1 +2172,2 @@\n-             (is_Unlock() && i == req()-1),\n+             (is_Unlock() && i == req()-1)\n+              || (is_MemBar() && i == 5), \/\/ the precedence edge to a membar can be removed during macro node expansion\n@@ -2240,1 +2258,1 @@\n-#endif\n+#endif \/\/ not PRODUCT\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":77,"deletions":59,"binary":false,"changes":136,"status":"modified"},{"patch":"@@ -121,0 +121,1 @@\n+class Opaque1Node;\n@@ -617,3 +618,3 @@\n-    Bit_Node   = 0x0000,\n-    Class_Node = 0x0000,\n-    ClassMask_Node = 0xFFFF,\n+    Bit_Node   = 0x00000000,\n+    Class_Node = 0x00000000,\n+    ClassMask_Node = 0xFFFFFFFF,\n@@ -729,0 +730,1 @@\n+    DEFINE_CLASS_ID(Opaque1, Node, 16)\n@@ -757,1 +759,1 @@\n-  jushort _class_id;\n+  juint _class_id;\n@@ -764,1 +766,1 @@\n-  void init_class_id(jushort c) {\n+  void init_class_id(juint c) {\n@@ -777,1 +779,1 @@\n-  const jushort class_id() const { return _class_id; }\n+  const juint class_id() const { return _class_id; }\n@@ -880,0 +882,1 @@\n+  DEFINE_CLASS_QUERY(Opaque1)\n@@ -1133,3 +1136,4 @@\n-public:\n-  Node* find(int idx) const;         \/\/ Search the graph for the given idx.\n-  Node* find_ctrl(int idx) const;    \/\/ Search control ancestors for the given idx.\n+  static bool add_to_worklist(Node* n, Node_List* worklist, Arena* old_arena, VectorSet* old_space, VectorSet* new_space);\n+public:\n+  Node* find(int idx, bool only_ctrl = false); \/\/ Search the graph for the given idx.\n+  Node* find_ctrl(int idx); \/\/ Search control ancestors for the given idx.\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -349,2 +349,1 @@\n-  cls = (jclass)JNIHandles::make_local(\n-    env, k->java_mirror());\n+  cls = (jclass)JNIHandles::make_local(THREAD, k->java_mirror());\n@@ -507,1 +506,1 @@\n-  ret = JNIHandles::make_local(env, reflection_method);\n+  ret = JNIHandles::make_local(THREAD, reflection_method);\n@@ -541,1 +540,1 @@\n-  obj = (super == NULL) ? NULL : (jclass) JNIHandles::make_local(super->java_mirror());\n+  obj = (super == NULL) ? NULL : (jclass) JNIHandles::make_local(THREAD, super->java_mirror());\n@@ -628,1 +627,1 @@\n-  jthrowable ret = (jthrowable) JNIHandles::make_local(env, exception);\n+  jthrowable ret = (jthrowable) JNIHandles::make_local(THREAD, exception);\n@@ -803,1 +802,1 @@\n-  jobject ret = JNIHandles::make_local(env, JNIHandles::resolve(ref));\n+  jobject ret = JNIHandles::make_local(THREAD, JNIHandles::resolve(ref));\n@@ -983,1 +982,1 @@\n-    result->set_jobject(JNIHandles::make_local(env, (oop) result->get_jobject()));\n+    result->set_jobject(JNIHandles::make_local(THREAD, (oop) result->get_jobject()));\n@@ -1045,1 +1044,1 @@\n-    result->set_jobject(JNIHandles::make_local(env, (oop) result->get_jobject()));\n+    result->set_jobject(JNIHandles::make_local(THREAD, (oop) result->get_jobject()));\n@@ -1061,1 +1060,1 @@\n-  ret = JNIHandles::make_local(env, i);\n+  ret = JNIHandles::make_local(THREAD, i);\n@@ -1085,1 +1084,1 @@\n-    obj = JNIHandles::make_local(env, i);\n+    obj = JNIHandles::make_local(THREAD, i);\n@@ -1119,1 +1118,1 @@\n-    obj = JNIHandles::make_local(env, i);\n+    obj = JNIHandles::make_local(THREAD, i);\n@@ -1153,1 +1152,1 @@\n-    obj = JNIHandles::make_local(env, i);\n+    obj = JNIHandles::make_local(THREAD, i);\n@@ -1180,1 +1179,1 @@\n-    (jclass) JNIHandles::make_local(env, k->java_mirror());\n+    (jclass) JNIHandles::make_local(THREAD, k->java_mirror());\n@@ -1973,1 +1972,1 @@\n-  jobject ret = JNIHandles::make_local(env, res);\n+  jobject ret = JNIHandles::make_local(THREAD, res);\n@@ -2164,1 +2163,1 @@\n-  ret = JNIHandles::make_local(env, reflected);\n+  ret = JNIHandles::make_local(THREAD, reflected);\n@@ -2224,1 +2223,1 @@\n-  jobject ret = JNIHandles::make_local(id->holder()->java_mirror()->obj_field(id->offset()));\n+  jobject ret = JNIHandles::make_local(THREAD, id->holder()->java_mirror()->obj_field(id->offset()));\n@@ -2351,1 +2350,1 @@\n-  ret = (jstring) JNIHandles::make_local(env, string);\n+  ret = (jstring) JNIHandles::make_local(THREAD, string);\n@@ -2427,1 +2426,1 @@\n-  ret = (jstring) JNIHandles::make_local(env, result);\n+  ret = (jstring) JNIHandles::make_local(THREAD, result);\n@@ -2507,1 +2506,1 @@\n-  ret = (jobjectArray) JNIHandles::make_local(env, result);\n+  ret = (jobjectArray) JNIHandles::make_local(THREAD, result);\n@@ -2539,1 +2538,1 @@\n-  ret = JNIHandles::make_local(env, res);\n+  ret = JNIHandles::make_local(THREAD, res);\n@@ -2620,1 +2619,1 @@\n-  ret = (Return) JNIHandles::make_local(env, obj); \\\n+  ret = (Return) JNIHandles::make_local(THREAD, obj); \\\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":20,"deletions":21,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-  JavaThread* jthread = JavaThread::current();\n+  JavaThread* jthread = (JavaThread*) THREAD;\n@@ -451,1 +451,1 @@\n-  return (jobjectArray) JNIHandles::make_local(env, result_h());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, result_h());\n@@ -468,1 +468,1 @@\n-  return (jstring) JNIHandles::make_local(env, h());\n+  return (jstring) JNIHandles::make_local(THREAD, h());\n@@ -572,1 +572,1 @@\n-    return (jstring) JNIHandles::make_local(env, result);\n+    return (jstring) JNIHandles::make_local(THREAD, result);\n@@ -626,1 +626,1 @@\n-  return JNIHandles::make_local(env, result);\n+  return JNIHandles::make_local(THREAD, result);\n@@ -634,1 +634,0 @@\n-  JavaThread* jt = (JavaThread*) THREAD;\n@@ -764,1 +763,1 @@\n-  return JNIHandles::make_local(env, new_obj());\n+  return JNIHandles::make_local(THREAD, new_obj());\n@@ -810,1 +809,1 @@\n-        return (jclass) JNIHandles::make_local(env, m->method_holder()->java_mirror());\n+        return (jclass) JNIHandles::make_local(THREAD, m->method_holder()->java_mirror());\n@@ -829,1 +828,1 @@\n-    return (jclass) JNIHandles::make_local(env, mirror);\n+    return (jclass) JNIHandles::make_local(THREAD, mirror);\n@@ -858,1 +857,1 @@\n-  return (jclass) JNIHandles::make_local(env, k->java_mirror());\n+  return (jclass) JNIHandles::make_local(THREAD, k->java_mirror());\n@@ -946,1 +945,1 @@\n-static jclass jvm_define_class_common(JNIEnv *env, const char *name,\n+static jclass jvm_define_class_common(const char *name,\n@@ -990,1 +989,1 @@\n-  return (jclass) JNIHandles::make_local(env, k->java_mirror());\n+  return (jclass) JNIHandles::make_local(THREAD, k->java_mirror());\n@@ -1004,1 +1003,1 @@\n-static jclass jvm_lookup_define_class(JNIEnv *env, jclass lookup, const char *name,\n+static jclass jvm_lookup_define_class(jclass lookup, const char *name,\n@@ -1008,1 +1007,0 @@\n-  JavaThread* jt = (JavaThread*) THREAD;\n@@ -1125,1 +1123,1 @@\n-  return (jclass) JNIHandles::make_local(env, defined_k->java_mirror());\n+  return (jclass) JNIHandles::make_local(THREAD, defined_k->java_mirror());\n@@ -1131,1 +1129,1 @@\n-  return jvm_define_class_common(env, name, loader, buf, len, pd, NULL, THREAD);\n+  return jvm_define_class_common(name, loader, buf, len, pd, NULL, THREAD);\n@@ -1155,1 +1153,1 @@\n-  return jvm_lookup_define_class(env, lookup, name, buf, len, pd, initialize, flags, classData, THREAD);\n+  return jvm_lookup_define_class(lookup, name, buf, len, pd, initialize, flags, classData, THREAD);\n@@ -1161,1 +1159,1 @@\n-  return jvm_define_class_common(env, name, loader, buf, len, pd, source, THREAD);\n+  return jvm_define_class_common(name, loader, buf, len, pd, source, THREAD);\n@@ -1177,4 +1175,4 @@\n-      if (*p == '.') {\n-          *p = '\/';\n-      }\n-      p++;\n+    if (*p == '.') {\n+      *p = '\/';\n+    }\n+    p++;\n@@ -1213,1 +1211,1 @@\n-            (jclass) JNIHandles::make_local(env, k->java_mirror());\n+            (jclass) JNIHandles::make_local(THREAD, k->java_mirror());\n@@ -1259,1 +1257,1 @@\n-  return (jstring) JNIHandles::make_local(env, result);\n+  return (jstring) JNIHandles::make_local(THREAD, result);\n@@ -1272,1 +1270,1 @@\n-    return (jobjectArray) JNIHandles::make_local(env, r);\n+    return (jobjectArray) JNIHandles::make_local(THREAD, r);\n@@ -1309,1 +1307,1 @@\n-  return (jobjectArray) JNIHandles::make_local(env, result());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, result());\n@@ -1360,1 +1358,1 @@\n-  return (jobjectArray) JNIHandles::make_local(env, signers_copy);\n+  return (jobjectArray) JNIHandles::make_local(THREAD, signers_copy);\n@@ -1390,1 +1388,1 @@\n-  return (jobject) JNIHandles::make_local(env, pd);\n+  return (jobject) JNIHandles::make_local(THREAD, pd);\n@@ -1398,1 +1396,1 @@\n-  return JNIHandles::make_local(env, result);\n+  return JNIHandles::make_local(THREAD, result);\n@@ -1477,1 +1475,1 @@\n-    return JNIHandles::make_local(env, result);\n+    return JNIHandles::make_local(THREAD, result);\n@@ -1491,1 +1489,1 @@\n-  return JNIHandles::make_local(env, result);\n+  return JNIHandles::make_local(THREAD, result);\n@@ -1533,1 +1531,1 @@\n-    return (jobjectArray)JNIHandles::make_local(env, result);\n+    return (jobjectArray)JNIHandles::make_local(THREAD, result);\n@@ -1542,1 +1540,1 @@\n-    return (jobjectArray)JNIHandles::make_local(env, result);\n+    return (jobjectArray)JNIHandles::make_local(THREAD, result);\n@@ -1584,1 +1582,1 @@\n-    return (jobjectArray)JNIHandles::make_local(env, res);\n+    return (jobjectArray)JNIHandles::make_local(THREAD, res);\n@@ -1587,1 +1585,1 @@\n-  return (jobjectArray)JNIHandles::make_local(env, result());\n+  return (jobjectArray)JNIHandles::make_local(THREAD, result());\n@@ -1605,1 +1603,1 @@\n-  return (jclass) JNIHandles::make_local(env, outer_klass->java_mirror());\n+  return (jclass) JNIHandles::make_local(THREAD, outer_klass->java_mirror());\n@@ -1623,1 +1621,1 @@\n-      return (jstring) JNIHandles::make_local(env, str());\n+      return (jstring) JNIHandles::make_local(THREAD, str());\n@@ -1642,1 +1640,1 @@\n-      return (jstring) JNIHandles::make_local(env, str());\n+      return (jstring) JNIHandles::make_local(THREAD, str());\n@@ -1658,1 +1656,1 @@\n-      return (jbyteArray) JNIHandles::make_local(env, a);\n+      return (jbyteArray) JNIHandles::make_local(THREAD, a);\n@@ -1730,1 +1728,1 @@\n-        return (jbyteArray) JNIHandles::make_local(env, a);\n+        return (jbyteArray) JNIHandles::make_local(THREAD, a);\n@@ -1750,1 +1748,1 @@\n-    return (jbyteArray) JNIHandles::make_local(env, a);\n+    return (jbyteArray) JNIHandles::make_local(THREAD, a);\n@@ -1766,1 +1764,1 @@\n-  return (jbyteArray) JNIHandles::make_local(env, Annotations::make_java_array(fd.type_annotations(), THREAD));\n+  return (jbyteArray) JNIHandles::make_local(THREAD, Annotations::make_java_array(fd.type_annotations(), THREAD));\n@@ -1822,1 +1820,1 @@\n-    return (jobjectArray)JNIHandles::make_local(env, result());\n+    return (jobjectArray)JNIHandles::make_local(THREAD, result());\n@@ -1839,1 +1837,1 @@\n-    return (jobjectArray) JNIHandles::make_local(env, res);\n+    return (jobjectArray) JNIHandles::make_local(THREAD, res);\n@@ -1874,1 +1872,1 @@\n-  return (jobjectArray) JNIHandles::make_local(env, result());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, result());\n@@ -1916,1 +1914,1 @@\n-      return (jobjectArray)JNIHandles::make_local(components_h());\n+      return (jobjectArray)JNIHandles::make_local(THREAD, components_h());\n@@ -1922,1 +1920,1 @@\n-  return (jobjectArray)JNIHandles::make_local(env, result);\n+  return (jobjectArray)JNIHandles::make_local(THREAD, result);\n@@ -1951,1 +1949,1 @@\n-    return (jobjectArray) JNIHandles::make_local(env, res);\n+    return (jobjectArray) JNIHandles::make_local(THREAD, res);\n@@ -2006,1 +2004,1 @@\n-  return (jobjectArray) JNIHandles::make_local(env, result());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, result());\n@@ -2188,1 +2186,1 @@\n-      return JNIHandles::make_local(jcp());\n+      return JNIHandles::make_local(THREAD, jcp());\n@@ -2215,1 +2213,1 @@\n-  return (jclass) JNIHandles::make_local(k->java_mirror());\n+  return (jclass) JNIHandles::make_local(THREAD, k->java_mirror());\n@@ -2230,1 +2228,1 @@\n-  return (jclass) JNIHandles::make_local(k->java_mirror());\n+  return (jclass) JNIHandles::make_local(THREAD, k->java_mirror());\n@@ -2260,1 +2258,1 @@\n-  return JNIHandles::make_local(method);\n+  return JNIHandles::make_local(THREAD, method);\n@@ -2307,1 +2305,1 @@\n-  return JNIHandles::make_local(field);\n+  return JNIHandles::make_local(THREAD, field);\n@@ -2354,1 +2352,1 @@\n-  return (jobjectArray) JNIHandles::make_local(dest());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, dest());\n@@ -2404,1 +2402,1 @@\n-  return (jobjectArray) JNIHandles::make_local(dest());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, dest());\n@@ -2470,1 +2468,1 @@\n-  return (jstring) JNIHandles::make_local(str);\n+  return (jstring) JNIHandles::make_local(THREAD, str);\n@@ -2486,1 +2484,1 @@\n-  return (jstring) JNIHandles::make_local(str());\n+  return (jstring) JNIHandles::make_local(THREAD, str());\n@@ -2543,1 +2541,1 @@\n-  return JNIHandles::make_local(env, asd);\n+  return JNIHandles::make_local(THREAD, asd);\n@@ -3364,2 +3362,2 @@\n-  assert (thread != NULL, \"no current thread!\");\n-  return JNIHandles::make_local(env, jthread);\n+  assert(jthread != NULL, \"no current thread!\");\n+  return JNIHandles::make_local(THREAD, jthread);\n@@ -3457,1 +3455,1 @@\n-  return (jobjectArray) JNIHandles::make_local(env, result);\n+  return (jobjectArray) JNIHandles::make_local(THREAD, result);\n@@ -3470,1 +3468,1 @@\n-  return (jstring) JNIHandles::make_local(result);\n+return (jstring) JNIHandles::make_local(THREAD, result);\n@@ -3478,1 +3476,1 @@\n-  return (jobjectArray) JNIHandles::make_local(result);\n+  return (jobjectArray) JNIHandles::make_local(THREAD, result);\n@@ -3491,1 +3489,1 @@\n-    Universe::set_reference_pending_list(NULL);\n+    Universe::clear_reference_pending_list();\n@@ -3493,1 +3491,1 @@\n-  return JNIHandles::make_local(env, ref);\n+  return JNIHandles::make_local(THREAD, ref);\n@@ -3521,1 +3519,1 @@\n-      return JNIHandles::make_local(env, loader);\n+      return JNIHandles::make_local(THREAD, loader);\n@@ -3560,1 +3558,1 @@\n-  return JNIHandles::make_local(env, box);\n+  return JNIHandles::make_local(THREAD, box);\n@@ -3610,1 +3608,1 @@\n-  return JNIHandles::make_local(env, result);\n+  return JNIHandles::make_local(THREAD, result);\n@@ -3621,1 +3619,1 @@\n-  return JNIHandles::make_local(env, result);\n+  return JNIHandles::make_local(THREAD, result);\n@@ -3688,1 +3686,1 @@\n-  return (jstring) JNIHandles::make_local(env, result);\n+  return (jstring) JNIHandles::make_local(THREAD, result);\n@@ -3747,1 +3745,1 @@\n-  return (jclass) JNIHandles::make_local(env, klass->java_mirror());\n+  return (jclass) JNIHandles::make_local(THREAD, klass->java_mirror());\n@@ -3761,1 +3759,1 @@\n-    jobject res = JNIHandles::make_local(env, result);\n+    jobject res = JNIHandles::make_local(THREAD, result);\n@@ -3768,1 +3766,1 @@\n-        JvmtiExport::post_vm_object_alloc(JavaThread::current(), result);\n+        JvmtiExport::post_vm_object_alloc(thread, result);\n@@ -3782,1 +3780,1 @@\n-  jobject res = JNIHandles::make_local(env, result);\n+  jobject res = JNIHandles::make_local(THREAD, result);\n@@ -3785,1 +3783,1 @@\n-    JvmtiExport::post_vm_object_alloc(JavaThread::current(), result);\n+    JvmtiExport::post_vm_object_alloc(thread, result);\n@@ -3898,1 +3896,1 @@\n-    jcls = loaded_lambda == NULL ? NULL : (jclass) JNIHandles::make_local(env, loaded_lambda->java_mirror());\n+    jcls = loaded_lambda == NULL ? NULL : (jclass) JNIHandles::make_local(THREAD, loaded_lambda->java_mirror());\n@@ -3956,1 +3954,1 @@\n-  return (jobjectArray) JNIHandles::make_local(env, threads_ah());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, threads_ah());\n@@ -3998,1 +3996,1 @@\n-  return (jobjectArray)JNIHandles::make_local(env, stacktraces());\n+  return (jobjectArray)JNIHandles::make_local(THREAD, stacktraces());\n@@ -4061,1 +4059,1 @@\n-  return (jobjectArray) JNIHandles::make_local(dest());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, dest());\n@@ -4091,1 +4089,1 @@\n-  return (jobjectArray) JNIHandles::make_local(env, result_h());\n+  return (jobjectArray) JNIHandles::make_local(THREAD, result_h());\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":79,"deletions":81,"binary":false,"changes":160,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-#include \"gc\/shared\/oopStorage.hpp\"\n-#include \"gc\/shared\/oopStorageSet.hpp\"\n@@ -201,1 +199,1 @@\n-    : _method(m_method), _bci((int)location), _class_holder(NULL) {\n+    : _method(m_method), _bci((int)location) {\n@@ -205,6 +203,1 @@\n-  _class_holder = OopStorageSet::vm_global()->allocate();\n-  if (_class_holder == NULL) {\n-    vm_exit_out_of_memory(sizeof(oop), OOM_MALLOC_ERROR,\n-                          \"Cannot create breakpoint oop handle\");\n-  }\n-  NativeAccess<>::oop_store(_class_holder, class_holder_oop);\n+  _class_holder = OopHandle(Universe::vm_global(), class_holder_oop);\n@@ -214,3 +207,2 @@\n-  if (_class_holder != NULL) {\n-    NativeAccess<>::oop_store(_class_holder, (oop)NULL);\n-    OopStorageSet::vm_global()->release(_class_holder);\n+  if (_class_holder.peek() != NULL) {\n+    _class_holder.release(Universe::vm_global());\n@@ -223,7 +215,1 @@\n-  _class_holder = OopStorageSet::vm_global()->allocate();\n-  if (_class_holder == NULL) {\n-    vm_exit_out_of_memory(sizeof(oop), OOM_MALLOC_ERROR,\n-                          \"Cannot create breakpoint oop handle\");\n-  }\n-  oop resolved_ch = NativeAccess<>::oop_load(bp._class_holder);\n-  NativeAccess<>::oop_store(_class_holder, resolved_ch);\n+  _class_holder = OopHandle(Universe::vm_global(), bp._class_holder.resolve());\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.cpp","additions":5,"deletions":19,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -182,1 +182,0 @@\n-  Thread* thread = Thread::current();\n@@ -210,1 +209,1 @@\n-      return init_method_MemberName(mname, info);\n+      return init_method_MemberName(mname, info, THREAD);\n@@ -220,1 +219,1 @@\n-      return init_method_MemberName(mname, info);\n+      return init_method_MemberName(mname, info, THREAD);\n@@ -226,1 +225,1 @@\n-oop MethodHandles::init_method_MemberName(Handle mname, CallInfo& info) {\n+oop MethodHandles::init_method_MemberName(Handle mname, CallInfo& info, TRAPS) {\n@@ -795,1 +794,1 @@\n-      oop mname2 = init_method_MemberName(mname, result);\n+      oop mname2 = init_method_MemberName(mname, result, THREAD);\n@@ -821,1 +820,1 @@\n-      oop mname2 = init_method_MemberName(mname, result);\n+      oop mname2 = init_method_MemberName(mname, result, THREAD);\n@@ -931,2 +930,0 @@\n-  Thread* thread = Thread::current();\n-\n@@ -969,1 +966,1 @@\n-        Handle result(thread, results->obj_at(rfill++));\n+        Handle result(THREAD, results->obj_at(rfill++));\n@@ -1020,1 +1017,1 @@\n-        Handle result(thread, results->obj_at(rfill++));\n+        Handle result(THREAD, results->obj_at(rfill++));\n@@ -1024,1 +1021,1 @@\n-        oop saved = MethodHandles::init_method_MemberName(result, info);\n+        oop saved = MethodHandles::init_method_MemberName(result, info, THREAD);\n@@ -1311,1 +1308,1 @@\n-  return JNIHandles::make_local(env, result());\n+  return JNIHandles::make_local(THREAD, result());\n@@ -1559,1 +1556,1 @@\n-  jclass MH_class = (jclass) JNIHandles::make_local(env, mirror);\n+  jclass MH_class = (jclass) JNIHandles::make_local(THREAD, mirror);\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-  return JNIHandles::make_local(env, v);\n+  return JNIHandles::make_local(THREAD, v);\n@@ -361,1 +361,1 @@\n-  return JNIHandles::make_local(env, v);\n+  return JNIHandles::make_local(THREAD, v);\n@@ -371,1 +371,1 @@\n-  return JNIHandles::make_local(env, v);\n+  return JNIHandles::make_local(THREAD, v);\n@@ -393,1 +393,1 @@\n-  return JNIHandles::make_local(env, new_value);\n+  return JNIHandles::make_local(THREAD, new_value);\n@@ -401,1 +401,1 @@\n-  return JNIHandles::make_local(env, v);\n+  return JNIHandles::make_local(THREAD, v);\n@@ -408,1 +408,1 @@\n-  return JNIHandles::make_local(env, v);\n+  return JNIHandles::make_local(THREAD, v);\n@@ -420,1 +420,1 @@\n-  return JNIHandles::make_local(env, v);\n+  return JNIHandles::make_local(THREAD, v);\n@@ -485,1 +485,1 @@\n-  return JNIHandles::make_local(env, i);\n+  return JNIHandles::make_local(THREAD, i);\n@@ -694,1 +694,1 @@\n-  return JNIHandles::make_local(env, mirror);\n+  return JNIHandles::make_local(THREAD, mirror);\n@@ -1025,1 +1025,1 @@\n-    res_jh = JNIHandles::make_local(env, anon_klass->java_mirror());\n+    res_jh = JNIHandles::make_local(THREAD, anon_klass->java_mirror());\n@@ -1058,1 +1058,1 @@\n-  return JNIHandles::make_local(env, res);\n+  return JNIHandles::make_local(THREAD, res);\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -636,1 +636,1 @@\n-    return JNIHandles::make_local(env, h());\n+    return JNIHandles::make_local(THREAD, h());\n@@ -659,1 +659,1 @@\n-    return (jintArray) JNIHandles::make_local(env, result);\n+    return (jintArray) JNIHandles::make_local(THREAD, result);\n@@ -720,1 +720,1 @@\n-  return (jlongArray) JNIHandles::make_local(env, result);\n+  return (jlongArray) JNIHandles::make_local(THREAD, result);\n@@ -1683,1 +1683,1 @@\n-  return (jlong) Thread::current()->stack_size();\n+  return (jlong) thread->stack_size();\n@@ -1687,2 +1687,1 @@\n-  JavaThread* t = JavaThread::current();\n-  return (jlong) t->stack_available(os::current_stack_pointer()) - (jlong)JavaThread::stack_shadow_zone_size();\n+  return (jlong) thread->stack_available(os::current_stack_pointer()) - (jlong)JavaThread::stack_shadow_zone_size();\n@@ -1795,1 +1794,1 @@\n-  ThreadBlockInVM tbivm(JavaThread::current());\n+  ThreadBlockInVM tbivm(thread);\n@@ -1881,1 +1880,1 @@\n-  return (jobjectArray)JNIHandles::make_local(env, result_array);\n+  return (jobjectArray)JNIHandles::make_local(THREAD, result_array);\n@@ -1898,1 +1897,1 @@\n-    return (jobjectArray)JNIHandles::make_local(env, create_results(THREAD));\n+    return (jobjectArray)JNIHandles::make_local(THREAD, create_results(THREAD));\n@@ -2054,1 +2053,1 @@\n-    return (jobject)JNIHandles::make_local(env, refs);\n+    return (jobject)JNIHandles::make_local(THREAD, refs);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-void oopstorage_init();\n+void universe_oopstorage_init();\n@@ -100,1 +100,1 @@\n-  oopstorage_init();\n+  universe_oopstorage_init();\n","filename":"src\/hotspot\/share\/runtime\/init.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-static OopStorage* global_handles() {\n-  return OopStorageSet::jni_global();\n+OopStorage* JNIHandles::global_handles() {\n+  return _global_handles;\n@@ -45,2 +45,2 @@\n-static OopStorage* weak_global_handles() {\n-  return OopStorageSet::jni_weak();\n+OopStorage* JNIHandles::weak_global_handles() {\n+  return _weak_global_handles;\n@@ -54,2 +54,2 @@\n-  JNIHandles::_global_handles = global_handles();\n-  JNIHandles::_weak_global_handles = weak_global_handles();\n+  JNIHandles::_global_handles = OopStorageSet::create_strong(\"JNI Global\");\n+  JNIHandles::_weak_global_handles = OopStorageSet::create_weak(\"JNI Weak\");\n@@ -58,9 +58,1 @@\n-\n-  if (obj == NULL) {\n-    return NULL;                \/\/ ignore null handles\n-  } else {\n-    Thread* thread = Thread::current();\n-    assert(oopDesc::is_oop(obj), \"not an oop\");\n-    assert(!current_thread_in_native(), \"must not be in native\");\n-    return thread->active_handles()->allocate_handle(obj);\n-  }\n+  return make_local(Thread::current(), obj);\n@@ -71,2 +63,0 @@\n-\/\/ optimized versions\n-\n@@ -84,13 +74,0 @@\n-\n-jobject JNIHandles::make_local(JNIEnv* env, oop obj) {\n-  if (obj == NULL) {\n-    return NULL;                \/\/ ignore null handles\n-  } else {\n-    JavaThread* thread = JavaThread::thread_from_jni_environment(env);\n-    assert(oopDesc::is_oop(obj), \"not an oop\");\n-    assert(!current_thread_in_native(), \"must not be in native\");\n-    return thread->active_handles()->allocate_handle(obj);\n-  }\n-}\n-\n-\n@@ -205,0 +182,3 @@\n+bool JNIHandles::is_global_storage(const OopStorage* storage) {\n+  return _global_handles == storage;\n+}\n","filename":"src\/hotspot\/share\/runtime\/jniHandles.cpp","additions":10,"deletions":30,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -817,2 +817,1 @@\n-\n-  if (exception_types.is_null()) return NULL;\n+  assert(!exception_types.is_null(), \"cannot return null\");\n@@ -866,1 +865,1 @@\n-  if (exception_types.is_null()) return NULL;\n+  assert(!exception_types.is_null(), \"cannot return null\");\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-  return ((intptr_t)om->next_om() & OM_LOCK_BIT) == OM_LOCK_BIT;\n+  return ((intptr_t)om->next_om_acquire() & OM_LOCK_BIT) == OM_LOCK_BIT;\n@@ -230,1 +230,1 @@\n-  om->set_next_om(next);\n+  om->release_set_next_om(next);\n@@ -237,0 +237,3 @@\n+    \/\/ Acquire semantics not needed on this list load since we're\n+    \/\/ checking for NULL here or following up with a cmpxchg() via\n+    \/\/ try_om_lock() below and we retry on cmpxchg() failure.\n@@ -242,0 +245,2 @@\n+      \/\/ Acquire semantics not needed on this list load since memory is\n+      \/\/ already consistent due to the cmpxchg() via try_om_lock() above.\n@@ -264,0 +269,3 @@\n+    \/\/ Acquire semantics not needed on this list load since we're\n+    \/\/ following up with a cmpxchg() via try_om_lock() below and we\n+    \/\/ retry on cmpxchg() failure.\n@@ -270,0 +278,2 @@\n+    \/\/ Release semantics not needed on this \"unlock\" since memory is\n+    \/\/ already consistent due to the cmpxchg() via try_om_lock() above.\n@@ -357,1 +367,3 @@\n-      \/\/ List head is now locked so we can safely switch it.\n+      \/\/ List head is now locked so we can safely switch it. Release\n+      \/\/ semantics not needed on this \"unlock\" since memory is already\n+      \/\/ consistent due to the cmpxchg() via get_list_head_locked() above.\n@@ -359,0 +371,1 @@\n+      OrderAccess::storestore();  \/\/ Make sure set_next_om() is seen first.\n@@ -365,0 +378,2 @@\n+    \/\/ Release semantics not needed on this \"unlock\" since memory\n+    \/\/ is already consistent.\n@@ -399,1 +414,3 @@\n-  \/\/ leaves take locked):\n+  \/\/ leaves take locked). Release semantics not needed on this \"unlock\"\n+  \/\/ since memory is already consistent due to the cmpxchg() via\n+  \/\/ get_list_head_locked() above.\n@@ -1378,0 +1395,1 @@\n+  \/\/ Acquire semantics not needed since we're at a safepoint.\n@@ -1443,0 +1461,3 @@\n+    \/\/ Acquire semantics not needed on this list load since memory\n+    \/\/ is already consistent due to the cmpxchg() via\n+    \/\/ take_from_start_of_om_free_list() above.\n@@ -1569,1 +1590,3 @@\n-      \/\/ mid locked:\n+      \/\/ mid locked. Release semantics not needed on this \"unlock\" since\n+      \/\/ memory is already consistent due to the get_list_head_locked()\n+      \/\/ above.\n@@ -1583,1 +1606,3 @@\n-      \/\/ list head, but leaves the extracted mid locked:\n+      \/\/ list head, but leaves the extracted mid locked. Release semantics\n+      \/\/ not needed on this \"unlock\" since memory is already consistent\n+      \/\/ due to the get_list_head_locked() above.\n@@ -1603,1 +1628,4 @@\n-          \/\/ anchor, but leaves the extracted mid locked:\n+          \/\/ anchor, but leaves the extracted mid locked. Release semantics\n+          \/\/ not needed on this \"unlock\" since memory is already consistent\n+          \/\/ due to the om_unlock() above before entering the loop or the\n+          \/\/ om_unlock() below before looping again.\n@@ -1709,0 +1737,1 @@\n+    OrderAccess::storestore();  \/\/ Make sure counter update is seen first.\n@@ -1754,0 +1783,1 @@\n+    OrderAccess::storestore();  \/\/ Make sure counter update is seen first.\n@@ -1937,0 +1967,1 @@\n+      \/\/ Release semantics so that above set_object() is seen first.\n@@ -1942,1 +1973,2 @@\n-      m->set_allocation_state(ObjectMonitor::Old);\n+      \/\/ Release semantics needed to keep allocation_state from floating up.\n+      m->release_set_allocation_state(ObjectMonitor::Old);\n@@ -1997,0 +2029,2 @@\n+    \/\/ Release semantics are not needed to keep allocation_state from\n+    \/\/ floating up since cas_set_mark() takes care of it.\n@@ -2226,2 +2260,3 @@\n-        \/\/ mid locked:\n-        Atomic::store(list_p, next);\n+        \/\/ mid locked. Release semantics needed since not all code paths\n+        \/\/ in deflate_monitor_using_JT() ensure memory consistency.\n+        Atomic::release_store(list_p, next);\n@@ -2231,2 +2266,4 @@\n-        \/\/ next field to locked_next and also leave mid locked:\n-        cur_mid_in_use->set_next_om(locked_next);\n+        \/\/ next field to locked_next and also leave mid locked.\n+        \/\/ Release semantics needed since not all code paths in\n+        \/\/ deflate_monitor_using_JT() ensure memory consistency.\n+        cur_mid_in_use->release_set_next_om(locked_next);\n@@ -2238,2 +2275,3 @@\n-      \/\/ mid is current tail in the free_head_p list so NULL terminate it\n-      \/\/ (which also unlocks it):\n+      \/\/ mid is current tail in the free_head_p list so NULL terminate\n+      \/\/ it (which also unlocks it). No release semantics needed since\n+      \/\/ Atomic::dec() already provides it.\n@@ -2267,0 +2305,3 @@\n+          \/\/ Acquire semantics are not needed on this list load since\n+          \/\/ it is not dependent on the following load which does have\n+          \/\/ acquire semantics.\n@@ -2342,0 +2383,1 @@\n+    OrderAccess::storestore();  \/\/ Make sure counter update is seen first.\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":56,"deletions":14,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2286,1 +2286,2 @@\n-\n+  \/\/ May be we are at method entry and requires to save do not unlock flag.\n+  UnlockFlagSaver fs(this);\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2349,0 +2349,14 @@\n+class UnlockFlagSaver {\n+  private:\n+    JavaThread* _thread;\n+    bool _do_not_unlock;\n+  public:\n+    UnlockFlagSaver(JavaThread* t) {\n+      _thread = t;\n+      _do_not_unlock = t->do_not_unlock_if_synchronized();\n+      t->set_do_not_unlock_if_synchronized(false);\n+    }\n+    ~UnlockFlagSaver() {\n+      _thread->set_do_not_unlock_if_synchronized(_do_not_unlock);\n+    }\n+};\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -372,16 +372,0 @@\n-                                                                                                                                     \\\n-     static_field(Universe,                    _mirrors[0],                                   oop)                                   \\\n-     static_field(Universe,                    _main_thread_group,                            oop)                                   \\\n-     static_field(Universe,                    _system_thread_group,                          oop)                                   \\\n-     static_field(Universe,                    _the_empty_class_klass_array,                  objArrayOop)                           \\\n-     static_field(Universe,                    _null_ptr_exception_instance,                  oop)                                   \\\n-     static_field(Universe,                    _arithmetic_exception_instance,                oop)                                   \\\n-     static_field(Universe,                    _vm_exception,                                 oop)                                   \\\n-     static_field(Universe,                    _base_vtable_size,                             int)                                   \\\n-     static_field(Universe,                    _bootstrapping,                                bool)                                  \\\n-     static_field(Universe,                    _fully_initialized,                            bool)                                  \\\n-     static_field(Universe,                    _verify_count,                                 int)                                   \\\n-     static_field(Universe,                    _verify_oop_mask,                              uintptr_t)                             \\\n-     static_field(Universe,                    _verify_oop_bits,                              uintptr_t)                             \\\n-     static_field(Universe,                    _non_oop_bits,                                 intptr_t)                              \\\n-                                                                                                                                     \\\n@@ -921,1 +905,1 @@\n-  c2_nonstatic_field(Node,                     _class_id,                                     jushort)                               \\\n+  c2_nonstatic_field(Node,                     _class_id,                                     juint)                                 \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -422,1 +422,1 @@\n-     * 12.3}, and {@jls 12.4} of <cite>The Java&trade; Language\n+     * 12.3}, and {@jls 12.4} of <cite>The Java Language\n@@ -431,1 +431,1 @@\n-     *                   12.4} of <cite>The Java&trade; Language\n+     *                   12.4} of <cite>The Java Language\n@@ -887,1 +887,1 @@\n-     * or via a widening reference conversion. See <cite>The Java&trade; Language\n+     * or via a widening reference conversion. See <cite>The Java Language\n@@ -1147,1 +1147,1 @@\n-     *     <cite>The Java&trade; Virtual Machine Specification<\/cite>\n+     *     <cite>The Java Virtual Machine Specification<\/cite>\n@@ -1195,1 +1195,1 @@\n-     *     section {@jvms 4.7.9} of <cite>The Java&trade; Virtual\n+     *     section {@jvms 4.7.9} of <cite>The Java Virtual\n@@ -1392,1 +1392,1 @@\n-     *     Java&trade; Virtual Machine Specification<\/cite>\n+     *     Java Virtual Machine Specification<\/cite>\n@@ -1464,1 +1464,1 @@\n-     * of <cite>The Java&trade; Virtual Machine Specification<\/cite>.\n+     * of <cite>The Java Virtual Machine Specification<\/cite>.\n@@ -1871,1 +1871,1 @@\n-     * defined by <cite>The Java&trade; Language Specification<\/cite>.\n+     * defined by <cite>The Java Language Specification<\/cite>.\n@@ -2671,1 +2671,1 @@\n-     * <p> See <cite>The Java&trade; Language Specification<\/cite>,\n+     * <p> See <cite>The Java Language Specification<\/cite>,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -470,1 +470,1 @@\n-     * if and when the Java&trade; virtual\n+     * if and when the Java virtual\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -425,2 +425,2 @@\n-     * which is possible for objects with finalizers (See Section 12.6\n-     * of <cite>The Java&trade; Language Specification<\/cite>) that\n+     * which is possible for objects with finalizers (See Section {@jls 12.6}\n+     * of <cite>The Java Language Specification<\/cite>) that\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -444,1 +444,1 @@\n-     * specified in <cite>The Java&trade; Language Specification<\/cite>,\n+     * specified in <cite>The Java Language Specification<\/cite>,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessibleObject.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -440,2 +440,2 @@\n-     * to be the enclosing instance; see section 15.9.3 of\n-     * <cite>The Java&trade; Language Specification<\/cite>.\n+     * to be the enclosing instance; see section {@jls 15.9.3} of\n+     * <cite>The Java Language Specification<\/cite>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -261,1 +261,1 @@\n-     *     <cite>The Java&trade; Virtual Machine Specification<\/cite>\n+     *     <cite>The Java Virtual Machine Specification<\/cite>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Field.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-     *     <cite>The Java&trade; Virtual Machine Specification<\/cite>\n+     *     <cite>The Java Virtual Machine Specification<\/cite>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,2 +35,3 @@\n- * representing the modifiers are taken from the tables in sections 4.1, 4.4, 4.5, and 4.7 of\n- * <cite>The Java&trade; Virtual Machine Specification<\/cite>.\n+ * representing the modifiers are taken from the tables in sections\n+ * {@jvms 4.1}, {@jvms 4.4}, {@jvms 4.5}, and {@jvms 4.7} of\n+ * <cite>The Java Virtual Machine Specification<\/cite>.\n@@ -204,1 +205,1 @@\n-     * <cite>The Java&trade; Language Specification<\/cite>.\n+     * <cite>The Java Language Specification<\/cite>.\n@@ -250,1 +251,1 @@\n-     * <cite>The Java&trade; Virtual Machine Specification<\/cite>\n+     * <cite>The Java Virtual Machine Specification<\/cite>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -395,1 +395,1 @@\n-     * section 3.6.1.\n+     * section {@jvms 3.6.1}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ProxyGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-     * Java&trade; Language Specification<\/cite>.\n+     * Java Language Specification<\/cite>.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/Modifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * subject to change as the Java&trade; programming language evolves.\n+ * subject to change as the Java programming language evolves.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/Tree.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * structures added to future versions of the Java&trade; programming\n+ * structures added to future versions of the Java programming\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/TreeVisitor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,0 +108,1 @@\n+    public final boolean allowRecords;\n@@ -150,0 +151,2 @@\n+        allowRecords = (!preview.isPreview(Feature.RECORDS) || preview.isEnabled()) &&\n+                Feature.RECORDS.allowedInSource(source);\n@@ -1519,0 +1522,1 @@\n+                   (sym.flags() & STATIC) == 0 &&\n@@ -1523,1 +1527,2 @@\n-                        \/\/ only records so far, then error\n+                        \/\/ then error\n+                        allowRecords &&\n@@ -1525,3 +1530,4 @@\n-                        (env.enclClass.sym.flags() & STATIC) != 0 &&\n-                        sym.enclClass() != env.enclClass.sym) &&\n-                    (sym.flags() & STATIC) == 0)\n+                        env1 != env &&\n+                        !isInnerClassOfMethod(sym.owner, env.tree.hasTag(CLASSDEF) ?\n+                                ((JCClassDecl)env.tree).sym :\n+                                env.enclClass.sym)))\n@@ -2312,2 +2318,2 @@\n-    Symbol findTypeVar(Env<AttrContext> env, Name name, boolean staticOnly) {\n-        for (Symbol sym : env.info.scope.getSymbolsByName(name)) {\n+    Symbol findTypeVar(Env<AttrContext> currentEnv, Env<AttrContext> originalEnv, Name name, boolean staticOnly) {\n+        for (Symbol sym : currentEnv.info.scope.getSymbolsByName(name)) {\n@@ -2317,1 +2323,8 @@\n-                    sym.owner.kind == TYP)\n+                    ((sym.owner.kind == TYP) ||\n+                    \/\/ are we trying to access a TypeVar defined in a method from a local static type: interface, enum or record?\n+                    allowRecords &&\n+                    (sym.owner.kind == MTH &&\n+                    currentEnv != originalEnv &&\n+                    !isInnerClassOfMethod(sym.owner, originalEnv.tree.hasTag(CLASSDEF) ?\n+                            ((JCClassDecl)originalEnv.tree).sym :\n+                            originalEnv.enclClass.sym)))) {\n@@ -2319,0 +2332,1 @@\n+                }\n@@ -2325,0 +2339,10 @@\n+    boolean isInnerClassOfMethod(Symbol msym, Symbol csym) {\n+        if (csym.owner == msym && !csym.isStatic()) {\n+            return true;\n+        } else if (csym.owner.kind == TYP) {\n+            return isInnerClassOfMethod(msym, csym.owner);\n+        } else {\n+            return false;\n+        }\n+    }\n+\n@@ -2346,1 +2370,1 @@\n-            final Symbol tyvar = findTypeVar(env1, name, staticOnly);\n+            final Symbol tyvar = findTypeVar(env1, env, name, staticOnly);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":32,"deletions":8,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-     * <cite>The Java&trade; Language Specification<\/cite>,\n+     * <cite>The Java Language Specification<\/cite>,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-compiler\/codegen\/Test6896617.java 8193479 generic-all\n@@ -49,2 +48,0 @@\n-compiler\/jvmci\/compilerToVM\/GetResolvedJavaTypeTest.java 8158860 generic-all\n-compiler\/jvmci\/compilerToVM\/InvalidateInstalledCodeTest.java 8163894 generic-all\n@@ -53,2 +50,0 @@\n-compiler\/c2\/Test6852078.java 8194310 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}