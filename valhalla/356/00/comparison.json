{"files":[{"patch":"@@ -2061,1 +2061,1 @@\n-    apush(append_split(new Deoptimize(state_before)));\n+    apush(append_split(new Deoptimize(holder, state_before)));\n@@ -2495,1 +2495,1 @@\n-    apush(append_split(new Deoptimize(copy_state_before())));\n+    apush(append_split(new Deoptimize(klass, copy_state_before())));\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1523,0 +1523,3 @@\n+private:\n+  ciKlass*    _klass;\n+\n@@ -1524,2 +1527,5 @@\n-  Deoptimize(ValueStack* state_before)\n-  : StateSplit(objectType, state_before) {}\n+  Deoptimize(ciKlass* klass, ValueStack* state_before)\n+  : StateSplit(objectType, state_before), _klass(klass) {}\n+\n+  \/\/ accessors\n+  ciKlass* klass() const                         { return _klass; }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -545,1 +545,3 @@\n-  output()->print(\"deoptimize\");\n+  output()->print(\"deoptimize [unloaded=\");\n+  print_klass(x->klass());\n+  output()->print(\"] \");\n","filename":"src\/hotspot\/share\/c1\/c1_InstructionPrinter.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2349,0 +2349,3 @@\n+  \/\/ This happens only when a class X uses the withfield\/defaultvalue bytecode\n+  \/\/ to refer to an inline class V, where V has not yet been loaded\/resolved.\n+  \/\/ This is not a common case. Let's just deoptimize.\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}