{"files":[{"patch":"@@ -1,29 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ Abstract class that implements java.lang.IdentityObject.  It is not a legal\n-\/\/ super class for an inline class.\n-public abstract class ImplementsIdentityObject implements java.lang.IdentityObject {\n-    ImplementsIdentityObject() { }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/ImplementsIdentityObject.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"deleted"},{"patch":"@@ -25,1 +25,1 @@\n-\/\/ public inline final class Point extends AbstractClass {\n+\/\/ public primitive final class Point extends AbstractClass {\n@@ -38,2 +38,2 @@\n-\/\/ Inline class with a super class that is not abstract.\n-class SuperNotAbstract {\n+\/\/ Primitive class with a super class that is not abstract.\n+class PrimitiveSuperNotAbstract {\n@@ -46,1 +46,1 @@\n-    Utf8 \"SuperNotAbstract\"; \/\/ #2     at 0x0D\n+    Utf8 \"PrimitiveSuperNotAbstract\"; \/\/ #2     at 0x0D\n@@ -57,1 +57,1 @@\n-    Utf8 \"(QSuperNotAbstract;)I\"; \/\/ #13     at 0x55\n+    Utf8 \"(QPrimitiveSuperNotAbstract;)I\"; \/\/ #13     at 0x55\n@@ -61,1 +61,1 @@\n-    Utf8 \"(QSuperNotAbstract;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    Utf8 \"(QPrimitiveSuperNotAbstract;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n@@ -65,1 +65,1 @@\n-    Utf8 \"(QSuperNotAbstract;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    Utf8 \"(QPrimitiveSuperNotAbstract;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n@@ -78,1 +78,1 @@\n-    Utf8 \"()QSuperNotAbstract;\"; \/\/ #34     at 0x017A\n+    Utf8 \"()QPrimitiveSuperNotAbstract;\"; \/\/ #34     at 0x017A\n@@ -80,1 +80,1 @@\n-    Utf8 \"SuperNotAbstract.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"PrimitiveSuperNotAbstract.java\"; \/\/ #36     at 0x019E\n@@ -97,1 +97,1 @@\n-  0x0931; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n@@ -294,1 +294,1 @@\n-} \/\/ end class SuperNotAbstract\n+} \/\/ end class PrimitiveSuperNotAbstract\n@@ -298,2 +298,2 @@\n-\/\/ Inline class with a super class that has instance fields.\n-class SuperHasNonStaticFields {\n+\/\/ Primitive class with a super class that has instance fields.\n+class PrimitiveSuperHasNonStaticFields {\n@@ -306,1 +306,1 @@\n-    Utf8 \"SuperHasNonStaticFields\"; \/\/ #2     at 0x0D\n+    Utf8 \"PrimitiveSuperHasNonStaticFields\"; \/\/ #2     at 0x0D\n@@ -317,1 +317,1 @@\n-    Utf8 \"(QSuperHasNonStaticFields;)I\"; \/\/ #13     at 0x55\n+    Utf8 \"(QPrimitiveSuperHasNonStaticFields;)I\"; \/\/ #13     at 0x55\n@@ -321,1 +321,1 @@\n-    Utf8 \"(QSuperHasNonStaticFields;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    Utf8 \"(QPrimitiveSuperHasNonStaticFields;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n@@ -325,1 +325,1 @@\n-    Utf8 \"(QSuperHasNonStaticFields;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    Utf8 \"(QPrimitiveSuperHasNonStaticFields;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n@@ -338,1 +338,1 @@\n-    Utf8 \"()QSuperHasNonStaticFields;\"; \/\/ #34     at 0x017A\n+    Utf8 \"()QPrimitiveSuperHasNonStaticFields;\"; \/\/ #34     at 0x017A\n@@ -340,1 +340,1 @@\n-    Utf8 \"SuperHasNonStaticFields.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"PrimitiveSuperHasNonStaticFields.java\"; \/\/ #36     at 0x019E\n@@ -357,1 +357,1 @@\n-  0x0931; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n@@ -554,1 +554,1 @@\n-} \/\/ end class SuperHasNonStaticFields\n+} \/\/ end class PrimitiveSuperHasNonStaticFields\n@@ -558,2 +558,2 @@\n-\/\/ Inline class with a super class whose super class has a syncronized instance method.\n-class SuperHasSynchMethod {\n+\/\/ primitive value class with a super class whose super class has a syncronized instance method.\n+class PrimitiveSuperHasSynchMethod {\n@@ -566,1 +566,1 @@\n-    Utf8 \"SuperHasSynchMethod\"; \/\/ #2     at 0x0D\n+    Utf8 \"PrimitiveSuperHasSynchMethod\"; \/\/ #2     at 0x0D\n@@ -577,1 +577,1 @@\n-    Utf8 \"(QSuperHasSynchMethod;)I\"; \/\/ #13     at 0x55\n+    Utf8 \"(QPrimitiveSuperHasSynchMethod;)I\"; \/\/ #13     at 0x55\n@@ -581,1 +581,1 @@\n-    Utf8 \"(QSuperHasSynchMethod;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    Utf8 \"(QPrimitiveSuperHasSynchMethod;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n@@ -585,1 +585,1 @@\n-    Utf8 \"(QSuperHasSynchMethod;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    Utf8 \"(QPrimitiveSuperHasSynchMethod;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n@@ -598,1 +598,1 @@\n-    Utf8 \"()QSuperHasSynchMethod;\"; \/\/ #34     at 0x017A\n+    Utf8 \"()QPrimitiveSuperHasSynchMethod;\"; \/\/ #34     at 0x017A\n@@ -600,1 +600,1 @@\n-    Utf8 \"SuperHasSynchMethod.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"PrimitiveSuperHasSynchMethod.java\"; \/\/ #36     at 0x019E\n@@ -617,1 +617,1 @@\n-  0x0931; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n@@ -814,1 +814,1 @@\n-} \/\/ end class SuperHasSynchMethod\n+} \/\/ end class PrimitiveSuperHasSynchMethod\n@@ -817,2 +817,2 @@\n-\/\/ Inline class with a super class containing a constructor that has arguments.\n-class SuperCtorHasArgs {\n+\/\/ primitive value class with a super class containing a constructor that has arguments.\n+class PrimitiveSuperCtorHasArgs {\n@@ -825,1 +825,1 @@\n-    Utf8 \"SuperCtorHasArgs\"; \/\/ #2     at 0x0D\n+    Utf8 \"PrimitiveSuperCtorHasArgs\"; \/\/ #2     at 0x0D\n@@ -836,1 +836,1 @@\n-    Utf8 \"(QSuperCtorHasArgs;)I\"; \/\/ #13     at 0x55\n+    Utf8 \"(QPrimitiveSuperCtorHasArgs;)I\"; \/\/ #13     at 0x55\n@@ -840,1 +840,1 @@\n-    Utf8 \"(QSuperCtorHasArgs;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    Utf8 \"(QPrimitiveSuperCtorHasArgs;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n@@ -844,1 +844,1 @@\n-    Utf8 \"(QSuperCtorHasArgs;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    Utf8 \"(QPrimitiveSuperCtorHasArgs;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n@@ -857,1 +857,1 @@\n-    Utf8 \"()QSuperCtorHasArgs;\"; \/\/ #34     at 0x017A\n+    Utf8 \"()QPrimitiveSuperCtorHasArgs;\"; \/\/ #34     at 0x017A\n@@ -859,1 +859,1 @@\n-    Utf8 \"SuperCtorHasArgs.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"PrimitiveSuperCtorHasArgs.java\"; \/\/ #36     at 0x019E\n@@ -876,1 +876,1 @@\n-  0x0931; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n@@ -1073,1 +1073,1 @@\n-} \/\/ end class SuperCtorHasArgs\n+} \/\/ end class PrimitiveSuperCtorHasArgs\n@@ -1077,1 +1077,1 @@\n-\/\/ Inline class with a super class containing a constructor that has a non-empty\n+\/\/ primitive value class with a super class containing a constructor that has a non-empty\n@@ -1079,1 +1079,1 @@\n-class SuperCtorIsNotEmpty {\n+class PrimitiveSuperCtorIsNotEmpty {\n@@ -1086,1 +1086,1 @@\n-    Utf8 \"SuperCtorIsNotEmpty\"; \/\/ #2     at 0x0D\n+    Utf8 \"PrimitiveSuperCtorIsNotEmpty\"; \/\/ #2     at 0x0D\n@@ -1097,1 +1097,1 @@\n-    Utf8 \"(QSuperCtorIsNotEmpty;)I\"; \/\/ #13     at 0x55\n+    Utf8 \"(QPrimitiveSuperCtorIsNotEmpty;)I\"; \/\/ #13     at 0x55\n@@ -1101,1 +1101,1 @@\n-    Utf8 \"(QSuperCtorIsNotEmpty;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    Utf8 \"(QPrimitiveSuperCtorIsNotEmpty;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n@@ -1105,1 +1105,1 @@\n-    Utf8 \"(QSuperCtorIsNotEmpty;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    Utf8 \"(QPrimitiveSuperCtorIsNotEmpty;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n@@ -1118,1 +1118,1 @@\n-    Utf8 \"()QSuperCtorIsNotEmpty;\"; \/\/ #34     at 0x017A\n+    Utf8 \"()QPrimitiveSuperCtorIsNotEmpty;\"; \/\/ #34     at 0x017A\n@@ -1120,1 +1120,1 @@\n-    Utf8 \"SuperCtorIsNotEmpty.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"PrimitiveSuperCtorIsNotEmpty.java\"; \/\/ #36     at 0x019E\n@@ -1137,1 +1137,1 @@\n-  0x0931; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0851; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_FINAL ]\n@@ -1334,1 +1334,1 @@\n-} \/\/ end class SuperCtorIsNotEmpty\n+} \/\/ end class PrimitiveSuperCtorIsNotEmpty\n@@ -1336,0 +1336,1 @@\n+\/\/ Again for value objects...\n@@ -1337,3 +1338,2 @@\n-\/\/ Inline class that implements java.lang.IdentityObject.  Loading this\n-\/\/ class should throw an ICCE.\n-class InlineImplementsIdentityObject {\n+\/\/ Value class with a super class that is not abstract.\n+class ValueSuperNotAbstract {\n@@ -1343,1 +1343,1 @@\n-  [53] { \/\/ Constant Pool\n+  [51] { \/\/ Constant Pool\n@@ -1346,51 +1346,49 @@\n-    Utf8 \"InlineImplementsIdentityObject\"; \/\/ #2     at 0x0D\n-    Field #1 #4; \/\/ #3     at 0x28\n-    NameAndType #5 #6; \/\/ #4     at 0x2D\n-    Utf8 \"x\"; \/\/ #5     at 0x32\n-    Utf8 \"I\"; \/\/ #6     at 0x36\n-    Field #1 #8; \/\/ #7     at 0x3A\n-    NameAndType #9 #6; \/\/ #8     at 0x3F\n-    Utf8 \"y\"; \/\/ #9     at 0x44\n-    InvokeDynamic 0s #11; \/\/ #10     at 0x48\n-    NameAndType #12 #13; \/\/ #11     at 0x4D\n-    Utf8 \"hashCode\"; \/\/ #12     at 0x52\n-    Utf8 \"(QInlineImplementsIdentityObject;)I\"; \/\/ #13     at 0x5D\n-    InvokeDynamic 0s #15; \/\/ #14     at 0x7D\n-    NameAndType #16 #17; \/\/ #15     at 0x82\n-    Utf8 \"equals\"; \/\/ #16     at 0x87\n-    Utf8 \"(QInlineImplementsIdentityObject;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x90\n-    InvokeDynamic 0s #19; \/\/ #18     at 0xC2\n-    NameAndType #20 #21; \/\/ #19     at 0xC7\n-    Utf8 \"toString\"; \/\/ #20     at 0xCC\n-    Utf8 \"(QInlineImplementsIdentityObject;)Ljava\/lang\/String;\"; \/\/ #21     at 0xD7\n-    class #23; \/\/ #22     at 0x0108\n-    Utf8 \"java\/lang\/Object\"; \/\/ #23     at 0x010B\n-    class #25; \/\/ #24     at 0x011E\n-    Utf8 \"java\/lang\/IdentityObject\"; \/\/ #25     at 0x0121\n-    class #27; \/\/ #26     at 0x0126\n-    Utf8 \"Unused\"; \/\/ #27     at 0x0129\n-    Utf8 \"getX\"; \/\/ #28     at 0x0142\n-    Utf8 \"()I\"; \/\/ #29     at 0x0149\n-    Utf8 \"Code\"; \/\/ #30     at 0x014F\n-    Utf8 \"LineNumberTable\"; \/\/ #31     at 0x0156\n-    Utf8 \"getY\"; \/\/ #32     at 0x0168\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #33     at 0x016F\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #34     at 0x0187\n-    Utf8 \"<init>\"; \/\/ #35     at 0x019E\n-    Utf8 \"()QInlineImplementsIdentityObject;\"; \/\/ #36     at 0x01A7\n-    Utf8 \"SourceFile\"; \/\/ #37     at 0x01C6\n-    Utf8 \"InlineImplementsIdentityObject.java\"; \/\/ #38     at 0x01D3\n-    Utf8 \"BootstrapMethods\"; \/\/ #39     at 0x01F3\n-    MethodHandle 6b #41; \/\/ #40     at 0x0206\n-    Method #42 #43; \/\/ #41     at 0x020A\n-    class #44; \/\/ #42     at 0x020F\n-    NameAndType #45 #46; \/\/ #43     at 0x0212\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #44     at 0x0217\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #45     at 0x0240\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #46     at 0x0256\n-    Utf8 \"InnerClasses\"; \/\/ #47     at 0x02CC\n-    class #49; \/\/ #48     at 0x02DB\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #49     at 0x02DE\n-    class #51; \/\/ #50     at 0x0306\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #51     at 0x0309\n-    Utf8 \"Lookup\"; \/\/ #52     at 0x032A\n+    Utf8 \"ValueSuperNotAbstract\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x20\n+    NameAndType #5 #6; \/\/ #4     at 0x25\n+    Utf8 \"x\"; \/\/ #5     at 0x2A\n+    Utf8 \"I\"; \/\/ #6     at 0x2E\n+    Field #1 #8; \/\/ #7     at 0x32\n+    NameAndType #9 #6; \/\/ #8     at 0x37\n+    Utf8 \"y\"; \/\/ #9     at 0x3C\n+    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n+    NameAndType #12 #13; \/\/ #11     at 0x45\n+    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n+    Utf8 \"(LValueSuperNotAbstract;)I\"; \/\/ #13     at 0x55\n+    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n+    NameAndType #16 #17; \/\/ #15     at 0x72\n+    Utf8 \"equals\"; \/\/ #16     at 0x77\n+    Utf8 \"(LValueSuperNotAbstract;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n+    NameAndType #20 #21; \/\/ #19     at 0xAF\n+    Utf8 \"toString\"; \/\/ #20     at 0xB4\n+    Utf8 \"(LValueSuperNotAbstract;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    class #23; \/\/ #22     at 0xE8\n+    Utf8 \"NotAbstract\"; \/\/ #23     at 0xEB\n+    class #25; \/\/ #24     at 0xF9\n+    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n+    Utf8 \"getX\"; \/\/ #26     at 0x0115\n+    Utf8 \"()I\"; \/\/ #27     at 0x011C\n+    Utf8 \"Code\"; \/\/ #28     at 0x0122\n+    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n+    Utf8 \"getY\"; \/\/ #30     at 0x013B\n+    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n+    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n+    Utf8 \"<init>\"; \/\/ #33     at 0x0171\n+    Utf8 \"()LValueSuperNotAbstract;\"; \/\/ #34     at 0x017A\n+    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n+    Utf8 \"ValueSuperNotAbstract.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n+    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n+    Method #40 #41; \/\/ #39     at 0x01CD\n+    class #42; \/\/ #40     at 0x01D2\n+    NameAndType #43 #44; \/\/ #41     at 0x01D5\n+    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n+    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n+    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n+    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n+    class #47; \/\/ #46     at 0x029E\n+    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n+    class #49; \/\/ #48     at 0x02C9\n+    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n+    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n@@ -1399,1 +1397,1 @@\n-  0x0931; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n@@ -1403,2 +1401,1 @@\n-  [1] { \/\/ Interfaces\n-    #24;\n+  [0] { \/\/ Interfaces\n@@ -1408,1 +1405,1 @@\n-    { \/\/ Member at 0x0341\n+    { \/\/ Member at 0x0302\n@@ -1416,1 +1413,1 @@\n-    { \/\/ Member at 0x0349\n+    { \/\/ Member at 0x030A\n@@ -1426,1 +1423,1 @@\n-    { \/\/ Member at 0x0353\n+    { \/\/ Member at 0x0314\n@@ -1428,2 +1425,2 @@\n-      #28; \/\/ name_cpx\n-      #29; \/\/ sig_cpx\n+      #26; \/\/ name_cpx\n+      #27; \/\/ sig_cpx\n@@ -1431,1 +1428,1 @@\n-        Attr(#30, 29) { \/\/ Code at 0x035B\n+        Attr(#28, 29) { \/\/ Code at 0x031C\n@@ -1440,1 +1437,1 @@\n-            Attr(#31, 6) { \/\/ LineNumberTable at 0x0372\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n@@ -1442,1 +1439,1 @@\n-                0  11; \/\/  at 0x037E\n+                0  10; \/\/  at 0x033F\n@@ -1450,1 +1447,1 @@\n-    { \/\/ Member at 0x037E\n+    { \/\/ Member at 0x033F\n@@ -1452,2 +1449,2 @@\n-      #32; \/\/ name_cpx\n-      #29; \/\/ sig_cpx\n+      #30; \/\/ name_cpx\n+      #27; \/\/ sig_cpx\n@@ -1455,1 +1452,1 @@\n-        Attr(#30, 29) { \/\/ Code at 0x0386\n+        Attr(#28, 29) { \/\/ Code at 0x0347\n@@ -1464,1 +1461,1 @@\n-            Attr(#31, 6) { \/\/ LineNumberTable at 0x039D\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n@@ -1466,1 +1463,1 @@\n-                0  12; \/\/  at 0x03A9\n+                0  11; \/\/  at 0x036A\n@@ -1474,1 +1471,1 @@\n-    { \/\/ Member at 0x03A9\n+    { \/\/ Member at 0x036A\n@@ -1477,1 +1474,1 @@\n-      #29; \/\/ sig_cpx\n+      #27; \/\/ sig_cpx\n@@ -1479,1 +1476,1 @@\n-        Attr(#30, 31) { \/\/ Code at 0x03B1\n+        Attr(#28, 31) { \/\/ Code at 0x0372\n@@ -1488,1 +1485,1 @@\n-            Attr(#31, 6) { \/\/ LineNumberTable at 0x03CA\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n@@ -1490,1 +1487,1 @@\n-                0  2; \/\/  at 0x03D6\n+                0  1; \/\/  at 0x0397\n@@ -1498,1 +1495,1 @@\n-    { \/\/ Member at 0x03D6\n+    { \/\/ Member at 0x0397\n@@ -1501,1 +1498,1 @@\n-      #33; \/\/ sig_cpx\n+      #31; \/\/ sig_cpx\n@@ -1503,1 +1500,1 @@\n-        Attr(#30, 32) { \/\/ Code at 0x03DE\n+        Attr(#28, 32) { \/\/ Code at 0x039F\n@@ -1512,1 +1509,1 @@\n-            Attr(#31, 6) { \/\/ LineNumberTable at 0x03F8\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n@@ -1514,1 +1511,1 @@\n-                0  2; \/\/  at 0x0404\n+                0  1; \/\/  at 0x03C5\n@@ -1522,1 +1519,1 @@\n-    { \/\/ Member at 0x0404\n+    { \/\/ Member at 0x03C5\n@@ -1525,1 +1522,1 @@\n-      #34; \/\/ sig_cpx\n+      #32; \/\/ sig_cpx\n@@ -1527,1 +1524,1 @@\n-        Attr(#30, 31) { \/\/ Code at 0x040C\n+        Attr(#28, 31) { \/\/ Code at 0x03CD\n@@ -1536,1 +1533,1 @@\n-            Attr(#31, 6) { \/\/ LineNumberTable at 0x0425\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n@@ -1538,1 +1535,1 @@\n-                0  2; \/\/  at 0x0431\n+                0  1; \/\/  at 0x03F2\n@@ -1546,1 +1543,1 @@\n-    { \/\/ Member at 0x0431\n+    { \/\/ Member at 0x03F2\n@@ -1548,2 +1545,2 @@\n-      #35; \/\/ name_cpx\n-      #36; \/\/ sig_cpx\n+      #33; \/\/ name_cpx\n+      #34; \/\/ sig_cpx\n@@ -1551,1 +1548,1 @@\n-        Attr(#30, 56) { \/\/ Code at 0x0439\n+        Attr(#28, 56) { \/\/ Code at 0x03FA\n@@ -1562,1 +1559,1 @@\n-            Attr(#31, 18) { \/\/ LineNumberTable at 0x045F\n+            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n@@ -1564,4 +1561,4 @@\n-                0  6; \/\/  at 0x046B\n-                4  7; \/\/  at 0x046F\n-                11  8; \/\/  at 0x0473\n-                18  9; \/\/  at 0x0477\n+                0  5; \/\/  at 0x042C\n+                4  6; \/\/  at 0x0430\n+                11  7; \/\/  at 0x0434\n+                18  8; \/\/  at 0x0438\n@@ -1577,2 +1574,2 @@\n-    Attr(#37, 2) { \/\/ SourceFile at 0x0479\n-      #38;\n+    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n+      #36;\n@@ -1581,1 +1578,1 @@\n-    Attr(#39, 6) { \/\/ BootstrapMethods at 0x0481\n+    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n@@ -1584,1 +1581,1 @@\n-          #40; \/\/ bootstrap_method_ref\n+          #38; \/\/ bootstrap_method_ref\n@@ -1591,1 +1588,1 @@\n-    Attr(#47, 10) { \/\/ InnerClasses at 0x048D\n+    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n@@ -1593,1 +1590,1 @@\n-        #48 #50 #52 25; \/\/  at 0x049D\n+        #46 #48 #50 25; \/\/  at 0x045E\n@@ -1597,1 +1594,1 @@\n-} \/\/ end class InlineImplementsIdentityObject\n+} \/\/ end class ValueSuperNotAbstract\n@@ -1601,3 +1598,2 @@\n-\/\/ Inline class with a super class that implements java.lang.IdentityObject.\n-\/\/ Loading this class should throw an ICCE.\n-class SuperImplementsIdentityObject {\n+\/\/ Value class with a super class that has instance fields.\n+class ValueSuperHasNonStaticFields {\n@@ -1610,1 +1606,1 @@\n-    Utf8 \"SuperImplementsIdentityObject\"; \/\/ #2     at 0x0D\n+    Utf8 \"ValueSuperHasNonStaticFields\"; \/\/ #2     at 0x0D\n@@ -1621,1 +1617,1 @@\n-    Utf8 \"(QSuperImplementsIdentityObject;)I\"; \/\/ #13     at 0x55\n+    Utf8 \"(LValueSuperHasNonStaticFields;)I\"; \/\/ #13     at 0x55\n@@ -1625,1 +1621,1 @@\n-    Utf8 \"(QSuperImplementsIdentityObject;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    Utf8 \"(LValueSuperHasNonStaticFields;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n@@ -1629,1 +1625,1 @@\n-    Utf8 \"(QSuperImplementsIdentityObject;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    Utf8 \"(LValueSuperHasNonStaticFields;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n@@ -1631,1 +1627,1 @@\n-    Utf8 \"ImplementsIdentityObject\"; \/\/ #23     at 0xEB\n+    Utf8 \"HasNonStaticFields\"; \/\/ #23     at 0xEB\n@@ -1642,1 +1638,1 @@\n-    Utf8 \"()QSuperImplementsIdentityObject;\"; \/\/ #34     at 0x017A\n+    Utf8 \"()LValueSuperHasNonStaticFields;\"; \/\/ #34     at 0x017A\n@@ -1644,1 +1640,1 @@\n-    Utf8 \"SuperImplementsIdentityObject.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"ValueSuperHasNonStaticFields.java\"; \/\/ #36     at 0x019E\n@@ -1661,1 +1657,1 @@\n-  0x0931; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n@@ -1858,1 +1854,2 @@\n-} \/\/ end class SuperImplementsIdentityObject\n+} \/\/ end class ValueSuperHasNonStaticFields\n+\n@@ -1861,3 +1858,2 @@\n-\/\/ Inline class with a super class that implements an interface that extends other\n-\/\/ interfaces that eventually extend java.lang.IdentityObject\n-class SuperIntfImplementsIdentityObject {\n+\/\/ primitive value class with a super class whose super class has a syncronized instance method.\n+class ValueSuperHasSynchMethod {\n@@ -1870,1 +1866,1 @@\n-    Utf8 \"SuperIntfImplementsIdentityObject\"; \/\/ #2     at 0x0D\n+    Utf8 \"ValueSuperHasSynchMethod\"; \/\/ #2     at 0x0D\n@@ -1881,1 +1877,1 @@\n-    Utf8 \"(QSuperIntfImplementsIdentityObject;)I\"; \/\/ #13     at 0x55\n+    Utf8 \"(LValueSuperHasSynchMethod;)I\"; \/\/ #13     at 0x55\n@@ -1885,1 +1881,1 @@\n-    Utf8 \"(QSuperIntfImplementsIdentityObject;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    Utf8 \"(LValueSuperHasSynchMethod;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n@@ -1889,1 +1885,1 @@\n-    Utf8 \"(QSuperIntfImplementsIdentityObject;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    Utf8 \"(LValueSuperHasSynchMethod;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n@@ -1891,1 +1887,1 @@\n-    Utf8 \"IntfImplementsIdentityObject\"; \/\/ #23     at 0xEB\n+    Utf8 \"ValidSuper\"; \/\/ #23     at 0xEB\n@@ -1902,1 +1898,1 @@\n-    Utf8 \"()QSuperIntfImplementsIdentityObject;\"; \/\/ #34     at 0x017A\n+    Utf8 \"()LValueSuperHasSynchMethod;\"; \/\/ #34     at 0x017A\n@@ -1904,1 +1900,1 @@\n-    Utf8 \"SuperIntfImplementsIdentityObject.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"ValueSuperHasSynchMethod.java\"; \/\/ #36     at 0x019E\n@@ -1921,1 +1917,1 @@\n-  0x0931; \/\/ access [ ACC_VALUE ACC_PRIMITIVE ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n@@ -2118,1 +2114,524 @@\n-} \/\/ end class SuperIntfImplementsIdentityObject\n+} \/\/ end class ValueSuperHasSynchMethod\n+\n+\n+\/\/ primitive value class with a super class containing a constructor that has arguments.\n+class ValueSuperCtorHasArgs {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  63; \/\/ version\n+  [51] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"ValueSuperCtorHasArgs\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x20\n+    NameAndType #5 #6; \/\/ #4     at 0x25\n+    Utf8 \"x\"; \/\/ #5     at 0x2A\n+    Utf8 \"I\"; \/\/ #6     at 0x2E\n+    Field #1 #8; \/\/ #7     at 0x32\n+    NameAndType #9 #6; \/\/ #8     at 0x37\n+    Utf8 \"y\"; \/\/ #9     at 0x3C\n+    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n+    NameAndType #12 #13; \/\/ #11     at 0x45\n+    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n+    Utf8 \"(LValueSuperCtorHasArgs;)I\"; \/\/ #13     at 0x55\n+    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n+    NameAndType #16 #17; \/\/ #15     at 0x72\n+    Utf8 \"equals\"; \/\/ #16     at 0x77\n+    Utf8 \"(LValueSuperCtorHasArgs;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n+    NameAndType #20 #21; \/\/ #19     at 0xAF\n+    Utf8 \"toString\"; \/\/ #20     at 0xB4\n+    Utf8 \"(LValueSuperCtorHasArgs;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    class #23; \/\/ #22     at 0xE8\n+    Utf8 \"CtorHasArgs\"; \/\/ #23     at 0xEB\n+    class #25; \/\/ #24     at 0xF9\n+    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n+    Utf8 \"getX\"; \/\/ #26     at 0x0115\n+    Utf8 \"()I\"; \/\/ #27     at 0x011C\n+    Utf8 \"Code\"; \/\/ #28     at 0x0122\n+    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n+    Utf8 \"getY\"; \/\/ #30     at 0x013B\n+    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n+    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n+    Utf8 \"<init>\"; \/\/ #33     at 0x0171\n+    Utf8 \"()LValueSuperCtorHasArgs;\"; \/\/ #34     at 0x017A\n+    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n+    Utf8 \"ValueSuperCtorHasArgs.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n+    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n+    Method #40 #41; \/\/ #39     at 0x01CD\n+    class #42; \/\/ #40     at 0x01D2\n+    NameAndType #43 #44; \/\/ #41     at 0x01D5\n+    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n+    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n+    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n+    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n+    class #47; \/\/ #46     at 0x029E\n+    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n+    class #49; \/\/ #48     at 0x02C9\n+    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n+    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n+  } \/\/ Constant Pool\n+\n+  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #22;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [2] { \/\/ fields\n+    { \/\/ Member at 0x0302\n+      0x0010; \/\/ access\n+      #5; \/\/ name_cpx\n+      #6; \/\/ sig_cpx\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x030A\n+      0x0010; \/\/ access\n+      #9; \/\/ name_cpx\n+      #6; \/\/ sig_cpx\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    } \/\/ Member\n+  } \/\/ fields\n+\n+  [6] { \/\/ methods\n+    { \/\/ Member at 0x0314\n+      0x0001; \/\/ access\n+      #26; \/\/ name_cpx\n+      #27; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 29) { \/\/ Code at 0x031C\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40003AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n+              [1] { \/\/ LineNumberTable\n+                0  10; \/\/  at 0x033F\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x033F\n+      0x0001; \/\/ access\n+      #30; \/\/ name_cpx\n+      #27; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 29) { \/\/ Code at 0x0347\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40007AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n+              [1] { \/\/ LineNumberTable\n+                0  11; \/\/  at 0x036A\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x036A\n+      0x0011; \/\/ access\n+      #12; \/\/ name_cpx\n+      #27; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 31) { \/\/ Code at 0x0372\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[7]{\n+            0x2ABA000A0000AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n+              [1] { \/\/ LineNumberTable\n+                0  1; \/\/  at 0x0397\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x0397\n+      0x0011; \/\/ access\n+      #16; \/\/ name_cpx\n+      #31; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 32) { \/\/ Code at 0x039F\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[8]{\n+            0x2A2BBA000E0000AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n+              [1] { \/\/ LineNumberTable\n+                0  1; \/\/  at 0x03C5\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x03C5\n+      0x0011; \/\/ access\n+      #20; \/\/ name_cpx\n+      #32; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 31) { \/\/ Code at 0x03CD\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[7]{\n+            0x2ABA00120000B0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n+              [1] { \/\/ LineNumberTable\n+                0  1; \/\/  at 0x03F2\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x03F2\n+      0x000A; \/\/ access\n+      #33; \/\/ name_cpx\n+      #34; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 56) { \/\/ Code at 0x03FA\n+          2; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[20]{\n+            0xCB00014B032A5FCC;\n+            0x00034B032A5FCC00;\n+            0x074B2AB0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n+              [4] { \/\/ LineNumberTable\n+                0  5; \/\/  at 0x042C\n+                4  6; \/\/  at 0x0430\n+                11  7; \/\/  at 0x0434\n+                18  8; \/\/  at 0x0438\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+  } \/\/ methods\n+\n+  [3] { \/\/ Attributes\n+    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n+      #36;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n+      [1] { \/\/ bootstrap_methods\n+        {  \/\/  bootstrap_method\n+          #38; \/\/ bootstrap_method_ref\n+          [0] { \/\/ bootstrap_arguments\n+          }  \/\/  bootstrap_arguments\n+        }  \/\/  bootstrap_method\n+      }\n+    } \/\/ end BootstrapMethods\n+    ;\n+    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n+      [1] { \/\/ InnerClasses\n+        #46 #48 #50 25; \/\/  at 0x045E\n+      }\n+    } \/\/ end InnerClasses\n+  } \/\/ Attributes\n+} \/\/ end class ValueSuperCtorHasArgs\n+\n+\n+\n+\/\/ primitive value class with a super class containing a constructor that has a non-empty\n+\/\/ method body.\n+class ValueSuperCtorIsNotEmpty {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  63; \/\/ version\n+  [51] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"ValueSuperCtorIsNotEmpty\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x20\n+    NameAndType #5 #6; \/\/ #4     at 0x25\n+    Utf8 \"x\"; \/\/ #5     at 0x2A\n+    Utf8 \"I\"; \/\/ #6     at 0x2E\n+    Field #1 #8; \/\/ #7     at 0x32\n+    NameAndType #9 #6; \/\/ #8     at 0x37\n+    Utf8 \"y\"; \/\/ #9     at 0x3C\n+    InvokeDynamic 0s #11; \/\/ #10     at 0x40\n+    NameAndType #12 #13; \/\/ #11     at 0x45\n+    Utf8 \"hashCode\"; \/\/ #12     at 0x4A\n+    Utf8 \"(LValueSuperCtorIsNotEmpty;)I\"; \/\/ #13     at 0x55\n+    InvokeDynamic 0s #15; \/\/ #14     at 0x6D\n+    NameAndType #16 #17; \/\/ #15     at 0x72\n+    Utf8 \"equals\"; \/\/ #16     at 0x77\n+    Utf8 \"(LValueSuperCtorIsNotEmpty;Ljava\/lang\/Object;)Z\"; \/\/ #17     at 0x80\n+    InvokeDynamic 0s #19; \/\/ #18     at 0xAA\n+    NameAndType #20 #21; \/\/ #19     at 0xAF\n+    Utf8 \"toString\"; \/\/ #20     at 0xB4\n+    Utf8 \"(LValueSuperCtorIsNotEmpty;)Ljava\/lang\/String;\"; \/\/ #21     at 0xBF\n+    class #23; \/\/ #22     at 0xE8\n+    Utf8 \"CtorIsNotEmpty\"; \/\/ #23     at 0xEB\n+    class #25; \/\/ #24     at 0xF9\n+    Utf8 \"Unused\"; \/\/ #25     at 0xFC\n+    Utf8 \"getX\"; \/\/ #26     at 0x0115\n+    Utf8 \"()I\"; \/\/ #27     at 0x011C\n+    Utf8 \"Code\"; \/\/ #28     at 0x0122\n+    Utf8 \"LineNumberTable\"; \/\/ #29     at 0x0129\n+    Utf8 \"getY\"; \/\/ #30     at 0x013B\n+    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #31     at 0x0142\n+    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #32     at 0x015A\n+    Utf8 \"<init>\"; \/\/ #33     at 0x0171\n+    Utf8 \"()LValueSuperCtorIsNotEmpty;\"; \/\/ #34     at 0x017A\n+    Utf8 \"SourceFile\"; \/\/ #35     at 0x0191\n+    Utf8 \"ValueSuperCtorIsNotEmpty.java\"; \/\/ #36     at 0x019E\n+    Utf8 \"BootstrapMethods\"; \/\/ #37     at 0x01B6\n+    MethodHandle 6b #39; \/\/ #38     at 0x01C9\n+    Method #40 #41; \/\/ #39     at 0x01CD\n+    class #42; \/\/ #40     at 0x01D2\n+    NameAndType #43 #44; \/\/ #41     at 0x01D5\n+    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #42     at 0x01DA\n+    Utf8 \"makeBootstrapMethod\"; \/\/ #43     at 0x0203\n+    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #44     at 0x0219\n+    Utf8 \"InnerClasses\"; \/\/ #45     at 0x028F\n+    class #47; \/\/ #46     at 0x029E\n+    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #47     at 0x02A1\n+    class #49; \/\/ #48     at 0x02C9\n+    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #49     at 0x02CC\n+    Utf8 \"Lookup\"; \/\/ #50     at 0x02ED\n+  } \/\/ Constant Pool\n+\n+  0x0051; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #22;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [2] { \/\/ fields\n+    { \/\/ Member at 0x0302\n+      0x0010; \/\/ access\n+      #5; \/\/ name_cpx\n+      #6; \/\/ sig_cpx\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x030A\n+      0x0010; \/\/ access\n+      #9; \/\/ name_cpx\n+      #6; \/\/ sig_cpx\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    } \/\/ Member\n+  } \/\/ fields\n+\n+  [6] { \/\/ methods\n+    { \/\/ Member at 0x0314\n+      0x0001; \/\/ access\n+      #26; \/\/ name_cpx\n+      #27; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 29) { \/\/ Code at 0x031C\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40003AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x0333\n+              [1] { \/\/ LineNumberTable\n+                0  10; \/\/  at 0x033F\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x033F\n+      0x0001; \/\/ access\n+      #30; \/\/ name_cpx\n+      #27; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 29) { \/\/ Code at 0x0347\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40007AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x035E\n+              [1] { \/\/ LineNumberTable\n+                0  11; \/\/  at 0x036A\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x036A\n+      0x0011; \/\/ access\n+      #12; \/\/ name_cpx\n+      #27; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 31) { \/\/ Code at 0x0372\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[7]{\n+            0x2ABA000A0000AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x038B\n+              [1] { \/\/ LineNumberTable\n+                0  1; \/\/  at 0x0397\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x0397\n+      0x0011; \/\/ access\n+      #16; \/\/ name_cpx\n+      #31; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 32) { \/\/ Code at 0x039F\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[8]{\n+            0x2A2BBA000E0000AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x03B9\n+              [1] { \/\/ LineNumberTable\n+                0  1; \/\/  at 0x03C5\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x03C5\n+      0x0011; \/\/ access\n+      #20; \/\/ name_cpx\n+      #32; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 31) { \/\/ Code at 0x03CD\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[7]{\n+            0x2ABA00120000B0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 6) { \/\/ LineNumberTable at 0x03E6\n+              [1] { \/\/ LineNumberTable\n+                0  1; \/\/  at 0x03F2\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x03F2\n+      0x000A; \/\/ access\n+      #33; \/\/ name_cpx\n+      #34; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#28, 56) { \/\/ Code at 0x03FA\n+          2; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[20]{\n+            0xCB00014B032A5FCC;\n+            0x00034B032A5FCC00;\n+            0x074B2AB0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#29, 18) { \/\/ LineNumberTable at 0x0420\n+              [4] { \/\/ LineNumberTable\n+                0  5; \/\/  at 0x042C\n+                4  6; \/\/  at 0x0430\n+                11  7; \/\/  at 0x0434\n+                18  8; \/\/  at 0x0438\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+  } \/\/ methods\n+\n+  [3] { \/\/ Attributes\n+    Attr(#35, 2) { \/\/ SourceFile at 0x043A\n+      #36;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#37, 6) { \/\/ BootstrapMethods at 0x0442\n+      [1] { \/\/ bootstrap_methods\n+        {  \/\/  bootstrap_method\n+          #38; \/\/ bootstrap_method_ref\n+          [0] { \/\/ bootstrap_arguments\n+          }  \/\/  bootstrap_arguments\n+        }  \/\/  bootstrap_method\n+      }\n+    } \/\/ end BootstrapMethods\n+    ;\n+    Attr(#45, 10) { \/\/ InnerClasses at 0x044E\n+      [1] { \/\/ InnerClasses\n+        #46 #48 #50 25; \/\/  at 0x045E\n+      }\n+    } \/\/ end InnerClasses\n+  } \/\/ Attributes\n+} \/\/ end class ValueSuperCtorIsNotEmpty\n+\n+\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/InlineClassWithBadSupers.jcod","additions":697,"deletions":178,"binary":false,"changes":875,"status":"modified"},{"patch":"@@ -1,33 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-interface I1 extends java.lang.IdentityObject { }\n-interface I2 extends I1 { }\n-interface J1 { }\n-interface I3 extends I2, J1 { }\n-\n-\/\/ Abstract class that implements an interface with an ancestor that implements\n-\/\/ java.lang.IdentityObject.  It is not a legal super class for an inline class.\n-public abstract class IntfImplementsIdentityObject implements I3 {\n-    IntfImplementsIdentityObject() { }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/IntfImplementsIdentityObject.java","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -27,1 +27,2 @@\n- * @summary test that the JVM detects illegal super classes for inline types.\n+ * @summary test that the JVM detects illegal super classes for value object\n+ *           and primitive value types.\n@@ -29,2 +30,2 @@\n- * @compile HasSynchMethod.java ValidSuper.java ImplementsIdentityObject.java\n- * @compile IntfImplementsIdentityObject.java InlineClassWithBadSupers.jcod\n+ * @compile HasSynchMethod.java ValidSuper.java\n+ * @compile InlineClassWithBadSupers.jcod\n@@ -50,3 +51,1 @@\n-        \/\/ Test that the super class of an inline type must be java.lang.Object or an abstract class.\n-        runTestIncompatibleClassChangeError(\"SuperNotAbstract\",\n-            \"class SuperNotAbstract has an invalid super class NotAbstract\");\n+        \/\/ Value Objects...\n@@ -54,3 +53,3 @@\n-        \/\/ Test that the super class of an inline type cannot have instance fields.\n-        runTestIncompatibleClassChangeError(\"SuperHasNonStaticFields\",\n-            \"SuperHasNonStaticFields has an invalid super class HasNonStaticFields\");\n+        \/\/ Test that the super class of an value type must be java.lang.Object or an abstract class.\n+        runTestIncompatibleClassChangeError(\"ValueSuperNotAbstract\",\n+            \"class ValueSuperNotAbstract has an invalid super class NotAbstract\");\n@@ -58,3 +57,3 @@\n-        \/\/ Test that the super class of an inline type cannot contain a synchronized instance method.\n-        runTestIncompatibleClassChangeError(\"SuperHasSynchMethod\",\n-            \"SuperHasSynchMethod has an invalid super class ValidSuper\");\n+        \/\/ Test that the super class of an value type cannot have instance fields.\n+        runTestIncompatibleClassChangeError(\"ValueSuperHasNonStaticFields\",\n+            \"ValueSuperHasNonStaticFields has an invalid super class HasNonStaticFields\");\n@@ -62,3 +61,3 @@\n-        \/\/ Test that the constructor in a super class of an inline type must have a signature of \"()V\".\n-        runTestIncompatibleClassChangeError(\"SuperCtorHasArgs\",\n-            \"SuperCtorHasArgs has an invalid super class CtorHasArgs\");\n+        \/\/ Test that the super class of an value type cannot contain a synchronized instance method.\n+        runTestIncompatibleClassChangeError(\"ValueSuperHasSynchMethod\",\n+            \"ValueSuperHasSynchMethod has an invalid super class ValidSuper\");\n@@ -66,3 +65,3 @@\n-        \/\/ Test that the constructor in a super class of an inline type must be empty.\n-        runTestIncompatibleClassChangeError(\"SuperCtorIsNotEmpty\",\n-            \"SuperCtorIsNotEmpty has an invalid super class CtorIsNotEmpty\");\n+        \/\/ Test that the constructor in a super class of an value type must have a signature of \"()V\".\n+        runTestIncompatibleClassChangeError(\"ValueSuperCtorHasArgs\",\n+            \"ValueSuperCtorHasArgs has an invalid super class CtorHasArgs\");\n@@ -70,3 +69,3 @@\n-        \/\/ Test that an inline class cannot implement java.lang.IdentityObject.\n-        runTestIncompatibleClassChangeError(\"InlineImplementsIdentityObject\",\n-            \"attempts to implement interface java.lang.IdentityObject\");\n+        \/\/ Test that the constructor in a super class of an value type must be empty.\n+        runTestIncompatibleClassChangeError(\"ValueSuperCtorIsNotEmpty\",\n+            \"ValueSuperCtorIsNotEmpty has an invalid super class CtorIsNotEmpty\");\n@@ -74,3 +73,1 @@\n-        \/\/ Test that an inline class's super type cannot implement java.lang.IdentityObject.\n-        runTestIncompatibleClassChangeError(\"SuperImplementsIdentityObject\",\n-            \"SuperImplementsIdentityObject has an invalid super class ImplementsIdentityObject\");\n+        \/\/ Primitive values...\n@@ -78,3 +75,19 @@\n-        \/\/ Test that an inline class's super type's interfaces cannot implement java.lang.IdentityObject.\n-        runTestIncompatibleClassChangeError(\"SuperIntfImplementsIdentityObject\",\n-            \"SuperIntfImplementsIdentityObject has an invalid super class IntfImplementsIdentityObject\");\n+        \/\/ Test that the super class of an primitive value type must be java.lang.Object or an abstract class.\n+        runTestIncompatibleClassChangeError(\"PrimitiveSuperNotAbstract\",\n+            \"class PrimitiveSuperNotAbstract has an invalid super class NotAbstract\");\n+\n+        \/\/ Test that the super class of an primitive value type cannot have instance fields.\n+        runTestIncompatibleClassChangeError(\"PrimitiveSuperHasNonStaticFields\",\n+            \"PrimitiveSuperHasNonStaticFields has an invalid super class HasNonStaticFields\");\n+\n+        \/\/ Test that the super class of an primitive value type cannot contain a synchronized instance method.\n+        runTestIncompatibleClassChangeError(\"PrimitiveSuperHasSynchMethod\",\n+            \"PrimitiveSuperHasSynchMethod has an invalid super class ValidSuper\");\n+\n+        \/\/ Test that the constructor in a super class of an primitive value type must have a signature of \"()V\".\n+        runTestIncompatibleClassChangeError(\"PrimitiveSuperCtorHasArgs\",\n+            \"PrimitiveSuperCtorHasArgs has an invalid super class CtorHasArgs\");\n+\n+        \/\/ Test that the constructor in a super class of an primitive value type must be empty.\n+        runTestIncompatibleClassChangeError(\"PrimitiveSuperCtorIsNotEmpty\",\n+            \"PrimitiveSuperCtorIsNotEmpty has an invalid super class CtorIsNotEmpty\");\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/testSupers\/TestSuperClasses.java","additions":40,"deletions":27,"binary":false,"changes":67,"status":"modified"}]}