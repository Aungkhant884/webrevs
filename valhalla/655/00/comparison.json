{"files":[{"patch":"@@ -616,1 +616,5 @@\n-            warn.warn(LintCategory.UNIVERSAL);\n+            if (t.hasTag(BOT)) {\n+                chk.warnUniversalTVar(warn.pos(), Warnings.UniversalVariableCannotBeAssignedNull);\n+            } else {\n+                chk.warnUniversalTVar(warn.pos(), Warnings.UniversalVariableCannotBeAssignedNull2);\n+            }\n@@ -630,1 +634,1 @@\n-                chk.warnValueConversion(warn.pos(), Warnings.PrimitiveValueConversion);\n+                chk.warnUniversalTVar(warn.pos(), Warnings.PrimitiveValueConversion);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -303,5 +303,0 @@\n-    public void warnValueConversion(DiagnosticPosition pos, Warning warnKey) {\n-        if (lint.isEnabled(LintCategory.UNIVERSAL))\n-            log.warning(LintCategory.UNIVERSAL, pos, warnKey);\n-    }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4031,1 +4031,4 @@\n-    variables of type universal type variable cannot be assigned null\n+    universal type variables cannot be assigned null\n+\n+compiler.warn.universal.variable.cannot.be.assigned.null.2=\\\n+    probable null assigment to a universal type variable\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.warn.universal.variable.cannot.be.assigned.null.2\n+\/\/ options: -Xlint:universal\n+\n+import java.util.function.*;\n+\n+class UniversalCantBeAssignedNull2<__universal K, __universal V> {\n+    K getKey(K k) { return k; }\n+    V getValue(V v) { return v; }\n+\n+    void m(BiFunction<? super K, ? super V, ? extends V> f, K k1, V v1) {\n+        K k = getKey(k1);\n+        V v = getValue(v1);\n+        v = f.apply(k, v);\n+    }\n+}\n+\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/UniversalCantBeAssignedNull2.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -96,0 +96,17 @@\n+        assertOKWithWarning(\"compiler.warn.universal.variable.cannot.be.assigned.null.2\",\n+                \"\"\"\n+                import java.util.function.*;\n+\n+                class MyMap<__universal K, __universal V> {\n+                    K getKey(K k) { return k; }\n+                    V getValue(V v) { return v; }\n+\n+                    void m(BiFunction<? super K, ? super V, ? extends V> f, K k1, V v1) {\n+                        K k = getKey(k1);\n+                        V v = getValue(v1);\n+                        v = f.apply(k, v);\n+                    }\n+                }\n+                \"\"\"\n+        );\n+\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/universal-type-variables\/UniversalTVarsCompilationTests.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}