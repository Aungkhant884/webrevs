{"files":[{"patch":"@@ -133,1 +133,1 @@\n-      apt-gcc-version: '10.4.0-4ubuntu1~22.04'\n+      apt-gcc-version: '10.5.0-1ubuntu1~22.04'\n@@ -147,1 +147,1 @@\n-      apt-gcc-version: '10.4.0-4ubuntu1~22.04'\n+      apt-gcc-version: '10.5.0-1ubuntu1~22.04'\n@@ -166,1 +166,1 @@\n-      apt-gcc-version: '10.4.0-4ubuntu1~22.04'\n+      apt-gcc-version: '10.5.0-1ubuntu1~22.04'\n@@ -181,1 +181,1 @@\n-      apt-gcc-version: '10.4.0-4ubuntu1~22.04'\n+      apt-gcc-version: '10.5.0-1ubuntu1~22.04'\n@@ -196,1 +196,1 @@\n-      apt-gcc-version: '10.4.0-4ubuntu1~22.04'\n+      apt-gcc-version: '10.5.0-1ubuntu1~22.04'\n@@ -212,1 +212,1 @@\n-      apt-gcc-version: '10.4.0-4ubuntu1~22.04'\n+      apt-gcc-version: '10.5.0-1ubuntu1~22.04'\n@@ -226,2 +226,2 @@\n-      apt-gcc-version: '10.4.0-4ubuntu1~22.04'\n-      apt-gcc-cross-version: '10.4.0-4ubuntu1~22.04cross1'\n+      apt-gcc-version: '10.5.0-1ubuntu1~22.04'\n+      apt-gcc-cross-version: '10.5.0-1ubuntu1~22.04cross1'\n@@ -293,1 +293,1 @@\n-      apt-gcc-version: '10.4.0-4ubuntu1~22.04'\n+      apt-gcc-version: '10.5.0-1ubuntu1~22.04'\n","filename":".github\/workflows\/main.yml","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -803,0 +803,1 @@\n+  # The minidumps are disabled by default on client Windows, so enable them\n@@ -805,0 +806,1 @@\n+    $1_JTREG_BASIC_OPTIONS += -vmoption:-XX:+CreateCoredumpOnCrash\n","filename":"make\/RunTests.gmk","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,0 +284,6 @@\n+    # 'nm' on AIX needs -X64 option\n+\n+    ifeq ($(call isTargetOs, aix), true)\n+      NM := $(NM) -X64\n+    endif\n+\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -248,0 +248,2 @@\n+        DISABLED_WARNINGS_gcc_screencast_pipewire.c := undef, \\\n+        DISABLED_WARNINGS_gcc_screencast_portal.c := undef, \\\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-  bool should_save_return_value = !_needs_return_buffer && _needs_transition;\n+  bool should_save_return_value = !_needs_return_buffer;\n","filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -2069,1 +2070,1 @@\n-  \/\/ Scale the index to be the entry index * sizeof(ResolvedInvokeDynamicInfo)\n+  \/\/ Scale the index to be the entry index * sizeof(ResolvedIndyEntry)\n@@ -2074,0 +2075,16 @@\n+\n+void InterpreterMacroAssembler::load_field_entry(Register cache, Register index, int bcp_offset) {\n+  \/\/ Get index out of bytecode pointer\n+  get_cache_index_at_bcp(index, bcp_offset, sizeof(u2));\n+  \/\/ Take shortcut if the size is a power of 2\n+  if (is_power_of_2(sizeof(ResolvedFieldEntry))) {\n+    lsl(index, index, log2i_exact(sizeof(ResolvedFieldEntry))); \/\/ Scale index by power of 2\n+  } else {\n+    mov(cache, sizeof(ResolvedFieldEntry));\n+    mul(index, index, cache); \/\/ Scale the index to be the entry index * sizeof(ResolvedFieldEntry)\n+  }\n+  \/\/ Get address of field entries array\n+  ldr(cache, Address(rcpool, ConstantPoolCache::field_entries_offset()));\n+  add(cache, cache, Array<ResolvedFieldEntry>::base_offset_in_bytes());\n+  lea(cache, Address(cache, index));\n+}\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -349,0 +349,1 @@\n+  void load_field_entry(Register cache, Register index, int bcp_offset = 1);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -1740,1 +1741,1 @@\n-  tbnz(flags, ConstantPoolCacheEntry::is_null_free_inline_type_shift, is_null_free_inline_type);\n+  tbnz(flags, ResolvedFieldEntry::is_null_free_inline_type_shift, is_null_free_inline_type);\n@@ -1745,1 +1746,1 @@\n-  tbz(flags, ConstantPoolCacheEntry::is_null_free_inline_type_shift, not_null_free_inline_type);\n+  tbz(flags, ResolvedFieldEntry::is_null_free_inline_type_shift, not_null_free_inline_type);\n@@ -1750,1 +1751,1 @@\n-  tbnz(flags, ConstantPoolCacheEntry::is_flat_shift, is_flat);\n+  tbnz(flags, ResolvedFieldEntry::is_flat_shift, is_flat);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -191,1 +192,8 @@\n-      __ get_cache_and_index_and_bytecode_at_bcp(temp_reg, bc_reg, temp_reg, byte_no, 1);\n+      __ load_field_entry(temp_reg, bc_reg);\n+      if (byte_no == f1_byte) {\n+        __ lea(temp_reg, Address(temp_reg, in_bytes(ResolvedFieldEntry::get_code_offset())));\n+      } else {\n+        __ lea(temp_reg, Address(temp_reg, in_bytes(ResolvedFieldEntry::put_code_offset())));\n+      }\n+      \/\/ Load-acquire the bytecode to match store-release in ResolvedFieldEntry::fill_in()\n+      __ ldarb(temp_reg, temp_reg);\n@@ -2377,5 +2385,0 @@\n-  switch (code) {\n-  case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n-  case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n-  default: break;\n-  }\n@@ -2409,0 +2412,63 @@\n+void TemplateTable::resolve_cache_and_index_for_field(int byte_no,\n+                                            Register Rcache,\n+                                            Register index) {\n+  const Register temp = r19;\n+  assert_different_registers(Rcache, index, temp);\n+\n+  Label resolved;\n+\n+  Bytecodes::Code code = bytecode();\n+  switch (code) {\n+  case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n+  case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n+  default: break;\n+  }\n+\n+  assert(byte_no == f1_byte || byte_no == f2_byte, \"byte_no out of range\");\n+  __ load_field_entry(Rcache, index);\n+  if (byte_no == f1_byte) {\n+    __ lea(temp, Address(Rcache, in_bytes(ResolvedFieldEntry::get_code_offset())));\n+  } else {\n+    __ lea(temp, Address(Rcache, in_bytes(ResolvedFieldEntry::put_code_offset())));\n+  }\n+  \/\/ Load-acquire the bytecode to match store-release in ResolvedFieldEntry::fill_in()\n+  __ ldarb(temp, temp);\n+  __ subs(zr, temp, (int) code);  \/\/ have we resolved this bytecode?\n+  __ br(Assembler::EQ, resolved);\n+\n+  \/\/ resolve first time through\n+  address entry = CAST_FROM_FN_PTR(address, InterpreterRuntime::resolve_from_cache);\n+  __ mov(temp, (int) code);\n+  __ call_VM(noreg, entry, temp);\n+\n+  \/\/ Update registers with resolved info\n+  __ load_field_entry(Rcache, index);\n+  __ bind(resolved);\n+}\n+\n+void TemplateTable::load_resolved_field_entry(Register obj,\n+                                              Register cache,\n+                                              Register tos_state,\n+                                              Register offset,\n+                                              Register flags,\n+                                              bool is_static = false) {\n+  assert_different_registers(cache, tos_state, flags, offset);\n+\n+  \/\/ Field offset\n+  __ load_sized_value(offset, Address(cache, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n+\n+  \/\/ Flags\n+  __ load_unsigned_byte(flags, Address(cache, in_bytes(ResolvedFieldEntry::flags_offset())));\n+\n+  \/\/ TOS state\n+  __ load_unsigned_byte(tos_state, Address(cache, in_bytes(ResolvedFieldEntry::type_offset())));\n+\n+  \/\/ Klass overwrite register\n+  if (is_static) {\n+    __ ldr(obj, Address(cache, ResolvedFieldEntry::field_holder_offset()));\n+    const int mirror_offset = in_bytes(Klass::java_mirror_offset());\n+    __ ldr(obj, Address(obj, mirror_offset));\n+    __ resolve_oop_handle(obj, r5, rscratch2);\n+  }\n+}\n+\n@@ -2560,2 +2626,1 @@\n-    __ get_cache_and_index_at_bcp(c_rarg2, c_rarg3, 1);\n-    __ lea(c_rarg2, Address(c_rarg2, in_bytes(ConstantPoolCache::base_offset())));\n+    __ load_field_entry(c_rarg2, index);\n@@ -2571,1 +2636,0 @@\n-    \/\/ c_rarg3: jvalue object on the stack\n@@ -2574,2 +2638,2 @@\n-               c_rarg1, c_rarg2, c_rarg3);\n-    __ get_cache_and_index_at_bcp(cache, index, 1);\n+               c_rarg1, c_rarg2);\n+    __ load_field_entry(cache, index);\n@@ -2589,4 +2653,3 @@\n-  const Register cache = r2;\n-  const Register index = r3;\n-  const Register obj   = r4;\n-  const Register klass = r5;\n+  const Register cache     = r2;\n+  const Register obj       = r4;\n+  const Register klass     = r5;\n@@ -2594,6 +2657,8 @@\n-  const Register off   = r19;\n-  const Register flags = r0;\n-  const Register raw_flags = r6;\n-  const Register bc    = r4; \/\/ uses same reg as obj, so don't mix them\n-\n-  resolve_cache_and_index(byte_no, cache, index, sizeof(u2));\n+  const Register field_index = r23;\n+  const Register index     = r3;\n+  const Register tos_state = r3;\n+  const Register off       = r19;\n+  const Register flags     = r6;\n+  const Register bc        = r4; \/\/ uses same reg as obj, so don't mix them\n+\n+  resolve_cache_and_index_for_field(byte_no, cache, index);\n@@ -2601,1 +2666,6 @@\n-  load_field_cp_cache_entry(obj, cache, index, off, raw_flags, is_static);\n+\n+  \/\/ Valhalla extras\n+  __ load_unsigned_short(field_index, Address(cache, in_bytes(ResolvedFieldEntry::field_index_offset())));\n+  __ ldr(klass, Address(cache, ResolvedFieldEntry::field_holder_offset()));\n+\n+  load_resolved_field_entry(obj, cache, tos_state, off, flags, is_static);\n@@ -2616,1 +2686,1 @@\n-    __ tbz(raw_flags, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ tbz(flags, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -2626,9 +2696,0 @@\n-  if (!is_static) {\n-    __ ldr(klass, Address(cache, in_bytes(ConstantPoolCache::base_offset() +\n-                                          ConstantPoolCacheEntry::f1_offset())));\n-  }\n-\n-  \/\/ x86 uses a shift and mask or wings it with a shift plus assert\n-  \/\/ the mask is not needed. aarch64 just uses bitfield extract\n-  __ ubfxw(flags, raw_flags, ConstantPoolCacheEntry::tos_state_shift, ConstantPoolCacheEntry::tos_state_bits);\n-\n@@ -2636,1 +2697,1 @@\n-  __ cbnz(flags, notByte);\n+  __ cbnz(tos_state, notByte);\n@@ -2651,1 +2712,1 @@\n-  __ cmp(flags, (u1)ztos);\n+  __ cmp(tos_state, (u1)ztos);\n@@ -2665,1 +2726,1 @@\n-  __ cmp(flags, (u1)atos);\n+  __ cmp(tos_state, (u1)atos);\n@@ -2680,1 +2741,1 @@\n-      __ test_field_is_null_free_inline_type(raw_flags, noreg \/*temp*\/, is_null_free_inline_type);\n+      __ test_field_is_null_free_inline_type(flags, noreg \/*temp*\/, is_null_free_inline_type);\n@@ -2690,1 +2751,0 @@\n-          __ andw(raw_flags, raw_flags, ConstantPoolCacheEntry::field_index_mask);\n@@ -2692,1 +2752,1 @@\n-          __ ldrb(rscratch1, Address(cache, InstanceKlass::init_state_offset()));\n+          __ ldrb(rscratch1, Address(klass, InstanceKlass::init_state_offset()));\n@@ -2698,1 +2758,1 @@\n-          __ call_VM(r0, CAST_FROM_FN_PTR(address, InterpreterRuntime::uninitialized_static_inline_type_field), obj, raw_flags);\n+          __ call_VM(r0, CAST_FROM_FN_PTR(address, InterpreterRuntime::uninitialized_static_inline_type_field), obj, cache);\n@@ -2705,1 +2765,1 @@\n-      __ test_field_is_null_free_inline_type(raw_flags, noreg \/*temp*\/, is_inline_type);\n+      __ test_field_is_null_free_inline_type(flags, noreg \/*temp*\/, is_inline_type);\n@@ -2714,1 +2774,1 @@\n-        __ test_field_is_flat(raw_flags, noreg \/* temp *\/, is_flat);\n+        __ test_field_is_flat(flags, noreg \/* temp *\/, is_flat);\n@@ -2718,2 +2778,1 @@\n-            __ andw(raw_flags, raw_flags, ConstantPoolCacheEntry::field_index_mask);\n-            __ get_inline_type_field_klass(klass, raw_flags, inline_klass);\n+            __ get_inline_type_field_klass(klass, field_index, inline_klass);\n@@ -2727,1 +2786,0 @@\n-          __ andw(raw_flags, raw_flags, ConstantPoolCacheEntry::field_index_mask);\n@@ -2729,1 +2787,1 @@\n-          __ read_flat_field(klass, raw_flags, off, inline_klass \/* temp *\/, r0);\n+          __ read_flat_field(klass, field_index, off, inline_klass \/* temp *\/, r0);\n@@ -2741,1 +2799,1 @@\n-  __ cmp(flags, (u1)itos);\n+  __ cmp(tos_state, (u1)itos);\n@@ -2753,1 +2811,1 @@\n-  __ cmp(flags, (u1)ctos);\n+  __ cmp(tos_state, (u1)ctos);\n@@ -2765,1 +2823,1 @@\n-  __ cmp(flags, (u1)stos);\n+  __ cmp(tos_state, (u1)stos);\n@@ -2777,1 +2835,1 @@\n-  __ cmp(flags, (u1)ltos);\n+  __ cmp(tos_state, (u1)ltos);\n@@ -2789,1 +2847,1 @@\n-  __ cmp(flags, (u1)ftos);\n+  __ cmp(tos_state, (u1)ftos);\n@@ -2802,1 +2860,1 @@\n-  __ cmp(flags, (u1)dtos);\n+  __ cmp(tos_state, (u1)dtos);\n@@ -2822,1 +2880,1 @@\n-  __ tbz(raw_flags, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+  __ tbz(flags, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -2847,2 +2905,0 @@\n-  ByteSize cp_base_offset = ConstantPoolCache::base_offset();\n-\n@@ -2858,1 +2914,1 @@\n-    __ get_cache_and_index_at_bcp(c_rarg2, rscratch1, 1);\n+    __ mov(c_rarg2, cache);\n@@ -2868,6 +2924,1 @@\n-      __ ldrw(c_rarg3, Address(c_rarg2,\n-                               in_bytes(cp_base_offset +\n-                                        ConstantPoolCacheEntry::flags_offset())));\n-      __ lsr(c_rarg3, c_rarg3,\n-             ConstantPoolCacheEntry::tos_state_shift);\n-      ConstantPoolCacheEntry::verify_tos_state_shift();\n+      __ load_unsigned_byte(c_rarg3, Address(c_rarg2, in_bytes(ResolvedFieldEntry::type_offset())));\n@@ -2884,2 +2935,0 @@\n-    \/\/ cache entry pointer\n-    __ add(c_rarg2, c_rarg2, in_bytes(cp_base_offset));\n@@ -2895,1 +2944,1 @@\n-    __ get_cache_and_index_at_bcp(cache, index, 1);\n+    __ load_field_entry(cache, index);\n@@ -2903,7 +2952,7 @@\n-  const Register cache = r2;\n-  const Register index = r3;\n-  const Register obj   = r2;\n-  const Register off   = r19;\n-  const Register flags = r0;\n-  const Register flags2 = r6;\n-  const Register bc    = r4;\n+  const Register cache     = r2;\n+  const Register index     = r3;\n+  const Register tos_state = r3;\n+  const Register obj       = r2;\n+  const Register off       = r19;\n+  const Register flags     = r6;\n+  const Register bc        = r4;\n@@ -2912,1 +2961,1 @@\n-  resolve_cache_and_index(byte_no, cache, index, sizeof(u2));\n+  resolve_cache_and_index_for_field(byte_no, cache, index);\n@@ -2914,1 +2963,1 @@\n-  load_field_cp_cache_entry(obj, cache, index, off, flags, is_static);\n+  load_resolved_field_entry(obj, cache, tos_state, off, flags, is_static);\n@@ -2917,2 +2966,0 @@\n-  __ mov(r5, flags);\n-\n@@ -2921,1 +2968,1 @@\n-    __ tbz(r5, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ tbz(flags, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -2932,6 +2979,0 @@\n-  __ mov(flags2, flags);\n-\n-  \/\/ x86 uses a shift and mask or wings it with a shift plus assert\n-  \/\/ the mask is not needed. aarch64 just uses bitfield extract\n-  __ ubfxw(flags, flags, ConstantPoolCacheEntry::tos_state_shift,  ConstantPoolCacheEntry::tos_state_bits);\n-\n@@ -2939,1 +2980,1 @@\n-  __ cbnz(flags, notByte);\n+  __ cbnz(tos_state, notByte);\n@@ -2956,1 +2997,1 @@\n-  __ cmp(flags, (u1)ztos);\n+  __ cmp(tos_state, (u1)ztos);\n@@ -2971,1 +3012,1 @@\n-  __ cmp(flags, (u1)atos);\n+  __ cmp(tos_state, (u1)atos);\n@@ -2989,1 +3030,1 @@\n-         __ test_field_is_not_null_free_inline_type(flags2, noreg \/* temp *\/, is_inline_type);\n+         __ test_field_is_not_null_free_inline_type(flags, noreg \/* temp *\/, is_inline_type);\n@@ -2996,1 +3037,1 @@\n-        __ test_field_is_null_free_inline_type(flags2, noreg \/*temp*\/, is_inline_type);\n+        __ test_field_is_null_free_inline_type(flags, noreg \/*temp*\/, is_inline_type);\n@@ -3009,1 +3050,1 @@\n-        __ test_field_is_flat(flags2, noreg \/*temp*\/, is_flat);\n+        __ test_field_is_flat(flags, noreg \/*temp*\/, is_flat);\n@@ -3033,1 +3074,1 @@\n-  __ cmp(flags, (u1)itos);\n+  __ cmp(tos_state, (u1)itos);\n@@ -3048,1 +3089,1 @@\n-  __ cmp(flags, (u1)ctos);\n+  __ cmp(tos_state, (u1)ctos);\n@@ -3063,1 +3104,1 @@\n-  __ cmp(flags, (u1)stos);\n+  __ cmp(tos_state, (u1)stos);\n@@ -3078,1 +3119,1 @@\n-  __ cmp(flags, (u1)ltos);\n+  __ cmp(tos_state, (u1)ltos);\n@@ -3093,1 +3134,1 @@\n-  __ cmp(flags, (u1)ftos);\n+  __ cmp(tos_state, (u1)ftos);\n@@ -3109,1 +3150,1 @@\n-  __ cmp(flags, (u1)dtos);\n+  __ cmp(tos_state, (u1)dtos);\n@@ -3134,1 +3175,1 @@\n-    __ tbz(r5, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ tbz(flags, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -3153,2 +3194,1 @@\n-void TemplateTable::jvmti_post_fast_field_mod()\n-{\n+void TemplateTable::jvmti_post_fast_field_mod() {\n@@ -3185,1 +3225,1 @@\n-    __ get_cache_entry_pointer_at_bcp(c_rarg2, r0, 1);\n+    __ load_field_entry(c_rarg2, r0);\n@@ -3221,1 +3261,5 @@\n-  __ get_cache_and_index_at_bcp(r2, r1, 1);\n+  __ load_field_entry(r2, r1);\n+  __ push(r0);\n+  \/\/ R1: field offset, R2: TOS, R3: flags\n+  load_resolved_field_entry(r2, r2, r0, r1, r3);\n+  __ pop(r0);\n@@ -3226,7 +3270,0 @@\n-  \/\/ test for volatile with r3\n-  __ ldrw(r3, Address(r2, in_bytes(base +\n-                                   ConstantPoolCacheEntry::flags_offset())));\n-\n-  \/\/ replace index with field offset from cache entry\n-  __ ldr(r1, Address(r2, in_bytes(base + ConstantPoolCacheEntry::f2_offset())));\n-\n@@ -3235,1 +3272,1 @@\n-    __ tbz(r3, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ tbz(r3, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -3300,1 +3337,1 @@\n-    __ tbz(r3, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ tbz(r3, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -3319,1 +3356,1 @@\n-    __ get_cache_entry_pointer_at_bcp(c_rarg2, rscratch2, 1);\n+    __ load_field_entry(c_rarg2, rscratch2);\n@@ -3334,1 +3371,1 @@\n-  __ get_cache_and_index_at_bcp(r2, r1, 1);\n+  __ load_field_entry(r2, r1);\n@@ -3339,4 +3376,2 @@\n-  __ ldr(r1, Address(r2, in_bytes(ConstantPoolCache::base_offset() +\n-                                  ConstantPoolCacheEntry::f2_offset())));\n-  __ ldrw(r3, Address(r2, in_bytes(ConstantPoolCache::base_offset() +\n-                                   ConstantPoolCacheEntry::flags_offset())));\n+  __ load_sized_value(r1, Address(r2, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n+  __ load_unsigned_byte(r3, Address(r2, in_bytes(ResolvedFieldEntry::flags_offset())));\n@@ -3357,1 +3392,1 @@\n-    __ tbz(r3, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ tbz(r3, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -3372,3 +3407,2 @@\n-          __ andw(index, r3, ConstantPoolCacheEntry::field_index_mask);\n-          __ ldr(klass, Address(r2, in_bytes(ConstantPoolCache::base_offset() +\n-                                             ConstantPoolCacheEntry::f1_offset())));\n+          __ load_unsigned_short(index, Address(r2, in_bytes(ResolvedFieldEntry::field_index_offset())));\n+          __ ldr(klass, Address(r2, in_bytes(ResolvedFieldEntry::field_holder_offset())));\n@@ -3382,3 +3416,2 @@\n-        __ andw(index, r3, ConstantPoolCacheEntry::field_index_mask);\n-        __ ldr(klass, Address(r2, in_bytes(ConstantPoolCache::base_offset() +\n-                                           ConstantPoolCacheEntry::f1_offset())));\n+        __ load_unsigned_short(index, Address(r2, in_bytes(ResolvedFieldEntry::field_index_offset())));\n+        __ ldr(klass, Address(r2, in_bytes(ResolvedFieldEntry::field_holder_offset())));\n@@ -3420,1 +3453,1 @@\n-    __ tbz(r3, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ tbz(r3, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -3433,3 +3466,2 @@\n-  __ get_cache_and_index_at_bcp(r2, r3, 2);\n-  __ ldr(r1, Address(r2, in_bytes(ConstantPoolCache::base_offset() +\n-                                  ConstantPoolCacheEntry::f2_offset())));\n+  __ load_field_entry(r2, r3, 2);\n+  __ load_sized_value(r1, Address(r2, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n@@ -3445,3 +3477,2 @@\n-    __ ldrw(r3, Address(r2, in_bytes(ConstantPoolCache::base_offset() +\n-                                     ConstantPoolCacheEntry::flags_offset())));\n-    __ tbz(r3, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ load_unsigned_byte(r3, Address(r2, in_bytes(ResolvedFieldEntry::flags_offset())));\n+    __ tbz(r3, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -3473,3 +3504,2 @@\n-    __ ldrw(r3, Address(r2, in_bytes(ConstantPoolCache::base_offset() +\n-                                     ConstantPoolCacheEntry::flags_offset())));\n-    __ tbz(r3, ConstantPoolCacheEntry::is_volatile_shift, notVolatile);\n+    __ load_unsigned_byte(r3, Address(r2, in_bytes(ResolvedFieldEntry::flags_offset())));\n+    __ tbz(r3, ResolvedFieldEntry::is_volatile_shift, notVolatile);\n@@ -3877,6 +3907,0 @@\n-  resolve_cache_and_index(f2_byte, c_rarg1 \/*cache*\/, c_rarg2 \/*index*\/, sizeof(u2));\n-\n-  ByteSize cp_base_offset = ConstantPoolCache::base_offset();\n-\n-  \/\/ n.b. unlike x86 cache is now rcpool plus the indexed offset\n-  __ lea(c_rarg1, Address(c_rarg1, in_bytes(cp_base_offset)));\n@@ -3884,0 +3908,1 @@\n+  resolve_cache_and_index_for_field(f2_byte, c_rarg1 \/*cache*\/, c_rarg2 \/*index*\/);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":162,"deletions":137,"binary":false,"changes":299,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-  bool should_save_return_value = !_needs_return_buffer && _needs_transition;\n+  bool should_save_return_value = !_needs_return_buffer;\n","filename":"src\/hotspot\/cpu\/ppc\/downcallLinker_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -131,0 +131,1 @@\n+  void load_field_entry(Register cache, Register index, int bcp_offset = 1);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -490,1 +491,1 @@\n-  \/\/ Scale the index to be the entry index * sizeof(ResolvedInvokeDynamicInfo)\n+  \/\/ Scale the index to be the entry index * sizeof(ResolvedIndyEntry)\n@@ -495,0 +496,17 @@\n+void InterpreterMacroAssembler::load_field_entry(Register cache, Register index, int bcp_offset) {\n+  \/\/ Get index out of bytecode pointer\n+  get_cache_index_at_bcp(index, bcp_offset, sizeof(u2));\n+  \/\/ Take shortcut if the size is a power of 2\n+  if (is_power_of_2(sizeof(ResolvedFieldEntry))) {\n+    \/\/ Scale index by power of 2\n+    sldi(index, index, log2i_exact(sizeof(ResolvedFieldEntry)));\n+  } else {\n+    \/\/ Scale the index to be the entry index * sizeof(ResolvedFieldEntry)\n+    mulli(index, index, sizeof(ResolvedFieldEntry));\n+  }\n+  \/\/ Get address of field entries array\n+  ld_ptr(cache, in_bytes(ConstantPoolCache::field_entries_offset()), R27_constPoolCache);\n+  addi(cache, cache, Array<ResolvedFieldEntry>::base_offset_in_bytes());\n+  add(cache, cache, index);\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -119,7 +120,4 @@\n-      __ get_cache_and_index_at_bcp(Rtemp \/* dst = cache *\/, 1);\n-      \/\/ ((*(cache+indices))>>((1+byte_no)*8))&0xFF:\n-#if defined(VM_LITTLE_ENDIAN)\n-      __ lbz(Rnew_bc, in_bytes(ConstantPoolCache::base_offset() + ConstantPoolCacheEntry::indices_offset()) + 1 + byte_no, Rtemp);\n-#else\n-      __ lbz(Rnew_bc, in_bytes(ConstantPoolCache::base_offset() + ConstantPoolCacheEntry::indices_offset()) + 7 - (1 + byte_no), Rtemp);\n-#endif\n+      __ load_field_entry(Rtemp, Rnew_bc);\n+      int code_offset = (byte_no == f1_byte) ? in_bytes(ResolvedFieldEntry::get_code_offset())\n+                                             : in_bytes(ResolvedFieldEntry::put_code_offset());\n+      __ lbz(Rnew_bc, code_offset, Rtemp);\n@@ -2250,0 +2248,62 @@\n+void TemplateTable::resolve_cache_and_index_for_field(int byte_no,\n+                                            Register Rcache,\n+                                            Register index) {\n+  assert_different_registers(Rcache, index);\n+\n+  Label resolved;\n+\n+  Bytecodes::Code code = bytecode();\n+  switch (code) {\n+  case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n+  case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n+  default: break;\n+  }\n+\n+  assert(byte_no == f1_byte || byte_no == f2_byte, \"byte_no out of range\");\n+  __ load_field_entry(Rcache, index);\n+  int code_offset = (byte_no == f1_byte) ? in_bytes(ResolvedFieldEntry::get_code_offset())\n+                                         : in_bytes(ResolvedFieldEntry::put_code_offset());\n+  __ lbz(R0, code_offset, Rcache);\n+  __ cmpwi(CCR0, R0, (int)code); \/\/ have we resolved this bytecode?\n+  __ beq(CCR0, resolved);\n+\n+  \/\/ resolve first time through\n+  address entry = CAST_FROM_FN_PTR(address, InterpreterRuntime::resolve_from_cache);\n+  __ li(R4_ARG2, (int)code);\n+  __ call_VM(noreg, entry, R4_ARG2);\n+\n+  \/\/ Update registers with resolved info\n+  __ load_field_entry(Rcache, index);\n+  __ bind(resolved);\n+\n+  \/\/ Use acquire semantics for the bytecode (see ResolvedFieldEntry::fill_in()).\n+  __ isync(); \/\/ Order load wrt. succeeding loads.\n+}\n+\n+void TemplateTable::load_resolved_field_entry(Register obj,\n+                                              Register cache,\n+                                              Register tos_state,\n+                                              Register offset,\n+                                              Register flags,\n+                                              bool is_static = false) {\n+  assert_different_registers(cache, tos_state, flags, offset);\n+\n+  \/\/ Field offset\n+  __ load_sized_value(offset, in_bytes(ResolvedFieldEntry::field_offset_offset()), cache, sizeof(int), true \/*is_signed*\/);\n+\n+  \/\/ Flags\n+  __ lbz(flags, in_bytes(ResolvedFieldEntry::flags_offset()), cache);\n+\n+  if (tos_state != noreg) {\n+    __ lbz(tos_state, in_bytes(ResolvedFieldEntry::type_offset()), cache);\n+  }\n+\n+  \/\/ Klass overwrite register\n+  if (is_static) {\n+    __ ld(obj, in_bytes(ResolvedFieldEntry::field_holder_offset()), cache);\n+    const int mirror_offset = in_bytes(Klass::java_mirror_offset());\n+    __ ld(obj, mirror_offset, obj);\n+    __ resolve_oop_handle(obj, R11_scratch1, R12_scratch2, MacroAssembler::PRESERVATION_NONE);\n+  }\n+}\n+\n@@ -2435,1 +2495,0 @@\n-    ByteSize cp_base_offset = ConstantPoolCache::base_offset();\n@@ -2446,1 +2505,0 @@\n-    __ addi(Rcache, Rcache, in_bytes(cp_base_offset));\n@@ -2470,1 +2528,1 @@\n-      __ get_cache_and_index_at_bcp(Rcache, 1);\n+      __ load_field_entry(Rcache, Rscratch);\n@@ -2496,3 +2554,4 @@\n-                 Rclass_or_obj = R22_tmp2,\n-                 Roffset       = R23_tmp3,\n-                 Rflags        = R31,\n+                 Rclass_or_obj = R22_tmp2, \/\/ Needs to survive C call.\n+                 Roffset       = R23_tmp3, \/\/ Needs to survive C call.\n+                 Rtos_state    = R30,      \/\/ Needs to survive C call.\n+                 Rflags        = R31,      \/\/ Needs to survive C call.\n@@ -2510,1 +2569,1 @@\n-  resolve_cache_and_index(byte_no, Rcache, Rscratch, sizeof(u2));\n+  resolve_cache_and_index_for_field(byte_no, Rcache, Rscratch);\n@@ -2516,1 +2575,1 @@\n-  load_field_cp_cache_entry(Rclass_or_obj, Rcache, noreg, Roffset, Rflags, is_static); \/\/ Uses R11, R12\n+  load_resolved_field_entry(Rclass_or_obj, Rcache, Rtos_state, Roffset, Rflags, is_static); \/\/ Uses R11, R12\n@@ -2522,1 +2581,1 @@\n-  __ rldicl(Rscratch, Rflags, 64-ConstantPoolCacheEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n+  __ rldicl(Rscratch, Rflags, 64-ResolvedFieldEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n@@ -2525,3 +2584,0 @@\n-  \/\/ Check field type.\n-  __ rldicl(Rflags, Rflags, 64-ConstantPoolCacheEntry::tos_state_shift, 64-ConstantPoolCacheEntry::tos_state_bits);\n-\n@@ -2530,1 +2586,1 @@\n-  __ cmpldi(CCR0, Rflags, number_of_states);\n+  __ cmpldi(CCR0, Rtos_state, number_of_states);\n@@ -2535,1 +2591,1 @@\n-  __ sldi(Rflags, Rflags, LogBytesPerWord);\n+  __ sldi(Rtos_state, Rtos_state, LogBytesPerWord);\n@@ -2540,1 +2596,1 @@\n-  __ ldx(Rbtable, Rbtable, Rflags);\n+  __ ldx(Rbtable, Rbtable, Rtos_state);\n@@ -2756,1 +2812,0 @@\n-    ByteSize cp_base_offset = ConstantPoolCache::base_offset();\n@@ -2759,1 +2814,0 @@\n-    __ addi(Rcache, Rcache, in_bytes(cp_base_offset));\n@@ -2780,1 +2834,1 @@\n-          const Register Rflags = Robj;\n+          const Register Rtos_state = Robj;\n@@ -2786,2 +2840,1 @@\n-          __ ld(Rflags, in_bytes(ConstantPoolCacheEntry::flags_offset()), Rcache); \/\/ Big Endian\n-          __ rldicl(Rflags, Rflags, 64-ConstantPoolCacheEntry::tos_state_shift, 64-ConstantPoolCacheEntry::tos_state_bits);\n+          __ lbz(Rtos_state, in_bytes(ResolvedFieldEntry::type_offset()), Rcache);\n@@ -2789,2 +2842,2 @@\n-          __ cmpwi(CCR0, Rflags, ltos);\n-          __ cmpwi(CCR1, Rflags, dtos);\n+          __ cmpwi(CCR0, Rtos_state, ltos);\n+          __ cmpwi(CCR1, Rtos_state, dtos);\n@@ -2805,1 +2858,1 @@\n-    __ get_cache_and_index_at_bcp(Rcache, 1);\n+    __ load_field_entry(Rcache, Rscratch);\n@@ -2833,1 +2886,2 @@\n-                 Rflags        = R30,\n+                 Rtos_state    = R23_tmp3, \/\/ Needs to survive C call.\n+                 Rflags        = R30,      \/\/ Needs to survive C call.\n@@ -2853,1 +2907,1 @@\n-  resolve_cache_and_index(byte_no, Rcache, Rscratch, sizeof(u2));\n+  resolve_cache_and_index_for_field(byte_no, Rcache, Rscratch);\n@@ -2855,1 +2909,1 @@\n-  load_field_cp_cache_entry(Rclass_or_obj, Rcache, noreg, Roffset, Rflags, is_static); \/\/ Uses R11, R12\n+  load_resolved_field_entry(Rclass_or_obj, Rcache, Rtos_state, Roffset, Rflags, is_static); \/\/ Uses R11, R12\n@@ -2861,4 +2915,1 @@\n-  __ rldicl(Rscratch, Rflags, 64-ConstantPoolCacheEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n-\n-  \/\/ Check the field type.\n-  __ rldicl(Rflags, Rflags, 64-ConstantPoolCacheEntry::tos_state_shift, 64-ConstantPoolCacheEntry::tos_state_bits);\n+  __ rldicl(Rscratch, Rflags, 64-ResolvedFieldEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n@@ -2868,1 +2919,1 @@\n-  __ cmpldi(CCR0, Rflags, number_of_states);\n+  __ cmpldi(CCR0, Rtos_state, number_of_states);\n@@ -2873,1 +2924,1 @@\n-  __ sldi(Rflags, Rflags, LogBytesPerWord);\n+  __ sldi(Rtos_state, Rtos_state, LogBytesPerWord);\n@@ -2878,1 +2929,1 @@\n-  __ ldx(Rbtable, Rbtable, Rflags);\n+  __ ldx(Rbtable, Rbtable, Rtos_state);\n@@ -3088,1 +3139,1 @@\n-  __ get_cache_and_index_at_bcp(Rcache, 1);\n+  __ load_field_entry(Rcache, Rscratch);\n@@ -3090,1 +3141,1 @@\n-  load_field_cp_cache_entry(noreg, Rcache, noreg, Roffset, Rflags, false); \/\/ Uses R11, R12\n+  load_resolved_field_entry(noreg, Rcache, noreg, Roffset, Rflags, false); \/\/ Uses R11, R12\n@@ -3096,1 +3147,1 @@\n-  __ rldicl_(Rscratch, Rflags, 64-ConstantPoolCacheEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n+  __ rldicl_(Rscratch, Rflags, 64-ResolvedFieldEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n@@ -3169,2 +3220,2 @@\n-  __ get_cache_and_index_at_bcp(Rcache, 1);\n-  load_field_cp_cache_entry(noreg, Rcache, noreg, Roffset, Rflags, false); \/\/ Uses R11, R12\n+  __ load_field_entry(Rcache, Rscratch);\n+  load_resolved_field_entry(noreg, Rcache, noreg, Roffset, Rflags, false); \/\/ Uses R11, R12\n@@ -3179,1 +3230,1 @@\n-  __ rldicl_(Rscratch, Rflags, 64-ConstantPoolCacheEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n+  __ rldicl_(Rscratch, Rflags, 64-ResolvedFieldEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n@@ -3308,2 +3359,2 @@\n-  __ get_cache_and_index_at_bcp(Rcache, 2);\n-  load_field_cp_cache_entry(noreg, Rcache, noreg, Roffset, Rflags, false); \/\/ Uses R11, R12\n+  __ load_field_entry(Rcache, Rscratch, 2);\n+  load_resolved_field_entry(noreg, Rcache, noreg, Roffset, Rflags, false); \/\/ Uses R11, R12\n@@ -3320,1 +3371,1 @@\n-  __ rldicl_(Rscratch, Rflags, 64-ConstantPoolCacheEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n+  __ rldicl_(Rscratch, Rflags, 64-ResolvedFieldEntry::is_volatile_shift, 63); \/\/ Extract volatile bit.\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":100,"deletions":49,"binary":false,"changes":149,"status":"modified"},{"patch":"@@ -871,0 +871,2 @@\n+      \/\/ check if str1 and str2 is same pointer\n+      beq(str1, str2, DONE);\n@@ -873,1 +875,0 @@\n-      beq(str1, str2, DONE);\n@@ -916,0 +917,1 @@\n+    bne(tmp1, tmp2, DIFFERENCE);\n@@ -917,2 +919,0 @@\n-    xorr(tmp3, tmp1, tmp2);\n-    bnez(tmp3, DIFFERENCE);\n@@ -947,5 +947,2 @@\n-    bgez(cnt2, TAIL);\n-\n-    xorr(tmp3, tmp1, tmp2);\n-    beqz(tmp3, NEXT_WORD);\n-    j(DIFFERENCE);\n+    bne(tmp1, tmp2, DIFFERENCE);\n+    bltz(cnt2, NEXT_WORD);\n@@ -953,5 +950,0 @@\n-    xorr(tmp3, tmp1, tmp2);\n-    bnez(tmp3, DIFFERENCE);\n-    \/\/ Last longword.  In the case where length == 4 we compare the\n-    \/\/ same longword twice, but that's still faster than another\n-    \/\/ conditional branch.\n@@ -959,2 +951,2 @@\n-      ld(tmp1, Address(str1));\n-      ld(tmp2, Address(str2));\n+      load_long_misaligned(tmp1, Address(str1), tmp3, isLL ? 1 : 2);\n+      load_long_misaligned(tmp2, Address(str2), tmp3, isLL ? 1 : 2);\n@@ -962,2 +954,2 @@\n-      lwu(tmp1, Address(str1));\n-      ld(tmp2, Address(str2));\n+      load_int_misaligned(tmp1, Address(str1), tmp3, false);\n+      load_long_misaligned(tmp2, Address(str2), tmp3, 2);\n@@ -967,2 +959,2 @@\n-      lwu(tmp2, Address(str2));\n-      ld(tmp1, Address(str1));\n+      load_int_misaligned(tmp2, Address(str2), tmp3, false);\n+      load_long_misaligned(tmp1, Address(str1), tmp3, 2);\n@@ -973,2 +965,1 @@\n-    xorr(tmp3, tmp1, tmp2);\n-    beqz(tmp3, DONE);\n+    beq(tmp1, tmp2, DONE);\n@@ -979,0 +970,1 @@\n+    xorr(tmp3, tmp1, tmp2);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":13,"deletions":21,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-  bool should_save_return_value = !_needs_return_buffer && _needs_transition;\n+  bool should_save_return_value = !_needs_return_buffer;\n","filename":"src\/hotspot\/cpu\/riscv\/downcallLinker_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -1989,1 +1990,1 @@\n-  \/\/ Scale the index to be the entry index * sizeof(ResolvedInvokeDynamicInfo)\n+  \/\/ Scale the index to be the entry index * sizeof(ResolvedIndyEntry)\n@@ -1996,0 +1997,17 @@\n+void InterpreterMacroAssembler::load_field_entry(Register cache, Register index, int bcp_offset) {\n+  \/\/ Get index out of bytecode pointer\n+  get_cache_index_at_bcp(index, cache, bcp_offset, sizeof(u2));\n+  \/\/ Take shortcut if the size is a power of 2\n+  if (is_power_of_2(sizeof(ResolvedFieldEntry))) {\n+    slli(index, index, log2i_exact(sizeof(ResolvedFieldEntry))); \/\/ Scale index by power of 2\n+  } else {\n+    mv(cache, sizeof(ResolvedFieldEntry));\n+    mul(index, index, cache); \/\/ Scale the index to be the entry index * sizeof(ResolvedIndyEntry)\n+  }\n+  \/\/ Get address of field entries array\n+  ld(cache, Address(xcpool, ConstantPoolCache::field_entries_offset()));\n+  add(cache, cache, Array<ResolvedIndyEntry>::base_offset_in_bytes());\n+  add(cache, cache, index);\n+  la(cache, Address(cache, 0));\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -303,0 +303,1 @@\n+  void load_field_entry(Register cache, Register index, int bcp_offset = 1);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1971,0 +1971,16 @@\n+\/\/ rotate left with shift bits, 32-bit version\n+void MacroAssembler::rolw_imm(Register dst, Register src, uint32_t shift, Register tmp) {\n+  if (UseZbb) {\n+    \/\/ no roliw available\n+    roriw(dst, src, 32 - shift);\n+    return;\n+  }\n+\n+  assert_different_registers(dst, tmp);\n+  assert_different_registers(src, tmp);\n+  assert(shift < 32, \"shift amount must be < 32\");\n+  srliw(tmp, src, 32 - shift);\n+  slliw(dst, src, shift);\n+  orr(dst, dst, tmp);\n+}\n+\n@@ -3970,3 +3986,5 @@\n-  mv(tmp1, 0xFF);\n-  mv(Rd, zr);\n-  for (int i = 0; i <= 3; i++) {\n+  mv(tmp1, 0xFF000000); \/\/ first byte mask at lower word\n+  andr(Rd, Rs, tmp1);\n+  for (int i = 0; i < 2; i++) {\n+    slli(Rd, Rd, wordSize);\n+    srli(tmp1, tmp1, wordSize);\n@@ -3974,3 +3992,0 @@\n-    if (i) {\n-      slli(tmp2, tmp2, i * 8);\n-    }\n@@ -3978,3 +3993,0 @@\n-    if (i != 3) {\n-      slli(tmp1, tmp1, 8);\n-    }\n@@ -3982,0 +3994,3 @@\n+  slli(Rd, Rd, wordSize);\n+  andi(tmp2, Rs, 0xFF); \/\/ last byte mask at lower word\n+  orr(Rd, Rd, tmp2);\n@@ -3990,11 +4005,2 @@\n-\n-  mv(tmp1, 0xFF00000000);\n-  mv(Rd, zr);\n-  for (int i = 0; i <= 3; i++) {\n-    andr(tmp2, Rs, tmp1);\n-    orr(Rd, Rd, tmp2);\n-    srli(Rd, Rd, 8);\n-    if (i != 3) {\n-      slli(tmp1, tmp1, 8);\n-    }\n-  }\n+  srli(Rs, Rs, 32);   \/\/ only upper 32 bits are needed\n+  inflate_lo32(Rd, Rs, tmp1, tmp2);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":26,"deletions":20,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -599,1 +599,3 @@\n-    guarantee(is_simm13(offset) && ((offset % 2) == 0), \"offset is invalid.\");                           \\\n+    guarantee(is_simm13(offset) && is_even(offset),                                                      \\\n+              \"offset is invalid: is_simm_13: %s offset: \" INT64_FORMAT,                                 \\\n+              BOOL_TO_STR(is_simm13(offset)), offset);                                                   \\\n@@ -775,0 +777,1 @@\n+  void rolw_imm(Register dst, Register src, uint32_t, Register tmp = t0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2278,5 +2278,4 @@\n-  void compare_string_8_x_LU(Register tmpL, Register tmpU, Label &DIFF1,\n-                              Label &DIFF2) {\n-    const Register strU = x12, curU = x7, strL = x29, tmp = x30;\n-    __ ld(tmpL, Address(strL));\n-    __ addi(strL, strL, 8);\n+  void compare_string_8_x_LU(Register tmpL, Register tmpU, Register strL, Register strU, Label& DIFF) {\n+    const Register tmp = x30, tmpLval = x12;\n+    __ ld(tmpLval, Address(strL));\n+    __ addi(strL, strL, wordSize);\n@@ -2284,12 +2283,10 @@\n-    __ addi(strU, strU, 8);\n-    __ inflate_lo32(tmp, tmpL);\n-    __ mv(t0, tmp);\n-    __ xorr(tmp, curU, t0);\n-    __ bnez(tmp, DIFF2);\n-\n-    __ ld(curU, Address(strU));\n-    __ addi(strU, strU, 8);\n-    __ inflate_hi32(tmp, tmpL);\n-    __ mv(t0, tmp);\n-    __ xorr(tmp, tmpU, t0);\n-    __ bnez(tmp, DIFF1);\n+    __ addi(strU, strU, wordSize);\n+    __ inflate_lo32(tmpL, tmpLval);\n+    __ xorr(tmp, tmpU, tmpL);\n+    __ bnez(tmp, DIFF);\n+\n+    __ ld(tmpU, Address(strU));\n+    __ addi(strU, strU, wordSize);\n+    __ inflate_hi32(tmpL, tmpLval);\n+    __ xorr(tmp, tmpU, tmpL);\n+    __ bnez(tmp, DIFF);\n@@ -2310,5 +2307,3 @@\n-    Label SMALL_LOOP, TAIL, TAIL_LOAD_16, LOAD_LAST, DIFF1, DIFF2,\n-          DONE, CALCULATE_DIFFERENCE;\n-    const Register result = x10, str1 = x11, cnt1 = x12, str2 = x13, cnt2 = x14,\n-                   tmp1 = x28, tmp2 = x29, tmp3 = x30, tmp4 = x7, tmp5 = x31;\n-    RegSet spilled_regs = RegSet::of(tmp4, tmp5);\n+    Label SMALL_LOOP, TAIL, LOAD_LAST, DONE, CALCULATE_DIFFERENCE;\n+    const Register result = x10, str1 = x11, str2 = x13, cnt2 = x14,\n+                   tmp1 = x28, tmp2 = x29, tmp3 = x30, tmp4 = x12;\n@@ -2322,2 +2317,1 @@\n-    __ sub(cnt2, cnt2, 8); \/\/ Already loaded 4 symbols. Last 4 is special case.\n-    __ push_reg(spilled_regs, sp);\n+    __ sub(cnt2, cnt2, wordSize \/ 2); \/\/ Already loaded 4 symbols\n@@ -2325,7 +2319,0 @@\n-    if (isLU) {\n-      __ add(str1, str1, cnt2);\n-      __ shadd(str2, cnt2, str2, t0, 1);\n-    } else {\n-      __ shadd(str1, cnt2, str1, t0, 1);\n-      __ add(str2, str2, cnt2);\n-    }\n@@ -2333,1 +2320,0 @@\n-    __ mv(tmp5, tmp2);\n@@ -2338,2 +2324,2 @@\n-             tmpU = isLU ? tmp5 : tmp1, \/\/ where to keep U for comparison\n-             tmpL = isLU ? tmp1 : tmp5; \/\/ where to keep L for comparison\n+             tmpU = isLU ? tmp2 : tmp1, \/\/ where to keep U for comparison\n+             tmpL = isLU ? tmp1 : tmp2; \/\/ where to keep L for comparison\n@@ -2341,3 +2327,11 @@\n-    __ sub(tmp2, strL, cnt2); \/\/ strL pointer to load from\n-    __ slli(t0, cnt2, 1);\n-    __ sub(cnt1, strU, t0); \/\/ strU pointer to load from\n+    \/\/ make sure main loop is 8 byte-aligned, we should load another 4 bytes from strL\n+    \/\/ cnt2 is >= 68 here, no need to check it for >= 0\n+    __ lwu(tmpL, Address(strL));\n+    __ addi(strL, strL, wordSize \/ 2);\n+    __ ld(tmpU, Address(strU));\n+    __ addi(strU, strU, wordSize);\n+    __ inflate_lo32(tmp3, tmpL);\n+    __ mv(tmpL, tmp3);\n+    __ xorr(tmp3, tmpU, tmpL);\n+    __ bnez(tmp3, CALCULATE_DIFFERENCE);\n+    __ addi(cnt2, cnt2, -wordSize \/ 2);\n@@ -2345,4 +2339,2 @@\n-    __ ld(tmp4, Address(cnt1));\n-    __ addi(cnt1, cnt1, 8);\n-    __ beqz(cnt2, LOAD_LAST); \/\/ no characters left except last load\n-    __ sub(cnt2, cnt2, 16);\n+    \/\/ we are now 8-bytes aligned on strL\n+    __ sub(cnt2, cnt2, wordSize * 2);\n@@ -2351,3 +2343,3 @@\n-      __ sub(cnt2, cnt2, 16);\n-      compare_string_8_x_LU(tmpL, tmpU, DIFF1, DIFF2);\n-      compare_string_8_x_LU(tmpL, tmpU, DIFF1, DIFF2);\n+      __ sub(cnt2, cnt2, wordSize * 2);\n+      compare_string_8_x_LU(tmpL, tmpU, strL, strU, CALCULATE_DIFFERENCE);\n+      compare_string_8_x_LU(tmpL, tmpU, strL, strU, CALCULATE_DIFFERENCE);\n@@ -2355,22 +2347,20 @@\n-      __ addi(t0, cnt2, 16);\n-      __ beqz(t0, LOAD_LAST);\n-    __ bind(TAIL); \/\/ 1..15 characters left until last load (last 4 characters)\n-      \/\/ Address of 8 bytes before last 4 characters in UTF-16 string\n-      __ shadd(cnt1, cnt2, cnt1, t0, 1);\n-      \/\/ Address of 16 bytes before last 4 characters in Latin1 string\n-      __ add(tmp2, tmp2, cnt2);\n-      __ ld(tmp4, Address(cnt1, -8));\n-      \/\/ last 16 characters before last load\n-      compare_string_8_x_LU(tmpL, tmpU, DIFF1, DIFF2);\n-      compare_string_8_x_LU(tmpL, tmpU, DIFF1, DIFF2);\n-      __ j(LOAD_LAST);\n-    __ bind(DIFF2);\n-      __ mv(tmpU, tmp4);\n-    __ bind(DIFF1);\n-      __ mv(tmpL, t0);\n-      __ j(CALCULATE_DIFFERENCE);\n-    __ bind(LOAD_LAST);\n-      \/\/ Last 4 UTF-16 characters are already pre-loaded into tmp4 by compare_string_8_x_LU.\n-      \/\/ No need to load it again\n-      __ mv(tmpU, tmp4);\n-      __ ld(tmpL, Address(strL));\n+      __ addi(t0, cnt2, wordSize * 2);\n+      __ beqz(t0, DONE);\n+    __ bind(TAIL);  \/\/ 1..15 characters left\n+      \/\/ Aligned access. Load bytes in portions - 4, 2, 1.\n+\n+      __ addi(t0, cnt2, wordSize);\n+      __ addi(cnt2, cnt2, wordSize * 2); \/\/ amount of characters left to process\n+      __ bltz(t0, LOAD_LAST);\n+      \/\/ remaining characters are greater than or equals to 8, we can do one compare_string_8_x_LU\n+      compare_string_8_x_LU(tmpL, tmpU, strL, strU, CALCULATE_DIFFERENCE);\n+      __ addi(cnt2, cnt2, -wordSize);\n+      __ beqz(cnt2, DONE);  \/\/ no character left\n+      __ bind(LOAD_LAST);   \/\/ cnt2 = 1..7 characters left\n+\n+      __ addi(cnt2, cnt2, -wordSize); \/\/ cnt2 is now an offset in strL which points to last 8 bytes\n+      __ slli(t0, cnt2, 1);     \/\/ t0 is now an offset in strU which points to last 16 bytes\n+      __ add(strL, strL, cnt2); \/\/ Address of last 8 bytes in Latin1 string\n+      __ add(strU, strU, t0);   \/\/ Address of last 16 bytes in UTF-16 string\n+      __ load_int_misaligned(tmpL, Address(strL), t0, false);\n+      __ load_long_misaligned(tmpU, Address(strU), t0, 2);\n@@ -2380,1 +2370,11 @@\n-      __ beqz(tmp3, DONE);\n+      __ bnez(tmp3, CALCULATE_DIFFERENCE);\n+\n+      __ addi(strL, strL, wordSize \/ 2); \/\/ Address of last 4 bytes in Latin1 string\n+      __ addi(strU, strU, wordSize);   \/\/ Address of last 8 bytes in UTF-16 string\n+      __ load_int_misaligned(tmpL, Address(strL), t0, false);\n+      __ load_long_misaligned(tmpU, Address(strU), t0, 2);\n+      __ inflate_lo32(tmp3, tmpL);\n+      __ mv(tmpL, tmp3);\n+      __ xorr(tmp3, tmpU, tmpL);\n+      __ bnez(tmp3, CALCULATE_DIFFERENCE);\n+      __ j(DONE); \/\/ no character left\n@@ -2387,1 +2387,1 @@\n-      __ srl(tmp5, tmp5, tmp4);\n+      __ srl(tmp2, tmp2, tmp4);\n@@ -2389,2 +2389,2 @@\n-      __ andi(tmp5, tmp5, 0xFFFF);\n-      __ sub(result, tmp1, tmp5);\n+      __ andi(tmp2, tmp2, 0xFFFF);\n+      __ sub(result, tmp1, tmp2);\n@@ -2392,1 +2392,0 @@\n-      __ pop_reg(spilled_regs, sp);\n@@ -2505,1 +2504,1 @@\n-      __ ld(tmp5, Address(str1));\n+      __ load_long_misaligned(tmp5, Address(str1), tmp3, isLL ? 1 : 2);\n@@ -2507,1 +2506,1 @@\n-      __ ld(cnt1, Address(str2));\n+      __ load_long_misaligned(cnt1, Address(str2), tmp3, isLL ? 1 : 2);\n@@ -3917,0 +3916,367 @@\n+  \/\/ Set of L registers that correspond to a contiguous memory area.\n+  \/\/ Each 64-bit register typically corresponds to 2 32-bit integers.\n+  template <uint L>\n+  class RegCache {\n+  private:\n+    MacroAssembler *_masm;\n+    Register _regs[L];\n+\n+  public:\n+    RegCache(MacroAssembler *masm, RegSet rs): _masm(masm) {\n+      assert(rs.size() == L, \"%u registers are used to cache %u 4-byte data\", rs.size(), 2 * L);\n+      auto it = rs.begin();\n+      for (auto &r: _regs) {\n+        r = *it;\n+        ++it;\n+      }\n+    }\n+\n+    void gen_loads(Register base) {\n+      for (uint i = 0; i < L; i += 1) {\n+        __ ld(_regs[i], Address(base, 8 * i));\n+      }\n+    }\n+\n+    \/\/ Generate code extracting i-th unsigned word (4 bytes).\n+    void get_u32(Register dest, uint i, Register rmask32) {\n+      assert(i < 2 * L, \"invalid i: %u\", i);\n+\n+      if (i % 2 == 0) {\n+        __ andr(dest, _regs[i \/ 2], rmask32);\n+      } else {\n+        __ srli(dest, _regs[i \/ 2], 32);\n+      }\n+    }\n+  };\n+\n+  typedef RegCache<8> BufRegCache;\n+\n+  \/\/ a += rtmp1 + x + ac;\n+  \/\/ a = Integer.rotateLeft(a, s) + b;\n+  void m5_FF_GG_HH_II_epilogue(BufRegCache& reg_cache,\n+                               Register a, Register b, Register c, Register d,\n+                               int k, int s, int t,\n+                               Register rtmp1, Register rtmp2, Register rmask32) {\n+    \/\/ rtmp1 = rtmp1 + x + ac\n+    reg_cache.get_u32(rtmp2, k, rmask32);\n+    __ addw(rtmp1, rtmp1, rtmp2);\n+    __ li(rtmp2, t);\n+    __ addw(rtmp1, rtmp1, rtmp2);\n+\n+    \/\/ a += rtmp1 + x + ac\n+    __ addw(a, a, rtmp1);\n+\n+    \/\/ a = Integer.rotateLeft(a, s) + b;\n+    __ rolw_imm(a, a, s, rtmp1);\n+    __ addw(a, a, b);\n+  }\n+\n+  \/\/ a += ((b & c) | ((~b) & d)) + x + ac;\n+  \/\/ a = Integer.rotateLeft(a, s) + b;\n+  void md5_FF(BufRegCache& reg_cache,\n+              Register a, Register b, Register c, Register d,\n+              int k, int s, int t,\n+              Register rtmp1, Register rtmp2, Register rmask32) {\n+    \/\/ rtmp1 = b & c\n+    __ andr(rtmp1, b, c);\n+\n+    \/\/ rtmp2 = (~b) & d\n+    __ notr(rtmp2, b);\n+    __ andr(rtmp2, rtmp2, d);\n+\n+    \/\/ rtmp1 = (b & c) | ((~b) & d)\n+    __ orr(rtmp1, rtmp1, rtmp2);\n+\n+    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t,\n+                            rtmp1, rtmp2, rmask32);\n+  }\n+\n+  \/\/ a += ((b & d) | (c & (~d))) + x + ac;\n+  \/\/ a = Integer.rotateLeft(a, s) + b;\n+  void md5_GG(BufRegCache& reg_cache,\n+              Register a, Register b, Register c, Register d,\n+              int k, int s, int t,\n+              Register rtmp1, Register rtmp2, Register rmask32) {\n+    \/\/ rtmp1 = b & d\n+    __ andr(rtmp1, b, d);\n+\n+    \/\/ rtmp2 = (c & (~d))\n+    __ notr(rtmp2, d);\n+    __ andr(rtmp2, rtmp2, c);\n+\n+    \/\/ rtmp1 = (b & d) | (c & (~d))\n+    __ orr(rtmp1, rtmp1, rtmp2);\n+\n+    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t,\n+                            rtmp1, rtmp2, rmask32);\n+  }\n+\n+  \/\/ a += ((b ^ c) ^ d) + x + ac;\n+  \/\/ a = Integer.rotateLeft(a, s) + b;\n+  void md5_HH(BufRegCache& reg_cache,\n+              Register a, Register b, Register c, Register d,\n+              int k, int s, int t,\n+              Register rtmp1, Register rtmp2, Register rmask32) {\n+    \/\/ rtmp1 = (b ^ c) ^ d\n+    __ xorr(rtmp1, b, c);\n+    __ xorr(rtmp1, rtmp1, d);\n+\n+    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t,\n+                            rtmp1, rtmp2, rmask32);\n+  }\n+\n+  \/\/ a += (c ^ (b | (~d))) + x + ac;\n+  \/\/ a = Integer.rotateLeft(a, s) + b;\n+  void md5_II(BufRegCache& reg_cache,\n+              Register a, Register b, Register c, Register d,\n+              int k, int s, int t,\n+              Register rtmp1, Register rtmp2, Register rmask32) {\n+    \/\/ rtmp1 = c ^ (b | (~d))\n+    __ notr(rtmp2, d);\n+    __ orr(rtmp1, b, rtmp2);\n+    __ xorr(rtmp1, c, rtmp1);\n+\n+    m5_FF_GG_HH_II_epilogue(reg_cache, a, b, c, d, k, s, t,\n+                            rtmp1, rtmp2, rmask32);\n+  }\n+\n+  \/\/ Arguments:\n+  \/\/\n+  \/\/ Inputs:\n+  \/\/   c_rarg0   - byte[]  source+offset\n+  \/\/   c_rarg1   - int[]   SHA.state\n+  \/\/   c_rarg2   - int     offset  (multi_block == True)\n+  \/\/   c_rarg3   - int     limit   (multi_block == True)\n+  \/\/\n+  \/\/ Registers:\n+  \/\/    x0   zero  (zero)\n+  \/\/    x1     ra  (return address)\n+  \/\/    x2     sp  (stack pointer)\n+  \/\/    x3     gp  (global pointer)\n+  \/\/    x4     tp  (thread pointer)\n+  \/\/    x5     t0  state0\n+  \/\/    x6     t1  state1\n+  \/\/    x7     t2  state2\n+  \/\/    x8  f0\/s0  (frame pointer)\n+  \/\/    x9     s1  state3  [saved-reg]\n+  \/\/   x10     a0  rtmp1 \/ c_rarg0\n+  \/\/   x11     a1  rtmp2 \/ c_rarg1\n+  \/\/   x12     a2  a     \/ c_rarg2\n+  \/\/   x13     a3  b     \/ c_rarg3\n+  \/\/   x14     a4  c\n+  \/\/   x15     a5  d\n+  \/\/   x16     a6  buf\n+  \/\/   x17     a7  state\n+  \/\/   x18     s2  ofs     [saved-reg]  (multi_block == True)\n+  \/\/   x19     s3  limit   [saved-reg]  (multi_block == True)\n+  \/\/   x20     s4\n+  \/\/   x21     s5\n+  \/\/   x22     s6  mask32  [saved-reg]\n+  \/\/   x23     s7\n+  \/\/   x24     s8  buf0    [saved-reg]\n+  \/\/   x25     s9  buf1    [saved-reg]\n+  \/\/   x26    s10  buf2    [saved-reg]\n+  \/\/   x27    s11  buf3    [saved-reg]\n+  \/\/   x28     t3  buf4\n+  \/\/   x29     t4  buf5\n+  \/\/   x30     t5  buf6\n+  \/\/   x31     t6  buf7\n+  address generate_md5_implCompress(bool multi_block, const char *name) {\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\", name);\n+    address start = __ pc();\n+\n+    \/\/ rotation constants\n+    const int S11 = 7;\n+    const int S12 = 12;\n+    const int S13 = 17;\n+    const int S14 = 22;\n+    const int S21 = 5;\n+    const int S22 = 9;\n+    const int S23 = 14;\n+    const int S24 = 20;\n+    const int S31 = 4;\n+    const int S32 = 11;\n+    const int S33 = 16;\n+    const int S34 = 23;\n+    const int S41 = 6;\n+    const int S42 = 10;\n+    const int S43 = 15;\n+    const int S44 = 21;\n+\n+    Register buf_arg   = c_rarg0; \/\/ a0\n+    Register state_arg = c_rarg1; \/\/ a1\n+    Register ofs_arg   = c_rarg2; \/\/ a2\n+    Register limit_arg = c_rarg3; \/\/ a3\n+\n+    \/\/ we'll copy the args to these registers to free up a0-a3\n+    \/\/ to use for other values manipulated by instructions\n+    \/\/ that can be compressed\n+    Register buf       = x16; \/\/ a6\n+    Register state     = x17; \/\/ a7\n+    Register ofs       = x18; \/\/ s2\n+    Register limit     = x19; \/\/ s3\n+\n+    \/\/ using x12->15 to allow compressed instructions\n+    Register a         = x12; \/\/ a2\n+    Register b         = x13; \/\/ a3\n+    Register c         = x14; \/\/ a4\n+    Register d         = x15; \/\/ a5\n+\n+    Register state0    =  x5; \/\/ t0\n+    Register state1    =  x6; \/\/ t1\n+    Register state2    =  x7; \/\/ t2\n+    Register state3    =  x9; \/\/ s1\n+\n+    \/\/ using x9->x11 to allow compressed instructions\n+    Register rtmp1     = x10; \/\/ a0\n+    Register rtmp2     = x11; \/\/ a1\n+\n+    const int64_t MASK_32 = 0xffffffff;\n+    Register rmask32   = x22; \/\/ s6\n+\n+    RegSet reg_cache_saved_regs = RegSet::of(x24, x25, x26, x27); \/\/ s8, s9, s10, s11\n+    RegSet reg_cache_regs;\n+    reg_cache_regs += reg_cache_saved_regs;\n+    reg_cache_regs += RegSet::of(x28, x29, x30, x31); \/\/ t3, t4, t5, t6\n+    BufRegCache reg_cache(_masm, reg_cache_regs);\n+\n+    RegSet saved_regs;\n+    if (multi_block) {\n+      saved_regs += RegSet::of(ofs, limit);\n+    }\n+    saved_regs += RegSet::of(state3, rmask32);\n+    saved_regs += reg_cache_saved_regs;\n+\n+    __ push_reg(saved_regs, sp);\n+\n+    __ mv(buf, buf_arg);\n+    __ mv(state, state_arg);\n+    if (multi_block) {\n+      __ mv(ofs, ofs_arg);\n+      __ mv(limit, limit_arg);\n+    }\n+    __ li(rmask32, MASK_32);\n+\n+    \/\/ to minimize the number of memory operations:\n+    \/\/ read the 4 state 4-byte values in pairs, with a single ld,\n+    \/\/ and split them into 2 registers\n+    __ ld(state0, Address(state));\n+    __ srli(state1, state0, 32);\n+    __ andr(state0, state0, rmask32);\n+    __ ld(state2, Address(state, 8));\n+    __ srli(state3, state2, 32);\n+    __ andr(state2, state2, rmask32);\n+\n+    Label md5_loop;\n+    __ BIND(md5_loop);\n+\n+    reg_cache.gen_loads(buf);\n+\n+    __ mv(a, state0);\n+    __ mv(b, state1);\n+    __ mv(c, state2);\n+    __ mv(d, state3);\n+\n+    \/\/ Round 1\n+    md5_FF(reg_cache, a, b, c, d,  0, S11, 0xd76aa478, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, d, a, b, c,  1, S12, 0xe8c7b756, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, c, d, a, b,  2, S13, 0x242070db, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, b, c, d, a,  3, S14, 0xc1bdceee, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, a, b, c, d,  4, S11, 0xf57c0faf, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, d, a, b, c,  5, S12, 0x4787c62a, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, c, d, a, b,  6, S13, 0xa8304613, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, b, c, d, a,  7, S14, 0xfd469501, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, a, b, c, d,  8, S11, 0x698098d8, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, d, a, b, c,  9, S12, 0x8b44f7af, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, c, d, a, b, 10, S13, 0xffff5bb1, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, b, c, d, a, 11, S14, 0x895cd7be, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, a, b, c, d, 12, S11, 0x6b901122, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, d, a, b, c, 13, S12, 0xfd987193, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, c, d, a, b, 14, S13, 0xa679438e, rtmp1, rtmp2, rmask32);\n+    md5_FF(reg_cache, b, c, d, a, 15, S14, 0x49b40821, rtmp1, rtmp2, rmask32);\n+\n+    \/\/ Round 2\n+    md5_GG(reg_cache, a, b, c, d,  1, S21, 0xf61e2562, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, d, a, b, c,  6, S22, 0xc040b340, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, c, d, a, b, 11, S23, 0x265e5a51, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, b, c, d, a,  0, S24, 0xe9b6c7aa, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, a, b, c, d,  5, S21, 0xd62f105d, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, d, a, b, c, 10, S22, 0x02441453, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, c, d, a, b, 15, S23, 0xd8a1e681, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, b, c, d, a,  4, S24, 0xe7d3fbc8, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, a, b, c, d,  9, S21, 0x21e1cde6, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, d, a, b, c, 14, S22, 0xc33707d6, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, c, d, a, b,  3, S23, 0xf4d50d87, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, b, c, d, a,  8, S24, 0x455a14ed, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, a, b, c, d, 13, S21, 0xa9e3e905, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, d, a, b, c,  2, S22, 0xfcefa3f8, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, c, d, a, b,  7, S23, 0x676f02d9, rtmp1, rtmp2, rmask32);\n+    md5_GG(reg_cache, b, c, d, a, 12, S24, 0x8d2a4c8a, rtmp1, rtmp2, rmask32);\n+\n+    \/\/ Round 3\n+    md5_HH(reg_cache, a, b, c, d,  5, S31, 0xfffa3942, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, d, a, b, c,  8, S32, 0x8771f681, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, c, d, a, b, 11, S33, 0x6d9d6122, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, b, c, d, a, 14, S34, 0xfde5380c, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, a, b, c, d,  1, S31, 0xa4beea44, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, d, a, b, c,  4, S32, 0x4bdecfa9, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, c, d, a, b,  7, S33, 0xf6bb4b60, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, b, c, d, a, 10, S34, 0xbebfbc70, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, a, b, c, d, 13, S31, 0x289b7ec6, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, d, a, b, c,  0, S32, 0xeaa127fa, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, c, d, a, b,  3, S33, 0xd4ef3085, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, b, c, d, a,  6, S34, 0x04881d05, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, a, b, c, d,  9, S31, 0xd9d4d039, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, d, a, b, c, 12, S32, 0xe6db99e5, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, c, d, a, b, 15, S33, 0x1fa27cf8, rtmp1, rtmp2, rmask32);\n+    md5_HH(reg_cache, b, c, d, a,  2, S34, 0xc4ac5665, rtmp1, rtmp2, rmask32);\n+\n+    \/\/ Round 4\n+    md5_II(reg_cache, a, b, c, d,  0, S41, 0xf4292244, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, d, a, b, c,  7, S42, 0x432aff97, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, c, d, a, b, 14, S43, 0xab9423a7, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, b, c, d, a,  5, S44, 0xfc93a039, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, a, b, c, d, 12, S41, 0x655b59c3, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, d, a, b, c,  3, S42, 0x8f0ccc92, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, c, d, a, b, 10, S43, 0xffeff47d, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, b, c, d, a,  1, S44, 0x85845dd1, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, a, b, c, d,  8, S41, 0x6fa87e4f, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, d, a, b, c, 15, S42, 0xfe2ce6e0, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, c, d, a, b,  6, S43, 0xa3014314, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, b, c, d, a, 13, S44, 0x4e0811a1, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, a, b, c, d,  4, S41, 0xf7537e82, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, d, a, b, c, 11, S42, 0xbd3af235, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, c, d, a, b,  2, S43, 0x2ad7d2bb, rtmp1, rtmp2, rmask32);\n+    md5_II(reg_cache, b, c, d, a,  9, S44, 0xeb86d391, rtmp1, rtmp2, rmask32);\n+\n+    __ addw(state0, state0, a);\n+    __ addw(state1, state1, b);\n+    __ addw(state2, state2, c);\n+    __ addw(state3, state3, d);\n+\n+    if (multi_block) {\n+      __ addi(buf, buf, 64);\n+      __ addi(ofs, ofs, 64);\n+      \/\/ if (ofs <= limit) goto m5_loop\n+      __ bge(limit, ofs, md5_loop);\n+      __ mv(c_rarg0, ofs); \/\/ return ofs\n+    }\n+\n+    \/\/ to minimize the number of memory operations:\n+    \/\/ write back the 4 state 4-byte values in pairs, with a single sd\n+    __ andr(state0, state0, rmask32);\n+    __ slli(state1, state1, 32);\n+    __ orr(state0, state0, state1);\n+    __ sd(state0, Address(state));\n+    __ andr(state2, state2, rmask32);\n+    __ slli(state3, state3, 32);\n+    __ orr(state2, state2, state3);\n+    __ sd(state2, Address(state, 8));\n+\n+    __ pop_reg(saved_regs, sp);\n+    __ ret();\n+\n+    return (address) start;\n+  }\n+\n@@ -4131,0 +4497,5 @@\n+\n+    if (UseMD5Intrinsics) {\n+      StubRoutines::_md5_implCompress   = generate_md5_implCompress(false, \"md5_implCompress\");\n+      StubRoutines::_md5_implCompressMB = generate_md5_implCompress(true,  \"md5_implCompressMB\");\n+    }\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":444,"deletions":73,"binary":false,"changes":517,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -172,1 +173,10 @@\n-      __ get_cache_and_index_and_bytecode_at_bcp(temp_reg, bc_reg, temp_reg, byte_no, 1);\n+      __ load_field_entry(temp_reg, bc_reg);\n+      if (byte_no == f1_byte) {\n+        __ la(temp_reg, Address(temp_reg, in_bytes(ResolvedFieldEntry::get_code_offset())));\n+      } else {\n+        __ la(temp_reg, Address(temp_reg, in_bytes(ResolvedFieldEntry::put_code_offset())));\n+      }\n+      \/\/ Load-acquire the bytecode to match store-release in ResolvedFieldEntry::fill_in()\n+      __ membar(MacroAssembler::AnyAny);\n+      __ lbu(temp_reg, Address(temp_reg, 0));\n+      __ membar(MacroAssembler::LoadLoad | MacroAssembler::LoadStore);\n@@ -2158,5 +2168,0 @@\n-  switch (code) {\n-    case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n-    case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n-    default: break;\n-  }\n@@ -2191,0 +2196,65 @@\n+void TemplateTable::resolve_cache_and_index_for_field(int byte_no,\n+                                            Register Rcache,\n+                                            Register index) {\n+  const Register temp = x9;\n+  assert_different_registers(Rcache, index, temp);\n+\n+  Label resolved;\n+\n+  Bytecodes::Code code = bytecode();\n+  switch (code) {\n+  case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n+  case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n+  default: break;\n+  }\n+\n+  assert(byte_no == f1_byte || byte_no == f2_byte, \"byte_no out of range\");\n+  __ load_field_entry(Rcache, index);\n+  if (byte_no == f1_byte) {\n+    __ la(temp, Address(Rcache, in_bytes(ResolvedFieldEntry::get_code_offset())));\n+  } else {\n+    __ la(temp, Address(Rcache, in_bytes(ResolvedFieldEntry::put_code_offset())));\n+  }\n+  \/\/ Load-acquire the bytecode to match store-release in ResolvedFieldEntry::fill_in()\n+  __ membar(MacroAssembler::AnyAny);\n+  __ lbu(temp, Address(temp, 0));\n+  __ membar(MacroAssembler::LoadLoad | MacroAssembler::LoadStore);\n+  __ mv(t0, (int) code);  \/\/ have we resolved this bytecode?\n+  __ beq(temp, t0, resolved);\n+\n+  \/\/ resolve first time through\n+  address entry = CAST_FROM_FN_PTR(address, InterpreterRuntime::resolve_from_cache);\n+  __ mv(temp, (int) code);\n+  __ call_VM(noreg, entry, temp);\n+\n+  \/\/ Update registers with resolved info\n+  __ load_field_entry(Rcache, index);\n+  __ bind(resolved);\n+}\n+\n+void TemplateTable::load_resolved_field_entry(Register obj,\n+                                              Register cache,\n+                                              Register tos_state,\n+                                              Register offset,\n+                                              Register flags,\n+                                              bool is_static = false) {\n+  assert_different_registers(cache, tos_state, flags, offset);\n+\n+  \/\/ Field offset\n+  __ load_sized_value(offset, Address(cache, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n+\n+  \/\/ Flags\n+  __ load_unsigned_byte(flags, Address(cache, in_bytes(ResolvedFieldEntry::flags_offset())));\n+\n+  \/\/ TOS state\n+  __ load_unsigned_byte(tos_state, Address(cache, in_bytes(ResolvedFieldEntry::type_offset())));\n+\n+  \/\/ Klass overwrite register\n+  if (is_static) {\n+    __ ld(obj, Address(cache, ResolvedFieldEntry::field_holder_offset()));\n+    const int mirror_offset = in_bytes(Klass::java_mirror_offset());\n+    __ ld(obj, Address(obj, mirror_offset));\n+    __ resolve_oop_handle(obj, x15, t1);\n+  }\n+}\n+\n@@ -2346,2 +2416,1 @@\n-    __ get_cache_and_index_at_bcp(c_rarg2, c_rarg3, 1);\n-    __ la(c_rarg2, Address(c_rarg2, in_bytes(ConstantPoolCache::base_offset())));\n+    __ load_field_entry(c_rarg2, index);\n@@ -2357,1 +2426,0 @@\n-    \/\/ c_rarg3: jvalue object on the stack\n@@ -2360,2 +2428,2 @@\n-                                       c_rarg1, c_rarg2, c_rarg3);\n-    __ get_cache_and_index_at_bcp(cache, index, 1);\n+                                       c_rarg1, c_rarg2);\n+    __ load_field_entry(cache, index);\n@@ -2373,2 +2441,1 @@\n-  const Register cache     = x12;\n-  const Register index     = x13;\n+  const Register cache     = x14;\n@@ -2376,0 +2443,2 @@\n+  const Register index     = x13;\n+  const Register tos_state = x13;\n@@ -2377,2 +2446,1 @@\n-  const Register flags     = x10;\n-  const Register raw_flags = x16;\n+  const Register flags     = x16;\n@@ -2381,1 +2449,1 @@\n-  resolve_cache_and_index(byte_no, cache, index, sizeof(u2));\n+  resolve_cache_and_index_for_field(byte_no, cache, index);\n@@ -2383,1 +2451,1 @@\n-  load_field_cp_cache_entry(obj, cache, index, off, raw_flags, is_static);\n+  load_resolved_field_entry(obj, cache, tos_state, off, flags, is_static);\n@@ -2396,4 +2464,0 @@\n-  __ slli(flags, raw_flags, XLEN - (ConstantPoolCacheEntry::tos_state_shift +\n-                                    ConstantPoolCacheEntry::tos_state_bits));\n-  __ srli(flags, flags, XLEN - ConstantPoolCacheEntry::tos_state_bits);\n-\n@@ -2401,1 +2465,1 @@\n-  __ bnez(flags, notByte);\n+  __ bnez(tos_state, notByte);\n@@ -2418,1 +2482,1 @@\n-  __ sub(t0, flags, (u1)ztos);\n+  __ sub(t0, tos_state, (u1)ztos);\n@@ -2432,1 +2496,1 @@\n-  __ sub(t0, flags, (u1)atos);\n+  __ sub(t0, tos_state, (u1)atos);\n@@ -2443,1 +2507,1 @@\n-  __ sub(t0, flags, (u1)itos);\n+  __ sub(t0, tos_state, (u1)itos);\n@@ -2456,1 +2520,1 @@\n-  __ sub(t0, flags, (u1)ctos);\n+  __ sub(t0, tos_state, (u1)ctos);\n@@ -2468,1 +2532,1 @@\n-  __ sub(t0, flags, (u1)stos);\n+  __ sub(t0, tos_state, (u1)stos);\n@@ -2480,1 +2544,1 @@\n-  __ sub(t0, flags, (u1)ltos);\n+  __ sub(t0, tos_state, (u1)ltos);\n@@ -2492,1 +2556,1 @@\n-  __ sub(t0, flags, (u1)ftos);\n+  __ sub(t0, tos_state, (u1)ftos);\n@@ -2505,1 +2569,1 @@\n-  __ sub(t0, flags, (u1)dtos);\n+  __ sub(t0, tos_state, (u1)dtos);\n@@ -2525,1 +2589,1 @@\n-  __ test_bit(t0, raw_flags, ConstantPoolCacheEntry::is_volatile_shift);\n+  __ test_bit(t0, flags, ResolvedFieldEntry::is_volatile_shift);\n@@ -2549,2 +2613,0 @@\n-  ByteSize cp_base_offset = ConstantPoolCache::base_offset();\n-\n@@ -2564,1 +2626,1 @@\n-    __ get_cache_and_index_at_bcp(c_rarg2, t0, 1);\n+    __ mv(c_rarg2, cache);\n@@ -2574,5 +2636,1 @@\n-      __ lwu(c_rarg3, Address(c_rarg2,\n-                              in_bytes(cp_base_offset +\n-                                       ConstantPoolCacheEntry::flags_offset())));\n-      __ srli(c_rarg3, c_rarg3, ConstantPoolCacheEntry::tos_state_shift);\n-      ConstantPoolCacheEntry::verify_tos_state_shift();\n+      __ load_unsigned_byte(c_rarg3, Address(c_rarg2, in_bytes(ResolvedFieldEntry::type_offset())));\n@@ -2589,2 +2647,0 @@\n-    \/\/ cache entry pointer\n-    __ add(c_rarg2, c_rarg2, in_bytes(cp_base_offset));\n@@ -2600,1 +2656,1 @@\n-    __ get_cache_and_index_at_bcp(cache, index, 1);\n+    __ load_field_entry(cache, index);\n@@ -2608,6 +2664,7 @@\n-  const Register cache = x12;\n-  const Register index = x13;\n-  const Register obj   = x12;\n-  const Register off   = x9;\n-  const Register flags = x10;\n-  const Register bc    = x14;\n+  const Register cache     = x12;\n+  const Register index     = x13;\n+  const Register tos_state = x13;\n+  const Register obj       = x12;\n+  const Register off       = x9;\n+  const Register flags     = x10;\n+  const Register bc        = x14;\n@@ -2615,1 +2672,1 @@\n-  resolve_cache_and_index(byte_no, cache, index, sizeof(u2));\n+  resolve_cache_and_index_for_field(byte_no, cache, index);\n@@ -2617,1 +2674,1 @@\n-  load_field_cp_cache_entry(obj, cache, index, off, flags, is_static);\n+  load_resolved_field_entry(obj, cache, tos_state, off, flags, is_static);\n@@ -2624,1 +2681,1 @@\n-    __ test_bit(t0, x15, ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x15, ResolvedFieldEntry::is_volatile_shift);\n@@ -2633,4 +2690,0 @@\n-  __ slli(flags, flags, XLEN - (ConstantPoolCacheEntry::tos_state_shift +\n-                                ConstantPoolCacheEntry::tos_state_bits));\n-  __ srli(flags, flags, XLEN - ConstantPoolCacheEntry::tos_state_bits);\n-\n@@ -2638,1 +2691,1 @@\n-  __ bnez(flags, notByte);\n+  __ bnez(tos_state, notByte);\n@@ -2662,1 +2715,1 @@\n-  __ sub(t0, flags, (u1)ztos);\n+  __ sub(t0, tos_state, (u1)ztos);\n@@ -2682,1 +2735,1 @@\n-  __ sub(t0, flags, (u1)atos);\n+  __ sub(t0, tos_state, (u1)atos);\n@@ -2703,1 +2756,1 @@\n-  __ sub(t0, flags, (u1)itos);\n+  __ sub(t0, tos_state, (u1)itos);\n@@ -2723,1 +2776,1 @@\n-  __ sub(t0, flags, (u1)ctos);\n+  __ sub(t0, tos_state, (u1)ctos);\n@@ -2743,1 +2796,1 @@\n-  __ sub(t0, flags, (u1)stos);\n+  __ sub(t0, tos_state, (u1)stos);\n@@ -2763,1 +2816,1 @@\n-  __ sub(t0, flags, (u1)ltos);\n+  __ sub(t0, tos_state, (u1)ltos);\n@@ -2783,1 +2836,1 @@\n-  __ sub(t0, flags, (u1)ftos);\n+  __ sub(t0, tos_state, (u1)ftos);\n@@ -2804,1 +2857,1 @@\n-  __ sub(t0, flags, (u1)dtos);\n+  __ sub(t0, tos_state, (u1)dtos);\n@@ -2834,1 +2887,1 @@\n-    __ test_bit(t0, x15, ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x15, ResolvedFieldEntry::is_volatile_shift);\n@@ -2887,1 +2940,1 @@\n-    __ get_cache_entry_pointer_at_bcp(c_rarg2, x10, 1);\n+    __ load_field_entry(c_rarg2, x10);\n@@ -2921,1 +2974,5 @@\n-  __ get_cache_and_index_at_bcp(x12, x11, 1);\n+  __ load_field_entry(x12, x11);\n+  __ push_reg(x10);\n+  \/\/ X11: field offset, X12: TOS, X13: flags\n+  load_resolved_field_entry(x12, x12, x10, x11, x13);\n+  __ pop_reg(x10);\n@@ -2926,7 +2983,0 @@\n-  \/\/ test for volatile with x13\n-  __ lwu(x13, Address(x12, in_bytes(base +\n-                                    ConstantPoolCacheEntry::flags_offset())));\n-\n-  \/\/ replace index with field offset from cache entry\n-  __ ld(x11, Address(x12, in_bytes(base + ConstantPoolCacheEntry::f2_offset())));\n-\n@@ -2935,1 +2985,1 @@\n-    __ test_bit(t0, x13, ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x13, ResolvedFieldEntry::is_volatile_shift);\n@@ -2983,1 +3033,1 @@\n-    __ test_bit(t0, x13, ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x13, ResolvedFieldEntry::is_volatile_shift);\n@@ -3005,1 +3055,1 @@\n-    __ get_cache_entry_pointer_at_bcp(c_rarg2, t1, 1);\n+    __ load_field_entry(c_rarg2, t1);\n@@ -3020,1 +3070,1 @@\n-  __ get_cache_and_index_at_bcp(x12, x11, 1);\n+  __ load_field_entry(x12, x11);\n@@ -3025,4 +3075,2 @@\n-  __ ld(x11, Address(x12, in_bytes(ConstantPoolCache::base_offset() +\n-                                   ConstantPoolCacheEntry::f2_offset())));\n-  __ lwu(x13, Address(x12, in_bytes(ConstantPoolCache::base_offset() +\n-                                    ConstantPoolCacheEntry::flags_offset())));\n+  __ load_sized_value(x11, Address(x12, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n+  __ load_unsigned_byte(x13, Address(x12, in_bytes(ResolvedFieldEntry::flags_offset())));\n@@ -3069,1 +3117,1 @@\n-    __ test_bit(t0, x13, ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x13, ResolvedFieldEntry::is_volatile_shift);\n@@ -3082,3 +3130,2 @@\n-  __ get_cache_and_index_at_bcp(x12, x13, 2);\n-  __ ld(x11, Address(x12, in_bytes(ConstantPoolCache::base_offset() +\n-                                   ConstantPoolCacheEntry::f2_offset())));\n+  __ load_field_entry(x12, x13, 2);\n+  __ load_sized_value(x11, Address(x12, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n@@ -3111,3 +3158,2 @@\n-    __ lwu(x13, Address(x12, in_bytes(ConstantPoolCache::base_offset() +\n-                                      ConstantPoolCacheEntry::flags_offset())));\n-    __ test_bit(t0, x13, ConstantPoolCacheEntry::is_volatile_shift);\n+    __ load_unsigned_byte(x13, Address(x12, in_bytes(ResolvedFieldEntry::flags_offset())));\n+    __ test_bit(t0, x13, ResolvedFieldEntry::is_volatile_shift);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":135,"deletions":89,"binary":false,"changes":224,"status":"modified"},{"patch":"@@ -174,3 +174,2 @@\n-  if (UseMD5Intrinsics) {\n-    warning(\"MD5 intrinsics are not available on this CPU.\");\n-    FLAG_SET_DEFAULT(UseMD5Intrinsics, false);\n+  if (FLAG_IS_DEFAULT(UseMD5Intrinsics)) {\n+    FLAG_SET_DEFAULT(UseMD5Intrinsics, true);\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-  bool should_save_return_value = !_needs_return_buffer && _needs_transition;\n+  bool should_save_return_value = !_needs_return_buffer;\n","filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -2351,1 +2352,1 @@\n-    imull(index, index, sizeof(ResolvedIndyEntry)); \/\/ Scale the index to be the entry index * sizeof(ResolvedInvokeDynamicInfo)\n+    imull(index, index, sizeof(ResolvedIndyEntry)); \/\/ Scale the index to be the entry index * sizeof(ResolvedIndyEntry)\n@@ -2355,0 +2356,15 @@\n+\n+void InterpreterMacroAssembler::load_field_entry(Register cache, Register index, int bcp_offset) {\n+  \/\/ Get index out of bytecode pointer\n+  movptr(cache, Address(rbp, frame::interpreter_frame_cache_offset * wordSize));\n+  get_cache_index_at_bcp(index, bcp_offset, sizeof(u2));\n+\n+  movptr(cache, Address(cache, ConstantPoolCache::field_entries_offset()));\n+  \/\/ Take shortcut if the size is a power of 2\n+  if (is_power_of_2(sizeof(ResolvedFieldEntry))) {\n+    shll(index, log2i_exact(sizeof(ResolvedFieldEntry))); \/\/ Scale index by power of 2\n+  } else {\n+    imull(index, index, sizeof(ResolvedFieldEntry)); \/\/ Scale the index to be the entry index * sizeof(ResolvedFieldEntry)\n+  }\n+  lea(cache, Address(cache, index, Address::times_1, Array<ResolvedFieldEntry>::base_offset_in_bytes()));\n+}\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -336,1 +336,1 @@\n-\n+  void load_field_entry(Register cache, Register index, int bcp_offset = 1);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -2904,1 +2905,1 @@\n-  shrl(temp_reg, ConstantPoolCacheEntry::is_null_free_inline_type_shift);\n+  shrl(temp_reg, ResolvedFieldEntry::is_null_free_inline_type_shift);\n@@ -2912,1 +2913,1 @@\n-  shrl(temp_reg, ConstantPoolCacheEntry::is_null_free_inline_type_shift);\n+  shrl(temp_reg, ResolvedFieldEntry::is_null_free_inline_type_shift);\n@@ -2920,1 +2921,1 @@\n-  shrl(temp_reg, ConstantPoolCacheEntry::is_flat_shift);\n+  shrl(temp_reg, ResolvedFieldEntry::is_flat_shift);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -202,1 +203,7 @@\n-      __ get_cache_and_index_and_bytecode_at_bcp(temp_reg, bc_reg, temp_reg, byte_no, 1);\n+      __ load_field_entry(temp_reg, bc_reg);\n+      if (byte_no == f1_byte) {\n+        __ load_unsigned_byte(temp_reg, Address(temp_reg, in_bytes(ResolvedFieldEntry::get_code_offset())));\n+      } else {\n+        __ load_unsigned_byte(temp_reg, Address(temp_reg, in_bytes(ResolvedFieldEntry::put_code_offset())));\n+      }\n+\n@@ -2782,5 +2789,0 @@\n-  switch (code) {\n-  case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n-  case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n-  default: break;\n-  }\n@@ -2817,0 +2819,62 @@\n+void TemplateTable::resolve_cache_and_index_for_field(int byte_no,\n+                                            Register cache,\n+                                            Register index) {\n+  const Register temp = rbx;\n+  assert_different_registers(cache, index, temp);\n+\n+  Label resolved;\n+\n+  Bytecodes::Code code = bytecode();\n+  switch (code) {\n+    case Bytecodes::_nofast_getfield: code = Bytecodes::_getfield; break;\n+    case Bytecodes::_nofast_putfield: code = Bytecodes::_putfield; break;\n+    default: break;\n+  }\n+\n+  assert(byte_no == f1_byte || byte_no == f2_byte, \"byte_no out of range\");\n+  __ load_field_entry(cache, index);\n+  if (byte_no == f1_byte) {\n+    __ load_unsigned_byte(temp, Address(cache, in_bytes(ResolvedFieldEntry::get_code_offset())));\n+  } else {\n+    __ load_unsigned_byte(temp, Address(cache, in_bytes(ResolvedFieldEntry::put_code_offset())));\n+  }\n+  __ cmpl(temp, code);  \/\/ have we resolved this bytecode?\n+  __ jcc(Assembler::equal, resolved);\n+\n+  \/\/ resolve first time through\n+  address entry = CAST_FROM_FN_PTR(address, InterpreterRuntime::resolve_from_cache);\n+  __ movl(temp, code);\n+  __ call_VM(noreg, entry, temp);\n+  \/\/ Update registers with resolved info\n+  __ load_field_entry(cache, index);\n+\n+  __ bind(resolved);\n+}\n+\n+void TemplateTable::load_resolved_field_entry(Register obj,\n+                                              Register cache,\n+                                              Register tos_state,\n+                                              Register offset,\n+                                              Register flags,\n+                                              bool is_static = false) {\n+  assert_different_registers(cache, tos_state, flags, offset);\n+\n+  \/\/ Field offset\n+  __ load_sized_value(offset, Address(cache, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n+\n+  \/\/ Flags\n+  __ load_unsigned_byte(flags, Address(cache, in_bytes(ResolvedFieldEntry::flags_offset())));\n+\n+  \/\/ TOS state\n+  __ load_unsigned_byte(tos_state, Address(cache, in_bytes(ResolvedFieldEntry::type_offset())));\n+\n+  \/\/ Klass overwrite register\n+  if (is_static) {\n+    __ movptr(obj, Address(cache, ResolvedFieldEntry::field_holder_offset()));\n+    const int mirror_offset = in_bytes(Klass::java_mirror_offset());\n+    __ movptr(obj, Address(obj, mirror_offset));\n+    __ resolve_oop_handle(obj, rscratch2);\n+  }\n+\n+}\n+\n@@ -2964,3 +3028,1 @@\n-    __ addptr(cache, in_bytes(ConstantPoolCache::base_offset()));\n-    __ shll(index, LogBytesPerWord);\n-    __ addptr(cache, index);\n+    __ load_field_entry(cache, index);\n@@ -2977,2 +3039,3 @@\n-               rax, cache);\n-    __ get_cache_and_index_at_bcp(cache, index, 1);\n+              rax, cache);\n+\n+    __ load_field_entry(cache, index);\n@@ -2992,0 +3055,1 @@\n+  const Register obj   = LP64_ONLY(r9) NOT_LP64(rcx);\n@@ -2994,1 +3058,0 @@\n-  const Register obj   = LP64_ONLY(c_rarg3) NOT_LP64(rcx);\n@@ -2996,1 +3059,2 @@\n-  const Register flags = rax;\n+  const Register tos_state   = rax;\n+  const Register flags = rdx;\n@@ -2998,1 +3062,0 @@\n-  const Register flags2 = rdx;\n@@ -3000,1 +3063,1 @@\n-  resolve_cache_and_index(byte_no, cache, index, sizeof(u2));\n+  resolve_cache_and_index_for_field(byte_no, cache, index);\n@@ -3002,1 +3065,1 @@\n-  load_field_cp_cache_entry(obj, cache, index, off, flags, is_static);\n+  load_resolved_field_entry(obj, cache, tos_state, off, flags, is_static);\n@@ -3008,9 +3071,0 @@\n-  if (!is_static) {\n-    __ movptr(rcx, Address(cache, index, Address::times_ptr,\n-                           in_bytes(ConstantPoolCache::base_offset() +\n-                                    ConstantPoolCacheEntry::f1_offset())));\n-  }\n-\n-  __ movl(flags2, flags);\n-\n-  __ shrl(flags, ConstantPoolCacheEntry::tos_state_shift);\n@@ -3019,3 +3073,1 @@\n-\n-  __ andl(flags, ConstantPoolCacheEntry::tos_state_mask);\n-\n+  __ testl(tos_state, tos_state);\n@@ -3023,0 +3075,1 @@\n+\n@@ -3034,2 +3087,1 @@\n-\n-  __ cmpl(flags, ztos);\n+  __ cmpl(tos_state, ztos);\n@@ -3049,1 +3101,1 @@\n-  __ cmpl(flags, atos);\n+  __ cmpl(tos_state, atos);\n@@ -3065,1 +3117,1 @@\n-      __ test_field_is_null_free_inline_type(flags2, rscratch1, is_null_free_inline_type);\n+      __ test_field_is_null_free_inline_type(flags, rscratch1, is_null_free_inline_type);\n@@ -3076,1 +3128,0 @@\n-          __ andl(flags2, ConstantPoolCacheEntry::field_index_mask);\n@@ -3087,1 +3138,1 @@\n-                obj, flags2);\n+                obj, cache);\n@@ -3096,1 +3147,1 @@\n-      __ test_field_is_null_free_inline_type(flags2, rscratch1, is_inline_type);\n+      __ test_field_is_null_free_inline_type(flags, rscratch1, is_inline_type);\n@@ -3106,1 +3157,1 @@\n-        __ test_field_is_flat(flags2, rscratch1, is_flat);\n+      __ test_field_is_flat(flags, rscratch1, is_flat);\n@@ -3108,1 +3159,0 @@\n-          __ movptr(rax, rcx);  \/\/ small dance required to preserve the klass_holder somewhere\n@@ -3110,1 +3160,0 @@\n-          __ push(rax);\n@@ -3112,1 +3161,0 @@\n-          __ pop(rcx);\n@@ -3115,2 +3163,3 @@\n-            __ andl(flags2, ConstantPoolCacheEntry::field_index_mask);\n-            __ get_inline_type_field_klass(rcx, flags2, rbx);\n+            __ load_unsigned_short(flags, Address(cache, in_bytes(ResolvedFieldEntry::field_index_offset())));\n+            __ movptr(rcx, Address(cache, ResolvedFieldEntry::field_holder_offset()));\n+            __ get_inline_type_field_klass(rcx, flags, rbx);\n@@ -3123,2 +3172,0 @@\n-        \/\/ field is flat\n-          __ andl(flags2, ConstantPoolCacheEntry::field_index_mask);\n@@ -3126,1 +3173,3 @@\n-          __ read_flat_field(rcx, flags2, rbx, rax);\n+          __ load_unsigned_short(flags, Address(cache, in_bytes(ResolvedFieldEntry::field_index_offset())));\n+          __ movptr(rcx, Address(cache, ResolvedFieldEntry::field_holder_offset()));\n+          __ read_flat_field(rcx, flags, rbx, rax);\n@@ -3141,1 +3190,1 @@\n-  __ cmpl(flags, itos);\n+  __ cmpl(tos_state, itos);\n@@ -3153,1 +3202,1 @@\n-  __ cmpl(flags, ctos);\n+  __ cmpl(tos_state, ctos);\n@@ -3165,1 +3214,1 @@\n-  __ cmpl(flags, stos);\n+  __ cmpl(tos_state, stos);\n@@ -3177,1 +3226,1 @@\n-  __ cmpl(flags, ltos);\n+  __ cmpl(tos_state, ltos);\n@@ -3189,1 +3238,1 @@\n-  __ cmpl(flags, ftos);\n+  __ cmpl(tos_state, ftos);\n@@ -3204,1 +3253,1 @@\n-  __ cmpl(flags, dtos);\n+  __ cmpl(tos_state, dtos);\n@@ -3247,0 +3296,1 @@\n+  __ load_field_entry(cache, index);\n@@ -3248,6 +3298,0 @@\n-  Register cpentry = rbx;\n-\n-  ByteSize cp_base_offset = ConstantPoolCache::base_offset();\n-\n-  __ lea(cpentry, Address(cache, index, Address::times_ptr,\n-                         in_bytes(cp_base_offset)));\n@@ -3255,1 +3299,1 @@\n-  __ call_VM(rbx, CAST_FROM_FN_PTR(address, InterpreterRuntime::withfield), cpentry, rax);\n+  __ call_VM(rbx, CAST_FROM_FN_PTR(address, InterpreterRuntime::withfield), cache, rax);\n@@ -3266,7 +3310,4 @@\n-\n-  const Register robj = LP64_ONLY(c_rarg2)   NOT_LP64(rax);\n-  const Register RBX  = LP64_ONLY(c_rarg1)   NOT_LP64(rbx);\n-  const Register RCX  = LP64_ONLY(c_rarg3)   NOT_LP64(rcx);\n-  const Register RDX  = LP64_ONLY(rscratch1) NOT_LP64(rdx);\n-\n-  ByteSize cp_base_offset = ConstantPoolCache::base_offset();\n+  \/\/ Cache is rcx and index is rdx\n+  const Register entry = LP64_ONLY(c_rarg2) NOT_LP64(rax); \/\/ ResolvedFieldEntry\n+  const Register obj = LP64_ONLY(c_rarg1) NOT_LP64(rbx);   \/\/ Object pointer\n+  const Register value = LP64_ONLY(c_rarg3) NOT_LP64(rcx); \/\/ JValue object\n@@ -3278,1 +3319,1 @@\n-    assert_different_registers(cache, index, rax);\n+    assert_different_registers(cache, obj, rax);\n@@ -3283,2 +3324,1 @@\n-    __ get_cache_and_index_at_bcp(robj, RDX, 1);\n-\n+    __ mov(entry, cache);\n@@ -3288,1 +3328,1 @@\n-      __ xorl(RBX, RBX);\n+      __ xorl(obj, obj);\n@@ -3298,9 +3338,1 @@\n-      __ movl(RCX, Address(robj, RDX,\n-                           Address::times_ptr,\n-                           in_bytes(cp_base_offset +\n-                                     ConstantPoolCacheEntry::flags_offset())));\n-      NOT_LP64(__ mov(rbx, rsp));\n-      __ shrl(RCX, ConstantPoolCacheEntry::tos_state_shift);\n-\n-      \/\/ Make sure we don't need to mask rcx after the above shift\n-      ConstantPoolCacheEntry::verify_tos_state_shift();\n+      __ load_unsigned_byte(value, Address(entry, in_bytes(ResolvedFieldEntry::type_offset())));\n@@ -3308,2 +3340,2 @@\n-      __ movptr(c_rarg1, at_tos_p1());  \/\/ initially assume a one word jvalue\n-      __ cmpl(c_rarg3, ltos);\n+      __ movptr(obj, at_tos_p1());  \/\/ initially assume a one word jvalue\n+      __ cmpl(value, ltos);\n@@ -3311,2 +3343,2 @@\n-                 c_rarg1, at_tos_p2()); \/\/ ltos (two word jvalue)\n-      __ cmpl(c_rarg3, dtos);\n+                 obj, at_tos_p2()); \/\/ ltos (two word jvalue)\n+      __ cmpl(value, dtos);\n@@ -3314,1 +3346,1 @@\n-                 c_rarg1, at_tos_p2()); \/\/ dtos (two word jvalue)\n+                 obj, at_tos_p2()); \/\/ dtos (two word jvalue)\n@@ -3316,1 +3348,2 @@\n-      __ cmpl(rcx, ltos);\n+      __ mov(obj, rsp);\n+      __ cmpl(value, ltos);\n@@ -3318,1 +3351,1 @@\n-      __ cmpl(rcx, dtos);\n+      __ cmpl(value, dtos);\n@@ -3320,1 +3353,1 @@\n-      __ addptr(rbx, Interpreter::expr_offset_in_bytes(1)); \/\/ one word jvalue (not ltos, dtos)\n+      __ addptr(obj, Interpreter::expr_offset_in_bytes(1)); \/\/ one word jvalue (not ltos, dtos)\n@@ -3324,1 +3357,1 @@\n-      __ addptr(rbx, Interpreter::expr_offset_in_bytes(2)); \/\/ two words jvalue\n+      __ addptr(obj, Interpreter::expr_offset_in_bytes(2)); \/\/ two words jvalue\n@@ -3328,1 +3361,1 @@\n-      __ movptr(rbx, Address(rbx, 0));\n+      __ movptr(obj, Address(obj, 0));\n@@ -3331,4 +3364,1 @@\n-    \/\/ cache entry pointer\n-    __ addptr(robj, in_bytes(cp_base_offset));\n-    __ shll(RDX, LogBytesPerWord);\n-    __ addptr(robj, RDX);\n+\n@@ -3336,4 +3366,4 @@\n-    __ mov(RCX, rsp);\n-    \/\/ c_rarg1: object pointer set up above (null if static)\n-    \/\/ c_rarg2: cache entry pointer\n-    \/\/ c_rarg3: jvalue object on the stack\n+    __ mov(value, rsp);\n+    \/\/ obj: object pointer set up above (null if static)\n+    \/\/ cache: field entry pointer\n+    \/\/ value: jvalue object on the stack\n@@ -3341,4 +3371,5 @@\n-               CAST_FROM_FN_PTR(address,\n-                                InterpreterRuntime::post_field_modification),\n-               RBX, robj, RCX);\n-    __ get_cache_and_index_at_bcp(cache, index, 1);\n+              CAST_FROM_FN_PTR(address,\n+                              InterpreterRuntime::post_field_modification),\n+              obj, entry, value);\n+    \/\/ Reload field entry\n+    __ load_field_entry(cache, index);\n@@ -3352,0 +3383,1 @@\n+  const Register obj = rcx;\n@@ -3354,1 +3386,1 @@\n-  const Register obj   = rcx;\n+  const Register tos_state   = rdx;\n@@ -3356,2 +3388,1 @@\n-  const Register flags = rax;\n-  const Register flags2 = rdx;\n+  const Register flags = r9;\n@@ -3359,1 +3390,1 @@\n-  resolve_cache_and_index(byte_no, cache, index, sizeof(u2));\n+  resolve_cache_and_index_for_field(byte_no, cache, index);\n@@ -3361,1 +3392,1 @@\n-  load_field_cp_cache_entry(obj, cache, index, off, flags, is_static);\n+  load_resolved_field_entry(obj, cache, tos_state, off, flags, is_static);\n@@ -3368,3 +3399,0 @@\n-  __ movl(rdx, flags);\n-  __ shrl(rdx, ConstantPoolCacheEntry::is_volatile_shift);\n-  __ andl(rdx, 0x1);\n@@ -3373,2 +3401,3 @@\n-  __ testl(rdx, rdx);\n-  __ movl(flags2, flags);\n+  __ movl(rscratch1, flags);\n+  __ andl(rscratch1, (1 << ResolvedFieldEntry::is_volatile_shift));\n+  __ testl(rscratch1, rscratch1);\n@@ -3377,1 +3406,1 @@\n-  putfield_or_static_helper(byte_no, is_static, rc, obj, off, flags, flags2);\n+  putfield_or_static_helper(byte_no, is_static, rc, obj, off, tos_state, flags);\n@@ -3383,1 +3412,1 @@\n-  putfield_or_static_helper(byte_no, is_static, rc, obj, off, flags, flags2);\n+  putfield_or_static_helper(byte_no, is_static, rc, obj, off, tos_state, flags);\n@@ -3389,1 +3418,1 @@\n-                                              Register obj, Register off, Register flags, Register flags2) {\n+                                              Register obj, Register off, Register tos_state, Register flags) {\n@@ -3401,4 +3430,2 @@\n-  __ shrl(flags, ConstantPoolCacheEntry::tos_state_shift);\n-\n-  assert(btos == 0, \"change code, btos != 0\");\n-  __ andl(flags, ConstantPoolCacheEntry::tos_state_mask);\n+  \/\/ Test TOS state\n+  __ testl(tos_state, tos_state);\n@@ -3419,1 +3446,1 @@\n-  __ cmpl(flags, ztos);\n+  __ cmpl(tos_state, ztos);\n@@ -3434,1 +3461,1 @@\n-  __ cmpl(flags, atos);\n+  __ cmpl(tos_state, atos);\n@@ -3452,1 +3479,1 @@\n-        __ test_field_is_not_null_free_inline_type(flags2, rscratch1, is_inline_type);\n+        __ test_field_is_not_null_free_inline_type(flags, rscratch1, is_inline_type);\n@@ -3459,1 +3486,1 @@\n-        __ test_field_is_null_free_inline_type(flags2, rscratch1, is_inline_type);\n+        __ test_field_is_null_free_inline_type(flags, rscratch1, is_inline_type);\n@@ -3472,1 +3499,1 @@\n-        __ test_field_is_flat(flags2, rscratch1, is_flat);\n+        __ test_field_is_flat(flags, rscratch1, is_flat);\n@@ -3496,1 +3523,1 @@\n-  __ cmpl(flags, itos);\n+  __ cmpl(tos_state, itos);\n@@ -3511,1 +3538,1 @@\n-  __ cmpl(flags, ctos);\n+  __ cmpl(tos_state, ctos);\n@@ -3526,1 +3553,1 @@\n-  __ cmpl(flags, stos);\n+  __ cmpl(tos_state, stos);\n@@ -3541,1 +3568,1 @@\n-  __ cmpl(flags, ltos);\n+  __ cmpl(tos_state, ltos);\n@@ -3559,1 +3586,1 @@\n-  __ cmpl(flags, ftos);\n+  __ cmpl(tos_state, ftos);\n@@ -3576,1 +3603,1 @@\n-  __ cmpl(flags, dtos);\n+  __ cmpl(tos_state, dtos);\n@@ -3647,2 +3674,2 @@\n-    LP64_ONLY(__ get_cache_entry_pointer_at_bcp(c_rarg2, rax, 1));\n-    NOT_LP64(__ get_cache_entry_pointer_at_bcp(rax, rdx, 1));\n+    LP64_ONLY(__ load_field_entry(c_rarg2, rax));\n+    NOT_LP64(__ load_field_entry(rax, rdx));\n@@ -3676,19 +3703,1 @@\n-  ByteSize base = ConstantPoolCache::base_offset();\n-\n-  jvmti_post_fast_field_mod();\n-\n-  \/\/ access constant pool cache\n-  __ get_cache_and_index_at_bcp(rcx, rbx, 1);\n-\n-  \/\/ test for volatile with rdx but rdx is tos register for lputfield.\n-  __ movl(rdx, Address(rcx, rbx, Address::times_ptr,\n-                       in_bytes(base +\n-                                ConstantPoolCacheEntry::flags_offset())));\n-\n-  \/\/ replace index with field offset from cache entry\n-  __ movptr(rbx, Address(rcx, rbx, Address::times_ptr,\n-                         in_bytes(base + ConstantPoolCacheEntry::f2_offset())));\n-\n-  \/\/ [jk] not needed currently\n-  \/\/ volatile_barrier(Assembler::Membar_mask_bits(Assembler::LoadStore |\n-  \/\/                                              Assembler::StoreStore));\n+  Register cache = rcx;\n@@ -3697,3 +3706,0 @@\n-  if (bytecode() == Bytecodes::_fast_qputfield) {\n-    __ movl(rscratch2, rdx);  \/\/ saving flags for is_flat test\n-  }\n@@ -3701,2 +3707,7 @@\n-  __ shrl(rdx, ConstantPoolCacheEntry::is_volatile_shift);\n-  __ andl(rdx, 0x1);\n+  jvmti_post_fast_field_mod();\n+\n+  __ push(rax);\n+  __ load_field_entry(rcx, rax);\n+  load_resolved_field_entry(noreg, cache, rax, rbx, rdx);\n+  __ pop(rax);\n+  \/\/ RBX: field offset, RCX: RAX: TOS, RDX: flags\n@@ -3711,1 +3722,3 @@\n-  __ testl(rdx, rdx);\n+  __ movl(rscratch2, rdx);  \/\/ saving flags for is_flat test\n+  __ andl(rscratch2, (1 << ResolvedFieldEntry::is_volatile_shift));\n+  __ testl(rscratch2, rscratch2);\n@@ -3714,3 +3727,0 @@\n-  if (bytecode() == Bytecodes::_fast_qputfield) {\n-    __ movl(rdx, rscratch2);  \/\/ restoring flags for is_flat test\n-  }\n@@ -3723,3 +3733,0 @@\n-  if (bytecode() == Bytecodes::_fast_qputfield) {\n-    __ movl(rdx, rscratch2);  \/\/ restoring flags for is_flat test\n-  }\n@@ -3802,2 +3809,2 @@\n-    LP64_ONLY(__ get_cache_entry_pointer_at_bcp(c_rarg2, rcx, 1));\n-    NOT_LP64(__ get_cache_entry_pointer_at_bcp(rcx, rdx, 1));\n+    LP64_ONLY(__ load_field_entry(c_rarg2, rcx));\n+    NOT_LP64(__ load_field_entry(rcx, rdx));\n@@ -3816,12 +3823,2 @@\n-  __ get_cache_and_index_at_bcp(rcx, rbx, 1);\n-  \/\/ replace index with field offset from cache entry\n-  \/\/ [jk] not needed currently\n-  \/\/ __ movl(rdx, Address(rcx, rbx, Address::times_8,\n-  \/\/                      in_bytes(ConstantPoolCache::base_offset() +\n-  \/\/                               ConstantPoolCacheEntry::flags_offset())));\n-  \/\/ __ shrl(rdx, ConstantPoolCacheEntry::is_volatile_shift);\n-  \/\/ __ andl(rdx, 0x1);\n-  \/\/\n-  __ movptr(rdx, Address(rcx, rbx, Address::times_ptr,\n-                         in_bytes(ConstantPoolCache::base_offset() +\n-                                  ConstantPoolCacheEntry::f2_offset())));\n+  __ load_field_entry(rcx, rbx);\n+  __ load_sized_value(rdx, Address(rcx, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n@@ -3839,3 +3836,1 @@\n-      __ movptr(rscratch1, Address(rcx, rbx, Address::times_ptr,\n-                                   in_bytes(ConstantPoolCache::base_offset() +\n-                                            ConstantPoolCacheEntry::flags_offset())));\n+      __ load_unsigned_byte(rscratch1, Address(rcx, in_bytes(ResolvedFieldEntry::flags_offset())));\n@@ -3847,7 +3842,2 @@\n-          __ movl(rdx, Address(rcx, rbx, Address::times_ptr,\n-                             in_bytes(ConstantPoolCache::base_offset() +\n-                                      ConstantPoolCacheEntry::flags_offset())));\n-          __ andl(rdx, ConstantPoolCacheEntry::field_index_mask);\n-          __ movptr(rcx, Address(rcx, rbx, Address::times_ptr,\n-                                       in_bytes(ConstantPoolCache::base_offset() +\n-                                                ConstantPoolCacheEntry::f1_offset())));\n+          __ load_unsigned_short(rdx, Address(rcx, in_bytes(ResolvedFieldEntry::field_index_offset())));\n+          __ movptr(rcx, Address(rcx, ResolvedFieldEntry::field_holder_offset()));\n@@ -3862,7 +3852,2 @@\n-        __ movl(rdx, Address(rcx, rbx, Address::times_ptr,\n-                           in_bytes(ConstantPoolCache::base_offset() +\n-                                    ConstantPoolCacheEntry::flags_offset())));\n-        __ andl(rdx, ConstantPoolCacheEntry::field_index_mask);\n-        __ movptr(rcx, Address(rcx, rbx, Address::times_ptr,\n-                                     in_bytes(ConstantPoolCache::base_offset() +\n-                                              ConstantPoolCacheEntry::f1_offset())));\n+        __ load_unsigned_short(rdx, Address(rcx, in_bytes(ResolvedFieldEntry::field_index_offset())));\n+        __ movptr(rcx, Address(rcx, ResolvedFieldEntry::field_holder_offset()));\n@@ -3921,5 +3906,3 @@\n-  __ get_cache_and_index_at_bcp(rcx, rdx, 2);\n-  __ movptr(rbx,\n-            Address(rcx, rdx, Address::times_ptr,\n-                    in_bytes(ConstantPoolCache::base_offset() +\n-                             ConstantPoolCacheEntry::f2_offset())));\n+  __ load_field_entry(rcx, rdx, 2);\n+  __ load_sized_value(rbx, Address(rcx, in_bytes(ResolvedFieldEntry::field_offset_offset())), sizeof(int), true \/*is_signed*\/);\n+\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":179,"deletions":196,"binary":false,"changes":375,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                                        Register obj, Register off, Register flags, Register flags2);\n+                                        Register obj, Register off, Register tos_state, Register flags);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -608,1 +608,1 @@\n-  ConstantPoolCacheEntry* entry = cache->entry_at(index);\n+  ResolvedFieldEntry* entry = cache->resolved_field_entry_at(index);\n@@ -625,1 +625,1 @@\n-  switch (entry->flag_state()) {\n+  switch (entry->tos_state()) {\n@@ -637,1 +637,1 @@\n-  int offset = entry->f2_as_index();\n+  int offset = entry->field_offset();\n@@ -642,1 +642,1 @@\n-    switch (entry->flag_state()) {\n+    switch (entry->tos_state()) {\n@@ -656,1 +656,1 @@\n-    switch (entry->flag_state()) {\n+    switch (entry->tos_state()) {\n@@ -699,1 +699,1 @@\n-  ConstantPoolCacheEntry* entry = cache->entry_at(index);\n+  ResolvedFieldEntry* entry = cache->resolved_field_entry_at(index);\n@@ -710,1 +710,1 @@\n-  switch (entry->flag_state()) {\n+  switch (entry->tos_state()) {\n@@ -727,1 +727,1 @@\n-  int offset = entry->f2_as_index();\n+  int offset = entry->field_offset();\n@@ -729,1 +729,1 @@\n-    switch (entry->flag_state()) {\n+    switch (entry->tos_state()) {\n@@ -744,1 +744,1 @@\n-    switch (entry->flag_state()) {\n+    switch (entry->tos_state()) {\n","filename":"src\/hotspot\/cpu\/zero\/zeroInterpreter_zero.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  _initialized(false), _pagesizes(), _default_hugepage_size(SIZE_MAX) {}\n+  _initialized(false), _pagesizes(), _default_hugepage_size(SIZE_MAX), _inconsistent(false) {}\n@@ -144,0 +144,3 @@\n+  if (_inconsistent) {\n+    os->print_cr(\"  Support inconsistent. JVM will not use static hugepages.\");\n+  }\n@@ -150,3 +153,9 @@\n-    assert(_pagesizes.contains(_default_hugepage_size),\n-           \"Unexpected configuration: default pagesize (\" SIZE_FORMAT \") \"\n-           \"has no associated directory in \/sys\/kernel\/mm\/hugepages..\", _default_hugepage_size);\n+    \/\/ See https:\/\/www.kernel.org\/doc\/Documentation\/vm\/hugetlbpage.txt: \/proc\/meminfo should match\n+    \/\/ \/sys\/kernel\/mm\/hugepages\/hugepages-xxxx. However, we may run on a broken kernel (e.g. on WSL)\n+    \/\/ that only exposes \/proc\/meminfo but not \/sys\/kernel\/mm\/hugepages. In that case, we are not\n+    \/\/ sure about the state of hugepage support by the kernel, so we won't use static hugepages.\n+    if (!_pagesizes.contains(_default_hugepage_size)) {\n+      log_info(pagesize)(\"Unexpected configuration: default pagesize (\" SIZE_FORMAT \") \"\n+                         \"has no associated directory in \/sys\/kernel\/mm\/hugepages..\", _default_hugepage_size);\n+      _inconsistent = true;\n+    }\n","filename":"src\/hotspot\/os\/linux\/hugepages.cpp","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -55,0 +55,3 @@\n+  \/\/ If true, the kernel support for hugepages is inconsistent\n+  bool _inconsistent;\n+\n@@ -63,0 +66,2 @@\n+\n+  bool inconsistent() const { return _inconsistent; }\n@@ -101,1 +106,1 @@\n-  static bool supports_static_hugepages()       { return default_static_hugepage_size() > 0; }\n+  static bool supports_static_hugepages()       { return default_static_hugepage_size() > 0 && !_static_hugepage_support.inconsistent(); }\n","filename":"src\/hotspot\/os\/linux\/hugepages.hpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3566,21 +3566,0 @@\n-bool os::Linux::transparent_huge_pages_sanity_check(bool warn,\n-                                                    size_t page_size) {\n-  bool result = false;\n-  void *p = mmap(nullptr, page_size * 2, PROT_READ|PROT_WRITE,\n-                 MAP_ANONYMOUS|MAP_PRIVATE,\n-                 -1, 0);\n-  if (p != MAP_FAILED) {\n-    void *aligned_p = align_up(p, page_size);\n-\n-    result = madvise(aligned_p, page_size, MADV_HUGEPAGE) == 0;\n-\n-    munmap(p, page_size * 2);\n-  }\n-\n-  if (warn && !result) {\n-    warning(\"TransparentHugePages is not supported by the operating system.\");\n-  }\n-\n-  return result;\n-}\n-\n@@ -3718,7 +3697,3 @@\n-    bool warn_on_failure = !FLAG_IS_DEFAULT(UseTransparentHugePages);\n-    if (transparent_huge_pages_sanity_check(warn_on_failure, page_size)) {\n-      UseHugeTLBFS = false;\n-      UseSHM = false;\n-      return true;\n-    }\n-    UseTransparentHugePages = false;\n+    UseHugeTLBFS = false;\n+    UseSHM = false;\n+    return true;\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":3,"deletions":28,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n-  static bool transparent_huge_pages_sanity_check(bool warn, size_t pages_size);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"logging\/log.hpp\"\n@@ -45,0 +46,3 @@\n+        \/\/ Also log if native trim log is active\n+        log_info(trimnative)(\"Manual Trim: \" PROPERFMT \"->\" PROPERFMT \" (%c\" PROPERFMT \")\",\n+                             PROPERFMTARGS(sc.before), PROPERFMTARGS(sc.after), sign, PROPERFMTARGS(delta));\n","filename":"src\/hotspot\/os\/linux\/trimCHeapDCmd.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"compiler\/compilerDirectives.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_Compiler.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-#include \"compiler\/compilerDirectives.hpp\"\n+\n+class DirectiveSet;\n","filename":"src\/hotspot\/share\/c1\/c1_Compiler.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1014,2 +1014,2 @@\n-      int index = stream()->get_constant_pool_index();\n-      BasicType type = stream()->get_basic_type_for_constant_at(index);\n+      int cp_index = stream()->get_constant_pool_index();\n+      BasicType type = stream()->get_basic_type_for_constant_at(cp_index);\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1010,2 +1010,2 @@\n-  \/\/ generic\n-  HASHING4(LoadIndexed, delayed() == nullptr && !should_profile(), type()->tag(), array()->subst(), index()->subst(), vt())\n+  \/\/ generic;\n+  HASHING4(LoadIndexed, delayed() == nullptr && !should_profile(), elt_type(), array()->subst(), index()->subst(), vt())\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"cds\/dynamicArchive.hpp\"\n@@ -264,1 +265,2 @@\n-    sort_symbols_and_fix_hash();\n+    log_info(cds)(\"Sorting symbols ... \");\n+    _symbols->sort(compare_symbols_by_address);\n@@ -282,10 +284,0 @@\n-void ArchiveBuilder::sort_symbols_and_fix_hash() {\n-  log_info(cds)(\"Sorting symbols and fixing identity hash ... \");\n-  os::init_random(0x12345678);\n-  _symbols->sort(compare_symbols_by_address);\n-  for (int i = 0; i < _symbols->length(); i++) {\n-    assert(_symbols->at(i)->is_permanent(), \"archived symbols must be permanent\");\n-    _symbols->at(i)->update_identity_hash();\n-  }\n-}\n-\n@@ -523,4 +515,0 @@\n-    if (DynamicDumpSharedSpaces) {\n-      \/\/ Don't support archiving of array klasses for now (WHY???)\n-      return true;\n-    }\n@@ -528,1 +516,5 @@\n-    if (bottom->is_instance_klass()) {\n+    if (MetaspaceShared::is_shared_static(bottom)) {\n+      \/\/ The bottom class is in the static archive so it's clearly not excluded.\n+      assert(DynamicDumpSharedSpaces, \"sanity\");\n+      return false;\n+    } else if (bottom->is_instance_klass()) {\n@@ -648,0 +640,8 @@\n+\n+  \/\/ Update the hash of buffered sorted symbols for static dump so that the symbols have deterministic contents\n+  if (DumpSharedSpaces && (src_info->msotype() == MetaspaceObj::SymbolType)) {\n+    Symbol* buffered_symbol = (Symbol*)dest;\n+    assert(((Symbol*)src)->is_permanent(), \"archived symbols must be permanent\");\n+    buffered_symbol->update_identity_hash();\n+  }\n+\n@@ -795,0 +795,8 @@\n+\n+  DynamicArchive::make_array_klasses_shareable();\n+}\n+\n+void ArchiveBuilder::serialize_dynamic_archivable_items(SerializeClosure* soc) {\n+  SymbolTable::serialize_shared_table_header(soc, false);\n+  SystemDictionaryShared::serialize_dictionary_headers(soc, false);\n+  DynamicArchive::serialize_array_klasses(soc);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":24,"deletions":16,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -244,1 +244,0 @@\n-  void sort_symbols_and_fix_hash();\n@@ -344,0 +343,1 @@\n+  static void serialize_dynamic_archivable_items(SerializeClosure* soc);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,0 +91,1 @@\n+  void gather_array_klasses();\n@@ -121,0 +122,1 @@\n+    gather_array_klasses();\n@@ -142,0 +144,1 @@\n+      DynamicArchive::dump_array_klasses();\n@@ -145,2 +148,1 @@\n-      SymbolTable::serialize_shared_table_header(&wc, false);\n-      SystemDictionaryShared::serialize_dictionary_headers(&wc, false);\n+      ArchiveBuilder::serialize_dynamic_archivable_items(&wc);\n@@ -163,0 +165,1 @@\n+    DynamicArchive::post_dump();\n@@ -173,0 +176,24 @@\n+    iterate_primitive_array_klasses(it);\n+  }\n+\n+  void iterate_primitive_array_klasses(MetaspaceClosure* it) {\n+    for (int i = T_BOOLEAN; i <= T_LONG; i++) {\n+      assert(is_java_primitive((BasicType)i), \"sanity\");\n+      Klass* k = Universe::typeArrayKlassObj((BasicType)i);  \/\/ this give you \"[I\", etc\n+      assert(MetaspaceShared::is_shared_static((void*)k),\n+        \"one-dimensional primitive array should be in static archive\");\n+      ArrayKlass* ak = ArrayKlass::cast(k);\n+      while (ak != nullptr && ak->is_shared()) {\n+        Klass* next_k = ak->array_klass_or_null();\n+        if (next_k != nullptr) {\n+          ak = ArrayKlass::cast(next_k);\n+        } else {\n+          ak = nullptr;\n+        }\n+      }\n+      if (ak != nullptr) {\n+        assert(ak->dimension() > 1, \"sanity\");\n+        \/\/ this is the lowest dimension that's not in the static archive\n+        it->push(&ak);\n+      }\n+    }\n@@ -331,0 +358,20 @@\n+void DynamicArchiveBuilder::gather_array_klasses() {\n+  for (int i = 0; i < klasses()->length(); i++) {\n+    if (klasses()->at(i)->is_objArray_klass()) {\n+      ObjArrayKlass* oak = ObjArrayKlass::cast(klasses()->at(i));\n+      Klass* elem = oak->element_klass();\n+      if (MetaspaceShared::is_shared_static(elem)) {\n+        \/\/ Only capture the array klass whose element_klass is in the static archive.\n+        \/\/ During run time, setup (see DynamicArchive::setup_array_klasses()) is needed\n+        \/\/ so that the element_klass can find its array klasses from the dynamic archive.\n+        DynamicArchive::append_array_klass(oak);\n+      } else {\n+        \/\/ The element_klass and its array klasses are in the same archive.\n+        assert(!MetaspaceShared::is_shared_static(oak),\n+          \"we should not gather klasses that are already in the static archive\");\n+      }\n+    }\n+  }\n+  log_debug(cds)(\"Total array klasses gathered for dynamic archive: %d\", DynamicArchive::num_array_klasses());\n+}\n+\n@@ -352,0 +399,72 @@\n+\/\/ _array_klasses and _dynamic_archive_array_klasses only hold the array klasses\n+\/\/ which have element klass in the static archive.\n+GrowableArray<ObjArrayKlass*>* DynamicArchive::_array_klasses = nullptr;\n+Array<ObjArrayKlass*>* DynamicArchive::_dynamic_archive_array_klasses = nullptr;\n+\n+void DynamicArchive::append_array_klass(ObjArrayKlass* ak) {\n+  if (_array_klasses == nullptr) {\n+    _array_klasses = new (mtClassShared) GrowableArray<ObjArrayKlass*>(50, mtClassShared);\n+  }\n+  _array_klasses->append(ak);\n+}\n+\n+void DynamicArchive::dump_array_klasses() {\n+  assert(DynamicDumpSharedSpaces, \"DynamicDumpSharedSpaces only\");\n+  if (_array_klasses != nullptr) {\n+    ArchiveBuilder* builder = ArchiveBuilder::current();\n+    int num_array_klasses = _array_klasses->length();\n+    _dynamic_archive_array_klasses =\n+        ArchiveBuilder::new_ro_array<ObjArrayKlass*>(num_array_klasses);\n+    for (int i = 0; i < num_array_klasses; i++) {\n+      builder->write_pointer_in_buffer(_dynamic_archive_array_klasses->adr_at(i), _array_klasses->at(i));\n+    }\n+  }\n+}\n+\n+void DynamicArchive::setup_array_klasses() {\n+  if (_dynamic_archive_array_klasses != nullptr) {\n+    for (int i = 0; i < _dynamic_archive_array_klasses->length(); i++) {\n+      ObjArrayKlass* oak = _dynamic_archive_array_klasses->at(i);\n+      assert(!oak->is_typeArray_klass(), \"all type array classes must be in static archive\");\n+\n+      Klass* elm = oak->element_klass();\n+      assert(MetaspaceShared::is_shared_static((void*)elm), \"must be\");\n+\n+      if (elm->is_instance_klass()) {\n+        assert(InstanceKlass::cast(elm)->array_klasses() == nullptr, \"must be\");\n+        InstanceKlass::cast(elm)->set_array_klasses(oak);\n+      } else {\n+        assert(elm->is_array_klass(), \"sanity\");\n+        assert(ArrayKlass::cast(elm)->higher_dimension() == nullptr, \"must be\");\n+        ArrayKlass::cast(elm)->set_higher_dimension(oak);\n+      }\n+    }\n+    log_debug(cds)(\"Total array klasses read from dynamic archive: %d\", _dynamic_archive_array_klasses->length());\n+  }\n+}\n+\n+void DynamicArchive::serialize_array_klasses(SerializeClosure* soc) {\n+  soc->do_ptr(&_dynamic_archive_array_klasses);\n+}\n+\n+void DynamicArchive::make_array_klasses_shareable() {\n+  if (_array_klasses != nullptr) {\n+    int num_array_klasses = _array_klasses->length();\n+    for (int i = 0; i < num_array_klasses; i++) {\n+      ObjArrayKlass* k = ArchiveBuilder::current()->get_buffered_addr(_array_klasses->at(i));\n+      k->remove_unshareable_info();\n+    }\n+  }\n+}\n+\n+void DynamicArchive::post_dump() {\n+  if (_array_klasses != nullptr) {\n+    delete _array_klasses;\n+    _array_klasses = nullptr;\n+  }\n+}\n+\n+int DynamicArchive::num_array_klasses() {\n+  return _array_klasses != nullptr ? _array_klasses->length() : 0;\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":121,"deletions":2,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"oops\/array.hpp\"\n@@ -35,0 +36,1 @@\n+#include \"utilities\/growableArray.hpp\"\n@@ -61,0 +63,3 @@\n+private:\n+  static GrowableArray<ObjArrayKlass*>* _array_klasses;\n+  static Array<ObjArrayKlass*>* _dynamic_archive_array_klasses;\n@@ -67,0 +72,7 @@\n+  static void dump_array_klasses();\n+  static void setup_array_klasses();\n+  static void append_array_klass(ObjArrayKlass* oak);\n+  static void serialize_array_klasses(SerializeClosure* soc);\n+  static void make_array_klasses_shareable();\n+  static void post_dump();\n+  static int  num_array_klasses();\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -136,1 +136,4 @@\n-KlassToOopHandleTable* HeapShared::_scratch_java_mirror_table = nullptr;\n+MetaspaceObjToOopHandleTable* HeapShared::_scratch_java_mirror_table = nullptr;\n+MetaspaceObjToOopHandleTable* HeapShared::_scratch_references_table = nullptr;\n+ClassLoaderData* HeapShared::_saved_java_platform_loader_data = nullptr;\n+ClassLoaderData* HeapShared::_saved_java_system_loader_data = nullptr;\n@@ -301,1 +304,1 @@\n-      \/\/ class_data will be restored explicitly at run time.\n+      \/\/ class_data will be restored explicitly at run time and after dumptime\n@@ -305,0 +308,5 @@\n+      if (obj == SystemDictionary::java_platform_loader()) {\n+        _saved_java_platform_loader_data = java_lang_ClassLoader::loader_data_acquire(SystemDictionary::java_platform_loader());\n+      } else if (obj == SystemDictionary::java_system_loader()) {\n+        _saved_java_system_loader_data = java_lang_ClassLoader::loader_data_acquire(SystemDictionary::java_system_loader());\n+      }\n@@ -312,1 +320,7 @@\n-class KlassToOopHandleTable: public ResourceHashtable<Klass*, OopHandle,\n+void HeapShared::restore_loader_data() {\n+  log_info(cds)(\"Restoring java platform and system loaders\");\n+  java_lang_ClassLoader::release_set_loader_data(SystemDictionary::java_platform_loader(), _saved_java_platform_loader_data);\n+  java_lang_ClassLoader::release_set_loader_data(SystemDictionary::java_system_loader(), _saved_java_system_loader_data);\n+}\n+\n+class MetaspaceObjToOopHandleTable: public ResourceHashtable<MetaspaceObj*, OopHandle,\n@@ -317,1 +331,1 @@\n-  oop get_oop(Klass* k) {\n+  oop get_oop(MetaspaceObj* ptr) {\n@@ -319,1 +333,1 @@\n-    OopHandle* handle = get(k);\n+    OopHandle* handle = get(ptr);\n@@ -326,1 +340,1 @@\n-  void set_oop(Klass* k, oop o) {\n+  void set_oop(MetaspaceObj* ptr, oop o) {\n@@ -329,1 +343,1 @@\n-    bool is_new = put(k, handle);\n+    bool is_new = put(ptr, handle);\n@@ -332,1 +346,1 @@\n-  void remove_oop(Klass* k) {\n+  void remove_oop(MetaspaceObj* ptr) {\n@@ -334,1 +348,1 @@\n-    OopHandle* handle = get(k);\n+    OopHandle* handle = get(ptr);\n@@ -337,1 +351,1 @@\n-      remove(k);\n+      remove(ptr);\n@@ -342,0 +356,8 @@\n+void HeapShared::add_scratch_resolved_references(ConstantPool* src, objArrayOop dest) {\n+  _scratch_references_table->set_oop(src, dest);\n+}\n+\n+objArrayOop HeapShared::scratch_resolved_references(ConstantPool* src) {\n+  return (objArrayOop)_scratch_references_table->get_oop(src);\n+}\n+\n@@ -350,1 +372,2 @@\n-  _scratch_java_mirror_table = new (mtClass)KlassToOopHandleTable();\n+  _scratch_java_mirror_table = new (mtClass)MetaspaceObjToOopHandleTable();\n+  _scratch_references_table = new (mtClass)MetaspaceObjToOopHandleTable();\n@@ -369,0 +392,3 @@\n+  if (k->is_instance_klass()) {\n+    _scratch_references_table->remove(InstanceKlass::cast(k)->constants());\n+  }\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":37,"deletions":11,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-class KlassToOopHandleTable;\n+class MetaspaceObjToOopHandleTable;\n@@ -283,1 +283,5 @@\n-  static KlassToOopHandleTable* _scratch_java_mirror_table;\n+  static MetaspaceObjToOopHandleTable* _scratch_java_mirror_table;\n+  static MetaspaceObjToOopHandleTable* _scratch_references_table;\n+\n+  static ClassLoaderData* _saved_java_platform_loader_data;\n+  static ClassLoaderData* _saved_java_system_loader_data;\n@@ -397,0 +401,2 @@\n+  static objArrayOop scratch_resolved_references(ConstantPool* src);\n+  static void add_scratch_resolved_references(ConstantPool* src, objArrayOop dest) NOT_CDS_JAVA_HEAP_RETURN;\n@@ -398,0 +404,1 @@\n+  static void restore_loader_data() NOT_CDS_JAVA_HEAP_RETURN;\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"cds\/dynamicArchive.hpp\"\n@@ -92,1 +93,0 @@\n-bool MetaspaceShared::_has_error_classes;\n@@ -508,0 +508,3 @@\n+  \/\/ Initialize random for updating the hash of symbols\n+  os::init_random(0x12345678);\n+\n@@ -548,2 +551,0 @@\n-\n-  MetaspaceShared::exit_after_static_dump();\n@@ -666,4 +667,0 @@\n-  } else {\n-    \/\/ On success, the VM_PopulateDumpSharedSpace op should have\n-    \/\/ exited the VM.\n-    ShouldNotReachHere();\n@@ -671,0 +668,7 @@\n+\n+#if INCLUDE_CDS_JAVA_HEAP\n+  \/\/ Restore the java loaders that were cleared at dump time\n+  if (use_full_module_graph()) {\n+    HeapShared::restore_loader_data();\n+  }\n+#endif\n@@ -736,1 +740,0 @@\n-  _has_error_classes = false;\n@@ -799,1 +802,1 @@\n-  if (ik->is_loaded() && !ik->is_linked() && ik->can_be_verified_at_dumptime() &&\n+  if (!ik->is_shared() && ik->is_loaded() && !ik->is_linked() && ik->can_be_verified_at_dumptime() &&\n@@ -819,1 +822,0 @@\n-      _has_error_classes = true;\n@@ -878,0 +880,8 @@\n+bool MetaspaceShared::is_shared_static(void* p) {\n+  if (is_in_shared_metaspace(p) && !is_shared_dynamic(p)) {\n+    return true;\n+  } else {\n+    return false;\n+  }\n+}\n+\n@@ -901,8 +911,0 @@\n-\/\/ We have finished dumping the static archive. At this point, there may be pending VM\n-\/\/ operations. We have changed some global states (such as vmClasses::_klasses) that\n-\/\/ may cause these VM operations to fail. For safety, forget these operations and\n-\/\/ exit the VM directly.\n-void MetaspaceShared::exit_after_static_dump() {\n-  os::_exit(0);\n-}\n-\n@@ -1474,2 +1476,2 @@\n-    SymbolTable::serialize_shared_table_header(&rc, false);\n-    SystemDictionaryShared::serialize_dictionary_headers(&rc, false);\n+    ArchiveBuilder::serialize_dynamic_archivable_items(&rc);\n+    DynamicArchive::setup_array_klasses();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":22,"deletions":20,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-  static bool _has_error_classes;\n@@ -105,0 +104,1 @@\n+  static bool is_shared_static(void* p) NOT_CDS_RETURN_(false);\n@@ -108,1 +108,0 @@\n-  static void exit_after_static_dump();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,1 +281,1 @@\n-constantTag ciBytecodeStream::get_constant_pool_tag(int index) const {\n+constantTag ciBytecodeStream::get_constant_pool_tag(int cp_index) const {\n@@ -283,1 +283,1 @@\n-  return _method->get_Method()->constants()->constant_tag_at(index);\n+  return _method->get_Method()->constants()->constant_tag_at(cp_index);\n@@ -297,1 +297,1 @@\n-BasicType ciBytecodeStream::get_basic_type_for_constant_at(int index) const {\n+BasicType ciBytecodeStream::get_basic_type_for_constant_at(int cp_index) const {\n@@ -299,1 +299,1 @@\n-  return _method->get_Method()->constants()->basic_type_for_constant_at(index);\n+  return _method->get_Method()->constants()->basic_type_for_constant_at(cp_index);\n@@ -313,1 +313,1 @@\n-  return get_index_u2_cpcache();\n+  return get_index_u2();\n","filename":"src\/hotspot\/share\/ci\/ciStreams.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-  BasicType   get_basic_type_for_constant_at(int index) const;\n+  BasicType   get_basic_type_for_constant_at(int cp_index) const;\n","filename":"src\/hotspot\/share\/ci\/ciStreams.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -807,2 +807,2 @@\n-    int index = str->get_constant_pool_index();\n-    BasicType basic_type = str->get_basic_type_for_constant_at(index);\n+    int cp_index = str->get_constant_pool_index();\n+    BasicType basic_type = str->get_basic_type_for_constant_at(cp_index);\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -456,1 +456,1 @@\n-#ifdef COMPILER2\n+#if COMPILER2_OR_JVMCI\n@@ -476,1 +476,1 @@\n-#endif \/\/ COMPILER2\n+#endif \/\/ COMPILER2_OR_JVMCI\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,2 +56,2 @@\n-  int32_t _max_locals;\n-  int32_t _max_stack;\n+  u2 _max_locals;\n+  u2 _max_stack;\n@@ -103,2 +103,2 @@\n-                u2 locals_size,\n-                u2 stack_size,\n+                int32_t locals_size,\n+                int32_t stack_size,\n@@ -125,2 +125,2 @@\n-  inline void set_locals_size(u2 locals_size) { _locals_size = locals_size; }\n-  inline void set_stack_size(u2 stack_size)   { _stack_size = _stack_mark = stack_size; }\n+  inline void set_locals_size(int32_t locals_size) { _locals_size = locals_size; }\n+  inline void set_stack_size(int32_t stack_size)   { _stack_size = _stack_mark = stack_size; }\n@@ -135,2 +135,2 @@\n-  inline int32_t max_locals() const           { return _max_locals; }\n-  inline int32_t max_stack() const            { return _max_stack; }\n+  inline u2 max_locals() const                { return _max_locals; }\n+  inline u2 max_stack() const                 { return _max_stack; }\n","filename":"src\/hotspot\/share\/classfile\/stackMapFrame.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-      return (u1)(offset_delta - 1); }\n+      return checked_cast<u1>(offset_delta - 1); }\n@@ -304,1 +304,1 @@\n-    Bytes::put_Java_u2(offset_delta_addr(), offset_delta - 1);\n+    Bytes::put_Java_u2(offset_delta_addr(), checked_cast<u2>(offset_delta - 1));\n@@ -440,1 +440,1 @@\n-    Bytes::put_Java_u2(offset_delta_addr(), offset_delta - 1);\n+    Bytes::put_Java_u2(offset_delta_addr(), checked_cast<u2>(offset_delta - 1));\n@@ -481,1 +481,1 @@\n-    return 251 - chop;\n+    return checked_cast<u1>(251 - chop);\n@@ -510,1 +510,1 @@\n-    Bytes::put_Java_u2(offset_delta_addr(), offset_delta - 1);\n+    Bytes::put_Java_u2(offset_delta_addr(), checked_cast<u2>(offset_delta - 1));\n@@ -552,1 +552,1 @@\n-    return 251 + appends;\n+    return checked_cast<u1>(251 + appends);\n@@ -601,1 +601,1 @@\n-    Bytes::put_Java_u2(offset_delta_addr(), offset_delta - 1);\n+    Bytes::put_Java_u2(offset_delta_addr(), checked_cast<u2>(offset_delta - 1));\n@@ -751,1 +751,1 @@\n-    Bytes::put_Java_u2(offset_delta_addr(), offset_delta - 1);\n+    Bytes::put_Java_u2(offset_delta_addr(), checked_cast<u2>(offset_delta - 1));\n@@ -754,1 +754,1 @@\n-    Bytes::put_Java_u2(num_locals_addr(), num_locals);\n+    Bytes::put_Java_u2(num_locals_addr(), checked_cast<u2>(num_locals));\n@@ -757,1 +757,1 @@\n-    Bytes::put_Java_u2(stack_slots_addr(end_of_locals), stack_slots);\n+    Bytes::put_Java_u2(stack_slots_addr(end_of_locals), checked_cast<u2>(stack_slots));\n","filename":"src\/hotspot\/share\/classfile\/stackMapTableFormat.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -348,1 +348,1 @@\n-TypeOrigin TypeOrigin::local(u2 index, StackMapFrame* frame) {\n+TypeOrigin TypeOrigin::local(int index, StackMapFrame* frame) {\n@@ -353,1 +353,1 @@\n-TypeOrigin TypeOrigin::stack(u2 index, StackMapFrame* frame) {\n+TypeOrigin TypeOrigin::stack(int index, StackMapFrame* frame) {\n@@ -358,1 +358,1 @@\n-TypeOrigin TypeOrigin::sm_local(u2 index, StackMapFrame* frame) {\n+TypeOrigin TypeOrigin::sm_local(int index, StackMapFrame* frame) {\n@@ -363,1 +363,1 @@\n-TypeOrigin TypeOrigin::sm_stack(u2 index, StackMapFrame* frame) {\n+TypeOrigin TypeOrigin::sm_stack(int index, StackMapFrame* frame) {\n@@ -368,1 +368,1 @@\n-TypeOrigin TypeOrigin::bad_index(u2 index) {\n+TypeOrigin TypeOrigin::bad_index(int index) {\n@@ -371,1 +371,1 @@\n-TypeOrigin TypeOrigin::cp(u2 index, VerificationType vt) {\n+TypeOrigin TypeOrigin::cp(int index, VerificationType vt) {\n@@ -721,2 +721,2 @@\n-  int32_t max_stack = m->verifier_max_stack();\n-  int32_t max_locals = m->max_locals();\n+  u2 max_stack = m->verifier_max_stack();\n+  u2 max_locals = m->max_locals();\n@@ -734,1 +734,1 @@\n-  int32_t stackmap_index = 0; \/\/ index to the stackmap array\n+  u2 stackmap_index = 0; \/\/ index to the stackmap array\n@@ -781,1 +781,1 @@\n-    u2 bci = bcs.bci();\n+    int bci = bcs.bci();\n@@ -800,1 +800,0 @@\n-      u2 index;\n@@ -902,2 +901,2 @@\n-        case Bytecodes::_iload_3 :\n-          index = opcode - Bytecodes::_iload_0;\n+        case Bytecodes::_iload_3 : {\n+          int index = opcode - Bytecodes::_iload_0;\n@@ -906,0 +905,1 @@\n+          }\n@@ -912,2 +912,2 @@\n-        case Bytecodes::_lload_3 :\n-          index = opcode - Bytecodes::_lload_0;\n+        case Bytecodes::_lload_3 : {\n+          int index = opcode - Bytecodes::_lload_0;\n@@ -916,0 +916,1 @@\n+          }\n@@ -922,2 +923,2 @@\n-        case Bytecodes::_fload_3 :\n-          index = opcode - Bytecodes::_fload_0;\n+        case Bytecodes::_fload_3 : {\n+          int index = opcode - Bytecodes::_fload_0;\n@@ -926,0 +927,1 @@\n+          }\n@@ -932,2 +934,2 @@\n-        case Bytecodes::_dload_3 :\n-          index = opcode - Bytecodes::_dload_0;\n+        case Bytecodes::_dload_3 : {\n+          int index = opcode - Bytecodes::_dload_0;\n@@ -936,0 +938,1 @@\n+          }\n@@ -942,2 +945,2 @@\n-        case Bytecodes::_aload_3 :\n-          index = opcode - Bytecodes::_aload_0;\n+        case Bytecodes::_aload_3 : {\n+          int index = opcode - Bytecodes::_aload_0;\n@@ -946,0 +949,1 @@\n+          }\n@@ -1073,2 +1077,2 @@\n-        case Bytecodes::_istore_3 :\n-          index = opcode - Bytecodes::_istore_0;\n+        case Bytecodes::_istore_3 : {\n+          int index = opcode - Bytecodes::_istore_0;\n@@ -1077,0 +1081,1 @@\n+          }\n@@ -1083,2 +1088,2 @@\n-        case Bytecodes::_lstore_3 :\n-          index = opcode - Bytecodes::_lstore_0;\n+        case Bytecodes::_lstore_3 : {\n+          int index = opcode - Bytecodes::_lstore_0;\n@@ -1087,0 +1092,1 @@\n+          }\n@@ -1093,2 +1099,2 @@\n-        case Bytecodes::_fstore_3 :\n-          index = opcode - Bytecodes::_fstore_0;\n+        case Bytecodes::_fstore_3 : {\n+          int index = opcode - Bytecodes::_fstore_0;\n@@ -1097,0 +1103,1 @@\n+          }\n@@ -1103,2 +1110,2 @@\n-        case Bytecodes::_dstore_3 :\n-          index = opcode - Bytecodes::_dstore_0;\n+        case Bytecodes::_dstore_3 : {\n+          int index = opcode - Bytecodes::_dstore_0;\n@@ -1107,0 +1114,1 @@\n+          }\n@@ -1113,2 +1121,2 @@\n-        case Bytecodes::_astore_3 :\n-          index = opcode - Bytecodes::_astore_0;\n+        case Bytecodes::_astore_3 : {\n+          int index = opcode - Bytecodes::_astore_0;\n@@ -1117,0 +1125,1 @@\n+          }\n@@ -1734,1 +1743,1 @@\n-          index = bcs.get_index_u2();\n+          u2 index = bcs.get_index_u2();\n@@ -1744,1 +1753,1 @@\n-          type = VerificationType::uninitialized_type(bci);\n+          type = VerificationType::uninitialized_type(checked_cast<u2>(bci));\n@@ -1756,1 +1765,1 @@\n-          index = bcs.get_index_u2();\n+          u2 index = bcs.get_index_u2();\n@@ -1793,1 +1802,1 @@\n-          index = bcs.get_index_u2();\n+          u2 index = bcs.get_index_u2();\n@@ -1802,1 +1811,1 @@\n-          index = bcs.get_index_u2();\n+          u2 index = bcs.get_index_u2();\n@@ -1817,1 +1826,1 @@\n-          index = bcs.get_index_u2();\n+          u2 index = bcs.get_index_u2();\n@@ -1926,1 +1935,1 @@\n-    int catch_type_index = exhandlers.catch_type_index(i);\n+    u2 catch_type_index = exhandlers.catch_type_index(i);\n@@ -1979,1 +1988,1 @@\n-u2 ClassVerifier::verify_stackmap_table(u2 stackmap_index, u2 bci,\n+u2 ClassVerifier::verify_stackmap_table(u2 stackmap_index, int bci,\n@@ -1984,1 +1993,1 @@\n-    u2 this_offset = stackmap_table->get_offset(stackmap_index);\n+    int this_offset = stackmap_table->get_offset(stackmap_index);\n@@ -2019,1 +2028,1 @@\n-void ClassVerifier::verify_exception_handler_targets(u2 bci, bool this_uninit,\n+void ClassVerifier::verify_exception_handler_targets(int bci, bool this_uninit,\n@@ -2058,1 +2067,1 @@\n-    u2 bci, const constantPoolHandle& cp, int index, TRAPS) {\n+    int bci, const constantPoolHandle& cp, u2 index, TRAPS) {\n@@ -2069,1 +2078,1 @@\n-    u2 bci, int index, const constantPoolHandle& cp, unsigned int types, TRAPS) {\n+    int bci, u2 index, const constantPoolHandle& cp, unsigned int types, TRAPS) {\n@@ -2089,1 +2098,1 @@\n-    u2 bci, int index, const constantPoolHandle& cp, TRAPS) {\n+    int bci, u2 index, const constantPoolHandle& cp, TRAPS) {\n@@ -2187,1 +2196,1 @@\n-    const constantPoolHandle& cp, u2 bci, TRAPS) {\n+    const constantPoolHandle& cp, int bci, TRAPS) {\n@@ -2391,1 +2400,1 @@\n-  u2 bci = bcs->bci();\n+  int bci = bcs->bci();\n@@ -2521,1 +2530,1 @@\n-  u4 code_length = method()->code_size();\n+  int code_length = method()->code_size();\n@@ -2523,1 +2532,1 @@\n-  u4 target;\n+\n@@ -2540,1 +2549,1 @@\n-      if ((bci_stack->is_empty()) || ((u4)bcs.end_bci() == code_length))\n+      if ((bci_stack->is_empty()) || (bcs.end_bci() == code_length))\n@@ -2546,1 +2555,1 @@\n-    u4 bci = bcs.bci();\n+    int bci = bcs.bci();\n@@ -2568,2 +2577,2 @@\n-      case Bytecodes::_ifnonnull:\n-        target = bcs.dest();\n+      case Bytecodes::_ifnonnull: {\n+        int target = bcs.dest();\n@@ -2599,0 +2608,1 @@\n+        }\n@@ -2601,2 +2611,2 @@\n-      case Bytecodes::_goto_w:\n-        target = (opcode == Bytecodes::_goto ? bcs.dest() : bcs.dest_w());\n+      case Bytecodes::_goto_w: {\n+        int target = (opcode == Bytecodes::_goto ? bcs.dest() : bcs.dest_w());\n@@ -2623,0 +2633,1 @@\n+        }\n@@ -2637,1 +2648,1 @@\n-          u4 default_offset = Bytes::get_Java_u4(aligned_bcp) + bci;\n+          int default_offset = Bytes::get_Java_u4(aligned_bcp) + bci;\n@@ -2659,1 +2670,1 @@\n-            u4 target = bci + (jint)Bytes::get_Java_u4(aligned_bcp+(3+i*delta)*jintSize);\n+            int target = bci + (jint)Bytes::get_Java_u4(aligned_bcp+(3+i*delta)*jintSize);\n@@ -2702,1 +2713,1 @@\n-  u2 bci = bcs->bci();\n+  int bci = bcs->bci();\n@@ -2907,1 +2918,1 @@\n-  u2 bci = bcs->bci();\n+  int bci = bcs->bci();\n@@ -3059,1 +3070,1 @@\n-    u2 index, u2 bci, TRAPS) {\n+    u2 index, int bci, TRAPS) {\n@@ -3074,1 +3085,1 @@\n-    u2 bci, u2 index, const constantPoolHandle& cp,\n+    int bci, u2 index, const constantPoolHandle& cp,\n@@ -3115,1 +3126,1 @@\n-void ClassVerifier::verify_iload(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_iload(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3122,1 +3133,1 @@\n-void ClassVerifier::verify_lload(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_lload(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3131,1 +3142,1 @@\n-void ClassVerifier::verify_fload(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_fload(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3138,1 +3149,1 @@\n-void ClassVerifier::verify_dload(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_dload(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3147,1 +3158,1 @@\n-void ClassVerifier::verify_aload(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_aload(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3153,1 +3164,1 @@\n-void ClassVerifier::verify_istore(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_istore(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3160,1 +3171,1 @@\n-void ClassVerifier::verify_lstore(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_lstore(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3169,1 +3180,1 @@\n-void ClassVerifier::verify_fstore(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_fstore(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3175,1 +3186,1 @@\n-void ClassVerifier::verify_dstore(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_dstore(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3184,1 +3195,1 @@\n-void ClassVerifier::verify_astore(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_astore(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3190,1 +3201,1 @@\n-void ClassVerifier::verify_iinc(u2 index, StackMapFrame* current_frame, TRAPS) {\n+void ClassVerifier::verify_iinc(int index, StackMapFrame* current_frame, TRAPS) {\n@@ -3197,1 +3208,1 @@\n-    VerificationType return_type, VerificationType type, u2 bci,\n+    VerificationType return_type, VerificationType type, int bci,\n","filename":"src\/hotspot\/share\/classfile\/verifier.cpp","additions":83,"deletions":72,"binary":false,"changes":155,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-  u2 _index;              \/\/ local, stack, or constant pool index\n+  int _index;              \/\/ local, stack, or constant pool index\n@@ -115,1 +115,1 @@\n-      Origin origin, u2 index, StackMapFrame* frame, VerificationType type)\n+      Origin origin, int index, StackMapFrame* frame, VerificationType type)\n@@ -122,5 +122,5 @@\n-  static TypeOrigin local(u2 index, StackMapFrame* frame);\n-  static TypeOrigin stack(u2 index, StackMapFrame* frame);\n-  static TypeOrigin sm_local(u2 index, StackMapFrame* frame);\n-  static TypeOrigin sm_stack(u2 index, StackMapFrame* frame);\n-  static TypeOrigin cp(u2 index, VerificationType vt);\n+  static TypeOrigin local(int index, StackMapFrame* frame);\n+  static TypeOrigin stack(int index, StackMapFrame* frame);\n+  static TypeOrigin sm_local(int index, StackMapFrame* frame);\n+  static TypeOrigin sm_stack(int index, StackMapFrame* frame);\n+  static TypeOrigin cp(int index, VerificationType vt);\n@@ -128,1 +128,1 @@\n-  static TypeOrigin bad_index(u2 index);\n+  static TypeOrigin bad_index(int index);\n@@ -137,1 +137,1 @@\n-  u2 index() const { return _index; }\n+  int index() const { return _index; }\n@@ -178,1 +178,1 @@\n-  static ErrorContext bad_code(u2 bci) {\n+  static ErrorContext bad_code(int bci) {\n@@ -181,1 +181,1 @@\n-  static ErrorContext bad_type(u2 bci, TypeOrigin type) {\n+  static ErrorContext bad_type(int bci, TypeOrigin type) {\n@@ -184,1 +184,1 @@\n-  static ErrorContext bad_type(u2 bci, TypeOrigin type, TypeOrigin exp) {\n+  static ErrorContext bad_type(int bci, TypeOrigin type, TypeOrigin exp) {\n@@ -187,1 +187,1 @@\n-  static ErrorContext bad_flags(u2 bci, StackMapFrame* frame) {\n+  static ErrorContext bad_flags(int bci, StackMapFrame* frame) {\n@@ -190,1 +190,1 @@\n-  static ErrorContext bad_flags(u2 bci, StackMapFrame* cur, StackMapFrame* sm) {\n+  static ErrorContext bad_flags(int bci, StackMapFrame* cur, StackMapFrame* sm) {\n@@ -194,1 +194,1 @@\n-  static ErrorContext bad_cp_index(u2 bci, u2 index) {\n+  static ErrorContext bad_cp_index(int bci, int index) {\n@@ -197,1 +197,1 @@\n-  static ErrorContext bad_local_index(u2 bci, u2 index) {\n+  static ErrorContext bad_local_index(int bci, int index) {\n@@ -201,1 +201,1 @@\n-      u2 bci, StackMapFrame* frame0, StackMapFrame* frame1) {\n+      int bci, StackMapFrame* frame0, StackMapFrame* frame1) {\n@@ -206,1 +206,1 @@\n-      u2 bci, StackMapFrame* frame0, StackMapFrame* frame1) {\n+      int bci, StackMapFrame* frame0, StackMapFrame* frame1) {\n@@ -210,1 +210,1 @@\n-  static ErrorContext stack_overflow(u2 bci, StackMapFrame* frame) {\n+  static ErrorContext stack_overflow(int bci, StackMapFrame* frame) {\n@@ -213,1 +213,1 @@\n-  static ErrorContext stack_underflow(u2 bci, StackMapFrame* frame) {\n+  static ErrorContext stack_underflow(int bci, StackMapFrame* frame) {\n@@ -216,1 +216,1 @@\n-  static ErrorContext missing_stackmap(u2 bci) {\n+  static ErrorContext missing_stackmap(int bci) {\n@@ -222,1 +222,1 @@\n-  static ErrorContext bad_inline_type(u2 bci, TypeOrigin type, TypeOrigin exp) {\n+  static ErrorContext bad_inline_type(int bci, TypeOrigin type, TypeOrigin exp) {\n@@ -311,2 +311,2 @@\n-  void verify_cp_index(u2 bci, const constantPoolHandle& cp, int index, TRAPS);\n-  void verify_cp_type(u2 bci, int index, const constantPoolHandle& cp,\n+  void verify_cp_index(int bci, const constantPoolHandle& cp, u2 index, TRAPS);\n+  void verify_cp_type(int bci, u2 index, const constantPoolHandle& cp,\n@@ -314,1 +314,1 @@\n-  void verify_cp_class_type(u2 bci, int index, const constantPoolHandle& cp, TRAPS);\n+  void verify_cp_class_type(int bci, u2 index, const constantPoolHandle& cp, TRAPS);\n@@ -317,1 +317,1 @@\n-    u2 stackmap_index, u2 bci, StackMapFrame* current_frame,\n+    u2 stackmap_index, int bci, StackMapFrame* current_frame,\n@@ -321,1 +321,1 @@\n-    u2 bci, bool this_uninit, StackMapFrame* current_frame,\n+    int bci, bool this_uninit, StackMapFrame* current_frame,\n@@ -326,1 +326,1 @@\n-    const constantPoolHandle& cp, u2 bci, TRAPS);\n+    const constantPoolHandle& cp, int bci, TRAPS);\n@@ -358,2 +358,2 @@\n-  VerificationType get_newarray_type(u2 index, u2 bci, TRAPS);\n-  void verify_anewarray(u2 bci, u2 index, const constantPoolHandle& cp,\n+  VerificationType get_newarray_type(u2 index, int bci, TRAPS);\n+  void verify_anewarray(int bci, u2 index, const constantPoolHandle& cp,\n@@ -362,1 +362,1 @@\n-      VerificationType return_type, VerificationType type, u2 offset,\n+      VerificationType return_type, VerificationType type, int bci,\n@@ -365,11 +365,11 @@\n-  void verify_iload (u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_lload (u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_fload (u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_dload (u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_aload (u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_istore(u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_lstore(u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_fstore(u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_dstore(u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_astore(u2 index, StackMapFrame* current_frame, TRAPS);\n-  void verify_iinc  (u2 index, StackMapFrame* current_frame, TRAPS);\n+  void verify_iload (int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_lload (int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_fload (int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_dload (int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_aload (int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_istore(int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_lstore(int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_fstore(int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_dstore(int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_astore(int index, StackMapFrame* current_frame, TRAPS);\n+  void verify_iinc  (int index, StackMapFrame* current_frame, TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/verifier.hpp","additions":42,"deletions":42,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"utilities\/tribool.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-#include \"utilities\/tribool.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -313,0 +313,11 @@\n+  const size_t ps = page_size(false, 8);\n+  \/\/ Print warning if using large pages but not able to use the size given\n+  if (UseLargePages) {\n+    const size_t lg_ps = page_size(false, 1);\n+    if (ps < lg_ps) {\n+      log_warning(codecache)(\"Code cache size too small for \" PROPERFMT \" pages. \"\n+                             \"Reverting to smaller page size (\" PROPERFMT \").\",\n+                             PROPERFMTARGS(lg_ps), PROPERFMTARGS(ps));\n+    }\n+  }\n+\n@@ -315,1 +326,1 @@\n-  const size_t alignment = MAX2(page_size(false, 8), os::vm_allocation_granularity());\n+  const size_t alignment = MAX2(ps, os::vm_allocation_granularity());\n@@ -327,1 +338,1 @@\n-  ReservedCodeSpace rs = reserve_heap_memory(cache_size);\n+  ReservedCodeSpace rs = reserve_heap_memory(cache_size, ps);\n@@ -357,1 +368,1 @@\n-ReservedCodeSpace CodeCache::reserve_heap_memory(size_t size) {\n+ReservedCodeSpace CodeCache::reserve_heap_memory(size_t size, size_t rs_ps) {\n@@ -359,1 +370,0 @@\n-  const size_t rs_ps = page_size();\n@@ -1197,1 +1207,1 @@\n-    ReservedCodeSpace rs = reserve_heap_memory(ReservedCodeCacheSize);\n+    ReservedCodeSpace rs = reserve_heap_memory(ReservedCodeCacheSize, page_size(false, 8));\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-  static ReservedCodeSpace reserve_heap_memory(size_t size);  \/\/ Reserves one continuous chunk of memory for the CodeHeaps\n+  static ReservedCodeSpace reserve_heap_memory(size_t size, size_t rs_ps); \/\/ Reserves one continuous chunk of memory for the CodeHeaps\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-  jint selector = sv_selector->get_int();\n+  jint selector = sv_selector->get_jint();\n","filename":"src\/hotspot\/share\/code\/debugInfo.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,14 +31,0 @@\n-JVMFlag::Error ParallelGCThreadsConstraintFuncParallel(uint value, bool verbose) {\n-  \/\/ Parallel GC passes ParallelGCThreads when creating GrowableArray as 'int' type parameter.\n-  \/\/ So can't exceed with \"max_jint\"\n-\n-  if (UseParallelGC && (value > (uint)max_jint)) {\n-    JVMFlag::printError(verbose,\n-                        \"ParallelGCThreads (\" UINT32_FORMAT \") must be \"\n-                        \"less than or equal to \" UINT32_FORMAT \" for Parallel GC\\n\",\n-                        value, max_jint);\n-    return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-  return JVMFlag::SUCCESS;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/jvmFlagConstraintsParallel.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-  f(uint, ParallelGCThreadsConstraintFuncParallel)          \\\n","filename":"src\/hotspot\/share\/gc\/parallel\/jvmFlagConstraintsParallel.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -984,3 +984,2 @@\n-void DefNewGeneration::contribute_scratch(ScratchBlock*& list, Generation* requestor,\n-                                         size_t max_alloc_words) {\n-  if (requestor == this || _promotion_failed) {\n+void DefNewGeneration::contribute_scratch(void*& scratch, size_t& num_words) {\n+  if (_promotion_failed) {\n@@ -989,1 +988,0 @@\n-  assert(GenCollectedHeap::heap()->is_old_gen(requestor), \"We should not call our own generation\");\n@@ -991,5 +989,1 @@\n-  \/* $$$ Assert this?  \"trace\" is a \"MarkSweep\" function so that's not appropriate.\n-  if (to_space->top() > to_space->bottom()) {\n-    trace(\"to_space not empty when contribute_scratch called\");\n-  }\n-  *\/\n+  const size_t MinFreeScratchWords = 100;\n@@ -998,2 +992,1 @@\n-  assert(to_space->end() >= to_space->top(), \"pointers out of order\");\n-  size_t free_words = pointer_delta(to_space->end(), to_space->top());\n+  const size_t free_words = pointer_delta(to_space->end(), to_space->top());\n@@ -1001,4 +994,2 @@\n-    ScratchBlock* sb = (ScratchBlock*)to_space->top();\n-    sb->num_words = free_words;\n-    sb->next = list;\n-    list = sb;\n+    scratch = to_space->top();\n+    num_words = free_words;\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":6,"deletions":15,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -146,6 +146,0 @@\n-  enum SomeProtectedConstants {\n-    \/\/ Generations are GenGrain-aligned and have size that are multiples of\n-    \/\/ GenGrain.\n-    MinFreeScratchWords = 100\n-  };\n-\n@@ -251,4 +245,3 @@\n-  \/\/ For non-youngest collection, the DefNewGeneration can contribute\n-  \/\/ \"to-space\".\n-  virtual void contribute_scratch(ScratchBlock*& list, Generation* requestor,\n-                          size_t max_alloc_words);\n+  \/\/ For Old collection (part of running Full GC), the DefNewGeneration can\n+  \/\/ contribute the free part of \"to-space\" as the scratch space.\n+  void contribute_scratch(void*& scratch, size_t& num_words);\n@@ -257,1 +250,1 @@\n-  virtual void reset_scratch();\n+  void reset_scratch();\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"gc\/serial\/defNewGeneration.hpp\"\n@@ -129,3 +130,4 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n-  \/\/ Scratch request on behalf of old generation; will do no allocation.\n-  ScratchBlock* scratch = gch->gather_scratch(gch->old_gen(), 0);\n+  void* scratch = nullptr;\n+  size_t num_words;\n+  DefNewGeneration* young_gen = (DefNewGeneration*)GenCollectedHeap::heap()->young_gen();\n+  young_gen->contribute_scratch(scratch, num_words);\n@@ -133,2 +135,0 @@\n-  \/\/ $$$ To cut a corner, we'll only use the first scratch block, and then\n-  \/\/ revert to malloc.\n@@ -136,2 +136,1 @@\n-    _preserved_count_max =\n-      scratch->num_words * HeapWordSize \/ sizeof(PreservedMark);\n+    _preserved_count_max = num_words * HeapWordSize \/ sizeof(PreservedMark);\n@@ -150,2 +149,4 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n-  gch->release_scratch();\n+  if (_preserved_count_max != 0) {\n+    DefNewGeneration* young_gen = (DefNewGeneration*)GenCollectedHeap::heap()->young_gen();\n+    young_gen->reset_scratch();\n+  }\n","filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -134,0 +134,2 @@\n+  \/* notice: the max range value here is INT_MAX not UINT_MAX  *\/           \\\n+  \/* to protect from overflows                                 *\/           \\\n@@ -136,1 +138,1 @@\n-          constraint(ParallelGCThreadsConstraintFunc,AfterErgo)             \\\n+          range(0, INT_MAX)                                                 \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -908,50 +908,0 @@\n-\/\/ Requires \"*prev_ptr\" to be non-null.  Deletes and a block of minimal size\n-\/\/ from the list headed by \"*prev_ptr\".\n-static ScratchBlock *removeSmallestScratch(ScratchBlock **prev_ptr) {\n-  bool first = true;\n-  size_t min_size = 0;   \/\/ \"first\" makes this conceptually infinite.\n-  ScratchBlock **smallest_ptr, *smallest;\n-  ScratchBlock  *cur = *prev_ptr;\n-  while (cur) {\n-    assert(*prev_ptr == cur, \"just checking\");\n-    if (first || cur->num_words < min_size) {\n-      smallest_ptr = prev_ptr;\n-      smallest     = cur;\n-      min_size     = smallest->num_words;\n-      first        = false;\n-    }\n-    prev_ptr = &cur->next;\n-    cur     =  cur->next;\n-  }\n-  smallest      = *smallest_ptr;\n-  *smallest_ptr = smallest->next;\n-  return smallest;\n-}\n-\n-\/\/ Sort the scratch block list headed by res into decreasing size order,\n-\/\/ and set \"res\" to the result.\n-static void sort_scratch_list(ScratchBlock*& list) {\n-  ScratchBlock* sorted = nullptr;\n-  ScratchBlock* unsorted = list;\n-  while (unsorted) {\n-    ScratchBlock *smallest = removeSmallestScratch(&unsorted);\n-    smallest->next  = sorted;\n-    sorted          = smallest;\n-  }\n-  list = sorted;\n-}\n-\n-ScratchBlock* GenCollectedHeap::gather_scratch(Generation* requestor,\n-                                               size_t max_alloc_words) {\n-  ScratchBlock* res = nullptr;\n-  _young_gen->contribute_scratch(res, requestor, max_alloc_words);\n-  _old_gen->contribute_scratch(res, requestor, max_alloc_words);\n-  sort_scratch_list(res);\n-  return res;\n-}\n-\n-void GenCollectedHeap::release_scratch() {\n-  _young_gen->reset_scratch();\n-  _old_gen->reset_scratch();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":0,"deletions":50,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -231,11 +231,0 @@\n-  \/\/ The \"requestor\" generation is performing some garbage collection\n-  \/\/ action for which it would be useful to have scratch space.  The\n-  \/\/ requestor promises to allocate no more than \"max_alloc_words\" in any\n-  \/\/ older generation (via promotion say.)   Any blocks of space that can\n-  \/\/ be provided are returned as a list of ScratchBlocks, sorted by\n-  \/\/ decreasing size.\n-  ScratchBlock* gather_scratch(Generation* requestor, size_t max_alloc_words);\n-  \/\/ Allow each generation to reset any scratch space that it has\n-  \/\/ contributed as it needs.\n-  void release_scratch();\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.hpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -329,16 +329,0 @@\n-  \/\/ The \"requestor\" generation is performing some garbage collection\n-  \/\/ action for which it would be useful to have scratch space.  If\n-  \/\/ the target is not the requestor, no gc actions will be required\n-  \/\/ of the target.  The requestor promises to allocate no more than\n-  \/\/ \"max_alloc_words\" in the target generation (via promotion say,\n-  \/\/ if the requestor is a young generation and the target is older).\n-  \/\/ If the target generation can provide any scratch space, it adds\n-  \/\/ it to \"list\", leaving \"list\" pointing to the head of the\n-  \/\/ augmented list.  The default is to offer no space.\n-  virtual void contribute_scratch(ScratchBlock*& list, Generation* requestor,\n-                                  size_t max_alloc_words) {}\n-\n-  \/\/ Give each generation an opportunity to do clean up for any\n-  \/\/ contributed scratch.\n-  virtual void reset_scratch() {}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/generation.hpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -56,14 +56,0 @@\n-\/\/ As ParallelGCThreads differs among GC modes, we need constraint function.\n-JVMFlag::Error ParallelGCThreadsConstraintFunc(uint value, bool verbose) {\n-  JVMFlag::Error status = JVMFlag::SUCCESS;\n-\n-#if INCLUDE_PARALLELGC\n-  status = ParallelGCThreadsConstraintFuncParallel(value, verbose);\n-  if (status != JVMFlag::SUCCESS) {\n-    return status;\n-  }\n-#endif\n-\n-  return status;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n- f(uint,   ParallelGCThreadsConstraintFunc)                    \\\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -313,1 +313,3 @@\n-    ZNMT::commit(segment.start(), committed);\n+    if (committed > 0) {\n+      ZNMT::commit(segment.start(), committed);\n+    }\n@@ -339,1 +341,3 @@\n-    ZNMT::uncommit(segment.start(), uncommitted);\n+    if (uncommitted > 0) {\n+      ZNMT::uncommit(segment.start(), uncommitted);\n+    }\n","filename":"src\/hotspot\/share\/gc\/z\/zPhysicalMemory.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-  return constants()->name_ref_at(index(), _code);\n+  return constants()->name_ref_at(index(), Bytecodes::java_code(_code));\n@@ -167,0 +167,2 @@\n+  else if (Bytecodes::is_field_code(rawc))\n+    return get_index_u2(rawc);\n@@ -218,2 +220,2 @@\n-  int index = pool_index();\n-  return _method->constants()->basic_type_for_constant_at(index);\n+  int cp_index = pool_index();\n+  return _method->constants()->basic_type_for_constant_at(cp_index);\n","filename":"src\/hotspot\/share\/interpreter\/bytecode.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-  int get_index_u1(Bytecodes::Code bc) const {\n+  u1 get_index_u1(Bytecodes::Code bc) const {\n@@ -76,1 +76,1 @@\n-    return *(jubyte*)addr_at(1);\n+    return *(u1*)addr_at(1);\n@@ -78,1 +78,1 @@\n-  int get_index_u2(Bytecodes::Code bc, bool is_wide = false) const {\n+  u2 get_index_u2(Bytecodes::Code bc, bool is_wide = false) const {\n@@ -89,1 +89,1 @@\n-    return *(jubyte*)addr_at(1) + ConstantPool::CPCACHE_INDEX_TAG;\n+    return *(u1*)addr_at(1) + ConstantPool::CPCACHE_INDEX_TAG;\n","filename":"src\/hotspot\/share\/interpreter\/bytecode.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-  int             get_index_u1() const           { assert_raw_index_size(1); return *(jubyte*)(bcp()+1); }\n+  u1              get_index_u1() const           { assert_raw_index_size(1); return *(jubyte*)(bcp()+1); }\n@@ -152,1 +152,1 @@\n-  int             get_index() const          { return (is_wide()) ? get_index_u2_raw(bcp() + 2) : get_index_u1(); }\n+  u2              get_index() const          { return (is_wide()) ? get_index_u2_raw(bcp() + 2) : get_index_u1(); }\n@@ -154,1 +154,1 @@\n-  int             get_index_u2() const       { assert(!is_wide(), \"\"); return get_index_u2_raw(bcp() + 1);  }\n+  u2              get_index_u2() const       { assert(!is_wide(), \"\"); return get_index_u2_raw(bcp() + 1);  }\n@@ -157,1 +157,1 @@\n-  int get_index_u2_raw(address p) const {\n+  u2  get_index_u2_raw(address p) const {\n@@ -221,1 +221,1 @@\n-  int             get_index() const              { return is_wide() ? bytecode().get_index_u2(raw_code(), true) : get_index_u1(); }\n+  u2              get_index() const              { return is_wide() ? bytecode().get_index_u2(raw_code(), true) : get_index_u1(); }\n@@ -223,1 +223,1 @@\n-  int             get_index_u2() const           { assert_raw_stream(false);\n+  u2              get_index_u2() const           { assert_raw_stream(false);\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeStream.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -505,2 +506,2 @@\n-          int cpcache_index = get_native_index_u2();\n-          cp_index = cpcache()->entry_at(cpcache_index)->constant_pool_index();\n+          int field_index = get_native_index_u2();\n+          cp_index = cpcache()->resolved_field_entry_at(field_index)->constant_pool_index();\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeTracer.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -971,1 +971,1 @@\n-      int cp_index = Bytes::get_native_u2(code_base + pos) DEBUG_ONLY(+ ConstantPool::CPCACHE_INDEX_TAG);\n+      int cp_index = Bytes::get_native_u2(code_base + pos);\n@@ -986,1 +986,1 @@\n-      int cp_index = Bytes::get_native_u2(code_base + pos) DEBUG_ONLY(+ ConstantPool::CPCACHE_INDEX_TAG);\n+      int cp_index = Bytes::get_native_u2(code_base + pos);\n@@ -1138,1 +1138,1 @@\n-        int cp_index = Bytes::get_native_u2(code_base + pos) DEBUG_ONLY(+ ConstantPool::CPCACHE_INDEX_TAG);\n+        int cp_index = Bytes::get_native_u2(code_base + pos);\n@@ -1338,1 +1338,1 @@\n-      int cp_index = Bytes::get_native_u2(code_base + pos) + ConstantPool::CPCACHE_INDEX_TAG;\n+      int cp_index = Bytes::get_native_u2(code_base + pos);\n@@ -1349,1 +1349,1 @@\n-      int cp_index = Bytes::get_native_u2(code_base + pos) + ConstantPool::CPCACHE_INDEX_TAG;\n+      int cp_index = Bytes::get_native_u2(code_base + pos);\n@@ -1426,1 +1426,1 @@\n-        int cp_index = Bytes::get_native_u2(code_base + pos) DEBUG_ONLY(+ ConstantPool::CPCACHE_INDEX_TAG);\n+        int cp_index = Bytes::get_native_u2(code_base + pos);\n@@ -1435,1 +1435,1 @@\n-        int cp_index = Bytes::get_native_u2(code_base + pos) DEBUG_ONLY(+ ConstantPool::CPCACHE_INDEX_TAG);\n+        int cp_index = Bytes::get_native_u2(code_base + pos);\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeUtils.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -428,0 +429,3 @@\n+  static bool        is_field_code  (Code code)    {\n+    return (_getstatic <= java_code(code) && java_code(code) <= _putfield) || (EnableValhalla && java_code(code) == _withfield);\n+  }\n","filename":"src\/hotspot\/share\/interpreter\/bytecodes.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-#include \"oops\/constantPool.hpp\"\n+#include \"oops\/constantPool.inline.hpp\"\n@@ -159,2 +159,2 @@\n-  int index = wide ? last_frame.get_index_u2(Bytecodes::_ldc_w) : last_frame.get_index_u1(Bytecodes::_ldc);\n-  constantTag tag = pool->tag_at(index);\n+  int cp_index = wide ? last_frame.get_index_u2(Bytecodes::_ldc_w) : last_frame.get_index_u1(Bytecodes::_ldc);\n+  constantTag tag = pool->tag_at(cp_index);\n@@ -163,1 +163,1 @@\n-  Klass* klass = pool->klass_at(index, CHECK);\n+  Klass* klass = pool->klass_at(cp_index, CHECK);\n@@ -274,1 +274,1 @@\n-JRT_ENTRY(int, InterpreterRuntime::withfield(JavaThread* current, ConstantPoolCacheEntry* cpe, uintptr_t ptr))\n+JRT_ENTRY(int, InterpreterRuntime::withfield(JavaThread* current, ResolvedFieldEntry* entry, uintptr_t ptr))\n@@ -276,1 +276,1 @@\n-  int recv_offset = type2size[as_BasicType(cpe->flag_state())];\n+  int recv_offset = type2size[as_BasicType((TosState)entry->tos_state())];\n@@ -279,1 +279,1 @@\n-  int offset = cpe->f2_as_offset();\n+  int offset = entry->field_offset();\n@@ -288,1 +288,1 @@\n-  if (cpe->flag_state() == atos) {\n+  if (entry->tos_state() == atos) {\n@@ -298,1 +298,1 @@\n-  switch(cpe->flag_state()) {\n+  switch(entry->tos_state()) {\n@@ -324,1 +324,1 @@\n-      if (!cpe->is_flat() && old_value_h()->obj_field(offset) == ref_h()) can_skip = true;\n+      if (!entry->is_flat() && old_value_h()->obj_field(offset) == ref_h()) can_skip = true;\n@@ -337,1 +337,1 @@\n-  switch(cpe->flag_state()) {\n+  switch(entry->tos_state()) {\n@@ -364,2 +364,2 @@\n-        if (cpe->is_null_free_inline_type())  {\n-          if (!cpe->is_flat()) {\n+        if (entry->is_null_free_inline_type())  {\n+          if (!entry->is_flat()) {\n@@ -371,1 +371,1 @@\n-            int field_index = cpe->field_index();\n+            int field_index = entry->field_index();\n@@ -387,1 +387,1 @@\n-JRT_ENTRY(void, InterpreterRuntime::uninitialized_static_inline_type_field(JavaThread* current, oopDesc* mirror, int index))\n+JRT_ENTRY(void, InterpreterRuntime::uninitialized_static_inline_type_field(JavaThread* current, oopDesc* mirror, ResolvedFieldEntry* entry))\n@@ -400,1 +400,3 @@\n-  InstanceKlass* klass = InstanceKlass::cast(java_lang_Class::as_Klass(mirror));\n+  InstanceKlass* klass = entry->field_holder();\n+  u2 index = entry->field_index();\n+  assert(klass == java_lang_Class::as_Klass(mirror), \"Not the field holder klass\");\n@@ -922,0 +924,1 @@\n+  int field_index = last_frame.get_index_u2(bytecode);\n@@ -925,1 +928,1 @@\n-    LinkResolver::resolve_field_access(info, pool, last_frame.get_index_u2_cpcache(bytecode),\n+    LinkResolver::resolve_field_access(info, pool, field_index,\n@@ -930,2 +933,2 @@\n-  ConstantPoolCacheEntry* cp_cache_entry = last_frame.cache_entry();\n-  if (cp_cache_entry->is_resolved(bytecode)) return;\n+  if (pool->resolved_field_entry_at(field_index)->is_resolved(bytecode)) return;\n+\n@@ -977,12 +980,4 @@\n-  cp_cache_entry->set_field(\n-    get_code,\n-    put_code,\n-    info.field_holder(),\n-    info.index(),\n-    info.offset(),\n-    state,\n-    info.access_flags().is_final(),\n-    info.access_flags().is_volatile(),\n-    info.is_flat(),\n-    info.is_null_free_inline_type()\n-  );\n+  ResolvedFieldEntry* entry = pool->resolved_field_entry_at(field_index);\n+  entry->set_flags(info.access_flags().is_final(), info.access_flags().is_volatile(),\n+                   info.is_flat(), info.is_null_free_inline_type());\n+  entry->fill_in(info.field_holder(), info.offset(), (u2)info.index(), (u1)state, (u1)get_code, (u1)put_code);\n@@ -1432,1 +1427,1 @@\n-                                                      ConstantPoolCacheEntry *cp_entry))\n+                                                      ResolvedFieldEntry *entry))\n@@ -1436,2 +1431,2 @@\n-  InstanceKlass* ik = InstanceKlass::cast(cp_entry->f1_as_klass());\n-  int index = cp_entry->field_index();\n+  InstanceKlass* ik = entry->field_holder();\n+  int index = entry->field_index();\n@@ -1441,1 +1436,1 @@\n-  bool is_flat = cp_entry->is_flat();\n+  bool is_flat = entry->is_flat();\n@@ -1449,2 +1444,2 @@\n-  InstanceKlass* cp_entry_f1 = InstanceKlass::cast(cp_entry->f1_as_klass());\n-  jfieldID fid = jfieldIDWorkaround::to_jfieldID(cp_entry_f1, cp_entry->f2_as_index(), is_static, is_flat);\n+  InstanceKlass* field_holder = entry->field_holder(); \/\/ HERE\n+  jfieldID fid = jfieldIDWorkaround::to_jfieldID(field_holder, entry->field_offset(), is_static, is_flat);\n@@ -1452,1 +1447,1 @@\n-  JvmtiExport::post_field_access(current, last_frame.method(), last_frame.bcp(), cp_entry_f1, h_obj, fid);\n+  JvmtiExport::post_field_access(current, last_frame.method(), last_frame.bcp(), field_holder, h_obj, fid);\n@@ -1456,1 +1451,1 @@\n-                                                            ConstantPoolCacheEntry *cp_entry, jvalue *value))\n+                                                            ResolvedFieldEntry *entry, jvalue *value))\n@@ -1458,1 +1453,1 @@\n-  Klass* k = cp_entry->f1_as_klass();\n+  InstanceKlass* ik = entry->field_holder();\n@@ -1461,2 +1456,1 @@\n-  InstanceKlass* ik = InstanceKlass::cast(k);\n-  int index = cp_entry->field_index();\n+  int index = entry->field_index();\n@@ -1468,1 +1462,1 @@\n-  switch(cp_entry->flag_state()) {\n+  switch((TosState)entry->tos_state()) {\n@@ -1483,1 +1477,1 @@\n-  if (cp_entry->flag_state() == atos && ik->field_is_null_free_inline_type(index)) {\n+  if (entry->tos_state() == atos && ik->field_is_null_free_inline_type(index)) {\n@@ -1488,1 +1482,1 @@\n-  bool is_flat = cp_entry->is_flat();\n+  bool is_flat = entry->is_flat();\n@@ -1491,1 +1485,1 @@\n-  jfieldID fid = jfieldIDWorkaround::to_jfieldID(ik, cp_entry->f2_as_index(), is_static, is_flat);\n+  jfieldID fid = jfieldIDWorkaround::to_jfieldID(ik, entry->field_offset(), is_static, is_flat);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":40,"deletions":46,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,2 +65,2 @@\n-  static int     withfield     (JavaThread* current, ConstantPoolCacheEntry* cpe, uintptr_t ptr);\n-  static void    uninitialized_static_inline_type_field(JavaThread* current, oopDesc* mirror, int offset);\n+  static int     withfield     (JavaThread* current, ResolvedFieldEntry* entry, uintptr_t ptr);\n+  static void    uninitialized_static_inline_type_field(JavaThread* current, oopDesc* mirror, ResolvedFieldEntry* entry);\n@@ -134,1 +134,1 @@\n-    ConstantPoolCacheEntry *cp_entry);\n+    ResolvedFieldEntry* entry);\n@@ -136,1 +136,1 @@\n-    ConstantPoolCacheEntry *cp_entry, jvalue *value);\n+    ResolvedFieldEntry* entry, jvalue *value);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -52,3 +53,7 @@\n-      case JVM_CONSTANT_InterfaceMethodref:\n-      case JVM_CONSTANT_Fieldref          : \/\/ fall through\n-      case JVM_CONSTANT_Methodref         : \/\/ fall through\n+      case JVM_CONSTANT_Fieldref          :\n+        _cp_map.at_put(i, _field_entry_index);\n+        _field_entry_index++;\n+        _initialized_field_entries.push(ResolvedFieldEntry((u2)i));\n+        break;\n+      case JVM_CONSTANT_InterfaceMethodref: \/\/ fall through\n+      case JVM_CONSTANT_Methodref         :\n@@ -103,1 +108,1 @@\n-                                  _invokedynamic_references_map, _initialized_indy_entries, CHECK);\n+                                  _invokedynamic_references_map, _initialized_indy_entries, _initialized_field_entries, CHECK);\n@@ -178,0 +183,13 @@\n+void Rewriter::rewrite_field_reference(address bcp, int offset, bool reverse) {\n+  address p = bcp + offset;\n+  if (!reverse) {\n+    int cp_index = Bytes::get_Java_u2(p);\n+    int field_entry_index = _cp_map.at(cp_index);\n+    Bytes::put_native_u2(p, field_entry_index);\n+  } else {\n+    int field_entry_index = Bytes::get_native_u2(p);\n+    int pool_index = _initialized_field_entries.at(field_entry_index).constant_pool_index();\n+    Bytes::put_Java_u2(p, pool_index);\n+  }\n+}\n+\n@@ -448,1 +466,3 @@\n-      case Bytecodes::_withfield     : \/\/ fall through but may require more checks for correctness\n+      case Bytecodes::_withfield      : \/\/ fall through but may require more checks for correctness\n+        rewrite_field_reference(bcp, prefix_length+1, reverse);\n+        break;\n@@ -564,1 +584,2 @@\n-    _invokedynamic_index(0)\n+    _invokedynamic_index(0),\n+    _field_entry_index(0)\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.cpp","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -50,0 +51,1 @@\n+  int                 _field_entry_index;\n@@ -54,0 +56,1 @@\n+  GrowableArray<ResolvedFieldEntry> _initialized_field_entries;\n@@ -166,0 +169,1 @@\n+  void rewrite_field_reference(address bcp, int offset, bool reverse);\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -269,0 +269,3 @@\n+  static void resolve_cache_and_index_for_field(int byte_no,\n+                                                Register cache,\n+                                                Register index);\n@@ -270,0 +273,6 @@\n+  static void load_resolved_field_entry(Register obj,\n+                                        Register cache,\n+                                        Register tos_state,\n+                                        Register off,\n+                                        Register flags,\n+                                        bool is_static);\n","filename":"src\/hotspot\/share\/interpreter\/templateTable.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -409,1 +410,1 @@\n-                                  target, cache),                   \\\n+                                  target, entry),                   \\\n@@ -429,1 +430,1 @@\n-                                  target, cache,                    \\\n+                                  target, entry,                    \\\n@@ -1725,1 +1726,0 @@\n-          ConstantPoolCacheEntry* cache;\n@@ -1727,0 +1727,1 @@\n+          ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -1739,2 +1740,1 @@\n-          cache = cp->entry_at(index);\n-          if (!cache->is_resolved(code)) {\n+          if (!entry->is_resolved(code)) {\n@@ -1743,1 +1743,1 @@\n-            cache = cp->entry_at(index);\n+            entry = cp->resolved_field_entry_at(index);\n@@ -1748,1 +1748,1 @@\n-            Klass* k = cache->f1_as_klass();\n+            Klass* k = entry->field_holder();\n@@ -1755,1 +1755,1 @@\n-            if (REWRITE_BYTECODES && !cache->is_volatile() &&\n+            if (REWRITE_BYTECODES && !entry->is_volatile() &&\n@@ -1758,1 +1758,1 @@\n-              REWRITE_AT_PC(fast_get_type(cache->flag_state()));\n+              REWRITE_AT_PC(fast_get_type((TosState)(entry->tos_state())));\n@@ -1767,3 +1767,3 @@\n-          TosState tos_type = cache->flag_state();\n-          int field_offset = cache->f2_as_index();\n-          if (cache->is_volatile()) {\n+          TosState tos_type = (TosState)(entry->tos_state());\n+          int field_offset = entry->field_offset();\n+          if (entry->is_volatile()) {\n@@ -1845,1 +1845,1 @@\n-         }\n+        }\n@@ -1852,1 +1852,1 @@\n-          ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+          ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -1861,1 +1861,1 @@\n-          if (!cache->is_resolved(code)) {\n+          if (!entry->is_resolved(code)) {\n@@ -1864,1 +1864,1 @@\n-            cache = cp->entry_at(index);\n+            entry = cp->resolved_field_entry_at(index);\n@@ -1872,1 +1872,1 @@\n-          TosState tos_type = cache->flag_state();\n+          TosState tos_type = (TosState)(entry->tos_state());\n@@ -1879,1 +1879,1 @@\n-            Klass* k = cache->f1_as_klass();\n+            Klass* k = entry->field_holder();\n@@ -1887,1 +1887,1 @@\n-            if (REWRITE_BYTECODES && !cache->is_volatile() &&\n+            if (REWRITE_BYTECODES && !entry->is_volatile() &&\n@@ -1890,1 +1890,1 @@\n-              REWRITE_AT_PC(fast_put_type(cache->flag_state()));\n+              REWRITE_AT_PC(fast_put_type((TosState)(entry->tos_state())));\n@@ -1899,2 +1899,2 @@\n-          int field_offset = cache->f2_as_index();\n-          if (cache->is_volatile()) {\n+          int field_offset = entry->field_offset();\n+          if (entry->is_volatile()) {\n@@ -2588,2 +2588,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2603,2 +2603,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2617,2 +2617,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2631,2 +2631,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2646,2 +2646,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2660,2 +2660,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2674,2 +2674,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2689,2 +2689,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2703,1 +2703,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2710,1 +2710,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2718,1 +2718,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2725,1 +2725,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2733,1 +2733,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2740,1 +2740,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2748,1 +2748,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2755,1 +2755,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2763,1 +2763,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2770,1 +2770,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2778,1 +2778,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2785,1 +2785,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2793,1 +2793,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2800,1 +2800,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2808,1 +2808,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2815,1 +2815,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2823,1 +2823,1 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n@@ -2830,1 +2830,1 @@\n-        int field_offset = cache->f2_as_index();\n+        int field_offset = entry->field_offset();\n@@ -2845,2 +2845,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2861,2 +2861,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n@@ -2876,2 +2876,2 @@\n-        ConstantPoolCacheEntry* cache = cp->entry_at(index);\n-        int field_offset = cache->f2_as_index();\n+        ResolvedFieldEntry* entry = cp->resolved_field_entry_at(index);\n+        int field_offset = entry->field_offset();\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":62,"deletions":62,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -399,1 +399,2 @@\n-    case REGISTER_OOP: {\n+    case REGISTER_OOP:\n+    case REGISTER_VECTOR: {\n@@ -425,0 +426,2 @@\n+        } else if (type == T_OBJECT && tag == REGISTER_VECTOR) {\n+          locationType = Location::vector;\n@@ -437,1 +440,2 @@\n-    case STACK_SLOT_OOP: {\n+    case STACK_SLOT_OOP:\n+    case STACK_SLOT_VECTOR: {\n@@ -444,1 +448,1 @@\n-        locationType = tag == STACK_SLOT_NARROW_OOP ? Location::narrowoop : Location::oop;\n+        locationType = tag == STACK_SLOT_VECTOR ? Location::vector : tag == STACK_SLOT_NARROW_OOP ? Location::narrowoop : Location::oop;\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -188,0 +188,1 @@\n+    REGISTER_VECTOR,\n@@ -191,0 +192,1 @@\n+    STACK_SLOT_VECTOR,\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -700,1 +700,1 @@\n-C2V_VMENTRY_NULL(jobject, resolvePossiblyCachedConstantInPool, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint index))\n+C2V_VMENTRY_NULL(jobject, lookupConstantInPool, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint cp_index, bool resolve))\n@@ -702,2 +702,11 @@\n-  oop obj = cp->resolve_possibly_cached_constant_at(index, CHECK_NULL);\n-  constantTag tag = cp->tag_at(index);\n+  oop obj;\n+  if (!resolve) {\n+    bool found_it;\n+    obj = cp->find_cached_constant_at(cp_index, found_it, CHECK_NULL);\n+    if (!found_it) {\n+      return nullptr;\n+    }\n+  } else {\n+    obj = cp->resolve_possibly_cached_constant_at(cp_index, CHECK_NULL);\n+  }\n+  constantTag tag = cp->tag_at(cp_index);\n@@ -708,1 +717,1 @@\n-    BasicType bt = Signature::basic_type(cp->uncached_signature_ref_at(index));\n+    BasicType bt = Signature::basic_type(cp->uncached_signature_ref_at(cp_index));\n@@ -1581,3 +1590,3 @@\n-C2V_VMENTRY_0(int, resolveInvokeDynamicInPool, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint index))\n-  if (!ConstantPool::is_invokedynamic_index(index)) {\n-    JVMCI_THROW_MSG_0(IllegalStateException, err_msg(\"not an invokedynamic index %d\", index));\n+C2V_VMENTRY_0(int, decodeIndyIndexToCPIndex, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint encoded_indy_index, jboolean resolve))\n+  if (!ConstantPool::is_invokedynamic_index(encoded_indy_index)) {\n+    JVMCI_THROW_MSG_0(IllegalStateException, err_msg(\"not an encoded indy index %d\", encoded_indy_index));\n@@ -1588,3 +1597,5 @@\n-  LinkResolver::resolve_invoke(callInfo, Handle(), cp, index, Bytecodes::_invokedynamic, CHECK_0);\n-  int indy_index = cp->decode_invokedynamic_index(index);\n-  cp->cache()->set_dynamic_call(callInfo, indy_index);\n+  int indy_index = cp->decode_invokedynamic_index(encoded_indy_index);\n+  if (resolve) {\n+    LinkResolver::resolve_invoke(callInfo, Handle(), cp, encoded_indy_index, Bytecodes::_invokedynamic, CHECK_0);\n+    cp->cache()->set_dynamic_call(callInfo, indy_index);\n+  }\n@@ -3111,0 +3122,1 @@\n+  {CC \"lookupConstantInPool\",                         CC \"(\" HS_CONSTANT_POOL2 \"IZ)\" JAVACONSTANT,                                          FN_PTR(lookupConstantInPool)},\n@@ -3114,1 +3126,0 @@\n-  {CC \"resolvePossiblyCachedConstantInPool\",          CC \"(\" HS_CONSTANT_POOL2 \"I)\" JAVACONSTANT,                                           FN_PTR(resolvePossiblyCachedConstantInPool)},\n@@ -3117,1 +3128,1 @@\n-  {CC \"resolveInvokeDynamicInPool\",                   CC \"(\" HS_CONSTANT_POOL2 \"I)I\",                                                       FN_PTR(resolveInvokeDynamicInPool)},\n+  {CC \"decodeIndyIndexToCPIndex\",                     CC \"(\" HS_CONSTANT_POOL2 \"IZ)I\",                                                      FN_PTR(decodeIndyIndexToCPIndex)},\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":23,"deletions":12,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -533,0 +533,1 @@\n+  declare_constant(CodeInstaller::REGISTER_VECTOR)                        \\\n@@ -536,0 +537,1 @@\n+  declare_constant(CodeInstaller::STACK_SLOT_VECTOR)                      \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+  LOG_TAG(array) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/metaspaceShared.hpp\"\n@@ -101,0 +102,1 @@\n+  log_array_class_load(this);\n@@ -155,2 +157,1 @@\n-  Klass* k = array_klass(n+dimension(), CHECK_NULL);\n-  ArrayKlass* ak = ArrayKlass::cast(k);\n+  ArrayKlass* ak = array_klass(n + dimension(), CHECK_NULL);\n@@ -192,1 +193,1 @@\n-    ArrayKlass *ak = ArrayKlass::cast(higher_dimension());\n+    ArrayKlass *ak = higher_dimension();\n@@ -200,1 +201,1 @@\n-    ArrayKlass *ak = ArrayKlass::cast(higher_dimension());\n+    ArrayKlass *ak = higher_dimension();\n@@ -211,1 +212,2 @@\n-    ArrayKlass *ak = ArrayKlass::cast(higher_dimension());\n+    ArrayKlass *ak = higher_dimension();\n+    log_array_class_load(ak);\n@@ -220,1 +222,1 @@\n-    ArrayKlass* ak = ArrayKlass::cast(higher_dimension());\n+    ArrayKlass* ak = higher_dimension();\n@@ -227,0 +229,15 @@\n+void ArrayKlass::log_array_class_load(Klass* k) {\n+  LogTarget(Debug, class, load, array) lt;\n+  if (lt.is_enabled()) {\n+    LogStream ls(lt);\n+    ResourceMark rm;\n+    ls.print(\"%s\", k->name()->as_klass_external_name());\n+    if (MetaspaceShared::is_shared_dynamic((void*)k)) {\n+      ls.print(\" source: shared objects file (top)\");\n+    } else if (MetaspaceShared::is_shared_static((void*)k)) {\n+      ls.print(\" source: shared objects file\");\n+    }\n+    ls.cr();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":23,"deletions":6,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+class ObjArrayKlass;\n@@ -41,2 +42,2 @@\n-  Klass* volatile _higher_dimension;  \/\/ Refers the (n+1)'th-dimensional array (if present).\n-  Klass* volatile _lower_dimension;   \/\/ Refers the (n-1)'th-dimensional array (if present).\n+  ObjArrayKlass* volatile _higher_dimension;  \/\/ Refers the (n+1)'th-dimensional array (if present).\n+  ArrayKlass* volatile    _lower_dimension;   \/\/ Refers the (n-1)'th-dimensional array (if present).\n@@ -80,4 +81,4 @@\n-  Klass* higher_dimension() const     { return _higher_dimension; }\n-  inline Klass* higher_dimension_acquire() const; \/\/ load with acquire semantics\n-  void set_higher_dimension(Klass* k) { _higher_dimension = k; }\n-  inline void release_set_higher_dimension(Klass* k); \/\/ store with release semantics\n+  ObjArrayKlass* higher_dimension() const     { return _higher_dimension; }\n+  inline ObjArrayKlass* higher_dimension_acquire() const; \/\/ load with acquire semantics\n+  void set_higher_dimension(ObjArrayKlass* k) { _higher_dimension = k; }\n+  inline void release_set_higher_dimension(ObjArrayKlass* k); \/\/ store with release semantics\n@@ -85,2 +86,2 @@\n-  Klass* lower_dimension() const      { return _lower_dimension; }\n-  void set_lower_dimension(Klass* k)  { _lower_dimension = k; }\n+  ArrayKlass* lower_dimension() const      { return _lower_dimension; }\n+  void set_lower_dimension(ArrayKlass* k)  { _lower_dimension = k; }\n@@ -148,0 +149,1 @@\n+  void log_array_class_load(Klass* k);\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.hpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-inline Klass* ArrayKlass::higher_dimension_acquire() const {\n+inline ObjArrayKlass* ArrayKlass::higher_dimension_acquire() const {\n@@ -36,1 +36,1 @@\n-inline void ArrayKlass::release_set_higher_dimension(Klass* k) {\n+inline void ArrayKlass::release_set_higher_dimension(ObjArrayKlass* k) {\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -220,0 +220,6 @@\n+\n+    \/\/ Create a \"scratch\" copy of the resolved references array to archive\n+    if (DumpSharedSpaces) {\n+      objArrayOop scratch_references = oopFactory::new_objArray(vmClasses::Object_klass(), map_length, CHECK);\n+      HeapShared::add_scratch_resolved_references(this, scratch_references);\n+    }\n@@ -291,0 +297,2 @@\n+    ConstantPool* orig_pool = ArchiveBuilder::current()->get_source_addr(this);\n+    objArrayOop scratch_rr = HeapShared::scratch_resolved_references(orig_pool);\n@@ -296,1 +304,1 @@\n-      rr->obj_at_put(i, nullptr);\n+      scratch_rr->obj_at_put(i, nullptr);\n@@ -302,1 +310,1 @@\n-            rr->obj_at_put(i, obj);\n+            scratch_rr->obj_at_put(i, obj);\n@@ -307,0 +315,1 @@\n+    return scratch_rr;\n@@ -387,2 +396,2 @@\n-  for (int index = 1; index < length(); index++) { \/\/ Index 0 is unused\n-    switch (tag_at(index).value()) {\n+  for (int cp_index = 1; cp_index < length(); cp_index++) { \/\/ cp_index 0 is unused\n+    switch (tag_at(cp_index).value()) {\n@@ -391,2 +400,2 @@\n-        jbyte qdesc_bit = tag_at(index).is_Qdescriptor_klass() ? (jbyte) JVM_CONSTANT_QDescBit : 0;\n-        tag_at_put(index, JVM_CONSTANT_UnresolvedClass | qdesc_bit);\n+        jbyte qdesc_bit = tag_at(cp_index).is_Qdescriptor_klass() ? (jbyte) JVM_CONSTANT_QDescBit : 0;\n+        tag_at_put(cp_index, JVM_CONSTANT_UnresolvedClass | qdesc_bit);\n@@ -396,1 +405,1 @@\n-      tag_at_put(index, JVM_CONSTANT_MethodHandle);\n+      tag_at_put(cp_index, JVM_CONSTANT_MethodHandle);\n@@ -399,1 +408,1 @@\n-      tag_at_put(index, JVM_CONSTANT_MethodType);\n+      tag_at_put(cp_index, JVM_CONSTANT_MethodType);\n@@ -402,1 +411,1 @@\n-      tag_at_put(index, JVM_CONSTANT_Dynamic);\n+      tag_at_put(cp_index, JVM_CONSTANT_Dynamic);\n@@ -405,1 +414,1 @@\n-      archived = maybe_archive_resolved_klass_at(index);\n+      archived = maybe_archive_resolved_klass_at(cp_index);\n@@ -462,1 +471,1 @@\n-void ConstantPool::string_at_put(int which, int obj_index, oop str) {\n+void ConstantPool::string_at_put(int obj_index, oop str) {\n@@ -502,1 +511,1 @@\n-Klass* ConstantPool::klass_at_impl(const constantPoolHandle& this_cp, int which,\n+Klass* ConstantPool::klass_at_impl(const constantPoolHandle& this_cp, int cp_index,\n@@ -509,1 +518,1 @@\n-  CPKlassSlot kslot = this_cp->klass_slot_at(which);\n+  CPKlassSlot kslot = this_cp->klass_slot_at(cp_index);\n@@ -516,1 +525,1 @@\n-  if (this_cp->tag_at(which).is_klass()) {\n+  if (this_cp->tag_at(cp_index).is_klass()) {\n@@ -524,1 +533,1 @@\n-  if (this_cp->tag_at(which).is_unresolved_klass_in_error()) {\n+  if (this_cp->tag_at(cp_index).is_unresolved_klass_in_error()) {\n@@ -533,1 +542,1 @@\n-    throw_resolution_error(this_cp, which, CHECK_NULL);\n+    throw_resolution_error(this_cp, cp_index, CHECK_NULL);\n@@ -585,1 +594,1 @@\n-    if (this_cp->tag_at(which).is_Qdescriptor_klass()) {\n+    if (this_cp->tag_at(cp_index).is_Qdescriptor_klass()) {\n@@ -588,1 +597,1 @@\n-    save_and_throw_exception(this_cp, which, constantTag(tag), CHECK_NULL);\n+    save_and_throw_exception(this_cp, cp_index, constantTag(tag), CHECK_NULL);\n@@ -608,1 +617,1 @@\n-  if (this_cp->tag_at(which).is_Qdescriptor_klass()) {\n+  if (this_cp->tag_at(cp_index).is_Qdescriptor_klass()) {\n@@ -613,1 +622,1 @@\n-  jbyte old_tag = Atomic::cmpxchg((jbyte*)this_cp->tag_addr_at(which),\n+  jbyte old_tag = Atomic::cmpxchg((jbyte*)this_cp->tag_addr_at(cp_index),\n@@ -621,1 +630,1 @@\n-    throw_resolution_error(this_cp, which, CHECK_NULL);\n+    throw_resolution_error(this_cp, cp_index, CHECK_NULL);\n@@ -732,2 +741,2 @@\n-      \/\/ TODO: handle resolved field entries with new structure\n-      \/\/ i = ....\n+    case Bytecodes::_withfield:\n+      return resolved_field_entry_at(index)->constant_pool_index();\n@@ -784,1 +793,0 @@\n-\n@@ -803,2 +811,2 @@\n-u2 ConstantPool::name_ref_index_at(int which_nt) {\n-  jint ref_index = name_and_type_at(which_nt);\n+u2 ConstantPool::name_ref_index_at(int cp_index) {\n+  jint ref_index = name_and_type_at(cp_index);\n@@ -809,2 +817,2 @@\n-u2 ConstantPool::signature_ref_index_at(int which_nt) {\n-  jint ref_index = name_and_type_at(which_nt);\n+u2 ConstantPool::signature_ref_index_at(int cp_index) {\n+  jint ref_index = name_and_type_at(cp_index);\n@@ -819,2 +827,2 @@\n-Symbol* ConstantPool::klass_name_at(int which) const {\n-  return symbol_at(klass_slot_at(which).name_index());\n+Symbol* ConstantPool::klass_name_at(int cp_index) const {\n+  return symbol_at(klass_slot_at(cp_index).name_index());\n@@ -828,2 +836,2 @@\n-Symbol* ConstantPool::uncached_klass_ref_at_noresolve(int which) {\n-  jint ref_index = uncached_klass_ref_index_at(which);\n+Symbol* ConstantPool::uncached_klass_ref_at_noresolve(int cp_index) {\n+  jint ref_index = uncached_klass_ref_index_at(cp_index);\n@@ -833,2 +841,2 @@\n-char* ConstantPool::string_at_noresolve(int which) {\n-  return unresolved_string_at(which)->as_C_string();\n+char* ConstantPool::string_at_noresolve(int cp_index) {\n+  return unresolved_string_at(cp_index)->as_C_string();\n@@ -837,2 +845,2 @@\n-BasicType ConstantPool::basic_type_for_signature_at(int which) const {\n-  return Signature::basic_type(symbol_at(which));\n+BasicType ConstantPool::basic_type_for_signature_at(int cp_index) const {\n+  return Signature::basic_type(symbol_at(cp_index));\n@@ -931,1 +939,1 @@\n-void ConstantPool::save_and_throw_exception(const constantPoolHandle& this_cp, int which,\n+void ConstantPool::save_and_throw_exception(const constantPoolHandle& this_cp, int cp_index,\n@@ -942,2 +950,2 @@\n-  } else if (this_cp->tag_at(which).value() != error_tag) {\n-    add_resolution_error(this_cp, which, tag, PENDING_EXCEPTION);\n+  } else if (this_cp->tag_at(cp_index).value() != error_tag) {\n+    add_resolution_error(this_cp, cp_index, tag, PENDING_EXCEPTION);\n@@ -950,1 +958,1 @@\n-    jbyte old_tag = Atomic::cmpxchg((jbyte*)this_cp->tag_addr_at(which),\n+    jbyte old_tag = Atomic::cmpxchg((jbyte*)this_cp->tag_addr_at(cp_index),\n@@ -955,1 +963,1 @@\n-      assert(this_cp->tag_at(which).is_klass(), \"Wrong tag value\");\n+      assert(this_cp->tag_at(cp_index).is_klass(), \"Wrong tag value\");\n@@ -961,1 +969,1 @@\n-    throw_resolution_error(this_cp, which, CHECK);\n+    throw_resolution_error(this_cp, cp_index, CHECK);\n@@ -965,2 +973,2 @@\n-constantTag ConstantPool::constant_tag_at(int which) {\n-  constantTag tag = tag_at(which);\n+constantTag ConstantPool::constant_tag_at(int cp_index) {\n+  constantTag tag = tag_at(cp_index);\n@@ -968,1 +976,1 @@\n-    BasicType bt = basic_type_for_constant_at(which);\n+    BasicType bt = basic_type_for_constant_at(cp_index);\n@@ -974,2 +982,2 @@\n-BasicType ConstantPool::basic_type_for_constant_at(int which) {\n-  constantTag tag = tag_at(which);\n+BasicType ConstantPool::basic_type_for_constant_at(int cp_index) {\n+  constantTag tag = tag_at(cp_index);\n@@ -979,1 +987,1 @@\n-    Symbol* constant_type = uncached_signature_ref_at(which);\n+    Symbol* constant_type = uncached_signature_ref_at(cp_index);\n@@ -989,1 +997,1 @@\n-                                           int index, int cache_index,\n+                                           int cp_index, int cache_index,\n@@ -998,2 +1006,2 @@\n-    assert(index > 0, \"valid index\");\n-    cache_index = this_cp->cp_to_object_index(index);\n+    assert(cp_index > 0, \"valid constant pool index\");\n+    cache_index = this_cp->cp_to_object_index(cp_index);\n@@ -1002,1 +1010,1 @@\n-  assert(index == _no_index_sentinel || index >= 0, \"\");\n+  assert(cp_index == _no_index_sentinel || cp_index >= 0, \"\");\n@@ -1008,1 +1016,1 @@\n-        DEBUG_ONLY(int temp_index = (index >= 0 ? index : this_cp->object_to_cp_index(cache_index)));\n+        DEBUG_ONLY(int temp_index = (cp_index >= 0 ? cp_index : this_cp->object_to_cp_index(cache_index)));\n@@ -1016,1 +1024,1 @@\n-    index = this_cp->object_to_cp_index(cache_index);\n+    cp_index = this_cp->object_to_cp_index(cache_index);\n@@ -1021,1 +1029,1 @@\n-  constantTag tag = this_cp->tag_at(index);\n+  constantTag tag = this_cp->tag_at(cp_index);\n@@ -1028,1 +1036,1 @@\n-      CPKlassSlot kslot = this_cp->klass_slot_at(index);\n+      CPKlassSlot kslot = this_cp->klass_slot_at(cp_index);\n@@ -1058,1 +1066,1 @@\n-      Klass* resolved = klass_at_impl(this_cp, index, CHECK_NULL);\n+      Klass* resolved = klass_at_impl(this_cp, cp_index, CHECK_NULL);\n@@ -1069,1 +1077,1 @@\n-      BootstrapInfo bootstrap_specifier(this_cp, index);\n+      BootstrapInfo bootstrap_specifier(this_cp, cp_index);\n@@ -1087,1 +1095,1 @@\n-        save_and_throw_exception(this_cp, index, tag, CHECK_NULL);\n+        save_and_throw_exception(this_cp, cp_index, tag, CHECK_NULL);\n@@ -1121,1 +1129,1 @@\n-    result_oop = string_at_impl(this_cp, index, cache_index, CHECK_NULL);\n+    result_oop = string_at_impl(this_cp, cp_index, cache_index, CHECK_NULL);\n@@ -1126,5 +1134,5 @@\n-      int ref_kind                 = this_cp->method_handle_ref_kind_at(index);\n-      int callee_index             = this_cp->method_handle_klass_index_at(index);\n-      Symbol*  name =      this_cp->method_handle_name_ref_at(index);\n-      Symbol*  signature = this_cp->method_handle_signature_ref_at(index);\n-      constantTag m_tag  = this_cp->tag_at(this_cp->method_handle_index_at(index));\n+      int ref_kind                 = this_cp->method_handle_ref_kind_at(cp_index);\n+      int callee_index             = this_cp->method_handle_klass_index_at(cp_index);\n+      Symbol*  name =      this_cp->method_handle_name_ref_at(cp_index);\n+      Symbol*  signature = this_cp->method_handle_signature_ref_at(cp_index);\n+      constantTag m_tag  = this_cp->tag_at(this_cp->method_handle_index_at(cp_index));\n@@ -1133,1 +1141,1 @@\n-                              ref_kind, index, this_cp->method_handle_index_at(index),\n+                              ref_kind, cp_index, this_cp->method_handle_index_at(cp_index),\n@@ -1139,1 +1147,1 @@\n-        save_and_throw_exception(this_cp, index, tag, CHECK_NULL);\n+        save_and_throw_exception(this_cp, cp_index, tag, CHECK_NULL);\n@@ -1153,1 +1161,1 @@\n-                 index,\n+                 cp_index,\n@@ -1157,1 +1165,1 @@\n-        save_and_throw_exception(this_cp, index, tag, CHECK_NULL);\n+        save_and_throw_exception(this_cp, cp_index, tag, CHECK_NULL);\n@@ -1166,1 +1174,1 @@\n-        save_and_throw_exception(this_cp, index, tag, CHECK_NULL);\n+        save_and_throw_exception(this_cp, cp_index, tag, CHECK_NULL);\n@@ -1174,1 +1182,1 @@\n-      Symbol*  signature = this_cp->method_type_signature_at(index);\n+      Symbol*  signature = this_cp->method_type_signature_at(cp_index);\n@@ -1177,1 +1185,1 @@\n-                              index, this_cp->method_type_index_at(index),\n+                              cp_index, this_cp->method_type_index_at(cp_index),\n@@ -1185,1 +1193,1 @@\n-        save_and_throw_exception(this_cp, index, tag, CHECK_NULL);\n+        save_and_throw_exception(this_cp, cp_index, tag, CHECK_NULL);\n@@ -1192,1 +1200,1 @@\n-    prim_value.i = this_cp->int_at(index);\n+    prim_value.i = this_cp->int_at(cp_index);\n@@ -1198,1 +1206,1 @@\n-    prim_value.f = this_cp->float_at(index);\n+    prim_value.f = this_cp->float_at(cp_index);\n@@ -1204,1 +1212,1 @@\n-    prim_value.j = this_cp->long_at(index);\n+    prim_value.j = this_cp->long_at(cp_index);\n@@ -1210,1 +1218,1 @@\n-    prim_value.d = this_cp->double_at(index);\n+    prim_value.d = this_cp->double_at(cp_index);\n@@ -1218,1 +1226,1 @@\n-    throw_resolution_error(this_cp, index, CHECK_NULL);\n+    throw_resolution_error(this_cp, cp_index, CHECK_NULL);\n@@ -1222,1 +1230,1 @@\n-    fatal(\"unexpected constant tag at CP %p[%d\/%d] = %d\", this_cp(), index, cache_index, tag.value());\n+    fatal(\"unexpected constant tag at CP %p[%d\/%d] = %d\", this_cp(), cp_index, cache_index, tag.value());\n@@ -1248,2 +1256,2 @@\n-oop ConstantPool::uncached_string_at(int which, TRAPS) {\n-  Symbol* sym = unresolved_string_at(which);\n+oop ConstantPool::uncached_string_at(int cp_index, TRAPS) {\n+  Symbol* sym = unresolved_string_at(cp_index);\n@@ -1255,1 +1263,1 @@\n-void ConstantPool::copy_bootstrap_arguments_at_impl(const constantPoolHandle& this_cp, int index,\n+void ConstantPool::copy_bootstrap_arguments_at_impl(const constantPoolHandle& this_cp, int cp_index,\n@@ -1261,2 +1269,2 @@\n-  \/\/ checks: index in range [0..this_cp->length),\n-  \/\/ tag at index, start..end in range [0..this_cp->bootstrap_argument_count],\n+  \/\/ checks: cp_index in range [0..this_cp->length),\n+  \/\/ tag at cp_index, start..end in range [0..this_cp->bootstrap_argument_count],\n@@ -1264,3 +1272,3 @@\n-  if ((0 >= index    || index >= this_cp->length())  ||\n-      !(this_cp->tag_at(index).is_invoke_dynamic()    ||\n-        this_cp->tag_at(index).is_dynamic_constant()) ||\n+  if ((0 >= cp_index    || cp_index >= this_cp->length())  ||\n+      !(this_cp->tag_at(cp_index).is_invoke_dynamic()    ||\n+        this_cp->tag_at(cp_index).is_dynamic_constant()) ||\n@@ -1268,1 +1276,1 @@\n-      (end_arg > this_cp->bootstrap_argument_count_at(index)) ||\n+      (end_arg > this_cp->bootstrap_argument_count_at(cp_index)) ||\n@@ -1279,1 +1287,1 @@\n-    int arg_index = this_cp->bootstrap_argument_index_at(index, i);\n+    int arg_index = this_cp->bootstrap_argument_index_at(cp_index, i);\n@@ -1292,1 +1300,1 @@\n-oop ConstantPool::string_at_impl(const constantPoolHandle& this_cp, int which, int obj_index, TRAPS) {\n+oop ConstantPool::string_at_impl(const constantPoolHandle& this_cp, int cp_index, int obj_index, TRAPS) {\n@@ -1297,1 +1305,1 @@\n-  Symbol* sym = this_cp->unresolved_string_at(which);\n+  Symbol* sym = this_cp->unresolved_string_at(cp_index);\n@@ -1299,1 +1307,1 @@\n-  this_cp->string_at_put(which, obj_index, str);\n+  this_cp->string_at_put(obj_index, str);\n@@ -1305,1 +1313,1 @@\n-bool ConstantPool::klass_name_at_matches(const InstanceKlass* k, int which) {\n+bool ConstantPool::klass_name_at_matches(const InstanceKlass* k, int cp_index) {\n@@ -1307,1 +1315,1 @@\n-  Symbol* cp_name = klass_name_at(which);\n+  Symbol* cp_name = klass_name_at(cp_index);\n@@ -1665,1 +1673,1 @@\n-  int dest_i = to_i;  \/\/ leave original alone for debug purposes\n+  int dest_cpi = to_i;  \/\/ leave original alone for debug purposes\n@@ -1667,2 +1675,2 @@\n-  for (int src_i = start_i; src_i <= end_i; \/* see loop bottom *\/ ) {\n-    copy_entry_to(from_cp, src_i, to_cp, dest_i);\n+  for (int src_cpi = start_i; src_cpi <= end_i; \/* see loop bottom *\/ ) {\n+    copy_entry_to(from_cp, src_cpi, to_cp, dest_cpi);\n@@ -1670,1 +1678,1 @@\n-    switch (from_cp->tag_at(src_i).value()) {\n+    switch (from_cp->tag_at(src_cpi).value()) {\n@@ -1674,2 +1682,2 @@\n-      src_i += 2;\n-      dest_i += 2;\n+      src_cpi += 2;\n+      dest_cpi += 2;\n@@ -1680,2 +1688,2 @@\n-      src_i++;\n-      dest_i++;\n+      src_cpi++;\n+      dest_cpi++;\n@@ -1893,1 +1901,1 @@\n-const char* ConstantPool::printable_name_at(int which) {\n+const char* ConstantPool::printable_name_at(int cp_index) {\n@@ -1895,1 +1903,1 @@\n-  constantTag tag = tag_at(which);\n+  constantTag tag = tag_at(cp_index);\n@@ -1898,1 +1906,1 @@\n-    return string_at_noresolve(which);\n+    return string_at_noresolve(cp_index);\n@@ -1900,1 +1908,1 @@\n-    return klass_name_at(which)->as_C_string();\n+    return klass_name_at(cp_index)->as_C_string();\n@@ -1902,1 +1910,1 @@\n-    return symbol_at(which)->as_C_string();\n+    return symbol_at(cp_index)->as_C_string();\n@@ -2381,1 +2389,1 @@\n-void ConstantPool::print_entry_on(const int index, outputStream* st) {\n+void ConstantPool::print_entry_on(const int cp_index, outputStream* st) {\n@@ -2383,2 +2391,2 @@\n-  st->print(\" - %3d : \", index);\n-  tag_at(index).print_on(st);\n+  st->print(\" - %3d : \", cp_index);\n+  tag_at(cp_index).print_on(st);\n@@ -2386,1 +2394,1 @@\n-  switch (tag_at(index).value()) {\n+  switch (tag_at(cp_index).value()) {\n@@ -2388,1 +2396,1 @@\n-      { Klass* k = klass_at(index, CATCH);\n+      { Klass* k = klass_at(cp_index, CATCH);\n@@ -2397,2 +2405,2 @@\n-      st->print(\"klass_index=%d\", uncached_klass_ref_index_at(index));\n-      st->print(\" name_and_type_index=%d\", uncached_name_and_type_ref_index_at(index));\n+      st->print(\"klass_index=%d\", uncached_klass_ref_index_at(cp_index));\n+      st->print(\" name_and_type_index=%d\", uncached_name_and_type_ref_index_at(cp_index));\n@@ -2401,1 +2409,1 @@\n-      unresolved_string_at(index)->print_value_on(st);\n+      unresolved_string_at(cp_index)->print_value_on(st);\n@@ -2404,1 +2412,1 @@\n-      st->print(\"%d\", int_at(index));\n+      st->print(\"%d\", int_at(cp_index));\n@@ -2407,1 +2415,1 @@\n-      st->print(\"%f\", float_at(index));\n+      st->print(\"%f\", float_at(cp_index));\n@@ -2410,1 +2418,1 @@\n-      st->print_jlong(long_at(index));\n+      st->print_jlong(long_at(cp_index));\n@@ -2413,1 +2421,1 @@\n-      st->print(\"%lf\", double_at(index));\n+      st->print(\"%lf\", double_at(cp_index));\n@@ -2416,2 +2424,2 @@\n-      st->print(\"name_index=%d\", name_ref_index_at(index));\n-      st->print(\" signature_index=%d\", signature_ref_index_at(index));\n+      st->print(\"name_index=%d\", name_ref_index_at(cp_index));\n+      st->print(\" signature_index=%d\", signature_ref_index_at(cp_index));\n@@ -2420,1 +2428,1 @@\n-      symbol_at(index)->print_value_on(st);\n+      symbol_at(cp_index)->print_value_on(st);\n@@ -2423,1 +2431,1 @@\n-        int name_index = *int_at_addr(index);\n+        int name_index = *int_at_addr(cp_index);\n@@ -2430,1 +2438,1 @@\n-        CPKlassSlot kslot = klass_slot_at(index);\n+        CPKlassSlot kslot = klass_slot_at(cp_index);\n@@ -2439,2 +2447,2 @@\n-      st->print(\"ref_kind=%d\", method_handle_ref_kind_at(index));\n-      st->print(\" ref_index=%d\", method_handle_index_at(index));\n+      st->print(\"ref_kind=%d\", method_handle_ref_kind_at(cp_index));\n+      st->print(\" ref_index=%d\", method_handle_index_at(cp_index));\n@@ -2444,1 +2452,1 @@\n-      st->print(\"signature_index=%d\", method_type_index_at(index));\n+      st->print(\"signature_index=%d\", method_type_index_at(cp_index));\n@@ -2449,3 +2457,3 @@\n-        st->print(\"bootstrap_method_index=%d\", bootstrap_method_ref_index_at(index));\n-        st->print(\" type_index=%d\", bootstrap_name_and_type_ref_index_at(index));\n-        int argc = bootstrap_argument_count_at(index);\n+        st->print(\"bootstrap_method_index=%d\", bootstrap_method_ref_index_at(cp_index));\n+        st->print(\" type_index=%d\", bootstrap_name_and_type_ref_index_at(cp_index));\n+        int argc = bootstrap_argument_count_at(cp_index);\n@@ -2454,1 +2462,1 @@\n-            int arg = bootstrap_argument_index_at(index, arg_i);\n+            int arg = bootstrap_argument_index_at(cp_index, arg_i);\n@@ -2463,3 +2471,3 @@\n-        st->print(\"bootstrap_method_index=%d\", bootstrap_method_ref_index_at(index));\n-        st->print(\" name_and_type_index=%d\", bootstrap_name_and_type_ref_index_at(index));\n-        int argc = bootstrap_argument_count_at(index);\n+        st->print(\"bootstrap_method_index=%d\", bootstrap_method_ref_index_at(cp_index));\n+        st->print(\" name_and_type_index=%d\", bootstrap_name_and_type_ref_index_at(cp_index));\n+        int argc = bootstrap_argument_count_at(cp_index);\n@@ -2468,1 +2476,1 @@\n-            int arg = bootstrap_argument_index_at(index, arg_i);\n+            int arg = bootstrap_argument_index_at(cp_index, arg_i);\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":143,"deletions":135,"binary":false,"changes":278,"status":"modified"},{"patch":"@@ -125,3 +125,3 @@\n-  void set_tags(Array<u1>* tags)               { _tags = tags; }\n-  void tag_at_put(int which, jbyte t)          { tags()->at_put(which, t); }\n-  void release_tag_at_put(int which, jbyte t)  { tags()->release_at_put(which, t); }\n+  void set_tags(Array<u1>* tags)                 { _tags = tags; }\n+  void tag_at_put(int cp_index, jbyte t)         { tags()->at_put(cp_index, t); }\n+  void release_tag_at_put(int cp_index, jbyte t) { tags()->release_at_put(cp_index, t); }\n@@ -129,1 +129,1 @@\n-  u1* tag_addr_at(int which) const             { return tags()->adr_at(which); }\n+  u1* tag_addr_at(int cp_index) const            { return tags()->adr_at(cp_index); }\n@@ -139,3 +139,3 @@\n-  intptr_t* obj_at_addr(int which) const {\n-    assert(is_within_bounds(which), \"index out of bounds\");\n-    return (intptr_t*) &base()[which];\n+  intptr_t* obj_at_addr(int cp_index) const {\n+    assert(is_within_bounds(cp_index), \"index out of bounds\");\n+    return (intptr_t*) &base()[cp_index];\n@@ -144,3 +144,3 @@\n-  jint* int_at_addr(int which) const {\n-    assert(is_within_bounds(which), \"index out of bounds\");\n-    return (jint*) &base()[which];\n+  jint* int_at_addr(int cp_index) const {\n+    assert(is_within_bounds(cp_index), \"index out of bounds\");\n+    return (jint*) &base()[cp_index];\n@@ -149,3 +149,3 @@\n-  jlong* long_at_addr(int which) const {\n-    assert(is_within_bounds(which), \"index out of bounds\");\n-    return (jlong*) &base()[which];\n+  jlong* long_at_addr(int cp_index) const {\n+    assert(is_within_bounds(cp_index), \"index out of bounds\");\n+    return (jlong*) &base()[cp_index];\n@@ -154,3 +154,3 @@\n-  jfloat* float_at_addr(int which) const {\n-    assert(is_within_bounds(which), \"index out of bounds\");\n-    return (jfloat*) &base()[which];\n+  jfloat* float_at_addr(int cp_index) const {\n+    assert(is_within_bounds(cp_index), \"index out of bounds\");\n+    return (jfloat*) &base()[cp_index];\n@@ -159,3 +159,3 @@\n-  jdouble* double_at_addr(int which) const {\n-    assert(is_within_bounds(which), \"index out of bounds\");\n-    return (jdouble*) &base()[which];\n+  jdouble* double_at_addr(int cp_index) const {\n+    assert(is_within_bounds(cp_index), \"index out of bounds\");\n+    return (jdouble*) &base()[cp_index];\n@@ -273,3 +273,3 @@\n-  void klass_index_at_put(int which, int name_index) {\n-    tag_at_put(which, JVM_CONSTANT_ClassIndex);\n-    *int_at_addr(which) = name_index;\n+  void klass_index_at_put(int cp_index, int name_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_ClassIndex);\n+    *int_at_addr(cp_index) = name_index;\n@@ -281,2 +281,2 @@\n-  void unresolved_qdescriptor_at_put(int which, int name_index, int resolved_klass_index) {\n-      release_tag_at_put(which, JVM_CONSTANT_UnresolvedClass | (jbyte) JVM_CONSTANT_QDescBit);\n+  void unresolved_qdescriptor_at_put(int cp_index, int name_index, int resolved_klass_index) {\n+      release_tag_at_put(cp_index, JVM_CONSTANT_UnresolvedClass | (jbyte) JVM_CONSTANT_QDescBit);\n@@ -286,1 +286,1 @@\n-      *int_at_addr(which) =\n+      *int_at_addr(cp_index) =\n@@ -290,2 +290,2 @@\n-  void unresolved_klass_at_put(int which, int name_index, int resolved_klass_index) {\n-    release_tag_at_put(which, JVM_CONSTANT_UnresolvedClass);\n+  void unresolved_klass_at_put(int cp_index, int name_index, int resolved_klass_index) {\n+    release_tag_at_put(cp_index, JVM_CONSTANT_UnresolvedClass);\n@@ -295,1 +295,1 @@\n-    *int_at_addr(which) =\n+    *int_at_addr(cp_index) =\n@@ -299,3 +299,3 @@\n-  void method_handle_index_at_put(int which, int ref_kind, int ref_index) {\n-    tag_at_put(which, JVM_CONSTANT_MethodHandle);\n-    *int_at_addr(which) = ((jint) ref_index<<16) | ref_kind;\n+  void method_handle_index_at_put(int cp_index, int ref_kind, int ref_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_MethodHandle);\n+    *int_at_addr(cp_index) = ((jint) ref_index<<16) | ref_kind;\n@@ -304,3 +304,3 @@\n-  void method_type_index_at_put(int which, int ref_index) {\n-    tag_at_put(which, JVM_CONSTANT_MethodType);\n-    *int_at_addr(which) = ref_index;\n+  void method_type_index_at_put(int cp_index, int ref_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_MethodType);\n+    *int_at_addr(cp_index) = ref_index;\n@@ -309,3 +309,3 @@\n-  void dynamic_constant_at_put(int which, int bsms_attribute_index, int name_and_type_index) {\n-    tag_at_put(which, JVM_CONSTANT_Dynamic);\n-    *int_at_addr(which) = ((jint) name_and_type_index<<16) | bsms_attribute_index;\n+  void dynamic_constant_at_put(int cp_index, int bsms_attribute_index, int name_and_type_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_Dynamic);\n+    *int_at_addr(cp_index) = ((jint) name_and_type_index<<16) | bsms_attribute_index;\n@@ -314,3 +314,3 @@\n-  void invoke_dynamic_at_put(int which, int bsms_attribute_index, int name_and_type_index) {\n-    tag_at_put(which, JVM_CONSTANT_InvokeDynamic);\n-    *int_at_addr(which) = ((jint) name_and_type_index<<16) | bsms_attribute_index;\n+  void invoke_dynamic_at_put(int cp_index, int bsms_attribute_index, int name_and_type_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_InvokeDynamic);\n+    *int_at_addr(cp_index) = ((jint) name_and_type_index<<16) | bsms_attribute_index;\n@@ -319,1 +319,1 @@\n-  void unresolved_string_at_put(int which, Symbol* s) {\n+  void unresolved_string_at_put(int cp_index, Symbol* s) {\n@@ -324,2 +324,2 @@\n-    tag_at_put(which, JVM_CONSTANT_String);\n-    *symbol_at_addr(which) = s;\n+    tag_at_put(cp_index, JVM_CONSTANT_String);\n+    *symbol_at_addr(cp_index) = s;\n@@ -328,3 +328,3 @@\n-  void int_at_put(int which, jint i) {\n-    tag_at_put(which, JVM_CONSTANT_Integer);\n-    *int_at_addr(which) = i;\n+  void int_at_put(int cp_index, jint i) {\n+    tag_at_put(cp_index, JVM_CONSTANT_Integer);\n+    *int_at_addr(cp_index) = i;\n@@ -333,2 +333,2 @@\n-  void long_at_put(int which, jlong l) {\n-    tag_at_put(which, JVM_CONSTANT_Long);\n+  void long_at_put(int cp_index, jlong l) {\n+    tag_at_put(cp_index, JVM_CONSTANT_Long);\n@@ -336,1 +336,1 @@\n-    Bytes::put_native_u8((address)long_at_addr(which), *((u8*) &l));\n+    Bytes::put_native_u8((address)long_at_addr(cp_index), *((u8*) &l));\n@@ -339,3 +339,3 @@\n-  void float_at_put(int which, jfloat f) {\n-    tag_at_put(which, JVM_CONSTANT_Float);\n-    *float_at_addr(which) = f;\n+  void float_at_put(int cp_index, jfloat f) {\n+    tag_at_put(cp_index, JVM_CONSTANT_Float);\n+    *float_at_addr(cp_index) = f;\n@@ -344,2 +344,2 @@\n-  void double_at_put(int which, jdouble d) {\n-    tag_at_put(which, JVM_CONSTANT_Double);\n+  void double_at_put(int cp_index, jdouble d) {\n+    tag_at_put(cp_index, JVM_CONSTANT_Double);\n@@ -348,1 +348,1 @@\n-    Bytes::put_native_u8((address) double_at_addr(which), *((u8*) &d));\n+    Bytes::put_native_u8((address) double_at_addr(cp_index), *((u8*) &d));\n@@ -351,3 +351,3 @@\n-  Symbol** symbol_at_addr(int which) const {\n-    assert(is_within_bounds(which), \"index out of bounds\");\n-    return (Symbol**) &base()[which];\n+  Symbol** symbol_at_addr(int cp_index) const {\n+    assert(is_within_bounds(cp_index), \"index out of bounds\");\n+    return (Symbol**) &base()[cp_index];\n@@ -356,1 +356,1 @@\n-  void symbol_at_put(int which, Symbol* s) {\n+  void symbol_at_put(int cp_index, Symbol* s) {\n@@ -358,2 +358,2 @@\n-    tag_at_put(which, JVM_CONSTANT_Utf8);\n-    *symbol_at_addr(which) = s;\n+    tag_at_put(cp_index, JVM_CONSTANT_Utf8);\n+    *symbol_at_addr(cp_index) = s;\n@@ -362,1 +362,1 @@\n-  void string_at_put(int which, int obj_index, oop str);\n+  void string_at_put(int obj_index, oop str);\n@@ -365,3 +365,3 @@\n-  void string_index_at_put(int which, int string_index) {\n-    tag_at_put(which, JVM_CONSTANT_StringIndex);\n-    *int_at_addr(which) = string_index;\n+  void string_index_at_put(int cp_index, int string_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_StringIndex);\n+    *int_at_addr(cp_index) = string_index;\n@@ -370,3 +370,3 @@\n-  void field_at_put(int which, int class_index, int name_and_type_index) {\n-    tag_at_put(which, JVM_CONSTANT_Fieldref);\n-    *int_at_addr(which) = ((jint) name_and_type_index<<16) | class_index;\n+  void field_at_put(int cp_index, int class_index, int name_and_type_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_Fieldref);\n+    *int_at_addr(cp_index) = ((jint) name_and_type_index<<16) | class_index;\n@@ -375,3 +375,3 @@\n-  void method_at_put(int which, int class_index, int name_and_type_index) {\n-    tag_at_put(which, JVM_CONSTANT_Methodref);\n-    *int_at_addr(which) = ((jint) name_and_type_index<<16) | class_index;\n+  void method_at_put(int cp_index, int class_index, int name_and_type_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_Methodref);\n+    *int_at_addr(cp_index) = ((jint) name_and_type_index<<16) | class_index;\n@@ -380,3 +380,3 @@\n-  void interface_method_at_put(int which, int class_index, int name_and_type_index) {\n-    tag_at_put(which, JVM_CONSTANT_InterfaceMethodref);\n-    *int_at_addr(which) = ((jint) name_and_type_index<<16) | class_index;  \/\/ Not so nice\n+  void interface_method_at_put(int cp_index, int class_index, int name_and_type_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_InterfaceMethodref);\n+    *int_at_addr(cp_index) = ((jint) name_and_type_index<<16) | class_index;  \/\/ Not so nice\n@@ -385,3 +385,3 @@\n-  void name_and_type_at_put(int which, int name_index, int signature_index) {\n-    tag_at_put(which, JVM_CONSTANT_NameAndType);\n-    *int_at_addr(which) = ((jint) signature_index<<16) | name_index;  \/\/ Not so nice\n+  void name_and_type_at_put(int cp_index, int name_index, int signature_index) {\n+    tag_at_put(cp_index, JVM_CONSTANT_NameAndType);\n+    *int_at_addr(cp_index) = ((jint) signature_index<<16) | name_index;  \/\/ Not so nice\n@@ -392,1 +392,1 @@\n-  constantTag tag_at(int which) const { return (constantTag)tags()->at_acquire(which); }\n+  constantTag tag_at(int cp_index) const { return (constantTag)tags()->at_acquire(cp_index); }\n@@ -396,1 +396,1 @@\n-  Klass* klass_at(int which, TRAPS) {\n+  Klass* klass_at(int cp_index, TRAPS) {\n@@ -398,1 +398,1 @@\n-    return klass_at_impl(h_this, which, THREAD);\n+    return klass_at_impl(h_this, cp_index, THREAD);\n@@ -401,2 +401,2 @@\n-  CPKlassSlot klass_slot_at(int which) const {\n-    assert(tag_at(which).is_unresolved_klass() || tag_at(which).is_klass(),\n+  CPKlassSlot klass_slot_at(int cp_index) const {\n+    assert(tag_at(cp_index).is_unresolved_klass() || tag_at(cp_index).is_klass(),\n@@ -404,1 +404,1 @@\n-    int value = *int_at_addr(which);\n+    int value = *int_at_addr(cp_index);\n@@ -410,3 +410,3 @@\n-  Symbol* klass_name_at(int which) const;  \/\/ Returns the name, w\/o resolving.\n-  int klass_name_index_at(int which) const {\n-    return klass_slot_at(which).name_index();\n+  Symbol* klass_name_at(int cp_index) const;  \/\/ Returns the name, w\/o resolving.\n+  int klass_name_index_at(int cp_index) const {\n+    return klass_slot_at(cp_index).name_index();\n@@ -415,1 +415,1 @@\n-  Klass* resolved_klass_at(int which) const;  \/\/ Used by Compiler\n+  Klass* resolved_klass_at(int cp_index) const;  \/\/ Used by Compiler\n@@ -418,2 +418,2 @@\n-  Symbol* klass_at_noresolve(int which) { return klass_name_at(which); }\n-  void temp_unresolved_klass_at_put(int which, int name_index) {\n+  Symbol* klass_at_noresolve(int cp_index) { return klass_name_at(cp_index); }\n+  void temp_unresolved_klass_at_put(int cp_index, int name_index) {\n@@ -422,1 +422,1 @@\n-    unresolved_klass_at_put(which, name_index, CPKlassSlot::_temp_resolved_klass_index);\n+    unresolved_klass_at_put(cp_index, name_index, CPKlassSlot::_temp_resolved_klass_index);\n@@ -425,3 +425,3 @@\n-  jint int_at(int which) {\n-    assert(tag_at(which).is_int(), \"Corrupted constant pool\");\n-    return *int_at_addr(which);\n+  jint int_at(int cp_index) {\n+    assert(tag_at(cp_index).is_int(), \"Corrupted constant pool\");\n+    return *int_at_addr(cp_index);\n@@ -430,4 +430,4 @@\n-  jlong long_at(int which) {\n-    assert(tag_at(which).is_long(), \"Corrupted constant pool\");\n-    \/\/ return *long_at_addr(which);\n-    u8 tmp = Bytes::get_native_u8((address)&base()[which]);\n+  jlong long_at(int cp_index) {\n+    assert(tag_at(cp_index).is_long(), \"Corrupted constant pool\");\n+    \/\/ return *long_at_addr(cp_index);\n+    u8 tmp = Bytes::get_native_u8((address)&base()[cp_index]);\n@@ -437,3 +437,3 @@\n-  jfloat float_at(int which) {\n-    assert(tag_at(which).is_float(), \"Corrupted constant pool\");\n-    return *float_at_addr(which);\n+  jfloat float_at(int cp_index) {\n+    assert(tag_at(cp_index).is_float(), \"Corrupted constant pool\");\n+    return *float_at_addr(cp_index);\n@@ -442,3 +442,3 @@\n-  jdouble double_at(int which) {\n-    assert(tag_at(which).is_double(), \"Corrupted constant pool\");\n-    u8 tmp = Bytes::get_native_u8((address)&base()[which]);\n+  jdouble double_at(int cp_index) {\n+    assert(tag_at(cp_index).is_double(), \"Corrupted constant pool\");\n+    u8 tmp = Bytes::get_native_u8((address)&base()[cp_index]);\n@@ -448,3 +448,3 @@\n-  Symbol* symbol_at(int which) const {\n-    assert(tag_at(which).is_utf8(), \"Corrupted constant pool\");\n-    return *symbol_at_addr(which);\n+  Symbol* symbol_at(int cp_index) const {\n+    assert(tag_at(cp_index).is_utf8(), \"Corrupted constant pool\");\n+    return *symbol_at_addr(cp_index);\n@@ -453,1 +453,1 @@\n-  oop string_at(int which, int obj_index, TRAPS) {\n+  oop string_at(int cp_index, int obj_index, TRAPS) {\n@@ -455,1 +455,1 @@\n-    return string_at_impl(h_this, which, obj_index, THREAD);\n+    return string_at_impl(h_this, cp_index, obj_index, THREAD);\n@@ -457,3 +457,3 @@\n-  oop string_at(int which, TRAPS) {\n-    int obj_index = cp_to_object_index(which);\n-    return string_at(which, obj_index, THREAD);\n+  oop string_at(int cp_index, TRAPS) {\n+    int obj_index = cp_to_object_index(cp_index);\n+    return string_at(cp_index, obj_index, THREAD);\n@@ -463,1 +463,1 @@\n-  oop uncached_string_at(int which, TRAPS);\n+  oop uncached_string_at(int cp_index, TRAPS);\n@@ -467,2 +467,2 @@\n-  oop resolved_string_at(int which) {\n-    assert(tag_at(which).is_string(), \"Corrupted constant pool\");\n+  oop resolved_string_at(int cp_index) {\n+    assert(tag_at(cp_index).is_string(), \"Corrupted constant pool\");\n@@ -472,1 +472,1 @@\n-    int obj_index = cp_to_object_index(which);\n+    int obj_index = cp_to_object_index(cp_index);\n@@ -476,3 +476,3 @@\n-  Symbol* unresolved_string_at(int which) {\n-    assert(tag_at(which).is_string(), \"Corrupted constant pool\");\n-    return *symbol_at_addr(which);\n+  Symbol* unresolved_string_at(int cp_index) {\n+    assert(tag_at(cp_index).is_string(), \"Corrupted constant pool\");\n+    return *symbol_at_addr(cp_index);\n@@ -485,1 +485,1 @@\n-  char* string_at_noresolve(int which);\n+  char* string_at_noresolve(int cp_index);\n@@ -487,3 +487,3 @@\n-  jint name_and_type_at(int which) {\n-    assert(tag_at(which).is_name_and_type(), \"Corrupted constant pool\");\n-    return *int_at_addr(which);\n+  jint name_and_type_at(int cp_index) {\n+    assert(tag_at(cp_index).is_name_and_type(), \"Corrupted constant pool\");\n+    return *int_at_addr(cp_index);\n@@ -492,4 +492,4 @@\n-  int method_handle_ref_kind_at(int which) {\n-    assert(tag_at(which).is_method_handle() ||\n-           tag_at(which).is_method_handle_in_error(), \"Corrupted constant pool\");\n-    return extract_low_short_from_int(*int_at_addr(which));  \/\/ mask out unwanted ref_index bits\n+  int method_handle_ref_kind_at(int cp_index) {\n+    assert(tag_at(cp_index).is_method_handle() ||\n+           tag_at(cp_index).is_method_handle_in_error(), \"Corrupted constant pool\");\n+    return extract_low_short_from_int(*int_at_addr(cp_index));  \/\/ mask out unwanted ref_index bits\n@@ -497,4 +497,4 @@\n-  int method_handle_index_at(int which) {\n-    assert(tag_at(which).is_method_handle() ||\n-           tag_at(which).is_method_handle_in_error(), \"Corrupted constant pool\");\n-    return extract_high_short_from_int(*int_at_addr(which));  \/\/ shift out unwanted ref_kind bits\n+  int method_handle_index_at(int cp_index) {\n+    assert(tag_at(cp_index).is_method_handle() ||\n+           tag_at(cp_index).is_method_handle_in_error(), \"Corrupted constant pool\");\n+    return extract_high_short_from_int(*int_at_addr(cp_index));  \/\/ shift out unwanted ref_kind bits\n@@ -502,4 +502,4 @@\n-  int method_type_index_at(int which) {\n-    assert(tag_at(which).is_method_type() ||\n-           tag_at(which).is_method_type_in_error(), \"Corrupted constant pool\");\n-    return *int_at_addr(which);\n+  int method_type_index_at(int cp_index) {\n+    assert(tag_at(cp_index).is_method_type() ||\n+           tag_at(cp_index).is_method_type_in_error(), \"Corrupted constant pool\");\n+    return *int_at_addr(cp_index);\n@@ -509,2 +509,2 @@\n-  Symbol* method_handle_name_ref_at(int which) {\n-    int member = method_handle_index_at(which);\n+  Symbol* method_handle_name_ref_at(int cp_index) {\n+    int member = method_handle_index_at(cp_index);\n@@ -513,2 +513,2 @@\n-  Symbol* method_handle_signature_ref_at(int which) {\n-    int member = method_handle_index_at(which);\n+  Symbol* method_handle_signature_ref_at(int cp_index) {\n+    int member = method_handle_index_at(cp_index);\n@@ -517,2 +517,2 @@\n-  u2 method_handle_klass_index_at(int which) {\n-    int member = method_handle_index_at(which);\n+  u2 method_handle_klass_index_at(int cp_index) {\n+    int member = method_handle_index_at(cp_index);\n@@ -521,2 +521,2 @@\n-  Symbol* method_type_signature_at(int which) {\n-    int sym = method_type_index_at(which);\n+  Symbol* method_type_signature_at(int cp_index) {\n+    int sym = method_type_index_at(cp_index);\n@@ -526,3 +526,3 @@\n-  u2 bootstrap_name_and_type_ref_index_at(int which) {\n-    assert(tag_at(which).has_bootstrap(), \"Corrupted constant pool\");\n-    return extract_high_short_from_int(*int_at_addr(which));\n+  u2 bootstrap_name_and_type_ref_index_at(int cp_index) {\n+    assert(tag_at(cp_index).has_bootstrap(), \"Corrupted constant pool\");\n+    return extract_high_short_from_int(*int_at_addr(cp_index));\n@@ -530,3 +530,3 @@\n-  u2 bootstrap_methods_attribute_index(int which) {\n-    assert(tag_at(which).has_bootstrap(), \"Corrupted constant pool\");\n-    return extract_low_short_from_int(*int_at_addr(which));\n+  u2 bootstrap_methods_attribute_index(int cp_index) {\n+    assert(tag_at(cp_index).has_bootstrap(), \"Corrupted constant pool\");\n+    return extract_low_short_from_int(*int_at_addr(cp_index));\n@@ -534,2 +534,2 @@\n-  int bootstrap_operand_base(int which) {\n-    int bsms_attribute_index = bootstrap_methods_attribute_index(which);\n+  int bootstrap_operand_base(int cp_index) {\n+    int bsms_attribute_index = bootstrap_methods_attribute_index(cp_index);\n@@ -575,2 +575,2 @@\n-  int bootstrap_operand_limit(int which) {\n-    int bsms_attribute_index = bootstrap_methods_attribute_index(which);\n+  int bootstrap_operand_limit(int cp_index) {\n+    int bsms_attribute_index = bootstrap_methods_attribute_index(cp_index);\n@@ -630,3 +630,3 @@\n-  u2 bootstrap_method_ref_index_at(int which) {\n-    assert(tag_at(which).has_bootstrap(), \"Corrupted constant pool\");\n-    int op_base = bootstrap_operand_base(which);\n+  u2 bootstrap_method_ref_index_at(int cp_index) {\n+    assert(tag_at(cp_index).has_bootstrap(), \"Corrupted constant pool\");\n+    int op_base = bootstrap_operand_base(cp_index);\n@@ -635,3 +635,3 @@\n-  u2 bootstrap_argument_count_at(int which) {\n-    assert(tag_at(which).has_bootstrap(), \"Corrupted constant pool\");\n-    int op_base = bootstrap_operand_base(which);\n+  u2 bootstrap_argument_count_at(int cp_index) {\n+    assert(tag_at(cp_index).has_bootstrap(), \"Corrupted constant pool\");\n+    int op_base = bootstrap_operand_base(cp_index);\n@@ -640,1 +640,1 @@\n-               int next_offset = bootstrap_operand_limit(which));\n+               int next_offset = bootstrap_operand_limit(cp_index));\n@@ -644,2 +644,2 @@\n-  u2 bootstrap_argument_index_at(int which, int j) {\n-    int op_base = bootstrap_operand_base(which);\n+  u2 bootstrap_argument_index_at(int cp_index, int j) {\n+    int op_base = bootstrap_operand_base(cp_index);\n@@ -688,2 +688,2 @@\n-  u2 name_ref_index_at(int which_nt);            \/\/ ==  low-order jshort of name_and_type_at(which_nt)\n-  u2 signature_ref_index_at(int which_nt);       \/\/ == high-order jshort of name_and_type_at(which_nt)\n+  u2 name_ref_index_at(int cp_index);            \/\/ ==  low-order jshort of name_and_type_at(cp_index)\n+  u2 signature_ref_index_at(int cp_index);       \/\/ == high-order jshort of name_and_type_at(cp_index)\n@@ -691,1 +691,1 @@\n-  BasicType basic_type_for_signature_at(int which) const;\n+  BasicType basic_type_for_signature_at(int cp_index) const;\n@@ -713,1 +713,1 @@\n-  constantTag constant_tag_at(int which);\n+  constantTag constant_tag_at(int cp_index);\n@@ -715,1 +715,1 @@\n-  BasicType basic_type_for_constant_at(int which);\n+  BasicType basic_type_for_constant_at(int cp_index);\n@@ -718,1 +718,1 @@\n-  oop resolve_constant_at(int index, TRAPS) {\n+  oop resolve_constant_at(int cp_index, TRAPS) {\n@@ -720,1 +720,1 @@\n-    return resolve_constant_at_impl(h_this, index, _no_index_sentinel, nullptr, THREAD);\n+    return resolve_constant_at_impl(h_this, cp_index, _no_index_sentinel, nullptr, THREAD);\n@@ -728,1 +728,1 @@\n-  oop resolve_possibly_cached_constant_at(int pool_index, TRAPS) {\n+  oop resolve_possibly_cached_constant_at(int cp_index, TRAPS) {\n@@ -730,1 +730,1 @@\n-    return resolve_constant_at_impl(h_this, pool_index, _possible_index_sentinel, nullptr, THREAD);\n+    return resolve_constant_at_impl(h_this, cp_index, _possible_index_sentinel, nullptr, THREAD);\n@@ -733,1 +733,1 @@\n-  oop find_cached_constant_at(int pool_index, bool& found_it, TRAPS) {\n+  oop find_cached_constant_at(int cp_index, bool& found_it, TRAPS) {\n@@ -735,1 +735,1 @@\n-    return resolve_constant_at_impl(h_this, pool_index, _possible_index_sentinel, &found_it, THREAD);\n+    return resolve_constant_at_impl(h_this, cp_index, _possible_index_sentinel, &found_it, THREAD);\n@@ -738,1 +738,1 @@\n-  void copy_bootstrap_arguments_at(int index,\n+  void copy_bootstrap_arguments_at(int cp_index,\n@@ -743,1 +743,1 @@\n-    copy_bootstrap_arguments_at_impl(h_this, index, start_arg, end_arg,\n+    copy_bootstrap_arguments_at_impl(h_this, cp_index, start_arg, end_arg,\n@@ -748,1 +748,1 @@\n-  bool klass_name_at_matches(const InstanceKlass* k, int which);\n+  bool klass_name_at_matches(const InstanceKlass* k, int cp_index);\n@@ -803,1 +803,1 @@\n-  const char* printable_name_at(int which) PRODUCT_RETURN0;\n+  const char* printable_name_at(int cp_index) PRODUCT_RETURN0;\n@@ -825,3 +825,3 @@\n-  jint klass_index_at(int which) {\n-    assert(tag_at(which).is_klass_index(), \"Corrupted constant pool\");\n-    return *int_at_addr(which);\n+  jint klass_index_at(int cp_index) {\n+    assert(tag_at(cp_index).is_klass_index(), \"Corrupted constant pool\");\n+    return *int_at_addr(cp_index);\n@@ -830,3 +830,3 @@\n-  jint string_index_at(int which) {\n-    assert(tag_at(which).is_string_index(), \"Corrupted constant pool\");\n-    return *int_at_addr(which);\n+  jint string_index_at(int cp_index) {\n+    assert(tag_at(cp_index).is_string_index(), \"Corrupted constant pool\");\n+    return *int_at_addr(cp_index);\n@@ -840,2 +840,2 @@\n-  static Klass* klass_at_impl(const constantPoolHandle& this_cp, int which, TRAPS);\n-  static oop string_at_impl(const constantPoolHandle& this_cp, int which, int obj_index, TRAPS);\n+  static Klass* klass_at_impl(const constantPoolHandle& this_cp, int cp_index, TRAPS);\n+  static oop string_at_impl(const constantPoolHandle& this_cp, int cp_index, int obj_index, TRAPS);\n@@ -848,1 +848,1 @@\n-  static oop resolve_constant_at_impl(const constantPoolHandle& this_cp, int index, int cache_index,\n+  static oop resolve_constant_at_impl(const constantPoolHandle& this_cp, int cp_index, int cache_index,\n@@ -850,1 +850,1 @@\n-  static void copy_bootstrap_arguments_at_impl(const constantPoolHandle& this_cp, int index,\n+  static void copy_bootstrap_arguments_at_impl(const constantPoolHandle& this_cp, int cp_index,\n@@ -856,1 +856,1 @@\n-  static void save_and_throw_exception(const constantPoolHandle& this_cp, int which, constantTag tag, TRAPS);\n+  static void save_and_throw_exception(const constantPoolHandle& this_cp, int cp_index, constantTag tag, TRAPS);\n@@ -864,1 +864,1 @@\n-  void copy_cp_to(int start_i, int end_i, const constantPoolHandle& to_cp, int to_i, TRAPS) {\n+  void copy_cp_to(int start_cpi, int end_cpi, const constantPoolHandle& to_cp, int to_cpi, TRAPS) {\n@@ -866,1 +866,1 @@\n-    copy_cp_to_impl(h_this, start_i, end_i, to_cp, to_i, THREAD);\n+    copy_cp_to_impl(h_this, start_cpi, end_cpi, to_cp, to_cpi, THREAD);\n@@ -868,2 +868,2 @@\n-  static void copy_cp_to_impl(const constantPoolHandle& from_cp, int start_i, int end_i, const constantPoolHandle& to_cp, int to_i, TRAPS);\n-  static void copy_entry_to(const constantPoolHandle& from_cp, int from_i, const constantPoolHandle& to_cp, int to_i);\n+  static void copy_cp_to_impl(const constantPoolHandle& from_cp, int start_cpi, int end_cpi, const constantPoolHandle& to_cp, int to_cpi, TRAPS);\n+  static void copy_entry_to(const constantPoolHandle& from_cp, int from_cpi, const constantPoolHandle& to_cp, int to_cpi);\n@@ -931,0 +931,4 @@\n+  \/\/ ResolvedFieldEntry getters\n+  inline ResolvedFieldEntry* resolved_field_entry_at(int field_index);\n+  inline int resolved_field_entries_length() const;\n+\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":195,"deletions":191,"binary":false,"changes":386,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -45,0 +46,8 @@\n+inline ResolvedFieldEntry* ConstantPool::resolved_field_entry_at(int field_index) {\n+    return cache()->resolved_field_entry_at(field_index);\n+}\n+\n+inline int ConstantPool::resolved_field_entries_length() const {\n+    return cache()->resolved_field_entries_length();\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/constantPool.inline.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -649,0 +650,13 @@\n+template <class T>\n+static Array<T>* initialize_resolved_entries_array(ClassLoaderData* loader_data, GrowableArray<T> entries, TRAPS) {\n+  Array<T>* resolved_entries;\n+  if (entries.length() != 0) {\n+    resolved_entries = MetadataFactory::new_array<T>(loader_data, entries.length(), CHECK_NULL);\n+    for (int i = 0; i < entries.length(); i++) {\n+      resolved_entries->at_put(i, entries.at(i));\n+    }\n+    return resolved_entries;\n+  }\n+  return nullptr;\n+}\n+\n@@ -653,0 +667,1 @@\n+                                     const GrowableArray<ResolvedFieldEntry> field_entries,\n@@ -658,10 +673,3 @@\n-  \/\/ Initialize ResolvedIndyEntry array with available data\n-  Array<ResolvedIndyEntry>* resolved_indy_entries;\n-  if (indy_entries.length()) {\n-    resolved_indy_entries = MetadataFactory::new_array<ResolvedIndyEntry>(loader_data, indy_entries.length(), CHECK_NULL);\n-    for (int i = 0; i < indy_entries.length(); i++) {\n-      resolved_indy_entries->at_put(i, indy_entries.at(i));\n-    }\n-  } else {\n-    resolved_indy_entries = nullptr;\n-  }\n+  \/\/ Initialize resolved entry arrays with available data\n+  Array<ResolvedFieldEntry>* resolved_field_entries = initialize_resolved_entries_array(loader_data, field_entries, CHECK_NULL);\n+  Array<ResolvedIndyEntry>* resolved_indy_entries = initialize_resolved_entries_array(loader_data, indy_entries, CHECK_NULL);\n@@ -670,1 +678,1 @@\n-              ConstantPoolCache(length, index_map, invokedynamic_map, resolved_indy_entries);\n+              ConstantPoolCache(length, index_map, invokedynamic_map, resolved_indy_entries, resolved_field_entries);\n@@ -723,0 +731,5 @@\n+  if (_resolved_field_entries != nullptr) {\n+    for (int i = 0; i < _resolved_field_entries->length(); i++) {\n+      resolved_field_entry_at(i)->remove_unshareable_info();\n+    }\n+  }\n@@ -736,1 +749,1 @@\n-    if (_resolved_indy_entries)\n+    if (_resolved_indy_entries) {\n@@ -738,0 +751,6 @@\n+      _resolved_indy_entries = nullptr;\n+    }\n+    if (_resolved_field_entries) {\n+      MetadataFactory::free_array<ResolvedFieldEntry>(data, _resolved_field_entries);\n+      _resolved_field_entries = nullptr;\n+    }\n@@ -839,0 +858,3 @@\n+  if (_resolved_field_entries != nullptr) {\n+    it->push(&_resolved_field_entries, MetaspaceClosure::_writable);\n+  }\n@@ -933,8 +955,2 @@\n-  for (int i = 0; i < resolved_indy_entries_length(); i++) {\n-    ResolvedIndyEntry* indy_entry = resolved_indy_entry_at(i);\n-    indy_entry->print_on(st);\n-    if (indy_entry->has_appendix()) {\n-      st->print(\"  appendix: \");\n-      constant_pool()->resolved_reference_from_indy(i)->print_on(st);\n-    }\n-  }\n+  print_resolved_field_entries(st);\n+  print_resolved_indy_entries(st);\n@@ -951,3 +967,14 @@\n-void ConstantPoolCache::print_resolved_indy_entries(outputStream* st)   const {\n-  for (int i = 0; i < _resolved_indy_entries->length(); i++) {\n-    _resolved_indy_entries->at(i).print_on(st);\n+void ConstantPoolCache::print_resolved_field_entries(outputStream* st) const {\n+  for (int field_index = 0; field_index < resolved_field_entries_length(); field_index++) {\n+    resolved_field_entry_at(field_index)->print_on(st);\n+  }\n+}\n+\n+void ConstantPoolCache::print_resolved_indy_entries(outputStream* st) const {\n+  for (int indy_index = 0; indy_index < resolved_indy_entries_length(); indy_index++) {\n+    ResolvedIndyEntry* indy_entry = resolved_indy_entry_at(indy_index);\n+    indy_entry->print_on(st);\n+    if (indy_entry->has_appendix()) {\n+      st->print(\"  appendix: \");\n+      constant_pool()->resolved_reference_from_indy(indy_index)->print_on(st);\n+    }\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":50,"deletions":23,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -133,0 +133,1 @@\n+class ResolvedFieldEntry;\n@@ -419,1 +420,2 @@\n-  Array<ResolvedIndyEntry>* _resolved_indy_entries;\n+  Array<ResolvedIndyEntry>*  _resolved_indy_entries;\n+  Array<ResolvedFieldEntry>* _resolved_field_entries;\n@@ -430,1 +432,2 @@\n-                    Array<ResolvedIndyEntry>* indy_info);\n+                    Array<ResolvedIndyEntry>* indy_info,\n+                    Array<ResolvedFieldEntry>* field_entries);\n@@ -440,0 +443,1 @@\n+                                     const GrowableArray<ResolvedFieldEntry> field_entries,\n@@ -455,0 +459,5 @@\n+  Array<ResolvedFieldEntry>* resolved_field_entries()          { return _resolved_field_entries; }\n+  inline ResolvedFieldEntry* resolved_field_entry_at(int field_index) const;\n+  inline int resolved_field_entries_length() const;\n+  void print_resolved_field_entries(outputStream* st) const;\n+\n@@ -461,2 +470,3 @@\n-  static ByteSize resolved_references_offset()   { return byte_offset_of(ConstantPoolCache, _resolved_references); }\n-  static ByteSize invokedynamic_entries_offset() { return byte_offset_of(ConstantPoolCache, _resolved_indy_entries); }\n+  static ByteSize resolved_references_offset()     { return byte_offset_of(ConstantPoolCache, _resolved_references);    }\n+  static ByteSize invokedynamic_entries_offset()   { return byte_offset_of(ConstantPoolCache, _resolved_indy_entries);  }\n+  static ByteSize field_entries_offset()           { return byte_offset_of(ConstantPoolCache, _resolved_field_entries); }\n","filename":"src\/hotspot\/share\/oops\/cpCache.hpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -91,1 +92,2 @@\n-                                            Array<ResolvedIndyEntry>* invokedynamic_info) :\n+                                            Array<ResolvedIndyEntry>* invokedynamic_info,\n+                                            Array<ResolvedFieldEntry>* field_entries) :\n@@ -95,1 +97,2 @@\n-                                                  _resolved_indy_entries(invokedynamic_info) {\n+                                                  _resolved_indy_entries(invokedynamic_info),\n+                                                  _resolved_field_entries(field_entries) {\n@@ -110,0 +113,8 @@\n+inline ResolvedFieldEntry* ConstantPoolCache::resolved_field_entry_at(int field_index) const {\n+  return _resolved_field_entries->adr_at(field_index);\n+}\n+\n+inline int ConstantPoolCache::resolved_field_entries_length() const {\n+  return _resolved_field_entries->length();\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/cpCache.inline.hpp","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-Klass* FlatArrayKlass::array_klass(int n, TRAPS) {\n+ArrayKlass* FlatArrayKlass::array_klass(int n, TRAPS) {\n@@ -362,2 +362,1 @@\n-        Klass* k = ObjArrayKlass::allocate_objArray_klass(class_loader_data(), dim + 1, this, false, true, CHECK_NULL);\n-        ObjArrayKlass* ak = ObjArrayKlass::cast(k);\n+        ObjArrayKlass* ak = ObjArrayKlass::allocate_objArray_klass(class_loader_data(), dim + 1, this, false, true, CHECK_NULL);\n@@ -377,1 +376,1 @@\n-Klass* FlatArrayKlass::array_klass_or_null(int n) {\n+ArrayKlass* FlatArrayKlass::array_klass_or_null(int n) {\n@@ -392,1 +391,1 @@\n-Klass* FlatArrayKlass::array_klass(TRAPS) {\n+ArrayKlass* FlatArrayKlass::array_klass(TRAPS) {\n@@ -396,1 +395,1 @@\n-Klass* FlatArrayKlass::array_klass_or_null() {\n+ArrayKlass* FlatArrayKlass::array_klass_or_null() {\n","filename":"src\/hotspot\/share\/oops\/flatArrayKlass.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-  virtual Klass* array_klass(int n, TRAPS);\n-  virtual Klass* array_klass_or_null(int n);\n+  virtual ArrayKlass* array_klass(int n, TRAPS);\n+  virtual ArrayKlass* array_klass_or_null(int n);\n@@ -55,2 +55,2 @@\n-  virtual Klass* array_klass(TRAPS);\n-  virtual Klass* array_klass_or_null();\n+  virtual ArrayKlass* array_klass(TRAPS);\n+  virtual ArrayKlass* array_klass_or_null();\n","filename":"src\/hotspot\/share\/oops\/flatArrayKlass.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1389,1 +1389,1 @@\n-    case Bytecodes::_withfield:        do_withfield(itr->get_index_u2_cpcache(), itr->bci(), itr->code()); break;\n+    case Bytecodes::_withfield:        do_withfield(itr->get_index_u2(), itr->bci(), itr->code()); break;\n@@ -1604,4 +1604,12 @@\n-    case Bytecodes::_getstatic:         do_field(true,  true,  itr->get_index_u2_cpcache(), itr->bci(), itr->code()); break;\n-    case Bytecodes::_putstatic:         do_field(false, true,  itr->get_index_u2_cpcache(), itr->bci(), itr->code()); break;\n-    case Bytecodes::_getfield:          do_field(true,  false, itr->get_index_u2_cpcache(), itr->bci(), itr->code()); break;\n-    case Bytecodes::_putfield:          do_field(false, false, itr->get_index_u2_cpcache(), itr->bci(), itr->code()); break;\n+    case Bytecodes::_getstatic:\n+      do_field(true,  true,  itr->get_index_u2(), itr->bci(), itr->code());\n+      break;\n+    case Bytecodes::_putstatic:\n+      do_field(false,  true,  itr->get_index_u2(), itr->bci(), itr->code());\n+      break;\n+    case Bytecodes::_getfield:\n+      do_field(true,  false,  itr->get_index_u2(), itr->bci(), itr->code());\n+      break;\n+    case Bytecodes::_putfield:\n+      do_field(false,  false,  itr->get_index_u2(), itr->bci(), itr->code());\n+      break;\n","filename":"src\/hotspot\/share\/oops\/generateOopMap.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1617,1 +1617,1 @@\n-  Klass* ak = array_klass(n, CHECK_NULL);\n+  ArrayKlass* ak = array_klass(n, CHECK_NULL);\n@@ -1681,1 +1681,1 @@\n-Klass* InstanceKlass::array_klass(int n, TRAPS) {\n+ArrayKlass* InstanceKlass::array_klass(int n, TRAPS) {\n@@ -1704,1 +1704,1 @@\n-Klass* InstanceKlass::array_klass_or_null(int n) {\n+ArrayKlass* InstanceKlass::array_klass_or_null(int n) {\n@@ -1714,1 +1714,1 @@\n-Klass* InstanceKlass::array_klass(TRAPS) {\n+ArrayKlass* InstanceKlass::array_klass(TRAPS) {\n@@ -1718,1 +1718,1 @@\n-Klass* InstanceKlass::array_klass_or_null() {\n+ArrayKlass* InstanceKlass::array_klass_or_null() {\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -404,0 +404,1 @@\n+  void set_array_klasses(ArrayKlass* k) { _array_klasses = k; }\n@@ -1156,2 +1157,2 @@\n-  virtual Klass* array_klass(int n, TRAPS);\n-  virtual Klass* array_klass_or_null(int n);\n+  virtual ArrayKlass* array_klass(int n, TRAPS);\n+  virtual ArrayKlass* array_klass_or_null(int n);\n@@ -1160,2 +1161,2 @@\n-  virtual Klass* array_klass(TRAPS);\n-  virtual Klass* array_klass_or_null();\n+  virtual ArrayKlass* array_klass(TRAPS);\n+  virtual ArrayKlass* array_klass_or_null();\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -564,1 +564,1 @@\n-  virtual Klass* array_klass(int rank, TRAPS) = 0;\n+  virtual ArrayKlass* array_klass(int rank, TRAPS) = 0;\n@@ -567,1 +567,1 @@\n-  virtual Klass* array_klass(TRAPS) = 0;\n+  virtual ArrayKlass* array_klass(TRAPS) = 0;\n@@ -570,2 +570,2 @@\n-  virtual Klass* array_klass_or_null(int rank) = 0;\n-  virtual Klass* array_klass_or_null() = 0;\n+  virtual ArrayKlass* array_klass_or_null(int rank) = 0;\n+  virtual ArrayKlass* array_klass_or_null() = 0;\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-  Klass* ld_klass = lower_dimension();\n+  ArrayKlass* ld_klass = lower_dimension();\n@@ -222,2 +222,1 @@\n-      ArrayKlass* ak = ArrayKlass::cast(ld_klass);\n-      oop sub_array = ak->multi_allocate(rank-1, &sizes[1], CHECK_NULL);\n+      oop sub_array = ld_klass->multi_allocate(rank-1, &sizes[1], CHECK_NULL);\n@@ -352,1 +351,2 @@\n-Klass* ObjArrayKlass::array_klass(int n, TRAPS) {\n+ArrayKlass* ObjArrayKlass::array_klass(int n, TRAPS) {\n+\n@@ -369,1 +369,1 @@\n-        Klass* k = ObjArrayKlass::allocate_objArray_klass(class_loader_data(), dim + 1, this,\n+        ObjArrayKlass* ak = ObjArrayKlass::allocate_objArray_klass(class_loader_data(), dim + 1, this,\n@@ -371,1 +371,0 @@\n-        ObjArrayKlass* ak = ObjArrayKlass::cast(k);\n@@ -380,1 +379,1 @@\n-  ObjArrayKlass *ak = ObjArrayKlass::cast(higher_dimension());\n+  ObjArrayKlass *ak = higher_dimension();\n@@ -385,1 +384,1 @@\n-Klass* ObjArrayKlass::array_klass_or_null(int n) {\n+ArrayKlass* ObjArrayKlass::array_klass_or_null(int n) {\n@@ -396,1 +395,1 @@\n-  ObjArrayKlass *ak = ObjArrayKlass::cast(higher_dimension());\n+  ObjArrayKlass *ak = higher_dimension();\n@@ -400,1 +399,1 @@\n-Klass* ObjArrayKlass::array_klass(TRAPS) {\n+ArrayKlass* ObjArrayKlass::array_klass(TRAPS) {\n@@ -404,1 +403,1 @@\n-Klass* ObjArrayKlass::array_klass_or_null() {\n+ArrayKlass* ObjArrayKlass::array_klass_or_null() {\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -92,2 +92,2 @@\n-  virtual Klass* array_klass(int n, TRAPS);\n-  virtual Klass* array_klass_or_null(int n);\n+  virtual ArrayKlass* array_klass(int n, TRAPS);\n+  virtual ArrayKlass* array_klass_or_null(int n);\n@@ -96,2 +96,2 @@\n-  virtual Klass* array_klass(TRAPS);\n-  virtual Klass* array_klass_or_null();\n+  virtual ArrayKlass* array_klass(TRAPS);\n+  virtual ArrayKlass* array_klass_or_null();\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"resolvedFieldEntry.hpp\"\n+\n+void ResolvedFieldEntry::print_on(outputStream* st) const {\n+  st->print_cr(\"Field Entry:\");\n+\n+  if (field_holder() != nullptr) {\n+    st->print_cr(\" - Holder: \" INTPTR_FORMAT \" %s\", p2i(field_holder()), field_holder()->external_name());\n+  } else {\n+    st->print_cr(\"- Holder: null\");\n+  }\n+  st->print_cr(\" - Offset: %d\", field_offset());\n+  st->print_cr(\" - Field Index: %d\", field_index());\n+  st->print_cr(\" - CP Index: %d\", constant_pool_index());\n+  st->print_cr(\" - TOS: %s\", type2name(as_BasicType((TosState)tos_state())));\n+  st->print_cr(\" - Is Final: %d\", is_final());\n+  st->print_cr(\" - Is Volatile: %d\", is_volatile());\n+  st->print_cr(\" - Is Flat: %d\", is_flat());\n+  st->print_cr(\" - Is Null Free Inline Type: %d\", is_null_free_inline_type());\n+  st->print_cr(\" - Get Bytecode: %s\", Bytecodes::name((Bytecodes::Code)get_code()));\n+  st->print_cr(\" - Put Bytecode: %s\", Bytecodes::name((Bytecodes::Code)put_code()));\n+}\n+\n+void ResolvedFieldEntry::remove_unshareable_info() {\n+  u2 saved_cpool_index = _cpool_index;\n+  memset(this, 0, sizeof(*this));\n+  _cpool_index = saved_cpool_index;\n+}\n","filename":"src\/hotspot\/share\/oops\/resolvedFieldEntry.cpp","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_OOPS_RESOLVEDFIELDENTRY_HPP\n+#define SHARE_OOPS_RESOLVEDFIELDENTRY_HPP\n+\n+#include \"interpreter\/bytecodes.hpp\"\n+#include \"oops\/instanceKlass.hpp\"\n+#include \"runtime\/atomic.hpp\"\n+#include \"utilities\/sizes.hpp\"\n+\n+\/\/ ResolvedFieldEntry contains the resolution information for field related bytecodes like\n+\/\/ like getfield, putfield, getstatic, and putstatic. A member of this class can be initialized\n+\/\/ with the constant pool index associated with the bytecode before any resolution is done, where\n+\/\/ \"resolution\" refers to populating the getcode and putcode fields and other relevant information.\n+\/\/ The field's type (TOS), offset, holder klass, and index within that class can all be acquired\n+\/\/ together and are used to populate this structure. These entries are contained\n+\/\/ within the ConstantPoolCache and are accessed with indices added to the invokedynamic bytecode after\n+\/\/ rewriting.\n+\n+\/\/ Field bytecodes start with a constant pool index as their operate, which is then rewritten to\n+\/\/ a \"field index\", which is an index into the array of ResolvedFieldEntry.\n+\n+\/\/class InstanceKlass;\n+class ResolvedFieldEntry {\n+  friend class VMStructs;\n+\n+  InstanceKlass* _field_holder; \/\/ Field holder klass\n+  int _field_offset;            \/\/ Field offset in bytes\n+  u2 _field_index;              \/\/ Index into field information in holder InstanceKlass\n+  u2 _cpool_index;              \/\/ Constant pool index\n+  u1 _tos_state;                      \/\/ TOS state\n+  u1 _flags;                    \/\/ Flags: [0000|is_null_free_inline_type|is_flat|is_final|is_volatile]\n+  u1 _get_code, _put_code;      \/\/ Get and Put bytecodes of the field\n+\n+public:\n+  ResolvedFieldEntry(u2 cpi) :\n+    _field_holder(nullptr),\n+    _field_offset(0),\n+    _field_index(0),\n+    _cpool_index(cpi),\n+    _tos_state(0),\n+    _flags(0),\n+    _get_code(0),\n+    _put_code(0) {}\n+  ResolvedFieldEntry() :\n+    ResolvedFieldEntry(0) {}\n+\n+  \/\/ Bit shift to get flags\n+  \/\/ Note: Only two flags exists at the moment but more could be added\n+  enum {\n+      is_volatile_shift     = 0,\n+      is_final_shift        = 1, \/\/ unused\n+      is_flat_shift         = 2,\n+      is_null_free_inline_type_shift = 3,\n+  };\n+\n+  \/\/ Getters\n+  InstanceKlass* field_holder() const { return _field_holder; }\n+  int field_offset()            const { return _field_offset; }\n+  u2 field_index()              const { return _field_index;  }\n+  u2 constant_pool_index()      const { return _cpool_index;  }\n+  u1 tos_state()                const { return _tos_state;    }\n+  u1 get_code()                 const { return Atomic::load_acquire(&_get_code);      }\n+  u1 put_code()                 const { return Atomic::load_acquire(&_put_code);      }\n+  bool is_final()               const { return (_flags & (1 << is_final_shift))    != 0; }\n+  bool is_volatile ()           const { return (_flags & (1 << is_volatile_shift)) != 0; }\n+  bool is_flat()                const { return (_flags & (1 << is_flat_shift))     != 0; }\n+  bool is_null_free_inline_type() const { return (_flags & (1 << is_null_free_inline_type_shift)) != 0; }\n+  bool is_resolved(Bytecodes::Code code) const {\n+    switch(code) {\n+    case Bytecodes::_getstatic:\n+    case Bytecodes::_getfield:\n+      return (get_code() == code);\n+    case Bytecodes::_putstatic:\n+    case Bytecodes::_putfield:\n+    case Bytecodes::_withfield:\n+      return (put_code() == code);\n+    default:\n+      ShouldNotReachHere();\n+      return false;\n+    }\n+  }\n+\n+  \/\/ Printing\n+  void print_on(outputStream* st) const;\n+\n+  void set_flags(bool is_final, bool is_volatile, bool is_flat, bool is_null_free_inline_type) {\n+    u1 new_flags = (static_cast<u1>(is_final) << static_cast<u1>(is_final_shift)) | static_cast<u1>(is_volatile) |\n+      (static_cast<u1>(is_flat) << static_cast<u1>(is_flat_shift)) |\n+      (static_cast<u1>(is_null_free_inline_type) << static_cast<u1>(is_null_free_inline_type_shift));\n+    _flags = new_flags;\n+  }\n+\n+  inline void set_bytecode(u1* code, u1 new_code) {\n+  #ifdef ASSERT\n+    \/\/ Read once.\n+    volatile Bytecodes::Code c = (Bytecodes::Code)*code;\n+    assert(c == 0 || c == new_code || new_code == 0, \"update must be consistent\");\n+  #endif\n+    Atomic::release_store(code, new_code);\n+  }\n+\n+  \/\/ Populate the strucutre with resolution information\n+  void fill_in(InstanceKlass* klass, intx offset, int index, int tos_state, u1 b1, u1 b2) {\n+    _field_holder = klass;\n+    _field_offset = offset;\n+    _field_index = index;\n+    _tos_state = tos_state;\n+\n+    \/\/ These must be set after the other fields\n+    set_bytecode(&_get_code, b1);\n+    set_bytecode(&_put_code, b2);\n+  }\n+\n+  \/\/ CDS\n+  void remove_unshareable_info();\n+\n+  \/\/ Offsets\n+  static ByteSize field_holder_offset() { return byte_offset_of(ResolvedFieldEntry, _field_holder); }\n+  static ByteSize field_offset_offset() { return byte_offset_of(ResolvedFieldEntry, _field_offset); }\n+  static ByteSize field_index_offset()  { return byte_offset_of(ResolvedFieldEntry, _field_index);  }\n+  static ByteSize get_code_offset()     { return byte_offset_of(ResolvedFieldEntry, _get_code);     }\n+  static ByteSize put_code_offset()     { return byte_offset_of(ResolvedFieldEntry, _put_code);     }\n+  static ByteSize type_offset()         { return byte_offset_of(ResolvedFieldEntry, _tos_state);    }\n+  static ByteSize flags_offset()        { return byte_offset_of(ResolvedFieldEntry, _flags);        }\n+\n+};\n+\n+#endif \/\/SHARE_OOPS_RESOLVEDFIELDENTRY_HPP\n","filename":"src\/hotspot\/share\/oops\/resolvedFieldEntry.hpp","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -173,1 +173,1 @@\n-Klass* TypeArrayKlass::array_klass(int n, TRAPS) {\n+ArrayKlass* TypeArrayKlass::array_klass(int n, TRAPS) {\n@@ -200,1 +200,1 @@\n-  ObjArrayKlass* h_ak = ObjArrayKlass::cast(higher_dimension());\n+  ObjArrayKlass* h_ak = higher_dimension();\n@@ -206,1 +206,1 @@\n-Klass* TypeArrayKlass::array_klass_or_null(int n) {\n+ArrayKlass* TypeArrayKlass::array_klass_or_null(int n) {\n@@ -217,1 +217,1 @@\n-  ObjArrayKlass* h_ak = ObjArrayKlass::cast(higher_dimension());\n+  ObjArrayKlass* h_ak = higher_dimension();\n@@ -221,1 +221,1 @@\n-Klass* TypeArrayKlass::array_klass(TRAPS) {\n+ArrayKlass* TypeArrayKlass::array_klass(TRAPS) {\n@@ -225,1 +225,1 @@\n-Klass* TypeArrayKlass::array_klass_or_null() {\n+ArrayKlass* TypeArrayKlass::array_klass_or_null() {\n","filename":"src\/hotspot\/share\/oops\/typeArrayKlass.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -98,2 +98,2 @@\n-  virtual Klass* array_klass(int n, TRAPS);\n-  virtual Klass* array_klass_or_null(int n);\n+  virtual ArrayKlass* array_klass(int n, TRAPS);\n+  virtual ArrayKlass* array_klass_or_null(int n);\n@@ -102,2 +102,2 @@\n-  virtual Klass* array_klass(TRAPS);\n-  virtual Klass* array_klass_or_null();\n+  virtual ArrayKlass* array_klass(TRAPS);\n+  virtual ArrayKlass* array_klass_or_null();\n","filename":"src\/hotspot\/share\/oops\/typeArrayKlass.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-  bool do_reduce_allocation_merges = ReduceAllocationMerges;\n+  bool do_reduce_allocation_merges = ReduceAllocationMerges && EliminateAllocations;\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2815,1 +2815,1 @@\n-        igvn.set_delay_transform(false);\n+        if (failing()) return;\n@@ -2817,0 +2817,1 @@\n+        igvn.set_delay_transform(false);\n@@ -4855,1 +4856,4 @@\n-    _compile(nullptr), _log(nullptr), _phase_name(name), _dolog(CITimeVerbose)\n+    _compile(Compile::current()),\n+    _log(nullptr),\n+    _phase_name(name),\n+    _dolog(CITimeVerbose)\n@@ -4857,0 +4861,1 @@\n+  assert(_compile != nullptr, \"sanity check\");\n@@ -4858,1 +4863,0 @@\n-    _compile = Compile::current();\n@@ -4876,1 +4880,1 @@\n-    Compile::current()->print_missing_nodes();\n+    _compile->print_missing_nodes();\n@@ -5420,1 +5424,10 @@\n-          assert(in_hash, \"node should be in igvn hash table\");\n+#ifdef ASSERT\n+          if (!in_hash) {\n+            tty->print_cr(\"current graph:\");\n+            n->dump_bfs(MaxNodeLimit, nullptr, \"S$\");\n+            tty->cr();\n+            tty->print_cr(\"erroneous node:\");\n+            n->dump();\n+            assert(false, \"node should be in igvn hash table\");\n+          }\n+#endif\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  _nodes(C->comp_arena(), ReduceAllocationMerges ? C->unique()*1.10 : C->unique(), C->unique(), nullptr),\n+  _nodes(C->comp_arena(), C->do_reduce_allocation_merges() ? C->unique()*1.10 : C->unique(), C->unique(), nullptr),\n@@ -412,1 +412,1 @@\n-  if (ReduceAllocationMerges && reducible_merges.size() > 0) {\n+  if (reducible_merges.size() > 0) {\n@@ -516,2 +516,3 @@\n-  \/\/ method we might have disabled the compilation and be retrying\n-  \/\/ with RAM disabled.\n+  \/\/ method we might have disabled the compilation and be retrying with RAM\n+  \/\/ disabled.\n+  \/\/ If EliminateAllocations is False, there is no point in reducing merges.\n@@ -736,1 +737,6 @@\n-      assert(false, \"Unexpected use of reducible Phi.\");\n+#ifdef ASSERT\n+      ophi->dump(-3);\n+      assert(false, \"Unexpected user of reducible Phi %d -> %d:%s\", ophi->_idx, use->_idx, use->Name());\n+#endif\n+      _compile->record_failure(C2Compiler::retry_no_reduce_allocation_merges());\n+      return;\n@@ -746,1 +752,1 @@\n-  Unique_Node_List ideal_nodes;\n+  if (!C->do_reduce_allocation_merges()) return;\n@@ -748,0 +754,1 @@\n+  Unique_Node_List ideal_nodes;\n@@ -2344,1 +2351,1 @@\n-        if (ReduceAllocationMerges && use_n->is_Phi() && can_reduce_phi(use_n->as_Phi())) {\n+        if (use_n->is_Phi() && can_reduce_phi(use_n->as_Phi())) {\n@@ -3972,0 +3979,14 @@\n+#ifdef ASSERT\n+  \/\/ At this point reducible Phis shouldn't have AddP users anymore; only SafePoints.\n+  for (uint i = 0; i < reducible_merges.size(); i++) {\n+    Node* phi = reducible_merges.at(i);\n+    for (DUIterator_Fast jmax, j = phi->fast_outs(jmax); j < jmax; j++) {\n+      Node* use = phi->fast_out(j);\n+      if (!use->is_SafePoint()) {\n+        phi->dump(-3);\n+        assert(false, \"Unexpected user of reducible Phi -> %s\", use->Name());\n+      }\n+    }\n+  }\n+#endif\n+\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":28,"deletions":7,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -1873,1 +1873,1 @@\n-                if (prev != nullptr) {\n+                if (prev != nullptr && get_ctrl(prev) == x_ctrl) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1030,1 +1030,7 @@\n-      case Bytecodes::_withfield       :  \/\/ fall through\n+      case Bytecodes::_withfield       : {\/\/ fall through\n+        int field_index = Bytes::get_native_u2(bcp+1);\n+        u2 pool_index = mh->constants()->resolved_field_entry_at(field_index)->constant_pool_index();\n+        assert(pool_index < mh->constants()->length(), \"sanity check\");\n+        Bytes::put_Java_u2((address)(p+1), pool_index);     \/\/ java byte ordering\n+        break;\n+      }\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -91,1 +91,12 @@\n-  case Bytecodes::_putfield        : \/\/ fall through\n+  case Bytecodes::_putfield        : {\n+    int index_old = s_old->get_index_u2();\n+    int index_new = s_new->get_index_u2();\n+    \/\/ Check if the names of classes, field\/method names and signatures at these indexes\n+    \/\/ are the same. Indices which are really into constantpool cache (rather than constant\n+    \/\/ pool itself) are accepted by the constantpool query routines below.\n+    if ((old_cp->klass_ref_at_noresolve(index_old, c_old) != new_cp->klass_ref_at_noresolve(index_new, c_old)) ||\n+        (old_cp->name_ref_at(index_old, c_old) != new_cp->name_ref_at(index_new, c_old)) ||\n+        (old_cp->signature_ref_at(index_old, c_old) != new_cp->signature_ref_at(index_new, c_old)))\n+      return false;\n+    break;\n+  }\n","filename":"src\/hotspot\/share\/prims\/methodComparator.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -334,3 +334,3 @@\n-        intptr_t ret = st->get_int(); \/\/ read full 64-bit slot\n-        type = T_LONG;                \/\/ treat as long\n-        index--;                      \/\/ undo +1 in StackValueCollection::long_at\n+        intptr_t ret = st->get_intptr(); \/\/ read full 64-bit slot\n+        type = T_LONG;                   \/\/ treat as long\n+        index--;                         \/\/ undo +1 in StackValueCollection::long_at\n","filename":"src\/hotspot\/share\/prims\/stackwalk.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1985,0 +1985,18 @@\n+WB_ENTRY(jint, WB_getFieldEntriesLength(JNIEnv* env, jobject wb, jclass klass))\n+  InstanceKlass* ik = InstanceKlass::cast(java_lang_Class::as_Klass(JNIHandles::resolve(klass)));\n+  ConstantPool* cp = ik->constants();\n+  if (cp->cache() == nullptr) {\n+    return -1;\n+  }\n+  return cp->resolved_field_entries_length();\n+WB_END\n+\n+WB_ENTRY(jint, WB_getFieldCPIndex(JNIEnv* env, jobject wb, jclass klass, jint index))\n+  InstanceKlass* ik = InstanceKlass::cast(java_lang_Class::as_Klass(JNIHandles::resolve(klass)));\n+  ConstantPool* cp = ik->constants();\n+  if (cp->cache() == NULL) {\n+      return -1;\n+  }\n+  return cp->resolved_field_entry_at(index)->constant_pool_index();\n+WB_END\n+\n@@ -2885,0 +2903,2 @@\n+  {CC\"getFieldEntriesLength0\", CC\"(Ljava\/lang\/Class;)I\",  (void*)&WB_getFieldEntriesLength},\n+  {CC\"getFieldCPIndex0\",    CC\"(Ljava\/lang\/Class;I)I\", (void*)&WB_getFieldCPIndex},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -4142,1 +4142,1 @@\n-#ifdef COMPILER2\n+#if COMPILER2_OR_JVMCI\n@@ -4163,1 +4163,1 @@\n-#endif \/\/ COMPILER2\n+#endif \/\/ COMPILER2_OR_JVMCI\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1220,6 +1220,6 @@\n-       case T_INT:     return IntegerBoxCache::singleton(THREAD)->lookup_raw(value->get_int(), cache_init_error);\n-       case T_CHAR:    return CharacterBoxCache::singleton(THREAD)->lookup_raw(value->get_int(), cache_init_error);\n-       case T_SHORT:   return ShortBoxCache::singleton(THREAD)->lookup_raw(value->get_int(), cache_init_error);\n-       case T_BYTE:    return ByteBoxCache::singleton(THREAD)->lookup_raw(value->get_int(), cache_init_error);\n-       case T_BOOLEAN: return BooleanBoxCache::singleton(THREAD)->lookup_raw(value->get_int(), cache_init_error);\n-       case T_LONG:    return LongBoxCache::singleton(THREAD)->lookup_raw(value->get_int(), cache_init_error);\n+       case T_INT:     return IntegerBoxCache::singleton(THREAD)->lookup_raw(value->get_intptr(), cache_init_error);\n+       case T_CHAR:    return CharacterBoxCache::singleton(THREAD)->lookup_raw(value->get_intptr(), cache_init_error);\n+       case T_SHORT:   return ShortBoxCache::singleton(THREAD)->lookup_raw(value->get_intptr(), cache_init_error);\n+       case T_BYTE:    return ByteBoxCache::singleton(THREAD)->lookup_raw(value->get_intptr(), cache_init_error);\n+       case T_BOOLEAN: return BooleanBoxCache::singleton(THREAD)->lookup_raw(value->get_intptr(), cache_init_error);\n+       case T_LONG:    return LongBoxCache::singleton(THREAD)->lookup_raw(value->get_intptr(), cache_init_error);\n@@ -1251,2 +1251,1 @@\n-      intptr_t init_value = StackValue::create_stack_value(fr, reg_map, sv->is_init())->get_int();\n-      jint is_init = (jint)*((jint*)&init_value);\n+      jint is_init = StackValue::create_stack_value(fr, reg_map, sv->is_init())->get_jint();\n@@ -1279,1 +1278,1 @@\n-#ifdef COMPILER2\n+#if COMPILER2_OR_JVMCI\n@@ -1287,1 +1286,1 @@\n-#endif \/\/ COMPILER2\n+#endif \/\/ COMPILER2_OR_JVMCI\n@@ -1376,1 +1375,1 @@\n-static void byte_array_put(typeArrayOop obj, intptr_t val, int index, int byte_count) {\n+static void byte_array_put(typeArrayOop obj, StackValue* value, int index, int byte_count) {\n@@ -1379,1 +1378,1 @@\n-      obj->byte_at_put(index, (jbyte) *((jint *) &val));\n+      obj->byte_at_put(index, (jbyte) value->get_jint());\n@@ -1382,1 +1381,1 @@\n-      *((jshort *) check_alignment_get_addr(obj, index, 2)) = (jshort) *((jint *) &val);\n+      *((jshort *) check_alignment_get_addr(obj, index, 2)) = (jshort) value->get_jint();\n@@ -1385,1 +1384,1 @@\n-      *((jint *) check_alignment_get_addr(obj, index, 4)) = (jint) *((jint *) &val);\n+      *((jint *) check_alignment_get_addr(obj, index, 4)) = value->get_jint();\n@@ -1388,1 +1387,1 @@\n-      *((jlong *) check_alignment_get_addr(obj, index, 8)) = (jlong) *((jlong *) &val);\n+      *((jlong *) check_alignment_get_addr(obj, index, 8)) = (jlong) value->get_intptr();\n@@ -1400,1 +1399,0 @@\n-  intptr_t val;\n@@ -1410,1 +1408,1 @@\n-      jlong res = (jlong)low->get_int();\n+      jlong res = (jlong)low->get_intptr();\n@@ -1412,1 +1410,1 @@\n-      jlong res = jlong_from((jint)value->get_int(), (jint)low->get_int());\n+      jlong res = jlong_from(value->get_jint(), low->get_jint());\n@@ -1418,1 +1416,0 @@\n-    \/\/ Have to cast to INT (32 bits) pointer to avoid little\/big-endian problem.\n@@ -1439,1 +1436,1 @@\n-        jlong res = (jlong)low->get_int();\n+        jlong res = (jlong)low->get_intptr();\n@@ -1441,1 +1438,1 @@\n-        jlong res = jlong_from((jint)value->get_int(), (jint)low->get_int());\n+        jlong res = jlong_from(value->get_jint(), low->get_jint());\n@@ -1443,2 +1440,2 @@\n-        obj->int_at_put(index, (jint)*((jint*)&res));\n-        obj->int_at_put(++index, (jint)*(((jint*)&res) + 1));\n+        obj->int_at_put(index, *(jint*)&res);\n+        obj->int_at_put(++index, *((jint*)&res + 1));\n@@ -1446,2 +1443,1 @@\n-        val = value->get_int();\n-        obj->int_at_put(index, (jint)*((jint*)&val));\n+        obj->int_at_put(index, value->get_jint());\n@@ -1454,2 +1450,1 @@\n-      val = value->get_int();\n-      obj->short_at_put(index, (jshort)*((jint*)&val));\n+      obj->short_at_put(index, (jshort)value->get_jint());\n@@ -1460,2 +1455,1 @@\n-      val = value->get_int();\n-      obj->char_at_put(index, (jchar)*((jint*)&val));\n+      obj->char_at_put(index, (jchar)value->get_jint());\n@@ -1466,2 +1460,0 @@\n-      \/\/ The value we get is erased as a regular int. We will need to find its actual byte count 'by hand'.\n-      val = value->get_int();\n@@ -1469,0 +1461,1 @@\n+      \/\/ The value we get is erased as a regular int. We will need to find its actual byte count 'by hand'.\n@@ -1470,1 +1463,1 @@\n-      byte_array_put(obj, val, index, byte_count);\n+      byte_array_put(obj, value, index, byte_count);\n@@ -1477,1 +1470,1 @@\n-      obj->byte_at_put(index, (jbyte)*((jint*)&val));\n+      obj->byte_at_put(index, (jbyte)value->get_jint());\n@@ -1484,2 +1477,1 @@\n-      val = value->get_int();\n-      obj->bool_at_put(index, (jboolean)*((jint*)&val));\n+      obj->bool_at_put(index, (jboolean)value->get_jint());\n@@ -1557,1 +1549,0 @@\n-    intptr_t val;\n@@ -1567,1 +1558,0 @@\n-      \/\/ Have to cast to INT (32 bits) pointer to avoid little\/big-endian problem.\n@@ -1591,2 +1581,1 @@\n-          val = value->get_int();\n-          obj->int_field_put(offset, (jint)*((jint*)&val));\n+          obj->int_field_put(offset, value->get_jint());\n@@ -1602,1 +1591,1 @@\n-        jlong res = (jlong)low->get_int();\n+        jlong res = (jlong)low->get_intptr();\n@@ -1604,1 +1593,1 @@\n-        jlong res = jlong_from((jint)value->get_int(), (jint)low->get_int());\n+        jlong res = jlong_from(value->get_jint(), low->get_jint());\n@@ -1612,2 +1601,1 @@\n-        val = value->get_int();\n-        obj->short_field_put(offset, (jshort)*((jint*)&val));\n+        obj->short_field_put(offset, (jshort)value->get_jint());\n@@ -1618,2 +1606,1 @@\n-        val = value->get_int();\n-        obj->char_field_put(offset, (jchar)*((jint*)&val));\n+        obj->char_field_put(offset, (jchar)value->get_jint());\n@@ -1624,2 +1611,1 @@\n-        val = value->get_int();\n-        obj->byte_field_put(offset, (jbyte)*((jint*)&val));\n+        obj->byte_field_put(offset, (jbyte)value->get_jint());\n@@ -1630,2 +1616,1 @@\n-        val = value->get_int();\n-        obj->bool_field_put(offset, (jboolean)*((jint*)&val));\n+        obj->bool_field_put(offset, (jboolean)value->get_jint());\n@@ -1680,1 +1665,1 @@\n-#ifdef COMPILER2\n+#if COMPILER2_OR_JVMCI\n@@ -1700,1 +1685,1 @@\n-#endif \/* !COMPILER2 *\/\n+#endif \/* !COMPILER2_OR_JVMCI *\/\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":36,"deletions":51,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -253,2 +253,1 @@\n-      intptr_t is_init_value = StackValue::create_stack_value(fr, reg_map, ov->is_init())->get_int();\n-      jint is_init = (jint)*((jint*)&is_init_value);\n+      jint is_init = StackValue::create_stack_value(fr, reg_map, ov->is_init())->get_jint();\n","filename":"src\/hotspot\/share\/runtime\/stackValue.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-  intptr_t get_int() const {\n+  intptr_t get_intptr() const {\n@@ -88,1 +88,1 @@\n-  intptr_t get_int(BasicType t) const {\n+  intptr_t get_intptr(BasicType t) const {\n@@ -93,1 +93,1 @@\n-  void set_int(intptr_t value) {\n+  void set_intptr(intptr_t value) {\n@@ -98,0 +98,12 @@\n+  \/\/ The jint value is always at offset 0 of the stack slot. On big endian platforms\n+  \/\/ this is the location of the high word therefore we cannot just cast to jint.\n+  jint get_jint() const {\n+    assert(type() == T_INT, \"type check\");\n+    return *(jint*)&_integer_value;\n+  }\n+\n+  void set_jint(jint value) {\n+    assert(type() == T_INT, \"type check\");\n+    *(jint*)&_integer_value = value;\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/stackValue.hpp","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -29,3 +29,1 @@\n-  intptr_t val =  at(slot)->get_int();\n-  jint ival = *((jint*) (&val));\n-  return ival;\n+  return at(slot)->get_jint();\n@@ -36,1 +34,1 @@\n-  return at(slot+1)->get_int();\n+  return at(slot+1)->get_intptr();\n@@ -44,2 +42,2 @@\n-  value.array[0] = at(slot+1)->get_int();\n-  value.array[1] = at(slot  )->get_int();\n+  value.array[0] = at(slot+1)->get_intptr();\n+  value.array[1] = at(slot  )->get_intptr();\n@@ -55,1 +53,1 @@\n-  intptr_t res = at(slot)->get_int();\n+  intptr_t res = at(slot)->get_intptr();\n@@ -61,1 +59,1 @@\n-  intptr_t res = at(slot+1)->get_int();\n+  intptr_t res = at(slot+1)->get_intptr();\n@@ -70,2 +68,2 @@\n-  value.array[0] = at(slot+1)->get_int();\n-  value.array[1] = at(slot  )->get_int();\n+  value.array[0] = at(slot+1)->get_intptr();\n+  value.array[1] = at(slot  )->get_intptr();\n@@ -77,3 +75,1 @@\n-  intptr_t val;\n-  *((jint*) (&val)) = value;\n-  at(slot)->set_int(val);\n+  at(slot)->set_jint(value);\n@@ -84,1 +80,1 @@\n-  at(slot+1)->set_int(value);\n+  at(slot+1)->set_intptr(value);\n@@ -93,2 +89,2 @@\n-  at(slot+1)->set_int(x.array[0]);\n-  at(slot+0)->set_int(x.array[1]);\n+  at(slot+1)->set_intptr(x.array[0]);\n+  at(slot+0)->set_intptr(x.array[1]);\n@@ -111,1 +107,1 @@\n-  at(slot)->set_int(val.jd);\n+  at(slot)->set_intptr(val.jd);\n@@ -113,1 +109,1 @@\n-  at(slot)->set_int(*(jint*)(&value));\n+  at(slot)->set_intptr(*(jint*)(&value));\n@@ -119,1 +115,1 @@\n-  at(slot+1)->set_int(*(intptr_t*)(&value));\n+  at(slot+1)->set_intptr(*(intptr_t*)(&value));\n@@ -128,2 +124,2 @@\n-  at(slot+1)->set_int(x.array[0]);\n-  at(slot+0)->set_int(x.array[1]);\n+  at(slot+1)->set_intptr(x.array[0]);\n+  at(slot+0)->set_intptr(x.array[1]);\n","filename":"src\/hotspot\/share\/runtime\/stackValueCollection.cpp","additions":17,"deletions":21,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -817,1 +817,0 @@\n-    ShouldNotReachHere();\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -456,1 +456,1 @@\n-      *addr = sv->get_int();\n+      *addr = sv->get_intptr();\n","filename":"src\/hotspot\/share\/runtime\/vframe.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-        _locals->add( new StackValue(value->get_int()));\n+        _locals->add( new StackValue(value->get_intptr()));\n@@ -163,1 +163,1 @@\n-        _expressions->add( new StackValue(value->get_int()));\n+        _expressions->add( new StackValue(value->get_intptr()));\n@@ -345,1 +345,1 @@\n-        *addr = value->get_int();\n+        *addr = value->get_intptr();\n@@ -353,1 +353,1 @@\n-        *addr = value->get_int(T_OBJECT);\n+        *addr = value->get_intptr(T_OBJECT);\n@@ -389,1 +389,1 @@\n-        *addr = value->get_int();\n+        *addr = value->get_intptr();\n@@ -397,1 +397,1 @@\n-        *addr = value->get_int(T_OBJECT);\n+        *addr = value->get_intptr(T_OBJECT);\n","filename":"src\/hotspot\/share\/runtime\/vframeArray.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -88,0 +88,1 @@\n+#include \"oops\/resolvedFieldEntry.hpp\"\n@@ -210,2 +211,2 @@\n-  volatile_nonstatic_field(ArrayKlass,         _higher_dimension,                             Klass*)                                \\\n-  volatile_nonstatic_field(ArrayKlass,         _lower_dimension,                              Klass*)                                \\\n+  volatile_nonstatic_field(ArrayKlass,         _higher_dimension,                             ObjArrayKlass*)                        \\\n+  volatile_nonstatic_field(ArrayKlass,         _lower_dimension,                              ArrayKlass*)                           \\\n@@ -228,0 +229,2 @@\n+  nonstatic_field(ConstantPoolCache,           _resolved_field_entries,                       Array<ResolvedFieldEntry>*)            \\\n+  nonstatic_field(ResolvedFieldEntry,          _cpool_index,                                  u2)                                    \\\n@@ -484,0 +487,2 @@\n+  nonstatic_field(Array<ResolvedFieldEntry>,   _length,                                       int)                                   \\\n+  nonstatic_field(Array<ResolvedFieldEntry>,   _data[0],                                      ResolvedFieldEntry)                    \\\n@@ -967,8 +972,9 @@\n-  nonstatic_field(Array<int>,                         _length,                                int)                                   \\\n-  unchecked_nonstatic_field(Array<int>,               _data,                                  sizeof(int))                           \\\n-  unchecked_nonstatic_field(Array<u1>,                _data,                                  sizeof(u1))                            \\\n-  unchecked_nonstatic_field(Array<u2>,                _data,                                  sizeof(u2))                            \\\n-  unchecked_nonstatic_field(Array<Method*>,           _data,                                  sizeof(Method*))                       \\\n-  unchecked_nonstatic_field(Array<Klass*>,            _data,                                  sizeof(Klass*))                        \\\n-  unchecked_nonstatic_field(Array<ResolvedIndyEntry>, _data,                                  sizeof(ResolvedIndyEntry))             \\\n-  unchecked_nonstatic_field(Array<Array<u1>*>,        _data,                                  sizeof(Array<u1>*))                    \\\n+  nonstatic_field(Array<int>,                          _length,                               int)                                   \\\n+  unchecked_nonstatic_field(Array<int>,                _data,                                 sizeof(int))                           \\\n+  unchecked_nonstatic_field(Array<u1>,                 _data,                                 sizeof(u1))                            \\\n+  unchecked_nonstatic_field(Array<u2>,                 _data,                                 sizeof(u2))                            \\\n+  unchecked_nonstatic_field(Array<Method*>,            _data,                                 sizeof(Method*))                       \\\n+  unchecked_nonstatic_field(Array<Klass*>,             _data,                                 sizeof(Klass*))                        \\\n+  unchecked_nonstatic_field(Array<ResolvedFieldEntry>, _data,                                 sizeof(ResolvedFieldEntry))            \\\n+  unchecked_nonstatic_field(Array<ResolvedIndyEntry>,  _data,                                 sizeof(ResolvedIndyEntry))             \\\n+  unchecked_nonstatic_field(Array<Array<u1>*>,         _data,                                 sizeof(Array<u1>*))                    \\\n@@ -1907,0 +1913,1 @@\n+            declare_type(Array<ResolvedFieldEntry>, MetaspaceObj)         \\\n@@ -1925,0 +1932,1 @@\n+  declare_toplevel_type(ResolvedFieldEntry)                               \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-  const char* scale_value = _scale.value();\n+  const char* scale_value = _scale.value() != nullptr ? _scale.value() : \"(null)\";\n","filename":"src\/hotspot\/share\/services\/nmtDCmd.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,1 +146,4 @@\n-  static const int table_size = 7919;\n+  \/\/ We chose 8191, as this is a Mersenne prime (2^x - 1), which for a random\n+  \/\/  polynomial modulo p = (2^x - 1) is uniformily distributed in [p], so each\n+  \/\/  bit has the same distribution.\n+  static const int table_size = 8191; \/\/ i.e. 8191==(2^13 - 1);\n@@ -153,5 +156,4 @@\n-  static unsigned calculate_hash(const void* p) {\n-    uintptr_t tmp = p2i(p);\n-    unsigned hash = (unsigned)tmp\n-                     LP64_ONLY( ^ (unsigned)(tmp >> 32));\n-    return hash;\n+  static uint64_t calculate_hash(const void* p) {\n+    \/\/ Keep hash function simple, the modulo\n+    \/\/ operation in index function will do the \"heavy lifting\".\n+    return (uint64_t)(p);\n@@ -161,1 +163,2 @@\n-    const unsigned hash = calculate_hash(p);\n+    const uint64_t hash = calculate_hash(p);\n+    \/\/ \"table_size\" is a Mersenne prime, so \"modulo\" is all we need here.\n","filename":"src\/hotspot\/share\/services\/nmtPreInit.hpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -43,1 +43,4 @@\n-  TriBool(bool value) : _value(((u1)value) | 2) {}\n+  TriBool(bool value) : _value(value) {\n+    \/\/ set to not-default in separate step to avoid conversion warnings\n+    _value |= 2;\n+  }\n@@ -47,1 +50,2 @@\n-    _value = ((u1)value) | 2;\n+    _value = value;\n+    _value |= 2; \/\/ set to not-default\n@@ -76,1 +80,2 @@\n-      _value = (u1)newval| 2;\n+      _value = newval;\n+      _value |= 2; \/\/ set to not-default\n","filename":"src\/hotspot\/share\/utilities\/tribool.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -352,1 +352,5 @@\n-                result = RSACore.rsa(paddingCopy, privateKey, true);\n+                if (paddingCopy != null) {\n+                    result = RSACore.rsa(paddingCopy, privateKey, true);\n+                } else {\n+                    throw new BadPaddingException(\"Padding error in signing\");\n+                }\n@@ -358,0 +362,4 @@\n+                if (result == null) {\n+                    throw new BadPaddingException\n+                            (\"Padding error in verification\");\n+                }\n@@ -361,1 +369,6 @@\n-                result = RSACore.rsa(paddingCopy, publicKey);\n+                if (paddingCopy != null) {\n+                    result = RSACore.rsa(paddingCopy, publicKey);\n+                } else {\n+                    throw new BadPaddingException\n+                            (\"Padding error in encryption\");\n+                }\n@@ -367,0 +380,4 @@\n+                if (result == null) {\n+                    throw new BadPaddingException\n+                            (\"Padding error in decryption\");\n+                }\n@@ -375,1 +392,1 @@\n-            if (paddingCopy != null             \/\/ will not happen\n+            if (paddingCopy != null\n@@ -377,1 +394,1 @@\n-                    && paddingCopy != result) { \/\/ DO NOT CLEAN, THIS IS RESULT!\n+                    && paddingCopy != result) { \/\/ DO NOT CLEAN, THIS IS RESULT\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/RSACipher.java","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.util.function.Supplier;\n@@ -37,0 +38,1 @@\n+import java.util.Map;\n@@ -46,1 +48,2 @@\n-import jdk.internal.access.SharedSecrets;\n+import jdk.internal.util.ReferencedKeySet;\n+import jdk.internal.util.ReferenceKey;\n@@ -231,1 +234,7 @@\n-    static final ConcurrentWeakInternSet<MethodType> internTable = new ConcurrentWeakInternSet<>();\n+    static final ReferencedKeySet<MethodType> internTable =\n+        ReferencedKeySet.create(false, true, new Supplier<>() {\n+            @Override\n+            public Map<ReferenceKey<MethodType>, ReferenceKey<MethodType>> get() {\n+                return new ConcurrentHashMap<>(512);\n+            }\n+        });\n@@ -409,1 +418,1 @@\n-        return internTable.add(mt);\n+        return internTable.intern(mt);\n@@ -887,4 +896,0 @@\n-    \/\/ This implementation may also return true if x is a WeakEntry containing\n-    \/\/ a method type that is equal to this. This is an internal implementation\n-    \/\/ detail to allow for faster method type lookups.\n-    \/\/ See ConcurrentWeakInternSet.WeakEntry#equals(Object)\n@@ -899,4 +904,0 @@\n-        if (x instanceof ConcurrentWeakInternSet.WeakEntry<?> e\n-                && e.get() instanceof MethodType mt) {\n-            return equals(mt);\n-        }\n@@ -1401,108 +1402,0 @@\n-\n-    \/**\n-     * Simple implementation of weak concurrent intern set.\n-     *\n-     * @param <T> interned type\n-     *\/\n-    private static class ConcurrentWeakInternSet<T> {\n-\n-        private final ConcurrentMap<WeakEntry<T>, WeakEntry<T>> map;\n-        private final ReferenceQueue<T> stale;\n-\n-        public ConcurrentWeakInternSet() {\n-            this.map = new ConcurrentHashMap<>(512);\n-            this.stale = SharedSecrets.getJavaLangRefAccess().newNativeReferenceQueue();\n-        }\n-\n-        \/**\n-         * Get the existing interned element.\n-         * This method returns null if no element is interned.\n-         *\n-         * @param elem element to look up\n-         * @return the interned element\n-         *\/\n-        public T get(T elem) {\n-            if (elem == null) throw new NullPointerException();\n-            expungeStaleElements();\n-\n-            WeakEntry<T> value = map.get(elem);\n-            if (value != null) {\n-                T res = value.get();\n-                if (res != null) {\n-                    return res;\n-                }\n-            }\n-            return null;\n-        }\n-\n-        \/**\n-         * Interns the element.\n-         * Always returns non-null element, matching the one in the intern set.\n-         * Under the race against another add(), it can return <i>different<\/i>\n-         * element, if another thread beats us to interning it.\n-         *\n-         * @param elem element to add\n-         * @return element that was actually added\n-         *\/\n-        public T add(T elem) {\n-            if (elem == null) throw new NullPointerException();\n-\n-            \/\/ Playing double race here, and so spinloop is required.\n-            \/\/ First race is with two concurrent updaters.\n-            \/\/ Second race is with GC purging weak ref under our feet.\n-            \/\/ Hopefully, we almost always end up with a single pass.\n-            T interned;\n-            WeakEntry<T> e = new WeakEntry<>(elem, stale);\n-            do {\n-                expungeStaleElements();\n-                WeakEntry<T> exist = map.putIfAbsent(e, e);\n-                interned = (exist == null) ? elem : exist.get();\n-            } while (interned == null);\n-            return interned;\n-        }\n-\n-        private void expungeStaleElements() {\n-            Reference<? extends T> reference;\n-            while ((reference = stale.poll()) != null) {\n-                map.remove(reference);\n-            }\n-        }\n-\n-        private static class WeakEntry<T> extends WeakReference<T> {\n-\n-            public final int hashcode;\n-\n-            public WeakEntry(T key, ReferenceQueue<T> queue) {\n-                super(key, queue);\n-                hashcode = key.hashCode();\n-            }\n-\n-            \/**\n-             * This implementation returns {@code true} if {@code obj} is another\n-             * {@code WeakEntry} whose referent is equal to this referent, or\n-             * if {@code obj} is equal to the referent of this. This allows\n-             * lookups to be made without wrapping in a {@code WeakEntry}.\n-             *\n-             * @param obj the object to compare\n-             * @return true if {@code obj} is equal to this or the referent of this\n-             * @see MethodType#equals(Object)\n-             * @see Object#equals(Object)\n-             *\/\n-            @Override\n-            public boolean equals(Object obj) {\n-                Object mine = get();\n-                if (obj instanceof WeakEntry<?> we) {\n-                    Object that = we.get();\n-                    return (that == null || mine == null) ? (this == obj) : mine.equals(that);\n-                }\n-                return (mine == null) ? (obj == null) : mine.equals(obj);\n-            }\n-\n-            @Override\n-            public int hashCode() {\n-                return hashcode;\n-            }\n-\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java","additions":12,"deletions":119,"binary":false,"changes":131,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import jdk.internal.util.ReferencedKeyMap;\n@@ -369,1 +370,1 @@\n-                methodTypeCache = ReferencedKeyMap.create(ConcurrentHashMap::new);\n+                methodTypeCache = ReferencedKeyMap.create(false, ConcurrentHashMap::new);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/Carriers.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,57 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.lang.runtime;\n-\n-import java.lang.ref.ReferenceQueue;\n-import java.lang.ref.SoftReference;\n-import java.lang.ref.WeakReference;\n-import java.util.Objects;\n-\n-\/**\n- * View\/wrapper of keys used by the backing {@link ReferencedKeyMap}.\n- * There are two style of keys; one for entries in the backing map and\n- * one for queries to the backing map. This second style avoids the\n- * overhead of a {@link Reference} object.\n- *\n- * @param <T> key type\n- *\n- * @since 21\n- *\n- * Warning: This class is part of PreviewFeature.Feature.STRING_TEMPLATES.\n- *          Do not rely on its availability.\n- *\/\n-sealed interface ReferenceKey<T> permits StrongReferenceKey, WeakReferenceKey, SoftReferenceKey {\n-    \/**\n-     * {@return the value of the unwrapped key}\n-     *\/\n-    T get();\n-\n-    \/**\n-     * Cleanup unused key.\n-     *\/\n-    void unused();\n-\n-}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/ReferenceKey.java","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"patch":"@@ -1,334 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.lang.runtime;\n-\n-import java.lang.ref.Reference;\n-import java.lang.ref.ReferenceQueue;\n-import java.lang.ref.SoftReference;\n-import java.lang.ref.WeakReference;\n-import java.util.AbstractMap;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Objects;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.function.Supplier;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n-\/**\n- * This class provides management of {@link Map maps} where it is desirable to\n- * remove entries automatically when the key is garbage collected. This is\n- * accomplished by using a backing map where the keys are either a\n- * {@link WeakReference} or a {@link SoftReference}.\n- * <p>\n- * To create a {@link ReferencedKeyMap} the user must provide a {@link Supplier}\n- * of the backing map and whether {@link WeakReference} or\n- * {@link SoftReference} is to be used.\n- *\n- * {@snippet :\n- * \/\/ Use HashMap and WeakReference\n- * Map<Long, String> map = ReferencedKeyMap.create(false, HashMap::new);\n- * map.put(10_000_000L, \"a\");\n- * map.put(10_000_001L, \"b\");\n- * map.put(10_000_002L, \"c\");\n- * map.put(10_000_003L, \"d\");\n- * map.put(10_000_004L, \"e\");\n- *\n- * \/\/ Use ConcurrentHashMap and SoftReference\n- * map = ReferencedKeyMap.create(true, ConcurrentHashMap::new);\n- * map.put(20_000_000L, \"v\");\n- * map.put(20_000_001L, \"w\");\n- * map.put(20_000_002L, \"x\");\n- * map.put(20_000_003L, \"y\");\n- * map.put(20_000_004L, \"z\");\n- * }\n- *\n- * @implNote Care must be given that the backing map does replacement by\n- * replacing the value in the map entry instead of deleting the old entry and\n- * adding a new entry, otherwise replaced entries may end up with a strongly\n- * referenced key. {@link HashMap} and {@link ConcurrentHashMap} are known\n- * to be safe.\n- *\n- * @param <K> the type of keys maintained by this map\n- * @param <V> the type of mapped values\n- *\n- * @since 21\n- *\n- * Warning: This class is part of PreviewFeature.Feature.STRING_TEMPLATES.\n- *          Do not rely on its availability.\n- *\/\n-final class ReferencedKeyMap<K, V> implements Map<K, V> {\n-    \/**\n-     * true if {@link SoftReference} keys are to be used,\n-     * {@link WeakReference} otherwise.\n-     *\/\n-    private final boolean isSoft;\n-\n-    \/**\n-     * Backing {@link Map}.\n-     *\/\n-    private final Map<ReferenceKey<K>, V> map;\n-\n-    \/**\n-     * {@link ReferenceQueue} for cleaning up {@link WeakReferenceKey EntryKeys}.\n-     *\/\n-    private final ReferenceQueue<K> stale;\n-\n-    \/**\n-     * Private constructor.\n-     *\n-     * @param isSoft  true if {@link SoftReference} keys are to\n-     *                be used, {@link WeakReference} otherwise.\n-     * @param map     backing map\n-     *\/\n-    private ReferencedKeyMap(boolean isSoft, Map<ReferenceKey<K>, V> map) {\n-        this.isSoft = isSoft;\n-        this.map = map;\n-        this.stale = new ReferenceQueue<>();\n-    }\n-\n-    \/**\n-     * Create a new {@link ReferencedKeyMap} map.\n-     *\n-     * @param isSoft    true if {@link SoftReference} keys are to\n-     *                  be used, {@link WeakReference} otherwise.\n-     * @param supplier  {@link Supplier} of the backing map\n-     *\n-     * @return a new map with {@link Reference} keys\n-     *\n-     * @param <K> the type of keys maintained by the new map\n-     * @param <V> the type of mapped values\n-     *\/\n-    static <K, V> ReferencedKeyMap<K, V>\n-    create(boolean isSoft, Supplier<Map<ReferenceKey<K>, V>> supplier) {\n-        return new ReferencedKeyMap<K, V>(isSoft, supplier.get());\n-    }\n-\n-    \/**\n-     * Create a new {@link ReferencedKeyMap} map using\n-     * {@link WeakReference} keys.\n-     *\n-     * @param supplier  {@link Supplier} of the backing map\n-     *\n-     * @return a new map with {@link Reference} keys\n-     *\n-     * @param <K> the type of keys maintained by the new map\n-     * @param <V> the type of mapped values\n-     *\/\n-    static <K, V> ReferencedKeyMap<K, V>\n-    create(Supplier<Map<ReferenceKey<K>, V>> supplier) {\n-        return new ReferencedKeyMap<K, V>(false, supplier.get());\n-    }\n-\n-    \/**\n-     * {@return a key suitable for a map entry}\n-     *\n-     * @param key unwrapped key\n-     *\/\n-    @SuppressWarnings(\"unchecked\")\n-    private ReferenceKey<K> entryKey(Object key) {\n-        if (isSoft) {\n-            return new SoftReferenceKey<>((K)key, stale);\n-        } else {\n-            return new WeakReferenceKey<>((K)key, stale);\n-        }\n-    }\n-\n-    \/**\n-     * {@return a key suitable for lookup}\n-     *\n-     * @param key unwrapped key\n-     *\/\n-    @SuppressWarnings(\"unchecked\")\n-    private ReferenceKey<K> lookupKey(Object key) {\n-        return new StrongReferenceKey<>((K)key);\n-    }\n-\n-    @Override\n-    public int size() {\n-        removeStaleReferences();\n-        return map.size();\n-    }\n-\n-    @Override\n-    public boolean isEmpty() {\n-        removeStaleReferences();\n-        return map.isEmpty();\n-    }\n-\n-    @Override\n-    public boolean containsKey(Object key) {\n-        Objects.requireNonNull(key, \"key must not be null\");\n-        removeStaleReferences();\n-        return map.containsKey(lookupKey(key));\n-    }\n-\n-    @Override\n-    public boolean containsValue(Object value) {\n-        Objects.requireNonNull(value, \"value must not be null\");\n-        removeStaleReferences();\n-        return map.containsValue(value);\n-    }\n-\n-    @Override\n-    public V get(Object key) {\n-        Objects.requireNonNull(key, \"key must not be null\");\n-        removeStaleReferences();\n-        return map.get(lookupKey(key));\n-    }\n-\n-    @Override\n-    public V put(K key, V newValue) {\n-        Objects.requireNonNull(key, \"key must not be null\");\n-        Objects.requireNonNull(newValue, \"value must not be null\");\n-        removeStaleReferences();\n-        ReferenceKey<K> entryKey = entryKey(key);\n-        \/\/ If {@code put} returns non-null then was actually a {@code replace}\n-        \/\/ and older key was used. In that case the new key was not used and the\n-        \/\/ reference marked stale.\n-        V oldValue = map.put(entryKey, newValue);\n-        if (oldValue != null) {\n-            entryKey.unused();\n-        }\n-        return oldValue;\n-    }\n-\n-    @Override\n-    public V remove(Object key) {\n-        \/\/ Rely on gc to clean up old key.\n-        return map.remove(lookupKey(key));\n-    }\n-\n-    @Override\n-    public void putAll(Map<? extends K, ? extends V> m) {\n-        removeStaleReferences();\n-        for (Entry<? extends K, ? extends V> entry : m.entrySet()) {\n-            K key = entry.getKey();\n-            V value = entry.getValue();\n-            put(key, value);\n-        }\n-    }\n-\n-    @Override\n-    public void clear() {\n-        removeStaleReferences();\n-        \/\/ Rely on gc to clean up old keys.\n-        map.clear();\n-    }\n-\n-    \/**\n-     * Common routine for collecting the current set of keys.\n-     *\n-     * @return {@link Stream} of valid keys (unwrapped)\n-     *\/\n-    private Stream<K> filterKeySet() {\n-        return map.keySet()\n-                .stream()\n-                .map(ReferenceKey::get)\n-                .filter(Objects::nonNull);\n-    }\n-\n-    @Override\n-    public Set<K> keySet() {\n-        removeStaleReferences();\n-        return filterKeySet().collect(Collectors.toSet());\n-    }\n-\n-    @Override\n-    public Collection<V> values() {\n-        removeStaleReferences();\n-        return map.values();\n-    }\n-\n-    @Override\n-    public Set<Entry<K, V>> entrySet() {\n-        removeStaleReferences();\n-        return filterKeySet()\n-                .map(k -> new AbstractMap.SimpleEntry<>(k, get(k)))\n-                .collect(Collectors.toSet());\n-    }\n-\n-    @Override\n-    public V putIfAbsent(K key, V newValue) {\n-        removeStaleReferences();\n-        ReferenceKey<K> entryKey = entryKey(key);\n-        \/\/ If {@code putIfAbsent} returns non-null then was actually a\n-        \/\/ {@code replace}  and older key was used. In that case the new key was\n-        \/\/ not used and the reference marked stale.\n-        V oldValue = map.putIfAbsent(entryKey, newValue);\n-        if (oldValue != null) {\n-            entryKey.unused();\n-        }\n-        return oldValue;\n-    }\n-\n-    @Override\n-    public boolean remove(Object key, Object value) {\n-        \/\/ Rely on gc to clean up old key.\n-        return map.remove(lookupKey(key), value);\n-    }\n-\n-    @Override\n-    public boolean replace(K key, V oldValue, V newValue) {\n-        removeStaleReferences();\n-        \/\/ If replace is successful then the older key will be used and the\n-        \/\/ lookup key will suffice.\n-        return map.replace(lookupKey(key), oldValue, newValue);\n-    }\n-\n-    @Override\n-    public V replace(K key, V value) {\n-        removeStaleReferences();\n-        \/\/ If replace is successful then the older key will be used and the\n-        \/\/ lookup key will suffice.\n-        return map.replace(lookupKey(key), value);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        removeStaleReferences();\n-        return filterKeySet()\n-                .map(k -> k + \"=\" + get(k))\n-                .collect(Collectors.joining(\", \", \"{\", \"}\"));\n-    }\n-\n-    \/**\n-     * Removes enqueued weak references from map.\n-     *\/\n-    @SuppressWarnings(\"unchecked\")\n-    public void removeStaleReferences() {\n-        while (true) {\n-            WeakReferenceKey<K> key = (WeakReferenceKey<K>)stale.poll();\n-            if (key == null) {\n-                break;\n-            }\n-            map.remove(key);\n-        }\n-    }\n-\n-}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/ReferencedKeyMap.java","additions":0,"deletions":334,"binary":false,"changes":334,"status":"deleted"},{"patch":"@@ -951,0 +951,1 @@\n+        Objects.requireNonNull(arguments, \"arguments must not be null\");\n@@ -954,4 +955,0 @@\n-        if (arguments == null) {\n-            throw new NullPointerException(\n-                   \"formatToCharacterIterator must be passed non-null object\");\n-        }\n@@ -963,2 +960,1 @@\n-                     iterators.toArray(\n-                     new AttributedCharacterIterator[iterators.size()]));\n+                iterators.toArray(new AttributedCharacterIterator[0]));\n","filename":"src\/java.base\/share\/classes\/java\/text\/MessageFormat.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1422,1 +1422,2 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is less than zero if this duration is less than {@code otherDuration},\n+     *          zero if they are equal, greater than zero if this duration is greater than {@code otherDuration}\n","filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1275,1 +1275,2 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is less than zero if this instant is before {@code otherInstant},\n+     *          zero if they are equal, or greater than zero if this instant is after {@code otherInstant}\n@@ -1277,0 +1278,2 @@\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/Instant.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1991,1 +1991,5 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is the comparison of this local date with\n+     *          the {@code other} local date and this chronology with the {@code other} chronology,\n+     *          in order, returning the first non-zero result, and otherwise returning zero\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDate.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1810,1 +1810,5 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is the comparison of this local date-time with\n+     *          the {@code other} local date-time and this chronology with the {@code other} chronology,\n+     *          in order, returning the first non-zero result, and otherwise returning zero\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDateTime.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1534,1 +1534,4 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is less than zero if this is before {@code other},\n+     *          zero if they are equal, or greater than zero if this is after {@code other}\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalTime.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -678,1 +678,4 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is less than zero if this is before {@code other},\n+     *          zero if they are equal, greater than zero if this is after {@code other}\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/MonthDay.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,1 +172,2 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is less than zero if {@code datetime1} is before {@code datetime2},\n+     *          zero if they are equal, greater than zero if {@code datetime1} is after {@code datetime2}\n@@ -1804,1 +1805,4 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is the comparison with the {@code other}'s instant, if they are not equal;\n+     *          and if equal to the {@code other}'s instant, the comparison of the {@code other}'s local date-time\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/OffsetDateTime.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1284,1 +1284,5 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is the comparison of the UTC equivalent {@code other} instant,\n+     *          if they are not equal, and if the UTC equivalent {@code other} instant is equal,\n+     *          the comparison of this local time with {@code other} local time\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/OffsetTime.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1021,1 +1021,4 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is less than zero if this is before {@code other},\n+     *          zero if they are equal, or greater than zero if this is after {@code other}\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/Year.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1125,1 +1125,4 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is less than zero if this is before {@code other},\n+     *          zero if they are equal, greater than zero if this is after {@code other}\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/YearMonth.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -717,1 +717,3 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is less than zero if this totalSeconds is\n+     *          less than {@code other} totalSeconds, zero if they are equal,\n+     *          greater than zero if this totalSeconds is greater than {@code other} totalSeconds\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZoneOffset.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -659,1 +659,1 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is this ID string compared with the {@code other}'s ID string\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/AbstractChronology.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -703,1 +703,5 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is the comparison of this local date with\n+     *          the {@code other} local date and this chronology with the {@code other} chronology,\n+     *          in order, returning the first non-zero result, and otherwise returning zero\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoLocalDate.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -503,1 +503,5 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is the comparison of this local date-time with\n+     *          the {@code other} local date-time and this chronology with the {@code other} chronology,\n+     *          in order, returning the first non-zero result, and otherwise returning zero\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoLocalDateTime.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -572,1 +572,5 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is the comparison of this with the {@code other} values for the instant,\n+     *          the local date-time, the zone ID, and the chronology, in order, returning the first non-zero result,\n+     *          and otherwise returning zero\n+     * @see #isBefore\n+     * @see #isAfter\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoZonedDateTime.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -810,1 +810,3 @@\n-     * @return the comparator value, negative if less, positive if greater\n+     * @return the comparator value, that is this ID string compared with the {@code other}'s ID string\n+     *          unless the ID strings are equal and\n+     *          the chronology distinguishes instances using additional information\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/Chronology.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -402,2 +402,3 @@\n-     * @param transition  the transition to compare to, not null\n-     * @return the comparator value, negative if less, positive if greater\n+     * @param otherTransition  the transition to compare to, not null\n+     * @return the comparator value, that is the comparison of this transition instant\n+     *          with {@code otherTransition} instant\n@@ -406,2 +407,2 @@\n-    public int compareTo(ZoneOffsetTransition transition) {\n-        return Long.compare(epochSecond, transition.epochSecond);\n+    public int compareTo(ZoneOffsetTransition otherTransition) {\n+        return Long.compare(epochSecond, otherTransition.epochSecond);\n","filename":"src\/java.base\/share\/classes\/java\/time\/zone\/ZoneOffsetTransition.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -805,1 +805,3 @@\n-                        SignatureFileVerifier.MAX_SIG_FILE_SIZE + \" bytes\");\n+                        SignatureFileVerifier.MAX_SIG_FILE_SIZE + \" bytes. \" +\n+                        \"You can use the jdk.jar.maxSignatureFileSize \" +\n+                        \"system property to increase the default value.\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarFile.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-     * Invoked by MethodType.ConcurrentWeakInternSet\n+     * Invoked by jdk.internal.util.ReferencedKeyMap\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangRefAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.util;\n+\n+import java.lang.ref.Reference;\n+\n+\/**\n+ * View\/wrapper of keys used by the backing {@link ReferencedKeyMap}.\n+ * There are two style of keys; one for entries in the backing map and\n+ * one for queries to the backing map. This second style avoids the\n+ * overhead of a {@link Reference} object.\n+ *\n+ * @param <T> key type\n+ *\n+ * @since 21\n+ *\/\n+public sealed interface ReferenceKey<T> permits StrongReferenceKey, WeakReferenceKey, SoftReferenceKey {\n+    \/**\n+     * {@return the value of the unwrapped key}\n+     *\/\n+    T get();\n+\n+    \/**\n+     * Cleanup unused key.\n+     *\/\n+    void unused();\n+\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ReferenceKey.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,442 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.util;\n+\n+import java.lang.ref.Reference;\n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.SoftReference;\n+import java.lang.ref.WeakReference;\n+import java.util.AbstractMap;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Objects;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.function.Supplier;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import jdk.internal.access.SharedSecrets;\n+\n+\/**\n+ * This class provides management of {@link Map maps} where it is desirable to\n+ * remove entries automatically when the key is garbage collected. This is\n+ * accomplished by using a backing map where the keys are either a\n+ * {@link WeakReference} or a {@link SoftReference}.\n+ * <p>\n+ * To create a {@link ReferencedKeyMap} the user must provide a {@link Supplier}\n+ * of the backing map and whether {@link WeakReference} or\n+ * {@link SoftReference} is to be used.\n+ *\n+ * {@snippet :\n+ * \/\/ Use HashMap and WeakReference\n+ * Map<Long, String> map = ReferencedKeyMap.create(false, HashMap::new);\n+ * map.put(10_000_000L, \"a\");\n+ * map.put(10_000_001L, \"b\");\n+ * map.put(10_000_002L, \"c\");\n+ * map.put(10_000_003L, \"d\");\n+ * map.put(10_000_004L, \"e\");\n+ *\n+ * \/\/ Use ConcurrentHashMap and SoftReference\n+ * map = ReferencedKeyMap.create(true, ConcurrentHashMap::new);\n+ * map.put(20_000_000L, \"v\");\n+ * map.put(20_000_001L, \"w\");\n+ * map.put(20_000_002L, \"x\");\n+ * map.put(20_000_003L, \"y\");\n+ * map.put(20_000_004L, \"z\");\n+ * }\n+ *\n+ * @implNote Care must be given that the backing map does replacement by\n+ * replacing the value in the map entry instead of deleting the old entry and\n+ * adding a new entry, otherwise replaced entries may end up with a strongly\n+ * referenced key. {@link HashMap} and {@link ConcurrentHashMap} are known\n+ * to be safe.\n+ *\n+ * @param <K> the type of keys maintained by this map\n+ * @param <V> the type of mapped values\n+ *\n+ * @since 21\n+ *\/\n+public final class ReferencedKeyMap<K, V> implements Map<K, V> {\n+    \/**\n+     * true if {@link SoftReference} keys are to be used,\n+     * {@link WeakReference} otherwise.\n+     *\/\n+    private final boolean isSoft;\n+\n+    \/**\n+     * Backing {@link Map}.\n+     *\/\n+    private final Map<ReferenceKey<K>, V> map;\n+\n+    \/**\n+     * {@link ReferenceQueue} for cleaning up entries.\n+     *\/\n+    private final ReferenceQueue<K> stale;\n+\n+    \/**\n+     * Private constructor.\n+     *\n+     * @param isSoft          true if {@link SoftReference} keys are to\n+     *                        be used, {@link WeakReference} otherwise.\n+     * @param map             backing map\n+     * @param stale           {@link ReferenceQueue} for cleaning up entries\n+     *\/\n+    private ReferencedKeyMap(boolean isSoft, Map<ReferenceKey<K>, V> map, ReferenceQueue<K> stale) {\n+        this.isSoft = isSoft;\n+        this.map = map;\n+        this.stale = stale;\n+    }\n+\n+    \/**\n+     * Create a new {@link ReferencedKeyMap} map.\n+     *\n+     * @param isSoft          true if {@link SoftReference} keys are to\n+     *                        be used, {@link WeakReference} otherwise.\n+     * @param supplier        {@link Supplier} of the backing map\n+     *\n+     * @return a new map with {@link Reference} keys\n+     *\n+     * @param <K> the type of keys maintained by the new map\n+     * @param <V> the type of mapped values\n+     *\/\n+    public static <K, V> ReferencedKeyMap<K, V>\n+    create(boolean isSoft, Supplier<Map<ReferenceKey<K>, V>> supplier) {\n+        return create(isSoft, false, supplier);\n+    }\n+\n+    \/**\n+     * Create a new {@link ReferencedKeyMap} map.\n+     *\n+     * @param isSoft          true if {@link SoftReference} keys are to\n+     *                        be used, {@link WeakReference} otherwise.\n+     * @param useNativeQueue  true if uses NativeReferenceQueue\n+     *                        otherwise use {@link ReferenceQueue}.\n+     * @param supplier        {@link Supplier} of the backing map\n+     *\n+     * @return a new map with {@link Reference} keys\n+     *\n+     * @param <K> the type of keys maintained by the new map\n+     * @param <V> the type of mapped values\n+     *\/\n+    public static <K, V> ReferencedKeyMap<K, V>\n+    create(boolean isSoft, boolean useNativeQueue, Supplier<Map<ReferenceKey<K>, V>> supplier) {\n+        return new ReferencedKeyMap<K, V>(isSoft, supplier.get(),\n+                useNativeQueue ? SharedSecrets.getJavaLangRefAccess().newNativeReferenceQueue()\n+                               : new ReferenceQueue<>()\n+                );\n+    }\n+\n+    \/**\n+     * {@return a key suitable for a map entry}\n+     *\n+     * @param key unwrapped key\n+     *\/\n+    @SuppressWarnings(\"unchecked\")\n+    private ReferenceKey<K> entryKey(Object key) {\n+        if (isSoft) {\n+            return new SoftReferenceKey<>((K)key, stale);\n+        } else {\n+            return new WeakReferenceKey<>((K)key, stale);\n+        }\n+    }\n+\n+    \/**\n+     * {@return a key suitable for lookup}\n+     *\n+     * @param key unwrapped key\n+     *\/\n+    @SuppressWarnings(\"unchecked\")\n+    private ReferenceKey<K> lookupKey(Object key) {\n+        return new StrongReferenceKey<>((K)key);\n+    }\n+\n+    @Override\n+    public int size() {\n+        removeStaleReferences();\n+        return map.size();\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+        removeStaleReferences();\n+        return map.isEmpty();\n+    }\n+\n+    @Override\n+    public boolean containsKey(Object key) {\n+        Objects.requireNonNull(key, \"key must not be null\");\n+        removeStaleReferences();\n+        return map.containsKey(lookupKey(key));\n+    }\n+\n+    @Override\n+    public boolean containsValue(Object value) {\n+        Objects.requireNonNull(value, \"value must not be null\");\n+        removeStaleReferences();\n+        return map.containsValue(value);\n+    }\n+\n+    @Override\n+    public V get(Object key) {\n+        Objects.requireNonNull(key, \"key must not be null\");\n+        removeStaleReferences();\n+        return map.get(lookupKey(key));\n+    }\n+\n+    @Override\n+    public V put(K key, V newValue) {\n+        Objects.requireNonNull(key, \"key must not be null\");\n+        Objects.requireNonNull(newValue, \"value must not be null\");\n+        removeStaleReferences();\n+        ReferenceKey<K> entryKey = entryKey(key);\n+        \/\/ If {@code put} returns non-null then was actually a {@code replace}\n+        \/\/ and older key was used. In that case the new key was not used and the\n+        \/\/ reference marked stale.\n+        V oldValue = map.put(entryKey, newValue);\n+        if (oldValue != null) {\n+            entryKey.unused();\n+        }\n+        return oldValue;\n+    }\n+\n+    @Override\n+    public V remove(Object key) {\n+        \/\/ Rely on gc to clean up old key.\n+        return map.remove(lookupKey(key));\n+    }\n+\n+    @Override\n+    public void putAll(Map<? extends K, ? extends V> m) {\n+        removeStaleReferences();\n+        for (Entry<? extends K, ? extends V> entry : m.entrySet()) {\n+            K key = entry.getKey();\n+            V value = entry.getValue();\n+            put(key, value);\n+        }\n+    }\n+\n+    @Override\n+    public void clear() {\n+        removeStaleReferences();\n+        \/\/ Rely on gc to clean up old keys.\n+        map.clear();\n+    }\n+\n+    \/**\n+     * Common routine for collecting the current set of keys.\n+     *\n+     * @return {@link Stream} of valid keys (unwrapped)\n+     *\/\n+    private Stream<K> filterKeySet() {\n+        return map.keySet()\n+                .stream()\n+                .map(ReferenceKey::get)\n+                .filter(Objects::nonNull);\n+    }\n+\n+    @Override\n+    public Set<K> keySet() {\n+        removeStaleReferences();\n+        return filterKeySet().collect(Collectors.toSet());\n+    }\n+\n+    @Override\n+    public Collection<V> values() {\n+        removeStaleReferences();\n+        return map.values();\n+    }\n+\n+    @Override\n+    public Set<Entry<K, V>> entrySet() {\n+        removeStaleReferences();\n+        return filterKeySet()\n+                .map(k -> new AbstractMap.SimpleEntry<>(k, get(k)))\n+                .collect(Collectors.toSet());\n+    }\n+\n+    @Override\n+    public V putIfAbsent(K key, V newValue) {\n+        removeStaleReferences();\n+        ReferenceKey<K> entryKey = entryKey(key);\n+        \/\/ If {@code putIfAbsent} returns non-null then was actually a\n+        \/\/ {@code replace}  and older key was used. In that case the new key was\n+        \/\/ not used and the reference marked stale.\n+        V oldValue = map.putIfAbsent(entryKey, newValue);\n+        if (oldValue != null) {\n+            entryKey.unused();\n+        }\n+        return oldValue;\n+    }\n+\n+    @Override\n+    public boolean remove(Object key, Object value) {\n+        \/\/ Rely on gc to clean up old key.\n+        return map.remove(lookupKey(key), value);\n+    }\n+\n+    @Override\n+    public boolean replace(K key, V oldValue, V newValue) {\n+        removeStaleReferences();\n+        \/\/ If replace is successful then the older key will be used and the\n+        \/\/ lookup key will suffice.\n+        return map.replace(lookupKey(key), oldValue, newValue);\n+    }\n+\n+    @Override\n+    public V replace(K key, V value) {\n+        removeStaleReferences();\n+        \/\/ If replace is successful then the older key will be used and the\n+        \/\/ lookup key will suffice.\n+        return map.replace(lookupKey(key), value);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        removeStaleReferences();\n+        return filterKeySet()\n+                .map(k -> k + \"=\" + get(k))\n+                .collect(Collectors.joining(\", \", \"{\", \"}\"));\n+    }\n+\n+    \/**\n+     * Removes enqueued weak references from map.\n+     *\/\n+    public void removeStaleReferences() {\n+        while (true) {\n+            Object key = stale.poll();\n+            if (key == null) {\n+                break;\n+            }\n+            map.remove(key);\n+        }\n+    }\n+\n+    \/**\n+     * Puts an entry where the key and the value are the same. Used for\n+     * interning values in a set.\n+     *\n+     * @implNote Requires a {@link ReferencedKeyMap} whose {@code V} type\n+     * is a {@code ReferenceKey<K>}. Otherwise, a {@link ClassCastException} will\n+     * be thrown.\n+     *\n+     * @param setMap    {@link ReferencedKeyMap} where interning takes place\n+     * @param key       key to add\n+     *\n+     * @param <T> type of key\n+     *\n+     * @return the old key instance if found otherwise the new key instance\n+     *\n+     * @throws ClassCastException if {@code V} is not {@code EntryKey<T>}\n+     *\/\n+    static <T> T intern(ReferencedKeyMap<T, ReferenceKey<T>> setMap, T key) {\n+        T value = existingKey(setMap, key);\n+        if (value != null) {\n+            return value;\n+        }\n+        return internKey(setMap, key);\n+    }\n+\n+    \/**\n+     * Puts an entry where the key and the value are the same. Used for\n+     * interning values in a set.\n+     *\n+     * @implNote Requires a {@link ReferencedKeyMap} whose {@code V} type\n+     * is a {@code ReferenceKey<K>}. Otherwise, a {@link ClassCastException} will\n+     * be thrown.\n+     *\n+     * @param setMap    {@link ReferencedKeyMap} where interning takes place\n+     * @param key       key to add\n+     * @param interner  operation to apply to key before adding to map\n+     *\n+     * @param <T> type of key\n+     *\n+     * @return the old key instance if found otherwise the new key instance\n+     *\n+     * @throws ClassCastException if {@code V} is not {@code EntryKey<T>}\n+     *\n+     * @implNote This version of intern should not be called during phase1\n+     * using a lambda. Use an UnaryOperator instance instead.\n+     *\/\n+    static <T> T intern(ReferencedKeyMap<T, ReferenceKey<T>> setMap, T key, UnaryOperator<T> interner) {\n+        T value = existingKey(setMap, key);\n+        if (value != null) {\n+            return value;\n+        }\n+        key = interner.apply(key);\n+        return internKey(setMap, key);\n+    }\n+\n+    \/**\n+     * Check if the key already exists in the map.\n+     *\n+     * @param setMap    {@link ReferencedKeyMap} where interning takes place\n+     * @param key       key to test\n+     *\n+     * @param <T> type of key\n+     *\n+     * @return key if found otherwise null\n+     *\/\n+    private static <T> T existingKey(ReferencedKeyMap<T, ReferenceKey<T>> setMap, T key) {\n+        setMap.removeStaleReferences();\n+        ReferenceKey<T> entryKey = setMap.get(setMap.lookupKey(key));\n+        return entryKey != null ? entryKey.get() : null;\n+    }\n+\n+    \/**\n+     * Attempt to add key to map.\n+     *\n+     * @param setMap    {@link ReferencedKeyMap} where interning takes place\n+     * @param key       key to add\n+     *\n+     * @param <T> type of key\n+     *\n+     * @return the old key instance if found otherwise the new key instance\n+     *\/\n+    private static <T> T internKey(ReferencedKeyMap<T, ReferenceKey<T>> setMap, T key) {\n+        ReferenceKey<T> entryKey = setMap.entryKey(key);\n+        T interned;\n+        do {\n+            setMap.removeStaleReferences();\n+            ReferenceKey<T> existing = setMap.map.putIfAbsent(entryKey, entryKey);\n+            if (existing == null) {\n+                return key;\n+            } else {\n+                \/\/ If {@code putIfAbsent} returns non-null then was actually a\n+                \/\/ {@code replace} and older key was used. In that case the new\n+                \/\/ key was not used and the reference marked stale.\n+                interned = existing.get();\n+                if (interned != null) {\n+                    entryKey.unused();\n+                }\n+            }\n+        } while (interned == null);\n+        return interned;\n+    }\n+\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ReferencedKeyMap.java","additions":442,"deletions":0,"binary":false,"changes":442,"status":"added"},{"patch":"@@ -0,0 +1,205 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.util;\n+\n+import java.lang.ref.Reference;\n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.SoftReference;\n+import java.lang.ref.WeakReference;\n+import java.util.*;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.function.Supplier;\n+import java.util.function.UnaryOperator;\n+\n+\/**\n+ * This class provides management of {@link Set set} where it is desirable to\n+ * remove elements automatically when the element is garbage collected. This is\n+ * accomplished by using a backing map where the keys and values are either a\n+ * {@link WeakReference} or a {@link SoftReference}.\n+ * <p>\n+ * To create a {@link ReferencedKeySet} the user must provide a {@link Supplier}\n+ * of the backing map and whether {@link WeakReference} or\n+ * {@link SoftReference} is to be used.\n+ * {@snippet :\n+ * Set<Long> set;\n+ *\n+ * set = ReferencedKeySet.create(false, HashMap::new);\n+ * set.add(30_000_000L);\n+ * set.add(30_000_001L);\n+ * set.add(30_000_002L);\n+ * set.add(30_000_003L);\n+ * set.add(30_000_004L);\n+ *\n+ * set = ReferencedKeySet.create(true, ConcurrentHashMap::new);\n+ * set.add(40_000_000L);\n+ * set.add(40_000_001L);\n+ * set.add(40_000_002L);\n+ * set.add(40_000_003L);\n+ * set.add(40_000_004L);\n+ * }\n+ *\n+ * @implNote Care must be given that the backing map does replacement by\n+ * replacing the value in the map entry instead of deleting the old entry and\n+ * adding a new entry, otherwise replaced entries may end up with a strongly\n+ * referenced key. {@link HashMap} and {@link ConcurrentHashMap} are known\n+ * to be safe.\n+ *\n+ * @param <T> the type of elements maintained by this set\n+ *\/\n+public final class ReferencedKeySet<T> extends AbstractSet<T> {\n+    \/**\n+     * Backing {@link ReferencedKeySet} map.\n+     *\/\n+    final ReferencedKeyMap<T, ReferenceKey<T>> map;\n+\n+    \/**\n+     * Private constructor.\n+     *\n+     * @param map     backing map\n+     *\/\n+    private ReferencedKeySet(ReferencedKeyMap<T, ReferenceKey<T>> map) {\n+        this.map = map;\n+    }\n+\n+    \/**\n+     * Create a new {@link ReferencedKeySet} elements.\n+     *\n+     * @param isSoft          true if {@link SoftReference} elements are to\n+     *                        be used, {@link WeakReference} otherwise.\n+     * @param supplier        {@link Supplier} of the backing map\n+     *\n+     * @return a new set with {@link Reference} elements\n+     *\n+     * @param <E> the type of elements maintained by this set\n+     *\/\n+    public static <E> ReferencedKeySet<E>\n+    create(boolean isSoft, Supplier<Map<ReferenceKey<E>, ReferenceKey<E>>> supplier) {\n+        return create(isSoft, false, supplier);\n+    }\n+\n+    \/**\n+     * Create a new {@link ReferencedKeySet} elements.\n+     *\n+     * @param isSoft          true if {@link SoftReference} elements are to\n+     *                        be used, {@link WeakReference} otherwise.\n+     * @param useNativeQueue  true if uses NativeReferenceQueue\n+     *                        otherwise use {@link ReferenceQueue}.\n+     * @param supplier        {@link Supplier} of the backing map\n+     *\n+     * @return a new set with {@link Reference} elements\n+     *\n+     * @param <E> the type of elements maintained by this set\n+     *\/\n+    public static <E> ReferencedKeySet<E>\n+    create(boolean isSoft, boolean useNativeQueue, Supplier<Map<ReferenceKey<E>, ReferenceKey<E>>> supplier) {\n+         return new ReferencedKeySet<>(ReferencedKeyMap.create(isSoft, useNativeQueue, supplier));\n+    }\n+\n+    \/**\n+     * Removes enqueued weak references from set.\n+     *\/\n+    public void removeStaleReferences() {\n+        map.removeStaleReferences();\n+    }\n+\n+    @Override\n+    public Iterator<T> iterator() {\n+        return map.keySet().iterator();\n+    }\n+\n+    @Override\n+    public int size() {\n+        return map.size();\n+    }\n+\n+    @Override\n+    public boolean isEmpty() {\n+        return map.isEmpty();\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public boolean contains(Object o) {\n+        return map.containsKey((T)o);\n+    }\n+\n+    @Override\n+    public boolean add(T e) {\n+        return intern(e) == null;\n+    }\n+\n+    @Override\n+    public boolean remove(Object o) {\n+        return map.remove(o) != null;\n+    }\n+\n+    @Override\n+    public void clear() {\n+        map.clear();\n+    }\n+\n+    \/**\n+     * Gets an existing element from the set, returning null if not present or\n+     * the old element if previously added.\n+     *\n+     * @param e  element to get\n+     *\n+     * @return the old element if present, otherwise, null\n+     *\/\n+    public T get(T e) {\n+        ReferenceKey<T> key = map.get(e);\n+\n+        return key == null ? null : key.get();\n+    }\n+\n+    \/**\n+     * Intern an element to the set, returning the element if newly added or the\n+     * old element if previously added.\n+     *\n+     * @param e  element to add\n+     *\n+     * @return the old element if present, otherwise, the new element\n+     *\/\n+    public T intern(T e) {\n+        return ReferencedKeyMap.intern(map, e);\n+    }\n+\n+    \/**\n+     * Intern an element to the set, returning the element if newly added or the\n+     * old element if previously added.\n+     *\n+     * @param e         element to add\n+     * @param interner  operation to apply to key before adding to set\n+     *\n+     * @return the old element if present, otherwise, the new element\n+     *\n+     * @implNote This version of intern should not be called during phase1\n+     * using a lambda. Use an UnaryOperator instance instead.\n+     *\/\n+    public T intern(T e, UnaryOperator<T> interner) {\n+        return ReferencedKeyMap.intern(map, e, interner);\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ReferencedKeySet.java","additions":205,"deletions":0,"binary":false,"changes":205,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-package java.lang.runtime;\n+package jdk.internal.util;\n@@ -38,3 +38,0 @@\n- *\n- * Warning: This class is part of PreviewFeature.Feature.STRING_TEMPLATES.\n- *          Do not rely on its availability.\n@@ -79,0 +76,2 @@\n+        \/\/ Note: refersTo is insufficient since keys require equivalence.\n+        \/\/ refersTo would also require a cast to type T.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/SoftReferenceKey.java","additions":3,"deletions":4,"binary":false,"changes":7,"previous_filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SoftReferenceKey.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package java.lang.runtime;\n+package jdk.internal.util;\n@@ -37,3 +37,0 @@\n- *\n- * Warning: This class is part of PreviewFeature.Feature.STRING_TEMPLATES.\n- *          Do not rely on its availability.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/StrongReferenceKey.java","additions":1,"deletions":4,"binary":false,"changes":5,"previous_filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/StrongReferenceKey.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package java.lang.runtime;\n+package jdk.internal.util;\n@@ -38,3 +38,0 @@\n- *\n- * Warning: This class is part of PreviewFeature.Feature.STRING_TEMPLATES.\n- *          Do not rely on its availability.\n@@ -79,0 +76,2 @@\n+        \/\/ Note: refersTo is insufficient since keys require equivalence.\n+        \/\/ refersTo would also require a cast to type T.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/WeakReferenceKey.java","additions":3,"deletions":4,"binary":false,"changes":7,"previous_filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/WeakReferenceKey.java","status":"renamed"},{"patch":"@@ -28,9 +28,0 @@\n-\/*\n- *\n- *  <p><b>This is NOT part of any API supported by Sun Microsystems.\n- *  If you write code that depends on this, you do so at your own\n- *  risk.  This code and its internal interfaces are subject to change\n- *  or deletion without notice.<\/b>\n- *\n- *\/\n-\n@@ -64,1 +55,1 @@\n-import java.util.Collections;\n+import java.util.Arrays;\n@@ -70,0 +61,1 @@\n+import java.util.Map;\n@@ -75,0 +67,1 @@\n+import java.util.function.Function;\n@@ -134,0 +127,4 @@\n+    enum Option { DEFAULT, ALL, LOCALE, PROPERTIES, SECURITY,\n+        SECURITY_ALL, SECURITY_PROPERTIES, SECURITY_PROVIDERS,\n+        SECURITY_TLS, SYSTEM, VM };\n+\n@@ -135,4 +132,8 @@\n-     * A method called by the launcher to print out the standard settings,\n-     * by default -XshowSettings is equivalent to -XshowSettings:all,\n-     * Specific information may be gotten by using suboptions with possible\n-     * values vm, properties and locale.\n+     * A method called by the launcher to print out the standard settings.\n+     * -XshowSettings prints details of all supported components in non-verbose\n+     * mode. -XshowSettings:all prints all settings in verbose mode.\n+     * Specific settings information may be obtained by using suboptions.\n+     *\n+     * Suboption values include \"all\", \"locale\", \"properties\", \"security\",\n+     * \"system\" (Linux only) and \"vm\". A error message is printed for an\n+     * unknown suboption value and the VM launch aborts.\n@@ -161,32 +162,24 @@\n-        String[] opts = optionFlag.split(\":\");\n-        String optStr = opts.length > 1\n-                ? opts[1].trim()\n-                : \"all\";\n-        switch (optStr) {\n-            case \"vm\":\n-                printVmSettings(initialHeapSize, maxHeapSize, stackSize);\n-                break;\n-            case \"properties\":\n-                printProperties();\n-                break;\n-            case \"locale\":\n-                printLocale(false);\n-                break;\n-            case \"security\":\n-                var opt = opts.length > 2 ? opts[2].trim() : \"all\";\n-                SecuritySettings.printSecuritySettings(opt, ostream);\n-                break;\n-            case \"system\":\n-                if (OperatingSystem.isLinux()) {\n-                    printSystemMetrics();\n-                    break;\n-                }\n-            default:\n-                printVmSettings(initialHeapSize, maxHeapSize, stackSize);\n-                printProperties();\n-                printLocale(true);\n-                SecuritySettings.printSecuritySummarySettings(ostream);\n-                if (OperatingSystem.isLinux()) {\n-                    printSystemMetrics();\n-                }\n-                break;\n+        Option component = validateOption(optionFlag);\n+        switch (component) {\n+            case ALL -> printAllSettings(initialHeapSize, maxHeapSize, stackSize, true);\n+            case LOCALE -> printLocale(true);\n+            case PROPERTIES -> printProperties();\n+            case SECURITY,\n+                 SECURITY_ALL,\n+                 SECURITY_PROPERTIES,\n+                 SECURITY_PROVIDERS,\n+                 SECURITY_TLS -> SecuritySettings.printSecuritySettings(component, ostream, true);\n+            case SYSTEM -> printSystemMetrics();\n+            case VM -> printVmSettings(initialHeapSize, maxHeapSize, stackSize);\n+            case DEFAULT -> printAllSettings(initialHeapSize, maxHeapSize, stackSize, false);\n+        }\n+    }\n+\n+    \/*\n+     * Validate that the -XshowSettings value is allowed\n+     * If a valid option is parsed, return enum corresponding\n+     * to that option. Abort if a bad option is parsed.\n+     *\/\n+    private static Option validateOption(String optionFlag) {\n+        if (optionFlag.equals(\"-XshowSettings\")) {\n+            return Option.DEFAULT;\n@@ -194,0 +187,17 @@\n+\n+        if (optionFlag.equals(\"-XshowSetings:\")) {\n+            abort(null, \"java.launcher.bad.option\", \":\");\n+        }\n+\n+        Map<String, Option> validOpts = Arrays.stream(Option.values())\n+                .filter(o -> !o.equals(Option.DEFAULT)) \/\/ non-valid option\n+                .collect(Collectors.toMap(o -> o.name()\n+                        .toLowerCase(Locale.ROOT)\n+                        .replace(\"_\", \":\"), Function.identity()));\n+\n+        String optStr = optionFlag.substring(\"-XshowSettings:\".length());\n+        Option component = validOpts.get(optStr);\n+        if (component == null) {\n+            abort(null, \"java.launcher.bad.option\", optStr);\n+        }\n+        return component;\n@@ -197,1 +207,4 @@\n-     * prints the main vm settings subopt\/section\n+     * Print settings for all supported components.\n+     * verbose value used to determine if verbose information\n+     * should be printed for components that support printing\n+     * in verbose or non-verbose mode.\n@@ -199,0 +212,12 @@\n+    private static void printAllSettings(long initialHeapSize, long maxHeapSize,\n+                                         long stackSize, boolean verbose) {\n+        printVmSettings(initialHeapSize, maxHeapSize, stackSize);\n+        printProperties();\n+        printLocale(verbose);\n+        SecuritySettings.printSecuritySettings(\n+                    Option.SECURITY_ALL, ostream, verbose);\n+        if (OperatingSystem.isLinux()) {\n+            printSystemMetrics();\n+        }\n+    }\n+\n@@ -230,5 +255,2 @@\n-        List<String> sortedPropertyKeys = new ArrayList<>();\n-        sortedPropertyKeys.addAll(p.stringPropertyNames());\n-        Collections.sort(sortedPropertyKeys);\n-        for (String x : sortedPropertyKeys) {\n-            printPropertyValue(x, p.getProperty(x));\n+        for (String key : p.stringPropertyNames().stream().sorted().toList()) {\n+            printPropertyValue(key, p.getProperty(key));\n@@ -283,1 +305,1 @@\n-    private static void printLocale(boolean summaryMode) {\n+    private static void printLocale(boolean verbose) {\n@@ -285,1 +307,1 @@\n-        if (!summaryMode) {\n+        if (verbose) {\n@@ -300,1 +322,1 @@\n-        if (!summaryMode) {\n+        if (verbose) {\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":77,"deletions":55,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    static void printSecuritySettings(String arg, PrintStream stream) {\n+    static void printSecuritySettings(LauncherHelper.Option o, PrintStream stream, boolean verbose) {\n@@ -58,8 +58,9 @@\n-        switch (arg) {\n-            case \"properties\" -> printSecurityProperties();\n-            case \"providers\"  -> printSecurityProviderConfig(true);\n-            case \"tls\"        -> printSecurityTLSConfig(true);\n-            case \"all\"        -> printAllSecurityConfig();\n-            default           -> ostream.println(\n-                    \"\\nUnrecognized security subcommand. Valid values are \" +\n-                    \"\\\"all\\\", \\\"properties\\\", \\\"providers\\\", \\\"tls\\\". See \\\"java -X\\\"\\n\");\n+        if (!verbose) {\n+            printSecuritySummarySettings();\n+            return;\n+        }\n+        switch (o) {\n+            case SECURITY_PROPERTIES -> printSecurityProperties();\n+            case SECURITY_PROVIDERS -> printSecurityProviderConfig(true);\n+            case SECURITY_TLS -> printSecurityTLSConfig(true);\n+            case SECURITY, SECURITY_ALL -> printAllSecurityConfig();\n@@ -70,4 +71,4 @@\n-    static void printSecuritySummarySettings(PrintStream stream) {\n-        ostream = stream;\n-        ostream.println(\"Security settings summary: \" + \"\\n\" +\n-                INDENT + \"See \\\"java -X\\\" for verbose security settings options\");\n+    static void printSecuritySummarySettings() {\n+        ostream.println(\"Security settings summary:\");\n+        ostream.println(INDENT + \"Use \\\"-XshowSettings:security\\\" \" +\n+                \"option for verbose security settings options\");\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/SecuritySettings.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-\\                      show all settings and continue\\n\\\n+\\                      show all settings in verbose detail and continue\\n\\\n@@ -229,0 +229,8 @@\n+java.launcher.bad.option=\\\n+\\n\\\n+Unrecognized showSettings option: {0}\\n\\\n+    Valid values are \\\"all\\\", \\\"locale\\\", \\\"properties\\\", \\\"security\\\", \\\n+    \\\"system\\\"(Linux only), \\\"vm\\\"\\n\\\n+    Valid \\\"security\\\" suboption values are \\\"all\\\", \\\"properties\\\", \\\"providers\\\", \\\"tls\\\"\\n\\\n+    See \\\"java -X\\\"\\n\\\n+\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher.properties","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n-java.launcher.opt.footer = \\    -cp <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n    -classpath <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n    --class-path <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n                  Eine durch {0} getrennte Liste mit Verzeichnissen, JAR-Archiven\\n                  und ZIP-Archiven, in denen nach Klassendateien gesucht wird.\\n    -p <Modulpfad>\\n    --module-path <Modulpfad>...\\n                  Eine durch {0} getrennte Liste mit Verzeichnissen, von denen jedes Verzeichnis\\n                  ein Verzeichnis mit Modulen ist.\\n    --upgrade-module-path <Modulpfad>...\\n                  Eine durch {0} getrennte Liste mit Verzeichnissen, von denen jedes Verzeichnis\\n                  ein Verzeichnis mit Modulen ist, die upgradef\\u00E4hige\\n                  Module im Laufzeitimage ersetzen\\n    --add-modules <Modulname>[,<Modulname>...]\\n                  Root-Module, die zus\\u00E4tzlich zum anf\\u00E4nglichen Modul aufgel\\u00F6st werden sollen.\\n                  <Modulname> kann auch wie folgt lauten: ALL-DEFAULT, ALL-SYSTEM,\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <Modulname>[,<Modulname>...]\\n                  Module, die eingeschr\\u00E4nkte native Vorg\\u00E4nge ausf\\u00FChren d\\u00FCrfen.\\n                  <Modulname> kann auch ALL-UNNAMED lauten.\\n    --list-modules\\n                  Listet beobachtbare Module auf und beendet den Vorgang\\n    -d <Modulname>\\n    --describe-module <Modulname>\\n                  Beschreibt ein Modul und beendet den Vorgang\\n    --dry-run     Erstellt eine VM und l\\u00E4dt die Hauptklasse, f\\u00FChrt aber nicht die Hauptmethode aus.\\n                  Die Option \"--dry-run\" kann n\\u00FCtzlich sein, um die\\n                  Befehlszeilenoptionen, wie die Modulsystemkonfiguration, zu validieren.\\n    --validate-modules\\n                  Validiert alle Module und beendet den Vorgang\\n                  Die Option \"--validate-modules\" kann n\\u00FCtzlich sein, um\\n                  Konflikte und andere Fehler mit Modulen auf dem Modulpfad zu ermitteln.\\n    -D<Name>=<Wert>\\n                  Legt eine Systemeigenschaft fest\\n    -verbose:[class|module|gc|jni]\\n                  Aktiviert die Verbose-Ausgabe f\\u00FCr das angegebene Subsystem\\n    -version      Gibt die Produktversion an den Fehlerstream aus und beendet den Vorgang\\n    --version      Gibt die Produktversion an den Outputstream aus und beendet den Vorgang\\n    -showversion  Gibt die Produktversion an den Fehlerstream aus und setzt den Vorgang fort\\n    --show-version\\n                  Gibt die Produktversion an den Outputstream aus und setzt den Vorgang fort\\n    --show-module-resolution\\n                  Zeigt die Modulaufl\\u00F6sungsausgabe beim Start an\\n    -? -h -help\\n                  Gibt diese Hilfemeldung an den Fehlerstream aus\\n    --help        Gibt diese Hilfemeldung an den Outputstream aus\\n    -X            Gibt Hilfe zu zus\\u00E4tzlichen Optionen an den Fehlerstream aus\\n    --help-extra  Gibt Hilfe zu zus\\u00E4tzlichen Optionen an den Outputstream aus\\n    -ea[:<packagename>...|:<classname>]\\n    -enableassertions[:<packagename>...|:<classname>]\\n                  Aktiviert Assertions mit angegebener Granularit\\u00E4t\\n    -da[:<packagename>...|:<classname>]\\n    -disableassertions[:<packagename>...|:<classname>]\\n                  Deaktiviert Assertions mit angegebener Granularit\\u00E4t\\n    -esa | -enablesystemassertions\\n                  Aktiviert System-Assertions\\n    -dsa | -disablesystemassertions\\n                  Deaktiviert System-Assertions\\n    -agentlib:<libname>[=<options>]\\n                  L\\u00E4dt die native Agent Library <libname>. Beispiel: -agentlib:jdwp\\n                  siehe auch -agentlib:jdwp=help\\n    -agentpath:<pathname>[=<options>]\\n                  L\\u00E4dt die native Agent Library mit dem vollst\\u00E4ndigen Pfadnamen\\n    -javaagent:<jarpath>[=<options>]\\n                  \\\n-L\\u00E4dt den Java-Programmiersprachen-Agent, siehe java.lang.instrument\\n    -splash:<imagepath>\\n                  Zeigt den Startbildschirm mit einem angegebenen Bild an\\n                  Skalierte HiDPI-Bilder werden automatisch unterst\\u00FCtzt und verwendet,\\n                  falls verf\\u00FCgbar. Der nicht skalierte Bilddateiname (Beispiel: image.ext)\\n                  muss immer als Argument an die Option \"-splash\" \\u00FCbergeben werden.\\n                  Das am besten geeignete angegebene skalierte Bild wird\\n                  automatisch ausgew\\u00E4hlt.\\n                  Weitere Informationen finden Sie in der Dokumentation zur SplashScreen-API\\n    @argument files\\n                  Eine oder mehrere Argumentdateien mit Optionen\\n    --disable-@files\\n                  Verhindert die weitere Erweiterung von Argumentdateien\\n    --enable-preview\\n                  L\\u00E4sst zu, das Klassen von Vorschaufeatures dieses Release abh\\u00E4ngig sind\\nUm ein Argument f\\u00FCr eine lange Option anzugeben, k\\u00F6nnen Sie --<Name>=<Wert> oder\\n--<Name> <Wert> verwenden.\\n\n+java.launcher.opt.footer = \\    -cp <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n    -classpath <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n    --class-path <Klassensuchpfad mit Verzeichnissen und ZIP-\/JAR-Dateien>\\n                  Eine durch {0} getrennte Liste mit Verzeichnissen, JAR-Archiven\\n                  und ZIP-Archiven, in denen nach Klassendateien gesucht wird.\\n    -p <Modulpfad>\\n    --module-path <Modulpfad>...\\n                  Eine durch {0} getrennte Liste mit Elementen, von denen jedes Element ein Dateipfad\\n                  zu einem Modul oder einem Verzeichnis mit Modulen ist. Jedes Modul ist entweder\\n                  ein modulares JAR oder ein entpacktes Modulverzeichnis.\\n    --upgrade-module-path <Modulpfad>...\\n                  Eine durch {0} getrennte Liste mit Elementen, von denen jedes Element ein Dateipfad\\n                  zu einem Modul oder einem Verzeichnis mit Modulen ist,\\n                  um upgradef\\u00E4hige Module im Laufzeitimage zu ersetzen. Jedes Modul ist entweder\\n                  ein modulares JAR oder ein entpacktes Modulverzeichnis.\\n    --add-modules <Modulname>[,<Modulname>...]\\n                  Root-Module, die zus\\u00E4tzlich zum anf\\u00E4nglichen Modul aufgel\\u00F6st werden sollen.\\n                  <Modulname> kann auch wie folgt lauten: ALL-DEFAULT, ALL-SYSTEM,\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <Modulname>[,<Modulname>...]\\n                  Module, die eingeschr\\u00E4nkte native Vorg\\u00E4nge ausf\\u00FChren d\\u00FCrfen.\\n                  <Modulname> kann auch ALL-UNNAMED lauten.\\n    --list-modules\\n                  Listet beobachtbare Module auf und beendet den Vorgang\\n    -d <Modulname>\\n    --describe-module <Modulname>\\n                  Beschreibt ein Modul und beendet den Vorgang\\n    --dry-run     Erstellt eine VM und l\\u00E4dt die Hauptklasse, f\\u00FChrt aber nicht die Hauptmethode aus.\\n                  Die Option \"--dry-run\" kann n\\u00FCtzlich sein, um die\\n                  Befehlszeilenoptionen, wie die Modulsystemkonfiguration, zu validieren.\\n    --validate-modules\\n                  Validiert alle Module und beendet den Vorgang\\n                  Die Option \"--validate-modules\" kann n\\u00FCtzlich sein, um\\n                  Konflikte und andere Fehler mit Modulen auf dem Modulpfad zu ermitteln.\\n    -D<Name>=<Wert>\\n                  Legt eine Systemeigenschaft fest\\n    -verbose:[class|module|gc|jni]\\n                  Aktiviert die Verbose-Ausgabe f\\u00FCr das angegebene Subsystem\\n    -version      Gibt die Produktversion an den Fehlerstream aus und beendet den Vorgang\\n    --version      Gibt die Produktversion an den Outputstream aus und beendet den Vorgang\\n    -showversion  Gibt die Produktversion an den Fehlerstream aus und setzt den Vorgang fort\\n    --show-version\\n                  Gibt die Produktversion an den Outputstream aus und setzt den Vorgang fort\\n    --show-module-resolution\\n                  Zeigt die Modulaufl\\u00F6sungsausgabe beim Start an\\n    -? -h -help\\n                  Gibt diese Hilfemeldung an den Fehlerstream aus\\n    --help        Gibt diese Hilfemeldung an den Outputstream aus\\n    -X            Gibt Hilfe zu zus\\u00E4tzlichen Optionen an den Fehlerstream aus\\n    --help-extra  Gibt Hilfe zu zus\\u00E4tzlichen Optionen an den Outputstream aus\\n    -ea[:<packagename>...|:<classname>]\\n    -enableassertions[:<packagename>...|:<classname>]\\n                  Aktiviert Assertions mit angegebener Granularit\\u00E4t\\n    -da[:<packagename>...|:<classname>]\\n    -disableassertions[:<packagename>...|:<classname>]\\n                  Deaktiviert Assertions mit angegebener Granularit\\u00E4t\\n    -esa | -enablesystemassertions\\n                  Aktiviert System-Assertions\\n    -dsa | -disablesystemassertions\\n                  Deaktiviert System-Assertions\\n    -agentlib:<libname>[=<options>]\\n                  L\\u00E4dt die native Agent Library <libname>. \\\n+Beispiel: -agentlib:jdwp\\n                  siehe auch -agentlib:jdwp=help\\n    -agentpath:<pathname>[=<options>]\\n                  L\\u00E4dt die native Agent Library mit dem vollst\\u00E4ndigen Pfadnamen\\n    -javaagent:<jarpath>[=<options>]\\n                  L\\u00E4dt den Java-Programmiersprachen-Agent, siehe java.lang.instrument\\n    -splash:<imagepath>\\n                  Zeigt den Startbildschirm mit einem angegebenen Bild an\\n                  Skalierte HiDPI-Bilder werden automatisch unterst\\u00FCtzt und verwendet,\\n                  falls verf\\u00FCgbar. Der nicht skalierte Bilddateiname (Beispiel: image.ext)\\n                  muss immer als Argument an die Option \"-splash\" \\u00FCbergeben werden.\\n                  Das am besten geeignete angegebene skalierte Bild wird\\n                  automatisch ausgew\\u00E4hlt.\\n                  Weitere Informationen finden Sie in der Dokumentation zur SplashScreen-API\\n    @argument files\\n                  Eine oder mehrere Argumentdateien mit Optionen\\n    --disable-@files\\n                  Verhindert die weitere Erweiterung von Argumentdateien\\n    --enable-preview\\n                  L\\u00E4sst zu, das Klassen von Vorschaufeatures dieses Release abh\\u00E4ngig sind\\nUm ein Argument f\\u00FCr eine lange Option anzugeben, k\\u00F6nnen Sie --<Name>=<Wert> oder\\n--<Name> <Wert> verwenden.\\n\n@@ -37,2 +37,2 @@\n-java.launcher.X.usage=\\n    -Xbatch           Deaktiviert die Hintergrundkompilierung\\n    -Xbootclasspath\/a:<durch {0} getrennte Verzeichnisse und ZIP-\/JAR-Dateien>\\n                      An das Ende des Bootstrap Classpaths anh\\u00E4ngen\\n    -Xcheck:jni       F\\u00FChrt zus\\u00E4tzliche Pr\\u00FCfungen f\\u00FCr JNI-Funktionen aus\\n    -Xcomp            Erzwingt die Kompilierung von Methoden beim ersten Aufruf\\n    -Xdebug            F\\u00FChrt nichts aus. Wird aus Gr\\u00FCnden der Abw\\u00E4rtskompatibilit\\u00E4t bereitgestellt.\\n    -Xdiag            Zeigt zus\\u00E4tzliche Diagnosemeldungen an\\n    -Xfuture          Aktiviert strengste Pr\\u00FCfungen, als m\\u00F6glicher zuk\\u00FCnftiger Standardwert erwartet.\\n                      Diese Option ist veraltet und kann in einem\\n                      zuk\\u00FCnftigen Release entfernt werden.\\n    -Xint             Nur Ausf\\u00FChrung im interpretierten Modus\\n    -Xinternalversion\\n                      Zeigt detailliertere JVM-Versionsinformationen an als die\\n                      Option -version\\n    -Xlog:<Optionen>      Konfiguriert oder aktiviert Logging mit dem einheitlichen Java Virtual\\n                      Machine-(JVM-)Logging-Framework. Verwenden Sie -Xlog:help\\n                      f\\u00FCr weitere Einzelheiten.\\n    -Xloggc:<Datei>    Protokolliert den GC-Status in einer Datei mit Zeitstempeln.\\n                      Diese Option ist veraltet und kann in einem\\n                      zuk\\u00FCnftigen Release entfernt werden. Wird durch -Xlog:gc:<Datei> ersetzt.\\n    -Xmixed           Ausf\\u00FChrung im gemischten Modus (Standard)\\n    -Xmn<Gr\\u00F6\\u00DFe>        Legt die anf\\u00E4ngliche und maximale Gr\\u00F6\\u00DFe (in Byte) des Heaps\\n                      f\\u00FCr die Young Generation (Nursery) fest\\n    -Xms<Gr\\u00F6\\u00DFe>        Legt die anf\\u00E4ngliche Java-Heap-Gr\\u00F6\\u00DFe fest\\n    -Xmx<Gr\\u00F6\\u00DFe>        Legt die maximale Java-Heap-Gr\\u00F6\\u00DFe fest\\n    -Xnoclassgc       Deaktiviert die Klassen-Garbage Collection\\n    -Xrs               Reduziert die Verwendung von BS-Signalen durch Java\/VM (siehe Dokumentation)\\n    -Xshare:auto      Verwendet freigegebene Klassendaten, wenn m\\u00F6glich (Standard)\\n    -Xshare:off       Versucht nicht, freigegebene Klassendaten zu verwenden\\n    -Xshare:on        Erfordert die Verwendung freigegebener Klassendaten, verl\\u00E4uft sonst nicht erfolgreich.\\n                      Diese Testoption kann zeitweise zu\\n                      Fehlern f\\u00FChren. Sie darf nicht in Produktionsumgebungen verwendet werden.\\n    -XshowSettings    Zeigt alle Einstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:all\\n                      Zeigt alle Einstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:locale\\n                      Zeigt alle gebietsschemabezogenen Einstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:properties\\n                      Zeigt alle Eigenschaftseinstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:vm\\n                      Zeigt alle VM-bezogenen Einstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:system\\n                      (Nur Linux) Zeigt die Konfiguration des Hostsystems oder Containers an\\n                      und f\\u00E4hrt fort\\n    -Xss<Gr\\u00F6\\u00DFe>        Legt die Stackgr\\u00F6\\u00DFe des Java-Threads fest\\n                      Die tats\\u00E4chliche Gr\\u00F6\\u00DFe kann auf ein Vielfaches der\\n                      Systemseitengr\\u00F6\\u00DFe aufgerundet werden, wenn f\\u00FCr das Betriebssystem erforderlich.\\n    -Xverify          Legt den Modus der Bytecodeverifizierung fest\\n                      Beachten Sie, dass die Option -Xverify:none veraltet ist und\\n                      in einem zuk\\u00FCnftigen Release entfernt werden kann.\\n    --add-reads <Modul>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, damit <Zielmodul> gelesen wird, ungeachtet\\n                      der Moduldeklaration. \\n                      <Zielmodul> \\\n-kann ALL-UNNAMED sein, um alle unbenannten\\n                      Module zu lesen.\\n    --add-exports <Modul>\/<Package>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, um <Package> in <Zielmodul> zu exportieren,\\n                      ungeachtet der Moduldeklaration.\\n                      <Zielmodul> kann ALL-UNNAMED sein, um in alle\\n                      unbenannten Module zu exportieren.\\n    --add-opens <Modul>\/<Package>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, um <Package> in\\n                      <Zielmodul> zu \\u00F6ffnen, ungeachtet der Moduldeklaration.\\n    --limit-modules <Modulname>[,<Modulname>...]\\n                      Grenzt die Gesamtmenge der beobachtbaren Module ein\\n    --patch-module <Modul>=<Datei>({0}<Datei>)*\\n                      \\u00DCberschreibt oder erweitert ein Modul mit Klassen und Ressourcen\\n                      in JAR-Dateien oder Verzeichnissen.\\n    --source <Version>\\n                      Legt die Version der Quelle im Quelldateimodus fest.\\n    --finalization=<Wert>\\n                      Steuert, ob die JVM Objekte finalisiert.\\n                      Dabei ist <Wert> entweder \"enabled\" oder \"disabled\".\\n                      Die Finalisierung ist standardm\\u00E4\\u00DFig aktiviert.\\n\\nDiese zus\\u00E4tzlichen Optionen k\\u00F6nnen jederzeit ohne vorherige Ank\\u00FCndigung ge\\u00E4ndert werden.\\n\n+java.launcher.X.usage=\\n    -Xbatch           Deaktiviert die Hintergrundkompilierung\\n    -Xbootclasspath\/a:<durch {0} getrennte Verzeichnisse und ZIP-\/JAR-Dateien>\\n                      An das Ende des Bootstrap Classpaths anh\\u00E4ngen\\n    -Xcheck:jni       F\\u00FChrt zus\\u00E4tzliche Pr\\u00FCfungen f\\u00FCr JNI-Funktionen aus\\n    -Xcomp            Erzwingt die Kompilierung von Methoden beim ersten Aufruf\\n    -Xdebug           F\\u00FChrt keine Aktion aus. Ist veraltet und wird in einem zuk\\u00FCnftigen Release entfernt.\\n    -Xdiag            Zeigt zus\\u00E4tzliche Diagnosemeldungen an\\n    -Xfuture          Aktiviert strengste Pr\\u00FCfungen, als m\\u00F6glicher zuk\\u00FCnftiger Standardwert erwartet.\\n                      Diese Option ist veraltet und kann in einem\\n                      zuk\\u00FCnftigen Release entfernt werden.\\n    -Xint             Nur Ausf\\u00FChrung im interpretierten Modus\\n    -Xinternalversion\\n                      Zeigt detailliertere JVM-Versionsinformationen an als die\\n                      Option -version\\n    -Xlog:<Optionen>      Konfiguriert oder aktiviert Logging mit dem einheitlichen Java Virtual\\n                      Machine-(JVM-)Logging-Framework. Verwenden Sie -Xlog:help\\n                      f\\u00FCr weitere Einzelheiten.\\n    -Xloggc:<Datei>    Protokolliert den GC-Status in einer Datei mit Zeitstempeln.\\n                      Diese Option ist veraltet und kann in einem\\n                      zuk\\u00FCnftigen Release entfernt werden. Wird durch -Xlog:gc:<Datei> ersetzt.\\n    -Xmixed           Ausf\\u00FChrung im gemischten Modus (Standard)\\n    -Xmn<Gr\\u00F6\\u00DFe>        Legt die anf\\u00E4ngliche und maximale Gr\\u00F6\\u00DFe (in Byte) des Heaps\\n                      f\\u00FCr die Young Generation (Nursery) fest\\n    -Xms<Gr\\u00F6\\u00DFe>        Legt die anf\\u00E4ngliche Java-Heap-Gr\\u00F6\\u00DFe fest\\n    -Xmx<Gr\\u00F6\\u00DFe>        Legt die maximale Java-Heap-Gr\\u00F6\\u00DFe fest\\n    -Xnoclassgc       Deaktiviert die Klassen-Garbage Collection\\n    -Xrs               Reduziert die Verwendung von BS-Signalen durch Java\/VM (siehe Dokumentation)\\n    -Xshare:auto      Verwendet freigegebene Klassendaten, wenn m\\u00F6glich (Standard)\\n    -Xshare:off       Versucht nicht, freigegebene Klassendaten zu verwenden\\n    -Xshare:on        Erfordert die Verwendung freigegebener Klassendaten, verl\\u00E4uft sonst nicht erfolgreich.\\n                      Diese Testoption kann zeitweise zu\\n                      Fehlern f\\u00FChren. Sie darf nicht in Produktionsumgebungen verwendet werden.\\n    -XshowSettings    Zeigt alle Einstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:all\\n                      Zeigt alle Einstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:locale\\n                      Zeigt alle gebietsschemabezogenen Einstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:properties\\n                      Zeigt alle Eigenschaftseinstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:vm\\n                      Zeigt alle VM-bezogenen Einstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:security\\n                      Zeigt alle Sicherheitseinstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:security:all\\n                      Zeigt alle Sicherheitseinstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:security:properties\\n                      Zeigt Sicherheitseigenschaften an und f\\u00E4hrt fort\\n    -XshowSettings:security:providers\\n                      Zeigt statische Sicherheitsprovidereinstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:security:tls\\n                      Zeigt TLS-bezogene Sicherheitseinstellungen an und f\\u00E4hrt fort\\n    -XshowSettings:system\\n                      (Nur Linux) Zeigt die Konfiguration des Hostsystems oder Containers an\\n                      und f\\u00E4hrt fort\\n    -Xss<Gr\\u00F6\\u00DFe>        Legt die Stackgr\\u00F6\\u00DFe des Java-Threads fest\\n                      Die tats\\u00E4chliche Gr\\u00F6\\u00DFe \\\n+kann auf ein Vielfaches der\\n                      Systemseitengr\\u00F6\\u00DFe aufgerundet werden, wenn f\\u00FCr das Betriebssystem erforderlich.\\n    -Xverify          Legt den Modus der Bytecodeverifizierung fest\\n                      Beachten Sie, dass die Option -Xverify:none veraltet ist und\\n                      in einem zuk\\u00FCnftigen Release entfernt werden kann.\\n    --add-reads <Modul>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, damit <Zielmodul> gelesen wird, ungeachtet\\n                      der Moduldeklaration. \\n                      <Zielmodul> kann ALL-UNNAMED sein, um alle unbenannten\\n                      Module zu lesen.\\n    --add-exports <Modul>\/<Package>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, um <Package> in <Zielmodul> zu exportieren,\\n                      ungeachtet der Moduldeklaration.\\n                      <Zielmodul> kann ALL-UNNAMED sein, um in alle\\n                      unbenannten Module zu exportieren.\\n    --add-opens <Modul>\/<Package>=<Zielmodul>(,<Zielmodul>)*\\n                      Aktualisiert <Modul>, um <Package> in\\n                      <Zielmodul> zu \\u00F6ffnen, ungeachtet der Moduldeklaration.\\n    --limit-modules <Modulname>[,<Modulname>...]\\n                      Grenzt die Gesamtmenge der beobachtbaren Module ein\\n    --patch-module <Modul>=<Datei>({0}<Datei>)*\\n                      \\u00DCberschreibt oder erweitert ein Modul mit Klassen und Ressourcen\\n                      in JAR-Dateien oder Verzeichnissen.\\n    --source <Version>\\n                      Legt die Version der Quelle im Quelldateimodus fest.\\n    --finalization=<Wert>\\n                      Steuert, ob die JVM Objekte finalisiert.\\n                      Dabei ist <Wert> entweder \"enabled\" oder \"disabled\".\\n                      Die Finalisierung ist standardm\\u00E4\\u00DFig aktiviert.\\n\\nDiese zus\\u00E4tzlichen Optionen k\\u00F6nnen jederzeit ohne vorherige Ank\\u00FCndigung ge\\u00E4ndert werden.\\n\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher_de.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,3 +33,3 @@\n-java.launcher.opt.footer = \\    -cp <\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u304A\\u3088\\u3073zip\/jar\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u30AF\\u30E9\\u30B9\\u691C\\u7D22\\u30D1\\u30B9>\\n    -classpath <\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u304A\\u3088\\u3073zip\/jar\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u30AF\\u30E9\\u30B9\\u691C\\u7D22\\u30D1\\u30B9>\\n    --class-path <\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u304A\\u3088\\u3073zip\/jar\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u30AF\\u30E9\\u30B9\\u691C\\u7D22\\u30D1\\u30B9>\\n                  {0}\\u533A\\u5207\\u308A\\u30EA\\u30B9\\u30C8(\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3001JAR\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u3001\\n                  ZIP\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6)\\u3067\\u3001\\u30AF\\u30E9\\u30B9\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u691C\\u7D22\\u7528\\u3002\\n    -p <module path>\\n    --module-path <module path>...\\n                  \\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306E{0}\\u533A\\u5207\\u308A\\u30EA\\u30B9\\u30C8\\u3001\\u5404\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\n                  \\u306F\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306E\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3067\\u3059\\u3002\\n    --upgrade-module-path <module path>...\\n                  \\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306E{0}\\u533A\\u5207\\u308A\\u30EA\\u30B9\\u30C8\\u3001\\u5404\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\n                  \\u306F\\u3001\\u30E9\\u30F3\\u30BF\\u30A4\\u30E0\\u30FB\\u30A4\\u30E1\\u30FC\\u30B8\\u5185\\u306E\\u30A2\\u30C3\\u30D7\\u30B0\\u30EC\\u30FC\\u30C9\\u53EF\\u80FD\\u306A\\n                  \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u7F6E\\u63DB\\u3059\\u308B\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306E\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3067\\u3059\\n    --add-modules <module name>[,<module name>...]\\n                  \\u521D\\u671F\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306B\\u52A0\\u3048\\u3066\\u89E3\\u6C7A\\u3059\\u308B\\u30EB\\u30FC\\u30C8\\u30FB\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3002\\n                  <module name>\\u306B\\u306F\\u6B21\\u3082\\u6307\\u5B9A\\u3067\\u304D\\u307E\\u3059: ALL-DEFAULT\\u3001ALL-SYSTEM\\u3001\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <module name>[,<module name>...]\\n                  \\u5236\\u9650\\u3055\\u308C\\u305F\\u30CD\\u30A4\\u30C6\\u30A3\\u30D6\\u64CD\\u4F5C\\u306E\\u5B9F\\u884C\\u3092\\u8A31\\u53EF\\u3055\\u308C\\u3066\\u3044\\u308B\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3002\\n                  <module name>\\u306FALL-UNNAMED\\u306B\\u3059\\u308B\\u3053\\u3068\\u3082\\u3067\\u304D\\u307E\\u3059\\u3002\\n    --list-modules\\n                  \\u53C2\\u7167\\u53EF\\u80FD\\u306A\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u30EA\\u30B9\\u30C8\\u3057\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n    -d <module name>\\n    --describe-module <module name>\\n                  \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u8AAC\\u660E\\u3057\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n    --dry-run     VM\\u3092\\u4F5C\\u6210\\u3057\\u30E1\\u30A4\\u30F3\\u30FB\\u30AF\\u30E9\\u30B9\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3059\\u304C\\u3001\\u30E1\\u30A4\\u30F3\\u30FB\\u30E1\\u30BD\\u30C3\\u30C9\\u306F\\u5B9F\\u884C\\u3057\\u307E\\u305B\\u3093\\u3002\\n                  --dry-run\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u3001\\u6B21\\u306E\\u691C\\u8A3C\\u306B\\u5F79\\u7ACB\\u3064\\u5834\\u5408\\u304C\\u3042\\u308A\\u307E\\u3059:\\n                  \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30B7\\u30B9\\u30C6\\u30E0\\u69CB\\u6210\\u306A\\u3069\\u306E\\u30B3\\u30DE\\u30F3\\u30C9\\u884C\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3002\\n    --validate-modules\\n                  \\u3059\\u3079\\u3066\\u306E\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u691C\\u8A3C\\u3057\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n                  --validate-modules\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u3001\\u6B21\\u306E\\u691C\\u7D22\\u306B\\u5F79\\u7ACB\\u3064\\u5834\\u5408\\u304C\\u3042\\u308A\\u307E\\u3059:\\n                  \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30D1\\u30B9\\u4E0A\\u306E\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3067\\u306E\\u7AF6\\u5408\\u304A\\u3088\\u3073\\u305D\\u306E\\u4ED6\\u306E\\u30A8\\u30E9\\u30FC\\u3002\\n    -D<name>=<value>\\n                  \\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30D7\\u30ED\\u30D1\\u30C6\\u30A3\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n    -verbose:[class|module|gc|jni]\\n                  \\\n-\\u7279\\u5B9A\\u306E\\u30B5\\u30D6\\u30B7\\u30B9\\u30C6\\u30E0\\u3067\\u8A73\\u7D30\\u51FA\\u529B\\u3092\\u6709\\u52B9\\u306B\\u3059\\u308B\\n    -version      \\u88FD\\u54C1\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u30A8\\u30E9\\u30FC\\u30FB\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u3066\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n    --version     \\u88FD\\u54C1\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u51FA\\u529B\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u3066\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n    -showversion  \\u88FD\\u54C1\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u30A8\\u30E9\\u30FC\\u30FB\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    --show-version\\n                  \\u88FD\\u54C1\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u51FA\\u529B\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    --show-module-resolution\\n                  \\u8D77\\u52D5\\u6642\\u306B\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u89E3\\u6C7A\\u51FA\\u529B\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\n    -? -h -help\\n                  \\u3053\\u306E\\u30D8\\u30EB\\u30D7\\u30FB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u30A8\\u30E9\\u30FC\\u30FB\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u307E\\u3059\\n    --help        \\u3053\\u306E\\u30D8\\u30EB\\u30D7\\u30FB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u51FA\\u529B\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u307E\\u3059\\n    -X            \\u8FFD\\u52A0\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306E\\u30D8\\u30EB\\u30D7\\u3092\\u30A8\\u30E9\\u30FC\\u30FB\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u307E\\u3059\\n    --help-extra  \\u8FFD\\u52A0\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306E\\u30D8\\u30EB\\u30D7\\u3092\\u51FA\\u529B\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u307E\\u3059\\n    -ea[:<packagename>...|:<classname>]\\n    -enableassertions[:<packagename>...|:<classname>]\\n                  \\u6307\\u5B9A\\u3057\\u305F\\u7C92\\u5EA6\\u3067\\u30A2\\u30B5\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u6709\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -da[:<packagename>...|:<classname>]\\n    -disableassertions[:<packagename>...|:<classname>]\\n                  \\u6307\\u5B9A\\u3057\\u305F\\u7C92\\u5EA6\\u3067\\u30A2\\u30B5\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -esa | -enablesystemassertions\\n                  \\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30A2\\u30B5\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u6709\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -dsa | -disablesystemassertions\\n                  \\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30A2\\u30B5\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -agentlib:<libname>[=<options>]\\n                  \\u30CD\\u30A4\\u30C6\\u30A3\\u30D6\\u30FB\\u30A8\\u30FC\\u30B8\\u30A7\\u30F3\\u30C8\\u30FB\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA<libname>\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3059\\u3002\\u4F8B: -agentlib:jdwp\\n                  -agentlib:jdwp=help\\u3082\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\n    -agentpath:<pathname>[=<options>]\\n                  \\u30D5\\u30EB\\u30D1\\u30B9\\u540D\\u3092\\u4F7F\\u7528\\u3057\\u3066\\u3001\\u30CD\\u30A4\\u30C6\\u30A3\\u30D6\\u30FB\\u30A8\\u30FC\\u30B8\\u30A7\\u30F3\\u30C8\\u30FB\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3059\\n    -javaagent:<jarpath>[=<options>]\\n                  Java\\u30D7\\u30ED\\u30B0\\u30E9\\u30DF\\u30F3\\u30B0\\u8A00\\u8A9E\\u30A8\\u30FC\\u30B8\\u30A7\\u30F3\\u30C8\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3059\\u3002java.lang.instrument\\u3092\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\n    -splash:<imagepath>\\n                  \\u6307\\u5B9A\\u3055\\u308C\\u305F\\u30A4\\u30E1\\u30FC\\u30B8\\u3092\\u542B\\u3080\\u30B9\\u30D7\\u30E9\\u30C3\\u30B7\\u30E5\\u753B\\u9762\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\n                  HiDPI\\u30B9\\u30B1\\u30FC\\u30EB\\u306E\\u30A4\\u30E1\\u30FC\\u30B8\\u304C\\u81EA\\u52D5\\u7684\\u306B\\u30B5\\u30DD\\u30FC\\u30C8\\u3055\\u308C\\u3066\\u4F7F\\u7528\\u3055\\u308C\\u307E\\u3059\\n                  \\\n-(\\u53EF\\u80FD\\u306A\\u5834\\u5408)\\u3002\\u30B9\\u30B1\\u30FC\\u30EA\\u30F3\\u30B0\\u3055\\u308C\\u306A\\u3044\\u30A4\\u30E1\\u30FC\\u30B8\\u306E\\u30D5\\u30A1\\u30A4\\u30EB\\u540D(image.ext\\u306A\\u3069)\\u3092\\n                  \\u5F15\\u6570\\u3068\\u3057\\u3066-splash\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306B\\u5FC5\\u305A\\u6E21\\u3059\\u5FC5\\u8981\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n                  \\u6307\\u5B9A\\u3055\\u308C\\u305F\\u6700\\u3082\\u9069\\u5207\\u306A\\u30B9\\u30B1\\u30FC\\u30EA\\u30F3\\u30B0\\u6E08\\u30A4\\u30E1\\u30FC\\u30B8\\u304C\\u9078\\u629E\\u3055\\u308C\\u307E\\u3059\\n                  (\\u81EA\\u52D5\\u7684)\\u3002\\n                  \\u8A73\\u7D30\\u306F\\u3001SplashScreen API\\u306E\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\u3092\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\n    @argument\\u30D5\\u30A1\\u30A4\\u30EB\\n                  \\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3092\\u542B\\u30801\\u3064\\u4EE5\\u4E0A\\u306E\\u5F15\\u6570\\u30D5\\u30A1\\u30A4\\u30EB\\n    --disable-@files\\n                  \\u3055\\u3089\\u306A\\u308B\\u5F15\\u6570\\u30D5\\u30A1\\u30A4\\u30EB\\u62E1\\u5F35\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    --enable-preview\\n                  \\u30AF\\u30E9\\u30B9\\u3092\\u3053\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u306E\\u30D7\\u30EC\\u30D3\\u30E5\\u30FC\\u6A5F\\u80FD\\u306B\\u4F9D\\u5B58\\u3055\\u305B\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\n\\u9577\\u3044\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306E\\u5F15\\u6570\\u3092\\u6307\\u5B9A\\u3059\\u308B\\u5834\\u5408\\u3001--<name>=<value>\\u307E\\u305F\\u306F\\n--<name> <value>\\u3092\\u4F7F\\u7528\\u3067\\u304D\\u307E\\u3059\\u3002\\n\n+java.launcher.opt.footer = \\    -cp <\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u304A\\u3088\\u3073zip\/jar\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u30AF\\u30E9\\u30B9\\u691C\\u7D22\\u30D1\\u30B9>\\n    -classpath <\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u304A\\u3088\\u3073zip\/jar\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u30AF\\u30E9\\u30B9\\u691C\\u7D22\\u30D1\\u30B9>\\n    --class-path <\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u304A\\u3088\\u3073zip\/jar\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u30AF\\u30E9\\u30B9\\u691C\\u7D22\\u30D1\\u30B9>\\n                  {0}\\u533A\\u5207\\u308A\\u30EA\\u30B9\\u30C8(\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3001JAR\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6\\u3001\\n                  ZIP\\u30A2\\u30FC\\u30AB\\u30A4\\u30D6)\\u3067\\u3001\\u30AF\\u30E9\\u30B9\\u30FB\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u691C\\u7D22\\u7528\\u3002\\n    -p <module path>\\n    --module-path <module path>...\\n                  \\u8981\\u7D20\\u3092{0}\\u3067\\u533A\\u5207\\u3063\\u305F\\u30EA\\u30B9\\u30C8\\u3067\\u3001\\u5404\\u8981\\u7D20\\u306F\\u6B21\\u3078\\u306E\\u30D5\\u30A1\\u30A4\\u30EB\\u30FB\\u30D1\\u30B9\\u3067\\u3059:\\n                  \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3001\\u307E\\u305F\\u306F\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u304C\\u683C\\u7D0D\\u3055\\u308C\\u3066\\u3044\\u308B\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3002\\u5404\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306F\\u6B21\\u306E\\u3044\\u305A\\u308C\\u304B\\u3067\\u3059:\\n                  \\u30E2\\u30B8\\u30E5\\u30E9JAR\\u307E\\u305F\\u306F\\u5C55\\u958B\\u5F62\\u5F0F\\u306E\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3002\\n    --upgrade-module-path <module path>...\\n                  \\u8981\\u7D20\\u3092{0}\\u3067\\u533A\\u5207\\u3063\\u305F\\u30EA\\u30B9\\u30C8\\u3067\\u3001\\u5404\\u8981\\u7D20\\u306F\\u6B21\\u3078\\u306E\\u30D5\\u30A1\\u30A4\\u30EB\\u30FB\\u30D1\\u30B9\\u3067\\u3059:\\n                  \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3001\\u307E\\u305F\\u306F\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u304C\\u683C\\u7D0D\\u3055\\u308C\\u3066\\u3044\\u308B\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3067\\u3001\\u6B21\\u306E\\u3082\\u306E\\u3092\\u7F6E\\u304D\\u63DB\\u3048\\u307E\\u3059:\\n                  \\u30E9\\u30F3\\u30BF\\u30A4\\u30E0\\u30FB\\u30A4\\u30E1\\u30FC\\u30B8\\u306E\\u30A2\\u30C3\\u30D7\\u30B0\\u30EC\\u30FC\\u30C9\\u53EF\\u80FD\\u306A\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3002\\u5404\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306F\\u6B21\\u306E\\u3044\\u305A\\u308C\\u304B\\u3067\\u3059:\\n                  \\u30E2\\u30B8\\u30E5\\u30E9JAR\\u307E\\u305F\\u306F\\u5C55\\u958B\\u5F62\\u5F0F\\u306E\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u3002\\n    --add-modules <module name>[,<module name>...]\\n                  \\u521D\\u671F\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306B\\u52A0\\u3048\\u3066\\u89E3\\u6C7A\\u3059\\u308B\\u30EB\\u30FC\\u30C8\\u30FB\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3002\\n                  <module name>\\u306B\\u306F\\u6B21\\u3082\\u6307\\u5B9A\\u3067\\u304D\\u307E\\u3059: ALL-DEFAULT\\u3001ALL-SYSTEM\\u3001\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <module name>[,<module name>...]\\n                  \\u5236\\u9650\\u3055\\u308C\\u305F\\u30CD\\u30A4\\u30C6\\u30A3\\u30D6\\u64CD\\u4F5C\\u306E\\u5B9F\\u884C\\u3092\\u8A31\\u53EF\\u3055\\u308C\\u3066\\u3044\\u308B\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3002\\n                  <module name>\\u306FALL-UNNAMED\\u306B\\u3059\\u308B\\u3053\\u3068\\u3082\\u3067\\u304D\\u307E\\u3059\\u3002\\n    --list-modules\\n                  \\u53C2\\u7167\\u53EF\\u80FD\\u306A\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u30EA\\u30B9\\u30C8\\u3057\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n    -d <module name>\\n    --describe-module <module name>\\n                  \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u8AAC\\u660E\\u3057\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n    --dry-run     VM\\u3092\\u4F5C\\u6210\\u3057\\u30E1\\u30A4\\u30F3\\u30FB\\u30AF\\u30E9\\u30B9\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3059\\u304C\\u3001\\u30E1\\u30A4\\u30F3\\u30FB\\u30E1\\u30BD\\u30C3\\u30C9\\u306F\\u5B9F\\u884C\\u3057\\u307E\\u305B\\u3093\\u3002\\n                  --dry-run\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u3001\\u6B21\\u306E\\u691C\\u8A3C\\u306B\\u5F79\\u7ACB\\u3064\\u5834\\u5408\\u304C\\u3042\\u308A\\u307E\\u3059:\\n                  \\\n+\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30B7\\u30B9\\u30C6\\u30E0\\u69CB\\u6210\\u306A\\u3069\\u306E\\u30B3\\u30DE\\u30F3\\u30C9\\u884C\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3002\\n    --validate-modules\\n                  \\u3059\\u3079\\u3066\\u306E\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u691C\\u8A3C\\u3057\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n                  --validate-modules\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u3001\\u6B21\\u306E\\u691C\\u7D22\\u306B\\u5F79\\u7ACB\\u3064\\u5834\\u5408\\u304C\\u3042\\u308A\\u307E\\u3059:\\n                  \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30D1\\u30B9\\u4E0A\\u306E\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3067\\u306E\\u7AF6\\u5408\\u304A\\u3088\\u3073\\u305D\\u306E\\u4ED6\\u306E\\u30A8\\u30E9\\u30FC\\u3002\\n    -D<name>=<value>\\n                  \\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30D7\\u30ED\\u30D1\\u30C6\\u30A3\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n    -verbose:[class|module|gc|jni]\\n                  \\u7279\\u5B9A\\u306E\\u30B5\\u30D6\\u30B7\\u30B9\\u30C6\\u30E0\\u3067\\u8A73\\u7D30\\u51FA\\u529B\\u3092\\u6709\\u52B9\\u306B\\u3059\\u308B\\n    -version      \\u88FD\\u54C1\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u30A8\\u30E9\\u30FC\\u30FB\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u3066\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n    --version     \\u88FD\\u54C1\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u51FA\\u529B\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u3066\\u7D42\\u4E86\\u3057\\u307E\\u3059\\n    -showversion  \\u88FD\\u54C1\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u30A8\\u30E9\\u30FC\\u30FB\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    --show-version\\n                  \\u88FD\\u54C1\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u51FA\\u529B\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    --show-module-resolution\\n                  \\u8D77\\u52D5\\u6642\\u306B\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u89E3\\u6C7A\\u51FA\\u529B\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\n    -? -h -help\\n                  \\u3053\\u306E\\u30D8\\u30EB\\u30D7\\u30FB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u30A8\\u30E9\\u30FC\\u30FB\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u307E\\u3059\\n    --help        \\u3053\\u306E\\u30D8\\u30EB\\u30D7\\u30FB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u51FA\\u529B\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u307E\\u3059\\n    -X            \\u8FFD\\u52A0\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306E\\u30D8\\u30EB\\u30D7\\u3092\\u30A8\\u30E9\\u30FC\\u30FB\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u307E\\u3059\\n    --help-extra  \\u8FFD\\u52A0\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306E\\u30D8\\u30EB\\u30D7\\u3092\\u51FA\\u529B\\u30B9\\u30C8\\u30EA\\u30FC\\u30E0\\u306B\\u51FA\\u529B\\u3057\\u307E\\u3059\\n    -ea[:<packagename>...|:<classname>]\\n    -enableassertions[:<packagename>...|:<classname>]\\n                  \\u6307\\u5B9A\\u3057\\u305F\\u7C92\\u5EA6\\u3067\\u30A2\\u30B5\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u6709\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -da[:<packagename>...|:<classname>]\\n    -disableassertions[:<packagename>...|:<classname>]\\n                  \\u6307\\u5B9A\\u3057\\u305F\\u7C92\\u5EA6\\u3067\\u30A2\\u30B5\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -esa | -enablesystemassertions\\n                  \\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30A2\\u30B5\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u6709\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -dsa | -disablesystemassertions\\n                  \\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30A2\\u30B5\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -agentlib:<libname>[=<options>]\\n                  \\u30CD\\u30A4\\u30C6\\u30A3\\u30D6\\u30FB\\u30A8\\u30FC\\u30B8\\u30A7\\u30F3\\u30C8\\u30FB\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA<libname>\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3059\\u3002\\u4F8B: -agentlib:jdwp\\n                  -agentlib:jdwp=help\\u3082\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\n    -agentpath:<pathname>[=<options>]\\n                  \\\n+\\u30D5\\u30EB\\u30D1\\u30B9\\u540D\\u3092\\u4F7F\\u7528\\u3057\\u3066\\u3001\\u30CD\\u30A4\\u30C6\\u30A3\\u30D6\\u30FB\\u30A8\\u30FC\\u30B8\\u30A7\\u30F3\\u30C8\\u30FB\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3059\\n    -javaagent:<jarpath>[=<options>]\\n                  Java\\u30D7\\u30ED\\u30B0\\u30E9\\u30DF\\u30F3\\u30B0\\u8A00\\u8A9E\\u30A8\\u30FC\\u30B8\\u30A7\\u30F3\\u30C8\\u3092\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3059\\u3002java.lang.instrument\\u3092\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\n    -splash:<imagepath>\\n                  \\u6307\\u5B9A\\u3055\\u308C\\u305F\\u30A4\\u30E1\\u30FC\\u30B8\\u3092\\u542B\\u3080\\u30B9\\u30D7\\u30E9\\u30C3\\u30B7\\u30E5\\u753B\\u9762\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\n                  HiDPI\\u30B9\\u30B1\\u30FC\\u30EB\\u306E\\u30A4\\u30E1\\u30FC\\u30B8\\u304C\\u81EA\\u52D5\\u7684\\u306B\\u30B5\\u30DD\\u30FC\\u30C8\\u3055\\u308C\\u3066\\u4F7F\\u7528\\u3055\\u308C\\u307E\\u3059\\n                  (\\u53EF\\u80FD\\u306A\\u5834\\u5408)\\u3002\\u30B9\\u30B1\\u30FC\\u30EA\\u30F3\\u30B0\\u3055\\u308C\\u306A\\u3044\\u30A4\\u30E1\\u30FC\\u30B8\\u306E\\u30D5\\u30A1\\u30A4\\u30EB\\u540D(image.ext\\u306A\\u3069)\\u3092\\n                  \\u5F15\\u6570\\u3068\\u3057\\u3066-splash\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306B\\u5FC5\\u305A\\u6E21\\u3059\\u5FC5\\u8981\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n                  \\u6307\\u5B9A\\u3055\\u308C\\u305F\\u6700\\u3082\\u9069\\u5207\\u306A\\u30B9\\u30B1\\u30FC\\u30EA\\u30F3\\u30B0\\u6E08\\u30A4\\u30E1\\u30FC\\u30B8\\u304C\\u9078\\u629E\\u3055\\u308C\\u307E\\u3059\\n                  (\\u81EA\\u52D5\\u7684)\\u3002\\n                  \\u8A73\\u7D30\\u306F\\u3001SplashScreen API\\u306E\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\u3092\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\n    @argument\\u30D5\\u30A1\\u30A4\\u30EB\\n                  \\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3092\\u542B\\u30801\\u3064\\u4EE5\\u4E0A\\u306E\\u5F15\\u6570\\u30D5\\u30A1\\u30A4\\u30EB\\n    --disable-@files\\n                  \\u3055\\u3089\\u306A\\u308B\\u5F15\\u6570\\u30D5\\u30A1\\u30A4\\u30EB\\u62E1\\u5F35\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    --enable-preview\\n                  \\u30AF\\u30E9\\u30B9\\u3092\\u3053\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u306E\\u30D7\\u30EC\\u30D3\\u30E5\\u30FC\\u6A5F\\u80FD\\u306B\\u4F9D\\u5B58\\u3055\\u305B\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\n\\u9577\\u3044\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306E\\u5F15\\u6570\\u3092\\u6307\\u5B9A\\u3059\\u308B\\u5834\\u5408\\u3001--<name>=<value>\\u307E\\u305F\\u306F\\n--<name> <value>\\u3092\\u4F7F\\u7528\\u3067\\u304D\\u307E\\u3059\\u3002\\n\n@@ -38,3 +38,3 @@\n-java.launcher.X.usage=\\n    -Xbatch           \\u30D0\\u30C3\\u30AF\\u30B0\\u30E9\\u30A6\\u30F3\\u30C9\\u30FB\\u30B3\\u30F3\\u30D1\\u30A4\\u30EB\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -Xbootclasspath\/a:<directories and zip\/jar files separated by {0}>\\n                      \\u30D6\\u30FC\\u30C8\\u30B9\\u30C8\\u30E9\\u30C3\\u30D7\\u30FB\\u30AF\\u30E9\\u30B9\\u30FB\\u30D1\\u30B9\\u306E\\u6700\\u5F8C\\u306B\\u8FFD\\u52A0\\u3057\\u307E\\u3059\\n    -Xcheck:jni       JNI\\u95A2\\u6570\\u306B\\u5BFE\\u3059\\u308B\\u8FFD\\u52A0\\u306E\\u30C1\\u30A7\\u30C3\\u30AF\\u3092\\u5B9F\\u884C\\u3057\\u307E\\u3059\\n    -Xcomp            \\u521D\\u56DE\\u547C\\u51FA\\u3057\\u6642\\u306B\\u30E1\\u30BD\\u30C3\\u30C9\\u306E\\u30B3\\u30F3\\u30D1\\u30A4\\u30EB\\u3092\\u5F37\\u5236\\u3057\\u307E\\u3059\\n    -Xdebug           \\u4F55\\u3082\\u884C\\u3044\\u307E\\u305B\\u3093\\u3002\\u4E0B\\u4F4D\\u4E92\\u63DB\\u6027\\u306E\\u305F\\u3081\\u306B\\u7528\\u610F\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\\n    -Xdiag            \\u8FFD\\u52A0\\u306E\\u8A3A\\u65AD\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\n    -Xfuture          \\u5C06\\u6765\\u306E\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u3092\\u898B\\u8D8A\\u3057\\u3066\\u3001\\u6700\\u3082\\u53B3\\u5BC6\\u306A\\u30C1\\u30A7\\u30C3\\u30AF\\u3092\\u6709\\u52B9\\u306B\\u3057\\u307E\\u3059\\n                      \\u3053\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u975E\\u63A8\\u5968\\u3067\\u3042\\u308A\\u3001\\u5C06\\u6765\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u3067\\u524A\\u9664\\u3055\\u308C\\u308B\\n                      \\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n    -Xint             \\u30A4\\u30F3\\u30BF\\u30D7\\u30EA\\u30BF\\u30FB\\u30E2\\u30FC\\u30C9\\u306E\\u5B9F\\u884C\\u306E\\u307F\\n    -Xinternalversion\\n                      -version\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3088\\u308A\\u8A73\\u7D30\\u306AJVM\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u60C5\\u5831\\u3092\\n                      \\u8868\\u793A\\u3057\\u307E\\u3059\\n    -Xlog:<opts>      Java Virtual Machine (JVM)\\u7D71\\u5408\\u30ED\\u30AE\\u30F3\\u30B0\\u30FB\\u30D5\\u30EC\\u30FC\\u30E0\\u30EF\\u30FC\\u30AF\\u3067\\u306E\\n                      \\u30ED\\u30AE\\u30F3\\u30B0\\u3092\\u69CB\\u6210\\u307E\\u305F\\u306F\\u6709\\u52B9\\u5316\\u3057\\u307E\\u3059\\u3002\\u8A73\\u7D30\\u306F\\u3001-Xlog:help\\u3092\\n                      \\u4F7F\\u7528\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\n    -Xloggc:<file>    \\u30BF\\u30A4\\u30E0\\u30B9\\u30BF\\u30F3\\u30D7\\u304C\\u4ED8\\u3044\\u305F\\u30D5\\u30A1\\u30A4\\u30EB\\u306BGC\\u30B9\\u30C6\\u30FC\\u30BF\\u30B9\\u306E\\u30ED\\u30B0\\u3092\\u8A18\\u9332\\u3057\\u307E\\u3059\\n                      \\u3053\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u975E\\u63A8\\u5968\\u3067\\u3042\\u308A\\u3001\\u5C06\\u6765\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u3067\\u524A\\u9664\\u3055\\u308C\\u308B\\n                      \\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002-Xlog:gc:<file>\\u3067\\u7F6E\\u63DB\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\\n    -Xmixed           \\u6DF7\\u5408\\u30E2\\u30FC\\u30C9\\u306E\\u5B9F\\u884C(\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8)\\n    -Xmn<size>        \\u82E5\\u3044\\u4E16\\u4EE3(\\u30CA\\u30FC\\u30B5\\u30EA)\\u306E\\u30D2\\u30FC\\u30D7\\u306E\\u521D\\u671F\\u30B5\\u30A4\\u30BA\\u304A\\u3088\\u3073\\u6700\\u5927\\u30B5\\u30A4\\u30BA\\n                      (\\u30D0\\u30A4\\u30C8\\u5358\\u4F4D)\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n    -Xms<size>        Java\\u306E\\u521D\\u671F\\u30D2\\u30FC\\u30D7\\u30FB\\u30B5\\u30A4\\u30BA\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n    -Xmx<size>        Java\\u306E\\u6700\\u5927\\u30D2\\u30FC\\u30D7\\u30FB\\u30B5\\u30A4\\u30BA\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n    -Xnoclassgc       \\u30AF\\u30E9\\u30B9\\u306E\\u30AC\\u30D9\\u30FC\\u30B8\\u30FB\\u30B3\\u30EC\\u30AF\\u30B7\\u30E7\\u30F3\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -Xrs              Java\/VM\\u306B\\u3088\\u308BOS\\u30B7\\u30B0\\u30CA\\u30EB\\u306E\\u4F7F\\u7528\\u3092\\u524A\\u6E1B\\u3057\\u307E\\u3059(\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\u3092\\u53C2\\u7167)\\n    -Xshare:auto      \\u53EF\\u80FD\\u3067\\u3042\\u308C\\u3070\\u5171\\u6709\\u30AF\\u30E9\\u30B9\\u30FB\\u30C7\\u30FC\\u30BF\\u3092\\u4F7F\\u7528\\u3057\\u307E\\u3059(\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8)\\n    -Xshare:off       \\\n-\\u5171\\u6709\\u30AF\\u30E9\\u30B9\\u30FB\\u30C7\\u30FC\\u30BF\\u306E\\u4F7F\\u7528\\u3092\\u8A66\\u307F\\u307E\\u305B\\u3093\\n    -Xshare:on        \\u5171\\u6709\\u30AF\\u30E9\\u30B9\\u30FB\\u30C7\\u30FC\\u30BF\\u306E\\u4F7F\\u7528\\u3092\\u5FC5\\u9808\\u306B\\u3057\\u3001\\u3067\\u304D\\u306A\\u3051\\u308C\\u3070\\u5931\\u6557\\u3057\\u307E\\u3059\\u3002\\n                      \\u3053\\u308C\\u306F\\u30C6\\u30B9\\u30C8\\u30FB\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3067\\u3042\\u308A\\u3001\\u65AD\\u7D9A\\u7684\\u306A\\u5931\\u6557\\u306B\\u3064\\u306A\\u304C\\u308B\\n                      \\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\u672C\\u756A\\u74B0\\u5883\\u3067\\u306F\\u4F7F\\u7528\\u3057\\u306A\\u3044\\u3067\\u304F\\u3060\\u3055\\u3044\\u3002\\n    -XshowSettings    \\u3059\\u3079\\u3066\\u306E\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:all\\n                      \\u3059\\u3079\\u3066\\u306E\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:locale\\n                      \\u3059\\u3079\\u3066\\u306E\\u30ED\\u30B1\\u30FC\\u30EB\\u95A2\\u9023\\u306E\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:properties\\n                      \\u3059\\u3079\\u3066\\u306E\\u30D7\\u30ED\\u30D1\\u30C6\\u30A3\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:vm\\n                      \\u3059\\u3079\\u3066\\u306EVM\\u95A2\\u9023\\u306E\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:system\\n                      (Linux\\u306E\\u307F)\\u30DB\\u30B9\\u30C8\\u30FB\\u30B7\\u30B9\\u30C6\\u30E0\\u307E\\u305F\\u306F\\u30B3\\u30F3\\u30C6\\u30CA\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\n                      \\u69CB\\u6210\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -Xss<size>        java\\u30B9\\u30EC\\u30C3\\u30C9\\u306E\\u30B9\\u30BF\\u30C3\\u30AF\\u30FB\\u30B5\\u30A4\\u30BA\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n                      \\u5B9F\\u969B\\u306E\\u30B5\\u30A4\\u30BA\\u306F\\u3001\\u6B21\\u306E\\u500D\\u6570\\u306B\\u5207\\u308A\\u4E0A\\u3052\\u3089\\u308C\\u308B\\u5834\\u5408\\u304C\\u3042\\u308A\\u307E\\u3059: \\n                      \\u30AA\\u30DA\\u30EC\\u30FC\\u30C6\\u30A3\\u30F3\\u30B0\\u30FB\\u30B7\\u30B9\\u30C6\\u30E0\\u306E\\u8981\\u4EF6\\u306B\\u5FDC\\u3058\\u305F\\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30DA\\u30FC\\u30B8\\u30FB\\u30B5\\u30A4\\u30BA\\u3002\\n    -Xverify          \\u30D0\\u30A4\\u30C8\\u30B3\\u30FC\\u30C9\\u30FB\\u30D9\\u30EA\\u30D5\\u30A1\\u30A4\\u30A2\\u306E\\u30E2\\u30FC\\u30C9\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n                      \\u30AA\\u30D7\\u30B7\\u30E7\\u30F3-Xverify:none\\u306F\\u975E\\u63A8\\u5968\\u306B\\u306A\\u308A\\u3001\\n                      \\u5C06\\u6765\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u3067\\u524A\\u9664\\u3055\\u308C\\u308B\\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n    --add-reads <module>=<target-module>(,<target-module>)*\\n                      \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u5BA3\\u8A00\\u306B\\u95A2\\u4FC2\\u306A\\u304F\\u3001<module>\\u3092\\u66F4\\u65B0\\u3057\\u3066<target-module>\\u3092\\n                      \\u8AAD\\u307F\\u53D6\\u308A\\u307E\\u3059\\u3002 \\n                      <target-module>\\u3092ALL-UNNAMED\\u306B\\u8A2D\\u5B9A\\u3059\\u308B\\u3068\\u3001\\u3059\\u3079\\u3066\\u306E\\u540D\\u524D\\u306E\\u306A\\u3044\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\n                      \\u8AAD\\u307F\\u53D6\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\\n    --add-exports <module>\/<package>=<target-module>(,<target-module>)*\\n                      \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u5BA3\\u8A00\\u306B\\u95A2\\u4FC2\\u306A\\u304F\\u3001<module>\\u3092\\u66F4\\u65B0\\u3057\\u3066<package>\\u3092<target-module>\\u306B\\n                      \\u30A8\\u30AF\\u30B9\\u30DD\\u30FC\\u30C8\\u3057\\u307E\\u3059\\u3002\\n                      <target-module>\\u3092ALL-UNNAMED\\u306B\\u8A2D\\u5B9A\\u3059\\u308B\\u3068\\u3001\\u3059\\u3079\\u3066\\u306E\\u540D\\u524D\\u306E\\u306A\\u3044\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306B\\n                      \\u30A8\\u30AF\\u30B9\\u30DD\\u30FC\\u30C8\\u3067\\u304D\\u307E\\u3059\\u3002\\n    --add-opens <module>\/<package>=<target-module>(,<target-module>)*\\n        \\\n-              \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u5BA3\\u8A00\\u306B\\u95A2\\u4FC2\\u306A\\u304F\\u3001<module>\\u3092\\u66F4\\u65B0\\u3057\\u3066<package>\\u3092\\n                      <target-module>\\u306B\\u958B\\u304D\\u307E\\u3059\\u3002\\n    --limit-modules <module name>[,<module name>...]\\n                      \\u53C2\\u7167\\u53EF\\u80FD\\u306A\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306E\\u9818\\u57DF\\u3092\\u5236\\u9650\\u3057\\u307E\\u3059\\n    --patch-module <module>=<file>({0}<file>)*\\n                      JAR\\u30D5\\u30A1\\u30A4\\u30EB\\u307E\\u305F\\u306F\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306E\\u30AF\\u30E9\\u30B9\\u304A\\u3088\\u3073\\u30EA\\u30BD\\u30FC\\u30B9\\u3067\\n                      \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u30AA\\u30FC\\u30D0\\u30FC\\u30E9\\u30A4\\u30C9\\u307E\\u305F\\u306F\\u62E1\\u5F35\\u3057\\u307E\\u3059\\u3002\\n    --source <version>\\n                      \\u30BD\\u30FC\\u30B9\\u30D5\\u30A1\\u30A4\\u30EB\\u30FB\\u30E2\\u30FC\\u30C9\\u3067\\u30BD\\u30FC\\u30B9\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\u3002\\n    --finalization=<value>\\n                      JVM\\u304C\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u306E\\u30D5\\u30A1\\u30A4\\u30CA\\u30E9\\u30A4\\u30BA\\u3092\\u5B9F\\u884C\\u3059\\u308B\\u304B\\u3069\\u3046\\u304B\\u3092\\u5236\\u5FA1\\u3057\\u307E\\u3059\\n                      <value>\\u306F\"enabled\"\\u307E\\u305F\\u306F\"disabled\"\\u306E\\u3044\\u305A\\u308C\\u304B\\u3067\\u3059\\u3002\\n                      \\u30D5\\u30A1\\u30A4\\u30CA\\u30E9\\u30A4\\u30BA\\u306F\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u3067\\u6709\\u52B9\\u306B\\u306A\\u3063\\u3066\\u3044\\u307E\\u3059\\u3002\\n\\n\\u3053\\u306E\\u8FFD\\u52A0\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u4E88\\u544A\\u306A\\u3057\\u306B\\u5909\\u66F4\\u3055\\u308C\\u308B\\u3053\\u3068\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n\n+java.launcher.X.usage=\\n    -Xbatch           \\u30D0\\u30C3\\u30AF\\u30B0\\u30E9\\u30A6\\u30F3\\u30C9\\u30FB\\u30B3\\u30F3\\u30D1\\u30A4\\u30EB\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -Xbootclasspath\/a:<directories and zip\/jar files separated by {0}>\\n                      \\u30D6\\u30FC\\u30C8\\u30B9\\u30C8\\u30E9\\u30C3\\u30D7\\u30FB\\u30AF\\u30E9\\u30B9\\u30FB\\u30D1\\u30B9\\u306E\\u6700\\u5F8C\\u306B\\u8FFD\\u52A0\\u3057\\u307E\\u3059\\n    -Xcheck:jni       JNI\\u95A2\\u6570\\u306B\\u5BFE\\u3059\\u308B\\u8FFD\\u52A0\\u306E\\u30C1\\u30A7\\u30C3\\u30AF\\u3092\\u5B9F\\u884C\\u3057\\u307E\\u3059\\n    -Xcomp            \\u521D\\u56DE\\u547C\\u51FA\\u3057\\u6642\\u306B\\u30E1\\u30BD\\u30C3\\u30C9\\u306E\\u30B3\\u30F3\\u30D1\\u30A4\\u30EB\\u3092\\u5F37\\u5236\\u3057\\u307E\\u3059\\n    -Xdebug           \\u4F55\\u3082\\u5B9F\\u884C\\u3055\\u308C\\u307E\\u305B\\u3093\\u3002\\u5C06\\u6765\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u3067\\u524A\\u9664\\u3055\\u308C\\u308B\\u305F\\u3081\\u3001\\u975E\\u63A8\\u5968\\u306B\\u306A\\u308A\\u307E\\u3057\\u305F\\u3002\\n    -Xdiag            \\u8FFD\\u52A0\\u306E\\u8A3A\\u65AD\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\n    -Xfuture          \\u5C06\\u6765\\u306E\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u3092\\u898B\\u8D8A\\u3057\\u3066\\u3001\\u6700\\u3082\\u53B3\\u5BC6\\u306A\\u30C1\\u30A7\\u30C3\\u30AF\\u3092\\u6709\\u52B9\\u306B\\u3057\\u307E\\u3059\\n                      \\u3053\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u975E\\u63A8\\u5968\\u3067\\u3042\\u308A\\u3001\\u5C06\\u6765\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u3067\\u524A\\u9664\\u3055\\u308C\\u308B\\n                      \\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n    -Xint             \\u30A4\\u30F3\\u30BF\\u30D7\\u30EA\\u30BF\\u30FB\\u30E2\\u30FC\\u30C9\\u306E\\u5B9F\\u884C\\u306E\\u307F\\n    -Xinternalversion\\n                      -version\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3088\\u308A\\u8A73\\u7D30\\u306AJVM\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u60C5\\u5831\\u3092\\n                      \\u8868\\u793A\\u3057\\u307E\\u3059\\n    -Xlog:<opts>      Java Virtual Machine (JVM)\\u7D71\\u5408\\u30ED\\u30AE\\u30F3\\u30B0\\u30FB\\u30D5\\u30EC\\u30FC\\u30E0\\u30EF\\u30FC\\u30AF\\u3067\\u306E\\n                      \\u30ED\\u30AE\\u30F3\\u30B0\\u3092\\u69CB\\u6210\\u307E\\u305F\\u306F\\u6709\\u52B9\\u5316\\u3057\\u307E\\u3059\\u3002\\u8A73\\u7D30\\u306F\\u3001-Xlog:help\\u3092\\n                      \\u4F7F\\u7528\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\n    -Xloggc:<file>    \\u30BF\\u30A4\\u30E0\\u30B9\\u30BF\\u30F3\\u30D7\\u304C\\u4ED8\\u3044\\u305F\\u30D5\\u30A1\\u30A4\\u30EB\\u306BGC\\u30B9\\u30C6\\u30FC\\u30BF\\u30B9\\u306E\\u30ED\\u30B0\\u3092\\u8A18\\u9332\\u3057\\u307E\\u3059\\n                      \\u3053\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u975E\\u63A8\\u5968\\u3067\\u3042\\u308A\\u3001\\u5C06\\u6765\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u3067\\u524A\\u9664\\u3055\\u308C\\u308B\\n                      \\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002-Xlog:gc:<file>\\u3067\\u7F6E\\u63DB\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\\n    -Xmixed           \\u6DF7\\u5408\\u30E2\\u30FC\\u30C9\\u306E\\u5B9F\\u884C(\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8)\\n    -Xmn<size>        \\u82E5\\u3044\\u4E16\\u4EE3(\\u30CA\\u30FC\\u30B5\\u30EA)\\u306E\\u30D2\\u30FC\\u30D7\\u306E\\u521D\\u671F\\u30B5\\u30A4\\u30BA\\u304A\\u3088\\u3073\\u6700\\u5927\\u30B5\\u30A4\\u30BA\\n                      (\\u30D0\\u30A4\\u30C8\\u5358\\u4F4D)\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n    -Xms<size>        Java\\u306E\\u521D\\u671F\\u30D2\\u30FC\\u30D7\\u30FB\\u30B5\\u30A4\\u30BA\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n    -Xmx<size>        Java\\u306E\\u6700\\u5927\\u30D2\\u30FC\\u30D7\\u30FB\\u30B5\\u30A4\\u30BA\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n    -Xnoclassgc       \\u30AF\\u30E9\\u30B9\\u306E\\u30AC\\u30D9\\u30FC\\u30B8\\u30FB\\u30B3\\u30EC\\u30AF\\u30B7\\u30E7\\u30F3\\u3092\\u7121\\u52B9\\u306B\\u3057\\u307E\\u3059\\n    -Xrs              Java\/VM\\u306B\\u3088\\u308BOS\\u30B7\\u30B0\\u30CA\\u30EB\\u306E\\u4F7F\\u7528\\u3092\\u524A\\u6E1B\\u3057\\u307E\\u3059(\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\u3092\\u53C2\\u7167)\\n    -Xshare:auto      \\u53EF\\u80FD\\u3067\\u3042\\u308C\\u3070\\u5171\\u6709\\u30AF\\u30E9\\u30B9\\u30FB\\u30C7\\u30FC\\u30BF\\u3092\\u4F7F\\u7528\\u3057\\u307E\\u3059(\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8)\\n    -Xshare:off       \\\n+\\u5171\\u6709\\u30AF\\u30E9\\u30B9\\u30FB\\u30C7\\u30FC\\u30BF\\u306E\\u4F7F\\u7528\\u3092\\u8A66\\u307F\\u307E\\u305B\\u3093\\n    -Xshare:on        \\u5171\\u6709\\u30AF\\u30E9\\u30B9\\u30FB\\u30C7\\u30FC\\u30BF\\u306E\\u4F7F\\u7528\\u3092\\u5FC5\\u9808\\u306B\\u3057\\u3001\\u3067\\u304D\\u306A\\u3051\\u308C\\u3070\\u5931\\u6557\\u3057\\u307E\\u3059\\u3002\\n                      \\u3053\\u308C\\u306F\\u30C6\\u30B9\\u30C8\\u30FB\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3067\\u3042\\u308A\\u3001\\u65AD\\u7D9A\\u7684\\u306A\\u5931\\u6557\\u306B\\u3064\\u306A\\u304C\\u308B\\n                      \\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\u672C\\u756A\\u74B0\\u5883\\u3067\\u306F\\u4F7F\\u7528\\u3057\\u306A\\u3044\\u3067\\u304F\\u3060\\u3055\\u3044\\u3002\\n    -XshowSettings    \\u3059\\u3079\\u3066\\u306E\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:all\\n                      \\u3059\\u3079\\u3066\\u306E\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:locale\\n                      \\u3059\\u3079\\u3066\\u306E\\u30ED\\u30B1\\u30FC\\u30EB\\u95A2\\u9023\\u306E\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:properties\\n                      \\u3059\\u3079\\u3066\\u306E\\u30D7\\u30ED\\u30D1\\u30C6\\u30A3\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:vm\\n                      \\u3059\\u3079\\u3066\\u306EVM\\u95A2\\u9023\\u306E\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:security\\n                      \\u3059\\u3079\\u3066\\u306E\\u30BB\\u30AD\\u30E5\\u30EA\\u30C6\\u30A3\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:security:all\\n                      \\u3059\\u3079\\u3066\\u306E\\u30BB\\u30AD\\u30E5\\u30EA\\u30C6\\u30A3\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:security:properties\\n                      \\u30BB\\u30AD\\u30E5\\u30EA\\u30C6\\u30A3\\u30FB\\u30D7\\u30ED\\u30D1\\u30C6\\u30A3\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:security:providers\\n                      \\u9759\\u7684\\u30BB\\u30AD\\u30E5\\u30EA\\u30C6\\u30A3\\u30FB\\u30D7\\u30ED\\u30D0\\u30A4\\u30C0\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:security:tls\\n                      TLS\\u95A2\\u9023\\u306E\\u30BB\\u30AD\\u30E5\\u30EA\\u30C6\\u30A3\\u8A2D\\u5B9A\\u3092\\u8868\\u793A\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -XshowSettings:system\\n                      (Linux\\u306E\\u307F)\\u30DB\\u30B9\\u30C8\\u30FB\\u30B7\\u30B9\\u30C6\\u30E0\\u307E\\u305F\\u306F\\u30B3\\u30F3\\u30C6\\u30CA\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\n                      \\u69CB\\u6210\\u3057\\u3066\\u7D9A\\u884C\\u3057\\u307E\\u3059\\n    -Xss<size>        java\\u30B9\\u30EC\\u30C3\\u30C9\\u306E\\u30B9\\u30BF\\u30C3\\u30AF\\u30FB\\u30B5\\u30A4\\u30BA\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n                      \\u5B9F\\u969B\\u306E\\u30B5\\u30A4\\u30BA\\u306F\\u3001\\u6B21\\u306E\\u500D\\u6570\\u306B\\u5207\\u308A\\u4E0A\\u3052\\u3089\\u308C\\u308B\\u5834\\u5408\\u304C\\u3042\\u308A\\u307E\\u3059: \\n                      \\u30AA\\u30DA\\u30EC\\u30FC\\u30C6\\u30A3\\u30F3\\u30B0\\u30FB\\u30B7\\u30B9\\u30C6\\u30E0\\u306E\\u8981\\u4EF6\\u306B\\u5FDC\\u3058\\u305F\\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30DA\\u30FC\\u30B8\\u30FB\\u30B5\\u30A4\\u30BA\\u3002\\n    -Xverify          \\u30D0\\u30A4\\u30C8\\u30B3\\u30FC\\u30C9\\u30FB\\u30D9\\u30EA\\u30D5\\u30A1\\u30A4\\u30A2\\u306E\\u30E2\\u30FC\\u30C9\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\n                      \\u30AA\\u30D7\\u30B7\\u30E7\\u30F3-Xverify:none\\u306F\\u975E\\u63A8\\u5968\\u306B\\u306A\\u308A\\u3001\\n                      \\u5C06\\u6765\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u3067\\u524A\\u9664\\u3055\\u308C\\u308B\\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n    --add-reads <module>=<target-module>(,<target-module>)*\\n                      \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u5BA3\\u8A00\\u306B\\u95A2\\u4FC2\\u306A\\u304F\\u3001<module>\\u3092\\u66F4\\u65B0\\u3057\\u3066<target-module>\\u3092\\n                      \\u8AAD\\u307F\\u53D6\\u308A\\u307E\\u3059\\u3002 \\\n+\\n                      <target-module>\\u3092ALL-UNNAMED\\u306B\\u8A2D\\u5B9A\\u3059\\u308B\\u3068\\u3001\\u3059\\u3079\\u3066\\u306E\\u540D\\u524D\\u306E\\u306A\\u3044\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\n                      \\u8AAD\\u307F\\u53D6\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\\n    --add-exports <module>\/<package>=<target-module>(,<target-module>)*\\n                      \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u5BA3\\u8A00\\u306B\\u95A2\\u4FC2\\u306A\\u304F\\u3001<module>\\u3092\\u66F4\\u65B0\\u3057\\u3066<package>\\u3092<target-module>\\u306B\\n                      \\u30A8\\u30AF\\u30B9\\u30DD\\u30FC\\u30C8\\u3057\\u307E\\u3059\\u3002\\n                      <target-module>\\u3092ALL-UNNAMED\\u306B\\u8A2D\\u5B9A\\u3059\\u308B\\u3068\\u3001\\u3059\\u3079\\u3066\\u306E\\u540D\\u524D\\u306E\\u306A\\u3044\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306B\\n                      \\u30A8\\u30AF\\u30B9\\u30DD\\u30FC\\u30C8\\u3067\\u304D\\u307E\\u3059\\u3002\\n    --add-opens <module>\/<package>=<target-module>(,<target-module>)*\\n                      \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u5BA3\\u8A00\\u306B\\u95A2\\u4FC2\\u306A\\u304F\\u3001<module>\\u3092\\u66F4\\u65B0\\u3057\\u3066<package>\\u3092\\n                      <target-module>\\u306B\\u958B\\u304D\\u307E\\u3059\\u3002\\n    --limit-modules <module name>[,<module name>...]\\n                      \\u53C2\\u7167\\u53EF\\u80FD\\u306A\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306E\\u9818\\u57DF\\u3092\\u5236\\u9650\\u3057\\u307E\\u3059\\n    --patch-module <module>=<file>({0}<file>)*\\n                      JAR\\u30D5\\u30A1\\u30A4\\u30EB\\u307E\\u305F\\u306F\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u306E\\u30AF\\u30E9\\u30B9\\u304A\\u3088\\u3073\\u30EA\\u30BD\\u30FC\\u30B9\\u3067\\n                      \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u3092\\u30AA\\u30FC\\u30D0\\u30FC\\u30E9\\u30A4\\u30C9\\u307E\\u305F\\u306F\\u62E1\\u5F35\\u3057\\u307E\\u3059\\u3002\\n    --source <version>\\n                      \\u30BD\\u30FC\\u30B9\\u30D5\\u30A1\\u30A4\\u30EB\\u30FB\\u30E2\\u30FC\\u30C9\\u3067\\u30BD\\u30FC\\u30B9\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\u3002\\n    --finalization=<value>\\n                      JVM\\u304C\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u306E\\u30D5\\u30A1\\u30A4\\u30CA\\u30E9\\u30A4\\u30BA\\u3092\\u5B9F\\u884C\\u3059\\u308B\\u304B\\u3069\\u3046\\u304B\\u3092\\u5236\\u5FA1\\u3057\\u307E\\u3059\\n                      <value>\\u306F\"enabled\"\\u307E\\u305F\\u306F\"disabled\"\\u306E\\u3044\\u305A\\u308C\\u304B\\u3067\\u3059\\u3002\\n                      \\u30D5\\u30A1\\u30A4\\u30CA\\u30E9\\u30A4\\u30BA\\u306F\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u3067\\u6709\\u52B9\\u306B\\u306A\\u3063\\u3066\\u3044\\u307E\\u3059\\u3002\\n\\n\\u3053\\u306E\\u8FFD\\u52A0\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u4E88\\u544A\\u306A\\u3057\\u306B\\u5909\\u66F4\\u3055\\u308C\\u308B\\u3053\\u3068\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher_ja.properties","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n-java.launcher.opt.footer = \\    -cp <\\u76EE\\u5F55\\u548C zip\/jar \\u6587\\u4EF6\\u7684\\u7C7B\\u641C\\u7D22\\u8DEF\\u5F84>\\n    -classpath <\\u76EE\\u5F55\\u548C zip\/jar \\u6587\\u4EF6\\u7684\\u7C7B\\u641C\\u7D22\\u8DEF\\u5F84>\\n    --class-path <\\u76EE\\u5F55\\u548C zip\/jar \\u6587\\u4EF6\\u7684\\u7C7B\\u641C\\u7D22\\u8DEF\\u5F84>\\n                  \\u4F7F\\u7528 {0} \\u5206\\u9694\\u7684, \\u7528\\u4E8E\\u641C\\u7D22\\u7C7B\\u6587\\u4EF6\\u7684\\u76EE\\u5F55, JAR \\u6863\\u6848\\n                  \\u548C ZIP \\u6863\\u6848\\u5217\\u8868\\u3002\\n    -p <\\u6A21\\u5757\\u8DEF\\u5F84>\\n    --module-path <\\u6A21\\u5757\\u8DEF\\u5F84>...\\n                  \\u7528 {0} \\u5206\\u9694\\u7684\\u76EE\\u5F55\\u5217\\u8868, \\u6BCF\\u4E2A\\u76EE\\u5F55\\n                  \\u90FD\\u662F\\u4E00\\u4E2A\\u5305\\u542B\\u6A21\\u5757\\u7684\\u76EE\\u5F55\\u3002\\n    --upgrade-module-path <\\u6A21\\u5757\\u8DEF\\u5F84>...\\n                  \\u7528 {0} \\u5206\\u9694\\u7684\\u76EE\\u5F55\\u5217\\u8868, \\u6BCF\\u4E2A\\u76EE\\u5F55\\n                  \\u90FD\\u662F\\u4E00\\u4E2A\\u5305\\u542B\\u6A21\\u5757\\u7684\\u76EE\\u5F55, \\u8FD9\\u4E9B\\u6A21\\u5757\\n                  \\u7528\\u4E8E\\u66FF\\u6362\\u8FD0\\u884C\\u65F6\\u6620\\u50CF\\u4E2D\\u7684\\u53EF\\u5347\\u7EA7\\u6A21\\u5757\\n    --add-modules <\\u6A21\\u5757\\u540D\\u79F0>[,<\\u6A21\\u5757\\u540D\\u79F0>...]\\n                  \\u9664\\u4E86\\u521D\\u59CB\\u6A21\\u5757\\u4E4B\\u5916\\u8981\\u89E3\\u6790\\u7684\\u6839\\u6A21\\u5757\\u3002\\n                  <\\u6A21\\u5757\\u540D\\u79F0> \\u8FD8\\u53EF\\u4EE5\\u4E3A ALL-DEFAULT, ALL-SYSTEM,\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <module name>[,<module name>...]\\n                  \\u5141\\u8BB8\\u6267\\u884C\\u53D7\\u9650\\u672C\\u673A\\u64CD\\u4F5C\\u7684\\u6A21\\u5757\\u3002\\n                  <module name> \\u8FD8\\u53EF\\u4EE5\\u4E3A ALL-UNNAMED\\u3002\\n    --list-modules\\n                  \\u5217\\u51FA\\u53EF\\u89C2\\u5BDF\\u6A21\\u5757\\u5E76\\u9000\\u51FA\\n    -d <module name>\\n    --describe-module <\\u6A21\\u5757\\u540D\\u79F0>\\n                  \\u63CF\\u8FF0\\u6A21\\u5757\\u5E76\\u9000\\u51FA\\n    --dry-run     \\u521B\\u5EFA VM \\u5E76\\u52A0\\u8F7D\\u4E3B\\u7C7B, \\u4F46\\u4E0D\\u6267\\u884C main \\u65B9\\u6CD5\\u3002\\n                  \\u6B64 --dry-run \\u9009\\u9879\\u5BF9\\u4E8E\\u9A8C\\u8BC1\\u8BF8\\u5982\\n                  \\u6A21\\u5757\\u7CFB\\u7EDF\\u914D\\u7F6E\\u8FD9\\u6837\\u7684\\u547D\\u4EE4\\u884C\\u9009\\u9879\\u53EF\\u80FD\\u975E\\u5E38\\u6709\\u7528\\u3002\\n    --validate-modules\\n                  \\u9A8C\\u8BC1\\u6240\\u6709\\u6A21\\u5757\\u5E76\\u9000\\u51FA\\n                  --validate-modules \\u9009\\u9879\\u5BF9\\u4E8E\\u67E5\\u627E\\n                  \\u6A21\\u5757\\u8DEF\\u5F84\\u4E2D\\u6A21\\u5757\\u7684\\u51B2\\u7A81\\u53CA\\u5176\\u4ED6\\u9519\\u8BEF\\u53EF\\u80FD\\u975E\\u5E38\\u6709\\u7528\\u3002\\n    -D<\\u540D\\u79F0>=<\\u503C>\\n                  \\u8BBE\\u7F6E\\u7CFB\\u7EDF\\u5C5E\\u6027\\n    -verbose:[class|module|gc|jni]\\n                  \\u4E3A\\u7ED9\\u5B9A\\u5B50\\u7CFB\\u7EDF\\u542F\\u7528\\u8BE6\\u7EC6\\u8F93\\u51FA\\n    -version      \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u9519\\u8BEF\\u6D41\\u5E76\\u9000\\u51FA\\n    --version     \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\u5E76\\u9000\\u51FA\\n    -showversion  \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u9519\\u8BEF\\u6D41\\u5E76\\u7EE7\\u7EED\\n    --show-version\\n                  \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\u5E76\\u7EE7\\u7EED\\n    --show-module-resolution\\n                  \\u5728\\u542F\\u52A8\\u8FC7\\u7A0B\\u4E2D\\u663E\\u793A\\u6A21\\u5757\\u89E3\\u6790\\u8F93\\u51FA\\n    -? -h -help\\n                  \\u5C06\\u6B64\\u5E2E\\u52A9\\u6D88\\u606F\\u8F93\\u51FA\\u5230\\u9519\\u8BEF\\u6D41\\n    --help        \\u5C06\\u6B64\\u5E2E\\u52A9\\u6D88\\u606F\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\n    -X            \\u5C06\\u989D\\u5916\\u9009\\u9879\\u7684\\u5E2E\\u52A9\\u8F93\\u51FA\\u5230\\u9519\\u8BEF\\u6D41\\n    --help-extra  \\u5C06\\u989D\\u5916\\u9009\\u9879\\u7684\\u5E2E\\u52A9\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\n    -ea[:<\\u7A0B\\u5E8F\\u5305\\u540D\\u79F0>...|:<\\u7C7B\\u540D>]\\n    -enableassertions[:<\\u7A0B\\u5E8F\\u5305\\u540D\\u79F0>...|:<\\u7C7B\\u540D>]\\n                  \\\n-\\u6309\\u6307\\u5B9A\\u7684\\u7C92\\u5EA6\\u542F\\u7528\\u65AD\\u8A00\\n    -da[:<\\u7A0B\\u5E8F\\u5305\\u540D\\u79F0>...|:<\\u7C7B\\u540D>]\\n    -disableassertions[:<\\u7A0B\\u5E8F\\u5305\\u540D\\u79F0>...|:<\\u7C7B\\u540D>]\\n                  \\u6309\\u6307\\u5B9A\\u7684\\u7C92\\u5EA6\\u7981\\u7528\\u65AD\\u8A00\\n    -esa | -enablesystemassertions\\n                  \\u542F\\u7528\\u7CFB\\u7EDF\\u65AD\\u8A00\\n    -dsa | -disablesystemassertions\\n                  \\u7981\\u7528\\u7CFB\\u7EDF\\u65AD\\u8A00\\n    -agentlib:<\\u5E93\\u540D>[=<\\u9009\\u9879>]\\n                  \\u52A0\\u8F7D\\u672C\\u673A\\u4EE3\\u7406\\u5E93 <\\u5E93\\u540D>, \\u4F8B\\u5982 -agentlib:jdwp\\n                  \\u53E6\\u8BF7\\u53C2\\u9605 -agentlib:jdwp=help\\n    -agentpath:<\\u8DEF\\u5F84\\u540D>[=<\\u9009\\u9879>]\\n                  \\u6309\\u5B8C\\u6574\\u8DEF\\u5F84\\u540D\\u52A0\\u8F7D\\u672C\\u673A\\u4EE3\\u7406\\u5E93\\n    -javaagent:<jar \\u8DEF\\u5F84>[=<\\u9009\\u9879>]\\n                  \\u52A0\\u8F7D Java \\u7F16\\u7A0B\\u8BED\\u8A00\\u4EE3\\u7406, \\u8BF7\\u53C2\\u9605 java.lang.instrument\\n    -splash:<\\u56FE\\u50CF\\u8DEF\\u5F84>\\n                  \\u4F7F\\u7528\\u6307\\u5B9A\\u7684\\u56FE\\u50CF\\u663E\\u793A\\u542F\\u52A8\\u5C4F\\u5E55\\n                  \\u81EA\\u52A8\\u652F\\u6301\\u548C\\u4F7F\\u7528 HiDPI \\u7F29\\u653E\\u56FE\\u50CF\\n                  (\\u5982\\u679C\\u53EF\\u7528)\\u3002\\u5E94\\u59CB\\u7EC8\\u5C06\\u672A\\u7F29\\u653E\\u7684\\u56FE\\u50CF\\u6587\\u4EF6\\u540D (\\u4F8B\\u5982, image.ext)\\n                  \\u4F5C\\u4E3A\\u53C2\\u6570\\u4F20\\u9012\\u7ED9 -splash \\u9009\\u9879\\u3002\\n                  \\u5C06\\u81EA\\u52A8\\u9009\\u53D6\\u63D0\\u4F9B\\u7684\\u6700\\u5408\\u9002\\u7684\\u7F29\\u653E\\n                  \\u56FE\\u50CF\\u3002\\n                  \\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u53C2\\u9605 SplashScreen API \\u6587\\u6863\\n    @argument \\u6587\\u4EF6\\n                  \\u4E00\\u4E2A\\u6216\\u591A\\u4E2A\\u5305\\u542B\\u9009\\u9879\\u7684\\u53C2\\u6570\\u6587\\u4EF6\\n    --disable-@files\\n                  \\u963B\\u6B62\\u8FDB\\u4E00\\u6B65\\u6269\\u5C55\\u53C2\\u6570\\u6587\\u4EF6\\n    --enable-preview\\n                  \\u5141\\u8BB8\\u7C7B\\u4F9D\\u8D56\\u4E8E\\u6B64\\u53D1\\u884C\\u7248\\u7684\\u9884\\u89C8\\u529F\\u80FD\\n\\u8981\\u4E3A\\u957F\\u9009\\u9879\\u6307\\u5B9A\\u53C2\\u6570, \\u53EF\\u4EE5\\u4F7F\\u7528 --<\\u540D\\u79F0>=<\\u503C> \\u6216\\n--<\\u540D\\u79F0> <\\u503C>\\u3002\\n\n+java.launcher.opt.footer = \\    -cp <\\u76EE\\u5F55\\u548C zip\/jar \\u6587\\u4EF6\\u7684\\u7C7B\\u641C\\u7D22\\u8DEF\\u5F84>\\n    -classpath <\\u76EE\\u5F55\\u548C zip\/jar \\u6587\\u4EF6\\u7684\\u7C7B\\u641C\\u7D22\\u8DEF\\u5F84>\\n    --class-path <\\u76EE\\u5F55\\u548C zip\/jar \\u6587\\u4EF6\\u7684\\u7C7B\\u641C\\u7D22\\u8DEF\\u5F84>\\n                  \\u4F7F\\u7528 {0} \\u5206\\u9694\\u7684, \\u7528\\u4E8E\\u641C\\u7D22\\u7C7B\\u6587\\u4EF6\\u7684\\u76EE\\u5F55, JAR \\u6863\\u6848\\n                  \\u548C ZIP \\u6863\\u6848\\u5217\\u8868\\u3002\\n    -p <\\u6A21\\u5757\\u8DEF\\u5F84>\\n    --module-path <\\u6A21\\u5757\\u8DEF\\u5F84>...\\n                  {0} \\u5206\\u9694\\u7684\\u5143\\u7D20\\u5217\\u8868\\uFF0C\\u6BCF\\u4E2A\\u5143\\u7D20\\u90FD\\u662F\\n                  \\u6A21\\u5757\\u6216\\u5305\\u542B\\u6A21\\u5757\\u7684\\u76EE\\u5F55\\u7684\\u6587\\u4EF6\\u8DEF\\u5F84\\u3002\\u6BCF\\u4E2A\\u6A21\\u5757\\u90FD\\u662F\\n                  \\u6A21\\u5757\\u5316 JAR \\u6216\\u5C55\\u5F00\\u7684\\u6A21\\u5757\\u76EE\\u5F55\\u3002\\n    --upgrade-module-path <\\u6A21\\u5757\\u8DEF\\u5F84>...\\n                  {0} \\u5206\\u9694\\u7684\\u5143\\u7D20\\u5217\\u8868\\uFF0C\\u6BCF\\u4E2A\\u5143\\u7D20\\u90FD\\u662F\\n                  \\u6A21\\u5757\\u6216\\u5305\\u542B\\u6A21\\u5757\\uFF08\\u7528\\u4E8E\\u66FF\\u6362\\u8FD0\\u884C\\u65F6\\u6620\\u50CF\\u4E2D\\u7684\\n                  \\u53EF\\u5347\\u7EA7\\u6A21\\u5757\\uFF09\\u7684\\u76EE\\u5F55\\u7684\\u6587\\u4EF6\\u8DEF\\u5F84\\u3002\\u6BCF\\u4E2A\\u6A21\\u5757\\u90FD\\u662F\\n                  \\u6A21\\u5757\\u5316 JAR \\u6216\\u5C55\\u5F00\\u7684\\u6A21\\u5757\\u76EE\\u5F55\\u3002\\n    --add-modules <\\u6A21\\u5757\\u540D\\u79F0>[,<\\u6A21\\u5757\\u540D\\u79F0>...]\\n                  \\u9664\\u4E86\\u521D\\u59CB\\u6A21\\u5757\\u4E4B\\u5916\\u8981\\u89E3\\u6790\\u7684\\u6839\\u6A21\\u5757\\u3002\\n                  <\\u6A21\\u5757\\u540D\\u79F0> \\u8FD8\\u53EF\\u4EE5\\u4E3A ALL-DEFAULT, ALL-SYSTEM,\\n                  ALL-MODULE-PATH.\\n    --enable-native-access <module name>[,<module name>...]\\n                  \\u5141\\u8BB8\\u6267\\u884C\\u53D7\\u9650\\u672C\\u673A\\u64CD\\u4F5C\\u7684\\u6A21\\u5757\\u3002\\n                  <module name> \\u8FD8\\u53EF\\u4EE5\\u4E3A ALL-UNNAMED\\u3002\\n    --list-modules\\n                  \\u5217\\u51FA\\u53EF\\u89C2\\u5BDF\\u6A21\\u5757\\u5E76\\u9000\\u51FA\\n    -d <module name>\\n    --describe-module <\\u6A21\\u5757\\u540D\\u79F0>\\n                  \\u63CF\\u8FF0\\u6A21\\u5757\\u5E76\\u9000\\u51FA\\n    --dry-run     \\u521B\\u5EFA VM \\u5E76\\u52A0\\u8F7D\\u4E3B\\u7C7B, \\u4F46\\u4E0D\\u6267\\u884C main \\u65B9\\u6CD5\\u3002\\n                  \\u6B64 --dry-run \\u9009\\u9879\\u5BF9\\u4E8E\\u9A8C\\u8BC1\\u8BF8\\u5982\\n                  \\u6A21\\u5757\\u7CFB\\u7EDF\\u914D\\u7F6E\\u8FD9\\u6837\\u7684\\u547D\\u4EE4\\u884C\\u9009\\u9879\\u53EF\\u80FD\\u975E\\u5E38\\u6709\\u7528\\u3002\\n    --validate-modules\\n                  \\u9A8C\\u8BC1\\u6240\\u6709\\u6A21\\u5757\\u5E76\\u9000\\u51FA\\n                  --validate-modules \\u9009\\u9879\\u5BF9\\u4E8E\\u67E5\\u627E\\n                  \\u6A21\\u5757\\u8DEF\\u5F84\\u4E2D\\u6A21\\u5757\\u7684\\u51B2\\u7A81\\u53CA\\u5176\\u4ED6\\u9519\\u8BEF\\u53EF\\u80FD\\u975E\\u5E38\\u6709\\u7528\\u3002\\n    -D<\\u540D\\u79F0>=<\\u503C>\\n                  \\u8BBE\\u7F6E\\u7CFB\\u7EDF\\u5C5E\\u6027\\n    -verbose:[class|module|gc|jni]\\n                  \\u4E3A\\u7ED9\\u5B9A\\u5B50\\u7CFB\\u7EDF\\u542F\\u7528\\u8BE6\\u7EC6\\u8F93\\u51FA\\n    -version      \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u9519\\u8BEF\\u6D41\\u5E76\\u9000\\u51FA\\n    --version     \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\u5E76\\u9000\\u51FA\\n    -showversion  \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u9519\\u8BEF\\u6D41\\u5E76\\u7EE7\\u7EED\\n    --show-version\\n                  \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\u5E76\\u7EE7\\u7EED\\n    --show-module-resolution\\n                  \\u5728\\u542F\\u52A8\\u8FC7\\u7A0B\\u4E2D\\u663E\\u793A\\u6A21\\u5757\\u89E3\\u6790\\u8F93\\u51FA\\n    -? -h -help\\n                  \\u5C06\\u6B64\\u5E2E\\u52A9\\u6D88\\u606F\\u8F93\\u51FA\\u5230\\u9519\\u8BEF\\u6D41\\n    --help        \\u5C06\\u6B64\\u5E2E\\u52A9\\u6D88\\u606F\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\n    -X            \\\n+\\u5C06\\u989D\\u5916\\u9009\\u9879\\u7684\\u5E2E\\u52A9\\u8F93\\u51FA\\u5230\\u9519\\u8BEF\\u6D41\\n    --help-extra  \\u5C06\\u989D\\u5916\\u9009\\u9879\\u7684\\u5E2E\\u52A9\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\n    -ea[:<\\u7A0B\\u5E8F\\u5305\\u540D\\u79F0>...|:<\\u7C7B\\u540D>]\\n    -enableassertions[:<\\u7A0B\\u5E8F\\u5305\\u540D\\u79F0>...|:<\\u7C7B\\u540D>]\\n                  \\u6309\\u6307\\u5B9A\\u7684\\u7C92\\u5EA6\\u542F\\u7528\\u65AD\\u8A00\\n    -da[:<\\u7A0B\\u5E8F\\u5305\\u540D\\u79F0>...|:<\\u7C7B\\u540D>]\\n    -disableassertions[:<\\u7A0B\\u5E8F\\u5305\\u540D\\u79F0>...|:<\\u7C7B\\u540D>]\\n                  \\u6309\\u6307\\u5B9A\\u7684\\u7C92\\u5EA6\\u7981\\u7528\\u65AD\\u8A00\\n    -esa | -enablesystemassertions\\n                  \\u542F\\u7528\\u7CFB\\u7EDF\\u65AD\\u8A00\\n    -dsa | -disablesystemassertions\\n                  \\u7981\\u7528\\u7CFB\\u7EDF\\u65AD\\u8A00\\n    -agentlib:<\\u5E93\\u540D>[=<\\u9009\\u9879>]\\n                  \\u52A0\\u8F7D\\u672C\\u673A\\u4EE3\\u7406\\u5E93 <\\u5E93\\u540D>, \\u4F8B\\u5982 -agentlib:jdwp\\n                  \\u53E6\\u8BF7\\u53C2\\u9605 -agentlib:jdwp=help\\n    -agentpath:<\\u8DEF\\u5F84\\u540D>[=<\\u9009\\u9879>]\\n                  \\u6309\\u5B8C\\u6574\\u8DEF\\u5F84\\u540D\\u52A0\\u8F7D\\u672C\\u673A\\u4EE3\\u7406\\u5E93\\n    -javaagent:<jar \\u8DEF\\u5F84>[=<\\u9009\\u9879>]\\n                  \\u52A0\\u8F7D Java \\u7F16\\u7A0B\\u8BED\\u8A00\\u4EE3\\u7406, \\u8BF7\\u53C2\\u9605 java.lang.instrument\\n    -splash:<\\u56FE\\u50CF\\u8DEF\\u5F84>\\n                  \\u4F7F\\u7528\\u6307\\u5B9A\\u7684\\u56FE\\u50CF\\u663E\\u793A\\u542F\\u52A8\\u5C4F\\u5E55\\n                  \\u81EA\\u52A8\\u652F\\u6301\\u548C\\u4F7F\\u7528 HiDPI \\u7F29\\u653E\\u56FE\\u50CF\\n                  (\\u5982\\u679C\\u53EF\\u7528)\\u3002\\u5E94\\u59CB\\u7EC8\\u5C06\\u672A\\u7F29\\u653E\\u7684\\u56FE\\u50CF\\u6587\\u4EF6\\u540D (\\u4F8B\\u5982, image.ext)\\n                  \\u4F5C\\u4E3A\\u53C2\\u6570\\u4F20\\u9012\\u7ED9 -splash \\u9009\\u9879\\u3002\\n                  \\u5C06\\u81EA\\u52A8\\u9009\\u53D6\\u63D0\\u4F9B\\u7684\\u6700\\u5408\\u9002\\u7684\\u7F29\\u653E\\n                  \\u56FE\\u50CF\\u3002\\n                  \\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u53C2\\u9605 SplashScreen API \\u6587\\u6863\\n    @argument \\u6587\\u4EF6\\n                  \\u4E00\\u4E2A\\u6216\\u591A\\u4E2A\\u5305\\u542B\\u9009\\u9879\\u7684\\u53C2\\u6570\\u6587\\u4EF6\\n    --disable-@files\\n                  \\u963B\\u6B62\\u8FDB\\u4E00\\u6B65\\u6269\\u5C55\\u53C2\\u6570\\u6587\\u4EF6\\n    --enable-preview\\n                  \\u5141\\u8BB8\\u7C7B\\u4F9D\\u8D56\\u4E8E\\u6B64\\u53D1\\u884C\\u7248\\u7684\\u9884\\u89C8\\u529F\\u80FD\\n\\u8981\\u4E3A\\u957F\\u9009\\u9879\\u6307\\u5B9A\\u53C2\\u6570, \\u53EF\\u4EE5\\u4F7F\\u7528 --<\\u540D\\u79F0>=<\\u503C> \\u6216\\n--<\\u540D\\u79F0> <\\u503C>\\u3002\\n\n@@ -37,2 +37,2 @@\n-java.launcher.X.usage=\\n    -Xbatch           \\u7981\\u7528\\u540E\\u53F0\\u7F16\\u8BD1\\n    -Xbootclasspath\/a:<\\u4EE5 {0} \\u5206\\u9694\\u7684\\u76EE\\u5F55\\u548C zip\/jar \\u6587\\u4EF6>\\n                      \\u9644\\u52A0\\u5728\\u5F15\\u5BFC\\u7C7B\\u8DEF\\u5F84\\u672B\\u5C3E\\n    -Xcheck:jni       \\u5BF9 JNI \\u51FD\\u6570\\u6267\\u884C\\u5176\\u4ED6\\u68C0\\u67E5\\n    -Xcomp            \\u5F3A\\u5236\\u5728\\u9996\\u6B21\\u8C03\\u7528\\u65F6\\u7F16\\u8BD1\\u65B9\\u6CD5\\n    -Xdebug           \\u4E0D\\u6267\\u884C\\u4EFB\\u4F55\\u64CD\\u4F5C\\u3002\\u4E3A\\u5B9E\\u73B0\\u5411\\u540E\\u517C\\u5BB9\\u800C\\u63D0\\u4F9B\\u3002\\n    -Xdiag            \\u663E\\u793A\\u9644\\u52A0\\u8BCA\\u65AD\\u6D88\\u606F\\n    -Xfuture          \\u542F\\u7528\\u6700\\u4E25\\u683C\\u7684\\u68C0\\u67E5\\uFF0C\\u9884\\u671F\\u5C06\\u6765\\u7684\\u9ED8\\u8BA4\\u503C\\u3002\\n                      \\u6B64\\u9009\\u9879\\u5DF2\\u8FC7\\u65F6\\uFF0C\\u53EF\\u80FD\\u4F1A\\u5728\\n                      \\u672A\\u6765\\u53D1\\u884C\\u7248\\u4E2D\\u5220\\u9664\\u3002\\n    -Xint             \\u4EC5\\u89E3\\u91CA\\u6A21\\u5F0F\\u6267\\u884C\\n    -Xinternalversion\\n                      \\u663E\\u793A\\u6BD4 -version \\u9009\\u9879\\u66F4\\u8BE6\\u7EC6\\u7684\\n                      JVM \\u7248\\u672C\\u4FE1\\u606F\\n    -Xlog:<opts>      \\u914D\\u7F6E\\u6216\\u542F\\u7528\\u91C7\\u7528 Java \\u865A\\u62DF\\n                      \\u673A (Java Virtual Machine, JVM) \\u7EDF\\u4E00\\u8BB0\\u5F55\\u6846\\u67B6\\u8FDB\\u884C\\u4E8B\\u4EF6\\u8BB0\\u5F55\\u3002\\u4F7F\\u7528 -Xlog:help\\n                      \\u53EF\\u4E86\\u89E3\\u8BE6\\u7EC6\\u4FE1\\u606F\\u3002\\n    -Xloggc:<file>    \\u5C06 GC \\u72B6\\u6001\\u8BB0\\u5F55\\u5728\\u6587\\u4EF6\\u4E2D\\uFF08\\u5E26\\u65F6\\u95F4\\u6233\\uFF09\\u3002\\n                      \\u6B64\\u9009\\u9879\\u5DF2\\u8FC7\\u65F6\\uFF0C\\u53EF\\u80FD\\u4F1A\\u5728\\n                      \\u5C06\\u6765\\u7684\\u53D1\\u884C\\u7248\\u4E2D\\u5220\\u9664\\u3002\\u5B83\\u5C06\\u66FF\\u6362\\u4E3A -Xlog:gc:<file>\\u3002\\n    -Xmixed           \\u6DF7\\u5408\\u6A21\\u5F0F\\u6267\\u884C\\uFF08\\u9ED8\\u8BA4\\u503C\\uFF09\\n    -Xmn<size>        \\u4E3A\\u5E74\\u8F7B\\u4EE3\\uFF08\\u65B0\\u751F\\u4EE3\\uFF09\\u8BBE\\u7F6E\\u521D\\u59CB\\u548C\\u6700\\u5927\\u5806\\u5927\\u5C0F\\n                      \\uFF08\\u4EE5\\u5B57\\u8282\\u4E3A\\u5355\\u4F4D\\uFF09\\n    -Xms<size>        \\u8BBE\\u7F6E\\u521D\\u59CB Java \\u5806\\u5927\\u5C0F\\n    -Xmx<size>        \\u8BBE\\u7F6E\\u6700\\u5927 Java \\u5806\\u5927\\u5C0F\\n    -Xnoclassgc       \\u7981\\u7528\\u7C7B\\u5783\\u573E\\u6536\\u96C6\\n    -Xrs              \\u51CF\\u5C11 Java\/VM \\u5BF9\\u64CD\\u4F5C\\u7CFB\\u7EDF\\u4FE1\\u53F7\\u7684\\u4F7F\\u7528\\uFF08\\u8BF7\\u53C2\\u89C1\\u6587\\u6863\\uFF09\\n    -Xshare:auto      \\u5728\\u53EF\\u80FD\\u7684\\u60C5\\u51B5\\u4E0B\\u4F7F\\u7528\\u5171\\u4EAB\\u7C7B\\u6570\\u636E\\uFF08\\u9ED8\\u8BA4\\u503C\\uFF09\\n    -Xshare:off       \\u4E0D\\u5C1D\\u8BD5\\u4F7F\\u7528\\u5171\\u4EAB\\u7C7B\\u6570\\u636E\\n    -Xshare:on        \\u8981\\u6C42\\u4F7F\\u7528\\u5171\\u4EAB\\u7C7B\\u6570\\u636E\\uFF0C\\u5426\\u5219\\u5C06\\u5931\\u8D25\\u3002\\n                      \\u8FD9\\u662F\\u4E00\\u4E2A\\u6D4B\\u8BD5\\u9009\\u9879\\uFF0C\\u53EF\\u80FD\\u5BFC\\u81F4\\u95F4\\u6B47\\u6027\\n                      \\u6545\\u969C\\u3002\\u4E0D\\u5E94\\u5728\\u751F\\u4EA7\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528\\u5B83\\u3002\\n    -XshowSettings    \\u663E\\u793A\\u6240\\u6709\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:all\\n                      \\u663E\\u793A\\u6240\\u6709\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:locale\\n                      \\u663E\\u793A\\u6240\\u6709\\u4E0E\\u533A\\u57DF\\u8BBE\\u7F6E\\u76F8\\u5173\\u7684\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:properties\\n                      \\u663E\\u793A\\u6240\\u6709\\u5C5E\\u6027\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:vm\\n                      \\u663E\\u793A\\u6240\\u6709\\u4E0E vm \\u76F8\\u5173\\u7684\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:system\\n                      \\uFF08\\u4EC5 Linux\\uFF09\\u663E\\u793A\\u4E3B\\u673A\\u7CFB\\u7EDF\\u6216\\u5BB9\\u5668\\n                      \\u914D\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -Xss<size>        \\u8BBE\\u7F6E Java \\u7EBF\\u7A0B\\u5806\\u6808\\u5927\\u5C0F\\n                      \\\n-\\u5B9E\\u9645\\u5927\\u5C0F\\u53EF\\u4EE5\\u820D\\u5165\\u5230\\n                      \\u64CD\\u4F5C\\u7CFB\\u7EDF\\u8981\\u6C42\\u7684\\u7CFB\\u7EDF\\u9875\\u9762\\u5927\\u5C0F\\u7684\\u500D\\u6570\\u3002\\n    -Xverify          \\u8BBE\\u7F6E\\u5B57\\u8282\\u7801\\u9A8C\\u8BC1\\u5668\\u7684\\u6A21\\u5F0F\\n                      \\u8BF7\\u6CE8\\u610F\\uFF0C\\u9009\\u9879 -Xverify:none \\u5DF2\\u8FC7\\u65F6\\uFF0C\\n                      \\u53EF\\u80FD\\u4F1A\\u5728\\u672A\\u6765\\u53D1\\u884C\\u7248\\u4E2D\\u5220\\u9664\\u3002\\n    --add-reads <module>=<target-module>(,<target-module>)*\\n                      \\u66F4\\u65B0 <module> \\u4EE5\\u8BFB\\u53D6 <target-module>\\uFF0C\\u800C\\u65E0\\u8BBA\\n                      \\u6A21\\u5757\\u5982\\u4F55\\u58F0\\u660E\\u3002 \\n                      <target-module> \\u53EF\\u4EE5\\u662F ALL-UNNAMED\\uFF0C\\u5C06\\u8BFB\\u53D6\\u6240\\u6709\\u672A\\u547D\\u540D\\n                      \\u6A21\\u5757\\u3002\\n    --add-exports <module>\/<package>=<target-module>(,<target-module>)*\\n                      \\u66F4\\u65B0 <module> \\u4EE5\\u5C06 <package> \\u5BFC\\u51FA\\u5230 <target-module>\\uFF0C\\n                      \\u800C\\u65E0\\u8BBA\\u6A21\\u5757\\u5982\\u4F55\\u58F0\\u660E\\u3002\\n                      <target-module> \\u53EF\\u4EE5\\u662F ALL-UNNAMED\\uFF0C\\u5C06\\u5BFC\\u51FA\\u5230\\u6240\\u6709\\n                      \\u672A\\u547D\\u540D\\u6A21\\u5757\\u3002\\n    --add-opens <module>\/<package>=<target-module>(,<target-module>)*\\n                      \\u66F4\\u65B0 <module> \\u4EE5\\u5728 <target-module> \\u4E2D\\u6253\\u5F00\\n                      <package>\\uFF0C\\u800C\\u65E0\\u8BBA\\u6A21\\u5757\\u5982\\u4F55\\u58F0\\u660E\\u3002\\n    --limit-modules <module name>[,<module name>...]\\n                      \\u9650\\u5236\\u53EF\\u89C2\\u5BDF\\u6A21\\u5757\\u7684\\u9886\\u57DF\\n    --patch-module <module>=<file>({0}<file>)*\\n                      \\u4F7F\\u7528 JAR \\u6587\\u4EF6\\u6216\\u76EE\\u5F55\\u4E2D\\u7684\\u7C7B\\u548C\\u8D44\\u6E90\\n                      \\u8986\\u76D6\\u6216\\u589E\\u5F3A\\u6A21\\u5757\\u3002\\n    --source <version>\\n                      \\u8BBE\\u7F6E\\u6E90\\u6587\\u4EF6\\u6A21\\u5F0F\\u4E2D\\u6E90\\u7684\\u7248\\u672C\\u3002\\n    --finalization=<value>\\n                      \\u63A7\\u5236 JVM \\u662F\\u5426\\u6267\\u884C\\u5BF9\\u8C61\\u6700\\u7EC8\\u5904\\u7406\\uFF0C\\n                      \\u5176\\u4E2D <value> \\u4E3A \"enabled\" \\u6216 \"disabled\" \\u4E4B\\u4E00\\u3002\\n                      \\u9ED8\\u8BA4\\u60C5\\u51B5\\u4E0B\\uFF0C\\u6700\\u7EC8\\u5904\\u7406\\u5904\\u4E8E\\u542F\\u7528\\u72B6\\u6001\\u3002\\n\\n\\u8FD9\\u4E9B\\u989D\\u5916\\u9009\\u9879\\u5982\\u6709\\u66F4\\u6539, \\u6055\\u4E0D\\u53E6\\u884C\\u901A\\u77E5\\u3002\\n\n+java.launcher.X.usage=\\n    -Xbatch           \\u7981\\u7528\\u540E\\u53F0\\u7F16\\u8BD1\\n    -Xbootclasspath\/a:<\\u4EE5 {0} \\u5206\\u9694\\u7684\\u76EE\\u5F55\\u548C zip\/jar \\u6587\\u4EF6>\\n                      \\u9644\\u52A0\\u5728\\u5F15\\u5BFC\\u7C7B\\u8DEF\\u5F84\\u672B\\u5C3E\\n    -Xcheck:jni       \\u5BF9 JNI \\u51FD\\u6570\\u6267\\u884C\\u5176\\u4ED6\\u68C0\\u67E5\\n    -Xcomp            \\u5F3A\\u5236\\u5728\\u9996\\u6B21\\u8C03\\u7528\\u65F6\\u7F16\\u8BD1\\u65B9\\u6CD5\\n    -Xdebug           \\u4E0D\\u6267\\u884C\\u4EFB\\u4F55\\u64CD\\u4F5C\\uFF1B\\u5DF2\\u8FC7\\u65F6\\uFF0C\\u5C06\\u5728\\u672A\\u6765\\u53D1\\u884C\\u7248\\u4E2D\\u5220\\u9664\\u3002\\n    -Xdiag            \\u663E\\u793A\\u9644\\u52A0\\u8BCA\\u65AD\\u6D88\\u606F\\n    -Xfuture          \\u542F\\u7528\\u6700\\u4E25\\u683C\\u7684\\u68C0\\u67E5\\uFF0C\\u9884\\u671F\\u5C06\\u6765\\u7684\\u9ED8\\u8BA4\\u503C\\u3002\\n                      \\u6B64\\u9009\\u9879\\u5DF2\\u8FC7\\u65F6\\uFF0C\\u53EF\\u80FD\\u4F1A\\u5728\\n                      \\u672A\\u6765\\u53D1\\u884C\\u7248\\u4E2D\\u5220\\u9664\\u3002\\n    -Xint             \\u4EC5\\u89E3\\u91CA\\u6A21\\u5F0F\\u6267\\u884C\\n    -Xinternalversion\\n                      \\u663E\\u793A\\u6BD4 -version \\u9009\\u9879\\u66F4\\u8BE6\\u7EC6\\u7684\\n                      JVM \\u7248\\u672C\\u4FE1\\u606F\\n    -Xlog:<opts>      \\u914D\\u7F6E\\u6216\\u542F\\u7528\\u91C7\\u7528 Java \\u865A\\u62DF\\n                      \\u673A (Java Virtual Machine, JVM) \\u7EDF\\u4E00\\u8BB0\\u5F55\\u6846\\u67B6\\u8FDB\\u884C\\u4E8B\\u4EF6\\u8BB0\\u5F55\\u3002\\u4F7F\\u7528 -Xlog:help\\n                      \\u53EF\\u4E86\\u89E3\\u8BE6\\u7EC6\\u4FE1\\u606F\\u3002\\n    -Xloggc:<file>    \\u5C06 GC \\u72B6\\u6001\\u8BB0\\u5F55\\u5728\\u6587\\u4EF6\\u4E2D\\uFF08\\u5E26\\u65F6\\u95F4\\u6233\\uFF09\\u3002\\n                      \\u6B64\\u9009\\u9879\\u5DF2\\u8FC7\\u65F6\\uFF0C\\u53EF\\u80FD\\u4F1A\\u5728\\n                      \\u5C06\\u6765\\u7684\\u53D1\\u884C\\u7248\\u4E2D\\u5220\\u9664\\u3002\\u5B83\\u5C06\\u66FF\\u6362\\u4E3A -Xlog:gc:<file>\\u3002\\n    -Xmixed           \\u6DF7\\u5408\\u6A21\\u5F0F\\u6267\\u884C\\uFF08\\u9ED8\\u8BA4\\u503C\\uFF09\\n    -Xmn<size>        \\u4E3A\\u5E74\\u8F7B\\u4EE3\\uFF08\\u65B0\\u751F\\u4EE3\\uFF09\\u8BBE\\u7F6E\\u521D\\u59CB\\u548C\\u6700\\u5927\\u5806\\u5927\\u5C0F\\n                      \\uFF08\\u4EE5\\u5B57\\u8282\\u4E3A\\u5355\\u4F4D\\uFF09\\n    -Xms<size>        \\u8BBE\\u7F6E\\u521D\\u59CB Java \\u5806\\u5927\\u5C0F\\n    -Xmx<size>        \\u8BBE\\u7F6E\\u6700\\u5927 Java \\u5806\\u5927\\u5C0F\\n    -Xnoclassgc       \\u7981\\u7528\\u7C7B\\u5783\\u573E\\u6536\\u96C6\\n    -Xrs              \\u51CF\\u5C11 Java\/VM \\u5BF9\\u64CD\\u4F5C\\u7CFB\\u7EDF\\u4FE1\\u53F7\\u7684\\u4F7F\\u7528\\uFF08\\u8BF7\\u53C2\\u89C1\\u6587\\u6863\\uFF09\\n    -Xshare:auto      \\u5728\\u53EF\\u80FD\\u7684\\u60C5\\u51B5\\u4E0B\\u4F7F\\u7528\\u5171\\u4EAB\\u7C7B\\u6570\\u636E\\uFF08\\u9ED8\\u8BA4\\u503C\\uFF09\\n    -Xshare:off       \\u4E0D\\u5C1D\\u8BD5\\u4F7F\\u7528\\u5171\\u4EAB\\u7C7B\\u6570\\u636E\\n    -Xshare:on        \\u8981\\u6C42\\u4F7F\\u7528\\u5171\\u4EAB\\u7C7B\\u6570\\u636E\\uFF0C\\u5426\\u5219\\u5C06\\u5931\\u8D25\\u3002\\n                      \\u8FD9\\u662F\\u4E00\\u4E2A\\u6D4B\\u8BD5\\u9009\\u9879\\uFF0C\\u53EF\\u80FD\\u5BFC\\u81F4\\u95F4\\u6B47\\u6027\\n                      \\u6545\\u969C\\u3002\\u4E0D\\u5E94\\u5728\\u751F\\u4EA7\\u73AF\\u5883\\u4E2D\\u4F7F\\u7528\\u5B83\\u3002\\n    -XshowSettings    \\u663E\\u793A\\u6240\\u6709\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:all\\n                      \\u663E\\u793A\\u6240\\u6709\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:locale\\n                      \\u663E\\u793A\\u6240\\u6709\\u4E0E\\u533A\\u57DF\\u8BBE\\u7F6E\\u76F8\\u5173\\u7684\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:properties\\n                      \\u663E\\u793A\\u6240\\u6709\\u5C5E\\u6027\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:vm\\n                      \\u663E\\u793A\\u6240\\u6709\\u4E0E vm \\u76F8\\u5173\\u7684\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:security\\n                      \\u663E\\u793A\\u6240\\u6709\\u5B89\\u5168\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:security:all\\n                      \\u663E\\u793A\\u6240\\u6709\\u5B89\\u5168\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:security:properties\\n                      \\\n+\\u663E\\u793A\\u5B89\\u5168\\u5C5E\\u6027\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:security:providers\\n                      \\u663E\\u793A\\u9759\\u6001\\u5B89\\u5168\\u63D0\\u4F9B\\u65B9\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:security:tls\\n                      \\u663E\\u793A\\u4E0E TLS \\u76F8\\u5173\\u7684\\u5B89\\u5168\\u8BBE\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -XshowSettings:system\\n                      \\uFF08\\u4EC5 Linux\\uFF09\\u663E\\u793A\\u4E3B\\u673A\\u7CFB\\u7EDF\\u6216\\u5BB9\\u5668\\n                      \\u914D\\u7F6E\\u5E76\\u7EE7\\u7EED\\n    -Xss<size>        \\u8BBE\\u7F6E Java \\u7EBF\\u7A0B\\u5806\\u6808\\u5927\\u5C0F\\n                      \\u5B9E\\u9645\\u5927\\u5C0F\\u53EF\\u4EE5\\u820D\\u5165\\u5230\\n                      \\u64CD\\u4F5C\\u7CFB\\u7EDF\\u8981\\u6C42\\u7684\\u7CFB\\u7EDF\\u9875\\u9762\\u5927\\u5C0F\\u7684\\u500D\\u6570\\u3002\\n    -Xverify          \\u8BBE\\u7F6E\\u5B57\\u8282\\u7801\\u9A8C\\u8BC1\\u5668\\u7684\\u6A21\\u5F0F\\n                      \\u8BF7\\u6CE8\\u610F\\uFF0C\\u9009\\u9879 -Xverify:none \\u5DF2\\u8FC7\\u65F6\\uFF0C\\n                      \\u53EF\\u80FD\\u4F1A\\u5728\\u672A\\u6765\\u53D1\\u884C\\u7248\\u4E2D\\u5220\\u9664\\u3002\\n    --add-reads <module>=<target-module>(,<target-module>)*\\n                      \\u66F4\\u65B0 <module> \\u4EE5\\u8BFB\\u53D6 <target-module>\\uFF0C\\u800C\\u65E0\\u8BBA\\n                      \\u6A21\\u5757\\u5982\\u4F55\\u58F0\\u660E\\u3002 \\n                      <target-module> \\u53EF\\u4EE5\\u662F ALL-UNNAMED\\uFF0C\\u5C06\\u8BFB\\u53D6\\u6240\\u6709\\u672A\\u547D\\u540D\\n                      \\u6A21\\u5757\\u3002\\n    --add-exports <module>\/<package>=<target-module>(,<target-module>)*\\n                      \\u66F4\\u65B0 <module> \\u4EE5\\u5C06 <package> \\u5BFC\\u51FA\\u5230 <target-module>\\uFF0C\\n                      \\u800C\\u65E0\\u8BBA\\u6A21\\u5757\\u5982\\u4F55\\u58F0\\u660E\\u3002\\n                      <target-module> \\u53EF\\u4EE5\\u662F ALL-UNNAMED\\uFF0C\\u5C06\\u5BFC\\u51FA\\u5230\\u6240\\u6709\\n                      \\u672A\\u547D\\u540D\\u6A21\\u5757\\u3002\\n    --add-opens <module>\/<package>=<target-module>(,<target-module>)*\\n                      \\u66F4\\u65B0 <module> \\u4EE5\\u5728 <target-module> \\u4E2D\\u6253\\u5F00\\n                      <package>\\uFF0C\\u800C\\u65E0\\u8BBA\\u6A21\\u5757\\u5982\\u4F55\\u58F0\\u660E\\u3002\\n    --limit-modules <module name>[,<module name>...]\\n                      \\u9650\\u5236\\u53EF\\u89C2\\u5BDF\\u6A21\\u5757\\u7684\\u9886\\u57DF\\n    --patch-module <module>=<file>({0}<file>)*\\n                      \\u4F7F\\u7528 JAR \\u6587\\u4EF6\\u6216\\u76EE\\u5F55\\u4E2D\\u7684\\u7C7B\\u548C\\u8D44\\u6E90\\n                      \\u8986\\u76D6\\u6216\\u589E\\u5F3A\\u6A21\\u5757\\u3002\\n    --source <version>\\n                      \\u8BBE\\u7F6E\\u6E90\\u6587\\u4EF6\\u6A21\\u5F0F\\u4E2D\\u6E90\\u7684\\u7248\\u672C\\u3002\\n    --finalization=<value>\\n                      \\u63A7\\u5236 JVM \\u662F\\u5426\\u6267\\u884C\\u5BF9\\u8C61\\u6700\\u7EC8\\u5904\\u7406\\uFF0C\\n                      \\u5176\\u4E2D <value> \\u4E3A \"enabled\" \\u6216 \"disabled\" \\u4E4B\\u4E00\\u3002\\n                      \\u9ED8\\u8BA4\\u60C5\\u51B5\\u4E0B\\uFF0C\\u6700\\u7EC8\\u5904\\u7406\\u5904\\u4E8E\\u542F\\u7528\\u72B6\\u6001\\u3002\\n\\n\\u8FD9\\u4E9B\\u989D\\u5916\\u9009\\u9879\\u5982\\u6709\\u66F4\\u6539, \\u6055\\u4E0D\\u53E6\\u884C\\u901A\\u77E5\\u3002\\n\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher_zh_CN.properties","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javax.crypto.BadPaddingException;\n@@ -238,1 +237,1 @@\n-     * Pad the data and return the padded block.\n+     * Pad the data and return the result or null if error occurred.\n@@ -240,1 +239,1 @@\n-    public byte[] pad(byte[] data) throws BadPaddingException {\n+    public byte[] pad(byte[] data) {\n@@ -245,1 +244,1 @@\n-     * Pad the data and return the padded block.\n+     * Pad the data and return the result or null if error occurred.\n@@ -247,2 +246,1 @@\n-    public byte[] pad(byte[] data, int ofs, int len)\n-            throws BadPaddingException {\n+    public byte[] pad(byte[] data, int ofs, int len) {\n@@ -250,3 +248,1 @@\n-            throw new BadPaddingException(\"Data must be shorter than \"\n-                + (maxDataSize + 1) + \" bytes but received \"\n-                + len + \" bytes.\");\n+            return null;\n@@ -256,0 +252,1 @@\n+            \/\/ assert len == paddedSize and data.length - ofs > len?\n@@ -268,1 +265,1 @@\n-     * Unpad the padded block and return the data.\n+     * Unpad the padded block and return the result or null if error occurred.\n@@ -270,16 +267,10 @@\n-    public byte[] unpad(byte[] padded) throws BadPaddingException {\n-        if (padded.length != paddedSize) {\n-            throw new BadPaddingException(\"Decryption error. \" +\n-                \"The padded array length (\" + padded.length +\n-                \") is not the specified padded size (\" + paddedSize + \")\");\n-        }\n-        switch (type) {\n-        case PAD_NONE:\n-            return padded;\n-        case PAD_BLOCKTYPE_1:\n-        case PAD_BLOCKTYPE_2:\n-            return unpadV15(padded);\n-        case PAD_OAEP_MGF1:\n-            return unpadOAEP(padded);\n-        default:\n-            throw new AssertionError();\n+    public byte[] unpad(byte[] padded) {\n+        if (padded.length == paddedSize) {\n+            return switch(type) {\n+                case PAD_NONE -> padded;\n+                case PAD_BLOCKTYPE_1, PAD_BLOCKTYPE_2 -> unpadV15(padded);\n+                case PAD_OAEP_MGF1 -> unpadOAEP(padded);\n+                default -> throw new AssertionError();\n+            };\n+        } else {\n+            return null;\n@@ -329,1 +320,1 @@\n-     *\n+     * Return the result or null if error occurred.\n@@ -332,1 +323,1 @@\n-    private byte[] unpadV15(byte[] padded) throws BadPaddingException {\n+    private byte[] unpadV15(byte[] padded) {\n@@ -368,2 +359,0 @@\n-        BadPaddingException bpe = new BadPaddingException(\"Decryption error\");\n-\n@@ -371,1 +360,1 @@\n-            throw bpe;\n+            return null;\n@@ -380,0 +369,1 @@\n+     * Return the result or null if error occurred.\n@@ -430,0 +420,1 @@\n+     * Return the result or null if error occurred.\n@@ -431,1 +422,1 @@\n-    private byte[] unpadOAEP(byte[] padded) throws BadPaddingException {\n+    private byte[] unpadOAEP(byte[] padded) {\n@@ -487,7 +478,1 @@\n-        BadPaddingException bpe = new BadPaddingException(\"Decryption error\");\n-\n-        if (bp) {\n-            throw bpe;\n-        } else {\n-            return m;\n-        }\n+        return (bp? null : m);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPadding.java","additions":24,"deletions":39,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.IOException;\n@@ -193,1 +192,3 @@\n-            return RSACore.rsa(padded, privateKey, true);\n+            if (padded != null) {\n+                return RSACore.rsa(padded, privateKey, true);\n+            }\n@@ -197,0 +198,1 @@\n+        throw new SignatureException(\"Could not sign data\");\n@@ -208,1 +210,1 @@\n-                throw new SignatureException(\"Signature length not correct: got \" +\n+                throw new SignatureException(\"Bad signature length: got \" +\n@@ -212,3 +214,1 @@\n-            byte[] digest = getDigestValue();\n-            byte[] decrypted = RSACore.rsa(sigBytes, publicKey);\n-            byte[] unpadded = padding.unpad(decrypted);\n+\n@@ -216,5 +216,7 @@\n-            \/\/ Step 4 suggests comparing the encoded message instead of the\n-            \/\/ decoded, but some vendors might omit the NULL params in\n-            \/\/ digest algorithm identifier.\n-            byte[] decodedDigest = RSAUtil.decodeSignature(digestOID, unpadded);\n-            return MessageDigest.isEqual(digest, decodedDigest);\n+            \/\/ Step 4 suggests comparing the encoded message\n+            byte[] decrypted = RSACore.rsa(sigBytes, publicKey);\n+\n+            byte[] digest = getDigestValue();\n+            byte[] encoded = RSAUtil.encodeSignature(digestOID, digest);\n+            byte[] padded = padding.pad(encoded);\n+            return MessageDigest.isEqual(padded, decrypted);\n@@ -222,4 +224,0 @@\n-            \/\/ occurs if the app has used the wrong RSA public key\n-            \/\/ or if sigBytes is invalid\n-            \/\/ return false rather than propagating the exception for\n-            \/\/ compatibility\/ease of use\n@@ -227,2 +225,0 @@\n-        } catch (IOException e) {\n-            throw new SignatureException(\"Signature encoding error\", e);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSASignature.java","additions":14,"deletions":18,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -850,2 +850,2 @@\n-        Integer tmp = GetIntegerAction.privilegedGetProperty(\n-                \"jdk.jar.maxSignatureFileSize\", 8000000);\n+        int tmp = GetIntegerAction.privilegedGetProperty(\n+                \"jdk.jar.maxSignatureFileSize\", 16000000);\n@@ -854,3 +854,3 @@\n-                debug.println(\"Default signature file size 8000000 bytes \" +\n-                        \"is used as the specified size for the \" +\n-                        \"jdk.jar.maxSignatureFileSize system property \" +\n+                debug.println(\"The default signature file size of 16000000 bytes \" +\n+                        \"will be used for the jdk.jar.maxSignatureFileSize \" +\n+                        \"system property since the specified value \" +\n@@ -859,1 +859,1 @@\n-            tmp = 8000000;\n+            tmp = 16000000;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureFileVerifier.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -236,2 +236,1 @@\n-            if ((nextByte == DerValue.tag_SequenceOf)\n-                    && (! ((nextByte & 0x0c0) == 0x080))) {\n+            if ((nextByte == DerValue.tag_SequenceOf)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -471,4 +471,3 @@\n-                if (i < savingsInstantTransitions.length) {\n-                    offsets[0] = standardOffsets[standardOffsets.length - 1] * 1000;\n-                    nOffsets = 1;\n-                }\n+                offsets[0] = standardOffsets[standardOffsets.length - 1] * 1000;\n+                nOffsets = 1;\n+\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfoFile.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -88,0 +88,1 @@\n+static jboolean dumpSharedSpaces = JNI_FALSE; \/* -Xshare:dump *\/\n@@ -458,0 +459,8 @@\n+    \/*\n+     * -Xshare:dump does not have a main class so the VM can safely exit now\n+     *\/\n+    if (dumpSharedSpaces) {\n+        CHECK_EXCEPTION_LEAVE(1);\n+        LEAVE();\n+    }\n+\n@@ -1435,0 +1444,7 @@\n+\n+        \/*\n+        * Check for CDS option\n+        *\/\n+        if (JLI_StrCmp(arg, \"-Xshare:dump\") == 0) {\n+            dumpSharedSpaces = JNI_TRUE;\n+        }\n@@ -1443,1 +1459,1 @@\n-        if (!listModules && !describeModule && !validateModules) {\n+        if (!listModules && !describeModule && !validateModules && !dumpSharedSpaces) {\n","filename":"src\/java.base\/share\/native\/libjli\/java.c","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -48,0 +48,5 @@\n+#if defined(__linux__)\n+#include <linux\/fs.h>\n+#include <sys\/ioctl.h>\n+#endif\n+\n@@ -172,1 +177,1 @@\n-#ifdef BLKGETSIZE64\n+#if defined(__linux__)\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/UnixFileDispatcherImpl.c","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-FileChooser.chooseButtonToolTip.textAndMnemonic=\\u9078\\u629E\\u3055\\u308C\\u3066\\u3044\\u308B\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u9078\\u629E\\u3057\\u307E\\u3059\n+FileChooser.chooseButtonToolTip.textAndMnemonic=\\u9078\\u629E\\u3057\\u305F\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u9078\\u629E\\u3057\\u307E\\u3059\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/resources\/aqua_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import javax.print.attribute.standard.Sides;\n@@ -687,0 +688,18 @@\n+    private int getSides() {\n+        return (this.sidesAttr == null) ? -1 : this.sidesAttr.getValue();\n+    }\n+\n+    private void setSides(int sides) {\n+        if (attributes == null) {\n+            return;\n+        }\n+\n+        final Sides[] sidesTable = new Sides[] {Sides.ONE_SIDED, Sides.TWO_SIDED_LONG_EDGE, Sides.TWO_SIDED_SHORT_EDGE};\n+\n+        if (sides >= 0 && sides < sidesTable.length) {\n+            Sides s = sidesTable[sides];\n+            attributes.add(s);\n+            this.sidesAttr = s;\n+        }\n+    }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -40,0 +40,4 @@\n+#define ONE_SIDED 0\n+#define TWO_SIDED_LONG_EDGE 1\n+#define TWO_SIDED_SHORT_EDGE 2\n+\n@@ -354,0 +358,18 @@\n+static jint duplexModeToSides(PMDuplexMode duplexMode) {\n+    switch(duplexMode) {\n+        case kPMDuplexNone: return ONE_SIDED;\n+        case kPMDuplexTumble: return TWO_SIDED_SHORT_EDGE;\n+        case kPMDuplexNoTumble: return TWO_SIDED_LONG_EDGE;\n+        default: return -1;\n+    }\n+}\n+\n+static PMDuplexMode sidesToDuplexMode(jint sides) {\n+    switch(sides) {\n+        case ONE_SIDED: return kPMDuplexNone;\n+        case TWO_SIDED_SHORT_EDGE: return kPMDuplexTumble;\n+        case TWO_SIDED_LONG_EDGE: return kPMDuplexNoTumble;\n+        default: return kPMDuplexNone;\n+    }\n+}\n+\n@@ -363,0 +385,1 @@\n+    DECLARE_METHOD(jm_setSides, sjc_CPrinterJob, \"setSides\", \"(I)V\");\n@@ -423,0 +446,6 @@\n+        PMDuplexMode duplexSetting;\n+        if (PMGetDuplex(src.PMPrintSettings, &duplexSetting) == noErr) {\n+            jint sides = duplexModeToSides(duplexSetting);\n+            (*env)->CallVoidMethod(env, dstPrinterJob, jm_setSides, sides); \/\/ AWT_THREADING Safe (known object)\n+            CHECK_EXCEPTION();\n+        }\n@@ -441,0 +470,2 @@\n+    DECLARE_METHOD(jm_getSides, sjc_CPrinterJob, \"getSides\", \"()I\");\n+\n@@ -499,0 +530,11 @@\n+\n+    jint sides = (*env)->CallIntMethod(env, srcPrinterJob, jm_getSides);\n+    CHECK_EXCEPTION();\n+\n+    if (sides >= 0) {\n+        PMDuplexMode duplexMode = sidesToDuplexMode(sides);\n+        PMPrintSettings printSettings = dst.PMPrintSettings;\n+        if (PMSetDuplex(printSettings, duplexMode) == noErr) {\n+            [dst updateFromPMPrintSettings];\n+        }\n+    }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/CPrinterJob.m","additions":42,"deletions":0,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -1083,0 +1083,2 @@\n+        this.attributes = attributes;\n+\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/RasterPrinterJob.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -190,2 +190,2 @@\n-mlib_start_timer start_timer = NULL;\n-mlib_stop_timer stop_timer = NULL;\n+static mlib_start_timer start_timer = NULL;\n+static mlib_stop_timer stop_timer = NULL;\n","filename":"src\/java.desktop\/share\/native\/libawt\/awt\/medialib\/awt_ImagingLib.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -807,1 +807,1 @@\n-        checkIfOnNewScreen(toGlobal(new Rectangle(scaleDown(xe.get_x()),\n+        checkIfOnNewScreen(new Rectangle(scaleDown(xe.get_x()),\n@@ -810,1 +810,1 @@\n-                scaleDown(xe.get_height()))));\n+                scaleDown(xe.get_height())));\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindowPeer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -424,0 +424,1 @@\n+        DeleteDC(memDC);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/ThemeReader.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1793,4 +1793,10 @@\n-    VERIFY(::WideCharToMultiByte(CP_ACP, 0, szFamilyName, -1,\n-        szTmpName, sizeof(szTmpName), NULL, NULL));\n-    LONG lStatus = ::RegQueryValueExA(hKey, (LPCSTR) szTmpName,\n-        NULL, &dwType, szFileName, &dwBytes);\n+    int nb = ::WideCharToMultiByte(CP_ACP, 0, szFamilyName, -1,\n+        szTmpName, sizeof(szTmpName), NULL, NULL);\n+    VERIFY(nb);\n+\n+    LONG lStatus = 1;\n+    if (nb > 0) {\n+        lStatus = ::RegQueryValueExA(hKey, (LPCSTR) szTmpName,\n+                                     NULL, &dwType, szFileName, &dwBytes);\n+    }\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Font.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -3928,1 +3928,1 @@\n-    WideCharToMultiByte(CP_UTF8, 0, t_errStr, -1,\n+    int nb = WideCharToMultiByte(CP_UTF8, 0, t_errStr, -1,\n@@ -3930,1 +3930,5 @@\n-    JNU_ThrowByName(env, PRINTEREXCEPTION_STR, errStr);\n+    if (nb > 0) {\n+        JNU_ThrowByName(env, PRINTEREXCEPTION_STR, errStr);\n+    } else {\n+        JNU_ThrowByName(env, PRINTEREXCEPTION_STR, \"secondary error during OS message extraction\");\n+    }\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,0 +173,2 @@\n+        ::DeleteDC(hdcMem);\n+        ::DeleteDC(hdcScreen);\n@@ -192,1 +194,7 @@\n-    if (!IS_SAFE_SIZE_MUL(width, height)) throw std::bad_alloc();\n+    if (!IS_SAFE_SIZE_MUL(width, height)) {\n+        ::DeleteObject(hbitmap);\n+        ::DeleteDC(hdcMem);\n+        ::DeleteDC(hdcScreen);\n+        throw std::bad_alloc();\n+    }\n+\n@@ -194,1 +202,7 @@\n-    if (!IS_SAFE_SIZE_MUL(BYTES_PER_PIXEL, numPixels)) throw std::bad_alloc();\n+    if (!IS_SAFE_SIZE_MUL(BYTES_PER_PIXEL, numPixels)) {\n+        ::DeleteObject(hbitmap);\n+        ::DeleteDC(hdcMem);\n+        ::DeleteDC(hdcScreen);\n+        throw std::bad_alloc();\n+    }\n+\n@@ -205,0 +219,3 @@\n+        ::DeleteObject(hbitmap);\n+        ::DeleteDC(hdcMem);\n+        ::DeleteDC(hdcScreen);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Robot.cpp","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+    if (lpUTF8Str == NULL) return NULL;\n@@ -39,2 +40,6 @@\n-    WideCharToMultiByte(CP_UTF8, 0, lpUnicodeStr, -1, lpUTF8Str, dwUTF8Len, nullptr, nullptr);\n-    return lpUTF8Str;\n+    int nb = WideCharToMultiByte(CP_UTF8, 0, lpUnicodeStr, -1, lpUTF8Str, dwUTF8Len, nullptr, nullptr);\n+    if (nb > 0) {\n+        return lpUTF8Str;\n+    }\n+    delete[] lpUTF8Str;\n+    return NULL;\n@@ -45,3 +50,7 @@\n-    strncpy(dest, utf8EncodedName, maxLength - 1);\n-    delete[] utf8EncodedName;\n-    dest[maxLength - 1] = '\\0';\n+    if (utf8EncodedName != NULL) {\n+        strncpy(dest, utf8EncodedName, maxLength - 1);\n+        delete[] utf8EncodedName;\n+        dest[maxLength - 1] = '\\0';\n+    } else {\n+        if (maxLength > 0) dest[0] = '\\0';\n+    }\n","filename":"src\/java.desktop\/windows\/native\/libjsound\/PLATFORM_API_WinOS_Charset_Util.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import java.net.InetSocketAddress;\n-import java.net.URI;\n@@ -74,1 +72,2 @@\n-    private final ReentrantLock lock = new ReentrantLock();\n+    \/\/ used when dealing with connections in the pool\n+    private final ReentrantLock connectionPoolLock = new ReentrantLock();\n@@ -103,1 +102,1 @@\n-        lock.lock();\n+        connectionPoolLock.lock();\n@@ -108,1 +107,1 @@\n-                    if (!connection.isOpen() || !connection.reserveStream(true)) {\n+                    if (!connection.tryReserveForPoolCheckout() || !connection.reserveStream(true)) {\n@@ -110,2 +109,3 @@\n-                            debug.log(\"removing found closed or closing connection: %s\", connection);\n-                        deleteConnection(connection);\n+                            debug.log(\"removing connection from pool since it couldn't be\" +\n+                                    \" reserved for use: %s\", connection);\n+                        removeFromPool(connection);\n@@ -131,1 +131,1 @@\n-            lock.unlock();\n+            connectionPoolLock.unlock();\n@@ -136,1 +136,1 @@\n-                    lock.lock();\n+                    connectionPoolLock.lock();\n@@ -151,1 +151,1 @@\n-                        lock.unlock();\n+                        connectionPoolLock.unlock();\n@@ -172,1 +172,1 @@\n-        lock.lock();\n+        connectionPoolLock.lock();\n@@ -195,1 +195,1 @@\n-            lock.unlock();\n+            connectionPoolLock.unlock();\n@@ -199,1 +199,7 @@\n-    void deleteConnection(Http2Connection c) {\n+    \/**\n+     * Removes the connection from the pool (if it was in the pool).\n+     * This method doesn't close the connection.\n+     *\n+     * @param c the connection to remove from the pool\n+     *\/\n+    void removeFromPool(Http2Connection c) {\n@@ -202,1 +208,1 @@\n-        lock.lock();\n+        connectionPoolLock.lock();\n@@ -209,1 +215,1 @@\n-            lock.unlock();\n+            connectionPoolLock.unlock();\n@@ -218,1 +224,1 @@\n-        lock.lock();\n+        connectionPoolLock.lock();\n@@ -222,1 +228,1 @@\n-            lock.unlock();\n+            connectionPoolLock.unlock();\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2ClientImpl.java","additions":23,"deletions":17,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -134,1 +134,2 @@\n-    private IdleConnectionTimeoutEvent idleConnectionTimeoutEvent;  \/\/ may be null\n+    \/\/ may be null; must be accessed\/updated with the stateLock held\n+    private IdleConnectionTimeoutEvent idleConnectionTimeoutEvent;\n@@ -199,1 +200,2 @@\n-        private boolean fired;\n+        \/\/ expected to be accessed\/updated with \"stateLock\" being held\n+        private boolean cancelled;\n@@ -203,1 +205,0 @@\n-            fired = false;\n@@ -206,0 +207,4 @@\n+        \/**\n+         * {@link #shutdown(Throwable) Shuts down} the connection, unless this event is\n+         * {@link #cancelled}\n+         *\/\n@@ -208,1 +213,22 @@\n-            fired = true;\n+            \/\/ first check if the connection is still idle.\n+            \/\/ must be done with the \"stateLock\" held, to allow for synchronizing actions like\n+            \/\/ closing the connection and checking out from connection pool (which too is expected\n+            \/\/ to use this same lock)\n+            stateLock.lock();\n+            try {\n+                if (cancelled) {\n+                    if (debug.on()) {\n+                        debug.log(\"Not initiating idle connection shutdown\");\n+                    }\n+                    return;\n+                }\n+                if (!markIdleShutdownInitiated()) {\n+                    if (debug.on()) {\n+                        debug.log(\"Unexpected state %s, skipping idle connection shutdown\",\n+                                describeClosedState(closedState));\n+                    }\n+                    return;\n+                }\n+            } finally {\n+                stateLock.unlock();\n+            }\n@@ -210,1 +236,1 @@\n-                debug.log(\"HTTP connection idle for too long\");\n+                debug.log(\"Initiating shutdown of HTTP connection which is idle for too long\");\n@@ -212,1 +238,2 @@\n-            HttpConnectTimeoutException hte = new HttpConnectTimeoutException(\"HTTP connection idle, no active streams. Shutting down.\");\n+            HttpConnectTimeoutException hte = new HttpConnectTimeoutException(\n+                    \"HTTP connection idle, no active streams. Shutting down.\");\n@@ -216,0 +243,12 @@\n+        \/**\n+         * Cancels this event. Should be called with stateLock held\n+         *\/\n+        void cancel() {\n+            assert stateLock.isHeldByCurrentThread() : \"Current thread doesn't hold \" + stateLock;\n+            \/\/ mark as cancelled to prevent potentially already triggered event from actually\n+            \/\/ doing the shutdown\n+            this.cancelled = true;\n+            \/\/ cancel the timer to prevent the event from being triggered (if it hasn't already)\n+            client().cancelTimer(this);\n+        }\n+\n@@ -220,4 +259,0 @@\n-\n-        public boolean isFired() {\n-            return fired;\n-        }\n@@ -297,2 +332,5 @@\n-    private final Lock stateLock = new ReentrantLock();\n-    volatile int closedState;\n+    \/\/ state when idle connection management initiates a shutdown of the connection, after\n+    \/\/ which the connection will go into SHUTDOWN_REQUESTED state\n+    private static final int IDLE_SHUTDOWN_INITIATED = 8;\n+    private final ReentrantLock stateLock = new ReentrantLock();\n+    private volatile int closedState;\n@@ -499,1 +537,1 @@\n-            client2.deleteConnection(this);\n+            client2.removeFromPool(this);\n@@ -503,1 +541,1 @@\n-            client2.deleteConnection(this);\n+            client2.removeFromPool(this);\n@@ -778,1 +816,1 @@\n-        client2.deleteConnection(this);\n+        client2.removeFromPool(this);\n@@ -997,2 +1035,1 @@\n-        return !isMarked(closedState, SHUTDOWN_REQUESTED)\n-                && connection.channel().isOpen();\n+        return !isMarkedForShutdown() && connection.channel().isOpen();\n@@ -1095,1 +1132,1 @@\n-                \/\/ idleConnectionTimerEvent is always accessed within a lock protected block\n+                \/\/ idleConnectionTimeoutEvent is always accessed within a lock protected block\n@@ -1098,1 +1135,2 @@\n-                            .map(IdleConnectionTimeoutEvent::new).orElse(null);\n+                            .map(IdleConnectionTimeoutEvent::new)\n+                            .orElse(null);\n@@ -1286,0 +1324,34 @@\n+    \/**\n+     * Attempts to notify the idle connection management that this connection should\n+     * be considered \"in use\". This way the idle connection management doesn't close\n+     * this connection during the time the connection is handed out from the pool and any\n+     * new stream created on that connection.\n+     * @return true if the connection has been successfully reserved and is {@link #isOpen()}. false\n+     *          otherwise; in which case the connection must not be handed out from the pool.\n+     *\/\n+    boolean tryReserveForPoolCheckout() {\n+        \/\/ must be done with \"stateLock\" held to co-ordinate idle connection management\n+        stateLock.lock();\n+        try {\n+            cancelIdleShutdownEvent();\n+            \/\/ consider the reservation successful only if the connection's state hasn't moved\n+            \/\/ to \"being closed\"\n+            return isOpen();\n+        } finally {\n+            stateLock.unlock();\n+        }\n+    }\n+\n+    \/**\n+     * Cancels any event that might have been scheduled to shutdown this connection. Must be called\n+     * with the stateLock held.\n+     *\/\n+    private void cancelIdleShutdownEvent() {\n+        assert stateLock.isHeldByCurrentThread() : \"Current thread doesn't hold \" + stateLock;\n+        if (idleConnectionTimeoutEvent == null) {\n+            return;\n+        }\n+        idleConnectionTimeoutEvent.cancel();\n+        idleConnectionTimeoutEvent = null;\n+    }\n+\n@@ -1292,1 +1364,1 @@\n-            if (!isMarked(closedState, SHUTDOWN_REQUESTED)) {\n+            if (!isMarkedForShutdown()) {\n@@ -1298,5 +1370,1 @@\n-                \/\/ idleConnectionTimerEvent is always accessed within a lock protected block\n-                if (idleConnectionTimeoutEvent != null) {\n-                    client().cancelTimer(idleConnectionTimeoutEvent);\n-                    idleConnectionTimeoutEvent = null;\n-                }\n+                cancelIdleShutdownEvent();\n@@ -1666,0 +1734,6 @@\n+    private boolean isMarkedForShutdown() {\n+        final int closedSt = closedState;\n+        return isMarked(closedSt, IDLE_SHUTDOWN_INITIATED)\n+                || isMarked(closedSt, SHUTDOWN_REQUESTED);\n+    }\n+\n@@ -1678,0 +1752,4 @@\n+    private boolean markIdleShutdownInitiated() {\n+        return markClosedState(IDLE_SHUTDOWN_INITIATED);\n+    }\n+\n@@ -1691,0 +1769,3 @@\n+        if (isMarked(state, IDLE_SHUTDOWN_INITIATED)) {\n+            desc = \"idle-shutdown-initiated\";\n+        }\n@@ -1692,1 +1773,1 @@\n-            desc = \"shutdown\";\n+            desc = desc == null ? \"shutdown\" : desc + \"+shutdown\";\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":107,"deletions":26,"binary":false,"changes":133,"status":"modified"},{"patch":"@@ -1363,1 +1363,1 @@\n-  { \"optionESCAPE\", \"   [-ESCAPE (\\u8981\\u8F6C\\u79FB\\u7684\\u5B57\\u7B26 {\\u9ED8\\u8BA4\\u503C\\u4E3A <>&\\\"'\\\\r\\\\n}]\"},\n+  { \"optionESCAPE\", \"   [-ESCAPE (\\u8981\\u9003\\u9038 \\u7684\\u5B57\\u7B26 {\\u9ED8\\u8BA4\\u503C\\u4E3A <>&\\\"'\\\\r\\\\n}]\"},\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/res\/XSLTErrorResources_zh_CN.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-        src-attribute.3.2 = src-attribute.3.2: \\u5C5E\\u6027\\u5F15\\u7528 ''{0}'' \\u4E2D\\u7684\\u5185\\u5BB9\\u5FC5\\u987B\\u5339\\u914D (\\u6CE8\\u91CA?)\\u3002\n+        src-attribute.3.2 = src-attribute.3.2: \\u5C5E\\u6027\\u5F15\\u7528 ''{0}'' \\u4E2D\\u7684\\u5185\\u5BB9\\u5FC5\\u987B\\u5339\\u914D (\\u6279\\u6CE8?)\\u3002\n@@ -127,1 +127,1 @@\n-        src-element.2.2 = src-element.2.2: \\u7531\\u4E8E ''{0}'' \\u5305\\u542B ''ref'' \\u5C5E\\u6027, \\u5176\\u5185\\u5BB9\\u5FC5\\u987B\\u5339\\u914D (\\u6CE8\\u91CA?)\\u3002\\u4F46\\u662F, \\u53D1\\u73B0\\u4E86 ''{1}''\\u3002\n+        src-element.2.2 = src-element.2.2: \\u7531\\u4E8E ''{0}'' \\u5305\\u542B ''ref'' \\u5C5E\\u6027, \\u5176\\u5185\\u5BB9\\u5FC5\\u987B\\u5339\\u914D (\\u6279\\u6CE8?)\\u3002\\u4F46\\u662F, \\u53D1\\u73B0\\u4E86 ''{1}''\\u3002\n@@ -138,1 +138,1 @@\n-        src-redefine.5.a.a = src-redefine.5.a.a: \\u627E\\u4E0D\\u5230 <simpleType> \\u7684\\u975E\\u6CE8\\u91CA\\u5B50\\u7EA7\\u3002<redefine> \\u5143\\u7D20\\u7684 <simpleType> \\u5B50\\u7EA7\\u5FC5\\u987B\\u5177\\u6709 <restriction> \\u5B50\\u9879, \\u5E76\\u5E26\\u6709\\u5F15\\u7528\\u5176\\u81EA\\u8EAB\\u7684 'base' \\u5C5E\\u6027\\u3002\n+        src-redefine.5.a.a = src-redefine.5.a.a: \\u627E\\u4E0D\\u5230 <simpleType> \\u7684\\u975E\\u6279\\u6CE8\\u5B50\\u7EA7\\u3002<redefine> \\u5143\\u7D20\\u7684 <simpleType> \\u5B50\\u7EA7\\u5FC5\\u987B\\u5177\\u6709 <restriction> \\u5B50\\u9879, \\u5E76\\u5E26\\u6709\\u5F15\\u7528\\u5176\\u81EA\\u8EAB\\u7684 'base' \\u5C5E\\u6027\\u3002\n@@ -141,2 +141,2 @@\n-        src-redefine.5.b.a = src-redefine.5.b.a: \\u627E\\u4E0D\\u5230 <complexType> \\u7684\\u975E\\u6CE8\\u91CA\\u5B50\\u7EA7\\u3002<redefine> \\u5143\\u7D20\\u7684 <complexType> \\u5B50\\u7EA7\\u5FC5\\u987B\\u5177\\u6709 <extension> \\u6216 <restriction> \\u5B50\\u9879, \\u5E76\\u5E26\\u6709\\u5F15\\u7528\\u5176\\u81EA\\u8EAB\\u7684 'base' \\u5C5E\\u6027\\u3002\n-        src-redefine.5.b.b = src-redefine.5.b.b: \\u627E\\u4E0D\\u5230 <complexType> \\u7684\\u975E\\u6CE8\\u91CA\\u5B50\\u5B50\\u7EA7\\u3002<redefine> \\u5143\\u7D20\\u7684 <complexType> \\u5B50\\u7EA7\\u5FC5\\u987B\\u5177\\u6709 <extension> \\u6216 <restriction> \\u5B50\\u9879, \\u5E76\\u5E26\\u6709\\u5F15\\u7528\\u5176\\u81EA\\u8EAB\\u7684 'base' \\u5C5E\\u6027\\u3002\n+        src-redefine.5.b.a = src-redefine.5.b.a: \\u627E\\u4E0D\\u5230 <complexType> \\u7684\\u975E\\u6279\\u6CE8\\u5B50\\u7EA7\\u3002<redefine> \\u5143\\u7D20\\u7684 <complexType> \\u5B50\\u7EA7\\u5FC5\\u987B\\u5177\\u6709 <extension> \\u6216 <restriction> \\u5B50\\u9879, \\u5E76\\u5E26\\u6709\\u5F15\\u7528\\u5176\\u81EA\\u8EAB\\u7684 'base' \\u5C5E\\u6027\\u3002\n+        src-redefine.5.b.b = src-redefine.5.b.b: \\u627E\\u4E0D\\u5230 <complexType> \\u7684\\u975E\\u6279\\u6CE8\\u5B50\\u5B50\\u7EA7\\u3002<redefine> \\u5143\\u7D20\\u7684 <complexType> \\u5B50\\u7EA7\\u5FC5\\u987B\\u5177\\u6709 <extension> \\u6216 <restriction> \\u5B50\\u9879, \\u5E76\\u5E26\\u6709\\u5F15\\u7528\\u5176\\u81EA\\u8EAB\\u7684 'base' \\u5C5E\\u6027\\u3002\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/msg\/XMLSchemaMessages_zh_CN.properties","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -259,1 +259,1 @@\n-       \"\\u8DEF\\u5F84\\u5305\\u542B\\u65E0\\u6548\\u7684\\u8F6C\\u4E49\\u5E8F\\u5217\"},\n+       \"\\u8DEF\\u5F84\\u5305\\u542B\\u65E0\\u6548\\u7684\\u9003\\u9038 \\u5E8F\\u5217\"},\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/res\/XMLErrorResources_zh_CN.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-                \"\\u8DEF\\u5F84\\u5305\\u542B\\u65E0\\u6548\\u7684\\u8F6C\\u4E49\\u5E8F\\u5217\" },\n+                \"\\u8DEF\\u5F84\\u5305\\u542B\\u65E0\\u6548\\u7684\\u9003\\u9038 \\u5E8F\\u5217\" },\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/utils\/SerializerMessages_zh_CN.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -190,0 +190,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Attr.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,0 +81,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/CDATASection.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,0 +57,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/CharacterData.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,0 +57,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Comment.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,0 +61,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/DOMException.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/DOMImplementation.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Document.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,0 +80,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/DocumentFragment.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,0 +54,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/DocumentType.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Element.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,0 +74,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Entity.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,0 +70,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/EntityReference.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/NamedNodeMap.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -169,0 +169,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Node.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/NodeList.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,0 +54,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Notation.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/ProcessingInstruction.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,2 @@\n+ *\n+ * @since 1.4, DOM Level 2\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Text.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -849,0 +849,1 @@\n+        tree.processor = translate(tree.processor, erasure(tree.processor.type));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1266,0 +1266,2 @@\n+compiler.note.implicit.annotation.processing=Die Annotationsverarbeitung ist aktiviert, da mindestens ein Prozessor im\\nClasspath gefunden wurde. In einem zuk\\u00FCnftigen Release von javac kann die Annotationsverarbeitung deaktiviert werden,\\nes sei denn, mindestens ein Prozessor ist namentlich angegeben (-processor), oder ein Suchpfad\\nist angegeben (--processor-path, --processor-module-path), oder die Annotationsverarbeitung\\nwurde explizit aktiviert (-proc:only, -proc:full).\\nVerwenden Sie \"-Xlint:-options\", um diese Meldung zu unterdr\\u00FCcken.\\nVerwenden Sie \"-proc:none\", um die Annotationsverarbeitung zu deaktivieren.\n+\n@@ -1440,0 +1442,3 @@\n+# 0: string\n+compiler.warn.ineffectual.extern.method.enum=Externalisierungsbezogene Methode {0} ist in einer Enum-Klasse nicht effektiv\n+\n@@ -1445,0 +1450,3 @@\n+# 0: string\n+compiler.warn.ineffectual.externalizable.method.record=Externalisierungsbezogene Methode {0} ist in einer Datensatzklasse nicht effektiv\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_de.properties","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -504,1 +504,1 @@\n-compiler.warn.possible.this.escape.location=\\u4E8B\\u524D\\u306E''this''\\u30A8\\u30B9\\u30B1\\u30FC\\u30D7\\u306F\\u3053\\u306E\\u547C\\u3073\\u51FA\\u3057\\u3067\\u51FA\\u73FE\\u3057\\u307E\\u3059\n+compiler.warn.possible.this.escape.location=\\u4E8B\\u524D\\u306E''this''\\u30A8\\u30B9\\u30B1\\u30FC\\u30D7\\u306F\\u3053\\u306E\\u547C\\u3073\\u51FA\\u3057\\u3067\\u51FA\\u73FE\\u3059\\u308B\\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\n@@ -956,1 +956,1 @@\n-compiler.err.string.template.is.not.well.formed=\\u6587\\u5B57\\u5217\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u304C\\u9069\\u683C\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\n+compiler.err.string.template.is.not.well.formed=\\u6587\\u5B57\\u5217\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u304C\\u6574\\u5F62\\u5F0F\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\n@@ -958,1 +958,1 @@\n-compiler.err.text.block.template.is.not.well.formed=\\u30C6\\u30AD\\u30B9\\u30C8\\u30FB\\u30D6\\u30ED\\u30C3\\u30AF\\u30FB\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u304C\\u9069\\u683C\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\n+compiler.err.text.block.template.is.not.well.formed=\\u30C6\\u30AD\\u30B9\\u30C8\\u30FB\\u30D6\\u30ED\\u30C3\\u30AF\\u30FB\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u304C\\u6574\\u5F62\\u5F0F\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\n@@ -1266,0 +1266,2 @@\n+compiler.note.implicit.annotation.processing=\\u30AF\\u30E9\\u30B9\\u30FB\\u30D1\\u30B9\\u306B1\\u3064\\u4EE5\\u4E0A\\u306E\\u30D7\\u30ED\\u30BB\\u30C3\\u30B5\\u304C\\u898B\\u3064\\u304B\\u3063\\u305F\\u305F\\u3081\\u3001\\u6CE8\\u91C8\\u51E6\\u7406\\u304C\\u6709\\u52B9\\u5316\\u3055\\u308C\\u3066\\n\\u3044\\u307E\\u3059\\u3002\\u5C11\\u306A\\u304F\\u3068\\u30821\\u3064\\u306E\\u30D7\\u30ED\\u30BB\\u30C3\\u30B5\\u304C\\u540D\\u524D(-processor)\\u3067\\u6307\\u5B9A\\u3055\\u308C\\u308B\\u304B\\u3001\\u691C\\u7D22\\u30D1\\u30B9\\n(--processor-path\\u3001--processor-module-path)\\u304C\\u6307\\u5B9A\\u3055\\u308C\\u308B\\u304B\\u3001\\u6CE8\\u91C8\\u51E6\\u7406\\u304C\\u660E\\u793A\\u7684\\u306B\\n\\u6709\\u52B9\\u5316(-proc:only\\u3001-proc:full)\\u3055\\u308C\\u3066\\u3044\\u308B\\u5834\\u5408\\u3092\\u9664\\u304D\\u3001\\u5C06\\u6765\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u306Ejavac\\u3067\\u306F\\n\\u6CE8\\u91C8\\u51E6\\u7406\\u304C\\u7121\\u52B9\\u5316\\u3055\\u308C\\u308B\\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n-Xlint:\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3092\\u4F7F\\u7528\\u3059\\u308B\\u3068\\u3001\\u3053\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u975E\\u8868\\u793A\\u306B\\u3067\\u304D\\u307E\\u3059\\u3002\\n-proc:none\\u3092\\u4F7F\\u7528\\u3059\\u308B\\u3068\\u3001\\u6CE8\\u91C8\\u51E6\\u7406\\u3092\\u7121\\u52B9\\u5316\\u3067\\u304D\\u307E\\u3059\\u3002\n+\n@@ -1440,0 +1442,3 @@\n+# 0: string\n+compiler.warn.ineffectual.extern.method.enum=\\u5916\\u90E8\\u5316\\u95A2\\u9023\\u30E1\\u30BD\\u30C3\\u30C9{0}\\u306F\\u5217\\u6319\\u30AF\\u30E9\\u30B9\\u3067\\u6709\\u52B9\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\n+\n@@ -1445,0 +1450,3 @@\n+# 0: string\n+compiler.warn.ineffectual.externalizable.method.record=\\u5916\\u90E8\\u5316\\u95A2\\u9023\\u30E1\\u30BD\\u30C3\\u30C9{0}\\u306F\\u30EC\\u30B3\\u30FC\\u30C9\\u30FB\\u30AF\\u30E9\\u30B9\\u3067\\u6709\\u52B9\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_ja.properties","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-compiler.err.annotation.missing.element.value=\\u6CE8\\u91CA\\u7F3A\\u5C11\\u5143\\u7D20\\u503C\n+compiler.err.annotation.missing.element.value=\\u6279\\u6CE8\\u7F3A\\u5C11\\u5143\\u7D20\\u503C\n@@ -116,1 +116,1 @@\n-compiler.err.annotation.missing.default.value=\\u5BF9\\u4E8E\\u5143\\u7D20 ''{1}'', \\u6CE8\\u91CA @{0} \\u7F3A\\u5C11\\u9ED8\\u8BA4\\u503C\n+compiler.err.annotation.missing.default.value=\\u5BF9\\u4E8E\\u5143\\u7D20 ''{1}'', \\u6279\\u6CE8 @{0} \\u7F3A\\u5C11\\u9ED8\\u8BA4\\u503C\n@@ -119,1 +119,1 @@\n-compiler.err.annotation.missing.default.value.1=\\u5BF9\\u4E8E\\u5143\\u7D20{1}, \\u6CE8\\u91CA @{0} \\u7F3A\\u5C11\\u9ED8\\u8BA4\\u503C\n+compiler.err.annotation.missing.default.value.1=\\u5BF9\\u4E8E\\u5143\\u7D20{1}, \\u6279\\u6CE8 @{0} \\u7F3A\\u5C11\\u9ED8\\u8BA4\\u503C\n@@ -122,1 +122,1 @@\n-compiler.err.annotation.not.valid.for.type=\\u6CE8\\u91CA\\u5BF9\\u4E8E\\u7C7B\\u578B{0}\\u7684\\u5143\\u7D20\\u65E0\\u6548\n+compiler.err.annotation.not.valid.for.type=\\u6279\\u6CE8\\u5BF9\\u4E8E\\u7C7B\\u578B{0}\\u7684\\u5143\\u7D20\\u65E0\\u6548\n@@ -124,1 +124,1 @@\n-compiler.err.annotation.type.not.applicable=\\u6CE8\\u91CA\\u63A5\\u53E3\\u4E0D\\u9002\\u7528\\u4E8E\\u6B64\\u7C7B\\u578B\\u7684\\u58F0\\u660E\n+compiler.err.annotation.type.not.applicable=\\u6279\\u6CE8\\u63A5\\u53E3\\u4E0D\\u9002\\u7528\\u4E8E\\u6B64\\u7C7B\\u578B\\u7684\\u58F0\\u660E\n@@ -127,1 +127,1 @@\n-compiler.err.annotation.type.not.applicable.to.type=\\u6CE8\\u91CA @{0} \\u5728\\u6B64\\u7C7B\\u578B\\u4E0A\\u4E0B\\u6587\\u4E2D\\u4E0D\\u9002\\u7528\n+compiler.err.annotation.type.not.applicable.to.type=\\u6279\\u6CE8 @{0} \\u5728\\u6B64\\u7C7B\\u578B\\u4E0A\\u4E0B\\u6587\\u4E2D\\u4E0D\\u9002\\u7528\n@@ -129,1 +129,1 @@\n-compiler.err.annotation.value.must.be.annotation=\\u6CE8\\u91CA\\u503C\\u5FC5\\u987B\\u4E3A\\u6CE8\\u91CA\n+compiler.err.annotation.value.must.be.annotation=\\u6279\\u6CE8\\u503C\\u5FC5\\u987B\\u4E3A\\u6279\\u6CE8\n@@ -131,1 +131,1 @@\n-compiler.err.annotation.value.must.be.class.literal=\\u6CE8\\u91CA\\u503C\\u5FC5\\u987B\\u4E3A\\u7C7B\\u6587\\u5B57\n+compiler.err.annotation.value.must.be.class.literal=\\u6279\\u6CE8\\u503C\\u5FC5\\u987B\\u4E3A\\u7C7B\\u6587\\u5B57\n@@ -133,1 +133,1 @@\n-compiler.err.annotation.value.must.be.name.value=\\u6CE8\\u91CA\\u503C\\u5FC5\\u987B\\u91C7\\u7528 ''name=value'' \\u683C\\u5F0F\n+compiler.err.annotation.value.must.be.name.value=\\u6279\\u6CE8\\u503C\\u5FC5\\u987B\\u91C7\\u7528 ''name=value'' \\u683C\\u5F0F\n@@ -135,1 +135,1 @@\n-compiler.err.annotation.value.not.allowable.type=\\u6CE8\\u91CA\\u503C\\u4E0D\\u662F\\u5141\\u8BB8\\u7684\\u7C7B\\u578B\n+compiler.err.annotation.value.not.allowable.type=\\u6279\\u6CE8\\u503C\\u4E0D\\u662F\\u5141\\u8BB8\\u7684\\u7C7B\\u578B\n@@ -137,1 +137,1 @@\n-compiler.err.expression.not.allowable.as.annotation.value=\\u8868\\u8FBE\\u5F0F\\u4E0D\\u5141\\u8BB8\\u7528\\u4F5C\\u6CE8\\u91CA\\u503C\n+compiler.err.expression.not.allowable.as.annotation.value=\\u8868\\u8FBE\\u5F0F\\u4E0D\\u5141\\u8BB8\\u7528\\u4F5C\\u6279\\u6CE8\\u503C\n@@ -140,1 +140,1 @@\n-compiler.err.annotation.unrecognized.attribute.name=\\u6CE8\\u91CA @{0} \\u5177\\u6709\\u540D\\u4E3A ''{1}'' \\u7684\\u672A\\u77E5\\u5C5E\\u6027\n+compiler.err.annotation.unrecognized.attribute.name=\\u6279\\u6CE8 @{0} \\u5177\\u6709\\u540D\\u4E3A ''{1}'' \\u7684\\u672A\\u77E5\\u5C5E\\u6027\n@@ -216,1 +216,1 @@\n-compiler.err.bad.functional.intf.anno=\\u610F\\u5916\\u7684 @FunctionalInterface \\u6CE8\\u91CA\n+compiler.err.bad.functional.intf.anno=\\u610F\\u5916\\u7684 @FunctionalInterface \\u6279\\u6CE8\n@@ -219,1 +219,1 @@\n-compiler.err.bad.functional.intf.anno.1=\\u610F\\u5916\\u7684 @FunctionalInterface \\u6CE8\\u91CA\\n{0}\n+compiler.err.bad.functional.intf.anno.1=\\u610F\\u5916\\u7684 @FunctionalInterface \\u6279\\u6CE8\\n{0}\n@@ -284,1 +284,1 @@\n-compiler.err.annotation.decl.not.allowed.here=\\u6B64\\u5904\\u4E0D\\u5141\\u8BB8\\u6CE8\\u91CA\\u63A5\\u53E3\\u58F0\\u660E\n+compiler.err.annotation.decl.not.allowed.here=\\u6B64\\u5904\\u4E0D\\u5141\\u8BB8\\u6279\\u6CE8\\u63A5\\u53E3\\u58F0\\u660E\n@@ -325,1 +325,1 @@\n-compiler.err.default.allowed.in.intf.annotation.member=\\u6CE8\\u91CA\\u63A5\\u53E3\\u58F0\\u660E\\u4E2D\\u4EC5\\u5141\\u8BB8\\u9ED8\\u8BA4\\u503C\n+compiler.err.default.allowed.in.intf.annotation.member=\\u6279\\u6CE8\\u63A5\\u53E3\\u58F0\\u660E\\u4E2D\\u4EC5\\u5141\\u8BB8\\u9ED8\\u8BA4\\u503C\n@@ -331,1 +331,1 @@\n-compiler.err.duplicate.annotation.invalid.repeated=\\u6CE8\\u91CA{0}\\u4E0D\\u662F\\u6709\\u6548\\u7684\\u53EF\\u91CD\\u590D\\u6CE8\\u91CA\n+compiler.err.duplicate.annotation.invalid.repeated=\\u6279\\u6CE8{0}\\u4E0D\\u662F\\u6709\\u6548\\u7684\\u53EF\\u91CD\\u590D\\u6279\\u6CE8\n@@ -334,1 +334,1 @@\n-compiler.err.duplicate.annotation.member.value=\\u6CE8\\u91CA@{1}\\u4E2D\\u7684\\u5143\\u7D20 ''{0}'' \\u91CD\\u590D\\u3002\n+compiler.err.duplicate.annotation.member.value=\\u6279\\u6CE8@{1}\\u4E2D\\u7684\\u5143\\u7D20 ''{0}'' \\u91CD\\u590D\\u3002\n@@ -337,1 +337,1 @@\n-compiler.err.duplicate.annotation.missing.container={0} \\u4E0D\\u662F\\u53EF\\u91CD\\u590D\\u7684\\u6CE8\\u91CA\\u63A5\\u53E3\n+compiler.err.duplicate.annotation.missing.container={0} \\u4E0D\\u662F\\u53EF\\u91CD\\u590D\\u7684\\u6279\\u6CE8\\u63A5\\u53E3\n@@ -340,1 +340,1 @@\n-compiler.err.invalid.repeatable.annotation=\\u6CE8\\u91CA\\u91CD\\u590D: \\u4F7F\\u7528\\u65E0\\u6548\\u7684 @Repeatable \\u6CE8\\u91CA\\u5BF9{0}\\u8FDB\\u884C\\u4E86\\u6CE8\\u91CA\n+compiler.err.invalid.repeatable.annotation=\\u6279\\u6CE8\\u91CD\\u590D: \\u4F7F\\u7528\\u65E0\\u6548\\u7684 @Repeatable \\u6279\\u6CE8\\u5BF9{0}\\u8FDB\\u884C\\u4E86\\u6279\\u6CE8\n@@ -352,1 +352,1 @@\n-compiler.err.invalid.repeatable.annotation.value.return=\\u5305\\u542B\\u6CE8\\u91CA\\u63A5\\u53E3 ({0}) \\u5FC5\\u987B\\u58F0\\u660E\\u7C7B\\u578B {2} \\u7684\\u540D\\u4E3A ''value'' \\u7684\\u5143\\u7D20\n+compiler.err.invalid.repeatable.annotation.value.return=\\u5305\\u542B\\u6279\\u6CE8\\u63A5\\u53E3 ({0}) \\u5FC5\\u987B\\u58F0\\u660E\\u7C7B\\u578B {2} \\u7684\\u540D\\u4E3A ''value'' \\u7684\\u5143\\u7D20\n@@ -355,1 +355,1 @@\n-compiler.err.invalid.repeatable.annotation.elem.nondefault=\\u5305\\u542B\\u6CE8\\u91CA\\u63A5\\u53E3 ({0}) \\u6CA1\\u6709\\u5143\\u7D20 {1} \\u7684\\u9ED8\\u8BA4\\u503C\n+compiler.err.invalid.repeatable.annotation.elem.nondefault=\\u5305\\u542B\\u6279\\u6CE8\\u63A5\\u53E3 ({0}) \\u6CA1\\u6709\\u5143\\u7D20 {1} \\u7684\\u9ED8\\u8BA4\\u503C\n@@ -358,1 +358,1 @@\n-compiler.err.invalid.repeatable.annotation.retention=\\u5305\\u542B\\u6CE8\\u91CA\\u63A5\\u53E3 ({0}) \\u7684\\u4FDD\\u7559\\u671F\\u77ED\\u4E8E\\u53EF\\u91CD\\u590D\\u6CE8\\u91CA\\u63A5\\u53E3 ({2}) \\u7684\\u4FDD\\u7559\\u671F\n+compiler.err.invalid.repeatable.annotation.retention=\\u5305\\u542B\\u6279\\u6CE8\\u63A5\\u53E3 ({0}) \\u7684\\u4FDD\\u7559\\u671F\\u77ED\\u4E8E\\u53EF\\u91CD\\u590D\\u6279\\u6CE8\\u63A5\\u53E3 ({2}) \\u7684\\u4FDD\\u7559\\u671F\n@@ -361,1 +361,1 @@\n-compiler.err.invalid.repeatable.annotation.not.documented=\\u53EF\\u91CD\\u590D\\u6CE8\\u91CA\\u63A5\\u53E3 ({1}) \\u662F @Documented\\uFF0C\\u800C\\u5305\\u542B\\u6CE8\\u91CA\\u63A5\\u53E3 ({0}) \\u5219\\u4E0D\\u662F\n+compiler.err.invalid.repeatable.annotation.not.documented=\\u53EF\\u91CD\\u590D\\u6279\\u6CE8\\u63A5\\u53E3 ({1}) \\u662F @Documented\\uFF0C\\u800C\\u5305\\u542B\\u6279\\u6CE8\\u63A5\\u53E3 ({0}) \\u5219\\u4E0D\\u662F\n@@ -364,1 +364,1 @@\n-compiler.err.invalid.repeatable.annotation.not.inherited=\\u53EF\\u91CD\\u590D\\u6CE8\\u91CA\\u63A5\\u53E3 ({1}) \\u662F @Inherited\\uFF0C\\u800C\\u5305\\u542B\\u6CE8\\u91CA\\u63A5\\u53E3 ({0}) \\u5219\\u4E0D\\u662F\n+compiler.err.invalid.repeatable.annotation.not.inherited=\\u53EF\\u91CD\\u590D\\u6279\\u6CE8\\u63A5\\u53E3 ({1}) \\u662F @Inherited\\uFF0C\\u800C\\u5305\\u542B\\u6279\\u6CE8\\u63A5\\u53E3 ({0}) \\u5219\\u4E0D\\u662F\n@@ -367,1 +367,1 @@\n-compiler.err.invalid.repeatable.annotation.incompatible.target=\\u5305\\u542B\\u6CE8\\u91CA\\u63A5\\u53E3 ({0}) \\u9002\\u7528\\u7684\\u76EE\\u6807\\u591A\\u4E8E\\u53EF\\u91CD\\u590D\\u6CE8\\u91CA\\u63A5\\u53E3 ({1})\n+compiler.err.invalid.repeatable.annotation.incompatible.target=\\u5305\\u542B\\u6279\\u6CE8\\u63A5\\u53E3 ({0}) \\u9002\\u7528\\u7684\\u76EE\\u6807\\u591A\\u4E8E\\u53EF\\u91CD\\u590D\\u6279\\u6CE8\\u63A5\\u53E3 ({1})\n@@ -428,1 +428,1 @@\n-compiler.err.enum.annotation.must.be.enum.constant=\\u679A\\u4E3E\\u6CE8\\u91CA\\u503C\\u5FC5\\u987B\\u662F\\u679A\\u4E3E\\u5E38\\u91CF\n+compiler.err.enum.annotation.must.be.enum.constant=\\u679A\\u4E3E\\u6279\\u6CE8\\u503C\\u5FC5\\u987B\\u662F\\u679A\\u4E3E\\u5E38\\u91CF\n@@ -434,1 +434,1 @@\n-compiler.err.enum.label.must.be.enum.constant=\\u679A\\u4E3E switch constant case \\u6807\\u7B7E\\u5FC5\\u987B\\u4E3A\\u679A\\u4E3E\\u5E38\\u91CF\n+compiler.err.enum.label.must.be.enum.constant=\\u679A\\u4E3E switch \\u5E38\\u91CF case \\u7684\\u6807\\u7B7E\\u5FC5\\u987B\\u4E3A\\u679A\\u4E3E\\u5E38\\u91CF\n@@ -492,1 +492,1 @@\n-compiler.err.illegal.esc.char=\\u975E\\u6CD5\\u8F6C\\u4E49\\u7B26\n+compiler.err.illegal.esc.char=\\u975E\\u6CD5\\u9003\\u9038 \\u7B26\n@@ -502,1 +502,1 @@\n-compiler.warn.possible.this.escape=\\u53EF\\u80FD\\u5728\\u5B8C\\u5168\\u521D\\u59CB\\u5316\\u5B50\\u7C7B\\u4E4B\\u524D\\u8F6C\\u4E49\\u4E86 ''this''\n+compiler.warn.possible.this.escape=\\u53EF\\u80FD\\u5728\\u5B8C\\u5168\\u521D\\u59CB\\u5316\\u5B50\\u7C7B\\u4E4B\\u524D\\u9003\\u9038\\u4E86 ''this''\n@@ -504,1 +504,1 @@\n-compiler.warn.possible.this.escape.location=\\u6B64\\u5904\\u4EE5\\u524D\\u53EF\\u80FD\\u901A\\u8FC7\\u8C03\\u7528\\u8F6C\\u4E49\\u4E86 ''this''\n+compiler.warn.possible.this.escape.location=\\u6B64\\u5904\\u4EE5\\u524D\\u53EF\\u80FD\\u901A\\u8FC7\\u8C03\\u7528\\u9003\\u9038 \\u4E86 ''this''\n@@ -539,1 +539,1 @@\n-compiler.err.illegal.unicode.esc=\\u975E\\u6CD5\\u7684 Unicode \\u8F6C\\u4E49\n+compiler.err.illegal.unicode.esc=\\u975E\\u6CD5\\u7684 Unicode \\u9003\\u9038\n@@ -554,1 +554,1 @@\n-compiler.err.intf.annotation.members.cant.have.params=\\u6CE8\\u91CA\\u63A5\\u53E3\\u58F0\\u660E\\u4E2D\\u7684\\u5143\\u7D20\\u65E0\\u6CD5\\u58F0\\u660E\\u5F62\\u53C2\n+compiler.err.intf.annotation.members.cant.have.params=\\u6279\\u6CE8\\u63A5\\u53E3\\u58F0\\u660E\\u4E2D\\u7684\\u5143\\u7D20\\u65E0\\u6CD5\\u58F0\\u660E\\u5F62\\u53C2\n@@ -557,1 +557,1 @@\n-compiler.err.intf.annotation.cant.have.type.params=\\u6CE8\\u91CA\\u63A5\\u53E3 {0} \\u4E0D\\u80FD\\u4E3A\\u6CDB\\u578B\n+compiler.err.intf.annotation.cant.have.type.params=\\u6279\\u6CE8\\u63A5\\u53E3 {0} \\u4E0D\\u80FD\\u4E3A\\u6CDB\\u578B\n@@ -559,1 +559,1 @@\n-compiler.err.intf.annotation.members.cant.have.type.params=\\u6CE8\\u91CA\\u63A5\\u53E3\\u58F0\\u660E\\u4E2D\\u7684\\u5143\\u7D20\\u4E0D\\u80FD\\u4E3A\\u6CDB\\u578B\\u65B9\\u6CD5\n+compiler.err.intf.annotation.members.cant.have.type.params=\\u6279\\u6CE8\\u63A5\\u53E3\\u58F0\\u660E\\u4E2D\\u7684\\u5143\\u7D20\\u4E0D\\u80FD\\u4E3A\\u6CDB\\u578B\\u65B9\\u6CD5\n@@ -562,1 +562,1 @@\n-compiler.err.intf.annotation.member.clash=\\u6CE8\\u91CA\\u63A5\\u53E3 {1} \\u58F0\\u660E\\u7684\\u5143\\u7D20\\u4E0E\\u65B9\\u6CD5 {0} \\u540C\\u540D\n+compiler.err.intf.annotation.member.clash=\\u6279\\u6CE8\\u63A5\\u53E3 {1} \\u58F0\\u660E\\u7684\\u5143\\u7D20\\u4E0E\\u65B9\\u6CD5 {0} \\u540C\\u540D\n@@ -568,1 +568,1 @@\n-compiler.err.invalid.annotation.member.type=\\u6CE8\\u91CA\\u63A5\\u53E3\\u5143\\u7D20\\u7684\\u7C7B\\u578B\\u65E0\\u6548\n+compiler.err.invalid.annotation.member.type=\\u6279\\u6CE8\\u63A5\\u53E3\\u5143\\u7D20\\u7684\\u7C7B\\u578B\\u65E0\\u6548\n@@ -692,1 +692,1 @@\n-compiler.err.new.not.allowed.in.annotation=\\u6CE8\\u91CA\\u4E2D\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528 ''new''\n+compiler.err.new.not.allowed.in.annotation=\\u6279\\u6CE8\\u4E2D\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528 ''new''\n@@ -695,1 +695,1 @@\n-compiler.err.no.annotation.member={1}\\u4E2D\\u6CA1\\u6709\\u6CE8\\u91CA\\u6210\\u5458{0}\n+compiler.err.no.annotation.member={1}\\u4E2D\\u6CA1\\u6709\\u6279\\u6CE8\\u6210\\u5458{0}\n@@ -705,1 +705,1 @@\n-compiler.err.not.annotation.type={0} \\u4E0D\\u662F\\u6CE8\\u91CA\\u63A5\\u53E3\n+compiler.err.not.annotation.type={0} \\u4E0D\\u662F\\u6279\\u6CE8\\u63A5\\u53E3\n@@ -794,1 +794,1 @@\n-compiler.err.pkg.annotations.sb.in.package-info.java=\\u7A0B\\u5E8F\\u5305\\u6CE8\\u91CA\\u5E94\\u5728\\u6587\\u4EF6 package-info.java \\u4E2D\n+compiler.err.pkg.annotations.sb.in.package-info.java=\\u7A0B\\u5E8F\\u5305\\u6279\\u6CE8\\u5E94\\u5728\\u6587\\u4EF6 package-info.java \\u4E2D\n@@ -827,1 +827,1 @@\n-compiler.err.proc.no.explicit.annotation.processing.requested=\\u4EC5\\u5F53\\u663E\\u5F0F\\u8BF7\\u6C42\\u6CE8\\u91CA\\u5904\\u7406\\u65F6\\u624D\\u63A5\\u53D7\\u7C7B\\u540D\\u79F0 ''{0}''\n+compiler.err.proc.no.explicit.annotation.processing.requested=\\u4EC5\\u5F53\\u663E\\u5F0F\\u8BF7\\u6C42\\u6279\\u6CE8\\u5904\\u7406\\u65F6\\u624D\\u63A5\\u53D7\\u7C7B\\u540D\\u79F0 ''{0}''\n@@ -829,1 +829,1 @@\n-compiler.err.proc.no.service=ServiceLoader \\u4E0D\\u53EF\\u7528, \\u4F46\\u5B83\\u662F\\u6CE8\\u91CA\\u5904\\u7406\\u6240\\u5FC5\\u9700\\u7684\\u3002\n+compiler.err.proc.no.service=ServiceLoader \\u4E0D\\u53EF\\u7528, \\u4F46\\u5B83\\u662F\\u6279\\u6CE8\\u5904\\u7406\\u6240\\u5FC5\\u9700\\u7684\\u3002\n@@ -838,1 +838,1 @@\n-compiler.err.proc.processor.not.found=\\u627E\\u4E0D\\u5230\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F ''{0}''\n+compiler.err.proc.processor.not.found=\\u627E\\u4E0D\\u5230\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F ''{0}''\n@@ -841,1 +841,1 @@\n-compiler.err.proc.processor.wrong.type=\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F ''{0}'' \\u672A\\u5B9E\\u73B0 javax.annotation.processing.Processor\n+compiler.err.proc.processor.wrong.type=\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F ''{0}'' \\u672A\\u5B9E\\u73B0 javax.annotation.processing.Processor\n@@ -848,1 +848,1 @@\n-compiler.err.proc.cant.create.loader=\\u65E0\\u6CD5\\u4E3A\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F{0}\\u521B\\u5EFA\\u7C7B\\u52A0\\u8F7D\\u5668\n+compiler.err.proc.cant.create.loader=\\u65E0\\u6CD5\\u4E3A\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F{0}\\u521B\\u5EFA\\u7C7B\\u52A0\\u8F7D\\u5668\n@@ -861,1 +861,1 @@\n-compiler.err.repeated.annotation.target=\\u6CE8\\u91CA\\u76EE\\u6807\\u91CD\\u590D\n+compiler.err.repeated.annotation.target=\\u6279\\u6CE8\\u76EE\\u6807\\u91CD\\u590D\n@@ -1072,1 +1072,1 @@\n-compiler.err.varargs.invalid.trustme.anno={0} \\u6CE8\\u91CA\\u65E0\\u6548\\u3002{1}\n+compiler.err.varargs.invalid.trustme.anno={0} \\u6279\\u6CE8\\u65E0\\u6548\\u3002{1}\n@@ -1176,1 +1176,1 @@\n-compiler.misc.x.print.rounds=\\u5FAA\\u73AF {0}:\\n\\t\\u8F93\\u5165\\u6587\\u4EF6: {1}\\n\\t\\u6CE8\\u91CA: {2}\\n\\t\\u6700\\u540E\\u4E00\\u4E2A\\u5FAA\\u73AF: {3}\n+compiler.misc.x.print.rounds=\\u5FAA\\u73AF {0}:\\n\\t\\u8F93\\u5165\\u6587\\u4EF6: {1}\\n\\t\\u6279\\u6CE8: {2}\\n\\t\\u6700\\u540E\\u4E00\\u4E2A\\u5FAA\\u73AF: {3}\n@@ -1266,0 +1266,2 @@\n+compiler.note.implicit.annotation.processing=\\u7531\\u4E8E\\u5728\\u7C7B\\u8DEF\\u5F84\\u4E2D\\u53D1\\u73B0\\u4E86\\u4E00\\u4E2A\\u6216\\u591A\\u4E2A\\u5904\\u7406\\u7A0B\\u5E8F\\uFF0C\\u56E0\\u6B64\\u542F\\u7528\\u4E86\\n\\u6279\\u6CE8\\u5904\\u7406\\u3002\\u672A\\u6765\\u53D1\\u884C\\u7248\\u7684 javac \\u53EF\\u80FD\\u4F1A\\u7981\\u7528\\u6279\\u6CE8\\u5904\\u7406\\uFF0C\\n\\u9664\\u975E\\u81F3\\u5C11\\u6309\\u540D\\u79F0\\u6307\\u5B9A\\u4E86\\u4E00\\u4E2A\\u5904\\u7406\\u7A0B\\u5E8F (-processor)\\uFF0C\\n\\u6216\\u6307\\u5B9A\\u4E86\\u641C\\u7D22\\u8DEF\\u5F84 (--processor-path, --processor-module-path)\\uFF0C\\n\\u6216\\u663E\\u5F0F\\u542F\\u7528\\u4E86\\u6279\\u6CE8\\u5904\\u7406 (-proc:only, -proc:full)\\u3002\\n\\u53EF\\u4F7F\\u7528 -Xlint:-options \\u9690\\u85CF\\u6B64\\u6D88\\u606F\\u3002\\n\\u53EF\\u4F7F\\u7528 -proc:none \\u7981\\u7528\\u6279\\u6CE8\\u5904\\u7406\\u3002\n+\n@@ -1440,0 +1442,3 @@\n+# 0: string\n+compiler.warn.ineffectual.extern.method.enum=\\u4E0E\\u5916\\u90E8\\u5316\\u76F8\\u5173\\u7684\\u65B9\\u6CD5 {0} \\u5728\\u679A\\u4E3E\\u7C7B\\u4E2D\\u65E0\\u6548\n+\n@@ -1445,0 +1450,3 @@\n+# 0: string\n+compiler.warn.ineffectual.externalizable.method.record=\\u4E0E\\u5916\\u90E8\\u5316\\u76F8\\u5173\\u7684\\u65B9\\u6CD5 {0} \\u5728\\u8BB0\\u5F55\\u7C7B\\u4E2D\\u65E0\\u6548\n+\n@@ -1546,1 +1554,1 @@\n-compiler.warn.proc.file.create.last.round=\\u5C06\\u4E0D\\u5BF9\\u5728\\u6700\\u540E\\u4E00\\u4E2A\\u5FAA\\u73AF\\u4E2D\\u521B\\u5EFA\\u7684\\u7C7B\\u578B\\u4E3A ''{0}'' \\u7684\\u6587\\u4EF6\\u8FDB\\u884C\\u6CE8\\u91CA\\u5904\\u7406\\u3002\n+compiler.warn.proc.file.create.last.round=\\u5C06\\u4E0D\\u5BF9\\u5728\\u6700\\u540E\\u4E00\\u4E2A\\u5FAA\\u73AF\\u4E2D\\u521B\\u5EFA\\u7684\\u7C7B\\u578B\\u4E3A ''{0}'' \\u7684\\u6587\\u4EF6\\u8FDB\\u884C\\u6279\\u6CE8\\u5904\\u7406\\u3002\n@@ -1549,1 +1557,1 @@\n-compiler.warn.proc.malformed.supported.string=\\u5904\\u7406\\u7A0B\\u5E8F ''{1}'' \\u4E3A\\u652F\\u6301\\u7684\\u6CE8\\u91CA\\u63A5\\u53E3\\u8FD4\\u56DE\\u683C\\u5F0F\\u9519\\u8BEF\\u7684\\u5B57\\u7B26\\u4E32 ''{0}''\n+compiler.warn.proc.malformed.supported.string=\\u5904\\u7406\\u7A0B\\u5E8F ''{1}'' \\u4E3A\\u652F\\u6301\\u7684\\u6279\\u6CE8\\u63A5\\u53E3\\u8FD4\\u56DE\\u683C\\u5F0F\\u9519\\u8BEF\\u7684\\u5B57\\u7B26\\u4E32 ''{0}''\n@@ -1552,1 +1560,1 @@\n-compiler.warn.proc.annotations.without.processors=\\u6CA1\\u6709\\u5904\\u7406\\u7A0B\\u5E8F\\u8981\\u4F7F\\u7528\\u4EE5\\u4E0B\\u4EFB\\u4F55\\u6CE8\\u91CA: {0}\n+compiler.warn.proc.annotations.without.processors=\\u6CA1\\u6709\\u5904\\u7406\\u7A0B\\u5E8F\\u8981\\u4F7F\\u7528\\u4EE5\\u4E0B\\u4EFB\\u4F55\\u6279\\u6CE8: {0}\n@@ -1555,1 +1563,1 @@\n-compiler.warn.proc.processor.incompatible.source.version=\\u6765\\u81EA\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F ''{1}'' \\u7684\\u53D7\\u652F\\u6301 source \\u7248\\u672C ''{0}'' \\u4F4E\\u4E8E -source ''{2}''\n+compiler.warn.proc.processor.incompatible.source.version=\\u6765\\u81EA\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F ''{1}'' \\u7684\\u53D7\\u652F\\u6301 source \\u7248\\u672C ''{0}'' \\u4F4E\\u4E8E -source ''{2}''\n@@ -1558,1 +1566,1 @@\n-compiler.warn.proc.duplicate.option.name=\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F ''{1}'' \\u8FD4\\u56DE\\u91CD\\u590D\\u7684\\u652F\\u6301\\u7684\\u9009\\u9879 ''{0}''\n+compiler.warn.proc.duplicate.option.name=\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F ''{1}'' \\u8FD4\\u56DE\\u91CD\\u590D\\u7684\\u652F\\u6301\\u7684\\u9009\\u9879 ''{0}''\n@@ -1561,1 +1569,1 @@\n-compiler.warn.proc.duplicate.supported.annotation=\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F ''{1}'' \\u8FD4\\u56DE\\u91CD\\u590D\\u7684\\u53D7\\u652F\\u6301\\u6CE8\\u91CA\\u63A5\\u53E3 ''{0}''\n+compiler.warn.proc.duplicate.supported.annotation=\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F ''{1}'' \\u8FD4\\u56DE\\u91CD\\u590D\\u7684\\u53D7\\u652F\\u6301\\u6279\\u6CE8\\u63A5\\u53E3 ''{0}''\n@@ -1564,1 +1572,1 @@\n-compiler.warn.proc.redundant.types.with.wildcard=\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F ''{0}'' \\u91CD\\u590D\\u652F\\u6301 ''*'' \\u548C\\u5176\\u4ED6\\u6CE8\\u91CA\\u63A5\\u53E3\n+compiler.warn.proc.redundant.types.with.wildcard=\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F ''{0}'' \\u91CD\\u590D\\u652F\\u6301 ''*'' \\u548C\\u5176\\u4ED6\\u6279\\u6CE8\\u63A5\\u53E3\n@@ -1566,1 +1574,1 @@\n-compiler.warn.proc.proc-only.requested.no.procs=\\u5728\\u672A\\u8BF7\\u6C42\\u7F16\\u8BD1\\u7684\\u60C5\\u51B5\\u4E0B\\u8FDB\\u884C\\u6CE8\\u91CA\\u5904\\u7406, \\u4F46\\u627E\\u4E0D\\u5230\\u5904\\u7406\\u7A0B\\u5E8F\\u3002\n+compiler.warn.proc.proc-only.requested.no.procs=\\u5728\\u672A\\u8BF7\\u6C42\\u7F16\\u8BD1\\u7684\\u60C5\\u51B5\\u4E0B\\u8FDB\\u884C\\u6279\\u6CE8\\u5904\\u7406, \\u4F46\\u627E\\u4E0D\\u5230\\u5904\\u7406\\u7A0B\\u5E8F\\u3002\n@@ -1568,1 +1576,1 @@\n-compiler.warn.proc.use.implicit=\\u6CE8\\u91CA\\u5904\\u7406\\u4E0D\\u9002\\u7528\\u4E8E\\u9690\\u5F0F\\u7F16\\u8BD1\\u7684\\u6587\\u4EF6\\u3002\\n\\u4F7F\\u7528 -implicit \\u6307\\u5B9A\\u7528\\u4E8E\\u9690\\u5F0F\\u7F16\\u8BD1\\u7684\\u7B56\\u7565\\u3002\n+compiler.warn.proc.use.implicit=\\u6279\\u6CE8\\u5904\\u7406\\u4E0D\\u9002\\u7528\\u4E8E\\u9690\\u5F0F\\u7F16\\u8BD1\\u7684\\u6587\\u4EF6\\u3002\\n\\u4F7F\\u7528 -implicit \\u6307\\u5B9A\\u7528\\u4E8E\\u9690\\u5F0F\\u7F16\\u8BD1\\u7684\\u7B56\\u7565\\u3002\n@@ -1570,1 +1578,1 @@\n-compiler.warn.proc.use.proc.or.implicit=\\u6CE8\\u91CA\\u5904\\u7406\\u4E0D\\u9002\\u7528\\u4E8E\\u9690\\u5F0F\\u7F16\\u8BD1\\u7684\\u6587\\u4EF6\\u3002\\n\\u4F7F\\u7528 -proc:none \\u7981\\u7528\\u6CE8\\u91CA\\u5904\\u7406\\u6216\\u4F7F\\u7528 -implicit \\u6307\\u5B9A\\u7528\\u4E8E\\u9690\\u5F0F\\u7F16\\u8BD1\\u7684\\u7B56\\u7565\\u3002\n+compiler.warn.proc.use.proc.or.implicit=\\u6279\\u6CE8\\u5904\\u7406\\u4E0D\\u9002\\u7528\\u4E8E\\u9690\\u5F0F\\u7F16\\u8BD1\\u7684\\u6587\\u4EF6\\u3002\\n\\u4F7F\\u7528 -proc:none \\u7981\\u7528\\u6279\\u6CE8\\u5904\\u7406\\u6216\\u4F7F\\u7528 -implicit \\u6307\\u5B9A\\u7528\\u4E8E\\u9690\\u5F0F\\u7F16\\u8BD1\\u7684\\u7B56\\u7565\\u3002\n@@ -1577,1 +1585,1 @@\n-compiler.warn.proc.unclosed.type.files=\\u7C7B\\u578B ''{0}'' \\u7684\\u6587\\u4EF6\\u672A\\u5173\\u95ED; \\u5C06\\u4E0D\\u9488\\u5BF9\\u8FD9\\u4E9B\\u7C7B\\u578B\\u8FDB\\u884C\\u6CE8\\u91CA\\u5904\\u7406\n+compiler.warn.proc.unclosed.type.files=\\u7C7B\\u578B ''{0}'' \\u7684\\u6587\\u4EF6\\u672A\\u5173\\u95ED; \\u5C06\\u4E0D\\u9488\\u5BF9\\u8FD9\\u4E9B\\u7C7B\\u578B\\u8FDB\\u884C\\u6279\\u6CE8\\u5904\\u7406\n@@ -1615,1 +1623,1 @@\n-compiler.warn.deprecated.annotation.has.no.effect=@Deprecated \\u6CE8\\u91CA\\u5BF9\\u6B64 {0} \\u58F0\\u660E\\u6CA1\\u6709\\u4EFB\\u4F55\\u6548\\u679C\n+compiler.warn.deprecated.annotation.has.no.effect=@Deprecated \\u6279\\u6CE8\\u5BF9\\u6B64 {0} \\u58F0\\u660E\\u6CA1\\u6709\\u4EFB\\u4F55\\u6548\\u679C\n@@ -1640,1 +1648,1 @@\n-compiler.warn.annotation.method.not.found=\\u65E0\\u6CD5\\u627E\\u5230\\u7C7B\\u578B ''{0}'' \\u7684\\u6CE8\\u91CA\\u65B9\\u6CD5 ''{1}()''\n+compiler.warn.annotation.method.not.found=\\u65E0\\u6CD5\\u627E\\u5230\\u7C7B\\u578B ''{0}'' \\u7684\\u6279\\u6CE8\\u65B9\\u6CD5 ''{1}()''\n@@ -1643,1 +1651,1 @@\n-compiler.warn.annotation.method.not.found.reason=\\u65E0\\u6CD5\\u627E\\u5230\\u7C7B\\u578B ''{0}'' \\u7684\\u6CE8\\u91CA\\u65B9\\u6CD5 ''{1}()'': {2}\n+compiler.warn.annotation.method.not.found.reason=\\u65E0\\u6CD5\\u627E\\u5230\\u7C7B\\u578B ''{0}'' \\u7684\\u6279\\u6CE8\\u65B9\\u6CD5 ''{1}()'': {2}\n@@ -1663,1 +1671,1 @@\n-compiler.warn.varargs.redundant.trustme.anno=\\u5197\\u4F59\\u7684 {0} \\u6CE8\\u91CA\\u3002{1}\n+compiler.warn.varargs.redundant.trustme.anno=\\u5197\\u4F59\\u7684 {0} \\u6279\\u6CE8\\u3002{1}\n@@ -1796,1 +1804,1 @@\n-compiler.misc.bad.type.annotation.value=\\u9519\\u8BEF\\u7684\\u7C7B\\u578B\\u6CE8\\u91CA\\u76EE\\u6807\\u7C7B\\u578B\\u503C: {0}\n+compiler.misc.bad.type.annotation.value=\\u9519\\u8BEF\\u7684\\u7C7B\\u578B\\u6279\\u6CE8\\u76EE\\u6807\\u7C7B\\u578B\\u503C: {0}\n@@ -2278,1 +2286,1 @@\n-compiler.err.cant.type.annotate.scoping.1=\\u65E0\\u6CD5\\u4F7F\\u7528 type-use \\u6CE8\\u91CA {0} \\u6765\\u6CE8\\u91CA\\u786E\\u5B9A\\u4F5C\\u7528\\u57DF\\u7ED3\\u6784\n+compiler.err.cant.type.annotate.scoping.1=\\u65E0\\u6CD5\\u4F7F\\u7528 type-use \\u6279\\u6CE8 {0} \\u6765\\u6279\\u6CE8\\u786E\\u5B9A\\u4F5C\\u7528\\u57DF\\u7ED3\\u6784\n@@ -2282,1 +2290,1 @@\n-compiler.err.cant.type.annotate.scoping=\\u65E0\\u6CD5\\u4F7F\\u7528 type-use \\u6CE8\\u91CA {0} \\u6765\\u6CE8\\u91CA\\u786E\\u5B9A\\u4F5C\\u7528\\u57DF\\u7ED3\\u6784\n+compiler.err.cant.type.annotate.scoping=\\u65E0\\u6CD5\\u4F7F\\u7528 type-use \\u6279\\u6CE8 {0} \\u6765\\u6279\\u6CE8\\u786E\\u5B9A\\u4F5C\\u7528\\u57DF\\u7ED3\\u6784\n@@ -2296,1 +2304,1 @@\n-compiler.err.no.annotations.on.dot.class=\\u7C7B\\u6587\\u5B57\\u7C7B\\u578B\\u4E2D\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528\\u4EFB\\u4F55\\u6CE8\\u91CA\n+compiler.err.no.annotations.on.dot.class=\\u7C7B\\u6587\\u5B57\\u7C7B\\u578B\\u4E2D\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528\\u4EFB\\u4F55\\u6279\\u6CE8\n@@ -2460,1 +2468,1 @@\n-compiler.err.dc.ref.annotations.not.allowed=\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528\\u6CE8\\u91CA\n+compiler.err.dc.ref.annotations.not.allowed=\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528\\u6279\\u6CE8\n@@ -2757,1 +2765,1 @@\n-compiler.err.record.patterns.annotations.not.allowed=\\u8BB0\\u5F55\\u6A21\\u5F0F\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528\\u6CE8\\u91CA\n+compiler.err.record.patterns.annotations.not.allowed=\\u8BB0\\u5F55\\u6A21\\u5F0F\\u4E0D\\u5141\\u8BB8\\u4F7F\\u7528\\u6279\\u6CE8\n@@ -2765,1 +2773,1 @@\n-compiler.err.invalid.A.key=\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F\\u9009\\u9879 ''{0}'' \\u4E2D\\u7684\\u5173\\u952E\\u5B57\\u4E0D\\u662F\\u4EE5\\u70B9\\u5206\\u9694\\u7684\\u6807\\u8BC6\\u7B26\\u5E8F\\u5217\n+compiler.err.invalid.A.key=\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F\\u9009\\u9879 ''{0}'' \\u4E2D\\u7684\\u5173\\u952E\\u5B57\\u4E0D\\u662F\\u4EE5\\u70B9\\u5206\\u9694\\u7684\\u6807\\u8BC6\\u7B26\\u5E8F\\u5217\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_zh_CN.properties","additions":79,"deletions":71,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-javac.opt.classpath=\\u6307\\u5B9A\\u67E5\\u627E\\u7528\\u6237\\u7C7B\\u6587\\u4EF6\\u548C\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u4F4D\\u7F6E\n+javac.opt.classpath=\\u6307\\u5B9A\\u67E5\\u627E\\u7528\\u6237\\u7C7B\\u6587\\u4EF6\\u548C\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u4F4D\\u7F6E\n@@ -48,3 +48,3 @@\n-javac.opt.processorpath=\\u6307\\u5B9A\\u67E5\\u627E\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u4F4D\\u7F6E\n-javac.opt.processormodulepath=\\u6307\\u5B9A\\u67E5\\u627E\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u6A21\\u5757\\u8DEF\\u5F84\n-javac.opt.processor=\\u8981\\u8FD0\\u884C\\u7684\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u540D\\u79F0;\\n\\u7ED5\\u8FC7\\u9ED8\\u8BA4\\u7684\\u641C\\u7D22\\u8FDB\\u7A0B\n+javac.opt.processorpath=\\u6307\\u5B9A\\u67E5\\u627E\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u4F4D\\u7F6E\n+javac.opt.processormodulepath=\\u6307\\u5B9A\\u67E5\\u627E\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u6A21\\u5757\\u8DEF\\u5F84\n+javac.opt.processor=\\u8981\\u8FD0\\u884C\\u7684\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u540D\\u79F0;\\n\\u7ED5\\u8FC7\\u9ED8\\u8BA4\\u7684\\u641C\\u7D22\\u8FDB\\u7A0B\n@@ -52,1 +52,1 @@\n-javac.opt.proc.none.only=\\u63A7\\u5236\\u662F\\u5426\\u6267\\u884C\\u6CE8\\u91CA\\u5904\\u7406\\u548C\/\\u6216\\u7F16\\u8BD1\\u3002\n+javac.opt.proc.none.only=\\u63A7\\u5236\\u662F\\u5426\\u6267\\u884C\\u6279\\u6CE8\\u5904\\u7406\\u548C\/\\u6216\\u7F16\\u8BD1\\u3002\n@@ -55,1 +55,1 @@\n-javac.opt.headerDest=\\u6307\\u5B9A\\u653E\\u7F6E\\u751F\\u6210\\u7684\\u672C\\u673A\\u6807\\u5934\\u6587\\u4EF6\\u7684\\u4F4D\\u7F6E\n+javac.opt.headerDest=\\u6307\\u5B9A\\u653E\\u7F6E\\u751F\\u6210\\u7684\\u5934\\u6587\\u4EF6\\u7684\\u4F4D\\u7F6E\n@@ -63,1 +63,1 @@\n-javac.opt.A=\\u4F20\\u9012\\u7ED9\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u9009\\u9879\n+javac.opt.A=\\u4F20\\u9012\\u7ED9\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F\\u7684\\u9009\\u9879\n@@ -116,1 +116,1 @@\n-javac.opt.Xlint.desc.dep-ann=\\u6709\\u5173\\u9879\\u5728 JavaDoc \\u4E2D\\u6807\\u8BB0\\u4E3A\\u5DF2\\u8FC7\\u65F6\\u4F46\\u672A\\u4F7F\\u7528 @Deprecated \\u6CE8\\u91CA\\u7684\\u8B66\\u544A\\u3002\n+javac.opt.Xlint.desc.dep-ann=\\u6709\\u5173\\u9879\\u5728 JavaDoc \\u4E2D\\u6807\\u8BB0\\u4E3A\\u5DF2\\u8FC7\\u65F6\\u4F46\\u672A\\u4F7F\\u7528 @Deprecated \\u6279\\u6CE8\\u7684\\u8B66\\u544A\\u3002\n@@ -144,1 +144,1 @@\n-javac.opt.Xlint.desc.processing=\\u6709\\u5173\\u4E0E\\u6CE8\\u91CA\\u5904\\u7406\\u76F8\\u5173\\u7684\\u95EE\\u9898\\u7684\\u8B66\\u544A\\u3002\n+javac.opt.Xlint.desc.processing=\\u6709\\u5173\\u4E0E\\u6279\\u6CE8\\u5904\\u7406\\u76F8\\u5173\\u7684\\u95EE\\u9898\\u7684\\u8B66\\u544A\\u3002\n@@ -192,2 +192,2 @@\n-javac.opt.printRounds=\\u8F93\\u51FA\\u6709\\u5173\\u6CE8\\u91CA\\u5904\\u7406\\u5FAA\\u73AF\\u7684\\u4FE1\\u606F\n-javac.opt.printProcessorInfo=\\u8F93\\u51FA\\u6709\\u5173\\u8BF7\\u6C42\\u5904\\u7406\\u7A0B\\u5E8F\\u5904\\u7406\\u54EA\\u4E9B\\u6CE8\\u91CA\\u7684\\u4FE1\\u606F\n+javac.opt.printRounds=\\u8F93\\u51FA\\u6709\\u5173\\u6279\\u6CE8\\u5904\\u7406\\u5FAA\\u73AF\\u7684\\u4FE1\\u606F\n+javac.opt.printProcessorInfo=\\u8F93\\u51FA\\u6709\\u5173\\u8BF7\\u6C42\\u5904\\u7406\\u7A0B\\u5E8F\\u5904\\u7406\\u54EA\\u4E9B\\u6279\\u6CE8\\u7684\\u4FE1\\u606F\n@@ -212,1 +212,1 @@\n-javac.opt.default.module.for.created.files=\\u7531\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F\\u521B\\u5EFA\\u7684\\u6587\\u4EF6\\u7684\\u5907\\u7528\\u76EE\\u6807\\u6A21\\u5757 (\\u5982\\u679C\\u672A\\u6307\\u5B9A\\u6216\\u63A8\\u65AD\\u4EFB\\u4F55\\u6A21\\u5757)\\u3002\n+javac.opt.default.module.for.created.files=\\u7531\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F\\u521B\\u5EFA\\u7684\\u6587\\u4EF6\\u7684\\u5907\\u7528\\u76EE\\u6807\\u6A21\\u5757 (\\u5982\\u679C\\u672A\\u6307\\u5B9A\\u6216\\u63A8\\u65AD\\u4EFB\\u4F55\\u6A21\\u5757)\\u3002\n@@ -222,1 +222,1 @@\n-javac.msg.bug=\\u7F16\\u8BD1\\u5668 ({0}) \\u4E2D\\u51FA\\u73B0\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u5728 Bug Database (https:\/\/bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u6709\\u5173\\u8BE5\\u9519\\u8BEF\\u7684 Java \\u7F16\\u8BD1\\u5668 Bug\\uFF0C\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https:\/\/bugreport.java.com) \\u586B\\u62A5 Java \\u7F16\\u8BD1\\u5668 Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u60A8\\u7684\\u7A0B\\u5E8F\\u3001\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u4EE5\\u53CA\\u4F20\\u9012\\u5230 Java \\u7F16\\u8BD1\\u5668\\u7684\\u53C2\\u6570\\u3002\\u8C22\\u8C22\\u3002\n+javac.msg.bug=\\u7F16\\u8BD1\\u5668 ({0}) \\u4E2D\\u51FA\\u73B0\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u5728 Bug Database (https:\/\/bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u6709\\u5173\\u8BE5\\u9519\\u8BEF\\u7684 Java \\u7F16\\u8BD1\\u5668 Bug\\uFF0C\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https:\/\/bugreport.java.com) \\u63D0\\u4EA4 Java \\u7F16\\u8BD1\\u5668 Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u60A8\\u7684\\u7A0B\\u5E8F\\u3001\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u4EE5\\u53CA\\u4F20\\u9012\\u5230 Java \\u7F16\\u8BD1\\u5668\\u7684\\u53C2\\u6570\\u3002\\u8C22\\u8C22\\u3002\n@@ -226,1 +226,1 @@\n-javac.msg.proc.annotation.uncaught.exception=\\n\\n\\u6CE8\\u91CA\\u5904\\u7406\\u7A0B\\u5E8F\\u629B\\u51FA\\u672A\\u6355\\u83B7\\u7684\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\n\\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u53C2\\u9605\\u4EE5\\u4E0B\\u5806\\u6808\\u8DDF\\u8E2A\\u3002\\n\n+javac.msg.proc.annotation.uncaught.exception=\\n\\n\\u6279\\u6CE8\\u5904\\u7406\\u7A0B\\u5E8F\\u629B\\u51FA\\u672A\\u6355\\u83B7\\u7684\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\n\\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u53C2\\u9605\\u4EE5\\u4E0B\\u5806\\u6808\\u8DDF\\u8E2A\\u3002\\n\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac_zh_CN.properties","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -762,3 +762,6 @@\n-            byte[] padded = padding.pad(data);\n-            return padded;\n-        } catch (GeneralSecurityException e) {\n+            byte[] result = padding.pad(data);\n+            if (result == null) {\n+                throw new ProviderException(\"Error padding data\");\n+            }\n+            return result;\n+        } catch (InvalidKeyException | InvalidAlgorithmParameterException e) {\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Signature.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,2 +73,2 @@\n-  public Klass getHigherDimension() { return (Klass) higherDimension.getValue(this); }\n-  public Klass getLowerDimension()  { return (Klass) lowerDimension.getValue(this); }\n+  public ObjArrayKlass getHigherDimension() { return (ObjArrayKlass) higherDimension.getValue(this); }\n+  public ArrayKlass getLowerDimension()     { return (ArrayKlass) lowerDimension.getValue(this); }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ArrayKlass.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -266,2 +266,1 @@\n-        \/\/ TODO: handle resolved field entries with new structure\n-        \/\/ i = ....\n+        return getCache().getFieldEntryAt(index).getConstantPoolIndex();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ConstantPool.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    resolvedFieldArray = type.getAddressField(\"_resolved_field_entries\");\n@@ -75,0 +76,1 @@\n+  private static AddressField  resolvedFieldArray;\n@@ -94,0 +96,6 @@\n+  public ResolvedFieldEntry getFieldEntryAt(int i) {\n+    Address addr = resolvedFieldArray.getValue(getAddress());\n+    ResolvedFieldArray array = new ResolvedFieldArray(addr);\n+    return array.getAt(i);\n+  }\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ConstantPoolCache.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-    ObjArrayKlass ak = (ObjArrayKlass) getHigherDimension();\n+    ObjArrayKlass ak = getHigherDimension();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ObjArrayKlass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+ package sun.jvm.hotspot.oops;\n+\n+ import sun.jvm.hotspot.debugger.Address;\n+ import sun.jvm.hotspot.runtime.VM;\n+ import sun.jvm.hotspot.types.Type;\n+ import sun.jvm.hotspot.types.TypeDataBase;\n+ import sun.jvm.hotspot.types.WrongTypeException;\n+ import sun.jvm.hotspot.utilities.GenericArray;\n+ import sun.jvm.hotspot.utilities.Observable;\n+ import sun.jvm.hotspot.utilities.Observer;\n+\n+ public class ResolvedFieldArray extends GenericArray {\n+     static {\n+         VM.registerVMInitializedObserver(new Observer() {\n+             public void update(Observable o, Object data) {\n+                 initialize(VM.getVM().getTypeDataBase());\n+             }\n+         });\n+     }\n+\n+     private static synchronized void initialize(TypeDataBase db) throws WrongTypeException {\n+         elemType = db.lookupType(\"ResolvedFieldEntry\");\n+\n+         Type type = db.lookupType(\"Array<ResolvedFieldEntry>\");\n+         dataFieldOffset = type.getAddressField(\"_data\").getOffset();\n+     }\n+\n+     private static long dataFieldOffset;\n+     protected static Type elemType;\n+\n+     public ResolvedFieldArray(Address addr) {\n+         super(addr, dataFieldOffset);\n+     }\n+\n+     public ResolvedFieldEntry getAt(int index) {\n+         if (index < 0 || index >= length()) throw new ArrayIndexOutOfBoundsException(index + \" \" + length());\n+\n+         Type elemType = getElemType();\n+\n+         Address data = getAddress().addOffsetTo(dataFieldOffset);\n+         long elemSize = elemType.getSize();\n+\n+         return new ResolvedFieldEntry(data.addOffsetTo(index* elemSize));\n+     }\n+\n+     public Type getElemType() {\n+         return elemType;\n+     }\n+ }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ResolvedFieldArray.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+ package sun.jvm.hotspot.oops;\n+\n+ import java.util.*;\n+ import sun.jvm.hotspot.debugger.*;\n+ import sun.jvm.hotspot.runtime.*;\n+ import sun.jvm.hotspot.types.*;\n+ import sun.jvm.hotspot.utilities.*;\n+ import sun.jvm.hotspot.utilities.Observable;\n+ import sun.jvm.hotspot.utilities.Observer;\n+\n+ public class ResolvedFieldEntry extends VMObject {\n+     private static long          size;\n+     private static long          baseOffset;\n+     private static CIntegerField cpIndex;\n+\n+     static {\n+         VM.registerVMInitializedObserver(new Observer() {\n+             public void update(Observable o, Object data) {\n+                 initialize(VM.getVM().getTypeDataBase());\n+             }\n+         });\n+     }\n+\n+     private static synchronized void initialize(TypeDataBase db) throws WrongTypeException {\n+         Type type = db.lookupType(\"ResolvedFieldEntry\");\n+         size = type.getSize();\n+\n+         cpIndex = type.getCIntegerField(\"_cpool_index\");\n+     }\n+\n+     ResolvedFieldEntry(Address addr) {\n+         super(addr);\n+     }\n+\n+     public int getConstantPoolIndex() {\n+         return this.getAddress().getJShortAt(cpIndex.getOffset());\n+     }\n+\n+     public void iterateFields(MetadataVisitor visitor) { }\n+ }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ResolvedFieldEntry.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-    ObjArrayKlass ak = (ObjArrayKlass) getHigherDimension();\n+    ObjArrayKlass ak = getHigherDimension();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/TypeArrayKlass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-     * Resolves the entry at index {@code cpi} in {@code constantPool} to an object, looking in the\n+     * Gets the entry at index {@code cpi} in {@code constantPool}, looking in the\n@@ -281,0 +281,3 @@\n+     *\n+     * @param resolve specifies if a resolved entry is expected. If {@code false},\n+     *                {@code null} is returned for an unresolved entry.\n@@ -282,2 +285,2 @@\n-    JavaConstant resolvePossiblyCachedConstantInPool(HotSpotConstantPool constantPool, int cpi) {\n-        return resolvePossiblyCachedConstantInPool(constantPool, constantPool.getConstantPoolPointer(), cpi);\n+    JavaConstant lookupConstantInPool(HotSpotConstantPool constantPool, int cpi, boolean resolve) {\n+        return lookupConstantInPool(constantPool, constantPool.getConstantPoolPointer(), cpi, resolve);\n@@ -286,1 +289,1 @@\n-    private native JavaConstant resolvePossiblyCachedConstantInPool(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi);\n+    private native JavaConstant lookupConstantInPool(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi, boolean resolve);\n@@ -390,2 +393,2 @@\n-     * Ensures that the type referenced by the specified {@code JVM_CONSTANT_InvokeDynamic} entry at\n-     * index {@code cpi} in {@code constantPool} is loaded and initialized.\n+     * Converts the encoded indy index operand of an invokedynamic instruction\n+     * to an index directly into {@code constantPool}.\n@@ -393,2 +396,3 @@\n-     * @throws IllegalArgumentException if {@code cpi} is not an invokedynamic index\n-     * @return the invokedynamic index\n+     * @param resolve if {@true}, then resolve the entry (which may call a bootstrap method)\n+     * @throws IllegalArgumentException if {@code encoded_indy_index} is not an encoded indy index\n+     * @return {@code JVM_CONSTANT_InvokeDynamic} constant pool entry index for the invokedynamic\n@@ -396,2 +400,2 @@\n-    int resolveInvokeDynamicInPool(HotSpotConstantPool constantPool, int cpi) {\n-        return resolveInvokeDynamicInPool(constantPool, constantPool.getConstantPoolPointer(), cpi);\n+    int decodeIndyIndexToCPIndex(HotSpotConstantPool constantPool, int encoded_indy_index, boolean resolve) {\n+        return decodeIndyIndexToCPIndex(constantPool, constantPool.getConstantPoolPointer(), encoded_indy_index, resolve);\n@@ -400,1 +404,1 @@\n-    private native int resolveInvokeDynamicInPool(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi);\n+    private native int decodeIndyIndexToCPIndex(HotSpotConstantPool constantPool, long constantPoolPointer, int encoded_indy_index, boolean resolve);\n@@ -443,1 +447,1 @@\n-     * {@link #resolveInvokeDynamicInPool} and {@link #resolveInvokeHandleInPool}), return the\n+     * {@link #decodeIndyIndexToCPIndex} and {@link #resolveInvokeHandleInPool}), return the\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/CompilerToVM.java","additions":16,"deletions":12,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,1 @@\n+import static jdk.vm.ci.hotspot.HotSpotCompiledCodeStream.Tag.REGISTER_VECTOR;\n@@ -64,0 +65,1 @@\n+import static jdk.vm.ci.hotspot.HotSpotCompiledCodeStream.Tag.STACK_SLOT_VECTOR;\n@@ -174,0 +176,1 @@\n+        REGISTER_VECTOR,\n@@ -177,0 +180,1 @@\n+        STACK_SLOT_VECTOR,\n@@ -1032,0 +1036,4 @@\n+    private boolean isVector(Value value) {\n+        return value.getPlatformKind().getVectorLength() > 1;\n+    }\n+\n@@ -1042,1 +1050,10 @@\n-            Tag tag = kind == JavaKind.Object ? (isNarrowOop(reg) ? REGISTER_NARROW_OOP : REGISTER_OOP) : REGISTER_PRIMITIVE;\n+            Tag tag;\n+            if (kind == JavaKind.Object) {\n+                if (isVector(reg)) {\n+                    tag = REGISTER_VECTOR;\n+                } else {\n+                    tag = isNarrowOop(reg) ? REGISTER_NARROW_OOP : REGISTER_OOP;\n+                }\n+            } else {\n+                tag = REGISTER_PRIMITIVE;\n+            }\n@@ -1047,1 +1064,10 @@\n-            Tag tag = kind == JavaKind.Object ? (isNarrowOop(slot) ? STACK_SLOT_NARROW_OOP : STACK_SLOT_OOP) : STACK_SLOT_PRIMITIVE;\n+            Tag tag;\n+            if (kind == JavaKind.Object) {\n+                if (isVector(slot)) {\n+                    tag = STACK_SLOT_VECTOR;\n+                } else {\n+                    tag = isNarrowOop(slot) ? STACK_SLOT_NARROW_OOP : STACK_SLOT_OOP;\n+                }\n+            } else {\n+                tag = STACK_SLOT_PRIMITIVE;\n+            }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotCompiledCodeStream.java","additions":29,"deletions":3,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -640,0 +640,5 @@\n+        return lookupConstant(cpi, true);\n+    }\n+\n+    @Override\n+    public Object lookupConstant(int cpi, boolean resolve) {\n@@ -661,1 +666,1 @@\n-                return compilerToVM().resolvePossiblyCachedConstantInPool(this, cpi);\n+                return compilerToVM().lookupConstantInPool(this, cpi, true);\n@@ -668,1 +673,1 @@\n-                return compilerToVM().resolvePossiblyCachedConstantInPool(this, cpi);\n+                return compilerToVM().lookupConstantInPool(this, cpi, resolve);\n@@ -672,0 +677,1 @@\n+\n@@ -825,1 +831,1 @@\n-            return compilerToVM().resolveInvokeDynamicInPool(this, rawIndex);\n+            return compilerToVM().decodeIndyIndexToCPIndex(this, rawIndex, false);\n@@ -859,1 +865,1 @@\n-                index = compilerToVM().resolveInvokeDynamicInPool(this, cpi);\n+                index = compilerToVM().decodeIndyIndexToCPIndex(this, cpi, true);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -223,0 +223,14 @@\n+    \/**\n+     * Looks up a constant at the specified index.\n+     *\n+     * If {@code resolve == false} and the denoted constant is of type\n+     * {@code JVM_CONSTANT_Dynamic}, {@code JVM_CONSTANT_MethodHandle} or\n+     * {@code JVM_CONSTANT_MethodType} and it's not yet resolved then\n+     * {@code null} is returned.\n+     *\n+     * @param cpi the constant pool index\n+     * @return the {@code Constant} or {@code JavaType} instance representing the constant pool\n+     *         entry\n+     *\/\n+    Object lookupConstant(int cpi, boolean resolve);\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/meta\/ConstantPool.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable;\n@@ -58,2 +59,3 @@\n-    public AbstractExecutableMemberWriter(SubWriterHolderWriter writer, TypeElement typeElement) {\n-        super(writer, typeElement);\n+    public AbstractExecutableMemberWriter(SubWriterHolderWriter writer, TypeElement typeElement,\n+                                          VisibleMemberTable.Kind kind) {\n+        super(writer, typeElement, kind);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractExecutableMemberWriter.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import java.util.Collection;\n+import java.util.Comparator;\n@@ -30,0 +32,5 @@\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n@@ -32,0 +39,1 @@\n+import javax.lang.model.element.ElementKind;\n@@ -46,0 +54,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.DocFinder;\n@@ -49,0 +58,10 @@\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.ANNOTATION_TYPE_MEMBER;\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.ANNOTATION_TYPE_MEMBER_OPTIONAL;\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.ANNOTATION_TYPE_MEMBER_REQUIRED;\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.CONSTRUCTORS;\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.ENUM_CONSTANTS;\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.FIELDS;\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.METHODS;\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.NESTED_CLASSES;\n+import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.PROPERTIES;\n+\n@@ -64,0 +83,2 @@\n+    protected final VisibleMemberTable.Kind kind;\n+    protected final VisibleMemberTable visibleMemberTable;\n@@ -65,3 +86,51 @@\n-    public AbstractMemberWriter(SubWriterHolderWriter writer, TypeElement typeElement) {\n-        this.configuration = writer.configuration;\n-        this.options = configuration.getOptions();\n+    protected final Comparator<Element> summariesComparator;\n+\n+    \/**\n+     * The list of {@linkplain VisibleMemberTable.Kind kinds} of summary table\n+     * that appear in the page for any {@linkplain TypeElement type element}.\n+     *\n+     * Note: this is not the default ordering of {@link VisibleMemberTable.Kind}.\n+     * For what it is worth, that ordering is relied on by {@link Navigation}.\n+     *\n+     * Compared to {@link #detailKinds}, this list includes nested classes and distinct\n+     * kinds for required and optional annotation type members\n+     *\n+     * @see VisibleMemberTable.Kind#forSummariesOf(ElementKind)\n+     *\/\n+    static final List<VisibleMemberTable.Kind> summaryKinds = List.of(\n+            NESTED_CLASSES,\n+            ENUM_CONSTANTS, PROPERTIES, FIELDS,\n+            CONSTRUCTORS,\n+            ANNOTATION_TYPE_MEMBER_REQUIRED, ANNOTATION_TYPE_MEMBER_OPTIONAL, METHODS\n+    );\n+\n+    \/**\n+     * The list of {@linkplain VisibleMemberTable.Kind kinds} of detail lists\n+     * that appear in the page for any {@linkplain TypeElement type element}.\n+     *\n+     * Note: this is not the default ordering of {@link VisibleMemberTable.Kind}.\n+     * For what it is worth, that ordering is relied on by {@link Navigation}.\n+     *\n+     * Compared to {@link #summaryKinds}, this list does not include nested classes and\n+     * just a single kind for all annotation type members, although nested classes could\n+     * be included by ensuring that {@link #buildDetails} is a no-op.\n+     *\n+     * @see VisibleMemberTable.Kind#forDetailsOf(ElementKind)\n+     *\/\n+    static final List<VisibleMemberTable.Kind> detailKinds = List.of(\n+            ENUM_CONSTANTS, PROPERTIES, FIELDS,\n+            CONSTRUCTORS,\n+            ANNOTATION_TYPE_MEMBER, METHODS\n+    );\n+\n+    protected AbstractMemberWriter(ClassWriter writer, VisibleMemberTable.Kind kind) {\n+        this(writer, writer.typeElement, kind);\n+    }\n+\n+    protected AbstractMemberWriter(SubWriterHolderWriter writer) {\n+        this(writer, null, null);\n+    }\n+\n+    protected AbstractMemberWriter(SubWriterHolderWriter writer,\n+                                 TypeElement typeElement,\n+                                 VisibleMemberTable.Kind kind) {\n@@ -70,0 +139,4 @@\n+        this.kind = kind;\n+\n+        this.configuration = writer.configuration;\n+        this.options = configuration.getOptions();\n@@ -75,0 +148,115 @@\n+\n+        visibleMemberTable = typeElement == null ? null : configuration.getVisibleMemberTable(typeElement);\n+\n+        summariesComparator = utils.comparators.indexElementComparator();\n+    }\n+\n+    \/**\n+     * Builds the list of \"details\" for all members of this kind.\n+     *\n+     * @param target the content to which the list will be added\n+     *\/\n+    public abstract void buildDetails(Content target);\n+\n+\n+    \/**\n+     * Builds the \"summary\" for all members of this kind.\n+     *\n+     * @param target the content to which the list will be added\n+     *\/\n+    public void buildSummary(Content target)\n+    {\n+        var summaryTreeList = new ArrayList<Content>();\n+\n+        buildMainSummary(summaryTreeList);\n+\n+        var showInherited = switch (kind) {\n+            case FIELDS, METHODS, NESTED_CLASSES, PROPERTIES -> true;\n+            case ANNOTATION_TYPE_MEMBER, ANNOTATION_TYPE_MEMBER_OPTIONAL, ANNOTATION_TYPE_MEMBER_REQUIRED,\n+                    CONSTRUCTORS, ENUM_CONSTANTS -> false;\n+        };\n+        if (showInherited)\n+            buildInheritedSummary(summaryTreeList);\n+\n+        if (!summaryTreeList.isEmpty()) {\n+            Content member = getMemberSummaryHeader(typeElement, target);\n+            summaryTreeList.forEach(member::add);\n+            buildSummary(target, member);\n+        }\n+    }\n+\n+    \/**\n+     * Builds the main summary table for the members of this kind.\n+     *\n+     * @param summaryTreeList the list of contents to which the documentation will be added\n+     *\/\n+    private void buildMainSummary(List<Content> summaryTreeList) {\n+        Set<? extends Element> members = asSortedSet(visibleMemberTable.getVisibleMembers(kind));\n+        if (!members.isEmpty()) {\n+            var pHelper = writer.getPropertyHelper();\n+            for (Element member : members) {\n+                final Element property = pHelper.getPropertyElement(member);\n+                if (property != null && member instanceof ExecutableElement ee) {\n+                    configuration.cmtUtils.updatePropertyMethodComment(ee, property);\n+                }\n+                if (utils.isMethod(member)) {\n+                    var docFinder = utils.docFinder();\n+                    Optional<List<? extends DocTree>> r = docFinder.search((ExecutableElement) member, (m -> {\n+                        var firstSentenceTrees = utils.getFirstSentenceTrees(m);\n+                        Optional<List<? extends DocTree>> optional = firstSentenceTrees.isEmpty() ? Optional.empty() : Optional.of(firstSentenceTrees);\n+                        return DocFinder.Result.fromOptional(optional);\n+                    })).toOptional();\n+                    \/\/ The fact that we use `member` for possibly unrelated tags is suspicious\n+                    addMemberSummary(typeElement, member, r.orElse(List.of()));\n+                } else {\n+                    addMemberSummary(typeElement, member, utils.getFirstSentenceTrees(member));\n+                }\n+            }\n+            summaryTreeList.add(getSummaryTable(typeElement));\n+        }\n+    }\n+\n+    \/**\n+     * Builds the inherited member summary for the members of this kind.\n+     *\n+     * @param targets the list of contents to which the documentation will be added\n+     *\/\n+    private void buildInheritedSummary(List<Content> targets) {\n+        var inheritedMembersFromMap = asSortedSet(visibleMemberTable.getAllVisibleMembers(kind));\n+\n+        for (TypeElement inheritedClass : visibleMemberTable.getVisibleTypeElements()) {\n+            if (!(utils.isPublic(inheritedClass) || utils.isLinkable(inheritedClass))) {\n+                continue;\n+            }\n+            if (Objects.equals(inheritedClass, typeElement)) {\n+                continue;\n+            }\n+            if (utils.hasHiddenTag(inheritedClass)) {\n+                continue;\n+            }\n+\n+            List<? extends Element> members = inheritedMembersFromMap.stream()\n+                    .filter(e -> Objects.equals(utils.getEnclosingTypeElement(e), inheritedClass))\n+                    .toList();\n+\n+            if (!members.isEmpty()) {\n+                SortedSet<Element> inheritedMembers = new TreeSet<>(summariesComparator);\n+                inheritedMembers.addAll(members);\n+                Content inheritedHeader = getInheritedSummaryHeader(inheritedClass);\n+                Content links = getInheritedSummaryLinks();\n+                addSummaryFootNote(inheritedClass, inheritedMembers, links);\n+                inheritedHeader.add(links);\n+                targets.add(inheritedHeader);\n+            }\n+        }\n+    }\n+\n+    private void addSummaryFootNote(TypeElement inheritedClass, Iterable<Element> inheritedMembers,\n+                                    Content links) {\n+        boolean isFirst = true;\n+        for (Element member : inheritedMembers) {\n+            TypeElement t = utils.isUndocumentedEnclosure(inheritedClass)\n+                    ? typeElement : inheritedClass;\n+            addInheritedMemberSummary(t, member, isFirst, links);\n+            isFirst = false;\n+        }\n@@ -77,2 +265,4 @@\n-    public AbstractMemberWriter(SubWriterHolderWriter writer) {\n-        this(writer, null);\n+    private SortedSet<? extends Element> asSortedSet(Collection<? extends Element> members) {\n+        SortedSet<Element> out = new TreeSet<>(summariesComparator);\n+        out.addAll(members);\n+        return out;\n@@ -96,1 +286,1 @@\n-    public abstract void addSummary(Content summariesList, Content content);\n+    public abstract void buildSummary(Content summariesList, Content content);\n@@ -378,1 +568,1 @@\n-            throw new IllegalStateException(tElement + \", \" + typeElement);\n+            throw new IllegalStateException(getClass() + \": \" + tElement + \", \" + typeElement);\n@@ -401,1 +591,0 @@\n-     * @param isLast true if this is the last member in the list\n@@ -405,1 +594,1 @@\n-            Element member, boolean isFirst, boolean isLast,\n+            Element member, boolean isFirst,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":198,"deletions":9,"binary":false,"changes":207,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-        SortedSet<TypeElement> interfaces = new TreeSet<>(comparators.makeGeneralPurposeComparator());\n+        SortedSet<TypeElement> interfaces = new TreeSet<>(comparators.generalPurposeComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractTreeWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.DocletException;\n@@ -50,13 +49,0 @@\n-    \/**\n-     * We generate separate summaries for required and optional annotation interface members,\n-     * so we need dedicated writer instances for each kind. For the details section, a single\n-     * shared list is generated so a special {@code ANY} value is provided for this case.\n-     *\/\n-    enum Kind {\n-        OPTIONAL,\n-        REQUIRED,\n-        ANY\n-    }\n-\n-    private final Kind kind;\n-\n@@ -69,10 +55,0 @@\n-    \/**\n-     * Constructs a new AnnotationTypeMemberWriterImpl for any kind of member.\n-     *\n-     * @param writer The writer for the class that the member belongs to.\n-     *\/\n-    public AnnotationTypeMemberWriter(SubWriterHolderWriter writer) {\n-        super(writer);\n-        this.kind = Kind.ANY;\n-    }\n-\n@@ -82,0 +58,4 @@\n+     * We generate separate summaries for required and optional annotation interface members,\n+     * so we need dedicated writer instances for each kind. For the details section, a single\n+     * shared list is generated\n+     *\n@@ -83,1 +63,0 @@\n-     * @param annotationType the AnnotationType that holds this member.\n@@ -86,5 +65,8 @@\n-    public AnnotationTypeMemberWriter(SubWriterHolderWriter writer,\n-                                      TypeElement annotationType,\n-                                      Kind kind) {\n-        super(writer, annotationType);\n-        this.kind = kind;\n+    public AnnotationTypeMemberWriter(ClassWriter writer, VisibleMemberTable.Kind kind) {\n+        super(writer, kind);\n+        assert switch (kind) {\n+            case ANNOTATION_TYPE_MEMBER_REQUIRED,\n+                    ANNOTATION_TYPE_MEMBER_OPTIONAL,\n+                    ANNOTATION_TYPE_MEMBER -> true;\n+            default -> false;\n+        };\n@@ -93,1 +75,2 @@\n-    public void build(Content target) throws DocletException {\n+    @Override\n+    public void buildDetails(Content target) {\n@@ -194,4 +177,1 @@\n-            case OPTIONAL -> content.add(selectComment(\n-                    MarkerComments.START_OF_ANNOTATION_TYPE_OPTIONAL_MEMBER_SUMMARY,\n-                    MarkerComments.START_OF_ANNOTATION_INTERFACE_OPTIONAL_MEMBER_SUMMARY));\n-            case REQUIRED -> content.add(selectComment(\n+            case ANNOTATION_TYPE_MEMBER_REQUIRED -> content.add(selectComment(\n@@ -200,1 +180,4 @@\n-            case ANY -> throw new UnsupportedOperationException(\"unsupported member kind\");\n+            case ANNOTATION_TYPE_MEMBER_OPTIONAL -> content.add(selectComment(\n+                    MarkerComments.START_OF_ANNOTATION_TYPE_OPTIONAL_MEMBER_SUMMARY,\n+                    MarkerComments.START_OF_ANNOTATION_INTERFACE_OPTIONAL_MEMBER_SUMMARY));\n+            default -> throw new IllegalStateException(kind.toString());\n@@ -212,1 +195,1 @@\n-    public void addSummary(Content summariesList, Content content) {\n+    public void buildSummary(Content summariesList, Content content) {\n@@ -215,3 +198,3 @@\n-                    case REQUIRED -> HtmlIds.ANNOTATION_TYPE_REQUIRED_ELEMENT_SUMMARY;\n-                    case OPTIONAL -> HtmlIds.ANNOTATION_TYPE_OPTIONAL_ELEMENT_SUMMARY;\n-                    case ANY -> throw new UnsupportedOperationException(\"unsupported member kind\");\n+                    case ANNOTATION_TYPE_MEMBER_REQUIRED -> HtmlIds.ANNOTATION_TYPE_REQUIRED_ELEMENT_SUMMARY;\n+                    case ANNOTATION_TYPE_MEMBER_OPTIONAL -> HtmlIds.ANNOTATION_TYPE_OPTIONAL_ELEMENT_SUMMARY;\n+                    default -> throw new IllegalStateException(kind.toString());\n@@ -277,3 +260,3 @@\n-                    case REQUIRED -> contents.annotateTypeRequiredMemberSummaryLabel;\n-                    case OPTIONAL -> contents.annotateTypeOptionalMemberSummaryLabel;\n-                    case ANY -> throw new UnsupportedOperationException(\"unsupported member kind\");\n+                    case ANNOTATION_TYPE_MEMBER_REQUIRED -> contents.annotateTypeRequiredMemberSummaryLabel;\n+                    case ANNOTATION_TYPE_MEMBER_OPTIONAL -> contents.annotateTypeOptionalMemberSummaryLabel;\n+                    default -> throw new IllegalStateException(kind.toString());\n@@ -291,3 +274,3 @@\n-                    case REQUIRED -> \"doclet.Annotation_Type_Required_Members\";\n-                    case OPTIONAL -> \"doclet.Annotation_Type_Optional_Members\";\n-                    case ANY -> throw new UnsupportedOperationException(\"unsupported member kind\");\n+                    case ANNOTATION_TYPE_MEMBER_REQUIRED -> \"doclet.Annotation_Type_Required_Members\";\n+                    case ANNOTATION_TYPE_MEMBER_OPTIONAL -> \"doclet.Annotation_Type_Optional_Members\";\n+                    default -> throw new IllegalStateException(kind.toString());\n@@ -301,3 +284,3 @@\n-                    case REQUIRED -> contents.annotationTypeRequiredMemberLabel;\n-                    case OPTIONAL -> contents.annotationTypeOptionalMemberLabel;\n-                    case ANY -> throw new UnsupportedOperationException(\"unsupported member kind\");\n+                    case ANNOTATION_TYPE_MEMBER_REQUIRED -> contents.annotationTypeRequiredMemberLabel;\n+                    case ANNOTATION_TYPE_MEMBER_OPTIONAL -> contents.annotationTypeOptionalMemberLabel;\n+                    default -> throw new IllegalStateException(kind.toString());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeMemberWriter.java","additions":32,"deletions":49,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-            pkgToPackageAnnotations = new TreeSet<>(comparators.makeClassUseComparator());\n+            pkgToPackageAnnotations = new TreeSet<>(comparators.classUseComparator());\n@@ -103,1 +103,1 @@\n-        this.pkgSet = new TreeSet<>(comparators.makePackageComparator());\n+        this.pkgSet = new TreeSet<>(comparators.packageComparator());\n@@ -173,1 +173,1 @@\n-            elements.sort(comparators.makeClassUseComparator());\n+            elements.sort(comparators.classUseComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.util.Comparator;\n-import java.util.LinkedList;\n@@ -33,2 +31,0 @@\n-import java.util.Objects;\n-import java.util.Optional;\n@@ -68,1 +64,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.util.DocFinder;\n@@ -72,9 +67,0 @@\n-import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.ANNOTATION_TYPE_MEMBER_OPTIONAL;\n-import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.ANNOTATION_TYPE_MEMBER_REQUIRED;\n-import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.CONSTRUCTORS;\n-import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.ENUM_CONSTANTS;\n-import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.FIELDS;\n-import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.METHODS;\n-import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.NESTED_CLASSES;\n-import static jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable.Kind.PROPERTIES;\n-\n@@ -102,3 +88,1 @@\n-\n-    private final Comparator<Element> summariesComparator;\n-    private final PropertyUtils.PropertyHelper pHelper;\n+    protected final PropertyUtils.PropertyHelper pHelper;\n@@ -119,1 +103,0 @@\n-        summariesComparator = utils.comparators.makeIndexElementComparator();\n@@ -128,0 +111,5 @@\n+    @Override\n+    public PropertyUtils.PropertyHelper getPropertyHelper() {\n+        return pHelper;\n+    }\n+\n@@ -175,1 +163,1 @@\n-        Content c = getOutputInstance();\n+        Content c = new ContentBuilder();\n@@ -289,1 +277,1 @@\n-                    .getDocFilesHandler(containingPackage);\n+                    .newDocFilesHandler(containingPackage);\n@@ -329,26 +317,0 @@\n-        buildSummaries(summariesList);\n-        classContent.add(getMemberSummary(summariesList));\n-    }\n-\n-    protected void buildSummaries(Content target) {\n-        buildPropertiesSummary(target);\n-        buildNestedClassesSummary(target);\n-        buildEnumConstantsSummary(target);\n-        buildAnnotationTypeRequiredMemberSummary(target);\n-        buildAnnotationTypeOptionalMemberSummary(target);\n-        buildFieldsSummary(target);\n-        buildConstructorsSummary(target);\n-        buildMethodsSummary(target);\n-    }\n-\n-    \/**\n-     * Builds the summary for any optional members of an annotation type.\n-     *\n-     * @param summariesList the list of summaries to which the summary will be added\n-     *\/\n-    protected void buildAnnotationTypeOptionalMemberSummary(Content summariesList) {\n-\/\/        MemberSummaryWriter writer = memberSummaryWriters.get(ANNOTATION_TYPE_MEMBER_OPTIONAL);\n-        var writerFactory = configuration.getWriterFactory();\n-        var writer = writerFactory.getAnnotationTypeOptionalMemberWriter(this);\n-        addSummary(writer, ANNOTATION_TYPE_MEMBER_OPTIONAL, false, summariesList);\n-    }\n@@ -356,108 +318,4 @@\n-    \/**\n-     * Builds the summary for any required members of an annotation type.\n-     *\n-     * @param summariesList the list of summaries to which the summary will be added\n-     *\/\n-    protected void buildAnnotationTypeRequiredMemberSummary(Content summariesList) {\n-\/\/        MemberSummaryWriter writer = memberSummaryWriters.get(ANNOTATION_TYPE_MEMBER_REQUIRED);\n-        var writerFactory = configuration.getWriterFactory();\n-        var writer = writerFactory.getAnnotationTypeRequiredMemberWriter(this);\n-        addSummary(writer, ANNOTATION_TYPE_MEMBER_REQUIRED, false, summariesList);\n-    }\n-\n-    \/**\n-     * Builds the summary for any enum constants of an enum type.\n-     *\n-     * @param summariesList the list of summaries to which the summary will be added\n-     *\/\n-    protected void buildEnumConstantsSummary(Content summariesList) {\n-\/\/        MemberSummaryWriter writer = memberSummaryWriters.get(ENUM_CONSTANTS);\n-        var writerFactory = configuration.getWriterFactory();\n-        var writer = writerFactory.getEnumConstantWriter(this);\n-        addSummary(writer, ENUM_CONSTANTS, false, summariesList);\n-    }\n-\n-    \/**\n-     * Builds the summary for any fields.\n-     *\n-     * @param summariesList the list of summaries to which the summary will be added\n-     *\/\n-    protected void buildFieldsSummary(Content summariesList) {\n-\/\/        MemberSummaryWriter writer = memberSummaryWriters.get(FIELDS);\n-        var writerFactory = configuration.getWriterFactory();\n-        var writer = writerFactory.getFieldWriter(this);\n-        addSummary(writer, FIELDS, true, summariesList);\n-    }\n-\n-    \/**\n-     * Builds the summary for any properties.\n-     *\n-     * @param summariesList the list of summaries to which the summary will be added\n-     *\/\n-    protected void buildPropertiesSummary(Content summariesList) {\n-\/\/        MemberSummaryWriter writer = memberSummaryWriters.get(PROPERTIES);\n-        var writerFactory = configuration.getWriterFactory();\n-        var writer = writerFactory.getPropertyWriter(this);\n-        addSummary(writer, PROPERTIES, true, summariesList);\n-    }\n-\n-    \/**\n-     * Builds the summary for any nested classes.\n-     *\n-     * @param summariesList the list of summaries to which the summary will be added\n-     *\/\n-    protected void buildNestedClassesSummary(Content summariesList) {\n-\/\/        MemberSummaryWriter writer = memberSummaryWriters.get(NESTED_CLASSES);\n-        var writerFactory = configuration.getWriterFactory();\n-        var writer = new NestedClassWriter(this, typeElement); \/\/ TODO: surprising omission from WriterFactory\n-        addSummary(writer, NESTED_CLASSES, true, summariesList);\n-    }\n-\n-    \/**\n-     * Builds the summary for any methods.\n-     *\n-     * @param summariesList the content to which the documentation will be added\n-     *\/\n-    protected void buildMethodsSummary(Content summariesList) {\n-\/\/        MemberSummaryWriter writer = memberSummaryWriters.get(METHODS);\n-        var writerFactory = configuration.getWriterFactory();\n-        var writer = writerFactory.getMethodWriter(this);\n-        addSummary(writer, METHODS, true, summariesList);\n-    }\n-\n-    \/**\n-     * Builds the summary for any constructors.\n-     *\n-     * @param summariesList the content to which the documentation will be added\n-     *\/\n-    protected void buildConstructorsSummary(Content summariesList) {\n-\/\/        MemberSummaryWriter writer = memberSummaryWriters.get(CONSTRUCTORS);\n-        var writerFactory = configuration.getWriterFactory();\n-        var writer = writerFactory.getConstructorWriter(this);\n-        addSummary(writer, CONSTRUCTORS, false, summariesList);\n-    }\n-\n-\n-    \/**\n-     * Adds the summary for the documentation.\n-     *\n-     * @param writer               the writer for this member summary\n-     * @param kind                 the kind of members to document\n-     * @param showInheritedSummary true if a summary of any inherited elements should be documented\n-     * @param summariesList        the list of summaries to which the summary will be added\n-     *\/\n-    private void addSummary(AbstractMemberWriter writer,\n-                            VisibleMemberTable.Kind kind,\n-                            boolean showInheritedSummary,\n-                            Content summariesList)\n-    {\n-        \/\/ TODO: could infer the writer from the kind\n-        \/\/ TODO: why LinkedList?\n-        List<Content> summaryTreeList = new LinkedList<>();\n-        buildSummary(writer, kind, summaryTreeList);\n-        if (showInheritedSummary)\n-            buildInheritedSummary(writer, kind, summaryTreeList);\n-        if (!summaryTreeList.isEmpty()) {\n-            Content member = writer.getMemberSummaryHeader(typeElement, summariesList);\n-            summaryTreeList.forEach(member::add);\n-            writer.addSummary(summariesList, member);\n+        var f = configuration.getWriterFactory();\n+        for (var k : AbstractMemberWriter.summaryKinds) {\n+            var writer = f.newMemberWriter(this, k);\n+            writer.buildSummary(summariesList);\n@@ -465,1 +323,0 @@\n-    }\n@@ -467,87 +324,1 @@\n-    \/**\n-     * Build the member summary for the given members.\n-     *\n-     * @param writer the summary writer to write the output.\n-     * @param kind the kind of  members to summarize.\n-     * @param summaryTreeList the list of contents to which the documentation will be added\n-     *\/\n-    private void buildSummary(AbstractMemberWriter writer,\n-                              VisibleMemberTable.Kind kind, List<Content> summaryTreeList) {\n-        SortedSet<? extends Element> members = asSortedSet(visibleMemberTable.getVisibleMembers(kind));\n-        if (!members.isEmpty()) {\n-            for (Element member : members) {\n-                final Element property = pHelper.getPropertyElement(member);\n-                if (property != null && member instanceof ExecutableElement ee) {\n-                    configuration.cmtUtils.updatePropertyMethodComment(ee, property);\n-                }\n-                if (utils.isMethod(member)) {\n-                    var docFinder = utils.docFinder();\n-                    Optional<List<? extends DocTree>> r = docFinder.search((ExecutableElement) member, (m -> {\n-                        var firstSentenceTrees = utils.getFirstSentenceTrees(m);\n-                        Optional<List<? extends DocTree>> optional = firstSentenceTrees.isEmpty() ? Optional.empty() : Optional.of(firstSentenceTrees);\n-                        return DocFinder.Result.fromOptional(optional);\n-                    })).toOptional();\n-                    \/\/ The fact that we use `member` for possibly unrelated tags is suspicious\n-                    writer.addMemberSummary(typeElement, member, r.orElse(List.of()));\n-                } else {\n-                    writer.addMemberSummary(typeElement, member, utils.getFirstSentenceTrees(member));\n-                }\n-            }\n-            summaryTreeList.add(writer.getSummaryTable(typeElement));\n-        }\n-    }\n-\n-    \/**\n-     * Build the inherited member summary for the given methods.\n-     *\n-     * @param writer the writer for this member summary.\n-     * @param kind the kind of members to document.\n-     * @param targets the list of contents to which the documentation will be added\n-     *\/\n-    private void buildInheritedSummary(AbstractMemberWriter writer,\n-                                       VisibleMemberTable.Kind kind, List<Content> targets) {\n-        SortedSet<? extends Element> inheritedMembersFromMap = asSortedSet(visibleMemberTable.getAllVisibleMembers(kind));\n-\n-        for (TypeElement inheritedClass : visibleMemberTable.getVisibleTypeElements()) {\n-            if (!(utils.isPublic(inheritedClass) || utils.isLinkable(inheritedClass))) {\n-                continue;\n-            }\n-            if (Objects.equals(inheritedClass, typeElement)) {\n-                continue;\n-            }\n-            if (utils.hasHiddenTag(inheritedClass)) {\n-                continue;\n-            }\n-\n-            List<? extends Element> members = inheritedMembersFromMap.stream()\n-                    .filter(e -> Objects.equals(utils.getEnclosingTypeElement(e), inheritedClass))\n-                    .toList();\n-\n-            if (!members.isEmpty()) {\n-                SortedSet<Element> inheritedMembers = new TreeSet<>(summariesComparator);\n-                inheritedMembers.addAll(members);\n-                Content inheritedHeader = writer.getInheritedSummaryHeader(inheritedClass);\n-                Content links = writer.getInheritedSummaryLinks();\n-                addSummaryFootNote(inheritedClass, inheritedMembers, links, writer);\n-                inheritedHeader.add(links);\n-                targets.add(inheritedHeader);\n-            }\n-        }\n-    }\n-\n-    private void addSummaryFootNote(TypeElement inheritedClass, Iterable<Element> inheritedMembers,\n-                                    Content links, AbstractMemberWriter writer) {\n-        boolean isFirst = true;\n-        for (var iterator = inheritedMembers.iterator(); iterator.hasNext(); ) {\n-            var member = iterator.next();\n-            TypeElement t = utils.isUndocumentedEnclosure(inheritedClass)\n-                    ? typeElement : inheritedClass;\n-            writer.addInheritedMemberSummary(t, member, isFirst, !iterator.hasNext(), links);\n-            isFirst = false;\n-        }\n-    }\n-\n-    private SortedSet<? extends Element> asSortedSet(Collection<? extends Element> members) {\n-        SortedSet<Element> out = new TreeSet<>(summariesComparator);\n-        out.addAll(members);\n-        return out;\n+        classContent.add(getMemberSummary(summariesList));\n@@ -560,1 +331,0 @@\n-     * @throws DocletException if there is a problem while building the documentation\n@@ -562,1 +332,1 @@\n-    protected void buildMemberDetails(Content classContent) throws DocletException {\n+    protected void buildMemberDetails(Content classContent) {\n@@ -565,6 +335,5 @@\n-        buildEnumConstantsDetails(detailsList);\n-        buildPropertyDetails(detailsList);\n-        buildFieldDetails(detailsList);\n-        buildConstructorDetails(detailsList);\n-        buildAnnotationTypeMemberDetails(detailsList);\n-        buildMethodDetails(detailsList);\n+        var f = configuration.getWriterFactory();\n+        for (var k : AbstractMemberWriter.detailKinds) {\n+            var writer = f.newMemberWriter(this, k);\n+            writer.buildDetails(detailsList);\n+        }\n@@ -575,71 +344,0 @@\n-    \/**\n-     * Build the enum constants documentation.\n-     *\n-     * @param detailsList the content to which the documentation will be added\n-     *\/\n-    protected void buildEnumConstantsDetails(Content detailsList) {\n-        var writerFactory = configuration.getWriterFactory();\n-        var enumConstantWriter = writerFactory.getEnumConstantWriter(this);\n-        enumConstantWriter.build(detailsList);\n-    }\n-\n-    \/**\n-     * Build the field documentation.\n-     *\n-     * @param detailsList the content to which the documentation will be added\n-     * @throws DocletException if there is a problem while building the documentation\n-     *\/\n-    protected void buildFieldDetails(Content detailsList) throws DocletException {\n-        var writerFactory = configuration.getWriterFactory();\n-        var fieldWriter = writerFactory.getFieldWriter(this);\n-        fieldWriter.build(detailsList);\n-    }\n-\n-    \/**\n-     * Build the property documentation.\n-     *\n-     * @param detailsList the content to which the documentation will be added\n-     *\/\n-    public void buildPropertyDetails( Content detailsList) {\n-        var writerFactory = configuration.getWriterFactory();\n-        var propertyWriter = writerFactory.getPropertyWriter(this);\n-        propertyWriter.build(detailsList);\n-    }\n-\n-    \/**\n-     * Build the constructor documentation.\n-     *\n-     * @param detailsList the content to which the documentation will be added\n-     * @throws DocletException if there is a problem while building the documentation\n-     *\/\n-    protected void buildConstructorDetails(Content detailsList) throws DocletException {\n-        var writerFactory = configuration.getWriterFactory();\n-        var constructorWriter = writerFactory.getConstructorWriter(this);\n-        constructorWriter.build(detailsList);\n-    }\n-\n-    \/**\n-     * Build the method documentation.\n-     *\n-     * @param detailsList the content to which the documentation will be added\n-     * @throws DocletException if there is a problem while building the documentation\n-     *\/\n-    protected void buildMethodDetails(Content detailsList) throws DocletException {\n-        var writerFactory = configuration.getWriterFactory();\n-        var methodWriter = writerFactory.getMethodWriter(this);\n-        methodWriter.build(detailsList);\n-    }\n-\n-    \/**\n-     * Build the annotation type optional member documentation.\n-     *\n-     * @param target the content to which the documentation will be added\n-     * @throws DocletException if there is a problem building the documentation\n-     *\/\n-    protected void buildAnnotationTypeMemberDetails(Content target)\n-            throws DocletException {\n-        var writerFactory = configuration.getWriterFactory();\n-        var annotationTypeMemberWriter = writerFactory.getAnnotationTypeMemberWriter(this);\n-        annotationTypeMemberWriter.build(target);\n-    }\n-\n@@ -737,6 +435,0 @@\n-\n-    }\n-\n-    \/\/ TODO: inline this\n-    public Content getOutputInstance() {\n-        return new ContentBuilder();\n@@ -966,1 +658,1 @@\n-        SortedSet<TypeMirror> interfaces = new TreeSet<>(comparators.makeTypeMirrorClassUseComparator());\n+        SortedSet<TypeMirror> interfaces = new TreeSet<>(comparators.typeMirrorClassUseComparator());\n@@ -978,1 +670,1 @@\n-                new TreeSet<>(comparators.makeTypeMirrorIndexUseComparator());\n+                new TreeSet<>(comparators.typeMirrorIndexUseComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":21,"deletions":329,"binary":false,"changes":350,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-                    new TreeSet<>(utils.comparators.makeGeneralPurposeComparator());\n+                    new TreeSet<>(utils.comparators.generalPurposeComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.DocletException;\n@@ -65,1 +64,1 @@\n-        super(writer, writer.getTypeElement());\n+        super(writer, writer.typeElement, VisibleMemberTable.Kind.CONSTRUCTORS);\n@@ -85,1 +84,2 @@\n-    public void build(Content target) throws DocletException {\n+    @Override\n+    public void buildDetails(Content target) {\n@@ -181,1 +181,1 @@\n-    public void addSummary(Content summariesList, Content content) {\n+    public void buildSummary(Content summariesList, Content content) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        super(classWriter, classWriter.typeElement);\n+        super(classWriter, classWriter.typeElement, VisibleMemberTable.Kind.ENUM_CONSTANTS);\n@@ -57,1 +57,2 @@\n-    public void build(Content target) {\n+    @Override\n+    public void buildDetails(Content target) {\n@@ -150,1 +151,1 @@\n-    public void addSummary(Content summariesList, Content content) {\n+    public void buildSummary(Content summariesList, Content content) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriter.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.DocletException;\n@@ -56,1 +55,1 @@\n-        super(writer, writer.typeElement);\n+        super(writer, VisibleMemberTable.Kind.FIELDS);\n@@ -60,1 +59,1 @@\n-        super(writer, typeElement);\n+        super(writer, typeElement, VisibleMemberTable.Kind.FIELDS);\n@@ -68,1 +67,2 @@\n-    public void build(Content target) throws DocletException {\n+    @Override\n+    public void buildDetails(Content target) {\n@@ -159,1 +159,1 @@\n-    public void addSummary(Content summariesList, Content content) {\n+    public void buildSummary(Content summariesList, Content content) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-    private Set<PackageElement> containingPackagesSeen;\n+    private final Set<PackageElement> containingPackagesSeen;\n@@ -242,0 +242,1 @@\n+    @Override\n@@ -283,1 +284,1 @@\n-     * @see {@link ClassWriter#copyDocFiles()}\n+     * @see ClassWriter#copyDocFiles()\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -104,0 +104,5 @@\n+    \/**\n+     * Factory for page- and member-writers.\n+     *\/\n+    private WriterFactory writerFactory;\n+\n@@ -114,0 +119,1 @@\n+        writerFactory = configuration.getWriterFactory();\n@@ -206,2 +212,0 @@\n-     * For new format.\n-     *\n@@ -215,2 +219,2 @@\n-        new ConstantsSummaryWriter(configuration).build();\n-        new SerializedFormWriter(configuration).build();\n+        writerFactory.newConstantsSummaryWriter().build();\n+        writerFactory.newSerializedFormWriter().build();\n@@ -398,1 +402,1 @@\n-            new ClassWriter(configuration, te, classTree).build();\n+            writerFactory.newClassWriter(te, classTree).build();\n@@ -407,1 +411,1 @@\n-                new ModuleWriter(configuration, mdle).build();\n+                writerFactory.newModuleWriter(mdle).build();\n@@ -422,1 +426,1 @@\n-                new PackageWriter(configuration, pkg).build();\n+                writerFactory.newPackageWriter(pkg).build();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2042,1 +2042,1 @@\n-            DocFilesHandler docFilesHandler = configuration.getWriterFactory().getDocFilesHandler(element);\n+            DocFilesHandler docFilesHandler = configuration.getWriterFactory().newDocFilesHandler(element);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Links;\n@@ -80,0 +79,1 @@\n+    @Override\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIndexBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.DocletException;\n@@ -67,1 +66,1 @@\n-        super(writer, writer.typeElement);\n+        super(writer, writer.typeElement, VisibleMemberTable.Kind.METHODS);\n@@ -77,1 +76,1 @@\n-        super(writer, typeElement);\n+        super(writer, typeElement, VisibleMemberTable.Kind.METHODS);\n@@ -90,1 +89,2 @@\n-    public void build(Content target) throws DocletException {\n+    @Override\n+    public void buildDetails(Content target) {\n@@ -185,1 +185,1 @@\n-    public void addSummary(Content summariesList, Content content) {\n+    public void buildSummary(Content summariesList, Content content) {\n@@ -402,1 +402,1 @@\n-                new TreeSet<>(utils.comparators.makeOverrideUseComparator());\n+                new TreeSet<>(utils.comparators.overrideUseComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-            = new TreeMap<>(comparators.makeModuleComparator());\n+            = new TreeMap<>(comparators.moduleComparator());\n@@ -84,1 +84,1 @@\n-            = new TreeMap<>(comparators.makeModuleComparator());\n+            = new TreeMap<>(comparators.moduleComparator());\n@@ -114,1 +114,1 @@\n-    private final Map<PackageElement, PackageEntry> packages = new TreeMap<>(utils.comparators.makePackageComparator());\n+    private final Map<PackageElement, PackageEntry> packages = new TreeMap<>(utils.comparators.packageComparator());\n@@ -120,1 +120,1 @@\n-            = new TreeMap<>(comparators.makeModuleComparator());\n+            = new TreeMap<>(comparators.moduleComparator());\n@@ -126,1 +126,1 @@\n-            = new TreeMap<>(comparators.makeModuleComparator());\n+            = new TreeMap<>(comparators.moduleComparator());\n@@ -132,1 +132,1 @@\n-            = new TreeSet<>(comparators.makeAllClassesComparator());\n+            = new TreeSet<>(comparators.allClassesComparator());\n@@ -138,1 +138,1 @@\n-            = new TreeMap<>(comparators.makeAllClassesComparator());\n+            = new TreeMap<>(comparators.allClassesComparator());\n@@ -144,1 +144,1 @@\n-            = new TreeMap<>(comparators.makeAllClassesComparator());\n+            = new TreeMap<>(comparators.allClassesComparator());\n@@ -151,1 +151,1 @@\n-            = new TreeMap<>(comparators.makeAllClassesComparator());\n+            = new TreeMap<>(comparators.allClassesComparator());\n@@ -189,1 +189,1 @@\n-        var docFilesHandler = configuration.getWriterFactory().getDocFilesHandler(mdle);\n+        var docFilesHandler = configuration.getWriterFactory().newDocFilesHandler(mdle);\n@@ -351,1 +351,1 @@\n-                    SortedSet<ModuleElement> mdleList = new TreeSet<>(utils.comparators.makeModuleComparator());\n+                    SortedSet<ModuleElement> mdleList = new TreeSet<>(utils.comparators.moduleComparator());\n@@ -369,1 +369,1 @@\n-                    SortedSet<ModuleElement> mdleList = new TreeSet<>(utils.comparators.makeModuleComparator());\n+                    SortedSet<ModuleElement> mdleList = new TreeSet<>(utils.comparators.moduleComparator());\n@@ -381,1 +381,1 @@\n-            SortedSet<PackageElement> exportedPackages = new TreeSet<>(utils.comparators.makePackageComparator());\n+            SortedSet<PackageElement> exportedPackages = new TreeSet<>(utils.comparators.packageComparator());\n@@ -396,1 +396,1 @@\n-            SortedSet<PackageElement> openPackages = new TreeSet<>(utils.comparators.makePackageComparator());\n+            SortedSet<PackageElement> openPackages = new TreeSet<>(utils.comparators.packageComparator());\n@@ -428,1 +428,1 @@\n-                SortedSet<TypeElement> implSet = new TreeSet<>(utils.comparators.makeAllClassesComparator());\n+                SortedSet<TypeElement> implSet = new TreeSet<>(utils.comparators.allClassesComparator());\n@@ -612,1 +612,1 @@\n-     * @param li\n+     * @param li the tree to which the summary will be added\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriter.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable;\n@@ -45,2 +46,2 @@\n-    public NestedClassWriter(SubWriterHolderWriter writer, TypeElement typeElement) {\n-        super(writer, typeElement);\n+    public NestedClassWriter(ClassWriter writer) {\n+        super(writer, VisibleMemberTable.Kind.NESTED_CLASSES);\n@@ -49,0 +50,1 @@\n+    \/\/ used in ClassUseWriter and SummaryUseWriter\n@@ -53,0 +55,5 @@\n+    @Override\n+    public void buildDetails(Content target) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n@@ -63,1 +70,1 @@\n-    public void addSummary(Content summariesList, Content content) {\n+    public void buildSummary(Content summariesList, Content content) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NestedClassWriter.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-                        usedClasses = new TreeSet<>(comparators.makeGeneralPurposeComparator());\n+                        usedClasses = new TreeSet<>(comparators.generalPurposeComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageUseWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-                .getDocFilesHandler(packageElement);\n+                .newDocFilesHandler(packageElement);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        super(writer, writer.typeElement);\n+        super(writer, writer.typeElement, VisibleMemberTable.Kind.PROPERTIES);\n@@ -62,1 +62,2 @@\n-    public void build(Content target) {\n+    @Override\n+    public void buildDetails(Content target) {\n@@ -168,1 +169,1 @@\n-    public void addSummary(Content summariesList, Content content) {\n+    public void buildSummary(Content summariesList, Content content) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriter.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-        SortedSet<TypeElement> rootclasses = new TreeSet<>(utils.comparators.makeGeneralPurposeComparator());\n+        SortedSet<TypeElement> rootclasses = new TreeSet<>(utils.comparators.generalPurposeComparator());\n@@ -446,1 +446,1 @@\n-        SortedSet<SerialFieldTree> tags = new TreeSet<>(utils.comparators.makeSerialFieldTreeComparator());\n+        SortedSet<SerialFieldTree> tags = new TreeSet<>(utils.comparators.serialFieldTreeComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerializedFormWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.PropertyUtils;\n@@ -68,0 +69,4 @@\n+    public PropertyUtils.PropertyHelper getPropertyHelper() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n@@ -297,9 +302,0 @@\n-    \/**\n-     * {@return the member details}\n-     *\n-     * @param content the content used to generate the member details\n-     *\/\n-    public Content getMemberDetailsContent(Content content) {\n-        return HtmlTree.SECTION(HtmlStyle.details, content);\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -355,0 +355,1 @@\n+    @Override\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-\/\/ TODO: be more consistent about using this factory\n@@ -44,0 +43,1 @@\n+\n@@ -48,1 +48,4 @@\n-    public ConstantsSummaryWriter getConstantsSummaryWriter() {\n+    \/**\n+     * {@return a new {@link ConstantsSummaryWriter}}\n+     *\/\n+    public ConstantsSummaryWriter newConstantsSummaryWriter() {\n@@ -52,1 +55,4 @@\n-    public PackageWriter getPackageSummaryWriter(PackageElement packageElement) {\n+    \/**\n+     * {@return a new {@link PackageWriter}}\n+     *\/\n+    public PackageWriter newPackageWriter(PackageElement packageElement) {\n@@ -56,1 +62,4 @@\n-    public ModuleWriter getModuleSummaryWriter(ModuleElement mdle) {\n+    \/**\n+     * {@return a new {@link ModuleWriter}}\n+     *\/\n+    public ModuleWriter newModuleWriter(ModuleElement mdle) {\n@@ -60,1 +69,4 @@\n-    public ClassWriter getClassWriter(TypeElement typeElement, ClassTree classTree) {\n+    \/**\n+     * {@return a new {@link ClassWriter}}\n+     *\/\n+    public ClassWriter newClassWriter(TypeElement typeElement, ClassTree classTree) {\n@@ -63,64 +75,4 @@\n-\n-    public AnnotationTypeMemberWriter getAnnotationTypeMemberWriter(\n-            ClassWriter classWriter) {\n-        TypeElement te = classWriter.getTypeElement();\n-        return new AnnotationTypeMemberWriter(classWriter, te, AnnotationTypeMemberWriter.Kind.ANY);\n-    }\n-\n-    public AnnotationTypeMemberWriter getAnnotationTypeOptionalMemberWriter(\n-            ClassWriter classWriter) {\n-        TypeElement te = classWriter.getTypeElement();\n-        return new AnnotationTypeMemberWriter(classWriter, te, AnnotationTypeMemberWriter.Kind.OPTIONAL);\n-    }\n-\n-    public AnnotationTypeMemberWriter getAnnotationTypeRequiredMemberWriter(\n-            ClassWriter classWriter) {\n-        TypeElement te = classWriter.getTypeElement();\n-        return new AnnotationTypeMemberWriter(classWriter, te, AnnotationTypeMemberWriter.Kind.REQUIRED);\n-    }\n-\n-    public EnumConstantWriter getEnumConstantWriter(ClassWriter classWriter) {\n-        return new EnumConstantWriter(classWriter);\n-    }\n-\n-    public FieldWriter getFieldWriter(ClassWriter classWriter) {\n-        return new FieldWriter(classWriter);\n-    }\n-\n-    public PropertyWriter getPropertyWriter(ClassWriter classWriter) {\n-        return new PropertyWriter(classWriter);\n-    }\n-\n-    public MethodWriter getMethodWriter(ClassWriter classWriter) {\n-        return new MethodWriter(classWriter);\n-    }\n-\n-    public ConstructorWriter getConstructorWriter(ClassWriter classWriter) {\n-        return new ConstructorWriter(classWriter);\n-    }\n-\n-    public AbstractMemberWriter getMemberSummaryWriter(ClassWriter classWriter,\n-                                                       VisibleMemberTable.Kind memberType) {\n-        switch (memberType) {\n-            case CONSTRUCTORS:\n-                return getConstructorWriter(classWriter);\n-            case ENUM_CONSTANTS:\n-                return getEnumConstantWriter(classWriter);\n-            case ANNOTATION_TYPE_MEMBER_OPTIONAL:\n-                return getAnnotationTypeOptionalMemberWriter(classWriter);\n-            case ANNOTATION_TYPE_MEMBER_REQUIRED:\n-                return getAnnotationTypeRequiredMemberWriter(classWriter);\n-            case FIELDS:\n-                return getFieldWriter(classWriter);\n-            case PROPERTIES:\n-                return getPropertyWriter(classWriter);\n-            case NESTED_CLASSES:\n-                return new NestedClassWriter(classWriter, classWriter.getTypeElement());\n-            case METHODS:\n-                return getMethodWriter(classWriter);\n-            default:\n-                return null;\n-        }\n-    }\n-\n-    public SerializedFormWriter getSerializedFormWriter() {\n+    \/**\n+     * {@return a new {@link SerializedFormWriter}}\n+     *\/\n+    public SerializedFormWriter newSerializedFormWriter() {\n@@ -130,1 +82,27 @@\n-    public DocFilesHandler getDocFilesHandler(Element element) {\n+    \/**\n+     * Returns a new member writer for the members of a given class and given kind.\n+     *\n+     * @param classWriter the writer for the enclosing class\n+     * @param kind the kind\n+     *\n+     * @return the writer\n+     *\/\n+    public AbstractMemberWriter newMemberWriter(ClassWriter classWriter,\n+                                                VisibleMemberTable.Kind kind) {\n+        return switch (kind) {\n+            case ANNOTATION_TYPE_MEMBER,\n+                    ANNOTATION_TYPE_MEMBER_OPTIONAL,\n+                    ANNOTATION_TYPE_MEMBER_REQUIRED -> new AnnotationTypeMemberWriter(classWriter, kind);\n+            case CONSTRUCTORS -> new ConstructorWriter(classWriter);\n+            case ENUM_CONSTANTS -> new EnumConstantWriter(classWriter);\n+            case FIELDS -> new FieldWriter(classWriter);\n+            case NESTED_CLASSES -> new NestedClassWriter(classWriter);\n+            case METHODS -> new MethodWriter(classWriter);\n+            case PROPERTIES -> new PropertyWriter(classWriter);\n+        };\n+    }\n+\n+    \/**\n+     * {@return a new {@link DocFilesHandler}}\n+     *\/\n+    public DocFilesHandler newDocFilesHandler(Element element) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/WriterFactory.java","additions":48,"deletions":70,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-doclet.Annotation_Type_Hierarchy=\\u6CE8\\u91CA\\u7C7B\\u578B\\u5206\\u5C42\\u7ED3\\u6784\n-doclet.Annotation_Interface_Hierarchy=\\u6CE8\\u91CA\\u63A5\\u53E3\\u5206\\u5C42\\u7ED3\\u6784\n+doclet.Annotation_Type_Hierarchy=\\u6279\\u6CE8\\u7C7B\\u578B\\u5206\\u5C42\\u7ED3\\u6784\n+doclet.Annotation_Interface_Hierarchy=\\u6279\\u6CE8\\u63A5\\u53E3\\u5206\\u5C42\\u7ED3\\u6784\n@@ -49,2 +49,2 @@\n-doclet.Href_Annotation_Title={0}\\u4E2D\\u7684\\u6CE8\\u91CA\n-doclet.Href_Annotation_Interface_Title={0} \\u4E2D\\u7684\\u6CE8\\u91CA\\u63A5\\u53E3\n+doclet.Href_Annotation_Title={0}\\u4E2D\\u7684\\u6279\\u6CE8\n+doclet.Href_Annotation_Interface_Title={0} \\u4E2D\\u7684\\u6279\\u6CE8\\u63A5\\u53E3\n@@ -135,8 +135,8 @@\n-doclet.Annotation_Types=\\u6CE8\\u91CA\\u7C7B\\u578B\n-doclet.Annotation_Interfaces=\\u6CE8\\u91CA\\u63A5\\u53E3\n-doclet.Annotation_Type_Members=\\u6CE8\\u91CA\\u7C7B\\u578B\\u5143\\u7D20\n-doclet.Annotation_Interface_Members=\\u6CE8\\u91CA\\u63A5\\u53E3\\u5143\\u7D20\n-doclet.annotation_types=\\u6CE8\\u91CA\\u7C7B\\u578B\n-doclet.annotation_interfaces=\\u6CE8\\u91CA\\u63A5\\u53E3\n-doclet.annotation_type_members=\\u6CE8\\u91CA\\u7C7B\\u578B\\u5143\\u7D20\n-doclet.annotation_interface_members=\\u6CE8\\u91CA\\u63A5\\u53E3\\u5143\\u7D20\n+doclet.Annotation_Types=\\u6279\\u6CE8\\u7C7B\\u578B\n+doclet.Annotation_Interfaces=\\u6279\\u6CE8\\u63A5\\u53E3\n+doclet.Annotation_Type_Members=\\u6279\\u6CE8\\u7C7B\\u578B\\u5143\\u7D20\n+doclet.Annotation_Interface_Members=\\u6279\\u6CE8\\u63A5\\u53E3\\u5143\\u7D20\n+doclet.annotation_types=\\u6279\\u6CE8\\u7C7B\\u578B\n+doclet.annotation_interfaces=\\u6279\\u6CE8\\u63A5\\u53E3\n+doclet.annotation_type_members=\\u6279\\u6CE8\\u7C7B\\u578B\\u5143\\u7D20\n+doclet.annotation_interface_members=\\u6279\\u6CE8\\u63A5\\u53E3\\u5143\\u7D20\n@@ -222,1 +222,1 @@\n-doclet.help.class_interface.anno=\\u6CE8\\u91CA\\u63A5\\u53E3\\u6709\\u5FC5\\u9700\\u7684\\u5143\\u7D20\\u548C\\u53EF\\u9009\\u7684\\u5143\\u7D20\\uFF0C\\u4F46\\u6CA1\\u6709\\u65B9\\u6CD5\\u3002\n+doclet.help.class_interface.anno=\\u6279\\u6CE8\\u63A5\\u53E3\\u6709\\u5FC5\\u9700\\u7684\\u5143\\u7D20\\u548C\\u53EF\\u9009\\u7684\\u5143\\u7D20\\uFF0C\\u4F46\\u6CA1\\u6709\\u65B9\\u6CD5\\u3002\n@@ -245,1 +245,1 @@\n-doclet.help.all_classes.body={0} \\u5305\\u542B\\u6587\\u6863\\u4E2D\\u6240\\u6709\\u7C7B\\u548C\\u63A5\\u53E3\\uFF08\\u5305\\u62EC\\u6CE8\\u91CA\\u63A5\\u53E3\\u3001\\u679A\\u4E3E\\u7C7B\\u548C\\u8BB0\\u5F55\\u7C7B\\uFF09\\u7684\\u6309\\u5B57\\u6BCD\\u987A\\u5E8F\\u6392\\u5217\\u7684\\u7D22\\u5F15\\u3002\n+doclet.help.all_classes.body={0} \\u5305\\u542B\\u6587\\u6863\\u4E2D\\u6240\\u6709\\u7C7B\\u548C\\u63A5\\u53E3\\uFF08\\u5305\\u62EC\\u6279\\u6CE8\\u63A5\\u53E3\\u3001\\u679A\\u4E3E\\u7C7B\\u548C\\u8BB0\\u5F55\\u7C7B\\uFF09\\u7684\\u6309\\u5B57\\u6BCD\\u987A\\u5E8F\\u6392\\u5217\\u7684\\u7D22\\u5F15\\u3002\n@@ -259,6 +259,6 @@\n-doclet.help.annotation_type.intro=\\u6BCF\\u4E2A\\u6CE8\\u91CA\\u7C7B\\u578B\\u90FD\\u6709\\u5404\\u81EA\\u7684\\u9875\\u9762, \\u5176\\u4E2D\\u5305\\u542B\\u4EE5\\u4E0B\\u90E8\\u5206:\n-doclet.help.annotation_interface.intro=\\u6BCF\\u4E2A\\u6CE8\\u91CA\\u63A5\\u53E3\\u90FD\\u6709\\u5404\\u81EA\\u7684\\u9875\\u9762\\uFF0C\\u5176\\u4E2D\\u5305\\u542B\\u4EE5\\u4E0B\\u90E8\\u5206\\uFF1A\n-doclet.help.annotation_type.declaration=\\u6CE8\\u91CA\\u7C7B\\u578B\\u58F0\\u660E\n-doclet.help.annotation_interface.declaration=\\u6CE8\\u91CA\\u63A5\\u53E3\\u58F0\\u660E\n-doclet.help.annotation_type.description=\\u6CE8\\u91CA\\u7C7B\\u578B\\u8BF4\\u660E\n-doclet.help.annotation_interface.description=\\u6CE8\\u91CA\\u63A5\\u53E3\\u8BF4\\u660E\n+doclet.help.annotation_type.intro=\\u6BCF\\u4E2A\\u6279\\u6CE8\\u7C7B\\u578B\\u90FD\\u6709\\u5404\\u81EA\\u7684\\u9875\\u9762, \\u5176\\u4E2D\\u5305\\u542B\\u4EE5\\u4E0B\\u90E8\\u5206:\n+doclet.help.annotation_interface.intro=\\u6BCF\\u4E2A\\u6279\\u6CE8\\u63A5\\u53E3\\u90FD\\u6709\\u5404\\u81EA\\u7684\\u9875\\u9762\\uFF0C\\u5176\\u4E2D\\u5305\\u542B\\u4EE5\\u4E0B\\u90E8\\u5206\\uFF1A\n+doclet.help.annotation_type.declaration=\\u6279\\u6CE8\\u7C7B\\u578B\\u58F0\\u660E\n+doclet.help.annotation_interface.declaration=\\u6279\\u6CE8\\u63A5\\u53E3\\u58F0\\u660E\n+doclet.help.annotation_type.description=\\u6279\\u6CE8\\u7C7B\\u578B\\u8BF4\\u660E\n+doclet.help.annotation_interface.description=\\u6279\\u6CE8\\u63A5\\u53E3\\u8BF4\\u660E\n@@ -280,2 +280,2 @@\n-doclet.ClassUse_PackageAnnotation=\\u6CE8\\u91CA\\u7C7B\\u578B\\u4E3A{0}\\u7684\\u7A0B\\u5E8F\\u5305\n-doclet.ClassUse_Annotation=\\u6CE8\\u91CA\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u7C7B\n+doclet.ClassUse_PackageAnnotation=\\u6279\\u6CE8\\u7C7B\\u578B\\u4E3A{0}\\u7684\\u7A0B\\u5E8F\\u5305\n+doclet.ClassUse_Annotation=\\u6279\\u6CE8\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u7C7B\n@@ -285,3 +285,3 @@\n-doclet.ClassUse_FieldAnnotations=\\u6CE8\\u91CA\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u5B57\\u6BB5\n-doclet.ClassUse_MethodAnnotations=\\u6CE8\\u91CA\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u65B9\\u6CD5\n-doclet.ClassUse_MethodParameterAnnotations=\\u6CE8\\u91CA\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u65B9\\u6CD5\\u53C2\\u6570\n+doclet.ClassUse_FieldAnnotations=\\u6279\\u6CE8\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u5B57\\u6BB5\n+doclet.ClassUse_MethodAnnotations=\\u6279\\u6CE8\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u65B9\\u6CD5\n+doclet.ClassUse_MethodParameterAnnotations=\\u6279\\u6CE8\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u65B9\\u6CD5\\u53C2\\u6570\n@@ -297,2 +297,2 @@\n-doclet.ClassUse_ConstructorAnnotations=\\u6CE8\\u91CA\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u6784\\u9020\\u5668\n-doclet.ClassUse_ConstructorParameterAnnotations=\\u6CE8\\u91CA\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u6784\\u9020\\u5668\\u53C2\\u6570\n+doclet.ClassUse_ConstructorAnnotations=\\u6279\\u6CE8\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u6784\\u9020\\u5668\n+doclet.ClassUse_ConstructorParameterAnnotations=\\u6279\\u6CE8\\u7C7B\\u578B\\u4E3A{0}\\u7684{1}\\u4E2D\\u7684\\u6784\\u9020\\u5668\\u53C2\\u6570\n@@ -477,1 +477,1 @@\n-doclet.usage.override-methods.description=\\u5728\\u8BE6\\u7EC6\\u4FE1\\u606F\\u90E8\\u5206\\u6216\\u6982\\u8981\\u90E8\\u5206\\u4E2D\\u8BB0\\u5F55\\u8986\\u76D6\\u7684\\u65B9\\u6CD5\\u3002\\n\\u9ED8\\u8BA4\\u503C\\u4E3A 'detail'\\u3002\n+doclet.usage.override-methods.description=\\u5728\\u8BE6\\u7EC6\\u4FE1\\u606F\\u90E8\\u5206\\u6216\\u6982\\u8981\\u90E8\\u5206\\u4E2D\\u8BB0\\u5F55\\u88AB\\u8986\\u76D6\\u7684\\u65B9\\u6CD5\\u3002\\n\\u9ED8\\u8BA4\\u503C\\u4E3A 'detail'\\u3002\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard_zh_CN.properties","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-        SortedSet<TypeElement> classes = new TreeSet<>(utils.comparators.makeGeneralPurposeComparator());\n+        SortedSet<TypeElement> classes = new TreeSet<>(utils.comparators.generalPurposeComparator());\n@@ -239,1 +239,1 @@\n-        SortedSet<PackageElement> packages = new TreeSet<>(utils.comparators.makePackageComparator());\n+        SortedSet<PackageElement> packages = new TreeSet<>(utils.comparators.packageComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/AbstractDoclet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -289,1 +289,1 @@\n-        modules = new TreeSet<>(comparators.makeModuleComparator());\n+        modules = new TreeSet<>(comparators.moduleComparator());\n@@ -292,1 +292,1 @@\n-        modulePackages = new TreeMap<>(comparators.makeModuleComparator());\n+        modulePackages = new TreeMap<>(comparators.moduleComparator());\n@@ -297,1 +297,1 @@\n-                        .computeIfAbsent(mdle, m -> new TreeSet<>(comparators.makePackageComparator()));\n+                        .computeIfAbsent(mdle, m -> new TreeSet<>(comparators.packageComparator()));\n@@ -306,1 +306,1 @@\n-                        .computeIfAbsent(mdle, m -> new TreeSet<>(comparators.makePackageComparator()));\n+                        .computeIfAbsent(mdle, m -> new TreeSet<>(comparators.packageComparator()));\n@@ -322,1 +322,1 @@\n-        packages = new TreeSet<>(utils.comparators.makePackageComparator());\n+        packages = new TreeSet<>(utils.comparators.packageComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseConfiguration.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import javax.lang.model.type.DeclaredType;\n@@ -59,2 +58,0 @@\n-import com.sun.tools.javac.code.Type;\n-import com.sun.tools.javac.code.TypeTag;\n@@ -63,1 +60,0 @@\n-import com.sun.tools.javac.model.JavacElements;\n@@ -283,2 +279,2 @@\n-            methods = new TreeSet<>(utils.comparators.makeGeneralPurposeComparator());\n-            fields = new TreeSet<>(utils.comparators.makeGeneralPurposeComparator());\n+            methods = new TreeSet<>(utils.comparators.generalPurposeComparator());\n+            fields = new TreeSet<>(utils.comparators.generalPurposeComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/WorkArounds.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-doclet.Toolkit_Usage_Violation=Das Doclet-Toolkit kann nur von {0} verwendet werden\n@@ -113,0 +112,1 @@\n+doclet.inheritDocBadSupertype=Die au\\u00DFer Kraft gesetzte Methode kann nicht gefunden werden\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_de.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-doclet.Toolkit_Usage_Violation=\\u30C9\\u30C3\\u30AF\\u30EC\\u30C3\\u30C8\\u30FB\\u30C4\\u30FC\\u30EB\\u30FB\\u30AD\\u30C3\\u30C8\\u306F{0}\\u306B\\u3088\\u3063\\u3066\\u306E\\u307F\\u4F7F\\u7528\\u3055\\u308C\\u307E\\u3059\n@@ -113,0 +112,1 @@\n+doclet.inheritDocBadSupertype=\\u30AA\\u30FC\\u30D0\\u30FC\\u30E9\\u30A4\\u30C9\\u3055\\u308C\\u305F\\u30E1\\u30BD\\u30C3\\u30C9\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-doclet.Toolkit_Usage_Violation=\\u53EA\\u6709{0}\\u53EF\\u4EE5\\u4F7F\\u7528 Doclet \\u5DE5\\u5177\\u7BB1\n@@ -46,1 +45,1 @@\n-doclet.internal.report.bug=\\u5982\\u679C\\u5728 Bug Database (https:\/\/bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u6709\\u5173\\u8BE5\\u9519\\u8BEF\\u7684 javadoc \\u5DE5\\u5177 Bug\\uFF0C\\n\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https:\/\/bugreport.java.com) \\u586B\\u62A5 javadoc \\u5DE5\\u5177 Bug\\u3002\\n\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u9519\\u8BEF\\u6D88\\u606F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n+doclet.internal.report.bug=\\u5982\\u679C\\u5728 Bug Database (https:\/\/bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u6709\\u5173\\u8BE5\\u9519\\u8BEF\\u7684 javadoc \\u5DE5\\u5177 Bug\\uFF0C\\n\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https:\/\/bugreport.java.com) \\u63D0\\u4EA4 javadoc \\u5DE5\\u5177 Bug\\u3002\\n\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u9519\\u8BEF\\u6D88\\u606F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n@@ -113,0 +112,1 @@\n+doclet.inheritDocBadSupertype=\\u627E\\u4E0D\\u5230\\u88AB\\u8986\\u76D6\\u7684\\u65B9\\u6CD5\n@@ -142,2 +142,2 @@\n-doclet.AnnotationTypes=\\u6CE8\\u91CA\\u7C7B\\u578B\n-doclet.AnnotationInterfaces=\\u6CE8\\u91CA\\u63A5\\u53E3\n+doclet.AnnotationTypes=\\u6279\\u6CE8\\u7C7B\\u578B\n+doclet.AnnotationInterfaces=\\u6279\\u6CE8\\u63A5\\u53E3\n@@ -151,6 +151,6 @@\n-doclet.AnnotationType=\\u6CE8\\u91CA\\u7C7B\\u578B\n-doclet.AnnotationInterface=\\u6CE8\\u91CA\\u63A5\\u53E3\n-doclet.annotationtype=\\u6CE8\\u91CA\\u7C7B\\u578B\n-doclet.annotationinterface=\\u6CE8\\u91CA\\u63A5\\u53E3\n-doclet.annotationtypes=\\u6CE8\\u91CA\\u7C7B\\u578B\n-doclet.annotationinterfaces=\\u6CE8\\u91CA\\u63A5\\u53E3\n+doclet.AnnotationType=\\u6279\\u6CE8\\u7C7B\\u578B\n+doclet.AnnotationInterface=\\u6279\\u6CE8\\u63A5\\u53E3\n+doclet.annotationtype=\\u6279\\u6CE8\\u7C7B\\u578B\n+doclet.annotationinterface=\\u6279\\u6CE8\\u63A5\\u53E3\n+doclet.annotationtypes=\\u6279\\u6CE8\\u7C7B\\u578B\n+doclet.annotationinterfaces=\\u6279\\u6CE8\\u63A5\\u53E3\n@@ -233,2 +233,2 @@\n-doclet.Annotation_Type_Member=\\u6CE8\\u91CA\\u7C7B\\u578B\\u5143\\u7D20\n-doclet.Annotation_Interface_Member=\\u6CE8\\u91CA\\u63A5\\u53E3\\u5143\\u7D20\n+doclet.Annotation_Type_Member=\\u6279\\u6CE8\\u7C7B\\u578B\\u5143\\u7D20\n+doclet.Annotation_Interface_Member=\\u6279\\u6CE8\\u63A5\\u53E3\\u5143\\u7D20\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_zh_CN.properties","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-        Comparator<Element> comparator = utils.comparators.makeClassUseComparator();\n+        Comparator<Element> comparator = utils.comparators.classUseComparator();\n@@ -209,1 +209,1 @@\n-        Comparator<Element> comparator = utils.comparators.makeClassUseComparator();\n+        Comparator<Element> comparator = utils.comparators.classUseComparator();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/ClassTree.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-        classToPackage = new TreeMap<>(comparators.makeClassUseComparator());\n+        classToPackage = new TreeMap<>(comparators.classUseComparator());\n@@ -288,1 +288,1 @@\n-            ret = new TreeSet<>(comparators.makeClassUseComparator());\n+            ret = new TreeSet<>(comparators.classUseComparator());\n@@ -307,1 +307,1 @@\n-            ret = new TreeSet<>(comparators.makeClassUseComparator());\n+            ret = new TreeSet<>(comparators.classUseComparator());\n@@ -328,1 +328,1 @@\n-            ret = new TreeSet<>(comparators.makeClassUseComparator());\n+            ret = new TreeSet<>(comparators.classUseComparator());\n@@ -349,1 +349,1 @@\n-        Set<TypeMirror> classArgs = new TreeSet<>(comparators.makeTypeMirrorClassUseComparator());\n+        Set<TypeMirror> classArgs = new TreeSet<>(comparators.typeMirrorClassUseComparator());\n@@ -428,1 +428,1 @@\n-            pkgSet = new TreeSet<>(comparators.makeClassUseComparator());\n+            pkgSet = new TreeSet<>(comparators.classUseComparator());\n@@ -437,1 +437,1 @@\n-            clsSet = new TreeSet<>(comparators.makeClassUseComparator());\n+            clsSet = new TreeSet<>(comparators.classUseComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/ClassUseMapper.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -58,2 +58,3 @@\n-     * Comparator for ModuleElements, simply compares the fully qualified names\n-     * @return a Comparator\n+     * Returns a comparator for module elements, that simply compares the fully qualified names\n+     *\n+     * @return the comparator\n@@ -61,1 +62,1 @@\n-    public Comparator<Element> makeModuleComparator() {\n+    public Comparator<Element> moduleComparator() {\n@@ -76,2 +77,2 @@\n-     * Returns a Comparator for all classes, compares the simple names of\n-     * TypeElement, if equal then the fully qualified names, and if equal again\n+     * Returns a comparator for all classes, that compares the simple names of\n+     * the type element, if equal then the fully qualified names, and if equal again\n@@ -80,1 +81,1 @@\n-     * @return Comparator\n+     * @return the comparator\n@@ -82,1 +83,1 @@\n-    public Comparator<Element> makeAllClassesComparator() {\n+    public Comparator<Element> allClassesComparator() {\n@@ -102,1 +103,1 @@\n-     * Returns a Comparator for packages, by comparing the fully qualified names,\n+     * Returns a comparator for packages, by comparing the fully qualified names,\n@@ -105,1 +106,1 @@\n-     * @return a Comparator\n+     * @return the comparator\n@@ -107,1 +108,1 @@\n-    public Comparator<Element> makePackageComparator() {\n+    public Comparator<Element> packageComparator() {\n@@ -125,1 +126,1 @@\n-     * Returns a Comparator for items listed on summary list pages\n+     * Returns a comparator for items listed on summary list pages\n@@ -129,1 +130,1 @@\n-     * @return a Comparator\n+     * @return the comparator\n@@ -131,1 +132,1 @@\n-    public Comparator<Element> makeSummaryComparator() {\n+    public Comparator<Element> summaryComparator() {\n@@ -155,2 +156,3 @@\n-     * Returns a Comparator for SerialFieldTree.\n-     * @return a Comparator\n+     * Returns a comparator for {@link SerialFieldTree}s.\n+     *\n+     * @return the comparator\n@@ -158,1 +160,1 @@\n-    public Comparator<SerialFieldTree> makeSerialFieldTreeComparator() {\n+    public Comparator<SerialFieldTree> serialFieldTreeComparator() {\n@@ -171,1 +173,2 @@\n-     * @return a Comparator\n+     *\n+     * @return the comparator\n@@ -173,2 +176,2 @@\n-    public Comparator<Element> makeGeneralPurposeComparator() {\n-        return makeClassUseComparator();\n+    public Comparator<Element> generalPurposeComparator() {\n+        return classUseComparator();\n@@ -180,1 +183,1 @@\n-     * Returns a Comparator for overrides and implements,\n+     * Returns a comparator for overrides and implements,\n@@ -183,2 +186,4 @@\n-     * TypeElement and the fully qualified name of the enclosing TypeElement.\n-     * @return a Comparator\n+     * type element and the fully qualified name of the enclosing\n+     * type element.\n+     *\n+     * @return the comparator\n@@ -186,1 +191,1 @@\n-    public Comparator<Element> makeOverrideUseComparator() {\n+    public Comparator<Element> overrideUseComparator() {\n@@ -222,2 +227,2 @@\n-     *     a case insensitive comparison of parameter the type signatures\n-     * 2b. if equal, case sensitive comparison of the type signatures\n+     *     a case-insensitive comparison of parameter the type signatures\n+     * 2b. if equal, case-sensitive comparison of the type signatures\n@@ -226,0 +231,1 @@\n+     *\n@@ -228,1 +234,1 @@\n-    public Comparator<Element> makeIndexElementComparator() {\n+    public Comparator<Element> indexElementComparator() {\n@@ -242,1 +248,1 @@\n-                    int result = utils.compareStrings(getIndexElementKey(e1), getIndexElementKey(e2));\n+                    int result = utils.compareStrings(indexElementKey(e1), indexElementKey(e2));\n@@ -275,1 +281,1 @@\n-    public String getIndexElementKey(Element element) {\n+    public String indexElementKey(Element element) {\n@@ -289,1 +295,1 @@\n-    public Comparator<TypeMirror> makeTypeMirrorClassUseComparator() {\n+    public Comparator<TypeMirror> typeMirrorClassUseComparator() {\n@@ -308,1 +314,1 @@\n-    public Comparator<TypeMirror> makeTypeMirrorIndexUseComparator() {\n+    public Comparator<TypeMirror> typeMirrorIndexUseComparator() {\n@@ -329,0 +335,1 @@\n+     *\n@@ -331,1 +338,1 @@\n-    public Comparator<Element> makeClassUseComparator() {\n+    public Comparator<Element> classUseComparator() {\n@@ -369,1 +376,1 @@\n-     * for creating specific comparators for an use-case.\n+     * for creating specific comparators for each use-case.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Comparators.java","additions":39,"deletions":32,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -329,1 +329,1 @@\n-        return map.computeIfAbsent(groupname, g -> new TreeSet<>(configuration.utils.comparators.makePackageComparator()));\n+        return map.computeIfAbsent(groupname, g -> new TreeSet<>(configuration.utils.comparators.packageComparator()));\n@@ -341,1 +341,1 @@\n-        return map.computeIfAbsent(groupname, g -> new TreeSet<>(configuration.utils.comparators.makeModuleComparator()));\n+        return map.computeIfAbsent(groupname, g -> new TreeSet<>(configuration.utils.comparators.moduleComparator()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Group.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-        return Comparator.comparing(IndexItem::getElement, utils.comparators.makeAllClassesComparator());\n+        return Comparator.comparing(IndexItem::getElement, utils.comparators.allClassesComparator());\n@@ -334,1 +334,1 @@\n-        Comparator<Element> elementComparator = utils.comparators.makeIndexElementComparator();\n+        Comparator<Element> elementComparator = utils.comparators.indexElementComparator();\n@@ -377,1 +377,1 @@\n-                ? utils.comparators.getIndexElementKey(ii.getElement())\n+                ? utils.comparators.indexElementKey(ii.getElement())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/IndexBuilder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    };\n+    }\n@@ -183,1 +183,1 @@\n-     * Return the list of summary elements of a given type.\n+     * Return the set of summary elements of a given type.\n@@ -186,1 +186,1 @@\n-     * @return\n+     * @return the set\n@@ -214,1 +214,1 @@\n-        return new TreeSet<>(utils.comparators.makeSummaryComparator());\n+        return new TreeSet<>(utils.comparators.summaryComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/SummaryAPIListBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-        comparator = utils.comparators.makeGeneralPurposeComparator();\n+        comparator = utils.comparators.generalPurposeComparator();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/TypeElementCatalog.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -663,1 +663,1 @@\n-        SortedSet<TypeElement> set = new TreeSet<>(comparators.makeGeneralPurposeComparator());\n+        SortedSet<TypeElement> set = new TreeSet<>(comparators.generalPurposeComparator());\n@@ -1320,1 +1320,1 @@\n-                new TreeSet<>(comparators.makeGeneralPurposeComparator());\n+                new TreeSet<>(comparators.generalPurposeComparator());\n@@ -1607,1 +1607,1 @@\n-        Map<ModuleElement, String> result = new TreeMap<>(comparators.makeModuleComparator());\n+        Map<ModuleElement, String> result = new TreeMap<>(comparators.moduleComparator());\n@@ -1681,1 +1681,1 @@\n-        SortedSet<TypeElement> set = new TreeSet<>(comparators.makeGeneralPurposeComparator());\n+        SortedSet<TypeElement> set = new TreeSet<>(comparators.generalPurposeComparator());\n@@ -1697,1 +1697,1 @@\n-            SortedSet<TypeElement>oset = new TreeSet<>(comparators.makeGeneralPurposeComparator());\n+            SortedSet<TypeElement>oset = new TreeSet<>(comparators.generalPurposeComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-import java.util.stream.Collectors;\n@@ -354,1 +353,1 @@\n-                .sorted(utils.comparators.makeGeneralPurposeComparator())\n+                .sorted(utils.comparators.generalPurposeComparator())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-doclet.internal.report.bug=\\u5982\\u679C\\u5728 Bug Database (https:\/\/bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u6709\\u5173\\u8BE5\\u9519\\u8BEF\\u7684 javadoc \\u5DE5\\u5177 Bug\\uFF0C\\n\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https:\/\/bugreport.java.com) \\u586B\\u62A5 javadoc \\u5DE5\\u5177 Bug\\u3002\\n\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u9519\\u8BEF\\u6D88\\u606F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n+doclet.internal.report.bug=\\u5982\\u679C\\u5728 Bug Database (https:\/\/bugs.java.com) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u6709\\u5173\\u8BE5\\u9519\\u8BEF\\u7684 javadoc \\u5DE5\\u5177 Bug\\uFF0C\\n\\u8BF7\\u901A\\u8FC7 Java Bug \\u62A5\\u544A\\u9875 (https:\/\/bugreport.java.com) \\u63D0\\u4EA4 javadoc \\u5DE5\\u5177 Bug\\u3002\\n\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u9519\\u8BEF\\u6D88\\u606F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/resources\/javadoc_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-err.crash=\\u51FA\\u73B0\\u4E25\\u91CD\\u7684\\u5185\\u90E8\\u9519\\u8BEF: {0}\\n\\u8BF7\\u586B\\u5199 Bug \\u62A5\\u544A, \\u5E76\\u5305\\u62EC\\u4EE5\\u4E0B\\u4FE1\\u606F:\\n{1}\n+err.crash=\\u51FA\\u73B0\\u4E25\\u91CD\\u7684\\u5185\\u90E8\\u9519\\u8BEF: {0}\\n\\u8BF7\\u63D0\\u4EA4 Bug \\u62A5\\u544A, \\u5E76\\u5305\\u62EC\\u4EE5\\u4E0B\\u4FE1\\u606F:\\n{1}\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/resources\/javap_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,0 @@\n-main.opt.P=\\  -P       -profile             Zeigt das Profil an, das ein Package enth\\u00E4lt. Diese Option\\n                                ist veraltet und wird m\\u00F6glicherweise in einem zuk\\u00FCnftigen Release entfernt.\n@@ -108,1 +107,0 @@\n-err.profiles.msg=Keine Profilinformationen\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps_de.properties","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,0 @@\n-main.opt.P=\\  -P       -profile             \\u30D1\\u30C3\\u30B1\\u30FC\\u30B8\\u3092\\u542B\\u3080\\u30D7\\u30ED\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\u3002\\u3053\\u306E\\n                               \\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306F\\u975E\\u63A8\\u5968\\u3067\\u3042\\u308A\\u3001\\u4ECA\\u5F8C\\u306E\\u30EA\\u30EA\\u30FC\\u30B9\\u3067\\u524A\\u9664\\u3055\\u308C\\u308B\\u53EF\\u80FD\\u6027\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\n@@ -108,1 +107,0 @@\n-err.profiles.msg=\\u30D7\\u30ED\\u30D5\\u30A1\\u30A4\\u30EB\\u60C5\\u5831\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps_ja.properties","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,0 @@\n-main.opt.P=\\  -P       -profile             \\u663E\\u793A\\u5305\\u542B\\u7A0B\\u5E8F\\u5305\\u7684\\u914D\\u7F6E\\u6587\\u4EF6\\u3002\\u6B64\\u9009\\u9879\\n                                \\u5DF2\\u8FC7\\u65F6\\uFF0C\\u53EF\\u80FD\\u4F1A\\u5728\\u672A\\u6765\\u53D1\\u884C\\u7248\\u4E2D\\u5220\\u9664\\u3002\n@@ -108,1 +107,0 @@\n-err.profiles.msg=\\u6CA1\\u6709\\u914D\\u7F6E\\u6587\\u4EF6\\u4FE1\\u606F\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps_zh_CN.properties","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,0 +99,3 @@\n+err.cannot.determine.target.platform=Zielplattform kann nicht aus {0} bestimmt werden\n+err.unknown.target.platform=Unbekannte Zielplattform {0}\n+err.target.endianness.mismatch=Die angegebene Option --endian {0} entspricht nicht dem Endian-Typ der Zielplattform {1}\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink_de.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -99,0 +99,3 @@\n+err.cannot.determine.target.platform={0}\\u306E\\u30BF\\u30FC\\u30B2\\u30C3\\u30C8\\u30FB\\u30D7\\u30E9\\u30C3\\u30C8\\u30D5\\u30A9\\u30FC\\u30E0\\u3092\\u7279\\u5B9A\\u3067\\u304D\\u307E\\u305B\\u3093\n+err.unknown.target.platform=\\u4E0D\\u660E\\u306A\\u30BF\\u30FC\\u30B2\\u30C3\\u30C8\\u30FB\\u30D7\\u30E9\\u30C3\\u30C8\\u30D5\\u30A9\\u30FC\\u30E0{0}\n+err.target.endianness.mismatch=\\u6307\\u5B9A\\u3055\\u308C\\u305F--endian {0}\\u306F\\u3001\\u30BF\\u30FC\\u30B2\\u30C3\\u30C8\\u30FB\\u30D7\\u30E9\\u30C3\\u30C8\\u30D5\\u30A9\\u30FC\\u30E0{1}\\u306Eendianness\\u3068\\u4E00\\u81F4\\u3057\\u307E\\u305B\\u3093\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink_ja.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-main.msg.bug=jlink \\u4E2D\\u51FA\\u73B0\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u5728 Java Bug Database (https:\/\/bugreport.java.com\/bugreport\/) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u6709\\u5173\\u8BE5\\u9519\\u8BEF\\u7684 Bug\\uFF0C\\u8BF7\\u5728\\u8BE5\\u6570\\u636E\\u5E93\\u4E2D\\u586B\\u62A5 Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u60A8\\u7684\\u7A0B\\u5E8F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n+main.msg.bug=jlink \\u4E2D\\u51FA\\u73B0\\u5F02\\u5E38\\u9519\\u8BEF\\u3002\\u5982\\u679C\\u5728 Java Bug Database (https:\/\/bugreport.java.com\/bugreport\/) \\u4E2D\\u6CA1\\u6709\\u627E\\u5230\\u6709\\u5173\\u8BE5\\u9519\\u8BEF\\u7684 Bug\\uFF0C\\u8BF7\\u5728\\u8BE5\\u6570\\u636E\\u5E93\\u4E2D\\u63D0\\u4EA4 Bug\\u3002\\u8BF7\\u5728\\u62A5\\u544A\\u4E2D\\u9644\\u4E0A\\u60A8\\u7684\\u7A0B\\u5E8F\\u548C\\u4EE5\\u4E0B\\u8BCA\\u65AD\\u4FE1\\u606F\\u3002\\u8C22\\u8C22\\u3002\n@@ -99,0 +99,3 @@\n+err.cannot.determine.target.platform=\\u65E0\\u6CD5\\u6839\\u636E {0} \\u786E\\u5B9A\\u76EE\\u6807\\u5E73\\u53F0\n+err.unknown.target.platform=\\u672A\\u77E5\\u76EE\\u6807\\u5E73\\u53F0 {0}\n+err.target.endianness.mismatch=\\u6307\\u5B9A\\u7684 --endian {0} \\u4E0E\\u76EE\\u6807\\u5E73\\u53F0 {1} \\u7684\\u5B57\\u8282\\u987A\\u5E8F\\u4E0D\\u5339\\u914D\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink_zh_CN.properties","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-system-modules.argument=retainModuleTarget\n+system-modules.argument=batch-size=<N> legt die Batchgr\\u00F6\\u00DFe der Moduldeskriptoren fest,\\n                       um ein \\u00DCberschreiten des Grenzwertes f\\u00FCr die Methodenl\\u00E4nge zu vermeiden.  Die\\n                       Standardbatchgr\\u00F6\\u00DFe betr\\u00E4gt 75.\n@@ -89,3 +89,1 @@\n-system-modules.description=Schnelles Laden der Moduldeskriptoren (immer aktiviert)\n-\n-system-modules.usage=\\  --system-modules retainModuleTarget\\n                            Schnelles Laden der Moduldeskriptoren (immer aktiviert)\n+system-modules.usage=\\  --system-modules [batch-size=<N>]\\n                            Die Batchgr\\u00F6\\u00DFe gibt die maximale Anzahl an Modulen an,\\n                            die als Workaround in einer Methode verarbeitet werden sollen, wenn der\\n                            generierte Bytecode den Grenzwert f\\u00FCr die Methodengr\\u00F6\\u00DFe \\u00FCberschreitet. Die\\n                            Standardbatchgr\\u00F6\\u00DFe betr\\u00E4gt 75.\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/plugins_de.properties","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-exclude-files.argument=\\u9664\\u5916\\u3059\\u308B\\u30D5\\u30A1\\u30A4\\u30EB\\u306E<pattern-list> \n+exclude-files.argument=\\u9664\\u5916\\u3059\\u308B\\u30D5\\u30A1\\u30A4\\u30EB\\u306E<pattern-list>\n@@ -87,1 +87,1 @@\n-system-modules.argument=retainModuleTarget\n+system-modules.argument=batch-size=<N>\\u3067\\u3001\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30C7\\u30A3\\u30B9\\u30AF\\u30EA\\u30D7\\u30BF\\u306E\\u30D0\\u30C3\\u30C1\\u30FB\\u30B5\\u30A4\\u30BA\\n                       \\u3092\\u8A2D\\u5B9A\\u3057\\u3001\\u30E1\\u30BD\\u30C3\\u30C9\\u306E\\u9577\\u3055\\u5236\\u9650\\u3092\\u8D85\\u3048\\u306A\\u3044\\u3088\\u3046\\u306B\\u3057\\u307E\\u3059\\u3002\\n                       \\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u306E\\u30D0\\u30C3\\u30C1\\u30FB\\u30B5\\u30A4\\u30BA\\u306F75\\u3067\\u3059\\u3002\n@@ -89,3 +89,1 @@\n-system-modules.description=\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30C7\\u30A3\\u30B9\\u30AF\\u30EA\\u30D7\\u30BF\\u306E\\u9AD8\\u901F\\u30ED\\u30FC\\u30C9(\\u5E38\\u306B\\u6709\\u52B9)\n-\n-system-modules.usage=\\  --system-modules retainModuleTarget\\n                            \\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u30FB\\u30C7\\u30A3\\u30B9\\u30AF\\u30EA\\u30D7\\u30BF\\u306E\\u9AD8\\u901F\\u30ED\\u30FC\\u30C9(\\u5E38\\u306B\\u6709\\u52B9)\n+system-modules.usage=\\  --system-modules [batch-size=<N>]\\n                            \\u30D0\\u30C3\\u30C1\\u30FB\\u30B5\\u30A4\\u30BA\\u3067\\u306F\\u30011\\u3064\\u306E\\u30E1\\u30BD\\u30C3\\u30C9\\u3067\\u51E6\\u7406\\u3059\\u308B\\u30E2\\u30B8\\u30E5\\u30FC\\u30EB\\u306E\\n                            \\u6700\\u5927\\u6570\\u3092\\u6307\\u5B9A\\u3057\\u3001\\u751F\\u6210\\u3055\\u308C\\u308B\\u30D0\\u30A4\\u30C8\\u30B3\\u30FC\\u30C9\\u304C\\u30E1\\u30BD\\u30C3\\u30C9\\u306E\\u30B5\\u30A4\\u30BA\\n                            \\u5236\\u9650\\u3092\\u8D85\\u3048\\u306A\\u3044\\u3088\\u3046\\u306B\\u3057\\u307E\\u3059\\u3002\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u306E\\u30D0\\u30C3\\u30C1\\u30FB\\n                            \\u30B5\\u30A4\\u30BA\\u306F75\\u3067\\u3059\\u3002\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/plugins_ja.properties","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-system-modules.argument=retainModuleTarget\n+system-modules.argument=batch-size=<N> \\u8BBE\\u7F6E\\u6A21\\u5757\\u63CF\\u8FF0\\u7B26\\u7684\\u6279\\u5927\\u5C0F\\n                       \\u4EE5\\u907F\\u514D\\u8D85\\u8FC7\\u65B9\\u6CD5\\u957F\\u5EA6\\u9650\\u5236\\u3002\\n                       \\u9ED8\\u8BA4\\u6279\\u5927\\u5C0F\\u4E3A 75\\u3002\n@@ -89,3 +89,1 @@\n-system-modules.description=\\u5FEB\\u901F\\u52A0\\u8F7D\\u6A21\\u5757\\u63CF\\u8FF0\\u7B26\\uFF08\\u59CB\\u7EC8\\u542F\\u7528\\uFF09\n-\n-system-modules.usage=\\  --system-modules retainModuleTarget\\n                            \\u5FEB\\u901F\\u52A0\\u8F7D\\u6A21\\u5757\\u63CF\\u8FF0\\u7B26\\uFF08\\u59CB\\u7EC8\\u542F\\u7528\\uFF09\n+system-modules.usage=\\  --system-modules [batch-size=<N>]\\n                            \\u6279\\u5927\\u5C0F\\u6307\\u5B9A\\u5728\\u4E00\\u4E2A\\u65B9\\u6CD5\\u4E2D\\u5904\\u7406\\u7684\\n                            \\u6700\\u5927\\u6A21\\u5757\\u6570\\uFF0C\\u4EE5\\u89E3\\u51B3\\u751F\\u6210\\u7684\\u5B57\\u8282\\u7801\\n                            \\u8D85\\u8FC7\\u65B9\\u6CD5\\u5927\\u5C0F\\u9650\\u5236\\u7684\\u95EE\\u9898\\u3002\\n                            \\u9ED8\\u8BA4\\u6279\\u5927\\u5C0F\\u4E3A 75\\u3002\n@@ -189,1 +187,1 @@\n-main.plugin.category=\\u7C7B\\u522B \n+main.plugin.category=\\u7C7B\\u522B\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/plugins_zh_CN.properties","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-\\u5E76\\u5728\\u4EFB\\u52A1\\u5B8C\\u6210\\u65F6\\u5220\\u9664\\u8BE5\\u4E34\\u65F6\\u76EE\\u5F55\\u3002\\n  --vendor <vendor string>\\n          \\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u4F9B\\u5E94\\u5546\\n  --verbose\\n          \\u542F\\u7528\\u8BE6\\u7EC6\\u7684\\u8F93\\u51FA\\n  --version\\n          \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\u5E76\\u9000\\u51FA\\u3002\\n\\n\\u7528\\u6765\\u521B\\u5EFA\\u8FD0\\u884C\\u65F6\\u6620\\u50CF\\u7684\\u9009\\u9879\\uFF1A\\n  --add-modules <\\u6A21\\u5757\\u540D\\u79F0>[,<\\u6A21\\u5757\\u540D\\u79F0>...]\\n          \\u8981\\u6DFB\\u52A0\\u7684\\u6A21\\u5757\\u7684\\u9017\\u53F7 (\",\") \\u5206\\u9694\\u5217\\u8868\\n          \\u6B64\\u6A21\\u5757\\u5217\\u8868\\u8FDE\\u540C\\u4E3B\\u6A21\\u5757\\uFF08\\u5982\\u679C\\u6307\\u5B9A\\uFF09\\n          \\u5C06\\u4F5C\\u4E3A --add-module \\u53C2\\u6570\\u4F20\\u9012\\u5230 jlink\\u3002\\n          \\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF0C\\u5219\\u4EC5\\u4F7F\\u7528\\u4E3B\\u6A21\\u5757\\uFF08\\u5982\\u679C\\u6307\\u5B9A\\u4E86 --module\\uFF09\\uFF0C\\n          \\u6216\\u8005\\u4F7F\\u7528\\u9ED8\\u8BA4\\u7684\\u6A21\\u5757\\u96C6\\uFF08\\u5982\\u679C\\u6307\\u5B9A\\u4E86  \\n          --main-jar\\uFF09\\u3002\\n          \\u53EF\\u4EE5\\u591A\\u6B21\\u4F7F\\u7528\\u6B64\\u9009\\u9879\\u3002\\n  --module-path -p <module path>...\\n          \\u8DEF\\u5F84\\u7684 {0} \\u5206\\u9694\\u5217\\u8868\\n          \\u6BCF\\u4E2A\\u8DEF\\u5F84\\u8981\\u4E48\\u662F\\u6A21\\u5757\\u7684\\u76EE\\u5F55\\uFF0C\\u8981\\u4E48\\u662F\\n          \\u6A21\\u5757 jar \\u7684\\u8DEF\\u5F84\\u3002\\n          \\uFF08\\u6BCF\\u4E2A\\u8DEF\\u5F84\\u53EF\\u4EE5\\u662F\\u7EDD\\u5BF9\\u8DEF\\u5F84\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u662F\\u76F8\\u5BF9\\u4E8E\\u5F53\\u524D\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\u3002\\uFF09\\n          \\u53EF\\u4EE5\\u591A\\u6B21\\u4F7F\\u7528\\u6B64\\u9009\\u9879\\u3002\\n  --jlink-options <jlink \\u9009\\u9879> \\n          \\u8981\\u4F20\\u9012\\u7ED9 jlink \\u7684\\u9009\\u9879\\u5217\\u8868\\uFF08\\u7528\\u7A7A\\u683C\\u5206\\u9694\\uFF09 \\n          \\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF0C\\u5219\\u9ED8\\u8BA4\\u4E3A \"--strip-native-commands \\n          --strip-debug --no-man-pages --no-header-files\"\\u3002 \\n          \\u53EF\\u4EE5\\u591A\\u6B21\\u4F7F\\u7528\\u6B64\\u9009\\u9879\\u3002\\n  --runtime-image <directory path>\\n          \\u5C06\\u590D\\u5236\\u5230\\u5E94\\u7528\\u7A0B\\u5E8F\\u6620\\u50CF\\u7684\\u9884\\u5B9A\\u4E49\\n          \\u8FD0\\u884C\\u65F6\\u6620\\u50CF\\u7684\\u8DEF\\u5F84\\n          \\uFF08\\u7EDD\\u5BF9\\u8DEF\\u5F84\\u6216\\u76F8\\u5BF9\\u4E8E\\u5F53\\u524D\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\uFF09\\n          \\u5982\\u679C\\u672A\\u6307\\u5B9A --runtime-image\\uFF0Cjpackage \\u5C06\\u8FD0\\u884C jlink \\u4EE5\\n          \\u4F7F\\u7528\\u5982\\u4E0B\\u9009\\u9879\\u521B\\u5EFA\\u8FD0\\u884C\\u65F6\\u6620\\u50CF\\uFF1A\\n          --strip-debug\\u3001--no-header-files\\u3001--no-man-pages \\u548C \\n          --strip-native-commands\\u3002\\n\\n\\u7528\\u6765\\u521B\\u5EFA\\u5E94\\u7528\\u7A0B\\u5E8F\\u6620\\u50CF\\u7684\\u9009\\u9879\\uFF1A\\n  --input -i <directory path>\\n          \\u5305\\u542B\\u8981\\u6253\\u5305\\u7684\\u6587\\u4EF6\\u7684\\u8F93\\u5165\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\n          \\uFF08\\u7EDD\\u5BF9\\u8DEF\\u5F84\\u6216\\u76F8\\u5BF9\\u4E8E\\u5F53\\u524D\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\uFF09\\n          \\u8F93\\u5165\\u76EE\\u5F55\\u4E2D\\u7684\\u6240\\u6709\\u6587\\u4EF6\\u5C06\\u6253\\u5305\\u5230\\n          \\u5E94\\u7528\\u7A0B\\u5E8F\\u6620\\u50CF\\u4E2D\\u3002\\n  --app-content <additional content>[,<additional content>...]\\n          \\u8981\\u6DFB\\u52A0\\u5230\\u5E94\\u7528\\u7A0B\\u5E8F\\u6709\\u6548\\u8D1F\\u8F7D\\u4E2D\\u7684\\u6587\\u4EF6\\u548C\/\\u6216\\n          \\u76EE\\u5F55\\u7684\\u9017\\u53F7\\u5206\\u9694\\u8DEF\\u5F84\\u5217\\u8868\\u3002\\n          \\u6B64\\u9009\\u9879\\u53EF\\u4EE5\\u591A\\u6B21\\u4F7F\\u7528\\u3002\\n\\n\\u7528\\u6765\\u521B\\u5EFA\\u5E94\\u7528\\u7A0B\\u5E8F\\u542F\\u52A8\\u7A0B\\u5E8F\\u7684\\u9009\\u9879\\uFF1A\\n  --add-launcher <launcher name>=<file path>\\n          \\u542F\\u52A8\\u7A0B\\u5E8F\\u7684\\u540D\\u79F0\\u548C\\u5305\\u542B\\u5173\\u952E\\u5B57-\\u503C\\u5BF9\\u5217\\u8868\\u7684\\n          \\u5C5E\\u6027\\u6587\\u4EF6\\u7684\\u8DEF\\u5F84\\n          \\uFF08\\u7EDD\\u5BF9\\u8DEF\\u5F84\\u6216\\u76F8\\u5BF9\\u4E8E\\u5F53\\u524D\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\uFF09\\n          \\\n+\\u5E76\\u5728\\u4EFB\\u52A1\\u5B8C\\u6210\\u65F6\\u5220\\u9664\\u8BE5\\u4E34\\u65F6\\u76EE\\u5F55\\u3002\\n  --vendor <vendor string>\\n          \\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u4F9B\\u5E94\\u5546\\n  --verbose\\n          \\u542F\\u7528\\u8BE6\\u7EC6\\u7684\\u8F93\\u51FA\\n  --version\\n          \\u5C06\\u4EA7\\u54C1\\u7248\\u672C\\u8F93\\u51FA\\u5230\\u8F93\\u51FA\\u6D41\\u5E76\\u9000\\u51FA\\u3002\\n\\n\\u7528\\u6765\\u521B\\u5EFA\\u8FD0\\u884C\\u65F6\\u6620\\u50CF\\u7684\\u9009\\u9879\\uFF1A\\n  --add-modules <\\u6A21\\u5757\\u540D\\u79F0>[,<\\u6A21\\u5757\\u540D\\u79F0>...]\\n          \\u8981\\u6DFB\\u52A0\\u7684\\u6A21\\u5757\\u7684\\u9017\\u53F7 (\",\") \\u5206\\u9694\\u5217\\u8868\\n          \\u6B64\\u6A21\\u5757\\u5217\\u8868\\u8FDE\\u540C\\u4E3B\\u6A21\\u5757\\uFF08\\u5982\\u679C\\u6307\\u5B9A\\uFF09\\n          \\u5C06\\u4F5C\\u4E3A --add-module \\u53C2\\u6570\\u4F20\\u9012\\u5230 jlink\\u3002\\n          \\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF0C\\u5219\\u4EC5\\u4F7F\\u7528\\u4E3B\\u6A21\\u5757\\uFF08\\u5982\\u679C\\u6307\\u5B9A\\u4E86 --module\\uFF09\\uFF0C\\n          \\u6216\\u8005\\u4F7F\\u7528\\u9ED8\\u8BA4\\u7684\\u6A21\\u5757\\u96C6\\uFF08\\u5982\\u679C\\u6307\\u5B9A\\u4E86  \\n          --main-jar\\uFF09\\u3002\\n          \\u53EF\\u4EE5\\u591A\\u6B21\\u4F7F\\u7528\\u6B64\\u9009\\u9879\\u3002\\n  --module-path -p <module path>...\\n          \\u8DEF\\u5F84\\u7684 {0} \\u5206\\u9694\\u5217\\u8868\\n          \\u6BCF\\u4E2A\\u8DEF\\u5F84\\u8981\\u4E48\\u662F\\u6A21\\u5757\\u7684\\u76EE\\u5F55\\uFF0C\\u8981\\u4E48\\u662F\\n          \\u6A21\\u5757\\u5316 jar \\u7684\\u8DEF\\u5F84\\u3002\\n          \\uFF08\\u6BCF\\u4E2A\\u8DEF\\u5F84\\u53EF\\u4EE5\\u662F\\u7EDD\\u5BF9\\u8DEF\\u5F84\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u662F\\u76F8\\u5BF9\\u4E8E\\u5F53\\u524D\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\u3002\\uFF09\\n          \\u53EF\\u4EE5\\u591A\\u6B21\\u4F7F\\u7528\\u6B64\\u9009\\u9879\\u3002\\n  --jlink-options <jlink \\u9009\\u9879> \\n          \\u8981\\u4F20\\u9012\\u7ED9 jlink \\u7684\\u9009\\u9879\\u5217\\u8868\\uFF08\\u7528\\u7A7A\\u683C\\u5206\\u9694\\uFF09 \\n          \\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF0C\\u5219\\u9ED8\\u8BA4\\u4E3A \"--strip-native-commands \\n          --strip-debug --no-man-pages --no-header-files\"\\u3002 \\n          \\u53EF\\u4EE5\\u591A\\u6B21\\u4F7F\\u7528\\u6B64\\u9009\\u9879\\u3002\\n  --runtime-image <directory path>\\n          \\u5C06\\u590D\\u5236\\u5230\\u5E94\\u7528\\u7A0B\\u5E8F\\u6620\\u50CF\\u7684\\u9884\\u5B9A\\u4E49\\n          \\u8FD0\\u884C\\u65F6\\u6620\\u50CF\\u7684\\u8DEF\\u5F84\\n          \\uFF08\\u7EDD\\u5BF9\\u8DEF\\u5F84\\u6216\\u76F8\\u5BF9\\u4E8E\\u5F53\\u524D\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\uFF09\\n          \\u5982\\u679C\\u672A\\u6307\\u5B9A --runtime-image\\uFF0Cjpackage \\u5C06\\u8FD0\\u884C jlink \\u4EE5\\n          \\u4F7F\\u7528\\u5982\\u4E0B\\u9009\\u9879\\u521B\\u5EFA\\u8FD0\\u884C\\u65F6\\u6620\\u50CF\\uFF1A\\n          --strip-debug\\u3001--no-header-files\\u3001--no-man-pages \\u548C \\n          --strip-native-commands\\u3002\\n\\n\\u7528\\u6765\\u521B\\u5EFA\\u5E94\\u7528\\u7A0B\\u5E8F\\u6620\\u50CF\\u7684\\u9009\\u9879\\uFF1A\\n  --input -i <directory path>\\n          \\u5305\\u542B\\u8981\\u6253\\u5305\\u7684\\u6587\\u4EF6\\u7684\\u8F93\\u5165\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\n          \\uFF08\\u7EDD\\u5BF9\\u8DEF\\u5F84\\u6216\\u76F8\\u5BF9\\u4E8E\\u5F53\\u524D\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\uFF09\\n          \\u8F93\\u5165\\u76EE\\u5F55\\u4E2D\\u7684\\u6240\\u6709\\u6587\\u4EF6\\u5C06\\u6253\\u5305\\u5230\\n          \\u5E94\\u7528\\u7A0B\\u5E8F\\u6620\\u50CF\\u4E2D\\u3002\\n  --app-content <additional content>[,<additional content>...]\\n          \\u8981\\u6DFB\\u52A0\\u5230\\u5E94\\u7528\\u7A0B\\u5E8F\\u6709\\u6548\\u8D1F\\u8F7D\\u4E2D\\u7684\\u6587\\u4EF6\\u548C\/\\u6216\\n          \\u76EE\\u5F55\\u7684\\u9017\\u53F7\\u5206\\u9694\\u8DEF\\u5F84\\u5217\\u8868\\u3002\\n          \\u6B64\\u9009\\u9879\\u53EF\\u4EE5\\u591A\\u6B21\\u4F7F\\u7528\\u3002\\n\\n\\u7528\\u6765\\u521B\\u5EFA\\u5E94\\u7528\\u7A0B\\u5E8F\\u542F\\u52A8\\u7A0B\\u5E8F\\u7684\\u9009\\u9879\\uFF1A\\n  --add-launcher <launcher name>=<file path>\\n          \\u542F\\u52A8\\u7A0B\\u5E8F\\u7684\\u540D\\u79F0\\u548C\\u5305\\u542B\\u5173\\u952E\\u5B57-\\u503C\\u5BF9\\u5217\\u8868\\u7684\\n          \\u5C5E\\u6027\\u6587\\u4EF6\\u7684\\u8DEF\\u5F84\\n          \\uFF08\\u7EDD\\u5BF9\\u8DEF\\u5F84\\u6216\\u76F8\\u5BF9\\u4E8E\\u5F53\\u524D\\u76EE\\u5F55\\u7684\\u8DEF\\u5F84\\uFF09\\n          \\\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-    const LPCTSTR upgradeCodeStr = upgradeCode.toMsiString().c_str();\n+    const tstring upgradeCodeStr = upgradeCode.toMsiString();\n@@ -78,1 +78,1 @@\n-        const UINT status = MsiEnumRelatedProducts(upgradeCodeStr, 0,\n+        const UINT status = MsiEnumRelatedProducts(upgradeCodeStr.c_str(), 0,\n","filename":"src\/jdk.jpackage\/windows\/native\/libwixhelper\/libwixhelper.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-jshell.console.choice = Choice: \\\n+jshell.console.choice = Choice:\\u0020\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/resources\/l10n.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-jshell.msg.unknown.source = Unbekannte Quelle \n+jshell.msg.unknown.source = Unbekannte Quelle\n@@ -170,1 +170,1 @@\n-jshell.console.choice = Auswahl: \n+jshell.console.choice = Auswahl:\\u0020\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/resources\/l10n_de.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-jshell.console.choice = \\u9078\\u629E: \n+jshell.console.choice = \\u9078\\u629E:\\u0020\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/resources\/l10n_ja.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-jshell.console.choice = \\u9009\\u9879: \n+jshell.console.choice = \\u9009\\u9879:\\u0020\n@@ -292,1 +292,1 @@\n-help.set.format = \\u8BBE\\u7F6E\\u7528\\u4E8E\\u62A5\\u544A\\u7247\\u6BB5\\u4E8B\\u4EF6\\u7684\\u683C\\u5F0F\\uFF1A\\n\\n\\t\/set format <\\u6A21\\u5F0F> <\\u5B57\\u6BB5> \"<\\u683C\\u5F0F>\" <\\u9009\\u62E9\\u5668>...\\n\\n\\u663E\\u793A\\u683C\\u5F0F\\u8BBE\\u7F6E:\\n\\n\\t\/set format [<\\u6A21\\u5F0F> [<\\u5B57\\u6BB5>]]\\n\\n\\u5176\\u4E2D <\\u6A21\\u5F0F> \\u662F\\u4EE5\\u524D\\u5B9A\\u4E49\\u7684\\u53CD\\u9988\\u6A21\\u5F0F\\u7684\\u540D\\u79F0 -- \\u8BF7\\u53C2\\u9605 '\/help \/set mode'\\u3002\\n\\u5176\\u4E2D <\\u5B57\\u6BB5> \\u662F\\u8981\\u5B9A\\u4E49\\u7684\\u4E0A\\u4E0B\\u6587\\u7279\\u5B9A\\u683C\\u5F0F\\u7684\\u540D\\u79F0\\u3002\\n\\u5176\\u4E2D <\\u683C\\u5F0F> \\u662F\\u4E00\\u4E2A\\u5E26\\u5F15\\u53F7\\u7684\\u5B57\\u7B26\\u4E32, \\u8BE5\\u5B57\\u7B26\\u4E32\\u5C06\\u4E3A\\n\\u5B57\\u6BB5\\u7684\\u503C (\\u5982\\u679C\\u9009\\u62E9\\u5668\\u5339\\u914D, \\u6216\\u8005\\u6CA1\\u6709\\u4EFB\\u4F55\\u9009\\u62E9\\u5668)\\u3002\\n\\u5728\\u4F7F\\u7528\\u683C\\u5F0F\\u65F6, \\u7528\\u5927\\u62EC\\u53F7\\u62EC\\u8D77\\u7684\\u5B57\\u6BB5\\u540D\\u5C06\\u4F1A\\u5728\\u76F8\\u5E94\\u65F6\\u95F4\\n\\u4F7F\\u7528\\u5B57\\u6BB5\\u503C\\u66FF\\u6362\\u3002\\u8FD9\\u4E9B\\u5B57\\u6BB5\\u53EF\\u80FD\\u5DF2\\u4F7F\\u7528\\u6B64\\u547D\\u4EE4\\u5B9A\\u4E49, \\n\\u4E5F\\u53EF\\u80FD\\u662F\\u7279\\u5B9A\\u4E8E\\u4E0A\\u4E0B\\u6587\\u7684\\u4EE5\\u4E0B\\u9884\\u5B9A\\u4E49\\u5B57\\u6BB5\\u4E4B\\u4E00:\\n\\t{name}       == \\u540D\\u79F0, \\u4F8B\\u5982: \\u53D8\\u91CF\\u7684\\u540D\\u79F0, ...\\n\\t{type}       == \\u7C7B\\u578B\\u540D\\u79F0\\u3002\\u53D8\\u91CF\\u6216\\u8868\\u8FBE\\u5F0F\\u7684\\u7C7B\\u578B,\\n\\t\\t\\t\\u65B9\\u6CD5\\u7684\\u53C2\\u6570\\u7C7B\\u578B\\n\\t{value}      == \\u8868\\u8FBE\\u5F0F\\u6216\\u53D8\\u91CF\\u521D\\u59CB\\u5316\\u7684\\u7ED3\\u679C\\u503C\\n\\t{unresolved} == \\u672A\\u89E3\\u6790\\u5F15\\u7528\\u7684\\u5217\\u8868\\n\\t{errors}     == \\u53EF\\u6062\\u590D\\u9519\\u8BEF\\u7684\\u5217\\u8868 (\\u53EA\\u5728\\u5904\\u7406\\n\\t\\t\\t\"display\" \\u5B57\\u6BB5\\u671F\\u95F4)\\n\\t{err}        == \\u65E0\\u683C\\u5F0F\\u7684\\u9519\\u8BEF\\u884C (\\u53EA\\u5728\\u5904\\u7406\\n\\t\\t\\t\"errorline\" \\u5B57\\u6BB5\\u671F\\u95F4)\\n\\u8BE5\\u5DE5\\u5177\\u8BBF\\u95EE\\u4EE5\\u4E0B\\u5B57\\u6BB5\\u6765\\u786E\\u5B9A\\u6240\\u663E\\u793A\\u7684\\u53CD\\u9988:\\n\\t{display}    == \\u4E3A\\u7247\\u6BB5\\u4E8B\\u4EF6\\u663E\\u793A\\u7684\\u6D88\\u606F\\n\\t{errorline}  == \"errors\" \\u5B57\\u6BB5\\u4E2D\\u7684\\u4E00\\u4E2A\\u9519\\u8BEF\\u884C\\u7684\\u683C\\u5F0F\\n\\t{pre}        == \\u53CD\\u9988\\u524D\\u7F00 (\\u4F5C\\u4E3A\\u547D\\u4EE4\\u53CD\\u9988\\u7684\\u5F00\\u5934)\\n\\t{post}       == \\u53CD\\u9988\\u540E\\u7F00 (\\u4F5C\\u4E3A\\u547D\\u4EE4\\u53CD\\u9988\\u7684\\u7ED3\\u5C3E)\\n\\t{errorpre}   == \\u9519\\u8BEF\\u524D\\u7F00 (\\u4F5C\\u4E3A\\u9519\\u8BEF\\u53CD\\u9988\\u7684\\u5F00\\u5934)\\n\\t{errorpost}  == \\u9519\\u8BEF\\u540E\\u7F00 (\\u4F5C\\u4E3A\\u9519\\u8BEF\\u53CD\\u9988\\u7684\\u7ED3\\u5C3E)\\n\\u8FD9\\u4E9B\\u5B57\\u6BB5\\u5177\\u6709\\u9ED8\\u8BA4\\u8BBE\\u7F6E (\\u53EF\\u8986\\u76D6)\\u3002\\n\\u5176\\u4E2D <selector> \\u662F\\u5E94\\u7528\\u683C\\u5F0F\\u7684\\u4E0A\\u4E0B\\u6587\\u3002\\n\\u9009\\u62E9\\u5668\\u7ED3\\u6784\\u662F\\u4E00\\u4E2A\\u7531\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u5217\\u8868\\u6784\\u6210\\u7684\\u5217\\u8868, \\u4F7F\\u7528\\u8FDE\\u5B57\\u7B26\\u5206\\u9694\\u3002\\n\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u5217\\u8868\\u662F\\u5355\\u4E2A\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u7684\\u503C\\u7684\\u5217\\u8868, \\u4F7F\\u7528\\u9017\\u53F7\\u5206\\u9694\\u3002\\n\\u5982\\u679C\\u6BCF\\u4E2A\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u5217\\u8868\\u5339\\u914D, \\u5219\\u9009\\u62E9\\u5668\\u5339\\u914D; \\u5982\\u679C\\u5176\\u4E2D\\u67D0\\u4E2A\\u503C\\n\\u5339\\u914D, \\u5219\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u5217\\u8868\\u5339\\u914D\\u3002\\n\\ncase \\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u63CF\\u8FF0\\u4E86\\u7247\\u6BB5\\u7684\\u7C7B\\u578B\\u3002\\u503C\\u5305\\u62EC:\\n\\timport     -- \\u5BFC\\u5165\\u58F0\\u660E\\n\\tclass      -- \\u7C7B\\u58F0\\u660E\\n\\tinterface  -- \\u63A5\\u53E3\\u58F0\\u660E\\n\\tenum       -- \\u679A\\u4E3E\\u58F0\\u660E\\n\\tannotation -- \\u6CE8\\u91CA\\u63A5\\u53E3\\u58F0\\u660E\\n\\trecord     -- \\u8BB0\\u5F55\\u58F0\\u660E\\n\\tmethod     -- \\u65B9\\u6CD5\\u58F0\\u660E -- \\u6CE8: {type}==parameter-types\\n\\tvardecl    -- \\u4E0D\\u5E26\\u521D\\u59CB\\u5316\\u7684\\u53D8\\u91CF\\u58F0\\u660E\\n\\tvardecl    -- \\u5E26\\u521D\\u59CB\\u5316\\u7684\\u53D8\\u91CF\\u58F0\\u660E\\n\\texpression -- \\u8868\\u8FBE\\u5F0F -- \\\n+help.set.format = \\u8BBE\\u7F6E\\u7528\\u4E8E\\u62A5\\u544A\\u7247\\u6BB5\\u4E8B\\u4EF6\\u7684\\u683C\\u5F0F\\uFF1A\\n\\n\\t\/set format <\\u6A21\\u5F0F> <\\u5B57\\u6BB5> \"<\\u683C\\u5F0F>\" <\\u9009\\u62E9\\u5668>...\\n\\n\\u663E\\u793A\\u683C\\u5F0F\\u8BBE\\u7F6E:\\n\\n\\t\/set format [<\\u6A21\\u5F0F> [<\\u5B57\\u6BB5>]]\\n\\n\\u5176\\u4E2D <\\u6A21\\u5F0F> \\u662F\\u4EE5\\u524D\\u5B9A\\u4E49\\u7684\\u53CD\\u9988\\u6A21\\u5F0F\\u7684\\u540D\\u79F0 -- \\u8BF7\\u53C2\\u9605 '\/help \/set mode'\\u3002\\n\\u5176\\u4E2D <\\u5B57\\u6BB5> \\u662F\\u8981\\u5B9A\\u4E49\\u7684\\u4E0A\\u4E0B\\u6587\\u7279\\u5B9A\\u683C\\u5F0F\\u7684\\u540D\\u79F0\\u3002\\n\\u5176\\u4E2D <\\u683C\\u5F0F> \\u662F\\u4E00\\u4E2A\\u5E26\\u5F15\\u53F7\\u7684\\u5B57\\u7B26\\u4E32, \\u8BE5\\u5B57\\u7B26\\u4E32\\u5C06\\u4E3A\\n\\u5B57\\u6BB5\\u7684\\u503C (\\u5982\\u679C\\u9009\\u62E9\\u5668\\u5339\\u914D, \\u6216\\u8005\\u6CA1\\u6709\\u4EFB\\u4F55\\u9009\\u62E9\\u5668)\\u3002\\n\\u5728\\u4F7F\\u7528\\u683C\\u5F0F\\u65F6, \\u7528\\u5927\\u62EC\\u53F7\\u62EC\\u8D77\\u7684\\u5B57\\u6BB5\\u540D\\u5C06\\u4F1A\\u5728\\u76F8\\u5E94\\u65F6\\u95F4\\n\\u4F7F\\u7528\\u5B57\\u6BB5\\u503C\\u66FF\\u6362\\u3002\\u8FD9\\u4E9B\\u5B57\\u6BB5\\u53EF\\u80FD\\u5DF2\\u4F7F\\u7528\\u6B64\\u547D\\u4EE4\\u5B9A\\u4E49, \\n\\u4E5F\\u53EF\\u80FD\\u662F\\u7279\\u5B9A\\u4E8E\\u4E0A\\u4E0B\\u6587\\u7684\\u4EE5\\u4E0B\\u9884\\u5B9A\\u4E49\\u5B57\\u6BB5\\u4E4B\\u4E00:\\n\\t{name}       == \\u540D\\u79F0, \\u4F8B\\u5982: \\u53D8\\u91CF\\u7684\\u540D\\u79F0, ...\\n\\t{type}       == \\u7C7B\\u578B\\u540D\\u79F0\\u3002\\u53D8\\u91CF\\u6216\\u8868\\u8FBE\\u5F0F\\u7684\\u7C7B\\u578B,\\n\\t\\t\\t\\u65B9\\u6CD5\\u7684\\u53C2\\u6570\\u7C7B\\u578B\\n\\t{value}      == \\u8868\\u8FBE\\u5F0F\\u6216\\u53D8\\u91CF\\u521D\\u59CB\\u5316\\u7684\\u7ED3\\u679C\\u503C\\n\\t{unresolved} == \\u672A\\u89E3\\u6790\\u5F15\\u7528\\u7684\\u5217\\u8868\\n\\t{errors}     == \\u53EF\\u6062\\u590D\\u9519\\u8BEF\\u7684\\u5217\\u8868 (\\u53EA\\u5728\\u5904\\u7406\\n\\t\\t\\t\"display\" \\u5B57\\u6BB5\\u671F\\u95F4)\\n\\t{err}        == \\u65E0\\u683C\\u5F0F\\u7684\\u9519\\u8BEF\\u884C (\\u53EA\\u5728\\u5904\\u7406\\n\\t\\t\\t\"errorline\" \\u5B57\\u6BB5\\u671F\\u95F4)\\n\\u8BE5\\u5DE5\\u5177\\u8BBF\\u95EE\\u4EE5\\u4E0B\\u5B57\\u6BB5\\u6765\\u786E\\u5B9A\\u6240\\u663E\\u793A\\u7684\\u53CD\\u9988:\\n\\t{display}    == \\u4E3A\\u7247\\u6BB5\\u4E8B\\u4EF6\\u663E\\u793A\\u7684\\u6D88\\u606F\\n\\t{errorline}  == \"errors\" \\u5B57\\u6BB5\\u4E2D\\u7684\\u4E00\\u4E2A\\u9519\\u8BEF\\u884C\\u7684\\u683C\\u5F0F\\n\\t{pre}        == \\u53CD\\u9988\\u524D\\u7F00 (\\u4F5C\\u4E3A\\u547D\\u4EE4\\u53CD\\u9988\\u7684\\u5F00\\u5934)\\n\\t{post}       == \\u53CD\\u9988\\u540E\\u7F00 (\\u4F5C\\u4E3A\\u547D\\u4EE4\\u53CD\\u9988\\u7684\\u7ED3\\u5C3E)\\n\\t{errorpre}   == \\u9519\\u8BEF\\u524D\\u7F00 (\\u4F5C\\u4E3A\\u9519\\u8BEF\\u53CD\\u9988\\u7684\\u5F00\\u5934)\\n\\t{errorpost}  == \\u9519\\u8BEF\\u540E\\u7F00 (\\u4F5C\\u4E3A\\u9519\\u8BEF\\u53CD\\u9988\\u7684\\u7ED3\\u5C3E)\\n\\u8FD9\\u4E9B\\u5B57\\u6BB5\\u5177\\u6709\\u9ED8\\u8BA4\\u8BBE\\u7F6E (\\u53EF\\u8986\\u76D6)\\u3002\\n\\u5176\\u4E2D <selector> \\u662F\\u5E94\\u7528\\u683C\\u5F0F\\u7684\\u4E0A\\u4E0B\\u6587\\u3002\\n\\u9009\\u62E9\\u5668\\u7ED3\\u6784\\u662F\\u4E00\\u4E2A\\u7531\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u5217\\u8868\\u6784\\u6210\\u7684\\u5217\\u8868, \\u4F7F\\u7528\\u8FDE\\u5B57\\u7B26\\u5206\\u9694\\u3002\\n\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u5217\\u8868\\u662F\\u5355\\u4E2A\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u7684\\u503C\\u7684\\u5217\\u8868, \\u4F7F\\u7528\\u9017\\u53F7\\u5206\\u9694\\u3002\\n\\u5982\\u679C\\u6BCF\\u4E2A\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u5217\\u8868\\u5339\\u914D, \\u5219\\u9009\\u62E9\\u5668\\u5339\\u914D; \\u5982\\u679C\\u5176\\u4E2D\\u67D0\\u4E2A\\u503C\\n\\u5339\\u914D, \\u5219\\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u5217\\u8868\\u5339\\u914D\\u3002\\n\\ncase \\u9009\\u62E9\\u5668\\u7C7B\\u578B\\u63CF\\u8FF0\\u4E86\\u7247\\u6BB5\\u7684\\u7C7B\\u578B\\u3002\\u503C\\u5305\\u62EC:\\n\\timport     -- \\u5BFC\\u5165\\u58F0\\u660E\\n\\tclass      -- \\u7C7B\\u58F0\\u660E\\n\\tinterface  -- \\u63A5\\u53E3\\u58F0\\u660E\\n\\tenum       -- \\u679A\\u4E3E\\u58F0\\u660E\\n\\tannotation -- \\u6279\\u6CE8\\u63A5\\u53E3\\u58F0\\u660E\\n\\trecord     -- \\u8BB0\\u5F55\\u58F0\\u660E\\n\\tmethod     -- \\u65B9\\u6CD5\\u58F0\\u660E -- \\u6CE8: {type}==parameter-types\\n\\tvardecl    -- \\u4E0D\\u5E26\\u521D\\u59CB\\u5316\\u7684\\u53D8\\u91CF\\u58F0\\u660E\\n\\tvardecl    -- \\u5E26\\u521D\\u59CB\\u5316\\u7684\\u53D8\\u91CF\\u58F0\\u660E\\n\\texpression -- \\u8868\\u8FBE\\u5F0F -- \\\n@@ -323,1 +323,1 @@\n-'\\u6CE8\\u91CA\\u63A5\\u53E3'   annotation    \\n\/set format verbose typeKind '\\u8BB0\\u5F55'                 record    \\n\\n\/set format verbose result '{name} ==> {value}{post}'                                        added,modified,replaced-ok-primary    \\n\\n\/set format verbose display '{result}{pre}\\u5DF2\\u521B\\u5EFA\\u6682\\u5B58\\u53D8\\u91CF {name} : {type}{post}'    expression-added,modified,replaced-primary    \\n\/set format verbose display '{result}{pre}{name} \\u7684\\u503C: {type}{post}'                    varvalue-added,modified,replaced-primary    \\n\/set format verbose display '{result}{pre}\\u5DF2\\u5206\\u914D\\u7ED9 {name} : {type}{post}'                 assignment-primary    \\n\/set format verbose display '{result}{pre}{action} \\u53D8\\u91CF {name} : {type}{resolve}{post}'  varinit,vardecl    \\n\/set format verbose display '{pre}{action} \\u53D8\\u91CF {name}{resolve}{post}'                   vardecl,varinit-notdefined    \\n\/set format verbose display '{pre}{action} \\u53D8\\u91CF {name}{post}'                            dropped-vardecl,varinit,expression    \\n\/set format verbose display '{pre}{action} \\u53D8\\u91CF {name}, \\u91CD\\u7F6E\\u4E3A\\u7A7A\\u503C{post}'             replaced-vardecl,varinit-ok-update    \\n\\n\/set format verbose display '{pre}{action} {typeKind} {name}{resolve}{post}'                 class,interface,enum,annotation,record    \\n\/set format verbose display '{pre}{action} \\u65B9\\u6CD5 {name}({type}){resolve}{post}'             method    \\n\\n\/set format verbose display '{pre}\\u5DF2\\u5C1D\\u8BD5\\u4F7F\\u7528 {typeKind} {name}{resolve}{post}'         used-class,interface,enum,annotation,record    \\n\/set format verbose display '{pre}\\u5DF2\\u5C1D\\u8BD5\\u8C03\\u7528\\u65B9\\u6CD5 {name}({type}){resolve}{post}'    used-method    \\n\\n\/set truncation verbose 80\\n\/set truncation verbose 1000                                                                  varvalue,expression\\n\\n\/set mode normal -command verbose    \\n\/set format normal display ''                                                               added,modified,replaced,overwrote,dropped-update    \\n\/set format normal display '{pre}{action} \\u53D8\\u91CF {name}, \\u91CD\\u7F6E\\u4E3A\\u7A7A\\u503C{post}'             replaced-vardecl,varinit-ok-update    \\n\/set format normal display '{pre}{action} \\u53D8\\u91CF {name}{resolve}{post}'                   replaced-vardecl,varinit-notdefined    \\n\/set format normal display '{result}'                                                       added,modified,replaced-expression,varvalue,assignment,varinit,vardecl-ok-primary    \\n\/set mode concise -quiet normal    \\n\\n\/set prompt concise 'jshell> '   '   ...> '    \\n\\n\/set format concise display ''                                                              class,interface,enum,annotation,record,method,assignment,varinit,vardecl-ok    \\n\\n\/set feedback normal    \\n\\n\/set mode silent -quiet    \\n\/set prompt silent '-> ' '>> '    \\n\/set truncation silent 80\\n\/set truncation silent 1000                                                                  varvalue,expression\\n\/set format silent pre '|  '    \\n\/set format silent post '%n'    \\n\/set format silent errorpre '|  '    \\n\/set format silent errorpost '%n'    \\n\/set format silent display ''    \\n\n+'\\u6279\\u6CE8\\u63A5\\u53E3'   annotation    \\n\/set format verbose typeKind '\\u8BB0\\u5F55'                 record    \\n\\n\/set format verbose result '{name} ==> {value}{post}'                                        added,modified,replaced-ok-primary    \\n\\n\/set format verbose display '{result}{pre}\\u5DF2\\u521B\\u5EFA\\u6682\\u5B58\\u53D8\\u91CF {name} : {type}{post}'    expression-added,modified,replaced-primary    \\n\/set format verbose display '{result}{pre}{name} \\u7684\\u503C: {type}{post}'                    varvalue-added,modified,replaced-primary    \\n\/set format verbose display '{result}{pre}\\u5DF2\\u5206\\u914D\\u7ED9 {name} : {type}{post}'                 assignment-primary    \\n\/set format verbose display '{result}{pre}{action} \\u53D8\\u91CF {name} : {type}{resolve}{post}'  varinit,vardecl    \\n\/set format verbose display '{pre}{action} \\u53D8\\u91CF {name}{resolve}{post}'                   vardecl,varinit-notdefined    \\n\/set format verbose display '{pre}{action} \\u53D8\\u91CF {name}{post}'                            dropped-vardecl,varinit,expression    \\n\/set format verbose display '{pre}{action} \\u53D8\\u91CF {name}, \\u91CD\\u7F6E\\u4E3A\\u7A7A\\u503C{post}'             replaced-vardecl,varinit-ok-update    \\n\\n\/set format verbose display '{pre}{action} {typeKind} {name}{resolve}{post}'                 class,interface,enum,annotation,record    \\n\/set format verbose display '{pre}{action} \\u65B9\\u6CD5 {name}({type}){resolve}{post}'             method    \\n\\n\/set format verbose display '{pre}\\u5DF2\\u5C1D\\u8BD5\\u4F7F\\u7528 {typeKind} {name}{resolve}{post}'         used-class,interface,enum,annotation,record    \\n\/set format verbose display '{pre}\\u5DF2\\u5C1D\\u8BD5\\u8C03\\u7528\\u65B9\\u6CD5 {name}({type}){resolve}{post}'    used-method    \\n\\n\/set truncation verbose 80\\n\/set truncation verbose 1000                                                                  varvalue,expression\\n\\n\/set mode normal -command verbose    \\n\/set format normal display ''                                                               added,modified,replaced,overwrote,dropped-update    \\n\/set format normal display '{pre}{action} \\u53D8\\u91CF {name}, \\u91CD\\u7F6E\\u4E3A\\u7A7A\\u503C{post}'             replaced-vardecl,varinit-ok-update    \\n\/set format normal display '{pre}{action} \\u53D8\\u91CF {name}{resolve}{post}'                   replaced-vardecl,varinit-notdefined    \\n\/set format normal display '{result}'                                                       added,modified,replaced-expression,varvalue,assignment,varinit,vardecl-ok-primary    \\n\/set mode concise -quiet normal    \\n\\n\/set prompt concise 'jshell> '   '   ...> '    \\n\\n\/set format concise display ''                                                              class,interface,enum,annotation,record,method,assignment,varinit,vardecl-ok    \\n\\n\/set feedback normal    \\n\\n\/set mode silent -quiet    \\n\/set prompt silent '-> ' '>> '    \\n\/set truncation silent 80\\n\/set truncation silent 1000                                                                  varvalue,expression\\n\/set format silent pre '|  '    \\n\/set format silent post '%n'    \\n\/set format silent errorpre '|  '    \\n\/set format silent errorpost '%n'    \\n\/set format silent display ''    \\n\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/resources\/l10n_zh_CN.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,2 +64,8 @@\n-  ASSERT_TRUE(strstr(output, \"volatile:\") != NULL) << \"must have volatile flag\";\n-  ASSERT_TRUE(strstr(output, \"field index:\") != NULL) << \"must have field index\";\n+  ASSERT_TRUE(strstr(output, \"Offset:\") != NULL) << \"must have field offset\";\n+  ASSERT_TRUE(strstr(output, \"Field Index:\") != NULL) << \"must have field index\";\n+  ASSERT_TRUE(strstr(output, \"CP Index:\") != NULL) << \"must have constant pool index\";\n+  ASSERT_TRUE(strstr(output, \"TOS:\") != NULL) << \"must have type\";\n+  ASSERT_TRUE(strstr(output, \"Is Final:\") != NULL) << \"must have final flag\";\n+  ASSERT_TRUE(strstr(output, \"Is Volatile:\") != NULL) << \"must have volatile flag\";\n+  ASSERT_TRUE(strstr(output, \"Put Bytecode:\") != NULL) << \"must have \\\"put code\\\"\";\n+  ASSERT_TRUE(strstr(output, \"Get Bytecode:\") != NULL) << \"must have \\\"get code\\\"\";\n","filename":"test\/hotspot\/gtest\/oops\/test_cpCache_output.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -76,1 +76,8 @@\n-\n+compiler\/valhalla\/inlinetypes\/TestBasicFunctionality.java 8317140 linux-x64\n+compiler\/valhalla\/inlinetypes\/TestCallingConvention.java 8317142 generic-all\n+compiler\/valhalla\/inlinetypes\/TestCallingConventionC1.java 8317143 linux-x64\n+compiler\/valhalla\/inlinetypes\/TestLWorld.java 8317145 linux-x64,windows-x64\n+compiler\/valhalla\/inlinetypes\/TestLWorldProfiling.java 8317146 linux-x64\n+compiler\/valhalla\/inlinetypes\/TestNullableArrays.java 8317147 linux-x64\n+compiler\/valhalla\/inlinetypes\/TestUnloadedInlineTypeField.java 8317148 linux-x64\n+compiler\/valhalla\/inlinetypes\/TestValueClasses.java 8317149 generic-all\n@@ -105,2 +112,0 @@\n-runtime\/os\/TestTrimNative.java#trimNative 8312525 linux-all\n-runtime\/os\/TestTrimNative.java#trimNativeLowInterval 8312525 linux-all\n@@ -111,0 +116,1 @@\n+runtime\/ErrorHandling\/MachCodeFramesInErrorFile.java 8313315 linux-ppc64le\n@@ -213,0 +219,2 @@\n+\n+vmTestbase\/vm\/mlvm\/hiddenloader\/stress\/byteMutation\/Test.java 8317172 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8313402\n+ * @summary C1: Incorrect LoadIndexed value numbering\n+ * @requires vm.compiler1.enabled\n+ * @library \/compiler\/patches \/test\/lib\n+ * @build java.base\/java.lang.Helper\n+ * @run main\/othervm -Xbatch -XX:CompileThreshold=100\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   compiler.c1.TestLoadIndexedMismatch\n+ *\/\n+\n+package compiler.c1;\n+\n+public class TestLoadIndexedMismatch {\n+    static final byte[] ARR = {42, 42};\n+    static final char EXPECTED_CHAR = (char)(42*256 + 42);\n+\n+    public static char work() {\n+        \/\/ LoadIndexed (B)\n+        byte b = ARR[0];\n+        \/\/ StringUTF16.charAt intrinsic, LoadIndexed (C)\n+        char c = Helper.charAt(ARR, 0);\n+        return c;\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 10_000; i++) {\n+            char c = work();\n+            if (c != EXPECTED_CHAR) {\n+                throw new IllegalStateException(\"Read: \" + (int)c + \", expected: \" + (int)EXPECTED_CHAR);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestLoadIndexedMismatch.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8312596\n+ * @requires vm.debug == true & vm.compiler2.enabled\n+ * @summary Run with -Xcomp -XX:-TieredCompilation to force C2 compilations to test -XX:+PrintIdealNodeCount in debug builds.\n+ *\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:+PrintIdealNodeCount compiler.c2.TestPrintIdealNodeCount\n+ *\/\n+package compiler.c2;\n+\n+public class TestPrintIdealNodeCount {\n+    public static void main(String[] args) {\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestPrintIdealNodeCount.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8304954\n+ * @summary Code cache reservation should gracefully downgrade to using smaller pages if the code cache size is too small to host the requested page size.\n+ * @requires os.family == \"linux\"\n+ * @requires vm.gc != \"Z\"\n+ * @library \/test\/lib\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseLargePages -XX:LargePageSizeInBytes=1g compiler.codecache.CheckLargePages\n+ *\/\n+\n+package compiler.codecache;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.whitebox.WhiteBox;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class CheckLargePages {\n+    private final static WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n+\n+    public static void main(String[] args) throws Exception {\n+        final boolean largePages = WHITE_BOX.getBooleanVMFlag(\"UseLargePages\");\n+        final long largePageSize = WHITE_BOX.getVMLargePageSize();\n+        if (largePages && (largePageSize == 1024 * 1024 * 1024)) {\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                    \"-XX:+UseLargePages\",\n+                    \"-XX:+SegmentedCodeCache\",\n+                    \"-XX:InitialCodeCacheSize=2g\",\n+                    \"-XX:ReservedCodeCacheSize=2g\",\n+                    \"-XX:LargePageSizeInBytes=1g\",\n+                    \"-Xlog:pagesize=info\",\n+                    \"-version\");\n+            OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+            out.shouldMatch(\"Code cache size too small for \\\\S* pages\\\\. Reverting to smaller page size \\\\((\\\\S*)\\\\)\\\\.\");\n+            out.shouldHaveExitValue(0);\n+            \/\/ Parse page sizes to find next biggest page\n+            String sizes = out.firstMatch(\"Usable page sizes:(.*)\", 1);\n+            List<Long> sizeList = Arrays.stream(sizes.trim().split(\"\\\\s*,\\\\s*\")).map(CheckLargePages::parseMemoryString).sorted().toList();\n+            final int smallerPageSizeIndex = sizeList.indexOf(largePageSize) - 1;\n+            Asserts.assertGreaterThanOrEqual(smallerPageSizeIndex, 0);\n+            final long smallerPageSize = sizeList.get(smallerPageSizeIndex);\n+            \/\/ Retrieve reverted page size from code cache warning\n+            String revertedSizeString = out.firstMatch(\"Code cache size too small for (\\\\S*) pages. Reverting to smaller page size \\\\((\\\\S*)\\\\)\\\\.\", 2);\n+            Asserts.assertEquals(parseMemoryString(revertedSizeString), smallerPageSize);\n+        } else {\n+            System.out.println(\"1GB large pages not supported: UseLargePages=\" + largePages +\n+                    (largePages ? \", largePageSize=\" + largePageSize : \"\") + \". Skipping\");\n+        }\n+    }\n+\n+    public static long parseMemoryString(String value) {\n+        value = value.toUpperCase();\n+        long multiplier = 1;\n+        if (value.endsWith(\"B\")) {\n+            multiplier = 1;\n+        } else if (value.endsWith(\"K\")) {\n+            multiplier = 1024;\n+        } else if (value.endsWith(\"M\")) {\n+            multiplier = 1024 * 1024;\n+        } else if (value.endsWith(\"G\")) {\n+            multiplier = 1024 * 1024 * 1024;\n+        } else {\n+            throw new IllegalArgumentException(\"Expected memory string '\" + value + \"'to end with either of: B, K, M, G\");\n+        }\n+\n+        long longValue = Long.parseUnsignedLong(value.substring(0, value.length() - 1));\n+\n+        return longValue * multiplier;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckLargePages.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -27,1 +27,1 @@\n- * @requires os.arch==\"aarch64\"\n+ * @requires os.arch==\"aarch64\" | os.arch==\"riscv64\"\n@@ -33,1 +33,1 @@\n- *          Input parameters for this test are set according to Aarch64\n+ *          Input parameters for this test are set according to Aarch64\/RISC-V\n@@ -36,1 +36,1 @@\n- *          16, 32, 64 -characters loops for length >= 72. Code is also affected\n+ *          16, 32, 64 -characters loops for length >= 72. Aarch64 Code is also affected\n@@ -38,3 +38,3 @@\n- * @run main\/othervm -XX:SoftwarePrefetchHintDistance=192 compiler.intrinsics.string.TestStringCompareToDifferentLength 4 2 5 10 13 17 20 23 24 25 71 72 73 88 90 192 193 208 209\n- * @run main\/othervm -XX:SoftwarePrefetchHintDistance=16 compiler.intrinsics.string.TestStringCompareToDifferentLength 4 2 5 10 13 17 20 23 24 25 71 72 73 88 90\n- * @run main\/othervm -XX:SoftwarePrefetchHintDistance=-1 compiler.intrinsics.string.TestStringCompareToDifferentLength 4 2 5 10 13 17 20 23 24 25 71 72 73 88 90\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:SoftwarePrefetchHintDistance=192 compiler.intrinsics.string.TestStringCompareToDifferentLength 4 2 5 10 13 17 20 23 24 25 71 72 73 88 90 192 193 208 209\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:SoftwarePrefetchHintDistance=16 compiler.intrinsics.string.TestStringCompareToDifferentLength 4 2 5 10 13 17 20 23 24 25 71 72 73 88 90\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:SoftwarePrefetchHintDistance=-1 compiler.intrinsics.string.TestStringCompareToDifferentLength 4 2 5 10 13 17 20 23 24 25 71 72 73 88 90\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringCompareToDifferentLength.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-    public static Object resolvePossiblyCachedConstantInPool(ConstantPool constantPool, int cpi) {\n-        DirectHotSpotObjectConstantImpl obj = (DirectHotSpotObjectConstantImpl) CTVM.resolvePossiblyCachedConstantInPool((HotSpotConstantPool) constantPool, cpi);\n+    public static Object lookupConstantInPool(ConstantPool constantPool, int cpi, boolean resolve) {\n+        DirectHotSpotObjectConstantImpl obj = (DirectHotSpotObjectConstantImpl) CTVM.lookupConstantInPool((HotSpotConstantPool) constantPool, cpi, resolve);\n@@ -135,5 +135,0 @@\n-    public static void resolveInvokeDynamicInPool(\n-            ConstantPool constantPool, int cpi) {\n-        CTVM.resolveInvokeDynamicInPool((HotSpotConstantPool) constantPool, cpi);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/patches\/jdk.internal.vm.ci\/jdk\/vm\/ci\/hotspot\/CompilerToVMHelper.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -87,0 +87,7 @@\n+            if (constantPoolSS.getTagAt(cpi).equals(Tag.FIELDREF)) {\n+                for (int field_index = 0; field_index < WB.getFieldEntriesLength(this.klass); field_index++) {\n+                    if (WB.getFieldCPIndex(this.klass, field_index) == cpi) {\n+                        return field_index;\n+                    }\n+                }\n+            }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/ConstantPoolTestsHelper.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8138708\n+ * @bug 8136421\n+ * @requires vm.jvmci\n+ * @library \/test\/lib \/\n+ * @library ..\/common\/patches\n+ * @modules java.base\/jdk.internal.access\n+ *          java.base\/jdk.internal.reflect\n+ *          java.base\/jdk.internal.org.objectweb.asm\n+ *          java.base\/jdk.internal.org.objectweb.asm.tree\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.hotspot\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.runtime\n+ *          jdk.internal.vm.ci\/jdk.vm.ci.meta\n+ *\n+ * @build jdk.internal.vm.ci\/jdk.vm.ci.hotspot.CompilerToVMHelper jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+WhiteBoxAPI -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI\n+ *                   -XX:-UseJVMCICompiler\n+ *                   compiler.jvmci.compilerToVM.LookupConstantInPoolTest\n+ *\/\n+\n+package compiler.jvmci.compilerToVM;\n+\n+import compiler.jvmci.compilerToVM.ConstantPoolTestCase.ConstantTypes;\n+import compiler.jvmci.compilerToVM.ConstantPoolTestCase.TestedCPEntry;\n+import compiler.jvmci.compilerToVM.ConstantPoolTestCase.Validator;\n+import compiler.jvmci.compilerToVM.ConstantPoolTestsHelper.DummyClasses;\n+import jdk.test.lib.Asserts;\n+import jdk.vm.ci.hotspot.CompilerToVMHelper;\n+import jdk.vm.ci.meta.ConstantPool;\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodType;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static compiler.jvmci.compilerToVM.ConstantPoolTestCase.ConstantTypes.CONSTANT_METHODHANDLE;\n+import static compiler.jvmci.compilerToVM.ConstantPoolTestCase.ConstantTypes.CONSTANT_METHODTYPE;\n+import static compiler.jvmci.compilerToVM.ConstantPoolTestCase.ConstantTypes.CONSTANT_STRING;\n+\n+\/**\n+ * Test for {@code jdk.vm.ci.hotspot.CompilerToVM.lookupConstantInPool} method\n+ *\/\n+public class LookupConstantInPoolTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        Map<ConstantTypes, Validator> typeTests = new HashMap<>();\n+        typeTests.put(CONSTANT_STRING, LookupConstantInPoolTest::validateString);\n+        typeTests.put(CONSTANT_METHODHANDLE, LookupConstantInPoolTest::validateMethodHandle);\n+        typeTests.put(CONSTANT_METHODTYPE, LookupConstantInPoolTest::validateMethodType);\n+        ConstantPoolTestCase testCase = new ConstantPoolTestCase(typeTests);\n+        testCase.test();\n+        \/\/ The next \"Class.forName\" and repeating \"testCase.test()\"\n+        \/\/ are here for the following reason.\n+        \/\/ The first test run is without dummy class initialization,\n+        \/\/ which means no constant pool cache exists.\n+        \/\/ The second run is with initialized class (with constant pool cache available).\n+        \/\/ Some CompilerToVM methods require different input\n+        \/\/ depending on whether CP cache exists or not.\n+        for (DummyClasses dummy : DummyClasses.values()) {\n+            Class.forName(dummy.klass.getName());\n+        }\n+        testCase.test();\n+    }\n+\n+    private static void validateString(ConstantPool constantPoolCTVM,\n+                                       ConstantTypes cpType,\n+                                       DummyClasses dummyClass,\n+                                       int cpi) {\n+        TestedCPEntry entry = cpType.getTestedCPEntry(dummyClass, cpi);\n+        if (entry == null) {\n+            return;\n+        }\n+        int index = cpi;\n+        String cached = \"\";\n+        int cpci = dummyClass.getCPCacheIndex(cpi);\n+        if (cpci != ConstantPoolTestsHelper.NO_CP_CACHE_PRESENT) {\n+            index = cpci;\n+            cached = \"cached \";\n+        }\n+        Object constantInPool = CompilerToVMHelper.lookupConstantInPool(constantPoolCTVM, index, true);\n+        String stringToVerify = (String) constantInPool;\n+        String stringToRefer = entry.name;\n+        if (stringToRefer.equals(\"\") && cpci != ConstantPoolTestsHelper.NO_CP_CACHE_PRESENT) {\n+            stringToRefer = null; \/\/ tested method returns null for cached empty strings\n+        }\n+        String msg = String.format(\"Wrong string accessed by %sconstant pool index %d\", cached, index);\n+        Asserts.assertEQ(stringToRefer, stringToVerify, msg);\n+    }\n+\n+    private static final String NOT_NULL_MSG\n+            = \"Object returned by lookupConstantInPool method should not be null\";\n+\n+\n+    private static void validateMethodHandle(ConstantPool constantPoolCTVM,\n+                                             ConstantTypes cpType,\n+                                             DummyClasses dummyClass,\n+                                             int index) {\n+        Object constantInPool = CompilerToVMHelper.lookupConstantInPool(constantPoolCTVM, index, true);\n+        String msg = String.format(\"%s for index %d\", NOT_NULL_MSG, index);\n+        Asserts.assertNotNull(constantInPool, msg);\n+        if (!(constantInPool instanceof MethodHandle)) {\n+            msg = String.format(\"Wrong constant pool entry accessed by index\"\n+                                        + \" %d: %s, but should be subclass of %s\",\n+                                index,\n+                                constantInPool.getClass(),\n+                                MethodHandle.class.getName());\n+            throw new AssertionError(msg);\n+        }\n+    }\n+\n+    private static void validateMethodType(ConstantPool constantPoolCTVM,\n+                                           ConstantTypes cpType,\n+                                           DummyClasses dummyClass,\n+                                           int index) {\n+        Object constantInPool = CompilerToVMHelper.lookupConstantInPool(constantPoolCTVM, index, true);\n+        String msg = String.format(\"%s for index %d\", NOT_NULL_MSG, index);\n+        Asserts.assertNotNull(constantInPool, msg);\n+        Class mtToVerify = constantInPool.getClass();\n+        Class mtToRefer = MethodType.class;\n+        msg = String.format(\"Wrong method type class accessed by\"\n+                                    + \" constant pool index %d\",\n+                            index);\n+        Asserts.assertEQ(mtToRefer, mtToVerify, msg);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/LookupConstantInPoolTest.java","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -1,151 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8138708\n- * @bug 8136421\n- * @requires vm.jvmci\n- * @library \/test\/lib \/\n- * @library ..\/common\/patches\n- * @modules java.base\/jdk.internal.access\n- *          java.base\/jdk.internal.reflect\n- *          java.base\/jdk.internal.org.objectweb.asm\n- *          java.base\/jdk.internal.org.objectweb.asm.tree\n- *          jdk.internal.vm.ci\/jdk.vm.ci.hotspot\n- *          jdk.internal.vm.ci\/jdk.vm.ci.runtime\n- *          jdk.internal.vm.ci\/jdk.vm.ci.meta\n- *\n- * @build jdk.internal.vm.ci\/jdk.vm.ci.hotspot.CompilerToVMHelper jdk.test.whitebox.WhiteBox\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions\n- *                   -XX:+WhiteBoxAPI -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI\n- *                   -XX:-UseJVMCICompiler\n- *                   compiler.jvmci.compilerToVM.ResolvePossiblyCachedConstantInPoolTest\n- *\/\n-\n-package compiler.jvmci.compilerToVM;\n-\n-import compiler.jvmci.compilerToVM.ConstantPoolTestCase.ConstantTypes;\n-import compiler.jvmci.compilerToVM.ConstantPoolTestCase.TestedCPEntry;\n-import compiler.jvmci.compilerToVM.ConstantPoolTestCase.Validator;\n-import compiler.jvmci.compilerToVM.ConstantPoolTestsHelper.DummyClasses;\n-import jdk.test.lib.Asserts;\n-import jdk.vm.ci.hotspot.CompilerToVMHelper;\n-import jdk.vm.ci.meta.ConstantPool;\n-\n-import java.lang.invoke.MethodHandle;\n-import java.lang.invoke.MethodType;\n-import java.util.HashMap;\n-import java.util.Map;\n-\n-import static compiler.jvmci.compilerToVM.ConstantPoolTestCase.ConstantTypes.CONSTANT_METHODHANDLE;\n-import static compiler.jvmci.compilerToVM.ConstantPoolTestCase.ConstantTypes.CONSTANT_METHODTYPE;\n-import static compiler.jvmci.compilerToVM.ConstantPoolTestCase.ConstantTypes.CONSTANT_STRING;\n-\n-\/**\n- * Test for {@code jdk.vm.ci.hotspot.CompilerToVM.resolvePossiblyCachedConstantInPool} method\n- *\/\n-public class ResolvePossiblyCachedConstantInPoolTest {\n-\n-    public static void main(String[] args) throws Exception {\n-        Map<ConstantTypes, Validator> typeTests = new HashMap<>();\n-        typeTests.put(CONSTANT_STRING, ResolvePossiblyCachedConstantInPoolTest::validateString);\n-        typeTests.put(CONSTANT_METHODHANDLE, ResolvePossiblyCachedConstantInPoolTest::validateMethodHandle);\n-        typeTests.put(CONSTANT_METHODTYPE, ResolvePossiblyCachedConstantInPoolTest::validateMethodType);\n-        ConstantPoolTestCase testCase = new ConstantPoolTestCase(typeTests);\n-        testCase.test();\n-        \/\/ The next \"Class.forName\" and repeating \"testCase.test()\"\n-        \/\/ are here for the following reason.\n-        \/\/ The first test run is without dummy class initialization,\n-        \/\/ which means no constant pool cache exists.\n-        \/\/ The second run is with initialized class (with constant pool cache available).\n-        \/\/ Some CompilerToVM methods require different input\n-        \/\/ depending on whether CP cache exists or not.\n-        for (DummyClasses dummy : DummyClasses.values()) {\n-            Class.forName(dummy.klass.getName());\n-        }\n-        testCase.test();\n-    }\n-\n-    private static void validateString(ConstantPool constantPoolCTVM,\n-                                       ConstantTypes cpType,\n-                                       DummyClasses dummyClass,\n-                                       int cpi) {\n-        TestedCPEntry entry = cpType.getTestedCPEntry(dummyClass, cpi);\n-        if (entry == null) {\n-            return;\n-        }\n-        int index = cpi;\n-        String cached = \"\";\n-        int cpci = dummyClass.getCPCacheIndex(cpi);\n-        if (cpci != ConstantPoolTestsHelper.NO_CP_CACHE_PRESENT) {\n-            index = cpci;\n-            cached = \"cached \";\n-        }\n-        Object constantInPool = CompilerToVMHelper.resolvePossiblyCachedConstantInPool(constantPoolCTVM, index);\n-        String stringToVerify = (String) constantInPool;\n-        String stringToRefer = entry.name;\n-        if (stringToRefer.equals(\"\") && cpci != ConstantPoolTestsHelper.NO_CP_CACHE_PRESENT) {\n-            stringToRefer = null; \/\/ tested method returns null for cached empty strings\n-        }\n-        String msg = String.format(\"Wrong string accessed by %sconstant pool index %d\", cached, index);\n-        Asserts.assertEQ(stringToRefer, stringToVerify, msg);\n-    }\n-\n-    private static final String NOT_NULL_MSG\n-            = \"Object returned by resolvePossiblyCachedConstantInPool method should not be null\";\n-\n-\n-    private static void validateMethodHandle(ConstantPool constantPoolCTVM,\n-                                             ConstantTypes cpType,\n-                                             DummyClasses dummyClass,\n-                                             int index) {\n-        Object constantInPool = CompilerToVMHelper.resolvePossiblyCachedConstantInPool(constantPoolCTVM, index);\n-        String msg = String.format(\"%s for index %d\", NOT_NULL_MSG, index);\n-        Asserts.assertNotNull(constantInPool, msg);\n-        if (!(constantInPool instanceof MethodHandle)) {\n-            msg = String.format(\"Wrong constant pool entry accessed by index\"\n-                                        + \" %d: %s, but should be subclass of %s\",\n-                                index,\n-                                constantInPool.getClass(),\n-                                MethodHandle.class.getName());\n-            throw new AssertionError(msg);\n-        }\n-    }\n-\n-    private static void validateMethodType(ConstantPool constantPoolCTVM,\n-                                           ConstantTypes cpType,\n-                                           DummyClasses dummyClass,\n-                                           int index) {\n-        Object constantInPool = CompilerToVMHelper.resolvePossiblyCachedConstantInPool(constantPoolCTVM, index);\n-        String msg = String.format(\"%s for index %d\", NOT_NULL_MSG, index);\n-        Asserts.assertNotNull(constantInPool, msg);\n-        Class mtToVerify = constantInPool.getClass();\n-        Class mtToRefer = MethodType.class;\n-        msg = String.format(\"Wrong method type class accessed by\"\n-                                    + \" constant pool index %d\",\n-                            index);\n-        Asserts.assertEQ(mtToRefer, mtToVerify, msg);\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/ResolvePossiblyCachedConstantInPoolTest.java","additions":0,"deletions":151,"binary":false,"changes":151,"status":"deleted"},{"patch":"@@ -41,0 +41,1 @@\n+import java.lang.invoke.CallSite;\n@@ -43,0 +44,1 @@\n+import java.lang.invoke.MethodType;\n@@ -47,0 +49,1 @@\n+import java.util.Set;\n@@ -204,0 +207,8 @@\n+            MethodVisitor shouldNotBeCalled = cw.visitMethod(PUBLIC_STATIC, \"shouldNotBeCalled\", \"()V\", null, null);\n+            sig = \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\";\n+            handle = new Handle(H_INVOKESTATIC, testClassInternalName, \"shouldNotBeCalledBSM\", sig, false);\n+            shouldNotBeCalled.visitInvokeDynamicInsn(\"do_shouldNotBeCalled\", \"()V\", handle);\n+            shouldNotBeCalled.visitInsn(RETURN);\n+            shouldNotBeCalled.visitMaxs(0, 0);\n+            shouldNotBeCalled.visitEnd();\n+\n@@ -238,0 +249,31 @@\n+    \/**\n+     * Asserts that {@link ConstantPool#lookupConstant(int, boolean)} with {@code resolve == false}\n+     * returns null for all resolvable constant entries.\n+     *\/\n+    private static void assertNoEagerConstantResolution(Class<?> testClass, ConstantPool cp, Method getTagAt) throws Exception {\n+        for (int cpi = 1; cpi < cp.length(); cpi++) {\n+            String tag = String.valueOf(getTagAt.invoke(cp, cpi));\n+            switch (tag) {\n+                case \"MethodHandle\":\n+                case \"MethodType\":\n+                case \"Dynamic\": {\n+                    Object con = cp.lookupConstant(cpi, false);\n+                    Assert.assertNull(con, \"Unexpected eager resolution in \" + testClass + \" at cpi \" + cpi + \" (tag: \" + tag + \")\");\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Ensures {@link ConstantPool#lookupBootstrapMethodInvocation} does not invoke the associated bootstrap method.\n+     *\/\n+    private static void assertLookupBMIDoesNotInvokeBM(MetaAccessProvider metaAccess, Class<?> testClass) throws Exception {\n+        ResolvedJavaMethod shouldNotBeCalled = metaAccess.lookupJavaMethod(testClass.getDeclaredMethod(\"shouldNotBeCalled\"));\n+        ConstantPool cp = shouldNotBeCalled.getConstantPool();\n+        int cpi = getFirstInvokedynamicOperand(shouldNotBeCalled);\n+        BootstrapMethodInvocation bmi = cp.lookupBootstrapMethodInvocation(cpi, INVOKEDYNAMIC);\n+        Assert.assertEquals(bmi.getName(), \"do_shouldNotBeCalled\");\n+        Assert.assertEquals(bmi.getMethod().getName(), \"shouldNotBeCalledBSM\");\n+    }\n+\n@@ -266,0 +308,4 @@\n+\n+                assertNoEagerConstantResolution(testClass, cp, getTagAt);\n+                assertLookupBMIDoesNotInvokeBM(metaAccess, testClass);\n+\n@@ -304,1 +350,6 @@\n-        Object lastConstant = null;\n+\n+        Set<String> expectedBSMs = Set.of(\n+            \"jdk.vm.ci.hotspot.test.TestDynamicConstant.shouldNotBeCalledBSM\",\n+            \"java.lang.invoke.StringConcatFactory.makeConcatWithConstants\"\n+        );\n+\n@@ -313,1 +364,1 @@\n-                    Assert.assertEquals(bsm, \"java.lang.invoke.StringConcatFactory.makeConcatWithConstants\");\n+                    Assert.assertTrue(expectedBSMs.contains(bsm), expectedBSMs.toString());\n@@ -327,1 +378,1 @@\n-        testLoadReferencedType(concat);\n+        testLoadReferencedType(concat, cp);\n@@ -334,0 +385,3 @@\n+    private static int beU1(byte[] data, int bci) {\n+        return data[bci] & 0xff;\n+    }\n@@ -335,2 +389,7 @@\n-    private static void testLoadReferencedType(ResolvedJavaMethod method) {\n-        \/\/ Make sure that loadReferencedType for an invokedynamic call site works.\n+\n+    \/**\n+     * Gets the operand of the first invokedynamic in {@code method}. This\n+     * assumes that the bytecode of {@code method} is an INVOKEDYNAMIC instruction,\n+     * possibly preceded by an LDC instruction.\n+     *\/\n+    private static int getFirstInvokedynamicOperand(ResolvedJavaMethod method) {\n@@ -338,7 +397,16 @@\n-        Assert.assertTrue(code[0] == LDC || code[0] == LDC2_W, \"unexpected ldc sequence\");\n-        int bci = code[0] == LDC ? 2 : 3;\n-        Assert.assertTrue((code[bci] & 0xff) == INVOKEDYNAMIC, \"unexpected bytecode\");\n-        int cpi = beS4(code, bci + 1);\n-        method.getConstantPool().loadReferencedType(cpi, INVOKEDYNAMIC, false);\n-        BootstrapMethodInvocation bmi = method.getConstantPool().lookupBootstrapMethodInvocation(cpi, INVOKEDYNAMIC);\n-        Assert.assertEquals(bmi.getName(), \"do_concat\");\n+        int opcode = beU1(code, 0);\n+        if (opcode == INVOKEDYNAMIC) {\n+            return beS4(code, 1);\n+        }\n+        Assert.assertTrue(opcode == LDC || opcode == LDC2_W, String.valueOf(opcode));\n+        int bci = opcode == LDC ? 2 : 3;\n+        Assert.assertEquals(beU1(code, bci), INVOKEDYNAMIC);\n+        return beS4(code, bci + 1);\n+    }\n+\n+    \/**\n+     * Ensures that loadReferencedType for an invokedynamic call site does not throw an exception.\n+     *\/\n+    private static void testLoadReferencedType(ResolvedJavaMethod method, ConstantPool cp) {\n+        int cpi = getFirstInvokedynamicOperand(method);\n+        cp.loadReferencedType(cpi, INVOKEDYNAMIC, false);\n@@ -385,0 +453,5 @@\n+\n+    \/\/ A bootstrap method that should never be called\n+    public static CallSite shouldNotBeCalledBSM(MethodHandles.Lookup caller, String name, MethodType type) throws Exception {\n+        throw new RuntimeException(\"should not be called\");\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\/jdk\/vm\/ci\/hotspot\/test\/TestDynamicConstant.java","additions":85,"deletions":12,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8312440\n+ * @summary assert(cast != nullptr) failed: must have added a cast to pin the node\n+ * @run main\/othervm -XX:-BackgroundCompilation TestSunkNodeMissingCastAssert\n+ *\/\n+\n+\n+public class TestSunkNodeMissingCastAssert {\n+  private static int N = 500;\n+  private static int ia[] = new int[N];\n+  private static volatile int ib[] = new int[N];\n+\n+  private static void test() {\n+    for (int k = 1; k < 200; k++)\n+      switch (k % 5) {\n+      case 0:\n+        ia[k - 1] -= 15;\n+      case 2:\n+        for (int m = 0; m < 1000; m++);\n+      case 3:\n+        ib[k - 1] <<= 5;\n+      case 4:\n+        ib[k + 1] <<= 3;\n+      }\n+  }\n+\n+  public static void main(String[] args) {\n+    for (int i = 0; i < 20000; i++) {\n+      test();\n+    }\n+  }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestSunkNodeMissingCastAssert.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -116,2 +116,2 @@\n-    \/\/ 4294967295 == (unsigned int) -1\n-    \/\/ So setting ParallelGCThreads=4294967295 should give back 4294967295\n+    \/\/ Test the max value for ParallelGCThreads\n+    \/\/ So setting ParallelGCThreads=2147483647 should give back 2147483647\n@@ -120,1 +120,1 @@\n-        \"-XX:ParallelGCThreads=4294967295\",\n+        \"-XX:ParallelGCThreads=2147483647\",\n@@ -123,1 +123,1 @@\n-    Asserts.assertEQ(count, 4294967295L, \"Specifying ParallelGCThreads=4294967295 does not set the thread count properly!\");\n+    Asserts.assertEQ(count, 2147483647L, \"Specifying ParallelGCThreads=2147483647 does not set the thread count properly!\");\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelGCThreads.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,104 @@\n-        dumpAndRun(topArchiveName, \"-Xlog:cds+dynamic=debug\", \"-cp\", appJar, mainClass);\n+        \/\/ Case 1\n+        \/\/ Create a dynamic archive with the ArrayKlassesApp app class and its\n+        \/\/ array classes.\n+        dump2(null, topArchiveName,\n+              \"-Xlog:cds+dynamic=debug,cds+class=debug\",\n+              \"-cp\", appJar, mainClass)\n+              .assertNormalExit(output -> {\n+                     output.shouldMatch(\"cds.class.*klasses.*array \\\\[LArrayKlassesApp;\")\n+                           .shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[LArrayKlassesApp;\")\n+                           .shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[\\\\[LArrayKlassesApp;\");\n+                 });\n+\n+        \/\/ Case 1\n+        \/\/ At runtime , the ArrayKlasesApp and its array class should be loaded\n+        \/\/ from the dynamic archive.\n+        run2(null, topArchiveName,\n+             \"-Xlog:class+load,class+load+array=debug,cds+dynamic=debug,cds=debug\",\n+             \"-cp\", appJar, mainClass)\n+             .assertNormalExit(output -> {\n+                     output.shouldContain(\"ArrayKlassesApp source: shared objects file (top)\")\n+                           .shouldContain(\"[LArrayKlassesApp; source: shared objects file (top)\")\n+                           .shouldContain(\"[[LArrayKlassesApp; source: shared objects file (top)\")\n+                           .shouldContain(\"[[[LArrayKlassesApp; source: shared objects file (top)\")\n+                           .shouldHaveExitValue(0);\n+                 });\n+\n+        \/\/ Case 2\n+        \/\/ Create a dynamic archive with the array classes of java\/util\/Date which\n+        \/\/ is in the default CDS archive.\n+        topArchiveName = getNewArchiveName();\n+        dump2(null, topArchiveName,\n+              \"-Xlog:class+load,cds+dynamic=debug,cds+class=debug\",\n+              \"-cp\", appJar, mainClass, \"system\")\n+              .assertNormalExit(output -> {\n+                     output.shouldContain(\"java.util.Date source: shared objects file\")\n+                           .shouldMatch(\"cds.class.*klasses.*array \\\\[Ljava.util.Date;\")\n+                           .shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[Ljava.util.Date;\")\n+                           .shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[\\\\[Ljava.util.Date;\");\n+                 });\n+\n+        \/\/ Case 2\n+        \/\/ At runtime, the java\/util\/Date class should be loaded from the default\n+        \/\/ CDS archive; its array class should be loaded from the dynamic archive.\n+        run2(null, topArchiveName,\n+             \"-Xlog:class+load,class+load+array=debug,cds+dynamic=debug,cds=debug\",\n+             \"-cp\", appJar, mainClass, \"system\")\n+             .assertNormalExit(output -> {\n+                     output.shouldContain(\"java.util.Date source: shared objects file\")\n+                           .shouldContain(\"[Ljava.util.Date; source: shared objects file (top)\")\n+                           .shouldContain(\"[[Ljava.util.Date; source: shared objects file (top)\")\n+                           .shouldContain(\"[[[Ljava.util.Date; source: shared objects file (top)\")\n+                           .shouldHaveExitValue(0);\n+                 });\n+\n+        \/\/ Case 3\n+        \/\/ Create a dynamic archive with primitive arrays [[J and [[[J with [J\n+        \/\/ already in the default CDS archive\n+        topArchiveName = getNewArchiveName();\n+        dump2(null, topArchiveName,\n+              \"-Xlog:class+load,cds+dynamic=debug,cds+class=debug\",\n+              \"-cp\", appJar, mainClass, \"primitive\")\n+              .assertNormalExit(output -> {\n+                     output.shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[J\")\n+                           .shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[\\\\[J\");\n+                 });\n+\n+        \/\/ Case 3\n+        \/\/ At runtime, the [J should be loaded from the default CDS archive;\n+        \/\/ the higher-dimension array should be loaded from the dynamic archive.\n+        run2(null, topArchiveName,\n+             \"-Xlog:class+load,class+load+array=debug,cds+dynamic=debug,cds=debug\",\n+             \"-cp\", appJar, mainClass, \"primitive\")\n+             .assertNormalExit(output -> {\n+                     output.shouldContain(\"[J source: shared objects file\")\n+                           .shouldContain(\"[[J source: shared objects file (top)\")\n+                           .shouldContain(\"[[[J source: shared objects file (top)\")\n+                           .shouldHaveExitValue(0);\n+                 });\n+\n+        \/\/ Case 4\n+        \/\/ Create a dynamic archive with 2-, 3- and 4-dimension arrays of java\/lang\/Integer.\n+        \/\/ The java\/lang\/Integer class and the 1-dimension array is in the default archive.\n+        topArchiveName = getNewArchiveName();\n+        dump2(null, topArchiveName,\n+              \"-Xlog:class+load,cds+dynamic=debug,cds+class=debug\",\n+              \"-cp\", appJar, mainClass, \"integer-array\")\n+              .assertNormalExit(output -> {\n+                     output.shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[Ljava.lang.Integer;\")\n+                           .shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[\\\\[Ljava.lang.Integer;\")\n+                           .shouldMatch(\"cds.class.*klasses.*array \\\\[\\\\[\\\\[\\\\[Ljava.lang.Integer;\");\n+                 });\n+\n+        \/\/ Case 4\n+        \/\/ At runtime, the 4-dimension array of java\/lang\/Integer should be\n+        \/\/ loaded from the dynamic archive.\n+        run2(null, topArchiveName,\n+             \"-Xlog:class+load,class+load+array=debug,cds+dynamic=debug,cds=debug\",\n+             \"-cp\", appJar, mainClass, \"integer-array\")\n+             .assertNormalExit(output -> {\n+                     output.shouldContain(\"[[Ljava.lang.Integer; source: shared objects file (top)\")\n+                           .shouldContain(\"[[[Ljava.lang.Integer; source: shared objects file (top)\")\n+                           .shouldContain(\"[[[[Ljava.lang.Integer; source: shared objects file (top)\")\n+                           .shouldHaveExitValue(0);\n+                 });\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ArrayKlasses.java","additions":105,"deletions":2,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8312181\n+ * @summary Archive an old class, which fails verification and is a supertype of another\n+ *          class, in the base archive. Perform a dynamic dump with the base archive\n+ *          containing the old class and its subclass in \"unlinked\" state. VM should\n+ *          not crash in this scenario.\n+ * @requires vm.cds\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @compile test-classes\/VerifierTroublev49.jasm\n+ * @compile test-classes\/ChildOldSuper.java\n+ * @compile test-classes\/VerifierTroubleApp.java\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar oldsuper-fail-verifier.jar ChildOldSuper VerifierTroublev49 VerifierTroubleApp\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:. OldClassVerifierTrouble\n+ *\/\n+\n+import java.io.File;\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+\n+public class OldClassVerifierTrouble extends DynamicArchiveTestBase {\n+    static final String appClass = \"VerifierTroubleApp\";\n+    static final String baseArchiveClass = \"OldSuperVerifierTrouble\";\n+\n+    public static void main(String[] args) throws Exception {\n+        runTest(OldClassVerifierTrouble::testCustomBase);\n+    }\n+\n+    static void testCustomBase() throws Exception {\n+        String topArchiveName = getNewArchiveName(\"top\");\n+        doTestCustomBase(topArchiveName);\n+    }\n+\n+    private static void doTestCustomBase(String topArchiveName) throws Exception {\n+        String appJar = ClassFileInstaller.getJarPath(\"oldsuper-fail-verifier.jar\");\n+\n+        \/\/ create a custom base archive containing an old class\n+        OutputAnalyzer output = TestCommon.dump(appJar,\n+            TestCommon.list(\"VerifierTroubleApp\", \"VerifierTroublev49\", \"ChildOldSuper\"),\n+            \"-Xlog:class+load,cds+class=debug\");\n+        TestCommon.checkDump(output);\n+        \/\/ Check the ChildOldSuper and VerifierTroublev49 are being dumped into the base archive.\n+        output.shouldMatch(\".cds.class.*klass.*0x.*app.*ChildOldSuper.*unlinked\")\n+              .shouldMatch(\".cds.class.*klass.*0x.*app.*VerifierTroublev49.*unlinked\");\n+\n+        String baseArchiveName = TestCommon.getCurrentArchiveName();\n+\n+        \/\/ create a dynamic archive with the custom base archive.\n+        \/\/ The old class is in the base archive and will be\n+        \/\/ accessed from VerifierTroubleApp.\n+        \/\/ Linking VerifierTroublev49 would result in java.lang.VerifyError.\n+        dump2(baseArchiveName, topArchiveName,\n+              \"-Xlog:cds,cds+dynamic,class+load,cds+class=debug\",\n+              \"-cp\", appJar,\n+              appClass)\n+            .assertAbnormalExit(out -> {\n+                    out.shouldContain(\"VerifierTroublev49 source: shared objects file\")\n+                       .shouldContain(\"ChildOldSuper source: shared objects file\")\n+                       .shouldContain(\"java.lang.VerifyError: \" +\n+                                      \"(class: VerifierTroublev49, method: doit signature: ()Ljava\/lang\/String;)\" +\n+                                      \" Wrong return type in function\");\n+                });\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/OldClassVerifierTrouble.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,3 @@\n+import java.lang.reflect.Array;\n+import java.util.Date;\n+\n@@ -27,4 +30,39 @@\n-        ArrayKlassesApp[][] array = new ArrayKlassesApp[1][2];\n-        for (int i=0; i<1; i++) {\n-            for (int j=0; j<2; j++) {\n-                array[i][j] = new ArrayKlassesApp();\n+        if (args.length == 1) {\n+            if (args[0].equals(\"system\")) {\n+                Date[][][] array = new Date[1][2][2];\n+                int count = 0;\n+                for (int i=0; i<1; i++) {\n+                    for (int j=0; j<2; j++) {\n+                        for (int k=0; k<2; k++) {\n+                            array[i][j][k] = new Date();\n+                            count++;\n+                            array[i][j][k].setTime(20000 * count);\n+                        }\n+                    }\n+                }\n+            } else if (args[0].equals(\"primitive\")) {\n+                long[][][] larray = new long[1][2][2];\n+                long lcount = 0;\n+                for (int i=0; i<1; i++) {\n+                    for (int j=0; j<2; j++) {\n+                        for (int k=0; k<2; k++) {\n+                            lcount++;\n+                            larray[i][j][k] = lcount;\n+                        }\n+                    }\n+                }\n+            } else if (args[0].equals(\"integer-array\")) {\n+                Integer[][][][] iarray = new Integer[4][4][4][4];\n+                int count = 0;\n+                for (int i = 0; i < 4; i++) {\n+                    for (int j = 0; j < 4; j++) {\n+                        for (int k = 0; k < 4; k++) {\n+                            for (int l = 0; l < 4; l++) {\n+                                count++;\n+                                iarray[i][j][k][l] = new Integer(count);\n+                            }\n+                        }\n+                    }\n+                }\n+                System.out.println(iarray);\n+                System.out.println(iarray.getClass());\n@@ -32,0 +70,5 @@\n+        } else {\n+            Object x = Array.newInstance(ArrayKlassesApp.class, 3,3,3);\n+            System.out.println(x);\n+            System.out.println(x.getClass());\n+            System.out.println(Array.getLength(x));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\/ArrayKlassesApp.java","additions":48,"deletions":5,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+public class ChildOldSuper extends VerifierTroublev49 {\n+    public String doit() {\n+        return super.doit();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\/ChildOldSuper.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+public class VerifierTroubleApp {\n+    public static void main(String args[]) throws Throwable {\n+        ChildOldSuper c = new ChildOldSuper();\n+        System.out.println(c);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\/VerifierTroubleApp.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * ORACLE PROPRIETARY\/CONFIDENTIAL. Use is subject to license terms.\n+ *\/\n+\n+\/\/ During CDS static dump time, this class will be stored in \"unlinked\" state.\n+\/\/ This class should not be stored in a dynamic archive because it will fail verification.\n+\n+super public class VerifierTroublev49\n+\tversion 49:0\n+{\n+\n+\n+public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+{\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+}\n+\n+    \/*\n+     * The following method tries to return an Object as a String.\n+     * Verifier should fail.\n+     *\/\n+public Method doit:\"()Ljava\/lang\/String;\"\n+\tstack 2 locals 1\n+{\n+                new\tclass java\/lang\/Object;\n+\t\tdup;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\tastore_0;\n+\t\taload_0;\n+\t\tareturn;   \/\/ tries to return an Object as a String\n+}\n+\n+} \/\/ end Class VerifierTroublev49\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\/VerifierTroublev49.jasm","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -175,1 +175,2 @@\n-            .mustMatch(\"\\\"num args = [\\\\\\\\]u0001\\\"\"); \/\/ static param for string concat\n+            .mustMatch(\"\\\"num args = [\\\\\\\\]u0001\\\"\") \/\/ static param for string concat\n+            .mustMatch(\".*getstatic [0-9]+ <java\/lang\/System.out:Ljava\/io\/PrintStream;>\");\n","filename":"test\/hotspot\/jtreg\/runtime\/interpreter\/BytecodeTracerTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.util.Arrays;\n@@ -302,0 +303,3 @@\n+      System.out.println(\"Using: \" + Arrays.toString(useFlags));\n+      System.out.println(\"Expecting: \" + Arrays.toString(expectedFlags));\n+\n@@ -384,0 +388,3 @@\n+\n+    @Override\n+    public String toString() { return flagString(); }\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/LargePages\/TestLargePagesFlags.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @run driver HugePageDetection\n+ * @run driver TestHugePageDetection\n@@ -39,1 +39,1 @@\n-public class HugePageDetection {\n+public class TestHugePageDetection {\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDetection.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/hotspot\/jtreg\/runtime\/os\/HugePageDetection.java","status":"renamed"},{"patch":"@@ -37,0 +37,10 @@\n+\/*\n+ * @test id=trimNativeStrict\n+ * @requires (os.family==\"linux\") & !vm.musl\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/manual TestTrimNative trimNativeStrict\n+ *\/\n+\n@@ -59,0 +69,11 @@\n+\/*\n+ * @test id=trimNativeLowIntervalStrict\n+ * @summary Very low (sub-second) interval, nothing should explode (stricter test, manual mode)\n+ * @requires (os.family==\"linux\") & !vm.musl\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/manual TestTrimNative trimNativeLowIntervalStrict\n+ *\/\n+\n@@ -164,0 +185,1 @@\n+     * @param strict: if true, expect RSS to go down; if false, just look for trims without looking at RSS.\n@@ -166,1 +188,1 @@\n-                                                          int maxTrimsExpected) {\n+                                                          int maxTrimsExpected, boolean strict) {\n@@ -191,1 +213,2 @@\n-        if (maxTrimsExpected > 0) {\n+        System.out.println(\"Found \" + numTrimsFound + \" trims. Ok.\");\n+        if (strict && maxTrimsExpected > 0) {\n@@ -206,0 +229,2 @@\n+            } else {\n+                System.out.println(\"Found high enough RSS reduction from trims: \" + rssReductionTotal);\n@@ -241,0 +266,2 @@\n+        boolean strictTesting = args[0].endsWith(\"Strict\");\n+\n@@ -242,1 +269,2 @@\n-            case \"trimNative\": {\n+            case \"trimNative\":\n+            case \"trimNativeStrict\": {\n@@ -256,1 +284,1 @@\n-                parseOutputAndLookForNegativeTrim(output, (int) minTrimsExpected, (int) maxTrimsExpected);\n+                parseOutputAndLookForNegativeTrim(output, (int) minTrimsExpected, (int) maxTrimsExpected, strictTesting);\n@@ -266,1 +294,1 @@\n-                parseOutputAndLookForNegativeTrim(output, 0, 0);\n+                parseOutputAndLookForNegativeTrim(output, 0, 0, strictTesting);\n@@ -269,1 +297,2 @@\n-            case \"trimNativeLowInterval\": {\n+            case \"trimNativeLowInterval\":\n+            case \"trimNativeLowIntervalStrict\": {\n@@ -275,1 +304,1 @@\n-                parseOutputAndLookForNegativeTrim(output, 1, 3000);\n+                parseOutputAndLookForNegativeTrim(output, 1, 3000, strictTesting);\n@@ -284,1 +313,1 @@\n-                parseOutputAndLookForNegativeTrim(output, 0, 0);\n+                parseOutputAndLookForNegativeTrim(output, 0, 0, strictTesting);\n@@ -295,1 +324,1 @@\n-                parseOutputAndLookForNegativeTrim(output, 0, 0);\n+                parseOutputAndLookForNegativeTrim(output, 0, 0, strictTesting);\n@@ -301,1 +330,1 @@\n-                parseOutputAndLookForNegativeTrim(output, 0, 0);\n+                parseOutputAndLookForNegativeTrim(output, 0, 0, strictTesting);\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTrimNative.java","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -509,3 +509,4 @@\n-sun\/management\/jdp\/JdpDefaultsTest.java                         8241865 linux-aarch64,macosx-all\n-sun\/management\/jdp\/JdpJmxRemoteDynamicPortTest.java             8241865 macosx-all\n-sun\/management\/jdp\/JdpSpecificAddressTest.java                  8241865 macosx-all\n+sun\/management\/jdp\/JdpDefaultsTest.java                         8241865,8308807 linux-aarch64,macosx-all,aix-ppc64\n+sun\/management\/jdp\/JdpJmxRemoteDynamicPortTest.java             8241865,8308807 macosx-all,aix-ppc64\n+sun\/management\/jdp\/JdpSpecificAddressTest.java                  8241865,8308807 macosx-all,aix-ppc64\n+sun\/management\/jdp\/JdpOffTest.java                              8308807 aix-ppc64\n@@ -531,2 +532,2 @@\n-java\/net\/MulticastSocket\/NoLoopbackPackets.java                 7122846 macosx-all\n-java\/net\/MulticastSocket\/SetLoopbackMode.java                   7122846 macosx-all\n+java\/net\/MulticastSocket\/NoLoopbackPackets.java                 7122846,8308807 macosx-all,aix-ppc64\n+java\/net\/MulticastSocket\/SetLoopbackMode.java                   7122846,8308807 macosx-all,aix-ppc64\n@@ -534,1 +535,1 @@\n-java\/net\/MulticastSocket\/Test.java                              7145658 macosx-all\n+java\/net\/MulticastSocket\/Test.java                              7145658,8308807 macosx-all,aix-ppc64\n@@ -538,0 +539,3 @@\n+java\/net\/MulticastSocket\/B6427403.java                          8308807 aix-ppc64\n+java\/net\/MulticastSocket\/SetOutgoingIf.java                     8308807 aix-ppc64\n+\n@@ -550,0 +554,2 @@\n+java\/nio\/channels\/DatagramChannel\/AfterDisconnect.java          8308807 aix-ppc64\n+\n@@ -606,2 +612,0 @@\n-sun\/security\/pkcs11\/Cipher\/TestKATForGCM.java                   8240611 linux-x64,macosx-x64\n-\n@@ -769,0 +773,6 @@\n+############################################################################\n+\n+# jdk_foreign\n+\n+java\/foreign\/TestByteBuffer.java 8309475 aix-ppc64\n+\n@@ -800,0 +810,4 @@\n+\n+# valhalla\n+valhalla\/valuetypes\/ObjectMethods.java 8317150 generic-all\n+valhalla\/valuetypes\/SubstitutabilityTest.java 8317151 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -0,0 +1,148 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.Color;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.Window;\n+\n+import javax.swing.JWindow;\n+import javax.swing.SwingUtilities;\n+\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\/*\n+ * @test\n+ * @bug 8280482\n+ * @key headful\n+ * @summary Test to check if window GC doesn't change within same screen.\n+ * @run main MultiScreenCheckScreenIDTest\n+ *\/\n+\n+public class MultiScreenCheckScreenIDTest extends MouseAdapter {\n+    private static final int COLS = 12;\n+    private static final int ROWS = 8;\n+    private static final Color BACKGROUND = new Color(0, 0, 255, 64);\n+    private static GraphicsDevice[] screens;\n+    static List<Window> windowList = new ArrayList<>();\n+    static Robot robot;\n+    static JWindow window;\n+\n+\n+    public static void main(final String[] args) throws Exception {\n+        try {\n+            createGUI();\n+        } finally {\n+            for (Window win : windowList) {\n+                win.dispose();\n+            }\n+            if (window != null) {\n+                window.dispose();\n+            }\n+        }\n+        System.out.println(\"Test Pass\");\n+    }\n+\n+    private static void createGUI() throws AWTException {\n+        new MultiScreenCheckScreenIDTest().createWindowGrid();\n+    }\n+\n+    private void createWindowGrid() throws AWTException {\n+        screens = GraphicsEnvironment\n+                .getLocalGraphicsEnvironment()\n+                .getScreenDevices();\n+\n+        if (screens.length < 2) {\n+            System.out.println(\"Testing aborted. Required min of 2 screens. \" +\n+                    \"Available : \" + screens.length);\n+            return;\n+        }\n+        robot = new Robot();\n+\n+        int screenNumber = 1;\n+        for (GraphicsDevice screen : screens) {\n+            Rectangle screenBounds = screen.getDefaultConfiguration().getBounds();\n+\n+            for (Rectangle r : gridOfRectangles(screenBounds, COLS, ROWS)) {\n+                try {\n+                    SwingUtilities.invokeAndWait(() -> {\n+                        try {\n+                            window = createWindow(r);\n+                        } catch (Exception e) {\n+                            throw new RuntimeException(e);\n+                        }\n+                    });\n+                } catch (InterruptedException | InvocationTargetException e) {\n+                    e.printStackTrace();\n+                }\n+                robot.delay(50);\n+                robot.waitForIdle();\n+                if (window.getBounds().intersects(screenBounds)) {\n+                    if (!(window.getGraphicsConfiguration().getBounds().\n+                            intersects(screenBounds))) {\n+                        throw new RuntimeException(\"Graphics configuration \" +\n+                                \"changed for screen :\" + screenNumber);\n+                    }\n+                }\n+                windowList.add(window);\n+            }\n+            screenNumber++;\n+        }\n+    }\n+\n+    private JWindow createWindow(Rectangle bounds) {\n+        JWindow window = new JWindow();\n+        window.setBounds(bounds);\n+        window.setBackground(BACKGROUND);\n+        window.setAlwaysOnTop(true);\n+        window.addMouseListener(this);\n+        window.setVisible(true);\n+        return window;\n+    }\n+\n+    @Override\n+    public void mouseClicked(MouseEvent e) {\n+        ((Window) e.getSource()).dispose();\n+    }\n+\n+    private static List<Rectangle> gridOfRectangles(Rectangle r, int cols, int rows) {\n+        List<Rectangle> l = new ArrayList<>();\n+        for (int row = 0; row < rows; row++) {\n+            int y1 = r.y + (int) Math.round(r.height * (double) row \/ rows);\n+            int y2 = r.y + (int) Math.round(r.height * (double) (row + 1) \/ rows);\n+            for (int col = 0; col < cols; col++) {\n+                int x1 = r.x + (int) Math.round(r.width * (double) col \/ cols);\n+                int x2 = r.x + (int) Math.round(r.width * (double) (col + 1) \/ cols);\n+                l.add(new Rectangle(x1, y1, x2 - x1, y2 - y1));\n+            }\n+        }\n+        return l;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Multiscreen\/MultiScreenCheckScreenIDTest.java","additions":148,"deletions":0,"binary":false,"changes":148,"status":"added"},{"patch":"@@ -66,1 +66,1 @@\n-    private record SaveValuesCase(String nativeTarget, FunctionDescriptor nativeDesc, String threadLocalName, Consumer<Object> resultCheck) {}\n+    private record SaveValuesCase(String nativeTarget, FunctionDescriptor nativeDesc, boolean trivial, String threadLocalName, Consumer<Object> resultCheck) {}\n@@ -70,2 +70,6 @@\n-        Linker.Option stl = Linker.Option.captureCallState(testCase.threadLocalName());\n-        MethodHandle handle = downcallHandle(testCase.nativeTarget(), testCase.nativeDesc(), stl);\n+        List<Linker.Option> options = new ArrayList<>();\n+        options.add(Linker.Option.captureCallState(testCase.threadLocalName()));\n+        if (testCase.trivial()) {\n+            options.add(Linker.Option.isTrivial());\n+        }\n+        MethodHandle handle = downcallHandle(testCase.nativeTarget(), testCase.nativeDesc(), options.toArray(Linker.Option[]::new));\n@@ -104,0 +108,4 @@\n+    interface CaseAdder {\n+      void addCase(String nativeTarget, FunctionDescriptor nativeDesc, String threadLocalName, Consumer<Object> resultCheck);\n+    }\n+\n@@ -107,0 +115,4 @@\n+        CaseAdder adder = (nativeTarget, nativeDesc, threadLocalName, resultCheck) -> {\n+          cases.add(new SaveValuesCase(nativeTarget, nativeDesc, false, threadLocalName, resultCheck));\n+          cases.add(new SaveValuesCase(nativeTarget, nativeDesc, true, threadLocalName, resultCheck));\n+        };\n@@ -108,16 +120,16 @@\n-        cases.add(new SaveValuesCase(\"set_errno_V\", FunctionDescriptor.ofVoid(JAVA_INT), \"errno\", o -> {}));\n-        cases.add(new SaveValuesCase(\"set_errno_I\", FunctionDescriptor.of(JAVA_INT, JAVA_INT), \"errno\", o -> assertEquals((int) o, 42)));\n-        cases.add(new SaveValuesCase(\"set_errno_D\", FunctionDescriptor.of(JAVA_DOUBLE, JAVA_INT), \"errno\", o -> assertEquals((double) o, 42.0)));\n-\n-        cases.add(structCase(\"SL\",  Map.of(JAVA_LONG.withName(\"x\"), 42L)));\n-        cases.add(structCase(\"SLL\", Map.of(JAVA_LONG.withName(\"x\"), 42L,\n-                                           JAVA_LONG.withName(\"y\"), 42L)));\n-        cases.add(structCase(\"SLLL\", Map.of(JAVA_LONG.withName(\"x\"), 42L,\n-                                            JAVA_LONG.withName(\"y\"), 42L,\n-                                            JAVA_LONG.withName(\"z\"), 42L)));\n-        cases.add(structCase(\"SD\",  Map.of(JAVA_DOUBLE.withName(\"x\"), 42D)));\n-        cases.add(structCase(\"SDD\", Map.of(JAVA_DOUBLE.withName(\"x\"), 42D,\n-                                           JAVA_DOUBLE.withName(\"y\"), 42D)));\n-        cases.add(structCase(\"SDDD\", Map.of(JAVA_DOUBLE.withName(\"x\"), 42D,\n-                                            JAVA_DOUBLE.withName(\"y\"), 42D,\n-                                            JAVA_DOUBLE.withName(\"z\"), 42D)));\n+        adder.addCase(\"set_errno_V\", FunctionDescriptor.ofVoid(JAVA_INT), \"errno\", o -> {});\n+        adder.addCase(\"set_errno_I\", FunctionDescriptor.of(JAVA_INT, JAVA_INT), \"errno\", o -> assertEquals((int) o, 42));\n+        adder.addCase(\"set_errno_D\", FunctionDescriptor.of(JAVA_DOUBLE, JAVA_INT), \"errno\", o -> assertEquals((double) o, 42.0));\n+\n+        structCase(adder, \"SL\",  Map.of(JAVA_LONG.withName(\"x\"), 42L));\n+        structCase(adder, \"SLL\", Map.of(JAVA_LONG.withName(\"x\"), 42L,\n+                                         JAVA_LONG.withName(\"y\"), 42L));\n+        structCase(adder, \"SLLL\", Map.of(JAVA_LONG.withName(\"x\"), 42L,\n+                                         JAVA_LONG.withName(\"y\"), 42L,\n+                                         JAVA_LONG.withName(\"z\"), 42L));\n+        structCase(adder, \"SD\",  Map.of(JAVA_DOUBLE.withName(\"x\"), 42D));\n+        structCase(adder, \"SDD\", Map.of(JAVA_DOUBLE.withName(\"x\"), 42D,\n+                                         JAVA_DOUBLE.withName(\"y\"), 42D));\n+        structCase(adder, \"SDDD\", Map.of(JAVA_DOUBLE.withName(\"x\"), 42D,\n+                                         JAVA_DOUBLE.withName(\"y\"), 42D,\n+                                         JAVA_DOUBLE.withName(\"z\"), 42D));\n@@ -126,2 +138,2 @@\n-            cases.add(new SaveValuesCase(\"SetLastError\", FunctionDescriptor.ofVoid(JAVA_INT), \"GetLastError\", o -> {}));\n-            cases.add(new SaveValuesCase(\"WSASetLastError\", FunctionDescriptor.ofVoid(JAVA_INT), \"WSAGetLastError\", o -> {}));\n+            adder.addCase(\"SetLastError\", FunctionDescriptor.ofVoid(JAVA_INT), \"GetLastError\", o -> {});\n+            adder.addCase(\"WSASetLastError\", FunctionDescriptor.ofVoid(JAVA_INT), \"WSAGetLastError\", o -> {});\n@@ -133,1 +145,1 @@\n-    static SaveValuesCase structCase(String name, Map<MemoryLayout, Object> fields) {\n+    static void structCase(CaseAdder adder, String name, Map<MemoryLayout, Object> fields) {\n@@ -144,1 +156,1 @@\n-        return new SaveValuesCase(\"set_errno_\" + name, FunctionDescriptor.of(layout, JAVA_INT), \"errno\", check);\n+        adder.addCase(\"set_errno_\" + name, FunctionDescriptor.of(layout, JAVA_INT), \"errno\", check);\n","filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java","additions":35,"deletions":23,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.concurrent.CountDownLatch;\n@@ -149,0 +150,2 @@\n+\n+            var ready = new CountDownLatch(1);\n@@ -150,0 +153,1 @@\n+                ready.countDown();\n@@ -155,0 +159,1 @@\n+\n@@ -156,2 +161,2 @@\n-                \/\/ give thread time to be scheduled\n-                Thread.sleep(100);\n+                \/\/ wait for thread to run\n+                ready.await();\n@@ -324,0 +329,2 @@\n+\n+            var ready = new CountDownLatch(1);\n@@ -325,0 +332,1 @@\n+                ready.countDown();\n@@ -331,1 +339,3 @@\n-            Thread.sleep(100); \/\/ give thread time to be scheduled\n+            try {\n+                \/\/ wait for thread to run\n+                ready.await();\n@@ -333,2 +343,7 @@\n-            \/\/ unpark with another virtual thread, runs on same carrier thread\n-            factory.newThread(() -> LockSupport.unpark(vthread)).start();\n+                \/\/ unpark with another virtual thread, runs on same carrier thread\n+                Thread unparker = factory.newThread(() -> LockSupport.unpark(vthread));\n+                unparker.start();\n+                unparker.join();\n+            } finally {\n+                LockSupport.unpark(vthread);  \/\/ in case test fails\n+            }\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/Reflection.java","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,2 +46,5 @@\n-    private static final Object OBJA = new Object();\n-    private static final Object OBJB = new Object();\n+    private static class ObjectA { }\n+    private static class ObjectB { }\n+\n+    private static final Object OBJA = new ObjectA();\n+    private static final Object OBJB = new ObjectB();\n@@ -68,0 +71,2 @@\n+                                            \/* Carrier Thread can hold a lock on a VirtualThread, which we ignore: *\/\n+                                            .filter(i -> !i.getLockName().contains(\"java.lang.VirtualThread\"))\n@@ -120,1 +125,1 @@\n-        String result = TM.getThreadInfo(tid).getLockName();\n+        String lockName = TM.getThreadInfo(tid).getLockName();\n@@ -125,1 +130,1 @@\n-        if (p.test(result)) {\n+        if (p.test(lockName)) {\n@@ -128,1 +133,1 @@\n-            while (p.test(result)) {\n+            while (p.test(lockName)) {\n@@ -132,1 +137,1 @@\n-                            + expectedLock + \" but got \" + result);\n+                            + expectedLock + \" but got \" + lockName);\n@@ -135,1 +140,1 @@\n-                result = TM.getThreadInfo(tid).getLockName();\n+                lockName = TM.getThreadInfo(tid).getLockName();\n@@ -139,2 +144,2 @@\n-        result = TM.getThreadInfo(tid).getLockOwnerName();\n-        final String expectedOwner = (owner != null ? owner.getName() : null);\n+        String lockOwnerName = TM.getThreadInfo(tid).getLockOwnerName();\n+        final String expectedOwnerName = (owner != null ? owner.getName() : null);\n@@ -142,3 +147,3 @@\n-        p = (res) -> ((res != null && !res.equals(expectedOwner))\n-                || (res == null && expectedOwner != null));\n-        if (p.test(result)) {\n+        p = (res) -> ((res != null && !res.equals(expectedOwnerName))\n+                || (res == null && expectedOwnerName != null));\n+        if (p.test(lockOwnerName)) {\n@@ -147,1 +152,1 @@\n-                    + expectedOwner + \" but got \" + result);\n+                    + expectedOwnerName + \" but got \" + lockOwnerName);\n@@ -345,1 +350,0 @@\n-\n@@ -352,1 +356,1 @@\n-                \/\/ Make sure the main thread is not holding any lock\n+                \/\/ Make sure the main thread is not holding any lock (except possibly a VirtualThread)\n@@ -365,0 +369,1 @@\n+\n@@ -366,1 +371,4 @@\n-                checkBlockedObject(t2, OBJC, mainThread);\n+                if (!mainThread.isVirtual()) {\n+                    \/\/ ThreadInfo not available for Virtual Threads.\n+                    checkBlockedObject(t2, OBJC, mainThread);\n+                }\n@@ -370,1 +378,1 @@\n-                long[] expectedThreads = new long[3];\n+                long[] expectedThreads = new long[mainThread.isVirtual() ? 2: 3];\n@@ -373,1 +381,4 @@\n-                expectedThreads[2] = mainThread.getId(); \/\/ owner of lockC\n+                if (!mainThread.isVirtual()) {\n+                    \/\/ ThreadInfo not available for Virtual Threads.\n+                    expectedThreads[2] = mainThread.getId(); \/\/ owner of lockC\n+                }\n@@ -403,0 +414,3 @@\n+            if (info == null) {\n+                continue; \/\/ Missing thread, e.g. completed. Ignore.\n+            }\n@@ -424,2 +438,2 @@\n-        ThreadInfo[] infos = TM.getThreadInfo(TM.getAllThreadIds());\n-        doCheck(infos, lock, expectedThreads);\n+        ThreadInfo[] allThreadInfos = TM.getThreadInfo(TM.getAllThreadIds());\n+        doCheck(allThreadInfos, lock, expectedThreads);\n@@ -428,2 +442,2 @@\n-        infos = TM.getThreadInfo(TM.getAllThreadIds(), 1);\n-        doCheck(infos, lock, expectedThreads);\n+        allThreadInfos = TM.getThreadInfo(TM.getAllThreadIds(), 1);\n+        doCheck(allThreadInfos, lock, expectedThreads);\n@@ -437,0 +451,3 @@\n+            if (info == null) {\n+                continue; \/\/ Missing thread, e.g. completed. Ignore.\n+            }\n@@ -448,0 +465,1 @@\n+        \/\/ Follow chain of locks:\n@@ -453,0 +471,7 @@\n+            log(\"ownerInfo = %s\", ownerInfo);\n+            if (ownerInfo.getThreadName().contains(\"ForkJoinPool\")) {\n+                \/\/ Ignore e.g. \"ForkJoinPool-1-worker-1\" waiting on a VirtualThread\n+                log (\"skipping %s\", ownerInfo);\n+                lock = ownerInfo.getLockName();\n+                continue;\n+            }\n@@ -471,0 +496,1 @@\n+        int failures = 0;\n@@ -477,0 +503,1 @@\n+                failures++;\n@@ -479,0 +506,3 @@\n+        if (failures > 0) {\n+            throw new RuntimeException(\"TEST FAILED: \" + failures + \" unexpected thread(s).\");\n+        }\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/Locks.java","additions":53,"deletions":23,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -1,109 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @summary Test features provided by the ReferencedKeyMap class.\n- * @modules java.base\/java.lang.runtime\n- * @enablePreview\n- * @compile --patch-module java.base=${test.src} ReferencedKeyTest.java\n- * @run main\/othervm --patch-module java.base=${test.class.path} java.lang.runtime.ReferencedKeyTest\n- *\/\n-\n-package java.lang.runtime;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.function.Supplier;\n-\n-public class ReferencedKeyTest {\n-    static long BASE_KEY = 10_000_000L;\n-\n-    public static void main(String[] args) throws Throwable {\n-        mapTest(false, HashMap::new);\n-        mapTest(true, HashMap::new);\n-        mapTest(false, ConcurrentHashMap::new);\n-        mapTest(true, ConcurrentHashMap::new);\n-    }\n-\n-    static void assertTrue(boolean test, String message) {\n-        if (!test) {\n-            throw new RuntimeException(message);\n-        }\n-    }\n-\n-    static void  mapTest(boolean isSoft, Supplier<Map<ReferenceKey<Long>, String>> supplier) {\n-        Map<Long, String> map = ReferencedKeyMap.create(isSoft, supplier);\n-        populate(map);\n-        collect();\n-        \/\/ assertTrue(map.isEmpty() || isSoft, \"Weak not collecting\");\n-        populate(map);\n-        methods(map);\n-    }\n-\n-    static void methods(Map<Long, String> map) {\n-        assertTrue(map.size() == 26, \"missing key\");\n-        assertTrue(map.containsKey(BASE_KEY + 'a' -'a'), \"missing key\");\n-        assertTrue(map.get(BASE_KEY + 'b' -'a').equals(\"b\"), \"wrong key\");\n-        assertTrue(map.containsValue(\"c\"), \"missing value\");\n-        map.remove(BASE_KEY + 'd' -'a');\n-        assertTrue(map.get(BASE_KEY + 'd' -'a') == null, \"not removed\");\n-        map.putAll(Map.of(1L, \"A\", 2L, \"B\"));\n-        assertTrue(map.get(2L).equals(\"B\"), \"collection not added\");\n-        assertTrue(map.keySet().contains(1L), \"key missing\");\n-        assertTrue(map.values().contains(\"A\"), \"key missing\");\n-        assertTrue(map.entrySet().contains(Map.entry(1L, \"A\")), \"key missing\");\n-        map.putIfAbsent(3L, \"C\");\n-        assertTrue(map.get(3L).equals(\"C\"), \"key missing\");\n-        map.putIfAbsent(2L, \"D\");\n-        assertTrue(map.get(2L).equals(\"B\"), \"key replaced\");\n-        map.remove(3L);\n-        assertTrue(map.get(3L) == null, \"key not removed\");\n-        map.replace(2L, \"D\");\n-        assertTrue(map.get(2L).equals(\"D\"), \"key not replaced\");\n-        map.replace(2L, \"B\", \"E\");\n-        assertTrue(map.get(2L).equals(\"D\"), \"key replaced\");\n-    }\n-\n-    static void collect() {\n-        System.gc();\n-        sleep();\n-    }\n-\n-    static void sleep() {\n-        try {\n-            Thread.sleep(100L);\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    static void populate(Map<Long, String> map) {\n-        for (int i = 0; i < 26; i++) {\n-            Long key = BASE_KEY + i;\n-            String value = String.valueOf((char) ('a' + i));\n-            map.put(key, value);\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/runtime\/ReferencedKeyTest.java","additions":0,"deletions":109,"binary":false,"changes":109,"status":"deleted"},{"patch":"@@ -0,0 +1,178 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n+import java.net.http.HttpResponse.BodyHandlers;\n+import java.time.Duration;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import jdk.httpclient.test.lib.common.HttpServerAdapters;\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestExchange;\n+import jdk.httpclient.test.lib.common.HttpServerAdapters.HttpTestServer;\n+import jdk.internal.net.http.common.Utils;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import static java.net.http.HttpClient.Builder.NO_PROXY;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+\n+\/*\n+ * @test\n+ * @bug 8312433\n+ * @summary verify that the HttpClient's HTTP2 idle connection management doesn't close a connection\n+ *          when that connection has been handed out from the pool to a caller\n+ * @library \/test\/jdk\/java\/net\/httpclient\/lib\n+ * @build jdk.httpclient.test.lib.common.HttpServerAdapters\n+ *\n+ * @run junit\/othervm   -Djdk.internal.httpclient.debug=true\n+ *                      -Djdk.httpclient.keepalive.timeout.h2=3\n+ *                      IdlePooledConnectionTest\n+ *\/\n+public class IdlePooledConnectionTest {\n+\n+    private static final String ALL_OK_PATH = \"\/allOK\";\n+    private static HttpTestServer h2Server;\n+    private static URI allOKUri;\n+    private static final String H2_KEEPALIVE_TIMEOUT_PROP = \"jdk.httpclient.keepalive.timeout.h2\";\n+    private static final String KEEPALIVE_TIMEOUT_PROP = \"jdk.httpclient.keepalive.timeout\";\n+\n+    @BeforeAll\n+    static void beforeAll() throws Exception {\n+        h2Server = HttpTestServer.create(HTTP_2);\n+        h2Server.addHandler(new AllOKHandler(), ALL_OK_PATH);\n+        h2Server.start();\n+        System.err.println(\"Started H2 server at \" + h2Server.serverAuthority());\n+        allOKUri = new URI(\"http:\/\/\" + h2Server.serverAuthority() + ALL_OK_PATH);\n+    }\n+\n+    @AfterAll\n+    static void afterAll() throws Exception {\n+        if (h2Server != null) {\n+            System.err.println(\"Stopping h2 server: \" + h2Server.serverAuthority());\n+            h2Server.stop();\n+        }\n+    }\n+\n+    \/\/ just returns a 200 HTTP response for all requests\n+    private static final class AllOKHandler implements HttpServerAdapters.HttpTestHandler {\n+\n+        @Override\n+        public void handle(final HttpTestExchange exchange) throws IOException {\n+            System.err.println(\"Responding with 200 response code for request \"\n+                    + exchange.getRequestURI());\n+            exchange.sendResponseHeaders(200, 0);\n+        }\n+    }\n+\n+    \/*\n+     * Issues a HTTP2 request against a server and expects it to succeed.\n+     * The connection that was used is internally pooled by the HttpClient implementation.\n+     * Then waits for the H2 idle connection timeout, before again firing several concurrent HTTP2\n+     * requests against the same server. It is expected that all these requests complete\n+     * successfully without running into a race condition where the H2 idle connection management\n+     * closes the (pooled) connection during the time connection has been handed out to a caller\n+     * and a new stream hasn't yet been created.\n+     *\/\n+    @Test\n+    public void testPooledConnection() throws Exception {\n+        final Duration h2TimeoutDuration = getEffectiveH2IdleTimeoutDuration();\n+        assertNotNull(h2TimeoutDuration, \"H2 idle connection timeout cannot be null\");\n+        \/\/ the wait time, which represents the time to wait before firing off additional requests,\n+        \/\/ is intentionally a few milliseconds smaller than the h2 idle connection timeout,\n+        \/\/ to allow for the requests to reach the place where connection checkout from the pool\n+        \/\/ happens and thus allow the code to race with the idle connection timer task\n+        \/\/ closing the connection.\n+        final long waitTimeMillis = TimeUnit.of(ChronoUnit.MILLIS).convert(h2TimeoutDuration) - 5;\n+        try (final HttpClient client = HttpClient.newBuilder().proxy(NO_PROXY).build()) {\n+            final HttpRequest request = HttpRequest.newBuilder(allOKUri)\n+                    .GET().version(HTTP_2).build();\n+            \/\/ keep ready the additional concurrent requests that we will fire later.\n+            \/\/ we do this now so that when it's time to fire off these additional requests,\n+            \/\/ this main thread does as little work as possible to increase the chances of a\n+            \/\/ race condition in idle connection management closing a pooled connection\n+            \/\/ and new requests being fired\n+            final Callable<HttpResponse<Void>> task = () -> client.send(request,\n+                    BodyHandlers.discarding());\n+            final List<Callable<HttpResponse<Void>>> tasks = new ArrayList<>();\n+            final int numAdditionalReqs = 20;\n+            for (int i = 0; i < numAdditionalReqs; i++) {\n+                tasks.add(task);\n+            }\n+            \/\/ issue the first request\n+            System.err.println(\"issuing first request: \" + request);\n+            final HttpResponse<Void> firstResp = client.send(request, BodyHandlers.discarding());\n+            assertEquals(200, firstResp.statusCode(), \"unexpected response code for request \"\n+                    + request);\n+            System.err.println(\"waiting for \" + waitTimeMillis + \" milli seconds\" +\n+                    \" before issuing additional requests\");\n+            Thread.sleep(waitTimeMillis);\n+            \/\/ issue additional concurrent requests\n+            final List<Future<HttpResponse<Void>>> responses;\n+            try (final ExecutorService executor = Executors.newFixedThreadPool(numAdditionalReqs)) {\n+                responses = executor.invokeAll(tasks);\n+            }\n+            System.err.println(\"All \" + responses.size() + \" requests completed, now\" +\n+                    \" verifying each response\");\n+            \/\/ verify all requests succeeded\n+            for (final Future<HttpResponse<Void>> future : responses) {\n+                final HttpResponse<Void> rsp = future.get();\n+                assertEquals(200, rsp.statusCode(), \"unexpected response code for request \"\n+                        + request);\n+            }\n+        }\n+    }\n+\n+    \/\/ returns the effective idle timeout duration of a HTTP2 connection\n+    private static Duration getEffectiveH2IdleTimeoutDuration() {\n+        final long keepAliveTimeoutInSecs = getNetProp(KEEPALIVE_TIMEOUT_PROP, 30);\n+        final long h2TimeoutInSecs = getNetProp(H2_KEEPALIVE_TIMEOUT_PROP, keepAliveTimeoutInSecs);\n+        return Duration.of(h2TimeoutInSecs, ChronoUnit.SECONDS);\n+    }\n+\n+    private static long getNetProp(final String prop, final long def) {\n+        final String s = Utils.getNetProperty(prop);\n+        if (s == null) {\n+            return def;\n+        }\n+        try {\n+            final long timeoutVal = Long.parseLong(s);\n+            return timeoutVal >= 0 ? timeoutVal : def;\n+        } catch (NumberFormatException ignored) {\n+            return def;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/IdlePooledConnectionTest.java","additions":178,"deletions":0,"binary":false,"changes":178,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 8054029\n+ * @bug 8054029 8313368\n@@ -28,0 +28,1 @@\n+ * @run main\/manual BlockDeviceSize\n@@ -59,2 +60,2 @@\n-            System.err.println(\"Access to \" + BLK_FNAME + \" is denied.\" +\n-                    \" Run test as root.\");\n+            throw new RuntimeException(\"Access to \" + BLK_FNAME + \" is denied.\"\n+                    + \" Run test as root.\", ade);\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/BlockDeviceSize.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+import java.util.Locale;\n+\n@@ -310,1 +312,1 @@\n-        assertEquals(expected, String.format(format, value));\n+        assertEquals(expected, String.format(Locale.US, format, value));\n","filename":"test\/jdk\/java\/util\/Formatter\/Padding.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run junit\/othervm -Djava.locale.providers=CLDR Bug8179071\n+ * @run junit\/othervm -Djava.locale.providers=CLDR AliasesShouldBeRecognizedInCLDR\n@@ -52,1 +52,1 @@\n-public class Bug8179071 {\n+public class AliasesShouldBeRecognizedInCLDR {\n","filename":"test\/jdk\/java\/util\/Locale\/AliasesShouldBeRecognizedInCLDR.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug8179071.java","status":"renamed"},{"patch":"@@ -1,76 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\/*\n- * @test\n- * @bug 4152725\n- * @summary Verify that the default locale can be specified from the\n- * command line.\n- * @run main\/othervm -Duser.language=de -Duser.country=DE -Duser.variant=EURO\n- *      Bug4152725 de_DE_EURO\n- * @run main\/othervm -Duser.language=ja -Duser.country= -Duser.variant=\n- *      Bug4152725 ja\n- * @run main\/othervm -Duser.language=en -Duser.country=SG -Duser.variant=\n- *      Bug4152725 en_SG\n- * @run main\/othervm -Duser.language= -Duser.country=DE -Duser.variant=EURO\n- *      Bug4152725 _DE_EURO\n- * @run main\/othervm -Duser.language=ja -Duser.country= -Duser.variant=YOMI\n- *      Bug4152725 ja__YOMI\n- * @run main\/othervm -Duser.language= -Duser.country= -Duser.variant=EURO\n- *      Bug4152725 __EURO\n- * @run main\/othervm -Duser.language=de -Duser.region=DE_EURO\n- *      Bug4152725 de_DE_EURO\n- *\/\n-\n-import java.util.Locale;\n-\n-public class Bug4152725 {\n-\n-    public static void main(String[] args) {\n-\n-        if (args.length != 1) {\n-            throw new RuntimeException(\"expected locale needs to be specified\");\n-        }\n-\n-        Locale locale = Locale.getDefault();\n-\n-        \/\/ don't use Locale.toString - it's bogus\n-        String language = locale.getLanguage();\n-        String country = locale.getCountry();\n-        String variant = locale.getVariant();\n-        String localeID = null;\n-        if (variant.length() > 0) {\n-            localeID = language + \"_\" + country + \"_\" + variant;\n-        } else if (country.length() > 0) {\n-            localeID = language + \"_\" + country;\n-        } else {\n-            localeID = language;\n-        }\n-\n-        if (localeID.equals(args[0])) {\n-            System.out.println(\"Correctly set from command line: \" + localeID);\n-        } else {\n-            throw new RuntimeException(\"expected default locale: \" + args[0]\n-                    + \", actual default locale: \" + localeID);\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4152725.java","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @run main Bug4518797 10\n+ * @run main HashCodeShouldBeThreadSafe 10\n@@ -30,2 +30,6 @@\n-import java.util.*;\n-import java.io.*;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.Locale;\n@@ -33,2 +37,2 @@\n-\/\/ Usage: java Bug4518797 [duration]\n-public class Bug4518797 {\n+\/\/ Usage: java HashCodeShouldBeThreadSafe [duration]\n+public class HashCodeShouldBeThreadSafe {\n","filename":"test\/jdk\/java\/util\/Locale\/HashCodeShouldBeThreadSafe.java","additions":10,"deletions":6,"binary":false,"changes":16,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug4518797.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+    @bug 4184873\n@@ -27,2 +28,1 @@\n-    @run main Bug4184873Test\n-    @bug 4184873\n+    @run main LegacyCodesClassInvariant\n@@ -64,2 +64,6 @@\n-import java.util.*;\n-import java.io.*;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.Locale;\n@@ -70,1 +74,1 @@\n-public class Bug4184873Test extends IntlTest {\n+public class LegacyCodesClassInvariant extends IntlTest {\n@@ -75,1 +79,1 @@\n-            new Bug4184873Test().run(args);\n+            new LegacyCodesClassInvariant().run(args);\n@@ -107,1 +111,1 @@\n-            final File f = new File(System.getProperty(\"test.src\", \".\"), \"Bug4184873_\"+lang);\n+            final File f = new File(System.getProperty(\"test.src\", \".\"), \"LegacyCodesClassInvariant_\"+lang);\n@@ -128,1 +132,1 @@\n-                    new FileOutputStream(\"Bug4184873_\"+lang));\n+                    new FileOutputStream(\"LegacyCodesClassInvariant_\"+lang));\n","filename":"test\/jdk\/java\/util\/Locale\/LegacyCodesClassInvariant.java","additions":13,"deletions":9,"binary":false,"changes":22,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug4184873Test.java","status":"renamed"},{"patch":"","filename":"test\/jdk\/java\/util\/Locale\/LegacyCodesClassInvariant_he","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug4184873_he","status":"renamed"},{"patch":"","filename":"test\/jdk\/java\/util\/Locale\/LegacyCodesClassInvariant_id","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug4184873_id","status":"renamed"},{"patch":"","filename":"test\/jdk\/java\/util\/Locale\/LegacyCodesClassInvariant_yi","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug4184873_yi","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @run testng\/othervm Bug7069824\n+ * @run testng\/othervm LocaleMatchingTest\n@@ -31,2 +31,10 @@\n-import java.util.*;\n-import java.util.Locale.*;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Locale.FilteringMode;\n+import java.util.Locale.LanguageRange;\n+import java.util.Map;\n+\n@@ -40,1 +48,1 @@\n-public class Bug7069824 {\n+public class LocaleMatchingTest {\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleMatchingTest.java","additions":13,"deletions":5,"binary":false,"changes":18,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug7069824.java","status":"renamed"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4152725\n+ * @summary Verify that the default locale can be specified from the\n+ * command line.\n+ * @run main\/othervm -Duser.language=de -Duser.country=DE -Duser.variant=EURO\n+ *      LocaleShouldSetFromCLI de_DE_EURO\n+ * @run main\/othervm -Duser.language=ja -Duser.country= -Duser.variant=\n+ *      LocaleShouldSetFromCLI ja\n+ * @run main\/othervm -Duser.language=en -Duser.country=SG -Duser.variant=\n+ *      LocaleShouldSetFromCLI en_SG\n+ * @run main\/othervm -Duser.language= -Duser.country=DE -Duser.variant=EURO\n+ *      LocaleShouldSetFromCLI _DE_EURO\n+ * @run main\/othervm -Duser.language=ja -Duser.country= -Duser.variant=YOMI\n+ *      LocaleShouldSetFromCLI ja__YOMI\n+ * @run main\/othervm -Duser.language= -Duser.country= -Duser.variant=EURO\n+ *      LocaleShouldSetFromCLI __EURO\n+ * @run main\/othervm -Duser.language=de -Duser.region=DE_EURO\n+ *      LocaleShouldSetFromCLI de_DE_EURO\n+ *\/\n+\n+import java.util.Locale;\n+\n+public class LocaleShouldSetFromCLI {\n+\n+    public static void main(String[] args) {\n+\n+        if (args.length != 1) {\n+            throw new RuntimeException(\"expected locale needs to be specified\");\n+        }\n+\n+        Locale locale = Locale.getDefault();\n+\n+        \/\/ don't use Locale.toString - it's bogus\n+        String language = locale.getLanguage();\n+        String country = locale.getCountry();\n+        String variant = locale.getVariant();\n+        String localeID = null;\n+        if (variant.length() > 0) {\n+            localeID = language + \"_\" + country + \"_\" + variant;\n+        } else if (country.length() > 0) {\n+            localeID = language + \"_\" + country;\n+        } else {\n+            localeID = language;\n+        }\n+\n+        if (localeID.equals(args[0])) {\n+            System.out.println(\"Correctly set from command line: \" + localeID);\n+        } else {\n+            throw new RuntimeException(\"expected default locale: \" + args[0]\n+                    + \", actual default locale: \" + localeID);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleShouldSetFromCLI.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -29,1 +29,1 @@\n- * @run junit Bug8135061\n+ * @run junit LookupOnValidRangeTest\n@@ -43,1 +43,1 @@\n-public class Bug8135061 {\n+public class LookupOnValidRangeTest {\n","filename":"test\/jdk\/java\/util\/Locale\/LookupOnValidRangeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug8135061.java","status":"renamed"},{"patch":"@@ -28,1 +28,1 @@\n- * @run junit Bug8035133\n+ * @run junit MatchEmptyWeightCorrectly\n@@ -43,1 +43,1 @@\n-public class Bug8035133 {\n+public class MatchEmptyWeightCorrectly {\n","filename":"test\/jdk\/java\/util\/Locale\/MatchEmptyWeightCorrectly.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug8035133.java","status":"renamed"},{"patch":"@@ -30,2 +30,2 @@\n- * @compile -XDignore.symbol.file=true Bug6989440.java\n- * @run junit Bug6989440\n+ * @compile -XDignore.symbol.file=true ProviderPoolMultiThreadAccess.java\n+ * @run junit ProviderPoolMultiThreadAccess\n@@ -42,1 +42,1 @@\n-public class Bug6989440 {\n+public class ProviderPoolMultiThreadAccess {\n","filename":"test\/jdk\/java\/util\/Locale\/ProviderPoolMultiThreadAccess.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug6989440.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8166884\n+ * @bug 8166994\n@@ -31,1 +31,1 @@\n- * @run junit Bug8166994\n+ * @run junit SubsequentRangeParsingTest\n@@ -46,1 +46,1 @@\n-public class Bug8166994 {\n+public class SubsequentRangeParsingTest {\n","filename":"test\/jdk\/java\/util\/Locale\/SubsequentRangeParsingTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug8166994.java","status":"renamed"},{"patch":"@@ -34,2 +34,2 @@\n- * @compile -encoding utf-8 Bug8159420.java\n- * @run junit\/othervm -Duser.language=tr -Duser.country=TR Bug8159420\n+ * @compile -encoding utf-8 TurkishLangRangeTest.java\n+ * @run junit\/othervm -Duser.language=tr -Duser.country=TR TurkishLangRangeTest\n@@ -61,1 +61,1 @@\n-public class Bug8159420 {\n+public class TurkishLangRangeTest {\n","filename":"test\/jdk\/java\/util\/Locale\/TurkishLangRangeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/jdk\/java\/util\/Locale\/Bug8159420.java","status":"renamed"},{"patch":"@@ -1,1 +0,0 @@\n-<APPLET CODE=\"bug4123285.class\" CODEBASE=\".\/\" WIDTH=\"250\" HEIGHT=\"325\" ALIGN=\"TOP\"><\/APPLET>\n","filename":"test\/jdk\/java\/util\/Locale\/bug4123285.html","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-import java.util.Locale;\n-\n-public class bug4123285 extends java.applet.Applet {\n-    public void start() {\n-        System.out.println(\"Hello, world!\");\n-        Locale[] systemLocales = null;\n-        try {\n-            System.out.println(\"Default locale = \" + Locale.getDefault());\n-            systemLocales = Locale.getAvailableLocales();\n-            System.out.println(\"Found \" + systemLocales.length + \" locales:\");\n-            Locale[] locales = new Locale[systemLocales.length];\n-            for (int i = 0; i < locales.length; i++) {\n-                Locale lowest = null;\n-                for (int j = 0; j < systemLocales.length; j++) {\n-                    if (i > 0 && locales[i - 1].toString().compareTo(systemLocales[j].toString()) >= 0)\n-                       continue;\n-                    if (lowest == null || systemLocales[j].toString().compareTo(lowest.toString()) < 0)\n-                       lowest = systemLocales[j];\n-                }\n-                locales[i] = lowest;\n-            }\n-            for (int i = 0; i < locales.length; i++) {\n-                if (locales[i].getCountry().length() == 0)\n-                   System.out.println(\"    \" + locales[i].getDisplayLanguage() + \":\");\n-                else {\n-                    if (locales[i].getVariant().length() == 0)\n-                       System.out.println(\"        \" + locales[i].getDisplayCountry());\n-                    else\n-                        System.out.println(\"        \" + locales[i].getDisplayCountry() + \", \"\n-                                    + locales[i].getDisplayVariant());\n-                }\n-            }\n-        }\n-        catch (Exception e) {\n-            e.printStackTrace();\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/util\/Locale\/bug4123285.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,2 @@\n-            int port = 5800;\n-            while (port++ < 6000) {\n+            int port = 5820;\n+            while (port++ < 5840) {\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/passwordAuthenticator\/RMIAltAuthTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-            while (port++ < 6000) {\n+            while (port++ < 5820) {\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/passwordAuthenticator\/RMIPasswdAuthTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,2 +61,2 @@\n-            int port = 5800;\n-            while (port++ < 6000) {\n+            int port = 5840;\n+            while (port++ < 5860) {\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/socketFactories\/RMISocketFactoriesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,2 +79,2 @@\n-            int port = 5800;\n-            while (port++ < 6000) {\n+            int port = 5860;\n+            while (port++ < 5880) {\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/SubjectDelegation1Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,2 +75,2 @@\n-            int port = 5800;\n-            while (port++ < 6000) {\n+            int port = 5880;\n+            while (port++ < 5900) {\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/SubjectDelegation2Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,2 +79,2 @@\n-            int port = 5800;\n-            while (port++ < 6000) {\n+            int port = 5900;\n+            while (port++ < 5920) {\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/subjectDelegation\/SubjectDelegation3Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,272 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, BELLSOFT. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug JDK-8311033\n+ * @summary [macos] PrinterJob does not take into account Sides attribute\n+ * @run main\/manual SidesAttributeTest\n+ *\/\n+\n+import javax.print.PrintService;\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.HashPrintRequestAttributeSet;\n+import javax.print.attribute.PrintRequestAttributeSet;\n+import javax.print.attribute.standard.Sides;\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.print.PageFormat;\n+import java.awt.print.Printable;\n+import java.awt.print.PrinterException;\n+import java.awt.print.PrinterJob;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class SidesAttributeTest {\n+\n+    private static final long TIMEOUT = 10 * 60_000;\n+    private static volatile boolean testPassed = true;\n+    private static volatile boolean testFinished = false;\n+    private static volatile boolean timeout = false;\n+\n+    private static volatile int testCount;\n+    private static volatile int testTotalCount;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SwingUtilities.invokeLater(() -> {\n+\n+            Set<Attribute> supportedSides = getSupportedSidesAttributes();\n+            if (supportedSides.size() > 1) {\n+                testTotalCount = supportedSides.size();\n+                testPrint(Sides.ONE_SIDED, supportedSides);\n+                testPrint(Sides.DUPLEX, supportedSides);\n+                testPrint(Sides.TUMBLE, supportedSides);\n+            }\n+            testFinished = true;\n+        });\n+\n+        long time = System.currentTimeMillis() + TIMEOUT;\n+\n+        while (System.currentTimeMillis() < time) {\n+            if (!testPassed || testFinished) {\n+                break;\n+            }\n+            Thread.sleep(500);\n+        }\n+\n+        timeout = true;\n+\n+        closeDialogs();\n+\n+        if (!testPassed) {\n+            throw new Exception(\"Test failed!\");\n+        }\n+\n+        if (testCount != testTotalCount) {\n+            throw new Exception(\n+                    \"Timeout: \" + testCount + \" tests passed out from \" + testTotalCount);\n+        }\n+    }\n+\n+    private static void print(Sides sides) throws PrinterException {\n+        PrintRequestAttributeSet attr = new HashPrintRequestAttributeSet();\n+        attr.add(sides);\n+\n+        for (Attribute attribute : attr.toArray()) {\n+            System.out.printf(\"Used print request attribute: %s%n\", attribute);\n+        }\n+\n+        PrinterJob job = PrinterJob.getPrinterJob();\n+        job.setPrintable(new SidesAttributePrintable(sides));\n+\n+        job.print(attr);\n+    }\n+\n+    private static class SidesAttributePrintable implements Printable {\n+\n+        private final Sides sidesAttr;\n+\n+        public SidesAttributePrintable(Sides sidesAttr) {\n+            this.sidesAttr = sidesAttr;\n+        }\n+\n+        @Override\n+        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {\n+\n+            if (pageIndex >= 2) {\n+                return NO_SUCH_PAGE;\n+            }\n+\n+            int x = (int) (pageFormat.getImageableX() + pageFormat.getImageableWidth() \/ 10);\n+            int y = (int) (pageFormat.getImageableY() + pageFormat.getImageableHeight() \/ 5);\n+\n+            Graphics2D g = (Graphics2D) graphics;\n+            String text = getPageText(sidesAttr, pageIndex + 1);\n+            g.drawString(text, x, y);\n+            return PAGE_EXISTS;\n+        }\n+    }\n+\n+    private static String getPageText(Sides sides, int page) {\n+        return String.format(\"Page: %d - %s\", page, getSidesText(sides));\n+    }\n+\n+    private static String getSidesText(Sides sides) {\n+        if (Sides.ONE_SIDED.equals(sides)) {\n+            return \"ONE_SIDED\";\n+        } else if (Sides.TWO_SIDED_SHORT_EDGE.equals(sides)) {\n+            return \"TWO_SIDED_SHORT_EDGE (TUMBLE)\";\n+        } else if (Sides.TWO_SIDED_LONG_EDGE.equals(sides)) {\n+            return \"TWO_SIDED_LONG_EDGE (DUPLEX)\";\n+        }\n+        throw new RuntimeException(\"Unknown sides attribute: \" + sides);\n+    }\n+\n+    private static String getSidesDescription(Sides sides) {\n+        if (Sides.ONE_SIDED.equals(sides)) {\n+            return \"a one-sided document\";\n+        } else if (Sides.TWO_SIDED_SHORT_EDGE.equals(sides)) {\n+            return \"double-sided document along the short edge of the paper\";\n+        } else if (Sides.TWO_SIDED_LONG_EDGE.equals(sides)) {\n+            return \"double-sided document along the long edge of the paper\";\n+        }\n+        throw new RuntimeException(\"Unknown sides attribute: \" + sides);\n+    }\n+\n+    private static Set<Attribute> getSupportedSidesAttributes() {\n+        Set<Attribute> supportedSides = new HashSet<>();\n+\n+        PrinterJob printerJob = PrinterJob.getPrinterJob();\n+        PrintService service = printerJob.getPrintService();\n+\n+        Object obj = service.getSupportedAttributeValues(Sides.class, null, null);\n+        if (obj instanceof Attribute[]) {\n+            Attribute[] attr = (Attribute[]) obj;\n+            Collections.addAll(supportedSides, attr);\n+        }\n+\n+        return supportedSides;\n+    }\n+\n+    private static void pass() {\n+        testCount++;\n+    }\n+\n+    private static void fail(Sides sides) {\n+        System.out.printf(\"Failed test: %s%n\", getSidesText(sides));\n+        testPassed = false;\n+    }\n+\n+    private static void runPrint(Sides sides) {\n+        try {\n+            print(sides);\n+        } catch (PrinterException e) {\n+            fail(sides);\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    private static void testPrint(Sides sides, Set<Attribute> supportedSides) {\n+\n+        if (!supportedSides.contains(sides) || !testPassed || timeout) {\n+            return;\n+        }\n+\n+        String[] instructions = {\n+                \"Up to \" + testTotalCount + \" tests will run and it will test all the cases\",\n+                \"supported by the printer.\",\n+                \"\",\n+                \"The test is \" + (testCount + 1) + \" from \" + testTotalCount + \".\",\n+                \"\",\n+                \"On-screen inspection is not possible for this printing-specific\",\n+                \"test therefore its only output is two printed pages (one or two sided).\",\n+                \"To be able to run this test it is required to have a default\",\n+                \"printer configured in your user environment.\",\n+                \"\",\n+                \"Visual inspection of the printed pages is needed.\",\n+                \"A passing test will print 2 pages:\",\n+                \"  - the first page with the text: \" + getPageText(sides, 1),\n+                \"  - the second page with the text: \" + getPageText(sides, 2),\n+                \"\",\n+                \"The test fails if the pages are not printed according to the tested\",\n+                getSidesText(sides) + \" attribute where \" + getSidesDescription(sides),\n+                \"needs to be printed.\",\n+                \"\",\n+        };\n+\n+        String title = String.format(\"Print %s sides test: %d from %d\",\n+                getSidesText(sides), testCount + 1, testTotalCount);\n+        final JDialog dialog = new JDialog((Frame) null, title, Dialog.ModalityType.DOCUMENT_MODAL);\n+        JTextArea textArea = new JTextArea(String.join(\"\\n\", instructions));\n+        textArea.setEditable(false);\n+        final JButton testButton = new JButton(\"Start Test\");\n+        final JButton passButton = new JButton(\"PASS\");\n+        passButton.setEnabled(false);\n+        passButton.addActionListener((e) -> {\n+            pass();\n+            dialog.dispose();\n+        });\n+        final JButton failButton = new JButton(\"FAIL\");\n+        failButton.setEnabled(false);\n+        failButton.addActionListener((e) -> {\n+            fail(sides);\n+            dialog.dispose();\n+        });\n+        testButton.addActionListener((e) -> {\n+            testButton.setEnabled(false);\n+            runPrint(sides);\n+            passButton.setEnabled(true);\n+            failButton.setEnabled(true);\n+        });\n+\n+        JPanel mainPanel = new JPanel(new BorderLayout());\n+        mainPanel.add(textArea, BorderLayout.CENTER);\n+        JPanel buttonPanel = new JPanel(new FlowLayout());\n+        buttonPanel.add(testButton);\n+        buttonPanel.add(passButton);\n+        buttonPanel.add(failButton);\n+        mainPanel.add(buttonPanel, BorderLayout.SOUTH);\n+        dialog.add(mainPanel);\n+        dialog.pack();\n+        dialog.setVisible(true);\n+        dialog.addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowClosing(WindowEvent e) {\n+                System.out.println(\"Dialog closing\");\n+                fail(sides);\n+            }\n+        });\n+    }\n+\n+    private static void closeDialogs() {\n+        for (Window w : Dialog.getWindows()) {\n+            w.dispose();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/print\/attribute\/SidesAttributeTest.java","additions":272,"deletions":0,"binary":false,"changes":272,"status":"added"},{"patch":"@@ -0,0 +1,175 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8285932 8310913\n+ * @summary Test features provided by the ReferencedKeyMap\/ReferencedKeySet classes.\n+ * @modules java.base\/jdk.internal.util\n+ * @compile --patch-module java.base=${test.src} ReferencedKeyTest.java\n+ * @run main\/othervm --patch-module java.base=${test.class.path} jdk.internal.util.ReferencedKeyTest\n+ *\/\n+\n+package jdk.internal.util;\n+\n+import java.lang.ref.PhantomReference;\n+import java.lang.ref.Reference;\n+import java.lang.ref.ReferenceQueue;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.function.BooleanSupplier;\n+import java.util.function.Supplier;\n+\n+public class ReferencedKeyTest {\n+    static long BASE_KEY = 10_000_000L;\n+\n+    public static void main(String[] args) {\n+        mapTest(false, HashMap::new);\n+        mapTest(true, HashMap::new);\n+        mapTest(false, ConcurrentHashMap::new);\n+        mapTest(true, ConcurrentHashMap::new);\n+\n+        setTest(false, HashMap::new);\n+        setTest(true, HashMap::new);\n+        setTest(false, ConcurrentHashMap::new);\n+        setTest(true, ConcurrentHashMap::new);\n+    }\n+\n+    static void assertTrue(boolean test, String message) {\n+        if (!test) {\n+            throw new RuntimeException(message);\n+        }\n+    }\n+\n+    static void mapTest(boolean isSoft, Supplier<Map<ReferenceKey<Long>, String>> supplier) {\n+        Map<Long, String> map = ReferencedKeyMap.create(isSoft, supplier);\n+        populate(map);\n+        if (!isSoft) {\n+            if (!collect(() -> map.isEmpty())) {\n+                throw new RuntimeException(\"WeakReference map not collecting!\");\n+            }\n+        }\n+        populate(map);\n+        methods(map);\n+    }\n+\n+    static void setTest(boolean isSoft, Supplier<Map<ReferenceKey<Long>, ReferenceKey<Long>>> supplier) {\n+        ReferencedKeySet<Long> set = ReferencedKeySet.create(isSoft, supplier);\n+        populate(set);\n+        if (!isSoft) {\n+            if (!collect(() -> set.isEmpty())) {\n+                throw new RuntimeException(\"WeakReference set not collecting!\");\n+            }\n+        }\n+        populate(set);\n+        methods(set);\n+    }\n+\n+    static void methods(Map<Long, String> map) {\n+        assertTrue(map.size() == 26, \"missing key\");\n+        assertTrue(map.containsKey(BASE_KEY + 'a' -'a'), \"missing key\");\n+        assertTrue(map.get(BASE_KEY + 'b' -'a').equals(\"b\"), \"wrong key\");\n+        assertTrue(map.containsValue(\"c\"), \"missing value\");\n+        map.remove(BASE_KEY + 'd' -'a');\n+        assertTrue(map.get(BASE_KEY + 'd' -'a') == null, \"not removed\");\n+        map.putAll(Map.of(1L, \"A\", 2L, \"B\"));\n+        assertTrue(map.get(2L).equals(\"B\"), \"collection not added\");\n+        assertTrue(map.containsKey(1L), \"key missing\");\n+        assertTrue(map.containsValue(\"A\"), \"key missing\");\n+        assertTrue(map.entrySet().contains(Map.entry(1L, \"A\")), \"key missing\");\n+        map.putIfAbsent(3L, \"C\");\n+        assertTrue(map.get(3L).equals(\"C\"), \"key missing\");\n+        map.putIfAbsent(2L, \"D\");\n+        assertTrue(map.get(2L).equals(\"B\"), \"key replaced\");\n+        map.remove(3L);\n+        assertTrue(map.get(3L) == null, \"key not removed\");\n+        map.replace(2L, \"D\");\n+        assertTrue(map.get(2L).equals(\"D\"), \"key not replaced\");\n+        map.replace(2L, \"B\", \"E\");\n+        assertTrue(map.get(2L).equals(\"D\"), \"key replaced\");\n+    }\n+\n+    static void methods(ReferencedKeySet<Long> set) {\n+        assertTrue(set.size() == 26, \"missing key\");\n+        assertTrue(set.contains(BASE_KEY + 3), \"missing key\");\n+        set.remove(BASE_KEY + 3);\n+        assertTrue(!set.contains(BASE_KEY + 3), \"not removed\");\n+        Long element1 = set.get(BASE_KEY + 2);\n+        Long element2 = set.get(BASE_KEY + 3);\n+        Long element3 = set.get(BASE_KEY + 4);\n+        Long intern1 = set.intern(BASE_KEY + 2);\n+        Long intern2 = set.intern(BASE_KEY + 3);\n+        Long intern3 = set.intern(BASE_KEY + 4, e -> e);\n+        assertTrue(element1 != null, \"missing key\");\n+        assertTrue(element2 == null, \"not removed\");\n+        assertTrue(element1 == intern1, \"intern failed\"); \/\/ must be same object\n+        assertTrue(intern2 != null, \"intern failed\");\n+        assertTrue(element3 == intern3, \"intern failed\");\n+    }\n+\n+    \/\/ Borrowed from jdk.test.lib.util.ForceGC but couldn't use from java.base\/jdk.internal.util\n+    static boolean collect(BooleanSupplier booleanSupplier) {\n+        ReferenceQueue<Object> queue = new ReferenceQueue<>();\n+        Object obj = new Object();\n+        PhantomReference<Object> ref = new PhantomReference<>(obj, queue);\n+        obj = null;\n+        Reference.reachabilityFence(obj);\n+        Reference.reachabilityFence(ref);\n+        long timeout = 1000L;\n+        long quanta = 200L;\n+        long retries = timeout \/ quanta;\n+\n+        for (; retries >= 0; retries--) {\n+            if (booleanSupplier.getAsBoolean()) {\n+                return true;\n+            }\n+\n+            System.gc();\n+\n+            try {\n+                queue.remove(quanta);\n+            } catch (InterruptedException ie) {\n+                \/\/ ignore, the loop will try again\n+            }\n+        }\n+\n+        return booleanSupplier.getAsBoolean();\n+    }\n+\n+    static void populate(Map<Long, String> map) {\n+        for (int i = 0; i < 26; i++) {\n+            Long key = BASE_KEY + i;\n+            String value = String.valueOf((char) ('a' + i));\n+            map.put(key, value);\n+        }\n+    }\n+\n+    static void populate(Set<Long> set) {\n+        for (int i = 0; i < 26; i++) {\n+            Long value = BASE_KEY + i;\n+            set.add(value);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/internal\/util\/ReferencedKeyTest.java","additions":175,"deletions":0,"binary":false,"changes":175,"status":"added"},{"patch":"@@ -62,1 +62,1 @@\n- * @run main\/othervm jdk.jfr.jvm.TestChunkIntegrity\n+ * @run main\/othervm\/timeout=300 jdk.jfr.jvm.TestChunkIntegrity\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestChunkIntegrity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8302017\n+ * @summary Ensure that RSAPadding class works as expected after refactoring\n+ * @modules java.base\/sun.security.rsa\n+ *\/\n+import java.util.Arrays;\n+import sun.security.rsa.RSAPadding;\n+\n+public class RSAPaddingCheck {\n+\n+    private static int[] PADDING_TYPES =  {\n+        RSAPadding.PAD_BLOCKTYPE_1,\n+        RSAPadding.PAD_BLOCKTYPE_2,\n+        RSAPadding.PAD_NONE,\n+        RSAPadding.PAD_OAEP_MGF1,\n+    };\n+\n+    public static void main(String[] args) throws Exception {\n+        int size = 2048 >> 3;\n+        byte[] testData = \"This is some random to-be-padded Data\".getBytes();\n+        for (int type : PADDING_TYPES) {\n+            byte[] data = (type == RSAPadding.PAD_NONE?\n+                    Arrays.copyOf(testData, size) : testData);\n+            System.out.println(\"Testing PaddingType: \" + type);\n+            RSAPadding padding = RSAPadding.getInstance(type, size);\n+            byte[] paddedData = padding.pad(data);\n+            if (paddedData == null) {\n+                throw new RuntimeException(\"Unexpected padding op failure!\");\n+            }\n+\n+            byte[] data2 = padding.unpad(paddedData);\n+            if (data2 == null) {\n+                throw new RuntimeException(\"Unexpected unpadding op failure!\");\n+            }\n+            if (!Arrays.equals(data, data2)) {\n+                throw new RuntimeException(\"diff check failure!\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/rsa\/RSAPaddingCheck.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 6994753 7123582 8305950 8281658 8310201\n+ * @bug 6994753 7123582 8305950 8281658 8310201 8311653\n@@ -79,1 +79,1 @@\n-    private static final String BAD_SEC_OPTION_MSG = \"Unrecognized security subcommand\";\n+    private static final String BAD_SEC_OPTION_MSG = \"Valid \\\"security\\\" suboption values are\";\n@@ -81,0 +81,1 @@\n+    private static final String METRICS_NOT_AVAILABLE_MSG = \"No metrics available for this platform\";\n@@ -83,0 +84,1 @@\n+    private static final String ERR_MSG = \"Unrecognized showSettings option:\";\n@@ -84,0 +86,3 @@\n+    \/*\n+     * \"all\" should print verbose settings\n+     *\/\n@@ -85,0 +90,22 @@\n+        checkContains(tr, VM_SETTINGS);\n+        checkContains(tr, PROP_SETTINGS);\n+        checkContains(tr, LOCALE_SETTINGS);\n+        checkContains(tr, AVAILABLE_LOCALES);\n+        checkNotContains(tr, LOCALE_SUMMARY_SETTINGS);\n+        checkContains(tr, SEC_PROPS_SETTINGS);\n+        checkNotContains(tr, SEC_SUMMARY_PROPS_SETTINGS);\n+        checkContains(tr, SEC_PROVIDER_SETTINGS);\n+        checkContains(tr, SEC_TLS_SETTINGS);\n+        checkContains(tr, TZDATA_SETTINGS);\n+        if (System.getProperty(\"os.name\").contains(\"Linux\")) {\n+            checkContains(tr, SYSTEM_SETTINGS);\n+        } else {\n+            \/\/ only invoke system option by default on Linux\n+            checkNotContains(tr, METRICS_NOT_AVAILABLE_MSG);\n+        }\n+    }\n+    \/*\n+     * default (no options) should print non verbose\n+     * details on each component\n+     *\/\n+    static void containsDefaultOptions(TestResult tr) {\n@@ -90,1 +117,1 @@\n-        \/\/ no verbose security settings unless \"security\" used\n+        \/\/ no verbose security settings unless \"security\" or \"all\" used\n@@ -98,0 +125,3 @@\n+        } else {\n+            \/\/ only invoke system option by default on Linux\n+            checkNotContains(tr, METRICS_NOT_AVAILABLE_MSG);\n@@ -121,1 +151,1 @@\n-        containsAllOptions(tr);\n+        containsDefaultOptions(tr);\n@@ -129,1 +159,1 @@\n-        containsAllOptions(tr);\n+        containsDefaultOptions(tr);\n@@ -208,0 +238,1 @@\n+        tr.checkNegative();\n@@ -222,3 +253,4 @@\n-            \/\/ -XshowSettings prints all available settings when\n-            \/\/ settings argument is not recognized.\n-            containsAllOptions(tr);\n+            \/\/ \"system\" should print a \"No metrics available\"\n+            \/\/ message on other OSes\n+            checkNotContains(tr, VM_SETTINGS);\n+            checkContains(tr, METRICS_NOT_AVAILABLE_MSG);\n@@ -230,0 +262,1 @@\n+        tr.checkNegative();\n@@ -234,0 +267,30 @@\n+\n+        \/\/ no such component option\n+        tr = doExec(javaCmd, \"-XshowSettings:BadOption\");\n+        tr.checkNegative();\n+        checkNotContains(tr, VM_SETTINGS);\n+        checkNotContains(tr, PROP_SETTINGS);\n+        checkNotContains(tr, LOCALE_SETTINGS);\n+        checkContains(tr, ERR_MSG);\n+\n+        \/\/ don't allow invalid sub options\n+        tr = doExec(javaCmd, \"-XshowSettings:locale:bad\");\n+        tr.checkNegative();\n+        checkContains(tr, ERR_MSG);\n+\n+        \/\/ don't allow \":\" as an option\n+        tr = doExec(javaCmd, \"-XshowSettings:\");\n+        tr.checkNegative();\n+        checkContains(tr, ERR_MSG);\n+\n+        \/\/ case-sensitive test\n+        tr = doExec(javaCmd, \"-XshowSettings:VM\");\n+        tr.checkNegative();\n+        checkContains(tr, ERR_MSG);\n+\n+        \/\/ exclude this enum value\n+        tr = doExec(javaCmd, \"-XshowSettings:empty\");\n+        tr.checkNegative();\n+        checkContains(tr, ERR_MSG);\n+\n+\n@@ -242,1 +305,1 @@\n-        containsAllOptions(tr);\n+        containsDefaultOptions(tr);\n","filename":"test\/jdk\/tools\/launcher\/Settings.java","additions":72,"deletions":9,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-             8242056 8261976 8223358\n+             8242056 8261976 8223358 8313204\n@@ -188,0 +188,18 @@\n+\n+    @Test\n+    public void testSectionOrdering() {\n+        javadoc(\"-d\", \"out-3\",\n+                \"-linksource\",\n+                \"--no-platform-links\",\n+                \"-sourcepath\", testSrc,\n+                \"pkg\");\n+        checkExit(Exit.OK);\n+\n+        checkOrder(\"pkg\/AnnotationTypeField.html\",\n+                \"<ul class=\\\"summary-list\\\">\",\n+                \"<section class=\\\"field-summary\\\" id=\\\"field-summary\\\">\",\n+                \"<section class=\\\"member-summary\\\" id=\\\"annotation-interface-optional-element-summary\\\">\",\n+                \"<ul class=\\\"details-list\\\">\",\n+                \"<section class=\\\"field-details\\\" id=\\\"field-detail\\\">\",\n+                \"<section class=\\\"detail\\\" id=\\\"DEFAULT_NAME\\\">\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testAnnotationTypes\/TestAnnotationTypes.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8157000 8192850 8182765 8223607 8261976 8281376\n+ * @bug 8157000 8192850 8182765 8223607 8261976 8281376 8313204\n@@ -81,7 +81,0 @@\n-                \/\/ Check properties\n-                \"\"\"\n-                    Properties declared in class&nbsp;pkg5.<a href=\"Classes.P.html\"\"\",\n-                \"Classes.P\",\n-                \"\"\"\n-                    Classes.P.html#rateProperty\">rate\"\"\",\n-\n@@ -98,0 +91,7 @@\n+                \/\/ Check properties\n+                \"\"\"\n+                    Properties declared in class&nbsp;pkg5.<a href=\"Classes.P.html\"\"\",\n+                \"Classes.P\",\n+                \"\"\"\n+                    Classes.P.html#rateProperty\">rate\"\"\",\n+\n@@ -223,4 +223,0 @@\n-                \/\/ Check properties\n-                \"\"\"\n-                    Properties declared in interface&nbsp;pkg5.<a href=\"Interfaces.A.html\" title=\"interface in pkg5\">Interfaces.A<\/a>\"\"\",\n-\n@@ -233,0 +229,4 @@\n+                \/\/ Check properties\n+                \"\"\"\n+                    Properties declared in interface&nbsp;pkg5.<a href=\"Interfaces.A.html\" title=\"interface in pkg5\">Interfaces.A<\/a>\"\"\",\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/TestOverrideMethods.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test T8312814\n+ * @summary Verify proper behavior of TransType w.r.t. templated Strings\n+ * @enablePreview\n+ * @compile T8312814.java\n+ *\/\n+\n+\n+import java.util.List;\n+\n+public class T8312814 {\n+    void x(List<? extends StringTemplate.Processor<String, RuntimeException>> list) {\n+        list.get(0).\"\";\n+    }\n+}\n+\n","filename":"test\/langtools\/tools\/javac\/template\/T8312814.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -27,1 +27,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -31,1 +35,4 @@\n-import com.sun.tools.classfile.*;\n+import java.nio.file.Files;\n+\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -41,4 +48,3 @@\n-\n-        ClassFile cf = ClassFile.read(classFile);\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n@@ -51,3 +57,3 @@\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.Code, Code_attribute.class);\n-        test(cf, m, Attribute.Exceptions, Exceptions_attribute.class);\n+    void test(MethodModel mm) {\n+        test(mm, Attributes.CODE, CodeAttribute.class);\n+        test(mm, Attributes.EXCEPTIONS, ExceptionsAttribute.class);\n@@ -56,1 +62,1 @@\n-    \/\/ test the result of Attributes.getIndex according to expectations\n+    \/\/ test the result of MethodModel.findAttribute, MethodModel.attributes().indexOf() according to expectations\n@@ -58,18 +64,14 @@\n-    void test(ClassFile cf, Method m, String name, Class<?> c) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        try {\n-            String m_name = m.getName(cf.constant_pool);\n-            System.err.println(\"Method \" + m_name + \" name:\" + name + \" index:\" + index + \" class: \" + c);\n-            boolean expect = (m_name.equals(\"<init>\") && name.equals(\"Code\"))\n-                || (m_name.indexOf(name) != -1);\n-            boolean found = (index != -1);\n-            if (expect) {\n-                if (found) {\n-                    Attribute attr = m.attributes.get(index);\n-                    if (!c.isAssignableFrom(attr.getClass())) {\n-                        error(m + \": unexpected attribute found,\"\n-                              + \" expected \" + c.getName()\n-                              + \" found \" + attr.getClass().getName());\n-                    }\n-                } else {\n-                    error(m + \": expected attribute \" + name + \" not found\");\n+    <T extends Attribute<T>> void test(MethodModel mm, AttributeMapper<T> attr, Class<?> c) {\n+        Attribute<T> attr_instance = mm.findAttribute(attr).orElse(null);\n+        int index = mm.attributes().indexOf(attr_instance);\n+        String mm_name = mm.methodName().stringValue();\n+        System.err.println(\"Method \" + mm_name + \" name:\" + attr.name() + \" index:\" + index + \" class: \" + c);\n+        boolean expect = (mm_name.equals(\"<init>\") && attr.name().equals(\"Code\"))\n+                || (mm_name.contains(attr.name()));\n+        boolean found = (index != -1);\n+        if (expect) {\n+            if (found) {\n+                if (!c.isAssignableFrom(mm.attributes().get(index).getClass())) {\n+                    error(mm + \": unexpected attribute found,\"\n+                            + \" expected \" + c.getName()\n+                            + \" found \" + mm.attributes().get(index).attributeName());\n@@ -78,3 +80,5 @@\n-                if (found) {\n-                    error(m + \": unexpected attribute \" + name);\n-                }\n+                error(mm + \": expected attribute \" + attr.name() + \" not found\");\n+            }\n+        } else {\n+            if (found) {\n+                error(mm + \": unexpected attribute \" + attr.name());\n@@ -82,2 +86,0 @@\n-        } catch (ConstantPoolException e) {\n-            error(m + \": \" + e);\n","filename":"test\/langtools\/tools\/javap\/T6716452.java","additions":35,"deletions":33,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n- *      jdk.jdeps\/com.sun.tools.classfile\n@@ -34,0 +33,5 @@\n+ *      java.base\/jdk.internal.classfile\n+ *      java.base\/jdk.internal.classfile.attribute\n+ *      java.base\/jdk.internal.classfile.constantpool\n+ *      java.base\/jdk.internal.classfile.instruction\n+ *      java.base\/jdk.internal.classfile.components\n@@ -38,0 +42,1 @@\n+import java.lang.constant.ClassDesc;\n@@ -46,2 +51,0 @@\n-import com.sun.tools.classfile.ClassFile;\n-import com.sun.tools.classfile.ClassWriter;\n@@ -49,0 +52,1 @@\n+import jdk.internal.classfile.*;\n@@ -143,1 +147,1 @@\n-                                searchBytes, 0, searchBytes.length)) {\n+                    searchBytes, 0, searchBytes.length)) {\n@@ -175,8 +179,9 @@\n-\n-        ClassFile cf = ClassFile.read(classes.resolve(\"A.class\"));\n-        ClassFile cf2 = new ClassFile(\n-                cf.magic, cf.minor_version, cf.major_version, cf.constant_pool,\n-                cf.access_flags,\n-                0, \/\/ this_class,\n-                cf.super_class, cf.interfaces, cf.fields, cf.methods, cf.attributes);\n-        new ClassWriter().write(cf2, Files.newOutputStream(classes.resolve(\"Z.class\")));\n+        ClassModel cm = Classfile.of().parse(classes.resolve(\"A.class\"));\n+        Classfile.of().buildTo(\n+                classes.resolve(\"Z.class\"),\n+                ClassDesc.of(\"0\"), cb -> {\n+                    for (ClassElement ce : cm) {\n+                        cb.with(ce);\n+                    }\n+                }\n+        );\n@@ -241,1 +246,0 @@\n-\n","filename":"test\/langtools\/tools\/javap\/TestClassNameWarning.java","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.lang.constant.*;\n+import java.nio.file.Paths;\n@@ -28,8 +30,3 @@\n-import com.sun.tools.classfile.*;\n-import com.sun.tools.classfile.Type.ArrayType;\n-import com.sun.tools.classfile.Type.ClassSigType;\n-import com.sun.tools.classfile.Type.ClassType;\n-import com.sun.tools.classfile.Type.MethodType;\n-import com.sun.tools.classfile.Type.SimpleType;\n-import com.sun.tools.classfile.Type.TypeParamType;\n-import com.sun.tools.classfile.Type.WildcardType;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n+import jdk.internal.classfile.constantpool.*;\n@@ -41,1 +38,6 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n+ *          java.base\/jdk.internal.classfile.impl\n@@ -64,1 +66,1 @@\n-        ClassFile cf = getClassFile(\"Test\");\n+        ClassModel cm = getClassFile(\"Test\");\n@@ -66,3 +68,3 @@\n-        testFields(cf);\n-        testMethods(cf);\n-        testInnerClasses(cf); \/\/ recursive\n+        testFields(cm);\n+        testMethods(cm);\n+        testInnerClasses(cm); \/\/ recursive\n@@ -74,5 +76,4 @@\n-    void testFields(ClassFile cf) throws Exception {\n-        String cn = cf.getName();\n-        ConstantPool cp = cf.constant_pool;\n-        for (Field f: cf.fields) {\n-            test(\"field \" + cn + \".\" + f.getName(cp), f.descriptor, f.attributes, cp);\n+    void testFields(ClassModel cm) throws Exception {\n+        String cn = cm.thisClass().name().stringValue();\n+        for (FieldModel fm: cm.fields()) {\n+            test(\"field \" + cn + \".\" + fm.fieldName(), fm.fieldTypeSymbol(), fm);\n@@ -82,5 +83,4 @@\n-    void testMethods(ClassFile cf) throws Exception {\n-        String cn = cf.getName();\n-        ConstantPool cp = cf.constant_pool;\n-        for (Method m: cf.methods) {\n-            test(\"method \" + cn + \".\" + m.getName(cp), m.descriptor, m.attributes, cp);\n+    void testMethods(ClassModel cm) throws Exception {\n+        String cn = cm.thisClass().name().stringValue();\n+        for (MethodModel mm: cm.methods()) {\n+            test(\"method \" + cn + \".\" + mm.methodName(), mm.methodTypeSymbol(), mm);\n@@ -90,7 +90,7 @@\n-    void testInnerClasses(ClassFile cf) throws Exception {\n-        ConstantPool cp = cf.constant_pool;\n-        InnerClasses_attribute ic =\n-                (InnerClasses_attribute) cf.attributes.get(Attribute.InnerClasses);\n-        for (InnerClasses_attribute.Info info: ic.classes) {\n-            String outerClassName = cp.getClassInfo(info.outer_class_info_index).getName();\n-            if (!outerClassName.equals(cf.getName())) {\n+    void testInnerClasses(ClassModel cm) throws Exception {\n+        InnerClassesAttribute ic =\n+                cm.findAttribute(Attributes.INNER_CLASSES).orElse(null);\n+        assert ic != null;\n+        for (InnerClassInfo info: ic.classes()) {\n+            ClassEntry outerClass = info.outerClass().orElse(null);\n+            if (outerClass == null || !outerClass.name().equalsString(cm.getClass().getName())) {\n@@ -99,4 +99,4 @@\n-            String innerClassName = cp.getClassInfo(info.inner_class_info_index).getName();\n-            ClassFile icf = getClassFile(innerClassName);\n-            test(\"class \" + innerClassName, null, icf.attributes, icf.constant_pool);\n-            testInnerClasses(icf);\n+            String innerClassName = info.innerClass().asInternalName();\n+            ClassModel icm = getClassFile(innerClassName);\n+            test(\"class \" + innerClassName, null, icm);\n+            testInnerClasses(icm);\n@@ -106,4 +106,3 @@\n-    void test(String name, Descriptor desc, Attributes attrs, ConstantPool cp)\n-            throws Exception {\n-        AnnotValues d = getDescValue(attrs, cp);\n-        AnnotValues s = getSigValue(attrs, cp);\n+    void test(String name, ConstantDesc desc, AttributedElement m) {\n+        AnnotValues d = getDescValue(m);\n+        AnnotValues s = getSigValue(m);\n@@ -114,9 +113,1 @@\n-\n-        if (desc != null) {\n-            System.err.println(\"    descriptor: \" + desc.getValue(cp));\n-            checkEqual(d.raw, desc.getValue(cp));\n-            Type dt = new Signature(desc.index).getType(cp);\n-            checkEqual(d.type, tp.print(dt));\n-        }\n-\n-        Signature_attribute sa = (Signature_attribute) attrs.get(Attribute.Signature);\n+        SignatureAttribute sa = m.findAttribute(Attributes.SIGNATURE).orElse(null);\n@@ -124,11 +115,36 @@\n-            System.err.println(\"     signature: \" + sa.getSignature(cp));\n-\n-        if (s != null || sa != null) {\n-            if (s != null && sa != null) {\n-                checkEqual(s.raw, sa.getSignature(cp));\n-                Type st = new Signature(sa.signature_index).getType(cp);\n-                checkEqual(s.type, tp.print(st));\n-            } else if (s != null)\n-                error(\"@Sig annotation found but not Signature attribute\");\n-            else\n-                error(\"Signature attribute found but no @Sig annotation\");\n+            System.err.println(\"     signature: \" + sa.signature());\n+\n+        switch (desc) {\n+            case ClassDesc cDesc -> {\n+                System.err.println(\"    descriptor: \" + cDesc.descriptorString());\n+                checkEqual(d.raw, cDesc.descriptorString());\n+                Signature dt = Signature.of(cDesc);\n+                checkEqual(d.type, tp.print(dt));\n+                if (s != null || sa != null) {\n+                    if (s != null && sa != null) {\n+                        checkEqual(s.raw, sa.signature().stringValue());\n+                        Signature st = Signature.parseFrom(sa.signature().stringValue());\n+                        checkEqual(s.type, tp.print(st));\n+                    } else if (s != null)\n+                        error(\"@Sig annotation found but not Signature attribute\");\n+                    else\n+                        error(\"Signature attribute found but no @Sig annotation\");\n+                }\n+            }\n+            case MethodTypeDesc mDesc -> {\n+                System.err.println(\"    descriptor: \" + mDesc.descriptorString());\n+                checkEqual(d.raw, mDesc.descriptorString());\n+                MethodSignature mdt = MethodSignature.of(mDesc);\n+                checkEqual(d.type, tp.print(mdt));\n+                if (s != null || sa != null) {\n+                    if (s != null && sa != null) {\n+                        checkEqual(s.raw, sa.signature().stringValue());\n+                        MethodSignature mst = MethodSignature.parseFrom(sa.signature().stringValue());\n+                        checkEqual(s.type, tp.print(mst));\n+                    } else if (s != null)\n+                        error(\"@Sig annotation found but not Signature attribute\");\n+                    else\n+                        error(\"Signature attribute found but no @Sig annotation\");\n+                }\n+            }\n+            default -> throw new AssertionError();\n@@ -136,1 +152,0 @@\n-\n@@ -141,8 +156,4 @@\n-    ClassFile getClassFile(String name) throws IOException, ConstantPoolException {\n-        URL url = getClass().getResource(name + \".class\");\n-        InputStream in = url.openStream();\n-        try {\n-            return ClassFile.read(in);\n-        } finally {\n-            in.close();\n-        }\n+    ClassModel getClassFile(String name) throws IOException, URISyntaxException {\n+        URL rsc = getClass().getResource(name + \".class\");\n+        assert rsc != null;\n+        return Classfile.of().parse(Paths.get(rsc.toURI()));\n@@ -151,2 +162,2 @@\n-    AnnotValues getDescValue(Attributes attrs, ConstantPool cp) throws Exception {\n-        return getAnnotValues(Desc.class.getName(), attrs, cp);\n+    AnnotValues getDescValue(AttributedElement m) {\n+        return getAnnotValues(Desc.class.getName(), m);\n@@ -155,2 +166,2 @@\n-    AnnotValues getSigValue(Attributes attrs, ConstantPool cp) throws Exception {\n-        return getAnnotValues(Sig.class.getName(), attrs, cp);\n+    AnnotValues getSigValue(AttributedElement m) {\n+        return getAnnotValues(Sig.class.getName(), m);\n@@ -168,4 +179,2 @@\n-    AnnotValues getAnnotValues(String annotName, Attributes attrs, ConstantPool cp)\n-            throws Exception {\n-        RuntimeInvisibleAnnotations_attribute annots =\n-                (RuntimeInvisibleAnnotations_attribute)attrs.get(Attribute.RuntimeInvisibleAnnotations);\n+    AnnotValues getAnnotValues(String annotName, AttributedElement m) {\n+        RuntimeInvisibleAnnotationsAttribute annots = m.findAttribute(Attributes.RUNTIME_INVISIBLE_ANNOTATIONS).orElse(null);\n@@ -173,9 +182,5 @@\n-            for (Annotation a: annots.annotations) {\n-                if (cp.getUTF8Value(a.type_index).equals(\"L\" + annotName + \";\")) {\n-                    Annotation.Primitive_element_value pv0 =\n-                            (Annotation.Primitive_element_value) a.element_value_pairs[0].value;\n-                    Annotation.Primitive_element_value pv1 =\n-                            (Annotation.Primitive_element_value) a.element_value_pairs[1].value;\n-                    return new AnnotValues(\n-                            cp.getUTF8Value(pv0.const_value_index),\n-                            cp.getUTF8Value(pv1.const_value_index));\n+            for (Annotation a: annots.annotations()) {\n+                if (a.classSymbol().descriptorString().equals(\"L\" + annotName + \";\")) {\n+                    String pv0 = ((AnnotationValue.OfString) a.elements().get(0).value()).stringValue();\n+                    String pv1 = ((AnnotationValue.OfString) a.elements().get(1).value()).stringValue();\n+                    return new AnnotValues(pv0, pv1);\n@@ -190,1 +195,1 @@\n-        if (!(expect == null ? found == null : expect.equals(found))) {\n+        if (!(Objects.equals(expect, found))) {\n@@ -206,3 +211,25 @@\n-    class TypePrinter implements Type.Visitor<String,Void> {\n-        String print(Type t) {\n-            return t == null ? null : t.accept(this, null);\n+    class TypePrinter {\n+        <T> String print(T t) {\n+            switch (t) {\n+                case Signature.BaseTypeSig type -> {\n+                    return visitSimpleType(type);\n+                }\n+                case Signature.ArrayTypeSig type -> {\n+                    return visitArrayType(type);\n+                }\n+                case Signature.ClassTypeSig type -> {\n+                    return visitClassType(type);\n+                }\n+                case ClassSignature type -> {\n+                    return visitClassSigType(type);\n+                }\n+                case MethodSignature type -> {\n+                    return visitMethodType(type);\n+                }\n+                case Signature.TypeVarSig type -> {\n+                    return \"S{\" + type.identifier() + \"}\"; \/\/Consider the TypeVarSig as Simple Type\n+                }\n+                default -> {\n+                    return null;\n+                }\n+            }\n@@ -210,1 +237,1 @@\n-        String print(String pre, List<? extends Type> ts, String post) {\n+        <T> String print(String pre, List<T> ts, String post) {\n@@ -216,1 +243,1 @@\n-            for (Type t: ts) {\n+            for (T t: ts) {\n@@ -218,1 +245,6 @@\n-                sb.append(print(t));\n+                switch (t) {\n+                    case Signature sig -> sb.append(print(sig));\n+                    case Signature.TypeParam pSig -> sb.append(visitTypeParamType(pSig));\n+                    case Signature.TypeArg aSig -> sb.append(visitWildcardType(aSig));\n+                    default -> throw new AssertionError();\n+                }\n@@ -225,2 +257,2 @@\n-        public String visitSimpleType(SimpleType type, Void p) {\n-            return \"S{\" + type.name + \"}\";\n+        public String visitSimpleType(Signature.BaseTypeSig type) {\n+            return \"S{\" + type.baseType() + \"}\";\n@@ -229,2 +261,2 @@\n-        public String visitArrayType(ArrayType type, Void p) {\n-            return \"A{\" + print(type.elemType) + \"}\";\n+        public String visitArrayType(Signature.ArrayTypeSig type) {\n+            return \"A{\" + print(type.componentSignature()) + \"}\";\n@@ -233,1 +265,1 @@\n-        public String visitMethodType(MethodType type, Void p) {\n+        public String visitMethodType(MethodSignature type) {\n@@ -236,6 +268,6 @@\n-            if (type.typeParamTypes != null)\n-                sb.append(print(\"<\", type.typeParamTypes, \">\"));\n-            sb.append(print(type.returnType));\n-            sb.append(print(\"(\", type.paramTypes, \")\"));\n-            if (type.throwsTypes != null)\n-                sb.append(print(\"\", type.throwsTypes, \"\"));\n+            if (!type.typeParameters().isEmpty())\n+                sb.append(print(\"<\", type.typeParameters(), \">\"));\n+            sb.append(print(type.result()));\n+            sb.append(print(\"(\", type.arguments(), \")\"));\n+            if (!type.throwableSignatures().isEmpty())\n+                sb.append(print(\"\", type.throwableSignatures(), \"\"));\n@@ -246,1 +278,1 @@\n-        public String visitClassSigType(ClassSigType type, Void p) {\n+        public String visitClassSigType(ClassSignature type) {\n@@ -249,5 +281,5 @@\n-            if (type.typeParamTypes != null)\n-                sb.append(print(\"<\", type.typeParamTypes, \">\"));\n-            sb.append(print(type.superclassType));\n-            if (type.superinterfaceTypes != null)\n-                sb.append(print(\"i(\", type.superinterfaceTypes, \")\"));\n+            if (!type.typeParameters().isEmpty())\n+                sb.append(print(\"<\", type.typeParameters(), \">\"));\n+            sb.append(print(type.superclassSignature()));\n+            if (!type.superinterfaceSignatures().isEmpty())\n+                sb.append(print(\"i(\", type.superinterfaceSignatures(), \")\"));\n@@ -258,1 +290,1 @@\n-        public String visitClassType(ClassType type, Void p) {\n+        public String visitClassType(Signature.ClassTypeSig type) {\n@@ -261,2 +293,2 @@\n-            if (type.outerType != null) {\n-                sb.append(print(type.outerType));\n+            if (type.outerType().isPresent()) {\n+                sb.append(print(type.outerType().get()));\n@@ -265,3 +297,3 @@\n-            sb.append(type.name);\n-            if (type.typeArgs != null)\n-                sb.append(print(\"<\", type.typeArgs, \">\"));\n+            sb.append(type.className());\n+            if (!type.typeArgs().isEmpty())\n+                sb.append(print(\"<\", type.typeArgs(), \">\"));\n@@ -272,1 +304,1 @@\n-        public String visitTypeParamType(TypeParamType type, Void p) {\n+        public String visitTypeParamType(Signature.TypeParam type) {\n@@ -275,2 +307,2 @@\n-            sb.append(type.name);\n-            if (type.classBound != null) {\n+            sb.append(type.identifier());\n+            if (type.classBound().isPresent()) {\n@@ -278,1 +310,1 @@\n-                sb.append(print(type.classBound));\n+                sb.append(print(type.classBound().get()));\n@@ -280,2 +312,2 @@\n-            if (type.interfaceBounds != null)\n-                sb.append(print(\":i\", type.interfaceBounds, \"\"));\n+            if (!type.interfaceBounds().isEmpty())\n+                sb.append(print(\":i\", type.interfaceBounds(), \"\"));\n@@ -286,3 +318,3 @@\n-        public String visitWildcardType(WildcardType type, Void p) {\n-            switch (type.kind) {\n-                case UNBOUNDED:\n+        public String visitWildcardType(Signature.TypeArg type) {\n+            switch (type.wildcardIndicator()) {\n+                case UNBOUNDED -> {\n@@ -290,6 +322,11 @@\n-                case EXTENDS:\n-                    return \"W{e,\" + print(type.boundType) + \"}\";\n-                case SUPER:\n-                    return \"W{s,\" + print(type.boundType) + \"}\";\n-                default:\n-                    throw new AssertionError();\n+                }\n+                case EXTENDS -> {\n+                    return \"W{e,\" + print(type.boundType().get()) + \"}\";\n+                }\n+                case SUPER -> {\n+                    return \"W{s,\" + print(type.boundType().get()) + \"}\";\n+                }\n+                default -> {\n+                    if (type.boundType().isPresent()) return print(type.boundType().get());\n+                    else throw new AssertionError();\n+                }\n@@ -320,1 +357,1 @@\n-    @Desc(d=\"Z\", t=\"S{boolean}\")\n+    @Desc(d=\"Z\", t=\"S{Z}\")\n@@ -323,1 +360,1 @@\n-    @Desc(d=\"B\", t=\"S{byte}\")\n+    @Desc(d=\"B\", t=\"S{B}\")\n@@ -326,1 +363,1 @@\n-    @Desc(d=\"C\", t=\"S{char}\")\n+    @Desc(d=\"C\", t=\"S{C}\")\n@@ -329,1 +366,1 @@\n-    @Desc(d=\"D\", t=\"S{double}\")\n+    @Desc(d=\"D\", t=\"S{D}\")\n@@ -332,1 +369,1 @@\n-    @Desc(d=\"F\", t=\"S{float}\")\n+    @Desc(d=\"F\", t=\"S{F}\")\n@@ -335,1 +372,1 @@\n-    @Desc(d=\"I\", t=\"S{int}\")\n+    @Desc(d=\"I\", t=\"S{I}\")\n@@ -338,1 +375,1 @@\n-    @Desc(d=\"J\", t=\"S{long}\")\n+    @Desc(d=\"J\", t=\"S{J}\")\n@@ -341,1 +378,1 @@\n-    @Desc(d=\"S\", t=\"S{short}\")\n+    @Desc(d=\"S\", t=\"S{S}\")\n@@ -350,1 +387,1 @@\n-    @Desc(d=\"[I\", t=\"A{S{int}}\")\n+    @Desc(d=\"[I\", t=\"A{S{I}}\")\n@@ -362,1 +399,1 @@\n-    @Desc(d=\"()V\", t=\"M{S{void}()}\")\n+    @Desc(d=\"()V\", t=\"M{S{V}()}\")\n@@ -365,1 +402,1 @@\n-    @Desc(d=\"()I\", t=\"M{S{int}()}\")\n+    @Desc(d=\"()I\", t=\"M{S{I}()}\")\n@@ -371,1 +408,1 @@\n-    @Desc(d=\"()[I\", t=\"M{A{S{int}}()}\")\n+    @Desc(d=\"()[I\", t=\"M{A{S{I}}()}\")\n@@ -408,1 +445,1 @@\n-    @Desc(d=\"(I)V\", t=\"M{S{void}(S{int})}\")\n+    @Desc(d=\"(I)V\", t=\"M{S{V}(S{I})}\")\n@@ -411,1 +448,1 @@\n-    @Desc(d=\"(LClss;)V\", t=\"M{S{void}(C{Clss})}\")\n+    @Desc(d=\"(LClss;)V\", t=\"M{S{V}(C{Clss})}\")\n@@ -414,1 +451,1 @@\n-    @Desc(d=\"([I)V\", t=\"M{S{void}(A{S{int}})}\")\n+    @Desc(d=\"([I)V\", t=\"M{S{V}(A{S{I}})}\")\n@@ -417,1 +454,1 @@\n-    @Desc(d=\"([LClss;)V\", t=\"M{S{void}(A{C{Clss}})}\")\n+    @Desc(d=\"([LClss;)V\", t=\"M{S{V}(A{C{Clss}})}\")\n@@ -420,2 +457,2 @@\n-    @Desc(d=\"(LGenClss;)V\", t=\"M{S{void}(C{GenClss})}\")\n-    @Sig(s=\"(LGenClss<LClss;>;)V\", t=\"M{S{void}(C{GenClss<C{Clss}>})}\")\n+    @Desc(d=\"(LGenClss;)V\", t=\"M{S{V}(C{GenClss})}\")\n+    @Sig(s=\"(LGenClss<LClss;>;)V\", t=\"M{S{V}(C{GenClss<C{Clss}>})}\")\n@@ -424,2 +461,2 @@\n-    @Desc(d=\"(LGenClss;)V\", t=\"M{S{void}(C{GenClss})}\")\n-    @Sig(s=\"(LGenClss<*>;)V\", t=\"M{S{void}(C{GenClss<W{?}>})}\")\n+    @Desc(d=\"(LGenClss;)V\", t=\"M{S{V}(C{GenClss})}\")\n+    @Sig(s=\"(LGenClss<*>;)V\", t=\"M{S{V}(C{GenClss<W{?}>})}\")\n@@ -428,2 +465,2 @@\n-    @Desc(d=\"(LGenClss;)V\", t=\"M{S{void}(C{GenClss})}\")\n-    @Sig(s=\"(LGenClss<+LClss;>;)V\", t=\"M{S{void}(C{GenClss<W{e,C{Clss}}>})}\")\n+    @Desc(d=\"(LGenClss;)V\", t=\"M{S{V}(C{GenClss})}\")\n+    @Sig(s=\"(LGenClss<+LClss;>;)V\", t=\"M{S{V}(C{GenClss<W{e,C{Clss}}>})}\")\n@@ -432,2 +469,2 @@\n-    @Desc(d=\"(LGenClss;)V\", t=\"M{S{void}(C{GenClss})}\")\n-    @Sig(s=\"(LGenClss<-LClss;>;)V\", t=\"M{S{void}(C{GenClss<W{s,C{Clss}}>})}\")\n+    @Desc(d=\"(LGenClss;)V\", t=\"M{S{V}(C{GenClss})}\")\n+    @Sig(s=\"(LGenClss<-LClss;>;)V\", t=\"M{S{V}(C{GenClss<W{s,C{Clss}}>})}\")\n@@ -436,1 +473,1 @@\n-    @Desc(d=\"(Ljava\/lang\/Object;)V\", t=\"M{S{void}(C{java\/lang\/Object})}\")\n+    @Desc(d=\"(Ljava\/lang\/Object;)V\", t=\"M{S{V}(C{java\/lang\/Object})}\")\n@@ -438,1 +475,1 @@\n-        t=\"M{<TA{T:cC{java\/lang\/Object}}>S{void}(S{T})}\")\n+        t=\"M{<TA{T:cC{java\/lang\/Object}}>S{V}(S{T})}\")\n@@ -441,1 +478,1 @@\n-    @Desc(d=\"(LGenClss;)V\", t=\"M{S{void}(C{GenClss})}\")\n+    @Desc(d=\"(LGenClss;)V\", t=\"M{S{V}(C{GenClss})}\")\n@@ -443,1 +480,1 @@\n-        t=\"M{<TA{T:cC{java\/lang\/Object}}>S{void}(C{GenClss<W{e,S{T}}>})}\")\n+        t=\"M{<TA{T:cC{java\/lang\/Object}}>S{V}(C{GenClss<W{e,S{T}}>})}\")\n@@ -446,1 +483,1 @@\n-    @Desc(d=\"(LGenClss;)V\", t=\"M{S{void}(C{GenClss})}\")\n+    @Desc(d=\"(LGenClss;)V\", t=\"M{S{V}(C{GenClss})}\")\n@@ -448,1 +485,1 @@\n-        t=\"M{<TA{T:cC{java\/lang\/Object}}>S{void}(C{GenClss<W{s,S{T}}>})}\")\n+        t=\"M{<TA{T:cC{java\/lang\/Object}}>S{V}(C{GenClss<W{s,S{T}}>})}\")\n@@ -453,1 +490,1 @@\n-    @Desc(d=\"()V\", t=\"M{S{void}()}\")\n+    @Desc(d=\"()V\", t=\"M{S{V}()}\")\n@@ -456,1 +493,1 @@\n-    @Desc(d=\"()V\", t=\"M{S{void}()}\")\n+    @Desc(d=\"()V\", t=\"M{S{V}()}\")\n@@ -458,1 +495,1 @@\n-        t=\"M{<TA{T:cC{java\/lang\/Throwable}}>S{void}()S{T}}\")\n+        t=\"M{<TA{T:cC{java\/lang\/Throwable}}>S{V}()S{T}}\")\n","filename":"test\/langtools\/tools\/javap\/classfile\/6888367\/T6888367.java","additions":199,"deletions":162,"binary":false,"changes":361,"status":"modified"},{"patch":"@@ -27,2 +27,6 @@\n- * @summary CONSTANT_Class_info getBaseName does not handle arrays of primitives correctly\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @summary test getting constantpool elements' basename through asInternalName() API\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -33,0 +37,1 @@\n+import java.nio.file.Paths;\n@@ -34,2 +39,2 @@\n-import com.sun.tools.classfile.*;\n-import com.sun.tools.classfile.ConstantPool.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.constantpool.*;\n@@ -45,9 +50,8 @@\n-        ClassFile cf = getClassFile(\"T6887895$Test.class\");\n-        for (CPInfo cpInfo: cf.constant_pool.entries()) {\n-            if (cpInfo instanceof CONSTANT_Class_info) {\n-                CONSTANT_Class_info info = (CONSTANT_Class_info) cpInfo;\n-                String name = info.getName();\n-                String baseName = info.getBaseName();\n-                System.out.println(\"found: \" + name + \" \" + baseName);\n-                if (baseName != null)\n-                    found.add(baseName);\n+        ClassModel cm = getClassFile(\"T6887895$Test.class\");\n+        ConstantPool cp = cm.constantPool();\n+        for (int i = 1; i < cp.entryCount(); ++i) {\n+            if (cp.entryByIndex(i) instanceof ClassEntry ce) {\n+                String name = ce.asInternalName();\n+                System.out.println(\"found: \" + name);\n+                if (ce.asSymbol().isClassOrInterface())\n+                    found.add(name);\n@@ -58,4 +62,4 @@\n-            \"java\/lang\/Object\",\n-            \"java\/lang\/String\",\n-            \"T6887895\",\n-            \"T6887895$Test\"\n+                \"java\/lang\/Object\",\n+                \"java\/lang\/String\",\n+                \"T6887895\",\n+                \"T6887895$Test\"\n@@ -72,8 +76,3 @@\n-    ClassFile getClassFile(String name) throws IOException, ConstantPoolException {\n-        URL url = getClass().getResource(name);\n-        InputStream in = url.openStream();\n-        try {\n-            return ClassFile.read(in);\n-        } finally {\n-            in.close();\n-        }\n+    ClassModel getClassFile(String name) throws IOException, URISyntaxException {\n+        URL rsc = getClass().getResource(name);\n+        return Classfile.of().parse(Paths.get(rsc.toURI()));\n","filename":"test\/langtools\/tools\/javap\/classfile\/T6887895.java","additions":24,"deletions":25,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -25,1 +25,3 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.Attributes;\n+import jdk.internal.classfile.attribute.*;\n@@ -31,1 +33,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -43,3 +49,3 @@\n-        ClassFile cf = ClassFile.read(classFile);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n@@ -47,2 +53,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        for (FieldModel fm: cm.fields()) {\n+            test(fm);\n@@ -58,3 +64,3 @@\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+    void test(AttributedElement m) {\n+        test(m, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS);\n+        test(m, Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS);\n@@ -63,34 +69,15 @@\n-    void test(ClassFile cf, Field m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Method m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Field m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n+    \/\/ test the result of AttributedElement.findAttribute according to expectations\n+    <T extends jdk.internal.classfile.Attribute<T>> void test(AttributedElement m, AttributeMapper<T> attr_name) {\n+        Attribute<T> attr_instance = m.findAttribute(attr_name).orElse(null);\n+        if (attr_instance != null) {\n+            switch (attr_instance) {\n+                case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    visibles += tAttr.annotations().size();\n+                }\n+                case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    invisibles += tAttr.annotations().size();\n+                }\n+                default -> throw new AssertionError();\n+            }\n","filename":"test\/langtools\/tools\/javap\/typeAnnotations\/JSR175Annotations.java","additions":31,"deletions":44,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -25,1 +25,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -31,1 +32,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -35,1 +40,0 @@\n-\n@@ -44,3 +48,3 @@\n-        ClassFile cf = ClassFile.read(classFile);\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n@@ -48,1 +52,0 @@\n-\n@@ -50,1 +53,0 @@\n-\n@@ -56,3 +58,3 @@\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+    void test(MethodModel mm) {\n+        test(mm, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS);\n+        test(mm, Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS);\n@@ -63,21 +65,20 @@\n-    void test(ClassFile cf, Method m, String name, boolean visible) {\n-        Attribute attr = null;\n-        Code_attribute cAttr = null;\n-        RuntimeTypeAnnotations_attribute tAttr = null;\n-\n-        int index = m.attributes.getIndex(cf.constant_pool, Attribute.Code);\n-        if(index!= -1) {\n-            attr = m.attributes.get(index);\n-            assert attr instanceof Code_attribute;\n-            cAttr = (Code_attribute)attr;\n-            index = cAttr.attributes.getIndex(cf.constant_pool, name);\n-            if(index!= -1) {\n-                attr = cAttr.attributes.get(index);\n-                assert attr instanceof RuntimeTypeAnnotations_attribute;\n-                tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-                all += tAttr.annotations.length;\n-                if (visible)\n-                    visibles += tAttr.annotations.length;\n-                else\n-                    invisibles += tAttr.annotations.length;\n-               }\n+    <T extends Attribute<T>> void test(MethodModel mm, AttributeMapper<T> attr_name) {\n+        Attribute<T> attr_instance;\n+        CodeAttribute cAttr;\n+\n+        cAttr = mm.findAttribute(Attributes.CODE).orElse(null);\n+        if (cAttr != null) {\n+            attr_instance = cAttr.findAttribute(attr_name).orElse(null);\n+            if (attr_instance != null) {\n+                switch (attr_instance) {\n+                    case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                        all += tAttr.annotations().size();\n+                        visibles += tAttr.annotations().size();\n+                    }\n+                    case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                        all += tAttr.annotations().size();\n+                        invisibles += tAttr.annotations().size();\n+                    }\n+                    default -> throw new AssertionError();\n+                }\n+            }\n@@ -88,1 +89,1 @@\n-      File f = new File(\"Test.java\");\n+        File f = new File(\"Test.java\");\n@@ -136,1 +137,0 @@\n-\n","filename":"test\/langtools\/tools\/javap\/typeAnnotations\/NewArray.java","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -33,1 +33,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -45,4 +49,4 @@\n-        ClassFile cf = ClassFile.read(classFile);\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -50,2 +54,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n@@ -61,29 +65,3 @@\n-    void test(ClassFile cf) {\n-        test(cf, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    void test(ClassFile cf, Field m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, String name, boolean visible) {\n-        int index = cf.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = cf.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n+    void test(AttributedElement m) {\n+        test(m, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS);\n+        test(m, Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS);\n@@ -92,18 +70,15 @@\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Method m, String name, boolean visible) {\n-        Attribute attr = null;\n-        Code_attribute cAttr = null;\n-        RuntimeTypeAnnotations_attribute tAttr = null;\n-\n-        \/\/ collect annotations attributes on method\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n+    \/\/ test the result of AttributedElement.findAttribute according to expectations\n+    <T extends Attribute<T>> void test(AttributedElement m, AttributeMapper<T> attr_name) {\n+        Object attr_instance = m.findAttribute(attr_name).orElse(null);\n+        if (attr_instance != null) {\n+            switch (attr_instance) {\n+                case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    visibles += tAttr.annotations().size();\n+                }\n+                case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    invisibles += tAttr.annotations().size();\n+                }\n+                default -> throw new AssertionError();\n+            }\n@@ -111,17 +86,19 @@\n-        \/\/ collect annotations from method's code attribute\n-        index = m.attributes.getIndex(cf.constant_pool, Attribute.Code);\n-        if(index!= -1) {\n-            attr = m.attributes.get(index);\n-            assert attr instanceof Code_attribute;\n-            cAttr = (Code_attribute)attr;\n-            index = cAttr.attributes.getIndex(cf.constant_pool, name);\n-            if(index!= -1) {\n-                attr = cAttr.attributes.get(index);\n-                assert attr instanceof RuntimeTypeAnnotations_attribute;\n-                tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-                all += tAttr.annotations.length;\n-                if (visible)\n-                    visibles += tAttr.annotations.length;\n-                else\n-                    invisibles += tAttr.annotations.length;\n-               }\n+        if (m instanceof MethodModel) {\n+            attr_instance = m.findAttribute(Attributes.CODE).orElse(null);\n+            if(attr_instance!= null) {\n+                CodeAttribute cAttr = (CodeAttribute)attr_instance;\n+                attr_instance = cAttr.findAttribute(attr_name).orElse(null);\n+                if(attr_instance!= null) {\n+                    switch (attr_instance) {\n+                        case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                            all += tAttr.annotations().size();\n+                            visibles += tAttr.annotations().size();\n+                        }\n+                        case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                            all += tAttr.annotations().size();\n+                            invisibles += tAttr.annotations().size();\n+                        }\n+                        default -> throw new AssertionError();\n+                    }\n+                }\n+            }\n@@ -131,15 +108,1 @@\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Field m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n-    }\n+\n","filename":"test\/langtools\/tools\/javap\/typeAnnotations\/Presence.java","additions":51,"deletions":88,"binary":false,"changes":139,"status":"modified"},{"patch":"@@ -25,1 +25,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -31,1 +32,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -43,4 +48,4 @@\n-        ClassFile cf = ClassFile.read(classFile);\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -48,2 +53,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n@@ -57,4 +62,4 @@\n-        ClassFile icf = ClassFile.read(innerFile);\n-        test(icf);\n-        for (Field f : icf.fields) {\n-            test(cf, f);\n+        ClassModel icm = Classfile.of().parse(innerFile.toPath());\n+        test(icm);\n+        for (FieldModel fm : icm.fields()) {\n+            test(fm);\n@@ -62,2 +67,2 @@\n-        for (Method m: icf.methods) {\n-            test(cf, m);\n+        for (MethodModel mm: icm.methods()) {\n+            test(mm);\n@@ -72,3 +77,3 @@\n-    void test(ClassFile cf) {\n-        test(cf, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+    void test(AttributedElement m) {\n+        test(m, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS);\n+        test(m, Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS);\n@@ -77,55 +82,15 @@\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    void test(ClassFile cf, Field m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, String name, boolean visible) {\n-        int index = cf.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = cf.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Method m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Field m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n+    \/\/ test the result of AttributedElement.findAttribute according to expectations\n+    <T extends Attribute<T>> void test(AttributedElement m, AttributeMapper<T> attr_name) {\n+        Attribute<T> attr_instance = m.findAttribute(attr_name).orElse(null);\n+        if (attr_instance != null) {\n+            switch (attr_instance) {\n+                case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    visibles += tAttr.annotations().size();\n+                }\n+                case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    invisibles += tAttr.annotations().size();\n+                }\n+                default -> throw new AssertionError();\n+            }\n","filename":"test\/langtools\/tools\/javap\/typeAnnotations\/PresenceInner.java","additions":37,"deletions":72,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -25,1 +27,0 @@\n-import com.sun.tools.classfile.*;\n@@ -32,1 +33,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -44,3 +49,3 @@\n-        ClassFile cf = ClassFile.read(classFile);\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n@@ -56,3 +61,3 @@\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+    void test(MethodModel mm) {\n+        test(mm, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS);\n+        test(mm, Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS);\n@@ -62,1 +67,1 @@\n-    \/\/ test the result of Attributes.getIndex according to expectations\n+    \/\/ test the result of MethodModel.findAttribute according to expectations\n@@ -64,3 +69,3 @@\n-    void test(ClassFile cf, Method m, String name, boolean visible) {\n-        Attribute attr = null;\n-        Code_attribute cAttr = null;\n+    <T extends Attribute<T>> void test(MethodModel mm, AttributeMapper<T> attr_name) {\n+        Attribute<T> attr;\n+        CodeAttribute cAttr;\n@@ -68,16 +73,16 @@\n-        int index = m.attributes.getIndex(cf.constant_pool, Attribute.Code);\n-        if(index!= -1) {\n-            attr = m.attributes.get(index);\n-            assert attr instanceof Code_attribute;\n-            cAttr = (Code_attribute)attr;\n-            index = cAttr.attributes.getIndex(cf.constant_pool, name);\n-            if(index!= -1) {\n-                attr = cAttr.attributes.get(index);\n-                assert attr instanceof RuntimeTypeAnnotations_attribute;\n-                RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-                all += tAttr.annotations.length;\n-                if (visible)\n-                    visibles += tAttr.annotations.length;\n-                else\n-                    invisibles += tAttr.annotations.length;\n-               }\n+        cAttr = mm.findAttribute(Attributes.CODE).orElse(null);\n+        if (cAttr != null) {\n+            attr = cAttr.findAttribute(attr_name).orElse(null);\n+            if (attr != null) {\n+                switch (attr) {\n+                    case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                        all += tAttr.annotations().size();\n+                        visibles += tAttr.annotations().size();\n+                    }\n+                    case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                        all += tAttr.annotations().size();\n+                        invisibles += tAttr.annotations().size();\n+                    }\n+                    default -> throw new AssertionError();\n+                }\n+            }\n","filename":"test\/langtools\/tools\/javap\/typeAnnotations\/TypeCasts.java","additions":33,"deletions":28,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -25,1 +25,3 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.Attributes;\n+import jdk.internal.classfile.attribute.*;\n@@ -31,1 +33,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -43,3 +49,3 @@\n-        ClassFile cf = ClassFile.read(classFile);\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n@@ -55,3 +61,3 @@\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+    void test(MethodModel mm) {\n+        test(mm, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS);\n+        test(mm, Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS);\n@@ -60,1 +66,1 @@\n-    \/\/ test the result of Attributes.getIndex according to expectations\n+    \/\/ test the result of mm.findAttribute according to expectations\n@@ -62,11 +68,14 @@\n-    void test(ClassFile cf, Method m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n+    <T extends Attribute<T>> void test(MethodModel mm, AttributeMapper<T> attr_name) {\n+        Attribute<T> attr_instance = mm.findAttribute(attr_name).orElse(null);\n+        if (attr_instance != null) {\n+            switch (attr_instance) {\n+                case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    invisibles += tAttr.annotations().size();\n+                }\n+                case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    visibles += tAttr.annotations().size();\n+                }\n+                default -> throw new AssertionError();\n+            }\n@@ -112,1 +121,1 @@\n-      int rc = com.sun.tools.javac.Main.compile(new String[] {\"-g\", f.getPath() });\n+        int rc = com.sun.tools.javac.Main.compile(new String[] {\"-g\", f.getPath() });\n","filename":"test\/langtools\/tools\/javap\/typeAnnotations\/Visibility.java","additions":30,"deletions":21,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -25,1 +25,2 @@\n-import com.sun.tools.classfile.*;\n+import jdk.internal.classfile.*;\n+import jdk.internal.classfile.attribute.*;\n@@ -31,1 +32,5 @@\n- * @modules jdk.jdeps\/com.sun.tools.classfile\n+ * @modules java.base\/jdk.internal.classfile\n+ *          java.base\/jdk.internal.classfile.attribute\n+ *          java.base\/jdk.internal.classfile.constantpool\n+ *          java.base\/jdk.internal.classfile.instruction\n+ *          java.base\/jdk.internal.classfile.components\n@@ -42,4 +47,4 @@\n-        ClassFile cf = ClassFile.read(classFile);\n-        test(cf);\n-        for (Field f : cf.fields) {\n-            test(cf, f);\n+        ClassModel cm = Classfile.of().parse(classFile.toPath());\n+        test(cm);\n+        for (FieldModel fm : cm.fields()) {\n+            test(fm);\n@@ -47,2 +52,2 @@\n-        for (Method m: cf.methods) {\n-            test(cf, m);\n+        for (MethodModel mm: cm.methods()) {\n+            test(mm);\n@@ -57,9 +62,3 @@\n-\n-    void test(ClassFile cf) {\n-        test(cf, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    void test(ClassFile cf, Method m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n+    void test(AttributedElement m) {\n+        test(m, Attributes.RUNTIME_VISIBLE_TYPE_ANNOTATIONS);\n+        test(m, Attributes.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS);\n@@ -67,19 +66,14 @@\n-\n-    void test(ClassFile cf, Field m) {\n-        test(cf, m, Attribute.RuntimeVisibleTypeAnnotations, true);\n-        test(cf, m, Attribute.RuntimeInvisibleTypeAnnotations, false);\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, String name, boolean visible) {\n-        int index = cf.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = cf.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n+    <T extends Attribute<T>> void test(AttributedElement m, AttributeMapper<T> attr_name) {\n+        Attribute<T> attr_instance = m.findAttribute(attr_name).orElse(null);\n+        if (attr_instance != null) {\n+            switch (attr_instance) {\n+                case RuntimeVisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    visibles += tAttr.annotations().size();\n+                }\n+                case RuntimeInvisibleTypeAnnotationsAttribute tAttr -> {\n+                    all += tAttr.annotations().size();\n+                    invisibles += tAttr.annotations().size();\n+                }\n+                default -> throw new AssertionError();\n+            }\n@@ -88,33 +82,0 @@\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Method m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n-    }\n-\n-    \/\/ test the result of Attributes.getIndex according to expectations\n-    \/\/ encoded in the method's name\n-    void test(ClassFile cf, Field m, String name, boolean visible) {\n-        int index = m.attributes.getIndex(cf.constant_pool, name);\n-        if (index != -1) {\n-            Attribute attr = m.attributes.get(index);\n-            assert attr instanceof RuntimeTypeAnnotations_attribute;\n-            RuntimeTypeAnnotations_attribute tAttr = (RuntimeTypeAnnotations_attribute)attr;\n-            all += tAttr.annotations.length;\n-            if (visible)\n-                visibles += tAttr.annotations.length;\n-            else\n-                invisibles += tAttr.annotations.length;\n-        }\n-    }\n-\n@@ -122,1 +83,1 @@\n-      File f = new File(\"Test.java\");\n+        File f = new File(\"Test.java\");\n","filename":"test\/langtools\/tools\/javap\/typeAnnotations\/Wildcards.java","additions":31,"deletions":70,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -168,0 +168,12 @@\n+  private native int getFieldEntriesLength0(Class<?> aClass);\n+  public         int getFieldEntriesLength(Class<?> aClass) {\n+    Objects.requireNonNull(aClass);\n+    return getFieldEntriesLength0(aClass);\n+  }\n+\n+  private native int getFieldCPIndex0(Class<?> aClass, int index);\n+  public         int getFieldCPIndex(Class<?> aClass, int index) {\n+    Objects.requireNonNull(aClass);\n+    return getFieldCPIndex0(aClass, index);\n+  }\n+\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.compiler.pea;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Warmup(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 1, time = 1, timeUnit = TimeUnit.SECONDS)\n+@State(Scope.Benchmark)\n+@Fork(value = 3)\n+public class Blender {\n+    @Param({\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"})\n+    int iteration;\n+\n+    private static class Color {\n+        double r, g, b;\n+\n+        private Color(double r, double g, double b) {\n+            this.r = r;\n+            this.g = g;\n+            this.b = b;\n+        }\n+\n+        public static Color color() {\n+            return new Color(0, 0, 0);\n+        }\n+\n+        public void add(Color other) {\n+            r += other.r;\n+            g += other.g;\n+            b += other.b;\n+        }\n+\n+        public void add(double nr, double ng, double nb) {\n+            r += nr;\n+            g += ng;\n+            b += nb;\n+        }\n+\n+        public void multiply(double factor) {\n+            r *= factor;\n+            g *= factor;\n+            b *= factor;\n+        }\n+    }\n+\n+    private static final Color[][][] colors = new Color[100][100][100];\n+\n+    @Benchmark\n+    public void initialize() {\n+        Color id = new Color(iteration \/ 20, 0, 1);\n+        for (int x = 0; x < colors.length; x++) {\n+            Color[][] plane = colors[x];\n+            for (int y = 0; y < plane.length; y++) {\n+                Color[] row = plane[y];\n+                for (int z = 0; z < row.length; z++) {\n+                    Color color = new Color(x, y, z);\n+                    color.add(id);\n+                    if ((color.r + color.g + color.b) % 42 == 0) {\n+                         \/\/ PEA only allocates a color object here\n+                         row[z] = color;\n+                    } else {\n+                         \/\/ Here the color object is not allocated at all\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/pea\/Blender.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"}]}