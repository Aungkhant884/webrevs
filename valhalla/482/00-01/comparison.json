{"files":[{"patch":"@@ -254,1 +254,1 @@\n-     * and false otherwise. Or in other words, is this a class type non-redundantly notated with .ref ??\n+     * and false otherwise.\n@@ -269,1 +269,1 @@\n-     * and false otherwise. Or in other words, is this a class type non-redundantly notated with .val ??\n+     * and false otherwise.\n@@ -1058,2 +1058,2 @@\n-             * Reference projection type of a primitive-favoring aka primitive-default\n-             * plain vanilla primitive class type,\n+             * A primitive reference type:  (Assosiated primitive class could be either\n+             * reference default or value-default)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-    List<X.ref> ls = new Object();\n+    List<X.ref> ls = new Object() {};\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/RefDefault\/CheckQuestionInMessages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-CheckQuestionInMessages.java:12:22: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.lang.Object, java.util.List<X>)\n+CheckQuestionInMessages.java:12:22: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: compiler.misc.anonymous.class: java.lang.Object, java.util.List<X>)\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/RefDefault\/CheckQuestionInMessages.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}