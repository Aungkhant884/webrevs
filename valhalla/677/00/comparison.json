{"files":[{"patch":"@@ -757,2 +757,3 @@\n-    assert(!null_free || vt->as_InlineType()->is_default(&gvn) || init_ctl != kit->control() || !gvn.type(oop)->is_inlinetypeptr() || oop->is_Con() || oop->Opcode() == Op_InlineTypePtr ||\n-           AllocateNode::Ideal_allocation(oop, &gvn) != NULL || vt->as_InlineType()->is_loaded(&gvn) == oop, \"inline type should be loaded\");\n+\/\/ TODO fix with JDK-8278390\n+\/\/    assert(!null_free || vt->as_InlineType()->is_default(&gvn) || init_ctl != kit->control() || !gvn.type(oop)->is_inlinetypeptr() || oop->is_Con() || oop->Opcode() == Op_InlineTypePtr ||\n+\/\/           AllocateNode::Ideal_allocation(oop, &gvn) != NULL || vt->as_InlineType()->is_loaded(&gvn) == oop, \"inline type should be loaded\");\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4761,2 +4761,6 @@\n-  \/\/ The pointers in the autobox arrays are always non-null.\n-  etype = etype->cast_to_ptr_type(TypePtr::NotNull)->is_oopptr();\n+  \/\/ TODO fix with JDK-8284164\n+  \/\/ Ignore inline types to not confuse logic in TypeAryPtr::compute_klass\n+  if (!etype->is_inlinetypeptr()) {\n+    \/\/ The pointers in the autobox arrays are always non-null.\n+    etype = etype->cast_to_ptr_type(TypePtr::NotNull)->is_oopptr();\n+  }\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}