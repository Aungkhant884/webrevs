{"files":[{"patch":"@@ -4521,1 +4521,1 @@\n-        char typeDesc = isPrimitiveClass() ? 'Q' : 'L';\n+        char typeDesc = isValueType() ? 'Q' : 'L';\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -133,0 +133,3 @@\n+\n+        assertEquals(valType.descriptorString(), \"QBasicTest$Point;\");\n+        assertEquals(refType.descriptorString(), \"LBasicTest$Point;\");\n","filename":"test\/jdk\/valhalla\/valuetypes\/BasicTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run main MethodReference\n+ * @summary test method reference and primitive reference type as the parameter type\n+ *\/\n+\n+import java.util.function.Supplier;\n+\n+public primitive class MethodReference {\n+    final int x;\n+    final int y;\n+    MethodReference() {\n+        this.x = 1234;\n+        this.y = 5678;\n+    }\n+\n+    public static void main(String... args) {\n+        Supplier<MethodReference.ref> supplier = MethodReference::new;\n+        MethodReference o = (MethodReference) supplier.get();\n+        if (o.x != 1234 || o.y != 5678)\n+            throw new AssertionError(o);\n+    }\n+}\n","filename":"test\/jdk\/valhalla\/valuetypes\/MethodReference.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"}]}