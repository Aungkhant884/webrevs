{"files":[{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8269756\n+ * @summary test scenarios where getfield, putfield, and withfield access the\n+ *          same constant pool field_ref and test other withfield error cases.\n+ * @compile withfieldTests.jcod\n+ * @run main\/othervm -Xverify:remote -Xint RunWithfieldTests\n+ *\/\n+\n+public class RunWithfieldTests {\n+\n+    public static void main(String argv[]) throws Throwable {\n+\n+        \/\/ Check that a withfield on a CONSTANT_Field_info entry that references\n+        \/\/ an identity object will fail and that subsequent putfield and getfield\n+        \/\/ operations on the same CONSTANT_FIELD_info entry will succeed.\n+        Class wfoClass = Class.forName(\"withfieldObject\");\n+        withfieldObject wfo = (withfieldObject)wfoClass.getDeclaredConstructor().newInstance();\n+        String y = wfo.getfield();\n+        if (!y.equals(\"cde\")) {\n+            throw new RuntimeException(\"Unexpected value of wfo.getfield(): \" + y);\n+        }\n+\n+\n+        \/\/ Check that a putfield and getfield on a CONSTANT_Field_info entry that\n+        \/\/ references an identity object will succeed and that a subsequent withfield\n+        \/\/ operation on the same CONSTANT_FIELD_info entry will fail.\n+        Class pfoClass = Class.forName(\"putfieldObject\");\n+        putfieldObject pfo = (putfieldObject)pfoClass.getDeclaredConstructor().newInstance();\n+        String x = pfo.getfield();\n+        if (!x.equals(\"abc\")) {\n+            throw new RuntimeException(\"Unexpected value of pfo.getfield(): \" + x);\n+        }\n+        try {\n+            pfo.withfieldFunc();\n+            throw new RuntimeException(\"ICCE not thrown\");\n+        } catch (IncompatibleClassChangeError e) {\n+            if (!e.getMessage().contains(\"withfield cannot be used on identity class\")) {\n+                throw new RuntimeException(\"Wrong ICCE thrown: \" + e.getMessage());\n+            }\n+        }\n+\n+\n+        \/\/ Check that a putfield on a CONSTANT_Field_info entry that references\n+        \/\/ a primitive object will fail and that subsequent withfield and getfield\n+        \/\/ operations on the same CONSTANT_FIELD_info entry will succeed.\n+        try {\n+            putfieldPrimitive pfp = new putfieldPrimitive(false);  \/\/ putfield on a primitive class\n+            throw new RuntimeException(\"ICCE not thrown\");\n+        } catch (IncompatibleClassChangeError e) {\n+            if (!e.getMessage().contains(\"putfield cannot be used on primitive class\")) {\n+                throw new RuntimeException(\"Wrong ICCE thrown: \" + e.getMessage());\n+            }\n+        }\n+        putfieldPrimitive pfp = new putfieldPrimitive(true);  \/\/ withfield on a primitive class\n+        if (pfp.getX() != 5) {\n+            throw new RuntimeException(\"Unexpected value of d.getfield(): \" + pfp.getX());\n+        }\n+\n+\n+        \/\/ Check that a withfield and getfield on a CONSTANT_Field_info entry that\n+        \/\/ references a primitive object will succeed and that a subsequent putfield\n+        \/\/ operation on the same CONSTANT_FIELD_info entry will fail.\n+        withfieldPrimitive wfp = new withfieldPrimitive(true);  \/\/ withfield on a primitive class\n+        if (wfp.getX() != 5) {\n+            throw new RuntimeException(\"Unexpected value of d.getfield(): \" + wfp.getX());\n+        }\n+        try {\n+            withfieldPrimitive wfp2 = new withfieldPrimitive(false);  \/\/ putfield on a primitive class\n+            throw new RuntimeException(\"ICCE not thrown\");\n+        } catch (IncompatibleClassChangeError e) {\n+            if (!e.getMessage().contains(\"putfield cannot be used on primitive class\")) {\n+                throw new RuntimeException(\"Wrong ICCE thrown: \" + e.getMessage());\n+            }\n+        }\n+\n+\n+        \/\/ Test withfield with a null stack operand.\n+        try {\n+            withfieldNull wfn = new withfieldNull();\n+            throw new RuntimeException(\"NPE not thrown\");\n+        } catch (NullPointerException e) {\n+            if (!e.getMessage().contains(\"Cannot assign field \\\"x\\\"\")) {\n+                throw new RuntimeException(\"Wrong NPE thrown: \" + e.getMessage());\n+            }\n+        }\n+\n+\n+        \/\/ Test that a VerifyError exception is thrown for a withfield bytecode if the\n+        \/\/ stack operand is a different primitive type than the primitive type in the\n+        \/\/ constant pool field_ref.\n+        try {\n+            WrongPrimWF wPrim = new WrongPrimWF();\n+            throw new RuntimeException(\"No exception thrown\");\n+        } catch (VerifyError e) {\n+            if (!e.getMessage().contains(\"Bad type on operand stack\")) {\n+                throw new RuntimeException(\"Wrong VerifyError thrown: \" + e.getMessage());\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/withfieldTests\/RunWithfieldTests.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -0,0 +1,1120 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/* This jcod class is based on this Java code. To see what changed from the\n+   original jcod file search for !!!!.\n+ public class withfieldObject {\n+\n+     String y;\n+\n+     public withfieldObject() {\n+         try {\n+             y = \"abc\";  \/\/ Change this putfield to a withfield\n+         } catch (IncompatibleClassChangeError e) {\n+             y = \"cde\";\n+         }\n+     }\n+\n+     public String getfield() {\n+         return y;\n+     }\n+ }\n+*\/\n+\n+class withfieldObject {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [26] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1     at 0x0A\n+    class #4; \/\/ #2     at 0x0F\n+    NameAndType #5 #6; \/\/ #3     at 0x12\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n+    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n+    Utf8 \"()V\"; \/\/ #6     at 0x33\n+    String #8; \/\/ #7     at 0x39\n+    Utf8 \"abc\"; \/\/ #8     at 0x3C\n+    Field #10 #11; \/\/ #9     at 0x42\n+    class #12; \/\/ #10     at 0x47\n+    NameAndType #13 #14; \/\/ #11     at 0x4A\n+    Utf8 \"withfieldObject\"; \/\/ #12     at 0x4F\n+    Utf8 \"y\"; \/\/ #13     at 0x60\n+    Utf8 \"Ljava\/lang\/String;\"; \/\/ #14     at 0x64\n+    class #16; \/\/ #15     at 0x79\n+    Utf8 \"java\/lang\/IncompatibleClassChangeError\"; \/\/ #16     at 0x7C\n+    String #18; \/\/ #17     at 0xA5\n+    Utf8 \"cde\"; \/\/ #18     at 0xA8\n+    Utf8 \"Code\"; \/\/ #19     at 0xAE\n+    Utf8 \"LineNumberTable\"; \/\/ #20     at 0xB5\n+    Utf8 \"StackMapTable\"; \/\/ #21     at 0xC7\n+    Utf8 \"getfield\"; \/\/ #22     at 0xD7\n+    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #23     at 0xE2\n+    Utf8 \"SourceFile\"; \/\/ #24     at 0xF9\n+    Utf8 \"withfieldObject.java\"; \/\/ #25     at 0x0106\n+  } \/\/ Constant Pool\n+\n+  0x0021; \/\/ access [ ACC_PUBLIC ACC_SUPER ]\n+  #10;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [1] { \/\/ Fields\n+    {  \/\/ field at 0x0126\n+      0x0000; \/\/ access\n+      #13; \/\/ name_index       : y\n+      #14; \/\/ descriptor_index : Ljava\/lang\/String;\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [2] { \/\/ Methods\n+    {  \/\/ method at 0x0130\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index       : <init>\n+      #6; \/\/ descriptor_index : ()V\n+      [1] { \/\/ Attributes\n+        Attr(#19, 96) { \/\/ Code at 0x0138  \/\/ !!!! Changed 95 -> 96\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[22]{                \/\/ !!!! Changed from 21 -> 22\n+            0x2AB700012A1207CC;     \/\/ !!!! Changed last byte from B5 (putfield) to CC (withfield)\n+            0x000957A7000A4C2A;     \/\/ !!!! Inserted 0x57 (pop) to clear the stack.\n+            0x1211B50009B1;\n+          }\n+          [1] { \/\/ Traps\n+            4 11 14 15; \/\/  at 0x0165  \/\/ !!!! Changed 10 -> 11 and 13 -> 14\n+          } \/\/ end Traps\n+          [2] { \/\/ Attributes\n+            Attr(#20, 26) { \/\/ LineNumberTable at 0x0167\n+              [6] { \/\/ line_number_table\n+                0  6; \/\/  at 0x0173\n+                4  8; \/\/  at 0x0177\n+                10  11; \/\/  at 0x017B\n+                13  9; \/\/  at 0x017F\n+                14  10; \/\/  at 0x0183\n+                20  12; \/\/  at 0x0187\n+              }\n+            } \/\/ end LineNumberTable\n+            ;\n+            Attr(#21, 16) { \/\/ StackMapTable at 0x0187\n+              [2] { \/\/\n+                255b, 14, [1]{7b,10}, [1]{7b,15}; \/\/ full_frame  \/\/ !!!! Changed 13 to 14\n+                6b; \/\/ same_frame\n+              }\n+            } \/\/ end StackMapTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method at 0x019D\n+      0x0001; \/\/ access\n+      #22; \/\/ name_index       : getfield\n+      #23; \/\/ descriptor_index : ()Ljava\/lang\/String;\n+      [1] { \/\/ Attributes\n+        Attr(#19, 29) { \/\/ Code at 0x01A5\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40009B0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#20, 6) { \/\/ LineNumberTable at 0x01BC\n+              [1] { \/\/ line_number_table\n+                0  15; \/\/  at 0x01C8\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#24, 2) { \/\/ SourceFile at 0x01CA\n+      #25;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class withfieldObject\n+\n+\n+\n+\/* This jcod class is based on this Java code.  To see what changed from the\n+   orignal jcod file, search for !!!!.\n+ public class putfieldObject {\n+     String y;\n+     public putfieldObject() {\n+         y = \"abc\";\n+     }\n+     public void withfieldFunc() {\n+         y = \"cde\";  \/\/ Change this putfield to a withfield\n+     }\n+     public String getfield() {\n+         return y;\n+     }\n+ }\n+*\/\n+class putfieldObject {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [24] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1     at 0x0A\n+    class #4; \/\/ #2     at 0x0F\n+    NameAndType #5 #6; \/\/ #3     at 0x12\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n+    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n+    Utf8 \"()V\"; \/\/ #6     at 0x33\n+    String #8; \/\/ #7     at 0x39\n+    Utf8 \"abc\"; \/\/ #8     at 0x3C\n+    Field #10 #11; \/\/ #9     at 0x42\n+    class #12; \/\/ #10     at 0x47\n+    NameAndType #13 #14; \/\/ #11     at 0x4A\n+    Utf8 \"putfieldObject\"; \/\/ #12     at 0x4F\n+    Utf8 \"y\"; \/\/ #13     at 0x60\n+    Utf8 \"Ljava\/lang\/String;\"; \/\/ #14     at 0x64\n+    String #16; \/\/ #15     at 0x79\n+    Utf8 \"cde\"; \/\/ #16     at 0x7C\n+    Utf8 \"Code\"; \/\/ #17     at 0x82\n+    Utf8 \"LineNumberTable\"; \/\/ #18     at 0x89\n+    Utf8 \"withfieldFunc\"; \/\/ #19     at 0x9B\n+    Utf8 \"getfield\"; \/\/ #20     at 0xAB\n+    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #21     at 0xB6\n+    Utf8 \"SourceFile\"; \/\/ #22     at 0xCD\n+    Utf8 \"putfieldObject.java\"; \/\/ #23     at 0xDA\n+  } \/\/ Constant Pool\n+\n+  0x0021; \/\/ access [ ACC_PUBLIC ACC_SUPER ]\n+  #10;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [1] { \/\/ Fields\n+    {  \/\/ field at 0xFA\n+      0x0000; \/\/ access\n+      #13; \/\/ name_index       : y\n+      #14; \/\/ descriptor_index : Ljava\/lang\/String;\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [3] { \/\/ Methods\n+    {  \/\/ method at 0x0104\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index       : <init>\n+      #6; \/\/ descriptor_index : ()V\n+      [1] { \/\/ Attributes\n+        Attr(#17, 43) { \/\/ Code at 0x010C\n+          2; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[11]{\n+            0x2AB700012A1207B5;\n+            0x0009B1;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 14) { \/\/ LineNumberTable at 0x0129\n+              [3] { \/\/ line_number_table\n+                0  6; \/\/  at 0x0135\n+                4  7; \/\/  at 0x0139\n+                10  8; \/\/  at 0x013D\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method at 0x013D\n+      0x0001; \/\/ access\n+      #19; \/\/ name_index       : withfieldFunc\n+      #6; \/\/ descriptor_index : ()V\n+      [1] { \/\/ Attributes\n+        Attr(#17, 35) { \/\/ Code at 0x0145\n+          2; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[7]{\n+            0x2A120FCC0009B1;  \/\/ !!!! Change 0xB5 (putfield) to 0xCC (withfield)\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 10) { \/\/ LineNumberTable at 0x015E\n+              [2] { \/\/ line_number_table\n+                0  11; \/\/  at 0x016A\n+                6  12; \/\/  at 0x016E\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method at 0x016E\n+      0x0001; \/\/ access\n+      #20; \/\/ name_index       : getfield\n+      #21; \/\/ descriptor_index : ()Ljava\/lang\/String;\n+      [1] { \/\/ Attributes\n+        Attr(#17, 29) { \/\/ Code at 0x0176\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40009B0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 6) { \/\/ LineNumberTable at 0x018D\n+              [1] { \/\/ line_number_table\n+                0  15; \/\/  at 0x0199\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#22, 2) { \/\/ SourceFile at 0x019B\n+      #23;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class putfieldObject\n+\n+\n+\n+\/* This jcod class is based on this Java code.  To see what changed from the\n+   original jcod file, search for !!!!.\n+public primitive final class putfieldPrimitive {\n+    int x;\n+\n+    public putfieldPrimitive(boolean odd) {\n+        if (odd) {\n+            x = 5;\n+        } else {\n+            x = 6;\n+        }\n+    }\n+\n+    public int getX() {\n+        return x;\n+    }\n+}\n+*\/\n+\n+\/\/ If putfieldPrimitive.<init>(bool) is passed TRUE then it uses a withfield bytecode.\n+\/\/ Otherwise, it uses a putfield bytecode.\n+\n+class putfieldPrimitive {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [20] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"putfieldPrimitive\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x13\n+    NameAndType #5 #6; \/\/ #4     at 0x18\n+    Utf8 \"x\"; \/\/ #5     at 0x1D\n+    Utf8 \"I\"; \/\/ #6     at 0x21\n+    class #8; \/\/ #7     at 0x25\n+    Utf8 \"java\/lang\/Object\"; \/\/ #8     at 0x28\n+    Utf8 \"getX\"; \/\/ #9     at 0x3B\n+    Utf8 \"()I\"; \/\/ #10     at 0x42\n+    Utf8 \"Code\"; \/\/ #11     at 0x48\n+    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x4F\n+    Utf8 \"<init>\"; \/\/ #13     at 0x61\n+    Utf8 \"(Z)QputfieldPrimitive;\"; \/\/ #14     at 0x6A\n+    Utf8 \"StackMapTable\"; \/\/ #15     at 0x75\n+    class #17; \/\/ #16     at 0x85\n+    Utf8 \"QputfieldPrimitive;\"; \/\/ #17     at 0x88\n+    Utf8 \"SourceFile\"; \/\/ #18     at 0x90\n+    Utf8 \"putfieldPrimitive.java\"; \/\/ #19     at 0x9D\n+  } \/\/ Constant Pool\n+\n+  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #7;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [1] { \/\/ Fields\n+    {  \/\/ field at 0xB2\n+      0x0010; \/\/ access\n+      #5; \/\/ name_index       : x\n+      #6; \/\/ descriptor_index : I\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [2] { \/\/ Methods\n+    {  \/\/ method at 0xBC\n+      0x0001; \/\/ access\n+      #9; \/\/ name_index       : getX\n+      #10; \/\/ descriptor_index : ()I\n+      [1] { \/\/ Attributes\n+        Attr(#11, 29) { \/\/ Code at 0xC4\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40003AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#12, 6) { \/\/ LineNumberTable at 0xDB\n+              [1] { \/\/ line_number_table\n+                0  13; \/\/  at 0xE7\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method at 0xE7\n+      0x0009; \/\/ access\n+      #13; \/\/ name_index       : <init>\n+      #14; \/\/ descriptor_index : (Z)QputfieldPrimitive;\n+      [1] { \/\/ Attributes\n+        Attr(#11, 84) { \/\/ Code at 0xEF  \/\/ !!! Change 83 -> 84\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[29]{             \/\/ !!!! Change 28 -> 29\n+            0xCB00014C1A99000D;\n+            0x082B5FCC00034CA7;\n+            0x000C10062B5FB500;  \/\/ !!!! Change goto target B -> C and 0xCC (withfield) to 0xB5 (putfield)\n+            0x032B4C2BB0;        \/\/ !!!! Inserted 0x2B (aload_1)\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [2] { \/\/ Attributes\n+            Attr(#12, 22) { \/\/ LineNumberTable at 0x011D\n+              [5] { \/\/ line_number_table\n+                0  4; \/\/  at 0x0129\n+                4  5; \/\/  at 0x012D\n+                8  6; \/\/  at 0x0131\n+                18  8; \/\/  at 0x0135\n+                26  10; \/\/  at 0x0139\n+              }\n+            } \/\/ end LineNumberTable\n+            ;\n+            Attr(#15, 9) { \/\/ StackMapTable at 0x0139\n+              [2] { \/\/\n+                252b, 18, [1]z{7b,16}; \/\/ append_frame 1\n+                8b; \/\/ same_frame    \/\/ !!!! change 7 -> 8\n+              }\n+            } \/\/ end StackMapTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#18, 2) { \/\/ SourceFile at 0x014A\n+      #19;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class putfieldPrimitive\n+\n+\n+\n+\/* This jcod class is based on this Java code.  To see what changed from the\n+   original jcod file, search for !!!!.\n+public primitive final class withfieldPrimitive {\n+    int x;\n+\n+    public withfieldPrimitive(boolean odd) {\n+        if (odd) {\n+            x = 5;\n+        } else {\n+            x = 6;\n+        }\n+    }\n+\n+    public int getX() {\n+        return x;\n+    }\n+}\n+*\/\n+\n+\/\/ This class is identical to putfieldPrimitive except for its name.  A new class\n+\/\/ was needed for a fresh constant pool resolution.\n+\/\/ If withfieldPrimitive.<init>(bool) is passed TRUE then it uses a withfield bytecode.\n+\/\/ Otherwise, it uses a putfield bytecode.\n+\n+class withfieldPrimitive {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [20] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"withfieldPrimitive\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x13\n+    NameAndType #5 #6; \/\/ #4     at 0x18\n+    Utf8 \"x\"; \/\/ #5     at 0x1D\n+    Utf8 \"I\"; \/\/ #6     at 0x21\n+    class #8; \/\/ #7     at 0x25\n+    Utf8 \"java\/lang\/Object\"; \/\/ #8     at 0x28\n+    Utf8 \"getX\"; \/\/ #9     at 0x3B\n+    Utf8 \"()I\"; \/\/ #10     at 0x42\n+    Utf8 \"Code\"; \/\/ #11     at 0x48\n+    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x4F\n+    Utf8 \"<init>\"; \/\/ #13     at 0x61\n+    Utf8 \"(Z)QwithfieldPrimitive;\"; \/\/ #14     at 0x6A\n+    Utf8 \"StackMapTable\"; \/\/ #15     at 0x75\n+    class #17; \/\/ #16     at 0x85\n+    Utf8 \"QwithfieldPrimitive;\"; \/\/ #17     at 0x88\n+    Utf8 \"SourceFile\"; \/\/ #18     at 0x90\n+    Utf8 \"withfieldPrimitive.java\"; \/\/ #19     at 0x9D\n+  } \/\/ Constant Pool\n+\n+  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #7;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [1] { \/\/ Fields\n+    {  \/\/ field at 0xB2\n+      0x0010; \/\/ access\n+      #5; \/\/ name_index       : x\n+      #6; \/\/ descriptor_index : I\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [2] { \/\/ Methods\n+    {  \/\/ method at 0xBC\n+      0x0001; \/\/ access\n+      #9; \/\/ name_index       : getX\n+      #10; \/\/ descriptor_index : ()I\n+      [1] { \/\/ Attributes\n+        Attr(#11, 29) { \/\/ Code at 0xC4\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40003AC;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#12, 6) { \/\/ LineNumberTable at 0xDB\n+              [1] { \/\/ line_number_table\n+                0  13; \/\/  at 0xE7\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method at 0xE7\n+      0x0009; \/\/ access\n+      #13; \/\/ name_index       : <init>\n+      #14; \/\/ descriptor_index : (Z)QwithfieldPrimitive;\n+      [1] { \/\/ Attributes\n+        Attr(#11, 84) { \/\/ Code at 0xEF  \/\/ !!! Change 83 -> 84\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[29]{             \/\/ !!!! Change 28 -> 29\n+            0xCB00014C1A99000D;\n+            0x082B5FCC00034CA7;\n+            0x000C10062B5FB500;  \/\/ !!!! Change goto target B -> C and 0xCC (withfield) to 0xB5 (putfield)\n+            0x032B4C2BB0;        \/\/ !!!! Inserted 0x2B (aload_1)\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [2] { \/\/ Attributes\n+            Attr(#12, 22) { \/\/ LineNumberTable at 0x011D\n+              [5] { \/\/ line_number_table\n+                0  4; \/\/  at 0x0129\n+                4  5; \/\/  at 0x012D\n+                8  6; \/\/  at 0x0131\n+                18  8; \/\/  at 0x0135\n+                26  10; \/\/  at 0x0139\n+              }\n+            } \/\/ end LineNumberTable\n+            ;\n+            Attr(#15, 9) { \/\/ StackMapTable at 0x0139\n+              [2] { \/\/\n+                252b, 18, [1]z{7b,16}; \/\/ append_frame 1\n+                8b; \/\/ same_frame    \/\/ !!!! change 7 -> 8\n+              }\n+            } \/\/ end StackMapTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#18, 2) { \/\/ SourceFile at 0x014A\n+      #19;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class withfieldPrimitive\n+\n+\n+\n+\/* This jcod class is based on this Java code. To see what changed from the\n+   original jcod file search for !!!!.\n+public primitive final class withfieldNull {\n+    int x;\n+    public withfieldNull() {\n+        String s = null;\n+        x = 5;\n+    }\n+}\n+*\/\n+\/\/ This class tests a withfield bytecode with a stack operand that is null.\n+class withfieldNull {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [15] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"withfieldNull\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x19\n+    NameAndType #5 #6; \/\/ #4     at 0x1E\n+    Utf8 \"x\"; \/\/ #5     at 0x23\n+    Utf8 \"I\"; \/\/ #6     at 0x27\n+    class #8; \/\/ #7     at 0x2B\n+    Utf8 \"java\/lang\/Object\"; \/\/ #8     at 0x2E\n+    Utf8 \"<init>\"; \/\/ #9     at 0x41\n+    Utf8 \"()QwithfieldNull;\"; \/\/ #10     at 0x4A\n+    Utf8 \"Code\"; \/\/ #11     at 0x5A\n+    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x61\n+    Utf8 \"SourceFile\"; \/\/ #13     at 0x73\n+    Utf8 \"withfieldNull.java\"; \/\/ #14     at 0x80\n+  } \/\/ Constant Pool\n+\n+  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #7;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [1] { \/\/ Fields\n+    {  \/\/ field at 0x9B\n+      0x0010; \/\/ access\n+      #5; \/\/ name_index       : x\n+      #6; \/\/ descriptor_index : I\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [1] { \/\/ Methods\n+    {  \/\/ method at 0xA5\n+      0x0009; \/\/ access\n+      #9; \/\/ name_index       : <init>\n+      #10; \/\/ descriptor_index : ()QwithfieldNull;\n+      [1] { \/\/ Attributes\n+        Attr(#11, 51) { \/\/ Code at 0xAD\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[15]{\n+            0xCB00014B014C0801; \/\/ !!!! Change 0x2A (aload_0) to 0x01 (aconst_null)\n+            0x5FCC00034B2AB0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#12, 18) { \/\/ LineNumberTable at 0xCE\n+              [4] { \/\/ line_number_table\n+                0  4; \/\/  at 0xDA\n+                4  5; \/\/  at 0xDE\n+                6  6; \/\/  at 0xE2\n+                13  7; \/\/  at 0xE6\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#13, 2) { \/\/ SourceFile at 0xE8\n+      #14;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class withfieldNull\n+\n+\n+\n+\/* Thexe jcod classes are based on this Java code. To see what changed from the\n+   original jcod file search for !!!!.\n+\n+public class WrongPrimWF {\n+\n+    public primitive final class Dot { }\n+\n+    public primitive final class Loc { }\n+\n+    public primitive final class Both {\n+        Dot dot;\n+        Loc loc;\n+        Both(Dot d, Loc l) {\n+            dot = d;   \/\/ this d is changed to l to cause the VerifyError\n+            loc = l;\n+        }\n+    }\n+\n+    public WrongPrimWF() {\n+        Both b = new Both(new Dot(), new Loc());\n+    }\n+}\n+\n+*\/\n+\n+\/\/ Test that a withfield opcode, whose stack operand 'Loc' is a different primitive type\n+\/\/ than the primitive class in its constant pool field_res,f causes a VerifyError exception.\n+class WrongPrimWF$Dot {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [20] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"WrongPrimWF$Dot\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x1F\n+    NameAndType #5 #6; \/\/ #4     at 0x24\n+    Utf8 \"this$0\"; \/\/ #5     at 0x29\n+    Utf8 \"LWrongPrimWF;\"; \/\/ #6     at 0x32\n+    class #8; \/\/ #7     at 0x42\n+    Utf8 \"java\/lang\/Object\"; \/\/ #8     at 0x45\n+    Utf8 \"<init>\"; \/\/ #9     at 0x58\n+    Utf8 \"(LWrongPrimWF;)QWrongPrimWF$Dot;\"; \/\/ #10     at 0x61\n+    Utf8 \"Code\"; \/\/ #11     at 0x84\n+    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x8B\n+    Utf8 \"SourceFile\"; \/\/ #13     at 0x9D\n+    Utf8 \"WrongPrimWF.java\"; \/\/ #14     at 0xAA\n+    Utf8 \"NestHost\"; \/\/ #15     at 0xBD\n+    class #17; \/\/ #16     at 0xC8\n+    Utf8 \"WrongPrimWF\"; \/\/ #17     at 0xCB\n+    Utf8 \"InnerClasses\"; \/\/ #18     at 0xD9\n+    Utf8 \"Dot\"; \/\/ #19     at 0xE8\n+  } \/\/ Constant Pool\n+\n+  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #7;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [1] { \/\/ Fields\n+    {  \/\/ field at 0xF8\n+      0x1010; \/\/ access\n+      #5; \/\/ name_index       : this$0\n+      #6; \/\/ descriptor_index : LWrongPrimWF;\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [1] { \/\/ Methods\n+    {  \/\/ method at 0x0102\n+      0x0009; \/\/ access\n+      #9; \/\/ name_index       : <init>\n+      #10; \/\/ descriptor_index : (LWrongPrimWF;)QWrongPrimWF$Dot;\n+      [1] { \/\/ Attributes\n+        Attr(#11, 37) { \/\/ Code at 0x010A\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[13]{\n+            0xCB00014C2A2B5FCC;\n+            0x00034C2BB0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#12, 6) { \/\/ LineNumberTable at 0x0129\n+              [1] { \/\/ line_number_table\n+                0  3; \/\/  at 0x0135\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [3] { \/\/ Attributes\n+    Attr(#13, 2) { \/\/ SourceFile at 0x0137\n+      #14;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#15, 2) { \/\/ NestHost at 0x013F\n+      #16; \/\/ WrongPrimWF at 0x0147\n+    } \/\/ end NestHost\n+    ;\n+    Attr(#18, 10) { \/\/ InnerClasses at 0x0147\n+      [1] { \/\/ classes\n+        #1 #16 #19 273; \/\/  at 0x0157\n+      }\n+    } \/\/ end InnerClasses\n+  } \/\/ Attributes\n+} \/\/ end class WrongPrimWF$Dot\n+\n+\n+class WrongPrimWF$Loc {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [20] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"WrongPrimWF$Loc\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x1F\n+    NameAndType #5 #6; \/\/ #4     at 0x24\n+    Utf8 \"this$0\"; \/\/ #5     at 0x29\n+    Utf8 \"LWrongPrimWF;\"; \/\/ #6     at 0x32\n+    class #8; \/\/ #7     at 0x42\n+    Utf8 \"java\/lang\/Object\"; \/\/ #8     at 0x45\n+    Utf8 \"<init>\"; \/\/ #9     at 0x58\n+    Utf8 \"(LWrongPrimWF;)QWrongPrimWF$Loc;\"; \/\/ #10     at 0x61\n+    Utf8 \"Code\"; \/\/ #11     at 0x84\n+    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x8B\n+    Utf8 \"SourceFile\"; \/\/ #13     at 0x9D\n+    Utf8 \"WrongPrimWF.java\"; \/\/ #14     at 0xAA\n+    Utf8 \"NestHost\"; \/\/ #15     at 0xBD\n+    class #17; \/\/ #16     at 0xC8\n+    Utf8 \"WrongPrimWF\"; \/\/ #17     at 0xCB\n+    Utf8 \"InnerClasses\"; \/\/ #18     at 0xD9\n+    Utf8 \"Loc\"; \/\/ #19     at 0xE8\n+  } \/\/ Constant Pool\n+\n+  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #7;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [1] { \/\/ Fields\n+    {  \/\/ field at 0xF8\n+      0x1010; \/\/ access\n+      #5; \/\/ name_index       : this$0\n+      #6; \/\/ descriptor_index : LWrongPrimWF;\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [1] { \/\/ Methods\n+    {  \/\/ method at 0x0102\n+      0x0009; \/\/ access\n+      #9; \/\/ name_index       : <init>\n+      #10; \/\/ descriptor_index : (LWrongPrimWF;)QWrongPrimWF$Loc;\n+      [1] { \/\/ Attributes\n+        Attr(#11, 37) { \/\/ Code at 0x010A\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[13]{\n+            0xCB00014C2A2B5FCC;\n+            0x00034C2BB0;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#12, 6) { \/\/ LineNumberTable at 0x0129\n+              [1] { \/\/ line_number_table\n+                0  5; \/\/  at 0x0135\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [3] { \/\/ Attributes\n+    Attr(#13, 2) { \/\/ SourceFile at 0x0137\n+      #14;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#15, 2) { \/\/ NestHost at 0x013F\n+      #16; \/\/ WrongPrimWF at 0x0147\n+    } \/\/ end NestHost\n+    ;\n+    Attr(#18, 10) { \/\/ InnerClasses at 0x0147\n+      [1] { \/\/ classes\n+        #1 #16 #19 273; \/\/  at 0x0157\n+      }\n+    } \/\/ end InnerClasses\n+  } \/\/ Attributes\n+} \/\/ end class WrongPrimWF$Loc\n+\n+\n+class WrongPrimWF$Both {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [34] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"WrongPrimWF$Both\"; \/\/ #2     at 0x0D\n+    Field #1 #4; \/\/ #3     at 0x20\n+    NameAndType #5 #6; \/\/ #4     at 0x25\n+    Utf8 \"this$0\"; \/\/ #5     at 0x2A\n+    Utf8 \"LWrongPrimWF;\"; \/\/ #6     at 0x33\n+    Field #1 #8; \/\/ #7     at 0x43\n+    NameAndType #9 #10; \/\/ #8     at 0x48\n+    Utf8 \"dot\"; \/\/ #9     at 0x4D\n+    Utf8 \"QWrongPrimWF$Dot;\"; \/\/ #10     at 0x53\n+    Field #1 #12; \/\/ #11     at 0x67\n+    NameAndType #13 #14; \/\/ #12     at 0x6C\n+    Utf8 \"loc\"; \/\/ #13     at 0x71\n+    Utf8 \"QWrongPrimWF$Loc;\"; \/\/ #14     at 0x77\n+    class #16; \/\/ #15     at 0x8B\n+    Utf8 \"java\/lang\/Object\"; \/\/ #16     at 0x8E\n+    Utf8 \"<init>\"; \/\/ #17     at 0xA1\n+    Utf8 \"(LWrongPrimWF;QWrongPrimWF$Dot;QWrongPrimWF$Loc;)QWrongPrimWF$Both;\"; \/\/ #18     at 0xAA\n+    Utf8 \"Code\"; \/\/ #19     at 0xF0\n+    Utf8 \"LineNumberTable\"; \/\/ #20     at 0xF7\n+    Utf8 \"SourceFile\"; \/\/ #21     at 0x0109\n+    Utf8 \"WrongPrimWF.java\"; \/\/ #22     at 0x0116\n+    Utf8 \"NestHost\"; \/\/ #23     at 0x0129\n+    class #25; \/\/ #24     at 0x0134\n+    Utf8 \"WrongPrimWF\"; \/\/ #25     at 0x0137\n+    Utf8 \"InnerClasses\"; \/\/ #26     at 0x0145\n+    Utf8 \"Both\"; \/\/ #27     at 0x0154\n+    class #29; \/\/ #28     at 0x015B\n+    Utf8 \"WrongPrimWF$Dot\"; \/\/ #29     at 0x015E\n+    Utf8 \"Dot\"; \/\/ #30     at 0x0170\n+    class #32; \/\/ #31     at 0x0176\n+    Utf8 \"WrongPrimWF$Loc\"; \/\/ #32     at 0x0179\n+    Utf8 \"Loc\"; \/\/ #33     at 0x018B\n+  } \/\/ Constant Pool\n+\n+  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #15;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [3] { \/\/ Fields\n+    {  \/\/ field at 0x019B\n+      0x0010; \/\/ access\n+      #9; \/\/ name_index       : dot\n+      #10; \/\/ descriptor_index : QWrongPrimWF$Dot;\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ field at 0x01A3\n+      0x0010; \/\/ access\n+      #13; \/\/ name_index       : loc\n+      #14; \/\/ descriptor_index : QWrongPrimWF$Loc;\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ field at 0x01AB\n+      0x1010; \/\/ access\n+      #5; \/\/ name_index       : this$0\n+      #6; \/\/ descriptor_index : LWrongPrimWF;\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Fields\n+\n+  [1] { \/\/ Methods\n+    {  \/\/ method at 0x01B5\n+      0x0008; \/\/ access\n+      #17; \/\/ name_index       : <init>\n+      #18; \/\/ descriptor_index : (LWrongPrimWF;QWrongPrimWF$Dot;QWrongPrimWF$Loc;)QWrongPrimWF$Both;\n+      [1] { \/\/ Attributes\n+        Attr(#19, 63) { \/\/ Code at 0x01BD\n+          2; \/\/ max_stack\n+          4; \/\/ max_locals\n+          Bytes[27]{\n+            0xCB00014E2A2D5FCC;\n+            0x00034E2C2D5FCC00; \/\/ !!!! change 2B (aload_1) to 2C (aload_2) to put Loc on the stack.\n+            0x074E2C2D5FCC000B; \/\/      this should cause a VerifyError because withfield is assigning\n+            0x4E2DB0;           \/\/      to a field of type Dot.\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#20, 18) { \/\/ LineNumberTable at 0x01EA\n+              [4] { \/\/ line_number_table\n+                0  10; \/\/  at 0x01F6\n+                11  11; \/\/  at 0x01FA\n+                18  12; \/\/  at 0x01FE\n+                25  13; \/\/  at 0x0202\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [3] { \/\/ Attributes\n+    Attr(#21, 2) { \/\/ SourceFile at 0x0204\n+      #22;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#23, 2) { \/\/ NestHost at 0x020C\n+      #24; \/\/ WrongPrimWF at 0x0214\n+    } \/\/ end NestHost\n+    ;\n+    Attr(#26, 26) { \/\/ InnerClasses at 0x0214\n+      [3] { \/\/ classes\n+        #1 #24 #27 273; \/\/  at 0x0224\n+        #28 #24 #30 273; \/\/  at 0x022C\n+        #31 #24 #33 273; \/\/  at 0x0234\n+      }\n+    } \/\/ end InnerClasses\n+  } \/\/ Attributes\n+} \/\/ end class WrongPrimWF$Both\n+\n+\n+class WrongPrimWF {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [33] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1     at 0x0A\n+    class #4; \/\/ #2     at 0x0F\n+    NameAndType #5 #6; \/\/ #3     at 0x12\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n+    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n+    Utf8 \"()V\"; \/\/ #6     at 0x33\n+    Method #8 #9; \/\/ #7     at 0x39\n+    class #10; \/\/ #8     at 0x3E\n+    NameAndType #5 #11; \/\/ #9     at 0x41\n+    Utf8 \"WrongPrimWF$Dot\"; \/\/ #10     at 0x46\n+    Utf8 \"(LWrongPrimWF;)QWrongPrimWF$Dot;\"; \/\/ #11     at 0x58\n+    Method #13 #14; \/\/ #12     at 0x7B\n+    class #15; \/\/ #13     at 0x80\n+    NameAndType #5 #16; \/\/ #14     at 0x83\n+    Utf8 \"WrongPrimWF$Loc\"; \/\/ #15     at 0x88\n+    Utf8 \"(LWrongPrimWF;)QWrongPrimWF$Loc;\"; \/\/ #16     at 0x9A\n+    Method #18 #19; \/\/ #17     at 0xBD\n+    class #20; \/\/ #18     at 0xC2\n+    NameAndType #5 #21; \/\/ #19     at 0xC5\n+    Utf8 \"WrongPrimWF$Both\"; \/\/ #20     at 0xCA\n+    Utf8 \"(LWrongPrimWF;QWrongPrimWF$Dot;QWrongPrimWF$Loc;)QWrongPrimWF$Both;\"; \/\/ #21     at 0xDD\n+    class #23; \/\/ #22     at 0x0123\n+    Utf8 \"WrongPrimWF\"; \/\/ #23     at 0x0126\n+    Utf8 \"Code\"; \/\/ #24     at 0x0134\n+    Utf8 \"LineNumberTable\"; \/\/ #25     at 0x013B\n+    Utf8 \"SourceFile\"; \/\/ #26     at 0x014D\n+    Utf8 \"WrongPrimWF.java\"; \/\/ #27     at 0x015A\n+    Utf8 \"NestMembers\"; \/\/ #28     at 0x016D\n+    Utf8 \"InnerClasses\"; \/\/ #29     at 0x017B\n+    Utf8 \"Dot\"; \/\/ #30     at 0x018A\n+    Utf8 \"Loc\"; \/\/ #31     at 0x0190\n+    Utf8 \"Both\"; \/\/ #32     at 0x0196\n+  } \/\/ Constant Pool\n+\n+  0x0021; \/\/ access [ ACC_PUBLIC ACC_SUPER ]\n+  #22;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [0] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [1] { \/\/ Methods\n+    {  \/\/ method at 0x01A9\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index       : <init>\n+      #6; \/\/ descriptor_index : ()V\n+      [1] { \/\/ Attributes\n+        Attr(#24, 50) { \/\/ Code at 0x01B1\n+          3; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[18]{\n+            0x2AB700012A2AB800;\n+            0x072AB8000CB80011;\n+            0x4CB1;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#25, 14) { \/\/ LineNumberTable at 0x01D5\n+              [3] { \/\/ line_number_table\n+                0  16; \/\/  at 0x01E1\n+                4  17; \/\/  at 0x01E5\n+                17  18; \/\/  at 0x01E9\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [3] { \/\/ Attributes\n+    Attr(#26, 2) { \/\/ SourceFile at 0x01EB\n+      #27;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#28, 8) { \/\/ NestMembers at 0x01F3\n+      [3] { \/\/ classes\n+        #18; \/\/ WrongPrimWF$Both at 0x01FD\n+        #13; \/\/ WrongPrimWF$Loc at 0x01FF\n+        #8; \/\/ WrongPrimWF$Dot at 0x0201\n+      }\n+    } \/\/ end NestMembers\n+    ;\n+    Attr(#29, 26) { \/\/ InnerClasses at 0x0201\n+      [3] { \/\/ classes\n+        #8 #22 #30 273; \/\/  at 0x0211\n+        #13 #22 #31 273; \/\/  at 0x0219\n+        #18 #22 #32 273; \/\/  at 0x0221\n+      }\n+    } \/\/ end InnerClasses\n+  } \/\/ Attributes\n+} \/\/ end class WrongPrimWF\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/withfieldTests\/withfieldTests.jcod","additions":1120,"deletions":0,"binary":false,"changes":1120,"status":"added"}]}