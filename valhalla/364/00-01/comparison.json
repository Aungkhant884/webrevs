{"files":[{"patch":"@@ -131,11 +131,1 @@\n-        Attribute.Compound parametricAnno = csym.attribute(syms.parametricType.tsym);\n-        if (supportParametricVM &&\n-                parametricAnno != null &&\n-                enclMethodHasLinkageAnno() &&\n-                !referencesBeingLinked.contains(csym)) {\n-            int linkageIndex = generateLinkage(types.erasure(csym.type), parametricAnno);\n-            if (linkageIndex > 0) {\n-                return linkageIndex;\n-            }\n-        }\n-        return pool.writeIfNeeded(types.erasure(csym.type));\n+        return pool.writeIfNeeded(wrapWithLinkageIfNeeded(types.erasure(csym.type), csym.attribute(syms.parametricType.tsym)));\n@@ -149,11 +139,1 @@\n-        Attribute.Compound parametricAnno = t.tsym.attribute(syms.parametricType.tsym);\n-        if (supportParametricVM &&\n-                parametricAnno != null &&\n-                enclMethodHasLinkageAnno() &&\n-                !referencesBeingLinked.contains(t)) {\n-            int linkageIndex = generateLinkage(t, parametricAnno);\n-            if (linkageIndex > 0) {\n-                return linkageIndex;\n-            }\n-        }\n-        return pool.writeIfNeeded(types.erasure(t));\n+        return pool.writeIfNeeded(wrapWithLinkageIfNeeded(types.erasure(t), t.tsym.attribute(syms.parametricType.tsym)));\n@@ -177,11 +157,1 @@\n-        Attribute.Compound parametricAnno = s.attribute(syms.parametricType.tsym);\n-        if (supportParametricVM &&\n-                parametricAnno != null &&\n-                enclMethodHasLinkageAnno() &&\n-                !referencesBeingLinked.contains(s)) {\n-            int linkageIndex = generateLinkage(s, parametricAnno);\n-            if (linkageIndex > 0) {\n-                return linkageIndex;\n-            }\n-        }\n-        return pool.writeIfNeeded(s);\n+        return pool.writeIfNeeded(wrapWithLinkageIfNeeded(s, s.attribute(syms.parametricType.tsym)));\n@@ -201,1 +171,1 @@\n-        int generateLinkage(Object s, Attribute.Compound parametricAnno) {\n+        PoolConstant wrapWithLinkageIfNeeded(PoolConstant poolConstant, Attribute.Compound parametricAnno) {\n@@ -203,1 +173,6 @@\n-            if (!supportParametricVM) return -1;\n+            if (!supportParametricVM ||\n+                    parametricAnno == null ||\n+                    !enclMethodHasLinkageAnno() ||\n+                    referencesBeingLinked.contains(poolConstant)) {\n+                return poolConstant;\n+            }\n@@ -220,1 +195,1 @@\n-                    return -1;\n+                    return poolConstant;\n@@ -232,1 +207,1 @@\n-                    return -1;\n+                    return poolConstant;\n@@ -238,1 +213,1 @@\n-                    return -1;\n+                    return poolConstant;\n@@ -240,2 +215,2 @@\n-                referencesBeingLinked.add(s);\n-                return pool.writeIfNeeded(new Linkage(linkageMethodValueStr, s, false));\n+                referencesBeingLinked.add(poolConstant);\n+                return new Linkage(linkageMethodValueStr, poolConstant, false);\n@@ -245,1 +220,1 @@\n-                    return -1;\n+                    return poolConstant;\n@@ -247,2 +222,2 @@\n-                referencesBeingLinked.add(s);\n-                return pool.writeIfNeeded(new Linkage(linkageClassValueStr, s, s instanceof Type));\n+                referencesBeingLinked.add(poolConstant);\n+                return new Linkage(linkageClassValueStr, poolConstant, poolConstant instanceof Type);\n@@ -252,1 +227,1 @@\n-                    return -1;\n+                    return poolConstant;\n@@ -254,2 +229,2 @@\n-                referencesBeingLinked.add(s);\n-                return pool.writeIfNeeded(new Linkage(linkageMethodValueStr, s, s instanceof Type));\n+                referencesBeingLinked.add(poolConstant);\n+                return new Linkage(linkageMethodValueStr, poolConstant, poolConstant instanceof Type);\n@@ -258,1 +233,1 @@\n-            return -1;\n+            return poolConstant;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/PoolWriter.java","additions":22,"deletions":47,"binary":false,"changes":69,"status":"modified"}]}