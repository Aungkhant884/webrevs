{"files":[{"patch":"@@ -28,1 +28,1 @@\n-import jdk.internal.value.PrimitiveClass;\n+import jdk.internal.misc.PreviewFeatures;\n@@ -324,1 +324,2 @@\n-        cw.visit(CLASSFILE_VERSION, ACC_SUPER + ACC_FINAL + ACC_SYNTHETIC,\n+        int version = CLASSFILE_VERSION | (PreviewFeatures.isEnabled() ? Opcodes.V_PREVIEW : 0);\n+        cw.visit(version, ACC_SUPER + ACC_FINAL + ACC_SYNTHETIC,\n@@ -645,1 +646,1 @@\n-            return (c.isValue() && !PrimitiveClass.isPrimitiveClass(c)) || PrimitiveClass.isPrimitiveValueType(c);\n+            return c.isValue();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import jdk.internal.misc.PreviewFeatures;\n@@ -464,1 +465,2 @@\n-        visit(CLASSFILE_VERSION, accessFlags, dotToSlash(className), null,\n+        int version = CLASSFILE_VERSION | (PreviewFeatures.isEnabled() ? Opcodes.V_PREVIEW : 0);\n+        visit(version, accessFlags, dotToSlash(className), null,\n@@ -492,0 +494,2 @@\n+         *\n+         * Determine if any value classes to be preloaded.\n@@ -493,0 +497,1 @@\n+        Set<Class<?>> preloadClasses = new HashSet<>();\n@@ -495,0 +500,3 @@\n+            for (ProxyMethod pm : sigmethods) {\n+                preloadClasses.addAll(pm.preloadClasses());\n+            }\n@@ -499,1 +507,0 @@\n-        Set<Class<?>> preloadClasses = new HashSet<>();\n@@ -508,1 +515,0 @@\n-                preloadClasses.addAll(pm.preloadClasses());\n@@ -860,2 +866,1 @@\n-            return (c.isValue() && !PrimitiveClass.isPrimitiveClass(c)) ||\n-                    PrimitiveClass.isPrimitiveValueType(c);\n+            return c.isValue();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ProxyGenerator.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"}]}