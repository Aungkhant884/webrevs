{"files":[{"patch":"@@ -1,443 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ Test that a VerifyError exception is thrown when trying to pass a null\n-\/\/ when the formal parameter is an inline type.\n-\/\/\n-\/\/ \/\/ Java program emulating the jcod contents.\n-\/\/ public inline final class NoNullVT {\n-\/\/     final int x;\n-\/\/     final int y;\n-\/\/\n-\/\/     private NoNullVT() {\n-\/\/         x = 0;\n-\/\/         y = 0;\n-\/\/     }\n-\/\/\n-\/\/     public int getX() { return x; }\n-\/\/     public int getY() { return y; }\n-\/\/\n-\/\/     public boolean isSameNoNullVT(NoNullVT that) {\n-\/\/         return this.getX() == that.getX() && this.getY() == that.getY();\n-\/\/     }\n-\/\/\n-\/\/     public boolean equals(Object o) {\n-\/\/         if(o instanceof NoNullVT) {\n-\/\/             return ((NoNullVT)o).x == x &&  ((NoNullVT)o).y == y;\n-\/\/         } else {\n-\/\/             return false;\n-\/\/         }\n-\/\/     }\n-\/\/\n-\/\/     public static NoNullVT createNoNullVT(int x, int y) {\n-\/\/         NoNullVT p = NoNullVT.default;\n-\/\/         p = __WithField(p.x, x);\n-\/\/         p = __WithField(p.y, y);\n-\/\/         return p;\n-\/\/     }\n-\/\/\n-\/\/     public static void main(String[] args) {\n-\/\/         String str = null;\n-\/\/         NoNullVT a = createNoNullVT(3, 4);\n-\/\/         NoNullVT b = createNoNullVT(2, 4);\n-\/\/         boolean res = a.isSameNoNullVT(null); \/\/ Should throw VerifyError\n-\/\/     }\n-\/\/ }\n-\n-class NoNullVT {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  62; \/\/ version\n-  [63] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #36; \/\/ #1     at 0x0A\n-    Field #1 #37; \/\/ #2     at 0x0D\n-    Field #1 #38; \/\/ #3     at 0x12\n-    Method #1 #39; \/\/ #4     at 0x17\n-    Method #1 #40; \/\/ #5     at 0x1C\n-    class #41; \/\/ #6     at 0x21\n-    Method #1 #42; \/\/ #7     at 0x24\n-    Method #1 #43; \/\/ #8     at 0x29\n-    InvokeDynamic 0s #46; \/\/ #9     at 0x2E\n-    InvokeDynamic 0s #47; \/\/ #10     at 0x33\n-    class #48; \/\/ #11     at 0x38\n-    Utf8 \"x\"; \/\/ #12     at 0x3B\n-    Utf8 \"I\"; \/\/ #13     at 0x3F\n-    Utf8 \"y\"; \/\/ #14     at 0x43\n-    Utf8 \"getX\"; \/\/ #15     at 0x47\n-    Utf8 \"()I\"; \/\/ #16     at 0x4E\n-    Utf8 \"Code\"; \/\/ #17     at 0x54\n-    Utf8 \"LineNumberTable\"; \/\/ #18     at 0x5B\n-    Utf8 \"getY\"; \/\/ #19     at 0x6D\n-    Utf8 \"isSameNoNullVT\"; \/\/ #20     at 0x74\n-    Utf8 \"(QNoNullVT;)Z\"; \/\/ #21     at 0x85\n-    Utf8 \"StackMapTable\"; \/\/ #22     at 0x95\n-    Utf8 \"equals\"; \/\/ #23     at 0xA5\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #24     at 0xAE\n-    Utf8 \"createNoNullVT\"; \/\/ #25     at 0xC6\n-    Utf8 \"(II)QNoNullVT;\"; \/\/ #26     at 0xD7\n-    Utf8 \"main\"; \/\/ #27     at 0xE8\n-    Utf8 \"([Ljava\/lang\/String;)V\"; \/\/ #28     at 0xEF\n-    Utf8 \"hashCode\"; \/\/ #29     at 0x0108\n-    Utf8 \"toString\"; \/\/ #30     at 0x0113\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #31     at 0x011E\n-    Utf8 \"<init>\"; \/\/ #32     at 0x0135\n-    Utf8 \"()QNoNullVT;\"; \/\/ #33     at 0x013E\n-    Utf8 \"SourceFile\"; \/\/ #34     at 0x014D\n-    Utf8 \"NoNullVT.java\"; \/\/ #35     at 0x015A\n-    Utf8 \"NoNullVT\"; \/\/ #36     at 0x016A\n-    NameAndType #12 #13; \/\/ #37     at 0x0175\n-    NameAndType #14 #13; \/\/ #38     at 0x017A\n-    NameAndType #15 #16; \/\/ #39     at 0x017F\n-    NameAndType #19 #16; \/\/ #40     at 0x0184\n-    Utf8 \"QNoNullVT;\"; \/\/ #41     at 0x0189\n-    NameAndType #25 #26; \/\/ #42     at 0x0196\n-    NameAndType #20 #21; \/\/ #43     at 0x019B\n-    Utf8 \"BootstrapMethods\"; \/\/ #44     at 0x01A0\n-    MethodHandle 6b #49; \/\/ #45     at 0x01B3\n-    NameAndType #29 #50; \/\/ #46     at 0x01B7\n-    NameAndType #30 #51; \/\/ #47     at 0x01BC\n-    Utf8 \"java\/lang\/Object\"; \/\/ #48     at 0x01C1\n-    Method #52 #53; \/\/ #49     at 0x01D4\n-    Utf8 \"(QNoNullVT;)I\"; \/\/ #50     at 0x01D9\n-    Utf8 \"(QNoNullVT;)Ljava\/lang\/String;\"; \/\/ #51     at 0x01E9\n-    class #54; \/\/ #52     at 0x020A\n-    NameAndType #55 #59; \/\/ #53     at 0x020D\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #54     at 0x0212\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #55     at 0x023B\n-    class #61; \/\/ #56     at 0x0251\n-    Utf8 \"Lookup\"; \/\/ #57     at 0x0254\n-    Utf8 \"InnerClasses\"; \/\/ #58     at 0x025D\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #59     at 0x026C\n-    class #62; \/\/ #60     at 0x02E2\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #61     at 0x02E5\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #62     at 0x030D\n-  } \/\/ Constant Pool\n-\n-  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #11;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [2] { \/\/ fields\n-    { \/\/ Member at 0x0338\n-      0x0010; \/\/ access\n-      #12; \/\/ name_cpx\n-      #13; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0340\n-      0x0010; \/\/ access\n-      #14; \/\/ name_cpx\n-      #13; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [9] { \/\/ methods\n-    { \/\/ Member at 0x034A\n-      0x0001; \/\/ access\n-      #15; \/\/ name_cpx\n-      #16; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 29) { \/\/ Code at 0x0352\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40002AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#18, 6) { \/\/ LineNumberTable at 0x0369\n-              [1] { \/\/ LineNumberTable\n-                0  10; \/\/  at 0x0375\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0375\n-      0x0001; \/\/ access\n-      #19; \/\/ name_cpx\n-      #16; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 29) { \/\/ Code at 0x037D\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB40003AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#18, 6) { \/\/ LineNumberTable at 0x0394\n-              [1] { \/\/ LineNumberTable\n-                0  11; \/\/  at 0x03A0\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03A0\n-      0x0001; \/\/ access\n-      #20; \/\/ name_cpx\n-      #21; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 63) { \/\/ Code at 0x03A8\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[28]{\n-            0x2AB600042BB60004;\n-            0xA000122AB600052B;\n-            0xB60005A0000704A7;\n-            0x000403AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [2] { \/\/ Attributes\n-            Attr(#18, 6) { \/\/ LineNumberTable at 0x03D6\n-              [1] { \/\/ LineNumberTable\n-                0  14; \/\/  at 0x03E2\n-              }\n-            } \/\/ end LineNumberTable\n-            ;\n-            Attr(#22, 5) { \/\/ StackMapTable at 0x03E2\n-              [2] { \/\/ \n-                26b; \/\/ same_frame\n-                64b, [1]z{1b}; \/\/ same_locals_1_stack_item_frame\n-              }\n-            } \/\/ end StackMapTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x03ED\n-      0x0001; \/\/ access\n-      #23; \/\/ name_cpx\n-      #24; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 87) { \/\/ Code at 0x03F5\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[43]{\n-            0x2BC100019900252B;\n-            0xC00006B400022AB4;\n-            0x0002A000152BC000;\n-            0x06B400032AB40003;\n-            0xA0000704A7000403;\n-            0xAC03AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [2] { \/\/ Attributes\n-            Attr(#18, 14) { \/\/ LineNumberTable at 0x0432\n-              [3] { \/\/ LineNumberTable\n-                0  18; \/\/  at 0x043E\n-                7  19; \/\/  at 0x0442\n-                41  21; \/\/  at 0x0446\n-              }\n-            } \/\/ end LineNumberTable\n-            ;\n-            Attr(#22, 6) { \/\/ StackMapTable at 0x0446\n-              [3] { \/\/ \n-                39b; \/\/ same_frame\n-                64b, [1]z{1b}; \/\/ same_locals_1_stack_item_frame\n-                0b; \/\/ same_frame\n-              }\n-            } \/\/ end StackMapTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0452\n-      0x0009; \/\/ access\n-      #25; \/\/ name_cpx\n-      #26; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 56) { \/\/ Code at 0x045A\n-          2; \/\/ max_stack\n-          3; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014D1A2C5FCC;\n-            0x00024D1B2C5FCC00;\n-            0x034D2CB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#18, 18) { \/\/ LineNumberTable at 0x0480\n-              [4] { \/\/ LineNumberTable\n-                0  26; \/\/  at 0x048C\n-                4  27; \/\/  at 0x0490\n-                11  28; \/\/  at 0x0494\n-                18  29; \/\/  at 0x0498\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0498\n-      0x0009; \/\/ access\n-      #27; \/\/ name_cpx\n-      #28; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 62) { \/\/ Code at 0x04A0\n-          2; \/\/ max_stack\n-          5; \/\/ max_locals\n-          Bytes[22]{\n-            0x014C0607B800074D;\n-            0x0507B800074E2C2B; \/\/ Change last nibble from C to B to load null\n-            0xB600083604B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#18, 22) { \/\/ LineNumberTable at 0x04C8\n-              [5] { \/\/ LineNumberTable\n-                0  33; \/\/  at 0x04D4\n-                2  34; \/\/  at 0x04D8\n-                8  35; \/\/  at 0x04DC\n-                14  36; \/\/  at 0x04E0\n-                21  37; \/\/  at 0x04E4\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x04E4\n-      0x0011; \/\/ access\n-      #29; \/\/ name_cpx\n-      #16; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 31) { \/\/ Code at 0x04EC\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00090000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#18, 6) { \/\/ LineNumberTable at 0x0505\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0511\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0511\n-      0x0011; \/\/ access\n-      #30; \/\/ name_cpx\n-      #31; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 31) { \/\/ Code at 0x0519\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA000A0000B0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#18, 6) { \/\/ LineNumberTable at 0x0532\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x053E\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x053E\n-      0x000A; \/\/ access\n-      #32; \/\/ name_cpx\n-      #33; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#17, 56) { \/\/ Code at 0x0546\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[20]{\n-            0xCB00014B032A5FCC;\n-            0x00024B032A5FCC00;\n-            0x034B2AB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#18, 18) { \/\/ LineNumberTable at 0x056C\n-              [4] { \/\/ LineNumberTable\n-                0  5; \/\/  at 0x0578\n-                4  6; \/\/  at 0x057C\n-                11  7; \/\/  at 0x0580\n-                18  8; \/\/  at 0x0584\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#34, 2) { \/\/ SourceFile at 0x0586\n-      #35;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#58, 10) { \/\/ InnerClasses at 0x058E\n-      [1] { \/\/ InnerClasses\n-        #56 #60 #57 25; \/\/  at 0x059E\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#44, 6) { \/\/ BootstrapMethods at 0x059E\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #45; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-  } \/\/ Attributes\n-} \/\/ end class NoNullVT\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/NoNullVT.jcod","additions":0,"deletions":443,"binary":false,"changes":443,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @compile verifierTests.jcod NoNullVT.jcod\n+ * @compile verifierTests.jcod\n@@ -76,4 +76,0 @@\n-        \/\/ Test that the verifier doesn't require that a withfield bytecode has a Q type operand.\n-        Class newClass = Class.forName(\"withfieldL\");\n-\n-\/*\n@@ -97,9 +93,1 @@\n-        \/\/ Test that VerifyError is thrown if the class for a withfields's cp fieldref\n-        \/\/ entry is java.lang.Object and the reference on the stack is an inline type.\n-        runTestVerifyError(\"wthFldObject\", \"must be identical inline types\");\n-\n-        \/\/ Test VerifyError is thrown if a monitorenter's cp entry is an inline type.\n-        runTestVerifyError(\"monEnterVT\", \"Bad type on operand stack\");\n-*\/\n-\n-        \/\/ Test VerifyError is thrown if a defaultvalue's cp entry is an inline type.\n+        \/\/ Test VerifyError is thrown if a defaultvalue's cp entry is not an inline type.\n@@ -108,2 +96,2 @@\n-        \/\/ Test VerifyError is thrown if a withfield's class operand is not an inline type.\n-\/\/        runTestVerifyError(\"withfieldObj\", \"Bad type on operand stack\");\n+        \/\/ Test that the verifier doesn't require that a withfield bytecode has a Q type operand.\n+        Class newClass = Class.forName(\"withfieldL\");\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/VerifierInlineTypes.java","additions":5,"deletions":17,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-\/\/ The jcod classes in this file were derived from this Java inline type:\n+\/\/ Many of the jcod classes in this file were derived from this Java inline type:\n@@ -407,28 +407,1 @@\n-  [2] { \/\/ methods\n-    { \/\/ Member at 0xDF\n-      0x0000; \/\/ access\n-      #7; \/\/ name_cpx\n-      #8; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#9, 42) { \/\/ Code at 0xE7\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#10, 14) { \/\/ LineNumberTable at 0x0103\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x010F\n-                4  5; \/\/  at 0x0113\n-                9  6; \/\/  at 0x0117\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n+  [1] { \/\/ methods\n@@ -525,28 +498,1 @@\n-  [2] { \/\/ methods\n-    { \/\/ Member at 0xDF\n-      0x0000; \/\/ access\n-      #7; \/\/ name_cpx\n-      #8; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#9, 42) { \/\/ Code at 0xE7\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#10, 14) { \/\/ LineNumberTable at 0x0103\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x010F\n-                4  5; \/\/  at 0x0113\n-                9  6; \/\/  at 0x0117\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n+  [1] { \/\/ methods\n@@ -642,28 +588,1 @@\n-  [2] { \/\/ methods\n-    { \/\/ Member at 0xDF\n-      0x0000; \/\/ access\n-      #7; \/\/ name_cpx\n-      #8; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#9, 42) { \/\/ Code at 0xE7\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#10, 14) { \/\/ LineNumberTable at 0x0103\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x010F\n-                4  5; \/\/  at 0x0113\n-                9  6; \/\/  at 0x0117\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n+  [1] { \/\/ methods\n@@ -861,28 +780,1 @@\n-  [2] { \/\/ methods\n-    { \/\/ Member at 0xDF\n-      0x0000; \/\/ access\n-      #7; \/\/ name_cpx\n-      #8; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#9, 42) { \/\/ Code at 0xE7\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#10, 14) { \/\/ LineNumberTable at 0x0103\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x010F\n-                4  5; \/\/  at 0x0113\n-                9  6; \/\/  at 0x0117\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n+  [1] { \/\/ methods\n@@ -930,127 +822,4 @@\n-\/\/ A new fieldRef was added to the constant pool to point to a field in\n-\/\/ java\/lang\/Object.  The withfield opcode (0XCC) was changed to use this new\n-\/\/ cp entry.  This should cause a VerifyError because even though inline types\n-\/\/ are assignable to java.lang.Object, withfield requires that the cp field class\n-\/\/ and the inline type on the stack, in this case 'wthFldObject', be identical.\n-\/\/\n-class wthFldObject {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  62; \/\/ version\n-  [22] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #4 #17; \/\/ #1     at 0x0A\n-    Field #3 #18; \/\/ #2     at 0x0F\n-    class #12; \/\/ #3     at 0x14\n-    class #19; \/\/ #4     at 0x17\n-    Utf8 \"int_v\"; \/\/ #5     at 0x1A\n-    Utf8 \"I\"; \/\/ #6     at 0x22\n-    Utf8 \"<init>\"; \/\/ #7     at 0x26\n-    Utf8 \"()V\"; \/\/ #8     at 0x2F\n-    Utf8 \"Code\"; \/\/ #9     at 0x35\n-    Utf8 \"LineNumberTable\"; \/\/ #10     at 0x3C\n-    Utf8 \"makewthFldObject\"; \/\/ #11     at 0x4E\n-    Utf8 \"wthFldObject\"; \/\/ #12     at 0x60\n-    Utf8 \"ValueTypes\"; \/\/ #13     at 0x6E\n-    Utf8 \"(I)LwthFldObject;\"; \/\/ #14     at 0x7B\n-    Utf8 \"SourceFile\"; \/\/ #15     at 0x8E\n-    Utf8 \"wthFldObject.java\"; \/\/ #16     at 0x9B\n-    NameAndType #7 #8; \/\/ #17     at 0xAE\n-    NameAndType #5 #6; \/\/ #18     at 0xB3\n-    Utf8 \"java\/lang\/Object\"; \/\/ #19     at 0xB8\n-    class #19; \/\/ #20  \/\/ NEW ClassRef\n-    Field #20 #18; \/\/ #21  \/\/ New FieldRef\n-\n-  } \/\/ Constant Pool\n-\n-  0x0130; \/\/ access [ ACC_INLINE, ACC_SUPER ACC_FINAL ]\n-  #3;\/\/ this_cpx\n-  #4;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ fields\n-    { \/\/ Member at 0xD5\n-      0x0010; \/\/ access\n-      #5; \/\/ name_cpx\n-      #6; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [2] { \/\/ methods\n-    { \/\/ Member at 0xDF\n-      0x0000; \/\/ access\n-      #7; \/\/ name_cpx\n-      #8; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#9, 42) { \/\/ Code at 0xE7\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#10, 14) { \/\/ LineNumberTable at 0x0103\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x010F\n-                4  5; \/\/  at 0x0113\n-                9  6; \/\/  at 0x0117\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0117\n-      0x0008; \/\/ access\n-      #11; \/\/ name_cpx\n-      #14; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#9, 47) { \/\/ Code at 0x011F\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[15]{\n-            0xCB00034C2B1ACC00; \/\/ Changed withfield (0xCC) cp index at byte 8 to point to a field in\n-            0x154C2BCB0003B0;   \/\/ in j.l.Object. Also, added a defaultvalue opcode at byte 11 to push\n-          };                    \/\/ a Value ref so that the verifier won't complain if it sees the areturn.\n-\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#10, 14) { \/\/ LineNumberTable at 0x013D\n-              [3] { \/\/ LineNumberTable\n-                0  8; \/\/  at 0x0149\n-                4  9; \/\/  at 0x014D\n-                10  10; \/\/  at 0x0151\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [2] { \/\/ Attributes\n-    Attr(#15, 2) { \/\/ SourceFile at 0x0153\n-      #16;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#13, 4) { \/\/ ValueTypes at 0x015B\n-      0x00010003;\n-    } \/\/ end ValueTypes\n-  } \/\/ Attributes\n-} \/\/ end class wthFldObject\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ The astore_1 opcode (0x4C) was changed to a monitorenter (0xC2) opcode but\n-\/\/ the operand on the stack is an inline type.\n-\/\/ This should cause a VerifyError because the operand for opcode monitorenter\n-\/\/ cannot be an inline type.\n+\/\/ The cp entry for the defaultvalue opcode was changed to a reference that\n+\/\/ is not an inline type.\n+\/\/ This should cause a VerifyError because the cp entry for opcode defaultvalue\n+\/\/ must be an inline type.\n@@ -1058,1 +827,1 @@\n-class monEnterVT {\n+class defValueObj {\n@@ -1072,2 +841,2 @@\n-    Utf8 \"makemonEnterVT\"; \/\/ #9     at 0x30\n-    Utf8 \"(I)QmonEnterVT;\"; \/\/ #10     at 0x41\n+    Utf8 \"makedefValueObj\"; \/\/ #9     at 0x30\n+    Utf8 \"(I)QdefValueObj;\"; \/\/ #10     at 0x41\n@@ -1083,1 +852,1 @@\n-    Utf8 \"()QmonEnterVT;\"; \/\/ #20     at 0xC9\n+    Utf8 \"()QdefValueObj;\"; \/\/ #20     at 0xC9\n@@ -1085,2 +854,2 @@\n-    Utf8 \"monEnterVT.java\"; \/\/ #22     at 0xE7\n-    Utf8 \"monEnterVT\"; \/\/ #23     at 0xF9\n+    Utf8 \"defValueObj.java\"; \/\/ #22     at 0xE7\n+    Utf8 \"defValueObj\"; \/\/ #23     at 0xF9\n@@ -1095,3 +864,3 @@\n-    Utf8 \"(QmonEnterVT;)I\"; \/\/ #32     at 0x0149\n-    Utf8 \"(QmonEnterVT;Ljava\/lang\/Object;)Z\"; \/\/ #33     at 0x015B\n-    Utf8 \"(QmonEnterVT;)Ljava\/lang\/String;\"; \/\/ #34     at 0x017F\n+    Utf8 \"(QdefValueObj;)I\"; \/\/ #32     at 0x0149\n+    Utf8 \"(QdefValueObj;Ljava\/lang\/Object;)Z\"; \/\/ #33     at 0x015B\n+    Utf8 \"(QdefValueObj;)Ljava\/lang\/String;\"; \/\/ #34     at 0x017F\n@@ -1138,1 +907,1 @@\n-            0xCB0001C21A2B5FCC; \/\/ Changed bytecode at byte 3 from astore_1 to monitorenter.\n+            0xCB00044C1A2B5FCC; \/\/ Changed defaultvalue's cp index at byte 3 from 3 to 4.\n@@ -1277,1 +1046,1 @@\n-} \/\/ end class monEnterVT\n+} \/\/ end class defValueObj\n@@ -1281,6 +1050,2 @@\n-\/\/ The cp entry for the defaultvalue opcode was changed to a reference that\n-\/\/ is not an inline type.\n-\/\/ This should cause a VerifyError because the cp entry for opcode defaultvalue\n-\/\/ must be an inline type.\n-\/\/\n-class defValueObj {\n+\/\/ This class has a withfield opcode with a non-Q type operand.\n+class withfieldL {\n@@ -1290,353 +1055,1 @@\n-  [46] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    class #23; \/\/ #1     at 0x0A\n-    Field #1 #24; \/\/ #2     at 0x0D\n-    InvokeDynamic 0s #27; \/\/ #3     at 0x12\n-    InvokeDynamic 0s #28; \/\/ #4     at 0x17\n-    InvokeDynamic 0s #29; \/\/ #5     at 0x1C\n-    class #30; \/\/ #6     at 0x21\n-    Utf8 \"int_v\"; \/\/ #7     at 0x24\n-    Utf8 \"I\"; \/\/ #8     at 0x2C\n-    Utf8 \"makedefValueObj\"; \/\/ #9     at 0x30\n-    Utf8 \"(I)QdefValueObj;\"; \/\/ #10     at 0x41\n-    Utf8 \"Code\"; \/\/ #11     at 0x53\n-    Utf8 \"LineNumberTable\"; \/\/ #12     at 0x5A\n-    Utf8 \"hashCode\"; \/\/ #13     at 0x6C\n-    Utf8 \"()I\"; \/\/ #14     at 0x77\n-    Utf8 \"equals\"; \/\/ #15     at 0x7D\n-    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #16     at 0x86\n-    Utf8 \"toString\"; \/\/ #17     at 0x9E\n-    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #18     at 0xA9\n-    Utf8 \"<init>\"; \/\/ #19     at 0xC0\n-    Utf8 \"()QdefValueObj;\"; \/\/ #20     at 0xC9\n-    Utf8 \"SourceFile\"; \/\/ #21     at 0xDA\n-    Utf8 \"defValueObj.java\"; \/\/ #22     at 0xE7\n-    Utf8 \"defValueObj\"; \/\/ #23     at 0xF9\n-    NameAndType #7 #8; \/\/ #24     at 0x0106\n-    Utf8 \"BootstrapMethods\"; \/\/ #25     at 0x010B\n-    MethodHandle 6b #31; \/\/ #26     at 0x011E\n-    NameAndType #13 #32; \/\/ #27     at 0x0122\n-    NameAndType #15 #33; \/\/ #28     at 0x0127\n-    NameAndType #17 #34; \/\/ #29     at 0x012C\n-    Utf8 \"java\/lang\/Object\"; \/\/ #30     at 0x0131\n-    Method #35 #36; \/\/ #31     at 0x0144\n-    Utf8 \"(QdefValueObj;)I\"; \/\/ #32     at 0x0149\n-    Utf8 \"(QdefValueObj;Ljava\/lang\/Object;)Z\"; \/\/ #33     at 0x015B\n-    Utf8 \"(QdefValueObj;)Ljava\/lang\/String;\"; \/\/ #34     at 0x017F\n-    class #37; \/\/ #35     at 0x01A2\n-    NameAndType #38 #42; \/\/ #36     at 0x01A5\n-    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #37     at 0x01AA\n-    Utf8 \"makeBootstrapMethod\"; \/\/ #38     at 0x01D3\n-    class #44; \/\/ #39     at 0x01E9\n-    Utf8 \"Lookup\"; \/\/ #40     at 0x01EC\n-    Utf8 \"InnerClasses\"; \/\/ #41     at 0x01F5\n-    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #42     at 0x0204\n-    class #45; \/\/ #43     at 0x027A\n-    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #44     at 0x027D\n-    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #45     at 0x02A5\n-  } \/\/ Constant Pool\n-\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n-  #1;\/\/ this_cpx\n-  #6;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ fields\n-    { \/\/ Member at 0x02D0\n-      0x0010; \/\/ access\n-      #7; \/\/ name_cpx\n-      #8; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [5] { \/\/ methods\n-    { \/\/ Member at 0x02DA\n-      0x0008; \/\/ access\n-      #9; \/\/ name_cpx\n-      #10; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 45) { \/\/ Code at 0x02E2\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00044C1A2B5FCC; \/\/ Changed defaultvalue's cp index at byte 3 from 3 to 4.\n-            0x00024C2BB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 14) { \/\/ LineNumberTable at 0x0301\n-              [3] { \/\/ LineNumberTable\n-                0  8; \/\/  at 0x030D\n-                4  9; \/\/  at 0x0311\n-                11  10; \/\/  at 0x0315\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0315\n-      0x0011; \/\/ access\n-      #13; \/\/ name_cpx\n-      #14; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 31) { \/\/ Code at 0x031D\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00030000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 6) { \/\/ LineNumberTable at 0x0336\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0342\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0342\n-      0x0011; \/\/ access\n-      #15; \/\/ name_cpx\n-      #16; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 32) { \/\/ Code at 0x034A\n-          2; \/\/ max_stack\n-          2; \/\/ max_locals\n-          Bytes[8]{\n-            0x2A2BBA00040000AC;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 6) { \/\/ LineNumberTable at 0x0364\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x0370\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0370\n-      0x0011; \/\/ access\n-      #17; \/\/ name_cpx\n-      #18; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 31) { \/\/ Code at 0x0378\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[7]{\n-            0x2ABA00050000B0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 6) { \/\/ LineNumberTable at 0x0391\n-              [1] { \/\/ LineNumberTable\n-                0  1; \/\/  at 0x039D\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x039D\n-      0x0008; \/\/ access\n-      #19; \/\/ name_cpx\n-      #20; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#11, 45) { \/\/ Code at 0x03A5\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[13]{\n-            0xCB00014B042A5FCC;\n-            0x00024B2AB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#12, 14) { \/\/ LineNumberTable at 0x03C4\n-              [3] { \/\/ LineNumberTable\n-                0  4; \/\/  at 0x03D0\n-                4  5; \/\/  at 0x03D4\n-                11  6; \/\/  at 0x03D8\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [3] { \/\/ Attributes\n-    Attr(#21, 2) { \/\/ SourceFile at 0x03DA\n-      #22;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#41, 10) { \/\/ InnerClasses at 0x03E2\n-      [1] { \/\/ InnerClasses\n-        #39 #43 #40 25; \/\/  at 0x03F2\n-      }\n-    } \/\/ end InnerClasses\n-    ;\n-    Attr(#25, 6) { \/\/ BootstrapMethods at 0x03F2\n-      [1] { \/\/ bootstrap_methods\n-        {  \/\/  bootstrap_method\n-          #26; \/\/ bootstrap_method_ref\n-          [0] { \/\/ bootstrap_arguments\n-          }  \/\/  bootstrap_arguments\n-        }  \/\/  bootstrap_method\n-      }\n-    } \/\/ end BootstrapMethods\n-  } \/\/ Attributes\n-} \/\/ end class defValueObj\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-\/\/ The operand for the inline type for the defaultvalue opcode was changed to a\n-\/\/ reference that is not an inline type.\n-\/\/ This should cause a VerifyError because the reference operand for a withfield\n-\/\/ opcode must be an inline type.\n-\/\/\n-class withfieldObj {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  62; \/\/ version\n-  [23] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #5 #19; \/\/ #1     at 0x0A\n-    Field #3 #20; \/\/ #2     at 0x0F\n-    class #13; \/\/ #3     at 0x14\n-    String #21; \/\/ #4     at 0x17\n-    class #22; \/\/ #5     at 0x1A\n-    Utf8 \"int_v\"; \/\/ #6     at 0x1D\n-    Utf8 \"I\"; \/\/ #7     at 0x25\n-    Utf8 \"<init>\"; \/\/ #8     at 0x29\n-    Utf8 \"()V\"; \/\/ #9     at 0x32\n-    Utf8 \"Code\"; \/\/ #10     at 0x38\n-    Utf8 \"LineNumberTable\"; \/\/ #11     at 0x3F\n-    Utf8 \"makewithfieldObj\"; \/\/ #12     at 0x51\n-    Utf8 \"withfieldObj\"; \/\/ #13     at 0x64\n-    Utf8 \"ValueTypes\"; \/\/ #14     at 0x73\n-    Utf8 \"(ILjava\/lang\/String;)LwithfieldObj;\"; \/\/ #15     at 0x80\n-    Utf8 \"StackMapTable\"; \/\/ #16     at 0xA6\n-    Utf8 \"SourceFile\"; \/\/ #17     at 0xB6\n-    Utf8 \"withfieldObj.java\"; \/\/ #18     at 0xC3\n-    NameAndType #8 #9; \/\/ #19     at 0xD7\n-    NameAndType #6 #7; \/\/ #20     at 0xDC\n-    Utf8 \"CDE\"; \/\/ #21     at 0xE1\n-    Utf8 \"java\/lang\/Object\"; \/\/ #22     at 0xE7\n-  } \/\/ Constant Pool\n-\n-  0x0130; \/\/ access [ ACC_SUPER ACC_FINAL ]\n-  #3;\/\/ this_cpx\n-  #5;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ fields\n-    { \/\/ Member at 0x0104\n-      0x0010; \/\/ access\n-      #6; \/\/ name_cpx\n-      #7; \/\/ sig_cpx\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ fields\n-\n-  [2] { \/\/ methods\n-    { \/\/ Member at 0x010E\n-      0x0000; \/\/ access\n-      #8; \/\/ name_cpx\n-      #9; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#10, 42) { \/\/ Code at 0x0116\n-          2; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[10]{\n-            0x2AB700012A04B500;\n-            0x02B1;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#11, 14) { \/\/ LineNumberTable at 0x0132\n-              [3] { \/\/ LineNumberTable\n-                0  3; \/\/  at 0x013E\n-                4  4; \/\/  at 0x0142\n-                9  5; \/\/  at 0x0146\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-    ;\n-    { \/\/ Member at 0x0146\n-      0x0008; \/\/ access\n-      #12; \/\/ name_cpx\n-      #15; \/\/ sig_cpx\n-      [1] { \/\/ Attributes\n-        Attr(#10, 68) { \/\/ Code at 0x014E\n-          2; \/\/ max_stack\n-          3; \/\/ max_locals\n-          Bytes[18]{\n-            0xCB00034D2B1204A5;\n-            0x00092B1ACC00024D; \/\/ Changed aload_2 (0x2C) to aload_1 (0x2B) at byte 3.\n-            0x2CB0;\n-          };\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [2] { \/\/ Attributes\n-            Attr(#11, 18) { \/\/ LineNumberTable at 0x0172\n-              [4] { \/\/ LineNumberTable\n-                0  7; \/\/  at 0x017E\n-                4  8; \/\/  at 0x0182\n-                10  9; \/\/  at 0x0186\n-                16  11; \/\/  at 0x018A\n-              }\n-            } \/\/ end LineNumberTable\n-            ;\n-            Attr(#16, 8) { \/\/ StackMapTable at 0x018A\n-              [1] { \/\/\n-                252b, 16, [1]z{7b,3}; \/\/ append_frame 1\n-              }\n-            } \/\/ end StackMapTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    } \/\/ Member\n-  } \/\/ methods\n-\n-  [2] { \/\/ Attributes\n-    Attr(#17, 2) { \/\/ SourceFile at 0x019A\n-      #18;\n-    } \/\/ end SourceFile\n-    ;\n-    Attr(#14, 4) { \/\/ ValueTypes at 0x01A2\n-      0x00010003;\n-    } \/\/ end ValueTypes\n-  } \/\/ Attributes\n-} \/\/ end class withfieldObj\n-\n-\n-\/\/ This class has a withfield opcode with a non-Q type operand.\n-class withfieldL {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  62; \/\/ version\n-  [28] { \/\/ Constant Pool\n+  [28] { \/\/ Constant Pool\n@@ -1774,0 +1187,422 @@\n+\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n+\/\/ Test that a VerifyError exception is thrown when trying to pass a null\n+\/\/ when the formal parameter is an inline type.\n+\/\/\n+\/\/ \/\/ Java program emulating the jcod contents.\n+\/\/ public inline final class NoNullVT {\n+\/\/     final int x;\n+\/\/     final int y;\n+\/\/\n+\/\/     private NoNullVT() {\n+\/\/         x = 0;\n+\/\/         y = 0;\n+\/\/     }\n+\/\/\n+\/\/     public int getX() { return x; }\n+\/\/     public int getY() { return y; }\n+\/\/\n+\/\/     public boolean isSameNoNullVT(NoNullVT that) {\n+\/\/         return this.getX() == that.getX() && this.getY() == that.getY();\n+\/\/     }\n+\/\/\n+\/\/     public boolean equals(Object o) {\n+\/\/         if(o instanceof NoNullVT) {\n+\/\/             return ((NoNullVT)o).x == x &&  ((NoNullVT)o).y == y;\n+\/\/         } else {\n+\/\/             return false;\n+\/\/         }\n+\/\/     }\n+\/\/\n+\/\/     public static NoNullVT createNoNullVT(int x, int y) {\n+\/\/         NoNullVT p = NoNullVT.default;\n+\/\/         p = __WithField(p.x, x);\n+\/\/         p = __WithField(p.y, y);\n+\/\/         return p;\n+\/\/     }\n+\/\/\n+\/\/     public static void main(String[] args) {\n+\/\/         String str = null;\n+\/\/         NoNullVT a = createNoNullVT(3, 4);\n+\/\/         NoNullVT b = createNoNullVT(2, 4);\n+\/\/         boolean res = a.isSameNoNullVT(null); \/\/ Should throw VerifyError\n+\/\/     }\n+\/\/ }\n+\n+class NoNullVT {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  62; \/\/ version\n+  [63] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #36; \/\/ #1     at 0x0A\n+    Field #1 #37; \/\/ #2     at 0x0D\n+    Field #1 #38; \/\/ #3     at 0x12\n+    Method #1 #39; \/\/ #4     at 0x17\n+    Method #1 #40; \/\/ #5     at 0x1C\n+    class #41; \/\/ #6     at 0x21\n+    Method #1 #42; \/\/ #7     at 0x24\n+    Method #1 #43; \/\/ #8     at 0x29\n+    InvokeDynamic 0s #46; \/\/ #9     at 0x2E\n+    InvokeDynamic 0s #47; \/\/ #10     at 0x33\n+    class #48; \/\/ #11     at 0x38\n+    Utf8 \"x\"; \/\/ #12     at 0x3B\n+    Utf8 \"I\"; \/\/ #13     at 0x3F\n+    Utf8 \"y\"; \/\/ #14     at 0x43\n+    Utf8 \"getX\"; \/\/ #15     at 0x47\n+    Utf8 \"()I\"; \/\/ #16     at 0x4E\n+    Utf8 \"Code\"; \/\/ #17     at 0x54\n+    Utf8 \"LineNumberTable\"; \/\/ #18     at 0x5B\n+    Utf8 \"getY\"; \/\/ #19     at 0x6D\n+    Utf8 \"isSameNoNullVT\"; \/\/ #20     at 0x74\n+    Utf8 \"(QNoNullVT;)Z\"; \/\/ #21     at 0x85\n+    Utf8 \"StackMapTable\"; \/\/ #22     at 0x95\n+    Utf8 \"equals\"; \/\/ #23     at 0xA5\n+    Utf8 \"(Ljava\/lang\/Object;)Z\"; \/\/ #24     at 0xAE\n+    Utf8 \"createNoNullVT\"; \/\/ #25     at 0xC6\n+    Utf8 \"(II)QNoNullVT;\"; \/\/ #26     at 0xD7\n+    Utf8 \"main\"; \/\/ #27     at 0xE8\n+    Utf8 \"([Ljava\/lang\/String;)V\"; \/\/ #28     at 0xEF\n+    Utf8 \"hashCode\"; \/\/ #29     at 0x0108\n+    Utf8 \"toString\"; \/\/ #30     at 0x0113\n+    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #31     at 0x011E\n+    Utf8 \"<init>\"; \/\/ #32     at 0x0135\n+    Utf8 \"()QNoNullVT;\"; \/\/ #33     at 0x013E\n+    Utf8 \"SourceFile\"; \/\/ #34     at 0x014D\n+    Utf8 \"NoNullVT.java\"; \/\/ #35     at 0x015A\n+    Utf8 \"NoNullVT\"; \/\/ #36     at 0x016A\n+    NameAndType #12 #13; \/\/ #37     at 0x0175\n+    NameAndType #14 #13; \/\/ #38     at 0x017A\n+    NameAndType #15 #16; \/\/ #39     at 0x017F\n+    NameAndType #19 #16; \/\/ #40     at 0x0184\n+    Utf8 \"QNoNullVT;\"; \/\/ #41     at 0x0189\n+    NameAndType #25 #26; \/\/ #42     at 0x0196\n+    NameAndType #20 #21; \/\/ #43     at 0x019B\n+    Utf8 \"BootstrapMethods\"; \/\/ #44     at 0x01A0\n+    MethodHandle 6b #49; \/\/ #45     at 0x01B3\n+    NameAndType #29 #50; \/\/ #46     at 0x01B7\n+    NameAndType #30 #51; \/\/ #47     at 0x01BC\n+    Utf8 \"java\/lang\/Object\"; \/\/ #48     at 0x01C1\n+    Method #52 #53; \/\/ #49     at 0x01D4\n+    Utf8 \"(QNoNullVT;)I\"; \/\/ #50     at 0x01D9\n+    Utf8 \"(QNoNullVT;)Ljava\/lang\/String;\"; \/\/ #51     at 0x01E9\n+    class #54; \/\/ #52     at 0x020A\n+    NameAndType #55 #59; \/\/ #53     at 0x020D\n+    Utf8 \"java\/lang\/invoke\/ValueBootstrapMethods\"; \/\/ #54     at 0x0212\n+    Utf8 \"makeBootstrapMethod\"; \/\/ #55     at 0x023B\n+    class #61; \/\/ #56     at 0x0251\n+    Utf8 \"Lookup\"; \/\/ #57     at 0x0254\n+    Utf8 \"InnerClasses\"; \/\/ #58     at 0x025D\n+    Utf8 \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\"; \/\/ #59     at 0x026C\n+    class #62; \/\/ #60     at 0x02E2\n+    Utf8 \"java\/lang\/invoke\/MethodHandles$Lookup\"; \/\/ #61     at 0x02E5\n+    Utf8 \"java\/lang\/invoke\/MethodHandles\"; \/\/ #62     at 0x030D\n+  } \/\/ Constant Pool\n+\n+  0x0131; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_FINAL ]\n+  #1;\/\/ this_cpx\n+  #11;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [2] { \/\/ fields\n+    { \/\/ Member at 0x0338\n+      0x0010; \/\/ access\n+      #12; \/\/ name_cpx\n+      #13; \/\/ sig_cpx\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x0340\n+      0x0010; \/\/ access\n+      #14; \/\/ name_cpx\n+      #13; \/\/ sig_cpx\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    } \/\/ Member\n+  } \/\/ fields\n+\n+  [9] { \/\/ methods\n+    { \/\/ Member at 0x034A\n+      0x0001; \/\/ access\n+      #15; \/\/ name_cpx\n+      #16; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 29) { \/\/ Code at 0x0352\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40002AC;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 6) { \/\/ LineNumberTable at 0x0369\n+              [1] { \/\/ LineNumberTable\n+                0  10; \/\/  at 0x0375\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x0375\n+      0x0001; \/\/ access\n+      #19; \/\/ name_cpx\n+      #16; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 29) { \/\/ Code at 0x037D\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB40003AC;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 6) { \/\/ LineNumberTable at 0x0394\n+              [1] { \/\/ LineNumberTable\n+                0  11; \/\/  at 0x03A0\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x03A0\n+      0x0001; \/\/ access\n+      #20; \/\/ name_cpx\n+      #21; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 63) { \/\/ Code at 0x03A8\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[28]{\n+            0x2AB600042BB60004;\n+            0xA000122AB600052B;\n+            0xB60005A0000704A7;\n+            0x000403AC;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [2] { \/\/ Attributes\n+            Attr(#18, 6) { \/\/ LineNumberTable at 0x03D6\n+              [1] { \/\/ LineNumberTable\n+                0  14; \/\/  at 0x03E2\n+              }\n+            } \/\/ end LineNumberTable\n+            ;\n+            Attr(#22, 5) { \/\/ StackMapTable at 0x03E2\n+              [2] { \/\/\n+                26b; \/\/ same_frame\n+                64b, [1]z{1b}; \/\/ same_locals_1_stack_item_frame\n+              }\n+            } \/\/ end StackMapTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x03ED\n+      0x0001; \/\/ access\n+      #23; \/\/ name_cpx\n+      #24; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 87) { \/\/ Code at 0x03F5\n+          2; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[43]{\n+            0x2BC100019900252B;\n+            0xC00006B400022AB4;\n+            0x0002A000152BC000;\n+            0x06B400032AB40003;\n+            0xA0000704A7000403;\n+            0xAC03AC;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [2] { \/\/ Attributes\n+            Attr(#18, 14) { \/\/ LineNumberTable at 0x0432\n+              [3] { \/\/ LineNumberTable\n+                0  18; \/\/  at 0x043E\n+                7  19; \/\/  at 0x0442\n+                41  21; \/\/  at 0x0446\n+              }\n+            } \/\/ end LineNumberTable\n+            ;\n+            Attr(#22, 6) { \/\/ StackMapTable at 0x0446\n+              [3] { \/\/\n+                39b; \/\/ same_frame\n+                64b, [1]z{1b}; \/\/ same_locals_1_stack_item_frame\n+                0b; \/\/ same_frame\n+              }\n+            } \/\/ end StackMapTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x0452\n+      0x0009; \/\/ access\n+      #25; \/\/ name_cpx\n+      #26; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 56) { \/\/ Code at 0x045A\n+          2; \/\/ max_stack\n+          3; \/\/ max_locals\n+          Bytes[20]{\n+            0xCB00014D1A2C5FCC;\n+            0x00024D1B2C5FCC00;\n+            0x034D2CB0;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 18) { \/\/ LineNumberTable at 0x0480\n+              [4] { \/\/ LineNumberTable\n+                0  26; \/\/  at 0x048C\n+                4  27; \/\/  at 0x0490\n+                11  28; \/\/  at 0x0494\n+                18  29; \/\/  at 0x0498\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x0498\n+      0x0009; \/\/ access\n+      #27; \/\/ name_cpx\n+      #28; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 62) { \/\/ Code at 0x04A0\n+          2; \/\/ max_stack\n+          5; \/\/ max_locals\n+          Bytes[22]{\n+            0x014C0607B800074D;\n+            0x0507B800074E2C2B; \/\/ Change last nibble from C to B to load null\n+            0xB600083604B1;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 22) { \/\/ LineNumberTable at 0x04C8\n+              [5] { \/\/ LineNumberTable\n+                0  33; \/\/  at 0x04D4\n+                2  34; \/\/  at 0x04D8\n+                8  35; \/\/  at 0x04DC\n+                14  36; \/\/  at 0x04E0\n+                21  37; \/\/  at 0x04E4\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x04E4\n+      0x0011; \/\/ access\n+      #29; \/\/ name_cpx\n+      #16; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 31) { \/\/ Code at 0x04EC\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[7]{\n+            0x2ABA00090000AC;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 6) { \/\/ LineNumberTable at 0x0505\n+              [1] { \/\/ LineNumberTable\n+                0  1; \/\/  at 0x0511\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x0511\n+      0x0011; \/\/ access\n+      #30; \/\/ name_cpx\n+      #31; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 31) { \/\/ Code at 0x0519\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[7]{\n+            0x2ABA000A0000B0;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 6) { \/\/ LineNumberTable at 0x0532\n+              [1] { \/\/ LineNumberTable\n+                0  1; \/\/  at 0x053E\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0x053E\n+      0x000A; \/\/ access\n+      #32; \/\/ name_cpx\n+      #33; \/\/ sig_cpx\n+      [1] { \/\/ Attributes\n+        Attr(#17, 56) { \/\/ Code at 0x0546\n+          2; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[20]{\n+            0xCB00014B032A5FCC;\n+            0x00024B032A5FCC00;\n+            0x034B2AB0;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#18, 18) { \/\/ LineNumberTable at 0x056C\n+              [4] { \/\/ LineNumberTable\n+                0  5; \/\/  at 0x0578\n+                4  6; \/\/  at 0x057C\n+                11  7; \/\/  at 0x0580\n+                18  8; \/\/  at 0x0584\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+  } \/\/ methods\n+\n+  [3] { \/\/ Attributes\n+    Attr(#34, 2) { \/\/ SourceFile at 0x0586\n+      #35;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#58, 10) { \/\/ InnerClasses at 0x058E\n+      [1] { \/\/ InnerClasses\n+        #56 #60 #57 25; \/\/  at 0x059E\n+      }\n+    } \/\/ end InnerClasses\n+    ;\n+    Attr(#44, 6) { \/\/ BootstrapMethods at 0x059E\n+      [1] { \/\/ bootstrap_methods\n+        {  \/\/  bootstrap_method\n+          #45; \/\/ bootstrap_method_ref\n+          [0] { \/\/ bootstrap_arguments\n+          }  \/\/  bootstrap_arguments\n+        }  \/\/  bootstrap_method\n+      }\n+    } \/\/ end BootstrapMethods\n+  } \/\/ Attributes\n+} \/\/ end class NoNullVT\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/verifierTests.jcod","additions":445,"deletions":610,"binary":false,"changes":1055,"status":"modified"}]}