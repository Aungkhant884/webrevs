{"files":[{"patch":"@@ -144,1 +144,1 @@\n-    private transient JapaneseEra era;\n+    private final transient JapaneseEra era;\n@@ -148,1 +148,1 @@\n-    private transient int yearOfEra;\n+    private final transient int yearOfEra;\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/JapaneseDate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -262,3 +262,3 @@\n-                    new java.lang.Object[]{java.lang.Long.valueOf($param_long_1),\n-                            java.lang.Integer.valueOf($param_int_2),\n-                            java.lang.Long.valueOf($param_long_3)}, -5037523307973544478L);\n+                    new java.lang.Object[]{$param_long_1,\n+                            $param_int_2,\n+                            $param_long_3}, -5037523307973544478L);\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIConnectionImpl_Stub.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4017,1 +4017,1 @@\n-                        new Object []{Integer.valueOf(attGroupRefsCount)}, child);\n+                        new Object []{attGroupRefsCount}, child);\n@@ -4033,1 +4033,1 @@\n-                reportSchemaError(\"src-redefine.6.1.1\", new Object []{Integer.valueOf(groupRefsCount)}, child);\n+                reportSchemaError(\"src-redefine.6.1.1\", new Object []{groupRefsCount}, child);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/xs\/traversers\/XSDHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -441,2 +441,2 @@\n-            _byName.put( name, Integer.valueOf( value ) );\n-            _byChar.put( Integer.valueOf( value ), name );\n+            _byName.put( name, (int) value);\n+            _byChar.put( (int) value , name );\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serialize\/HTMLdtd.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-    @SuppressWarnings({\"deprecation\", \"removal\"})\n+    @SuppressWarnings({\"deprecation\", \"removal\", \"synchronization\"})\n@@ -116,1 +116,1 @@\n-    @SuppressWarnings({\"deprecation\", \"removal\"})\n+    @SuppressWarnings({\"deprecation\", \"removal\", \"synchronization\"})\n","filename":"src\/jdk.internal.vm.compiler\/share\/classes\/org.graalvm.compiler.core.test\/src\/org\/graalvm\/compiler\/core\/test\/ea\/EscapeAnalysisTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -376,1 +376,1 @@\n-    @SuppressWarnings(\"deprecation\")\n+    @SuppressWarnings({\"deprecation\", \"removal\"})\n@@ -389,1 +389,1 @@\n-                sentinel = type.cast(false);\n+                sentinel = type.cast(new Boolean(false));\n@@ -391,1 +391,1 @@\n-                sentinel = type.cast((byte) 123);\n+                sentinel = type.cast(new Byte((byte) 123));\n@@ -393,1 +393,1 @@\n-                sentinel = type.cast(1234567890);\n+                sentinel = type.cast(new Integer(1234567890));\n@@ -395,1 +395,1 @@\n-                sentinel = type.cast(1234567890987654321L);\n+                sentinel = type.cast(new Long(1234567890987654321L));\n","filename":"src\/jdk.internal.vm.compiler\/share\/classes\/org.graalvm.compiler.hotspot\/src\/org\/graalvm\/compiler\/hotspot\/GraalHotSpotVMConfigAccess.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -215,0 +215,1 @@\n+    @SuppressWarnings(\"synchronization\")\n","filename":"src\/jdk.internal.vm.compiler\/share\/classes\/org.graalvm.compiler.replacements.test\/src\/org\/graalvm\/compiler\/replacements\/test\/MonitorTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-import org.testng.annotations.Test;\n-\n-import java.lang.reflect.Constructor;\n-import java.util.List;\n-\n-import static org.testng.Assert.*;\n-\n-\/*\n- * @test\n- * @bug 8252180\n- * @summary Test the primitive wrappers constructors are deprecated for removal\n- * @run testng WrappersTest\n- *\/\n-\n-@Test\n-public class WrappersTest {\n-\n-    @Test\n-    void checkForDeprecated() {\n-        List<Class<?>> classes =\n-                List.of(Byte.class,\n-                        Short.class,\n-                        Integer.class,\n-                        Long.class,\n-                        Float.class,\n-                        Double.class,\n-                        Character.class,\n-                        Boolean.class);\n-        for (Class<?> cl : classes) {\n-            for (Constructor<?> cons : cl.getConstructors()) {\n-                Deprecated dep = cons.getAnnotation(Deprecated.class);\n-                assertNotNull(dep, \"Missing @Deprecated annotation\");\n-                System.out.println(cons + \": \" + dep);\n-                assertTrue(dep.forRemoval(), cl.toString() + \" deprecated for removal: \");\n-            }\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/WrappersTest.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"}]}