{"files":[{"patch":"@@ -1641,3 +1641,12 @@\n-    if (alloc->is_Allocate() && !pta->arraycopy_dst())\n-      return 0;\n-    assert(pta->arraycopy_dst() || alloc->as_CallStaticJava(), \"sanity\");\n+    if (alloc->is_Allocate() && !pta->arraycopy_dst()) {\n+      if (alloc->as_Allocate()->in(AllocateNode::DefaultValue) != NULL) {\n+        \/\/ Non-flattened inline type arrays are initialized with\n+        \/\/ the default value instead of null. Handle them here.\n+        init_val = ptnode_adr(alloc->as_Allocate()->in(AllocateNode::DefaultValue)->_idx);\n+        assert(init_val != NULL, \"default value should be registered\");\n+      } else {\n+        return 0;\n+      }\n+    }\n+    \/\/ Non-escaped allocation returned from Java or runtime call has unknown values in fields.\n+    assert(pta->arraycopy_dst() || alloc->is_CallStaticJava() || init_val != phantom_obj, \"sanity\");\n@@ -1645,1 +1654,1 @@\n-    if (!pta->arraycopy_dst() && alloc->as_CallStaticJava()->method() == NULL) {\n+    if (alloc->is_CallStaticJava() && alloc->as_CallStaticJava()->method() == NULL) {\n@@ -1650,2 +1659,0 @@\n-    \/\/ Non-escaped allocation returned from Java or runtime call have\n-    \/\/ unknown values in fields.\n@@ -1655,1 +1662,1 @@\n-        if (add_edge(field, phantom_obj)) {\n+        if (add_edge(field, init_val)) {\n@@ -1666,1 +1673,1 @@\n-  if (!alloc->is_Allocate())\n+  if (!alloc->is_Allocate() || alloc->as_Allocate()->in(AllocateNode::DefaultValue) != NULL) {\n@@ -1668,0 +1675,1 @@\n+  }\n@@ -1688,9 +1696,1 @@\n-        if (alloc->as_Allocate()->in(AllocateNode::DefaultValue) != NULL) {\n-          \/\/ Non-flattened inline type arrays are initialized with the\n-          \/\/ default value instead of null. Add corresponding edge.\n-          if (add_edge(field, phantom_obj)) {\n-            add_field_uses_to_worklist(field->as_Field());\n-            add_java_object_edges(phantom_obj, false);\n-            visited_bottom_offset = true;\n-          }\n-        } else if (add_edge(field, null_obj)) {\n+        if (add_edge(field, null_obj)) {\n@@ -1779,8 +1779,1 @@\n-          if (alloc->as_Allocate()->in(AllocateNode::DefaultValue) != NULL) {\n-            \/\/ Non-flattened inline type arrays are initialized with the\n-            \/\/ default value instead of null. Add corresponding edge.\n-            if (add_edge(field, phantom_obj)) {\n-              add_field_uses_to_worklist(field->as_Field());\n-              add_java_object_edges(phantom_obj, false);\n-            }\n-          } else if (add_edge(field, null_obj)) {\n+          if (add_edge(field, null_obj)) {\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":18,"deletions":25,"binary":false,"changes":43,"status":"modified"}]}