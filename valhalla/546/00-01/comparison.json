{"files":[{"patch":"@@ -52,1 +52,1 @@\n-        emitShort((short) 62);\n+        emitShort((short) 49);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ClassFileAssembler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+    private boolean    isStaticFactory;\n@@ -63,1 +64,0 @@\n-    private boolean isConstructingPrimitive;\n@@ -84,0 +84,1 @@\n+                                         false,\n@@ -93,0 +94,1 @@\n+        boolean isStaticFactory = declaringClass.isPrimitiveClass();\n@@ -96,1 +98,1 @@\n-                                              Void.TYPE,\n+                                              isStaticFactory ? declaringClass.asValueType() : Void.TYPE,\n@@ -100,0 +102,1 @@\n+                                              isStaticFactory,\n@@ -120,0 +123,1 @@\n+                     false,\n@@ -133,0 +137,1 @@\n+                                       boolean isStaticFactory,\n@@ -138,4 +143,0 @@\n-        this.isConstructingPrimitive = isConstructor && declaringClass.isPrimitiveClass();\n-        if (this.isConstructingPrimitive ) {\n-            returnType = declaringClass.asValueType();\n-        }\n@@ -147,0 +148,1 @@\n+        this.isStaticFactory = isStaticFactory;\n@@ -439,1 +441,1 @@\n-        if (isConstructor && !isConstructingPrimitive) {\n+        if (isConstructor && !isStaticFactory) {\n@@ -629,1 +631,1 @@\n-        if (isConstructor && !isConstructingPrimitive) {\n+        if (isConstructor && !isStaticFactory) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodAccessorGenerator.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run testng\/othervm StaticFactoryTest\n+ * @run testng\/othervm -Dsun.reflect.noInflation=true StaticFactoryTest\n@@ -71,4 +71,2 @@\n-        for (int i = 0; i < 20; ++i) {\n-            Object o = ctor.newInstance();\n-            assertTrue(o.getClass() == PRIMITIVE_TYPE.asPrimaryType());\n-        }\n+        Object o = ctor.newInstance();\n+        assertTrue(o.getClass() == PRIMITIVE_TYPE.asPrimaryType());\n","filename":"test\/jdk\/valhalla\/valuetypes\/StaticFactoryTest.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}