{"files":[{"patch":"@@ -52,1 +52,1 @@\n-        emitShort((short) 49);\n+        emitShort((short) 62);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ClassFileAssembler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+    private boolean isConstructingPrimitive;\n@@ -137,0 +138,4 @@\n+        this.isConstructingPrimitive = isConstructor && declaringClass.isPrimitiveClass();\n+        if (this.isConstructingPrimitive ) {\n+            returnType = declaringClass.asValueType();\n+        }\n@@ -434,1 +439,1 @@\n-        if (isConstructor) {\n+        if (isConstructor && !isConstructingPrimitive) {\n@@ -624,1 +629,1 @@\n-        if (isConstructor) {\n+        if (isConstructor && !isConstructingPrimitive) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodAccessorGenerator.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @bug 8273360\n@@ -70,2 +71,4 @@\n-        Object o = ctor.newInstance();\n-        assertTrue(o.getClass() == PRIMITIVE_TYPE.asPrimaryType());\n+        for (int i = 0; i < 20; ++i) {\n+            Object o = ctor.newInstance();\n+            assertTrue(o.getClass() == PRIMITIVE_TYPE.asPrimaryType());\n+        }\n","filename":"test\/jdk\/valhalla\/valuetypes\/StaticFactoryTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}