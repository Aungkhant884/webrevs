{"files":[{"patch":"@@ -3011,1 +3011,2 @@\n-            __ cmpb(Address(rcx, InstanceKlass::init_state_offset()), InstanceKlass::fully_initialized);\n+            __ movptr(rbx, Address(obj, java_lang_Class::klass_offset()));\n+            __ cmpb(Address(rbx, InstanceKlass::init_state_offset()), InstanceKlass::fully_initialized);\n@@ -3013,1 +3014,1 @@\n-          __ get_default_value_oop(rcx, off, rax);\n+          __ get_default_value_oop(rbx, rscratch1, rax);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -395,1 +395,1 @@\n-  \/\/ If the field was not initialized because of an error, a exception should be thrown.\n+  \/\/ If the field was not initialized because of an error, an exception should be thrown.\n@@ -413,1 +413,1 @@\n-    \/\/ It is safe to initialized the static field because 1) the current thread is the initializing thread\n+    \/\/ It is safe to initialize the static field because 1) the current thread is the initializing thread\n@@ -416,1 +416,1 @@\n-    mirror->obj_field_put(offset, defaultvalue);\n+    mirror_h()->obj_field_put(offset, defaultvalue);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}