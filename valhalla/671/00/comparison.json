{"files":[{"patch":"@@ -633,3 +633,2 @@\n-                    s.referenceProjectionOrSelf().tsym == t.tsym) &&\n-                    warn != noWarnings) {\n-                chk.warnUniversalTVar(warn.pos(), Warnings.PrimitiveValueConversion);\n+                    s.referenceProjectionOrSelf().tsym == t.tsym)) {\n+                chk.warnUnchecked(warn.pos(), Warnings.PrimitiveValueConversion);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-\/\/ options: -Xlint:universal\n+\/\/ options: -Xlint:unchecked\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/PrimitiveValueConversionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=GenericInlineTest.out -XDrawDiagnostics GenericInlineTest.java\n+ * @compile\/fail\/ref=GenericInlineTest.out -XDrawDiagnostics -Xlint:unchecked GenericInlineTest.java\n@@ -16,1 +16,1 @@\n-    @SuppressWarnings(\"universal\")\n+\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/GenericInlineTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+GenericInlineTest.java:39:13: compiler.warn.primitive.value.conversion\n@@ -9,0 +10,1 @@\n+1 warning\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/GenericInlineTest.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-    @SuppressWarnings(\"universal\")\n+    @SuppressWarnings(\"unchecked\")\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/Rectangle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=TypeRelationsNegativeTest.out -XDrawDiagnostics TypeRelationsNegativeTest.java\n+ * @compile\/fail\/ref=TypeRelationsNegativeTest.out -XDrawDiagnostics -Xlint:unchecked TypeRelationsNegativeTest.java\n@@ -9,1 +9,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/TypeRelationsNegativeTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,3 +1,5 @@\n-TypeRelationsNegativeTest.java:11:39: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: compiler.misc.type.null, TypeRelationsNegativeTest)\n-TypeRelationsNegativeTest.java:21:77: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: compiler.misc.type.null, TypeRelationsNegativeTest)\n-TypeRelationsNegativeTest.java:26:14: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: TypeRelationsNegativeTest.ref[], TypeRelationsNegativeTest[])\n+TypeRelationsNegativeTest.java:10:39: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: compiler.misc.type.null, TypeRelationsNegativeTest)\n+TypeRelationsNegativeTest.java:16:13: compiler.warn.primitive.value.conversion\n+TypeRelationsNegativeTest.java:17:13: compiler.warn.primitive.value.conversion\n+TypeRelationsNegativeTest.java:20:77: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: compiler.misc.type.null, TypeRelationsNegativeTest)\n+TypeRelationsNegativeTest.java:25:14: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: TypeRelationsNegativeTest.ref[], TypeRelationsNegativeTest[])\n@@ -5,0 +7,1 @@\n+2 warnings\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/TypeRelationsNegativeTest.out","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-        @SuppressWarnings(\"universal\")\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/UnifiedPrimitiveClassBytecodeTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/copy\/Inline128int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/copy\/Inline64byte.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/copy\/Inline64int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/copy\/InlineOpt.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -73,1 +73,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -92,1 +91,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/fill\/Inline128int.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -92,1 +91,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/fill\/Inline32int.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -92,1 +91,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/fill\/Inline64byte.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -92,1 +91,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/fill\/Inline64int.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -94,1 +93,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/fill\/InlineOpt.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/read\/Inline128int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -72,1 +72,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/read\/Inline32int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -72,1 +72,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/read\/Inline64byte.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -72,1 +72,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/read\/Inline64int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/set\/Inline128int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/set\/Inline32int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/set\/Inline64byte.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/array\/set\/Inline64int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -823,1 +823,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -924,1 +923,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/copy\/InlineCopy0.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -744,1 +744,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -835,1 +834,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/copy\/InlineCopy1.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -814,1 +814,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -825,1 +824,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -926,1 +924,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/copy\/InlineCopy2.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -744,1 +744,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -835,1 +834,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/copy\/InlineCopy3.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -53,1 +52,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/fill\/Inline64longFillInstRef.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -51,1 +50,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/fill\/Inline64longFillRef.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -49,1 +48,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/fill\/Inline64longFillStatRef.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -149,1 +148,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/read\/Inline64long.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-    @SuppressWarnings(\"universal\")\n@@ -48,1 +47,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/arraytotal\/set\/Inline64longSetRef.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/copy\/Inline128int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/copy\/Inline32int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/copy\/Inline64byte.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/copy\/Inline64int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -143,1 +143,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/copy\/Inline64long.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/read\/Inline128int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/read\/Inline32int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/read\/Inline64byte.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/read\/Inline64int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -85,1 +85,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/read\/Inline64long.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/set\/Inline128int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/set\/Inline32int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/set\/Inline64byte.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/set\/Inline64int.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -80,1 +80,0 @@\n-    @SuppressWarnings(\"universal\")\n","filename":"test\/micro\/org\/openjdk\/bench\/valhalla\/field\/set\/Inline64long.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}