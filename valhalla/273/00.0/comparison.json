{"files":[{"patch":"@@ -37,0 +37,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n@@ -2493,1 +2494,3 @@\n-    __ testptr(rdx, rax);\n+    __ testptr(rax, rax);\n+    __ jcc(Assembler::zero, (cc == equal) ? not_taken : taken);\n+    __ testptr(rdx, rdx);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1138,0 +1138,1 @@\n+    _method_Scoped,\n@@ -2259,0 +2260,5 @@\n+    case VM_SYMBOL_ENUM_NAME(jdk_internal_misc_Scoped_signature): {\n+      if (_location != _in_method)  break;  \/\/ only allow for methods\n+      if (!privileged)              break;  \/\/ only allow in privileged code\n+      return _method_Scoped;\n+    }\n@@ -2316,0 +2322,2 @@\n+  if (has_annotation(_method_Scoped))\n+    m->set_scoped(true);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -144,0 +144,1 @@\n+  template(sun_instrument_InstrumentationImpl,        \"sun\/instrument\/InstrumentationImpl\")       \\\n@@ -308,0 +309,1 @@\n+  template(jdk_internal_misc_Scoped_signature,               \"Ljdk\/internal\/misc\/ScopedMemoryAccess$Scoped;\") \\\n@@ -528,0 +530,1 @@\n+  template(long_object_long_signature,                \"(JLjava\/lang\/Object;)J\")                   \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -785,1 +785,1 @@\n-  if (CompressedOops::is_null(_archived_references)) {\n+  if (_archived_references_index < 0) {\n@@ -788,1 +788,8 @@\n-  return HeapShared::materialize_archived_object(_archived_references);\n+  return HeapShared::get_root(_archived_references_index);\n+}\n+\n+void ConstantPoolCache::clear_archived_references() {\n+  if (_archived_references_index >= 0) {\n+    HeapShared::clear_root(_archived_references_index);\n+    _archived_references_index = -1;\n+  }\n@@ -793,1 +800,1 @@\n-  _archived_references = CompressedOops::encode(o);\n+  _archived_references_index = HeapShared::append_root(o);\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -432,1 +432,1 @@\n-  CDS_JAVA_HEAP_ONLY(narrowOop _archived_references;)\n+  CDS_JAVA_HEAP_ONLY(int _archived_references_index;)\n@@ -459,0 +459,1 @@\n+  void clear_archived_references() NOT_CDS_JAVA_HEAP_RETURN;\n","filename":"src\/hotspot\/share\/oops\/cpCache.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"classfile\/javaThreadStatus.hpp\"\n@@ -576,0 +577,1 @@\n+     static_field(StubRoutines,                _base64_decodeBlock,                           address)                               \\\n@@ -2339,1 +2341,1 @@\n-  \/* java_lang_Thread::ThreadStatus enum *\/                               \\\n+  \/* JavaThreadStatus enum               *\/                               \\\n@@ -2342,9 +2344,9 @@\n-  declare_constant(java_lang_Thread::NEW)                                 \\\n-  declare_constant(java_lang_Thread::RUNNABLE)                            \\\n-  declare_constant(java_lang_Thread::SLEEPING)                            \\\n-  declare_constant(java_lang_Thread::IN_OBJECT_WAIT)                      \\\n-  declare_constant(java_lang_Thread::IN_OBJECT_WAIT_TIMED)                \\\n-  declare_constant(java_lang_Thread::PARKED)                              \\\n-  declare_constant(java_lang_Thread::PARKED_TIMED)                        \\\n-  declare_constant(java_lang_Thread::BLOCKED_ON_MONITOR_ENTER)            \\\n-  declare_constant(java_lang_Thread::TERMINATED)                          \\\n+  declare_constant(JavaThreadStatus::NEW)                                 \\\n+  declare_constant(JavaThreadStatus::RUNNABLE)                            \\\n+  declare_constant(JavaThreadStatus::SLEEPING)                            \\\n+  declare_constant(JavaThreadStatus::IN_OBJECT_WAIT)                      \\\n+  declare_constant(JavaThreadStatus::IN_OBJECT_WAIT_TIMED)                \\\n+  declare_constant(JavaThreadStatus::PARKED)                              \\\n+  declare_constant(JavaThreadStatus::PARKED_TIMED)                        \\\n+  declare_constant(JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER)            \\\n+  declare_constant(JavaThreadStatus::TERMINATED)                          \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"}]}