{"files":[{"patch":"@@ -1823,1 +1823,1 @@\n-  const int offset = !needs_patching ? field->offset() : -1;\n+  int offset = !needs_patching ? field->offset() : -1;\n@@ -1910,1 +1910,0 @@\n-          LoadField* load;\n@@ -1913,3 +1912,4 @@\n-            load = new LoadField(pending_field_access()->obj(),\n-                                 pending_field_access()->offset() + offset - field->holder()->as_inline_klass()->first_field_offset(),\n-                                 field, false, state_before, needs_patching);\n+            obj = pending_field_access()->obj();\n+            offset += pending_field_access()->offset() - field->holder()->as_inline_klass()->first_field_offset();\n+            field = pending_field_access()->holder()->get_field_by_offset(offset, false);\n+            assert(field != NULL, \"field not found\");\n@@ -1925,2 +1925,0 @@\n-          } else {\n-            load = new LoadField(obj, offset, field, false, state_before, needs_patching);\n@@ -1928,0 +1926,1 @@\n+          LoadField* load = new LoadField(obj, offset, field, false, state_before, needs_patching);\n@@ -1968,1 +1967,1 @@\n-              pending_field_access()->update(field, offset - field->holder()->as_inline_klass()->first_field_offset());\n+              pending_field_access()->inc_offset(offset - field->holder()->as_inline_klass()->first_field_offset());\n@@ -1971,1 +1970,1 @@\n-              DelayedFieldAccess* dfa = new DelayedFieldAccess(obj, field, field->offset());\n+              DelayedFieldAccess* dfa = new DelayedFieldAccess(obj, field->holder(), field->offset());\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -40,3 +40,3 @@\n-  Value _obj;\n-  ciField* _field;\n-  int _offset;\n+  Value            _obj;\n+  ciInstanceKlass* _holder;\n+  int              _offset;\n@@ -44,4 +44,2 @@\n-  DelayedFieldAccess(Value obj, ciField* field, int offset)\n-  : _obj(obj)\n-  , _field(field)\n-  , _offset(offset) { }\n+  DelayedFieldAccess(Value obj, ciInstanceKlass* holder, int offset)\n+  : _obj(obj), _holder(holder) , _offset(offset) { }\n@@ -49,7 +47,4 @@\n-  void update(ciField* field, int offset) {\n-    _field = field;\n-    _offset += offset;\n-  }\n-  Value obj() { return _obj; }\n-  ciField* field() { return _field; }\n-  int offset() { return _offset; }\n+  Value obj() const               { return _obj; }\n+  ciInstanceKlass* holder() const { return _holder; }\n+  int offset() const              { return _offset; }\n+  void inc_offset(int offset)     { _offset += offset; }\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.hpp","additions":9,"deletions":14,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8260034 8260225\n+ * @bug 8260034 8260225 8260283\n@@ -81,0 +81,11 @@\n+    long f3;\n+    MyValue1 f4 = new MyValue1();\n+\n+    void test6() {\n+        f3 = 123L;\n+        int res = f4.x;\n+        if (res != 42) {\n+            throw new RuntimeException(\"test6 failed\");\n+        }\n+    }\n+\n@@ -93,0 +104,1 @@\n+            t.test6();\n","filename":"test\/hotspot\/jtreg\/compiler\/valhalla\/inlinetypes\/TestGenerated.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}