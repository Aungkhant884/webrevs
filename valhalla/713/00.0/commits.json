[{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt"}],"sha":"8803e91cb2c76e4387ff363b583ebcce072687eb"},{"commit":{"message":"8288186: [lw4] Many runtime\/cds\/appcds\/ tests are still referring to IdentityObject"},"files":[],"sha":"22bb54721e39720c690cfd2d3baa0d65cb8d3bb9"},{"commit":{"message":"8283777: [lworld] TestArrayCopyAsLoadsStores.java triggers assert after merging jdk-19+15"},"files":[],"sha":"02985564a67dc91a3f76d008b63b6dcdd786f6b8"},{"commit":{"message":"8288171: [lw4] Revert JDK-8253873 to fix failures in jdi, jvmti and jwdp tests"},"files":[],"sha":"15cb319a3d2e7d314864ceba44170aa8c2860918"},{"commit":{"message":"8288098: [lworld] C2 fails to scalarize value class arguments"},"files":[],"sha":"328d1ea273241c67654174227c1145a2256609bf"},{"commit":{"message":"8287763: [lw4] Javac does not implement the spec for non-trivial constructors in toto"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt"}],"sha":"6692a954f4b4ddcd8b420dffd9dbea1c1ee22f2b"},{"commit":{"message":"8288084: [lw4] Tier1 hotspot runtime test ClassHierarchyTest.java fails"},"files":[],"sha":"5cf27a50ffe902b7de9ace6969d092fd225e6f78"},{"commit":{"message":"8287898: [lw4] test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/verifier\/VerifierInlineTypes.java fails"},"files":[],"sha":"929a25ed41e2be0691bbabf61d427d5b97600dc1"},{"commit":{"message":"8287767: [lw4] Javac tolerates mutually incompatible super types."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"}],"sha":"830fb16e574ce125cfe0bc584e6aca481d04cd6e"},{"commit":{"message":"8287770: [lw4] Javac tolerates synchronizing on an instance of a value interface"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"}],"sha":"c2cf32482e8ab7c1916c26ef55f11a788ff83d77"},{"commit":{"message":"8287136: [lw4] Javac tolerates abstract value classes that violate constraints for qualifying to be value super classes\n8287713: [lw4] Javac incorrectly flags subclasses as being ACC_IDENTITY classes.\n8281312: [lworld] Reenable test\/langtools\/tools\/javac\/processing\/rounds\/OverwriteBetweenCompilations.java"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt"}],"sha":"3582cb823f75eab34ba7024fc5d98ea37c75f26c"},{"commit":{"message":"8287359: ACC_IDENTITY bit not consistently set in Inner class flags"},"files":[],"sha":"4b62e1cc0a8ecb3982f410de6685c9d24271352c"},{"commit":{"message":"8287330: (valhalla) Better modeling of access flags in core reflection\n\nReviewed-by: mchung"},"files":[],"sha":"0f7c1c29214441cca2418361deed29fac5ee9585"},{"commit":{"message":"8287203: Synthetic concrete classes generated by javac are lacking the ACC_IDENTITY bit."},"files":[],"sha":"68ab121490e22e992a74332f0158364598313465"},{"commit":{"message":"8287030: Remove references to Objects.newIdentity\n\nReviewed-by: mchung"},"files":[],"sha":"ed4493144f6d1953dde4897a1b14fe331aa41817"},{"commit":{"message":"8287040: [lworld][lw4] Remove abstract Object class support from HotSpot\n\nReviewed-by: dsimms"},"files":[],"sha":"e300a857e9d46fb9f4dc65bee5766eadb8d21569"},{"commit":{"message":"8286807: Revert experimental special treatment given to new Object() instantiation."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"}],"sha":"b4f0a6e327213d76b8a86e3ad648747d842cc80e"},{"commit":{"message":"8286864: [lworld] runtime\/valhalla\/inlinetypes\/testSupers\/TestSuperClasses.java refers to IdentityObject interface"},"files":[],"sha":"4165ca014805dd3f46bff6320f4780c1d36fac4a"},{"commit":{"message":"8286877: [lworld] remove interface injection tests runtime\/valhalla\/inlinetypes\/identityObject\/TestIdentityObject.java & runtime\/valhalla\/inlinetypes\/primitiveObject\/TestPrimitiveObject.java"},"files":[],"sha":"104d6d9f80cbc4f8edd701d008f6250073e86d53"},{"commit":{"message":"8286491: Withdraw ValueObject and IdentityObject and introduce value and identity class modifiers\n8237952: [lworld] Examine Class::getAnnotatedInterfaces and other annotation-related API\n\nCo-authored-by: David Simms <dsimms@openjdk.org>"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt"}],"sha":"d70e7e4920705e5d088e89aea1039eba2fa751a9"},{"commit":{"message":"8281269: Update Valhalla test which uses ClassTransformer class"},"files":[],"sha":"8d3750400ece36084b47fe5bf9ee06486ae25c1a"},{"commit":{"message":"8285763: Implement new approach to dump inlined objects"},"files":[],"sha":"04181f90aec4b5ffb738944e22bb6b78203b1567"},{"commit":{"message":"8278390: [lworld] Scalarization of nullable inline types in the calling convention\n\nReviewed-by: fparain"},"files":[],"sha":"8fa17febe332bfad2f125bbc9b429279214b3248"}]