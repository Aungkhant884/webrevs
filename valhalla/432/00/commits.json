[{"commit":{"message":"Fix failures in tier1"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"}],"sha":"db8e8ee5fc81576945f6e905fc8e1e54bbcceeb2"},{"commit":{"message":"8267835: Javac tolerates vacuous chaining to super constructor from primitive class constructor"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/SuperNotAllowedInPrimitiveCtor.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/SuperCallInCtor.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/SuperCallInCtor.out"}],"sha":"dd6ddd695bffc24ce4ec6442cf8b778c170b17d1"},{"commit":{"message":"8267843: Double diagnostics when primitive class instance is passed around before being fully initialized"},"files":[{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/DualNonDuplicateErrors.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/DualNonDuplicateErrors.out"}],"sha":"c1661145ff2aa423ad67f1f0227ab51a02e1cbd0"},{"commit":{"message":"8267965:  Javac disallows calls to super.{hashCode(), equals(), toString()} on a primitive instance receiver"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckObjectMethodsUsage.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/SneakThroSuperCallTest.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/SuperHashCodeEqualsToStringTest.java"}],"sha":"5471f59035312bc0a25cbabafee537f015efeb61"},{"commit":{"message":"8267841: A primitive class that implements Cloneable is tolerated by javac"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/PrimitiveClassMustNotImplementCloneable.java"}],"sha":"b787e0854625652b60de943f1dc9e5ec41c819b2"},{"commit":{"message":"8267918:  Javac tolerates synchronizing on a primitive reference type"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/TypeReqIdentity.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckSynchronized.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckSynchronized.out"}],"sha":"4947551a3d51ff70e60a70512354bd8fbdcbe04b"},{"commit":{"message":"8267907: Withdraw support for the experimental option -XDallowValueMemberCycles"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckCyclicMembership.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckFlattenableCycles.java"}],"sha":"c93d408d37ca2452035a30f28261ecd71b565ed3"}]