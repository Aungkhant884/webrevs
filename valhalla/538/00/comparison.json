{"files":[{"patch":"@@ -462,11 +462,3 @@\n-  if (k->local_interfaces()->length() != _interfaces->length()) {\n-    print_specified_interfaces();\n-    print_actual_interfaces(k);\n-    error(\"The number of interfaces (%d) specified in class list does not match the class file (%d)\",\n-          _interfaces->length(), k->local_interfaces()->length());\n-  }\n-\n-  if (k != NULL) {\n-    int actual_num_interfaces = k->local_interfaces()->length();\n-    int specified_num_interfaces = _interfaces->length();\n-    int expected_num_interfaces, i;\n+  const int actual_num_interfaces = k->local_interfaces()->length();\n+  const int specified_num_interfaces = _interfaces->length(); \/\/ specified in classlist\n+  int expected_num_interfaces = actual_num_interfaces, i;\n@@ -474,0 +466,1 @@\n+  {\n@@ -499,1 +492,0 @@\n-    expected_num_interfaces = actual_num_interfaces;\n@@ -506,6 +498,1 @@\n-    if (specified_num_interfaces != expected_num_interfaces) {\n-      print_specified_interfaces();\n-      print_actual_interfaces(k);\n-      error(\"The number of interfaces (%d) specified in class list does not match the class file (%d)\",\n-            specified_num_interfaces, expected_num_interfaces);\n-    }\n+  }\n@@ -513,5 +500,6 @@\n-    bool added = SystemDictionaryShared::add_unregistered_class_for_static_archive(THREAD, k);\n-    if (!added) {\n-      \/\/ We allow only a single unregistered class for each unique name.\n-      error(\"Duplicated class %s\", _class_name);\n-    }\n+  if (specified_num_interfaces != expected_num_interfaces) {\n+    print_specified_interfaces();\n+    print_actual_interfaces(k);\n+    error(\"The number of interfaces (%d) specified in class list does not match the class file (%d)\",\n+          specified_num_interfaces, expected_num_interfaces);\n+  }\n@@ -519,3 +507,4 @@\n-    \/\/ This tells JVM_FindLoadedClass to not find this class.\n-    k->set_shared_classpath_index(UNREGISTERED_INDEX);\n-    k->clear_shared_class_loader_type();\n+  bool added = SystemDictionaryShared::add_unregistered_class_for_static_archive(THREAD, k);\n+  if (!added) {\n+    \/\/ We allow only a single unregistered class for each unique name.\n+    error(\"Duplicated class %s\", _class_name);\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":15,"deletions":26,"binary":false,"changes":41,"status":"modified"}]}