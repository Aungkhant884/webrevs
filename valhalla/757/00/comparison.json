{"files":[{"patch":"@@ -3409,9 +3409,2 @@\n-                    final Name name = TreeInfo.name(ann.annotationType);\n-                    if (name == names.__primitive__ || name == names.java_lang___primitive__) {\n-                        flag = Flags.PRIMITIVE_CLASS;\n-                    } else if (name == names.__value__ || name == names.java_lang___value__) {\n-                        flag = Flags.VALUE_CLASS;\n-                    } else {\n-                        annotations.append(ann);\n-                        flag = 0;\n-                    }\n+                    annotations.append(ann);\n+                    flag = 0;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -119,4 +119,0 @@\n-    public final Name __primitive__;\n-    public final Name java_lang___primitive__;\n-    public final Name __value__;\n-    public final Name java_lang___value__;\n@@ -317,4 +313,0 @@\n-        __primitive__ = fromString(\"__primitive__\");\n-        java_lang___primitive__ = fromString(\"java.lang.__primitive__\");\n-        __value__ = fromString(\"__value__\");\n-        java_lang___value__ = fromString(\"java.lang.__value__\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Names.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -312,3 +312,1 @@\n-            \"locn.\",\n-            \"java.lang.__primitive__\",\n-            \"java.lang.__value__\"\n+            \"locn.\"\n","filename":"test\/langtools\/tools\/javac\/diags\/CheckResourceKeys.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- @__primitive__ class Foo implements Comparable<Foo.ref>{\n+ primitive class Foo implements Comparable<Foo.ref>{\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues1.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  @__primitive__ class CaptureBug {\n+  primitive class CaptureBug {\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@__primitive__ class StreamBug {\n+primitive class StreamBug {\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues3.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-    @__primitive__\n+    primitive\n@@ -12,1 +12,1 @@\n-        new @__primitive__ I() {\n+        new primitive I() {\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InlineAnnotationOnAnonymousClass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n-@__primitive__\n+primitive\n@@ -12,1 +12,1 @@\n-@__primitive__\n+primitive\n@@ -16,1 +16,1 @@\n-@java.lang.__primitive__\n+primitive\n@@ -24,1 +24,1 @@\n-@__primitive__\n+primitive\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InlineAnnotationTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-    @__primitive__\n+    primitive\n@@ -12,1 +12,1 @@\n-        new @__primitive__ I() {\n+        new primitive I() {\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueAnnotationOnAnonymousClass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n-@__primitive__\n+primitive\n@@ -12,1 +12,1 @@\n-@__primitive__\n+primitive\n@@ -16,1 +16,1 @@\n-@java.lang.__primitive__\n+primitive\n@@ -24,1 +24,1 @@\n-@__primitive__\n+primitive\n","filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueAnnotationTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}