{"files":[{"patch":"@@ -4312,0 +4312,6 @@\n+  if (EnableValhalla) {\n+    __ movl(rdx, Address(rcx, Klass::access_flags_offset()));\n+    __ testl(rdx, JVM_ACC_ABSTRACT);\n+    __ jcc(Assembler::notZero, slow_case);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2540,1 +2540,5 @@\n-  NewInstance* new_instance = new NewInstance(klass->as_instance_klass(), state_before, stream()->is_unresolved_klass());\n+  ciKlass* ik = klass;\n+  if (ik == compilation()->env()->Object_klass() && compilation()->env()->Object_klass()->is_abstract()) {\n+    ik = compilation()->env()->Identity_klass();\n+  }\n+  NewInstance* new_instance = new NewInstance(ik->as_instance_klass(), state_before, stream()->is_unresolved_klass());\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -841,0 +841,5 @@\n+\n+  if (klass == outer()->env()->Object_klass() && outer()->env()->Object_klass()->is_abstract()) {\n+    klass = outer()->env()->Identity_klass();\n+  }\n+\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -188,0 +188,2 @@\n+  do_klass(Identity_klass,                              java_lang_Identity                                    ) \\\n+                                                                                                                \\\n","filename":"src\/hotspot\/share\/classfile\/vmClassMacros.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -148,0 +148,1 @@\n+  template(java_lang_Identity,                        \"java\/lang\/Identity\")                       \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -228,0 +228,8 @@\n+  if (klass->is_abstract()) {\n+    if (klass == vmClasses::Object_klass()) {\n+      klass = vmClasses::Identity_klass();\n+    } else {\n+      THROW(vmSymbols::java_lang_InstantiationError());\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -441,1 +441,6 @@\n-      oop dummy = vmClasses::Object_klass()->allocate_instance(CHECK);\n+      oop dummy;\n+      if(vmClasses::Object_klass()->is_abstract()) {\n+        dummy = vmClasses::Identity_klass()->allocate_instance(CHECK);\n+      } else {\n+        dummy = vmClasses::Object_klass()->allocate_instance(CHECK);\n+      }\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3005,0 +3005,15 @@\n+  bool object_check = C->env()->Object_klass()->is_abstract();\n+\n+  IdealKit ideal(this);\n+#define __ ideal.\n+  IdealVariable result(ideal); __ declarations_done();\n+\n+  if (object_check) {\n+    __ if_then(kls, BoolTest::eq, makecon(TypeKlassPtr::make(C->env()->Object_klass())));\n+    sync_kit(ideal);\n+    Node* obj = new_instance(makecon(TypeKlassPtr::make(C->env()->Identity_klass())));\n+    ideal.sync_kit(this);\n+    ideal.set(result, obj);\n+    __ else_();\n+    sync_kit(ideal);\n+  }\n@@ -3025,0 +3040,7 @@\n+  if (object_check) {\n+    ideal.sync_kit(this);\n+    ideal.set(result, obj);\n+    __ end_if();\n+    final_sync(ideal);\n+    obj = ideal.value(result);\n+  }\n@@ -3026,0 +3048,1 @@\n+#undef __\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -289,0 +289,4 @@\n+  if (klass == C->env()->Object_klass() && C->env()->Object_klass()->is_abstract()) {\n+    klass = C->env()->Identity_klass();\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/parseHelper.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1002,1 +1002,5 @@\n-    instanceOop i = InstanceKlass::allocate_instance(clazzoop, CHECK_NULL);\n+    Klass* ik = k;\n+    if (ik == vmClasses::Object_klass() && vmClasses::Object_klass()->is_abstract()) {\n+      ik = vmClasses::Identity_klass();\n+    }\n+    instanceOop i = InstanceKlass::allocate_instance(k->java_mirror(), CHECK_NULL);\n@@ -1034,1 +1038,5 @@\n-    instanceOop i = InstanceKlass::allocate_instance(clazzoop, CHECK_NULL);\n+    Klass* ik = k;\n+    if (ik == vmClasses::Object_klass() && vmClasses::Object_klass()->is_abstract()) {\n+      ik = vmClasses::Identity_klass();\n+    }\n+    instanceOop i = InstanceKlass::allocate_instance(ik->java_mirror(), CHECK_NULL);\n@@ -1066,1 +1074,5 @@\n-    instanceOop i = InstanceKlass::allocate_instance(clazzoop, CHECK_NULL);\n+     Klass* ik = k;\n+    if (ik == vmClasses::Object_klass() && vmClasses::Object_klass()->is_abstract()) {\n+      ik = vmClasses::Identity_klass();\n+    }\n+    instanceOop i = InstanceKlass::allocate_instance(ik->java_mirror(), CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -466,0 +466,5 @@\n+  oop mirror = JNIHandles::resolve_non_null(cls);\n+  InstanceKlass* k = InstanceKlass::cast(java_lang_Class::as_Klass(mirror));\n+  if (k == vmClasses::Object_klass() && vmClasses::Object_klass()->is_abstract()) {\n+    k = vmClasses::Identity_klass();\n+  }\n@@ -467,1 +472,1 @@\n-  instanceOop i = InstanceKlass::allocate_instance(JNIHandles::resolve_non_null(cls), CHECK_NULL);\n+  instanceOop i = InstanceKlass::allocate_instance(k->java_mirror(), CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1204,1 +1204,5 @@\n-  Handle receiver = klass->allocate_instance_handle(CHECK_NULL);\n+  InstanceKlass* ik = klass;\n+  if (klass == vmClasses::Object_klass() && vmClasses::Object_klass()->is_abstract()) {\n+    ik = vmClasses::Identity_klass();\n+  }\n+  Handle receiver = ik->allocate_instance_handle(CHECK_NULL);\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2022, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.lang;\n+\n+\/**  A class with no other purpose than providing instances with identity\n+ * to be used as synchronization point.\n+ * When the bytecode {@code new} is executed with {@code java.lang.Object} in\n+ * argument, an instance of this class is allocated and a reference to it is\n+ * pushed on the stack.\n+ *\/\n+public final class Identity implements IdentityObject {\n+\n+  \/** Create a new instance with an identity *\/\n+  public Identity() { }\n+}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Identity.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -41,1 +41,1 @@\n-public class Object {\n+public abstract class Object {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -534,1 +534,1 @@\n-        return new Object() {};\n+        return new Identity();\n","filename":"src\/java.base\/share\/classes\/java\/util\/Objects.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-                                        \"Object[Objects$1@\" + TestHelper.DUMMY_CLASS_INSTANCE.objectField.hashCode() + \"]\"},\n+                                        \"Object[Identity@\" + TestHelper.DUMMY_CLASS_INSTANCE.objectField.hashCode() + \"]\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\/jdk\/vm\/ci\/hotspot\/test\/ForObjectDataProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-            if (!cce.getMessage().contains(\"class java.util.Objects$1 cannot be cast to class Derived (java.util.Objects$1 is in module java.base of loader 'bootstrap'; Derived is in unnamed module of loader 'app')\")) {\n+            if (!cce.getMessage().contains(\"class java.lang.Identity cannot be cast to class Derived (java.lang.Identity is in module java.base of loader 'bootstrap'; Derived is in unnamed module of loader 'app')\")) {\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/CCE_module_msg.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        output.shouldMatch(\"^\\\\s+\\\\d+:\\\\s+\\\\d+\\\\s+\\\\d+\\\\s+java.util.Objects\\\\$1 \" + moduleRegex + \"\\\\s*$\");\n+        output.shouldMatch(\"^\\\\s+\\\\d+:\\\\s+\\\\d+\\\\s+\\\\d+\\\\s+java.lang.Identity \" + moduleRegex + \"\\\\s*$\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/ClassHistogramTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    private final String OBJECT = \"a java.util.Objects$1\";\n+    private final String OBJECT = \"a java.lang.Identity\";\n","filename":"test\/hotspot\/jtreg\/serviceability\/tmtools\/jstack\/WaitNotifyThreadTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-java.util.Objects$1\n+java.lang.Identity\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/t\/t058\/t058.gold","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-java.util.Objects$1\n+java.lang.Identity\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/t\/t062\/t062.gold","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-        Identity i1=new MyIdentity(\"identity\",\n+        java.security.Identity i1=new MyIdentity(\"identity\",\n@@ -39,1 +39,1 @@\n-        Identity i2=new MyIdentity(\"identity\",\n+        java.security.Identity i2=new MyIdentity(\"identity\",\n@@ -41,1 +41,1 @@\n-        Identity i3=new MyIdentity(\"identity\",\n+        java.security.Identity i3=new MyIdentity(\"identity\",\n@@ -69,1 +69,1 @@\n-class MyIdentity extends Identity {\n+class MyIdentity extends java.security.Identity {\n@@ -127,1 +127,1 @@\n-    public Identity getIdentity(String name) {\n+    public java.security.Identity getIdentity(String name) {\n@@ -131,1 +131,1 @@\n-    public Identity getIdentity(PublicKey key) {\n+    public java.security.Identity getIdentity(PublicKey key) {\n@@ -135,1 +135,1 @@\n-    public void addIdentity(Identity identity)  {\n+    public void addIdentity(java.security.Identity identity)  {\n@@ -138,1 +138,1 @@\n-    public void removeIdentity(Identity identity)  {\n+    public void removeIdentity(java.security.Identity identity)  {\n","filename":"test\/jdk\/java\/security\/Identity\/EqualsHashCodeContract.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}