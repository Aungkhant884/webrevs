{"files":[{"patch":"@@ -715,1 +715,2 @@\n-          \/\/ If a class method name begins with '<', it must be \"<init>\" and have void signature.\n+          \/\/ If a class method name begins with '<', it must be \"<init>\" and have void signature\n+          \/\/ unless it's an inline type.\n@@ -724,2 +725,6 @@\n-            } else if (!Signature::is_void_method(signature) && !EnableValhalla) { \/\/ must have void signature (unless inline type).\n-              throwIllegalSignature(\"Method\", name, signature, CHECK);\n+            } else if (!Signature::is_void_method(signature)) {\n+              \/\/ if return type is non-void then it cannot be a basic primitive\n+              \/\/ and primitve types must be supported.\n+              if (!signature->ends_with(JVM_SIGNATURE_ENDCLASS) || !EnableValhalla) {\n+                throwIllegalSignature(\"Method\", name, signature, CHECK);\n+              }\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}