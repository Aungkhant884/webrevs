[{"commit":{"message":"Merge branch 'lworld' into lw5_merge_lworld"},"files":[],"sha":"de327f30e385a68e1a74bfb79b593dafdf947abb"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNewLanguageFeatures\/TestNewLanguageFeatures.java"}],"sha":"35e102441815b924130c70c1ff8e353f66ccc4f1"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/CantImplementInterface.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java"}],"sha":"333479928aa3b98b48a355835807e4f4fcbf90e4"},{"commit":{"message":"8314913: [lw5] null restrictions can only be applied to value classes"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/NewObjects.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/CantBeNonNullableType.java"},{"filename":"test\/langtools\/tools\/javac\/nullability\/NullabilityCompilationTests.java"},{"filename":"test\/langtools\/tools\/javac\/nullability\/NullabilityParsingTest.java"},{"filename":"test\/langtools\/tools\/javac\/nullability\/RuntimeNullChecks.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableFlagFromClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ExplicitLambdaWithNullableTypes2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/PreloadAttributeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueConstructorRef.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java"}],"sha":"96b0eba3f0ecd62d9eaac69fd3b98b91a996b23d"},{"commit":{"message":"8314899: [lw5] rename j.l.NonAtomic to j.l.LooselyConsistentValue"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/LooselyConsistentValue.java"}],"sha":"48e680c62f84121a49adb187e1cf7f6af41e917c"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"}],"sha":"1a46d1ca7c78f358e2a0fcd2d7acc104010c7cac"},{"commit":{"message":"8314181: [lw5] the check for illegal circularity should only be done if value classes are available"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java"}],"sha":"0f340086014338993a45ec166c88a3a3a09404dd"},{"commit":{"message":"8314165: [lw5] check for illegal circularity at class loading time"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/cycles\/CheckForCyclesAtClassLoadingTimeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/cycles\/CheckForCyclesAtClassLoadingTimeTest.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/cycles\/CyclicValueClass.jcod"}],"sha":"ad0951021553c5df042c4ffdea710fb8c9f82643"},{"commit":{"message":"Merge lworld"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Target.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/PrintingProcessor.java"}],"sha":"3fdef5ef74c702e951f2b00f3700a01a2010bcc5"},{"commit":{"message":"[lw5] regression test cleanup, relocation"},"files":[{"filename":"test\/langtools\/tools\/javac\/nullability\/NullabilityCompilationTests.java"},{"filename":"test\/langtools\/tools\/javac\/nullability\/NullabilityParsingTest.java"},{"filename":"test\/langtools\/tools\/javac\/nullability\/RuntimeNullChecks.java"}],"sha":"05f62bbd302407de1189c3d2893180690237eed6"},{"commit":{"message":"[lw5] fixing bugs on experimental code to generate Q-descriptors, plus code refactoring"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/TransValues.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ArrayCreationWithQuestion.java"}],"sha":"0390afd950ba796af97bcf81756aba5b349b3580"},{"commit":{"message":"[lw5] experiment: reusing primitive class tests to generate Q descriptors"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ArrayRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/BoxValCastTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckExtends.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckExtends.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFeatureGate2.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/PrimitiveClassesCompilationTests.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ProjectionRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ProperTypeApplySelectTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QPoint.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QTypedValue.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QualifiedSuperCtor.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QualifiedThisTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/Range.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/RefDotClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SeparateCompileTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SeparateCompileTest01.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SideEffectTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SignatureTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SmallSet.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/StaticSelectedThroughProjection.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/StreamsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SuperHashCodeEqualsToStringTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/T8279655.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TestQualifierOnInit.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TestReflectiveMirrors.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ThisIsNotAnInstanceField.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TypeRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnannotatedProjection.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassBytecodeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassInnerClassesTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassNestHostTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnrelatedThisLeak.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValRefTokensTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueAsEnclosingClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueBootstrapMethodsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueConstructorRef.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueCreationTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueNewReadWrite.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValuesAsRefs.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/WithFieldOfGenericType.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/WithFieldRuntimeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/records\/ApplicableAnnotationsOnPrimitiveRecords.java"}],"sha":"300a88e1a5d7576e1f587141a9285c93cf3a72d8"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"e24e94c36b3547eb76082cbbc4bfb800ee75b69a"},{"commit":{"message":"experiment: generate Q descriptors for lw5 code"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Code.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/PoolWriter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/TransValues.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AnonymousValue.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AnonymousValueType.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ArrayCreationWithQuestion.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ArrayRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AsSuperTests.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AssortedTests.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AttributesTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AutoCloseableTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/BogusIncompatibility.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/BoxValCastTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CanonicalCtorTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CastNullCheckTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ChainedAssignmentTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckBadSelector.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckCyclicMembership.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckCyclicMembership.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckExtends.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFeatureGate1.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFeatureGate1.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFieldDescriptors.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFinal.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFinal.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableCycles.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableCycles.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableFlagFromClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableFlagFromClass.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableSyntheticFields.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckIdentityHash.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckIdentityHash01.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckLocalClasses.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckMakeDefault.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckMakeDefault.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckMultiDimensionalArrayStore.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckMultiDimensionalArrayStore.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckNullAssign.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckNullCastable.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckNullCastable.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckNullWithQuestion.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckQuestionInMessages.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckQuestionInMessages.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckSeparateCompile.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckSeparateCompile0.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckStaticFinalAssign.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckSynchronized.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckSynchronized.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckThisLeak.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckThisLeak.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckValueModifier.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckValueModifier.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ClassLiteralNegativeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ClassLiteralNegativeTest.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ClassLiteralTypingTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CompilerNoBogusAssert.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CompilesJustFine.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ConditionalInlineTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ConstantPropagationTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ConsumeUnifiedClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ConsumeUnifiedClass.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ConsumeUnifiedClass2.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CtorChain.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/DefaultNonInlines.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/DefaultOfPrimitiveReference.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/DocLintSyntheticsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/DualNonDuplicateErrors.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/EmptyValueTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/EnhancedForLoopTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ExplicitLambdaWithNullableTypes.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ExplicitLambdaWithNullableTypes2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ExplicitLambdaWithNullableTypes3.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/FlattenableFlagFromClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericArrayRegression.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues1.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues3.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues4.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues5.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GetClassTypingTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ImplicitIdentityTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InferredValueParameterizationTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InlineClassTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InlineDiamondTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InnerClassAttributeValuenessTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InnerValueNew.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InstanceofProjectionArray.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/IntercastTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/IntercastTest2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/LocalValueNew.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/LookupOnLoxTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/LookupOnLoxTest2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/LubWithInlines.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/MyValue.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/NoCrashTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/NoUnnecessaryCast.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/OverloadingPhaseTest2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ParameterizedDefault.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/Point.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/PreloadAttributeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/PrimitiveClassesCompilationTests.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ProjectedArrayDotClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ProjectionRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ProperTypeApplySelectTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QualifiedSuperCtor.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QualifiedThisTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/Rectangle.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/RefDotClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SeparateCompileTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SeparateCompileTest01.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SideEffectTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SignatureTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/StaticSelectedThroughProjection.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/StreamsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SuperHashCodeEqualsToStringTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/T8279655.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TestQualifierOnInit.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TestReflectiveMirrors.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ThisIsNotAnInstanceField.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TypeRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnannotatedProjection.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassBytecodeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassInnerClassesTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassNestHostTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnrelatedThisLeak.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValRefTokensTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueAsEnclosingClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueBootstrapMethodsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueConstructorRef.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueCreationTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueNewReadWrite.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValuesAsRefs.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/WithFieldOfGenericType.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/WithFieldRuntimeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/records\/ApplicableAnnotationsOnPrimitiveRecords.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ArrayCreationWithQuestion.java"}],"sha":"97b5c8461544379d74858ef8845ba3e8327fa848"},{"commit":{"message":"8313080: [lw5] javac parser is not accepting some array types with nullness markers"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"}],"sha":"916fbb618a3a271b70a8ad95124d78492bced02d"},{"commit":{"message":"8310905: [lw5] addressing review comments on null restricted types\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/referenceinfos\/NewObjects.java"}],"sha":"a716bc8584988d9d91aff1d3c4a4d6f2b930c7d6"},{"commit":{"message":"Merge lworld"},"files":[],"sha":"28a1d44fbfcc22256cef20ec5fcf06eb4c7e4e0f"},{"commit":{"message":"8310840: [lw5] add several regression tests"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/PrintingProcessor.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDeprecatedDocs\/TestDeprecatedDocs.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHiddenTag\/TestHiddenTag.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlDefinitionListTag\/TestHtmlDefinitionListTag.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlTag\/TestHtmlTag.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInterface\/TestInterface.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkOption\/TestLinkOption.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testModules\/TestModules.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNewLanguageFeatures\/TestNewLanguageFeatures.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOptions\/TestOptions.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPrivateClasses\/TestPrivateClasses.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/TestRecordTypes.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSealedTypes\/TestSealedTypes.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeAnnotations\/TestTypeAnnotations.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTypeParams\/TestTypeParameters.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testValueClasses\/TestValueClasses.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImplicitConstructorWithBody.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImplicitMustBeInValueClass.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/ImplicitMustBePublic.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/SuperNotAllowedInPrimitiveCtor.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/TypeReqIdentity.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/ValueClassWithImplicitCannotBeInner.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/ValueClassWithImplicitCantDeclareInitBlock.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/ValueClassWithImplicitCantHaveFieldInit.java"},{"filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestSealed.java"},{"filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestValueClasses.java"},{"filename":"test\/langtools\/tools\/javac\/records\/RecordReading.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java"}],"sha":"5b9697dd790642df1626f4d94b6f108bff0ca75d"},{"commit":{"message":"8310839: [lw5] implicit constructors must be public and declared in a value class"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java"}],"sha":"c71797c8e457269e7c408340d98da09c6ea97b86"},{"commit":{"message":"8310832: [lw5] reflective creation of arrays of non-nullable types"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/Modifier.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Names.java"}],"sha":"51b49102f17abf415d94935b99b4aa674559b83f"},{"commit":{"message":"8310819: [lw5] loading NonAtomic can produce completion errors"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"}],"sha":"df0cfa1e657eb4620c90cdeb44ecc5baef256565"},{"commit":{"message":"8310812: [lw5] addressing pending issues now that non-nullable types are available"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"}],"sha":"ea56651c2121e632373cbdeda3b6cc0ef2ffcc5f"},{"commit":{"message":"8310686: [lw5] check that only value classes with implicit constructor can implement NonAtomic"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"}],"sha":"4449b02e794068408dedecf1364292a9d19f2e54"},{"commit":{"message":"8310685: [lw5] adding support for null restricted types"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeMetadata.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/Pretty.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Warner.java"},{"filename":"test\/langtools\/lib\/combo\/tools\/javac\/combo\/CompilationTestCase.java"},{"filename":"test\/langtools\/lib\/combo\/tools\/javac\/combo\/Diagnostics.java"},{"filename":"test\/langtools\/lib\/combo\/tools\/javac\/combo\/JavacTemplateTestBase.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt"}],"sha":"5438b74f7def714577bea9b4fba2fc5a108d4464"},{"commit":{"message":"8310684: [lw5] adding missing ImplicitCreation and NullRestricted visitors in regression tests"},"files":[{"filename":"test\/langtools\/lib\/annotations\/annotations\/classfile\/ClassfileInspector.java"},{"filename":"test\/langtools\/tools\/javac\/MethodParameters\/AttributeVisitor.java"}],"sha":"e9f496a6709dd8f10a93895fd1cfe35f1f5f6aa5"},{"commit":{"message":"8310679: [lw5] test refactoring, repurposing primitive classes tests"},"files":[{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AnonymousValue.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AnonymousValueType.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ArrayCreationWithQuestion.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ArrayRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AssortedTests.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AttributesTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CanonicalCtorTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckBadSelector.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFeatureGate1.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFeatureGate1.out"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/AnonymousValue.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/AnonymousValueType.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ArrayCreationWithQuestion.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/CanonicalCtorTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java"}],"sha":"024c99e00934decc4e29040fb47b64d9181d8f1c"},{"commit":{"message":"8310678: [lw5] add implicit constructors"},"files":[{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/Modifier.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/MemberEnter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Target.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Names.java"},{"filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/classfile\/AccessFlags.java"},{"filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/classfile\/Attribute.java"},{"filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/classfile\/ClassWriter.java"},{"filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/classfile\/ImplicitCreation_attribute.java"},{"filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/classfile\/NullRestricted_attribute.java"},{"filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/AttributeWriter.java"}],"sha":"7030f9f69426c87e935ecb8fd9528b62a18651a8"},{"commit":{"message":"8310664: remove compiler support for primitive classes"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/api\/JavacTrees.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Printer.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeAnnotations.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Enter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Code.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/PoolWriter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/TransValues.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacTypes.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeMaker.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Names.java"},{"filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/BridgeShouldHaveNoInteriorAnnotationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/api\/TestApisWithProjections.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/PrimitiveClassesNotSupported.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/ProjectionCantBeInstantiated.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AnonymousValue.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AnonymousValueType.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ArrayCreationWithQuestion.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ArrayRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AsSuperTests.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AssortedTests.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AttributesTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/AutoCloseableTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/BogusIncompatibility.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/BoxValCastTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CanonicalCtorTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CastNullCheckTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ChainedAssignmentTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckBadSelector.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckCyclicMembership.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckExtends.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFeatureGate1.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFieldDescriptors.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFinal.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableCycles.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableFlagFromClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckFlattenableSyntheticFields.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckIdentityHash.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckIdentityHash01.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckLocalClasses.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckMakeDefault.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckMultiDimensionalArrayStore.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckNullAssign.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckNullCastable.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckNullWithQuestion.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckQuestionInMessages.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckSeparateCompile.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckStaticFinalAssign.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckSynchronized.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckThisLeak.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CheckValueModifier.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ClassLiteralNegativeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ClassLiteralTypingTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CompilerNoBogusAssert.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CompilesJustFine.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ConditionalInlineTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ConstantPropagationTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ConsumeUnifiedClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/CtorChain.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/DefaultNonInlines.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/DefaultOfPrimitiveReference.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/DocLintSyntheticsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/DualNonDuplicateErrors.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/EmptyValueTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/EnhancedForLoopTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ExplicitLambdaWithNullableTypes.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ExplicitLambdaWithNullableTypes2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ExplicitLambdaWithNullableTypes3.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericArrayRegression.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues1.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues3.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues4.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GenericsAndValues5.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/GetClassTypingTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ImplicitIdentityTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InferredValueParameterizationTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InlineClassTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InlineDiamondTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InnerClassAttributeValuenessTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InnerValueNew.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/InstanceofProjectionArray.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/IntercastTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/IntercastTest2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/LocalValueNew.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/LookupOnLoxTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/LookupOnLoxTest2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/LubWithInlines.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/NoCrashTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/NoUnnecessaryCast.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/OverloadingPhaseTest2.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ParameterizedDefault.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/Point.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/PreloadAttributeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/PrimitiveClassesCompilationTests.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ProjectedArrayDotClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ProjectionRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ProperTypeApplySelectTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QualifiedSuperCtor.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/QualifiedThisTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/RefDotClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SeparateCompileTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SeparateCompileTest01.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SideEffectTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SignatureTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/StaticSelectedThroughProjection.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/StreamsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/SuperHashCodeEqualsToStringTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/T8279655.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TestQualifierOnInit.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TestReflectiveMirrors.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ThisIsNotAnInstanceField.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/TypeRelationsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnannotatedProjection.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassBytecodeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassInnerClassesTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnifiedPrimitiveClassNestHostTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/UnrelatedThisLeak.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValRefTokensTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueAsEnclosingClass.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueBootstrapMethodsTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueConstructorRef.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueCreationTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValueNewReadWrite.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/ValuesAsRefs.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/WithFieldOfGenericType.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/WithFieldRuntimeTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/primitive-classes\/records\/ApplicableAnnotationsOnPrimitiveRecords.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ConstructorRefTest.java"},{"filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueObjectCompilationTests.java"}],"sha":"9496505d6ebe3e7780fe6a3f300c9298c6cffa59"}]