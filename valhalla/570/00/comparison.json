{"files":[{"patch":"@@ -3761,1 +3761,1 @@\n-    if (tf()->returns_inline_type_as_fields() && !_method->is_method_handle_intrinsic()) {\n+    if (tf()->returns_inline_type_as_fields() && !_method->is_method_handle_intrinsic() && return_value_is_used()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2427,1 +2427,1 @@\n-    if (tf()->returns_inline_type_as_fields() && !_method->is_method_handle_intrinsic()) {\n+    if (tf()->returns_inline_type_as_fields() && !_method->is_method_handle_intrinsic() && return_value_is_used()) {\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -700,1 +700,0 @@\n-#ifndef _LP64\n@@ -707,2 +706,0 @@\n-  assert(tf()->returns_inline_type_as_fields(), \"multiple return values not supported\");\n-\n@@ -719,1 +716,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/opto\/machnode.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -952,1 +952,1 @@\n-  NOT_LP64(bool return_value_is_used() const;)\n+  bool return_value_is_used() const;\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}