{"files":[{"patch":"@@ -28,1 +28,1 @@\n-public abstract class AbstractPV {\n+public abstract value class AbstractV {\n@@ -38,143 +38,0 @@\n-\n-\/\/ Added ACC_VALUE to class access flags.\n-class AbstractPV_ACC_VALUE {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  62; \/\/ version\n-  [33] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1     at 0x0A\n-    class #4; \/\/ #2     at 0x0F\n-    NameAndType #5 #6; \/\/ #3     at 0x12\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n-    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n-    Utf8 \"()V\"; \/\/ #6     at 0x33\n-    Field #8 #9; \/\/ #7     at 0x39\n-    class #10; \/\/ #8     at 0x3E\n-    NameAndType #11 #12; \/\/ #9     at 0x41\n-    Utf8 \"java\/lang\/System\"; \/\/ #10     at 0x46\n-    Utf8 \"out\"; \/\/ #11     at 0x59\n-    Utf8 \"Ljava\/io\/PrintStream;\"; \/\/ #12     at 0x5F\n-    String #14; \/\/ #13     at 0x77\n-    Utf8 \"hi\"; \/\/ #14     at 0x7A\n-    Method #16 #17; \/\/ #15     at 0x7F\n-    class #18; \/\/ #16     at 0x84\n-    NameAndType #19 #20; \/\/ #17     at 0x87\n-    Utf8 \"java\/io\/PrintStream\"; \/\/ #18     at 0x8C\n-    Utf8 \"println\"; \/\/ #19     at 0xA2\n-    Utf8 \"(Ljava\/lang\/String;)V\"; \/\/ #20     at 0xAC\n-    Field #22 #23; \/\/ #21     at 0xC4\n-    class #24; \/\/ #22     at 0xC9\n-    NameAndType #25 #26; \/\/ #23     at 0xCC\n-    Utf8 \"AbstractPV_ACC_VALUE\"; \/\/ #24     at 0xD1\n-    Utf8 \"x\"; \/\/ #25     at 0xDE\n-    Utf8 \"I\"; \/\/ #26     at 0xE2\n-    Utf8 \"Code\"; \/\/ #27     at 0xE6\n-    Utf8 \"LineNumberTable\"; \/\/ #28     at 0xED\n-    Utf8 \"meth\"; \/\/ #29     at 0xFF\n-    Utf8 \"<clinit>\"; \/\/ #30     at 0x0106\n-    Utf8 \"SourceFile\"; \/\/ #31     at 0x0111\n-    Utf8 \"AbstractPV_ACC_VALUE.java\"; \/\/ #32     at 0x011E\n-  } \/\/ Constant Pool\n-\n-  0x0441; \/\/ access [ ACC_VALUE ACC_PUBLIC ACC_ABSTRACT ]\n-  #22;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ Fields\n-    {  \/\/ field at 0x013A\n-      0x0008; \/\/ access\n-      #25; \/\/ name_index       : x\n-      #26; \/\/ descriptor_index : I\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [3] { \/\/ Methods\n-    {  \/\/ method at 0x0144\n-      0x0001; \/\/ access\n-      #5; \/\/ name_index       : <init>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 29) { \/\/ Code at 0x014C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB70001B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 6) { \/\/ LineNumberTable at 0x0163\n-              [1] { \/\/ line_number_table\n-                0  2; \/\/  at 0x016F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x016F\n-      0x0029; \/\/ access\n-      #29; \/\/ name_index       : meth\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 37) { \/\/ Code at 0x0177\n-          2; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[9]{\n-            0xB20007120DB6000F;\n-            0xB1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 10) { \/\/ LineNumberTable at 0x0192\n-              [2] { \/\/ line_number_table\n-                0  7; \/\/  at 0x019E\n-                8  8; \/\/  at 0x01A2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x01A2\n-      0x0008; \/\/ access\n-      #30; \/\/ name_index       : <clinit>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 29) { \/\/ Code at 0x01AA\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[5]{\n-            0x06B30015B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 6) { \/\/ LineNumberTable at 0x01C1\n-              [1] { \/\/ line_number_table\n-                0  4; \/\/  at 0x01CD\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n-\n-  [1] { \/\/ Attributes\n-    Attr(#31, 2) { \/\/ SourceFile at 0x01CF\n-      #32;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class AbstractPV_ACC_VALUE\n-\n-\n@@ -182,1 +39,1 @@\n-class AbstractPVField {\n+class AbstractVField {\n@@ -211,1 +68,1 @@\n-    Utf8 \"AbstractPVField\"; \/\/ #24     at 0xD1\n+    Utf8 \"AbstractVField\"; \/\/ #24     at 0xD1\n@@ -219,1 +76,1 @@\n-    Utf8 \"AbstractPVField.java\"; \/\/ #32     at 0x011E\n+    Utf8 \"AbstractVField.java\"; \/\/ #32     at 0x011E\n@@ -222,1 +79,1 @@\n-  0x0421; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_ABSTRACT ]\n+  0x0461; \/\/ access [ ACC_PUBLIC ACC_ABSTRACT ACC_SUPER ACC_VALUE ]\n@@ -320,1 +177,1 @@\n-} \/\/ end class AbstractPVField\n+} \/\/ end class AbstractVField\n@@ -324,1 +181,1 @@\n-class AbstractPVFinal {\n+class AbstractVFinal {\n@@ -353,1 +210,1 @@\n-    Utf8 \"AbstractPVFinal\"; \/\/ #24     at 0xD1\n+    Utf8 \"AbstractVFinal\"; \/\/ #24     at 0xD1\n@@ -361,1 +218,1 @@\n-    Utf8 \"AbstractPVFinal.java\"; \/\/ #32     at 0x011E\n+    Utf8 \"AbstractVFinal.java\"; \/\/ #32     at 0x011E\n@@ -364,1 +221,1 @@\n-  0x0431; \/\/ access [ ACC_FINAL ACC_PUBLIC ACC_SUPER ACC_ABSTRACT ]\n+  0x0471; \/\/ access [ ACC_FINAL ACC_PUBLIC ACC_VALUE ACC_SUPER ACC_ABSTRACT ]\n@@ -462,1 +319,1 @@\n-} \/\/ end class AbstractPVFinal\n+} \/\/ end class AbstractVFinal\n@@ -466,1 +323,1 @@\n-class AbstractPVintf {\n+class AbstractVintf {\n@@ -495,1 +352,1 @@\n-    Utf8 \"AbstractPVintf\"; \/\/ #24     at 0xD1\n+    Utf8 \"AbstractVintf\"; \/\/ #24     at 0xD1\n@@ -503,1 +360,1 @@\n-    Utf8 \"AbstractPVintf.java\"; \/\/ #32     at 0x011E\n+    Utf8 \"AbstractVintf.java\"; \/\/ #32     at 0x011E\n@@ -506,1 +363,1 @@\n-  0x0621; \/\/ access [ ACC_INTERFACE ACC_PUBLIC ACC_SUPER ACC_ABSTRACT ]\n+  0x0661; \/\/ access [ ACC_INTERFACE ACC_PUBLIC ACC_SUPER ACC_VALUE ACC_ABSTRACT ]\n@@ -604,1 +461,1 @@\n-} \/\/ end class AbstractPVintf\n+} \/\/ end class AbstractVintf\n@@ -608,1 +465,1 @@\n-class AbstractPVMethod {\n+class AbstractVMethod {\n@@ -637,1 +494,1 @@\n-    Utf8 \"AbstractPVMethod\"; \/\/ #24     at 0xD1\n+    Utf8 \"AbstractVMethod\"; \/\/ #24     at 0xD1\n@@ -645,1 +502,1 @@\n-    Utf8 \"AbstractPVMethod.java\"; \/\/ #32     at 0x011E\n+    Utf8 \"AbstractVMethod.java\"; \/\/ #32     at 0x011E\n@@ -648,1 +505,1 @@\n-  0x0421; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_ABSTRACT ]\n+  0x0461; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_VALUE ACC_ABSTRACT ]\n@@ -665,25 +522,1 @@\n-  [3] { \/\/ Methods\n-    {  \/\/ method at 0x0144\n-      0x0001; \/\/ access\n-      #5; \/\/ name_index       : <init>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 29) { \/\/ Code at 0x014C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB70001B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 6) { \/\/ LineNumberTable at 0x0163\n-              [1] { \/\/ line_number_table\n-                0  2; \/\/  at 0x016F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n+  [2] { \/\/ Methods\n@@ -746,43 +579,1 @@\n-} \/\/ end class AbstractPVMethod\n-\n-\n-\/\/ Removed ACC_ABSTRACT from class access flags.\n-class NoAbstract {\n-  0xCAFEBABE;\n-  0; \/\/ minor version\n-  62; \/\/ version\n-  [33] { \/\/ Constant Pool\n-    ; \/\/ first element is empty\n-    Method #2 #3; \/\/ #1     at 0x0A\n-    class #4; \/\/ #2     at 0x0F\n-    NameAndType #5 #6; \/\/ #3     at 0x12\n-    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n-    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n-    Utf8 \"()V\"; \/\/ #6     at 0x33\n-    Field #8 #9; \/\/ #7     at 0x39\n-    class #10; \/\/ #8     at 0x3E\n-    NameAndType #11 #12; \/\/ #9     at 0x41\n-    Utf8 \"java\/lang\/System\"; \/\/ #10     at 0x46\n-    Utf8 \"out\"; \/\/ #11     at 0x59\n-    Utf8 \"Ljava\/io\/PrintStream;\"; \/\/ #12     at 0x5F\n-    String #14; \/\/ #13     at 0x77\n-    Utf8 \"hi\"; \/\/ #14     at 0x7A\n-    Method #16 #17; \/\/ #15     at 0x7F\n-    class #18; \/\/ #16     at 0x84\n-    NameAndType #19 #20; \/\/ #17     at 0x87\n-    Utf8 \"java\/io\/PrintStream\"; \/\/ #18     at 0x8C\n-    Utf8 \"println\"; \/\/ #19     at 0xA2\n-    Utf8 \"(Ljava\/lang\/String;)V\"; \/\/ #20     at 0xAC\n-    Field #22 #23; \/\/ #21     at 0xC4\n-    class #24; \/\/ #22     at 0xC9\n-    NameAndType #25 #26; \/\/ #23     at 0xCC\n-    Utf8 \"NoAbstract\"; \/\/ #24     at 0xD1\n-    Utf8 \"x\"; \/\/ #25     at 0xDE\n-    Utf8 \"I\"; \/\/ #26     at 0xE2\n-    Utf8 \"Code\"; \/\/ #27     at 0xE6\n-    Utf8 \"LineNumberTable\"; \/\/ #28     at 0xED\n-    Utf8 \"meth\"; \/\/ #29     at 0xFF\n-    Utf8 \"<clinit>\"; \/\/ #30     at 0x0106\n-    Utf8 \"SourceFile\"; \/\/ #31     at 0x0111\n-    Utf8 \"NoAbstract.java\"; \/\/ #32     at 0x011E\n-  } \/\/ Constant Pool\n+} \/\/ end class AbstractVMethod\n@@ -790,92 +581,0 @@\n-  0x0021; \/\/ access [ ACC_PUBLIC ACC_SUPER ]\n-  #22;\/\/ this_cpx\n-  #2;\/\/ super_cpx\n-\n-  [0] { \/\/ Interfaces\n-  } \/\/ Interfaces\n-\n-  [1] { \/\/ Fields\n-    {  \/\/ field at 0x013A\n-      0x0008; \/\/ access\n-      #25; \/\/ name_index       : x\n-      #26; \/\/ descriptor_index : I\n-      [0] { \/\/ Attributes\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Fields\n-\n-  [3] { \/\/ Methods\n-    {  \/\/ method at 0x0144\n-      0x0001; \/\/ access\n-      #5; \/\/ name_index       : <init>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 29) { \/\/ Code at 0x014C\n-          1; \/\/ max_stack\n-          1; \/\/ max_locals\n-          Bytes[5]{\n-            0x2AB70001B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 6) { \/\/ LineNumberTable at 0x0163\n-              [1] { \/\/ line_number_table\n-                0  2; \/\/  at 0x016F\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x016F\n-      0x0029; \/\/ access\n-      #29; \/\/ name_index       : meth\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 37) { \/\/ Code at 0x0177\n-          2; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[9]{\n-            0xB20007120DB6000F;\n-            0xB1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 10) { \/\/ LineNumberTable at 0x0192\n-              [2] { \/\/ line_number_table\n-                0  7; \/\/  at 0x019E\n-                8  8; \/\/  at 0x01A2\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-    ;\n-    {  \/\/ method at 0x01A2\n-      0x0008; \/\/ access\n-      #30; \/\/ name_index       : <clinit>\n-      #6; \/\/ descriptor_index : ()V\n-      [1] { \/\/ Attributes\n-        Attr(#27, 29) { \/\/ Code at 0x01AA\n-          1; \/\/ max_stack\n-          0; \/\/ max_locals\n-          Bytes[5]{\n-            0x06B30015B1;\n-          }\n-          [0] { \/\/ Traps\n-          } \/\/ end Traps\n-          [1] { \/\/ Attributes\n-            Attr(#28, 6) { \/\/ LineNumberTable at 0x01C1\n-              [1] { \/\/ line_number_table\n-                0  4; \/\/  at 0x01CD\n-              }\n-            } \/\/ end LineNumberTable\n-          } \/\/ Attributes\n-        } \/\/ end Code\n-      } \/\/ Attributes\n-    }\n-  } \/\/ Methods\n@@ -883,6 +582,0 @@\n-  [1] { \/\/ Attributes\n-    Attr(#31, 2) { \/\/ SourceFile at 0x01CF\n-      #32;\n-    } \/\/ end SourceFile\n-  } \/\/ Attributes\n-} \/\/ end class NoAbstract\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/ACCCFETests.jcod","additions":22,"deletions":329,"binary":false,"changes":351,"status":"modified"},{"patch":"@@ -39,0 +39,3 @@\n+            if (message != null) {\n+                throw new RuntimeException(\"Expected ClassFormatError with message: \" + message + \", but none occurred\");\n+            }\n@@ -41,1 +44,1 @@\n-                throw new RuntimeException( \"Wrong ClassFormatError: \" + e.getMessage());\n+                throw new RuntimeException( \"Wrong ClassFormatError: \" + e.getMessage() + \" expected: \" + message);\n@@ -48,10 +51,2 @@\n-        \/\/ Test illegal class that has both ACC_VALUE and ACC_PERMITS_VALUE set.\n-        runTest(\"AbstractPV_ACC_VALUE\",\n-                \"Illegal class modifiers in class AbstractPV_ACC_VALUE (a value class)\");\n-\n-        \/\/ Test illegal class that has ACC_PERMITS_VALUE set and a non-static field..\n-        runTest(\"AbstractPVField\", \"Illegal field modifiers in class AbstractPVField\");\n-\n-        \/\/ Test illegal class that has both ACC_FINAL and ACC_PERMITS_VALUE set.\n-        runTest(\"AbstractPVFinal\",\n-                \"Illegal class modifiers in class AbstractPVFinal (a permits_value class)\");\n+        \/\/ Test illegal class that has ACC_VALUE set and a non-static field..\n+        runTest(\"AbstractVField\", \"Illegal field modifiers in class AbstractVField\");\n@@ -59,3 +54,3 @@\n-        \/\/ Test illegal class that has both ACC_INTERFACE and ACC_PERMITS_VALUE set.\n-        runTest(\"AbstractPVintf\",\n-                \"Illegal class modifiers in class AbstractPVintf (a permits_value class)\");\n+        \/\/ Test illegal class that has both ACC_FINAL and ACC_VALUE set.\n+        runTest(\"AbstractVFinal\",\n+                \"Illegal class modifiers in class AbstractVFinal (a value class)\");\n@@ -63,3 +58,3 @@\n-        \/\/ Test illegal class that has ACC_PERMITS_VALUE set and a non-static synchronized method.\n-        runTest(\"AbstractPVMethod\",\n-                \"Method meth in class AbstractPVMethod (an inline class) has illegal modifiers\");\n+        \/\/ Test illegal class that has both ACC_INTERFACE and ACC_VALUE set.\n+        runTest(\"AbstractVintf\",\n+                \"Illegal class modifiers in class AbstractVintf (a value class)\");\n@@ -67,2 +62,3 @@\n-        \/\/ Test illegal class that has ACC_PERMITS_VALUE set, but not ACC_ABSTRACT.\n-        runTest(\"NoAbstract\", \"Illegal class modifiers in class NoAbstract (a permits_value class)\");\n+        \/\/ Test illegal class that has ACC_VALUE set and a non-static synchronized method.\n+        runTest(\"AbstractVMethod\",\n+                \"Method meth in class AbstractVMethod (an inline class) has illegal modifiers\");\n","filename":"test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/classfileparser\/ACC_CFETest.java","additions":15,"deletions":19,"binary":false,"changes":34,"status":"modified"}]}