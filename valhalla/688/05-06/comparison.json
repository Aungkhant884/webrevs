{"files":[{"patch":"@@ -910,1 +910,1 @@\n-          \"Inline type %s has an identity type as supertytype\",\n+          \"Inline type %s has an identity type as supertype\",\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2778,0 +2778,14 @@\n+\n+        boolean cIsValue = (c.tsym.flags() & VALUE_CLASS) != 0;\n+        boolean cHasIdentity = (c.tsym.flags() & IDENTITY_TYPE) != 0;\n+\n+        if (cIsValue || cHasIdentity) {\n+            List<Type> superTypes = types.closure(c);\n+            for (Type superType : superTypes) {\n+                if (cIsValue && (superType.tsym.flags() & IDENTITY_TYPE) != 0) {\n+                    log.error(pos, Errors.ValueTypeHasIdentitySuperType(c, superType));\n+                } else if (cHasIdentity && (superType.tsym.flags() & VALUE_CLASS) != 0) {\n+                    log.error(pos, Errors.IdentityTypeHasValueSuperType(c, superType));\n+                }\n+            }\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -3952,0 +3952,8 @@\n+# 0: type, 1: type\n+compiler.err.value.type.has.identity.super.type=\\\n+    The identity type {1} cannot be a supertype of the value type {0}\n+\n+# 0: type, 1: type\n+compiler.err.identity.type.has.value.super.type=\\\n+    The value type {1} cannot be a supertype of the identity type {0}\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -217,1 +217,0 @@\n-compiler.err.value.class.must.not.implement.identity.object\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.illegal.combination.of.modifiers\n+\/\/ key: compiler.err.identity.type.has.value.super.type\n+\/\/ key: compiler.err.value.type.has.identity.super.type\n+\n+value identity class IdentityValueClass {}\n+\n+value interface VI {}\n+class C implements VI {}\n+\n+identity interface II {}\n+value class V implements II {}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/IdentityValueClash.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.bad.functional.intf.anno.1\n-\/\/ key: compiler.misc.not.a.functional.intf.1\n-\/\/ key: compiler.misc.may.not.extend.top.interface.type\n-\n-@FunctionalInterface\n-interface I extends ValueObject {\n-    void m();\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/MayNotExtendTopInterfaceType.java","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,29 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.identity.class.must.not.implement.value.object\n-\/\/ key: compiler.err.mutually.incompatible.super.interfaces\n-\n-class Identity implements ValueObject {\n-    abstract class Inner implements IdentityObject, ValueObject {}\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/TopInterfaces.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"deleted"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.bad.functional.intf.anno.1\n+\/\/ key: compiler.misc.not.a.functional.intf.1\n+\/\/ key: compiler.misc.value.interface.nonfunctional\n+\/\/ key: compiler.misc.identity.interface.nonfunctional\n+\n+@FunctionalInterface\n+value interface I {\n+    void m();\n+}\n+\n+identity interface J {\n+    void m();\n+}\n+\n+@FunctionalInterface\n+interface K extends J {\n+}\n+\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ValueOrIdentityInterfacesAreNotFunctional.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -5,1 +5,2 @@\n-4 errors\n+CheckFinal.java:19:42: compiler.err.identity.type.has.value.super.type: compiler.misc.anonymous.class: CheckFinal, CheckFinal\n+5 errors\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/CheckFinal.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ValueModifierTest.java:15:21: compiler.err.identity.type.has.value.super.type: compiler.misc.anonymous.class: Value, Value\n@@ -4,1 +5,1 @@\n-3 errors\n+4 errors\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/ValueModifierTest.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -5,0 +5,1 @@\n+SemanticsViolationsTest.java:12:5: compiler.err.identity.type.has.value.super.type: SemanticsViolationsTest.Subclass, SemanticsViolationsTest.Base\n@@ -15,1 +16,1 @@\n-14 errors\n+15 errors\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/SemanticsViolationsTest.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4,1 +4,2 @@\n-3 errors\n+ValueAnnotationTest.java:11:12: compiler.err.identity.type.has.value.super.type: ValueAnnotationTest.Z, ValueAnnotationTest.Y\n+4 errors\n","filename":"test\/langtools\/tools\/javac\/valhalla\/value-objects\/ValueAnnotationTest.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}