{"files":[{"patch":"@@ -1597,1 +1597,1 @@\n-    __ tst(klass, Klass::_lh_array_tag_vt_value_bit_inplace);\n+    __ tst(klass, Klass::_lh_array_tag_flat_value_bit_inplace);\n@@ -1608,1 +1608,1 @@\n-      __ tst(klass, Klass::_lh_null_free_bit_inplace);\n+      __ tst(klass, Klass::_lh_null_free_array_bit_inplace);\n@@ -1631,1 +1631,1 @@\n-    __ tst(klass, Klass::_lh_null_free_bit_inplace);\n+    __ tst(klass, Klass::_lh_null_free_array_bit_inplace);\n@@ -2416,1 +2416,1 @@\n-      __ tst(tmp, Klass::_lh_null_free_bit_inplace);\n+      __ tst(tmp, Klass::_lh_null_free_array_bit_inplace);\n@@ -2418,1 +2418,1 @@\n-      __ tst(tmp, Klass::_lh_array_tag_vt_value_bit_inplace);\n+      __ tst(tmp, Klass::_lh_array_tag_flat_value_bit_inplace);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1382,1 +1382,1 @@\n-  andr(temp_reg, temp_reg, InstanceKlass::misc_flags_is_empty_inline_type());\n+  andr(temp_reg, temp_reg, InstanceKlass::misc_flag_is_empty_inline_type());\n@@ -1438,1 +1438,1 @@\n-  tst(lh, Klass::_lh_array_tag_vt_value_bit_inplace);\n+  tst(lh, Klass::_lh_array_tag_flat_value_bit_inplace);\n@@ -1443,1 +1443,1 @@\n-  tst(lh, Klass::_lh_array_tag_vt_value_bit_inplace);\n+  tst(lh, Klass::_lh_array_tag_flat_value_bit_inplace);\n@@ -1448,1 +1448,1 @@\n-  tst(lh, Klass::_lh_null_free_bit_inplace);\n+  tst(lh, Klass::_lh_null_free_array_bit_inplace);\n@@ -1453,1 +1453,1 @@\n-  tst(lh, Klass::_lh_null_free_bit_inplace);\n+  tst(lh, Klass::_lh_null_free_array_bit_inplace);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2112,1 +2112,1 @@\n-    __ tst(lh, Klass::_lh_array_tag_vt_value_bit_inplace);\n+    __ tst(lh, Klass::_lh_array_tag_flat_value_bit_inplace);\n@@ -2116,1 +2116,1 @@\n-    __ tst(lh, Klass::_lh_null_free_bit_inplace);\n+    __ tst(lh, Klass::_lh_null_free_array_bit_inplace);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2000,1 +2000,1 @@\n-    __ testl(klass, Klass::_lh_array_tag_vt_value_bit_inplace);\n+    __ testl(klass, Klass::_lh_array_tag_flat_value_bit_inplace);\n@@ -2012,1 +2012,1 @@\n-      __ testl(klass, Klass::_lh_null_free_bit_inplace);\n+      __ testl(klass, Klass::_lh_null_free_array_bit_inplace);\n@@ -2036,1 +2036,1 @@\n-    __ testl(klass, Klass::_lh_null_free_bit_inplace);\n+    __ testl(klass, Klass::_lh_null_free_array_bit_inplace);\n@@ -3255,1 +3255,1 @@\n-      __ testl(tmp, Klass::_lh_null_free_bit_inplace);\n+      __ testl(tmp, Klass::_lh_null_free_array_bit_inplace);\n@@ -3257,1 +3257,1 @@\n-      __ testl(tmp, Klass::_lh_array_tag_vt_value_bit_inplace);\n+      __ testl(tmp, Klass::_lh_array_tag_flat_value_bit_inplace);\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2771,1 +2771,1 @@\n-  testl(temp_reg, InstanceKlass::misc_flags_is_empty_inline_type());\n+  testl(temp_reg, InstanceKlass::misc_flag_is_empty_inline_type());\n@@ -2859,1 +2859,1 @@\n-  testl(lh, Klass::_lh_array_tag_vt_value_bit_inplace);\n+  testl(lh, Klass::_lh_array_tag_flat_value_bit_inplace);\n@@ -2864,1 +2864,1 @@\n-  testl(lh, Klass::_lh_array_tag_vt_value_bit_inplace);\n+  testl(lh, Klass::_lh_array_tag_flat_value_bit_inplace);\n@@ -2869,1 +2869,1 @@\n-  testl(lh, Klass::_lh_null_free_bit_inplace);\n+  testl(lh, Klass::_lh_null_free_array_bit_inplace);\n@@ -2874,1 +2874,1 @@\n-  testl(lh, Klass::_lh_null_free_bit_inplace);\n+  testl(lh, Klass::_lh_null_free_array_bit_inplace);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3155,1 +3155,1 @@\n-    __ testl(rax_lh, Klass::_lh_array_tag_vt_value_bit_inplace);\n+    __ testl(rax_lh, Klass::_lh_array_tag_flat_value_bit_inplace);\n@@ -3159,1 +3159,1 @@\n-    __ testl(rax_lh, Klass::_lh_null_free_bit_inplace);\n+    __ testl(rax_lh, Klass::_lh_null_free_array_bit_inplace);\n@@ -3291,1 +3291,1 @@\n-        __ testl(rklass_tmp, Klass::_lh_null_free_bit_inplace);\n+        __ testl(rklass_tmp, Klass::_lh_null_free_array_bit_inplace);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -443,1 +443,1 @@\n-  arrayOop obj = oopFactory::new_flatArray(elem_klass, length, CHECK);\n+  arrayOop obj = oopFactory::new_valueArray(elem_klass, length, CHECK);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-        Klass* ak = InlineKlass::cast(klass->get_Klass())->null_free_inline_array_klass(THREAD);\n+        Klass* ak = InlineKlass::cast(klass->get_Klass())->value_array_klass(THREAD);\n","filename":"src\/hotspot\/share\/ci\/ciArrayKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1101,1 +1101,1 @@\n-          value = oopFactory::new_flatArray(kelem, length, CHECK_(true));\n+          value = oopFactory::new_valueArray(kelem, length, CHECK_(true));\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-        k = InlineKlass::cast(k)->null_free_inline_array_klass(ndims, CHECK_NULL);\n+        k = InlineKlass::cast(k)->value_array_klass(ndims, CHECK_NULL);\n@@ -864,1 +864,1 @@\n-        k = InlineKlass::cast(k)->null_free_inline_array_klass_or_null(ndims);\n+        k = InlineKlass::cast(k)->value_array_klass_or_null(ndims);\n@@ -1864,1 +1864,1 @@\n-        klass = InlineKlass::cast(klass)->null_free_inline_array_klass_or_null(ndims);\n+        klass = InlineKlass::cast(klass)->value_array_klass_or_null(ndims);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -425,1 +425,1 @@\n-    obj = oopFactory::new_flatArray(klass, size, CHECK);\n+    obj = oopFactory::new_valueArray(klass, size, CHECK);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-arrayOop oopFactory::new_flatArray(Klass* k, int length, TRAPS) {\n+arrayOop oopFactory::new_valueArray(Klass* k, int length, TRAPS) {\n@@ -133,1 +133,1 @@\n-  Klass* array_klass = klass->null_free_inline_array_klass(CHECK_NULL);\n+  Klass* array_klass = klass->value_array_klass(CHECK_NULL);\n","filename":"src\/hotspot\/share\/memory\/oopFactory.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-  static arrayOop        new_flatArray(Klass* klass, int length, TRAPS);\n+  static arrayOop        new_valueArray(Klass* klass, int length, TRAPS);\n","filename":"src\/hotspot\/share\/memory\/oopFactory.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-        ek = element_klass->null_free_inline_array_klass(CHECK_NULL);\n+        ek = element_klass->value_array_klass(CHECK_NULL);\n","filename":"src\/hotspot\/share\/oops\/flatArrayKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  *((address*)adr_null_free_inline_array_klasses()) = NULL;\n+  *((address*)adr_value_array_klasses()) = NULL;\n@@ -169,2 +169,2 @@\n-Klass* InlineKlass::null_free_inline_array_klass(int n, TRAPS) {\n-  if (Atomic::load_acquire(adr_null_free_inline_array_klasses()) == NULL) {\n+Klass* InlineKlass::value_array_klass(int n, TRAPS) {\n+  if (Atomic::load_acquire(adr_value_array_klasses()) == NULL) {\n@@ -178,1 +178,1 @@\n-      if (null_free_inline_array_klasses() == NULL) {\n+      if (value_array_klasses() == NULL) {\n@@ -187,1 +187,1 @@\n-        Atomic::release_store(adr_null_free_inline_array_klasses(), k);\n+        Atomic::release_store(adr_value_array_klasses(), k);\n@@ -191,1 +191,1 @@\n-  ArrayKlass* ak = null_free_inline_array_klasses();\n+  ArrayKlass* ak = value_array_klasses();\n@@ -195,1 +195,1 @@\n-Klass* InlineKlass::null_free_inline_array_klass_or_null(int n) {\n+Klass* InlineKlass::value_array_klass_or_null(int n) {\n@@ -197,1 +197,1 @@\n-  ArrayKlass* ak = Atomic::load_acquire(adr_null_free_inline_array_klasses());\n+  ArrayKlass* ak = Atomic::load_acquire(adr_value_array_klasses());\n@@ -205,2 +205,2 @@\n-Klass* InlineKlass::null_free_inline_array_klass(TRAPS) {\n-  return null_free_inline_array_klass(1, THREAD);\n+Klass* InlineKlass::value_array_klass(TRAPS) {\n+  return value_array_klass(1, THREAD);\n@@ -209,2 +209,2 @@\n-Klass* InlineKlass::null_free_inline_array_klass_or_null() {\n-  return null_free_inline_array_klass_or_null(1);\n+Klass* InlineKlass::value_array_klass_or_null() {\n+  return value_array_klass_or_null(1);\n@@ -215,2 +215,2 @@\n-  if (null_free_inline_array_klasses() != NULL) {\n-    null_free_inline_array_klasses()->array_klasses_do(f);\n+  if (value_array_klasses() != NULL) {\n+    value_array_klasses()->array_klasses_do(f);\n@@ -222,2 +222,2 @@\n-  if (null_free_inline_array_klasses() != NULL) {\n-    null_free_inline_array_klasses()->array_klasses_do(f, THREAD);\n+  if (value_array_klasses() != NULL) {\n+    value_array_klasses()->array_klasses_do(f, THREAD);\n@@ -524,1 +524,1 @@\n-  it->push((Klass**)adr_null_free_inline_array_klasses());\n+  it->push((Klass**)adr_value_array_klasses());\n@@ -536,2 +536,2 @@\n-  if (null_free_inline_array_klasses() != NULL) {\n-    null_free_inline_array_klasses()->remove_unshareable_info();\n+  if (value_array_klasses() != NULL) {\n+    value_array_klasses()->remove_unshareable_info();\n@@ -543,2 +543,2 @@\n-  if (null_free_inline_array_klasses() != NULL) {\n-    null_free_inline_array_klasses()->remove_java_mirror();\n+  if (value_array_klasses() != NULL) {\n+    value_array_klasses()->remove_java_mirror();\n@@ -550,2 +550,2 @@\n-  if (null_free_inline_array_klasses() != NULL) {\n-    null_free_inline_array_klasses()->restore_unshareable_info(ClassLoaderData::the_null_class_loader_data(), Handle(), CHECK);\n+  if (value_array_klasses() != NULL) {\n+    value_array_klasses()->restore_unshareable_info(ClassLoaderData::the_null_class_loader_data(), Handle(), CHECK);\n","filename":"src\/hotspot\/share\/oops\/inlineKlass.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-  ArrayKlass* volatile* adr_null_free_inline_array_klasses() const {\n+  ArrayKlass* volatile* adr_value_array_klasses() const {\n@@ -83,2 +83,2 @@\n-  ArrayKlass* null_free_inline_array_klasses() const {\n-    return *adr_null_free_inline_array_klasses();\n+  ArrayKlass* value_array_klasses() const {\n+    return *adr_value_array_klasses();\n@@ -193,2 +193,2 @@\n-  Klass* null_free_inline_array_klass(int n, TRAPS);\n-  Klass* null_free_inline_array_klass_or_null(int n);\n+  Klass* value_array_klass(int n, TRAPS);\n+  Klass* value_array_klass_or_null(int n);\n@@ -197,2 +197,2 @@\n-  Klass* null_free_inline_array_klass(TRAPS);\n-  Klass* null_free_inline_array_klass_or_null();\n+  Klass* value_array_klass(TRAPS);\n+  Klass* value_array_klass_or_null();\n","filename":"src\/hotspot\/share\/oops\/inlineKlass.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -686,1 +686,1 @@\n-  static u4 misc_flags_is_empty_inline_type() { return _misc_is_empty_inline_type; }\n+  static u4 misc_flag_is_empty_inline_type() { return _misc_is_empty_inline_type; }\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -384,2 +384,2 @@\n-  static const jint _lh_array_tag_vt_value_bit_inplace = (jint) (1 << _lh_array_tag_shift);\n-  static const jint _lh_null_free_bit_inplace = (jint) (_lh_null_free_mask << _lh_null_free_shift);\n+  static const jint _lh_array_tag_flat_value_bit_inplace = (jint) (1 << _lh_array_tag_shift);\n+  static const jint _lh_null_free_array_bit_inplace = (jint) (_lh_null_free_mask << _lh_null_free_shift);\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-            ek = InlineKlass::cast(element_klass)->null_free_inline_array_klass(CHECK_NULL);\n+            ek = InlineKlass::cast(element_klass)->value_array_klass(CHECK_NULL);\n@@ -208,1 +208,1 @@\n-      return oopFactory::new_flatArray(element_klass(), length, CHECK_NULL);\n+      return oopFactory::new_valueArray(element_klass(), length, CHECK_NULL);\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3768,1 +3768,1 @@\n-  return array_lh_test(klass, Klass::_lh_null_free_bit_inplace, 0, !null_free);\n+  return array_lh_test(klass, Klass::_lh_null_free_array_bit_inplace, 0, !null_free);\n@@ -4396,1 +4396,1 @@\n-    Node* bol = array_lh_test(klass_node, Klass::_lh_array_tag_vt_value_bit_inplace | Klass::_lh_null_free_bit_inplace, Klass::_lh_null_free_bit_inplace);\n+    Node* bol = array_lh_test(klass_node, Klass::_lh_array_tag_flat_value_bit_inplace | Klass::_lh_null_free_array_bit_inplace, Klass::_lh_null_free_array_bit_inplace);\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3693,1 +3693,1 @@\n-      layout_val = _gvn.transform(new AndINode(layout_val, intcon(Klass::_lh_array_tag_vt_value_bit_inplace)));\n+      layout_val = _gvn.transform(new AndINode(layout_val, intcon(Klass::_lh_array_tag_flat_value_bit_inplace)));\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2767,1 +2767,1 @@\n-    Node* masked = transform_later(new AndINode(lhs, intcon(Klass::_lh_array_tag_vt_value_bit_inplace)));\n+    Node* masked = transform_later(new AndINode(lhs, intcon(Klass::_lh_array_tag_flat_value_bit_inplace)));\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -303,1 +303,1 @@\n-  return generate_fair_guard(ctrl, array_lh_test(array, Klass::_lh_array_tag_vt_value_bit_inplace), region);\n+  return generate_fair_guard(ctrl, array_lh_test(array, Klass::_lh_array_tag_flat_value_bit_inplace), region);\n@@ -308,1 +308,1 @@\n-  return generate_fair_guard(ctrl, array_lh_test(array, Klass::_lh_null_free_bit_inplace), region);\n+  return generate_fair_guard(ctrl, array_lh_test(array, Klass::_lh_null_free_array_bit_inplace), region);\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -256,1 +256,1 @@\n-    result = oopFactory::new_flatArray(elem_type, len, THREAD);\n+    result = oopFactory::new_valueArray(elem_type, len, THREAD);\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -353,1 +353,1 @@\n-      return oopFactory::new_flatArray(k, length, THREAD);\n+      return oopFactory::new_valueArray(k, length, THREAD);\n@@ -398,1 +398,1 @@\n-    klass = InlineKlass::cast(klass)->null_free_inline_array_klass(dim, CHECK_NULL);\n+    klass = InlineKlass::cast(klass)->value_array_klass(dim, CHECK_NULL);\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}