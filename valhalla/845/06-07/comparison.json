{"files":[{"patch":"@@ -2560,11 +2560,1 @@\n-        \/\/ FIXME: Skipping pushing VectorBox across Phi\n-        \/\/ since they are special type of InlineTypeNode\n-        \/\/ carrying VBA as oop fields.\n-        \/\/ We have a seperate handling for pushing VectorBoxes\n-        \/\/ across PhiNodes in merge_through_phi.\n-        \/\/ In long run we should eliminate VectorBox which is\n-        \/\/ just a light weight wrapper of InlineTypeNode.\n-        \/\/ Only reason to keep VectorBox was to defer buffering\n-        \/\/ to a later stage and associate VBA which carry\n-        \/\/ JVM state to reinitialize GraphKit before buffering.\n-        if (n == NULL || n->Opcode() == Op_VectorBox) {\n+        if (n == NULL) {\n@@ -2584,1 +2574,11 @@\n-        if (n->is_InlineType() && (vk == NULL || vk == t->inline_klass())) {\n+        \/\/ FIXME: Skipping pushing VectorBox across Phi\n+        \/\/ since they are special type of InlineTypeNode\n+        \/\/ carrying VBA as oop fields.\n+        \/\/ We have a seperate handling for pushing VectorBoxes\n+        \/\/ across PhiNodes in merge_through_phi.\n+        \/\/ In long run we should eliminate VectorBox which is\n+        \/\/ just a light weight wrapper of InlineTypeNode.\n+        \/\/ Only reason to keep VectorBox was to defer buffering\n+        \/\/ to a later stage and associate VBA which carry\n+        \/\/ JVM state to reinitialize GraphKit before buffering.\n+        if (n->is_InlineType() && !n->is_VectorBox() && (vk == NULL || vk == t->inline_klass())) {\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -154,0 +154,1 @@\n+  assert(this->Opcode() == other->Opcode(), \"\");\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}