{"files":[{"patch":"@@ -73,1 +73,1 @@\n-    AbstractMask<E> uOp(MUnOp f) {\n+    AbstractMask<E> uOpMF(MUnOp f) {\n@@ -93,1 +93,1 @@\n-    AbstractMask<E> bOp(AbstractMask<E> m, MBinOp f) {\n+    AbstractMask<E> bOpMF(AbstractMask<E> m, MBinOp f) {\n@@ -111,1 +111,1 @@\n-    void stOp(boolean[] arr, int idx) {\n+    void stOpMF(boolean[] arr, int idx) {\n@@ -164,1 +164,1 @@\n-            (c, idx, s) -> s.stOp(c, (int) idx));\n+            (c, idx, s) -> s.stOpMF(c, (int) idx));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractMask.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -659,1 +659,1 @@\n-                                          (m1, m2, vm) -> (Byte128Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Byte128Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -669,1 +669,1 @@\n-                                          (m1, m2, vm) -> (Byte128Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Byte128Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -679,1 +679,1 @@\n-                                          (m1, m2, vm) -> (Byte128Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Byte128Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -691,1 +691,1 @@\n-                                          (m1, m2, vm) -> (Byte256Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Byte256Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -701,1 +701,1 @@\n-                                          (m1, m2, vm) -> (Byte256Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Byte256Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -711,1 +711,1 @@\n-                                          (m1, m2, vm) -> (Byte256Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Byte256Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -755,1 +755,1 @@\n-                                          (m1, m2, vm) -> (Byte512Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Byte512Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -765,1 +765,1 @@\n-                                          (m1, m2, vm) -> (Byte512Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Byte512Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -775,1 +775,1 @@\n-                                          (m1, m2, vm) -> (Byte512Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Byte512Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -643,1 +643,1 @@\n-                                          (m1, m2, vm) -> (Byte64Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Byte64Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -653,1 +653,1 @@\n-                                          (m1, m2, vm) -> (Byte64Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Byte64Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -663,1 +663,1 @@\n-                                          (m1, m2, vm) -> (Byte64Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Byte64Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -620,1 +620,1 @@\n-                                          (m1, m2, vm) -> (Double128Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Double128Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -630,1 +630,1 @@\n-                                          (m1, m2, vm) -> (Double128Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Double128Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -640,1 +640,1 @@\n-                                          (m1, m2, vm) -> (Double128Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Double128Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -624,1 +624,1 @@\n-                                          (m1, m2, vm) -> (Double256Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Double256Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -634,1 +634,1 @@\n-                                          (m1, m2, vm) -> (Double256Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Double256Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -644,1 +644,1 @@\n-                                          (m1, m2, vm) -> (Double256Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Double256Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -632,1 +632,1 @@\n-                                          (m1, m2, vm) -> (Double512Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Double512Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -642,1 +642,1 @@\n-                                          (m1, m2, vm) -> (Double512Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Double512Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -652,1 +652,1 @@\n-                                          (m1, m2, vm) -> (Double512Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Double512Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -618,1 +618,1 @@\n-                                          (m1, m2, vm) -> (Double64Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Double64Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -628,1 +628,1 @@\n-                                          (m1, m2, vm) -> (Double64Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Double64Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -638,1 +638,1 @@\n-                                          (m1, m2, vm) -> (Double64Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Double64Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -624,1 +624,1 @@\n-                                          (m1, m2, vm) -> (Float128Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Float128Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -634,1 +634,1 @@\n-                                          (m1, m2, vm) -> (Float128Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Float128Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -644,1 +644,1 @@\n-                                          (m1, m2, vm) -> (Float128Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Float128Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -632,1 +632,1 @@\n-                                          (m1, m2, vm) -> (Float256Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Float256Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -642,1 +642,1 @@\n-                                          (m1, m2, vm) -> (Float256Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Float256Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -652,1 +652,1 @@\n-                                          (m1, m2, vm) -> (Float256Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Float256Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -648,1 +648,1 @@\n-                                          (m1, m2, vm) -> (Float512Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Float512Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -658,1 +658,1 @@\n-                                          (m1, m2, vm) -> (Float512Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Float512Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -668,1 +668,1 @@\n-                                          (m1, m2, vm) -> (Float512Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Float512Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -620,1 +620,1 @@\n-                                          (m1, m2, vm) -> (Float64Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Float64Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -630,1 +630,1 @@\n-                                          (m1, m2, vm) -> (Float64Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Float64Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -640,1 +640,1 @@\n-                                          (m1, m2, vm) -> (Float64Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Float64Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -635,1 +635,1 @@\n-                                          (m1, m2, vm) -> (Int128Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Int128Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -645,1 +645,1 @@\n-                                          (m1, m2, vm) -> (Int128Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Int128Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -655,1 +655,1 @@\n-                                          (m1, m2, vm) -> (Int128Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Int128Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -643,1 +643,1 @@\n-                                          (m1, m2, vm) -> (Int256Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Int256Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -653,1 +653,1 @@\n-                                          (m1, m2, vm) -> (Int256Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Int256Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -663,1 +663,1 @@\n-                                          (m1, m2, vm) -> (Int256Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Int256Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -659,1 +659,1 @@\n-                                          (m1, m2, vm) -> (Int512Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Int512Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -669,1 +669,1 @@\n-                                          (m1, m2, vm) -> (Int512Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Int512Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -679,1 +679,1 @@\n-                                          (m1, m2, vm) -> (Int512Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Int512Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -631,1 +631,1 @@\n-                                          (m1, m2, vm) -> (Int64Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Int64Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -641,1 +641,1 @@\n-                                          (m1, m2, vm) -> (Int64Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Int64Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -651,1 +651,1 @@\n-                                          (m1, m2, vm) -> (Int64Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Int64Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -621,1 +621,1 @@\n-                                          (m1, m2, vm) -> (Long128Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Long128Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -631,1 +631,1 @@\n-                                          (m1, m2, vm) -> (Long128Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Long128Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -641,1 +641,1 @@\n-                                          (m1, m2, vm) -> (Long128Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Long128Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-                                          (m1, m2, vm) -> (Long256Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Long256Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -635,1 +635,1 @@\n-                                          (m1, m2, vm) -> (Long256Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Long256Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -645,1 +645,1 @@\n-                                          (m1, m2, vm) -> (Long256Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Long256Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -633,1 +633,1 @@\n-                                          (m1, m2, vm) -> (Long512Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Long512Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -643,1 +643,1 @@\n-                                          (m1, m2, vm) -> (Long512Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Long512Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -653,1 +653,1 @@\n-                                          (m1, m2, vm) -> (Long512Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Long512Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -619,1 +619,1 @@\n-                                          (m1, m2, vm) -> (Long64Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Long64Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -629,1 +629,1 @@\n-                                          (m1, m2, vm) -> (Long64Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Long64Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -639,1 +639,1 @@\n-                                          (m1, m2, vm) -> (Long64Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Long64Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -643,1 +643,1 @@\n-                                          (m1, m2, vm) -> (Short128Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Short128Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -653,1 +653,1 @@\n-                                          (m1, m2, vm) -> (Short128Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Short128Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -663,1 +663,1 @@\n-                                          (m1, m2, vm) -> (Short128Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Short128Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -659,1 +659,1 @@\n-                                          (m1, m2, vm) -> (Short256Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Short256Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -669,1 +669,1 @@\n-                                          (m1, m2, vm) -> (Short256Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Short256Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -679,1 +679,1 @@\n-                                          (m1, m2, vm) -> (Short256Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Short256Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -691,1 +691,1 @@\n-                                          (m1, m2, vm) -> (Short512Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Short512Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -701,1 +701,1 @@\n-                                          (m1, m2, vm) -> (Short512Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Short512Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -711,1 +711,1 @@\n-                                          (m1, m2, vm) -> (Short512Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Short512Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -635,1 +635,1 @@\n-                                          (m1, m2, vm) -> (Short64Mask) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> (Short64Mask) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -645,1 +645,1 @@\n-                                          (m1, m2, vm) -> (Short64Mask) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> (Short64Mask) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -655,1 +655,1 @@\n-                                          (m1, m2, vm) -> (Short64Mask) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> (Short64Mask) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -906,1 +906,1 @@\n-                                          (m1, m2, vm) -> ($masktype$) m1.bOp(m2, (i, a, b) -> a & b));\n+                                          (m1, m2, vm) -> ($masktype$) m1.bOpMF(m2, (i, a, b) -> a & b));\n@@ -916,1 +916,1 @@\n-                                          (m1, m2, vm) -> ($masktype$) m1.bOp(m2, (i, a, b) -> a | b));\n+                                          (m1, m2, vm) -> ($masktype$) m1.bOpMF(m2, (i, a, b) -> a | b));\n@@ -926,1 +926,1 @@\n-                                          (m1, m2, vm) -> ($masktype$) m1.bOp(m2, (i, a, b) -> a ^ b));\n+                                          (m1, m2, vm) -> ($masktype$) m1.bOpMF(m2, (i, a, b) -> a ^ b));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}