{"files":[{"patch":"@@ -51,1 +51,1 @@\n-                       bcEscapeAnalyzer.cpp ciTypeFlow.cpp\n+                       bcEscapeAnalyzer.cpp ciTypeFlow.cpp macroAssembler_common.cpp\n","filename":"make\/hotspot\/lib\/JvmFeatures.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,7 +57,23 @@\n-AdapterHandlerEntry* SharedRuntime::generate_i2c2i_adapters(\n-                        MacroAssembler *masm,\n-                        int total_args_passed,\n-                        int comp_args_on_stack,\n-                        const BasicType *sig_bt,\n-                        const VMRegPair *regs,\n-                        AdapterFingerPrint *fingerprint) {\n+int SharedRuntime::java_return_convention(const BasicType *sig_bt,\n+                                           VMRegPair *regs,\n+                                           int total_args_passed) {\n+  Unimplemented();\n+  return 0;\n+}\n+\n+BufferedInlineTypeBlob* SharedRuntime::generate_buffered_inline_type_adapter(const InlineKlass* vk) {\n+  Unimplemented();\n+  return NULL;\n+}\n+\n+AdapterHandlerEntry* SharedRuntime::generate_i2c2i_adapters(MacroAssembler *masm,\n+                                                            int comp_args_on_stack,\n+                                                            const GrowableArray <SigEntry> *sig,\n+                                                            const VMRegPair *regs,\n+                                                            const GrowableArray <SigEntry> *sig_cc,\n+                                                            const VMRegPair *regs_cc,\n+                                                            const GrowableArray <SigEntry> *sig_cc_ro,\n+                                                            const VMRegPair *regs_cc_ro,\n+                                                            AdapterFingerPrint *fingerprint,\n+                                                            AdapterBlob *&new_adapter) {\n+  new_adapter = AdapterBlob::create(masm->code(), 0, 0, NULL);\n@@ -68,0 +84,4 @@\n+    CAST_FROM_FN_PTR(address,zero_null_code_stub),\n+    CAST_FROM_FN_PTR(address,zero_null_code_stub),\n+    CAST_FROM_FN_PTR(address,zero_null_code_stub),\n+    CAST_FROM_FN_PTR(address,zero_null_code_stub),\n","filename":"src\/hotspot\/cpu\/zero\/sharedRuntime_zero.cpp","additions":27,"deletions":7,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-VtableStub* VtableStubs::create_vtable_stub(int vtable_index) {\n+VtableStub* VtableStubs::create_vtable_stub(int vtable_index, bool caller_is_c1) {\n@@ -35,1 +35,1 @@\n-VtableStub* VtableStubs::create_itable_stub(int vtable_index) {\n+VtableStub* VtableStubs::create_itable_stub(int vtable_index, bool caller_is_c1) {\n","filename":"src\/hotspot\/cpu\/zero\/vtableStubs_zero.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}