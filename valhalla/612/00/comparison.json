{"files":[{"patch":"@@ -1740,1 +1740,1 @@\n-            if (isSubtype(erasure(ts.type), erasure(ss.type))) {\n+            if (isSubtype(erasure(ts.type.referenceProjectionOrSelf()), erasure(ss.type))) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,18 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8279655\n+ * @summary Bogus error: incompatible types: Object cannot be converted to Foo\n+ * @compile T8279655.java\n+ *\/\n+\n+public class T8279655 {\n+\n+    sealed interface Foo permits Bar { }\n+    primitive class Bar implements Foo { }\n+\n+    class Test {\n+        void test(Object o) {\n+            Foo foo = (Foo)o;\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/valhalla\/lworld-values\/T8279655.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"}]}