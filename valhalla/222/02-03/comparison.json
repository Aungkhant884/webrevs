{"files":[{"patch":"@@ -36,1 +36,1 @@\n-Value-based classes:\n+A value-based class has the following properties:\n@@ -38,1 +38,1 @@\n-    <li>declare only final instance fields (though these may contain references\n+    <li>the class declares only final instance fields (though these may contain references\n@@ -40,1 +40,1 @@\n-    <li>declare implementations of <code>equals<\/code>,\n+    <li>the class declares implementations of <code>equals<\/code>,\n@@ -43,8 +43,8 @@\n-        the objects they reference), not from the instance's identity<\/li>\n-    <li>have instances that are <em>freely substitutable<\/em> when equal, meaning\n-        that interchanging any two instances <code>x<\/code> and <code>y<\/code> that\n-        are equal according to <code>equals()<\/code> produces no visible change in\n-        the behavior of the class's methods;<\/li>\n-    <li>perform no synchronization using an instance's monitor;<\/li>\n-    <li>do not have (or have deprecated any) accessible constructors;<\/li>\n-    <li>do not provide any other instance creation mechanism that promises\n+        the objects they reference), not from the instance's identity;<\/li>\n+    <li>the class's methods treat instances as <em>freely substitutable<\/em>\n+        when equal, meaning that interchanging any two instances <code>x<\/code> and\n+        <code>y<\/code> that are equal according to <code>equals()<\/code> produces no\n+        visible change in the behavior of the class's methods;<\/li>\n+    <li>the class performs no synchronization using an instance's monitor;<\/li>\n+    <li>the class does not declare (or has deprecated any) accessible constructors;<\/li>\n+    <li>the class does not provide any other instance creation mechanism that promises\n@@ -55,4 +55,3 @@\n-    <li>are final;<\/li>\n-    <li>extend either <code>Object<\/code> or a hierarchy of abstract classes that\n-        declare no instance fields or instance initializers and whose constructors\n-        are empty.<\/li>\n+    <li>the class is final, and extends either <code>Object<\/code> or a hierarchy of\n+        abstract classes that declare no instance fields or instance initializers\n+        and whose constructors are empty.<\/li>\n@@ -62,2 +61,2 @@\n-<p>When two instances of a value-based class are `equal`, a program should not attempt\n-    to distinguish between their identities, whether directly via reference\n+<p>When two instances of a value-based class are equal (according to `equals`), a program\n+    should not attempt to distinguish between their identities, whether directly via reference\n","filename":"src\/java.base\/share\/classes\/java\/lang\/doc-files\/ValueBased.html","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"}]}