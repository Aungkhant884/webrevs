{"files":[{"patch":"@@ -69,0 +69,1 @@\n+#ifdef _LP64\n@@ -71,0 +72,3 @@\n+#else\n+  set_prototype_header(markWord::inline_type_prototype());\n+#endif\n","filename":"src\/hotspot\/share\/oops\/flatArrayKlass.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -475,0 +475,10 @@\n+#else\n+  bool is_flat_array() const {\n+    fatal(\"Should not ask this for mark word, ask oopDesc\");\n+    return false;\n+  }\n+\n+  bool is_null_free_array() const {\n+    fatal(\"Should not ask this for mark word, ask oopDesc\");\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/oops\/markWord.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -74,4 +74,7 @@\n-         (UseBiasedLocking && prototype_header.has_bias_pattern()) ||\n-         prototype_header.is_inline_type() ||\n-         prototype_header.is_flat_array() ||\n-         prototype_header.is_null_free_array(), \"corrupt prototype header\");\n+         (UseBiasedLocking && prototype_header.has_bias_pattern())\n+         || prototype_header.is_inline_type()\n+#ifdef _LP64\n+         || prototype_header.is_flat_array()\n+         || prototype_header.is_null_free_array()\n+#endif\n+         , \"corrupt prototype header\");\n","filename":"src\/hotspot\/share\/oops\/markWord.inline.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -165,0 +165,1 @@\n+#ifdef _LP64\n@@ -167,0 +168,3 @@\n+#else\n+    set_prototype_header(markWord::inline_type_prototype());\n+#endif\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n-#if _LP64\n+#ifdef _LP64\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-        log_trace(valuetypes)(\"not a field in %s at offset \" SIZE_FORMAT_HEX,\n+        log_trace(valuetypes)(\"not a field in %s at offset \" JLONG_FORMAT_X,\n@@ -319,1 +319,1 @@\n-      log_trace(valuetypes)(\"%s array type %s index %d element size %d offset \" SIZE_FORMAT_HEX \" at \" INTPTR_FORMAT,\n+      log_trace(valuetypes)(\"%s array type %s index %d element size %d offset \" JLONG_FORMAT_X \" at \" INTPTR_FORMAT,\n@@ -323,1 +323,1 @@\n-      log_trace(valuetypes)(\"%s field type %s at offset \" SIZE_FORMAT_HEX,\n+      log_trace(valuetypes)(\"%s field type %s at offset \" JLONG_FORMAT_X,\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -107,0 +107,1 @@\n+#define INT64_FORMAT_X         \"%\" PRIx64\n@@ -121,0 +122,3 @@\n+#ifndef JLONG_FORMAT_X\n+#define JLONG_FORMAT_X         INT64_FORMAT_X\n+#endif\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}