{"files":[{"patch":"@@ -40,1 +40,1 @@\n-public interface DefaultExpressionTree extends ExpressionTree {\n+public interface DefaultValueTree extends ExpressionTree {\n@@ -46,1 +46,1 @@\n-    ExpressionTree getClazz();\n+    ExpressionTree getType();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/DefaultValueTree.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/DefaultExpressionTree.java","status":"renamed"},{"patch":"@@ -257,1 +257,1 @@\n-         * Used for instances of {@link DefaultExpressionTree}.\n+         * Used for instances of {@link DefaultValueTree}.\n@@ -261,1 +261,1 @@\n-        DEFAULT_EXPRESSION(DefaultExpressionTree.class),\n+        DEFAULT_VALUE(DefaultValueTree.class),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/Tree.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-     * Visits a DefaultExpression node.\n+     * Visits a DefaultValue node.\n@@ -178,1 +178,1 @@\n-    R visitDefaultExpression(DefaultExpressionTree node, P p);\n+    R visitDefaultValue(DefaultValueTree node, P p);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/TreeVisitor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -310,1 +310,1 @@\n-    public R visitDefaultExpression(DefaultExpressionTree node, P p) {\n+    public R visitDefaultValue(DefaultValueTree node, P p) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/util\/SimpleTreeVisitor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -396,3 +396,2 @@\n-    public R visitDefaultExpression(DefaultExpressionTree node, P p) {\n-        R r = scan(node.getClazz(), p);\n-        return r;\n+    public R visitDefaultValue(DefaultValueTree node, P p) {\n+        return scan(node.getType(), p);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/util\/TreeScanner.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4464,1 +4464,1 @@\n-                \/\/ .class and .default is allowed for these.\n+                \/\/ .class is allowed for these.\n@@ -4884,1 +4884,1 @@\n-    public void visitDefaultExpression(JCDefaultExpression tree) {\n+    public void visitDefaultValue(JCDefaultValue tree) {\n@@ -4895,1 +4895,0 @@\n-        Symbol sitesym = TreeInfo.symbol(tree.clazz);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import com.sun.tools.javac.tree.JCTree.JCSwitchExpression;\n@@ -368,0 +367,7 @@\n+        @Override\n+        public void visitDefaultValue(JCDefaultValue tree) {\n+            SourceRange sr = new SourceRange(startPos(tree), endPos(tree));\n+            sr.mergeWith(csp(tree.clazz));\n+            result = sr;\n+        }\n+        \n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/CRTable.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2407,1 +2407,1 @@\n-    public void visitDefaultExpression(JCDefaultExpression tree) {\n+    public void visitDefaultValue(JCDefaultValue tree) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-                    rhs = make.DefaultExpression(type);\n+                    rhs = make.DefaultValue(type);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/TransValues.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1360,1 +1360,1 @@\n-                                t = to(F.at(pos).DefaultExpression(t));\n+                                t = to(F.at(pos).DefaultValue(t));\n@@ -1437,1 +1437,1 @@\n-                                    t =  toP(F.at(token.pos).DefaultExpression(t));\n+                                    t =  toP(F.at(token.pos).DefaultValue(t));\n@@ -2283,1 +2283,1 @@\n-                    t = toP(F.at(pos).DefaultExpression(t));\n+                    t = toP(F.at(pos).DefaultValue(t));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -256,1 +256,1 @@\n-        \/** Default expressions, of type DefaultExpressionTree.\n+        \/** Default values, of type DefaultValueTree.\n@@ -258,1 +258,1 @@\n-        DEFAULT_EXPRESSION,\n+        DEFAULT_VALUE,\n@@ -1368,1 +1368,1 @@\n-    public static class JCDefaultExpression extends JCPolyExpression implements DefaultExpressionTree {\n+    public static class JCDefaultValue extends JCPolyExpression implements DefaultValueTree {\n@@ -1371,1 +1371,1 @@\n-        protected JCDefaultExpression(JCExpression clazz) {\n+        protected JCDefaultValue(JCExpression clazz) {\n@@ -1375,1 +1375,1 @@\n-        public void accept(Visitor v) { v.visitDefaultExpression(this); }\n+        public void accept(Visitor v) { v.visitDefaultValue(this); }\n@@ -1378,1 +1378,1 @@\n-        public Kind getKind() { return Kind.DEFAULT_EXPRESSION; }\n+        public Kind getKind() { return Kind.DEFAULT_VALUE; }\n@@ -1380,1 +1380,1 @@\n-        public ExpressionTree getClazz() { return clazz; }\n+        public JCExpression getType() { return clazz; }\n@@ -1383,1 +1383,1 @@\n-            return v.visitDefaultExpression(this, d);\n+            return v.visitDefaultValue(this, d);\n@@ -1387,1 +1387,1 @@\n-            return DEFAULT_EXPRESSION;\n+            return DEFAULT_VALUE;\n@@ -3242,1 +3242,1 @@\n-        JCDefaultExpression DefaultExpression(JCExpression type);\n+        JCDefaultValue DefaultValue(JCExpression type);\n@@ -3321,1 +3321,1 @@\n-        public void visitDefaultExpression(JCDefaultExpression that) { visitTree(that); }\n+        public void visitDefaultValue(JCDefaultValue that) { visitTree(that); }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -746,1 +746,1 @@\n-    public void visitDefaultExpression(JCDefaultExpression tree) {\n+    public void visitDefaultValue(JCDefaultValue tree) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/Pretty.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -202,2 +202,2 @@\n-    public JCTree visitDefaultExpression(DefaultExpressionTree node, P p) {\n-        JCDefaultExpression t = (JCDefaultExpression) node;\n+    public JCTree visitDefaultValue(DefaultValueTree node, P p) {\n+        JCDefaultValue t = (JCDefaultValue) node;\n@@ -205,1 +205,1 @@\n-        return M.at(t.pos).DefaultExpression(clazz);\n+        return M.at(t.pos).DefaultValue(clazz);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeCopier.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -490,2 +490,2 @@\n-            case DEFAULT_EXPRESSION:\n-                return getStartPos(((JCDefaultExpression) tree).clazz);\n+            case DEFAULT_VALUE:\n+                return getStartPos(((JCDefaultValue) tree).clazz);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -301,2 +301,2 @@\n-    public JCDefaultExpression DefaultExpression(JCExpression type) {\n-        JCDefaultExpression tree = new JCDefaultExpression(type);\n+    public JCDefaultValue DefaultValue(JCExpression type) {\n+        JCDefaultValue tree = new JCDefaultValue(type);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeMaker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-    public void visitDefaultExpression(JCDefaultExpression tree) {\n+    public void visitDefaultValue(JCDefaultValue tree) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeScanner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -383,1 +383,1 @@\n-    public void visitDefaultExpression(JCDefaultExpression tree) {\n+    public void visitDefaultValue(JCDefaultValue tree) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeTranslator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}