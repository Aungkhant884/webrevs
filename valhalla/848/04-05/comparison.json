{"files":[{"patch":"@@ -3147,0 +3147,16 @@\n+void Assembler::vmovw(XMMRegister dst, Register src) {\n+  assert(VM_Version::supports_avx512_fp16(), \"requires AVX512-FP16\");\n+  InstructionAttr attributes(AVX_128bit, false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  attributes.set_is_evex_instruction();\n+  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_66, VEX_OPCODE_MAP5, &attributes);\n+  emit_int16(0x6E, (0xC0 | encode));\n+}\n+\n+void Assembler::vmovw(Register dst, XMMRegister src) {\n+  assert(VM_Version::supports_avx512_fp16(), \"requires AVX512-FP16\");\n+  InstructionAttr attributes(AVX_128bit, false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  attributes.set_is_evex_instruction();\n+  int encode = vex_prefix_and_encode(src->encoding(), 0, dst->encoding(), VEX_SIMD_66, VEX_OPCODE_MAP5, &attributes);\n+  emit_int16(0x7E, (0xC0 | encode));\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1653,0 +1653,3 @@\n+  void vmovw(XMMRegister dst, Register src);\n+  void vmovw(Register dst, XMMRegister src);\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1455,0 +1455,2 @@\n+    case Op_ReinterpretS2HF:\n+    case Op_ReinterpretHF2S:\n@@ -10157,1 +10159,1 @@\n-instruct reinterpretS2H (regF dst, rRegI src, rRegI tmp)\n+instruct reinterpretS2H (regF dst, rRegI src)\n@@ -10160,2 +10162,1 @@\n-  effect(TEMP tmp);\n-  format %{ \"movdl $dst, $src\\t! using $tmp as TEMP\" %}\n+  format %{ \"vmovw $dst, $src\" %}\n@@ -10163,3 +10164,1 @@\n-    __ movl($tmp$$Register, $src$$Register);\n-    __ andl($tmp$$Register, 0xFFFF);\n-    __ movdl($dst$$XMMRegister, $tmp$$Register);\n+    __ vmovw($dst$$XMMRegister, $src$$Register);\n@@ -10173,1 +10172,1 @@\n-  format %{ \"movdl $dst, $src\" %}\n+  format %{ \"vmovw $dst, $src\" %}\n@@ -10175,1 +10174,1 @@\n-    __ movdl($dst$$Register, $src$$XMMRegister);\n+    __ vmovw($dst$$Register, $src$$XMMRegister);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -4702,1 +4702,1 @@\n-    return true;\n+    return (EnablePrimitiveClasses = true);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4900,0 +4900,5 @@\n+  if (!Matcher::match_rule_supported(Op_ReinterpretS2HF) ||\n+      !Matcher::match_rule_supported(Op_ReinterpretHF2S)) {\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}