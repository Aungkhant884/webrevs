{"files":[{"patch":"@@ -215,2 +215,2 @@\n-     * @param message detail message to be used in the event that a {@code\n-     *                IdentityException} is thrown\n+     * @param message detail message to be used in the event that an\n+     *        {@code IdentityException} is thrown\n@@ -231,0 +231,21 @@\n+    \/**\n+     * Checks that the specified object reference is an identity object.\n+     *\n+     * @param obj the object reference to check for identity\n+     * @param messageSupplier supplier of the detail message to be\n+     *        used in the event that an {@code IdentityException} is thrown\n+     * @param <T> the type of the reference\n+     * @return {@code obj} if {@code obj} is an identity object\n+     * @throws NullPointerException if {@code obj} is {@code null}\n+     * @throws IdentityException if {@code obj} is not an identity object\n+     * @since Valhalla\n+     *\/\n+    @ForceInline\n+    public static <T> T requireIdentity(T obj, Supplier<String> messageSupplier) {\n+        Objects.requireNonNull(obj);\n+        if (obj.getClass().isValue())\n+            throw new IdentityException(messageSupplier == null ?\n+                    null : messageSupplier.get());\n+        return obj;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/Objects.java","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/valhalla\/valuetypes\/WeakReferenceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}