{"files":[{"patch":"@@ -436,0 +436,6 @@\n+        BasicType bt = con_type->basic_type();\n+        int vec_len = field->secondary_fields_count();\n+        if (field->is_multifield_base() &&\n+          Matcher::match_rule_supported_vector(VectorNode::replicate_opcode(bt), vec_len, bt)) {\n+          value = kit->gvn().transform(VectorNode::scalar2vector(value, vec_len, Type::get_const_type(field->type()), false));\n+        }\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1642,0 +1642,5 @@\n+  if (n->is_InlineType() &&\n+      !n->is_VectorBox() &&\n+      VectorSupport::is_vector(n->as_InlineType()->inline_klass())) {\n+    n = n->as_InlineType()->get_oop();\n+  }\n@@ -1691,0 +1696,5 @@\n+  if (n->is_InlineType() &&\n+      !n->is_VectorBox() &&\n+      VectorSupport::is_vector(n->as_InlineType()->inline_klass())) {\n+    n = n->as_InlineType()->get_oop();\n+  }\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}