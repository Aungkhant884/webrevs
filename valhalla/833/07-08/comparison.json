{"files":[{"patch":"@@ -220,0 +220,4 @@\n+  ciField* secondary_field_at(int i) {\n+    assert(_secondary_fields->length() > i, \"\");\n+    return _secondary_fields->at(i);\n+  }\n","filename":"src\/hotspot\/share\/ci\/ciField.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,2 @@\n-    int field_offset = _declared_nonstatic_fields->at(i)->offset();\n+    ciField* field = _declared_nonstatic_fields->at(i);\n+    int field_offset = field->offset();\n@@ -62,0 +63,12 @@\n+    } else if (field->is_multifield_base()) {\n+      for (int j = 0; j < field->secondary_fields_count(); j++) {\n+        ciField* sec_field = static_cast<ciMultiField*>(field)->secondary_field_at(j);\n+        assert(sec_field != NULL, \"\");\n+        int sec_field_offset = sec_field->offset();\n+        if (sec_field_offset == offset) {\n+          return i + j + 1;\n+        } else if (sec_field_offset < offset && sec_field_offset > best_offset) {\n+          best_offset = sec_field_offset;\n+          best_index = i + j + 1;\n+        }\n+      }\n","filename":"src\/hotspot\/share\/ci\/ciInlineKlass.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -74,7 +74,9 @@\n-    if (i < _declared_nonstatic_fields->length()) {\n-      return _declared_nonstatic_fields->at(i);\n-    } else {\n-      \/\/ Look for field in preceding multi-field bundle;\n-      for (uint j = 0; j < (uint)i; j++) {\n-        int bundle_size = _declared_nonstatic_fields->at(j)->secondary_fields_count();\n-        if ((j + bundle_size) > (uint)i) {\n+    \/\/ Look for field in preceding multi-field bundle;\n+    for (int j = 0; j <= i; j++) {\n+      int bundle_size = _declared_nonstatic_fields->at(j)->secondary_fields_count();\n+      if (bundle_size > 1 && ((j + bundle_size) > i)) {\n+        if (j == i) {\n+          \/\/ Multifield base.\n+          return _declared_nonstatic_fields->at(i);\n+        } else {\n+          \/\/ Secondary multifield.\n@@ -83,0 +85,2 @@\n+      } else if (j == i) {\n+        return _declared_nonstatic_fields->at(i);\n","filename":"src\/hotspot\/share\/ci\/ciInlineKlass.hpp","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -422,2 +422,2 @@\n-      int field_off = field->offset_in_bytes();\n-      if (field_off == field_offset)\n+      int curr_field_offset = field->offset_in_bytes();\n+      if (curr_field_offset == field_offset)\n@@ -425,1 +425,1 @@\n-      if (field_off > field_offset)\n+      if (curr_field_offset > field_offset)\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -769,1 +769,1 @@\n-  if (vec_len > 1 &&\n+  if (is_java_primitive(bt) &&\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"oops\/fieldStreams.inline.hpp\"\n@@ -202,1 +203,1 @@\n-    Klass* def = payload_kls->find_field(vmSymbols::mfield_name(), vmSymbols::type_signature(T_BYTE), false, &fd);\n+    Klass* def = payload_kls->find_field(vmSymbols::mfield_name(), vmSymbols::type_signature(elem_bt), false, &fd);\n@@ -345,1 +346,1 @@\n-      return allocate_vector_payload_helper(ik, num_elem, T_BYTE, fr, reg_map, location, THREAD); \/\/ safepoint\n+      return allocate_vector_payload_helper(ik, num_elem, elem_bt, fr, reg_map, location, THREAD); \/\/ safepoint\n@@ -369,0 +370,2 @@\n+  int num_elem = 0;\n+  BasicType elem_bt = T_ILLEGAL;\n@@ -370,2 +373,10 @@\n-  int num_elem = InlineKlass::cast(ik)->get_exact_size_in_bytes();\n-  Handle payload_instance = VectorSupport::allocate_vector_payload(ik, num_elem, T_BYTE, fr, reg_map, payload_value, CHECK_NULL);\n+  for (JavaFieldStream fs(ik); !fs.done(); fs.next()) {\n+    fieldDescriptor& fd = fs.field_descriptor();\n+    if (fd.is_multifield_base()) {\n+      elem_bt = fd.field_type();\n+      num_elem = fd.secondary_fields_count(fd.index());\n+      break;\n+    }\n+  }\n+  assert(num_elem != 0, \"\");\n+  Handle payload_instance = VectorSupport::allocate_vector_payload(ik, num_elem, elem_bt, fr, reg_map, payload_value, CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.cpp","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-        AbstractVector<?> other = ((AbstractSpecies<?>)species).dummyVector();\n+        AbstractVector<?> other = ((AbstractSpecies<?>)species).dummyVectorMF();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3115,1 +3115,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -3119,1 +3119,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3234,1 +3234,1 @@\n-        return vsp.dummyVector().fromBooleanArray0(a, offset);\n+        return vsp.dummyVectorMF().fromBooleanArray0(a, offset);\n@@ -3271,1 +3271,1 @@\n-            return vsp.dummyVector().fromBooleanArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromBooleanArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -3275,1 +3275,1 @@\n-        return vsp.dummyVector().fromBooleanArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromBooleanArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3404,1 +3404,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset).maybeSwap(bo);\n@@ -3457,1 +3457,1 @@\n-            return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n+            return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n@@ -3461,1 +3461,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n@@ -4301,1 +4301,1 @@\n-            return dummyVector().fromArray0(va, 0);\n+            return dummyVectorMF().fromArray0(va, 0);\n@@ -4314,6 +4314,0 @@\n-        @ForceInline\n-        @Override final\n-        ByteVector dummyVector() {\n-            return (ByteVector) super.dummyVector();\n-        }\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2905,1 +2905,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -2909,1 +2909,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3037,1 +3037,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, indexMap, mapOffset, m);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, indexMap, mapOffset, m);\n@@ -3081,1 +3081,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset).maybeSwap(bo);\n@@ -3139,1 +3139,1 @@\n-            return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n+            return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n@@ -3143,1 +3143,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n@@ -3905,1 +3905,1 @@\n-            return dummyVector().fromArray0(va, 0);\n+            return dummyVectorMF().fromArray0(va, 0);\n@@ -3918,6 +3918,0 @@\n-        @ForceInline\n-        @Override final\n-        DoubleVector dummyVector() {\n-            return (DoubleVector) super.dummyVector();\n-        }\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2929,1 +2929,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -2933,1 +2933,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3041,1 +3041,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, indexMap, mapOffset, m);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, indexMap, mapOffset, m);\n@@ -3085,1 +3085,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset).maybeSwap(bo);\n@@ -3143,1 +3143,1 @@\n-            return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n+            return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n@@ -3147,1 +3147,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n@@ -3846,1 +3846,1 @@\n-            return dummyVector().fromArray0(va, 0);\n+            return dummyVectorMF().fromArray0(va, 0);\n@@ -3859,6 +3859,0 @@\n-        @ForceInline\n-        @Override final\n-        FloatVector dummyVector() {\n-            return (FloatVector) super.dummyVector();\n-        }\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -3097,1 +3097,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -3101,1 +3101,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3209,1 +3209,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, indexMap, mapOffset, m);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, indexMap, mapOffset, m);\n@@ -3253,1 +3253,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset).maybeSwap(bo);\n@@ -3311,1 +3311,1 @@\n-            return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n+            return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n@@ -3315,1 +3315,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n@@ -4014,1 +4014,1 @@\n-            return dummyVector().fromArray0(va, 0);\n+            return dummyVectorMF().fromArray0(va, 0);\n@@ -4027,6 +4027,0 @@\n-        @ForceInline\n-        @Override final\n-        IntVector dummyVector() {\n-            return (IntVector) super.dummyVector();\n-        }\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2958,1 +2958,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -2962,1 +2962,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3090,1 +3090,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, indexMap, mapOffset, m);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, indexMap, mapOffset, m);\n@@ -3134,1 +3134,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset).maybeSwap(bo);\n@@ -3192,1 +3192,1 @@\n-            return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n+            return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n@@ -3196,1 +3196,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n@@ -3949,1 +3949,1 @@\n-            return dummyVector().fromArray0(va, 0);\n+            return dummyVectorMF().fromArray0(va, 0);\n@@ -3962,6 +3962,0 @@\n-        @ForceInline\n-        @Override final\n-        LongVector dummyVector() {\n-            return (LongVector) super.dummyVector();\n-        }\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -3116,1 +3116,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -3120,1 +3120,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3231,1 +3231,1 @@\n-        return vsp.dummyVector().fromCharArray0(a, offset);\n+        return vsp.dummyVectorMF().fromCharArray0(a, offset);\n@@ -3264,1 +3264,1 @@\n-            return vsp.dummyVector().fromCharArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromCharArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -3268,1 +3268,1 @@\n-        return vsp.dummyVector().fromCharArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromCharArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3398,1 +3398,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset).maybeSwap(bo);\n@@ -3456,1 +3456,1 @@\n-            return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n+            return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n@@ -3460,1 +3460,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n@@ -4295,1 +4295,1 @@\n-            return dummyVector().fromArray0(va, 0);\n+            return dummyVectorMF().fromArray0(va, 0);\n@@ -4308,6 +4308,0 @@\n-        @ForceInline\n-        @Override final\n-        ShortVector dummyVector() {\n-            return (ShortVector) super.dummyVector();\n-        }\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -3705,1 +3705,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -3709,1 +3709,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -3866,1 +3866,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, indexMap, mapOffset, m);\n+            return vsp.dummyVectorMF().fromArray0(a, offset, indexMap, mapOffset, m);\n@@ -3894,1 +3894,1 @@\n-        return vsp.dummyVector().fromCharArray0(a, offset);\n+        return vsp.dummyVectorMF().fromCharArray0(a, offset);\n@@ -3927,1 +3927,1 @@\n-            return vsp.dummyVector().fromCharArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromCharArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -3931,1 +3931,1 @@\n-        return vsp.dummyVector().fromCharArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromCharArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -4049,1 +4049,1 @@\n-        return vsp.dummyVector().fromBooleanArray0(a, offset);\n+        return vsp.dummyVectorMF().fromBooleanArray0(a, offset);\n@@ -4086,1 +4086,1 @@\n-            return vsp.dummyVector().fromBooleanArray0(a, offset, m, OFFSET_IN_RANGE);\n+            return vsp.dummyVectorMF().fromBooleanArray0(a, offset, m, OFFSET_IN_RANGE);\n@@ -4090,1 +4090,1 @@\n-        return vsp.dummyVector().fromBooleanArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n+        return vsp.dummyVectorMF().fromBooleanArray0(a, offset, m, OFFSET_OUT_OF_RANGE);\n@@ -4220,1 +4220,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset).maybeSwap(bo);\n@@ -4282,1 +4282,1 @@\n-            return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n+            return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_IN_RANGE).maybeSwap(bo);\n@@ -4286,1 +4286,1 @@\n-        return vsp.dummyVector().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n+        return vsp.dummyVectorMF().fromMemorySegment0(ms, offset, m, OFFSET_OUT_OF_RANGE).maybeSwap(bo);\n@@ -5587,1 +5587,1 @@\n-            return dummyVector().fromArray0(va, 0);\n+            return dummyVectorMF().fromArray0(va, 0);\n@@ -5599,6 +5599,0 @@\n-\n-        @ForceInline\n-        @Override final\n-        $abstractvectortype$ dummyVector() {\n-            return ($abstractvectortype$) super.dummyVector();\n-        }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"}]}