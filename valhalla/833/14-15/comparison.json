{"files":[{"patch":"@@ -2701,10 +2701,2 @@\n-  ciInlineKlass* vk = static_cast<ciInlineKlass*>(btype->inline_klass());\n-  ciInlineKlass* payload = vk->declared_nonstatic_field_at(0)->type()->as_inline_klass();\n-\n-  Node* payload_value = InlineTypeNode::make_uninitialized(*igvn, payload, true);\n-\n-  Node* new_payload_phi = igvn->transform(clone_through_phi(root_phi, payload_value->bottom_type(), 3, igvn));\n-  Node* new_vector_phi = igvn->transform(clone_through_phi(new_payload_phi, vtype, 3, igvn));\n-  payload_value->as_InlineType()->set_field_value(0, new_vector_phi);\n-  payload_value = igvn->transform(payload_value);\n-\n+  Node* new_payload_phi = clone_through_phi(root_phi, cached_vbox->field_value(0)->bottom_type(), 3, igvn);\n+  Node* new_vector_phi = clone_through_phi(new_payload_phi, vtype, 3, igvn);\n@@ -2712,7 +2704,2 @@\n-  Node* new_box_node = new VectorBoxNode(phase->C, vk, NULL, btype, vtype, false, vk->is_empty() && vk->is_initialized());\n-  new_box_node->as_InlineType()->set_is_init(*igvn);\n-  new_box_node->as_InlineType()->set_oop(new_vbox_phi);\n-  new_box_node->as_InlineType()->set_is_buffered();\n-  new_box_node->as_InlineType()->set_field_value(0, payload_value);\n-  new_box_node = igvn->transform(new_box_node);\n-  return new_box_node;\n+\n+  return VectorBoxNode::make_box_node(*igvn, phase->C, new_vbox_phi, new_vector_phi, btype, vtype);\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":4,"deletions":17,"binary":false,"changes":21,"status":"modified"}]}