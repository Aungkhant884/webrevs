{"files":[{"patch":"@@ -154,0 +154,1 @@\n+  _in_larval = read_from(stream);\n@@ -176,0 +177,4 @@\n+    if (_in_larval == NULL) {\n+      _in_larval = new MarkerValue();\n+    }\n+    _in_larval->write_on(stream);\n","filename":"src\/hotspot\/share\/code\/debugInfo.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -125,0 +125,1 @@\n+  ScopeValue*                _in_larval;\n@@ -131,1 +132,1 @@\n-  ObjectValue(int id, ScopeValue* klass, ScopeValue* is_init = NULL)\n+  ObjectValue(int id, ScopeValue* klass, ScopeValue* is_init = NULL, ScopeValue* in_larval = NULL)\n@@ -133,0 +134,1 @@\n+     , _in_larval(in_larval)\n@@ -143,0 +145,1 @@\n+     , _in_larval(NULL)\n@@ -154,0 +157,1 @@\n+  ScopeValue*                 in_larval() const         { return _in_larval; }\n","filename":"src\/hotspot\/share\/code\/debugInfo.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -311,0 +311,4 @@\n+\n+  AllocateNode* alloc = AllocateNode::Ideal_allocation(get_oop(), igvn);\n+  sfpt->add_req(igvn->intcon(alloc && alloc->_larval ? 1 : 0));\n+\n","filename":"src\/hotspot\/share\/opto\/inlinetypenode.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -914,0 +914,1 @@\n+      ScopeValue* in_larval = NULL;\n@@ -926,0 +927,6 @@\n+\n+        Node* larval_node = sfpt->in(first_ind++);\n+        assert(larval_node != NULL && larval_node->is_Con(), \"in_larval node not found\");\n+\n+        const TypeInt* larval_type = larval_node->bottom_type()->is_int();\n+        in_larval = new ConstantIntValue(larval_type->get_con());\n@@ -928,1 +935,1 @@\n-                           new ConstantOopWriteValue(cik->java_mirror()->constant_encoding()), is_init);\n+                           new ConstantOopWriteValue(cik->java_mirror()->constant_encoding()), is_init, in_larval);\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-Handle VectorSupport::allocate_vector_payload_helper(InstanceKlass* ik, int num_elem, BasicType elem_bt, frame* fr, RegisterMap* reg_map, Location location, TRAPS) {\n+Handle VectorSupport::allocate_vector_payload_helper(InstanceKlass* ik, int num_elem, BasicType elem_bt, frame* fr, RegisterMap* reg_map, Location location, int larval, TRAPS) {\n@@ -201,0 +201,1 @@\n+    if (larval) obj->set_mark(obj->mark().enter_larval_state());\n@@ -341,1 +342,5 @@\n-Handle VectorSupport::allocate_vector_payload(InstanceKlass* ik, int num_elem, BasicType elem_bt, frame* fr, RegisterMap* reg_map, ScopeValue* payload, TRAPS) {\n+Handle VectorSupport::allocate_vector_payload(InstanceKlass* ik, int num_elem, BasicType elem_bt, frame* fr, RegisterMap* reg_map, ObjectValue* ov, TRAPS) {\n+  ScopeValue* payload = ov->field_at(0);\n+  intptr_t in_larval = StackValue::create_stack_value(fr, reg_map, ov->in_larval())->get_int();\n+  jint larval = (jint)*((jint*)&in_larval);\n+\n@@ -346,1 +351,1 @@\n-      return allocate_vector_payload_helper(ik, num_elem, elem_bt, fr, reg_map, location, THREAD); \/\/ safepoint\n+      return allocate_vector_payload_helper(ik, num_elem, elem_bt, fr, reg_map, location, larval, THREAD); \/\/ safepoint\n@@ -372,1 +377,0 @@\n-  ScopeValue* payload_value = ov->field_at(0);\n@@ -382,1 +386,1 @@\n-  Handle payload_instance = VectorSupport::allocate_vector_payload(ik, num_elem, elem_bt, fr, reg_map, payload_value, CHECK_NULL);\n+  Handle payload_instance = VectorSupport::allocate_vector_payload(ik, num_elem, elem_bt, fr, reg_map, ov, CHECK_NULL);\n@@ -393,2 +397,1 @@\n-  ScopeValue* payload_value = ov->field_at(0);\n-  Handle payload_instance = VectorSupport::allocate_vector_payload(ik, num_elem, elem_bt, fr, reg_map, payload_value, CHECK_NULL);\n+  Handle payload_instance = VectorSupport::allocate_vector_payload(ik, num_elem, elem_bt, fr, reg_map, ov, CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -42,2 +42,2 @@\n-  static Handle allocate_vector_payload_helper(InstanceKlass* ik, int num_elem, BasicType elem_bt, frame* fr, RegisterMap* reg_map, Location location, TRAPS);\n-  static Handle allocate_vector_payload(InstanceKlass* ik, int num_elem, BasicType elem_bt, frame* fr, RegisterMap* reg_map, ScopeValue* payload, TRAPS);\n+  static Handle allocate_vector_payload_helper(InstanceKlass* ik, int num_elem, BasicType elem_bt, frame* fr, RegisterMap* reg_map, Location location, int larval, TRAPS);\n+  static Handle allocate_vector_payload(InstanceKlass* ik, int num_elem, BasicType elem_bt, frame* fr, RegisterMap* reg_map, ObjectValue* ov, TRAPS);\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}