{"files":[{"patch":"@@ -571,1 +571,1 @@\n-                if (image != nil)\n+                if (image != nil && image.size.width > 0 && image.size.height > 0)\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/mac\/GlassPasteboard.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.glass.ui.mac;\n+\n+import com.sun.glass.ui.Clipboard;\n+\n+import java.util.HashMap;\n+\n+public class MacPasteboardShim {\n+\n+    private static MacSystemClipboard dndClipboard;\n+\n+    public MacPasteboardShim() {\n+        dndClipboard = new MacSystemClipboard(Clipboard.DND);\n+    }\n+\n+    public void pushMacPasteboard(HashMap<String, Object> data) {\n+        dndClipboard.pushToSystem(data, Clipboard.ACTION_ANY);\n+    }\n+\n+    public Object popMacPasteboard(String mime) {\n+        return dndClipboard.popFromSystem(mime);\n+    }\n+\n+}\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/glass\/ui\/mac\/MacPasteboardShim.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -7,0 +7,1 @@\n+--add-exports javafx.graphics\/com.sun.glass.ui.mac=ALL-UNNAMED\n","filename":"tests\/system\/src\/test\/addExports","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.com.sun.glass.ui.mac;\n+\n+import com.sun.glass.ui.Clipboard;\n+import com.sun.glass.ui.Pixels;\n+import com.sun.glass.ui.mac.MacPasteboardShim;\n+import com.sun.javafx.PlatformUtil;\n+import javafx.application.Platform;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.CountDownLatch;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assume.assumeTrue;\n+import static test.util.Util.runAndWait;\n+\n+public class MacPasteboardTest {\n+\n+    private static final CountDownLatch startupLatch = new CountDownLatch(1);\n+\n+    private static MacPasteboardShim macPasteboardShim;\n+\n+    @BeforeClass\n+    public static void setup() throws Exception {\n+        if (PlatformUtil.isMac()) {\n+            Platform.startup(() -> {\n+                macPasteboardShim = new MacPasteboardShim();\n+                startupLatch.countDown();\n+            });\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void teardown() {\n+        if (PlatformUtil.isMac()) {\n+            Platform.exit();\n+        }\n+    }\n+\n+    @Test\n+    public void testValidLocalImageURLMacPasteboard() throws Exception {\n+        assumeTrue(PlatformUtil.isMac());\n+        final String localImage = getClass().getResource(\"blue.png\").toURI().toURL().toString();\n+        runAndWait(() -> {\n+            macPasteboardShim.pushMacPasteboard(new HashMap<>(Map.of(Clipboard.URI_TYPE, localImage)));\n+            Object content = macPasteboardShim.popMacPasteboard(Clipboard.RAW_IMAGE_TYPE);\n+            assertTrue(\"The content was not a raw image\", content instanceof Pixels);\n+\n+            Pixels pixels = (Pixels) content;\n+            assertEquals(\"The raw image width\", 64, pixels.getWidth());\n+            assertEquals(\"The raw image height\", 64, pixels.getHeight());\n+        });\n+    }\n+\n+    @Test\n+    public void testDataBase64ImageMacPasteboard() {\n+        assumeTrue(PlatformUtil.isMac());\n+        final String encodedImage = \"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAABQAAAAKCAIAAAA7N+mxAAAAAXNSR0IArs4c6QAAAAR\"\n+                + \"nQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAcSURBVChTY\/jPwADBZACyNMHAqGYSwZDU\/P8\/ABieT81GAGKoAAAAAElFTkSuQmCC\";\n+        runAndWait(() -> {\n+            macPasteboardShim.pushMacPasteboard(new HashMap<>(Map.of(Clipboard.URI_TYPE, encodedImage)));\n+            Object content = macPasteboardShim.popMacPasteboard(Clipboard.RAW_IMAGE_TYPE);\n+            assertNull(\"The content was not null\", content);\n+        });\n+    }\n+\n+    @Test\n+    public void testNotAnImageURLMacPasteboard() {\n+        assumeTrue(PlatformUtil.isMac());\n+        final String invalidImage = \"not.an.image.url\";\n+        runAndWait(() -> {\n+            macPasteboardShim.pushMacPasteboard(new HashMap<>(Map.of(Clipboard.URI_TYPE, invalidImage)));\n+            Object content = macPasteboardShim.popMacPasteboard(Clipboard.RAW_IMAGE_TYPE);\n+            assertNull(\"The content was not null\", content);\n+        });\n+    }\n+}\n","filename":"tests\/system\/src\/test\/java\/test\/com\/sun\/glass\/ui\/mac\/MacPasteboardTest.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"filename":"tests\/system\/src\/test\/resources\/test\/com\/sun\/glass\/ui\/mac\/blue.png","binary":true,"status":"added"}]}