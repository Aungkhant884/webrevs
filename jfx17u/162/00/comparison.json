{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -372,1 +372,1 @@\n-        double cornerRegionPadding = tableHeaderRow == null ? 0.0 : tableHeaderRow.cornerPadding.get();\n+        double cornerRegionPadding = tableHeaderRow == null || !isLastVisibleColumn ? 0.0 : tableHeaderRow.cornerPadding.get();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableColumnHeader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5944,0 +5944,47 @@\n+    \/\/ See JDK-8311127\n+    @Test\n+    public void testTableMenuButtonOnlyChangesLastVisibleColumnHeader() {\n+        TableView<String> table = new TableView<>();\n+        table.setTableMenuButtonVisible(true);\n+        for (int i = 0; i < 10; i++) {\n+            final TableColumn<String, String> column = new TableColumn<>(\"Header\");\n+            column.setCellValueFactory(value -> new SimpleStringProperty(value.getValue()));\n+            table.getColumns().add(column);\n+        }\n+        for (int i = 0; i < 10; i++) {\n+            table.getItems().add(Integer.toString(i));\n+        }\n+\n+        stageLoader = new StageLoader(new Scene(table, 300, 300));\n+\n+        List<Double> labelWidths = table.getColumns().stream()\n+                .map(column -> VirtualFlowTestUtils.getTableColumnHeader(table, column))\n+                .map(columnHeader -> columnHeader.getChildrenUnmodifiable().get(0))\n+                .map(node -> node.getLayoutBounds().getWidth())\n+                .toList();\n+\n+        \/\/ Verify that the column header width for all columns is the same:\n+        for (int i = 1; i < 10; i++) {\n+            assertEquals(labelWidths.get(i), labelWidths.get(0));\n+        }\n+\n+        \/\/ scroll to last column and sort\n+        table.scrollToColumnIndex(9);\n+        TableColumn<String, ?> lastColumn = table.getColumns().get(9);\n+        lastColumn.setSortType(DESCENDING);\n+        table.getSortOrder().setAll(lastColumn);\n+        Toolkit.getToolkit().firePulse();\n+\n+        List<Double> newLabelWidths = table.getColumns().stream()\n+                .map(column -> VirtualFlowTestUtils.getTableColumnHeader(table, column))\n+                .map(columnHeader -> columnHeader.getChildrenUnmodifiable().get(0))\n+                .map(node -> node.getLayoutBounds().getWidth())\n+                .toList();\n+        \/\/ Verify that the column header width didn't change for the first 9 columns:\n+        for (int i = 0; i < 9; i++) {\n+            assertEquals(labelWidths.get(i), newLabelWidths.get(i));\n+        }\n+        \/\/ and did change for the last one:\n+        assertTrue(labelWidths.get(9) > newLabelWidths.get(9));\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TableViewTest.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -7096,0 +7096,83 @@\n+    \/\/ See JDK-8311127\n+    @Test\n+    public void testTreeTableMenuButtonOnlyChangesLastVisibleColumnHeader() {\n+        TreeTableView<String> table = new TreeTableView<>();\n+        table.setTableMenuButtonVisible(true);\n+        for (int i = 0; i < 10; i++) {\n+            TreeTableColumn<String, String> column = new TreeTableColumn<>(i + \"          \");\n+            column.setCellValueFactory(value -> new SimpleStringProperty(value.getValue().getValue()));\n+            table.getColumns().add(column);\n+        }\n+\n+        TreeItem<String> root = new TreeItem<>();\n+        root.setExpanded(true);\n+        for (int i = 0; i < 10; i++) {\n+            root.getChildren().add(new TreeItem<>(Integer.toString(i)));\n+        }\n+        table.setRoot(root);\n+        table.setShowRoot(false);\n+\n+        stageLoader = new StageLoader(new Scene(table, 300, 300));\n+\n+        List<Double> labelWidths = table.getColumns().stream()\n+                .map(column -> VirtualFlowTestUtils.getTableColumnHeader(table, column))\n+                .map(columnHeader -> columnHeader.getChildrenUnmodifiable().get(0))\n+                .map(node -> node.getLayoutBounds().getWidth())\n+                .toList();\n+\n+        \/\/ Verify that the column header width for all columns is the same:\n+        for (int i = 1; i < 10; i++) {\n+            assertEquals(labelWidths.get(i), labelWidths.get(0));\n+        }\n+\n+        \/\/ scroll to last column and sort\n+        table.scrollToColumnIndex(9);\n+        TreeTableColumn<String, ?> lastColumn = table.getColumns().get(9);\n+        lastColumn.setSortType(TreeTableColumn.SortType.DESCENDING);\n+        table.getSortOrder().setAll(lastColumn);\n+        Toolkit.getToolkit().firePulse();\n+\n+        List<Double> newLabelWidths = table.getColumns().stream()\n+                .map(column -> VirtualFlowTestUtils.getTableColumnHeader(table, column))\n+                .map(columnHeader -> columnHeader.getChildrenUnmodifiable().get(0))\n+                .map(node -> node.getLayoutBounds().getWidth())\n+                .toList();\n+        \/\/ Verify that the column header width didn't change for the first 9 columns:\n+        for (int i = 0; i < 9; i++) {\n+            assertEquals(labelWidths.get(i), newLabelWidths.get(i));\n+        }\n+        \/\/ and did change for the last one:\n+        assertTrue(labelWidths.get(9) > newLabelWidths.get(9));\n+    }\n+\n+    \/\/ See JDK-8089280\n+    @Test\n+    public void testSuppressHorizontalScrollBar() {\n+        TreeItem<String> root = new TreeItem<>();\n+        root.setExpanded(true);\n+        for (int i = 0; i < 10; i++) {\n+            root.getChildren().add(new TreeItem<>(\"\"));\n+        }\n+\n+        TreeTableView<String> table = new TreeTableView<>();\n+        for (int i = 0; i < 10; i++) {\n+            TreeTableColumn<String, String> c = new TreeTableColumn<>(\"C\" + i);\n+            c.setCellValueFactory(value -> new SimpleStringProperty(value.getValue().getValue()));\n+            table.getColumns().add(c);\n+        }\n+        table.setRoot(root);\n+        table.setShowRoot(false);\n+\n+        stageLoader = new StageLoader(new Scene(table, 50, 50));\n+\n+        ScrollBar hbar = VirtualFlowTestUtils.getVirtualFlowHorizontalScrollbar(table);\n+        assertTrue(hbar.isVisible());\n+\n+        table.setColumnResizePolicy(TreeTableView.CONSTRAINED_RESIZE_POLICY);\n+\n+        Toolkit.getToolkit().firePulse();\n+\n+        hbar = VirtualFlowTestUtils.getVirtualFlowHorizontalScrollbar(table);\n+        assertFalse(hbar.isVisible()); \/\/ used to fail here\n+    }\n+\n@@ -7150,31 +7233,0 @@\n-    \/\/ See JDK-8089280\n-    @Test\n-    public void testSuppressHorizontalScrollBar() {\n-        TreeItem<String> root = new TreeItem<>();\n-        root.setExpanded(true);\n-        for (int i = 0; i < 10; i++) {\n-            root.getChildren().add(new TreeItem<>(\"\"));\n-        }\n-\n-        TreeTableView<String> table = new TreeTableView<>();\n-        for (int i = 0; i < 10; i++) {\n-            TreeTableColumn<String, String> c = new TreeTableColumn<>(\"C\" + i);\n-            c.setCellValueFactory(value -> new SimpleStringProperty(value.getValue().getValue()));\n-            table.getColumns().add(c);\n-        }\n-        table.setRoot(root);\n-        table.setShowRoot(false);\n-\n-        stageLoader = new StageLoader(new Scene(table, 50, 50));\n-\n-        ScrollBar hbar = VirtualFlowTestUtils.getVirtualFlowHorizontalScrollbar(table);\n-        assertTrue(hbar.isVisible());\n-\n-        table.setColumnResizePolicy(TreeTableView.CONSTRAINED_RESIZE_POLICY);\n-\n-        Toolkit.getToolkit().firePulse();\n-\n-        hbar = VirtualFlowTestUtils.getVirtualFlowHorizontalScrollbar(table);\n-        assertFalse(hbar.isVisible()); \/\/ used to fail here\n-    }\n-\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewTest.java","additions":83,"deletions":31,"binary":false,"changes":114,"status":"modified"}]}