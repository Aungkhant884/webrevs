{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (C) 2012-2020 Apple Inc. All rights reserved.\n+ * Copyright (C) 2012-2021 Apple Inc. All rights reserved.\n@@ -1114,0 +1114,14 @@\n+    template<int datasize>\n+    ALWAYS_INLINE static bool isValidLDPImm(int immediate)\n+    {\n+        unsigned immedShiftAmount = memPairOffsetShift(false, MEMPAIROPSIZE_INT(datasize));\n+        return isValidSignedImm7(immediate, immedShiftAmount);\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE static bool isValidLDPFPImm(int immediate)\n+    {\n+        unsigned immedShiftAmount = memPairOffsetShift(true, MEMPAIROPSIZE_FP(datasize));\n+        return isValidSignedImm7(immediate, immedShiftAmount);\n+    }\n+\n@@ -1129,1 +1143,29 @@\n-    ALWAYS_INLINE void ldp(RegisterID rt, RegisterID rt2, RegisterID rn, unsigned pimm = 0)\n+    ALWAYS_INLINE void ldp(RegisterID rt, RegisterID rt2, RegisterID rn, int simm = 0)\n+    {\n+        CHECK_DATASIZE();\n+        insn(loadStoreRegisterPairOffset(MEMPAIROPSIZE_INT(datasize), false, MemOp_LOAD, simm, rn, rt, rt2));\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE void ldnp(RegisterID rt, RegisterID rt2, RegisterID rn, int simm = 0)\n+    {\n+        CHECK_DATASIZE();\n+        insn(loadStoreRegisterPairNonTemporal(MEMPAIROPSIZE_INT(datasize), false, MemOp_LOAD, simm, rn, rt, rt2));\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE void ldp(FPRegisterID rt, FPRegisterID rt2, RegisterID rn, PairPostIndex simm)\n+    {\n+        CHECK_DATASIZE();\n+        insn(loadStoreRegisterPairPostIndex(MEMPAIROPSIZE_FP(datasize), true, MemOp_LOAD, simm, rn, rt, rt2));\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE void ldp(FPRegisterID rt, FPRegisterID rt2, RegisterID rn, PairPreIndex simm)\n+    {\n+        CHECK_DATASIZE();\n+        insn(loadStoreRegisterPairPreIndex(MEMPAIROPSIZE_FP(datasize), true, MemOp_LOAD, simm, rn, rt, rt2));\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE void ldp(FPRegisterID rt, FPRegisterID rt2, RegisterID rn, int simm = 0)\n@@ -1132,1 +1174,1 @@\n-        insn(loadStoreRegisterPairOffset(MEMPAIROPSIZE_INT(datasize), false, MemOp_LOAD, pimm, rn, rt, rt2));\n+        insn(loadStoreRegisterPairOffset(MEMPAIROPSIZE_FP(datasize), true, MemOp_LOAD, simm, rn, rt, rt2));\n@@ -1136,1 +1178,1 @@\n-    ALWAYS_INLINE void ldnp(RegisterID rt, RegisterID rt2, RegisterID rn, unsigned pimm = 0)\n+    ALWAYS_INLINE void ldnp(FPRegisterID rt, FPRegisterID rt2, RegisterID rn, int simm = 0)\n@@ -1139,1 +1181,1 @@\n-        insn(loadStoreRegisterPairNonTemporal(MEMPAIROPSIZE_INT(datasize), false, MemOp_LOAD, pimm, rn, rt, rt2));\n+        insn(loadStoreRegisterPairNonTemporal(MEMPAIROPSIZE_FP(datasize), true, MemOp_LOAD, simm, rn, rt, rt2));\n@@ -1743,0 +1785,12 @@\n+    template<int datasize>\n+    ALWAYS_INLINE static bool isValidSTPImm(int immediate)\n+    {\n+        return isValidLDPImm<datasize>(immediate);\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE static bool isValidSTPFPImm(int immediate)\n+    {\n+        return isValidLDPFPImm<datasize>(immediate);\n+    }\n+\n@@ -1758,1 +1812,29 @@\n-    ALWAYS_INLINE void stp(RegisterID rt, RegisterID rt2, RegisterID rn, unsigned pimm = 0)\n+    ALWAYS_INLINE void stp(RegisterID rt, RegisterID rt2, RegisterID rn, int simm = 0)\n+    {\n+        CHECK_DATASIZE();\n+        insn(loadStoreRegisterPairOffset(MEMPAIROPSIZE_INT(datasize), false, MemOp_STORE, simm, rn, rt, rt2));\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE void stnp(RegisterID rt, RegisterID rt2, RegisterID rn, int simm = 0)\n+    {\n+        CHECK_DATASIZE();\n+        insn(loadStoreRegisterPairNonTemporal(MEMPAIROPSIZE_INT(datasize), false, MemOp_STORE, simm, rn, rt, rt2));\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE void stp(FPRegisterID rt, FPRegisterID rt2, RegisterID rn, PairPostIndex simm)\n+    {\n+        CHECK_DATASIZE();\n+        insn(loadStoreRegisterPairPostIndex(MEMPAIROPSIZE_FP(datasize), true, MemOp_STORE, simm, rn, rt, rt2));\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE void stp(FPRegisterID rt, FPRegisterID rt2, RegisterID rn, PairPreIndex simm)\n+    {\n+        CHECK_DATASIZE();\n+        insn(loadStoreRegisterPairPreIndex(MEMPAIROPSIZE_FP(datasize), true, MemOp_STORE, simm, rn, rt, rt2));\n+    }\n+\n+    template<int datasize>\n+    ALWAYS_INLINE void stp(FPRegisterID rt, FPRegisterID rt2, RegisterID rn, int simm = 0)\n@@ -1761,1 +1843,1 @@\n-        insn(loadStoreRegisterPairOffset(MEMPAIROPSIZE_INT(datasize), false, MemOp_STORE, pimm, rn, rt, rt2));\n+        insn(loadStoreRegisterPairOffset(MEMPAIROPSIZE_FP(datasize), true, MemOp_STORE, simm, rn, rt, rt2));\n@@ -1765,1 +1847,1 @@\n-    ALWAYS_INLINE void stnp(RegisterID rt, RegisterID rt2, RegisterID rn, unsigned pimm = 0)\n+    ALWAYS_INLINE void stnp(FPRegisterID rt, FPRegisterID rt2, RegisterID rn, int simm = 0)\n@@ -1768,1 +1850,1 @@\n-        insn(loadStoreRegisterPairNonTemporal(MEMPAIROPSIZE_INT(datasize), false, MemOp_STORE, pimm, rn, rt, rt2));\n+        insn(loadStoreRegisterPairNonTemporal(MEMPAIROPSIZE_FP(datasize), true, MemOp_STORE, simm, rn, rt, rt2));\n@@ -3544,0 +3626,1 @@\n+        RELEASE_ASSERT(isValidSignedImm7(immediate, immedShiftAmount));\n@@ -3575,0 +3658,1 @@\n+        RELEASE_ASSERT(isValidSignedImm7(immediate, immedShiftAmount));\n@@ -3592,0 +3676,1 @@\n+        RELEASE_ASSERT(isValidSignedImm7(immediate, immedShiftAmount));\n@@ -3609,0 +3694,1 @@\n+        RELEASE_ASSERT(isValidSignedImm7(immediate, immedShiftAmount));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/assembler\/ARM64Assembler.h","additions":95,"deletions":9,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (C) 2012-2019 Apple Inc. All rights reserved.\n+ * Copyright (C) 2012-2021 Apple Inc. All rights reserved.\n@@ -77,0 +77,9 @@\n+ALWAYS_INLINE bool isValidSignedImm7(int32_t value, int alignmentShiftAmount)\n+{\n+    constexpr int32_t disallowedHighBits = 32 - 7;\n+    int32_t shiftedValue = value >> alignmentShiftAmount;\n+    bool fitsIn7Bits = shiftedValue == ((shiftedValue << disallowedHighBits) >> disallowedHighBits);\n+    bool hasCorrectAlignment = value == (shiftedValue << alignmentShiftAmount);\n+    return fitsIn7Bits && hasCorrectAlignment;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/assembler\/AssemblerCommon.h","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1229,0 +1229,10 @@\n+    void loadPair64(RegisterID src, FPRegisterID dest1, FPRegisterID dest2)\n+    {\n+        loadPair64(src, TrustedImm32(0), dest1, dest2);\n+    }\n+\n+    void loadPair64(RegisterID src, TrustedImm32 offset, FPRegisterID dest1, FPRegisterID dest2)\n+    {\n+        m_assembler.ldp<64>(dest1, dest2, src, offset.m_value);\n+    }\n+\n@@ -1553,0 +1563,10 @@\n+    void storePair64(FPRegisterID src1, FPRegisterID src2, RegisterID dest)\n+    {\n+        storePair64(src1, src2, dest, TrustedImm32(0));\n+    }\n+\n+    void storePair64(FPRegisterID src1, FPRegisterID src2, RegisterID dest, TrustedImm32 offset)\n+    {\n+        m_assembler.stp<64>(src1, src2, dest, offset.m_value);\n+    }\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/assembler\/MacroAssemblerARM64.h","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1743,0 +1743,435 @@\n+#if CPU(ARM64)\n+void testLoadStorePair64Int64()\n+{\n+    constexpr uint64_t initialValue = 0x5555aaaabbbb8800ull;\n+    constexpr uint64_t value1 = 42;\n+    constexpr uint64_t value2 = 0xcafebabe12345678ull;\n+\n+    uint64_t buffer[10];\n+\n+    auto initBuffer = [&] {\n+        for (unsigned i = 0; i < 10; ++i)\n+            buffer[i] = initialValue + i;\n+    };\n+\n+    struct Pair {\n+        uint64_t value1;\n+        uint64_t value2;\n+    };\n+\n+    Pair pair;\n+    auto initPair = [&] {\n+        pair = { 0, 0 };\n+    };\n+\n+    \/\/ Test loadPair64.\n+    auto testLoadPair = [] (CCallHelpers& jit, int offset) {\n+        emitFunctionPrologue(jit);\n+\n+        constexpr GPRReg bufferGPR = GPRInfo::argumentGPR0;\n+        constexpr GPRReg pairGPR = GPRInfo::argumentGPR1;\n+        jit.loadPair64(bufferGPR, CCallHelpers::TrustedImm32(offset * sizeof(CPURegister)), GPRInfo::regT2, GPRInfo::regT3);\n+\n+        jit.store64(GPRInfo::regT2, CCallHelpers::Address(pairGPR, 0));\n+        jit.store64(GPRInfo::regT3, CCallHelpers::Address(pairGPR, sizeof(uint64_t)));\n+\n+        emitFunctionEpilogue(jit);\n+        jit.ret();\n+    };\n+\n+    auto testLoadPair0 = compile([&] (CCallHelpers& jit) {\n+        testLoadPair(jit, 0);\n+    });\n+\n+    initBuffer();\n+\n+    initPair();\n+    invoke<void>(testLoadPair0, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, initialValue + 4);\n+    CHECK_EQ(pair.value2, initialValue + 5);\n+\n+    initPair();\n+    buffer[4] = value1;\n+    buffer[5] = value2;\n+    invoke<void>(testLoadPair0, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, value1);\n+    CHECK_EQ(pair.value2, value2);\n+\n+    auto testLoadPairMinus2 = compile([&] (CCallHelpers& jit) {\n+        testLoadPair(jit, -2);\n+    });\n+\n+    initPair();\n+    invoke<void>(testLoadPairMinus2, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, initialValue + 4 - 2);\n+    CHECK_EQ(pair.value2, initialValue + 5 - 2);\n+\n+    initPair();\n+    buffer[4 - 2] = value2;\n+    buffer[5 - 2] = value1;\n+    invoke<void>(testLoadPairMinus2, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, value2);\n+    CHECK_EQ(pair.value2, value1);\n+\n+    auto testLoadPairPlus3 = compile([&] (CCallHelpers& jit) {\n+        testLoadPair(jit, 3);\n+    });\n+\n+    initPair();\n+    invoke<void>(testLoadPairPlus3, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, initialValue + 4 + 3);\n+    CHECK_EQ(pair.value2, initialValue + 5 + 3);\n+\n+    initPair();\n+    buffer[4 + 3] = value1;\n+    buffer[5 + 3] = value2;\n+    invoke<void>(testLoadPairPlus3, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, value1);\n+    CHECK_EQ(pair.value2, value2);\n+\n+    \/\/ Test storePair64.\n+    auto testStorePair = [] (CCallHelpers& jit, int offset) {\n+        emitFunctionPrologue(jit);\n+\n+        constexpr GPRReg bufferGPR = GPRInfo::argumentGPR2;\n+        jit.storePair64(GPRInfo::argumentGPR0, GPRInfo::argumentGPR1, bufferGPR, CCallHelpers::TrustedImm32(offset * sizeof(CPURegister)));\n+\n+        emitFunctionEpilogue(jit);\n+        jit.ret();\n+    };\n+\n+    auto testStorePair0 = compile([&] (CCallHelpers& jit) {\n+        testStorePair(jit, 0);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePair0, value1, value2, &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], initialValue + 2);\n+    CHECK_EQ(buffer[3], initialValue + 3);\n+    CHECK_EQ(buffer[4], value1);\n+    CHECK_EQ(buffer[5], value2);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], initialValue + 7);\n+    CHECK_EQ(buffer[8], initialValue + 8);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    auto testStorePairMinus2 = compile([&] (CCallHelpers& jit) {\n+        testStorePair(jit, -2);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairMinus2, value1, value2, &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], value1);\n+    CHECK_EQ(buffer[3], value2);\n+    CHECK_EQ(buffer[4], initialValue + 4);\n+    CHECK_EQ(buffer[5], initialValue + 5);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], initialValue + 7);\n+    CHECK_EQ(buffer[8], initialValue + 8);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    auto testStorePairPlus3 = compile([&] (CCallHelpers& jit) {\n+        testStorePair(jit, 3);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairPlus3, value1, value2, &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], initialValue + 2);\n+    CHECK_EQ(buffer[3], initialValue + 3);\n+    CHECK_EQ(buffer[4], initialValue + 4);\n+    CHECK_EQ(buffer[5], initialValue + 5);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], value1);\n+    CHECK_EQ(buffer[8], value2);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    \/\/ Test storePair64 from 1 register.\n+    auto testStorePairFromOneReg = [] (CCallHelpers& jit, int offset) {\n+        emitFunctionPrologue(jit);\n+\n+        constexpr GPRReg bufferGPR = GPRInfo::argumentGPR1;\n+        jit.storePair64(GPRInfo::argumentGPR0, GPRInfo::argumentGPR0, bufferGPR, CCallHelpers::TrustedImm32(offset * sizeof(CPURegister)));\n+\n+        emitFunctionEpilogue(jit);\n+        jit.ret();\n+    };\n+\n+    auto testStorePairFromOneReg0 = compile([&] (CCallHelpers& jit) {\n+        testStorePairFromOneReg(jit, 0);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairFromOneReg0, value2, &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], initialValue + 2);\n+    CHECK_EQ(buffer[3], initialValue + 3);\n+    CHECK_EQ(buffer[4], value2);\n+    CHECK_EQ(buffer[5], value2);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], initialValue + 7);\n+    CHECK_EQ(buffer[8], initialValue + 8);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    auto testStorePairFromOneRegMinus2 = compile([&] (CCallHelpers& jit) {\n+        testStorePairFromOneReg(jit, -2);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairFromOneRegMinus2, value1, &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], value1);\n+    CHECK_EQ(buffer[3], value1);\n+    CHECK_EQ(buffer[4], initialValue + 4);\n+    CHECK_EQ(buffer[5], initialValue + 5);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], initialValue + 7);\n+    CHECK_EQ(buffer[8], initialValue + 8);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    auto testStorePairFromOneRegPlus3 = compile([&] (CCallHelpers& jit) {\n+        testStorePairFromOneReg(jit, 3);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairFromOneRegPlus3, value2, &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], initialValue + 2);\n+    CHECK_EQ(buffer[3], initialValue + 3);\n+    CHECK_EQ(buffer[4], initialValue + 4);\n+    CHECK_EQ(buffer[5], initialValue + 5);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], value2);\n+    CHECK_EQ(buffer[8], value2);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+}\n+\n+void testLoadStorePair64Double()\n+{\n+    constexpr double initialValue = 10000.275;\n+    constexpr double value1 = 42.89;\n+    constexpr double value2 = -555.321;\n+\n+    double buffer[10];\n+\n+    auto initBuffer = [&] {\n+        for (unsigned i = 0; i < 10; ++i)\n+            buffer[i] = initialValue + i;\n+    };\n+\n+    struct Pair {\n+        double value1;\n+        double value2;\n+    };\n+\n+    Pair pair;\n+    auto initPair = [&] {\n+        pair = { 0, 0 };\n+    };\n+\n+    \/\/ Test loadPair64.\n+    auto testLoadPair = [] (CCallHelpers& jit, int offset) {\n+        emitFunctionPrologue(jit);\n+\n+        constexpr GPRReg bufferGPR = GPRInfo::argumentGPR0;\n+        constexpr GPRReg pairGPR = GPRInfo::argumentGPR1;\n+        jit.loadPair64(bufferGPR, CCallHelpers::TrustedImm32(offset * sizeof(double)), FPRInfo::fpRegT0, FPRInfo::fpRegT1);\n+\n+        jit.storeDouble(FPRInfo::fpRegT0, CCallHelpers::Address(pairGPR, 0));\n+        jit.storeDouble(FPRInfo::fpRegT1, CCallHelpers::Address(pairGPR, sizeof(uint64_t)));\n+\n+        emitFunctionEpilogue(jit);\n+        jit.ret();\n+    };\n+\n+    auto testLoadPair0 = compile([&] (CCallHelpers& jit) {\n+        testLoadPair(jit, 0);\n+    });\n+\n+    initBuffer();\n+\n+    initPair();\n+    invoke<void>(testLoadPair0, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, initialValue + 4);\n+    CHECK_EQ(pair.value2, initialValue + 5);\n+\n+    initPair();\n+    buffer[4] = value1;\n+    buffer[5] = value2;\n+    invoke<void>(testLoadPair0, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, value1);\n+    CHECK_EQ(pair.value2, value2);\n+\n+    auto testLoadPairMinus2 = compile([&] (CCallHelpers& jit) {\n+        testLoadPair(jit, -2);\n+    });\n+\n+    initPair();\n+    invoke<void>(testLoadPairMinus2, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, initialValue + 4 - 2);\n+    CHECK_EQ(pair.value2, initialValue + 5 - 2);\n+\n+    initPair();\n+    buffer[4 - 2] = value2;\n+    buffer[5 - 2] = value1;\n+    invoke<void>(testLoadPairMinus2, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, value2);\n+    CHECK_EQ(pair.value2, value1);\n+\n+    auto testLoadPairPlus3 = compile([&] (CCallHelpers& jit) {\n+        testLoadPair(jit, 3);\n+    });\n+\n+    initPair();\n+    invoke<void>(testLoadPairPlus3, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, initialValue + 4 + 3);\n+    CHECK_EQ(pair.value2, initialValue + 5 + 3);\n+\n+    initPair();\n+    buffer[4 + 3] = value1;\n+    buffer[5 + 3] = value2;\n+    invoke<void>(testLoadPairPlus3, &buffer[4], &pair);\n+    CHECK_EQ(pair.value1, value1);\n+    CHECK_EQ(pair.value2, value2);\n+\n+    \/\/ Test storePair64.\n+    auto testStorePair = [] (CCallHelpers& jit, int offset) {\n+        emitFunctionPrologue(jit);\n+\n+        constexpr GPRReg bufferGPR = GPRInfo::argumentGPR2;\n+        jit.move64ToDouble(GPRInfo::argumentGPR0, FPRInfo::fpRegT0);\n+        jit.move64ToDouble(GPRInfo::argumentGPR1, FPRInfo::fpRegT1);\n+        jit.storePair64(FPRInfo::fpRegT0, FPRInfo::fpRegT1, bufferGPR, CCallHelpers::TrustedImm32(offset * sizeof(double)));\n+\n+        emitFunctionEpilogue(jit);\n+        jit.ret();\n+    };\n+\n+    auto asInt64 = [] (double value) {\n+        return bitwise_cast<int64_t>(value);\n+    };\n+\n+    auto testStorePair0 = compile([&] (CCallHelpers& jit) {\n+        testStorePair(jit, 0);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePair0, asInt64(value1), asInt64(value2), &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], initialValue + 2);\n+    CHECK_EQ(buffer[3], initialValue + 3);\n+    CHECK_EQ(buffer[4], value1);\n+    CHECK_EQ(buffer[5], value2);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], initialValue + 7);\n+    CHECK_EQ(buffer[8], initialValue + 8);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    auto testStorePairMinus2 = compile([&] (CCallHelpers& jit) {\n+        testStorePair(jit, -2);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairMinus2, asInt64(value1), asInt64(value2), &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], value1);\n+    CHECK_EQ(buffer[3], value2);\n+    CHECK_EQ(buffer[4], initialValue + 4);\n+    CHECK_EQ(buffer[5], initialValue + 5);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], initialValue + 7);\n+    CHECK_EQ(buffer[8], initialValue + 8);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    auto testStorePairPlus3 = compile([&] (CCallHelpers& jit) {\n+        testStorePair(jit, 3);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairPlus3, asInt64(value1), asInt64(value2), &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], initialValue + 2);\n+    CHECK_EQ(buffer[3], initialValue + 3);\n+    CHECK_EQ(buffer[4], initialValue + 4);\n+    CHECK_EQ(buffer[5], initialValue + 5);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], value1);\n+    CHECK_EQ(buffer[8], value2);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    \/\/ Test storePair64 from 1 register.\n+    auto testStorePairFromOneReg = [] (CCallHelpers& jit, int offset) {\n+        emitFunctionPrologue(jit);\n+\n+        constexpr GPRReg bufferGPR = GPRInfo::argumentGPR1;\n+        jit.move64ToDouble(GPRInfo::argumentGPR0, FPRInfo::fpRegT0);\n+        jit.storePair64(FPRInfo::fpRegT0, FPRInfo::fpRegT0, bufferGPR, CCallHelpers::TrustedImm32(offset * sizeof(double)));\n+\n+        emitFunctionEpilogue(jit);\n+        jit.ret();\n+    };\n+\n+    auto testStorePairFromOneReg0 = compile([&] (CCallHelpers& jit) {\n+        testStorePairFromOneReg(jit, 0);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairFromOneReg0, asInt64(value2), &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], initialValue + 2);\n+    CHECK_EQ(buffer[3], initialValue + 3);\n+    CHECK_EQ(buffer[4], value2);\n+    CHECK_EQ(buffer[5], value2);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], initialValue + 7);\n+    CHECK_EQ(buffer[8], initialValue + 8);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    auto testStorePairFromOneRegMinus2 = compile([&] (CCallHelpers& jit) {\n+        testStorePairFromOneReg(jit, -2);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairFromOneRegMinus2, asInt64(value1), &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], value1);\n+    CHECK_EQ(buffer[3], value1);\n+    CHECK_EQ(buffer[4], initialValue + 4);\n+    CHECK_EQ(buffer[5], initialValue + 5);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], initialValue + 7);\n+    CHECK_EQ(buffer[8], initialValue + 8);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+\n+    auto testStorePairFromOneRegPlus3 = compile([&] (CCallHelpers& jit) {\n+        testStorePairFromOneReg(jit, 3);\n+    });\n+\n+    initBuffer();\n+    invoke<void>(testStorePairFromOneRegPlus3, asInt64(value2), &buffer[4]);\n+    CHECK_EQ(buffer[0], initialValue + 0);\n+    CHECK_EQ(buffer[1], initialValue + 1);\n+    CHECK_EQ(buffer[2], initialValue + 2);\n+    CHECK_EQ(buffer[3], initialValue + 3);\n+    CHECK_EQ(buffer[4], initialValue + 4);\n+    CHECK_EQ(buffer[5], initialValue + 5);\n+    CHECK_EQ(buffer[6], initialValue + 6);\n+    CHECK_EQ(buffer[7], value2);\n+    CHECK_EQ(buffer[8], value2);\n+    CHECK_EQ(buffer[9], initialValue + 9);\n+}\n+#endif \/\/ CPU(ARM64)\n+\n@@ -2657,0 +3092,2 @@\n+    RUN(testLoadStorePair64Int64());\n+    RUN(testLoadStorePair64Double());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/assembler\/testmasm.cpp","additions":437,"deletions":0,"binary":false,"changes":437,"status":"modified"},{"patch":"@@ -1582,2 +1582,4 @@\n-        StdList<Allocation> toMaterialize;\n-        auto firstPos = toMaterialize.begin();\n+        Vector<Allocation> toMaterialize;\n+        toMaterialize.resize(escapees.size());\n+        size_t firstIndex = 0;\n+        size_t lastIndex = toMaterialize.size();\n@@ -1585,0 +1587,1 @@\n+            RELEASE_ASSERT(firstIndex < lastIndex);\n@@ -1586,4 +1589,2 @@\n-            \/\/ We need to insert *after* the current position\n-            if (firstPos != toMaterialize.end())\n-                ++firstPos;\n-            firstPos = toMaterialize.insert(firstPos, WTFMove(allocation));\n+            toMaterialize[firstIndex] = WTFMove(allocation);\n+            ++firstIndex;\n@@ -1595,1 +1596,0 @@\n-        auto lastPos = toMaterialize.end();\n@@ -1598,1 +1598,4 @@\n-            lastPos = toMaterialize.insert(lastPos, WTFMove(allocation));\n+            RELEASE_ASSERT(firstIndex < lastIndex);\n+            RELEASE_ASSERT(lastIndex);\n+            --lastIndex;\n+            toMaterialize[lastIndex] = WTFMove(allocation);\n@@ -1657,0 +1660,2 @@\n+        RELEASE_ASSERT(firstIndex == lastIndex);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/dfg\/DFGObjectAllocationSinkingPhase.cpp","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (C) 2012, 2016 Apple Inc. All rights reserved.\n+ * Copyright (C) 2012-2021 Apple Inc. All rights reserved.\n@@ -75,0 +75,2 @@\n+    OPCODE_GROUP_ENTRY(0x0c, A64DOpcodeLoadStoreRegisterPair),\n+    OPCODE_GROUP_ENTRY(0x0d, A64DOpcodeLoadStoreRegisterPair),\n@@ -1366,1 +1368,1 @@\n-        appendFPRegisterName(rt(), size());\n+        appendFPRegisterName(rt(), size() + 2);\n@@ -1368,1 +1370,1 @@\n-        appendFPRegisterName(rt2(), size());\n+        appendFPRegisterName(rt2(), size() + 2);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/disassembler\/ARM64\/A64DOpcode.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (C) 2012-2019 Apple Inc. All rights reserved.\n+ * Copyright (C) 2012-2021 Apple Inc. All rights reserved.\n@@ -790,1 +790,1 @@\n-    static constexpr uint32_t mask = 0x3a000000;\n+    static constexpr uint32_t mask = 0x38000000;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/disassembler\/ARM64\/A64DOpcode.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-ConsoleClient* JSGlobalObjectInspectorController::consoleClient() const\n+WeakPtr<ConsoleClient> JSGlobalObjectInspectorController::consoleClient() const\n@@ -203,1 +203,1 @@\n-    return m_consoleClient.get();\n+    return makeWeakPtr(m_consoleClient.get());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/inspector\/JSGlobalObjectInspectorController.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-    JSC::ConsoleClient* consoleClient() const;\n+    WeakPtr<JSC::ConsoleClient> consoleClient() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/inspector\/JSGlobalObjectInspectorController.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n-extern \"C\" SlowPathReturnType llint_trace_operand(CallFrame*, const Instruction*, int fromWhere, int operand);\n-extern \"C\" SlowPathReturnType llint_trace_value(CallFrame*, const Instruction*, int fromWhere, VirtualRegister operand);\n-extern \"C\" void llint_write_barrier_slow(CallFrame*, JSCell*) WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType llint_trace_operand(CallFrame*, const Instruction*, int fromWhere, int operand) REFERENCED_FROM_ASM;\n+extern \"C\" SlowPathReturnType llint_trace_value(CallFrame*, const Instruction*, int fromWhere, VirtualRegister operand) REFERENCED_FROM_ASM;\n+extern \"C\" void llint_write_barrier_slow(CallFrame*, JSCell*) REFERENCED_FROM_ASM WTF_INTERNAL;\n@@ -47,1 +47,1 @@\n-    LLINT_SLOW_PATH_DECL(name) WTF_INTERNAL\n+    LLINT_SLOW_PATH_DECL(name) REFERENCED_FROM_ASM WTF_INTERNAL\n@@ -147,3 +147,3 @@\n-extern \"C\" SlowPathReturnType llint_throw_stack_overflow_error(VM*, ProtoCallFrame*) WTF_INTERNAL;\n-extern \"C\" SlowPathReturnType llint_slow_path_checkpoint_osr_exit(CallFrame* callFrame, EncodedJSValue unused) WTF_INTERNAL;\n-extern \"C\" SlowPathReturnType llint_slow_path_checkpoint_osr_exit_from_inlined_call(CallFrame* callFrame, EncodedJSValue callResult) WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType llint_throw_stack_overflow_error(VM*, ProtoCallFrame*) REFERENCED_FROM_ASM WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType llint_slow_path_checkpoint_osr_exit(CallFrame* callFrame, EncodedJSValue unused) REFERENCED_FROM_ASM WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType llint_slow_path_checkpoint_osr_exit_from_inlined_call(CallFrame* callFrame, EncodedJSValue callResult) REFERENCED_FROM_ASM WTF_INTERNAL;\n@@ -151,1 +151,1 @@\n-extern \"C\" SlowPathReturnType llint_stack_check_at_vm_entry(VM*, Register*) WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType llint_stack_check_at_vm_entry(VM*, Register*) REFERENCED_FROM_ASM WTF_INTERNAL;\n@@ -153,2 +153,2 @@\n-extern \"C\" SlowPathReturnType llint_check_vm_entry_permission(VM*, ProtoCallFrame*) WTF_INTERNAL;\n-extern \"C\" NO_RETURN_DUE_TO_CRASH void llint_crash() WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType llint_check_vm_entry_permission(VM*, ProtoCallFrame*) REFERENCED_FROM_ASM WTF_INTERNAL;\n+extern \"C\" NO_RETURN_DUE_TO_CRASH void llint_crash() REFERENCED_FROM_ASM WTF_INTERNAL;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/llint\/LLIntSlowPaths.h","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include <wtf\/WeakPtr.h>\n@@ -40,1 +41,1 @@\n-class ConsoleClient {\n+class ConsoleClient : public CanMakeWeakPtr<ConsoleClient> {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/runtime\/ConsoleClient.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -167,1 +167,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -177,1 +177,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -187,1 +187,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -197,1 +197,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -207,1 +207,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -219,1 +219,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -236,1 +236,1 @@\n-    auto* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -250,1 +250,1 @@\n-    auto* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -265,1 +265,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -286,1 +286,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -307,1 +307,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -327,1 +327,1 @@\n-    auto* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -341,1 +341,1 @@\n-    auto* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -355,1 +355,1 @@\n-    auto* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -368,1 +368,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -378,1 +378,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -388,1 +388,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -398,1 +398,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -408,1 +408,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -418,1 +418,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n@@ -428,1 +428,1 @@\n-    ConsoleClient* client = globalObject->consoleClient();\n+    auto client = globalObject->consoleClient();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/runtime\/ConsoleObject.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+#include \"ConsoleClient.h\"\n@@ -2332,0 +2333,5 @@\n+void JSGlobalObject::setConsoleClient(WeakPtr<ConsoleClient>&& consoleClient)\n+{\n+    m_consoleClient = WTFMove(consoleClient);\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/runtime\/JSGlobalObject.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+#include <wtf\/WeakPtr.h>\n@@ -563,1 +564,1 @@\n-    ConsoleClient* m_consoleClient { nullptr };\n+    WeakPtr<ConsoleClient> m_consoleClient;\n@@ -883,2 +884,2 @@\n-    void setConsoleClient(ConsoleClient* consoleClient) { m_consoleClient = consoleClient; }\n-    ConsoleClient* consoleClient() const { return m_consoleClient; }\n+    JS_EXPORT_PRIVATE void setConsoleClient(WeakPtr<ConsoleClient>&&);\n+    WeakPtr<ConsoleClient> consoleClient() const { return m_consoleClient; }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/runtime\/JSGlobalObject.h","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -419,0 +419,2 @@\n+    switch (sharingMode) {\n+    case MemorySharingMode::Default: {\n@@ -422,2 +424,0 @@\n-    switch (sharingMode) {\n-    case MemorySharingMode::Default: {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/wasm\/WasmMemory.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    WASM_SLOW_PATH_DECL(name) WTF_INTERNAL\n+    WASM_SLOW_PATH_DECL(name) REFERENCED_FROM_ASM WTF_INTERNAL\n@@ -85,3 +85,3 @@\n-extern \"C\" SlowPathReturnType slow_path_wasm_throw_exception(CallFrame*, const Instruction*, Wasm::Instance* instance, Wasm::ExceptionType) WTF_INTERNAL;\n-extern \"C\" SlowPathReturnType slow_path_wasm_popcount(const Instruction* pc, uint32_t) WTF_INTERNAL;\n-extern \"C\" SlowPathReturnType slow_path_wasm_popcountll(const Instruction* pc, uint64_t) WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType slow_path_wasm_throw_exception(CallFrame*, const Instruction*, Wasm::Instance* instance, Wasm::ExceptionType) REFERENCED_FROM_ASM WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType slow_path_wasm_popcount(const Instruction* pc, uint32_t) REFERENCED_FROM_ASM WTF_INTERNAL;\n+extern \"C\" SlowPathReturnType slow_path_wasm_popcountll(const Instruction* pc, uint64_t) REFERENCED_FROM_ASM WTF_INTERNAL;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/JavaScriptCore\/wasm\/WasmSlowPaths.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-template<typename T, typename std::enable_if<std::is_base_of<ThreadSafeRefCounted<T>, T>::value, int>::type = 0, typename... Parameters, typename... Arguments>\n+template<typename T, typename std::enable_if<std::is_base_of<ThreadSafeRefCountedBase, T>::value, int>::type = 0, typename... Parameters, typename... Arguments>\n@@ -96,1 +96,1 @@\n-template<typename T, typename std::enable_if<!std::is_base_of<ThreadSafeRefCounted<T>, T>::value, int>::type = 0, typename... Parameters, typename... Arguments>\n+template<typename T, typename std::enable_if<!std::is_base_of<ThreadSafeRefCountedBase, T>::value, int>::type = 0, typename... Parameters, typename... Arguments>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/CrossThreadTask.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+    bool isValid() const { return isValidIdentifier(m_identifier); }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/ObjectIdentifier.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -60,2 +60,2 @@\n-        if (m_ptr)\n-            PtrTraits::unwrap(m_ptr)->deref();\n+        if (auto* ptr = PtrTraits::exchange(m_ptr, nullptr))\n+            ptr->deref();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/Ref.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,1 +70,3 @@\n-static bool isArmenianLookalikeCharacter(UChar32 codePoint)\n+template<UScriptCode> bool isLookalikeCharacterOfScriptType(UChar32);\n+\n+template<> bool isLookalikeCharacterOfScriptType<USCRIPT_ARMENIAN>(UChar32 codePoint)\n@@ -72,1 +74,13 @@\n-    return codePoint == 0x0548 || codePoint == 0x054D || codePoint == 0x0578 || codePoint == 0x057D;\n+    switch (codePoint) {\n+    case 0x0548: \/* ARMENIAN CAPITAL LETTER VO *\/\n+    case 0x054D: \/* ARMENIAN CAPITAL LETTER SEH *\/\n+    case 0x0551: \/* ARMENIAN CAPITAL LETTER CO *\/\n+    case 0x0555: \/* ARMENIAN CAPITAL LETTER OH *\/\n+    case 0x0578: \/* ARMENIAN SMALL LETTER VO *\/\n+    case 0x057D: \/* ARMENIAN SMALL LETTER SEH *\/\n+    case 0x0581: \/* ARMENIAN SMALL LETTER CO *\/\n+    case 0x0585: \/* ARMENIAN SMALL LETTER OH *\/\n+        return true;\n+    default:\n+        return false;\n+    }\n@@ -75,1 +89,12 @@\n-static bool isArmenianScriptCharacter(UChar32 codePoint)\n+template<> bool isLookalikeCharacterOfScriptType<USCRIPT_TAMIL>(UChar32 codePoint)\n+{\n+    switch (codePoint) {\n+    case 0x0BE6: \/* TAMIL DIGIT ZERO *\/\n+        return true;\n+    default:\n+        return false;\n+    }\n+}\n+\n+template <UScriptCode ScriptType>\n+bool isOfScriptType(UChar32 codePoint)\n@@ -83,2 +108,1 @@\n-\n-    return script == USCRIPT_ARMENIAN;\n+    return script == ScriptType;\n@@ -109,1 +133,14 @@\n-static bool isLookalikeCharacter(const Optional<UChar32>& previousCodePoint, UChar32 charCode)\n+template <UScriptCode ScriptType>\n+bool isLookalikeSequence(const Optional<UChar32>& previousCodePoint, UChar32 codePoint)\n+{\n+    if (!previousCodePoint || *previousCodePoint == '\/')\n+        return false;\n+\n+    auto isLookalikePair = [] (UChar first, UChar second) {\n+        return isLookalikeCharacterOfScriptType<ScriptType>(first) && !(isOfScriptType<ScriptType>(second) || isASCIIDigitOrValidHostCharacter(second));\n+    };\n+    return isLookalikePair(codePoint, *previousCodePoint)\n+        || isLookalikePair(*previousCodePoint, codePoint);\n+}\n+\n+static bool isLookalikeCharacter(const Optional<UChar32>& previousCodePoint, UChar32 codePoint)\n@@ -122,1 +159,1 @@\n-    if (!u_isprint(charCode) || u_isUWhiteSpace(charCode) || u_hasBinaryProperty(charCode, UCHAR_DEFAULT_IGNORABLE_CODE_POINT))\n+    if (!u_isprint(codePoint) || u_isUWhiteSpace(codePoint) || u_hasBinaryProperty(codePoint, UCHAR_DEFAULT_IGNORABLE_CODE_POINT))\n@@ -125,1 +162,1 @@\n-    switch (charCode) {\n+    switch (codePoint) {\n@@ -253,7 +290,0 @@\n-    case 0x0548: \/* ARMENIAN CAPITAL LETTER VO *\/\n-    case 0x054D: \/* ARMENIAN CAPITAL LETTER SEH *\/\n-    case 0x0578: \/* ARMENIAN SMALL LETTER VO *\/\n-    case 0x057D: \/* ARMENIAN SMALL LETTER SEH *\/\n-        return previousCodePoint\n-            && !isASCIIDigitOrValidHostCharacter(previousCodePoint.value())\n-            && !isArmenianScriptCharacter(previousCodePoint.value());\n@@ -263,3 +293,2 @@\n-        return previousCodePoint\n-            && isArmenianLookalikeCharacter(previousCodePoint.value())\n-            && !(isArmenianScriptCharacter(charCode) || isASCIIDigitOrValidHostCharacter(charCode));\n+        return isLookalikeSequence<USCRIPT_ARMENIAN>(previousCodePoint, codePoint)\n+            || isLookalikeSequence<USCRIPT_TAMIL>(previousCodePoint, codePoint);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/URLHelpers.cpp","additions":47,"deletions":18,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -30,1 +30,3 @@\n-using NumberToStringBuffer = std::array<char, 123>;\n+\/\/ Only toFixed() can use all the 124 positions. The format is:\n+\/\/ <-> + <21 digits> + decimal point + <100 digits> + null char = 124.\n+using NumberToStringBuffer = std::array<char, 124>;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/dtoa.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-class FetchBodyOwner : public RefCounted<FetchBodyOwner>, public ActiveDOMObject {\n+class FetchBodyOwner : public RefCounted<FetchBodyOwner>, public ActiveDOMObject, public CanMakeWeakPtr<FetchBodyOwner> {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/fetch\/FetchBodyOwner.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    : m_bodyOwner(&bodyOwner)\n+    : m_bodyOwner(makeWeakPtr(bodyOwner))\n@@ -71,1 +71,0 @@\n-    ASSERT(m_bodyOwner || m_isClosed);\n@@ -82,0 +81,1 @@\n+    ASSERT(!m_isClosed);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/fetch\/FetchBodySource.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,2 @@\n-    FetchBodyOwner* m_bodyOwner;\n+    WeakPtr<FetchBodyOwner> m_bodyOwner;\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/fetch\/FetchBodySource.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-class FetchResponse final : public FetchBodyOwner, public CanMakeWeakPtr<FetchResponse> {\n+class FetchResponse final : public FetchBodyOwner {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/fetch\/FetchResponse.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -314,1 +314,2 @@\n-    m_hasPendingActivity = false;\n+    if (event.isTrusted())\n+        m_hasPendingActivity = false;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/indexeddb\/IDBRequest.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -587,2 +587,2 @@\n-    ASSERT(!m_objectStoresByIdentifier.contains(objectStore->info().identifier()));\n-    ASSERT(!m_objectStoresByName.contains(objectStore->info().name()));\n+    RELEASE_ASSERT(!m_objectStoresByIdentifier.contains(objectStore->info().identifier()));\n+    RELEASE_ASSERT(!m_objectStoresByName.contains(objectStore->info().name()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/indexeddb\/server\/MemoryIDBBackingStore.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-    HashMap<String, MemoryObjectStore*> m_objectStoresByName;\n+    HashMap<String, RefPtr<MemoryObjectStore>> m_objectStoresByName;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/indexeddb\/server\/MemoryIDBBackingStore.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-class UniqueIDBDatabaseConnection : public RefCounted<UniqueIDBDatabaseConnection>, public Identified<UniqueIDBDatabaseConnection> {\n+class UniqueIDBDatabaseConnection : public RefCounted<UniqueIDBDatabaseConnection>, public Identified<UniqueIDBDatabaseConnection>, public CanMakeWeakPtr<UniqueIDBDatabaseConnection> {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/indexeddb\/server\/UniqueIDBDatabaseConnection.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    : m_databaseConnection(&connection)\n+    : m_databaseConnection(makeWeakPtr(&connection))\n@@ -49,1 +49,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -55,1 +55,1 @@\n-    m_databaseConnection->server()->registerTransaction(*this);\n+    databaseConnection().server()->registerTransaction(*this);\n@@ -60,1 +60,7 @@\n-    m_databaseConnection->server()->unregisterTransaction(*this);\n+    databaseConnection().server()->unregisterTransaction(*this);\n+}\n+\n+UniqueIDBDatabaseConnection& UniqueIDBDatabaseTransaction::databaseConnection()\n+{\n+    RELEASE_ASSERT(m_databaseConnection);\n+    return *m_databaseConnection;\n@@ -73,1 +79,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -79,1 +85,1 @@\n-        m_databaseConnection->didAbortTransaction(*this, error);\n+        databaseConnection().didAbortTransaction(*this, error);\n@@ -87,1 +93,1 @@\n-    m_databaseConnection->abortTransactionWithoutCallback(*this);\n+    databaseConnection().abortTransactionWithoutCallback(*this);\n@@ -104,1 +110,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -109,1 +115,1 @@\n-        m_databaseConnection->didCommitTransaction(*this, error);\n+        databaseConnection().didCommitTransaction(*this, error);\n@@ -120,1 +126,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -127,1 +133,1 @@\n-            m_databaseConnection->didCreateObjectStore(IDBResultData::createObjectStoreSuccess(requestData.requestIdentifier()));\n+            databaseConnection().didCreateObjectStore(IDBResultData::createObjectStoreSuccess(requestData.requestIdentifier()));\n@@ -129,1 +135,1 @@\n-            m_databaseConnection->didCreateObjectStore(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().didCreateObjectStore(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -140,1 +146,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -147,1 +153,1 @@\n-            m_databaseConnection->didDeleteObjectStore(IDBResultData::deleteObjectStoreSuccess(requestData.requestIdentifier()));\n+            databaseConnection().didDeleteObjectStore(IDBResultData::deleteObjectStoreSuccess(requestData.requestIdentifier()));\n@@ -149,1 +155,1 @@\n-            m_databaseConnection->didDeleteObjectStore(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().didDeleteObjectStore(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -160,1 +166,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -167,1 +173,1 @@\n-            m_databaseConnection->didRenameObjectStore(IDBResultData::renameObjectStoreSuccess(requestData.requestIdentifier()));\n+            databaseConnection().didRenameObjectStore(IDBResultData::renameObjectStoreSuccess(requestData.requestIdentifier()));\n@@ -169,1 +175,1 @@\n-            m_databaseConnection->didRenameObjectStore(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().didRenameObjectStore(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -179,1 +185,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -186,1 +192,1 @@\n-            m_databaseConnection->didClearObjectStore(IDBResultData::clearObjectStoreSuccess(requestData.requestIdentifier()));\n+            databaseConnection().didClearObjectStore(IDBResultData::clearObjectStoreSuccess(requestData.requestIdentifier()));\n@@ -188,1 +194,1 @@\n-            m_databaseConnection->didClearObjectStore(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().didClearObjectStore(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -199,1 +205,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -206,1 +212,1 @@\n-            m_databaseConnection->didCreateIndex(IDBResultData::createIndexSuccess(requestData.requestIdentifier()));\n+            databaseConnection().didCreateIndex(IDBResultData::createIndexSuccess(requestData.requestIdentifier()));\n@@ -208,1 +214,1 @@\n-            m_databaseConnection->didCreateIndex(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().didCreateIndex(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -219,1 +225,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -226,1 +232,1 @@\n-            m_databaseConnection->didDeleteIndex(IDBResultData::deleteIndexSuccess(requestData.requestIdentifier()));\n+            databaseConnection().didDeleteIndex(IDBResultData::deleteIndexSuccess(requestData.requestIdentifier()));\n@@ -228,1 +234,1 @@\n-            m_databaseConnection->didDeleteIndex(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().didDeleteIndex(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -239,1 +245,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -246,1 +252,1 @@\n-            m_databaseConnection->didRenameIndex(IDBResultData::renameIndexSuccess(requestData.requestIdentifier()));\n+            databaseConnection().didRenameIndex(IDBResultData::renameIndexSuccess(requestData.requestIdentifier()));\n@@ -248,1 +254,1 @@\n-            m_databaseConnection->didRenameIndex(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().didRenameIndex(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -260,1 +266,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -267,1 +273,1 @@\n-            m_databaseConnection->connectionToClient().didPutOrAdd(IDBResultData::putOrAddSuccess(requestData.requestIdentifier(), key));\n+            databaseConnection().connectionToClient().didPutOrAdd(IDBResultData::putOrAddSuccess(requestData.requestIdentifier(), key));\n@@ -269,1 +275,1 @@\n-            m_databaseConnection->connectionToClient().didPutOrAdd(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().connectionToClient().didPutOrAdd(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -279,1 +285,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -286,1 +292,1 @@\n-            m_databaseConnection->connectionToClient().didGetRecord(IDBResultData::getRecordSuccess(requestData.requestIdentifier(), result));\n+            databaseConnection().connectionToClient().didGetRecord(IDBResultData::getRecordSuccess(requestData.requestIdentifier(), result));\n@@ -288,1 +294,1 @@\n-            m_databaseConnection->connectionToClient().didGetRecord(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().connectionToClient().didGetRecord(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -298,1 +304,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -305,1 +311,1 @@\n-            m_databaseConnection->connectionToClient().didGetAllRecords(IDBResultData::getAllRecordsSuccess(requestData.requestIdentifier(), result));\n+            databaseConnection().connectionToClient().didGetAllRecords(IDBResultData::getAllRecordsSuccess(requestData.requestIdentifier(), result));\n@@ -307,1 +313,1 @@\n-            m_databaseConnection->connectionToClient().didGetAllRecords(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().connectionToClient().didGetAllRecords(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -317,1 +323,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -324,1 +330,1 @@\n-            m_databaseConnection->connectionToClient().didGetCount(IDBResultData::getCountSuccess(requestData.requestIdentifier(), count));\n+            databaseConnection().connectionToClient().didGetCount(IDBResultData::getCountSuccess(requestData.requestIdentifier(), count));\n@@ -326,1 +332,1 @@\n-            m_databaseConnection->connectionToClient().didGetCount(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().connectionToClient().didGetCount(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -336,1 +342,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -343,1 +349,1 @@\n-            m_databaseConnection->connectionToClient().didDeleteRecord(IDBResultData::deleteRecordSuccess(requestData.requestIdentifier()));\n+            databaseConnection().connectionToClient().didDeleteRecord(IDBResultData::deleteRecordSuccess(requestData.requestIdentifier()));\n@@ -345,1 +351,1 @@\n-            m_databaseConnection->connectionToClient().didDeleteRecord(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().connectionToClient().didDeleteRecord(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -355,1 +361,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -362,1 +368,1 @@\n-            m_databaseConnection->connectionToClient().didOpenCursor(IDBResultData::openCursorSuccess(requestData.requestIdentifier(), result));\n+            databaseConnection().connectionToClient().didOpenCursor(IDBResultData::openCursorSuccess(requestData.requestIdentifier(), result));\n@@ -364,1 +370,1 @@\n-            m_databaseConnection->connectionToClient().didOpenCursor(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().connectionToClient().didOpenCursor(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -374,1 +380,1 @@\n-    auto database = m_databaseConnection->database();\n+    auto database = databaseConnection().database();\n@@ -384,1 +390,1 @@\n-            m_databaseConnection->connectionToClient().didIterateCursor(IDBResultData::iterateCursorSuccess(requestData.requestIdentifier(), result));\n+            databaseConnection().connectionToClient().didIterateCursor(IDBResultData::iterateCursorSuccess(requestData.requestIdentifier(), result));\n@@ -386,1 +392,1 @@\n-            m_databaseConnection->connectionToClient().didIterateCursor(IDBResultData::error(requestData.requestIdentifier(), error));\n+            databaseConnection().connectionToClient().didIterateCursor(IDBResultData::error(requestData.requestIdentifier(), error));\n@@ -395,1 +401,1 @@\n-    auto& info = m_databaseConnection->database()->info();\n+    auto& info = databaseConnection().database()->info();\n@@ -413,1 +419,1 @@\n-    m_databaseConnection->connectionToClient().didStartTransaction(m_transactionInfo.identifier(), error);\n+    databaseConnection().connectionToClient().didStartTransaction(m_transactionInfo.identifier(), error);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/indexeddb\/server\/UniqueIDBDatabaseTransaction.cpp","additions":59,"deletions":53,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    UniqueIDBDatabaseConnection& databaseConnection() { return *m_databaseConnection; }\n+    UniqueIDBDatabaseConnection& databaseConnection();\n@@ -97,1 +97,1 @@\n-    UniqueIDBDatabaseConnection* m_databaseConnection;\n+    WeakPtr<UniqueIDBDatabaseConnection> m_databaseConnection;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/indexeddb\/server\/UniqueIDBDatabaseTransaction.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    , m_peerConnectionFactory(*client.factory())\n+    , m_peerConnectionFactory(client.factory())\n@@ -239,1 +239,1 @@\n-        rtcTrack = m_peerConnectionFactory.CreateAudioTrack(track.id().utf8().data(), audioSource.ptr());\n+        rtcTrack = m_peerConnectionFactory->CreateAudioTrack(track.id().utf8().data(), audioSource.ptr());\n@@ -245,1 +245,1 @@\n-        rtcTrack = m_peerConnectionFactory.CreateVideoTrack(track.id().utf8().data(), videoSource.ptr());\n+        rtcTrack = m_peerConnectionFactory->CreateVideoTrack(track.id().utf8().data(), videoSource.ptr());\n@@ -459,1 +459,1 @@\n-        rtcTrack = m_peerConnectionFactory.CreateAudioTrack(track.id().utf8().data(), audioSource.ptr());\n+        rtcTrack = m_peerConnectionFactory->CreateAudioTrack(track.id().utf8().data(), audioSource.ptr());\n@@ -465,1 +465,1 @@\n-        rtcTrack = m_peerConnectionFactory.CreateVideoTrack(track.id().utf8().data(), videoSource.ptr());\n+        rtcTrack = m_peerConnectionFactory->CreateVideoTrack(track.id().utf8().data(), videoSource.ptr());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/mediastream\/libwebrtc\/LibWebRTCMediaEndpoint.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-    webrtc::PeerConnectionFactoryInterface& m_peerConnectionFactory;\n+    rtc::scoped_refptr<webrtc::PeerConnectionFactoryInterface> m_peerConnectionFactory;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/mediastream\/libwebrtc\/LibWebRTCMediaEndpoint.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-    if (outputIndex >= destinationNode.numberOfInputs())\n+    if (inputIndex >= destinationNode.numberOfInputs())\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/webaudio\/AudioNode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-        return Exception { TypeError, \"Class definitition passed to registerProcessor() is not a constructor\"_s };\n+        return Exception { TypeError, \"Class definition passed to registerProcessor() is not a constructor\"_s };\n@@ -91,1 +91,1 @@\n-        return Exception { TypeError, \"Class definitition passed to registerProcessor() has invalid prototype\"_s };\n+        return Exception { TypeError, \"Class definition passed to registerProcessor() has invalid prototype\"_s };\n@@ -113,1 +113,5 @@\n-    m_processorConstructorMap.add(name, WTFMove(processorContructor));\n+    auto addResult = m_processorConstructorMap.add(name, WTFMove(processorContructor));\n+\n+    \/\/ We've already checked at the beginning of this function but then we ran some JS so we need to check again.\n+    if (!addResult.isNewEntry)\n+        return Exception { NotSupportedError, \"A processor was already registered with this name\"_s };\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/webaudio\/AudioWorkletGlobalScope.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -68,9 +68,0 @@\n-static void forEachChannelDataJSArray(JSGlobalObject& globalObject, JSArray& jsArray, const Function<void(unsigned busIndex, unsigned channelIndex, JSFloat32Array& channelData)>& apply)\n-{\n-    for (unsigned busIndex = 0, busCount = jsArray.length(); busIndex < busCount; ++busIndex) {\n-        auto* channelsArray = jsCast<JSArray*>(jsArray.getIndex(&globalObject, busIndex));\n-        for (unsigned channelIndex = 0, channelCount = channelsArray->length(); channelIndex < channelCount; ++channelIndex)\n-            apply(busIndex, channelIndex, *jsCast<JSFloat32Array*>(channelsArray->getIndex(&globalObject, channelIndex)));\n-    }\n-}\n-\n@@ -146,20 +137,1 @@\n-static void copyDataFromBusesToJSArray(JSGlobalObject& globalObject, const Vector<RefPtr<AudioBus>>& buses, JSArray& jsArray)\n-{\n-    forEachChannelDataJSArray(globalObject, jsArray, [&](unsigned busIndex, unsigned channelIndex, JSFloat32Array& channelData) {\n-        auto* channel = buses[busIndex]->channel(channelIndex);\n-        ASSERT(channelData.length() == channel->length());\n-        memcpy(channelData.typedVector(), channel->mutableData(), sizeof(float) * channel->length());\n-    });\n-}\n-\n-static void copyDataFromParameterMapToJSObject(VM& vm, JSGlobalObject& globalObject, const HashMap<String, std::unique_ptr<AudioFloatArray>>& paramValuesMap, JSObject& jsObject)\n-{\n-    for (auto& pair : paramValuesMap) {\n-        auto* jsTypedArray = jsCast<JSFloat32Array*>(jsObject.get(&globalObject, Identifier::fromString(vm, pair.key)));\n-        ASSERT(pair.value->size() >= jsTypedArray->length());\n-        memcpy(jsTypedArray->typedVector(), pair.value->data(), sizeof(float) * jsTypedArray->length());\n-    }\n-}\n-\n-template<typename T>\n-static bool busTopologyMatchesJSArray(JSGlobalObject& globalObject, const Vector<T>& buses, JSArray* jsArray)\n+static bool copyDataFromBusesToJSArray(VM& vm, JSGlobalObject& globalObject, const Vector<RefPtr<AudioBus>>& buses, JSArray* jsArray)\n@@ -170,5 +142,3 @@\n-    ASSERT_WITH_MESSAGE(jsArray->length() == buses.size(), \"Number of inputs\/outputs cannot change after construction\");\n-\n-    for (unsigned i = 0; i < buses.size(); ++i) {\n-        auto& bus = buses[i];\n-        auto* channelsArray = jsCast<JSArray*>(jsArray->getIndex(&globalObject, i));\n+    for (size_t busIndex = 0; busIndex < buses.size(); ++busIndex) {\n+        auto& bus = buses[busIndex];\n+        auto* jsChannelsArray = jsDynamicCast<JSArray*>(vm, jsArray->getIndex(&globalObject, busIndex));\n@@ -176,1 +146,1 @@\n-        if (channelsArray->length() != numberOfChannels)\n+        if (!jsChannelsArray || jsChannelsArray->length() != numberOfChannels)\n@@ -178,5 +148,4 @@\n-\n-        for (unsigned j = 0; j < numberOfChannels; ++j) {\n-            auto* channel = bus->channel(j);\n-            auto* jsChannelData = jsCast<JSFloat32Array*>(channelsArray->getIndex(&globalObject, j));\n-            if (jsChannelData->length() != channel->length())\n+        for (unsigned channelIndex = 0; channelIndex < numberOfChannels; ++channelIndex) {\n+            auto* channel = bus->channel(channelIndex);\n+            auto* jsChannelArray = jsDynamicCast<JSFloat32Array*>(vm, jsChannelsArray->getIndex(&globalObject, channelIndex));\n+            if (!jsChannelArray || jsChannelArray->length() != channel->length())\n@@ -184,0 +153,1 @@\n+            memcpy(jsChannelArray->typedVector(), channel->mutableData(), sizeof(float) * jsChannelArray->length());\n@@ -186,1 +156,0 @@\n-\n@@ -190,1 +159,1 @@\n-static bool parameterMapTopologyMatchesJSObject(VM& vm, JSGlobalObject& globalObject, const HashMap<String, std::unique_ptr<AudioFloatArray>>& paramValuesMap, JSObject* jsObject)\n+static bool copyDataFromParameterMapToJSObject(VM& vm, JSGlobalObject& globalObject, const HashMap<String, std::unique_ptr<AudioFloatArray>>& paramValuesMap, JSObject* jsObject)\n@@ -196,1 +165,3 @@\n-        auto* jsTypedArray = jsCast<JSFloat32Array*>(jsObject->get(&globalObject, Identifier::fromString(vm, pair.key)));\n+        auto* jsTypedArray = jsDynamicCast<JSFloat32Array*>(vm, jsObject->get(&globalObject, Identifier::fromString(vm, pair.key)));\n+        if (!jsTypedArray)\n+            return false;\n@@ -200,0 +171,1 @@\n+        memcpy(jsTypedArray->typedVector(), pair.value->data(), sizeof(float) * jsTypedArray->length());\n@@ -201,1 +173,0 @@\n-\n@@ -205,1 +176,1 @@\n-static void zeroJSArray(JSGlobalObject& globalObject, JSArray& jsArray)\n+static bool zeroJSArray(VM& vm, JSGlobalObject& globalObject, const Vector<Ref<AudioBus>>& outputs, JSArray* jsArray)\n@@ -207,3 +178,18 @@\n-    forEachChannelDataJSArray(globalObject, jsArray, [](unsigned, unsigned, JSFloat32Array& channelData) {\n-        memset(channelData.typedVector(), 0, sizeof(float) * channelData.length());\n-    });\n+    if (!jsArray)\n+        return false;\n+\n+    for (size_t busIndex = 0; busIndex < outputs.size(); ++busIndex) {\n+        auto& bus = outputs[busIndex];\n+        auto* jsChannelsArray = jsDynamicCast<JSArray*>(vm, jsArray->getIndex(&globalObject, busIndex));\n+        unsigned numberOfChannels = busChannelCount(bus.get());\n+        if (!jsChannelsArray || jsChannelsArray->length() != numberOfChannels)\n+            return false;\n+        for (unsigned channelIndex = 0; channelIndex < numberOfChannels; ++channelIndex) {\n+            auto* channel = bus->channel(channelIndex);\n+            auto* jsChannelArray = jsDynamicCast<JSFloat32Array*>(vm, jsChannelsArray->getIndex(&globalObject, channelIndex));\n+            if (!jsChannelArray || jsChannelArray->length() != channel->length())\n+                return false;\n+            memset(jsChannelArray->typedVector(), 0, sizeof(float) * jsChannelArray->length());\n+        }\n+    }\n+    return true;\n@@ -233,3 +219,1 @@\n-    if (busTopologyMatchesJSArray(globalObject, inputs, toJSArray(m_jsInputs)))\n-        copyDataFromBusesToJSArray(globalObject, inputs, *toJSArray(m_jsInputs));\n-    else\n+    if (!copyDataFromBusesToJSArray(vm, globalObject, inputs, toJSArray(m_jsInputs)))\n@@ -239,3 +223,1 @@\n-    if (busTopologyMatchesJSArray(globalObject, outputs, toJSArray(m_jsOutputs)))\n-        zeroJSArray(globalObject, *toJSArray(m_jsOutputs));\n-    else\n+    if (!zeroJSArray(vm, globalObject, outputs, toJSArray(m_jsOutputs)))\n@@ -245,3 +227,1 @@\n-    if (parameterMapTopologyMatchesJSObject(vm, globalObject, paramValuesMap, toJSObject(m_jsParamValues)))\n-        copyDataFromParameterMapToJSObject(vm, globalObject, paramValuesMap, *toJSObject(m_jsParamValues));\n-    else\n+    if (!copyDataFromParameterMapToJSObject(vm, globalObject, paramValuesMap, toJSObject(m_jsParamValues)))\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/Modules\/webaudio\/AudioWorkletProcessor.cpp","additions":37,"deletions":57,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-    setTimelineInternal(nullptr);\n+    setTimeline(nullptr);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/animation\/WebAnimation.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -125,3 +125,0 @@\n-    if (Frame* frame = wrapped().frame())\n-        visitor.addOpaqueRoot(frame);\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/js\/JSDOMWindowCustom.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-            windowProxy->window()->setConsoleClient(&page->console());\n+            windowProxy->window()->setConsoleClient(makeWeakPtr(page->console()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/js\/ScriptCachedFrameData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        windowProxy.window()->setConsoleClient(&page->console());\n+        windowProxy.window()->setConsoleClient(makeWeakPtr(page->console()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/js\/ScriptController.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-        windowProxy->window()->setConsoleClient(page ? &page->console() : nullptr);\n+        windowProxy->window()->setConsoleClient(page ? makeWeakPtr(page->console()) : nullptr);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/bindings\/js\/WindowProxy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1348,1 +1348,10 @@\n-    return makeUnique<CalcExpressionOperation>(WTFMove(nodes), m_operator);\n+\n+    \/\/ Reverse the operation we did when creating this node, recovering a suitable destination category for otherwise-ambiguous min\/max\/clamp nodes.\n+    \/\/ Note that this category is really only good enough for that purpose and is not accurate for other node types; we could use a boolean instead.\n+    auto destinationCategory = CalculationCategory::Other;\n+    if (category() == CalculationCategory::PercentLength)\n+        destinationCategory = CalculationCategory::Length;\n+    else if (category() == CalculationCategory::PercentNumber)\n+        destinationCategory = CalculationCategory::Number;\n+\n+    return makeUnique<CalcExpressionOperation>(WTFMove(nodes), m_operator, destinationCategory);\n@@ -2010,1 +2019,1 @@\n-            return CSSCalcOperationNode::createMinOrMaxOrClamp(op, WTFMove(children), CalculationCategory::Other);\n+            return CSSCalcOperationNode::createMinOrMaxOrClamp(op, WTFMove(children), operationNode.destinationCategory());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/css\/CSSCalculationValue.cpp","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -47,16 +47,0 @@\n-\/\/ FIXME: Unify with CSSPrimitiveValue::UnitCategory.\n-enum class CalculationCategory : uint8_t {\n-    Number = 0,\n-    Length,\n-    Percent,\n-    PercentNumber,\n-    PercentLength,\n-    Angle,\n-    Time,\n-    Frequency,\n-    \/\/ TODO:\n-    \/\/ Flex,\n-    \/\/ Resolution\n-    Other\n-};\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/css\/CSSCalculationValue.h","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -333,1 +333,2 @@\n-static HashSet<UChar32> codePointsFromString(StringView stringView)\n+using CodePointsMap = HashSet<UChar32, DefaultHash<UChar32>, WTF::UnsignedWithZeroKeyHashTraits<UChar32>>;\n+static CodePointsMap codePointsFromString(StringView stringView)\n@@ -335,1 +336,1 @@\n-    HashSet<UChar32> result;\n+    CodePointsMap result;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/css\/CSSFontFaceSet.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -167,0 +167,2 @@\n+            ASSERT(assignedNode);\n+            ASSERT(assignedNode->parentElement());\n@@ -201,2 +203,2 @@\n-    if (!slotNode)\n-        return false;\n+    ASSERT(slotNode);\n+    ASSERT(slotNode->parentElement());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/ComposedTreeIterator.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -213,0 +213,1 @@\n+        WidgetHierarchyUpdatesSuspensionScope suspendWidgetHierarchyUpdates;\n@@ -632,0 +633,3 @@\n+    if (UNLIKELY(hasShadowRootContainingSlots()))\n+        shadowRoot()->willRemoveAssignedNode(oldChild);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/ContainerNode.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1873,1 +1873,1 @@\n-    m_mediaElements.add(&element);\n+    m_mediaElements.add(element);\n@@ -1878,1 +1878,1 @@\n-    m_mediaElements.remove(&element);\n+    m_mediaElements.remove(element);\n@@ -1883,5 +1883,4 @@\n-    Vector<Ref<HTMLMediaElement>> elements;\n-    for (auto* element : m_mediaElements)\n-        elements.append(*element);\n-    for (auto& element : elements)\n-        function(element);\n+    ASSERT(!m_mediaElements.hasNullReferences());\n+    m_mediaElements.forEach([&](auto& element) {\n+        function(makeRef(element));\n+    });\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Document.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1861,1 +1861,1 @@\n-    HashSet<HTMLMediaElement*> m_mediaElements;\n+    WeakHashSet<HTMLMediaElement> m_mediaElements;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Document.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1616,1 +1616,1 @@\n-        if (svgElement.getBoundingBox(localRect))\n+        if (svgElement.getBoundingBox(localRect, SVGLocatable::DisallowStyleUpdate))\n@@ -4224,2 +4224,0 @@\n-        if (!element.hasRareData() || !element.elementRareData()->computedStyle())\n-            return;\n@@ -4231,1 +4229,3 @@\n-    for (auto& child : descendantsOfType<Element>(*this))\n+    for (auto& child : descendantsOfType<Element>(*this)) {\n+        if (!child.hasRareData() || !child.elementRareData()->computedStyle() || child.hasDisplayContents())\n+            continue;\n@@ -4233,0 +4233,1 @@\n+    }\n@@ -4571,5 +4572,0 @@\n-void Element::didChangeRenderer(RenderObject* oldRenderer)\n-{\n-    InspectorInstrumentation::nodeLayoutContextChanged(*this, oldRenderer);\n-}\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Element.cpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -731,2 +731,0 @@\n-    void didChangeRenderer(RenderObject*) final;\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Element.h","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2685,0 +2685,1 @@\n+template Node* commonInclusiveAncestor<ShadowIncludingTree>(const Node&, const Node&);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Node.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -196,0 +196,5 @@\n+    bool isUnknownElement() const { return hasNodeFlag(NodeFlag::IsUnknownElement); }\n+    bool isHTMLUnknownElement() const { return isHTMLElement() && isUnknownElement(); }\n+    bool isSVGUnknownElement() const { return isSVGElement() && isUnknownElement(); }\n+    bool isMathMLUnknownElement() const { return isMathMLElement() && isUnknownElement(); }\n+\n@@ -220,0 +225,3 @@\n+    bool hasShadowRootContainingSlots() const { return hasNodeFlag(NodeFlag::HasShadowRootContainingSlots); }\n+    void setHasShadowRootContainingSlots(bool flag) { setNodeFlag(NodeFlag::HasShadowRootContainingSlots, flag); }\n+\n@@ -538,2 +546,2 @@\n-        HasEventTargetData = 1 << 12,\n-        \/\/ UnusedFlag = 1 << 13,\n+        IsUnknownElement = 1 << 12,\n+        HasEventTargetData = 1 << 13,\n@@ -564,1 +572,2 @@\n-        \/\/ Bits 30-31 are free.\n+        HasShadowRootContainingSlots = 1 << 30,\n+        \/\/ Bit 31 is free.\n@@ -727,2 +736,0 @@\n-    virtual void didChangeRenderer(RenderObject*) { };\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Node.h","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1597,1 +1597,2 @@\n-    if (position.isNull())\n+    auto container = makeRefPtr(position.containerNode());\n+    if (!container)\n@@ -1599,1 +1600,1 @@\n-    return BoundaryPoint { *position.containerNode(), static_cast<unsigned>(position.computeOffsetInContainerNode()) };\n+    return BoundaryPoint { container.releaseNonNull(), static_cast<unsigned>(position.computeOffsetInContainerNode()) };\n@@ -1602,1 +1603,1 @@\n-PartialOrdering documentOrder(const Position& a, const Position& b)\n+template<TreeType treeType> PartialOrdering treeOrder(const Position& a, const Position& b)\n@@ -1611,1 +1612,1 @@\n-        if (!commonInclusiveAncestor<ComposedTree>(*a.anchorNode(), *b.anchorNode()))\n+        if (!commonInclusiveAncestor<treeType>(*a.anchorNode(), *b.anchorNode()))\n@@ -1622,1 +1623,1 @@\n-    return treeOrder<ComposedTree>(*makeBoundaryPoint(a), *makeBoundaryPoint(b));\n+    return treeOrder<treeType>(*makeBoundaryPoint(a), *makeBoundaryPoint(b));\n@@ -1625,0 +1626,8 @@\n+PartialOrdering documentOrder(const Position& a, const Position& b)\n+{\n+    return treeOrder<ComposedTree>(a, b);\n+}\n+\n+template PartialOrdering treeOrder<ComposedTree>(const Position&, const Position&);\n+template PartialOrdering treeOrder<ShadowIncludingTree>(const Position&, const Position&);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Position.cpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -224,0 +224,1 @@\n+template<TreeType treeType> PartialOrdering treeOrder(const Position&, const Position&);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/Position.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -96,0 +96,1 @@\n+    void willRemoveAssignedNode(const Node&);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/ShadowRoot.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -123,0 +123,7 @@\n+\n+    if (!m_slotAssignmentsIsValid)\n+        assignSlots(shadowRoot);\n+\n+    shadowRoot.host()->setHasShadowRootContainingSlots(true);\n+    m_slotElementCount++;\n+\n@@ -150,1 +157,5 @@\n-    if (auto* host = shadowRoot.host()) \/\/ FIXME: We should be able to do a targeted reconstruction.\n+    ASSERT(m_slotElementCount > 0);\n+    m_slotElementCount--;\n+\n+    if (auto host = makeRefPtr(shadowRoot.host())) {\n+        \/\/ FIXME: We should be able to do a targeted reconstruction.\n@@ -152,0 +163,3 @@\n+        if (!m_slotElementCount)\n+            host->setHasShadowRootContainingSlots(false);\n+    }\n@@ -296,0 +310,3 @@\n+    RenderTreeUpdater::tearDownRenderersAfterSlotChange(*shadowRoot.host());\n+    shadowRoot.host()->invalidateStyleForSubtree();\n+\n@@ -303,2 +320,0 @@\n-    shadowRoot.host()->invalidateStyleAndRenderersForSubtree();\n-\n@@ -334,0 +349,17 @@\n+void SlotAssignment::willRemoveAssignedNode(const Node& node)\n+{\n+    if (!m_slotAssignmentsIsValid)\n+        return;\n+\n+    if (!is<Text>(node) && !is<Element>(node))\n+        return;\n+\n+    auto* slot = m_slots.get(slotNameForHostChild(node));\n+    if (!slot || slot->assignedNodes.isEmpty())\n+        return;\n+\n+    slot->assignedNodes.removeFirstMatching([&node](const auto& item) {\n+        return item.get() == &node;\n+    });\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/SlotAssignment.cpp","additions":35,"deletions":3,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+    void willRemoveAssignedNode(const Node&);\n@@ -106,0 +107,1 @@\n+    unsigned m_slotElementCount { 0 };\n@@ -134,4 +136,1 @@\n-    if (!m_slotAssignment)\n-        return;\n-    if (m_host)\n-        RenderTreeUpdater::tearDownRenderers(*m_host);\n+    if (m_slotAssignment)\n@@ -150,0 +149,6 @@\n+inline void ShadowRoot::willRemoveAssignedNode(const Node& node)\n+{\n+    if (m_slotAssignment)\n+        m_slotAssignment->willRemoveAssignedNode(node);\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/SlotAssignment.h","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+    PerformanceTimeline,\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/TaskSource.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1280,1 +1280,1 @@\n-    if (element->isCustomElementUpgradeCandidate())\n+    if (!element->isUnknownElement())\n@@ -1286,0 +1286,7 @@\n+    if (\"$parameters{namespace}Element\" eq $parameters{fallbackJSInterfaceName}) {\n+        print F <<END\n+    ASSERT(element->is$parameters{fallbackJSInterfaceName}());\n+END\n+;\n+    }\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/dom\/make_names.pl","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-    ASSERT(!(newStart > newEnd));\n+    ASSERT(!is_gt(treeOrder<ShadowIncludingTree>(newStart, newEnd)));\n@@ -1071,1 +1071,1 @@\n-    ASSERT(start <= end);\n+    ASSERT(is_lteq(treeOrder<ShadowIncludingTree>(start, end)));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/ApplyStyleCommand.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -246,0 +246,2 @@\n+\n+    RELEASE_ASSERT_WITH_SECURITY_IMPLICATION(m_document->selection().isNone() || m_document->selection().isConnectedToDocument());\n@@ -273,0 +275,2 @@\n+\n+    RELEASE_ASSERT_WITH_SECURITY_IMPLICATION(m_document->selection().isNone() || m_document->selection().isConnectedToDocument());\n@@ -615,1 +619,1 @@\n-    RefPtr<ContainerNode> parent = node.parentNode();\n+    auto parent = makeRefPtr(node.parentNode());\n@@ -659,1 +663,1 @@\n-    if (auto* highestNodeToRemove = highestNodeToRemoveInPruning(node))\n+    if (auto highestNodeToRemove = makeRefPtr(highestNodeToRemoveInPruning(node)))\n@@ -1296,1 +1300,1 @@\n-        Node* node = position.deprecatedNode();\n+        auto node = makeRefPtr(position.deprecatedNode());\n@@ -1305,1 +1309,1 @@\n-        else if (isBlock(node)) {\n+        else if (isBlock(node.get())) {\n@@ -1309,1 +1313,1 @@\n-                prune(node);\n+                prune(node.get());\n@@ -1626,1 +1630,1 @@\n-        ContainerNode* parentNode = textNode.parentNode();\n+        auto parentNode = makeRefPtr(textNode.parentNode());\n@@ -1630,1 +1634,1 @@\n-        prune(parentNode);\n+        prune(parentNode.get());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/CompositeEditCommand.cpp","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -631,3 +631,3 @@\n-    for (; node; node = node->parentNode()) {\n-        if (auto* renderer = node->renderer()) {\n-            if (!renderer->canHaveChildren() || hasARenderedDescendant(node, previousNode) || rootEditableElement == node)\n+    for (auto currentNode = makeRefPtr(node); currentNode; currentNode = currentNode->parentNode()) {\n+        if (auto* renderer = currentNode->renderer()) {\n+            if (!renderer->canHaveChildren() || hasARenderedDescendant(currentNode.get(), previousNode) || rootEditableElement == currentNode.get())\n@@ -636,1 +636,1 @@\n-        previousNode = node;\n+        previousNode = currentNode.get();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/Editing.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -366,1 +366,1 @@\n-        if (!m_document || !m_document->frame()) {\n+        if (!m_document || (!m_document->frame() && !newSelection.document())) {\n@@ -372,0 +372,9 @@\n+        bool selectionEndpointsBelongToMultipleDocuments = newSelection.base().document() && !newSelection.document();\n+        bool selectionIsInAnotherDocument = newSelection.document() && newSelection.document() != m_document.get();\n+        bool selectionIsInDetachedDocument = newSelection.document() && !newSelection.document()->frame();\n+        if (selectionEndpointsBelongToMultipleDocuments || selectionIsInAnotherDocument || selectionIsInDetachedDocument) {\n+            clear();\n+            return false;\n+        }\n+        ASSERT(m_document->frame());\n+\n@@ -2796,0 +2805,5 @@\n+bool FrameSelection::isConnectedToDocument() const\n+{\n+    return selection().document() == m_document.get();\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/FrameSelection.cpp","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -255,0 +255,2 @@\n+    bool isConnectedToDocument() const;\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/FrameSelection.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -194,3 +194,3 @@\n-    auto* placeholderPtr = placeholder.ptr();\n-    insertNodeBefore(WTFMove(placeholder), *splitBlockquoteNode);\n-    moveParagraph(startOfParagraph(visibleStartOfParagraph), endOfParagraph(visibleEndOfParagraph), positionBeforeNode(placeholderPtr), true);\n+    insertNodeBefore(placeholder, *splitBlockquoteNode);\n+    if (placeholder->isConnected())\n+        moveParagraph(startOfParagraph(visibleStartOfParagraph), endOfParagraph(visibleEndOfParagraph), positionBeforeNode(placeholder.ptr()), true);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/IndentOutdentCommand.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -316,1 +316,1 @@\n-        if (visiblePos.deepEquivalent().anchorNode()->renderer()->isBR()) {\n+        if (auto* renderer = visiblePos.deepEquivalent().anchorNode()->renderer(); renderer && renderer->isBR()) {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/InsertParagraphSeparatorCommand.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -831,1 +831,1 @@\n-    Node* lastLeafInserted = insertedNodes.lastLeafInserted();\n+    auto lastLeafInserted = makeRefPtr(insertedNodes.lastLeafInserted());\n@@ -833,3 +833,3 @@\n-        && !enclosingElementWithTag(firstPositionInOrBeforeNode(lastLeafInserted), selectTag)\n-        && !enclosingElementWithTag(firstPositionInOrBeforeNode(lastLeafInserted), scriptTag)) {\n-        insertedNodes.willRemoveNode(lastLeafInserted);\n+        && !enclosingElementWithTag(firstPositionInOrBeforeNode(lastLeafInserted.get()), selectTag)\n+        && !enclosingElementWithTag(firstPositionInOrBeforeNode(lastLeafInserted.get()), scriptTag)) {\n+        insertedNodes.willRemoveNode(lastLeafInserted.get());\n@@ -843,1 +843,1 @@\n-    Node* firstNodeInserted = insertedNodes.firstNodeInserted();\n+    auto firstNodeInserted = makeRefPtr(insertedNodes.firstNodeInserted());\n@@ -845,1 +845,1 @@\n-        insertedNodes.willRemoveNode(firstNodeInserted);\n+        insertedNodes.willRemoveNode(firstNodeInserted.get());\n@@ -970,3 +970,2 @@\n-        auto* placeholderPtr = placeholder.ptr();\n-        insertNodeBefore(WTFMove(placeholder), *startOfParagraphToMove.deepEquivalent().deprecatedNode());\n-        destination = VisiblePosition(positionBeforeNode(placeholderPtr));\n+        insertNodeBefore(placeholder, *startOfParagraphToMove.deepEquivalent().deprecatedNode());\n+        destination = VisiblePosition(positionBeforeNode(placeholder.ptr()));\n@@ -1301,1 +1300,1 @@\n-        RefPtr<Node> parent = endBR->parentNode();\n+        auto parent = makeRefPtr(endBR->parentNode());\n@@ -1304,2 +1303,3 @@\n-        if (Node* nodeToRemove = highestNodeToRemoveInPruning(parent.get())) {\n-            insertedNodes.willRemoveNode(nodeToRemove);\n+        document().updateLayoutIgnorePendingStylesheets();\n+        if (auto nodeToRemove = makeRefPtr(highestNodeToRemoveInPruning(parent.get()))) {\n+            insertedNodes.willRemoveNode(nodeToRemove.get());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/ReplaceSelectionCommand.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -803,1 +803,1 @@\n-    return documentOrder(a.deepEquivalent(), b.deepEquivalent());\n+    return treeOrder<ComposedTree>(a.deepEquivalent(), b.deepEquivalent());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/VisiblePosition.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,0 +147,15 @@\n+RefPtr<Document> VisibleSelection::document() const\n+{\n+    auto baseDocument = makeRefPtr(m_base.document());\n+    if (!baseDocument)\n+        return nullptr;\n+\n+    if (m_extent.document() != baseDocument.get() || m_start.document() != baseDocument.get() || m_end.document() != baseDocument.get())\n+        return nullptr;\n+\n+    if (baseDocument->settings().liveRangeSelectionEnabled() && (m_anchor.document() != baseDocument.get() || m_focus.document() != baseDocument.get()))\n+        return nullptr;\n+\n+    return baseDocument;\n+}\n+\n@@ -239,1 +254,1 @@\n-    m_anchorIsFirst = m_anchor <= m_focus;\n+    m_anchorIsFirst = is_lteq(treeOrder<ShadowIncludingTree>(m_anchor, m_focus));\n@@ -449,1 +464,1 @@\n-    m_anchorIsFirst = m_anchor <= m_focus;\n+    m_anchorIsFirst = is_lteq(treeOrder<ShadowIncludingTree>(m_anchor, m_focus));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/VisibleSelection.cpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+    RefPtr<Document> document() const;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/VisibleSelection.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -700,1 +700,1 @@\n-        ASSERT(next || !pastEnd);\n+        ASSERT(next || !pastEnd || n->containsIncludingShadowDOM(pastEnd));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/editing\/markup.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,0 @@\n-    virtual bool isHTMLUnknownElement() const { return false; }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/HTMLElement.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5857,1 +5857,1 @@\n-    bool hasTargets = m_mediaSession->hasWirelessPlaybackTargets();\n+    bool hasTargets = m_mediaSession && mediaSession().hasWirelessPlaybackTargets();\n@@ -7670,1 +7670,1 @@\n-    bool requireUserGesture = m_mediaSession->hasBehaviorRestriction(MediaElementSession::RequireUserGestureToAutoplayToExternalDevice);\n+    bool requireUserGesture = m_mediaSession && mediaSession().hasBehaviorRestriction(MediaElementSession::RequireUserGestureToAutoplayToExternalDevice);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/HTMLMediaElement.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -275,0 +275,1 @@\n+    Ref<HTMLPlugInElement> protectedThis(*this);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/HTMLPlugInElement.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        : HTMLElement(tagName, document, CreateHTMLElement)\n+        : HTMLElement(tagName, document, CreateHTMLElement | NodeFlag::IsUnknownElement)\n@@ -49,2 +49,0 @@\n-\n-    bool isHTMLUnknownElement() const final { return true; }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/HTMLUnknownElement.h","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -643,0 +643,2 @@\n+        if (scriptExecutionContext.activeDOMObjectsAreStopped())\n+            return;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/ImageBitmap.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -932,0 +932,1 @@\n+    auto protectedThis = makeRef(*this);\n@@ -933,1 +934,1 @@\n-    if (result.hasException())\n+    if (result.hasException() || !element())\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/html\/InputType.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-void InspectorInstrumentation::nodeLayoutContextChangedImpl(InstrumentingAgents& instrumentingAgents, Node& node, RenderObject* oldRenderer)\n+void InspectorInstrumentation::nodeLayoutContextChangedImpl(InstrumentingAgents& instrumentingAgents, Node& node, RenderObject* newRenderer)\n@@ -182,1 +182,1 @@\n-        cssAgent->nodeLayoutContextTypeChanged(node, oldRenderer);\n+        cssAgent->nodeLayoutContextTypeChanged(node, newRenderer);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/inspector\/InspectorInstrumentation.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -607,1 +607,1 @@\n-inline void InspectorInstrumentation::nodeLayoutContextChanged(Node& node, RenderObject* oldRenderer)\n+inline void InspectorInstrumentation::nodeLayoutContextChanged(Node& node, RenderObject* newRenderer)\n@@ -611,1 +611,1 @@\n-        nodeLayoutContextChangedImpl(*agents, node, oldRenderer);\n+        nodeLayoutContextChangedImpl(*agents, node, newRenderer);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/inspector\/InspectorInstrumentation.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -307,0 +307,1 @@\n+    , m_layoutContextTypeChangedTimer(*this, &InspectorCSSAgent::layoutContextTypeChangedTimerFired)\n@@ -329,0 +330,3 @@\n+    m_nodesWithPendingLayoutContextTypeChanges.clear();\n+    if (m_layoutContextTypeChangedTimer.isActive())\n+        m_layoutContextTypeChangedTimer.stop();\n@@ -966,1 +970,1 @@\n-void InspectorCSSAgent::nodeLayoutContextTypeChanged(Node& node, RenderObject* oldRenderer)\n+void InspectorCSSAgent::nodeLayoutContextTypeChanged(Node& node, RenderObject* newRenderer)\n@@ -972,4 +976,0 @@\n-    auto newLayoutContextType = layoutContextTypeForRenderer(node.renderer());\n-    if (newLayoutContextType == layoutContextTypeForRenderer(oldRenderer))\n-        return;\n-\n@@ -984,1 +984,9 @@\n-    m_frontendDispatcher->nodeLayoutContextTypeChanged(nodeId, WTFMove(newLayoutContextType));\n+    m_nodesWithPendingLayoutContextTypeChanges.set(nodeId, layoutContextTypeForRenderer(newRenderer));\n+    if (!m_layoutContextTypeChangedTimer.isActive())\n+        m_layoutContextTypeChangedTimer.startOneShot(0_s);\n+}\n+\n+void InspectorCSSAgent::layoutContextTypeChangedTimerFired()\n+{\n+    for (auto&& [nodeId, layoutContextType] : std::exchange(m_nodesWithPendingLayoutContextTypeChanges, { }))\n+        m_frontendDispatcher->nodeLayoutContextTypeChanged(nodeId, WTFMove(layoutContextType));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/inspector\/agents\/InspectorCSSAgent.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"Timer.h\"\n@@ -159,0 +160,1 @@\n+    void layoutContextTypeChangedTimerFired();\n@@ -175,0 +177,3 @@\n+\n+    HashMap<Inspector::Protocol::DOM::NodeId, Optional<Inspector::Protocol::CSS::LayoutContextType>> m_nodesWithPendingLayoutContextTypeChanges;\n+    Timer m_layoutContextTypeChangedTimer;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/inspector\/agents\/InspectorCSSAgent.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -195,0 +195,2 @@\n+    auto protectedFrame = makeRef(*m_frame);\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/loader\/DocumentWriter.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,2 +53,2 @@\n-MathMLElement::MathMLElement(const QualifiedName& tagName, Document& document)\n-    : StyledElement(tagName, document, CreateMathMLElement)\n+MathMLElement::MathMLElement(const QualifiedName& tagName, Document& document, ConstructionType constructionType)\n+    : StyledElement(tagName, document, constructionType)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/mathml\/MathMLElement.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-    MathMLElement(const QualifiedName& tagName, Document&);\n+    MathMLElement(const QualifiedName& tagName, Document&, ConstructionType = CreateMathMLElement);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/mathml\/MathMLElement.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        : MathMLElement(tagName, document)\n+        : MathMLElement(tagName, document, CreateMathMLElement | NodeFlag::IsUnknownElement)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/mathml\/MathMLUnknownElement.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include <wtf\/WeakPtr.h>\n@@ -32,1 +33,1 @@\n-class ActivityStateChangeObserver {\n+class ActivityStateChangeObserver : public CanMakeWeakPtr<ActivityStateChangeObserver> {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/ActivityStateChangeObserver.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -581,1 +581,1 @@\n-    Document* document = frame->document();\n+    RefPtr document = frame->document();\n@@ -732,1 +732,2 @@\n-        MonotonicTime timeOrigin = document() && document()->loader() ? document()->loader()->timing().referenceMonotonicTime() : MonotonicTime::now();\n+        RefPtr documentLoader = document() ? document()->loader() : nullptr;\n+        auto timeOrigin = documentLoader ? documentLoader->timing().referenceMonotonicTime() : MonotonicTime::now();\n@@ -777,1 +778,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -815,1 +816,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -839,1 +840,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -873,1 +874,1 @@\n-    Document* sourceDocument = incumbentWindow.document();\n+    RefPtr sourceDocument = incumbentWindow.document();\n@@ -907,1 +908,1 @@\n-    if (InspectorInstrumentation::consoleAgentEnabled(sourceDocument))\n+    if (InspectorInstrumentation::consoleAgentEnabled(sourceDocument.get()))\n@@ -922,1 +923,1 @@\n-    Ref<Frame> frame = *this->frame();\n+        Ref frame = *this->frame();\n@@ -964,1 +965,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -973,2 +974,2 @@\n-    auto* frame = this->frame();\n-    auto* openerFrame = frame ? frame->loader().opener() : nullptr;\n+    RefPtr frame = this->frame();\n+    RefPtr openerFrame = frame ? frame->loader().opener() : nullptr;\n@@ -980,1 +981,2 @@\n-    if (!frame())\n+    RefPtr frame = this->frame();\n+    if (!frame)\n@@ -983,3 +985,1 @@\n-    auto protectedFrame = makeRefPtr(frame());\n-\n-    Page* page = protectedFrame->page();\n+    Page* page = frame->page();\n@@ -989,1 +989,1 @@\n-    allowFocus = allowFocus || WindowFocusAllowedIndicator::windowFocusAllowed() || !protectedFrame->settings().windowFocusRestricted();\n+    allowFocus = allowFocus || WindowFocusAllowedIndicator::windowFocusAllowed() || !frame->settings().windowFocusRestricted();\n@@ -992,1 +992,1 @@\n-    if (protectedFrame->isMainFrame() && allowFocus)\n+    if (frame->isMainFrame() && allowFocus)\n@@ -995,1 +995,1 @@\n-    if (!protectedFrame->hasHadUserInteraction() && !isSameSecurityOriginAsMainFrame())\n+    if (!frame->hasHadUserInteraction() && !isSameSecurityOriginAsMainFrame())\n@@ -999,2 +999,2 @@\n-    auto focusedFrame = makeRefPtr(page->focusController().focusedFrame());\n-    if (focusedFrame && focusedFrame != protectedFrame)\n+    RefPtr focusedFrame = page->focusController().focusedFrame();\n+    if (focusedFrame && focusedFrame != frame)\n@@ -1003,1 +1003,1 @@\n-    protectedFrame->eventHandler().focusDocumentView();\n+    frame->eventHandler().focusDocumentView();\n@@ -1008,1 +1008,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1034,1 +1034,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1061,1 +1061,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1087,1 +1087,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1098,1 +1098,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1102,1 +1102,2 @@\n-    if (document()->isSandboxed(SandboxModals)) {\n+    RefPtr document = this->document();\n+    if (document->isSandboxed(SandboxModals)) {\n@@ -1116,1 +1117,1 @@\n-    if (!document()->securityOrigin().isSameOriginDomain(document()->topDocument().securityOrigin())) {\n+    if (!document->securityOrigin().isSameOriginDomain(document->topDocument().securityOrigin())) {\n@@ -1121,1 +1122,1 @@\n-    frame->document()->updateStyleIfNeeded();\n+    document->updateStyleIfNeeded();\n@@ -1131,1 +1132,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1135,1 +1136,2 @@\n-    if (document()->isSandboxed(SandboxModals)) {\n+    RefPtr document = this->document();\n+    if (document->isSandboxed(SandboxModals)) {\n@@ -1149,1 +1151,1 @@\n-    if (!document()->securityOrigin().isSameOriginDomain(document()->topDocument().securityOrigin())) {\n+    if (!document->securityOrigin().isSameOriginDomain(document->topDocument().securityOrigin())) {\n@@ -1154,1 +1156,1 @@\n-    frame->document()->updateStyleIfNeeded();\n+    document->updateStyleIfNeeded();\n@@ -1164,1 +1166,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1168,1 +1170,2 @@\n-    if (document()->isSandboxed(SandboxModals)) {\n+    RefPtr document = this->document();\n+    if (document->isSandboxed(SandboxModals)) {\n@@ -1182,1 +1185,1 @@\n-    if (!document()->securityOrigin().isSameOriginDomain(document()->topDocument().securityOrigin())) {\n+    if (!document->securityOrigin().isSameOriginDomain(document->topDocument().securityOrigin())) {\n@@ -1187,1 +1190,1 @@\n-    frame->document()->updateStyleIfNeeded();\n+    document->updateStyleIfNeeded();\n@@ -1226,1 +1229,1 @@\n-    auto* view = frame()->isMainFrame() ? frame()->view() : frame()->mainFrame().view();\n+    RefPtr view = frame()->isMainFrame() ? frame()->view() : frame()->mainFrame().view();\n@@ -1232,1 +1235,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1250,1 +1253,1 @@\n-    auto* view = frame()->isMainFrame() ? frame()->view() : frame()->mainFrame().view();\n+    RefPtr view = frame()->isMainFrame() ? frame()->view() : frame()->mainFrame().view();\n@@ -1256,1 +1259,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1274,1 +1277,1 @@\n-    if (auto ownerElement = makeRefPtr(frameElement()))\n+    if (RefPtr ownerElement = frameElement())\n@@ -1277,1 +1280,1 @@\n-    auto frame = makeRefPtr(this->frame());\n+    RefPtr frame = this->frame();\n@@ -1281,1 +1284,1 @@\n-    auto view = makeRefPtr(frame->view());\n+    RefPtr view = frame->view();\n@@ -1297,1 +1300,1 @@\n-    auto frame = makeRefPtr(this->frame());\n+    RefPtr frame = this->frame();\n@@ -1301,1 +1304,1 @@\n-    auto view = makeRefPtr(frame->view());\n+    RefPtr view = frame->view();\n@@ -1310,1 +1313,1 @@\n-    auto frame = makeRefPtr(this->frame());\n+    RefPtr frame = this->frame();\n@@ -1323,1 +1326,1 @@\n-    auto frame = makeRefPtr(this->frame());\n+    RefPtr frame = this->frame();\n@@ -1336,1 +1339,1 @@\n-    auto frame = makeRefPtr(this->frame());\n+    RefPtr frame = this->frame();\n@@ -1340,1 +1343,1 @@\n-    auto view = makeRefPtr(frame->view());\n+    RefPtr view = frame->view();\n@@ -1351,1 +1354,1 @@\n-    auto frameAfterLayout = makeRefPtr(this->frame());\n+    RefPtr frameAfterLayout = this->frame();\n@@ -1355,1 +1358,1 @@\n-    auto viewAfterLayout = makeRefPtr(frameAfterLayout->view());\n+    RefPtr viewAfterLayout = frameAfterLayout->view();\n@@ -1364,1 +1367,1 @@\n-    auto frame = makeRefPtr(this->frame());\n+    RefPtr frame = this->frame();\n@@ -1368,1 +1371,1 @@\n-    auto view = makeRefPtr(frame->view());\n+    RefPtr view = frame->view();\n@@ -1379,1 +1382,1 @@\n-    auto frameAfterLayout = makeRefPtr(this->frame());\n+    RefPtr frameAfterLayout = this->frame();\n@@ -1383,1 +1386,1 @@\n-    auto viewAfterLayout = makeRefPtr(frameAfterLayout->view());\n+    RefPtr viewAfterLayout = frameAfterLayout->view();\n@@ -1392,1 +1395,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1410,1 +1413,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1419,1 +1422,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1430,1 +1433,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1446,1 +1449,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1460,1 +1463,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1464,1 +1467,1 @@\n-    auto* openerFrame = frame->loader().opener();\n+    RefPtr openerFrame = frame->loader().opener();\n@@ -1473,1 +1476,1 @@\n-    if (auto* frame = this->frame())\n+    if (RefPtr frame = this->frame())\n@@ -1479,1 +1482,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1483,1 +1486,1 @@\n-    auto* parentFrame = frame->tree().parent();\n+    RefPtr parentFrame = frame->tree().parent();\n@@ -1492,1 +1495,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1539,1 +1542,1 @@\n-    for (Frame* frame = this->frame() ? &this->frame()->tree().top() : nullptr; frame; frame = frame->tree().traverseNext()) {\n+    for (RefPtr frame = this->frame() ? &this->frame()->tree().top() : nullptr; frame; frame = frame->tree().traverseNext()) {\n@@ -1555,1 +1558,1 @@\n-    for (Frame* ancestor = frame() ? frame()->tree().parent() : nullptr; ancestor; ancestor = ancestor->tree().parent()) {\n+    for (RefPtr ancestor = frame() ? frame()->tree().parent() : nullptr; ancestor; ancestor = ancestor->tree().parent()) {\n@@ -1560,1 +1563,1 @@\n-    auto* securityOrigin = this->securityOrigin();\n+    RefPtr securityOrigin = this->securityOrigin();\n@@ -1564,1 +1567,1 @@\n-    auto* descendant = frame();\n+    RefPtr descendant = frame();\n@@ -1570,1 +1573,1 @@\n-        auto* descendantSecurityOrigin = descendantWindow->securityOrigin();\n+        RefPtr descendantSecurityOrigin = descendantWindow->securityOrigin();\n@@ -1600,1 +1603,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1683,1 +1686,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1687,1 +1690,1 @@\n-    auto view = makeRefPtr(frame->view());\n+    RefPtr view = frame->view();\n@@ -1733,1 +1736,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -1798,1 +1801,1 @@\n-    auto* context = scriptExecutionContext();\n+    RefPtr context = scriptExecutionContext();\n@@ -1815,1 +1818,1 @@\n-    ScriptExecutionContext* context = scriptExecutionContext();\n+    RefPtr context = scriptExecutionContext();\n@@ -1823,1 +1826,1 @@\n-    auto* context = scriptExecutionContext();\n+    RefPtr context = scriptExecutionContext();\n@@ -1848,1 +1851,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -1866,1 +1869,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -1890,1 +1893,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -1900,1 +1903,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -1910,1 +1913,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -1948,1 +1951,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -2087,1 +2090,1 @@\n-        if (auto* document = this->document())\n+        if (RefPtr document = this->document())\n@@ -2116,1 +2119,1 @@\n-        if (auto* document = this->document())\n+        if (RefPtr document = this->document())\n@@ -2158,1 +2161,1 @@\n-    Document* document = this->document();\n+    RefPtr document = this->document();\n@@ -2160,2 +2163,1 @@\n-        Frame* frame = this->frame();\n-        if (frame && frame->page())\n+        if (RefPtr frame = this->frame(); frame && frame->page())\n@@ -2192,1 +2194,1 @@\n-    auto* document = this->document();\n+    RefPtr document = this->document();\n@@ -2258,2 +2260,2 @@\n-    if (frame()) {\n-        if (auto* owner = frame()->ownerElement())\n+    if (RefPtr ownerFrame = frame()) {\n+        if (RefPtr owner = ownerFrame->ownerElement())\n@@ -2341,1 +2343,1 @@\n-    if (Document* document = this->document())\n+    if (RefPtr document = this->document())\n@@ -2378,1 +2380,1 @@\n-    Document* activeDocument = activeWindow.document();\n+    RefPtr activeDocument = activeWindow.document();\n@@ -2382,2 +2384,2 @@\n-    auto* frame = this->frame();\n-    if (!activeDocument->canNavigate(frame, completedURL))\n+    RefPtr frame = this->frame();\n+    if (!activeDocument->canNavigate(frame.get(), completedURL))\n@@ -2484,1 +2486,1 @@\n-    Frame* activeFrame = activeWindow.frame();\n+    RefPtr activeFrame = activeWindow.frame();\n@@ -2488,1 +2490,1 @@\n-    Document* activeDocument = activeWindow.document();\n+    RefPtr activeDocument = activeWindow.document();\n@@ -2545,1 +2547,1 @@\n-    if (auto* document = this->document()) {\n+    if (RefPtr document = this->document()) {\n@@ -2558,1 +2560,1 @@\n-    auto* activeDocument = activeWindow.document();\n+    RefPtr activeDocument = activeWindow.document();\n@@ -2562,1 +2564,1 @@\n-    auto* firstFrame = firstWindow.frame();\n+    RefPtr firstFrame = firstWindow.frame();\n@@ -2572,3 +2574,3 @@\n-    auto* firstFrameDocument = firstFrame->document();\n-    auto* mainFrameDocument = firstFrame->mainFrame().document();\n-    auto* mainFrameDocumentLoader = mainFrameDocument ? mainFrameDocument->loader() : nullptr;\n+    RefPtr firstFrameDocument = firstFrame->document();\n+    RefPtr mainFrameDocument = firstFrame->mainFrame().document();\n+    RefPtr mainFrameDocumentLoader = mainFrameDocument ? mainFrameDocument->loader() : nullptr;\n@@ -2582,1 +2584,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n@@ -2589,1 +2591,1 @@\n-        if (frameName.isEmpty() || !frame->loader().findFrameForNavigation(frameName, activeDocument))\n+        if (frameName.isEmpty() || !frame->loader().findFrameForNavigation(frameName, activeDocument.get()))\n@@ -2595,1 +2597,1 @@\n-    Frame* targetFrame = nullptr;\n+    RefPtr<Frame> targetFrame;\n@@ -2599,1 +2601,1 @@\n-        if (Frame* parent = frame->tree().parent())\n+        if (RefPtr parent = frame->tree().parent())\n@@ -2605,1 +2607,1 @@\n-        if (!activeDocument->canNavigate(targetFrame))\n+        if (!activeDocument->canNavigate(targetFrame.get()))\n@@ -2638,1 +2640,1 @@\n-    Frame* firstFrame = firstWindow.frame();\n+    RefPtr firstFrame = firstWindow.frame();\n@@ -2642,1 +2644,1 @@\n-    auto* frame = this->frame();\n+    RefPtr frame = this->frame();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/DOMWindow.cpp","additions":114,"deletions":112,"binary":false,"changes":226,"status":"modified"},{"patch":"@@ -488,1 +488,1 @@\n-    Node* targetNode = result.targetNode();\n+    RefPtr targetNode = result.targetNode();\n@@ -501,1 +501,1 @@\n-        updateSelectionForMouseDownDispatchingSelectStart(targetNode, expandSelectionToRespectSelectOnMouseDown(*targetNode, newSelection), TextGranularity::WordGranularity);\n+        updateSelectionForMouseDownDispatchingSelectStart(targetNode.get(), expandSelectionToRespectSelectOnMouseDown(*targetNode, newSelection), TextGranularity::WordGranularity);\n@@ -525,1 +525,1 @@\n-    Node* targetNode = mouseEvent.targetNode();\n+    RefPtr targetNode = mouseEvent.targetNode();\n@@ -543,1 +543,1 @@\n-        updateSelectionForMouseDownDispatchingSelectStart(targetNode, expandSelectionToRespectSelectOnMouseDown(*targetNode, newSelection), TextGranularity::WordGranularity);\n+        updateSelectionForMouseDownDispatchingSelectStart(targetNode.get(), expandSelectionToRespectSelectOnMouseDown(*targetNode, newSelection), TextGranularity::WordGranularity);\n@@ -549,1 +549,1 @@\n-    Element* urlElement = result.hitTestResult().URLElement();\n+    RefPtr urlElement = result.hitTestResult().URLElement();\n@@ -551,1 +551,1 @@\n-        if (Node* targetNode = result.targetNode()) {\n+        if (RefPtr targetNode = result.targetNode()) {\n@@ -559,2 +559,1 @@\n-    Node* targetNode = result.targetNode();\n-\n+    RefPtr targetNode = result.targetNode();\n@@ -565,1 +564,1 @@\n-            newSelection = VisibleSelection::selectionFromContentsOfNode(urlElement);\n+            newSelection = VisibleSelection::selectionFromContentsOfNode(urlElement.get());\n@@ -567,1 +566,1 @@\n-        updateSelectionForMouseDownDispatchingSelectStart(targetNode, expandSelectionToRespectSelectOnMouseDown(*targetNode, newSelection), TextGranularity::WordGranularity);\n+        updateSelectionForMouseDownDispatchingSelectStart(targetNode.get(), expandSelectionToRespectSelectOnMouseDown(*targetNode, newSelection), TextGranularity::WordGranularity);\n@@ -594,1 +593,1 @@\n-    Node* targetNode = event.targetNode();\n+    RefPtr targetNode = event.targetNode();\n@@ -605,1 +604,1 @@\n-    return updateSelectionForMouseDownDispatchingSelectStart(targetNode, expandSelectionToRespectSelectOnMouseDown(*targetNode, newSelection), TextGranularity::ParagraphGranularity);\n+    return updateSelectionForMouseDownDispatchingSelectStart(targetNode.get(), expandSelectionToRespectSelectOnMouseDown(*targetNode, newSelection), TextGranularity::ParagraphGranularity);\n@@ -621,1 +620,1 @@\n-    Node* targetNode = event.targetNode();\n+    RefPtr targetNode = event.targetNode();\n@@ -640,1 +639,1 @@\n-        visiblePosition = VisiblePosition(firstPositionInOrBeforeNode(targetNode));\n+        visiblePosition = VisiblePosition(firstPositionInOrBeforeNode(targetNode.get()));\n@@ -685,1 +684,1 @@\n-    bool handled = updateSelectionForMouseDownDispatchingSelectStart(targetNode, newSelection, granularity);\n+    bool handled = updateSelectionForMouseDownDispatchingSelectStart(targetNode.get(), newSelection, granularity);\n@@ -804,1 +803,1 @@\n-    Element* editableElement = selection.rootEditableElement();\n+    RefPtr editableElement = selection.rootEditableElement();\n@@ -809,0 +808,1 @@\n+    RefPtr adjustedTarget = targetNode;\n@@ -815,1 +815,1 @@\n-        targetNode = editableElement;\n+        adjustedTarget = editableElement;\n@@ -818,1 +818,1 @@\n-    return targetNode->renderer()->positionForPoint(LayoutPoint(selectionEndPoint), nullptr);\n+    return adjustedTarget->renderer()->positionForPoint(LayoutPoint(selectionEndPoint), nullptr);\n@@ -847,1 +847,1 @@\n-    Node* targetNode = event.targetNode();\n+    RefPtr targetNode = event.targetNode();\n@@ -853,1 +853,1 @@\n-        Element* parent = targetNode->parentOrShadowHostElement();\n+        RefPtr parent = targetNode->parentOrShadowHostElement();\n@@ -910,2 +910,2 @@\n-    Element* targetElement = result.targetElement();\n-    return targetElement && page->dragController().draggableElement(&m_frame, targetElement, result.roundedPointInInnerNodeFrame(), state);\n+    RefPtr targetElement = result.targetElement();\n+    return targetElement && page->dragController().draggableElement(&m_frame, targetElement.get(), result.roundedPointInInnerNodeFrame(), state);\n@@ -940,1 +940,1 @@\n-    Node* target = hitTestResult.targetNode();\n+    RefPtr target = hitTestResult.targetNode();\n@@ -947,1 +947,1 @@\n-    VisiblePosition targetPosition = selectionExtentRespectingEditingBoundary(m_frame.selection().selection(), hitTestResult.localPoint(), target);\n+    VisiblePosition targetPosition = selectionExtentRespectingEditingBoundary(m_frame.selection().selection(), hitTestResult.localPoint(), target.get());\n@@ -959,1 +959,1 @@\n-    if (Node* selectionBaseNode = newSelection.base().deprecatedNode()) {\n+    if (RefPtr selectionBaseNode = newSelection.base().deprecatedNode()) {\n@@ -969,1 +969,1 @@\n-    if (m_selectionInitiationState == HaveNotStartedSelection && !dispatchSelectStart(target)) {\n+    if (m_selectionInitiationState == HaveNotStartedSelection && !dispatchSelectStart(target.get())) {\n@@ -980,4 +980,4 @@\n-    Node* rootUserSelectAllForMousePressNode = Position::rootUserSelectAllForNode(m_mousePressNode.get());\n-    if (rootUserSelectAllForMousePressNode && rootUserSelectAllForMousePressNode == Position::rootUserSelectAllForNode(target)) {\n-        newSelection.setBase(positionBeforeNode(rootUserSelectAllForMousePressNode).upstream(CanCrossEditingBoundary));\n-        newSelection.setExtent(positionAfterNode(rootUserSelectAllForMousePressNode).downstream(CanCrossEditingBoundary));\n+    RefPtr rootUserSelectAllForMousePressNode = Position::rootUserSelectAllForNode(m_mousePressNode.get());\n+    if (rootUserSelectAllForMousePressNode && rootUserSelectAllForMousePressNode == Position::rootUserSelectAllForNode(target.get())) {\n+        newSelection.setBase(positionBeforeNode(rootUserSelectAllForMousePressNode.get()).upstream(CanCrossEditingBoundary));\n+        newSelection.setExtent(positionAfterNode(rootUserSelectAllForMousePressNode.get()).downstream(CanCrossEditingBoundary));\n@@ -987,1 +987,1 @@\n-            newSelection.setBase(positionAfterNode(rootUserSelectAllForMousePressNode).downstream(CanCrossEditingBoundary));\n+            newSelection.setBase(positionAfterNode(rootUserSelectAllForMousePressNode.get()).downstream(CanCrossEditingBoundary));\n@@ -989,1 +989,1 @@\n-        Node* rootUserSelectAllForTarget = Position::rootUserSelectAllForNode(target);\n+        RefPtr rootUserSelectAllForTarget = Position::rootUserSelectAllForNode(target.get());\n@@ -991,1 +991,1 @@\n-            newSelection.setExtent(positionBeforeNode(rootUserSelectAllForTarget).upstream(CanCrossEditingBoundary));\n+            newSelection.setExtent(positionBeforeNode(rootUserSelectAllForTarget.get()).upstream(CanCrossEditingBoundary));\n@@ -993,1 +993,1 @@\n-            newSelection.setExtent(positionAfterNode(rootUserSelectAllForTarget).downstream(CanCrossEditingBoundary));\n+            newSelection.setExtent(positionAfterNode(rootUserSelectAllForTarget.get()).downstream(CanCrossEditingBoundary));\n@@ -1058,1 +1058,1 @@\n-        Node* node = event.targetNode();\n+        RefPtr node = event.targetNode();\n@@ -1155,4 +1155,2 @@\n-        Frame& mainFrame = m_frame.mainFrame();\n-        FrameView* frameView = m_frame.view();\n-        FrameView* mainView = mainFrame.view();\n-        if (frameView && mainView) {\n+        Ref mainFrame = m_frame.mainFrame();\n+        if (RefPtr frameView = m_frame.view(), mainView = mainFrame->view(); frameView && mainView) {\n@@ -1160,1 +1158,1 @@\n-            return mainFrame.eventHandler().hitTestResultAtPoint(mainFramePoint, hitType, padding);\n+            return mainFrame->eventHandler().hitTestResultAtPoint(mainFramePoint, hitType);\n@@ -1168,1 +1166,1 @@\n-    if (auto* frameView = m_frame.view())\n+    if (RefPtr frameView = m_frame.view())\n@@ -1172,1 +1170,1 @@\n-    auto* document = m_frame.document();\n+    RefPtr document = m_frame.document();\n@@ -1194,1 +1192,1 @@\n-    Node* node = startingNode;\n+    RefPtr node = startingNode;\n@@ -1215,1 +1213,1 @@\n-    Node* node = startingNode;\n+    RefPtr node = startingNode;\n@@ -1243,2 +1241,2 @@\n-    Frame* frame = &m_frame;\n-    FrameView* view = frame->view();\n+    RefPtr frame = &m_frame;\n+    RefPtr view = frame->view();\n@@ -1262,2 +1260,2 @@\n-    Frame* frame = &m_frame;\n-    FrameView* view = frame->view();\n+    RefPtr frame = &m_frame;\n+    RefPtr view = frame->view();\n@@ -1372,1 +1370,1 @@\n-    FrameView* view = m_frame.view();\n+    RefPtr view = m_frame.view();\n@@ -1376,1 +1374,1 @@\n-    auto* document = m_frame.document();\n+    RefPtr document = m_frame.document();\n@@ -1427,1 +1425,1 @@\n-    Node* node = result.targetNode();\n+    RefPtr node = result.targetNode();\n@@ -1504,1 +1502,1 @@\n-        if (useHandCursor(node, result.isOverLink(), shiftKey))\n+        if (useHandCursor(node.get(), result.isOverLink(), shiftKey))\n@@ -1733,1 +1731,1 @@\n-    bool isPanScrollInProgress = m_frame.mainFrame().eventHandler().panScrollInProgress();\n+    bool isPanScrollInProgress = Ref(m_frame.mainFrame())->eventHandler().panScrollInProgress();\n@@ -2008,1 +2006,1 @@\n-        if (auto* view = m_frame.view())\n+        if (RefPtr view = m_frame.view())\n@@ -2271,1 +2269,1 @@\n-static bool targetIsFrame(Node* target, Frame*& frame)\n+static std::pair<bool, RefPtr<Frame>> contentFrameForNode(Node* target)\n@@ -2274,1 +2272,1 @@\n-        return false;\n+        return { false, nullptr };\n@@ -2276,2 +2274,1 @@\n-    frame = downcast<HTMLFrameElementBase>(*target).contentFrame();\n-    return true;\n+    return { true, downcast<HTMLFrameElementBase>(*target).contentFrame() };\n@@ -2363,1 +2360,1 @@\n-    if (Node* targetNode = mouseEvent.targetNode()) {\n+    if (RefPtr targetNode = mouseEvent.targetNode()) {\n@@ -2368,1 +2365,1 @@\n-            newTarget = downcast<Element>(targetNode);\n+            newTarget = static_pointer_cast<Element>(WTFMove(targetNode));\n@@ -2380,2 +2377,1 @@\n-        Frame* targetFrame;\n-        if (targetIsFrame(newTarget.get(), targetFrame)) {\n+        if (auto [isFrameOwner, targetFrame] = contentFrameForNode(newTarget.get()); isFrameOwner) {\n@@ -2390,1 +2386,1 @@\n-        if (targetIsFrame(m_dragTarget.get(), targetFrame)) {\n+        if (auto [isFrameOwner, targetFrame] = contentFrameForNode(m_dragTarget.get()); isFrameOwner) {\n@@ -2406,2 +2402,1 @@\n-        Frame* targetFrame;\n-        if (targetIsFrame(newTarget.get(), targetFrame)) {\n+        if (auto [isFrameOwner, targetFrame] = contentFrameForNode(newTarget.get()); isFrameOwner) {\n@@ -2426,2 +2421,1 @@\n-    Frame* targetFrame;\n-    if (targetIsFrame(m_dragTarget.get(), targetFrame)) {\n+    if (auto [isFrameOwner, targetFrame] = contentFrameForNode(m_dragTarget.get()); isFrameOwner) {\n@@ -2444,1 +2438,0 @@\n-    Frame* targetFrame;\n@@ -2446,1 +2439,1 @@\n-    if (targetIsFrame(m_dragTarget.get(), targetFrame)) {\n+    if (auto [isFrameOwner, targetFrame] = contentFrameForNode(m_dragTarget.get()); isFrameOwner) {\n@@ -2498,1 +2491,1 @@\n-    for (ContainerNode* curr = element; curr; curr = curr->parentInComposedTree()) {\n+    for (RefPtr<ContainerNode> curr = element; curr; curr = curr->parentInComposedTree()) {\n@@ -2508,1 +2501,1 @@\n-    Element* targetElement = nullptr;\n+    RefPtr<Element> targetElement;\n@@ -2599,1 +2592,2 @@\n-    auto* frameView = m_frame.view();\n+    Ref protectedFrame = m_frame;\n+    RefPtr frameView = m_frame.view();\n@@ -2676,1 +2670,1 @@\n-    auto* view = m_frame.view();\n+    RefPtr view = m_frame.view();\n@@ -2691,1 +2685,1 @@\n-        if (auto* shadowRoot = element->shadowRoot()) {\n+        if (RefPtr shadowRoot = element->shadowRoot()) {\n@@ -2730,1 +2724,1 @@\n-    if (auto* document = m_frame.document()) {\n+    if (RefPtr document = m_frame.document()) {\n@@ -2851,0 +2845,1 @@\n+    Ref protectedFrame = m_frame;\n@@ -2865,1 +2860,1 @@\n-    auto* document = m_frame.document();\n+    RefPtr document = m_frame.document();\n@@ -2870,1 +2865,0 @@\n-    RefPtr<FrameView> protector(m_frame.view());\n@@ -2872,1 +2866,1 @@\n-    FrameView* view = m_frame.view();\n+    RefPtr view = m_frame.view();\n@@ -3131,2 +3125,2 @@\n-    Document* doc = m_frame.document();\n-    FrameView* view = m_frame.view();\n+    RefPtr doc = m_frame.document();\n+    RefPtr view = m_frame.view();\n@@ -3169,1 +3163,1 @@\n-    FrameView* view = m_frame.view();\n+    RefPtr view = m_frame.view();\n@@ -3173,1 +3167,1 @@\n-    Document* doc = m_frame.document();\n+    RefPtr doc = m_frame.document();\n@@ -3189,1 +3183,1 @@\n-    Element* focusedElement = doc->focusedElement();\n+    RefPtr focusedElement = doc->focusedElement();\n@@ -3218,1 +3212,1 @@\n-    Node* targetNode = doc->focusedElement();\n+    RefPtr<Node> targetNode = doc->focusedElement();\n@@ -3224,1 +3218,1 @@\n-    result.setInnerNode(targetNode);\n+    result.setInnerNode(targetNode.get());\n@@ -3314,2 +3308,2 @@\n-    FrameView* view = m_frame.view();\n-    if (!view)\n+    Ref protectedFrame = m_frame;\n+    if (!m_frame.view())\n@@ -3350,2 +3344,2 @@\n-    if (auto* document = m_frame.document()) {\n-        if (FrameView* view = m_frame.view()) {\n+    if (RefPtr document = m_frame.document()) {\n+        if (RefPtr view = m_frame.view()) {\n@@ -3375,0 +3369,1 @@\n+    Ref protectedFrame = m_frame;\n@@ -3400,1 +3395,1 @@\n-    Document* document = m_frame.document();\n+    RefPtr document = m_frame.document();\n@@ -3421,1 +3416,2 @@\n-    Document* topDocument = m_frame.document() ? &m_frame.document()->topDocument() : nullptr;\n+    Ref protectedFrame = m_frame;\n+    RefPtr topDocument = m_frame.document() ? &m_frame.document()->topDocument() : nullptr;\n@@ -3488,1 +3484,1 @@\n-    if (m_frame.mainFrame().eventHandler().panScrollInProgress()) {\n+    if (Ref(m_frame.mainFrame())->eventHandler().panScrollInProgress()) {\n@@ -3626,1 +3622,1 @@\n-    Document* document = frame.document();\n+    RefPtr document = frame.document();\n@@ -3635,1 +3631,1 @@\n-    Element* focusedElement = document->focusedElement();\n+    RefPtr focusedElement = document->focusedElement();\n@@ -3642,1 +3638,1 @@\n-            visiblePosition = VisiblePosition(positionBeforeNode(focusedElement));\n+            visiblePosition = VisiblePosition(positionBeforeNode(focusedElement.get()));\n@@ -3644,1 +3640,1 @@\n-            visiblePosition = endOfDocument(document);\n+            visiblePosition = endOfDocument(document.get());\n@@ -3649,1 +3645,1 @@\n-            visiblePosition = VisiblePosition(positionAfterNode(focusedElement));\n+            visiblePosition = VisiblePosition(positionAfterNode(focusedElement.get()));\n@@ -3651,1 +3647,1 @@\n-            visiblePosition = startOfDocument(document);\n+            visiblePosition = startOfDocument(document.get());\n@@ -3811,2 +3807,2 @@\n-    for (Frame* frame = &page.mainFrame(); frame; frame = frame->tree().traverseNext()) {\n-        if (auto* document = frame->document())\n+    for (RefPtr frame = &page.mainFrame(); frame; frame = frame->tree().traverseNext()) {\n+        if (RefPtr document = frame->document())\n@@ -4186,1 +4182,0 @@\n-\n@@ -4393,3 +4388,4 @@\n-            } else if (m_originatingTouchPointDocument.get() && m_originatingTouchPointDocument->frame()) {\n-                LayoutPoint pagePointInOriginatingDocument = documentPointForWindowPoint(*m_originatingTouchPointDocument->frame(), point.pos());\n-                result = hitTestResultInFrame(m_originatingTouchPointDocument->frame(), pagePointInOriginatingDocument, hitType);\n+            } else if (m_originatingTouchPointDocument && m_originatingTouchPointDocument->frame()) {\n+                Ref frame = *m_originatingTouchPointDocument->frame();\n+                LayoutPoint pagePointInOriginatingDocument = documentPointForWindowPoint(frame, point.pos());\n+                result = hitTestResultInFrame(frame.ptr(), pagePointInOriginatingDocument, hitType);\n@@ -4401,1 +4397,1 @@\n-            Element* element = result.targetElement();\n+            RefPtr element = result.targetElement();\n@@ -4436,1 +4432,1 @@\n-        auto* targetFrame = document.frame();\n+        RefPtr targetFrame = document.frame();\n@@ -4450,1 +4446,1 @@\n-        auto touch = Touch::create(targetFrame, touchTarget.get(), point.id(),\n+        auto touch = Touch::create(targetFrame.get(), touchTarget.get(), point.id(),\n@@ -4577,1 +4573,1 @@\n-    return downcast<FrameView>(widget).frame().eventHandler().handleWheelEvent(event, processingSteps);\n+    return Ref(downcast<FrameView>(widget).frame())->eventHandler().handleWheelEvent(event, processingSteps);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/EventHandler.cpp","additions":104,"deletions":108,"binary":false,"changes":212,"status":"modified"},{"patch":"@@ -1407,1 +1407,1 @@\n-    m_activityStateChangeObservers.add(&observer);\n+    m_activityStateChangeObservers.add(observer);\n@@ -1412,1 +1412,1 @@\n-    m_activityStateChangeObservers.remove(&observer);\n+    m_activityStateChangeObservers.remove(observer);\n@@ -2258,2 +2258,2 @@\n-    for (auto* observer : m_activityStateChangeObservers)\n-        observer->activityStateDidChange(oldActivityState, m_activityState);\n+    for (auto& observer : m_activityStateChangeObservers)\n+        observer.activityStateDidChange(oldActivityState, m_activityState);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/Page.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+#include <wtf\/WeakHashSet.h>\n@@ -1059,1 +1060,1 @@\n-    HashSet<ActivityStateChangeObserver*> m_activityStateChangeObservers;\n+    WeakHashSet<ActivityStateChangeObserver> m_activityStateChangeObservers;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/Page.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"EventLoop.h\"\n@@ -60,1 +61,1 @@\n-    , m_resourceTimingBufferFullTimer(*this, &Performance::resourceTimingBufferFullTimerFired)\n+    , m_resourceTimingBufferFullTimer(*this, &Performance::resourceTimingBufferFullTimerFired) \/\/ FIXME: Migrate this to the event loop as well.\n@@ -62,1 +63,0 @@\n-    , m_performanceTimelineTaskQueue(context)\n@@ -65,1 +65,0 @@\n-    ASSERT(context || m_performanceTimelineTaskQueue.isClosed());\n@@ -72,1 +71,0 @@\n-    m_performanceTimelineTaskQueue.close();\n@@ -371,1 +369,1 @@\n-    if (m_performanceTimelineTaskQueue.hasPendingTasks())\n+    if (m_hasScheduledTimingBufferDeliveryTask)\n@@ -374,1 +372,11 @@\n-    m_performanceTimelineTaskQueue.enqueueTask([this] () {\n+    auto* context = scriptExecutionContext();\n+    if (!context)\n+        return;\n+\n+    m_hasScheduledTimingBufferDeliveryTask = true;\n+    context->eventLoop().queueTask(TaskSource::PerformanceTimeline, [protectedThis = makeRef(*this), this] {\n+        auto* context = scriptExecutionContext();\n+        if (!context)\n+            return;\n+\n+        m_hasScheduledTimingBufferDeliveryTask = false;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/Performance.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-#include \"GenericTaskQueue.h\"\n@@ -41,0 +40,2 @@\n+#include \"ScriptExecutionContext.h\"\n+#include \"Timer.h\"\n@@ -137,0 +138,1 @@\n+    bool m_hasScheduledTimingBufferDeliveryTask { false };\n@@ -143,1 +145,0 @@\n-    GenericTaskQueue<ScriptExecutionContext> m_performanceTimelineTaskQueue;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/Performance.h","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-    auto& frame = *this->frame();\n+    auto frame = makeRef(*this->frame());\n@@ -199,1 +199,1 @@\n-    FloatSize minLayoutSize = frame.resizePageRectsKeepingRatio(originalPageSize, FloatSize(width * minimumShrinkFactor(), height * minimumShrinkFactor()));\n+    FloatSize minLayoutSize = frame->resizePageRectsKeepingRatio(originalPageSize, FloatSize(width * minimumShrinkFactor(), height * minimumShrinkFactor()));\n@@ -202,1 +202,1 @@\n-    frame.setPrinting(true, minLayoutSize, originalPageSize, maximumShrinkFactor() \/ minimumShrinkFactor(), AdjustViewSize);\n+    frame->setPrinting(true, minLayoutSize, originalPageSize, maximumShrinkFactor() \/ minimumShrinkFactor(), AdjustViewSize);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/page\/PrintContext.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-    if (a.getOperator() != b.getOperator())\n+    if (a.getOperator() != b.getOperator() || a.destinationCategory() != b.destinationCategory())\n@@ -185,1 +185,1 @@\n-    \/\/ Maybe Vectors of unique_ptrs should always do deep compare?\n+    \/\/ FIXME: Would be nice to have a helper function for doing a deep compare on a vector of pointers.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/CalculationValue.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,0 +45,13 @@\n+\/\/ FIXME: Find a way to unify this with CSSPrimitiveValue::UnitCategory?\n+enum class CalculationCategory : uint8_t {\n+    Number,\n+    Length,\n+    Percent,\n+    PercentNumber,\n+    PercentLength,\n+    Angle,\n+    Time,\n+    Frequency,\n+    Other\n+};\n+\n@@ -154,1 +167,1 @@\n-    CalcExpressionOperation(Vector<std::unique_ptr<CalcExpressionNode>>&& children, CalcOperator);\n+    CalcExpressionOperation(Vector<std::unique_ptr<CalcExpressionNode>>&& children, CalcOperator, CalculationCategory destinationCategory = CalculationCategory::Other);\n@@ -157,0 +170,1 @@\n+    CalculationCategory destinationCategory() const { return m_destinationCategory; }\n@@ -167,0 +181,1 @@\n+    CalculationCategory m_destinationCategory { CalculationCategory::Other };\n@@ -240,1 +255,1 @@\n-inline CalcExpressionOperation::CalcExpressionOperation(Vector<std::unique_ptr<CalcExpressionNode>>&& children, CalcOperator op)\n+inline CalcExpressionOperation::CalcExpressionOperation(Vector<std::unique_ptr<CalcExpressionNode>>&& children, CalcOperator op, CalculationCategory destinationCategory)\n@@ -244,0 +259,1 @@\n+    , m_destinationCategory(destinationCategory)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/CalculationValue.h","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-class TaskDispatcher<Timer> : public CanMakeWeakPtr<TaskDispatcher<Timer>> {\n+class TaskDispatcher<Timer> : public CanMakeWeakPtr<TaskDispatcher<Timer>, WeakPtrFactoryInitialization::Eager> {\n@@ -85,0 +85,1 @@\n+        ASSERT(isMainThread());\n@@ -90,0 +91,1 @@\n+        ASSERT(isMainThread());\n@@ -96,0 +98,1 @@\n+        ASSERT(isMainThread());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/GenericTaskQueue.h","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (C) 2006-2016 Apple Inc. All rights reserved.\n+ * Copyright (C) 2006-2021 Apple Inc. All rights reserved.\n@@ -348,1 +348,6 @@\n-    const int length = string.length();\n+    const size_t length = string.length();\n+    if constexpr (String::MaxLength > std::numeric_limits<size_t>::max() \/ 3) {\n+        if (length > std::numeric_limits<size_t>::max() \/ 3)\n+            return nullptr;\n+    }\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/SharedBuffer.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -406,1 +406,1 @@\n-static bool keysMatch(const FontCascadeCacheKey& a, const FontCascadeCacheKey& b)\n+bool operator==(const FontCascadeCacheKey& a, const FontCascadeCacheKey& b)\n@@ -422,0 +422,12 @@\n+unsigned FontCascadeCacheKeyHash::hash(const FontCascadeCacheKey& key)\n+{\n+    \/\/ FIXME: Should hash the key and the family name characters rather than making a hash out of other hashes.\n+    Hasher hasher;\n+    add(hasher, key.fontDescriptionKey.computeHash());\n+    add(hasher, key.fontSelectorId);\n+    add(hasher, key.fontSelectorVersion);\n+    for (auto& family : key.families)\n+        add(hasher, family.isNull() ? 0 : WebCore::FontCascadeDescription::familyNameHash(family));\n+    return hasher.hash();\n+}\n+\n@@ -446,14 +458,0 @@\n-static unsigned computeFontCascadeCacheHash(const FontCascadeCacheKey& key)\n-{\n-    \/\/ FIXME: Should hash the key and the family name characters rather than making a hash out of other hashes.\n-    IntegerHasher hasher;\n-    hasher.add(key.fontDescriptionKey.computeHash());\n-    hasher.add(key.fontSelectorId);\n-    hasher.add(key.fontSelectorVersion);\n-    for (unsigned i = 0; i < key.families.size(); ++i) {\n-        auto& family = key.families[i];\n-        hasher.add(family.isNull() ? 0 : FontCascadeDescription::familyNameHash(family));\n-    }\n-    return hasher.hash();\n-}\n-\n@@ -476,4 +474,2 @@\n-\n-    unsigned hash = computeFontCascadeCacheHash(key);\n-    auto addResult = m_fontCascadeCache.add(hash, nullptr);\n-    if (!addResult.isNewEntry && keysMatch(addResult.iterator->value->key, key))\n+    auto addResult = m_fontCascadeCache.add(key, nullptr);\n+    if (!addResult.isNewEntry)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/FontCache.cpp","additions":15,"deletions":19,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include <wtf\/HashTraits.h>\n@@ -186,0 +187,2 @@\n+bool operator==(const FontCascadeCacheKey&, const FontCascadeCacheKey&);\n+\n@@ -197,2 +200,13 @@\n-\/\/ FIXME: Should make hash traits for FontCascadeCacheKey instead of using a hash as the key (so we hash a hash).\n-typedef HashMap<unsigned, std::unique_ptr<FontCascadeCacheEntry>, AlreadyHashed> FontCascadeCache;\n+struct FontCascadeCacheKeyHash {\n+    static unsigned hash(const WebCore::FontCascadeCacheKey&);\n+    static bool equal(const WebCore::FontCascadeCacheKey& a, const WebCore::FontCascadeCacheKey& b) { return a == b; }\n+    static const bool safeToCompareToEmptyOrDeleted = false;\n+};\n+\n+struct FontCascadeCacheKeyHashTraits : WTF::GenericHashTraits<WebCore::FontCascadeCacheKey> {\n+    static WebCore::FontCascadeCacheKey emptyValue() { return { }; }\n+    static void constructDeletedValue(WebCore::FontCascadeCacheKey& slot) { slot.fontSelectorId = std::numeric_limits<unsigned>::max(); }\n+    static bool isDeletedValue(const WebCore::FontCascadeCacheKey& slot) { return slot.fontSelectorId == std::numeric_limits<unsigned>::max(); }\n+};\n+\n+using FontCascadeCache = HashMap<FontCascadeCacheKey, std::unique_ptr<FontCascadeCacheEntry>, FontCascadeCacheKeyHash, FontCascadeCacheKeyHashTraits>;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/FontCache.h","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -144,0 +144,17 @@\n+SetInlineFillGradient::SetInlineFillGradient(const SetInlineFillGradient& other)\n+{\n+    if (WTF::holds_alternative<Gradient::RadialData>(other.m_data) || WTF::holds_alternative<Gradient::LinearData>(other.m_data) || WTF::holds_alternative<Gradient::ConicData>(other.m_data)) {\n+        m_data = other.m_data;\n+        m_gradientSpaceTransform = other.m_gradientSpaceTransform;\n+        m_spreadMethod = other.m_spreadMethod;\n+        m_colorStopCount = other.m_colorStopCount;\n+        if (m_colorStopCount > maxColorStopCount)\n+            m_colorStopCount = 0;\n+        for (uint8_t i = 0; i < m_colorStopCount; ++i) {\n+            m_offsets[i] = other.m_offsets[i];\n+            m_colors[i] = other.m_colors[i];\n+        }\n+    } else\n+        m_isValid = false;\n+}\n+\n@@ -562,1 +579,4 @@\n-    context.drawDotsForDocumentMarker(m_rect, m_style);\n+    context.drawDotsForDocumentMarker(m_rect, {\n+        static_cast<DocumentMarkerLineStyle::Mode>(m_styleMode),\n+        m_styleShouldUseDarkAppearance,\n+    });\n@@ -964,1 +984,2 @@\n-    context.endTransparencyLayer();\n+    if (context.isInTransparencyLayer())\n+        context.endTransparencyLayer();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/displaylists\/DisplayListItems.cpp","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include <wtf\/EnumTraits.h>\n@@ -179,0 +180,2 @@\n+    SetInlineFillGradient(const SetInlineFillGradient&);\n+    bool isValid() const { return m_isValid; }\n@@ -192,0 +195,1 @@\n+    bool m_isValid { true };\n@@ -753,1 +757,1 @@\n-    bool isValid() const { return !!m_imageBufferIdentifier; }\n+    bool isValid() const { return m_imageBufferIdentifier.isValid(); }\n@@ -1001,1 +1005,1 @@\n-    bool isValid() const { return !!m_imageBufferIdentifier; }\n+    bool isValid() const { return m_imageBufferIdentifier.isValid(); }\n@@ -1036,1 +1040,1 @@\n-    bool isValid() const { return !!m_imageIdentifier; }\n+    bool isValid() const { return m_imageIdentifier.isValid(); }\n@@ -1068,1 +1072,1 @@\n-    bool isValid() const { return !!m_imageIdentifier; }\n+    bool isValid() const { return m_imageIdentifier.isValid(); }\n@@ -1258,1 +1262,10 @@\n-    DrawDotsForDocumentMarker(const FloatRect& rect, DocumentMarkerLineStyle style)\n+    using UnderlyingDocumentMarkerLineStyleType = std::underlying_type<DocumentMarkerLineStyle::Mode>::type;\n+\n+    DrawDotsForDocumentMarker(const FloatRect& rect, const DocumentMarkerLineStyle& style)\n+        : m_rect(rect)\n+        , m_styleMode(static_cast<UnderlyingDocumentMarkerLineStyleType>(style.mode))\n+        , m_styleShouldUseDarkAppearance(style.shouldUseDarkAppearance)\n+    {\n+    }\n+\n+    DrawDotsForDocumentMarker(const FloatRect& rect, UnderlyingDocumentMarkerLineStyleType styleMode, bool styleShouldUseDarkAppearance)\n@@ -1260,1 +1273,2 @@\n-        , m_style(style)\n+        , m_styleMode(styleMode)\n+        , m_styleShouldUseDarkAppearance(styleShouldUseDarkAppearance)\n@@ -1264,0 +1278,2 @@\n+    bool isValid() const { return isValidEnum<DocumentMarkerLineStyle::Mode>(m_styleMode); }\n+\n@@ -1273,1 +1289,2 @@\n-    DocumentMarkerLineStyle m_style;\n+    UnderlyingDocumentMarkerLineStyleType m_styleMode { 0 };\n+    bool m_styleShouldUseDarkAppearance { false };\n@@ -1795,1 +1812,21 @@\n-class FillInlinePath {\n+class InlinePathDataStorage {\n+public:\n+    InlinePathDataStorage(const InlinePathData& pathData)\n+    {\n+        if (pathData.index() >= 0 && static_cast<size_t>(pathData.index()) < WTF::variant_size<InlinePathData>::value)\n+            m_pathData = pathData;\n+        else {\n+            auto moved = WTFMove(m_pathData);\n+            UNUSED_VARIABLE(moved);\n+        }\n+    }\n+\n+    bool isValid() const { return !m_pathData.valueless_by_exception(); }\n+\n+    Path path() const { return Path::from(m_pathData); }\n+\n+protected:\n+    InlinePathData m_pathData;\n+};\n+\n+class FillInlinePath : public InlinePathDataStorage {\n@@ -1801,0 +1838,4 @@\n+    FillInlinePath(const FillInlinePath& other)\n+        : InlinePathDataStorage(other.m_pathData)\n+    {\n+    }\n@@ -1802,1 +1843,1 @@\n-        : m_pathData(pathData)\n+        : InlinePathDataStorage(pathData)\n@@ -1806,2 +1847,0 @@\n-    Path path() const { return Path::from(m_pathData); }\n-\n@@ -1812,3 +1851,0 @@\n-\n-private:\n-    InlinePathData m_pathData;\n@@ -1973,1 +2009,1 @@\n-    bool isValid() const { return !!m_identifier; }\n+    bool isValid() const { return m_identifier.isValid(); }\n@@ -2038,1 +2074,1 @@\n-class StrokeInlinePath {\n+class StrokeInlinePath : public InlinePathDataStorage {\n@@ -2044,2 +2080,2 @@\n-    StrokeInlinePath(const InlinePathData& pathData)\n-        : m_pathData(pathData)\n+    StrokeInlinePath(const StrokeInlinePath& other)\n+        : InlinePathDataStorage(other.m_pathData)\n@@ -2049,1 +2085,4 @@\n-    Path path() const { return Path::from(m_pathData); }\n+    StrokeInlinePath(const InlinePathData& pathData)\n+        : InlinePathDataStorage(pathData)\n+    {\n+    }\n@@ -2055,3 +2094,0 @@\n-\n-private:\n-    InlinePathData m_pathData;\n@@ -2206,1 +2242,1 @@\n-    bool isValid() const { return !!m_identifier; }\n+    bool isValid() const { return m_identifier.isValid(); }\n@@ -2228,1 +2264,1 @@\n-    bool isValid() const { return !!m_identifier; }\n+    bool isValid() const { return m_identifier.isValid(); }\n@@ -2246,1 +2282,1 @@\n-    bool isValid() const { return !!m_identifier; }\n+    bool isValid() const { return m_identifier.isValid(); }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/displaylists\/DisplayListItems.h","additions":61,"deletions":25,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -59,0 +59,3 @@\n+    if (mimeType.startsWith(\"text\/plain\"))\n+        return String();\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/xdg\/MIMETypeRegistryXdg.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -924,1 +924,4 @@\n-    if (posChildNeedsLayout() || canContainFixedPosObjects)\n+    if (posChildNeedsLayout() || canContainFixedPosObjects) {\n+        \/\/ FIXME: Remove this early return once https:\/\/webkit.org\/b\/228125 is fixed.\n+        if (!hasPositionedObjects())\n+            return false;\n@@ -926,0 +929,1 @@\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderBlock.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -592,1 +592,1 @@\n-RenderBlock* RenderElement::containingBlockForFixedPosition() const\n+static inline RenderBlock* nearestNonAnonymousContainingBlockIncludingSelf(RenderElement* renderer)\n@@ -594,5 +594,2 @@\n-    auto* renderer = parent();\n-    while (renderer && !renderer->canContainFixedPositionObjects())\n-        renderer = renderer->parent();\n-\n-    ASSERT(!renderer || !renderer->isAnonymousBlock());\n+    while (renderer && (!is<RenderBlock>(*renderer) || renderer->isAnonymousBlock()))\n+        renderer = renderer->containingBlock();\n@@ -602,1 +599,1 @@\n-RenderBlock* RenderElement::containingBlockForAbsolutePosition() const\n+RenderBlock* RenderElement::containingBlockForFixedPosition() const\n@@ -604,5 +601,5 @@\n-    auto nearestNonAnonymousContainingBlockIncludingSelf = [&] (auto* renderer) {\n-        while (renderer && (!is<RenderBlock>(*renderer) || renderer->isAnonymousBlock()))\n-            renderer = renderer->containingBlock();\n-        return downcast<RenderBlock>(renderer);\n-    };\n+    auto* ancestor = parent();\n+    while (ancestor && !ancestor->canContainFixedPositionObjects())\n+        ancestor = ancestor->parent();\n+    return nearestNonAnonymousContainingBlockIncludingSelf(ancestor);\n+}\n@@ -610,0 +607,2 @@\n+RenderBlock* RenderElement::containingBlockForAbsolutePosition() const\n+{\n@@ -2180,2 +2179,2 @@\n-        \/\/ Relatively positioned inline boxes can have absolutely positioned block children. We need to reset them as well.\n-        for (auto& descendant : childrenOfType<RenderBlock>(*this))\n+        \/\/ Relatively positioned inline boxes can have absolutely positioned block descendants. We need to reset them as well.\n+        for (auto& descendant : descendantsOfType<RenderBlock>(*this))\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderElement.cpp","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+    \/\/ Note that even if these 2 \"canContain\" functions return true for a particular renderer, it does not necessarily mean the renderer is the containing block (see containingBlockForAbsolute(Fixed)Position).\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderElement.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"InspectorInstrumentation.h\"\n@@ -59,0 +60,2 @@\n+\n+    InspectorInstrumentation::nodeLayoutContextChanged(element, this);\n@@ -61,1 +64,4 @@\n-RenderGrid::~RenderGrid() = default;\n+RenderGrid::~RenderGrid()\n+{\n+    InspectorInstrumentation::nodeLayoutContextChanged(element(), nullptr);\n+}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderGrid.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -177,0 +177,1 @@\n+    RELEASE_ASSERT_WITH_SECURITY_IMPLICATION(isInline());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderLineBreak.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1096,1 +1096,3 @@\n-            delete m_inlineBoxWrapper;\n+            setNeedsLayoutAndPrefWidthsRecalc();\n+            if (m_inlineBoxWrapper)\n+                m_inlineBoxWrapper->dirtyLineBoxes();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderListMarker.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1153,1 +1153,0 @@\n-    auto oldRenderer = this->renderer();\n@@ -1155,1 +1154,0 @@\n-    didChangeRenderer(oldRenderer);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/RenderObject.h","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1239,1 +1239,3 @@\n-        m_lineBreak.increment();\n+        auto overflowingBoxIsInlineLevelBox = m_lineBreak.renderer() && !m_lineBreak.renderer()->isFloatingOrOutOfFlowPositioned();\n+        if (overflowingBoxIsInlineLevelBox)\n+            m_lineBreak.increment();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/line\/BreakingContext.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -104,0 +104,1 @@\n+            child->layoutIfNeeded();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/mathml\/RenderMathMLRow.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -356,1 +356,5 @@\n-        if (fallbackColor.isValid()) {\n+        if (!fallbackColor.isValid()) {\n+            m_paintingResource = nullptr;\n+            return false;\n+        }\n+\n@@ -361,1 +365,3 @@\n-            m_paintingResource->applyResource(renderer, style, context, paintingResourceMode());\n+        if (!m_paintingResource->applyResource(renderer, style, context, paintingResourceMode())) {\n+            m_paintingResource = nullptr;\n+            return false;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/svg\/SVGInlineTextBox.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -428,1 +428,1 @@\n-void RenderTreeBuilder::attachToRenderElementInternal(RenderElement& parent, RenderPtr<RenderObject> child, RenderObject* beforeChild)\n+void RenderTreeBuilder::attachToRenderElementInternal(RenderElement& parent, RenderPtr<RenderObject> child, RenderObject* beforeChild, ReinsertAfterMove reinsertAfterMove)\n@@ -452,1 +452,3 @@\n-        if (is<RenderElement>(*newChild))\n+        \/\/ FIXME: needsStateReset could probably be used for multicolumn as well.\n+        auto needsStateReset = reinsertAfterMove == ReinsertAfterMove::No;\n+        if (needsStateReset && is<RenderElement>(*newChild))\n@@ -483,1 +485,1 @@\n-        attachToRenderElementInternal(to, WTFMove(childToMove), beforeChild);\n+        attachToRenderElementInternal(to, WTFMove(childToMove), beforeChild, ReinsertAfterMove::Yes);\n@@ -485,0 +487,16 @@\n+\n+    auto findBFCRootAndDestroyInlineTree = [&] {\n+        auto* containingBlock = &from;\n+        while (containingBlock) {\n+            containingBlock->setNeedsLayout();\n+            if (is<RenderBlockFlow>(*containingBlock)) {\n+                downcast<RenderBlockFlow>(*containingBlock).deleteLines();\n+                break;\n+            }\n+            containingBlock = containingBlock->containingBlock();\n+        }\n+    };\n+    \/\/ When moving a subtree out of a BFC we need to make sure that the line boxes generated for the inline tree are not accessible anymore from the renderers.\n+    \/\/ Let's find the BFC root and nuke the inline tree (At some point we are going to destroy the subtree instead of moving these renderers around.)\n+    if (is<RenderInline>(child))\n+        findBFCRootAndDestroyInlineTree();\n@@ -580,3 +598,0 @@\n-        \/\/ FIXME(186894): startsAffectingParent has clearly nothing to do with resetting the inline state.\n-        if (!is<RenderSVGInline>(renderer))\n-            renderer.setInline(renderer.style().isDisplayInlineType());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/updating\/RenderTreeBuilder.cpp","additions":21,"deletions":6,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -73,1 +73,2 @@\n-    void attachToRenderElementInternal(RenderElement& parent, RenderPtr<RenderObject> child, RenderObject* beforeChild = nullptr);\n+    enum class ReinsertAfterMove { No, Yes };\n+    void attachToRenderElementInternal(RenderElement& parent, RenderPtr<RenderObject> child, RenderObject* beforeChild = nullptr, ReinsertAfterMove = ReinsertAfterMove::No);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/updating\/RenderTreeBuilder.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -291,1 +291,1 @@\n-    bool canMergeAnonymousBlocks = canMergeContiguousAnonymousBlocks(oldChild, prev.get(), next.get());\n+    bool canMergeAnonymousBlocks = canCollapseAnonymousBlock == CanCollapseAnonymousBlock::Yes && canMergeContiguousAnonymousBlocks(oldChild, prev.get(), next.get());\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/updating\/RenderTreeBuilderBlock.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -240,0 +240,3 @@\n+    if (&parent != &renderingParent())\n+        renderTreePosition().invalidateNextSibling();\n+\n@@ -536,0 +539,12 @@\n+void RenderTreeUpdater::tearDownRenderersAfterSlotChange(Element& host)\n+{\n+    ASSERT(host.shadowRoot());\n+    if (!host.renderer() && !host.hasDisplayContents())\n+        return;\n+    auto* view = host.document().renderView();\n+    if (!view)\n+        return;\n+    RenderTreeBuilder builder(*view);\n+    tearDownRenderers(host, TeardownType::FullAfterSlotChange, builder);\n+}\n+\n@@ -561,0 +576,1 @@\n+            auto styleable = Styleable::fromElement(element);\n@@ -567,0 +583,8 @@\n+            case TeardownType::FullAfterSlotChange:\n+                if (&element == &root) {\n+                    \/\/ Keep animations going on the host.\n+                    if (timeline)\n+                        timeline->willChangeRendererForStyleable(styleable);\n+                    break;\n+                }\n+                FALLTHROUGH;\n@@ -568,1 +592,0 @@\n-            case TeardownType::RendererUpdateCancelingAnimations:\n@@ -571,3 +594,1 @@\n-                        timeline->cancelDeclarativeAnimationsForStyleable(Styleable::fromElement(element), WebAnimation::Silently::Yes);\n-                    else if (teardownType == TeardownType::RendererUpdateCancelingAnimations)\n-                        timeline->cancelDeclarativeAnimationsForStyleable(Styleable::fromElement(element), WebAnimation::Silently::No);\n+                        timeline->cancelDeclarativeAnimationsForStyleable(styleable, WebAnimation::Silently::Yes);\n@@ -575,0 +596,5 @@\n+                element.clearHoverAndActiveStatusBeforeDetachingRenderer();\n+                break;\n+            case TeardownType::RendererUpdateCancelingAnimations:\n+                if (timeline)\n+                    timeline->cancelDeclarativeAnimationsForStyleable(styleable, WebAnimation::Silently::No);\n@@ -582,3 +608,0 @@\n-            if (teardownType == TeardownType::Full)\n-                element.clearHoverAndActiveStatusBeforeDetachingRenderer();\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/updating\/RenderTreeUpdater.cpp","additions":30,"deletions":7,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+    static void tearDownRenderersAfterSlotChange(Element& host);\n@@ -90,1 +91,2 @@\n-    enum class TeardownType { Full, RendererUpdate, RendererUpdateCancelingAnimations };\n+    \/\/ FIXME: Use OptionSet.\n+    enum class TeardownType { Full, FullAfterSlotChange, RendererUpdate, RendererUpdateCancelingAnimations };\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/rendering\/updating\/RenderTreeUpdater.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    return m_page.mainFrame().eventHandler().handleMousePressEvent(mouseEvent);\n+    return Ref(m_page.mainFrame())->eventHandler().handleMousePressEvent(mouseEvent);\n@@ -63,1 +63,1 @@\n-    return m_page.mainFrame().eventHandler().handleMouseReleaseEvent(mouseEvent);\n+    return Ref(m_page.mainFrame())->eventHandler().handleMouseReleaseEvent(mouseEvent);\n@@ -68,1 +68,1 @@\n-    return m_page.mainFrame().eventHandler().mouseMoved(mouseEvent);\n+    return Ref(m_page.mainFrame())->eventHandler().mouseMoved(mouseEvent);\n@@ -73,1 +73,1 @@\n-    return m_page.mainFrame().eventHandler().passMouseMovedEventToScrollbars(mouseEvent);\n+    return Ref(m_page.mainFrame())->eventHandler().passMouseMovedEventToScrollbars(mouseEvent);\n@@ -78,1 +78,1 @@\n-    return m_page.mainFrame().eventHandler().handleMouseForceEvent(mouseEvent);\n+    return Ref(m_page.mainFrame())->eventHandler().handleMouseForceEvent(mouseEvent);\n@@ -83,1 +83,1 @@\n-    return m_page.focusController().focusedOrMainFrame().eventHandler().keyEvent(keyEvent);\n+    return Ref(m_page.focusController().focusedOrMainFrame())->eventHandler().keyEvent(keyEvent);\n@@ -88,1 +88,1 @@\n-    return m_page.focusController().focusedOrMainFrame().eventHandler().handleAccessKey(keyEvent);\n+    return Ref(m_page.focusController().focusedOrMainFrame())->eventHandler().handleAccessKey(keyEvent);\n@@ -93,1 +93,1 @@\n-    return m_page.mainFrame().eventHandler().handleWheelEvent(wheelEvent, processingSteps);\n+    return Ref(m_page.mainFrame())->eventHandler().handleWheelEvent(wheelEvent, processingSteps);\n@@ -108,1 +108,1 @@\n-    return m_page.focusController().focusedOrMainFrame().eventHandler().scrollRecursively(direction, granularity, nullptr);\n+    return Ref(m_page.focusController().focusedOrMainFrame())->eventHandler().scrollRecursively(direction, granularity, nullptr);\n@@ -113,1 +113,1 @@\n-    return m_page.focusController().focusedOrMainFrame().eventHandler().logicalScrollRecursively(direction, granularity, nullptr);\n+    return Ref(m_page.focusController().focusedOrMainFrame())->eventHandler().logicalScrollRecursively(direction, granularity, nullptr);\n@@ -121,1 +121,1 @@\n-    m_page.mainFrame().loader().load(WTFMove(request));\n+    Ref(m_page.mainFrame())->loader().load(WTFMove(request));\n@@ -139,1 +139,1 @@\n-    return m_page.mainFrame().loader().shouldClose();\n+    return Ref(m_page.mainFrame())->loader().shouldClose();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/replay\/UserInputBridge.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1802,0 +1802,21 @@\n+#define SET_TRACKS_DATA_INTERNAL(tracksData, style, parentStyle, TrackType) \\\n+    ASSERT(tracksData || parentStyle); \\\n+    style.setGrid##TrackType##s(tracksData ? tracksData->m_trackSizes : parentStyle->grid##TrackType##s()); \\\n+    style.setNamedGrid##TrackType##Lines(tracksData ? tracksData->m_namedGridLines : parentStyle->namedGrid##TrackType##Lines()); \\\n+    style.setOrderedNamedGrid##TrackType##Lines(tracksData ? tracksData->m_orderedNamedGridLines : parentStyle->orderedNamedGrid##TrackType##Lines()); \\\n+    style.setGridAutoRepeat##TrackType##s(tracksData ? tracksData->m_autoRepeatTrackSizes : parentStyle->gridAutoRepeat##TrackType##s()); \\\n+    style.setGridAutoRepeat##TrackType##sInsertionPoint(tracksData ? tracksData->m_autoRepeatInsertionPoint : parentStyle->gridAutoRepeat##TrackType##sInsertionPoint()); \\\n+    style.setAutoRepeatNamedGrid##TrackType##Lines(tracksData ? tracksData->m_autoRepeatNamedGridLines : parentStyle->autoRepeatNamedGrid##TrackType##Lines()); \\\n+    style.setAutoRepeatOrderedNamedGrid##TrackType##Lines(tracksData ? tracksData->m_autoRepeatOrderedNamedGridLines : parentStyle->autoRepeatOrderedNamedGrid##TrackType##Lines()); \\\n+    style.setGridAutoRepeat##TrackType##sType(tracksData ? tracksData->m_autoRepeatType : parentStyle->gridAutoRepeat##TrackType##sType());\n+\n+#define SET_INHERIT_TRACKS_DATA(style, parentStyle, TrackType) \\\n+    BuilderConverter::TracksData* tracksData = nullptr; \\\n+    const RenderStyle* parentStylePointer = &parentStyle; \\\n+    SET_TRACKS_DATA_INTERNAL(tracksData, style, parentStylePointer, TrackType)\n+\n+#define SET_TRACKS_DATA(tracksData, style, TrackType) \\\n+    BuilderConverter::TracksData* tracksDataPointer = &tracksData; \\\n+    const RenderStyle* parentStyle = nullptr; \\\n+    SET_TRACKS_DATA_INTERNAL(tracksDataPointer, style, parentStyle, TrackType)\n+\n@@ -1804,3 +1825,2 @@\n-    builderState.style().setGridColumns(RenderStyle::initialGridColumns());\n-    builderState.style().setNamedGridColumnLines(RenderStyle::initialNamedGridColumnLines());\n-    builderState.style().setOrderedNamedGridColumnLines(RenderStyle::initialOrderedNamedGridColumnLines());\n+    BuilderConverter::TracksData initialTracksData;\n+    SET_TRACKS_DATA(initialTracksData, builderState.style(), Column);\n@@ -1811,3 +1831,1 @@\n-    builderState.style().setGridColumns(builderState.parentStyle().gridColumns());\n-    builderState.style().setNamedGridColumnLines(builderState.parentStyle().namedGridColumnLines());\n-    builderState.style().setOrderedNamedGridColumnLines(builderState.parentStyle().orderedNamedGridColumnLines());\n+    SET_INHERIT_TRACKS_DATA(builderState.style(), builderState.parentStyle(), Column);\n@@ -1816,11 +1834,0 @@\n-#define SET_TRACKS_DATA(tracksData, style, TrackType) \\\n-    style.setGrid##TrackType##s(tracksData.m_trackSizes); \\\n-    style.setNamedGrid##TrackType##Lines(tracksData.m_namedGridLines); \\\n-    style.setOrderedNamedGrid##TrackType##Lines(tracksData.m_orderedNamedGridLines); \\\n-    style.setGridAutoRepeat##TrackType##s(tracksData.m_autoRepeatTrackSizes); \\\n-    style.setGridAutoRepeat##TrackType##sInsertionPoint(tracksData.m_autoRepeatInsertionPoint); \\\n-    style.setAutoRepeatNamedGrid##TrackType##Lines(tracksData.m_autoRepeatNamedGridLines); \\\n-    style.setAutoRepeatOrderedNamedGrid##TrackType##Lines(tracksData.m_autoRepeatOrderedNamedGridLines); \\\n-    style.setGridAutoRepeat##TrackType##sType(tracksData.m_autoRepeatType); \\\n-    style.setGridAutoRepeat##TrackType##sInsertionPoint(tracksData.m_autoRepeatInsertionPoint);\n-\n@@ -1841,3 +1848,2 @@\n-    builderState.style().setGridRows(RenderStyle::initialGridRows());\n-    builderState.style().setNamedGridRowLines(RenderStyle::initialNamedGridRowLines());\n-    builderState.style().setOrderedNamedGridRowLines(RenderStyle::initialOrderedNamedGridRowLines());\n+    BuilderConverter::TracksData initialTracksData;\n+    SET_TRACKS_DATA(initialTracksData, builderState.style(), Row);\n@@ -1848,3 +1854,1 @@\n-    builderState.style().setGridRows(builderState.parentStyle().gridRows());\n-    builderState.style().setNamedGridRowLines(builderState.parentStyle().namedGridRowLines());\n-    builderState.style().setOrderedNamedGridRowLines(builderState.parentStyle().orderedNamedGridRowLines());\n+    SET_INHERIT_TRACKS_DATA(builderState.style(), builderState.parentStyle(), Row);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/style\/StyleBuilderCustom.h","additions":27,"deletions":23,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-    if (!element.rendererIsEverNeeded())\n+    if (!element.rendererIsEverNeeded() && !element.hasDisplayContents())\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/style\/StyleTreeResolver.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -499,1 +499,1 @@\n-    ASSERT_WITH_SECURITY_IMPLICATION(toPercent > fromPercent);\n+    ASSERT(toPercent > fromPercent);\n@@ -593,31 +593,0 @@\n-void SVGAnimationElement::computeCSSPropertyValue(SVGElement* element, CSSPropertyID id, String& valueString)\n-{\n-    ASSERT(element);\n-\n-    \/\/ Don't include any properties resulting from CSS Transitions\/Animations or SMIL animations, as we want to retrieve the \"base value\".\n-    element->setUseOverrideComputedStyle(true);\n-    RefPtr<CSSValue> value = ComputedStyleExtractor(element).propertyValue(id);\n-    valueString = value ? value->cssText() : String();\n-    element->setUseOverrideComputedStyle(false);\n-}\n-\n-static bool inheritsFromProperty(SVGElement* targetElement, const QualifiedName& attributeName, const String& value)\n-{\n-    static MainThreadNeverDestroyed<const AtomString> inherit(\"inherit\", AtomString::ConstructFromLiteral);\n-\n-    if (value.isEmpty() || value != inherit)\n-        return false;\n-    return targetElement->isAnimatedStyleAttribute(attributeName);\n-}\n-\n-void SVGAnimationElement::determinePropertyValueTypes(const String& from, const String& to)\n-{\n-    auto targetElement = makeRefPtr(this->targetElement());\n-    ASSERT(targetElement);\n-\n-    const QualifiedName& attributeName = this->attributeName();\n-    if (inheritsFromProperty(targetElement.get(), attributeName, from))\n-        m_fromPropertyValueType = InheritValue;\n-    if (inheritsFromProperty(targetElement.get(), attributeName, to))\n-        m_toPropertyValueType = InheritValue;\n-}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/SVGAnimationElement.cpp","additions":1,"deletions":32,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -82,3 +82,0 @@\n-    void computeCSSPropertyValue(SVGElement*, CSSPropertyID, String& value);\n-    virtual void determinePropertyValueTypes(const String& from, const String& to);\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/SVGAnimationElement.h","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -158,2 +158,2 @@\n-SVGElement::SVGElement(const QualifiedName& tagName, Document& document)\n-    : StyledElement(tagName, document, CreateSVGElement)\n+SVGElement::SVGElement(const QualifiedName& tagName, Document& document, ConstructionType constructionType)\n+    : StyledElement(tagName, document, constructionType)\n@@ -296,0 +296,1 @@\n+    \/\/ FIXME: should retrieve the value from the associated RenderObject.\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/SVGElement.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-    SVGElement(const QualifiedName&, Document&);\n+    SVGElement(const QualifiedName&, Document&, ConstructionType = CreateSVGElement);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/SVGElement.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        : SVGElement(tagName, document)\n+        : SVGElement(tagName, document, CreateSVGElement | NodeFlag::IsUnknownElement)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/SVGUnknownElement.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-static inline void disassociateAndRemoveClones(const Vector<Element*>& clones)\n+static inline void disassociateAndRemoveClones(const Vector<Ref<Element>>& clones)\n@@ -315,1 +315,1 @@\n-        for (auto& descendant : descendantsOfType<SVGElement>(*clone))\n+        for (auto& descendant : descendantsOfType<SVGElement>(clone.get()))\n@@ -318,2 +318,2 @@\n-            downcast<SVGElement>(*clone).setCorrespondingElement(nullptr);\n-        clone->parentNode()->removeChild(*clone);\n+            downcast<SVGElement>(clone.get()).setCorrespondingElement(nullptr);\n+        clone->remove();\n@@ -333,1 +333,1 @@\n-    Vector<Element*> disallowedElements;\n+    Vector<Ref<Element>> disallowedElements;\n@@ -336,1 +336,1 @@\n-            disallowedElements.append(&*it);\n+            disallowedElements.append(*it);\n@@ -352,3 +352,9 @@\n-    Vector<Element*> symbolElements;\n-    for (auto& descendant : descendantsOfType<SVGSymbolElement>(subtree))\n-        symbolElements.append(&descendant);\n+    Vector<Ref<Element>> symbolElements;\n+    for (auto it = descendantsOfType<Element>(subtree).begin(); it; ) {\n+        if (is<SVGSymbolElement>(*it)) {\n+            symbolElements.append(*it);\n+            it.traverseNextSkippingChildren();\n+            continue;\n+        }\n+        ++it;\n+    }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/SVGUseElement.cpp","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        String baseValue = computeCSSPropertyValue(targetElement, cssPropertyID(m_attributeName.localName()));\n+        String baseValue = computeCSSPropertyValue(*targetElement, cssPropertyID(m_attributeName.localName()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/properties\/SVGPrimitivePropertyAnimator.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-    String computeCSSPropertyValue(SVGElement* targetElement, CSSPropertyID id) const\n+    String computeCSSPropertyValue(SVGElement& targetElement, CSSPropertyID id) const\n@@ -81,1 +81,1 @@\n-        ASSERT(targetElement);\n+        auto protector = makeRefPtr(targetElement);\n@@ -84,3 +84,3 @@\n-        targetElement->setUseOverrideComputedStyle(true);\n-        RefPtr<CSSValue> value = ComputedStyleExtractor(targetElement).propertyValue(id);\n-        targetElement->setUseOverrideComputedStyle(false);\n+        targetElement.setUseOverrideComputedStyle(true);\n+        RefPtr<CSSValue> value = ComputedStyleExtractor(&targetElement).propertyValue(id);\n+        targetElement.setUseOverrideComputedStyle(false);\n@@ -98,1 +98,1 @@\n-        return computeCSSPropertyValue(&svgParent, cssPropertyID(m_attributeName.localName()));\n+        return computeCSSPropertyValue(svgParent, cssPropertyID(m_attributeName.localName()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/properties\/SVGPropertyAnimator.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        String baseValue = computeCSSPropertyValue(targetElement, cssPropertyID(m_attributeName.localName()));\n+        String baseValue = computeCSSPropertyValue(*targetElement, cssPropertyID(m_attributeName.localName()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/properties\/SVGValuePropertyAnimatorImpl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        String baseValue = computeCSSPropertyValue(targetElement, cssPropertyID(m_attributeName.localName()));\n+        String baseValue = computeCSSPropertyValue(*targetElement, cssPropertyID(m_attributeName.localName()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/svg\/properties\/SVGValuePropertyListAnimatorImpl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -510,1 +510,1 @@\n-    m_globalScopeWrapper->setConsoleClient(m_consoleClient.get());\n+    m_globalScopeWrapper->setConsoleClient(makeWeakPtr(*m_consoleClient));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/workers\/WorkerOrWorkletScriptController.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}