{"files":[{"patch":"@@ -1136,0 +1136,3 @@\n+    private LinkedList<String> mimes;\n+    private LinkedList<String> values;\n+\n@@ -1164,10 +1167,12 @@\n-                LinkedList<String> mimes = new LinkedList<String>();\n-                LinkedList<String> values = new LinkedList<String>();\n-                for (DataFormat df : db.getContentTypes()) {\n-                    \/\/TODO: extend to non-string serialized values.\n-                    \/\/Please, look at the native code.\n-                    Object content = db.getContent(df);\n-                    if (content != null) {\n-                        for (String mime : df.getIdentifiers()) {\n-                            mimes.add(mime);\n-                            values.add(content.toString());\n+                if (mimes == null || values == null) {\n+                    mimes = new LinkedList<>();\n+                    values = new LinkedList<>();\n+                    for (DataFormat df : db.getContentTypes()) {\n+                        \/\/TODO: extend to non-string serialized values.\n+                        \/\/Please, look at the native code.\n+                        Object content = db.getContent(df);\n+                        if (content != null) {\n+                            for (String mime : df.getIdentifiers()) {\n+                                mimes.add(mime);\n+                                values.add(content.toString());\n+                            }\n@@ -1205,0 +1210,2 @@\n+                   mimes = null;\n+                   values = null;\n@@ -1210,0 +1217,2 @@\n+                mimes = null;\n+                values = null;\n","filename":"modules\/javafx.web\/src\/main\/java\/javafx\/scene\/web\/WebView.java","additions":19,"deletions":10,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+import javafx.application.Application;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.input.DragEvent;\n+import javafx.scene.layout.HBox;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.web.WebView;\n+import javafx.stage.Stage;\n+\n+public class DNDWebViewTest extends Application {\n+\n+    private static long time;\n+    private static long initialTime;\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception {\n+        final WebView webView = new WebView();\n+\n+        final Button offlineButton = new Button(\"Offline test\");\n+        final Button onlineButton = new Button(\"Online test\");\n+        offlineButton.setOnAction(e -> webView.getEngine().load(getClass().getResource(\"drag.html\").toExternalForm()));\n+        onlineButton.setOnAction(e -> webView.getEngine().load(\"https:\/\/openjdk.java.net\"));\n+\n+        final Label instructions = new Label(\"Select a test and drag the images\");\n+        final Label readTime = new Label(\"\");\n+\n+        webView.addEventHandler(DragEvent.DRAG_ENTERED, e -> {\n+            time = System.currentTimeMillis();\n+            initialTime = -1;\n+        });\n+        webView.addEventHandler(DragEvent.DRAG_OVER, e -> {\n+            long newTime = System.currentTimeMillis();\n+            if (initialTime == -1) {\n+                initialTime = newTime - time;\n+            }\n+            readTime.setText(\"DND image read interval = \" + (newTime - time) + \" ms, initial delay = \" + initialTime + \" ms\");\n+            time = newTime;\n+        });\n+\n+        VBox root = new VBox(20, instructions, new HBox(20, offlineButton, onlineButton), readTime, webView);\n+        primaryStage.setScene(new Scene(root, 800, 600));\n+        primaryStage.show();\n+    }\n+}\n","filename":"tests\/manual\/web\/dnd\/DNDWebViewTest.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"filename":"tests\/manual\/web\/dnd\/blue.png","binary":true,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>Title<\/title>\n+<\/head>\n+<body>\n+<img src=\"blue.png\"\/>\n+<a href=\"#\">\n+    <img src=\"red.png\"\/>\n+<\/a>\n+<\/body>\n+<\/html>\n","filename":"tests\/manual\/web\/dnd\/drag.html","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"filename":"tests\/manual\/web\/dnd\/red.png","binary":true,"status":"added"}]}