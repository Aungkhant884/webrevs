{"files":[{"patch":"@@ -235,0 +235,14 @@\n+\n+    public static <S> boolean isTreeItemIncludingAncestorsExpanded(TreeItem<S> item) {\n+        if (item == null || !item.isExpanded()) {\n+            return false;\n+        }\n+        TreeItem<S> ancestor = item.getParent();\n+        while (ancestor != null) {\n+            if (!ancestor.isExpanded()) {\n+                return false;\n+            }\n+            ancestor = ancestor.getParent();\n+        }\n+        return true;\n+    }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/ControlUtils.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2613,1 +2613,1 @@\n-                        shift += treeItem.isExpanded() ? addedSize : 0;\n+                        shift += ControlUtils.isTreeItemIncludingAncestorsExpanded(treeItem) ? addedSize : 0;\n@@ -2649,1 +2649,1 @@\n-                        if (treeItem.isExpanded()) {\n+                        if (ControlUtils.isTreeItemIncludingAncestorsExpanded(treeItem)) {\n@@ -3493,1 +3493,1 @@\n-                        if (eventTreeItem.isExpanded()) {\n+                        if (ControlUtils.isTreeItemIncludingAncestorsExpanded(eventTreeItem)) {\n@@ -3515,1 +3515,1 @@\n-                        if (e.getTreeItem().isExpanded()) {\n+                        if (ControlUtils.isTreeItemIncludingAncestorsExpanded(e.getTreeItem())) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeTableView.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1401,1 +1401,1 @@\n-                    shift += treeItem.isExpanded() ? addedSize : 0;\n+                    shift += ControlUtils.isTreeItemIncludingAncestorsExpanded(treeItem) ? addedSize : 0;\n@@ -1429,1 +1429,1 @@\n-                    if (treeItem.isExpanded()) {\n+                    if (ControlUtils.isTreeItemIncludingAncestorsExpanded(treeItem)) {\n@@ -1678,1 +1678,1 @@\n-                        if (eventTreeItem.isExpanded()) {\n+                        if (ControlUtils.isTreeItemIncludingAncestorsExpanded(eventTreeItem)) {\n@@ -1700,1 +1700,1 @@\n-                        if (e.getTreeItem().isExpanded()) {\n+                        if (ControlUtils.isTreeItemIncludingAncestorsExpanded(e.getTreeItem())) {\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TreeView.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -6835,0 +6835,83 @@\n+    \/\/ JDK-8286261\n+    @Test\n+    public void testAddTreeItemToCollapsedAncestorKeepsSelectedItem() {\n+        TreeItem<String> rootNode = new TreeItem<>(\"Root\");\n+        rootNode.setExpanded(true);\n+        TreeItem<String> level1 = new TreeItem<>(\"Node 0\");\n+        level1.setExpanded(false);\n+        TreeItem<String> level2 = new TreeItem<>(\"Node 1\");\n+        level2.getChildren().add(new TreeItem<>(\"Node 2\"));\n+        level2.setExpanded(true);\n+\n+        rootNode.getChildren().add(level1);\n+        rootNode.getChildren().add(new TreeItem<>(\"Node 3\"));\n+\n+        level1.getChildren().add(level2);\n+\n+        TreeTableColumn<String, String> column = new TreeTableColumn<>(\"Nodes\");\n+        column.setCellValueFactory(p -> new ReadOnlyStringWrapper(p.getValue().getValue()));\n+        column.setPrefWidth(200);\n+\n+        TreeTableView<String> table = new TreeTableView<>(rootNode);\n+        table.setShowRoot(false);\n+        table.getColumns().add(column);\n+        table.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);\n+\n+        table.getSelectionModel().select(level1);\n+        assertEquals(0, table.getSelectionModel().getSelectedIndex());\n+        assertEquals(\"Node 0\", table.getSelectionModel().getSelectedItem().getValue());\n+        assertEquals(0, table.getFocusModel().getFocusedIndex());\n+        assertEquals(\"Node 0\", table.getFocusModel().getFocusedItem().getValue());\n+\n+        \/\/ add new node at level 3, that has a collapsed ancestor\n+        level2.getChildren().add(new TreeItem<>(\"Node 4\"));\n+\n+        \/\/ selection and focus remain at level1\n+        assertEquals(0, table.getSelectionModel().getSelectedIndex());\n+        assertEquals(\"Node 0\", table.getSelectionModel().getSelectedItem().getValue());\n+        assertEquals(0, table.getFocusModel().getFocusedIndex());\n+        assertEquals(\"Node 0\", table.getFocusModel().getFocusedItem().getValue());\n+    }\n+\n+    \/\/ JDK-8286261\n+    @Test\n+    public void testRemoveTreeItemFromCollapsedAncestorKeepsSelectedItem() {\n+        TreeItem<String> rootNode = new TreeItem<>(\"Root\");\n+        rootNode.setExpanded(true);\n+        TreeItem<String> level1 = new TreeItem<>(\"Node 0\");\n+        level1.setExpanded(false);\n+        TreeItem<String> level2 = new TreeItem<>(\"Node 1\");\n+        level2.getChildren().add(new TreeItem<>(\"Node 2\"));\n+        level2.getChildren().add(new TreeItem<>(\"Node 3\"));\n+\n+        level2.setExpanded(true);\n+\n+        rootNode.getChildren().add(level1);\n+        rootNode.getChildren().add(new TreeItem<>(\"Node 4\"));\n+\n+        level1.getChildren().add(level2);\n+\n+        TreeTableColumn<String, String> column = new TreeTableColumn<>(\"Nodes\");\n+        column.setCellValueFactory(p -> new ReadOnlyStringWrapper(p.getValue().getValue()));\n+        column.setPrefWidth(200);\n+\n+        TreeTableView<String> table = new TreeTableView<>(rootNode);\n+        table.setShowRoot(false);\n+        table.getColumns().add(column);\n+        table.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);\n+\n+        table.getSelectionModel().select(level1);\n+        assertEquals(0, table.getSelectionModel().getSelectedIndex());\n+        assertEquals(\"Node 0\", table.getSelectionModel().getSelectedItem().getValue());\n+        assertEquals(0, table.getFocusModel().getFocusedIndex());\n+        assertEquals(\"Node 0\", table.getFocusModel().getFocusedItem().getValue());\n+\n+        \/\/ remove Node 2 at level 3, that has a collapsed ancestor\n+        level2.getChildren().remove(0);\n+\n+        \/\/ selection and focus remain at level1\n+        assertEquals(0, table.getSelectionModel().getSelectedIndex());\n+        assertEquals(\"Node 0\", table.getSelectionModel().getSelectedItem().getValue());\n+        assertEquals(0, table.getFocusModel().getFocusedIndex());\n+        assertEquals(\"Node 0\", table.getFocusModel().getFocusedItem().getValue());\n+    }\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeTableViewTest.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -3835,0 +3835,74 @@\n+    \/\/ JDK-8286261\n+    @Test\n+    public void testAddTreeItemToCollapsedAncestorKeepsSelectedItem() {\n+        TreeItem<String> rootNode = new TreeItem<>(\"Root\");\n+        rootNode.setExpanded(true);\n+        TreeItem<String> level1 = new TreeItem<>(\"Node 0\");\n+        level1.setExpanded(false);\n+        TreeItem<String> level2 = new TreeItem<>(\"Node 1\");\n+        level2.getChildren().add(new TreeItem<>(\"Node 2\"));\n+        level2.setExpanded(true);\n+\n+        rootNode.getChildren().add(level1);\n+        rootNode.getChildren().add(new TreeItem<>(\"Node 3\"));\n+\n+        level1.getChildren().add(level2);\n+\n+        TreeView<String> table = new TreeView<>(rootNode);\n+        table.setShowRoot(false);\n+        table.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);\n+\n+        table.getSelectionModel().select(level1);\n+        assertEquals(0, table.getSelectionModel().getSelectedIndex());\n+        assertEquals(\"Node 0\", table.getSelectionModel().getSelectedItem().getValue());\n+        assertEquals(0, table.getFocusModel().getFocusedIndex());\n+        assertEquals(\"Node 0\", table.getFocusModel().getFocusedItem().getValue());\n+\n+        \/\/ add new node at level 3, that has a collapsed ancestor\n+        level2.getChildren().add(new TreeItem<>(\"Node 4\"));\n+\n+        \/\/ selection and focus remain at level1\n+        assertEquals(0, table.getSelectionModel().getSelectedIndex());\n+        assertEquals(\"Node 0\", table.getSelectionModel().getSelectedItem().getValue());\n+        assertEquals(0, table.getFocusModel().getFocusedIndex());\n+        assertEquals(\"Node 0\", table.getFocusModel().getFocusedItem().getValue());\n+    }\n+\n+    \/\/ JDK-8286261\n+    @Test\n+    public void testRemoveTreeItemFromCollapsedAncestorKeepsSelectedItem() {\n+        TreeItem<String> rootNode = new TreeItem<>(\"Root\");\n+        rootNode.setExpanded(true);\n+        TreeItem<String> level1 = new TreeItem<>(\"Node 0\");\n+        level1.setExpanded(false);\n+        TreeItem<String> level2 = new TreeItem<>(\"Node 1\");\n+        level2.getChildren().add(new TreeItem<>(\"Node 2\"));\n+        level2.getChildren().add(new TreeItem<>(\"Node 3\"));\n+\n+        level2.setExpanded(true);\n+\n+        rootNode.getChildren().add(level1);\n+        rootNode.getChildren().add(new TreeItem<>(\"Node 4\"));\n+\n+        level1.getChildren().add(level2);\n+\n+        TreeView<String> table = new TreeView<>(rootNode);\n+        table.setShowRoot(false);\n+        table.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);\n+\n+        table.getSelectionModel().select(level1);\n+        assertEquals(0, table.getSelectionModel().getSelectedIndex());\n+        assertEquals(\"Node 0\", table.getSelectionModel().getSelectedItem().getValue());\n+        assertEquals(0, table.getFocusModel().getFocusedIndex());\n+        assertEquals(\"Node 0\", table.getFocusModel().getFocusedItem().getValue());\n+\n+        \/\/ remove Node 2 at level 3, that has a collapsed ancestor\n+        level2.getChildren().remove(0);\n+\n+        \/\/ selection and focus remain at level1\n+        assertEquals(0, table.getSelectionModel().getSelectedIndex());\n+        assertEquals(\"Node 0\", table.getSelectionModel().getSelectedItem().getValue());\n+        assertEquals(0, table.getFocusModel().getFocusedIndex());\n+        assertEquals(\"Node 0\", table.getFocusModel().getFocusedItem().getValue());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeViewTest.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"modified"}]}