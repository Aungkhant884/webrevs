{"files":[{"patch":"@@ -34,1 +34,1 @@\n-    static final Color[] OLD = createColorFamily(new Color(185, 0, 250));\n+    static final Color[] OLD = createColorFamily(new Color(120 , 146, 210));\n","filename":"src\/main\/java\/org\/openjdk\/shenandoah\/Colors.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -462,1 +462,2 @@\n-        final int STEP_X = 2;\n+        final int STEP_X = 4;\n+        final int phaseLabelWidth = 50;\n@@ -486,0 +487,12 @@\n+        protected static Phase getPhase(SnapshotView s) {\n+            if (s.youngPhase() != Phase.IDLE) {\n+                return s.youngPhase();\n+            }\n+            if (s.globalPhase() != Phase.IDLE) {\n+                return s.globalPhase();\n+            }\n+            if (s.oldPhase() != Phase.IDLE) {\n+                return s.oldPhase();\n+            }\n+            return Phase.UNKNOWN;\n+        }\n@@ -656,0 +669,3 @@\n+        int oneFourthIndex = 0;\n+        int oneHalfIndex = 0;\n+        int threeFourthIndex = 0;\n@@ -671,0 +687,1 @@\n+            int endBandIndex = (graphWidth - phaseLabelWidth) \/ STEP_X;\n@@ -675,1 +692,2 @@\n-                if (lastSnapshots.size() > graphWidth \/ STEP_X) {\n+\n+                if (lastSnapshots.size() > endBandIndex) {\n@@ -677,0 +695,14 @@\n+                    oneFourthIndex = lastSnapshots.size() \/ 4;\n+                    oneHalfIndex = lastSnapshots.size() \/ 2;\n+                    threeFourthIndex = lastSnapshots.size() * 3 \/ 4;\n+\n+                } else {\n+                    if (lastSnapshots.size() == endBandIndex \/ 4) {\n+                        oneFourthIndex = lastSnapshots.size() - 1;\n+                    }\n+                    if (lastSnapshots.size() == endBandIndex \/ 2) {\n+                        oneHalfIndex = lastSnapshots.size() - 1;\n+                    }\n+                    if (lastSnapshots.size() == endBandIndex * 3 \/ 4) {\n+                        threeFourthIndex = lastSnapshots.size() - 1;\n+                    }\n@@ -701,1 +733,1 @@\n-            int pad = 10;\n+            int pad = 30;\n@@ -703,0 +735,2 @@\n+            int bandWidth = graphWidth - phaseLabelWidth;\n+            int phaseHeight = bandHeight \/ 4;\n@@ -705,1 +739,0 @@\n-            int startDiff = graphHeight;\n@@ -709,1 +742,1 @@\n-            g.fillRect(0, 0, graphWidth, graphHeight);\n+            g.fillRect(0, 0, bandWidth, graphHeight);\n@@ -712,2 +745,2 @@\n-            g.fillRect(0, 0, graphWidth, bandHeight);\n-            g.fillRect(0, bandHeight + pad, graphWidth, bandHeight);\n+            g.fillRect(0, 0, bandWidth, bandHeight);\n+            g.fillRect(0, bandHeight + pad, bandWidth, bandHeight);\n@@ -717,1 +750,1 @@\n-            double stepX = (double) STEP_X * Math.min(lastSnapshots.size(), graphWidth) \/ (lastTime - firstTime);\n+            double stepX = (double) STEP_X * Math.min(lastSnapshots.size(), bandWidth) \/ (lastTime - firstTime);\n@@ -726,1 +759,1 @@\n-                        g.drawRect(x, 0, 1, bandHeight);\n+                        g.drawRect(x, bandHeight + pad, 1, phaseHeight);\n@@ -729,1 +762,1 @@\n-                        g.drawRect(x, 0, 1, bandHeight);\n+                        g.drawRect(x, bandHeight + pad + 2*phaseHeight, 1, phaseHeight);\n@@ -733,3 +766,0 @@\n-                g.setColor(getColor(s));\n-                g.drawRect(x, bandHeight + pad, 1, bandHeight);\n-\n@@ -742,0 +772,13 @@\n+                g.setColor(getColor(s));\n+                if (getPhase(s) == Phase.MARKING) {\n+                    g.drawRect(x, bandHeight + pad + phaseHeight, 1, phaseHeight);\n+                }\n+                if (getPhase(s) == Phase.EVACUATING) {\n+                    g.drawRect(x, bandHeight + pad + 2*phaseHeight, 1, phaseHeight);\n+                }\n+                if (getPhase(s) == Phase.UPDATE_REFS) {\n+                    g.drawRect(x, bandHeight + pad + 3*phaseHeight, 1, phaseHeight);\n+                }\n+\n+\n+\n@@ -758,3 +801,5 @@\n-                \/\/ Draw this in the lower band.\n-                final int smooth = Math.min(10, i + 1);\n-                final int mult = 50;\n+                g.setColor(Color.GRAY);\n+                g.drawString(\"OM\", bandWidth + 10, bandHeight + pad + 20);\n+                g.drawString(\"M\", bandWidth + 10, bandHeight + phaseHeight + pad + 20);\n+                g.drawString(\"E\", bandWidth + 10, bandHeight + 2*phaseHeight + pad + 20);\n+                g.drawString(\"UR\", bandWidth + 10, bandHeight + 3*phaseHeight + pad + 20);\n@@ -762,1 +807,8 @@\n-                SnapshotView ls = lastSnapshots.get(i - smooth + 1);\n+                renderTimestampLabel(g);\n+            }\n+        }\n+        public synchronized void renderTimestampLabel(Graphics g) {\n+            int pad = 30;\n+            int bandHeight = (graphHeight - pad) \/ 2;\n+            int bandWidth = graphWidth - phaseLabelWidth;\n+            int endBandIndex = (graphWidth - phaseLabelWidth) \/ STEP_X;\n@@ -764,2 +816,17 @@\n-                g.setColor(Colors.USED);\n-                g.drawRect(x, (int) Math.round(startDiff - (s.used() - ls.used()) * stepY * mult \/ smooth), 1, 1);\n+            Graphics2D g2 = (Graphics2D) g;\n+            g2.setStroke(new BasicStroke(2));\n+            g2.drawLine(0, bandHeight + 5, 0, bandHeight + pad - 5);\n+            g2.drawLine(bandWidth \/ 4, bandHeight + 5, bandWidth \/ 4, bandHeight + pad - 5);\n+            g2.drawLine(bandWidth \/ 2, bandHeight + 5, bandWidth \/ 2, bandHeight + pad - 5);\n+            g2.drawLine(bandWidth * 3 \/ 4, bandHeight + 5, bandWidth * 3 \/ 4, bandHeight + pad - 5);\n+\n+            g.drawString(\"-\" + Long.toString(lastSnapshots.get(lastSnapshots.size() - 1). time() - lastSnapshots.get(0).time()) + \" ms\", 3, bandHeight + 20);\n+\n+            if (lastSnapshots.size() > endBandIndex \/ 4 ) {\n+                g.drawString(\"-\" + Long.toString(lastSnapshots.get(lastSnapshots.size() - 1). time() - lastSnapshots.get(oneFourthIndex).time()) + \" ms\", bandWidth \/ 4 + 3, bandHeight + 20);\n+            }\n+            if (lastSnapshots.size() > endBandIndex \/ 2) {\n+                g.drawString(\"-\" + Long.toString(lastSnapshots.get(lastSnapshots.size() - 1). time() - lastSnapshots.get(oneHalfIndex).time()) + \" ms\", bandWidth \/ 2 + 3, bandHeight + 20);\n+            }\n+            if (lastSnapshots.size() > endBandIndex * 3 \/ 4) {\n+                g.drawString(\"-\" + Long.toString(lastSnapshots.get(lastSnapshots.size() - 1). time() - lastSnapshots.get(threeFourthIndex).time()) + \" ms\", bandWidth * 3 \/ 4 + 3, bandHeight + 20);\n@@ -810,4 +877,4 @@\n-            renderTimeLineLegendItem(g, LINE, Colors.OLD[1], ++line, \"Old Marking\");\n-            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[1], ++line, \"Young Marking\");\n-            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[2], ++line, \"Young Evacuation\");\n-            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[3], ++line, \"Young Update References\");\n+            renderTimeLineLegendItem(g, LINE, Colors.OLD[1], ++line, \"Old Marking (OM)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[1], ++line, \"Young Marking (M)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[2], ++line, \"Young Evacuation (E)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[3], ++line, \"Young Update References (UR)\");\n@@ -815,3 +882,3 @@\n-            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[1], ++line, \"Global Marking\");\n-            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[2], ++line, \"Global Evacuation\");\n-            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[3], ++line, \"Global Update References\");\n+            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[1], ++line, \"Global Marking (M)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[2], ++line, \"Global Evacuation (E)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[3], ++line, \"Global Update References (UR)\");\n@@ -831,0 +898,3 @@\n+        int oneFourthIndex = 0;\n+        int oneHalfIndex = 0;\n+        int threeFourthIndex = 0;\n@@ -848,0 +918,18 @@\n+        public void updateTimestampLabelIndexes() {\n+            int endBandIndex = (graphWidth - phaseLabelWidth) \/ STEP_X;\n+            if (frontSnapshotIndex > 0) {\n+                oneFourthIndex = frontSnapshotIndex + (endSnapshotIndex - frontSnapshotIndex) \/ 4;\n+                oneHalfIndex = frontSnapshotIndex + (endSnapshotIndex - frontSnapshotIndex) \/ 2;\n+                threeFourthIndex = frontSnapshotIndex + (endSnapshotIndex - frontSnapshotIndex) * 3 \/ 4;\n+            } else {\n+                if (endSnapshotIndex == endBandIndex \/ 4) {\n+                    oneFourthIndex = endSnapshotIndex - 1;\n+                }\n+                if (endSnapshotIndex == endBandIndex \/ 2) {\n+                    oneHalfIndex = endSnapshotIndex - 1;\n+                }\n+                if (endSnapshotIndex == endBandIndex * 3 \/ 4) {\n+                    threeFourthIndex = endSnapshotIndex - 1;\n+                }\n+            }\n+        }\n@@ -850,0 +938,1 @@\n+            int endBandIndex = (graphWidth - phaseLabelWidth) \/ STEP_X;\n@@ -865,1 +954,1 @@\n-                    if (endSnapshotIndex - frontSnapshotIndex > graphWidth \/ STEP_X) {\n+                    if (endSnapshotIndex - frontSnapshotIndex > endBandIndex) {\n@@ -875,1 +964,1 @@\n-                        if (lastSnapshots.size() - frontSnapshotIndex > graphWidth \/ STEP_X) {\n+                        if (lastSnapshots.size() - frontSnapshotIndex > endBandIndex) {\n@@ -883,0 +972,1 @@\n+                updateTimestampLabelIndexes();\n@@ -890,0 +980,1 @@\n+                updateTimestampLabelIndexes();\n@@ -914,0 +1005,1 @@\n+            updateTimestampLabelIndexes();\n@@ -923,0 +1015,1 @@\n+            int endBandIndex = (graphWidth - phaseLabelWidth) \/ STEP_X;\n@@ -943,0 +1036,1 @@\n+                updateTimestampLabelIndexes();\n@@ -947,1 +1041,1 @@\n-            while (endSnapshotIndex - frontSnapshotIndex > graphWidth \/ STEP_X) {\n+            while (endSnapshotIndex - frontSnapshotIndex > endBandIndex) {\n@@ -969,1 +1063,1 @@\n-            int pad = 10;\n+            int pad = 30;\n@@ -971,0 +1065,2 @@\n+            int bandWidth  = graphWidth - phaseLabelWidth;\n+            int phaseHeight = bandHeight \/ 4;\n@@ -973,1 +1069,0 @@\n-            int startDiff = graphHeight;\n@@ -977,1 +1072,1 @@\n-            g.fillRect(0, 0, graphWidth, graphHeight);\n+            g.fillRect(0, 0, bandWidth, graphHeight);\n@@ -980,2 +1075,2 @@\n-            g.fillRect(0, 0, graphWidth, bandHeight);\n-            g.fillRect(0, bandHeight + pad, graphWidth, bandHeight);\n+            g.fillRect(0, 0, bandWidth, bandHeight);\n+            g.fillRect(0, bandHeight + pad, bandWidth, bandHeight);\n@@ -985,1 +1080,1 @@\n-            double stepX = (double) STEP_X * Math.min(endSnapshotIndex - frontSnapshotIndex, graphWidth) \/ (lastTime - firstTime);\n+            double stepX = (double) STEP_X * Math.min(endSnapshotIndex - frontSnapshotIndex, bandWidth) \/ (lastTime - firstTime);\n@@ -993,1 +1088,1 @@\n-                    g.drawRect(x, 0, 1, bandHeight);\n+                    g.drawRect(x, bandHeight + pad, 1, phaseHeight);\n@@ -996,3 +1091,0 @@\n-                g.setColor(getColor(s));\n-                g.drawRect(x, bandHeight + pad, 1, bandHeight);\n-\n@@ -1005,0 +1097,11 @@\n+                g.setColor(getColor(s));\n+                if (getPhase(s) == Phase.MARKING) {\n+                    g.drawRect(x, bandHeight + pad + phaseHeight, 1, phaseHeight);\n+                }\n+                if (getPhase(s) == Phase.EVACUATING) {\n+                    g.drawRect(x, bandHeight + pad + 2*phaseHeight, 1, phaseHeight);\n+                }\n+                if (getPhase(s) == Phase.UPDATE_REFS) {\n+                    g.drawRect(x, bandHeight + pad + 3*phaseHeight, 1, phaseHeight);\n+                }\n+\n@@ -1021,3 +1124,5 @@\n-                \/\/ Draw this in the lower band.\n-                final int smooth = Math.min(10, i + 1);\n-                final int mult = 50;\n+                g.setColor(Color.GRAY);\n+                g.drawString(\"OM\", bandWidth + 10, bandHeight + pad + 20);\n+                g.drawString(\"M\", bandWidth + 10, bandHeight + phaseHeight + pad + 20);\n+                g.drawString(\"E\", bandWidth + 10, bandHeight + 2*phaseHeight + pad + 20);\n+                g.drawString(\"UR\", bandWidth + 10, bandHeight + 3*phaseHeight + pad + 20);\n@@ -1025,1 +1130,0 @@\n-                SnapshotView ls = lastSnapshots.get(i - smooth + 1);\n@@ -1027,2 +1131,18 @@\n-                g.setColor(Colors.USED);\n-                g.drawRect(x, (int) Math.round(startDiff - (s.used() - ls.used()) * stepY * mult \/ smooth), 1, 1);\n+                Graphics2D g2 = (Graphics2D) g;\n+                g2.setStroke(new BasicStroke(2));\n+                g2.drawLine(0, bandHeight + 5, 0, bandHeight + pad - 5);\n+                g2.drawLine(bandWidth \/ 4, bandHeight + 5, bandWidth \/ 4, bandHeight + pad - 5);\n+                g2.drawLine(bandWidth \/ 2, bandHeight + 5, bandWidth \/ 2, bandHeight + pad - 5);\n+                g2.drawLine(bandWidth * 3 \/ 4, bandHeight + 5, bandWidth * 3 \/ 4, bandHeight + pad - 5);\n+\n+                g.drawString(\"-\" + Long.toString(popupSnapshots.get(popupSnapshots.size() - 1).time() - popupSnapshots.get(frontSnapshotIndex).time()) + \" ms\", 3, bandHeight + 20);\n+                if (x >= bandWidth \/ 4 && popupSnapshots.size() > oneFourthIndex) {\n+                    g.drawString(\"-\" + Long.toString(popupSnapshots.get(popupSnapshots.size() - 1).time() - popupSnapshots.get(oneFourthIndex).time()) + \" ms\", bandWidth \/ 4 + 3, bandHeight + 20);\n+                }\n+                if (x >= bandWidth \/ 2 && popupSnapshots.size() > oneHalfIndex) {\n+                    g.drawString(\"-\" + Long.toString(popupSnapshots.get(popupSnapshots.size() - 1).time() -popupSnapshots.get(oneHalfIndex).time()) + \" ms\", bandWidth \/ 2 + 3, bandHeight + 20);\n+                }\n+                if (x >= bandWidth * 3 \/ 4 && popupSnapshots.size() > threeFourthIndex) {\n+                    g.drawString(\"-\" + Long.toString(popupSnapshots.get(popupSnapshots.size() - 1).time() - popupSnapshots.get(threeFourthIndex).time()) + \" ms\", bandWidth * 3 \/ 4 + 3, bandHeight + 20);\n+                }\n+\n@@ -1067,8 +1187,8 @@\n-            renderTimeLineLegendItem(g, LINE, Colors.OLD[1], ++line, \"Old Marking\");\n-            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[1], ++line, \"Young Marking\");\n-            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[2], ++line, \"Young Evacuation\");\n-            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[3], ++line, \"Young Update References\");\n-\n-            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[1], ++line, \"Global Marking\");\n-            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[2], ++line, \"Global Evacuation\");\n-            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[3], ++line, \"Global Update References\");\n+            renderTimeLineLegendItem(g, LINE, Colors.OLD[1], ++line, \"Old Marking (OM)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[1], ++line, \"Young Marking (M)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[2], ++line, \"Young Evacuation (E)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.YOUNG[3], ++line, \"Young Update References (UR)\");\n+\n+            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[1], ++line, \"Global Marking (M)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[2], ++line, \"Global Evacuation (E)\");\n+            renderTimeLineLegendItem(g, LINE, Colors.GLOBAL[3], ++line, \"Global Update References (UR)\");\n","filename":"src\/main\/java\/org\/openjdk\/shenandoah\/ShenandoahVisualizer.java","additions":173,"deletions":53,"binary":false,"changes":226,"status":"modified"},{"patch":"@@ -125,0 +125,1 @@\n+        fileNameField.setFocusable(false);\n@@ -154,0 +155,1 @@\n+        lastActionField.setFocusable(false);\n@@ -161,0 +163,1 @@\n+        modeField.setFocusable(false);\n@@ -168,0 +171,1 @@\n+        timestampField.setFocusable(false);\n@@ -448,1 +452,10 @@\n-        slider.setValue(value);\n+        if (SwingUtilities.isEventDispatchThread()){\n+            slider.setValue(value);\n+        } else {\n+            SwingUtilities.invokeLater(new Runnable() {\n+                @Override\n+                public void run() {\n+                    slider.setValue(value);\n+                }\n+            });\n+        }\n","filename":"src\/main\/java\/org\/openjdk\/shenandoah\/ToolbarPanel.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"}]}