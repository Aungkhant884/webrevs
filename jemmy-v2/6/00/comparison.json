{"files":[{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation. Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.netbeans.jemmy;\n+\n+import org.netbeans.jemmy.operators.Operator;\n+\n+import java.awt.Point;\n+import java.util.Arrays;\n+\n+public class UIStatus {\n+    \/**\n+     * Indentifier for mouse location dump property. The mouse location is saved on last mouse move performed with\n+     * this operator.\n+     * @see org.netbeans.jemmy.util.Dumper#dumpAll(String)\n+     *\/\n+    public static final String LAST_MOUSE_MOVE_DPROP = \"Last mouse move location\";\n+    public static final String LAST_MOUSE_MOVE_OPERATOR_DPROP = \"Last operator moved the mouse\";\n+\n+    private static volatile Point lastMouseMove;\n+    private static volatile Operator lastMouseMoveOperator;\n+    public static void mouseMoved(Operator oper, Point location) {\n+        Arrays.stream(Thread.currentThread().getStackTrace()).forEach(System.out::println);\n+        lastMouseMoveOperator = oper;\n+        lastMouseMove = location;\n+    }\n+\n+    public static Point lastMouseMove() {\n+        return lastMouseMove;\n+    }\n+\n+    public static Operator lastMouseMoveOperator() {\n+        return lastMouseMoveOperator;\n+    }\n+}\n","filename":"src\/org\/netbeans\/jemmy\/UIStatus.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -28,0 +28,1 @@\n+import org.netbeans.jemmy.UIStatus;\n@@ -29,0 +30,3 @@\n+import org.netbeans.jemmy.operators.Operator;\n+\n+import java.awt.Point;\n@@ -35,0 +39,4 @@\n+    static void mouseMoved(Operator oper, int x, int y) {\n+        UIStatus.mouseMoved(oper, new Point(x, y));\n+    }\n+\n","filename":"src\/org\/netbeans\/jemmy\/drivers\/MouseDriver.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import static org.netbeans.jemmy.drivers.MouseDriver.mouseMoved;\n+\n@@ -63,0 +65,1 @@\n+        mouseMoved(oper, x, y);\n@@ -71,0 +74,1 @@\n+        mouseMoved(oper, x, y);\n@@ -79,0 +83,1 @@\n+        mouseMoved(oper, x, y);\n@@ -128,0 +133,1 @@\n+        mouseMoved(oper, x, y);\n@@ -158,0 +164,1 @@\n+        mouseMoved(oper, oper.getCenterX(), oper.getCenterY());\n","filename":"src\/org\/netbeans\/jemmy\/drivers\/input\/MouseEventDriver.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,0 +91,1 @@\n+        MouseDriver.mouseMoved(oper, x, y);\n@@ -97,0 +98,1 @@\n+        MouseDriver.mouseMoved(oper, x, y);\n@@ -101,1 +103,2 @@\n-        moveMouse(getAbsoluteX(oper, x), getAbsoluteY(oper, y));\n+        moveMouse(oper, getAbsoluteX(oper, x), getAbsoluteY(oper, y));\n+        MouseDriver.mouseMoved(oper, x, y);\n@@ -107,1 +110,3 @@\n-        dragNDrop(getAbsoluteX(oper, start_x), getAbsoluteY(oper, start_y), getAbsoluteX(oper, end_x), getAbsoluteY(oper, end_y), mouseButton, modifiers, before, after);\n+        dragNDrop(getAbsoluteX(oper, start_x), getAbsoluteY(oper, start_y), getAbsoluteX(oper, end_x),\n+                getAbsoluteY(oper, end_y), mouseButton, modifiers, before, after);\n+        MouseDriver.mouseMoved(oper, end_x, end_y);\n@@ -113,0 +118,1 @@\n+        MouseDriver.mouseMoved(oper, oper.getCenterXForClick(), oper.getCenterYForClick());\n","filename":"src\/org\/netbeans\/jemmy\/drivers\/input\/MouseRobotDriver.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,1 +147,1 @@\n-            int modifiers, Timeout mouseClick) {\n+                           int modifiers, Timeout mouseClick) {\n@@ -164,1 +164,2 @@\n-    public void dragNDrop(int start_x, int start_y, int end_x, int end_y,\n+    public void dragNDrop(\n+            int start_x, int start_y, int end_x, int end_y,\n","filename":"src\/org\/netbeans\/jemmy\/drivers\/input\/RobotDriver.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import org.netbeans.jemmy.drivers.MouseDriver;\n@@ -62,1 +63,1 @@\n-        activateMenu(bar);\n+        activateMenu(oper, bar);\n@@ -95,1 +96,1 @@\n-    private void activateMenu(JMenuBar bar) {\n+    private void activateMenu(Operator oper, JMenuBar bar) {\n@@ -97,1 +98,1 @@\n-            tryToActivate();\n+            tryToActivate(oper);\n@@ -99,1 +100,1 @@\n-                tryToActivate();\n+                tryToActivate(oper);\n@@ -104,1 +105,1 @@\n-    private void tryToActivate() {\n+    private void tryToActivate(Operator oper) {\n@@ -106,0 +107,1 @@\n+        MouseDriver.mouseMoved(oper, 0, 0);\n","filename":"src\/org\/netbeans\/jemmy\/drivers\/menus\/AppleMenuDriver.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,0 +183,7 @@\n+    \/**\n+     * Identifier for focus property.\n+     *\n+     * @see #getDump\n+     *\/\n+    public static final String HAS_FOCUS_DPROP = \"Has focus\";\n+\n@@ -1304,0 +1311,1 @@\n+        result.put(HAS_FOCUS_DPROP, Boolean.toString(getSource().hasFocus()));\n","filename":"src\/org\/netbeans\/jemmy\/operators\/ComponentOperator.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/org\/netbeans\/jemmy\/operators\/Operator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.util.Objects;\n@@ -41,0 +42,1 @@\n+import org.netbeans.jemmy.UIStatus;\n@@ -223,0 +225,16 @@\n+    private static void dumpCommon(PrintWriter writer, String tab) {\n+        \/\/dump common info\n+        printTagStart(writer, \"common\", tab);\n+        printEmptyTagOpening(writer, \"property\", tab + tabIncrease);\n+        writer.print(\" name=\\\"\"\n+                + escape(UIStatus.LAST_MOUSE_MOVE_DPROP) + \"\\\" value=\\\"\"\n+                + escape(Objects.toString(UIStatus.lastMouseMove())) + \"\\\"\");\n+        printEmptyTagClosing(writer, \"property\");\n+        printEmptyTagOpening(writer, \"property\", tab + tabIncrease);\n+        writer.print(\" name=\\\"\"\n+                + escape(UIStatus.LAST_MOUSE_MOVE_OPERATOR_DPROP) + \"\\\" value=\\\"\"\n+                + escape(Objects.toString(UIStatus.lastMouseMoveOperator())) + \"\\\"\");\n+        printEmptyTagClosing(writer, \"property\");\n+        printTagEnd(writer, \"common\", tab);\n+    }\n+\n@@ -224,1 +242,1 @@\n-        if (comps.length > 0) {\n+        if (comps.length > 0 || tag.equals(\"dump\")) {\n@@ -226,3 +244,6 @@\n-            for (Component comp : comps) {\n-                dumpOne(comp, writer, tab + tabIncrease, listener);\n-            }\n+            if(tag.equals(\"dump\"))\n+                dumpCommon(writer, tab + tabIncrease);\n+            if (comps.length > 0)\n+                for (Component comp : comps) {\n+                    dumpOne(comp, writer, tab + tabIncrease, listener);\n+                }\n@@ -287,0 +308,1 @@\n+        writer.println(tab + \"<!ELEMENT common (property+)>\");\n","filename":"src\/org\/netbeans\/jemmy\/util\/Dumper.java","additions":26,"deletions":4,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-Jemmy-MinorVersion: 12.0\n+Jemmy-MinorVersion: 13.0\n","filename":"src\/org\/netbeans\/jemmy\/version_info","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation. Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.netbeans.jemmy;\n+\n+import org.netbeans.jemmy.drivers.DriverManager;\n+import org.netbeans.jemmy.drivers.LightDriver;\n+import org.netbeans.jemmy.drivers.input.MouseEventDriver;\n+import org.netbeans.jemmy.drivers.input.MouseRobotDriver;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.scenario.ComboBoxesAndListApp;\n+import org.netbeans.jemmy.scenario.Util;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import java.awt.Point;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class UIStatusTest {\n+    private static JFrameOperator fo;\n+\n+    @BeforeClass\n+    public static void setup() throws InvocationTargetException, NoSuchMethodException, IOException {\n+        Util.testInfraSetup();\n+        new ComboBoxesAndListApp().display();\n+        fo = new JFrameOperator(\"ComboBoxesAndListTest\");\n+    }\n+\n+    @DataProvider(name = \"mouseDrivers\")\n+    public Object[] mouseDrivers() {\n+        return new Object[] {new MouseRobotDriver(new Timeout(\"\", 100)), new MouseEventDriver()};\n+    }\n+\n+    private void setDriver(Object driver) {\n+        DriverManager.setDriver(DriverManager.MOUSE_DRIVER_ID, (LightDriver) driver);\n+        UIStatus.mouseMoved(null, null);\n+    }\n+\n+    @Test(dataProvider = \"mouseDrivers\")\n+    public void enter(Object driver) {\n+        setDriver(driver);\n+        JComboBoxOperator combo = new JComboBoxOperator(fo);\n+        combo.clickMouse();\n+        assertEquals(UIStatus.lastMouseMove(), new Point(combo.getCenterXForClick(), combo.getCenterYForClick()));\n+    }\n+\n+    @Test(dataProvider = \"mouseDrivers\")\n+    public void click(Object driver) {\n+        setDriver(driver);\n+        JListOperator list = new JListOperator(fo);\n+        list.clickMouse();\n+        assertEquals(UIStatus.lastMouseMove(), new Point(list.getCenterXForClick(), list.getCenterYForClick()));\n+    }\n+\n+    @Test(dataProvider = \"mouseDrivers\")\n+    public void move(Object driver) {\n+        setDriver(driver);\n+        JComboBoxOperator combo = new JComboBoxOperator(fo, 1);\n+        combo.moveMouse(1, 1);\n+        assertEquals(UIStatus.lastMouseMove(), new Point(1, 1));\n+    }\n+\n+    @Test(dataProvider = \"mouseDrivers\")\n+    public void drag(Object driver) {\n+        setDriver(driver);\n+        JListOperator list = new JListOperator(fo);\n+        list.dragNDrop(10, 10, 20, 20);\n+        assertEquals(UIStatus.lastMouseMove(), new Point(20, 20));\n+    }\n+\n+}\n","filename":"test\/org\/netbeans\/jemmy\/UIStatusTest.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation. Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.netbeans.jemmy.util;\n+\n+import org.netbeans.jemmy.UIStatus;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.scenario.ComboBoxesAndListApp;\n+import org.netbeans.jemmy.scenario.Util;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.awt.Point;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import static org.testng.Assert.assertTrue;\n+\n+public class DumpTest {\n+    private static JFrameOperator fo;\n+\n+    @BeforeClass\n+    public static void setup() throws InvocationTargetException, NoSuchMethodException, IOException {\n+        Util.testInfraSetup();\n+        new ComboBoxesAndListApp().display();\n+        fo = new JFrameOperator(\"ComboBoxesAndListTest\");\n+    }\n+\n+    @Test\n+    public void common() {\n+        StringWriter out = new StringWriter();\n+        Point point = new Point(1, 2);\n+        UIStatus.mouseMoved(fo, point);\n+        Dumper.dumpAll(new PrintWriter(out));\n+        assertTrue(out.toString()\n+                .contains(\"<property name=\\\"\" + UIStatus.LAST_MOUSE_MOVE_DPROP + \"\\\" value=\\\"\"+point+\"\\\"\/>\"));\n+        assertTrue(out.toString()\n+                .contains(\"<property name=\\\"\" + UIStatus.LAST_MOUSE_MOVE_OPERATOR_DPROP + \"\\\" value=\\\"\"+fo+\"\\\"\/>\"));\n+    }\n+}\n","filename":"test\/org\/netbeans\/jemmy\/util\/DumpTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}