{"files":[{"patch":"@@ -30,2 +30,0 @@\n- * @library ..\/..\/..\/..\/lib\/testlibrary\n- * @build ExtendedRobot\n@@ -34,2 +32,0 @@\n- * @run main\/othervm Test8003400 system\n- * @run main\/othervm Test8003400 system reverse\n@@ -38,0 +34,3 @@\n+import java.awt.Component;\n+import java.awt.event.InputEvent;\n+import java.awt.Point;\n@@ -56,0 +55,18 @@\n+    private static JFrame frame;\n+    private static JTree tree;\n+    private static Point point;\n+    private static Rectangle rect;\n+\n+    public static void blockTillDisplayed(Component comp) {\n+        Point p = null;\n+        while (p == null) {\n+            try {\n+                p = comp.getLocationOnScreen();\n+            } catch (IllegalStateException e) {\n+                try {\n+                    Thread.sleep(500);\n+                } catch (InterruptedException ie) {\n+                }\n+            }\n+        }\n+    }\n@@ -62,3 +79,0 @@\n-            if (arg.equals(\"system\")) {\n-                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n-            }\n@@ -66,3 +80,8 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n+        UIManager.LookAndFeelInfo infos[] = UIManager.getInstalledLookAndFeels();\n+        for (UIManager.LookAndFeelInfo info : infos) {\n+            UIManager.setLookAndFeel(info.getClassName());\n+            System.out.println(info.getClassName());\n+            try {\n+                SwingUtilities.invokeAndWait(new Runnable() {\n+                    public void run() {\n+                        DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n@@ -70,3 +89,3 @@\n-                JTree tree = new JTree(root);\n-                tree.setLargeModel(true);\n-                tree.setRowHeight(16);\n+                        tree = new JTree(root);\n+                        tree.setLargeModel(true);\n+                        tree.setRowHeight(16);\n@@ -74,6 +93,7 @@\n-                JFrame frame = new JFrame(TITLE);\n-                frame.add(pane = new JScrollPane(tree));\n-                frame.setSize(200, 100);\n-                frame.setLocationRelativeTo(null);\n-                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n-                frame.setVisible(true);\n+                        frame = new JFrame(TITLE);\n+                        frame.add(pane = new JScrollPane(tree));\n+                        frame.setSize(200, 100);\n+                        frame.setAlwaysOnTop(true);\n+                        frame.setLocationRelativeTo(null);\n+                        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n+                        frame.setVisible(true);\n@@ -81,6 +101,6 @@\n-                for (String object : OBJECTS) {\n-                    root.add(new DefaultMutableTreeNode(object));\n-                }\n-                tree.expandRow(0);\n-            }\n-        });\n+                        for (String object : OBJECTS) {\n+                            root.add(new DefaultMutableTreeNode(object));\n+                        }\n+                        tree.expandRow(0);\n+                    }\n+                });\n@@ -88,6 +108,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n-        robot.waitForIdle(500);\n-        robot.keyPress(KeyEvent.VK_END);\n-        robot.waitForIdle(500);\n-        robot.keyRelease(KeyEvent.VK_END);\n-        robot.waitForIdle();\n+                blockTillDisplayed(frame);\n@@ -95,11 +110,32 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                JTree tree = (JTree) pane.getViewport().getView();\n-                Rectangle inner = tree.getRowBounds(tree.getRowCount() - 1);\n-                Rectangle outer = SwingUtilities.convertRectangle(tree, inner, pane);\n-                outer.y += tree.getRowHeight() - 1 - pane.getVerticalScrollBar().getHeight();\n-                \/\/ error reporting only for automatic testing\n-                if (null != System.getProperty(\"test.src\", null)) {\n-                    SwingUtilities.getWindowAncestor(pane).dispose();\n-                    if (outer.y != 0) {\n-                        throw new Error(\"TEST FAILED: \" + outer.y);\n+                Robot robot = new Robot();\n+                robot.setAutoDelay(100);\n+                SwingUtilities.invokeAndWait(() -> {\n+                    point = tree.getLocationOnScreen();\n+                    rect = tree.getBounds();\n+                });\n+                robot.waitForIdle();\n+                robot.delay(500);\n+                robot.mouseMove(point.x + rect.width \/ 2, point.y + rect.height \/ 3);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                robot.keyPress(KeyEvent.VK_END);\n+                robot.keyRelease(KeyEvent.VK_END);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+\n+                SwingUtilities.invokeAndWait(new Runnable() {\n+                    public void run() {\n+                        JTree tree = (JTree) pane.getViewport().getView();\n+                        Rectangle inner = tree.getRowBounds(tree.getRowCount() - 1);\n+                        Rectangle outer = SwingUtilities.convertRectangle(tree, inner, pane);\n+                        int heightDifference = outer.y + tree.getRowHeight() - pane.getVerticalScrollBar().getHeight();\n+                        \/\/ error reporting only for automatic testing\n+                        if (null != System.getProperty(\"test.src\", null)) {\n+                            frame.dispose();\n+                            if (heightDifference > 3) {\n+                                throw new Error(\"TEST FAILED: \" + heightDifference);\n+                            }\n+                        }\n@@ -107,0 +143,4 @@\n+                });\n+            } finally {\n+                if (frame != null) {\n+                    SwingUtilities.invokeAndWait(frame::dispose);\n@@ -109,1 +149,1 @@\n-        });\n+        }\n","filename":"test\/jdk\/javax\/swing\/JTree\/8003400\/Test8003400.java","additions":83,"deletions":43,"binary":false,"changes":126,"status":"modified"}]}