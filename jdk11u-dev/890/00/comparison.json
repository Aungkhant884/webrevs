{"files":[{"patch":"@@ -1380,1 +1380,1 @@\n-    return available < required + _nodes_required;\n+    return available < required + _nodes_required + REQUIRE_MIN;\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3188,1 +3188,2 @@\n-  if (!may_require_nodes(loop->est_loop_clone_sz(2))) {\n+  uint estimate = loop->est_loop_clone_sz(1);\n+  if (exceeding_node_budget(estimate)) {\n@@ -3213,2 +3214,1 @@\n-  uint i;\n-  for(i = 0; i < loop->_body.size(); i++ ) {\n+  for (uint i = 0; i < loop->_body.size(); i++) {\n@@ -3229,1 +3229,1 @@\n-  scheduled_nodelist(loop, peel, peel_list );\n+  scheduled_nodelist(loop, peel, peel_list);\n@@ -3249,1 +3249,1 @@\n-  for (i = 0; i < peel_list.size();) {\n+  for (uint i = 0; i < peel_list.size();) {\n@@ -3255,4 +3255,2 @@\n-    if ( !n->is_CFG() ) {\n-\n-      if ( has_use_in_set(n, not_peel) ) {\n-\n+    if (!n->is_CFG()) {\n+      if (has_use_in_set(n, not_peel)) {\n@@ -3261,3 +3259,1 @@\n-\n-        if ( !has_use_internal_to_set(n, peel, loop) ) {\n-\n+        if (!has_use_internal_to_set(n, peel, loop)) {\n@@ -3267,1 +3263,1 @@\n-            cloned_for_outside_use += clone_for_use_outside_loop( loop, n, worklist );\n+            cloned_for_outside_use += clone_for_use_outside_loop(loop, n, worklist);\n@@ -3283,1 +3279,1 @@\n-          clone_for_special_use_inside_loop( loop, n, not_peel, sink_list, worklist );\n+          clone_for_special_use_inside_loop(loop, n, not_peel, sink_list, worklist);\n@@ -3291,1 +3287,5 @@\n-  if (new_phi_cnt > old_phi_cnt + PartialPeelNewPhiDelta) {\n+  estimate += cloned_for_outside_use + new_phi_cnt;\n+  bool exceed_node_budget = !may_require_nodes(estimate);\n+  bool exceed_phi_limit = new_phi_cnt > old_phi_cnt + PartialPeelNewPhiDelta;\n+\n+  if (exceed_node_budget || exceed_phi_limit) {\n@@ -3339,1 +3339,1 @@\n-  assert(is_valid_clone_loop_form( loop, peel_list, orig_exit_idx, clone_exit_idx ), \"bad clone loop\");\n+  assert(is_valid_clone_loop_form(loop, peel_list, orig_exit_idx, clone_exit_idx), \"bad clone loop\");\n@@ -3347,1 +3347,1 @@\n-  for(i = 0; i < peel_list.size(); i++ ) {\n+  for (uint i = 0; i < peel_list.size(); i++) {\n@@ -3403,1 +3403,1 @@\n-  for(i = 0; i < loop->_body.size(); i++ ) {\n+  for (uint i = 0; i < loop->_body.size(); i++) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8231565\n+ * @summary Node estimate for loop rotate is not correct\/sufficient:\n+ *          assert(delta <= 2 * required) failed: Bad node estimate ...\n+ *\n+ * @requires !vm.graal.enabled\n+ *\n+ * @run main\/othervm -XX:PartialPeelNewPhiDelta=5 LoopRotateBadNodeBudget\n+ * @run main\/othervm -Xbatch -XX:PartialPeelNewPhiDelta=5 LoopRotateBadNodeBudget\n+ *\n+ * @run main\/othervm LoopRotateBadNodeBudget\n+ * @run main\/othervm -Xbatch LoopRotateBadNodeBudget\n+ *\n+ * NOTE: Test-case seldom manifesting the problem on fast machines.\n+ *\/\n+\n+public class LoopRotateBadNodeBudget {\n+\n+    int h;\n+    float j(int a, int b) {\n+        double d = 0.19881;\n+        int c, e[] = new int[9];\n+        c = 1;\n+        while (++c < 12)\n+            switch ((c % 7 * 5) + 122) {\n+                case 156:\n+                case 46128:\n+                case 135:\n+                case 148:\n+                case 127:\n+                    break;\n+                default:\n+            }\n+        while ((d += 2) < 62)\n+            ;\n+        long k = l(e);\n+        return k;\n+    }\n+    long l(int[] a) {\n+        long m = 0;\n+        for (int i = 0; i < a.length; i++)\n+            m = a[i];\n+        return m;\n+    }\n+    void f(String[] g) {\n+        int i = 2;\n+        for (; i < 20000; ++i)\n+            j(3, h);\n+    }\n+    public static void main(String[] o) {\n+        try {\n+            LoopRotateBadNodeBudget n = new LoopRotateBadNodeBudget();\n+            n.f(o);\n+        } catch (Exception ex) {\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/LoopRotateBadNodeBudget.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"}]}