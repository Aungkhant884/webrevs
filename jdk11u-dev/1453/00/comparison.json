{"files":[{"patch":"@@ -3910,3 +3910,6 @@\n-            Color bgColor = UIManager.getColor(\"TabbedPane.tabAreaBackground\");\n-            if (bgColor == null) {\n-                bgColor = tabPane.getBackground();\n+            Color background = tabPane.getBackground();\n+            Color tabAreaBackground = UIManager.getColor(\"TabbedPane.tabAreaBackground\");\n+            if (background instanceof UIResource && tabAreaBackground != null) {\n+                setBackground(tabAreaBackground);\n+            } else {\n+                setBackground(background);\n@@ -3914,1 +3917,0 @@\n-            setBackground(bgColor);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTabbedPaneUI.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.*;\n+import java.util.ArrayList;\n+import java.util.concurrent.CountDownLatch;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JTabbedPane;\n+\n+import static javax.swing.UIManager.*;\n+import static javax.swing.SwingUtilities.*;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8172269\n+ * @summary Tests JTabbedPane background for SCROLL_TAB_LAYOUT\n+ *\/\n+\n+public class TestBackgroundScrollPolicy implements Runnable {\n+    private static final ArrayList<String> LIST = new ArrayList<>();\n+    private static final LookAndFeelInfo[] INFO = getInstalledLookAndFeels();\n+    private static final CountDownLatch LATCH = new CountDownLatch(INFO.length);\n+    private static Robot ROBOT;\n+\n+    public static void main(String[] args) throws Exception {\n+        ROBOT = new Robot();\n+        invokeLater(new TestBackgroundScrollPolicy());\n+        LATCH.await();\n+        if (!LIST.isEmpty()) {\n+            throw new RuntimeException(LIST.toString());\n+        }\n+    }\n+\n+    private static void addOpaqueError(boolean opaque) {\n+        LIST.add(getLookAndFeel().getName() + \" background color wrong for opaque=\" + opaque);\n+    }\n+\n+    private static boolean updateLookAndFeel() {\n+        int index = (int) LATCH.getCount() - 1;\n+        if (index >= 0) {\n+            try {\n+                LookAndFeelInfo info = INFO[index];\n+                System.err.println(\"L&F: \" + info.getName());\n+                setLookAndFeel(info.getClassName());\n+                return true;\n+            } catch (Exception exception) {\n+                exception.printStackTrace();\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private JFrame frame;\n+    private JTabbedPane pane;\n+\n+    public void run() {\n+        if (this.frame == null) {\n+            if (!updateLookAndFeel()) {\n+                return;\n+            }\n+            this.pane = new JTabbedPane();\n+            this.pane.setOpaque(false);\n+            this.pane.setBackground(Color.RED);\n+            for (int i = 0; i < 3; i++) {\n+                this.pane.addTab(\"Tab \" + i, new JLabel(\"Content area \" + i));\n+            }\n+            this.pane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\n+            this.frame = new JFrame(getClass().getSimpleName());\n+            this.frame.getContentPane().setBackground(Color.BLUE);\n+            this.frame.add(this.pane);\n+            this.frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n+            this.frame.setSize(400, 200);\n+            this.frame.setLocationRelativeTo(null);\n+            this.frame.setVisible(true);\n+        } else {\n+            Point point = new Point(this.pane.getWidth() - 2, 2);\n+            convertPointToScreen(point, this.pane);\n+            Color actual = ROBOT.getPixelColor(point.x, point.y);\n+\n+            boolean opaque = this.pane.isOpaque();\n+            Color expected = opaque\n+                    ? this.pane.getBackground()\n+                    : this.frame.getContentPane().getBackground();\n+\n+            System.out.println(\"expected \" + expected + \" actual \" + actual);\n+            if (!expected.equals(actual)){\n+                addOpaqueError(opaque);\n+            }\n+            if (!opaque) {\n+                this.pane.setOpaque(true);\n+                this.pane.repaint();\n+            } else {\n+                this.frame.dispose();\n+                this.frame = null;\n+                this.pane = null;\n+                LATCH.countDown();\n+            }\n+\n+        }\n+        ROBOT.delay(2000);\n+        SecondaryLoop secondaryLoop =\n+                Toolkit.getDefaultToolkit().getSystemEventQueue()\n+                        .createSecondaryLoop();\n+        new Thread() {\n+            @Override\n+            public void run() {\n+                try {\n+                    Thread.sleep(200);\n+                } catch (InterruptedException e) {\n+                }\n+                secondaryLoop.exit();\n+                invokeLater(TestBackgroundScrollPolicy.this);\n+            }\n+        }.start();\n+        secondaryLoop.enter();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/TestBackgroundScrollPolicy.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"}]}