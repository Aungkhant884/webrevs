{"files":[{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -329,2 +316,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -399,2 +385,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(cls, \"run\", \"()V\");\n@@ -406,2 +391,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(cls, \"checkPoint\", \"()V\");\n@@ -413,2 +397,1 @@\n-    midCountDownFloat = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownFloat\", \"(I)F\");\n+    midCountDownFloat = env->GetMethodID(cls, \"countDownFloat\", \"(I)F\");\n@@ -420,2 +403,1 @@\n-    midCountDownDouble = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownDouble\", \"(I)D\");\n+    midCountDownDouble = env->GetMethodID(cls, \"countDownDouble\", \"(I)D\");\n@@ -476,1 +458,0 @@\n-#ifdef __cplusplus\n@@ -478,1 +459,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretfp\/earlyretfp.cpp","additions":5,"deletions":25,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -335,2 +322,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -404,2 +390,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(cls, \"run\", \"()V\");\n@@ -411,2 +396,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(cls, \"checkPoint\", \"()V\");\n@@ -418,2 +402,1 @@\n-    midCountDownInt = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownInt\", \"(I)I\");\n+    midCountDownInt = env->GetMethodID(cls, \"countDownInt\", \"(I)I\");\n@@ -425,2 +408,1 @@\n-    midCountDownShort = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownShort\", \"(I)S\");\n+    midCountDownShort = env->GetMethodID(cls, \"countDownShort\", \"(I)S\");\n@@ -432,2 +414,1 @@\n-    midCountDownChar = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownChar\", \"(I)C\");\n+    midCountDownChar = env->GetMethodID(cls, \"countDownChar\", \"(I)C\");\n@@ -439,2 +420,1 @@\n-    midCountDownByte = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownByte\", \"(I)B\");\n+    midCountDownByte = env->GetMethodID(cls, \"countDownByte\", \"(I)B\");\n@@ -446,2 +426,1 @@\n-    midCountDownBoolean = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownBoolean\", \"(I)Z\");\n+    midCountDownBoolean = env->GetMethodID(cls, \"countDownBoolean\", \"(I)Z\");\n@@ -491,1 +470,0 @@\n-#ifdef __cplusplus\n@@ -493,1 +471,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretint\/earlyretint.cpp","additions":8,"deletions":31,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -316,2 +303,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -386,2 +372,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(cls, \"run\", \"()V\");\n@@ -393,2 +378,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(cls, \"checkPoint\", \"()V\");\n@@ -400,2 +384,1 @@\n-    midCountDownLong = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownLong\", \"(I)J\");\n+    midCountDownLong = env->GetMethodID(cls, \"countDownLong\", \"(I)J\");\n@@ -447,1 +430,0 @@\n-#ifdef __cplusplus\n@@ -449,1 +431,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretlong\/earlyretlong.cpp","additions":4,"deletions":23,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -280,1 +267,1 @@\n-        if (!JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, ret_val), val_exp)) {\n+        if (!env->IsSameObject(ret_val, val_exp)) {\n@@ -314,2 +301,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -383,2 +369,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(cls, \"run\", \"()V\");\n@@ -390,2 +375,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(cls, \"checkPoint\", \"()V\");\n@@ -397,2 +381,1 @@\n-    midCountDownObject = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownObject\", sig_exp);\n+    midCountDownObject = env->GetMethodID(cls, \"countDownObject\", sig_exp);\n@@ -418,1 +401,1 @@\n-        val_exp = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, ret_obj));\n+        val_exp = env->NewGlobalRef(ret_obj);\n@@ -443,1 +426,0 @@\n-#ifdef __cplusplus\n@@ -445,1 +427,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretobj\/earlyretobj.cpp","additions":6,"deletions":25,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -280,2 +267,2 @@\n-      ret_str = JNI_ENV_PTR(env)->GetStringUTFChars(JNI_ENV_ARG(env, ret_val), 0);\n-      exp_str = JNI_ENV_PTR(env)->GetStringUTFChars(JNI_ENV_ARG(env, str_exp), 0);\n+      ret_str = env->GetStringUTFChars(ret_val, 0);\n+      exp_str = env->GetStringUTFChars(str_exp, 0);\n@@ -313,2 +300,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -382,2 +368,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(cls, \"run\", \"()V\");\n@@ -389,2 +374,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(cls, \"checkPoint\", \"()V\");\n@@ -396,2 +380,1 @@\n-    midCountDownString = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"countDownString\", sig_exp);\n+    midCountDownString = env->GetMethodID(cls, \"countDownString\", sig_exp);\n@@ -417,1 +400,1 @@\n-        str_exp = (jstring) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, expected_str));\n+        str_exp = (jstring) env->NewGlobalRef(expected_str);\n@@ -433,1 +416,0 @@\n-#ifdef __cplusplus\n@@ -435,1 +417,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretstr\/earlyretstr.cpp","additions":7,"deletions":26,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -263,2 +250,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -328,2 +314,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(cls, \"run\", \"()V\");\n@@ -335,2 +320,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(cls, \"checkPoint\", \"()V\");\n@@ -372,1 +356,0 @@\n-#ifdef __cplusplus\n@@ -374,1 +357,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretvoid\/earlyretvoid.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,19 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG  JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR  JNI_ENV_PTR\n@@ -56,1 +36,1 @@\n-    if ( res != JVMTI_ERROR_NONE) {  \\\n+    if (res != JVMTI_ERROR_NONE) {  \\\n@@ -62,1 +42,1 @@\n-    if ( res != err) {                                \\\n+    if (res != err) {                                \\\n@@ -108,2 +88,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -116,1 +95,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -119,1 +98,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -142,2 +121,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti, sz),\n-                                                 &jraw_monitor);\n+    ret = jvmti->CreateRawMonitor(sz, &jraw_monitor);\n@@ -157,1 +135,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, jraw_monitor));\n+    ret = jvmti->RawMonitorEnter(jraw_monitor);\n@@ -171,1 +149,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti, jraw_monitor));\n+    ret = jvmti->RawMonitorExit(jraw_monitor);\n@@ -276,3 +254,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetAllStackTraces(JVMTI_ENV_ARG(jvmti, MAX_FRAMES_CNT),\n-                                                  &stack_buf1,\n-                                                  &threads_count);\n+    ret = jvmti->GetAllStackTraces(MAX_FRAMES_CNT, &stack_buf1, &threads_count);\n@@ -284,2 +260,2 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Allocate(JVMTI_ENV_ARG(jvmti, sizeof(jthread) * threads_count),\n-                                         (unsigned char**)&thread_list);\n+    ret = jvmti->Allocate(sizeof(jthread) * threads_count,\n+                          (unsigned char**) &thread_list);\n@@ -293,2 +269,1 @@\n-          (jthread)JNI_ENV_PTR(env)->NewGlobalRef(\n-                     JNI_ENV_ARG(env, stack_buf1[ti].thread));\n+          (jthread)env->NewGlobalRef(stack_buf1[ti].thread);\n@@ -305,2 +280,2 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Allocate(JVMTI_ENV_ARG(jvmti, sizeof(jvmtiThreadInfo) * threads_count),\n-                                         (unsigned char**)&thread_info);\n+    ret = jvmti->Allocate(sizeof(jvmtiThreadInfo) * threads_count,\n+                          (unsigned char**)&thread_info);\n@@ -313,2 +288,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetThreadInfo(JVMTI_ENV_ARG(jvmti, thread_list[ti]),\n-                                                  &thread_info[ti]);\n+        ret = jvmti->GetThreadInfo(thread_list[ti], &thread_info[ti]);\n@@ -330,5 +304,2 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetThreadListStackTraces(\n-                                                  JVMTI_ENV_ARG(jvmti, threads_count),\n-                                                  thread_list,\n-                                                  MAX_FRAMES_CNT,\n-                                                  &stack_buf2);\n+    ret = jvmti->GetThreadListStackTraces(\n+        threads_count, thread_list, MAX_FRAMES_CNT, &stack_buf2);\n@@ -347,1 +318,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->ForceGarbageCollection(JVMTI_ENV_ARG1(jvmti));\n+    ret = jvmti->ForceGarbageCollection();\n@@ -368,1 +339,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Deallocate(JVMTI_ENV_ARG(jvmti, (unsigned char *)stack_buf1));\n+    ret = jvmti->Deallocate((unsigned char *) stack_buf1);\n@@ -374,1 +345,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Deallocate(JVMTI_ENV_ARG(jvmti, (unsigned char *)stack_buf2));\n+    ret = jvmti->Deallocate((unsigned char *) stack_buf2);\n@@ -380,1 +351,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Deallocate(JVMTI_ENV_ARG(jvmti, (unsigned char *)thread_info));\n+    ret = jvmti->Deallocate((unsigned char *) thread_info);\n@@ -385,1 +356,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Deallocate(JVMTI_ENV_ARG(jvmti, (unsigned char *)thread_list));\n+    ret = jvmti->Deallocate((unsigned char *) thread_list);\n@@ -392,1 +363,0 @@\n-#ifdef __cplusplus\n@@ -394,1 +364,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetAllStackTraces\/getallstktr001\/getallstktr001.cpp","additions":22,"deletions":53,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -117,2 +104,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -179,2 +165,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(cls, \"checkPoint\", \"()V\");\n@@ -193,2 +178,1 @@\n-    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE,\n-        JVMTI_EVENT_BREAKPOINT, NULL);\n+    err = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_BREAKPOINT, NULL);\n@@ -208,1 +192,0 @@\n-#ifdef __cplusplus\n@@ -210,1 +193,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetConstantPool\/getcpool001\/getcpool001.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#ifdef __cplusplus\n@@ -35,11 +34,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -47,1 +35,0 @@\n-#endif\n@@ -76,2 +63,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -161,2 +147,1 @@\n-    interf = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/unit\/GetLineNumberTable\/Interface004\"));\n+    interf = env->FindClass(\"nsk\/jvmti\/unit\/GetLineNumberTable\/Interface004\");\n@@ -168,2 +153,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"instanceMeth0\", \"()I\");\n+    mid = env->GetMethodID(cls, \"instanceMeth0\", \"()I\");\n@@ -177,2 +161,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"instanceMeth1\", \"()I\");\n+    mid = env->GetMethodID(cls, \"instanceMeth1\", \"()I\");\n@@ -189,1 +172,1 @@\n-    abstr = JNI_ENV_PTR(env)->GetSuperclass(JNI_ENV_ARG(env, cls));\n+    abstr = env->GetSuperclass(cls);\n@@ -195,2 +178,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, abstr),\n-        \"instanceMeth0\", \"()I\");\n+    mid = env->GetMethodID(abstr, \"instanceMeth0\", \"()I\");\n@@ -204,2 +186,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, abstr),\n-        \"instanceMeth1\", \"()I\");\n+    mid = env->GetMethodID(abstr, \"instanceMeth1\", \"()I\");\n@@ -216,2 +197,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"instanceMeth0\", \"()I\");\n+    mid = env->GetMethodID(cls, \"instanceMeth0\", \"()I\");\n@@ -225,2 +205,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"instanceMeth1\", \"()I\");\n+    mid = env->GetMethodID(cls, \"instanceMeth1\", \"()I\");\n@@ -234,2 +213,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"instanceMeth2\", \"()I\");\n+    mid = env->GetMethodID(cls, \"instanceMeth2\", \"()I\");\n@@ -246,2 +224,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"instanceNativeMeth\", \"()I\");\n+    mid = env->GetMethodID(cls, \"instanceNativeMeth\", \"()I\");\n@@ -255,2 +232,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-        \"staticNativeMeth\", \"()I\");\n+    mid = env->GetStaticMethodID(cls, \"staticNativeMeth\", \"()I\");\n@@ -271,1 +247,0 @@\n-#ifdef __cplusplus\n@@ -273,1 +248,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLineNumberTable\/linetab004\/linetab004.cpp","additions":12,"deletions":38,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#ifdef __cplusplus\n@@ -36,11 +35,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -48,1 +36,0 @@\n-#endif\n@@ -154,2 +141,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -212,2 +198,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-                                              \"staticMeth\", \"(I)I\");\n+    mid = env->GetStaticMethodID(cls, \"staticMeth\", \"(I)I\");\n@@ -253,2 +238,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-                                              \"staticMeth\", \"(I)I\");\n+    mid = env->GetStaticMethodID(cls, \"staticMeth\", \"(I)I\");\n@@ -327,1 +311,0 @@\n-#ifdef __cplusplus\n@@ -329,1 +312,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal003\/getlocal003.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#ifdef __cplusplus\n@@ -36,11 +35,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -48,1 +36,0 @@\n-#endif\n@@ -85,2 +72,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -131,2 +117,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-                                              \"staticMeth\", \"(I)I\");\n+    mid = env->GetStaticMethodID(cls, \"staticMeth\", \"(I)I\");\n@@ -246,1 +231,0 @@\n-#ifdef __cplusplus\n@@ -248,1 +232,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal004\/getlocal004.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -74,2 +61,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -297,1 +283,0 @@\n-#ifdef __cplusplus\n@@ -299,1 +284,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/IsSynthetic\/issynth001\/issynth001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#ifdef __cplusplus\n@@ -31,3 +30,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n@@ -35,15 +31,0 @@\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -164,2 +145,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -173,1 +153,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -176,1 +156,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -181,1 +161,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -184,1 +164,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n@@ -187,1 +167,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_DEATH,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n@@ -190,1 +170,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_NATIVE_METHOD_BIND,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n@@ -210,1 +190,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti, sz), &jraw_monitor[i]);\n+    ret = jvmti->CreateRawMonitor(sz, &jraw_monitor[i]);\n@@ -223,1 +203,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorEnter(jraw_monitor[i]);\n@@ -236,1 +216,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorExit(jraw_monitor[i]);\n@@ -249,1 +229,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorWait(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]), -1);\n+    ret = jvmti->RawMonitorWait(jraw_monitor[i], -1);\n@@ -262,1 +242,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorNotifyAll(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorNotifyAll(jraw_monitor[i]);\n@@ -276,1 +256,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetFrameCount(JVMTI_ENV_ARG(jvmti, (jthread)thr),  &count);\n+    ret = jvmti->GetFrameCount((jthread) thr,  &count);\n@@ -291,1 +271,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetMethodDeclaringClass(JVMTI_ENV_ARG(jvmti, mid), &klass);\n+    ret = jvmti->GetMethodDeclaringClass(mid, &klass);\n@@ -298,1 +278,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetClassSignature(JVMTI_ENV_ARG(jvmti, klass), &clname, NULL);\n+    ret = jvmti->GetClassSignature(klass, &clname, NULL);\n@@ -305,1 +285,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetMethodName(JVMTI_ENV_ARG(jvmti, mid), &mname, &signature, NULL);\n+    ret = jvmti->GetMethodName(mid, &mname, &signature, NULL);\n@@ -324,1 +304,2 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Allocate(JVMTI_ENV_ARG(jvmti, sizeof(jvmtiFrameInfo) * max_count), (unsigned char**)&stack_buffer);\n+    ret = jvmti->Allocate(sizeof(jvmtiFrameInfo) * max_count,\n+                          (unsigned char**) &stack_buffer);\n@@ -330,1 +311,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetStackTrace(JVMTI_ENV_ARG(jvmti, thr), 0, max_count , stack_buffer, &count);\n+    ret = jvmti->GetStackTrace(thr, 0, max_count, stack_buffer, &count);\n@@ -336,1 +317,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Deallocate(JVMTI_ENV_ARG(jvmti, (unsigned char *)stack_buffer));\n+    ret = jvmti->Deallocate((unsigned char *) stack_buffer);\n@@ -350,1 +331,0 @@\n-#ifdef __cplusplus\n@@ -352,1 +332,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/MethodBind\/JvmtiTest\/JvmtiTest.cpp","additions":20,"deletions":41,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#ifdef __cplusplus\n@@ -31,1 +30,0 @@\n-#endif\n@@ -33,13 +31,0 @@\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -64,2 +49,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -86,1 +70,0 @@\n-#ifdef __cplusplus\n@@ -88,1 +71,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/OnUnload\/JvmtiTest\/JvmtiTest.cpp","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#ifdef __cplusplus\n@@ -35,19 +34,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -110,2 +90,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -119,1 +98,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -122,1 +101,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -142,1 +121,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti, sz), &jraw_monitor[i]);\n+    ret = jvmti->CreateRawMonitor(sz, &jraw_monitor[i]);\n@@ -155,1 +134,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorEnter(jraw_monitor[i]);\n@@ -168,1 +147,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorExit(jraw_monitor[i]);\n@@ -181,1 +160,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorWait(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]), -1);\n+    ret = jvmti->RawMonitorWait(jraw_monitor[i], -1);\n@@ -194,1 +173,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorNotifyAll(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorNotifyAll(jraw_monitor[i]);\n@@ -208,1 +187,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetFrameCount(JVMTI_ENV_ARG(jvmti, (jthread)thr),  &count);\n+    ret = jvmti->GetFrameCount((jthread) thr,  &count);\n@@ -233,1 +212,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Allocate(JVMTI_ENV_ARG(jvmti, sizeof(jvmtiFrameInfo) * max_count), (unsigned char**)&stack_buffer);\n+    ret = jvmti->Allocate(sizeof(jvmtiFrameInfo) * max_count, (unsigned char**)&stack_buffer);\n@@ -239,1 +218,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Allocate(JVMTI_ENV_ARG(jvmti, sizeof(jvmtiFrameInfo) * max_count), (unsigned char**)&compare_buffer);\n+    ret = jvmti->Allocate(sizeof(jvmtiFrameInfo) * max_count, (unsigned char**)&compare_buffer);\n@@ -246,1 +225,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->SuspendThread(JVMTI_ENV_ARG(jvmti, thr));\n+    ret = jvmti->SuspendThread(thr);\n@@ -252,1 +231,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetStackTrace(JVMTI_ENV_ARG(jvmti, thr), 0, max_count , stack_buffer, &count);\n+    ret = jvmti->GetStackTrace(thr, 0, max_count, stack_buffer, &count);\n@@ -260,1 +239,1 @@\n-      ret = JVMTI_ENV_PTR(jvmti)->GetStackTrace(JVMTI_ENV_ARG(jvmti, thr), i, max_count , compare_buffer, &res_count);\n+      ret = jvmti->GetStackTrace(thr, i, max_count, compare_buffer, &res_count);\n@@ -279,1 +258,1 @@\n-      ret = JVMTI_ENV_PTR(jvmti)->GetStackTrace(JVMTI_ENV_ARG(jvmti, thr), -i, max_count , compare_buffer, &res_count);\n+      ret = jvmti->GetStackTrace(thr, -i, max_count, compare_buffer, &res_count);\n@@ -299,1 +278,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->ResumeThread(JVMTI_ENV_ARG(jvmti, thr));\n+    ret = jvmti->ResumeThread(thr);\n@@ -308,1 +287,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetMethodDeclaringClass(JVMTI_ENV_ARG(jvmti, stack_buffer[i].method), &klass);\n+        ret = jvmti->GetMethodDeclaringClass(stack_buffer[i].method, &klass);\n@@ -315,1 +294,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetClassSignature(JVMTI_ENV_ARG(jvmti, klass), &clname, NULL);\n+        ret = jvmti->GetClassSignature(klass, &clname, NULL);\n@@ -322,1 +301,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetMethodName(JVMTI_ENV_ARG(jvmti, stack_buffer[i].method), &mname, &signature, NULL);\n+        ret = jvmti->GetMethodName(stack_buffer[i].method, &mname, &signature, NULL);\n@@ -335,1 +314,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Deallocate(JVMTI_ENV_ARG(jvmti, (unsigned char *)stack_buffer));\n+    ret = jvmti->Deallocate((unsigned char *) stack_buffer);\n@@ -349,1 +328,0 @@\n-#ifdef __cplusplus\n@@ -351,1 +329,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/StackTrace\/JvmtiTest\/JvmtiTest.cpp","additions":20,"deletions":43,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -63,3 +50,3 @@\n-    thrClass = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, \"java\/lang\/Thread\"));\n-    cid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, thrClass), \"<init>\", \"()V\");\n-    res = JNI_ENV_PTR(env)->NewObject(JNI_ENV_ARG(env, thrClass), cid);\n+    thrClass = env->FindClass(\"java\/lang\/Thread\");\n+    cid = env->GetMethodID(thrClass, \"<init>\", \"()V\");\n+    res = env->NewObject(thrClass, cid);\n@@ -77,2 +64,1 @@\n-    JNI_ENV_PTR(jvm_ins)->GetEnv(JNI_ENV_ARG(jvm_ins, (void **) &env),\n-        JNI_VERSION_1_2);\n+    jvm_ins->GetEnv((void **) &env, JNI_VERSION_1_2);\n@@ -143,2 +129,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -182,1 +167,0 @@\n-#ifdef __cplusplus\n@@ -184,1 +168,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/agentthr\/agentthr.cpp","additions":5,"deletions":22,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -191,1 +177,0 @@\n-#ifdef __cplusplus\n@@ -193,1 +178,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/clsldrclss00x\/clsldrclss00x.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -126,2 +113,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -200,5 +186,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes),\n-            NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -229,1 +212,0 @@\n-#ifdef __cplusplus\n@@ -231,1 +213,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/events\/redefineCFLH\/JvmtiTest\/JvmtiTest.cpp","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,19 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -95,1 +75,1 @@\n-   res = JVMTI_ENV_PTR(jvmti)->AddToBootstrapClassLoaderSearch(JVMTI_ENV_ARG(jvmti, segment));\n+   res = jvmti->AddToBootstrapClassLoaderSearch(segment);\n@@ -109,1 +89,1 @@\n-   res = JVMTI_ENV_PTR(jvmti)->AddToBootstrapClassLoaderSearch(JVMTI_ENV_ARG(jvmti, segment));\n+   res = jvmti->AddToBootstrapClassLoaderSearch(segment);\n@@ -125,1 +105,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddToBootstrapClassLoaderSearch(JVMTI_ENV_ARG(jvmti, segment));\n+    res = jvmti->AddToBootstrapClassLoaderSearch(segment);\n@@ -143,1 +123,1 @@\n-   res = JVMTI_ENV_PTR(jvmti)->GetPhase(JVMTI_ENV_ARG(jvmti, &phase));\n+   res = jvmti->GetPhase(&phase);\n@@ -149,1 +129,1 @@\n-      res = JVMTI_ENV_PTR(jvmti)->AddToBootstrapClassLoaderSearch(JVMTI_ENV_ARG(jvmti, segment));\n+      res = jvmti->AddToBootstrapClassLoaderSearch(segment);\n@@ -218,2 +198,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -226,1 +205,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -229,1 +208,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -235,1 +214,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -238,1 +217,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_START,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_START, NULL);\n@@ -241,1 +220,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n@@ -244,1 +223,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_NATIVE_METHOD_BIND,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_NATIVE_METHOD_BIND, NULL);\n@@ -247,1 +226,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_DEATH,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n@@ -250,1 +229,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_CLASS_FILE_LOAD_HOOK,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL);\n@@ -255,1 +234,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddToBootstrapClassLoaderSearch(JVMTI_ENV_ARG(jvmti, segment));\n+    res = jvmti->AddToBootstrapClassLoaderSearch(segment);\n@@ -272,1 +251,0 @@\n-#ifdef __cplusplus\n@@ -274,1 +252,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/AddToBootstrapClassLoaderSearch\/JvmtiTest\/JvmtiTest.cpp","additions":15,"deletions":38,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#ifdef __cplusplus\n@@ -31,13 +30,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,5 +31,0 @@\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -83,1 +64,1 @@\n-    res = JVMTI_ENV_PTR(jvmti_env)->DisposeEnvironment(JVMTI_ENV_ARG1(jvmti_env));\n+    res = jvmti_env->DisposeEnvironment();\n@@ -118,2 +99,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -127,1 +107,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -131,1 +111,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -134,1 +114,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -138,1 +118,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n@@ -141,1 +121,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetSystemProperties(JVMTI_ENV_ARG(jvmti, &count), &properties);\n+    res = jvmti->GetSystemProperties(&count, &properties);\n@@ -148,1 +128,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->GetSystemProperty(JVMTI_ENV_ARG(jvmti, (const char *)properties[i]), &value);\n+        res = jvmti->GetSystemProperty((const char *) properties[i], &value);\n@@ -152,1 +132,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->SetSystemProperty(JVMTI_ENV_ARG(jvmti, (const char *)properties[i]), value);\n+        res = jvmti->SetSystemProperty((const char *) properties[i], value);\n@@ -154,1 +134,0 @@\n-\n@@ -167,1 +146,0 @@\n-#ifdef __cplusplus\n@@ -169,1 +147,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/Dispose\/JvmtiTest\/JvmtiTest.cpp","additions":9,"deletions":32,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#ifdef __cplusplus\n@@ -31,3 +30,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n@@ -35,15 +31,0 @@\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -133,2 +114,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -141,1 +121,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti,\"_access_lock\"),&access_lock);\n+    res = jvmti->CreateRawMonitor(\"_access_lock\", &access_lock);\n@@ -146,1 +126,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -149,1 +129,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -154,1 +134,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -157,1 +137,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n@@ -160,1 +140,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_DEATH,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n@@ -163,1 +143,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_GARBAGE_COLLECTION_START,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_START, NULL);\n@@ -166,1 +146,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_GARBAGE_COLLECTION_FINISH,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_GARBAGE_COLLECTION_FINISH, NULL);\n@@ -202,1 +182,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->ForceGarbageCollection(JVMTI_ENV_ARG1(jvmti));\n+    ret = jvmti->ForceGarbageCollection();\n@@ -210,1 +190,0 @@\n-#ifdef __cplusplus\n@@ -212,1 +191,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/ForceGarbageCollection\/gc\/gc.cpp","additions":10,"deletions":32,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#ifdef __cplusplus\n@@ -31,3 +30,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n@@ -35,15 +31,0 @@\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -102,2 +83,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -111,1 +91,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -114,1 +94,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -118,1 +98,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetSystemProperties(JVMTI_ENV_ARG(jvmti, &count), &properties);\n+    res = jvmti->GetSystemProperties(&count, &properties);\n@@ -125,1 +105,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->GetSystemProperty(JVMTI_ENV_ARG(jvmti, (const char *)properties[i]), &value);\n+        res = jvmti->GetSystemProperty((const char *) properties[i], &value);\n@@ -130,1 +110,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->SetSystemProperty(JVMTI_ENV_ARG(jvmti, (const char *)properties[i]), value);\n+        res = jvmti->SetSystemProperty((const char *) properties[i], value);\n@@ -145,1 +125,0 @@\n-#ifdef __cplusplus\n@@ -147,1 +126,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/environment\/JvmtiTest\/JvmtiTest.cpp","additions":6,"deletions":28,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#ifdef __cplusplus\n@@ -31,3 +30,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n@@ -35,15 +31,0 @@\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -137,2 +118,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -146,1 +126,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -149,1 +129,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -154,1 +134,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -157,1 +137,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n@@ -160,1 +140,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_DEATH,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n@@ -182,1 +162,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetOwnedMonitorInfo(JVMTI_ENV_ARG(jvmti, thr), &count , &owned_monitor);\n+    ret = jvmti->GetOwnedMonitorInfo(thr, &count, &owned_monitor);\n@@ -193,1 +173,1 @@\n-    if (expected_count !=0 ) {\n+    if (expected_count !=0) {\n@@ -195,1 +175,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetCurrentContendedMonitor(JVMTI_ENV_ARG(jvmti, thr), owned_monitor);\n+        ret = jvmti->GetCurrentContendedMonitor(thr, owned_monitor);\n@@ -204,1 +184,0 @@\n-#ifdef __cplusplus\n@@ -206,1 +185,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/nosuspendMonitorInfo\/JvmtiTest\/JvmtiTest.cpp","additions":9,"deletions":31,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#ifdef __cplusplus\n@@ -31,19 +30,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -137,2 +117,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -146,1 +125,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -149,1 +128,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -154,1 +133,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -157,1 +136,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n@@ -160,1 +139,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_DEATH,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n@@ -180,1 +159,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti, sz), &jraw_monitor[i]);\n+    ret = jvmti->CreateRawMonitor(sz, &jraw_monitor[i]);\n@@ -193,1 +172,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorEnter(jraw_monitor[i]);\n@@ -206,1 +185,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorExit(jraw_monitor[i]);\n@@ -219,1 +198,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorWait(JVMTI_ENV_ARG(jvmti,jraw_monitor[i]),-1);\n+    ret = jvmti->RawMonitorWait(jraw_monitor[i], -1);\n@@ -232,1 +211,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorNotifyAll(JVMTI_ENV_ARG(jvmti,jraw_monitor[i]));\n+    ret = jvmti->RawMonitorNotifyAll(jraw_monitor[i]);\n@@ -246,1 +225,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetFrameCount(JVMTI_ENV_ARG(jvmti, (jthread)thr),  &count);\n+    ret = jvmti->GetFrameCount((jthread) thr,  &count);\n@@ -269,1 +248,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Allocate(JVMTI_ENV_ARG(jvmti, sizeof(jvmtiFrameInfo) * count), (unsigned char**)&stack_buffer);\n+    ret = jvmti->Allocate(sizeof(jvmtiFrameInfo) * count, (unsigned char**)&stack_buffer);\n@@ -276,1 +255,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetStackTrace(JVMTI_ENV_ARG(jvmti, thr), 0, count , stack_buffer, &count);\n+    ret = jvmti->GetStackTrace(thr, 0, count, stack_buffer, &count);\n@@ -286,1 +265,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetMethodDeclaringClass(JVMTI_ENV_ARG(jvmti, stack_buffer[i].method), &klass);\n+        ret = jvmti->GetMethodDeclaringClass(stack_buffer[i].method, &klass);\n@@ -293,1 +272,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetClassSignature(JVMTI_ENV_ARG(jvmti, klass), &clname, &generic);\n+        ret = jvmti->GetClassSignature(klass, &clname, &generic);\n@@ -300,1 +279,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetMethodName(JVMTI_ENV_ARG(jvmti, stack_buffer[i].method), &mname, &signature, &generic);\n+        ret = jvmti->GetMethodName(stack_buffer[i].method, &mname, &signature, &generic);\n@@ -313,1 +292,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->Deallocate(JVMTI_ENV_ARG(jvmti, (unsigned char *)stack_buffer));\n+    ret = jvmti->Deallocate((unsigned char *) stack_buffer);\n@@ -327,1 +306,0 @@\n-#ifdef __cplusplus\n@@ -329,1 +307,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/nosuspendStackTrace\/JvmtiTest\/JvmtiTest.cpp","additions":18,"deletions":41,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-#ifdef __cplusplus\n@@ -53,3 +52,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n@@ -57,15 +53,0 @@\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -111,1 +92,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetCurrentThread(JVMTI_ENV_ARG(jvmti_env, &main_thread));\n+    res = jvmti_env->GetCurrentThread(&main_thread);\n@@ -113,1 +94,1 @@\n-    main_thread = (jthread)JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, main_thread));\n+    main_thread = (jthread)env->NewGlobalRef(main_thread);\n@@ -121,1 +102,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti_env, access_lock));\n+    res = jvmti_env->RawMonitorExit(access_lock);\n@@ -123,1 +104,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti_env, access_lock));\n+    res = jvmti_env->RawMonitorExit(access_lock);\n@@ -143,1 +124,0 @@\n-    jboolean   is_main;\n@@ -145,1 +125,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPhase(JVMTI_ENV_ARG(jvmti_env, &phase));\n+    res = jvmti_env->GetPhase(&phase);\n@@ -150,1 +130,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetCurrentThread(JVMTI_ENV_ARG(jvmti_env, &thread));\n+    res = jvmti_env->GetCurrentThread(&thread);\n@@ -152,2 +132,1 @@\n-    is_main = JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, thread), main_thread);\n-    if (is_main == JNI_FALSE) {\n+    if (!env->IsSameObject(thread, main_thread)) {\n@@ -166,1 +145,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti_env, access_lock_not_entered));\n+        res = jvmti_env->RawMonitorExit(access_lock_not_entered);\n@@ -170,1 +149,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti_env, access_lock));\n+        res = jvmti_env->RawMonitorExit(access_lock);\n@@ -174,1 +153,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti_env, access_lock));\n+        res = jvmti_env->RawMonitorExit(access_lock);\n@@ -177,1 +156,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, access_lock));\n+        res = jvmti_env->RawMonitorEnter(access_lock);\n@@ -180,1 +159,1 @@\n-        res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, access_lock));\n+        res = jvmti_env->RawMonitorEnter(access_lock);\n@@ -217,2 +196,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -225,1 +203,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti,\"_access_lock\"),&access_lock);\n+    res = jvmti->CreateRawMonitor(\"_access_lock\", &access_lock);\n@@ -227,1 +205,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti,\"_access_lock_not_entered\"),&access_lock_not_entered);\n+    res = jvmti->CreateRawMonitor(\"_access_lock_not_entered\", &access_lock_not_entered);\n@@ -230,1 +208,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti,\"RawMonitor-0\"),&jraw_monitor[0]);\n+    res = jvmti->CreateRawMonitor(\"RawMonitor-0\", &jraw_monitor[0]);\n@@ -235,1 +213,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->GetPotentialCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->GetPotentialCapabilities(&jvmti_caps);\n@@ -238,1 +216,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->AddCapabilities(JVMTI_ENV_ARG(jvmti, &jvmti_caps));\n+    res = jvmti->AddCapabilities(&jvmti_caps);\n@@ -243,1 +221,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -246,1 +224,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n@@ -249,1 +227,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_VM_DEATH,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n@@ -252,1 +230,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti,JVMTI_ENABLE),JVMTI_EVENT_CLASS_FILE_LOAD_HOOK,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_CLASS_FILE_LOAD_HOOK, NULL);\n@@ -256,1 +234,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, access_lock));\n+    res = jvmti->RawMonitorEnter(access_lock);\n@@ -260,1 +238,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti, access_lock));\n+    res = jvmti->RawMonitorExit(access_lock);\n@@ -264,1 +242,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti ,access_lock_not_entered));\n+    res = jvmti->RawMonitorExit(access_lock_not_entered);\n@@ -268,1 +246,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, access_lock));\n+    res = jvmti->RawMonitorEnter(access_lock);\n@@ -271,1 +249,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, access_lock));\n+    res = jvmti->RawMonitorEnter(access_lock);\n@@ -274,1 +252,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, access_lock));\n+    res = jvmti->RawMonitorEnter(access_lock);\n@@ -278,1 +256,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->DestroyRawMonitor(JVMTI_ENV_ARG(jvmti, access_lock));\n+    res = jvmti->DestroyRawMonitor(access_lock);\n@@ -282,1 +260,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti,\"_access_lock\"),&access_lock);\n+    res = jvmti->CreateRawMonitor(\"_access_lock\", &access_lock);\n@@ -285,1 +263,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, access_lock));\n+    res = jvmti->RawMonitorEnter(access_lock);\n@@ -288,1 +266,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, access_lock));\n+    res = jvmti->RawMonitorEnter(access_lock);\n@@ -294,1 +272,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, jraw_monitor[0]));\n+    res = jvmti->RawMonitorEnter(jraw_monitor[0]);\n@@ -296,1 +274,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, jraw_monitor[0]));\n+    res = jvmti->RawMonitorEnter(jraw_monitor[0]);\n@@ -298,1 +276,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti, jraw_monitor[0]));\n+    res = jvmti->RawMonitorExit(jraw_monitor[0]);\n@@ -318,1 +296,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->CreateRawMonitor(JVMTI_ENV_ARG(jvmti, sz), &jraw_monitor[i]);\n+    ret = jvmti->CreateRawMonitor(sz, &jraw_monitor[i]);\n@@ -331,1 +309,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorEnter(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorEnter(jraw_monitor[i]);\n@@ -344,1 +322,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorExit(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]));\n+    ret = jvmti->RawMonitorExit(jraw_monitor[i]);\n@@ -357,1 +335,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->RawMonitorWait(JVMTI_ENV_ARG(jvmti, jraw_monitor[i]), -1);\n+    ret = jvmti->RawMonitorWait(jraw_monitor[i], -1);\n@@ -365,1 +343,0 @@\n-#ifdef __cplusplus\n@@ -367,1 +344,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/functions\/rawmonitor\/rawmonitor.cpp","additions":39,"deletions":63,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#ifdef __cplusplus\n@@ -34,11 +33,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -46,1 +34,0 @@\n-#endif\n@@ -278,2 +265,1 @@\n-  res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-                                 JVMTI_VERSION_1_1);\n+  res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -490,1 +476,0 @@\n-#ifdef __cplusplus\n@@ -492,1 +477,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/heapref\/heapref.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#ifdef __cplusplus\n@@ -34,11 +33,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -46,1 +34,0 @@\n-#endif\n@@ -276,2 +263,1 @@\n-  res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-                                 JVMTI_VERSION_1_1);\n+  res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -488,1 +474,0 @@\n-#ifdef __cplusplus\n@@ -490,1 +475,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/refignore\/refignore.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-#ifdef __cplusplus\n@@ -41,19 +40,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n-#define JVMTI_ENV_ARG1 JNI_ENV_ARG1\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n@@ -89,1 +69,1 @@\n-  res = JVMTI_ENV_PTR(jvmti)->GetEnvironmentLocalStorage(JVMTI_ENV_ARG(jvmti, &val));\n+  res = jvmti->GetEnvironmentLocalStorage(&val);\n@@ -97,1 +77,1 @@\n-  res = JVMTI_ENV_PTR(jvmti)->SetEnvironmentLocalStorage(JVMTI_ENV_ARG(jvmti, val));\n+  res = jvmti->SetEnvironmentLocalStorage(val);\n@@ -104,1 +84,1 @@\n-  res = JVMTI_ENV_PTR(jvmti)->GetThreadLocalStorage(JVMTI_ENV_ARG(jvmti, thread), &val);\n+  res = jvmti->GetThreadLocalStorage(thread, &val);\n@@ -112,1 +92,1 @@\n-  res = JVMTI_ENV_PTR(jvmti)->SetThreadLocalStorage(JVMTI_ENV_ARG(jvmti, thread), val);\n+  res = jvmti->SetThreadLocalStorage(thread, val);\n@@ -167,2 +147,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -182,1 +161,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -185,1 +164,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti, JVMTI_ENABLE), JVMTI_EVENT_VM_INIT,NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT,NULL);\n@@ -204,1 +183,0 @@\n-#ifdef __cplusplus\n@@ -206,1 +184,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/setNullVMInit\/JvmtiTest\/JvmtiTest.cpp","additions":7,"deletions":30,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-#ifdef __cplusplus\n@@ -44,16 +43,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_PTR(x) x\n-#define JNI_ENV_ARG(x, y) y\n-#else\n-#define JNI_ENV_PTR(x) (*x)\n-#define JNI_ENV_ARG(x, y) x, y\n-#endif\n-\n-#endif\n-\n-#define JVMTI_ENV_PTR JNI_ENV_PTR\n-#define JVMTI_ENV_ARG JNI_ENV_ARG\n@@ -105,1 +88,1 @@\n-    err = JVMTI_ENV_PTR(jvmti_env)->GetTime(JVMTI_ENV_ARG(jvmti_env, &initial_time));\n+    err = jvmti_env->GetTime(&initial_time);\n@@ -160,1 +143,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventCallbacks(JVMTI_ENV_ARG(jvmti_env, &callbacks), sizeof(callbacks));\n+    res = jvmti->SetEventCallbacks(&callbacks, sizeof(callbacks));\n@@ -163,1 +146,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti_env, JVMTI_ENABLE), JVMTI_EVENT_VM_INIT, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_INIT, NULL);\n@@ -166,1 +149,1 @@\n-    res = JVMTI_ENV_PTR(jvmti)->SetEventNotificationMode(JVMTI_ENV_ARG(jvmti_env, JVMTI_ENABLE), JVMTI_EVENT_VM_DEATH, NULL);\n+    res = jvmti->SetEventNotificationMode(JVMTI_ENABLE, JVMTI_EVENT_VM_DEATH, NULL);\n@@ -187,1 +170,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetCurrentThreadCpuTime(JVMTI_ENV_ARG(jvmti_env, &curr));\n+    ret = jvmti->GetCurrentThreadCpuTime(&curr);\n@@ -192,1 +175,1 @@\n-    thread_info[threadNumber].ref = JNI_ENV_PTR(env)->NewWeakGlobalRef(JNI_ENV_ARG(env, thread));\n+    thread_info[threadNumber].ref = env->NewWeakGlobalRef(thread);\n@@ -240,1 +223,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetTime(JVMTI_ENV_ARG(jvmti_env, &now));\n+    ret = jvmti->GetTime(&now);\n@@ -247,1 +230,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetCurrentThreadCpuTimerInfo(JVMTI_ENV_ARG(jvmti_env, &timerInfoCurr));\n+    ret = jvmti->GetCurrentThreadCpuTimerInfo(&timerInfoCurr);\n@@ -252,1 +235,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetThreadCpuTimerInfo(JVMTI_ENV_ARG(jvmti_env, &timerInfoOther));\n+    ret = jvmti->GetThreadCpuTimerInfo(&timerInfoOther);\n@@ -257,1 +240,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetTimerInfo(JVMTI_ENV_ARG(jvmti_env, &timerInfoTime));\n+    ret = jvmti->GetTimerInfo(&timerInfoTime);\n@@ -262,1 +245,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetAvailableProcessors(JVMTI_ENV_ARG(jvmti_env, &processor_count));\n+    ret = jvmti->GetAvailableProcessors(&processor_count);\n@@ -267,1 +250,1 @@\n-    ret = JVMTI_ENV_PTR(jvmti)->GetAllThreads(JVMTI_ENV_ARG(jvmti_env, &thrCnt), &thrArray);\n+    ret = jvmti->GetAllThreads(&thrCnt, &thrArray);\n@@ -275,1 +258,1 @@\n-      ret = JVMTI_ENV_PTR(jvmti)->GetThreadCpuTime(JVMTI_ENV_ARG(jvmti_env, thread), &oth);\n+      ret = jvmti->GetThreadCpuTime(thread, &oth);\n@@ -281,1 +264,1 @@\n-          if (JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, thread), tref)) {\n+          if (env->IsSameObject(thread, tref)) {\n@@ -290,1 +273,1 @@\n-        ret = JVMTI_ENV_PTR(jvmti)->GetThreadInfo(JVMTI_ENV_ARG(jvmti_env, thread), &info);\n+        ret = jvmti->GetThreadInfo(thread, &info);\n@@ -383,1 +366,0 @@\n-#ifdef __cplusplus\n@@ -385,1 +367,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/timers\/JvmtiTest\/JvmtiTest.cpp","additions":15,"deletions":34,"binary":false,"changes":49,"status":"modified"}]}