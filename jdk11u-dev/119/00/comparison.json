{"files":[{"patch":"@@ -1,81 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 6176978\n- * @summary current Javadoc's invocation and extension (Doclet) mechanisms are problematic\n- * @modules jdk.javadoc\n- * @ignore no longer applicable, should delete\n- * @build T6176978\n- * @run main T6176978\n- *\/\n-\n-import java.io.*;\n-import java.net.*;\n-\n-public class T6176978\n-{\n-    public static void main(String[] args) throws Exception {\n-        \/\/ create and use a temp dir that will not be on jtreg's\n-        \/\/ default class path\n-        File tmpDir = new File(\"tmp\");\n-        tmpDir.mkdirs();\n-\n-        File testSrc = new File(System.getProperty(\"test.src\", \".\"));\n-        String[] javac_args = {\n-            \"-d\",\n-            \"tmp\",\n-            new File(testSrc, \"X.java\").getPath()\n-        };\n-\n-        int rc = com.sun.tools.javac.Main.compile(javac_args);\n-        if (rc != 0)\n-            throw new Error(\"javac exit code: \" + rc);\n-\n-        String[] jdoc_args = {\n-            \"-doclet\",\n-            \"X\",\n-            new File(testSrc, \"T6176978.java\").getPath()\n-        };\n-\n-        rc = jdk.javadoc.internal.tool.Main.execute(jdoc_args);\n-        if (rc == 0)\n-            throw new Error(\"javadoc unexpectedly succeeded\");\n-\n-\n-\n-        Thread currThread = Thread.currentThread();\n-        ClassLoader saveClassLoader = currThread.getContextClassLoader();\n-        URLClassLoader urlCL = new URLClassLoader(new URL[] { tmpDir.toURL() });\n-        currThread.setContextClassLoader(urlCL);\n-\n-        try {\n-            rc = jdk.javadoc.internal.tool.Main.execute(jdoc_args);\n-            if (rc != 0)\n-                throw new Error(\"javadoc exit: \" + rc);\n-        } finally {\n-            currThread.setContextClassLoader(saveClassLoader);\n-        }\n-    }\n-}\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/6176978\/T6176978.java","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.util.Collections;\n-import java.util.Locale;\n-import java.util.Set;\n-\n-import jdk.javadoc.doclet.Doclet;\n-import jdk.javadoc.doclet.Reporter;\n-import jdk.javadoc.doclet.DocletEnvironment;\n-\n-public class X {\n-    public static boolean run(DocletEnvironment root) {\n-        System.out.println(\"X.start\");\n-        return true;\n-    }\n-    public Set<Doclet.Option> getSupportedOptions() {\n-        return Collections.emptySet();\n-    }\n-\n-    public void init(Locale locale, Reporter reporter) {\n-        return;\n-    }\n-}\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/6176978\/X.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -1,112 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 4965490\n- * @summary Verify that matching braces can appear within inline tags.\n- * @ignore API, re-evaluate @bold, @maybe causes doclint to throw up.\n- * @modules jdk.javadoc\n- *\/\n-\n-import java.io.File;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Set;\n-\n-import javax.lang.model.SourceVersion;\n-import javax.lang.model.element.TypeElement;\n-\n-import com.sun.source.doctree.DocCommentTree;\n-import com.sun.source.doctree.DocTree;\n-import com.sun.source.util.DocTrees;\n-import jdk.javadoc.doclet.Doclet;\n-import jdk.javadoc.doclet.DocletEnvironment;\n-\n-\/**\n- * This is a {@code test} comment.\n- * It is {@bold {@underline only} a test}.\n- * We would like some code\n- * {@code for (int i : nums) { doit(i); } return; }\n- * to be embedded {@maybe {even {a couple {of levels}}} deep}.\n- *\/\n-public class InlineTagsWithBraces implements Doclet {\n-\n-    private static String[] expectedTags = {\n-        \"Text\", \"@code\", \"Text\",\n-        \"@bold\", \"Text\", \"@code\", \"Text\",\n-        \"@maybe\", \"Text\"\n-    };\n-    private static String[] expectedText = {\n-        \"This is a \", \"test\", \" comment.\\n\" +\n-        \" It is \", \"{@underline only} a test\", \".\\n\" +\n-        \" We would like some code\\n\" +\n-        \" \", \"for (int i : nums) { doit(i); } return; \", \"\\n\" +\n-        \" to be embedded \", \"{even {a couple {of levels}}} deep\", \".\"\n-    };\n-\n-    public static void main(String[] args) {\n-        String thisFile = \"\" +\n-            new File(System.getProperty(\"test.src\", \".\"), \"InlineTagsWithBraces.java\");\n-\n-        String[] argarray = {\n-            \"InlineTagsWithBraces\",\n-            \"-Xwerror\",\n-            thisFile\n-        };\n-        if (jdk.javadoc.internal.tool.Main.execute(argarray) != 0)\n-            throw new Error(\"Javadoc encountered warnings or errors.\");\n-    }\n-\n-    public boolean run(DocletEnvironment root) {\n-        DocTrees trees = root.getDocTrees();\n-        TypeElement cd = ElementFilter.typesIn(root.getIncludedElements()).iterator().next();\n-        DocCommentTree docCommentTree = trees.getDocCommentTree(cd);\n-        List<? extends DocTree> tags = docCommentTree.getBody();\n-\n-        for (int i = 0; i < tags.size(); i++) {\n-            System.out.println(tags.get(0).getKind());\n-\/\/            if (!tags[i].name().equals(expectedTags[i]) ||\n-\/\/                        !tags[i].text().equals(expectedText[i])) {\n-\/\/                throw new Error(\"Tag \\\"\" + tags[i] + \"\\\" not as expected\");\n-\/\/            }\n-        }\n-\n-        return true;\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return \"Test\";\n-    }\n-\n-    @Override\n-    public Set<Option> getSupportedOptions() {\n-        return Collections.emptySet();\n-    }\n-\n-    @Override\n-    public SourceVersion getSupportedSourceVersion() {\n-        return SourceVersion.latest();\n-    }\n-}\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/InlineTagsWithBraces.java","additions":0,"deletions":112,"binary":false,"changes":112,"status":"deleted"},{"patch":"@@ -1,96 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 4909767\n- * @summary Verify that omitting Doclet.languageVersion() hides 1.5 language\n- *      features from the doclet.\n- * @ignore API, re-evaluate, unsure of this test.\n- * @modules jdk.javadoc\n- *\/\n-\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Set;\n-\n-import javax.lang.model.SourceVersion;\n-\n-import jdk.javadoc.doclet.Doclet;\n-import jdk.javadoc.doclet.DocletEnvironment;\n-\n-public class LangVers implements Doclet {\n-\n-    public static void main(String[] args) {\n-        String thisFile = \"\" +\n-            new java.io.File(System.getProperty(\"test.src\", \".\"),\n-                             \"LangVers.java\");\n-\n-        String[] toolargs = {\n-            \"-doclet\", \"LangVers\",\n-            \"-docletpath\", System.getProperty(\"test.classes\", \".\"),\n-        };\n-        if (jdk.javadoc.internal.tool.Main.execute(toolargs) != 0)\n-            throw new Error(\"Javadoc encountered warnings or errors.\");\n-    }\n-\n-    public boolean run(DocletEnvironment root) {\n-        ClassDoc fishdoc = root.classNamed(\"LangVers.Fish\");\n-        System.out.println(fishdoc);\n-        if (fishdoc.isEnum()) {\n-            throw new Error(\"Enums are not hidden.\");\n-        }\n-\n-        for (MethodDoc meth : fishdoc.methods()) {\n-            System.out.println(meth);\n-            if (meth.flatSignature().indexOf('<') >= 0) {\n-                throw new Error(\"Type parameters are not hidden.\");\n-            }\n-        }\n-\n-        return true;\n-    }\n-\n-    public enum Fish {\n-        One, Two, Red, Blue;\n-\n-        public void enroll(List<? super Fish> school) {\n-            school.add(this);\n-        }\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return \"Test\";\n-    }\n-\n-    @Override\n-    public Set<Option> getSupportedOptions() {\n-        return Collections.emptySet();\n-    }\n-\n-    @Override\n-    public SourceVersion getSupportedSourceVersion() {\n-        return SourceVersion.latest();\n-    }\n-}\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/LangVers.java","additions":0,"deletions":96,"binary":false,"changes":96,"status":"deleted"}]}