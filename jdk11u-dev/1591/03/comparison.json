{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+$(if $(filter $(TOPDIR)\/%, $(SUPPORT_OUTPUTDIR)), $(eval SRC_ZIP_BASE := $(TOPDIR)), $(eval SRC_ZIP_BASE := $(SUPPORT_OUTPUTDIR)))\n@@ -54,1 +55,1 @@\n-    $(eval $d_TARGET := $(SRC_ZIP_WORK_DIR)\/$(patsubst $(TOPDIR)\/%,%,$d)\/$m) \\\n+    $(eval $d_TARGET := $(SRC_ZIP_WORK_DIR)\/$(patsubst $(TOPDIR)\/%,%,$(patsubst $(SUPPORT_OUTPUTDIR)\/%,%,$d))\/$m) \\\n@@ -57,1 +58,1 @@\n-          $$(if $(filter $(TOPDIR)\/%, $d), $$(link-file-relative), $$(link-file-absolute)) \\\n+          $$(if $(filter $(SRC_ZIP_BASE)\/%, $d), $$(link-file-relative), $$(link-file-absolute)) \\\n","filename":"make\/ZipSource.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -629,1 +629,11 @@\n-define link-file-relative\n+# In msys2 we use mklink \/J because its ln would perform a deep copy of the target.\n+# This inhibits performance and can lead to issues with long paths. With mklink \/J\n+# relative linking does not work, so we handle the link as absolute path.\n+ifeq ($(OPENJDK_BUILD_OS_ENV), windows.msys2)\n+  define link-file-relative\n+\t$(call MakeTargetDir)\n+\t$(RM) '$(call DecodeSpace, $@)'\n+\tcmd \/\/c \"mklink \/J $(call FixPath, $(call DecodeSpace, $@)) $(call FixPath, $(call DecodeSpace, $<))\"\n+  endef\n+else\n+  define link-file-relative\n@@ -633,1 +643,2 @@\n-endef\n+  endef\n+endif\n@@ -635,1 +646,8 @@\n-define link-file-absolute\n+ifeq ($(OPENJDK_BUILD_OS_ENV), windows.msys2)\n+  define link-file-absolute\n+\t$(call MakeTargetDir)\n+\t$(RM) '$(call DecodeSpace, $@)'\n+\tcmd \/\/c \"mklink \/J $(call FixPath, $(call DecodeSpace, $@)) $(call FixPath, $(call DecodeSpace, $<))\"\n+  endef\n+else\n+  define link-file-absolute\n@@ -639,1 +657,2 @@\n-endef\n+  endef\n+endif\n","filename":"make\/common\/MakeBase.gmk","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -881,0 +881,2 @@\n+    BUILD_HOTSPOT_JTREG_EXECUTABLES_LIBS_exejvm-test-launcher := jvm.lib\n+\n@@ -882,0 +884,1 @@\n+    BUILD_HOTSPOT_JTREG_EXECUTABLES_LIBS_exejvm-test-launcher := -ljvm\n","filename":"make\/test\/JtregNativeHotspot.gmk","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -153,0 +153,18 @@\n+\n+\/\/ In order to use a new NSAccessibility API and since our components\n+\/\/ are represented as a custom UI elements we need to implement a set\n+\/\/ of custom protocols. Definitions of these protocols will start here.\n+\n+\/\/ This is a root interface in the NSAccessibility* protocols hierarchy\n+\/\/ and all the component-specific protocols should be derived from it.\n+\/\/ It is also a place for the functions that might be exposed by all the\n+\/\/ component accessibility peers.\n+\/\/ Please see https:\/\/developer.apple.com\/documentation\/appkit\/nsaccessibilityprotocol\n+\/\/ for more details.\n+@interface CommonComponentAccessibility : JavaComponentAccessibility <NSAccessibilityElement> {\n+\n+}\n+- (NSRect)accessibilityFrame;\n+- (nullable id)accessibilityParent;\n+@end\n+\n@@ -2066,0 +2084,26 @@\n+@implementation CommonComponentAccessibility\n+\/\/ NSAccessibilityElement protocol implementation\n+- (NSRect)accessibilityFrame\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    jobject axComponent = JNFCallStaticObjectMethod(env, sjm_getAccessibleComponent,\n+                                                    fAccessible, fComponent);\n+\n+    NSSize size = getAxComponentSize(env, axComponent, fComponent);\n+    NSPoint point = getAxComponentLocationOnScreen(env, axComponent, fComponent);\n+    (*env)->DeleteLocalRef(env, axComponent);\n+    point.y += size.height;\n+\n+    point.y = [[[[self view] window] screen] frame].size.height - point.y;\n+\n+    NSRect retval = NSMakeRect(point.x, point.y, size.width, size.height);\n+    return retval;\n+}\n+\n+- (nullable id)accessibilityParent\n+{\n+    return [self accessibilityParentAttribute];\n+}\n+\n+@end\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":44,"deletions":0,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -27,4 +27,0 @@\n-#import \"JNIUtilities.h\"\n-#import \"ThreadUtilities.h\"\n-\n-static jclass sjc_CAccessibility = NULL;\n@@ -43,11 +39,1 @@\n-    AWT_ASSERT_APPKIT_THREAD;\n-    JNIEnv* env = [ThreadUtilities getJNIEnv];\n-\n-    GET_CACCESSIBILITY_CLASS_RETURN(FALSE);\n-    DECLARE_STATIC_METHOD_RETURN(jm_doAccessibleAction, sjc_CAccessibility, \"doAccessibleAction\",\n-                     \"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\", FALSE);\n-    (*env)->CallStaticVoidMethod(env, sjc_CAccessibility, jm_doAccessibleAction,\n-                                 [self axContextWithEnv:(env)], 0, fComponent);\n-    CHECK_EXCEPTION();\n-\n-    return TRUE;\n+    return [self performAccessibleAction:0];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ButtonAccessibility.m","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+- (BOOL)performAccessibleAction:(int)index;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:1];\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:4];\n@@ -52,0 +52,4 @@\n+    [rolesMap setObject:@\"ImageAccessibility\" forKey:@\"icon\"];\n+    [rolesMap setObject:@\"ImageAccessibility\" forKey:@\"desktopicon\"];\n+    [rolesMap setObject:@\"SpinboxAccessibility\" forKey:@\"spinbox\"];\n+\n@@ -61,1 +65,0 @@\n-\n@@ -98,0 +101,16 @@\n+\/\/ AccessibleAction support\n+- (BOOL)performAccessibleAction:(int)index\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+\n+    GET_CACCESSIBILITY_CLASS_RETURN(FALSE);\n+    DECLARE_STATIC_METHOD_RETURN(jm_doAccessibleAction, sjc_CAccessibility, \"doAccessibleAction\",\n+                                 \"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\", FALSE);\n+    (*env)->CallStaticVoidMethod(env, sjc_CAccessibility, jm_doAccessibleAction,\n+                                 [self axContextWithEnv:(env)], index, fComponent);\n+    CHECK_EXCEPTION();\n+\n+    return TRUE;\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"JavaComponentAccessibility.h\"\n+#import \"CommonComponentAccessibility.h\"\n+\n+#import <AppKit\/AppKit.h>\n+\n+@interface ImageAccessibility : CommonComponentAccessibility <NSAccessibilityImage> {\n+\n+};\n+- (nullable NSString *)accessibilityLabel;\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ImageAccessibility.h","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"ImageAccessibility.h\"\n+\n+\/*\n+ * Implementation of the accessibility peer for the icon role\n+ *\/\n+@implementation ImageAccessibility\n+- (nullable NSString *)accessibilityLabel\n+{\n+    return [self accessibilityTitleAttribute];\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ImageAccessibility.m","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"JavaComponentAccessibility.h\"\n+#import \"CommonComponentAccessibility.h\"\n+\n+#import <AppKit\/AppKit.h>\n+\n+@interface SpinboxAccessibility : CommonComponentAccessibility <NSAccessibilityStepper> {\n+\n+};\n+\n+- (nullable NSString *)accessibilityLabel;\n+- (nullable id)accessibilityValue;\n+- (BOOL)accessibilityPerformDecrement;\n+- (BOOL)accessibilityPerformIncrement;\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/SpinboxAccessibility.h","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"SpinboxAccessibility.h\"\n+\n+#define INCREMENT 0\n+#define DECREMENT 1\n+\n+\/*\n+ * Implementation of the accessibility peer for the spinner role\n+ *\/\n+@implementation SpinboxAccessibility\n+- (nullable NSString *)accessibilityLabel\n+{\n+    return [self accessibilityTitleAttribute];\n+}\n+\n+- (nullable id)accessibilityValue\n+{\n+    return [self accessibilityValueAttribute];\n+}\n+\n+- (BOOL)accessibilityPerformIncrement\n+{\n+    return [self performAccessibleAction:INCREMENT];\n+}\n+\n+\n+- (BOOL)accessibilityPerformDecrement\n+{\n+    return [self performAccessibleAction:DECREMENT];\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/SpinboxAccessibility.m","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -288,12 +288,20 @@\n-        int nleft = doc.getLength();\n-        Segment text = new Segment();\n-        \/\/ we would like to get direct data array access, not a copy of it\n-        text.setPartialReturn(true);\n-        int offs = 0;\n-        try {\n-            while (nleft > 0) {\n-                doc.getText(offs, nleft, text);\n-                Arrays.fill(text.array, text.offset,\n-                            text.count + text.offset, '\\u0000');\n-                nleft -= text.count;\n-                offs += text.count;\n+        DocumentFilter filter = null;\n+        if (doc instanceof AbstractDocument) {\n+            filter = ((AbstractDocument) doc).getDocumentFilter();\n+        }\n+        if (filter == null) {\n+            int nleft = doc.getLength();\n+            Segment text = new Segment();\n+            \/\/ we would like to get direct data array access, not a copy of it\n+            text.setPartialReturn(true);\n+            int offs = 0;\n+            try {\n+                while (nleft > 0) {\n+                    doc.getText(offs, nleft, text);\n+                    Arrays.fill(text.array, text.offset,\n+                                text.count + text.offset, '\\u0000');\n+                    nleft -= text.count;\n+                    offs += text.count;\n+                }\n+            } catch (BadLocationException ignored) {\n+                \/\/ we tried\n@@ -301,2 +309,0 @@\n-        } catch (BadLocationException ignored) {\n-            \/\/ we tried\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JPasswordField.java","additions":21,"deletions":15,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-  vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestDescription.java \\\n+  vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestMaxMetaspaceSize.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,63 +0,0 @@\n-#\n-#  Copyright (c) 2012, 2014, Oracle and\/or its affiliates. All rights reserved.\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-#  This code is free software; you can redistribute it and\/or modify it\n-#  under the terms of the GNU General Public License version 2 only, as\n-#  published by the Free Software Foundation.\n-#\n-#  This code is distributed in the hope that it will be useful, but WITHOUT\n-#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-#  version 2 for more details (a copy is included in the LICENSE file that\n-#  accompanied this code).\n-#\n-#  You should have received a copy of the GNU General Public License version\n-#  2 along with this work; if not, write to the Free Software Foundation,\n-#  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-#  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-#  or visit www.oracle.com if you need additional information or have any\n-#  questions.\n-#\n-\n-\n-# @test Test7162488.sh\n-# @bug 7162488\n-# @summary VM not printing unknown -XX options\n-# @run shell Test7162488.sh\n-#\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  TESTSRC=${PWD}\n-  echo \"TESTSRC not set.  Using \"${TESTSRC}\" as default\"\n-fi\n-echo \"TESTSRC=${TESTSRC}\"\n-## Adding common setup Variables for running shell tests.\n-. ${TESTSRC}\/..\/..\/test_env.sh\n-\n-JAVA=${TESTJAVA}${FS}bin${FS}java\n-\n-#\n-# Just run with an option we are confident will not be recognized,\n-# and check for the message:\n-#\n-OPTION=this_is_not_an_option\n-\n-${JAVA} -showversion -XX:${OPTION} 2>&1 | grep \"Unrecognized VM option\" \n-if [ \"$?\" != \"0\" ]\n-then\n-  printf \"FAILED: option not flagged as unrecognized.\\n\"\n-  exit 1\n-fi\n-\n-${JAVA} -showversion -XX:${OPTION} 2>&1 | grep ${OPTION}\n-if [ \"$?\" != \"0\" ]\n-then\n-  printf \"FAILED: bad option not named as being bad.\\n\"\n-  exit 1\n-fi\n-\n-printf \"Passed.\\n\"\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/7162488\/Test7162488.sh","additions":0,"deletions":63,"binary":false,"changes":63,"status":"deleted"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7162488\n+ * @summary VM should print unrecognized -XX option\n+ * @library \/test\/lib\n+ * @run driver TestUnrecognizedVmOption\n+ *\/\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestUnrecognizedVmOption {\n+    static final String OPTION=\"this_is_not_an_option\";\n+\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb =\n+            ProcessTools.createJavaProcessBuilder(\"-showversion\", \"-XX:\" + OPTION);\n+        new OutputAnalyzer(pb.start())\n+            .shouldNotHaveExitValue(0)\n+            .shouldContain(\"Unrecognized VM option\")\n+            .shouldContain(OPTION);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/7162488\/TestUnrecognizedVmOption.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Linux kernel stack guard should not cause segfaults on x86-32\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @requires os.family == \"linux\"\n+ * @compile T.java\n+ * @run main\/native TestStackGap\n+ *\/\n+\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestStackGap {\n+    public static void main(String args[]) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createNativeTestProcessBuilder(\"stack-gap\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+\n+        pb = ProcessTools.createNativeTestProcessBuilder(\"stack-gap\",\n+                                                         \"-XX:+DisablePrimordialThreadGuardPages\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/StackGap\/TestStackGap.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -1,49 +0,0 @@\n-# Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#!\/bin\/sh\n-\n-#\n-# @test testme.sh\n-# @summary Linux kernel stack guard should not cause segfaults on x86-32\n-# @compile T.java\n-# @run shell testme.sh\n-#\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  TESTSRC=${PWD}\n-  echo \"TESTSRC not set.  Using \"${TESTSRC}\" as default\"\n-fi\n-echo \"TESTSRC=${TESTSRC}\"\n-## Adding common setup Variables for running shell tests.\n-. ${TESTSRC}\/..\/..\/test_env.sh\n-\n-if [ \"${VM_OS}\" != \"linux\" ]\n-then\n-  echo \"Test only valid for Linux\"\n-  exit 0\n-fi\n-\n-LD_LIBRARY_PATH=.:${TESTJAVA}\/lib\/${VM_TYPE}:\/usr\/lib:$LD_LIBRARY_PATH\n-export LD_LIBRARY_PATH\n-\n-${TESTNATIVEPATH}\/stack-gap || exit $?\n-${TESTNATIVEPATH}\/stack-gap -XX:+DisablePrimordialThreadGuardPages || exit $?\n","filename":"test\/hotspot\/jtreg\/runtime\/StackGap\/testme.sh","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Stack guard pages should be installed correctly and removed when thread is detached\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @requires os.family == \"linux\"\n+ * @compile DoOverflow.java\n+ * @run main\/native TestStackGuardPages\n+ *\/\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\n+public class TestStackGuardPages {\n+    public static void main(String args[]) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createNativeTestProcessBuilder(\"invoke\",\n+                                                                        \"test_java_overflow\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+\n+        pb = ProcessTools.createNativeTestProcessBuilder(\"invoke\", \"test_native_overflow\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/StackGuardPages\/TestStackGuardPages.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -1,51 +0,0 @@\n-# Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#!\/bin\/sh\n-\n-#\n-# @test testme.sh\n-# @summary Stack guard pages should be installed correctly and removed when thread is detached\n-# @compile DoOverflow.java\n-# @run shell testme.sh\n-#\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  TESTSRC=${PWD}\n-  echo \"TESTSRC not set.  Using \"${TESTSRC}\" as default\"\n-fi\n-echo \"TESTSRC=${TESTSRC}\"\n-## Adding common setup Variables for running shell tests.\n-. ${TESTSRC}\/..\/..\/test_env.sh\n-\n-if [ \"${VM_OS}\" != \"linux\" ]\n-then\n-  echo \"Test only valid for Linux\"\n-  exit 0\n-fi\n-\n-LD_LIBRARY_PATH=.:${TESTJAVA}\/lib\/${VM_TYPE}:\/usr\/lib:$LD_LIBRARY_PATH\n-export LD_LIBRARY_PATH\n-\n-# Run the test for a java and native overflow\n-${TESTNATIVEPATH}\/invoke test_java_overflow\n-${TESTNATIVEPATH}\/invoke test_native_overflow\n-exit $?\n","filename":"test\/hotspot\/jtreg\/runtime\/StackGuardPages\/testme.sh","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-                pb.environment().merge(envVar, jvmLibDir().toString(),\n+                pb.environment().merge(envVar, Platform.jvmLibDir().toString(),\n@@ -146,1 +146,1 @@\n-        return jvmLibDir().resolve((Platform.isWindows() ? \"\" : \"lib\")\n+        return Platform.jvmLibDir().resolve((Platform.isWindows() ? \"\" : \"lib\")\n@@ -149,25 +149,0 @@\n-\n-    private static Path jvmLibDir() {\n-        Path dir = Paths.get(Utils.TEST_JDK);\n-        if (Platform.isWindows()) {\n-            return dir.resolve(\"bin\")\n-                      .resolve(variant())\n-                      .toAbsolutePath();\n-        } else {\n-            return dir.resolve(\"lib\")\n-                      .resolve(variant())\n-                      .toAbsolutePath();\n-        }\n-    }\n-\n-    private static String variant() {\n-        if (Platform.isServer()) {\n-            return \"server\";\n-        } else if (Platform.isClient()) {\n-            return \"client\";\n-        } else if (Platform.isMinimal()) {\n-            return \"minimal\";\n-        } else {\n-            throw new Error(\"TESTBUG: unsupported vm variant\");\n-        }\n-    }\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/SigTestDriver.java","additions":3,"deletions":28,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+public class Test {\n+    public static void test() {\n+        System.out.println (\"Hello Test\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/process\/Test.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test the native process builder API.\n+ * @library \/test\/lib\n+ * @build Test\n+ * @run main\/native TestNativeProcessBuilder\n+ *\/\n+\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestNativeProcessBuilder {\n+    public static void main(String args[]) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createNativeTestProcessBuilder(\"jvm-test-launcher\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/process\/TestNativeProcessBuilder.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <jni.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+JNIEnv* create_vm(JavaVM **jvm)\n+{\n+    JNIEnv* env;\n+    JavaVMInitArgs args;\n+    JavaVMOption options[1];\n+\n+    char classpath[4096];\n+    snprintf(classpath, sizeof classpath,\n+             \"-Djava.class.path=%s\", getenv(\"CLASSPATH\"));\n+    options[0].optionString = classpath;\n+\n+    args.version = JNI_VERSION_1_8;\n+    args.nOptions = 1;\n+    args.options = &options[0];\n+    args.ignoreUnrecognized = 0;\n+\n+    int ret = JNI_CreateJavaVM(jvm, (void**)&env, &args);\n+    if (ret < 0)\n+      exit(10);\n+\n+    return env;\n+}\n+\n+\n+void run(JNIEnv *env) {\n+  jclass test_class;\n+  jmethodID test_method;\n+\n+  test_class = (*env)->FindClass(env, \"Test\");\n+  if (test_class == NULL)\n+    exit(11);\n+\n+  test_method = (*env)->GetStaticMethodID(env, test_class, \"test\", \"()V\");\n+  if (test_method == NULL)\n+    exit(12);\n+\n+  (*env)->CallStaticVoidMethod(env, test_class, test_method);\n+}\n+\n+\n+int main(int argc, char **argv)\n+{\n+  JavaVM *jvm;\n+  JNIEnv *env = create_vm(&jvm);\n+\n+  run(env);\n+\n+  return 0;\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/process\/exejvm-test-launcher.c","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- *\n- * @summary converted from VM Testbase metaspace\/flags\/maxMetaspaceSize.\n- *\n- * @library \/vmTestbase \/test\/lib\n- * @run driver jdk.test.lib.FileInstaller . .\n- * @build metaspace.flags.maxMetaspaceSize.maxMetaspaceSize\n- * @run shell maxMetaspaceSize.sh\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestDescription.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ *\n+ * @summary converted from VM Testbase metaspace\/flags\/maxMetaspaceSize.\n+ *\n+ * @library \/vmTestbase \/test\/lib\n+ * @build metaspace.flags.maxMetaspaceSize.maxMetaspaceSize\n+ * @run driver metaspace.flags.maxMetaspaceSize.TestMaxMetaspaceSize\n+ *\/\n+package metaspace.flags.maxMetaspaceSize;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestMaxMetaspaceSize {\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb =\n+            ProcessTools.createJavaProcessBuilder(true, \"-XX:MaxMetaspaceSize=100m\",\n+                                                  maxMetaspaceSize.class.getName());\n+        OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+\n+        if (out.getExitValue() == 0) {\n+            \/\/ test passed\n+            return;\n+        } else {\n+            System.out.println(\"Non-zero exit value from child process. Could be OOM, which is OK\");\n+            out.shouldContain(\"Out of Memory Error\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestMaxMetaspaceSize.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -1,45 +0,0 @@\n-# Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-JAVA=\"$TESTJAVA\/bin\/java\"\n-JAVA_OPTS=\"$TESTJAVAOPTS $TESTVMOPTS -cp $TESTCLASSPATH\"\n-\n-TST=\"metaspace.flags.maxMetaspaceSize.maxMetaspaceSize\"\n-echo \"\"\n-echo \"$JAVA $JAVA_OPTS -XX:MaxMetaspaceSize=100m $TST\"\n-echo \"\"\n-$JAVA $JAVA_OPTS -XX:MaxMetaspaceSize=100m $TST\n-res=$?\n-\n-printf \"\\n\\n\"\n-if [ $res -eq 0 ]; then\n-        echo Test passed\n-else\n-        grep -s \"Out of Memory Error\" hs_err_pid*.log\n-        res2=$?\n-        if [ $res2 -eq 0 ]; then\n-            echo JAVA crashed with expected Out of Memory Error error.\n-            echo Test passed\n-        else\n-            echo Test failed\n-            exit 1\n-        fi\n-fi\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/maxMetaspaceSize.sh","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"},{"patch":"@@ -0,0 +1,137 @@\n+\/*\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5040740\n+ * @summary annotations cause memory leak\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.process.*\n+ * @run testng LoaderLeakTest\n+ *\/\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.ProcessTools;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import java.io.FileInputStream;\n+import java.lang.annotation.Retention;\n+import java.lang.ref.Reference;\n+import java.lang.ref.WeakReference;\n+import java.nio.file.*;\n+import java.util.*;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+public class LoaderLeakTest {\n+\n+    @Test\n+    public void testWithoutReadingAnnotations() throws Throwable {\n+        runJavaProcessExpectSuccessExitCode(\"Main\");\n+    }\n+\n+    @Test\n+    public void testWithReadingAnnotations() throws Throwable {\n+        runJavaProcessExpectSuccessExitCode(\"Main\",  \"foo\");\n+    }\n+\n+    private void runJavaProcessExpectSuccessExitCode(String ... command) throws Throwable {\n+        var processBuilder = ProcessTools.createJavaProcessBuilder(command)\n+                                                      .directory(Paths.get(Utils.TEST_CLASSES).toFile());\n+        ProcessTools.executeCommand(processBuilder).shouldHaveExitValue(0);\n+    }\n+\n+}\n+\n+class Main {\n+\n+    public static void main(String[] args) throws Exception {\n+        for (int i = 0; i < 100; i++) {\n+            doTest(args.length != 0);\n+        }\n+    }\n+\n+    static void doTest(boolean readAnn) throws Exception {\n+        ClassLoader loader = new SimpleClassLoader();\n+        var c = new WeakReference<Class<?>>(loader.loadClass(\"C\"));\n+        if (c.get() == null) throw new AssertionError(\"class missing after loadClass\");\n+        \/\/ c.get() should never return null here since we hold a strong\n+        \/\/ reference to the class loader that loaded the class referred by c.\n+        if (c.get().getClassLoader() != loader) throw new AssertionError(\"wrong classloader\");\n+        if (readAnn) System.out.println(c.get().getAnnotations()[0]);\n+        if (c.get() == null) throw new AssertionError(\"class missing before GC\");\n+        System.gc();\n+        System.gc();\n+        if (c.get() == null) throw new AssertionError(\"class missing after GC but before loader is unreachable\");\n+        System.gc();\n+        System.gc();\n+        Reference.reachabilityFence(loader);\n+        loader = null;\n+\n+        \/\/ Might require multiple calls to System.gc() for weak-references\n+        \/\/ processing to be complete. If the weak-reference is not cleared as\n+        \/\/ expected we will hang here until timed out by the test harness.\n+        while (true) {\n+            System.gc();\n+            Thread.sleep(20);\n+            if (c.get() == null) {\n+                break;\n+            }\n+        }\n+    }\n+}\n+\n+@Retention(RUNTIME)\n+@interface A {\n+    B b();\n+}\n+\n+@interface B { }\n+\n+@A(b=@B()) class C { }\n+\n+class SimpleClassLoader extends ClassLoader {\n+    public SimpleClassLoader() { }\n+\n+    private byte[] getClassImplFromDataBase(String className) {\n+        try {\n+            return Files.readAllBytes(Paths.get(className + \".class\"));\n+        } catch (Exception e) {\n+            throw new Error(\"could not load class \" + className, e);\n+        }\n+    }\n+\n+    @Override\n+    public Class<?> loadClass(String className, boolean resolveIt)\n+            throws ClassNotFoundException {\n+        switch (className) {\n+            case \"A\":\n+            case \"B\":\n+            case \"C\": {\n+                var classData = getClassImplFromDataBase(className);\n+                return defineClass(className, classData, 0, classData.length);\n+            }\n+        }\n+        return super.loadClass(className, resolveIt);\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/lang\/annotation\/LoaderLeakTest.java","additions":137,"deletions":0,"binary":false,"changes":137,"status":"added"},{"patch":"@@ -1,28 +0,0 @@\n-\/*\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-public\n-@java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)\n-@interface A {\n-    B b();\n-}\n","filename":"test\/jdk\/java\/lang\/annotation\/loaderLeak\/A.java","additions":0,"deletions":28,"binary":false,"changes":28,"status":"deleted"},{"patch":"@@ -1,24 +0,0 @@\n-\/*\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-public @interface B {}\n","filename":"test\/jdk\/java\/lang\/annotation\/loaderLeak\/B.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -1,24 +0,0 @@\n-\/*\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-public @A(b=@B()) class C {}\n","filename":"test\/jdk\/java\/lang\/annotation\/loaderLeak\/C.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -1,93 +0,0 @@\n-#!\/bin\/sh\n-\n-# Copyright (c) 2004, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  echo \"TESTSRC not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-echo \"TESTSRC=${TESTSRC}\"\n-if [ \"${TESTJAVA}\" = \"\" ]\n-then\n-  echo \"TESTJAVA not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-echo \"TESTJAVA=${TESTJAVA}\"\n-if [ \"${COMPILEJAVA}\" = \"\" ]; then\n-  COMPILEJAVA=\"${TESTJAVA}\"\n-fi\n-echo \"COMPILEJAVA=${COMPILEJAVA}\"\n-if [ \"${TESTCLASSES}\" = \"\" ]\n-then\n-  echo \"TESTCLASSES not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-echo \"TESTCLASSES=${TESTCLASSES}\"\n-echo \"CLASSPATH=${CLASSPATH}\"\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    ;;\n-  Windows* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-mkdir -p classes\n-cp ${TESTSRC}${FS}*.java .\n-${COMPILEJAVA}${FS}bin${FS}javac ${TESTJAVACOPTS} ${TESTTOOLVMOPTS} -d classes A.java B.java C.java\n-${COMPILEJAVA}${FS}bin${FS}javac ${TESTJAVACOPTS} ${TESTTOOLVMOPTS} Main.java\n-${TESTJAVA}${FS}bin${FS}java ${TESTVMOPTS} Main\n-result=$?\n-if [ $result -eq 0 ]\n-then\n-  echo \"Passed 1 of 2\"\n-else\n-  echo \"Failed 1 of 2\"\n-  exit $result\n-fi\n-${TESTJAVA}${FS}bin${FS}java ${TESTVMOPTS} Main foo\n-result=$?\n-if [ $result -eq 0 ]\n-then\n-  echo \"Passed 2 of 2\"\n-else\n-  echo \"Failed 2 of 2\"\n-fi\n-exit $result\n","filename":"test\/jdk\/java\/lang\/annotation\/loaderLeak\/LoaderLeak.sh","additions":0,"deletions":93,"binary":false,"changes":93,"status":"deleted"},{"patch":"@@ -1,135 +0,0 @@\n-\/*\n- * Copyright (c) 2004, 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 5040740\n- * @summary annotations cause memory leak\n- * @author gafter\n- *\n- * @run shell LoaderLeak.sh\n- *\/\n-\n-import java.net.*;\n-import java.lang.ref.*;\n-import java.util.*;\n-import java.io.*;\n-\n-public class Main {\n-    public static void main(String[] args) throws Exception {\n-        for (int i=0; i<100; i++)\n-            doTest(args.length != 0);\n-    }\n-\n-    static void doTest(boolean readAnn) throws Exception {\n-        \/\/ URL classes = new URL(\"file:\/\/\" + System.getProperty(\"user.dir\") + \"\/classes\");\n-        \/\/ URL[] path = { classes };\n-        \/\/ URLClassLoader loader = new URLClassLoader(path);\n-        ClassLoader loader = new SimpleClassLoader();\n-        WeakReference<Class<?>> c = new WeakReference(loader.loadClass(\"C\"));\n-        if (c.get() == null) throw new AssertionError();\n-        if (c.get().getClassLoader() != loader) throw new AssertionError();\n-        if (readAnn) System.out.println(c.get().getAnnotations()[0]);\n-        if (c.get() == null) throw new AssertionError();\n-        System.gc();\n-        System.gc();\n-        if (c.get() == null) throw new AssertionError();\n-        System.gc();\n-        System.gc();\n-        loader = null;\n-\n-        \/\/ Might require multiple calls to System.gc() for weak-references\n-        \/\/ processing to be complete. If the weak-reference is not cleared as\n-        \/\/ expected we will hang here until timed out by the test harness.\n-        while (true) {\n-            System.gc();\n-            Thread.sleep(20);\n-            if (c.get() == null) {\n-                break;\n-            }\n-        }\n-    }\n-}\n-\n-class SimpleClassLoader extends ClassLoader {\n-    private Hashtable classes = new Hashtable();\n-\n-    public SimpleClassLoader() {\n-    }\n-    private byte getClassImplFromDataBase(String className)[] {\n-        byte result[];\n-        try {\n-            FileInputStream fi = new FileInputStream(\"classes\/\"+className+\".class\");\n-            result = new byte[fi.available()];\n-            fi.read(result);\n-            return result;\n-        } catch (Exception e) {\n-\n-            \/*\n-             * If we caught an exception, either the class wasnt found or it\n-             * was unreadable by our process.\n-             *\/\n-            return null;\n-        }\n-    }\n-    public Class loadClass(String className) throws ClassNotFoundException {\n-        return (loadClass(className, true));\n-    }\n-    public synchronized Class loadClass(String className, boolean resolveIt)\n-        throws ClassNotFoundException {\n-        Class result;\n-        byte  classData[];\n-\n-        \/* Check our local cache of classes *\/\n-        result = (Class)classes.get(className);\n-        if (result != null) {\n-            return result;\n-        }\n-\n-        \/* Check with the primordial class loader *\/\n-        try {\n-            result = super.findSystemClass(className);\n-            return result;\n-        } catch (ClassNotFoundException e) {\n-        }\n-\n-        \/* Try to load it from our repository *\/\n-        classData = getClassImplFromDataBase(className);\n-        if (classData == null) {\n-            throw new ClassNotFoundException();\n-        }\n-\n-        \/* Define it (parse the class file) *\/\n-        result = defineClass(classData, 0, classData.length);\n-        if (result == null) {\n-            throw new ClassFormatError();\n-        }\n-\n-        if (resolveIt) {\n-            resolveClass(result);\n-        }\n-\n-        classes.put(className, result);\n-        return result;\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/annotation\/loaderLeak\/Main.java","additions":0,"deletions":135,"binary":false,"changes":135,"status":"deleted"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.util.Arrays;\n+\n+import javax.swing.JPasswordField;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+import javax.swing.text.DocumentFilter;\n+import javax.swing.text.PlainDocument;\n+\n+\/**\n+ * @test\n+ * @bug 8296878\n+ * @summary can the old password be accessed in the DocumentFilter\n+ *\/\n+public final class OldPasswordInDocumentFilter {\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(OldPasswordInDocumentFilter::test);\n+    }\n+\n+    private static void test() {\n+        JPasswordField test = new JPasswordField();\n+        PlainDocument document = (PlainDocument) test.getDocument();\n+        document.setDocumentFilter(new DocumentFilter() {\n+            @Override\n+            public void replace(FilterBypass fb, int offset,\n+                                int length, String text, AttributeSet attrs)\n+                    throws BadLocationException\n+            {\n+                Document doc = fb.getDocument();\n+                String string = doc.getText(0, doc.getLength()) + text;\n+                if (string.length() <= 6 && string.matches(\"[0-9]+\")) {\n+                    super.replace(fb, offset, length, text, attrs);\n+                }\n+            }\n+        });\n+        test.setText(\"123456\");\n+        test.setText(\"\");\n+\n+        char[] password = test.getPassword();\n+        if (password.length != 0) {\n+            throw new RuntimeException(Arrays.toString(password));\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPasswordField\/OldPasswordInDocumentFilter.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+    private static final String testJdk     = privilegedGetProperty(\"test.jdk\");\n@@ -343,0 +344,28 @@\n+    \/**\n+     * Returns absolute path to directory containing JVM shared library.\n+     *\/\n+    public static Path jvmLibDir() {\n+        Path dir = Paths.get(testJdk);\n+        if (Platform.isWindows()) {\n+            return dir.resolve(\"bin\")\n+                .resolve(variant())\n+                .toAbsolutePath();\n+        } else {\n+            return dir.resolve(\"lib\")\n+                .resolve(variant())\n+                .toAbsolutePath();\n+        }\n+    }\n+\n+    private static String variant() {\n+        if (Platform.isServer()) {\n+            return \"server\";\n+        } else if (Platform.isClient()) {\n+            return \"client\";\n+        } else if (Platform.isMinimal()) {\n+            return \"minimal\";\n+        } else {\n+            throw new Error(\"TESTBUG: unsupported vm variant\");\n+        }\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":30,"deletions":1,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.io.File;\n@@ -30,0 +31,1 @@\n+import java.nio.file.Paths;\n@@ -48,0 +50,1 @@\n+import jdk.test.lib.Platform;\n@@ -516,0 +519,42 @@\n+    \/**\n+     * Helper method to create a process builder for launching native executable\n+     * test that uses\/loads JVM.\n+     *\n+     * @param executableName The name of an executable to be launched.\n+     * @param args Arguments for the executable.\n+     * @return New ProcessBuilder instance representing the command.\n+     *\/\n+    public static ProcessBuilder createNativeTestProcessBuilder(String executableName,\n+                                                                String... args) throws Exception {\n+        executableName = Platform.isWindows() ? executableName + \".exe\" : executableName;\n+        String executable = Paths.get(System.getProperty(\"test.nativepath\"), executableName)\n+            .toAbsolutePath()\n+            .toString();\n+\n+        ProcessBuilder pb = new ProcessBuilder(executable);\n+        pb.command().addAll(Arrays.asList(args));\n+        addJvmLib(pb);\n+        return pb;\n+    }\n+\n+    \/**\n+     * Adds JVM library path to the native library path.\n+     *\n+     * @param pb ProcessBuilder to be updated with JVM library path.\n+     * @return pb Update ProcessBuilder instance.\n+     *\/\n+    public static ProcessBuilder addJvmLib(ProcessBuilder pb) throws Exception {\n+        String jvmLibDir = Platform.jvmLibDir().toString();\n+        String libPathVar = Platform.sharedLibraryPathVariableName();\n+        String currentLibPath = pb.environment().get(libPathVar);\n+\n+        String newLibPath = jvmLibDir;\n+        if ( (currentLibPath != null) && !currentLibPath.isEmpty() ) {\n+            newLibPath = currentLibPath + File.pathSeparator + jvmLibDir;\n+        }\n+\n+        pb.environment().put(libPathVar, newLibPath);\n+\n+        return pb;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"}]}