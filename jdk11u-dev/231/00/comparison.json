{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * main class used by regtest PrefsSpi.sh\n+ * main class used by regtest PrefsSpiTest.java\n","filename":"test\/jdk\/java\/util\/prefs\/PrefsSpi.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,104 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2009, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 4991526 6514993 7197662\n-# @summary Unit test for Preferences jar providers\n-#\n-# @build PrefsSpi\n-# @run shell PrefsSpi.sh\n-# @author Martin Buchholz\n-\n-# Command-line usage: sh PrefsSpi.sh \/path\/to\/build\n-\n-if [ -z \"$TESTJAVA\" ]; then\n-    if [ $# -lt 1 ]; then exit 1; fi\n-    TESTJAVA=\"$1\"; shift\n-    TESTSRC=\"`pwd`\"\n-    TESTCLASSES=\"`pwd`\"\n-fi\n-if [ -z \"$COMPILEJAVA\" ]; then\n-    COMPILEJAVA=\"${TESTJAVA}\"\n-fi\n-\n- java=\"$TESTJAVA\/bin\/java\"\n-javac=\"$COMPILEJAVA\/bin\/javac\"\n-  jar=\"$COMPILEJAVA\/bin\/jar\"\n-\n-Die() { printf \"%s\\n\" \"$*\"; exit 1; }\n-\n-Sys() {\n-    printf \"%s\\n\" \"$*\"; \"$@\"; rc=\"$?\";\n-    test \"$rc\" -eq 0 || Die \"Command \\\"$*\\\" failed with exitValue $rc\";\n-}\n-\n-cat > StubPreferences.java <<'EOF'\n-import java.util.prefs.*;\n-\n-public class StubPreferences extends AbstractPreferences {\n-    public StubPreferences() { super(null, \"\"); }\n-    public String              getSpi(String x)           { return null; }\n-    public void                putSpi(String x, String y) { }\n-    public void                removeSpi(String x)        { }\n-    public AbstractPreferences childSpi(String x)         { return null; }\n-    public void                removeNodeSpi()            { }\n-    public String[]            keysSpi()                  { return null; }\n-    public String[]            childrenNamesSpi()         { return null; }\n-    public void                syncSpi()                  { }\n-    public void                flushSpi()                 { }\n-}\n-EOF\n-\n-cat > StubPreferencesFactory.java <<'EOF'\n-import java.util.prefs.*;\n-\n-public class StubPreferencesFactory implements PreferencesFactory {\n-    public Preferences userRoot()   { return new StubPreferences(); }\n-    public Preferences systemRoot() { return new StubPreferences(); }\n-}\n-EOF\n-\n-Sys rm -rf jarDir extDir\n-Sys mkdir -p jarDir\/META-INF\/services extDir\n-echo \"StubPreferencesFactory\" \\\n-  > \"jarDir\/META-INF\/services\/java.util.prefs.PreferencesFactory\"\n-Sys \"$javac\" ${TESTJAVACOPTS} ${TESTTOOLVMOPTS} -d jarDir StubPreferencesFactory.java StubPreferences.java\n-\n-(cd jarDir && \"$jar\" ${TESTTOOLVMOPTS} \"cf\" \"..\/extDir\/PrefsSpi.jar\" \".\")\n-\n-case \"`uname`\" in Windows*|CYGWIN* ) CPS=';';; *) CPS=':';; esac\n-\n-Sys \"$java\" ${TESTVMOPTS} \"-cp\" \"$TESTCLASSES${CPS}extDir\/PrefsSpi.jar\" \\\n-    -Djava.util.prefs.PreferencesFactory=StubPreferencesFactory \\\n-    -Djava.util.prefs.userRoot=. \\\n-    PrefsSpi \"StubPreferences\"\n-Sys \"$java\" ${TESTVMOPTS} \"-cp\" \"$TESTCLASSES\" \\\n-    -Djava.util.prefs.userRoot=. \\\n-    PrefsSpi \"java.util.prefs.*\"\n-Sys \"$java\" ${TESTVMOPTS} \"-cp\" \"$TESTCLASSES${CPS}extDir\/PrefsSpi.jar\" \\\n-    -Djava.util.prefs.userRoot=. \\\n-    PrefsSpi \"StubPreferences\"\n-\n-rm -rf jarDir extDir\n","filename":"test\/jdk\/java\/util\/prefs\/PrefsSpi.sh","additions":0,"deletions":104,"binary":false,"changes":104,"status":"deleted"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4991526 6514993 7197662\n+ * @summary Unit test for Preferences jar providers\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.util.JarUtils jdk.test.lib.process.*\n+ *        PrefsSpi StubPreferencesFactory StubPreferences\n+ * @run testng PrefsSpiTest\n+ *\/\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import jdk.test.lib.JDKToolFinder;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;\n+import static java.nio.file.StandardOpenOption.CREATE;\n+import static java.util.Arrays.asList;\n+\n+import static jdk.test.lib.Utils.TEST_CLASSES;\n+import static jdk.test.lib.Utils.TEST_CLASS_PATH;\n+\n+public class PrefsSpiTest {\n+\n+    private static final Path SPIJAR = Path.of(\"extDir\", \"PrefsSpi.jar\");\n+    private static final String SPIJAR_CP = TEST_CLASS_PATH\n+            + File.pathSeparator + SPIJAR.toString();\n+\n+    @BeforeClass\n+    public void initialize() throws Exception {\n+        Path xdir = Path.of(\"jarDir\");\n+\n+        Path config = xdir.resolve(\"META-INF\/services\/java.util.prefs.PreferencesFactory\");\n+        Files.createDirectories(config.getParent());\n+        Files.write(config, \"StubPreferencesFactory\".getBytes(), CREATE);\n+\n+        String[] files = {\"StubPreferencesFactory.class\", \"StubPreferences.class\"};\n+        for (String f : files) {\n+            Path source = Path.of(TEST_CLASSES, f);\n+            Path target = xdir.resolve(source.getFileName());\n+            Files.copy(source, target, REPLACE_EXISTING);\n+        }\n+\n+        JarUtils.createJarFile(SPIJAR, xdir, Paths.get(\".\"));\n+    }\n+\n+    @DataProvider\n+    public Object[][] testCases() {\n+        return new Object[][]{\n+            \/\/ CLI options,                        runtime arguments\n+            {List.of(\"-cp\", SPIJAR_CP,\n+                     \"-Djava.util.prefs.PreferencesFactory=StubPreferencesFactory\"),\n+                                                   \"StubPreferences\"},\n+            {List.of(\"-cp\", TEST_CLASS_PATH),      \"java.util.prefs.*\"},\n+            {List.of(\"-cp\", SPIJAR_CP),            \"StubPreferences\"}\n+        };\n+    }\n+\n+    @Test(dataProvider = \"testCases\")\n+    public void testProvider(List<String> opts, String pattern) throws Throwable {\n+        List<String> args = new ArrayList<>();\n+        args.add(JDKToolFinder.getJDKTool(\"java\"));\n+        args.addAll(asList(Utils.getTestJavaOpts()));\n+        args.addAll(opts);\n+        args.add(\"-Djava.util.prefs.userRoot=.\");\n+        args.add(PrefsSpi.class.getName());\n+        args.add(pattern);\n+\n+        ProcessTools.executeCommand(args.stream()\n+                                        .filter(t -> !t.isEmpty())\n+                                        .toArray(String[]::new))\n+                    .shouldHaveExitValue(0);\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/util\/prefs\/PrefsSpiTest.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.prefs.AbstractPreferences;\n+\n+public class StubPreferences extends AbstractPreferences {\n+    public StubPreferences() { super(null, \"\"); }\n+    public String              getSpi(String x)           { return null; }\n+    public void                putSpi(String x, String y) { }\n+    public void                removeSpi(String x)        { }\n+    public AbstractPreferences childSpi(String x)         { return null; }\n+    public void                removeNodeSpi()            { }\n+    public String[]            keysSpi()                  { return null; }\n+    public String[]            childrenNamesSpi()         { return null; }\n+    public void                syncSpi()                  { }\n+    public void                flushSpi()                 { }\n+}\n","filename":"test\/jdk\/java\/util\/prefs\/StubPreferences.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.prefs.Preferences;\n+import java.util.prefs.PreferencesFactory;\n+\n+public class StubPreferencesFactory implements PreferencesFactory {\n+    public Preferences userRoot()   { return new StubPreferences(); }\n+    public Preferences systemRoot() { return new StubPreferences(); }\n+}\n","filename":"test\/jdk\/java\/util\/prefs\/StubPreferencesFactory.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"}]}