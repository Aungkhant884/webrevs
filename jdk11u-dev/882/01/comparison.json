{"files":[{"patch":"@@ -466,1 +466,0 @@\n-java\/awt\/MenuBar\/8007006\/bug8007006.java 8202886 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires (os.family == \"mac\")\n@@ -29,1 +30,0 @@\n- * @author Leonid Romanov\n@@ -31,1 +31,1 @@\n- * @build ExtendedRobot jdk.test.lib.Platform\n+ * @build jdk.test.lib.Platform\n@@ -43,0 +43,1 @@\n+    private static volatile boolean isActionPerformed;\n@@ -52,2 +53,2 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n-        robot.setAutoDelay(50);\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(300);\n@@ -56,2 +57,1 @@\n-        robot.waitForIdle(1500);\n-\n+        robot.waitForIdle();\n@@ -59,22 +59,0 @@\n-\n-        robot.waitForIdle(1500);\n-\n-\n-        \/\/ open \"Apple\" menu (the leftmost one)\n-        robot.keyPress(KeyEvent.VK_META);\n-        robot.keyPress(KeyEvent.VK_SHIFT);\n-        robot.keyPress(KeyEvent.VK_SLASH);\n-        robot.keyRelease(KeyEvent.VK_SLASH);\n-        robot.keyRelease(KeyEvent.VK_SHIFT);\n-        robot.keyRelease(KeyEvent.VK_META);\n-\n-        \/\/ Select our menu\n-        robot.keyPress(KeyEvent.VK_LEFT);\n-        robot.keyRelease(KeyEvent.VK_LEFT);\n-\n-        \/\/ Select menu item\n-        robot.keyPress(KeyEvent.VK_DOWN);\n-        robot.keyRelease(KeyEvent.VK_DOWN);\n-        robot.keyPress(KeyEvent.VK_ENTER);\n-        robot.keyRelease(KeyEvent.VK_ENTER);\n-\n@@ -83,4 +61,1 @@\n-        MenuBar mbar = frame1.getMenuBar();\n-        Menu menu = mbar.getMenu(0);\n-        CheckboxMenuItem item = (CheckboxMenuItem)menu.getItem(0);\n-        boolean isChecked = item.getState();\n+        performMenuItemTest(robot);\n@@ -89,3 +64,2 @@\n-\n-        if (isChecked) {\n-            throw new Exception(\"Test failed: menu item remained checked\");\n+        if (!isActionPerformed) {\n+            throw new Exception(\"Test failed: menu item action was not performed\");\n@@ -109,4 +83,10 @@\n-        MenuBar mbar = new MenuBar();\n-        Menu menu = new Menu(\"Menu\");\n-        MenuItem item = new CheckboxMenuItem(\"Checked\", true);\n-\n+        \/\/ A very long name makes it more likely that the robot will hit the\n+        \/\/ menu\n+        Menu menu = new Menu(\"TestTestTestTestTestTestTestTestTestTest\");\n+        MenuItem item = new MenuItem(\"TestTestTestTestTestTestTestTestTestTest\");\n+        item.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                isActionPerformed = true;\n+            }\n+        });\n@@ -114,1 +94,4 @@\n-        mbar.add(menu);\n+        MenuBar mb = new MenuBar();\n+        mb.add(menu);\n+        return mb;\n+    }\n@@ -116,1 +99,18 @@\n-        return mbar;\n+    private static void performMenuItemTest(Robot robot) {\n+        \/\/ Find the menu on the screen menu bar\n+        \/\/ The location depends upon the application name which is the name\n+        \/\/ of the first menu.\n+        \/\/ Unfortunately, the application name can vary based on how the\n+        \/\/ application is run.\n+        \/\/ The work around is to make the menu and the menu item names very\n+        \/\/ long.\n+        int menuBarX = 250;\n+        int menuBarY = 11;\n+        int menuItemX = menuBarX;\n+        int menuItemY = 34;\n+        robot.mouseMove(menuBarX, menuBarY);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseMove(menuItemX, menuItemY);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        waitForAction();\n@@ -119,0 +119,11 @@\n+    private static void waitForAction() {\n+        try {\n+            for (int i = 0; i < 10; i++) {\n+                if (isActionPerformed) {\n+                    return;\n+                }\n+                Thread.sleep(100);\n+            }\n+        } catch (InterruptedException ex) {\n+        }\n+    }\n","filename":"test\/jdk\/java\/awt\/MenuBar\/8007006\/bug8007006.java","additions":52,"deletions":41,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-   @author Vladislav Karnaukhov\n@@ -33,1 +32,1 @@\n-   @build jdk.test.libr.Platform\n+   @build jdk.test.lib.Platform\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/4199622\/bug4199622.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+ * @requires (os.family == \"mac\")\n@@ -39,1 +40,0 @@\n- * @author Sergey Bylokhov\n@@ -41,0 +41,1 @@\n+ *          \/test\/jdk\/lib\/testlibrary\/\n","filename":"test\/jdk\/javax\/swing\/JFrame\/NSTexturedJFrame\/NSTexturedJFrame.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires (os.family == \"mac\")\n@@ -29,1 +30,0 @@\n- * @author Petr Pchelko\n@@ -31,0 +31,1 @@\n+ *          \/test\/jdk\/lib\/testlibrary\/\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/7154841\/bug7154841.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}