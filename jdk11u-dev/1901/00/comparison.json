{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import sun.security.jca.JCAUtil;\n@@ -311,1 +312,1 @@\n-        paramGenSpi.engineInit(size, new SecureRandom());\n+        paramGenSpi.engineInit(size, JCAUtil.getSecureRandom());\n@@ -342,1 +343,1 @@\n-            paramGenSpi.engineInit(genParamSpec, new SecureRandom());\n+            paramGenSpi.engineInit(genParamSpec, JCAUtil.getSecureRandom());\n","filename":"src\/java.base\/share\/classes\/java\/security\/AlgorithmParameterGenerator.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1223,1 +1223,1 @@\n-        init(opmode, key, JceSecurity.RANDOM);\n+        init(opmode, key, JCAUtil.getSecureRandom());\n@@ -1364,1 +1364,1 @@\n-        init(opmode, key, params, JceSecurity.RANDOM);\n+        init(opmode, key, params, JCAUtil.getSecureRandom());\n@@ -1507,1 +1507,1 @@\n-        init(opmode, key, params, JceSecurity.RANDOM);\n+        init(opmode, key, params, JCAUtil.getSecureRandom());\n@@ -1655,1 +1655,1 @@\n-        init(opmode, certificate, JceSecurity.RANDOM);\n+        init(opmode, certificate, JCAUtil.getSecureRandom());\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,0 @@\n-\n@@ -80,2 +79,0 @@\n-    static final SecureRandom RANDOM = new SecureRandom();\n-\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/JceSecurity.java.template","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -449,1 +449,1 @@\n-        init(key, JceSecurity.RANDOM);\n+        init(key, JCAUtil.getSecureRandom());\n@@ -517,1 +517,1 @@\n-        init(key, params, JceSecurity.RANDOM);\n+        init(key, params, JCAUtil.getSecureRandom());\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyAgreement.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -453,1 +453,1 @@\n-        init(params, JceSecurity.RANDOM);\n+        init(params, JCAUtil.getSecureRandom());\n@@ -517,1 +517,1 @@\n-        init(keysize, JceSecurity.RANDOM);\n+        init(keysize, JCAUtil.getSecureRandom());\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyGenerator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}