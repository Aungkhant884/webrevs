{"files":[{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8168518 8194486\n+ * @summary  testing jdk.krb5.rcache.useMD5. This action is put in a separate\n+ *           test so that ReplayCacheTestProc.java can be launched with special\n+ *           test.* system properties easily.\n+ * @library ..\/..\/..\/..\/java\/security\/testlibrary\/ \/test\/lib\n+ * @build jdk.test.lib.Platform\n+ * @run main jdk.test.lib.FileInstaller TestHosts TestHosts\n+ * @run main\/othervm\/timeout=300 -Djdk.krb5.rcache.useMD5=true\n+ *           -Djdk.net.hosts.file=TestHosts\n+ *           -Dtest.service=host ReplayCacheTestProc\n+ *\/\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/ReplayCacheTestProcWithMD5.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -1,34 +0,0 @@\n-#\n-# Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8168518 8194486\n-# @summary  testing jdk.krb5.rcache.useMD5. This action is put in a separate\n-#           test so that ReplayCacheTestProc.java can be launched with special\n-#           test.* system properties easily.\n-# @library ..\/..\/..\/..\/java\/security\/testlibrary\/ \/test\/lib\n-# @build jdk.test.lib.Platform\n-# @run main jdk.test.lib.FileInstaller TestHosts TestHosts\n-# @run main\/othervm\/timeout=300 -Djdk.krb5.rcache.useMD5=true\n-#           -Djdk.net.hosts.file=TestHosts\n-#           -Dtest.service=host ReplayCacheTestProc\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/rcache_usemd5.sh","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,3 @@\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -27,0 +30,2 @@\n+\n+import jdk.test.lib.SecurityTools;\n@@ -30,3 +35,8 @@\n-\/**\n- * This class is called by the test ktcheck.sh and is not meant to run\n- * by itself.\n+\/*\n+ * @test\n+ * @bug 6950546\n+ * @summary \"ktab -d name etype\" to \"ktab -d name [-e etype] [kvno | all | old]\"\n+ * @requires os.family == \"windows\"\n+ * @library \/test\/lib\n+ * @modules java.security.jgss\/sun.security.krb5.internal.ktab\n+ *          java.security.jgss\/sun.security.krb5\n@@ -35,0 +45,50 @@\n+\n+    private static final String KEYTAB = \"ktab.tmp\";\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        Files.deleteIfExists(Path.of(KEYTAB));\n+\n+        ktab(\"-a me mine\");\n+        check(1,16,1,23,1,17);\n+        ktab(\"-a me mine -n 0\");\n+        check(0,16,0,23,0,17);\n+        ktab(\"-a me mine -n 1 -append\");\n+        check(0,16,0,23,0,17,1,16,1,23,1,17);\n+        ktab(\"-a me mine -append\");\n+        check(0,16,0,23,0,17,1,16,1,23,1,17,2,16,2,23,2,17);\n+        ktab(\"-a me mine\");\n+        check(3,16,3,23,3,17);\n+        ktab(\"-a me mine -n 4 -append\");\n+        check(3,16,3,23,3,17,4,16,4,23,4,17);\n+        ktab(\"-a me mine -n 5 -append\");\n+        check(3,16,3,23,3,17,4,16,4,23,4,17,5,16,5,23,5,17);\n+        ktab(\"-a me mine -n 6 -append\");\n+        check(3,16,3,23,3,17,4,16,4,23,4,17,5,16,5,23,5,17,6,16,6,23,6,17);\n+        ktab(\"-d me 3\");\n+        check(4,16,4,23,4,17,5,16,5,23,5,17,6,16,6,23,6,17);\n+        ktab(\"-d me -e 16 6\");\n+        check(4,16,4,23,4,17,5,16,5,23,5,17,6,23,6,17);\n+        ktab(\"-d me -e 17 6\");\n+        check(4,16,4,23,4,17,5,16,5,23,5,17,6,23);\n+        ktab(\"-d me -e 16 5\");\n+        check(4,16,4,23,4,17,5,23,5,17,6,23);\n+        ktab(\"-d me old\");\n+        check(4,16,5,17,6,23);\n+        try {\n+            ktab(\"-d me old\");\n+            throw new Exception(\"Should fail\");\n+        } catch (Exception e) {\n+            \/\/ no-op\n+        }\n+        check(4,16,5,17,6,23);\n+        ktab(\"-d me\");\n+        check();\n+    }\n+\n+    static void ktab(String s) throws Exception {\n+        File conf = new File(System.getProperty(\"test.src\"), \"onlythree.conf\");\n+        SecurityTools.ktab(\"-J-Djava.security.krb5.conf=\" + conf\n+                + \" -k \" + KEYTAB + \" -f \" + s).shouldHaveExitValue(0);\n+    }\n+\n@@ -37,1 +97,1 @@\n-     * @param args keytabname kvno etype...\n+     * @param args kvno etype...\n@@ -39,1 +99,1 @@\n-    public static void main(String[] args) throws Exception {\n+    static void check(int... args) throws Exception {\n@@ -41,1 +101,1 @@\n-        KeyTab ktab = KeyTab.getInstance(args[0]);\n+        KeyTab ktab = KeyTab.getInstance(KEYTAB);\n@@ -43,2 +103,2 @@\n-        for (int i=1; i<args.length; i += 2) {\n-            expected.add(args[i]+\":\"+args[i+1]);\n+        for (int i = 0; i < args.length; i += 2) {\n+            expected.add(args[i] + \":\" + args[i + 1]);\n","filename":"test\/jdk\/sun\/security\/krb5\/tools\/KtabCheck.java","additions":69,"deletions":9,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -27,1 +29,0 @@\n-import java.io.File;\n@@ -30,0 +31,1 @@\n+import java.nio.file.Path;\n@@ -32,0 +34,2 @@\n+import static jdk.test.lib.SecurityTools.klist;\n+\n@@ -34,1 +38,1 @@\n- * @bug 8014196\n+ * @bug 8014196 7002036 7043737\n@@ -37,0 +41,1 @@\n+ * @library \/test\/lib\n@@ -38,1 +43,0 @@\n- *          java.security.jgss\/sun.security.krb5.internal.tools\n@@ -48,0 +52,2 @@\n+        ktab(\"-l\").shouldNotHaveExitValue(0);\n+        klist(\"-k \" + NAME).shouldNotHaveExitValue(0);\n@@ -57,2 +63,6 @@\n-        sun.security.krb5.internal.tools.Ktab.main(\n-            (\"-k \" + NAME + \" -a me@HERE pass\").split(\" \"));\n+        ktab(\"-a me@HERE pass\").shouldHaveExitValue(0);\n+        ktab(\"-l\").shouldHaveExitValue(0);\n+\n+        \/\/ 7002036: ktab return code changes on a error case\n+        ktab(\"-hello\").shouldNotHaveExitValue(0);\n+        ktab(\"\").shouldNotHaveExitValue(0);\n@@ -60,0 +70,11 @@\n+\n+        \/\/ 3. Invalid keytab\n+        Files.write(Path.of(NAME), \"garbage\".getBytes());\n+        ktab(\"-l\").shouldNotHaveExitValue(0);\n+        ktab(\"-a me@HERE pass\").shouldNotHaveExitValue(0);\n+        klist(\"-k \" + NAME).shouldNotHaveExitValue(0);\n+    }\n+\n+    static OutputAnalyzer ktab(String s) throws Exception {\n+        s = (\"-k \" + NAME + \" \" + s).trim();\n+        return SecurityTools.ktab(s);\n","filename":"test\/jdk\/sun\/security\/krb5\/tools\/KtabZero.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -1,67 +0,0 @@\n-#\n-# Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 7002036\n-# @summary ktab return code changes on a error case\n-# @run shell ktarg.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-\n-OS=`uname -s`\n-case \"$OS\" in\n-  CYGWIN* )\n-    FS=\"\/\"\n-    ;;\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    echo \"Unsupported system!\"\n-    exit 0;\n-    ;;\n-esac\n-\n-KEYTAB=ktarg.tmp\n-\n-rm $KEYTAB 2> \/dev\/null\n-KTAB=\"${TESTJAVA}${FS}bin${FS}ktab -k $KEYTAB\"\n-\n-$KTAB -a me@LOCAL mine || exit 1\n-\n-$KTAB -hello\n-if [ $? = 0 ]; then exit 2; fi\n-\n-$KTAB\n-if [ $? = 0 ]; then exit 3; fi\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/krb5\/tools\/ktarg.sh","additions":0,"deletions":67,"binary":false,"changes":67,"status":"deleted"},{"patch":"@@ -1,99 +0,0 @@\n-#\n-# Copyright (c) 2010, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6950546\n-# @summary \"ktab -d name etype\" to \"ktab -d name [-e etype] [kvno | all | old]\"\n-# @modules java.security.jgss\/sun.security.krb5.internal.ktab\n-#          java.security.jgss\/sun.security.krb5\n-# @compile KtabCheck.java\n-# @run shell ktcheck.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-\n-OS=`uname -s`\n-case \"$OS\" in\n-  CYGWIN* )\n-    FS=\"\/\"\n-    ;;\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    echo \"Unsupported system!\"\n-    exit 0;\n-    ;;\n-esac\n-\n-KEYTAB=ktab.tmp\n-\n-rm $KEYTAB\n-\n-EXTRA_OPTIONS=\"-Djava.security.krb5.conf=${TESTSRC}${FS}onlythree.conf\"\n-KTAB=\"${TESTJAVA}${FS}bin${FS}ktab -J${EXTRA_OPTIONS} -k $KEYTAB -f\"\n-CHECK=\"${TESTJAVA}${FS}bin${FS}java -cp ${TESTCLASSES} ${TESTVMOPTS} ${EXTRA_OPTIONS} \\\n-        --add-exports java.security.jgss\/sun.security.krb5.internal.ktab=ALL-UNNAMED \\\n-        --add-exports java.security.jgss\/sun.security.krb5=ALL-UNNAMED \\\n-        KtabCheck $KEYTAB\"\n-\n-echo ${EXTRA_OPTIONS}\n-\n-$KTAB -a me mine\n-$CHECK 1 16 1 23 1 17 || exit 1\n-$KTAB -a me mine -n 0\n-$CHECK 0 16 0 23 0 17 || exit 1\n-$KTAB -a me mine -n 1 -append\n-$CHECK 0 16 0 23 0 17 1 16 1 23 1 17 || exit 1\n-$KTAB -a me mine -append\n-$CHECK 0 16 0 23 0 17 1 16 1 23 1 17 2 16 2 23 2 17 || exit 1\n-$KTAB -a me mine\n-$CHECK 3 16 3 23 3 17 || exit 1\n-$KTAB -a me mine -n 4 -append\n-$CHECK 3 16 3 23 3 17 4 16 4 23 4 17 || exit 1\n-$KTAB -a me mine -n 5 -append\n-$CHECK 3 16 3 23 3 17 4 16 4 23 4 17 5 16 5 23 5 17 || exit 1\n-$KTAB -a me mine -n 6 -append\n-$CHECK 3 16 3 23 3 17 4 16 4 23 4 17 5 16 5 23 5 17 6 16 6 23 6 17 || exit 1\n-$KTAB -d me 3\n-$CHECK 4 16 4 23 4 17 5 16 5 23 5 17 6 16 6 23 6 17 || exit 1\n-$KTAB -d me -e 16 6\n-$CHECK 4 16 4 23 4 17 5 16 5 23 5 17 6 23 6 17 || exit 1\n-$KTAB -d me -e 17 6\n-$CHECK 4 16 4 23 4 17 5 16 5 23 5 17 6 23 || exit 1\n-$KTAB -d me -e 16 5\n-$CHECK 4 16 4 23 4 17 5 23 5 17 6 23 || exit 1\n-$KTAB -d me old\n-$CHECK 4 16 5 17 6 23 || exit 1\n-$KTAB -d me old\n-$CHECK 4 16 5 17 6 23 || exit 1\n-$KTAB -d me\n-$CHECK || exit 1\n","filename":"test\/jdk\/sun\/security\/krb5\/tools\/ktcheck.sh","additions":0,"deletions":99,"binary":false,"changes":99,"status":"deleted"},{"patch":"@@ -1,51 +0,0 @@\n-#\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 7043737\n-# @summary klist does not detect non-existing keytab\n-# @run shell ktmissing.sh\n-#\n-\n-OS=`uname -s`\n-case \"$OS\" in\n-  CYGWIN* )\n-    FS=\"\/\"\n-    ;;\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    echo \"Unsupported system!\"\n-    exit 0;\n-    ;;\n-esac\n-\n-${TESTJAVA}${FS}bin${FS}klist -k this_file_does_not_exist && exit 1\n-\n-echo ABC > this_is_not_a_keytab\n-\n-${TESTJAVA}${FS}bin${FS}klist -k this_is_not_a_keytab && exit 2\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/krb5\/tools\/ktmissing.sh","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -1,74 +0,0 @@\n-#\n-# Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8014196\n-# @summary ktab creates a file with zero kt_vno\n-# @run shell ktzero.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-\n-OS=`uname -s`\n-case \"$OS\" in\n-  CYGWIN* )\n-    FS=\"\/\"\n-    ;;\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    echo \"Unsupported system!\"\n-    exit 0;\n-    ;;\n-esac\n-\n-KEYTAB=ktzero.tmp\n-\n-rm $KEYTAB 2> \/dev\/null\n-KTAB=\"${TESTJAVA}${FS}bin${FS}ktab -k $KEYTAB\"\n-\n-# Listing non-existing ktab should fail\n-$KTAB -l && exit 1\n-\n-# Can add to non-existing ktab\n-$KTAB -a me@LOCAL mine || exit 2\n-\n-# Now can be listed\n-$KTAB -l || exit 3\n-\n-echo ABCDEFG > $KEYTAB\n-\n-# Invalid keytab should fail for all commands\n-$KTAB -l && exit 4\n-$KTAB -a me@LOCAL mine && exit 2\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/krb5\/tools\/ktzero.sh","additions":0,"deletions":74,"binary":false,"changes":74,"status":"deleted"},{"patch":"@@ -253,0 +253,27 @@\n+\n+     * Runs ktab.\n+     *\n+     * @param args arguments to ktab in a single string. Only call this if\n+     *             there is no white space inside an argument. This string will\n+     *             be split with {@code \\s+}.\n+     * @return an {@link OutputAnalyzer} object\n+     * @throws Exception if there is an error\n+     *\/\n+    public static OutputAnalyzer ktab(String args) throws Exception {\n+        return execute(getProcessBuilder(\n+                \"ktab\", List.of(args.trim().split(\"\\\\s+\"))));\n+    }\n+\n+    \/**\n+     * Runs klist.\n+     *\n+     * @param args arguments to klist in a single string. Only call this if\n+     *             there is no white space inside an argument. This string will\n+     *             be split with {@code \\s+}.\n+     * @return an {@link OutputAnalyzer} object\n+     * @throws Exception if there is an error\n+     *\/\n+    public static OutputAnalyzer klist(String args) throws Exception {\n+        return execute(getProcessBuilder(\n+                \"klist\", List.of(args.trim().split(\"\\\\s+\"))));\n+    }\n","filename":"test\/lib\/jdk\/test\/lib\/SecurityTools.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"}]}