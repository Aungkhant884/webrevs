{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.util.LinkedHashMap;\n@@ -45,1 +46,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Sep 2021\n@@ -205,1 +206,1 @@\n-        Map<String, String> all = new HashMap<>();\n+        Map<String, String> all = new LinkedHashMap<>();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/LiteralElement.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,1 @@\n+import java.util.LinkedHashMap;\n@@ -65,1 +66,1 @@\n- * @LastModified: Nov 2017\n+ * @LastModified: Sep 2021\n@@ -132,0 +133,1 @@\n+     * {@link LinkedHashMap} is necessary to make traversal order consistent across runs.\n@@ -133,1 +135,1 @@\n-    private Map<Template, Object> _neededTemplates = new HashMap<>();\n+    private Map<Template, Object> _neededTemplates = new LinkedHashMap<>();\n@@ -137,0 +139,1 @@\n+     * {@link LinkedHashMap} is necessary to make traversal order consistent across runs.\n@@ -138,1 +141,1 @@\n-    private Map<Template, Mode> _namedTemplates = new HashMap<>();\n+    private Map<Template, Mode> _namedTemplates = new LinkedHashMap<>();\n@@ -201,1 +204,1 @@\n-            _importLevels = new HashMap<>();\n+            _importLevels = new LinkedHashMap<>();\n@@ -1056,2 +1059,2 @@\n-        _namedTemplates = new HashMap<>();\n-        _neededTemplates = new HashMap<>();\n+        _namedTemplates = new LinkedHashMap<>();\n+        _neededTemplates = new LinkedHashMap<>();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/Mode.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n- * @LastModified: Nov 2017\n+ * @LastModified: Sep 2021\n@@ -386,1 +386,1 @@\n-                                                  toString(),\n+                                                  getClass().getName(), \/\/ Name of this node should be consistent across runs.\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/Number.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,1 @@\n+import java.util.LinkedHashMap;\n@@ -78,1 +79,1 @@\n- * @LastModified: Nov 2017\n+ * @LastModified: Sep 2021\n@@ -286,1 +287,1 @@\n-        protected Map<String, Object> _nameToLVGMap = new HashMap<>();\n+        protected Map<String, Object> _nameToLVGMap = new LinkedHashMap<>();\n@@ -1357,2 +1358,2 @@\n-        HashMap<LocalVariableGen, InstructionHandle> revisedLocalVarStart = new HashMap<>();\n-        HashMap<LocalVariableGen, InstructionHandle> revisedLocalVarEnd = new HashMap<>();\n+        HashMap<LocalVariableGen, InstructionHandle> revisedLocalVarStart = new LinkedHashMap<>();\n+        HashMap<LocalVariableGen, InstructionHandle> revisedLocalVarEnd = new LinkedHashMap<>();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/MethodGenerator.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}