{"files":[{"patch":"@@ -1043,1 +1043,1 @@\n-  vframe* vf = vframe::new_vframe(fst.current(), fst.register_map(), thread);\n+  vframe* vf = vframe::new_vframe(fst, thread);\n@@ -1152,1 +1152,1 @@\n-          vf = vframe::new_vframe(fst.current(), fst.register_map(), thread);\n+          vf = vframe::new_vframe(fst, thread);\n@@ -1179,1 +1179,1 @@\n-    vf = vframe::new_vframe(fst.current(), fst.register_map(), thread);\n+    vf = vframe::new_vframe(fst, thread);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -62,0 +62,8 @@\n+vframe* vframe::new_vframe(StackFrameStream& fst, JavaThread* thread) {\n+  if (fst.current()->is_runtime_frame()) {\n+    fst.next();\n+  }\n+  guarantee(!fst.is_done(), \"missing caller\");\n+  return new_vframe(fst.current(), fst.register_map(), thread);\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/vframe.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-  \/\/ Factory method for creating vframes\n+  \/\/ Factory methods for creating vframes\n@@ -65,0 +65,1 @@\n+  static vframe* new_vframe(StackFrameStream& fst, JavaThread* thread);\n","filename":"src\/hotspot\/share\/runtime\/vframe.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}