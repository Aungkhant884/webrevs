{"files":[{"patch":"@@ -557,1 +557,1 @@\n-        if (ik->can_be_verified_at_dumptime()) {\n+        if (!MetaspaceShared::is_old_class(ik)) {\n@@ -1595,1 +1595,1 @@\n-      if (ik->can_be_verified_at_dumptime()) {\n+      if (!MetaspaceShared::is_old_class(ik)) {\n@@ -1619,0 +1619,23 @@\n+\/\/ Check if a class or its super class\/interface is old.\n+bool MetaspaceShared::is_old_class(InstanceKlass* ik) {\n+  if (ik == NULL) {\n+    return false;\n+  }\n+  if (ik->major_version() < 50 \/*JAVA_6_VERSION*\/) {\n+    return true;\n+  }\n+  if (is_old_class(ik->java_super())) {\n+    return true;\n+  }\n+  Array<Klass*>* interfaces = ik->local_interfaces();\n+  int len = interfaces->length();\n+  for (int i = 0; i < len; i++) {\n+    Klass* k = interfaces->at(i);\n+    InstanceKlass* ik = InstanceKlass::cast(k);\n+    if (is_old_class(ik)) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n@@ -1777,1 +1800,1 @@\n-  if (ik->init_state() < InstanceKlass::linked && ik->can_be_verified_at_dumptime()) {\n+  if (ik->init_state() < InstanceKlass::linked && !MetaspaceShared::is_old_class(ik)) {\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -228,0 +228,1 @@\n+  static bool is_old_class(InstanceKlass* ik);\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -548,1 +548,1 @@\n-  if (is_shared() && _constants->pool_holder()->verified_at_dump_time()) {\n+  if (is_shared() && !_constants->pool_holder()->is_shared_old_klass()) {\n@@ -556,1 +556,1 @@\n-  assert(is_shared() && _constants->pool_holder()->verified_at_dump_time(), \"must be\");\n+  assert(is_shared() && !_constants->pool_holder()->is_shared_old_klass()(), \"must be\");\n@@ -562,1 +562,1 @@\n-  assert(!(is_shared() && _constants->pool_holder()->verified_at_dump_time()), \"shared methods have fixed adapter_trampoline\");\n+  assert(!(is_shared() && !_constants->pool_holder()->is_shared_old_klass()()), \"shared methods have fixed adapter_trampoline\");\n","filename":"src\/hotspot\/share\/oops\/constMethod.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -368,1 +368,1 @@\n-  if (!_pool_holder->is_linked() && !_pool_holder->verified_at_dump_time()) {\n+  if (!_pool_holder->is_linked() && _pool_holder->is_shared_old_klass()) {\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2289,3 +2289,3 @@\n-  if (can_be_verified_at_dumptime()) {\n-    \/\/ Remember this so we can avoid walking the hierarchy at runtime.\n-    set_verified_at_dump_time();\n+  if (MetaspaceShared::is_old_class(this)) {\n+    \/\/ Set the old class bit.\n+    set_is_shared_old_klass();\n@@ -2393,24 +2393,0 @@\n-\/\/ Check if a class or any of its supertypes has a version older than 50.\n-\/\/ CDS will not perform verification of old classes during dump time because\n-\/\/ without changing the old verifier, the verification constraint cannot be\n-\/\/ retrieved during dump time.\n-\/\/ Verification of archived old classes will be performed during run time.\n-bool InstanceKlass::can_be_verified_at_dumptime() const {\n-  if (major_version() < 50 \/*JAVA_6_VERSION*\/) {\n-    return false;\n-  }\n-  if (java_super() != NULL && !java_super()->can_be_verified_at_dumptime()) {\n-    return false;\n-  }\n-  Array<Klass*>* interfaces = local_interfaces();\n-  int len = interfaces->length();\n-  for (int i = 0; i < len; i++) {\n-    Klass* k = interfaces->at(i);\n-    InstanceKlass* ik = InstanceKlass::cast(k);\n-    if (!ik->can_be_verified_at_dumptime()) {\n-      return false;\n-    }\n-  }\n-  return true;\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":3,"deletions":27,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1337,1 +1337,0 @@\n-  bool can_be_verified_at_dumptime() const;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-    _verified_at_dump_time = 8\n+    _is_shared_old_klass = 8\n@@ -328,2 +328,2 @@\n-  void set_verified_at_dump_time() {\n-    CDS_ONLY(_shared_class_flags |= _verified_at_dump_time;)\n+  void set_is_shared_old_klass() {\n+    CDS_ONLY(_shared_class_flags |= _is_shared_old_klass;)\n@@ -331,2 +331,2 @@\n-  bool verified_at_dump_time() const {\n-    CDS_ONLY(return (_shared_class_flags & _verified_at_dump_time) != 0;)\n+  bool is_shared_old_klass() const {\n+    CDS_ONLY(return (_shared_class_flags & _is_shared_old_klass) != 0;)\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  return _klass->is_shared() && !MetaspaceShared::remapped_readwrite() && _klass->verified_at_dump_time();\n+  return _klass->is_shared() && !MetaspaceShared::remapped_readwrite() && !_klass->is_shared_old_klass();\n@@ -1056,1 +1056,1 @@\n-     m->method_holder()->verified_at_dump_time()) {\n+     !MetaspaceShared::is_old_class(m->method_holder()) {\n","filename":"src\/hotspot\/share\/oops\/klassVtable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-  if (is_shared() && !MetaspaceShared::remapped_readwrite() && method_holder()->verified_at_dump_time()) {\n+  if (is_shared() && !MetaspaceShared::remapped_readwrite() && !method_holder()->is_shared_old_klass()) {\n@@ -348,1 +348,1 @@\n-  if (is_shared() && !MetaspaceShared::remapped_readwrite() && method_holder()->verified_at_dump_time()) {\n+  if (is_shared() && !MetaspaceShared::remapped_readwrite() && !method_holder()->is_shared_old_klass()) {\n@@ -989,1 +989,1 @@\n-  if (method_holder()->verified_at_dump_time()) {\n+  if (!method_holder()->is_shared_old_klass()) {\n@@ -1003,1 +1003,1 @@\n-  if (method_holder()->verified_at_dump_time()) {\n+  if (!method_holder()->is_shared_old_klass()) {\n@@ -1092,1 +1092,1 @@\n-  if (is_shared() && method_holder()->verified_at_dump_time()) {\n+  if (is_shared() && !method_holder()->is_shared_old_klass()) {\n@@ -1109,1 +1109,1 @@\n-  if (!(is_shared() && method_holder()->verified_at_dump_time())) {\n+  if (!(is_shared() && !method_holder()->is_shared_old_klass())) {\n@@ -1153,1 +1153,1 @@\n-  if (mh->is_shared() && mh->method_holder()->verified_at_dump_time()) {\n+  if (mh->is_shared() && !mh->method_holder()->is_shared_old_klass()) {\n@@ -1164,1 +1164,1 @@\n-  if (!method_holder()->verified_at_dump_time()) {\n+  if (method_holder()->is_shared_old_klass()) {\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2591,1 +2591,1 @@\n-  if (entry != NULL && (method->is_shared() && method->method_holder()->verified_at_dump_time())) {\n+  if (entry != NULL && (method->is_shared() && !method->method_holder()->is_shared_old_klass())) {\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}