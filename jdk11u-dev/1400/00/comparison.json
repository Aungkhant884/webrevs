{"files":[{"patch":"@@ -42,0 +42,1 @@\n+import jdk.test.lib.Platform;\n@@ -165,1 +166,3 @@\n-        new TestGCLogMessages().testWithToSpaceExhaustionLogs();\n+        if (Platform.isDebugBuild()) {\n+          new TestGCLogMessages().testWithEvacuationFailureLogs();\n+        }\n@@ -206,1 +209,1 @@\n-    private void testWithToSpaceExhaustionLogs() throws Exception {\n+    private void testWithEvacuationFailureLogs() throws Exception {\n@@ -210,0 +213,3 @@\n+                                                                  \"-XX:+G1EvacuationFailureALot\",\n+                                                                  \"-XX:G1EvacuationFailureALotCount=100\",\n+                                                                  \"-XX:G1EvacuationFailureALotInterval=1\",\n@@ -211,1 +217,1 @@\n-                                                                  GCTestWithToSpaceExhaustion.class.getName());\n+                                                                  GCTestWithEvacuationFailure.class.getName());\n@@ -221,1 +227,1 @@\n-                                                   GCTestWithToSpaceExhaustion.class.getName());\n+                                                   GCTestWithEvacuationFailure.class.getName());\n@@ -270,1 +276,1 @@\n-    static class GCTestWithToSpaceExhaustion {\n+    static class GCTestWithEvacuationFailure {\n@@ -273,0 +279,2 @@\n+        private static Object[] holder = new Object[200]; \/\/ Must be larger than G1EvacuationFailureALotCount\n+\n@@ -276,4 +284,5 @@\n-            \/\/ create 128MB of garbage. This should result in at least one GC,\n-            \/\/ some of them with to-space exhaustion.\n-            for (int i = 0; i < 1024; i++) {\n-                garbage = new byte[128 * 1024];\n+            \/\/ Create 16 MB of garbage. This should result in at least one GC,\n+            \/\/ (Heap size is 32M, we use 17MB for the large object above)\n+            \/\/ which is larger than G1EvacuationFailureALotInterval.\n+            for (int i = 0; i < 16 * 1024; i++) {\n+                holder[i % holder.length] = new byte[1024];\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"}]}