{"files":[{"patch":"@@ -3496,1 +3496,1 @@\n-      __ tbnz(disp_hdr, exact_log2(markOopDesc::monitor_value), object_has_monitor);\n+      __ tbnz(disp_hdr, exact_log2(markOop::monitor_value), object_has_monitor);\n@@ -3500,1 +3500,1 @@\n-    __ orr(tmp, disp_hdr, markOopDesc::unlocked_value);\n+    __ orr(tmp, disp_hdr, markOop::unlocked_value);\n@@ -3524,1 +3524,1 @@\n-    __ mov(tmp, (address) (~(os::vm_page_size()-1) | (uintptr_t)markOopDesc::lock_mask_in_place));\n+    __ mov(tmp, (address) (~(os::vm_page_size()-1) | (uintptr_t)markOop::lock_mask_in_place));\n@@ -3539,1 +3539,1 @@\n-      __ add(tmp, disp_hdr, (ObjectMonitor::owner_offset_in_bytes()-markOopDesc::monitor_value));\n+      __ add(tmp, disp_hdr, (ObjectMonitor::owner_offset_in_bytes()-markOop::monitor_value));\n@@ -3545,1 +3545,1 @@\n-      \/\/ markOopDesc::monitor_value so use markOopDesc::unused_mark which has the\n+      \/\/ markOop::monitor_value so use markOop::unused_mark which has the\n@@ -3547,1 +3547,1 @@\n-      __ mov(tmp, (address)markOopDesc::unused_mark());\n+      __ mov(tmp, (address)markOop::unused_mark().value());\n@@ -3587,1 +3587,1 @@\n-      __ tbnz(disp_hdr, exact_log2(markOopDesc::monitor_value), object_has_monitor);\n+      __ tbnz(disp_hdr, exact_log2(markOop::monitor_value), object_has_monitor);\n@@ -3603,1 +3603,1 @@\n-      __ add(tmp, tmp, -markOopDesc::monitor_value); \/\/ monitor\n+      __ add(tmp, tmp, -markOop::monitor_value); \/\/ monitor\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-  orr(hdr, hdr, markOopDesc::unlocked_value);\n+  orr(hdr, hdr, markOop::unlocked_value);\n@@ -179,1 +179,1 @@\n-    mov(t1, (int32_t)(intptr_t)markOopDesc::prototype());\n+    mov(t1, (int32_t)(intptr_t)markOop::prototype());\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-  __ ands(zr, tmp, markOopDesc::lock_mask_in_place);\n+  __ ands(zr, tmp, markOop::lock_mask_in_place);\n@@ -220,1 +220,1 @@\n-  __ orr(tmp, tmp, markOopDesc::marked_value);\n+  __ orr(tmp, tmp, markOop::marked_value);\n@@ -619,1 +619,1 @@\n-  __ ands(zr, tmp1, markOopDesc::lock_mask_in_place);\n+  __ ands(zr, tmp1, markOop::lock_mask_in_place);\n@@ -623,1 +623,1 @@\n-  __ orr(tmp1, tmp1, markOopDesc::marked_value);\n+  __ orr(tmp1, tmp1, markOop::marked_value);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -478,1 +478,1 @@\n-  assert(markOopDesc::age_shift == markOopDesc::lock_bits + markOopDesc::biased_lock_bits, \"biased locking makes assumptions about bit layout\");\n+  assert(markOop::age_shift == markOop::lock_bits + markOop::biased_lock_bits, \"biased locking makes assumptions about bit layout\");\n@@ -495,2 +495,2 @@\n-  andr(tmp_reg, swap_reg, markOopDesc::biased_lock_mask_in_place);\n-  cmp(tmp_reg, markOopDesc::biased_lock_pattern);\n+  andr(tmp_reg, swap_reg, markOop::biased_lock_mask_in_place);\n+  cmp(tmp_reg, markOop::biased_lock_pattern);\n@@ -503,1 +503,1 @@\n-  andr(tmp_reg, tmp_reg, ~((int) markOopDesc::age_mask_in_place));\n+  andr(tmp_reg, tmp_reg, ~((int) markOop::age_mask_in_place));\n@@ -526,1 +526,1 @@\n-  andr(rscratch1, tmp_reg, markOopDesc::biased_lock_mask_in_place);\n+  andr(rscratch1, tmp_reg, markOop::biased_lock_mask_in_place);\n@@ -538,1 +538,1 @@\n-  andr(rscratch1, tmp_reg, markOopDesc::epoch_mask_in_place);\n+  andr(rscratch1, tmp_reg, markOop::epoch_mask_in_place);\n@@ -549,1 +549,1 @@\n-    mov(rscratch1, markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place | markOopDesc::epoch_mask_in_place);\n+    mov(rscratch1, markOop::biased_lock_mask_in_place | markOop::age_mask_in_place | markOop::epoch_mask_in_place);\n@@ -634,2 +634,2 @@\n-  andr(temp_reg, temp_reg, markOopDesc::biased_lock_mask_in_place);\n-  cmp(temp_reg, markOopDesc::biased_lock_pattern);\n+  andr(temp_reg, temp_reg, markOop::biased_lock_mask_in_place);\n+  cmp(temp_reg, markOop::biased_lock_pattern);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3614,1 +3614,1 @@\n-      __ mov(rscratch1, (intptr_t)markOopDesc::prototype());\n+      __ mov(rscratch1, (intptr_t)markOop::prototype());\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-    mov(tmp, (intptr_t)markOopDesc::prototype());\n+    mov(tmp, (intptr_t)markOop::prototype());\n@@ -285,2 +285,2 @@\n-  assert(markOopDesc::unlocked_value == 1, \"adjust this code\");\n-  tbnz(hdr, exact_log2(markOopDesc::unlocked_value), fast_lock);\n+  assert(markOop::unlocked_value == 1, \"adjust this code\");\n+  tbnz(hdr, exact_log2(markOop::unlocked_value), fast_lock);\n@@ -315,1 +315,1 @@\n-  tst(hdr, markOopDesc::unlocked_value);\n+  tst(hdr, markOop::unlocked_value);\n","filename":"src\/hotspot\/cpu\/arm\/c1_MacroAssembler_arm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -998,2 +998,2 @@\n-    assert(markOopDesc::unlocked_value == 1, \"adjust this code\");\n-    tbz(Rmark, exact_log2(markOopDesc::unlocked_value), already_locked);\n+    assert(markOop::unlocked_value == 1, \"adjust this code\");\n+    tbz(Rmark, exact_log2(markOop::unlocked_value), already_locked);\n@@ -1012,1 +1012,1 @@\n-    tst(Rmark, markOopDesc::unlocked_value);\n+    tst(Rmark, markOop::unlocked_value);\n","filename":"src\/hotspot\/cpu\/arm\/interp_masm_arm.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1936,1 +1936,1 @@\n-  assert(markOopDesc::age_shift == markOopDesc::lock_bits + markOopDesc::biased_lock_bits, \"biased locking makes assumptions about bit layout\");\n+  assert(markOop::age_shift == markOop::lock_bits + markOop::biased_lock_bits, \"biased locking makes assumptions about bit layout\");\n@@ -1958,2 +1958,2 @@\n-  andr(tmp_reg, swap_reg, (uintx)markOopDesc::biased_lock_mask_in_place);\n-  cmp(tmp_reg, markOopDesc::biased_lock_pattern);\n+  andr(tmp_reg, swap_reg, (uintx)markOop::biased_lock_mask_in_place);\n+  cmp(tmp_reg, markOop::biased_lock_pattern);\n@@ -1971,1 +1971,1 @@\n-  ands(tmp_reg, tmp_reg, ~((uintx) markOopDesc::age_mask_in_place));\n+  ands(tmp_reg, tmp_reg, ~((uintx) markOop::age_mask_in_place));\n@@ -1973,1 +1973,1 @@\n-  bics(tmp_reg, tmp_reg, ((int) markOopDesc::age_mask_in_place));\n+  bics(tmp_reg, tmp_reg, ((int) markOop::age_mask_in_place));\n@@ -1996,1 +1996,1 @@\n-  tst(tmp_reg, (uintx)markOopDesc::biased_lock_mask_in_place);\n+  tst(tmp_reg, (uintx)markOop::biased_lock_mask_in_place);\n@@ -2008,1 +2008,1 @@\n-  tst(tmp_reg, (uintx)markOopDesc::epoch_mask_in_place);\n+  tst(tmp_reg, (uintx)markOop::epoch_mask_in_place);\n@@ -2027,1 +2027,1 @@\n-  mov(tmp2, (markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place | markOopDesc::epoch_mask_in_place));\n+  mov(tmp2, (markOop::biased_lock_mask_in_place | markOop::age_mask_in_place | markOop::epoch_mask_in_place));\n@@ -2032,1 +2032,1 @@\n-  assert((markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place | markOopDesc::epoch_mask_in_place) == 0x1ff, \"biased bitmasks changed\");\n+  assert((markOop::biased_lock_mask_in_place | markOop::age_mask_in_place | markOop::epoch_mask_in_place) == 0x1ff, \"biased bitmasks changed\");\n@@ -2065,1 +2065,1 @@\n-  mov(tmp2, (markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place | markOopDesc::epoch_mask_in_place));\n+  mov(tmp2, (markOop::biased_lock_mask_in_place | markOop::age_mask_in_place | markOop::epoch_mask_in_place));\n@@ -2100,1 +2100,1 @@\n-  mov(tmp2, (markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place | markOopDesc::epoch_mask_in_place));\n+  mov(tmp2, (markOop::biased_lock_mask_in_place | markOop::age_mask_in_place | markOop::epoch_mask_in_place));\n@@ -2131,2 +2131,2 @@\n-  andr(tmp_reg, tmp_reg, (uintx)markOopDesc::biased_lock_mask_in_place);\n-  cmp(tmp_reg, markOopDesc::biased_lock_pattern);\n+  andr(tmp_reg, tmp_reg, (uintx)markOop::biased_lock_mask_in_place);\n+  cmp(tmp_reg, markOop::biased_lock_pattern);\n@@ -3021,1 +3021,1 @@\n-  tst(Rmark, markOopDesc::unlocked_value);\n+  tst(Rmark, markOop::unlocked_value);\n","filename":"src\/hotspot\/cpu\/arm\/macroAssembler_arm.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1231,2 +1231,2 @@\n-    assert(markOopDesc::unlocked_value == 1, \"adjust this code\");\n-    __ tbz(Rtemp, exact_log2(markOopDesc::unlocked_value), slow_case);\n+    assert(markOop::unlocked_value == 1, \"adjust this code\");\n+    __ tbz(Rtemp, exact_log2(markOop::unlocked_value), slow_case);\n@@ -1235,2 +1235,2 @@\n-      assert(is_power_of_2(markOopDesc::biased_lock_bit_in_place), \"adjust this code\");\n-      __ tbnz(Rtemp, exact_log2(markOopDesc::biased_lock_bit_in_place), slow_case);\n+      assert(is_power_of_2(markOop::biased_lock_bit_in_place), \"adjust this code\");\n+      __ tbnz(Rtemp, exact_log2(markOop::biased_lock_bit_in_place), slow_case);\n@@ -1240,1 +1240,1 @@\n-    __ ands(Rtemp, Rtemp, (uintx)markOopDesc::hash_mask_in_place);\n+    __ ands(Rtemp, Rtemp, (uintx)markOop::hash_mask_in_place);\n@@ -1242,1 +1242,1 @@\n-    __ logical_shift_right(R0, Rtemp, markOopDesc::hash_shift);\n+    __ logical_shift_right(R0, Rtemp, markOop::hash_shift);\n@@ -1245,2 +1245,2 @@\n-    __ bics(Rtemp, Rtemp, ~markOopDesc::hash_mask_in_place);\n-    __ mov(R0, AsmOperand(Rtemp, lsr, markOopDesc::hash_shift), ne);\n+    __ bics(Rtemp, Rtemp, ~markOop::hash_mask_in_place);\n+    __ mov(R0, AsmOperand(Rtemp, lsr, markOop::hash_shift), ne);\n@@ -1586,2 +1586,2 @@\n-    assert(markOopDesc::unlocked_value == 1, \"adjust this code\");\n-    __ tbnz(mark, exact_log2(markOopDesc::unlocked_value), fast_lock);\n+    assert(markOop::unlocked_value == 1, \"adjust this code\");\n+    __ tbnz(mark, exact_log2(markOop::unlocked_value), fast_lock);\n@@ -1613,1 +1613,1 @@\n-    __ tst(mark, markOopDesc::unlocked_value);\n+    __ tst(mark, markOop::unlocked_value);\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -4610,1 +4610,1 @@\n-      __ mov_slow(Rtemp, (intptr_t)markOopDesc::prototype());\n+      __ mov_slow(Rtemp, (intptr_t)markOop::prototype());\n","filename":"src\/hotspot\/cpu\/arm\/templateTable_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-  ori(Rmark, Rmark, markOopDesc::unlocked_value);\n+  ori(Rmark, Rmark, markOop::unlocked_value);\n@@ -140,1 +140,1 @@\n-  load_const_optimized(R0, (~(os::vm_page_size()-1) | markOopDesc::lock_mask_in_place));\n+  load_const_optimized(R0, (~(os::vm_page_size()-1) | markOop::lock_mask_in_place));\n@@ -218,1 +218,1 @@\n-    load_const_optimized(t1, (intx)markOopDesc::prototype());\n+    load_const_optimized(t1, (intx)markOop::prototype());\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -904,1 +904,1 @@\n-    ori(displaced_header, displaced_header, markOopDesc::unlocked_value);\n+    ori(displaced_header, displaced_header, markOop::unlocked_value);\n@@ -945,1 +945,1 @@\n-    load_const_optimized(tmp, ~(os::vm_page_size()-1) | markOopDesc::lock_mask_in_place);\n+    load_const_optimized(tmp, ~(os::vm_page_size()-1) | markOop::lock_mask_in_place);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2092,1 +2092,1 @@\n-  assert(markOopDesc::age_shift == markOopDesc::lock_bits + markOopDesc::biased_lock_bits,\n+  assert(markOop::age_shift == markOop::lock_bits + markOop::biased_lock_bits,\n@@ -2102,2 +2102,2 @@\n-  andi(temp_reg, mark_reg, markOopDesc::biased_lock_mask_in_place);\n-  cmpwi(cr_reg, temp_reg, markOopDesc::biased_lock_pattern);\n+  andi(temp_reg, mark_reg, markOop::biased_lock_mask_in_place);\n+  cmpwi(cr_reg, temp_reg, markOop::biased_lock_pattern);\n@@ -2108,1 +2108,1 @@\n-  load_const_optimized(temp2_reg, ~((int) markOopDesc::age_mask_in_place));\n+  load_const_optimized(temp2_reg, ~((int) markOop::age_mask_in_place));\n@@ -2139,1 +2139,1 @@\n-  andi(temp2_reg, temp_reg, markOopDesc::biased_lock_mask_in_place);\n+  andi(temp2_reg, temp_reg, markOop::biased_lock_mask_in_place);\n@@ -2153,1 +2153,1 @@\n-  int shift_amount = 64 - markOopDesc::epoch_shift;\n+  int shift_amount = 64 - markOop::epoch_shift;\n@@ -2156,1 +2156,1 @@\n-  rldicl_(temp2_reg, temp_reg, shift_amount, 64 - markOopDesc::epoch_bits);\n+  rldicl_(temp2_reg, temp_reg, shift_amount, 64 - markOop::epoch_bits);\n@@ -2166,3 +2166,3 @@\n-  andi(mark_reg, mark_reg, (markOopDesc::biased_lock_mask_in_place |\n-                                markOopDesc::age_mask_in_place |\n-                                markOopDesc::epoch_mask_in_place));\n+  andi(mark_reg, mark_reg, (markOop::biased_lock_mask_in_place |\n+                                markOop::age_mask_in_place |\n+                                markOop::epoch_mask_in_place));\n@@ -2201,1 +2201,1 @@\n-  andi(temp2_reg, mark_reg, markOopDesc::age_mask_in_place);\n+  andi(temp2_reg, mark_reg, markOop::age_mask_in_place);\n@@ -2238,1 +2238,1 @@\n-  andi(temp2_reg, mark_reg, markOopDesc::age_mask_in_place);\n+  andi(temp2_reg, mark_reg, markOop::age_mask_in_place);\n@@ -2278,1 +2278,1 @@\n-  andi(temp_reg, temp_reg, markOopDesc::biased_lock_mask_in_place);\n+  andi(temp_reg, temp_reg, markOop::biased_lock_mask_in_place);\n@@ -2280,1 +2280,1 @@\n-  cmpwi(cr_reg, temp_reg, markOopDesc::biased_lock_pattern);\n+  cmpwi(cr_reg, temp_reg, markOop::biased_lock_pattern);\n@@ -2701,1 +2701,1 @@\n-  andi_(R0, mark_word, markOopDesc::monitor_value);  \/\/ inflated vs stack-locked|neutral|biased\n+  andi_(R0, mark_word, markOop::monitor_value);  \/\/ inflated vs stack-locked|neutral|biased\n@@ -2720,2 +2720,2 @@\n-  andi(R0, mark_word, markOopDesc::biased_lock_mask_in_place); \/\/ look at 3 lock bits\n-  cmpwi(flag, R0, markOopDesc::unlocked_value);                \/\/ bits = 001 unlocked\n+  andi(R0, mark_word, markOop::biased_lock_mask_in_place); \/\/ look at 3 lock bits\n+  cmpwi(flag, R0, markOop::unlocked_value);                \/\/ bits = 001 unlocked\n@@ -2758,1 +2758,1 @@\n-  int owner_offset = ObjectMonitor::owner_offset_in_bytes() - markOopDesc::monitor_value;\n+  int owner_offset = ObjectMonitor::owner_offset_in_bytes() - markOop::monitor_value;\n@@ -2760,1 +2760,1 @@\n-  \/\/ Store non-null, using boxReg instead of (intptr_t)markOopDesc::unused_mark().\n+  \/\/ Store non-null, using boxReg instead of (intptr_t)markOop::unused_mark().\n@@ -2805,1 +2805,1 @@\n-    andi_(R0, mark_word, markOopDesc::monitor_value);\n+    andi_(R0, mark_word, markOop::monitor_value);\n@@ -2872,1 +2872,1 @@\n-    andi_(temp, displaced_header, markOopDesc::monitor_value);\n+    andi_(temp, displaced_header, markOop::monitor_value);\n@@ -2877,1 +2877,1 @@\n-  ori(displaced_header, displaced_header, markOopDesc::unlocked_value);\n+  ori(displaced_header, displaced_header, markOop::unlocked_value);\n@@ -2908,1 +2908,1 @@\n-  load_const_optimized(temp, ~(os::vm_page_size()-1) | markOopDesc::lock_mask_in_place);\n+  load_const_optimized(temp, ~(os::vm_page_size()-1) | markOop::lock_mask_in_place);\n@@ -2933,1 +2933,1 @@\n-    addi(temp, displaced_header, ObjectMonitor::owner_offset_in_bytes()-markOopDesc::monitor_value);\n+    addi(temp, displaced_header, ObjectMonitor::owner_offset_in_bytes()-markOop::monitor_value);\n@@ -2988,2 +2988,2 @@\n-    andi(R0, current_header, markOopDesc::biased_lock_mask_in_place); \/\/ look at 3 lock bits\n-    cmpwi(flag, R0, markOopDesc::unlocked_value);                     \/\/ bits = 001 unlocked\n+    andi(R0, current_header, markOop::biased_lock_mask_in_place); \/\/ look at 3 lock bits\n+    cmpwi(flag, R0, markOop::unlocked_value);                     \/\/ bits = 001 unlocked\n@@ -3009,1 +3009,1 @@\n-    andi_(R0, current_header, markOopDesc::monitor_value);\n+    andi_(R0, current_header, markOop::monitor_value);\n@@ -3033,1 +3033,1 @@\n-    addi(current_header, current_header, -markOopDesc::monitor_value); \/\/ monitor\n+    addi(current_header, current_header, -markOop::monitor_value); \/\/ monitor\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -3809,1 +3809,1 @@\n-      __ load_const_optimized(Rscratch, markOopDesc::prototype(), R0);\n+      __ load_const_optimized(Rscratch, markOop::prototype(), R0);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-  z_oill(hdr, markOopDesc::unlocked_value);\n+  z_oill(hdr, markOop::unlocked_value);\n@@ -118,1 +118,1 @@\n-  \/\/ 1) (hdr & markOopDesc::lock_mask_in_place) == 0\n+  \/\/ 1) (hdr & markOop::lock_mask_in_place) == 0\n@@ -124,1 +124,1 @@\n-  \/\/ (hdr - Z_SP) & (~(page_size-1) | markOopDesc::lock_mask_in_place)\n+  \/\/ (hdr - Z_SP) & (~(page_size-1) | markOop::lock_mask_in_place)\n@@ -130,1 +130,1 @@\n-  load_const_optimized(Z_R0_scratch, (~(os::vm_page_size()-1) | markOopDesc::lock_mask_in_place));\n+  load_const_optimized(Z_R0_scratch, (~(os::vm_page_size()-1) | markOop::lock_mask_in_place));\n@@ -195,1 +195,1 @@\n-    load_const_optimized(t1, (intx)markOopDesc::prototype());\n+    load_const_optimized(t1, (intx)markOop::prototype());\n","filename":"src\/hotspot\/cpu\/s390\/c1_MacroAssembler_s390.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -992,1 +992,1 @@\n-  z_oill(displaced_header, markOopDesc::unlocked_value);\n+  z_oill(displaced_header, markOop::unlocked_value);\n@@ -1024,1 +1024,1 @@\n-  load_const_optimized(Z_R0, (~(os::vm_page_size()-1) | markOopDesc::lock_mask_in_place));\n+  load_const_optimized(Z_R0, (~(os::vm_page_size()-1) | markOop::lock_mask_in_place));\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3203,1 +3203,1 @@\n-  assert(markOopDesc::age_shift == markOopDesc::lock_bits + markOopDesc::biased_lock_bits,\n+  assert(markOop::age_shift == markOop::lock_bits + markOop::biased_lock_bits,\n@@ -3206,2 +3206,2 @@\n-  z_nilf(temp_reg, markOopDesc::biased_lock_mask_in_place);\n-  z_chi(temp_reg, markOopDesc::biased_lock_pattern);\n+  z_nilf(temp_reg, markOop::biased_lock_mask_in_place);\n+  z_chi(temp_reg, markOop::biased_lock_pattern);\n@@ -3211,1 +3211,1 @@\n-  load_const_optimized(temp2_reg, ~((int) markOopDesc::age_mask_in_place));\n+  load_const_optimized(temp2_reg, ~((int) markOop::age_mask_in_place));\n@@ -3237,1 +3237,1 @@\n-  z_tmll(temp_reg, markOopDesc::biased_lock_mask_in_place);\n+  z_tmll(temp_reg, markOop::biased_lock_mask_in_place);\n@@ -3249,1 +3249,1 @@\n-  z_tmll(temp_reg, markOopDesc::epoch_mask_in_place);\n+  z_tmll(temp_reg, markOop::epoch_mask_in_place);\n@@ -3259,2 +3259,2 @@\n-  z_nilf(mark_reg, markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place |\n-         markOopDesc::epoch_mask_in_place);\n+  z_nilf(mark_reg, markOop::biased_lock_mask_in_place | markOop::age_mask_in_place |\n+         markOop::epoch_mask_in_place);\n@@ -3292,1 +3292,1 @@\n-  z_nilf(mark_reg, markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place | markOopDesc::epoch_mask_in_place);\n+  z_nilf(mark_reg, markOop::biased_lock_mask_in_place | markOop::age_mask_in_place | markOop::epoch_mask_in_place);\n@@ -3353,1 +3353,1 @@\n-  z_nilf(temp_reg, markOopDesc::biased_lock_mask_in_place);\n+  z_nilf(temp_reg, markOop::biased_lock_mask_in_place);\n@@ -3355,1 +3355,1 @@\n-  z_chi(temp_reg, markOopDesc::biased_lock_pattern);\n+  z_chi(temp_reg, markOop::biased_lock_pattern);\n@@ -3378,1 +3378,1 @@\n-    guarantee(Immediate::is_uimm16(markOopDesc::monitor_value), \"must be half-word\");\n+    guarantee(Immediate::is_uimm16(markOop::monitor_value), \"must be half-word\");\n@@ -3380,1 +3380,1 @@\n-    z_nill(temp, markOopDesc::monitor_value);\n+    z_nill(temp, markOop::monitor_value);\n@@ -3384,2 +3384,2 @@\n-  \/\/ Set mark to markOop | markOopDesc::unlocked_value.\n-  z_oill(displacedHeader, markOopDesc::unlocked_value);\n+  \/\/ Set mark to markOop | markOop::unlocked_value.\n+  z_oill(displacedHeader, markOop::unlocked_value);\n@@ -3404,1 +3404,1 @@\n-  load_const_optimized(temp, (~(os::vm_page_size()-1) | markOopDesc::lock_mask_in_place));\n+  load_const_optimized(temp, (~(os::vm_page_size()-1) | markOop::lock_mask_in_place));\n@@ -3415,1 +3415,1 @@\n-    Register monitor_tagged = displacedHeader; \/\/ Tagged with markOopDesc::monitor_value.\n+    Register monitor_tagged = displacedHeader; \/\/ Tagged with markOop::monitor_value.\n@@ -3466,2 +3466,2 @@\n-    guarantee(Immediate::is_uimm16(markOopDesc::monitor_value), \"must be half-word\");\n-    z_nill(currentHeader, markOopDesc::monitor_value);\n+    guarantee(Immediate::is_uimm16(markOop::monitor_value), \"must be half-word\");\n+    z_nill(currentHeader, markOop::monitor_value);\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -3868,1 +3868,1 @@\n-                     (long)markOopDesc::prototype());\n+                     (long)markOop::prototype());\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-  or3(Rmark, markOopDesc::unlocked_value, Rmark);\n+  or3(Rmark, markOop::unlocked_value, Rmark);\n@@ -182,1 +182,1 @@\n-    set((intx)markOopDesc::prototype(), t1);\n+    set((intx)markOop::prototype(), t1);\n","filename":"src\/hotspot\/cpu\/sparc\/c1_MacroAssembler_sparc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1215,1 +1215,1 @@\n-    or3(mark_reg, markOopDesc::unlocked_value, mark_reg);\n+    or3(mark_reg, markOop::unlocked_value, mark_reg);\n@@ -1237,1 +1237,1 @@\n-    \/\/ FFFFF003\/FFFFFFFFFFFF003 is (markOopDesc::lock_mask_in_place | -os::vm_page_size())\n+    \/\/ FFFFF003\/FFFFFFFFFFFF003 is (markOop::lock_mask_in_place | -os::vm_page_size())\n","filename":"src\/hotspot\/cpu\/sparc\/interp_masm_sparc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2472,3 +2472,3 @@\n-  assert(markOopDesc::age_shift == markOopDesc::lock_bits + markOopDesc::biased_lock_bits, \"biased locking makes assumptions about bit layout\");\n-  and3(mark_reg, markOopDesc::biased_lock_mask_in_place, temp_reg);\n-  cmp_and_brx_short(temp_reg, markOopDesc::biased_lock_pattern, Assembler::notEqual, Assembler::pn, cas_label);\n+  assert(markOop::age_shift == markOop::lock_bits + markOop::biased_lock_bits, \"biased locking makes assumptions about bit layout\");\n+  and3(mark_reg, markOop::biased_lock_mask_in_place, temp_reg);\n+  cmp_and_brx_short(temp_reg, markOop::biased_lock_pattern, Assembler::notEqual, Assembler::pn, cas_label);\n@@ -2480,1 +2480,1 @@\n-  andcc(temp_reg, ~((int) markOopDesc::age_mask_in_place), temp_reg);\n+  andcc(temp_reg, ~((int) markOop::age_mask_in_place), temp_reg);\n@@ -2503,1 +2503,1 @@\n-  btst(markOopDesc::biased_lock_mask_in_place, temp_reg);\n+  btst(markOop::biased_lock_mask_in_place, temp_reg);\n@@ -2515,1 +2515,1 @@\n-  delayed()->btst(markOopDesc::epoch_mask_in_place, temp_reg);\n+  delayed()->btst(markOop::epoch_mask_in_place, temp_reg);\n@@ -2525,1 +2525,1 @@\n-                  markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place | markOopDesc::epoch_mask_in_place,\n+                  markOop::biased_lock_mask_in_place | markOop::age_mask_in_place | markOop::epoch_mask_in_place,\n@@ -2606,2 +2606,2 @@\n-  and3(temp_reg, markOopDesc::biased_lock_mask_in_place, temp_reg);\n-  cmp(temp_reg, markOopDesc::biased_lock_pattern);\n+  and3(temp_reg, markOop::biased_lock_mask_in_place, temp_reg);\n+  cmp(temp_reg, markOop::biased_lock_pattern);\n@@ -2623,1 +2623,1 @@\n-\/\/     Consider G2_thread, rsp, boxReg, or markOopDesc::unused_mark()\n+\/\/     Consider G2_thread, rsp, boxReg, or markOop::unused_mark()\n@@ -2628,1 +2628,1 @@\n-\/\/     are responsible for setting box->dhw = NonZero (typically markOopDesc::unused_mark()).\n+\/\/     are responsible for setting box->dhw = NonZero (typically markOop::unused_mark()).\n@@ -2670,2 +2670,2 @@\n-     \/\/ set Rmark to markOop | markOopDesc::unlocked_value\n-     or3(Rmark, markOopDesc::unlocked_value, Rmark);\n+     \/\/ set Rmark to markOop | markOop::unlocked_value\n+     or3(Rmark, markOop::unlocked_value, Rmark);\n@@ -2720,1 +2720,1 @@\n-      or3(Rmark, markOopDesc::unlocked_value, Rmark);\n+      or3(Rmark, markOop::unlocked_value, Rmark);\n@@ -2782,1 +2782,1 @@\n-      or3(Rmark, markOopDesc::unlocked_value, Rmark);\n+      or3(Rmark, markOop::unlocked_value, Rmark);\n@@ -2836,1 +2836,1 @@\n-      \/\/    markOopDesc::unused_mark(), G2_thread, RBox, RScratch, rsp, etc.\n+      \/\/    markOop::unused_mark(), G2_thread, RBox, RScratch, rsp, etc.\n","filename":"src\/hotspot\/cpu\/sparc\/macroAssembler_sparc.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1838,2 +1838,2 @@\n-    __ sethi(markOopDesc::hash_mask, mask);\n-    __ btst(markOopDesc::unlocked_value, header);\n+    __ sethi(markOop::hash_mask, mask);\n+    __ btst(markOop::unlocked_value, header);\n@@ -1844,1 +1844,1 @@\n-      __ btst(markOopDesc::biased_lock_bit_in_place, header);\n+      __ btst(markOop::biased_lock_bit_in_place, header);\n@@ -1847,1 +1847,1 @@\n-    __ delayed()->or3(mask, markOopDesc::hash_mask & 0x3ff, mask);\n+    __ delayed()->or3(mask, markOop::hash_mask & 0x3ff, mask);\n@@ -1850,1 +1850,1 @@\n-    __ srlx(header, markOopDesc::hash_shift, hash);\n+    __ srlx(header, markOop::hash_shift, hash);\n","filename":"src\/hotspot\/cpu\/sparc\/sharedRuntime_sparc.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3521,1 +3521,1 @@\n-    __ set((intptr_t)markOopDesc::prototype(), G4_scratch);\n+    __ set((intptr_t)markOop::prototype(), G4_scratch);\n","filename":"src\/hotspot\/cpu\/sparc\/templateTable_sparc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  orptr(hdr, markOopDesc::unlocked_value);\n+  orptr(hdr, markOop::unlocked_value);\n@@ -157,1 +157,1 @@\n-    movptr(Address(obj, oopDesc::mark_offset_in_bytes ()), (int32_t)(intptr_t)markOopDesc::prototype());\n+    movptr(Address(obj, oopDesc::mark_offset_in_bytes ()), (int32_t)(intptr_t)markOop::prototype().value());\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -656,1 +656,1 @@\n-  __ testb(Address(tmp2, oopDesc::mark_offset_in_bytes()), markOopDesc::marked_value);\n+  __ testb(Address(tmp2, oopDesc::mark_offset_in_bytes()), markOop::marked_value);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1121,1 +1121,1 @@\n-  assert(markOopDesc::age_shift == markOopDesc::lock_bits + markOopDesc::biased_lock_bits, \"biased locking makes assumptions about bit layout\");\n+  assert(markOop::age_shift == markOop::lock_bits + markOop::biased_lock_bits, \"biased locking makes assumptions about bit layout\");\n@@ -1141,2 +1141,2 @@\n-  andptr(tmp_reg, markOopDesc::biased_lock_mask_in_place);\n-  cmpptr(tmp_reg, markOopDesc::biased_lock_pattern);\n+  andptr(tmp_reg, markOop::biased_lock_mask_in_place);\n+  cmpptr(tmp_reg, markOop::biased_lock_pattern);\n@@ -1168,1 +1168,1 @@\n-  andptr(header_reg, ~((int) markOopDesc::age_mask_in_place));\n+  andptr(header_reg, ~((int) markOop::age_mask_in_place));\n@@ -1187,1 +1187,1 @@\n-  testptr(header_reg, markOopDesc::biased_lock_mask_in_place);\n+  testptr(header_reg, markOop::biased_lock_mask_in_place);\n@@ -1199,1 +1199,1 @@\n-  testptr(header_reg, markOopDesc::epoch_mask_in_place);\n+  testptr(header_reg, markOop::epoch_mask_in_place);\n@@ -1210,1 +1210,1 @@\n-         markOopDesc::biased_lock_mask_in_place | markOopDesc::age_mask_in_place | markOopDesc::epoch_mask_in_place);\n+         markOop::biased_lock_mask_in_place | markOop::age_mask_in_place | markOop::epoch_mask_in_place);\n@@ -1310,2 +1310,2 @@\n-  andptr(temp_reg, markOopDesc::biased_lock_mask_in_place);\n-  cmpptr(temp_reg, markOopDesc::biased_lock_pattern);\n+  andptr(temp_reg, markOop::biased_lock_mask_in_place);\n+  cmpptr(temp_reg, markOop::biased_lock_pattern);\n@@ -1502,1 +1502,1 @@\n-  testptr(tmpReg, markOopDesc::monitor_value);  \/\/ inflated vs stack-locked|neutral|biased\n+  testptr(tmpReg, markOop::monitor_value);  \/\/ inflated vs stack-locked|neutral|biased\n@@ -1517,2 +1517,2 @@\n-  andptr(tmpReg, markOopDesc::biased_lock_mask_in_place); \/\/ look at 3 lock bits\n-  cmpptr(tmpReg, markOopDesc::unlocked_value);            \/\/ bits = 001 unlocked\n+  andptr(tmpReg, markOop::biased_lock_mask_in_place); \/\/ look at 3 lock bits\n+  cmpptr(tmpReg, markOop::unlocked_value);            \/\/ bits = 001 unlocked\n@@ -1544,1 +1544,1 @@\n-\/\/         tmpReg (ObjectMonitor address + markOopDesc::monitor_value)\n+\/\/         tmpReg (ObjectMonitor address + markOop::monitor_value)\n@@ -1558,1 +1558,1 @@\n-  movptr(Address(boxReg, 0), (int32_t)intptr_t(markOopDesc::unused_mark()));\n+  movptr(Address(boxReg, 0), (int32_t)intptr_t(markOop::unused_mark().value()));\n@@ -1727,1 +1727,1 @@\n-      \/\/ set box->dhw = markOopDesc::unused_mark()\n+      \/\/ set box->dhw = markOop::unused_mark()\n@@ -1729,1 +1729,1 @@\n-      movptr (Address(boxReg, 0), (int32_t)intptr_t(markOopDesc::unused_mark()));\n+      movptr (Address(boxReg, 0), (int32_t)intptr_t(markOop::unused_mark().value()));\n@@ -1771,1 +1771,1 @@\n-    testptr(tmpReg, markOopDesc::monitor_value); \/\/ inflated vs stack-locked|neutral|biased\n+    testptr(tmpReg, markOop::monitor_value); \/\/ inflated vs stack-locked|neutral|biased\n@@ -1775,1 +1775,1 @@\n-    orptr (tmpReg, markOopDesc::unlocked_value);\n+    orptr (tmpReg, markOop::unlocked_value);\n@@ -1801,1 +1801,1 @@\n-    \/\/ The object is inflated. tmpReg contains pointer to ObjectMonitor* + markOopDesc::monitor_value\n+    \/\/ The object is inflated. tmpReg contains pointer to ObjectMonitor* + markOop::monitor_value\n@@ -1816,1 +1816,1 @@\n-    \/\/   set box->_displaced_header = markOopDesc::unused_mark().  Any non-0 value suffices.\n+    \/\/   set box->_displaced_header = markOop::unused_mark().  Any non-0 value suffices.\n@@ -1881,1 +1881,1 @@\n-       movptr(Address(boxReg, 0), intptr_t(markOopDesc::unused_mark()));  \/\/ results in ST-before-CAS penalty\n+       movptr(Address(boxReg, 0), intptr_t(markOop::unused_mark()));  \/\/ results in ST-before-CAS penalty\n@@ -1926,1 +1926,1 @@\n-    \/\/ Unconditionally set box->_displaced_header = markOopDesc::unused_mark().\n+    \/\/ Unconditionally set box->_displaced_header = markOop::unused_mark().\n@@ -1928,1 +1928,1 @@\n-    movptr(Address(boxReg, 0), (int32_t)intptr_t(markOopDesc::unused_mark()));\n+    movptr(Address(boxReg, 0), (int32_t)intptr_t(markOop::unused_mark().value()));\n@@ -2002,2 +2002,2 @@\n-      andptr(tmpReg, markOopDesc::biased_lock_mask_in_place); \/\/ look at 3 lock bits\n-      cmpptr(tmpReg, markOopDesc::unlocked_value);            \/\/ bits = 001 unlocked\n+      andptr(tmpReg, markOop::biased_lock_mask_in_place); \/\/ look at 3 lock bits\n+      cmpptr(tmpReg, markOop::unlocked_value);            \/\/ bits = 001 unlocked\n@@ -2014,1 +2014,1 @@\n-    testptr(tmpReg, markOopDesc::monitor_value);    \/\/ Inflated?\n+    testptr(tmpReg, markOop::monitor_value);    \/\/ Inflated?\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  __ testptr(result, markOopDesc::unlocked_value);\n+  __ testptr(result, markOop::unlocked_value);\n@@ -67,1 +67,1 @@\n-    __ testptr(result, markOopDesc::biased_lock_bit_in_place);\n+    __ testptr(result, markOop::biased_lock_bit_in_place);\n@@ -76,2 +76,2 @@\n-  __ shrptr(result, markOopDesc::hash_shift);\n-  __ andptr(result, markOopDesc::hash_mask);\n+  __ shrptr(result, markOop::hash_shift);\n+  __ andptr(result, markOop::hash_mask);\n@@ -79,1 +79,1 @@\n-  __ andptr(result, markOopDesc::hash_mask_in_place);\n+  __ andptr(result, markOop::hash_mask_in_place);\n@@ -85,1 +85,1 @@\n-  __ shrptr(result, markOopDesc::hash_shift);\n+  __ shrptr(result, markOop::hash_shift);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4106,1 +4106,1 @@\n-                (intptr_t)markOopDesc::prototype()); \/\/ header\n+                (intptr_t)markOop::prototype().value()); \/\/ header\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -277,1 +277,1 @@\n-    markOop disp = lockee->mark()->set_unlocked();\n+    markOop disp = lockee->mark().set_unlocked();\n@@ -424,1 +424,1 @@\n-      markOop old_header = markOopDesc::encode(lock);\n+      markOop old_header = markOop::encode(lock);\n","filename":"src\/hotspot\/cpu\/zero\/cppInterpreter_zero.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,2 +60,2 @@\n-  intptr_t hc = k->java_mirror()->mark()->hash();\n-  return hc != markOopDesc::no_hash ? hc : os::random();\n+  intptr_t hc = k->java_mirror()->mark().hash();\n+  return hc != markOop::no_hash ? hc : os::random();\n","filename":"src\/hotspot\/share\/classfile\/altHashing.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2186,1 +2186,1 @@\n-        k->set_prototype_header(markOopDesc::biased_locking_prototype());\n+        k->set_prototype_header(markOop::biased_locking_prototype());\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7758,1 +7758,1 @@\n-  const markOop proto = markOopDesc::prototype();\n+  const markOop proto = markOop::prototype();\n@@ -7761,1 +7761,1 @@\n-    next = oop(cur->mark_raw());\n+    next = oop(cur->mark_raw().to_pointer());\n@@ -7845,2 +7845,2 @@\n-  for (; i > 1 && cur->mark_raw() != NULL; cur = oop(cur->mark_raw()), i--);\n-  if (cur->mark_raw() == NULL) {\n+  for (; i > 1 && cur->mark_raw().to_pointer() != NULL; cur = oop(cur->mark_raw().to_pointer()), i--);\n+  if (cur->mark_raw().to_pointer() == NULL) {\n@@ -7856,3 +7856,3 @@\n-    assert(cur->mark_raw() != BUSY, \"Error\");\n-    oop suffix_head = cur->mark_raw(); \/\/ suffix will be put back on global list\n-    cur->set_mark_raw(NULL);           \/\/ break off suffix\n+    assert(cur->mark_raw().to_pointer() != (void*)BUSY, \"Error\");\n+    oop suffix_head = oop(cur->mark_raw().to_pointer()); \/\/ suffix will be put back on global list\n+    cur->set_mark_raw(markOop::from_pointer(NULL));           \/\/ break off suffix\n@@ -7878,1 +7878,1 @@\n-      for (cur = suffix_head; cur->mark_raw() != NULL; cur = (oop)(cur->mark_raw()));\n+      for (cur = suffix_head; cur->mark_raw().to_pointer() != NULL; cur = (oop)(cur->mark_raw().to_pointer()));\n@@ -7880,1 +7880,1 @@\n-      assert(suffix_tail != NULL && suffix_tail->mark_raw() == NULL,\n+      assert(suffix_tail != NULL && suffix_tail->mark_raw().to_pointer() == NULL,\n@@ -7887,1 +7887,1 @@\n-          suffix_tail->set_mark_raw(markOop(cur_overflow_list));\n+          suffix_tail->set_mark_raw(markOop::from_pointer((void*)cur_overflow_list));\n@@ -7889,1 +7889,1 @@\n-          suffix_tail->set_mark_raw(NULL);\n+          suffix_tail->set_mark_raw(markOop::from_pointer(NULL));\n@@ -7901,1 +7901,1 @@\n-  const markOop proto = markOopDesc::prototype();\n+  const markOop proto = markOop::prototype();\n@@ -7905,1 +7905,1 @@\n-    next = oop(cur->mark_raw());\n+    next = oop(cur->mark_raw().to_pointer());\n@@ -7924,1 +7924,1 @@\n-  p->set_mark_raw((markOop)_overflow_list);\n+  p->set_mark_raw(markOop::from_pointer(_overflow_list));\n@@ -7938,1 +7938,1 @@\n-      p->set_mark_raw(markOop(cur_overflow_list));\n+      p->set_mark_raw(markOop::from_pointer((void*)cur_overflow_list));\n@@ -7940,1 +7940,1 @@\n-      p->set_mark_raw(NULL);\n+      p->set_mark_raw(markOop::from_pointer(NULL));\n@@ -7973,1 +7973,1 @@\n-  if (m->must_be_preserved(p)) {\n+  if (m.must_be_preserved(p)) {\n@@ -7980,1 +7980,1 @@\n-  if (m->must_be_preserved(p)) {\n+  if (m.must_be_preserved(p)) {\n@@ -8020,1 +8020,1 @@\n-    assert(p->mark_raw() == markOopDesc::prototype(),\n+    assert(p->mark_raw() == markOop::prototype(),\n","filename":"src\/hotspot\/share\/gc\/cms\/concurrentMarkSweepGeneration.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -65,2 +65,2 @@\n-  markOop mark()     const volatile { return (markOop)_size; }\n-  void set_mark(markOop m)          { _size = (size_t)m; }\n+  markOop mark()     const volatile { return markOop((uintptr_t)_size); }\n+  void set_mark(markOop m)          { _size = (size_t)m.value(); }\n@@ -82,1 +82,1 @@\n-    LP64_ONLY(if (UseCompressedOops) return mark()->is_cms_free_chunk(); else)\n+    LP64_ONLY(if (UseCompressedOops) return mark().is_cms_free_chunk(); else)\n@@ -103,1 +103,1 @@\n-    LP64_ONLY(if (UseCompressedOops) return mark()->get_size(); else )\n+    LP64_ONLY(if (UseCompressedOops) return mark().get_size(); else )\n@@ -107,1 +107,1 @@\n-    LP64_ONLY(if (UseCompressedOops) set_mark(markOopDesc::set_size_and_free(sz)); else )\n+    LP64_ONLY(if (UseCompressedOops) set_mark(markOop::set_size_and_free(sz)); else )\n@@ -129,1 +129,1 @@\n-      set_mark(markOopDesc::prototype());\n+      set_mark(markOop::prototype());\n","filename":"src\/hotspot\/share\/gc\/cms\/freeChunk.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    if (m->is_marked()) { \/\/ Contains forwarding pointer.\n+    if (m.is_marked()) { \/\/ Contains forwarding pointer.\n@@ -115,1 +115,1 @@\n-      if (m->is_marked()) { \/\/ Contains forwarding pointer.\n+      if (m.is_marked()) { \/\/ Contains forwarding pointer.\n","filename":"src\/hotspot\/share\/gc\/cms\/parOopClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-  if (mark->must_be_preserved_for_cms_scavenge(klassOfOop)) {\n+  if (mark.must_be_preserved_for_cms_scavenge(klassOfOop)) {\n@@ -104,1 +104,1 @@\n-    \/\/ assert(mark == markOopDesc::prototype(), \"consistency check\");\n+    \/\/ assert(mark == markOop::prototype(), \"consistency check\");\n","filename":"src\/hotspot\/share\/gc\/cms\/promotionInfo.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,2 +119,2 @@\n-      assert(object->mark_raw() == markOopDesc::prototype_for_object(object) || \/\/ Correct mark\n-             object->mark_raw()->must_be_preserved(object) || \/\/ Will be restored by PreservedMarksSet\n+      assert(object->mark_raw() == markOop::prototype_for_object(object) || \/\/ Correct mark\n+             object->mark_raw().must_be_preserved(object) || \/\/ Will be restored by PreservedMarksSet\n@@ -123,1 +123,1 @@\n-             p2i(object), p2i(object->mark_raw()), p2i(markOopDesc::prototype_for_object(object)));\n+             p2i(object), p2i(object->mark_raw()), p2i(markOop::prototype_for_object(object)));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-  if (mark->must_be_preserved(obj) &&\n+  if (mark.must_be_preserved(obj) &&\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,2 +79,2 @@\n-    assert(obj->mark_raw() == markOopDesc::prototype_for_object(obj) || \/\/ Correct mark\n-           obj->mark_raw()->must_be_preserved(obj) || \/\/ Will be restored by PreservedMarksSet\n+    assert(obj->mark_raw() == markOop::prototype_for_object(obj) || \/\/ Correct mark\n+           obj->mark_raw().must_be_preserved(obj) || \/\/ Will be restored by PreservedMarksSet\n@@ -83,1 +83,1 @@\n-           p2i(obj), p2i(obj->mark_raw()), p2i(markOopDesc::prototype_for_object(obj)));\n+           p2i(obj), p2i(obj->mark_raw()), p2i(markOop::prototype_for_object(obj)));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCOopClosures.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -253,2 +253,2 @@\n-    if (m->is_marked()) {\n-      forwardee = (oop) m->decode_pointer();\n+    if (m.is_marked()) {\n+      forwardee = (oop) m.decode_pointer();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -191,2 +191,2 @@\n-    age = !m->has_displaced_mark_helper() ? m->age()\n-                                          : m->displaced_mark_helper()->age();\n+    age = !m.has_displaced_mark_helper() ? m.age()\n+                                          : m.displaced_mark_helper().age();\n@@ -274,1 +274,1 @@\n-      if (age < markOopDesc::max_age) {\n+      if (age < markOop::max_age) {\n@@ -277,1 +277,1 @@\n-      if (old_mark->has_displaced_mark_helper()) {\n+      if (old_mark.has_displaced_mark_helper()) {\n@@ -282,2 +282,2 @@\n-        markOop new_mark = old_mark->displaced_mark_helper()->set_age(age);\n-        old_mark->set_displaced_mark_helper(new_mark);\n+        markOop new_mark = old_mark.displaced_mark_helper().set_age(age);\n+        old_mark.set_displaced_mark_helper(new_mark);\n@@ -285,1 +285,1 @@\n-        obj->set_mark_raw(old_mark->set_age(age));\n+        obj->set_mark_raw(old_mark.set_age(age));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-    if (m->is_marked()) {\n-      obj = (oop) m->decode_pointer();\n+    if (m.is_marked()) {\n+      obj = (oop) m.decode_pointer();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,2 +116,2 @@\n-    assert(oop(q)->mark_raw()->is_marked() || oop(q)->mark_raw()->is_unlocked() ||\n-           oop(q)->mark_raw()->has_bias_pattern(),\n+    assert(oop(q)->mark_raw().is_marked() || oop(q)->mark_raw().is_unlocked() ||\n+           oop(q)->mark_raw().has_bias_pattern(),\n@@ -262,1 +262,1 @@\n-    oop(q)->set_mark_raw(oop(q)->mark_raw()->set_marked());\n+    oop(q)->set_mark_raw(oop(q)->mark_raw().set_marked());\n@@ -353,1 +353,1 @@\n-      q = (HeapWord*) oop(_first_dead)->mark_raw()->decode_pointer();\n+      q = (HeapWord*) oop(_first_dead)->mark_raw().decode_pointer();\n@@ -364,1 +364,1 @@\n-      q = (HeapWord*) oop(q)->mark_raw()->decode_pointer();\n+      q = (HeapWord*) oop(q)->mark_raw().decode_pointer();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psMarkSweepDecorator.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-  filler_oop->set_mark_raw(markOopDesc::prototype());\n+  filler_oop->set_mark_raw(markOop::prototype());\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionLAB.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-  if (!test_mark->is_marked()) {\n+  if (!test_mark.is_marked()) {\n@@ -127,2 +127,2 @@\n-    uint age = (test_mark->has_displaced_mark_helper() \/* o->has_displaced_mark() *\/) ?\n-      test_mark->displaced_mark_helper()->age() : test_mark->age();\n+    uint age = (test_mark.has_displaced_mark_helper() \/* o->has_displaced_mark() *\/) ?\n+      test_mark.displaced_mark_helper().age() : test_mark.age();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-  assert(!NeverTenure || _tenuring_threshold == markOopDesc::max_age + 1, \"Sanity\");\n+  assert(!NeverTenure || _tenuring_threshold == markOop::max_age + 1, \"Sanity\");\n@@ -731,2 +731,2 @@\n-    assert(MaxTenuringThreshold == 0 || MaxTenuringThreshold == markOopDesc::max_age + 1,\n-           \"MaxTenuringThreshold should be 0 or markOopDesc::max_age + 1, but is %d\", (int) MaxTenuringThreshold);\n+    assert(MaxTenuringThreshold == 0 || MaxTenuringThreshold == markOop::max_age + 1,\n+           \"MaxTenuringThreshold should be 0 or markOop::max_age + 1, but is %d\", (int) MaxTenuringThreshold);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-    if (!obj->mark_raw()->is_marked()) {\n+    if (!obj->mark_raw().is_marked()) {\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  obj->set_mark_raw(markOopDesc::prototype()->set_marked());\n+  obj->set_mark_raw(markOop::prototype().set_marked());\n@@ -44,1 +44,1 @@\n-  if (mark->must_be_preserved(obj)) {\n+  if (mark.must_be_preserved(obj)) {\n@@ -53,1 +53,1 @@\n-    if (!obj->mark_raw()->is_marked()) {\n+    if (!obj->mark_raw().is_marked()) {\n@@ -82,1 +82,1 @@\n-    oop new_obj = oop(obj->mark_raw()->decode_pointer());\n+    oop new_obj = oop(obj->mark_raw().decode_pointer());\n@@ -85,2 +85,2 @@\n-           obj->mark_raw() == markOopDesc::prototype() || \/\/ not gc marked?\n-           (UseBiasedLocking && obj->mark_raw()->has_bias_pattern()),\n+           obj->mark_raw() == markOop::prototype() || \/\/ not gc marked?\n+           (UseBiasedLocking && obj->mark_raw().has_bias_pattern()),\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -82,2 +82,2 @@\n-    assert(MaxTenuringThreshold == 0 || MaxTenuringThreshold == markOopDesc::max_age + 1,\n-           \"MaxTenuringThreshold should be 0 or markOopDesc::max_age + 1, but is \" UINTX_FORMAT, MaxTenuringThreshold);\n+    assert(MaxTenuringThreshold == 0 || MaxTenuringThreshold == markOop::max_age + 1,\n+           \"MaxTenuringThreshold should be 0 or markOop::max_age + 1, but is \" UINTX_FORMAT, MaxTenuringThreshold);\n","filename":"src\/hotspot\/share\/gc\/shared\/ageTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  enum { table_size = markOopDesc::max_age + 1 };\n+  enum { table_size = markOop::max_age + 1 };\n","filename":"src\/hotspot\/share\/gc\/shared\/ageTable.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -819,1 +819,1 @@\n-          range(0, markOopDesc::max_age + 1)                                \\\n+          range(0, markOop::max_age + 1)                                \\\n@@ -824,1 +824,1 @@\n-          range(0, markOopDesc::max_age + 1)                                \\\n+          range(0, markOop::max_age + 1)                                \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -403,1 +403,1 @@\n-    oopDesc::set_mark_raw(mem, markOopDesc::prototype());\n+    oopDesc::set_mark_raw(mem, markOop::prototype());\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  return m->must_be_preserved_for_promotion_failure(obj);\n+  return m.must_be_preserved_for_promotion_failure(obj);\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -654,1 +654,1 @@\n-    t->set_mark_raw(markOopDesc::prototype());\n+    t->set_mark_raw(markOop::prototype());\n@@ -661,1 +661,1 @@\n-    obj->set_mark_raw(markOopDesc::prototype());\n+    obj->set_mark_raw(markOop::prototype());\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-      obj->set_mark_raw(obj->mark_raw()->set_marked());\n+      obj->set_mark_raw(obj->mark_raw().set_marked());\n@@ -168,2 +168,2 @@\n-           oop(cur_obj)->mark_raw()->is_marked() || oop(cur_obj)->mark_raw()->is_unlocked() ||\n-           oop(cur_obj)->mark_raw()->has_bias_pattern(),\n+           oop(cur_obj)->mark_raw().is_marked() || oop(cur_obj)->mark_raw().is_unlocked() ||\n+           oop(cur_obj)->mark_raw().has_bias_pattern(),\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  obj->mark()->print_on(&mw_ss);\n+  obj->mark().print_on(&mw_ss);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-  if (mark->is_marked()) {\n-    HeapWord* fwdptr = (HeapWord*) mark->clear_lock_bits();\n+  if (mark.is_marked()) {\n+    HeapWord* fwdptr = (HeapWord*) mark.clear_lock_bits().to_pointer();\n@@ -58,2 +58,2 @@\n-  if (mark->is_marked()) {\n-    HeapWord* fwdptr = (HeapWord*)mark->clear_lock_bits();\n+  if (mark.is_marked()) {\n+    HeapWord* fwdptr = (HeapWord*)mark.clear_lock_bits().to_pointer();\n@@ -73,1 +73,1 @@\n-  return obj->mark_raw()->is_marked();\n+  return obj->mark_raw().is_marked();\n@@ -78,2 +78,2 @@\n-  if (old_mark->is_marked()) {\n-    return (oop) old_mark->clear_lock_bits();\n+  if (old_mark.is_marked()) {\n+    return (oop) old_mark.clear_lock_bits().to_pointer();\n@@ -82,1 +82,1 @@\n-  markOop new_mark = markOopDesc::encode_pointer_as_mark(update);\n+  markOop new_mark = markOop::encode_pointer_as_mark(update);\n@@ -87,1 +87,1 @@\n-    return (oop) prev_mark->clear_lock_bits();\n+    return (oop) prev_mark.clear_lock_bits().to_pointer();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahForwarding.inline.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    if (mark == markOopDesc::INFLATING() || mark->has_displaced_mark_helper()) {\n+    if (mark == markOop::INFLATING() || mark.has_displaced_mark_helper()) {\n@@ -58,1 +58,1 @@\n-    markOop new_mark = mark->incr_age();\n+    markOop new_mark = mark.incr_age();\n@@ -60,1 +60,1 @@\n-      if (mark->age() == StringDeduplicationAgeThreshold) {\n+      if (mark.age() == StringDeduplicationAgeThreshold) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahStringDedup.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -667,1 +667,1 @@\n-        uintptr_t epoch_mask_in_place = (uintptr_t)markOopDesc::epoch_mask_in_place;\n+        uintptr_t epoch_mask_in_place = (uintptr_t)markOop::epoch_mask_in_place;\n@@ -669,1 +669,1 @@\n-        intptr_t hash = (intptr_t) markOopDesc::no_hash;\n+        intptr_t hash = (intptr_t) markOop::no_hash;\n@@ -671,1 +671,1 @@\n-        if (mark->has_bias_pattern()) {\n+        if (mark.has_bias_pattern()) {\n@@ -677,1 +677,1 @@\n-            ~((uintptr_t) markOopDesc::age_mask_in_place);\n+            ~((uintptr_t) markOop::age_mask_in_place);\n@@ -685,1 +685,1 @@\n-          } else if ((anticipated_bias_locking_value & markOopDesc::biased_lock_mask_in_place) != 0) {\n+          } else if ((anticipated_bias_locking_value & markOop::biased_lock_mask_in_place) != 0) {\n@@ -688,1 +688,1 @@\n-            if (hash != markOopDesc::no_hash) {\n+            if (hash != markOop::no_hash) {\n@@ -698,1 +698,1 @@\n-            if (hash != markOopDesc::no_hash) {\n+            if (hash != markOop::no_hash) {\n@@ -712,3 +712,3 @@\n-                                        ((uintptr_t)markOopDesc::biased_lock_mask_in_place |\n-                                         (uintptr_t)markOopDesc::age_mask_in_place | epoch_mask_in_place));\n-            if (hash != markOopDesc::no_hash) {\n+                                        ((uintptr_t)markOop::biased_lock_mask_in_place |\n+                                         (uintptr_t)markOop::age_mask_in_place | epoch_mask_in_place));\n+            if (hash != markOop::no_hash) {\n@@ -733,1 +733,1 @@\n-          markOop displaced = rcvr->mark()->set_unlocked();\n+          markOop displaced = rcvr->mark().set_unlocked();\n@@ -852,1 +852,1 @@\n-      uintptr_t epoch_mask_in_place = (uintptr_t)markOopDesc::epoch_mask_in_place;\n+      uintptr_t epoch_mask_in_place = (uintptr_t)markOop::epoch_mask_in_place;\n@@ -855,1 +855,1 @@\n-      intptr_t hash = (intptr_t) markOopDesc::no_hash;\n+      intptr_t hash = (intptr_t) markOop::no_hash;\n@@ -857,1 +857,1 @@\n-      if (mark->has_bias_pattern()) {\n+      if (mark.has_bias_pattern()) {\n@@ -863,1 +863,1 @@\n-          ~((uintptr_t) markOopDesc::age_mask_in_place);\n+          ~((uintptr_t) markOop::age_mask_in_place);\n@@ -871,1 +871,1 @@\n-        } else if ((anticipated_bias_locking_value & markOopDesc::biased_lock_mask_in_place) != 0) {\n+        } else if ((anticipated_bias_locking_value & markOop::biased_lock_mask_in_place) != 0) {\n@@ -874,1 +874,1 @@\n-          if (hash != markOopDesc::no_hash) {\n+          if (hash != markOop::no_hash) {\n@@ -885,1 +885,1 @@\n-          if (hash != markOopDesc::no_hash) {\n+          if (hash != markOop::no_hash) {\n@@ -898,3 +898,3 @@\n-          markOop header = (markOop) ((uintptr_t) mark & ((uintptr_t)markOopDesc::biased_lock_mask_in_place |\n-                                                          (uintptr_t)markOopDesc::age_mask_in_place | epoch_mask_in_place));\n-          if (hash != markOopDesc::no_hash) {\n+          markOop header = (markOop) ((uintptr_t) mark & ((uintptr_t)markOop::biased_lock_mask_in_place |\n+                                                          (uintptr_t)markOop::age_mask_in_place | epoch_mask_in_place));\n+          if (hash != markOop::no_hash) {\n@@ -919,1 +919,1 @@\n-        markOop displaced = lockee->mark()->set_unlocked();\n+        markOop displaced = lockee->mark().set_unlocked();\n@@ -1792,1 +1792,1 @@\n-          uintptr_t epoch_mask_in_place = (uintptr_t)markOopDesc::epoch_mask_in_place;\n+          uintptr_t epoch_mask_in_place = (uintptr_t)markOop::epoch_mask_in_place;\n@@ -1795,1 +1795,1 @@\n-          intptr_t hash = (intptr_t) markOopDesc::no_hash;\n+          intptr_t hash = (intptr_t) markOop::no_hash;\n@@ -1797,1 +1797,1 @@\n-          if (mark->has_bias_pattern()) {\n+          if (mark.has_bias_pattern()) {\n@@ -1803,1 +1803,1 @@\n-              ~((uintptr_t) markOopDesc::age_mask_in_place);\n+              ~((uintptr_t) markOop::age_mask_in_place);\n@@ -1812,1 +1812,1 @@\n-            else if ((anticipated_bias_locking_value & markOopDesc::biased_lock_mask_in_place) != 0) {\n+            else if ((anticipated_bias_locking_value & markOop::biased_lock_mask_in_place) != 0) {\n@@ -1815,1 +1815,1 @@\n-              if (hash != markOopDesc::no_hash) {\n+              if (hash != markOop::no_hash) {\n@@ -1826,1 +1826,1 @@\n-              if (hash != markOopDesc::no_hash) {\n+              if (hash != markOop::no_hash) {\n@@ -1840,2 +1840,2 @@\n-              markOop header = (markOop) ((uintptr_t) mark & ((uintptr_t)markOopDesc::biased_lock_mask_in_place |\n-                                                              (uintptr_t)markOopDesc::age_mask_in_place |\n+              markOop header = (markOop) ((uintptr_t) mark & ((uintptr_t)markOop::biased_lock_mask_in_place |\n+                                                              (uintptr_t)markOop::age_mask_in_place |\n@@ -1843,1 +1843,1 @@\n-              if (hash != markOopDesc::no_hash) {\n+              if (hash != markOop::no_hash) {\n@@ -1862,1 +1862,1 @@\n-            markOop displaced = lockee->mark()->set_unlocked();\n+            markOop displaced = lockee->mark().set_unlocked();\n@@ -1893,1 +1893,1 @@\n-            if (!lockee->mark()->has_bias_pattern()) {\n+            if (!lockee->mark().has_bias_pattern()) {\n@@ -1897,1 +1897,1 @@\n-                markOop old_header = markOopDesc::encode(lock);\n+                markOop old_header = markOop::encode(lock);\n@@ -2183,1 +2183,1 @@\n-                result->set_mark(markOopDesc::prototype());\n+                result->set_mark(markOop::prototype());\n@@ -3033,1 +3033,1 @@\n-          if (!lockee->mark()->has_bias_pattern()) {\n+          if (!lockee->mark().has_bias_pattern()) {\n@@ -3036,1 +3036,1 @@\n-              markOop old_header = markOopDesc::encode(lock);\n+              markOop old_header = markOop::encode(lock);\n@@ -3108,1 +3108,1 @@\n-            if (!rcvr->mark()->has_bias_pattern()) {\n+            if (!rcvr->mark().has_bias_pattern()) {\n@@ -3112,1 +3112,1 @@\n-                markOop old_header = markOopDesc::encode(lock);\n+                markOop old_header = markOop::encode(lock);\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeInterpreter.cpp","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-    if (NULL == pointee->mark()) {\n+    if (NULL == pointee->mark().to_pointer()) {\n@@ -151,1 +151,1 @@\n-  assert(NULL == pointee->mark(), \"invariant\");\n+  assert(NULL == pointee->mark().to_pointer(), \"invariant\");\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/bfsClosure.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-  if (NULL == pointee->mark()) {\n+  if (NULL == pointee->mark().to_pointer()) {\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/dfsClosure.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -240,2 +240,2 @@\n-  assert(NULL == sample_object->mark(), \"invariant\");\n-  sample_object->set_mark(markOop(leak_context_edge));\n+  assert(NULL == sample_object->mark().to_pointer(), \"invariant\");\n+  sample_object->set_mark(markOop::from_pointer(leak_context_edge));\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/edgeStore.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  return (const Edge*)edge.pointee()->mark() == &edge;\n+  return (const Edge*)edge.pointee()->mark().to_pointer() == &edge;\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/edgeUtils.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    ObjectSampleMarkOop() : _obj(NULL), _mark_oop(NULL) {}\n+    ObjectSampleMarkOop() : _obj(NULL), _mark_oop(markOop::zero()) {}\n@@ -75,2 +75,2 @@\n-    assert(NULL == markOopDesc::INFLATING(), \"invariant\");\n-    obj->set_mark(markOopDesc::INFLATING());\n+    assert(NULL == markOop::INFLATING(), \"invariant\");\n+    obj->set_mark(markOop::INFLATING());\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/objectSampleMarker.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    edge = (const Edge*)(*object_addr)->mark();\n+    edge = (const Edge*)(*object_addr)->mark().to_pointer();\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/eventEmitter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-MarkOopContext::MarkOopContext() : _obj(NULL), _mark_oop(NULL) {}\n+MarkOopContext::MarkOopContext() : _obj(NULL), _mark_oop(markOop::zero()) {}\n@@ -39,2 +39,2 @@\n-  assert(NULL == markOopDesc::INFLATING(), \"invariant\");\n-  _obj->set_mark(markOopDesc::INFLATING());\n+  assert(NULL == markOop::INFLATING(), \"invariant\");\n+  _obj->set_mark(markOop::INFLATING());\n@@ -51,1 +51,1 @@\n-MarkOopContext::MarkOopContext(const MarkOopContext& rhs) : _obj(NULL), _mark_oop(NULL) {\n+MarkOopContext::MarkOopContext(const MarkOopContext& rhs) : _obj(NULL), _mark_oop(markOop::zero()) {\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/utilities\/saveRestore.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -570,1 +570,1 @@\n-  declare_constant(markOopDesc::no_hash)                                  \\\n+  declare_constant(markOop::no_hash)                                  \\\n@@ -602,1 +602,1 @@\n-  declare_constant(markOopDesc::hash_shift)                               \\\n+  declare_constant(markOop::hash_shift)                               \\\n@@ -604,5 +604,5 @@\n-  declare_constant(markOopDesc::biased_lock_mask_in_place)                \\\n-  declare_constant(markOopDesc::age_mask_in_place)                        \\\n-  declare_constant(markOopDesc::epoch_mask_in_place)                      \\\n-  declare_constant(markOopDesc::hash_mask)                                \\\n-  declare_constant(markOopDesc::hash_mask_in_place)                       \\\n+  declare_constant(markOop::biased_lock_mask_in_place)                \\\n+  declare_constant(markOop::age_mask_in_place)                        \\\n+  declare_constant(markOop::epoch_mask_in_place)                      \\\n+  declare_constant(markOop::hash_mask)                                \\\n+  declare_constant(markOop::hash_mask_in_place)                       \\\n@@ -610,2 +610,2 @@\n-  declare_constant(markOopDesc::unlocked_value)                           \\\n-  declare_constant(markOopDesc::biased_lock_pattern)                      \\\n+  declare_constant(markOop::unlocked_value)                           \\\n+  declare_constant(markOop::biased_lock_pattern)                      \\\n@@ -613,2 +613,2 @@\n-  declare_constant(markOopDesc::no_hash_in_place)                         \\\n-  declare_constant(markOopDesc::no_lock_in_place)                         \\\n+  declare_constant(markOop::no_hash_in_place)                         \\\n+  declare_constant(markOop::no_lock_in_place)                         \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1874,1 +1874,1 @@\n-  assert(!p->mark()->has_bias_pattern(),\n+  assert(!p->mark().has_bias_pattern(),\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1313,1 +1313,1 @@\n-  return markOopDesc::lock_mask_in_place;\n+  return markOop::lock_mask_in_place;\n@@ -1318,1 +1318,1 @@\n-  intptr_t bits = (intptr_t)markOopDesc::prototype();\n+  intptr_t bits = (intptr_t)markOop::prototype();\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -631,1 +631,1 @@\n-  assert(markOopDesc::encode_pointer_as_mark(_base)->decode_pointer() == _base,\n+  assert(markOop::encode_pointer_as_mark(_base)->decode_pointer() == _base,\n@@ -633,1 +633,1 @@\n-  assert(markOopDesc::encode_pointer_as_mark(&_base[size])->decode_pointer() == &_base[size],\n+  assert(markOop::encode_pointer_as_mark(&_base[size])->decode_pointer() == &_base[size],\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-                           _prototype_header(markOopDesc::prototype()),\n+                           _prototype_header(markOop::prototype()),\n@@ -685,1 +685,1 @@\n-     obj->mark()->print_on(st);\n+     obj->mark().print_on(st);\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"oops\/markOop.hpp\"\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  assert(!header->has_bias_pattern() || is_instance_klass(), \"biased locking currently only supported for Java instances\");\n+  assert(!header.has_bias_pattern() || is_instance_klass(), \"biased locking currently only supported for Java instances\");\n","filename":"src\/hotspot\/share\/oops\/klass.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-void markOopDesc::print_on(outputStream* st) const {\n+void markOop::print_on(outputStream* st) const {\n","filename":"src\/hotspot\/share\/oops\/markOop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-class markOopDesc: public oopDesc {\n+class markOop {\n@@ -106,2 +106,1 @@\n-  \/\/ Conversion\n-  uintptr_t value() const { return (uintptr_t) this; }\n+  uintptr_t _value;\n@@ -120,0 +119,24 @@\n+  explicit markOop(uintptr_t value) : _value(value) {}\n+\n+  markOop() { \/* uninitialized *\/}\n+\n+  \/\/ It is critical for performance that this class be trivially\n+  \/\/ destructable, copyable, and assignable.\n+\n+  static markOop from_pointer(void* ptr) {\n+    return markOop((uintptr_t)ptr);\n+  }\n+  void* to_pointer() const {\n+    return (void*)_value;\n+  }\n+\n+  bool operator==(const markOop& other) const {\n+    return _value == other._value;\n+  }\n+  bool operator!=(const markOop& other) const {\n+    return !operator==(other);\n+  }\n+\n+  \/\/ Conversion\n+  uintptr_t value() const { return _value; }\n+\n@@ -167,0 +190,3 @@\n+  \/\/ Creates a markOop with all bits set to zero.\n+  static markOop zero() { return markOop(uintptr_t(0)); }\n+\n@@ -221,2 +247,2 @@\n-  \/\/ Distinguished markword value - used when inflating over\n-  \/\/ an existing stacklock.  0 indicates the markword is \"BUSY\".\n+  \/\/ Distinguished markOop value - used when inflating over\n+  \/\/ an existing stacklock.  0 indicates the markOop is \"BUSY\".\n@@ -227,1 +253,1 @@\n-  static markOop INFLATING() { return (markOop) 0; }    \/\/ inflate-in-progress\n+  static markOop INFLATING() { return zero(); }    \/\/ inflate-in-progress\n@@ -297,1 +323,1 @@\n-    return (markOop)tmp;\n+    return markOop(tmp);\n@@ -302,1 +328,1 @@\n-    return (markOop) marked_value;\n+    return markOop(marked_value);\n@@ -307,1 +333,1 @@\n-    return (markOop) lock;\n+    return from_pointer(lock);\n@@ -333,1 +359,1 @@\n-  markOop incr_age()          const { return age() == max_age ? markOop(this) : set_age(age() + 1); }\n+  markOop incr_age()          const { return age() == max_age ? markOop(_value) : set_age(age() + 1); }\n@@ -356,1 +382,1 @@\n-  inline static markOop encode_pointer_as_mark(void* p) { return markOop(p)->set_marked(); }\n+  inline static markOop encode_pointer_as_mark(void* p) { return from_pointer(p).set_marked(); }\n@@ -359,1 +385,1 @@\n-  inline void* decode_pointer() { if (UseBiasedLocking && has_bias_pattern()) return NULL; return clear_lock_bits(); }\n+  inline void* decode_pointer() { if (UseBiasedLocking && has_bias_pattern()) return NULL; return (void*)clear_lock_bits().value(); }\n@@ -378,1 +404,1 @@\n-    return markOop(((intptr_t)prototype() & ~cms_mask_in_place) |\n+    return markOop(((intptr_t)prototype().value() & ~cms_mask_in_place) |\n@@ -392,1 +418,1 @@\n-    return markOop(((intptr_t)cms_free_prototype() & ~size_mask_in_place) |\n+    return markOop(((intptr_t)cms_free_prototype().value() & ~size_mask_in_place) |\n@@ -398,0 +424,10 @@\n+\/\/ Support atomic operations.\n+template<>\n+struct PrimitiveConversions::Translate<markOop> : public TrueType {\n+  typedef markOop Value;\n+  typedef uintptr_t Decayed;\n+\n+  static Decayed decay(const Value& x) { return x.value(); }\n+  static Value recover(Decayed x) { return Value(x); }\n+};\n+\n","filename":"src\/hotspot\/share\/oops\/markOop.hpp","additions":50,"deletions":14,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-inline bool markOopDesc::must_be_preserved_with_bias(oop obj_containing_mark) const {\n+inline bool markOop::must_be_preserved_with_bias(oop obj_containing_mark) const {\n@@ -42,1 +42,1 @@\n-  if (prototype_header->has_bias_pattern()) {\n+  if (prototype_header.has_bias_pattern()) {\n@@ -51,1 +51,1 @@\n-inline bool markOopDesc::must_be_preserved(oop obj_containing_mark) const {\n+inline bool markOop::must_be_preserved(oop obj_containing_mark) const {\n@@ -59,1 +59,1 @@\n-inline bool markOopDesc::must_be_preserved_with_bias_for_promotion_failure(oop obj_containing_mark) const {\n+inline bool markOop::must_be_preserved_with_bias_for_promotion_failure(oop obj_containing_mark) const {\n@@ -71,1 +71,1 @@\n-      prototype_for_object(obj_containing_mark)->has_bias_pattern()) {\n+      prototype_for_object(obj_containing_mark).has_bias_pattern()) {\n@@ -79,1 +79,1 @@\n-inline bool markOopDesc::must_be_preserved_for_promotion_failure(oop obj_containing_mark) const {\n+inline bool markOop::must_be_preserved_for_promotion_failure(oop obj_containing_mark) const {\n@@ -88,1 +88,1 @@\n-inline bool markOopDesc::must_be_preserved_with_bias_for_cms_scavenge(Klass* klass_of_obj_containing_mark) const {\n+inline bool markOop::must_be_preserved_with_bias_for_cms_scavenge(Klass* klass_of_obj_containing_mark) const {\n@@ -92,1 +92,1 @@\n-      klass_of_obj_containing_mark->prototype_header()->has_bias_pattern()) {\n+      klass_of_obj_containing_mark->prototype_header().has_bias_pattern()) {\n@@ -100,1 +100,1 @@\n-inline bool markOopDesc::must_be_preserved_for_cms_scavenge(Klass* klass_of_obj_containing_mark) const {\n+inline bool markOop::must_be_preserved_for_cms_scavenge(Klass* klass_of_obj_containing_mark) const {\n@@ -106,1 +106,1 @@\n-inline markOop markOopDesc::prototype_for_object(oop obj) {\n+inline markOop markOop::prototype_for_object(oop obj) {\n@@ -109,1 +109,1 @@\n-  assert(prototype_header == prototype() || prototype_header->has_bias_pattern(), \"corrupt prototype header\");\n+  assert(prototype_header == prototype() || prototype_header.has_bias_pattern(), \"corrupt prototype header\");\n","filename":"src\/hotspot\/share\/oops\/markOop.inline.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-  if (obj->mark_raw() != NULL) {\n+  if (obj->mark_raw().value() != 0) {\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"oops\/markOop.hpp\"\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -47,1 +47,2 @@\n-  return HeapAccess<MO_VOLATILE>::load_at(as_oop(), mark_offset_in_bytes());\n+  uintptr_t v = HeapAccess<MO_VOLATILE>::load_at(as_oop(), mark_offset_in_bytes());\n+  return markOop(v);\n@@ -51,1 +52,1 @@\n-  return _mark;\n+  return Atomic::load(&_mark);;\n@@ -58,2 +59,2 @@\n-void oopDesc::set_mark(volatile markOop m) {\n-  HeapAccess<MO_VOLATILE>::store_at(as_oop(), mark_offset_in_bytes(), m);\n+void oopDesc::set_mark(markOop m) {\n+  HeapAccess<MO_VOLATILE>::store_at(as_oop(), mark_offset_in_bytes(), m.value());\n@@ -62,2 +63,2 @@\n-void oopDesc::set_mark_raw(volatile markOop m) {\n-  _mark = m;\n+void oopDesc::set_mark_raw(markOop m) {\n+  Atomic::store(m, &_mark);\n@@ -71,1 +72,1 @@\n-  HeapAccess<MO_RELEASE>::store_at(as_oop(), mark_offset_in_bytes(), m);\n+  HeapAccess<MO_RELEASE>::store_at(as_oop(), mark_offset_in_bytes(), m.value());\n@@ -75,1 +76,2 @@\n-  return HeapAccess<>::atomic_cmpxchg_at(new_mark, as_oop(), mark_offset_in_bytes(), old_mark);\n+  uintptr_t v = HeapAccess<>::atomic_cmpxchg_at(new_mark.value(), as_oop(), mark_offset_in_bytes(), old_mark.value());\n+  return markOop(v);\n@@ -83,1 +85,1 @@\n-  set_mark(markOopDesc::prototype_for_object(this));\n+  set_mark(markOop::prototype_for_object(this));\n@@ -87,1 +89,1 @@\n-  set_mark_raw(markOopDesc::prototype_for_object(this));\n+  set_mark_raw(markOop::prototype_for_object(this));\n@@ -321,1 +323,1 @@\n-  return mark()->is_locked();\n+  return mark().is_locked();\n@@ -325,1 +327,1 @@\n-  return mark()->is_unlocked();\n+  return mark().is_unlocked();\n@@ -329,1 +331,1 @@\n-  return mark()->has_bias_pattern();\n+  return mark().has_bias_pattern();\n@@ -333,1 +335,1 @@\n-  return mark_raw()->has_bias_pattern();\n+  return mark_raw().has_bias_pattern();\n@@ -338,1 +340,1 @@\n-  return mark_raw()->is_marked();\n+  return mark_raw().is_marked();\n@@ -345,1 +347,1 @@\n-  return mark_raw()->is_marked();\n+  return mark_raw().is_marked();\n@@ -357,2 +359,2 @@\n-  markOop m = markOopDesc::encode_pointer_as_mark(p);\n-  assert(m->decode_pointer() == p, \"encoding must be reversable\");\n+  markOop m = markOop::encode_pointer_as_mark(p);\n+  assert(m.decode_pointer() == p, \"encoding must be reversable\");\n@@ -368,2 +370,2 @@\n-  markOop m = markOopDesc::encode_pointer_as_mark(p);\n-  assert(m->decode_pointer() == p, \"encoding must be reversable\");\n+  markOop m = markOop::encode_pointer_as_mark(p);\n+  assert(m.decode_pointer() == p, \"encoding must be reversable\");\n@@ -375,1 +377,1 @@\n-  markOop forwardPtrMark = markOopDesc::encode_pointer_as_mark(p);\n+  markOop forwardPtrMark = markOop::encode_pointer_as_mark(p);\n@@ -378,1 +380,1 @@\n-  assert(forwardPtrMark->decode_pointer() == p, \"encoding must be reversable\");\n+  assert(forwardPtrMark.decode_pointer() == p, \"encoding must be reversable\");\n@@ -381,1 +383,1 @@\n-  while (!oldMark->is_marked()) {\n+  while (!oldMark.is_marked()) {\n@@ -399,1 +401,1 @@\n-  return (oop) mark_raw()->decode_pointer();\n+  return (oop) mark_raw().decode_pointer();\n@@ -406,2 +408,1 @@\n-  markOop m = OrderAccess::load_acquire(&_mark);\n-  return (oop) m->decode_pointer();\n+  return (oop) OrderAccess::load_acquire(&_mark).decode_pointer();\n@@ -414,1 +415,1 @@\n-    return displaced_mark_raw()->age();\n+    return displaced_mark_raw().age();\n@@ -416,1 +417,1 @@\n-    return mark_raw()->age();\n+    return mark_raw().age();\n@@ -423,1 +424,1 @@\n-    set_displaced_mark_raw(displaced_mark_raw()->incr_age());\n+    set_displaced_mark_raw(displaced_mark_raw().incr_age());\n@@ -425,1 +426,1 @@\n-    set_mark_raw(mark_raw()->incr_age());\n+    set_mark_raw(mark_raw().incr_age());\n@@ -492,4 +493,4 @@\n-  if (mrk->is_unlocked() && !mrk->has_no_hash()) {\n-    return mrk->hash();\n-  } else if (mrk->is_marked()) {\n-    return mrk->hash();\n+  if (mrk.is_unlocked() && !mrk.has_no_hash()) {\n+    return mrk.hash();\n+  } else if (mrk.is_marked()) {\n+    return mrk.hash();\n@@ -502,1 +503,1 @@\n-  return mark_raw()->has_displaced_mark_helper();\n+  return mark_raw().has_displaced_mark_helper();\n@@ -506,1 +507,1 @@\n-  return mark_raw()->displaced_mark_helper();\n+  return mark_raw().displaced_mark_helper();\n@@ -510,1 +511,1 @@\n-  mark_raw()->set_displaced_mark_helper(m);\n+  mark_raw().set_displaced_mark_helper(m);\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":38,"deletions":37,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-typedef class   markOopDesc*                markOop;\n@@ -123,1 +122,0 @@\n-  operator markOop () const volatile  { return markOop(obj()); }\n","filename":"src\/hotspot\/share\/oops\/oopsHierarchy.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3963,1 +3963,1 @@\n-  Node *lock_mask      = _gvn.MakeConX(markOopDesc::biased_lock_mask_in_place);\n+  Node *lock_mask      = _gvn.MakeConX(markOop::biased_lock_mask_in_place);\n@@ -3965,1 +3965,1 @@\n-  Node *unlocked_val   = _gvn.MakeConX(markOopDesc::unlocked_value);\n+  Node *unlocked_val   = _gvn.MakeConX(markOop::unlocked_value);\n@@ -3975,2 +3975,2 @@\n-  Node *hash_mask      = _gvn.intcon(markOopDesc::hash_mask);\n-  Node *hash_shift     = _gvn.intcon(markOopDesc::hash_shift);\n+  Node *hash_mask      = _gvn.intcon(markOop::hash_mask);\n+  Node *hash_shift     = _gvn.intcon(markOop::hash_shift);\n@@ -3985,1 +3985,1 @@\n-  Node *no_hash_val    = _gvn.intcon(markOopDesc::no_hash);\n+  Node *no_hash_val    = _gvn.intcon(markOop::no_hash);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1776,1 +1776,1 @@\n-    mark_node = makecon(TypeRawPtr::make((address)markOopDesc::prototype()));\n+    mark_node = makecon(TypeRawPtr::make((address)markOop::prototype().value()));\n@@ -2333,2 +2333,2 @@\n-                         markOopDesc::biased_lock_mask_in_place,\n-                         markOopDesc::biased_lock_pattern, true);\n+                         markOop::biased_lock_mask_in_place,\n+                         markOop::biased_lock_pattern, true);\n@@ -2363,1 +2363,1 @@\n-                                      (~markOopDesc::age_mask_in_place), 0);\n+                                      (~markOop::age_mask_in_place), 0);\n@@ -2374,1 +2374,1 @@\n-                          markOopDesc::biased_lock_mask_in_place, 0, true);\n+                          markOop::biased_lock_mask_in_place, 0, true);\n@@ -2396,1 +2396,1 @@\n-                                      markOopDesc::epoch_mask_in_place, 0);\n+                                      markOop::epoch_mask_in_place, 0);\n@@ -2406,3 +2406,3 @@\n-    Node* cmask   = MakeConX(markOopDesc::biased_lock_mask_in_place |\n-                             markOopDesc::age_mask_in_place |\n-                             markOopDesc::epoch_mask_in_place);\n+    Node* cmask   = MakeConX(markOop::biased_lock_mask_in_place |\n+                             markOop::age_mask_in_place |\n+                             markOop::epoch_mask_in_place);\n@@ -2523,2 +2523,2 @@\n-                         markOopDesc::biased_lock_mask_in_place,\n-                         markOopDesc::biased_lock_pattern);\n+                         markOop::biased_lock_mask_in_place,\n+                         markOop::biased_lock_pattern);\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -968,1 +968,1 @@\n-      if (!mark->has_monitor()) {\n+      if (!mark.has_monitor()) {\n@@ -971,2 +971,2 @@\n-        if (mark->has_locker()) {\n-          owner = (address)mark->locker(); \/\/ save the address of the Lock word\n+        if (mark.has_locker()) {\n+          owner = (address)mark.locker(); \/\/ save the address of the Lock word\n@@ -977,1 +977,1 @@\n-        mon = mark->monitor();\n+        mon = mark.monitor();\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1648,1 +1648,1 @@\n-      if (mark->is_marked()) {\n+      if (mark.is_marked()) {\n@@ -1726,1 +1726,1 @@\n-  assert(!o->mark()->is_marked(), \"should only mark an object once\");\n+  assert(!o->mark().is_marked(), \"should only mark an object once\");\n@@ -1731,1 +1731,1 @@\n-  if (mark->must_be_preserved(o)) {\n+  if (mark.must_be_preserved(o)) {\n@@ -1737,1 +1737,1 @@\n-  o->set_mark(markOopDesc::prototype()->set_marked());\n+  o->set_mark(markOop::prototype().set_marked());\n@@ -1742,1 +1742,1 @@\n-  return o->mark()->is_marked();\n+  return o->mark().is_marked();\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1682,1 +1682,1 @@\n-  return (jboolean) obj_oop->mark()->has_monitor();\n+  return (jboolean) obj_oop->mark().has_monitor();\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2882,1 +2882,1 @@\n-      if (FLAG_SET_CMDLINE(uintx, MaxTenuringThreshold, markOopDesc::max_age + 1) != JVMFlag::SUCCESS) {\n+      if (FLAG_SET_CMDLINE(uintx, MaxTenuringThreshold, markOop::max_age + 1) != JVMFlag::SUCCESS) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-  if (moop != NULL)\n-    moop->print_on(st);\n+  if (moop.value() != 0)\n+    moop.print_on(st);\n@@ -65,1 +65,1 @@\n-  if (displaced_header()->is_neutral()) {\n+  if (displaced_header().is_neutral()) {\n@@ -78,1 +78,1 @@\n-  intptr_t dh = (intptr_t) displaced_header();\n+  intptr_t dh = (intptr_t) displaced_header().value();\n","filename":"src\/hotspot\/share\/runtime\/basicLock.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"runtime\/atomic.hpp\"\n@@ -37,2 +38,7 @@\n-  markOop      displaced_header() const               { return _displaced_header; }\n-  void         set_displaced_header(markOop header)   { _displaced_header = header; }\n+  markOop displaced_header() const {\n+    return Atomic::load(&_displaced_header);\n+  }\n+\n+  void set_displaced_header(markOop header) {\n+    Atomic::store(header, &_displaced_header);\n+  }\n","filename":"src\/hotspot\/share\/runtime\/basicLock.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  k->set_prototype_header(markOopDesc::biased_locking_prototype());\n+  k->set_prototype_header(markOop::biased_locking_prototype());\n@@ -153,1 +153,1 @@\n-\/\/ After the call, *biased_locker will be set to obj->mark()->biased_locker() if biased_locker != NULL,\n+\/\/ After the call, *biased_locker will be set to obj->mark().biased_locker() if biased_locker != NULL,\n@@ -157,1 +157,1 @@\n-  if (!mark->has_bias_pattern()) {\n+  if (!mark.has_bias_pattern()) {\n@@ -164,1 +164,1 @@\n-                              p2i((void *)obj), (intptr_t) mark,\n+                              p2i((void *)obj), (intptr_t) mark.value(),\n@@ -171,3 +171,3 @@\n-  uint age = mark->age();\n-  markOop   biased_prototype = markOopDesc::biased_locking_prototype()->set_age(age);\n-  markOop unbiased_prototype = markOopDesc::prototype()->set_age(age);\n+  uint age = mark.age();\n+  markOop   biased_prototype = markOop::biased_locking_prototype().set_age(age);\n+  markOop unbiased_prototype = markOop::prototype().set_age(age);\n@@ -182,1 +182,1 @@\n-                            (intptr_t) mark,\n+                            (intptr_t) mark.value(),\n@@ -184,1 +184,1 @@\n-                            (intptr_t) obj->klass()->prototype_header(),\n+                            (intptr_t) obj->klass()->prototype_header().value(),\n@@ -193,1 +193,1 @@\n-                             (intptr_t) mark,\n+                             (intptr_t) mark.value(),\n@@ -195,1 +195,1 @@\n-                             (intptr_t) obj->klass()->prototype_header(),\n+                             (intptr_t) obj->klass()->prototype_header().value(),\n@@ -200,1 +200,1 @@\n-  JavaThread* biased_thread = mark->biased_locker();\n+  JavaThread* biased_thread = mark.biased_locker();\n@@ -265,1 +265,1 @@\n-      markOop mark = markOopDesc::encode((BasicLock*) NULL);\n+      markOop mark = markOop::encode((BasicLock*) NULL);\n@@ -281,2 +281,2 @@\n-    obj->release_set_mark(markOopDesc::encode(highest_lock));\n-    assert(!obj->mark()->has_bias_pattern(), \"illegal mark state: stack lock used bias bit\");\n+    obj->release_set_mark(markOop::encode(highest_lock));\n+    assert(!obj->mark().has_bias_pattern(), \"illegal mark state: stack lock used bias bit\");\n@@ -323,1 +323,1 @@\n-  if (!mark->has_bias_pattern()) {\n+  if (!mark.has_bias_pattern()) {\n@@ -384,1 +384,1 @@\n-                          (intptr_t) o->mark(),\n+                          (intptr_t) o->mark().value(),\n@@ -408,4 +408,4 @@\n-      if (klass->prototype_header()->has_bias_pattern()) {\n-        int prev_epoch = klass->prototype_header()->bias_epoch();\n-        klass->set_prototype_header(klass->prototype_header()->incr_bias_epoch());\n-        int cur_epoch = klass->prototype_header()->bias_epoch();\n+      if (klass->prototype_header().has_bias_pattern()) {\n+        int prev_epoch = klass->prototype_header().bias_epoch();\n+        klass->set_prototype_header(klass->prototype_header().incr_bias_epoch());\n+        int cur_epoch = klass->prototype_header().bias_epoch();\n@@ -421,1 +421,1 @@\n-            if ((owner->klass() == k_o) && mark->has_bias_pattern()) {\n+            if ((owner->klass() == k_o) && mark.has_bias_pattern()) {\n@@ -423,2 +423,2 @@\n-              assert(mark->bias_epoch() == prev_epoch || mark->bias_epoch() == cur_epoch, \"error in bias epoch adjustment\");\n-              owner->set_mark(mark->set_bias_epoch(cur_epoch));\n+              assert(mark.bias_epoch() == prev_epoch || mark.bias_epoch() == cur_epoch, \"error in bias epoch adjustment\");\n+              owner->set_mark(mark.set_bias_epoch(cur_epoch));\n@@ -432,1 +432,1 @@\n-      revoke_bias(o, attempt_rebias_of_object && klass->prototype_header()->has_bias_pattern(), true, requesting_thread, NULL);\n+      revoke_bias(o, attempt_rebias_of_object && klass->prototype_header().has_bias_pattern(), true, requesting_thread, NULL);\n@@ -443,1 +443,1 @@\n-      klass->set_prototype_header(markOopDesc::prototype());\n+      klass->set_prototype_header(markOop::prototype());\n@@ -453,1 +453,1 @@\n-          if ((owner->klass() == k_o) && mark->has_bias_pattern()) {\n+          if ((owner->klass() == k_o) && mark.has_bias_pattern()) {\n@@ -470,4 +470,4 @@\n-      o->mark()->has_bias_pattern() &&\n-      klass->prototype_header()->has_bias_pattern()) {\n-    markOop new_mark = markOopDesc::encode(requesting_thread, o->mark()->age(),\n-                                           klass->prototype_header()->bias_epoch());\n+      o->mark().has_bias_pattern() &&\n+      klass->prototype_header().has_bias_pattern()) {\n+    markOop new_mark = markOop::encode(requesting_thread, o->mark().age(),\n+                                           klass->prototype_header().bias_epoch());\n@@ -479,2 +479,2 @@\n-  assert(!o->mark()->has_bias_pattern() ||\n-         (attempt_rebias_of_object && (o->mark()->biased_locker() == requesting_thread)),\n+  assert(!o->mark().has_bias_pattern() ||\n+         (attempt_rebias_of_object && (o->mark().biased_locker() == requesting_thread)),\n@@ -526,1 +526,1 @@\n-      if (mark->has_bias_pattern()) {\n+      if (mark.has_bias_pattern()) {\n@@ -532,1 +532,1 @@\n-        if (mark->has_bias_pattern()) {\n+        if (mark.has_bias_pattern()) {\n@@ -632,1 +632,1 @@\n-  if (mark->is_biased_anonymously() && !attempt_rebias) {\n+  if (mark.is_biased_anonymously() && !attempt_rebias) {\n@@ -640,1 +640,1 @@\n-    markOop unbiased_prototype = markOopDesc::prototype()->set_age(mark->age());\n+    markOop unbiased_prototype = markOop::prototype().set_age(mark.age());\n@@ -645,1 +645,1 @@\n-  } else if (mark->has_bias_pattern()) {\n+  } else if (mark.has_bias_pattern()) {\n@@ -648,1 +648,1 @@\n-    if (!prototype_header->has_bias_pattern()) {\n+    if (!prototype_header.has_bias_pattern()) {\n@@ -657,1 +657,1 @@\n-      assert(!obj->mark()->has_bias_pattern(), \"even if we raced, should still be revoked\");\n+      assert(!obj->mark().has_bias_pattern(), \"even if we raced, should still be revoked\");\n@@ -659,1 +659,1 @@\n-    } else if (prototype_header->bias_epoch() != mark->bias_epoch()) {\n+    } else if (prototype_header.bias_epoch() != mark.bias_epoch()) {\n@@ -670,1 +670,1 @@\n-        markOop rebiased_prototype = markOopDesc::encode((JavaThread*) THREAD, mark->age(), prototype_header->bias_epoch());\n+        markOop rebiased_prototype = markOop::encode((JavaThread*) THREAD, mark.age(), prototype_header.bias_epoch());\n@@ -677,1 +677,1 @@\n-        markOop unbiased_prototype = markOopDesc::prototype()->set_age(mark->age());\n+        markOop unbiased_prototype = markOop::prototype().set_age(mark.age());\n@@ -692,2 +692,2 @@\n-    if (mark->biased_locker() == THREAD &&\n-        prototype_header->bias_epoch() == mark->bias_epoch()) {\n+    if (mark.biased_locker() == THREAD &&\n+        prototype_header.bias_epoch() == mark.bias_epoch()) {\n@@ -817,1 +817,1 @@\n-              if (mark->has_bias_pattern()) {\n+              if (mark.has_bias_pattern()) {\n","filename":"src\/hotspot\/share\/runtime\/biasedLocking.cpp","additions":46,"deletions":46,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -1124,1 +1124,1 @@\n-        if (UseBiasedLocking && mark->has_bias_pattern()) {\n+        if (UseBiasedLocking && mark.has_bias_pattern()) {\n@@ -1128,2 +1128,2 @@\n-          assert(mark->is_biased_anonymously() ||\n-                 mark->biased_locker() == thread, \"should be locked to current thread\");\n+          assert(mark.is_biased_anonymously() ||\n+                 mark.biased_locker() == thread, \"should be locked to current thread\");\n@@ -1131,1 +1131,1 @@\n-          markOop unbiased_prototype = markOopDesc::prototype()->set_age(mark->age());\n+          markOop unbiased_prototype = markOop::prototype().set_age(mark.age());\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2589,1 +2589,1 @@\n-          range(1, markOopDesc::max_age)                                    \\\n+          range(1, markOop::max_age)                                        \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-    assert(((oop)(object()))->mark() == markOopDesc::encode(this), \"invariant\");\n+    assert(((oop)(object()))->mark() == markOop::encode(this), \"invariant\");\n@@ -390,1 +390,1 @@\n-  assert(((oop)(object()))->mark() == markOopDesc::encode(this), \"invariant\");\n+  assert(((oop)(object()))->mark() == markOop::encode(this), \"invariant\");\n@@ -624,1 +624,1 @@\n-  \/\/   guarantee (((oop)(object()))->mark() == markOopDesc::encode(this), \"invariant\") ;\n+  \/\/   guarantee (((oop)(object()))->mark() == markOop::encode(this), \"invariant\") ;\n@@ -697,1 +697,1 @@\n-  assert(((oop)(object()))->mark() == markOopDesc::encode(this), \"invariant\");\n+  assert(((oop)(object()))->mark() == markOop::encode(this), \"invariant\");\n@@ -772,1 +772,1 @@\n-  assert(((oop)(object()))->mark() == markOopDesc::encode(this), \"invariant\");\n+  assert(((oop)(object()))->mark() == markOop::encode(this), \"invariant\");\n@@ -1623,1 +1623,1 @@\n-  assert(((oop)(object()))->mark() == markOopDesc::encode(this), \"invariant\");\n+  assert(((oop)(object()))->mark() == markOop::encode(this), \"invariant\");\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"oops\/markOop.hpp\"\n@@ -221,1 +222,1 @@\n-  \/\/ ObjectMonitor references can be ORed with markOopDesc::monitor_value\n+  \/\/ ObjectMonitor references can be ORed with markOop::monitor_value\n@@ -233,1 +234,1 @@\n-    ((ObjectMonitor::f ## _offset_in_bytes()) - markOopDesc::monitor_value)\n+    ((ObjectMonitor::f ## _offset_in_bytes()) - markOop::monitor_value)\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+#include \"runtime\/atomic.hpp\"\n+\n@@ -36,1 +38,1 @@\n-  return _header;\n+  return Atomic::load(&_header);\n@@ -45,1 +47,1 @@\n-  _header = hdr;\n+  Atomic::store(hdr, &_header);\n@@ -61,1 +63,1 @@\n-  assert(_header, \"Fatal logic error in ObjectMonitor header!\");\n+  assert(Atomic::load(&_header).value() != 0, \"Fatal logic error in ObjectMonitor header!\");\n@@ -68,1 +70,1 @@\n-  _header = NULL;\n+  Atomic::store(markOop::zero(), &_header);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.inline.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3083,1 +3083,1 @@\n-      if (lock->displaced_header()->is_unlocked())\n+      if (lock->displaced_header().is_unlocked())\n@@ -3086,1 +3086,1 @@\n-      buf[i++] = (intptr_t)lock->displaced_header();\n+      buf[i++] = (intptr_t)lock->displaced_header().value();\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-  if (mark->has_locker() && self->is_lock_owned((address)mark->locker())) {\n+  if (mark.has_locker() && self->is_lock_owned((address)mark.locker())) {\n@@ -169,2 +169,2 @@\n-  if (mark->has_monitor()) {\n-    ObjectMonitor * const mon = mark->monitor();\n+  if (mark.has_monitor()) {\n+    ObjectMonitor * const mon = mark.monitor();\n@@ -213,2 +213,2 @@\n-  if (mark->has_monitor()) {\n-    ObjectMonitor * const m = mark->monitor();\n+  if (mark.has_monitor()) {\n+    ObjectMonitor * const m = mark.monitor();\n@@ -238,1 +238,1 @@\n-    lock->set_displaced_header(markOopDesc::unused_mark());\n+    lock->set_displaced_header(markOop::unused_mark());\n@@ -276,1 +276,1 @@\n-    assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -285,2 +285,2 @@\n-  assert(mark == markOopDesc::INFLATING() ||\n-         !mark->has_bias_pattern(), \"should not see bias pattern here\");\n+  assert(mark == markOop::INFLATING() ||\n+         !mark.has_bias_pattern(), \"should not see bias pattern here\");\n@@ -289,1 +289,1 @@\n-  if (dhw == NULL) {\n+  if (dhw.value() == 0) {\n@@ -293,1 +293,1 @@\n-    if (mark != markOopDesc::INFLATING()) {\n+    if (mark != markOop::INFLATING()) {\n@@ -297,4 +297,4 @@\n-      assert(!mark->is_neutral(), \"invariant\");\n-      assert(!mark->has_locker() ||\n-             THREAD->is_lock_owned((address)mark->locker()), \"invariant\");\n-      if (mark->has_monitor()) {\n+      assert(!mark.is_neutral(), \"invariant\");\n+      assert(!mark.has_locker() ||\n+             THREAD->is_lock_owned((address)mark.locker()), \"invariant\");\n+      if (mark.has_monitor()) {\n@@ -309,1 +309,1 @@\n-        ObjectMonitor * m = mark->monitor();\n+        ObjectMonitor * m = mark.monitor();\n@@ -318,1 +318,1 @@\n-  if (mark == (markOop) lock) {\n+  if (mark == markOop::from_pointer(lock)) {\n@@ -321,1 +321,1 @@\n-    assert(dhw->is_neutral(), \"invariant\");\n+    assert(dhw.is_neutral(), \"invariant\");\n@@ -341,1 +341,1 @@\n-  assert(!mark->has_bias_pattern(), \"should not see bias pattern here\");\n+  assert(!mark.has_bias_pattern(), \"should not see bias pattern here\");\n@@ -343,1 +343,1 @@\n-  if (mark->is_neutral()) {\n+  if (mark.is_neutral()) {\n@@ -347,1 +347,1 @@\n-    if (mark == obj()->cas_set_mark((markOop) lock, mark)) {\n+    if (mark == obj()->cas_set_mark(markOop::from_pointer(lock), mark)) {\n@@ -352,5 +352,5 @@\n-  } else if (mark->has_locker() &&\n-             THREAD->is_lock_owned((address)mark->locker())) {\n-    assert(lock != mark->locker(), \"must not re-lock the same lock\");\n-    assert(lock != (BasicLock*)obj->mark(), \"don't relock with same BasicLock\");\n-    lock->set_displaced_header(NULL);\n+  } else if (mark.has_locker() &&\n+             THREAD->is_lock_owned((address)mark.locker())) {\n+    assert(lock != mark.locker(), \"must not re-lock the same lock\");\n+    assert(lock != (BasicLock*)obj->mark().value(), \"don't relock with same BasicLock\");\n+    lock->set_displaced_header(markOop::from_pointer(NULL));\n@@ -364,1 +364,1 @@\n-  lock->set_displaced_header(markOopDesc::unused_mark());\n+  lock->set_displaced_header(markOop::unused_mark());\n@@ -394,1 +394,1 @@\n-    assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -409,1 +409,1 @@\n-    assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -426,1 +426,1 @@\n-    assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -441,1 +441,1 @@\n-  assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+  assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -482,1 +482,1 @@\n-    assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -505,1 +505,1 @@\n-    assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -519,1 +519,1 @@\n-    assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -523,1 +523,1 @@\n-  if (mark->has_locker() && THREAD->is_lock_owned((address)mark->locker())) {\n+  if (mark.has_locker() && THREAD->is_lock_owned((address)mark.locker())) {\n@@ -535,1 +535,1 @@\n-    assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -539,1 +539,1 @@\n-  if (mark->has_locker() && THREAD->is_lock_owned((address)mark->locker())) {\n+  if (mark.has_locker() && THREAD->is_lock_owned((address)mark.locker())) {\n@@ -586,1 +586,1 @@\n-  if (!mark->is_being_inflated()) {\n+  if (!mark.is_being_inflated()) {\n@@ -593,1 +593,1 @@\n-    if (!mark->is_being_inflated()) {\n+    if (!mark.is_being_inflated()) {\n@@ -633,1 +633,1 @@\n-        while (obj->mark() == markOopDesc::INFLATING()) {\n+        while (obj->mark() == markOop::INFLATING()) {\n@@ -703,1 +703,1 @@\n-  value &= markOopDesc::hash_mask;\n+  value &= markOop::hash_mask;\n@@ -705,1 +705,1 @@\n-  assert(value != markOopDesc::no_hash, \"invariant\");\n+  assert(value != markOop::no_hash, \"invariant\");\n@@ -719,1 +719,1 @@\n-    if (obj->mark()->has_bias_pattern()) {\n+    if (obj->mark().has_bias_pattern()) {\n@@ -728,1 +728,1 @@\n-      assert(!obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+      assert(!obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -747,1 +747,1 @@\n-  assert(!mark->has_bias_pattern(), \"invariant\");\n+  assert(!mark.has_bias_pattern(), \"invariant\");\n@@ -749,2 +749,2 @@\n-  if (mark->is_neutral()) {\n-    hash = mark->hash();              \/\/ this is a normal header\n+  if (mark.is_neutral()) {\n+    hash = mark.hash();              \/\/ this is a normal header\n@@ -755,1 +755,1 @@\n-    temp = mark->copy_set_hash(hash); \/\/ merge the hash code into header\n+    temp = mark.copy_set_hash(hash); \/\/ merge the hash code into header\n@@ -764,2 +764,2 @@\n-  } else if (mark->has_monitor()) {\n-    monitor = mark->monitor();\n+  } else if (mark.has_monitor()) {\n+    monitor = mark.monitor();\n@@ -767,2 +767,2 @@\n-    assert(temp->is_neutral(), \"invariant\");\n-    hash = temp->hash();\n+    assert(temp.is_neutral(), \"invariant\");\n+    hash = temp.hash();\n@@ -773,4 +773,4 @@\n-  } else if (Self->is_lock_owned((address)mark->locker())) {\n-    temp = mark->displaced_mark_helper(); \/\/ this is a lightweight monitor owned\n-    assert(temp->is_neutral(), \"invariant\");\n-    hash = temp->hash();              \/\/ by current thread, check if the displaced\n+  } else if (Self->is_lock_owned((address)mark.locker())) {\n+    temp = mark.displaced_mark_helper(); \/\/ this is a lightweight monitor owned\n+    assert(temp.is_neutral(), \"invariant\");\n+    hash = temp.hash();              \/\/ by current thread, check if the displaced\n@@ -795,2 +795,2 @@\n-  assert(mark->is_neutral(), \"invariant\");\n-  hash = mark->hash();\n+  assert(mark.is_neutral(), \"invariant\");\n+  hash = mark.hash();\n@@ -799,1 +799,1 @@\n-    temp = mark->copy_set_hash(hash); \/\/ merge hash code into header\n+    temp = mark.copy_set_hash(hash); \/\/ merge hash code into header\n@@ -806,2 +806,2 @@\n-      hash = test->hash();\n-      assert(test->is_neutral(), \"invariant\");\n+      hash = test.hash();\n+      assert(test.is_neutral(), \"invariant\");\n@@ -826,1 +826,1 @@\n-    assert(!h_obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!h_obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -835,2 +835,2 @@\n-  if (mark->has_locker()) {\n-    return thread->is_lock_owned((address)mark->locker());\n+  if (mark.has_locker()) {\n+    return thread->is_lock_owned((address)mark.locker());\n@@ -839,2 +839,2 @@\n-  if (mark->has_monitor()) {\n-    ObjectMonitor* monitor = mark->monitor();\n+  if (mark.has_monitor()) {\n+    ObjectMonitor* monitor = mark.monitor();\n@@ -844,1 +844,1 @@\n-  assert(mark->is_neutral(), \"sanity check\");\n+  assert(mark.is_neutral(), \"sanity check\");\n@@ -862,1 +862,1 @@\n-  if (UseBiasedLocking && h_obj()->mark()->has_bias_pattern()) {\n+  if (UseBiasedLocking && h_obj()->mark().has_bias_pattern()) {\n@@ -865,1 +865,1 @@\n-    assert(!h_obj->mark()->has_bias_pattern(),\n+    assert(!h_obj->mark().has_bias_pattern(),\n@@ -874,2 +874,2 @@\n-  if (mark->has_locker()) {\n-    return self->is_lock_owned((address)mark->locker()) ?\n+  if (mark.has_locker()) {\n+    return self->is_lock_owned((address)mark.locker()) ?\n@@ -882,2 +882,2 @@\n-  if (mark->has_monitor()) {\n-    void * owner = mark->monitor()->_owner;\n+  if (mark.has_monitor()) {\n+    void * owner = mark.monitor()->_owner;\n@@ -890,1 +890,1 @@\n-  assert(mark->is_neutral(), \"sanity check\");\n+  assert(mark.is_neutral(), \"sanity check\");\n@@ -902,1 +902,1 @@\n-    assert(!h_obj->mark()->has_bias_pattern(), \"biases should be revoked by now\");\n+    assert(!h_obj->mark().has_bias_pattern(), \"biases should be revoked by now\");\n@@ -911,2 +911,2 @@\n-  if (mark->has_locker()) {\n-    owner = (address) mark->locker();\n+  if (mark.has_locker()) {\n+    owner = (address) mark.locker();\n@@ -916,2 +916,2 @@\n-  if (mark->has_monitor()) {\n-    ObjectMonitor* monitor = mark->monitor();\n+  if (mark.has_monitor()) {\n+    ObjectMonitor* monitor = mark.monitor();\n@@ -930,1 +930,1 @@\n-  \/\/ assert(mark->is_neutral(), \"sanity check\");\n+  \/\/ assert(mark.is_neutral(), \"sanity check\");\n@@ -1377,4 +1377,4 @@\n-  if (mark->has_monitor()) {\n-    assert(ObjectSynchronizer::verify_objmon_isinpool(mark->monitor()), \"monitor is invalid\");\n-    assert(mark->monitor()->header()->is_neutral(), \"monitor must record a good object header\");\n-    return mark->monitor();\n+  if (mark.has_monitor()) {\n+    assert(ObjectSynchronizer::verify_objmon_isinpool(mark.monitor()), \"monitor is invalid\");\n+    assert(mark.monitor()->header()->is_neutral(), \"monitor must record a good object header\");\n+    return mark.monitor();\n@@ -1400,1 +1400,1 @@\n-    assert(!mark->has_bias_pattern(), \"invariant\");\n+    assert(!mark.has_bias_pattern(), \"invariant\");\n@@ -1410,2 +1410,2 @@\n-    if (mark->has_monitor()) {\n-      ObjectMonitor * inf = mark->monitor();\n+    if (mark.has_monitor()) {\n+      ObjectMonitor * inf = mark.monitor();\n@@ -1424,1 +1424,1 @@\n-    if (mark == markOopDesc::INFLATING()) {\n+    if (mark == markOop::INFLATING()) {\n@@ -1449,1 +1449,1 @@\n-    if (mark->has_locker()) {\n+    if (mark.has_locker()) {\n@@ -1459,1 +1459,1 @@\n-      markOop cmp = object->cas_set_mark(markOopDesc::INFLATING(), mark);\n+      markOop cmp = object->cas_set_mark(markOop::INFLATING(), mark);\n@@ -1487,1 +1487,1 @@\n-      \/\/ Critically, while object->mark is 0 mark->displaced_mark_helper() is stable.\n+      \/\/ Critically, while object->mark is 0 mark.displaced_mark_helper() is stable.\n@@ -1495,1 +1495,1 @@\n-      markOop dmw = mark->displaced_mark_helper();\n+      markOop dmw = mark.displaced_mark_helper();\n@@ -1501,1 +1501,1 @@\n-      \/\/ Optimization: if the mark->locker stack address is associated\n+      \/\/ Optimization: if the mark.locker stack address is associated\n@@ -1506,1 +1506,1 @@\n-      m->set_owner(mark->locker());\n+      m->set_owner(mark.locker());\n@@ -1512,2 +1512,2 @@\n-      guarantee(object->mark() == markOopDesc::INFLATING(), \"invariant\");\n-      object->release_set_mark(markOopDesc::encode(m));\n+      guarantee(object->mark() == markOop::INFLATING(), \"invariant\");\n+      object->release_set_mark(markOop::encode(m));\n@@ -1523,1 +1523,1 @@\n-                                      p2i(object), p2i(object->mark()),\n+                                      p2i(object), object->mark().value(),\n@@ -1543,1 +1543,1 @@\n-    assert(mark->is_neutral(), \"invariant\");\n+    assert(mark.is_neutral(), \"invariant\");\n@@ -1554,1 +1554,1 @@\n-    if (object->cas_set_mark(markOopDesc::encode(m), mark) != mark) {\n+    if (object->cas_set_mark(markOop::encode(m), mark) != mark) {\n@@ -1574,1 +1574,1 @@\n-                                    p2i(object), p2i(object->mark()),\n+                                    p2i(object), object->mark().value(),\n@@ -1625,3 +1625,3 @@\n-  guarantee(obj->mark() == markOopDesc::encode(mid), \"invariant\");\n-  guarantee(mid == obj->mark()->monitor(), \"invariant\");\n-  guarantee(mid->header()->is_neutral(), \"invariant\");\n+  guarantee(obj->mark() == markOop::encode(mid), \"invariant\");\n+  guarantee(mid == obj->mark().monitor(), \"invariant\");\n+  guarantee(mid->header().is_neutral(), \"invariant\");\n@@ -1642,1 +1642,1 @@\n-                                    p2i(obj), p2i(obj->mark()),\n+                                    p2i(obj), obj->mark().value(),\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":104,"deletions":104,"binary":false,"changes":208,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-    const int alignment = markOopDesc::biased_lock_alignment;\n+    const int alignment = markOop::biased_lock_alignment;\n@@ -307,1 +307,1 @@\n-    assert((((uintptr_t) this) & (markOopDesc::biased_lock_alignment - 1)) == 0, \"forced alignment of thread object failed\");\n+    assert((((uintptr_t) this) & (markOop::biased_lock_alignment - 1)) == 0, \"forced alignment of thread object failed\");\n@@ -309,1 +309,1 @@\n-           this == align_up(_real_malloc_address, (int)markOopDesc::biased_lock_alignment),\n+           this == align_up(_real_malloc_address, (int)markOop::biased_lock_alignment),\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-        markOop mark = NULL;\n+        markOop mark = markOop::zero();\n@@ -234,1 +234,1 @@\n-          if (mark->has_monitor() &&\n+          if (mark.has_monitor() &&\n@@ -236,1 +236,1 @@\n-                mark->monitor() == thread()->current_pending_monitor() ||\n+                mark.monitor() == thread()->current_pending_monitor() ||\n@@ -238,1 +238,1 @@\n-                !mark->monitor()->is_entered(thread())\n+                !mark.monitor()->is_entered(thread())\n@@ -244,1 +244,1 @@\n-            mark = NULL;\n+            mark = markOop::zero();\n@@ -253,1 +253,1 @@\n-          if (mark->has_monitor() &&\n+          if (mark.has_monitor() &&\n@@ -255,1 +255,1 @@\n-                mark->monitor() == thread()->current_pending_monitor() ||\n+                mark.monitor() == thread()->current_pending_monitor() ||\n@@ -257,1 +257,1 @@\n-                !mark->monitor()->is_entered(thread())\n+                !mark.monitor()->is_entered(thread())\n@@ -263,1 +263,1 @@\n-            mark = NULL;\n+            mark = markOop::zero();\n@@ -267,1 +267,1 @@\n-        if (ObjectMonitor::Knob_Verbose && mark != NULL) {\n+        if (ObjectMonitor::Knob_Verbose && mark.to_pointer() != NULL) {\n@@ -269,1 +269,1 @@\n-          mark->print_on(st);\n+          mark.print_on(st);\n","filename":"src\/hotspot\/share\/runtime\/vframe.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1288,1 +1288,0 @@\n-    declare_type(markOopDesc, oopDesc)                                    \\\n@@ -1328,1 +1327,0 @@\n-  declare_oop_type(markOop)                                               \\\n@@ -1984,0 +1982,1 @@\n+   declare_integer_type(markOop)                                          \\\n@@ -2645,34 +2644,34 @@\n-  declare_constant(markOopDesc::age_bits)                                 \\\n-  declare_constant(markOopDesc::lock_bits)                                \\\n-  declare_constant(markOopDesc::biased_lock_bits)                         \\\n-  declare_constant(markOopDesc::max_hash_bits)                            \\\n-  declare_constant(markOopDesc::hash_bits)                                \\\n-                                                                          \\\n-  declare_constant(markOopDesc::lock_shift)                               \\\n-  declare_constant(markOopDesc::biased_lock_shift)                        \\\n-  declare_constant(markOopDesc::age_shift)                                \\\n-  declare_constant(markOopDesc::hash_shift)                               \\\n-                                                                          \\\n-  declare_constant(markOopDesc::lock_mask)                                \\\n-  declare_constant(markOopDesc::lock_mask_in_place)                       \\\n-  declare_constant(markOopDesc::biased_lock_mask)                         \\\n-  declare_constant(markOopDesc::biased_lock_mask_in_place)                \\\n-  declare_constant(markOopDesc::biased_lock_bit_in_place)                 \\\n-  declare_constant(markOopDesc::age_mask)                                 \\\n-  declare_constant(markOopDesc::age_mask_in_place)                        \\\n-  declare_constant(markOopDesc::epoch_mask)                               \\\n-  declare_constant(markOopDesc::epoch_mask_in_place)                      \\\n-  declare_constant(markOopDesc::hash_mask)                                \\\n-  declare_constant(markOopDesc::hash_mask_in_place)                       \\\n-  declare_constant(markOopDesc::biased_lock_alignment)                    \\\n-                                                                          \\\n-  declare_constant(markOopDesc::locked_value)                             \\\n-  declare_constant(markOopDesc::unlocked_value)                           \\\n-  declare_constant(markOopDesc::monitor_value)                            \\\n-  declare_constant(markOopDesc::marked_value)                             \\\n-  declare_constant(markOopDesc::biased_lock_pattern)                      \\\n-                                                                          \\\n-  declare_constant(markOopDesc::no_hash)                                  \\\n-  declare_constant(markOopDesc::no_hash_in_place)                         \\\n-  declare_constant(markOopDesc::no_lock_in_place)                         \\\n-  declare_constant(markOopDesc::max_age)                                  \\\n+  declare_constant(markOop::age_bits)                                 \\\n+  declare_constant(markOop::lock_bits)                                \\\n+  declare_constant(markOop::biased_lock_bits)                         \\\n+  declare_constant(markOop::max_hash_bits)                            \\\n+  declare_constant(markOop::hash_bits)                                \\\n+                                                                          \\\n+  declare_constant(markOop::lock_shift)                               \\\n+  declare_constant(markOop::biased_lock_shift)                        \\\n+  declare_constant(markOop::age_shift)                                \\\n+  declare_constant(markOop::hash_shift)                               \\\n+                                                                          \\\n+  declare_constant(markOop::lock_mask)                                \\\n+  declare_constant(markOop::lock_mask_in_place)                       \\\n+  declare_constant(markOop::biased_lock_mask)                         \\\n+  declare_constant(markOop::biased_lock_mask_in_place)                \\\n+  declare_constant(markOop::biased_lock_bit_in_place)                 \\\n+  declare_constant(markOop::age_mask)                                 \\\n+  declare_constant(markOop::age_mask_in_place)                        \\\n+  declare_constant(markOop::epoch_mask)                               \\\n+  declare_constant(markOop::epoch_mask_in_place)                      \\\n+  declare_constant(markOop::hash_mask)                                \\\n+  declare_constant(markOop::hash_mask_in_place)                       \\\n+  declare_constant(markOop::biased_lock_alignment)                    \\\n+                                                                          \\\n+  declare_constant(markOop::locked_value)                             \\\n+  declare_constant(markOop::unlocked_value)                           \\\n+  declare_constant(markOop::monitor_value)                            \\\n+  declare_constant(markOop::marked_value)                             \\\n+  declare_constant(markOop::biased_lock_pattern)                      \\\n+                                                                          \\\n+  declare_constant(markOop::no_hash)                                  \\\n+  declare_constant(markOop::no_hash_in_place)                         \\\n+  declare_constant(markOop::no_lock_in_place)                         \\\n+  declare_constant(markOop::max_age)                                  \\\n@@ -2681,3 +2680,3 @@\n-  declare_constant(markOopDesc::cms_shift)                                \\\n-  declare_constant(markOopDesc::cms_mask)                                 \\\n-  declare_constant(markOopDesc::size_shift)                               \\\n+  declare_constant(markOop::cms_shift)                                \\\n+  declare_constant(markOop::cms_mask)                                 \\\n+  declare_constant(markOop::size_shift)                               \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":38,"deletions":39,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -54,28 +54,28 @@\n-    ageBits             = db.lookupLongConstant(\"markOopDesc::age_bits\").longValue();\n-    lockBits            = db.lookupLongConstant(\"markOopDesc::lock_bits\").longValue();\n-    biasedLockBits      = db.lookupLongConstant(\"markOopDesc::biased_lock_bits\").longValue();\n-    maxHashBits         = db.lookupLongConstant(\"markOopDesc::max_hash_bits\").longValue();\n-    hashBits            = db.lookupLongConstant(\"markOopDesc::hash_bits\").longValue();\n-    lockShift           = db.lookupLongConstant(\"markOopDesc::lock_shift\").longValue();\n-    biasedLockShift     = db.lookupLongConstant(\"markOopDesc::biased_lock_shift\").longValue();\n-    ageShift            = db.lookupLongConstant(\"markOopDesc::age_shift\").longValue();\n-    hashShift           = db.lookupLongConstant(\"markOopDesc::hash_shift\").longValue();\n-    lockMask            = db.lookupLongConstant(\"markOopDesc::lock_mask\").longValue();\n-    lockMaskInPlace     = db.lookupLongConstant(\"markOopDesc::lock_mask_in_place\").longValue();\n-    biasedLockMask      = db.lookupLongConstant(\"markOopDesc::biased_lock_mask\").longValue();\n-    biasedLockMaskInPlace  = db.lookupLongConstant(\"markOopDesc::biased_lock_mask_in_place\").longValue();\n-    biasedLockBitInPlace  = db.lookupLongConstant(\"markOopDesc::biased_lock_bit_in_place\").longValue();\n-    ageMask             = db.lookupLongConstant(\"markOopDesc::age_mask\").longValue();\n-    ageMaskInPlace      = db.lookupLongConstant(\"markOopDesc::age_mask_in_place\").longValue();\n-    hashMask            = db.lookupLongConstant(\"markOopDesc::hash_mask\").longValue();\n-    hashMaskInPlace     = db.lookupLongConstant(\"markOopDesc::hash_mask_in_place\").longValue();\n-    biasedLockAlignment  = db.lookupLongConstant(\"markOopDesc::biased_lock_alignment\").longValue();\n-    lockedValue         = db.lookupLongConstant(\"markOopDesc::locked_value\").longValue();\n-    unlockedValue       = db.lookupLongConstant(\"markOopDesc::unlocked_value\").longValue();\n-    monitorValue        = db.lookupLongConstant(\"markOopDesc::monitor_value\").longValue();\n-    markedValue         = db.lookupLongConstant(\"markOopDesc::marked_value\").longValue();\n-    biasedLockPattern = db.lookupLongConstant(\"markOopDesc::biased_lock_pattern\").longValue();\n-    noHash              = db.lookupLongConstant(\"markOopDesc::no_hash\").longValue();\n-    noHashInPlace       = db.lookupLongConstant(\"markOopDesc::no_hash_in_place\").longValue();\n-    noLockInPlace       = db.lookupLongConstant(\"markOopDesc::no_lock_in_place\").longValue();\n-    maxAge              = db.lookupLongConstant(\"markOopDesc::max_age\").longValue();\n+    ageBits             = db.lookupLongConstant(\"markOop::age_bits\").longValue();\n+    lockBits            = db.lookupLongConstant(\"markOop::lock_bits\").longValue();\n+    biasedLockBits      = db.lookupLongConstant(\"markOop::biased_lock_bits\").longValue();\n+    maxHashBits         = db.lookupLongConstant(\"markOop::max_hash_bits\").longValue();\n+    hashBits            = db.lookupLongConstant(\"markOop::hash_bits\").longValue();\n+    lockShift           = db.lookupLongConstant(\"markOop::lock_shift\").longValue();\n+    biasedLockShift     = db.lookupLongConstant(\"markOop::biased_lock_shift\").longValue();\n+    ageShift            = db.lookupLongConstant(\"markOop::age_shift\").longValue();\n+    hashShift           = db.lookupLongConstant(\"markOop::hash_shift\").longValue();\n+    lockMask            = db.lookupLongConstant(\"markOop::lock_mask\").longValue();\n+    lockMaskInPlace     = db.lookupLongConstant(\"markOop::lock_mask_in_place\").longValue();\n+    biasedLockMask      = db.lookupLongConstant(\"markOop::biased_lock_mask\").longValue();\n+    biasedLockMaskInPlace  = db.lookupLongConstant(\"markOop::biased_lock_mask_in_place\").longValue();\n+    biasedLockBitInPlace  = db.lookupLongConstant(\"markOop::biased_lock_bit_in_place\").longValue();\n+    ageMask             = db.lookupLongConstant(\"markOop::age_mask\").longValue();\n+    ageMaskInPlace      = db.lookupLongConstant(\"markOop::age_mask_in_place\").longValue();\n+    hashMask            = db.lookupLongConstant(\"markOop::hash_mask\").longValue();\n+    hashMaskInPlace     = db.lookupLongConstant(\"markOop::hash_mask_in_place\").longValue();\n+    biasedLockAlignment  = db.lookupLongConstant(\"markOop::biased_lock_alignment\").longValue();\n+    lockedValue         = db.lookupLongConstant(\"markOop::locked_value\").longValue();\n+    unlockedValue       = db.lookupLongConstant(\"markOop::unlocked_value\").longValue();\n+    monitorValue        = db.lookupLongConstant(\"markOop::monitor_value\").longValue();\n+    markedValue         = db.lookupLongConstant(\"markOop::marked_value\").longValue();\n+    biasedLockPattern = db.lookupLongConstant(\"markOop::biased_lock_pattern\").longValue();\n+    noHash              = db.lookupLongConstant(\"markOop::no_hash\").longValue();\n+    noHashInPlace       = db.lookupLongConstant(\"markOop::no_hash_in_place\").longValue();\n+    noLockInPlace       = db.lookupLongConstant(\"markOop::no_lock_in_place\").longValue();\n+    maxAge              = db.lookupLongConstant(\"markOop::max_age\").longValue();\n@@ -84,3 +84,3 @@\n-    cmsShift            = db.lookupLongConstant(\"markOopDesc::cms_shift\").longValue();\n-    cmsMask             = db.lookupLongConstant(\"markOopDesc::cms_mask\").longValue();\n-    sizeShift           = db.lookupLongConstant(\"markOopDesc::size_shift\").longValue();\n+    cmsShift            = db.lookupLongConstant(\"markOop::cms_shift\").longValue();\n+    cmsMask             = db.lookupLongConstant(\"markOop::cms_mask\").longValue();\n+    sizeShift           = db.lookupLongConstant(\"markOop::size_shift\").longValue();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/Mark.java","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -137,2 +137,2 @@\n-    private final int markWordNoHashInPlace = getConstant(\"markOopDesc::no_hash_in_place\", Integer.class);\n-    private final int markWordNoLockInPlace = getConstant(\"markOopDesc::no_lock_in_place\", Integer.class);\n+    private final int markWordNoHashInPlace = getConstant(\"markOop::no_hash_in_place\", Integer.class);\n+    private final int markWordNoLockInPlace = getConstant(\"markOop::no_lock_in_place\", Integer.class);\n@@ -141,1 +141,1 @@\n-     * See {@code markOopDesc::prototype()}.\n+     * See {@code markOop::prototype()}.\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfig.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -402,1 +402,1 @@\n-    public final long markOopDescHashShift = getConstant(\"markOopDesc::hash_shift\", Long.class);\n+    public final long markOopHashShift = getConstant(\"markOop::hash_shift\", Long.class);\n@@ -404,5 +404,5 @@\n-    public final int biasedLockMaskInPlace = getConstant(\"markOopDesc::biased_lock_mask_in_place\", Integer.class);\n-    public final int ageMaskInPlace = getConstant(\"markOopDesc::age_mask_in_place\", Integer.class);\n-    public final int epochMaskInPlace = getConstant(\"markOopDesc::epoch_mask_in_place\", Integer.class);\n-    public final long markOopDescHashMask = getConstant(\"markOopDesc::hash_mask\", Long.class);\n-    public final long markOopDescHashMaskInPlace = getConstant(\"markOopDesc::hash_mask_in_place\", Long.class);\n+    public final int biasedLockMaskInPlace = getConstant(\"markOop::biased_lock_mask_in_place\", Integer.class);\n+    public final int ageMaskInPlace = getConstant(\"markOop::age_mask_in_place\", Integer.class);\n+    public final int epochMaskInPlace = getConstant(\"markOop::epoch_mask_in_place\", Integer.class);\n+    public final long markOopHashMask = getConstant(\"markOop::hash_mask\", Long.class);\n+    public final long markOopHashMaskInPlace = getConstant(\"markOop::hash_mask_in_place\", Long.class);\n@@ -410,3 +410,3 @@\n-    public final int unlockedMask = getConstant(\"markOopDesc::unlocked_value\", Integer.class);\n-    public final int monitorMask = getConstant(\"markOopDesc::monitor_value\", Integer.class, -1);\n-    public final int biasedLockPattern = getConstant(\"markOopDesc::biased_lock_pattern\", Integer.class);\n+    public final int unlockedMask = getConstant(\"markOop::unlocked_value\", Integer.class);\n+    public final int monitorMask = getConstant(\"markOop::monitor_value\", Integer.class, -1);\n+    public final int biasedLockPattern = getConstant(\"markOop::biased_lock_pattern\", Integer.class);\n@@ -420,2 +420,2 @@\n-    public final int markWordNoHashInPlace = getConstant(\"markOopDesc::no_hash_in_place\", Integer.class);\n-    public final int markWordNoLockInPlace = getConstant(\"markOopDesc::no_lock_in_place\", Integer.class);\n+    public final int markWordNoHashInPlace = getConstant(\"markOop::no_hash_in_place\", Integer.class);\n+    public final int markWordNoLockInPlace = getConstant(\"markOop::no_lock_in_place\", Integer.class);\n@@ -424,1 +424,1 @@\n-     * See {@code markOopDesc::prototype()}.\n+     * See {@code markOop::prototype()}.\n@@ -431,1 +431,1 @@\n-     * See {@code markOopDesc::copy_set_hash()}.\n+     * See {@code markOop::copy_set_hash()}.\n@@ -434,2 +434,2 @@\n-        long tmp = arrayPrototypeMarkWord() & (~markOopDescHashMaskInPlace);\n-        tmp |= ((0x2 & markOopDescHashMask) << markOopDescHashShift);\n+        long tmp = arrayPrototypeMarkWord() & (~markOopHashMaskInPlace);\n+        tmp |= ((0x2 & markOopHashMask) << markOopHashShift);\n@@ -442,1 +442,1 @@\n-    public final int identityHashCodeShift = getConstant(\"markOopDesc::hash_shift\", Integer.class);\n+    public final int identityHashCodeShift = getConstant(\"markOop::hash_shift\", Integer.class);\n@@ -447,1 +447,1 @@\n-    public final int uninitializedIdentityHashCodeValue = getConstant(\"markOopDesc::no_hash\", Integer.class);\n+    public final int uninitializedIdentityHashCodeValue = getConstant(\"markOop::no_hash\", Integer.class);\n","filename":"src\/jdk.internal.vm.compiler\/share\/classes\/org.graalvm.compiler.hotspot\/src\/org\/graalvm\/compiler\/hotspot\/GraalHotSpotVMConfig.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    markOop m = markOopDesc::encode_pointer_as_mark(obj);\n+    markOop m = markOop::encode_pointer_as_mark(obj);\n@@ -52,1 +52,1 @@\n-  static markOop originalMark() { return markOop(markOopDesc::lock_mask_in_place); }\n+  static markOop originalMark() { return markOop(markOop::lock_mask_in_place); }\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_preservedMarks.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-                    \"longConstant markOopDesc::locked_value\");\n+                    \"longConstant markOop::locked_value\");\n@@ -68,2 +68,2 @@\n-            expStrMap.put(\"longConstant markOopDesc::locked_value\", List.of(\n-                    \"longConstant markOopDesc::locked_value\"));\n+            expStrMap.put(\"longConstant markOop::locked_value\", List.of(\n+                    \"longConstant markOop::locked_value\"));\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbAttach.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n-                    \"longConstant markOopDesc::locked_value\",\n-                    \"longConstant markOopDesc::lock_bits\",\n+                    \"longConstant markOop::locked_value\",\n+                    \"longConstant markOop::lock_bits\",\n@@ -61,2 +61,2 @@\n-                    \"longConstant markOopDesc::locked_value\",\n-                    \"longConstant markOopDesc::lock_bits\",\n+                    \"longConstant markOop::locked_value\",\n+                    \"longConstant markOop::lock_bits\",\n@@ -64,5 +64,5 @@\n-                    \"markOopDesc::epoch_mask_in_place\"));\n-            expStrMap.put(\"longConstant markOopDesc::locked_value\", List.of(\n-                    \"longConstant markOopDesc::locked_value\"));\n-            expStrMap.put(\"longConstant markOopDesc::lock_bits\", List.of(\n-                    \"longConstant markOopDesc::lock_bits\"));\n+                    \"markOop::epoch_mask_in_place\"));\n+            expStrMap.put(\"longConstant markOop::locked_value\", List.of(\n+                    \"longConstant markOop::locked_value\"));\n+            expStrMap.put(\"longConstant markOop::lock_bits\", List.of(\n+                    \"longConstant markOop::lock_bits\"));\n@@ -96,3 +96,3 @@\n-        \/\/ longConstant markOopDesc::biased_lock_bits 1\n-        \/\/ longConstant markOopDesc::age_shift 3\n-        \/\/ longConstant markOopDesc::hash_mask_in_place 549755813632\n+        \/\/ longConstant markOop::biased_lock_bits 1\n+        \/\/ longConstant markOop::age_shift 3\n+        \/\/ longConstant markOop::hash_mask_in_place 549755813632\n@@ -101,1 +101,1 @@\n-        checkLongValue(\"markOopDesc::hash_mask_in_place\",\n+        checkLongValue(\"markOop::hash_mask_in_place\",\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbLongConstant.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"}]}