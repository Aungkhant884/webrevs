{"files":[{"patch":"@@ -257,1 +257,0 @@\n-java\/awt\/Choice\/ChoiceKeyEventReaction\/ChoiceKeyEventReaction.html 6849922 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,47 +0,0 @@\n-<!--\n- Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--  \n-  @test\n-  @key headful\n-  @bug 6252982\n-  @summary PIT: Keyboard FocusTraversal not working when choice's drop-down is visible, on XToolkit\n-  @author andrei.dmitriev : area=awt.choice\n-  @library ..\/..\/regtesthelpers\n-  @build Util\n-  @run applet ChoiceKeyEventReaction.html\n-  -->\n-<head>\n-<title>  <\/title>\n-<\/head>\n-<body>\n-\n-<h1>ChoiceKeyEventReaction<br>Bug ID: 6252982 <\/h1>\n-\n-<p> This is an AUTOMATIC test, simply wait for completion <\/p>\n-\n-<APPLET CODE=\"ChoiceKeyEventReaction.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n-\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceKeyEventReaction\/ChoiceKeyEventReaction.html","additions":0,"deletions":47,"binary":false,"changes":47,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,13 +25,22 @@\n-  test\n-  @bug 6252982\n-  @summary PIT: Keyboard FocusTraversal not working when choice's drop-down is visible, on XToolkit\n-  @author andrei.dmitriev : area=awt.choice\n-  @run applet ChoiceKeyEventReaction.html\n-*\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-import java.awt.event.*;\n-import test.java.awt.regtesthelpers.Util;\n-\n-public class ChoiceKeyEventReaction extends Applet\n+ * @test\n+ * @bug 6252982\n+ * @key headful\n+ * @summary PIT: Keyboard FocusTraversal not working when choice's drop-down is visible, on XToolkit\n+ * @author andrei.dmitriev : area=awt.choice\n+ * @run main ChoiceKeyEventReaction\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.Choice;\n+import java.awt.Point;\n+import java.awt.Toolkit;\n+import java.awt.TextField;\n+import java.awt.FlowLayout;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.ItemListener;\n+import java.awt.Frame;\n+\n+public class ChoiceKeyEventReaction\n@@ -39,4 +48,15 @@\n-    Robot robot;\n-    Choice choice1 = new Choice();\n-    Point pt;\n-    TextField tf = new TextField(\"Hi\");\n+    private static Robot robot;\n+    private static Choice choice1 = new Choice();\n+    private static Point pt;\n+    private static TextField tf = new TextField(\"Hi\");\n+    private static boolean keyTypedOnTextField = false;\n+    private static boolean itemChanged = false;\n+    private static Frame frame;\n+    private static String toolkit;\n+\n+    public static void main(String[] args) {\n+        createAndShowGUI();\n+\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n@@ -44,3 +64,10 @@\n-    boolean keyTypedOnTextField = false;\n-    boolean itemChanged = false;\n-    String toolkit;\n+            moveFocusToTextField();\n+            testKeyOnChoice(InputEvent.BUTTON1_MASK, KeyEvent.VK_UP);\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Test failed. Exception thrown: \"+e);\n+        } finally {\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n+        }\n+    }\n@@ -48,2 +75,2 @@\n-    public void init()\n-    {\n+    private static void createAndShowGUI() {\n+        frame = new Frame();\n@@ -55,6 +82,0 @@\n-        tf.addKeyListener(new KeyAdapter(){\n-                public void keyPressed(KeyEvent ke) {\n-                    keyTypedOnTextField = true;\n-                    System.out.println(ke);\n-                }\n-            });\n@@ -62,0 +83,6 @@\n+        tf.addKeyListener(new KeyAdapter(){\n+            public void keyPressed(KeyEvent ke) {\n+                keyTypedOnTextField = true;\n+                System.out.println(ke);\n+            }\n+        });\n@@ -64,6 +91,5 @@\n-                public void itemStateChanged(ItemEvent e) {\n-                    itemChanged = true;\n-                    System.out.println(e);\n-                }\n-            });\n-\n+            public void itemStateChanged(ItemEvent e) {\n+                itemChanged = true;\n+                System.out.println(e);\n+            }\n+        });\n@@ -71,19 +97,0 @@\n-        add(tf);\n-        add(choice1);\n-        setLayout (new FlowLayout());\n-    }\/\/End  init()\n-\n-    public void start ()\n-    {\n-        setSize (200,200);\n-        setVisible(true);\n-        validate();\n-        try{\n-            robot = new Robot();\n-            Util.waitForIdle(robot);\n-            moveFocusToTextField();\n-            testKeyOnChoice(InputEvent.BUTTON1_MASK, KeyEvent.VK_UP);\n-        } catch (Throwable e) {\n-            throw new RuntimeException(\"Test failed. Exception thrown: \"+e);\n-        }\n-    }\/\/ start()\n@@ -91,1 +98,8 @@\n-    public void testKeyOnChoice(int button, int key){\n+        frame.add(tf);\n+        frame.add(choice1);\n+        frame.setLayout (new FlowLayout());\n+        frame.setSize (200,200);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void testKeyOnChoice(int button, int key) {\n@@ -94,1 +108,1 @@\n-        Util.waitForIdle(robot);\n+\n@@ -96,1 +110,0 @@\n-        robot.delay(10);\n@@ -98,1 +111,0 @@\n-        Util.waitForIdle(robot);\n@@ -103,2 +115,0 @@\n-        Util.waitForIdle(robot);\n-\n@@ -106,12 +116,2 @@\n-\n-        if (itemChanged){\n-                throw new RuntimeException(\"Test failed. ItemChanged event occur on Choice.\");\n-        }\n-\n-        \/\/ We may just write\n-        \/\/ if (toolkit.equals(\"sun.awt.windows.WToolkit\") == keyTypedOnTextField) {fail;}\n-        \/\/ but  must report differently in these cases so put two separate if statements for simplicity.\n-        if (toolkit.equals(\"sun.awt.windows.WToolkit\") &&\n-            !keyTypedOnTextField)\n-        {\n-            throw new RuntimeException(\"Test failed. (Win32) KeyEvent wasn't addressed to TextField. \");\n+        if (itemChanged) {\n+            throw new RuntimeException(\"Test failed. ItemChanged event occur on Choice.\");\n@@ -120,4 +120,11 @@\n-        if (!toolkit.equals(\"sun.awt.windows.WToolkit\") &&\n-            keyTypedOnTextField)\n-        {\n-            throw new RuntimeException(\"Test failed. (XToolkit\/MToolkit). KeyEvent was addressed to TextField.\");\n+       \/\/ We may just write\n+       \/\/ if (toolkit.equals(\"sun.awt.windows.WToolkit\") == keyTypedOnTextField) {fail;}\n+       \/\/ but  must report differently in these cases so put two separate if statements for simplicity.\n+       if (toolkit.equals(\"sun.awt.windows.WToolkit\") &&\n+           !keyTypedOnTextField) {\n+           throw new RuntimeException(\"Test failed. (Win32) KeyEvent wasn't addressed to TextField. \");\n+       }\n+\n+       if (!toolkit.equals(\"sun.awt.windows.WToolkit\") &&\n+          keyTypedOnTextField) {\n+           throw new RuntimeException(\"Test failed. (XToolkit\/MToolkit). KeyEvent was addressed to TextField.\");\n@@ -127,0 +134,1 @@\n+\n@@ -130,1 +138,0 @@\n-        Util.waitForIdle(robot);\n@@ -133,1 +140,1 @@\n-    public void moveFocusToTextField(){\n+    public static void moveFocusToTextField() {\n@@ -136,1 +143,1 @@\n-        Util.waitForIdle(robot);\n+\n@@ -138,1 +145,0 @@\n-        robot.delay(10);\n@@ -140,1 +146,0 @@\n-        Util.waitForIdle(robot);\n@@ -142,1 +147,1 @@\n-}\/\/:~\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceKeyEventReaction\/ChoiceKeyEventReaction.java","additions":87,"deletions":82,"binary":false,"changes":169,"status":"modified"}]}