{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,4 +57,0 @@\n-    @Override\n-    public void dispose() {\n-    }\n-\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CRobot.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,2 +137,0 @@\n-            disposer = new RobotDisposer(peer);\n-            sun.java2d.Disposer.addRecord(anchor, disposer);\n@@ -180,16 +178,0 @@\n-    private transient Object anchor = new Object();\n-\n-    static class RobotDisposer implements sun.java2d.DisposerRecord {\n-        private final RobotPeer peer;\n-        public RobotDisposer(RobotPeer peer) {\n-            this.peer = peer;\n-        }\n-        public void dispose() {\n-            if (peer != null) {\n-                peer.dispose();\n-            }\n-        }\n-    }\n-\n-    private transient RobotDisposer disposer;\n-\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Robot.java","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-import java.awt.*;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n@@ -119,5 +120,0 @@\n-\n-    \/**\n-     * Disposes the robot peer when it is not needed anymore.\n-     *\/\n-    void dispose();\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/peer\/RobotPeer.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,2 +28,4 @@\n-import java.awt.*;\n-import java.awt.peer.*;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.Rectangle;\n+import java.awt.Toolkit;\n+import java.awt.peer.RobotPeer;\n@@ -30,1 +33,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -36,0 +38,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -37,1 +40,1 @@\n-class XRobotPeer implements RobotPeer {\n+final class XRobotPeer implements RobotPeer {\n@@ -72,5 +75,0 @@\n-    @Override\n-    public void dispose() {\n-        \/\/ does nothing\n-    }\n-\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XRobotPeer.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,8 +35,1 @@\n-final class WRobotPeer extends WObjectPeer implements RobotPeer\n-{\n-    WRobotPeer() {\n-        create();\n-    }\n-    WRobotPeer(GraphicsDevice screen) {\n-        create();\n-    }\n+final class WRobotPeer implements RobotPeer {\n@@ -44,5 +37,1 @@\n-    private synchronized native void _dispose();\n-\n-    @Override\n-    protected void disposeImpl() {\n-        _dispose();\n+    WRobotPeer(GraphicsDevice screen) {\n@@ -51,1 +40,0 @@\n-    public native void create();\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WRobotPeer.java","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,4 +26,0 @@\n-#include \"awt.h\"\n-#include \"awt_Toolkit.h\"\n-#include \"awt_Component.h\"\n-#include \"awt_Robot.h\"\n@@ -32,0 +28,1 @@\n+#include \"awt_Component.h\"\n@@ -34,12 +31,0 @@\n-AwtRobot::AwtRobot( jobject peer )\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n-    m_peerObject = env->NewWeakGlobalRef(peer);\n-    JNU_CHECK_EXCEPTION(env);\n-    JNI_SET_PDATA(peer, this);\n-}\n-\n-AwtRobot::~AwtRobot()\n-{\n-}\n-\n@@ -51,1 +36,1 @@\n-void AwtRobot::MouseMove( jint x, jint y)\n+static void MouseMove(jint x, jint y)\n@@ -62,1 +47,1 @@\n-void AwtRobot::MousePress( jint buttonMask )\n+static void MousePress(jint buttonMask)\n@@ -104,1 +89,1 @@\n-void AwtRobot::MouseRelease( jint buttonMask )\n+static void MouseRelease(jint buttonMask)\n@@ -147,1 +132,1 @@\n-void AwtRobot::MouseWheel (jint wheelAmt) {\n+static void MouseWheel(jint wheelAmt) {\n@@ -151,1 +136,1 @@\n-inline jint AwtRobot::WinToJavaPixel(USHORT r, USHORT g, USHORT b)\n+inline jint WinToJavaPixel(USHORT r, USHORT g, USHORT b)\n@@ -161,1 +146,1 @@\n-void AwtRobot::GetRGBPixels(jint x, jint y, jint width, jint height, jintArray pixelArray)\n+static void GetRGBPixels(jint x, jint y, jint width, jint height, jintArray pixelArray)\n@@ -258,11 +243,1 @@\n-void AwtRobot::KeyPress( jint jkey )\n-{\n-    DoKeyEvent(jkey, 0); \/\/ no flags means key down\n-}\n-\n-void AwtRobot::KeyRelease( jint jkey )\n-{\n-    DoKeyEvent(jkey, KEYEVENTF_KEYUP);\n-}\n-\n-void AwtRobot::DoKeyEvent( jint jkey, DWORD dwFlags )\n+static void DoKeyEvent(jint jkey, DWORD dwFlags)\n@@ -300,13 +275,1 @@\n-\/\/\n-\/\/ utility function to get the C++ object from the Java one\n-\/\/\n-\/\/ (static)\n-AwtRobot * AwtRobot::GetRobot( jobject self )\n-{\n-    JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n-    AwtRobot * robot = (AwtRobot *)JNI_GET_PDATA(self);\n-    DASSERT( !::IsBadWritePtr( robot, sizeof(AwtRobot)));\n-    return robot;\n-}\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n@@ -316,20 +279,0 @@\n-JNIEXPORT void JNICALL Java_sun_awt_windows_WRobotPeer_create(\n-    JNIEnv * env, jobject self)\n-{\n-    TRY;\n-\n-    new AwtRobot(self);\n-\n-    CATCH_BAD_ALLOC;\n-}\n-\n-JNIEXPORT void JNICALL Java_sun_awt_windows_WRobotPeer__1dispose(\n-    JNIEnv *env, jobject self)\n-{\n-    TRY_NO_VERIFY;\n-\n-    AwtObject::_Dispose(self);\n-\n-    CATCH_BAD_ALLOC;\n-}\n-\n@@ -341,1 +284,1 @@\n-    AwtRobot::GetRobot(self)->MouseMove(x, y);\n+    MouseMove(x, y);\n@@ -351,1 +294,1 @@\n-    AwtRobot::GetRobot(self)->MousePress(buttons);\n+    MousePress(buttons);\n@@ -361,1 +304,1 @@\n-    AwtRobot::GetRobot(self)->MouseRelease(buttons);\n+    MouseRelease(buttons);\n@@ -371,1 +314,1 @@\n-    AwtRobot::GetRobot(self)->MouseWheel(wheelAmt);\n+    MouseWheel(wheelAmt);\n@@ -381,1 +324,1 @@\n-    AwtRobot::GetRobot(self)->GetRGBPixels(x, y, width, height, pixelArray);\n+    GetRGBPixels(x, y, width, height, pixelArray);\n@@ -391,1 +334,1 @@\n-    AwtRobot::GetRobot(self)->KeyPress(javakey);\n+    DoKeyEvent(javakey, 0); \/\/ no flags means key down\n@@ -401,1 +344,1 @@\n-    AwtRobot::GetRobot(self)->KeyRelease(javakey);\n+    DoKeyEvent(javakey, KEYEVENTF_KEYUP);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Robot.cpp","additions":17,"deletions":74,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -1,58 +0,0 @@\n-\/*\n- * Copyright (c) 1998, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef AWT_ROBOT_H\n-#define AWT_ROBOT_H\n-\n-#include \"awt_Toolkit.h\"\n-#include \"awt_Object.h\"\n-#include \"sun_awt_windows_WRobotPeer.h\"\n-#include \"jlong.h\"\n-\n-class AwtRobot : public AwtObject\n-{\n-    public:\n-        AwtRobot( jobject peer );\n-        virtual ~AwtRobot();\n-\n-        void MouseMove( jint x, jint y);\n-        void MousePress( jint buttonMask );\n-        void MouseRelease( jint buttonMask );\n-\n-        void MouseWheel(jint wheelAmt);\n-        jint getNumberOfButtons();\n-\n-        void GetRGBPixels(jint x, jint y, jint width, jint height, jintArray pixelArray);\n-\n-        void KeyPress( jint key );\n-        void KeyRelease( jint key );\n-        static AwtRobot * GetRobot( jobject self );\n-\n-    private:\n-        void DoKeyEvent( jint jkey, DWORD dwFlags );\n-        static jint WinToJavaPixel(USHORT r, USHORT g, USHORT b);\n-};\n-\n-#endif \/\/ AWT_ROBOT_H\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Robot.h","additions":0,"deletions":58,"binary":false,"changes":58,"status":"deleted"}]}