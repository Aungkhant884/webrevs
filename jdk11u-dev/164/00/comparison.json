{"files":[{"patch":"@@ -2044,4 +2044,8 @@\n-  for( i = 0; i < loop->_body.size(); i++ ) {\n-    Node *old = loop->_body.at(i);\n-    Node *nnn = old->clone();\n-    old_new.map( old->_idx, nnn );\n+  for (i = 0; i < loop->_body.size(); i++) {\n+    Node* old = loop->_body.at(i);\n+    Node* nnn = old->clone();\n+    old_new.map(old->_idx, nnn);\n+    if (old->is_reduction()) {\n+      \/\/ Reduction flag is not copied by default. Copy it here when cloning the entire loop body.\n+      nnn->add_flag(Node::Flag_is_reduction);\n+    }\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -506,0 +506,4 @@\n+  if (n->is_reduction()) {\n+    \/\/ Do not copy reduction information. This must be explicitly set by the calling code.\n+    n->remove_flag(Node::Flag_is_reduction);\n+  }\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8261147\n+ * @summary Cloned node in AddNode::Ideal is no longer a reduction but is still marked as such leading to wrong vectorization.\n+ * @run main\/othervm -Xcomp -XX:CompileCommand=compileonly,compiler.loopopts.superword.TestWronglyMarkedReduction::*\n+ *                   compiler.loopopts.superword.TestWronglyMarkedReduction\n+ *\/\n+package compiler.loopopts.superword;\n+\n+public class TestWronglyMarkedReduction {\n+    public static long b = 0;\n+\n+    public static void main(String[] p) {\n+        TestWronglyMarkedReduction u = new TestWronglyMarkedReduction();\n+        for (int i = 0; i < 1000; i++) {\n+            b = 0;\n+            test();\n+        }\n+    }\n+\n+    public static void test() {\n+        long r[] = new long[20];\n+        for (int q = 0; q < 12; ++q) {\n+            for (int i = 1; i < 6; ++i) {\n+                r[i + 1] += b;\n+            }\n+            b += 2;\n+        }\n+        check(r);\n+    }\n+\n+    public static void check(long[] a) {\n+        for (int j = 0; j < 20; j++) {\n+            if (j >= 2 && j <= 6) {\n+                if (a[j] != 132) {\n+                    throw new RuntimeException(\"expected 132 at index \" + j + \" but got \" + a[j]);\n+                }\n+            } else if (a[j] != 0) {\n+                throw new RuntimeException(\"expected 0 at index \" + j + \" but got \" + a[j]);\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestWronglyMarkedReduction.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}