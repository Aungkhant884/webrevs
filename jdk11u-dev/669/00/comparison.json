{"files":[{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -47,4 +50,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return JNI_FALSE;\n-                }\n@@ -52,4 +51,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return JNI_FALSE;\n-                }\n@@ -58,4 +53,0 @@\n-        if (arr == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return JNI_FALSE;\n-        }\n@@ -63,0 +54,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/BooleanArrayCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -37,1 +38,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -46,4 +49,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -51,4 +50,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -57,4 +52,0 @@\n-        if (arr == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return 0;\n-        }\n@@ -62,0 +53,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/ByteArrayCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -47,4 +50,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -52,4 +51,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -58,4 +53,0 @@\n-        if (arr == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return JNI_FALSE;\n-        }\n@@ -63,0 +54,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/CharArrayCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -47,4 +50,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -52,4 +51,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -58,4 +53,0 @@\n-        if (arr == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return JNI_FALSE;\n-        }\n@@ -63,0 +54,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/DoubleArrayCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -47,4 +50,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -52,4 +51,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -58,4 +53,0 @@\n-        if (arr == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return JNI_FALSE;\n-        }\n@@ -63,0 +54,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/FloatArrayCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -47,4 +50,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -52,4 +51,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -58,4 +53,0 @@\n-        if (arr == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return JNI_FALSE;\n-        }\n@@ -63,0 +54,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/IntArrayCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -47,4 +50,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -52,4 +51,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -58,4 +53,0 @@\n-        if (arr == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return JNI_FALSE;\n-        }\n@@ -63,0 +54,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/LongArrayCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -47,4 +50,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -52,4 +51,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return 0;\n-                }\n@@ -58,4 +53,0 @@\n-        if (arr == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return JNI_FALSE;\n-        }\n@@ -63,0 +54,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/ShortArrayCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-(JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+(JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -47,4 +50,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return JNI_FALSE;\n-                }\n@@ -52,4 +51,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return JNI_FALSE;\n-                }\n@@ -58,4 +53,0 @@\n-        if (str == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return JNI_FALSE;\n-        }\n@@ -63,0 +54,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/StringCriticalLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libBooleanArrayCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libByteArrayCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libCharArrayCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libDoubleArrayCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libFloatArrayCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libIntArrayCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libLongArrayCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libShortArrayCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/libStringCriticalLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"jni_tools.h\"\n@@ -29,0 +28,1 @@\n+#include \"jni_tools.h\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIGlobalRefLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-  (JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+  (JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -45,4 +48,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return;\n-                }\n@@ -50,4 +49,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return;\n-                }\n@@ -56,4 +51,0 @@\n-        if (obj == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return;\n-        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNILocalRefLocker.cpp","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-  (JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+  (JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -45,4 +48,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return;\n-                }\n@@ -50,4 +49,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return;\n-                }\n@@ -55,0 +50,1 @@\n+\n@@ -56,4 +52,0 @@\n-        if (obj == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return;\n-        }\n@@ -61,0 +53,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIRefLocker.cpp","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"ExceptionCheckingJniEnv.hpp\"\n@@ -38,1 +39,3 @@\n-  (JNIEnv *env, jobject o, jlong enterTime, jlong sleepTime) {\n+  (JNIEnv *jni_env, jobject o, jlong enterTime, jlong sleepTime) {\n+        ExceptionCheckingJniEnvPtr env(jni_env);\n+\n@@ -45,4 +48,0 @@\n-                if (klass == NULL) {\n-                        printf(\"Error: GetObjectClass returned NULL\\n\");\n-                        return;\n-                }\n@@ -50,4 +49,0 @@\n-                if (objFieldId == NULL) {\n-                        printf(\"Error: GetFieldID returned NULL\\n\");\n-                        return;\n-                }\n@@ -56,4 +51,0 @@\n-        if (obj == NULL) {\n-                printf(\"Error: GetObjectField returned NULL\\n\");\n-                return;\n-        }\n@@ -61,0 +52,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/JNIWeakGlobalRefLocker.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n@@ -27,1 +28,0 @@\n-#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/libJNIGlobalRefLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/libJNILocalRefLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/libJNIRefLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"ExceptionCheckingJniEnv.cpp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jniref\/libJNIWeakGlobalRefLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+#include <stdlib.h>\n+\n@@ -89,1 +91,1 @@\n-  JNIVerifier<jfieldID> marker(this, \"GetObjectClass\");\n+  JNIVerifier<jfieldID> marker(this, \"GetFieldID\");\n@@ -104,1 +106,1 @@\n-  JNIVerifier<jobject> marker(this, \"GetObjectField\");\n+  JNIVerifier<jobject> marker(this, \"NewGlobalRef\");\n@@ -112,0 +114,50 @@\n+\n+jobject ExceptionCheckingJniEnv::NewLocalRef(jobject obj) {\n+  JNIVerifier<jobject> marker(this, \"NewLocalRef\");\n+  return marker.ResultNotNull(_jni_env->NewLocalRef(obj));\n+}\n+\n+void ExceptionCheckingJniEnv::DeleteLocalRef(jobject obj) {\n+  JNIVerifier<> marker(this, \"DeleteLocalRef\");\n+  _jni_env->DeleteLocalRef(obj);\n+}\n+\n+jweak ExceptionCheckingJniEnv::NewWeakGlobalRef(jobject obj) {\n+  JNIVerifier<jweak> marker(this, \"NewWeakGlobalRef\");\n+  return marker.ResultNotNull(_jni_env->NewWeakGlobalRef(obj));\n+}\n+\n+void ExceptionCheckingJniEnv::DeleteWeakGlobalRef(jweak weak_ref) {\n+  JNIVerifier<> marker(this, \"DeleteWeakGlobalRef\");\n+  _jni_env->DeleteWeakGlobalRef(weak_ref);\n+}\n+\n+jsize ExceptionCheckingJniEnv::GetArrayLength(jarray array) {\n+  JNIVerifier<> marker(this, \"GetArrayLength\");\n+  return _jni_env->GetArrayLength(array);\n+}\n+\n+jsize ExceptionCheckingJniEnv::GetStringLength(jstring str) {\n+  JNIVerifier<> marker(this, \"GetStringLength\");\n+  return _jni_env->GetStringLength(str);\n+}\n+\n+void* ExceptionCheckingJniEnv::GetPrimitiveArrayCritical(jarray array, jboolean* isCopy) {\n+  JNIVerifier<> marker(this, \"GetPrimitiveArrayCritical\");\n+  return marker.ResultNotNull(_jni_env->GetPrimitiveArrayCritical(array, isCopy));\n+}\n+\n+void ExceptionCheckingJniEnv::ReleasePrimitiveArrayCritical(jarray array, void* carray, jint mode) {\n+  JNIVerifier<> marker(this, \"ReleasePrimitiveArrayCritical\");\n+  _jni_env->ReleasePrimitiveArrayCritical(array, carray, mode);\n+}\n+\n+const jchar* ExceptionCheckingJniEnv::GetStringCritical(jstring str, jboolean* isCopy) {\n+  JNIVerifier<const jchar*> marker(this, \"GetPrimitiveArrayCritical\");\n+  return marker.ResultNotNull(_jni_env->GetStringCritical(str, isCopy));\n+}\n+\n+void ExceptionCheckingJniEnv::ReleaseStringCritical(jstring str, const jchar* carray) {\n+  JNIVerifier<> marker(this, \"ReleaseStringCritical\");\n+  _jni_env->ReleaseStringCritical(str, carray);\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/ExceptionCheckingJniEnv.cpp","additions":54,"deletions":2,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -69,0 +69,8 @@\n+  jsize GetArrayLength(jarray array);\n+  jsize GetStringLength(jstring str);\n+\n+  void* GetPrimitiveArrayCritical(jarray array, jboolean* isCopy);\n+  void ReleasePrimitiveArrayCritical(jarray array, void* carray, jint mode);\n+  const jchar* GetStringCritical(jstring str, jboolean* isCopy);\n+  void ReleaseStringCritical(jstring str, const jchar* carray);\n+\n@@ -71,0 +79,4 @@\n+  jobject NewLocalRef(jobject ref);\n+  void DeleteLocalRef(jobject ref);\n+  jweak NewWeakGlobalRef(jobject obj);\n+  void DeleteWeakGlobalRef(jweak obj);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/ExceptionCheckingJniEnv.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}