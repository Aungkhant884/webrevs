{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.util.concurrent.*;\n@@ -34,0 +35,1 @@\n+    final static CountDownLatch threadsDoneSignal = new CountDownLatch(THREADS_LIMIT);\n@@ -71,2 +73,2 @@\n-            for (int i = 0; i < THREADS_LIMIT; i++) {\n-                threads[i].join(timeout\/THREADS_LIMIT);\n+            if (!threadsDoneSignal.await(timeout, TimeUnit.MILLISECONDS)) {\n+                throw new RuntimeException(\"Threads timeout\");\n@@ -125,0 +127,2 @@\n+    private static volatile int lastEnterEventsCount;\n+    private static native   int enterEventsCount();\n@@ -134,0 +138,1 @@\n+            lastEnterEventsCount = enterEventsCount();\n@@ -139,0 +144,1 @@\n+        tc04t001.threadsDoneSignal.countDown();\n@@ -147,4 +153,18 @@\n-        for (int j = 0; j < DELAY; j++) ;\n-        try {\n-            sleep(500);\n-        } catch (InterruptedException e) {}\n+\n+        \/\/ Wait in a loop for a MonitorContendedEnter event.\n+        \/\/ Timeout is: 20ms * DELAY.\n+        for (int j = 0; j < DELAY; j++) {\n+            try {\n+                sleep(20);\n+            } catch (InterruptedException e) {}\n+\n+            if (enterEventsCount() > lastEnterEventsCount) {\n+                break; \/\/ Got an expected MonitorContendedEnter event\n+            }\n+        }\n+        System.out.println(\"Thread-\" + i + \": increment event: \" + enterEventsCount());\n+\n+        if (enterEventsCount() == lastEnterEventsCount) {\n+            String msg = \"Timeout in waiting for a MonitorContendedEnter event\";\n+            throw new RuntimeException(msg);\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC04\/tc04t001.java","additions":27,"deletions":7,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -347,0 +347,5 @@\n+JNIEXPORT jint JNICALL\n+Java_nsk_jvmti_scenarios_contention_TC04_tc04t001Thread_enterEventsCount(JNIEnv* jni, jclass klass) {\n+    return enterEventsCount;\n+}\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/contention\/TC04\/tc04t001\/tc04t001.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}