{"files":[{"patch":"@@ -67,1 +67,1 @@\n-    private static final int HEIGHT = 600;\n+    private static final int HEIGHT = 300;\n@@ -87,1 +87,0 @@\n-            errors = checkJustification();\n@@ -89,3 +88,11 @@\n-            if (errors.size() > 0 || saveImage) {\n-                saveImage(image);\n-                dumpViews();\n+            boolean exceptionThrown = false;\n+            try {\n+                errors = checkJustification();\n+            } catch (Throwable t) {\n+                exceptionThrown = true;\n+                throw t;\n+            } finally {\n+                if (exceptionThrown || errors.size() > 0 || saveImage) {\n+                    saveImage(image);\n+                    dumpViews();\n+                }\n@@ -136,3 +143,0 @@\n-            \/\/ Expected to have 6 rows in the paragraph\n-            assert paragraphView.getViewCount() == 6\n-                   : \"paragraph doesn't have 6 rows of text\";\n@@ -140,1 +144,5 @@\n-            final Rectangle bounds = editorPane.getBounds();\n+            final int rowCount = paragraphView.getViewCount();\n+            if (rowCount < 4) {\n+                errors.add(new Error(\"Less than 4 lines of text: no justified lines\"));\n+                return errors;\n+            }\n@@ -142,5 +150,9 @@\n-            \/\/ Three rows should be justified\n-            final int oneX = getEndOfLineX(paragraphView.getView(0), bounds);\n-            if (oneX < bounds.width - 15) {\n-                errors.add(new Error(\"Text is not justified at line \" + 0 + \": \"\n-                                     + oneX + \" < \" + (bounds.width - 15)));\n+            final Rectangle bounds = editorPane.getBounds();\n+            final int rightMargin = bounds.width - 15;\n+\n+            \/\/ First lines should be justified\n+            int lineNo = 0;\n+            final int oneX = getEndOfLineX(paragraphView.getView(lineNo++), bounds);\n+            if (oneX < rightMargin) {\n+                errors.add(new Error(\"Text is not justified at line \" + lineNo + \": \"\n+                                     + oneX + \" < \" + rightMargin));\n@@ -148,2 +160,3 @@\n-            for (int i = 1; i < 2; i++) {\n-                int lineX = getEndOfLineX(paragraphView.getView(i),\n+            \/\/ Justified lines should have the same width\n+            while (lineNo < rowCount - 3) {\n+                int lineX = getEndOfLineX(paragraphView.getView(lineNo++),\n@@ -152,1 +165,1 @@\n-                    errors.add(new Error(\"Text is not justified at line \" + i\n+                    errors.add(new Error(\"Text is not justified at line \" + lineNo\n@@ -157,5 +170,6 @@\n-            \/\/ Fourth row should not be justified\n-            final int fourX = getEndOfLineX(paragraphView.getView(3), bounds);\n-            if (oneX == fourX) {\n-                errors.add(new Error(\"Fourth line is justified: \"\n-                                     + oneX + \" vs \" + fourX));\n+            \/\/ The last line of the wrapped text, before the first <br>,\n+            \/\/ should not be justified\n+            final int twoX = getEndOfLineX(paragraphView.getView(lineNo++), bounds);\n+            if (oneX == twoX) {\n+                errors.add(new Error(\"Line \" + lineNo + \" is justified: \"\n+                                     + oneX + \" vs \" + twoX));\n@@ -163,4 +177,3 @@\n-            if (fourX > (bounds.width - bounds.width \/ 4)) {\n-                errors.add(new Error(\"Fourth line is justified: \"\n-                                     + fourX + \" > \"\n-                                     + (bounds.width - bounds.width \/ 4)));\n+            if (twoX > rightMargin) {\n+                errors.add(new Error(\"Line \" + lineNo + \" is justified: \"\n+                                     + twoX + \" > \" + rightMargin));\n@@ -169,5 +182,6 @@\n-            \/\/ Fifth and sixth lines should not be justified\n-            final int fiveX = getEndOfLineX(paragraphView.getView(4), bounds);\n-            if (oneX == fiveX) {\n-                errors.add(new Error(\"Fifth line is justified: \"\n-                                     + oneX + \"==\" + fiveX));\n+            \/\/ The next two lines are created by line break <br>\n+            \/\/ They should not be justified and should be of the same width\n+            final int threeX = getEndOfLineX(paragraphView.getView(lineNo++), bounds);\n+            if (oneX == threeX) {\n+                errors.add(new Error(\"Line \" + lineNo + \" is justified: \"\n+                                     + oneX + \" == \" + threeX));\n@@ -175,3 +189,3 @@\n-            if (fiveX > bounds.width \/ 2) {\n-                errors.add(new Error(\"Fifth line is justified: \"\n-                                     + fiveX + \" > \" + (bounds.width \/ 2)));\n+            if (threeX > bounds.width \/ 2) {\n+                errors.add(new Error(\"Line \" + lineNo + \" is justified: \"\n+                                     + threeX + \" > \" + (bounds.width \/ 2)));\n@@ -179,8 +193,6 @@\n-            if (fiveX > fourX) {\n-                errors.add(new Error(\"Fifth line is justified: \"\n-                                     + fiveX + \" > \" + fourX));\n-            }\n-            final int sixX = getEndOfLineX(paragraphView.getView(5), bounds);\n-            if (fiveX != sixX) {\n-                errors.add(new Error(\"Fifth and sixth lines aren't of  the \"\n-                                     + \"same width: \" + fiveX + \" != \" + sixX));\n+\n+            final int lastX = getEndOfLineX(paragraphView.getView(lineNo), bounds);\n+            if (threeX != lastX) {\n+                errors.add(new Error(\"Line \" + lineNo + \" and \" + (lineNo + 1)\n+                                     + \" have different width: \"\n+                                     + threeX + \" != \" + lastX));\n@@ -221,1 +233,2 @@\n-            throw new RuntimeException(e);\n+            \/\/ Don't propagate the exception\n+            e.printStackTrace();\n@@ -231,1 +244,1 @@\n-        System.out.println(indent + view.getClass().getName() + \": \"\n+        System.err.println(indent + view.getClass().getName() + \": \"\n","filename":"test\/jdk\/javax\/swing\/text\/ParagraphView\/6364882\/bug6364882.java","additions":57,"deletions":44,"binary":false,"changes":101,"status":"modified"}]}