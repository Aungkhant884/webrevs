{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    private String prompt;\n+    private final String prompt;\n@@ -50,1 +50,1 @@\n-    private String[] choices;\n+    private final String[] choices;\n@@ -55,1 +55,1 @@\n-    private int defaultChoice;\n+    private final int defaultChoice;\n@@ -61,1 +61,1 @@\n-    private boolean multipleSelectionsAllowed;\n+    private final boolean multipleSelectionsAllowed;\n@@ -77,1 +77,2 @@\n-     * @param choices the list of choices.\n+     * @param choices the list of choices. The array is cloned to protect\n+     *                  against subsequent modification.\n@@ -112,1 +113,1 @@\n-        this.choices = choices;\n+        this.choices = choices.clone();\n@@ -129,1 +130,1 @@\n-     * @return the list of choices.\n+     * @return a copy of the list of choices.\n@@ -132,1 +133,1 @@\n-        return choices;\n+        return choices.clone();\n@@ -172,1 +173,2 @@\n-     *          {@code choices} list.\n+     *          {@code choices} list. The array is cloned to protect\n+     *          against subsequent modification.\n@@ -183,1 +185,1 @@\n-        this.selections = selections;\n+        this.selections = selections == null ? null : selections.clone();\n@@ -189,1 +191,1 @@\n-     * @return the selected choices, represented as indexes into the\n+     * @return a copy of the selected choices, represented as indexes into the\n@@ -195,1 +197,1 @@\n-        return selections;\n+        return selections == null ? null : selections.clone();\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/callback\/ChoiceCallback.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -124,0 +124,1 @@\n+\n@@ -128,1 +129,1 @@\n-    private String prompt;\n+    private final String prompt;\n@@ -133,1 +134,1 @@\n-    private int messageType;\n+    private final int messageType;\n@@ -138,1 +139,1 @@\n-    private int optionType = UNSPECIFIED_OPTION;\n+    private final int optionType;\n@@ -143,1 +144,1 @@\n-    private int defaultOption;\n+    private final int defaultOption;\n@@ -148,1 +149,1 @@\n-    private String[] options;\n+    private final String[] options;\n@@ -208,0 +209,1 @@\n+        this.prompt = null;\n@@ -210,0 +212,1 @@\n+        this.options = null;\n@@ -227,1 +230,2 @@\n-     * @param options the list of confirmation options.\n+     * @param options the list of confirmation options. The array is cloned\n+     *                  to protect against subsequent modification.\n@@ -255,0 +259,1 @@\n+        this.prompt = null;\n@@ -256,1 +261,2 @@\n-        this.options = options;\n+        this.optionType = UNSPECIFIED_OPTION;\n+        this.options = options.clone();\n@@ -321,0 +327,1 @@\n+        this.options = null;\n@@ -340,1 +347,2 @@\n-     * @param options the list of confirmation options.\n+     * @param options the list of confirmation options. The array is cloned\n+     *                  to protect against subsequent modification.\n@@ -373,1 +381,2 @@\n-        this.options = options;\n+        this.optionType = UNSPECIFIED_OPTION;\n+        this.options = options.clone();\n@@ -420,1 +429,1 @@\n-     * @return the list of confirmation options, or null if this\n+     * @return a copy of the list of confirmation options, or null if this\n@@ -425,1 +434,1 @@\n-        return options;\n+        return options == null ? null : options.clone();\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/callback\/ConfirmationCallback.java","additions":21,"deletions":12,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8242330\n+ * @library \/test\/lib\n+ * @summary Arrays should be cloned in several JAAS Callback classes\n+ *\/\n+\n+import javax.security.auth.callback.ChoiceCallback;\n+import javax.security.auth.callback.ConfirmationCallback;\n+\n+import static jdk.test.lib.Asserts.assertEQ;\n+\n+public class Mutability {\n+    public static void main(String[] args) {\n+\n+        \/\/ #1. ConfirmationCallback.new(3)\n+        String[] i11 = {\"1\", \"2\"};\n+        ConfirmationCallback c1 = new ConfirmationCallback(\n+                ConfirmationCallback.INFORMATION,\n+                i11,\n+                0);\n+\n+        \/\/ Modify argument of constructor\n+        i11[0] = \"x\";\n+        String[] o11 = c1.getOptions();\n+        assertEQ(o11[0], \"1\");\n+        \/\/ Modify output\n+        o11[0] = \"y\";\n+        String[] o12 = c1.getOptions();\n+        assertEQ(o12[0], \"1\");\n+\n+        \/\/ #2. ConfirmationCallback.new(4)\n+        String[] i21 = {\"1\", \"2\"};\n+        ConfirmationCallback c2 = new ConfirmationCallback(\n+                \"Hi\",\n+                ConfirmationCallback.INFORMATION,\n+                i21,\n+                0);\n+\n+        \/\/ Modify argument of constructor\n+        i21[0] = \"x\";\n+        assertEQ(c2.getOptions()[0], \"1\");\n+\n+        \/\/ #3. ChoiceCallback.new\n+        String[] i31 = {\"1\", \"2\"};\n+        ChoiceCallback c3 = new ChoiceCallback(\n+                \"Hi\",\n+                i31,\n+                0,\n+                true);\n+\n+        \/\/ Modify argument of constructor\n+        i31[0] = \"x\";\n+        String[] o31 = c3.getChoices();\n+        assertEQ(o31[0], \"1\");\n+        \/\/ Modify output of getChoices\n+        o31[0] = \"y\";\n+        String[] o32 = c3.getChoices();\n+        assertEQ(o32[0], \"1\");\n+\n+        int[] s31 = {0, 1};\n+        c3.setSelectedIndexes(s31);\n+\n+        \/\/ Modify argument of setSelectedIndexes\n+        s31[0] = 1;\n+        int[] s32 = c3.getSelectedIndexes();\n+        assertEQ(s32[0], 0);\n+        \/\/ Modify output of getSelectedIndexes\n+        s32[1] = 0;\n+        int[] s33 = c3.getSelectedIndexes();\n+        assertEQ(s33[1], 1);\n+    }\n+}\n","filename":"test\/jdk\/javax\/security\/auth\/callback\/Mutability.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"}]}