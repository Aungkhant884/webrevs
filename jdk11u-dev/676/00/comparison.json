{"files":[{"patch":"@@ -161,0 +161,5 @@\n+#ifdef __GLIBC__\n+os::Linux::mallinfo_func_t os::Linux::_mallinfo = NULL;\n+os::Linux::mallinfo2_func_t os::Linux::_mallinfo2 = NULL;\n+#endif \/\/ __GLIBC__\n+\n@@ -2348,10 +2353,18 @@\n-  struct mallinfo mi = ::mallinfo();\n-\n-  \/\/ mallinfo is an old API. Member names mean next to nothing and, beyond that, are int.\n-  \/\/ So values may have wrapped around. Still useful enough to see how much glibc thinks\n-  \/\/ we allocated.\n-  const size_t total_allocated = (size_t)(unsigned)mi.uordblks;\n-  st->print(\"C-Heap outstanding allocations: \" SIZE_FORMAT \"K\", total_allocated \/ K);\n-  \/\/ Since mallinfo members are int, glibc values may have wrapped. Warn about this.\n-  if ((vmrss * K) > UINT_MAX && (vmrss * K) > (total_allocated + UINT_MAX)) {\n-    st->print(\" (may have wrapped)\");\n+  size_t total_allocated = 0;\n+  bool might_have_wrapped = false;\n+  if (_mallinfo2 != NULL) {\n+    struct glibc_mallinfo2 mi = _mallinfo2();\n+    total_allocated = mi.uordblks;\n+  } else if (_mallinfo != NULL) {\n+    \/\/ mallinfo is an old API. Member names mean next to nothing and, beyond that, are int.\n+    \/\/ So values may have wrapped around. Still useful enough to see how much glibc thinks\n+    \/\/ we allocated.\n+    struct glibc_mallinfo mi = _mallinfo();\n+    total_allocated = (size_t)(unsigned)mi.uordblks;\n+    \/\/ Since mallinfo members are int, glibc values may have wrapped. Warn about this.\n+    might_have_wrapped = (vmrss * K) > UINT_MAX && (vmrss * K) > (total_allocated + UINT_MAX);\n+  }\n+  if (_mallinfo2 != NULL || _mallinfo != NULL) {\n+    st->print_cr(\"C-Heap outstanding allocations: \" SIZE_FORMAT \"K%s\",\n+                 total_allocated \/ K,\n+                 might_have_wrapped ? \" (may have wrapped)\" : \"\");\n@@ -2359,2 +2372,0 @@\n-  st->cr();\n-\n@@ -5247,0 +5258,5 @@\n+#ifdef __GLIBC__\n+  Linux::_mallinfo = CAST_TO_FN_PTR(Linux::mallinfo_func_t, dlsym(RTLD_DEFAULT, \"mallinfo\"));\n+  Linux::_mallinfo2 = CAST_TO_FN_PTR(Linux::mallinfo2_func_t, dlsym(RTLD_DEFAULT, \"mallinfo2\"));\n+#endif \/\/ __GLIBC__\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":28,"deletions":12,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -281,0 +281,35 @@\n+\n+#ifdef __GLIBC__\n+  struct glibc_mallinfo {\n+    int arena;\n+    int ordblks;\n+    int smblks;\n+    int hblks;\n+    int hblkhd;\n+    int usmblks;\n+    int fsmblks;\n+    int uordblks;\n+    int fordblks;\n+    int keepcost;\n+  };\n+\n+  struct glibc_mallinfo2 {\n+    size_t arena;\n+    size_t ordblks;\n+    size_t smblks;\n+    size_t hblks;\n+    size_t hblkhd;\n+    size_t usmblks;\n+    size_t fsmblks;\n+    size_t uordblks;\n+    size_t fordblks;\n+    size_t keepcost;\n+  };\n+\n+  typedef struct glibc_mallinfo (*mallinfo_func_t)(void);\n+  typedef struct glibc_mallinfo2 (*mallinfo2_func_t)(void);\n+\n+  static mallinfo_func_t _mallinfo;\n+  static mallinfo2_func_t _mallinfo2;\n+#endif\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"}]}