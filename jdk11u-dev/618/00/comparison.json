{"files":[{"patch":"@@ -168,2 +168,8 @@\n-    NSK_DISPLAY1(\"Single step event: %s\\n\", locStr);\n-    free(locStr);\n+\n+    if (locStr == NULL) {\n+        NSK_DISPLAY0(\"Error in Single step event: locationToString failed\\n\");\n+        gIsErrorOccured = JNI_TRUE;\n+    } else {\n+        NSK_DISPLAY1(\"Single step event: %s\\n\", locStr);\n+        free(locStr);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/indy\/func\/jvmti\/share\/IndyRedefineClass.c","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+static jboolean gErrorHappened = JNI_FALSE;\n@@ -66,1 +67,2 @@\n-    return gIsMethodEntryWorking && gIsSingleStepWorking && (gIsBreakpointWorking || gIsDebuggerCompatible);\n+    return gIsMethodEntryWorking && !gErrorHappened && gIsSingleStepWorking\n+        && (gIsBreakpointWorking || gIsDebuggerCompatible);\n@@ -106,2 +108,8 @@\n-    NSK_DISPLAY1(\"Single step event: %s\\n\", locStr);\n-    free(locStr);\n+\n+    if (locStr == NULL) {\n+        NSK_DISPLAY0(\"Error: Single step event has no location\\n\");\n+        gErrorHappened = JNI_TRUE;\n+    } else {\n+        NSK_DISPLAY1(\"Single step event: %s\\n\", locStr);\n+        free(locStr);\n+    }\n@@ -143,2 +151,7 @@\n-    NSK_DISPLAY1(\"Breakpoint event at: %s\\n\", locStr);\n-    free(locStr);\n+    if (locStr == NULL) {\n+        NSK_DISPLAY0(\"Error: Breakpoint event has no location\\n\");\n+        gErrorHappened = JNI_TRUE;\n+    } else {\n+        NSK_DISPLAY1(\"Breakpoint event at: %s\\n\", locStr);\n+        free(locStr);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/indy\/func\/jvmti\/stepBreakPopReturn\/stepBreakPopReturn.c","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -81,2 +81,3 @@\n-    \/\/ gcc 7.3 claims that snprintf below can output between 6 and 531 bytes. Setting buffer size to 600.\n-    char r[600];\n+    int len;\n+    char * result;\n+    const char * const format = \"%s .%s :\" JLONG_FORMAT;\n@@ -88,1 +89,1 @@\n-    snprintf(r, sizeof(r), \"%s .%s :%lx\", pMN->classSig, pMN->methodName, (long) location);\n+    len = snprintf(NULL, 0, format, pMN->classSig, pMN->methodName, location) + 1;\n@@ -90,1 +91,10 @@\n-    free(pMN);\n+    if (len <= 0) {\n+        free(pMN);\n+        return NULL;\n+    }\n+\n+    result = malloc(len);\n+    if (result == NULL) {\n+        free(pMN);\n+        return NULL;\n+    }\n@@ -92,1 +102,4 @@\n-    return strdup(r);\n+    snprintf(result, len, format, pMN->classSig, pMN->methodName, location);\n+\n+    free(pMN);\n+    return result;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/share\/mlvmJvmtiUtils.c","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"}]}