{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,4 +28,8 @@\n-import sun.lwawt.LWWindowPeer;\n-\n-import java.awt.*;\n-import java.beans.*;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.KeyboardFocusManager;\n+import java.awt.Point;\n+import java.awt.Window;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n@@ -33,1 +37,3 @@\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.Set;\n@@ -36,2 +42,17 @@\n-import javax.accessibility.*;\n-import javax.swing.*;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleComponent;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleSelection;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleTable;\n+import javax.accessibility.AccessibleText;\n+import javax.accessibility.AccessibleValue;\n+import javax.swing.Icon;\n+import javax.swing.JComponent;\n+import javax.swing.JEditorPane;\n+import javax.swing.JLabel;\n+import javax.swing.JTextArea;\n+\n@@ -39,0 +60,1 @@\n+import sun.lwawt.LWWindowPeer;\n@@ -629,1 +651,1 @@\n-                                if ( currentName.equals(activeDescendantName) &&\n+                                if (currentName != null && currentName.equals(activeDescendantName) &&\n@@ -652,0 +674,20 @@\n+    private static final int JAVA_AX_ROWS = 1;\n+    private static final int JAVA_AX_COLS = 2;\n+\n+    public static int getTableInfo(final Accessible a, final Component c,\n+                                   final int info) {\n+        if (a == null) return 0;\n+        return invokeAndWait(() -> {\n+            AccessibleContext ac = a.getAccessibleContext();\n+            AccessibleTable table = ac.getAccessibleTable();\n+            if (table != null) {\n+                if (info == JAVA_AX_COLS) {\n+                    return table.getAccessibleColumnCount();\n+                } else if (info == JAVA_AX_ROWS) {\n+                    return table.getAccessibleRowCount();\n+                }\n+            }\n+            return 0;\n+        }, c);\n+    }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":51,"deletions":9,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -426,1 +426,1 @@\n-    [sRoles setObject:NSAccessibilityTableRole forKey:@\"table\"];\n+    [sRoles setObject:NSAccessibilityGridRole forKey:@\"table\"];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaAccessibilityUtilities.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,0 +71,6 @@\n+static jmethodID jm_getTableInfo = NULL;\n+#define GET_TABLEINFO_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(jm_getTableInfo, sjc_CAccessibility, \"getTableInfo\",\\\n+                      \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;IZ)[Ljava\/lang\/Object;\", ret);\n+\n@@ -139,0 +145,8 @@\n+@interface TableAccessibility : JavaComponentAccessibility {\n+\n+}\n+- (NSArray *)initializeAttributeNamesWithEnv:(JNIEnv *)env;\n+- (NSArray *)accessibilityRowsAttribute;\n+- (NSArray *)accessibilityColumnsAttribute;\n+@end\n+\n@@ -411,0 +425,2 @@\n+    } else if ([javaRole isEqualToString:@\"table\"]) {\n+        newChild = [TableAccessibility alloc];\n@@ -529,1 +545,2 @@\n-        if ([javaRole isEqualToString:@\"list\"]) {\n+        if ([javaRole isEqualToString:@\"list\"]\n+                || [javaRole isEqualToString:@\"table\"]) {\n@@ -705,1 +722,3 @@\n-            if ([parentRole isEqualToString:@\"list\"]) {\n+\n+            if ([parentRole isEqualToString:@\"list\"]\n+                    || [parentRole isEqualToString:@\"table\"]) {\n@@ -1985,0 +2004,37 @@\n+\/\/ these constants are duplicated in CAccessibility.java\n+#define JAVA_AX_ROWS (1)\n+#define JAVA_AX_COLS (2)\n+\n+@implementation TableAccessibility\n+\n+- (NSArray *)initializeAttributeNamesWithEnv:(JNIEnv *)env\n+{\n+    NSMutableArray *names = (NSMutableArray *)[super initializeAttributeNamesWithEnv:env];\n+\n+    [names addObject:NSAccessibilityRowCountAttribute];\n+    [names addObject:NSAccessibilityColumnCountAttribute];\n+    return names;\n+}\n+\n+- (id)getTableInfo:(jint)info {\n+    if (fAccessible == NULL) return 0;\n+\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    GET_TABLEINFO_METHOD_RETURN(nil);\n+    jint count = (*env)->CallStaticIntMethod(env, jm_getTableInfo, fAccessible,\n+                                             fComponent, info);\n+    CHECK_EXCEPTION();\n+    NSNumber *index = [NSNumber numberWithInt:count];\n+    return index;\n+}\n+\n+\n+- (id)accessibilityRowCountAttribute {\n+    return [self getTableInfo:JAVA_AX_ROWS];\n+}\n+\n+- (id)accessibilityColumnCountAttribute {\n+    return [self getTableInfo:JAVA_AX_COLS];\n+}\n+@end\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":58,"deletions":2,"binary":false,"changes":60,"status":"modified"}]}