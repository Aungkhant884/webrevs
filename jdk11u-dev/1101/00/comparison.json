{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -381,3 +381,1 @@\n-        int h = inH;\n-\n-        h = metrics.titleBarHeight + inH;\n+        final int h = inH;\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaInternalFrameBorder.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,143 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8139173\n+ * @requires (os.family == \"mac\")\n+ * @summary Verify JInternalFrame's border\n+ * @run main JInternalFrameBorderTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class JInternalFrameBorderTest {\n+\n+    private static JFrame frame;\n+    private static JDesktopPane desktopPane;\n+    private static JInternalFrame internalFrame;\n+    private static final int LIMIT = 100;\n+    private static Robot robot;\n+    private static Point pos;\n+    private static Rectangle rect;\n+    private static Insets insets;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        createUI();\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            pos = internalFrame.getLocationOnScreen();\n+            rect = internalFrame.getBounds();\n+            insets = internalFrame.getInsets();\n+        });\n+        robot.waitForIdle();\n+\n+        \/\/ bottom\n+        int x = pos.x + rect.x + rect.width\/2;\n+        int y = pos.y + rect.y + rect.height - insets.bottom + 1;\n+        Color colorBottom = robot.getPixelColor(x, y);\n+\n+        \/\/ left\n+        x = pos.x + rect.x + insets.left - 1;\n+        y = pos.y + rect.y + rect.height\/2;\n+        Color colorLeft = robot.getPixelColor(x, y);\n+\n+        \/\/ right\n+        x = pos.x + rect.x + rect.width - insets.left + 1;\n+        y = pos.y + rect.y + rect.height\/2;\n+        Color colorRight = robot.getPixelColor(x, y);\n+\n+        robot.waitForIdle();\n+        cleanUp();\n+\n+        int diff = getDiff(colorLeft, colorBottom);\n+        if (diff > LIMIT) {\n+            throw new RuntimeException(\"Unexpected border bottom=\" +\n+                    colorBottom + \" left=\" + colorLeft);\n+        }\n+        diff = getDiff(colorRight, colorBottom);\n+        if (diff > LIMIT) {\n+            throw new RuntimeException(\"Unexpected border bottom=\" +\n+                    colorBottom + \" right=\" + colorRight);\n+        }\n+    }\n+\n+    private static void createUI() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n+            } catch (Exception e) {\n+                throw new RuntimeException(\"Cannot initialize Aqua L&F\");\n+            }\n+            desktopPane = new JDesktopPane() {\n+                @Override\n+                protected void paintComponent(Graphics g) {\n+                    super.paintComponent(g);\n+                    g.setColor(Color.BLUE);\n+                    g.fillRect(0, 0, getWidth(), getHeight());\n+                }\n+            };\n+            internalFrame = new JInternalFrame();\n+            frame = new JFrame();\n+            internalFrame.setSize(500, 200);\n+            internalFrame.setVisible(true);\n+            desktopPane.add(internalFrame);\n+\n+            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+            frame.getContentPane().setLayout(new BorderLayout());\n+            frame.getContentPane().add(desktopPane, \"Center\");\n+            frame.setSize(500, 500);\n+            frame.setLocationRelativeTo(null);\n+            frame.setVisible(true);\n+            frame.toFront();\n+        });\n+    }\n+\n+    private static int getDiff(Color c1, Color c2) {\n+        int r = Math.abs(c1.getRed()   - c2.getRed());\n+        int g = Math.abs(c1.getGreen() - c2.getGreen());\n+        int b = Math.abs(c1.getBlue()  - c2.getBlue());\n+        return r + g + b;\n+    }\n+\n+    private static void cleanUp() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame.dispose();\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/aqua\/JInternalFrameBorderTest.java","additions":143,"deletions":0,"binary":false,"changes":143,"status":"added"}]}