{"files":[{"patch":"@@ -239,13 +239,1 @@\n-    int res = dumper.dump(op->arg(0));\n-    if (res == 0) {\n-      out->print_cr(\"Heap dump file created\");\n-    } else {\n-      \/\/ heap dump failed\n-      ResourceMark rm;\n-      char* error = dumper.error_as_C_string();\n-      if (error == NULL) {\n-        out->print_cr(\"Dump failed - reason unknown\");\n-      } else {\n-        out->print_cr(\"%s\", error);\n-      }\n-    }\n+    dumper.dump(op->arg(0), out);\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -522,13 +522,1 @@\n-  int res = dumper.dump(_filename.value(), _overwrite.value());\n-  if (res == 0) {\n-    output()->print_cr(\"Heap dump file created\");\n-  } else {\n-    \/\/ heap dump failed\n-    ResourceMark rm;\n-    char* error = dumper.error_as_C_string();\n-    if (error == NULL) {\n-      output()->print_cr(\"Dump failed - reason unknown\");\n-    } else {\n-      output()->print_cr(\"%s\", error);\n-    }\n-  }\n+  dumper.dump(_filename.value(), output(), _overwrite.value());\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1938,1 +1938,1 @@\n-int HeapDumper::dump(const char* path, bool overwrite) {\n+int HeapDumper::dump(const char* path, outputStream* out, bool overwrite) {\n@@ -1942,2 +1942,2 @@\n-  if (print_to_tty()) {\n-    tty->print_cr(\"Dumping heap to %s ...\", path);\n+  if (out != NULL) {\n+    out->print_cr(\"Dumping heap to %s ...\", path);\n@@ -1951,2 +1951,2 @@\n-    if (print_to_tty()) {\n-      tty->print_cr(\"Unable to create %s: %s\", path,\n+    if (out != NULL) {\n+      out->print_cr(\"Unable to create %s: %s\", path,\n@@ -1972,1 +1972,1 @@\n-  if (print_to_tty()) {\n+  if (out != NULL) {\n@@ -1975,1 +1975,1 @@\n-      tty->print_cr(\"Heap dump file created [\" JULONG_FORMAT \" bytes in %3.3f secs]\",\n+      out->print_cr(\"Heap dump file created [\" JULONG_FORMAT \" bytes in %3.3f secs]\",\n@@ -1978,1 +1978,1 @@\n-      tty->print_cr(\"Dump file is incomplete: %s\", writer.error());\n+      out->print_cr(\"Dump file is incomplete: %s\", writer.error());\n@@ -2106,1 +2106,0 @@\n-                    true  \/* send to tty *\/,\n@@ -2108,1 +2107,1 @@\n-  dumper.dump(my_path);\n+  dumper.dump(my_path, tty);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+class outputStream;\n+\n@@ -47,1 +49,0 @@\n-  bool _print_to_tty;\n@@ -52,2 +53,2 @@\n-  HeapDumper(bool gc_before_heap_dump, bool print_to_tty, bool oome) :\n-    _gc_before_heap_dump(gc_before_heap_dump), _error(NULL), _print_to_tty(print_to_tty), _oome(oome) { }\n+  HeapDumper(bool gc_before_heap_dump, bool oome) :\n+    _gc_before_heap_dump(gc_before_heap_dump), _error(NULL), _oome(oome) { }\n@@ -59,3 +60,0 @@\n-  \/\/ indicates if progress messages can be sent to tty\n-  bool print_to_tty() const             { return _print_to_tty; }\n-\n@@ -69,1 +67,1 @@\n-    _gc_before_heap_dump(gc_before_heap_dump), _error(NULL), _print_to_tty(false), _oome(false) { }\n+    _gc_before_heap_dump(gc_before_heap_dump), _error(NULL), _oome(false) { }\n@@ -74,1 +72,2 @@\n-  int dump(const char* path, bool overwrite = false);\n+  \/\/ additional info is written to out if not NULL.\n+  int dump(const char* path, outputStream* out = NULL, bool overwrite = false);\n","filename":"src\/hotspot\/share\/services\/heapDumper.hpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"}]}