{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-            Socket s = new Socket (\"127.0.0.1\", p1);\n+            Socket s = new Socket (InetAddress.getLoopbackAddress(), p1);\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/TestLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-        Socket s = new Socket (\"127.0.0.1\", port);\n+        Socket s = new Socket (InetAddress.getLoopbackAddress(), port);\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/bugs\/6725892\/Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-                \"127.0.0.1\", server.getAddress().getPort()\n+                InetAddress.getLoopbackAddress(), server.getAddress().getPort()\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/bugs\/B6361557.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import java.net.InetAddress;\n@@ -103,1 +104,1 @@\n-        Socket sock = new Socket(\"127.0.0.1\", port);\n+        Socket sock = new Socket(InetAddress.getLoopbackAddress(), port);\n@@ -117,1 +118,1 @@\n-        sock = new Socket(\"127.0.0.1\", port);\n+        sock = new Socket(InetAddress.getLoopbackAddress(), port);\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/bugs\/TruncatedRequestBody.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.net.InetAddress;\n@@ -39,1 +40,1 @@\n-    static final SocketAddress remoteAddress = new InetSocketAddress(\"127.0.0.1\", 3000);\n+    static final SocketAddress remoteAddress = new InetSocketAddress(InetAddress.getLoopbackAddress(), 3000);\n","filename":"test\/jdk\/com\/sun\/nio\/sctp\/SctpMultiChannel\/SendFailed.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -243,1 +243,1 @@\n-            SocketAddress addr = new InetSocketAddress (\"127.0.0.1\", port);\n+            SocketAddress addr = new InetSocketAddress (InetAddress.getLoopbackAddress(), port);\n","filename":"test\/jdk\/java\/net\/Authenticator\/B6870935.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,2 +117,1 @@\n-        String host = \"127.0.0.1\";\n-        InetAddress addr = InetAddress.getByName(host);\n+        InetAddress addr = InetAddress.getLoopbackAddress();\n","filename":"test\/jdk\/java\/net\/DatagramSocket\/SendDatagramToBadAddress.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -221,1 +221,2 @@\n-            return new ServerSocket(0, 0, InetAddress.getByName(\"127.0.0.1\"));\n+            InetAddress address = InetAddress.getLoopbackAddress();\n+            return new ServerSocket(0, 0, address);\n@@ -243,1 +244,2 @@\n-            server.bind(new InetSocketAddress(\"127.0.0.1\", 0), 0);\n+            InetAddress address = InetAddress.getLoopbackAddress();\n+            server.bind(new InetSocketAddress(address, 0), 0);\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/SetAuthenticator\/HTTPTestServer.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-                test.clHost = \"127.0.0.1\";\n+                test.clHost = InetAddress.getLoopbackAddress().getHostAddress();\n","filename":"test\/jdk\/java\/net\/Socket\/UrgentDataTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-            Socket c = new Socket(\"127.0.0.1\", srv.getLocalPort());\n+            Socket c = new Socket(InetAddress.getLoopbackAddress(), srv.getLocalPort());\n","filename":"test\/jdk\/java\/net\/SocketOption\/OptionsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.net.InetAddress;\n@@ -75,1 +76,1 @@\n-        ss.bind(new InetSocketAddress(\"127.0.0.1\", 0));\n+        ss.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n","filename":"test\/jdk\/java\/net\/httpclient\/UnknownBodyLengthTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -185,1 +185,1 @@\n-                    InetAddress lb = InetAddress.getByName(\"127.0.0.1\");\n+                    InetAddress lb = InetAddress.getLoopbackAddress();\n","filename":"test\/jdk\/java\/nio\/channels\/AsyncCloseAndInterrupt.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+import java.net.InetAddress;\n@@ -45,1 +46,1 @@\n-            new Socket(\"127.0.0.1\", 9999).close();\n+            new Socket(InetAddress.getLoopbackAddress(), 9999).close();\n","filename":"test\/jdk\/java\/nio\/channels\/AsynchronousChannelGroup\/bootlib\/Attack.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright 2009 Google Inc.  All Rights Reserved.\n+ * Copyright 2009, 2019, Google Inc.  All Rights Reserved.\n@@ -24,0 +24,1 @@\n+import java.net.InetAddress;\n@@ -90,1 +91,1 @@\n-        InetSocketAddress address = new InetSocketAddress(\"127.0.0.1\", 7359);\n+        InetSocketAddress address = new InetSocketAddress(InetAddress.getLoopbackAddress(), 7359);\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/LotsOfCancels.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.net.InetAddress;\n@@ -42,1 +43,0 @@\n-    static String host = \"127.0.0.1\";\n@@ -152,1 +152,1 @@\n-                    s.connect(new InetSocketAddress(host, sensorPort));\n+                    s.connect(new InetSocketAddress(InetAddress.getLoopbackAddress(), sensorPort));\n@@ -186,1 +186,1 @@\n-                        new InetSocketAddress(host, targetPort));\n+                        new InetSocketAddress(InetAddress.getLoopbackAddress(), targetPort));\n","filename":"test\/jdk\/java\/nio\/channels\/SocketChannel\/AsyncCloseChannel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        client.connect (new InetSocketAddress (\"127.0.0.1\", port));\n+        client.connect (new InetSocketAddress (InetAddress.getLoopbackAddress(), port));\n","filename":"test\/jdk\/java\/nio\/channels\/SocketChannel\/CloseRegisteredChannel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-                new InetSocketAddress(\"127.0.0.1\", port)).socket();\n+                new InetSocketAddress(InetAddress.getLoopbackAddress(), port)).socket();\n","filename":"test\/jdk\/java\/nio\/channels\/SocketChannel\/CloseTimeoutChannel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        InetAddress lh = InetAddress.getByName(\"127.0.0.1\");\n+        InetAddress lh = InetAddress.getLoopbackAddress();\n","filename":"test\/jdk\/java\/nio\/channels\/SocketChannel\/SocketInheritance.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-                \"127.0.0.1\", port));\n+                InetAddress.getLoopbackAddress(), port));\n@@ -118,1 +118,1 @@\n-                \"127.0.0.1\", port));\n+                InetAddress.getLoopbackAddress(), port));\n@@ -144,1 +144,1 @@\n-            \"127.0.0.1\", port));\n+            InetAddress.getLoopbackAddress(), port));\n@@ -162,1 +162,1 @@\n-            \"127.0.0.1\", port));\n+            InetAddress.getLoopbackAddress(), port));\n","filename":"test\/jdk\/java\/nio\/channels\/etc\/AdaptorCloseAndInterrupt.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-            new InetSocketAddress(\"127.0.0.1\",\n+            new InetSocketAddress(InetAddress.getLoopbackAddress(),\n","filename":"test\/jdk\/java\/nio\/channels\/etc\/Shadow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.net.InetAddress;\n@@ -50,1 +51,1 @@\n-            so = new Socket(\"127.0.0.1\", port);\n+            so = new Socket(InetAddress.getLoopbackAddress(), port);\n","filename":"test\/jdk\/java\/nio\/charset\/coders\/StreamTimeout.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-            System.err.println(\"(connecting to listening port on 127.0.0.1:\" +\n+            System.err.println(\"(connecting to listening port on localhost:\" +\n@@ -87,1 +87,1 @@\n-            DoS = new Socket(\"127.0.0.1\", port);\n+            DoS = new Socket(InetAddress.getLoopbackAddress(), port);\n","filename":"test\/jdk\/java\/rmi\/transport\/readTimeout\/ReadTimeoutTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.net.InetAddress;\n@@ -41,2 +42,0 @@\n-    private static final String LOCAL_HOST = \"127.0.0.1\";\n-\n@@ -46,1 +45,1 @@\n-                Socket s = new Socket(LOCAL_HOST, ss.getLocalPort());\n+                Socket s = new Socket(InetAddress.getLoopbackAddress(), ss.getLocalPort());\n","filename":"test\/jdk\/jdk\/net\/Sockets\/QuickAckTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-            final InetAddress loop = InetAddress.getByName(\"127.0.0.1\");\n+            final InetAddress loop = InetAddress.getLoopbackAddress();\n@@ -87,1 +87,1 @@\n-            final Socket s = new Socket(\"127.0.0.1\", tcp_port);\n+            final Socket s = new Socket(loop, tcp_port);\n@@ -89,1 +89,1 @@\n-            sc.connect(new InetSocketAddress(\"127.0.0.1\", tcp_port));\n+            sc.connect(new InetSocketAddress(loop, tcp_port));\n","filename":"test\/jdk\/jdk\/net\/Sockets\/Test.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/TunnelThroughProxy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}