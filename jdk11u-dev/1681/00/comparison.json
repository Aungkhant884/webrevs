{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -645,1 +645,1 @@\n-            .filter(f -> access(f.getPath()) && f.exists())\n+            .filter(f -> access(f.getPath()))\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-   @summary Basic test for listRoots method\n+   @summary Basic test for File.listRoots method\n@@ -29,2 +29,8 @@\n-import java.io.*;\n-\n+import java.io.File;\n+import java.nio.file.FileSystem;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Path;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n@@ -40,2 +46,1 @@\n-        File f = new File(System.getProperty(\"test.src\", \".\"),\n-                          \"ListRoots.java\");\n+        File f = new File(System.getProperty(\"test.src\", \".\"), \"ListRoots.java\");\n@@ -43,4 +48,5 @@\n-        for (int i = 0; i < rs.length; i++) {\n-            if (cp.startsWith(rs[i].getPath())) break;\n-            if (i == rs.length - 1)\n-                throw new Exception(cp + \" does not have a recognized root\");\n+        boolean found = Stream.of(rs)\n+                .map(File::getPath)\n+                .anyMatch(p -> cp.startsWith(p));\n+        if (!found) {\n+            throw new RuntimeException(cp + \" does not have a recognized root\");\n@@ -49,0 +55,10 @@\n+        \/\/ the list of roots should match FileSystem::getRootDirectories\n+        Set<File> roots1 = Stream.of(rs).collect(Collectors.toSet());\n+        FileSystem fs = FileSystems.getDefault();\n+        Set<File> roots2 = StreamSupport.stream(fs.getRootDirectories().spliterator(), false)\n+                .map(Path::toFile)\n+                .collect(Collectors.toSet());\n+        if (!roots1.equals(roots2)) {\n+            System.out.println(roots2);\n+            throw new RuntimeException(\"Does not match FileSystem::getRootDirectories\");\n+        }\n","filename":"test\/jdk\/java\/io\/File\/ListRoots.java","additions":26,"deletions":10,"binary":false,"changes":36,"status":"modified"}]}