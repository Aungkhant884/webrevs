{"files":[{"patch":"@@ -549,1 +549,0 @@\n-java\/lang\/management\/ThreadMXBean\/ThreadMXBeanStateTest.java    8081652 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -362,1 +362,10 @@\n-        this.join();\n+        return getLog(0);\n+    }\n+\n+    \/**\n+     * Waits at most {@code millis} milliseconds for the controller\n+     * to complete the test run and returns the generated log.\n+     * A timeout of {@code 0} means to wait forever.\n+     *\/\n+    public String getLog(long millis) throws InterruptedException {\n+        this.join(millis);\n","filename":"test\/jdk\/java\/lang\/Thread\/ThreadStateController.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -117,1 +119,1 @@\n-                System.out.println(thread.getLog());\n+                System.out.println(thread.getLog(Utils.adjustTimeout(60_000)));\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/ThreadMXBeanStateTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}