{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,8 +24,8 @@\n-import java.util.*;\n-import java.util.concurrent.*;\n-import java.util.logging.*;\n-import java.io.*;\n-import java.net.*;\n-import java.security.*;\n-import javax.net.ssl.*;\n-import com.sun.net.httpserver.*;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.charset.StandardCharsets;\n+\n+import com.sun.net.httpserver.Headers;\n+import com.sun.net.httpserver.HttpExchange;\n+import com.sun.net.httpserver.HttpHandler;\n@@ -37,18 +37,0 @@\n-\n-    byte[] read(InputStream is) throws IOException {\n-        byte[] buf = new byte[1024];\n-        byte[] result = new byte[0];\n-\n-        while (true) {\n-            int n = is.read(buf);\n-            if (n > 0) {\n-                byte[] b1 = new byte[result.length + n];\n-                System.arraycopy(result, 0, b1, 0, result.length);\n-                System.arraycopy(buf, 0, b1, result.length, n);\n-                result = b1;\n-            } else if (n == -1) {\n-                return result;\n-            }\n-        }\n-    }\n-\n@@ -64,7 +46,8 @@\n-        if (fixedrequest != null && summary == null)  {\n-            byte[] in = read(is);\n-            t.sendResponseHeaders(200, in.length);\n-            OutputStream os = t.getResponseBody();\n-            os.write(in);\n-            close(t, os);\n-            close(t, is);\n+        OutputStream os = t.getResponseBody();\n+        byte[] in;\n+        in = is.readAllBytes();\n+        if (summary != null) {\n+            in = Integer.toString(in.length).getBytes(StandardCharsets.UTF_8);\n+        }\n+        if (fixedrequest != null) {\n+            t.sendResponseHeaders(200, in.length == 0 ? -1 : in.length);\n@@ -72,2 +55,0 @@\n-            OutputStream os = t.getResponseBody();\n-            byte[] buf = new byte[64 * 1024];\n@@ -75,14 +56,0 @@\n-            int n, count=0;;\n-\n-            while ((n = is.read(buf)) != -1) {\n-                if (summary == null) {\n-                    os.write(buf, 0, n);\n-                }\n-                count += n;\n-            }\n-            if (summary != null) {\n-                String s = Integer.toString(count);\n-                os.write(s.getBytes());\n-            }\n-            close(t, os);\n-            close(t, is);\n@@ -90,0 +57,3 @@\n+        os.write(in);\n+        close(t, os);\n+        close(t, is);\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/EchoHandler.java","additions":20,"deletions":50,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n- * @compile ..\/..\/..\/com\/sun\/net\/httpserver\/EchoHandler.java\n@@ -53,0 +52,2 @@\n+import java.net.http.HttpHeaders;\n+import java.nio.charset.StandardCharsets;\n@@ -54,0 +55,1 @@\n+import java.util.Optional;\n@@ -138,0 +140,16 @@\n+    static class HttpEchoHandler implements HttpHandler {\n+\n+        @Override\n+        public void handle(HttpExchange exchange) throws IOException {\n+            try (InputStream is = exchange.getRequestBody();\n+                 OutputStream os = exchange.getResponseBody()) {\n+                byte[] bytes = is.readAllBytes();\n+                long responseLength = bytes.length == 0 ? -1 : bytes.length;\n+                boolean fixedLength = \"yes\".equals(exchange.getRequestHeaders()\n+                        .getFirst(\"XFixed\"));\n+                exchange.sendResponseHeaders(200, fixedLength ? responseLength : 0);\n+                os.write(bytes);\n+            }\n+        }\n+    }\n+\n@@ -260,0 +278,2 @@\n+        checkResponseContentLength(response.headers(), fixedLen);\n+\n@@ -507,0 +527,2 @@\n+        checkResponseContentLength(response.headers(), fixedLen);\n+\n@@ -532,0 +554,2 @@\n+        checkResponseContentLength(response.headers(), fixedLen);\n+\n@@ -697,1 +721,1 @@\n-            throw new RuntimeException(\"Exepected Completion Exception\");\n+            throw new RuntimeException(\"Expected Completion Exception\");\n@@ -742,1 +766,1 @@\n-        HttpContext c3 = s1.createContext(\"\/echo\", new EchoHandler());\n+        HttpContext c3 = s1.createContext(\"\/echo\", new HttpEchoHandler());\n@@ -747,1 +771,1 @@\n-        HttpContext c5 = s2.createContext(\"\/echo\", new EchoHandler());\n+        HttpContext c5 = s2.createContext(\"\/echo\", new HttpEchoHandler());\n@@ -779,0 +803,13 @@\n+    static void checkResponseContentLength(HttpHeaders responseHeaders, boolean fixedLen) {\n+        Optional<String> transferEncoding = responseHeaders.firstValue(\"transfer-encoding\");\n+        Optional<String> contentLength = responseHeaders.firstValue(\"content-length\");\n+        if (fixedLen) {\n+            assert contentLength.isPresent();\n+            assert !transferEncoding.isPresent();\n+        } else {\n+            assert !contentLength.isPresent();\n+            assert transferEncoding.isPresent();\n+            assert \"chunked\".equals(transferEncoding.get());\n+        }\n+    }\n+\n@@ -789,1 +826,0 @@\n-            byte[] buf = new byte[2048];\n@@ -791,1 +827,1 @@\n-                while (is.read(buf) != -1) ;\n+                is.readAllBytes();\n@@ -1013,1 +1049,0 @@\n-        byte[] buf = new byte[2048];\n@@ -1016,1 +1051,1 @@\n-            while (is.read(buf) != -1) ;\n+            is.readAllBytes();\n@@ -1020,1 +1055,1 @@\n-        o.write(result.getBytes(\"US-ASCII\"));\n+        o.write(result.getBytes(StandardCharsets.UTF_8));\n","filename":"test\/jdk\/java\/net\/httpclient\/SmokeTest.java","additions":45,"deletions":10,"binary":false,"changes":55,"status":"modified"}]}