{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -474,1 +474,2 @@\n-static void check_and_push(context_type *context, const void *ptr, int kind);\n+static void check_and_push_malloc_block(context_type *context, void *ptr);\n+static void check_and_push_string_utf(context_type *context, const char *ptr);\n@@ -610,1 +611,1 @@\n-    check_and_push(context, name, VM_STRING_UTF);\n+    check_and_push_string_utf(context, name);\n@@ -957,1 +958,1 @@\n-    check_and_push(context, lengths, VM_MALLOC_BLK);\n+    check_and_push_malloc_block(context, lengths);\n@@ -960,1 +961,1 @@\n-    check_and_push(context, code, VM_MALLOC_BLK);\n+    check_and_push_malloc_block(context, code);\n@@ -969,1 +970,1 @@\n-            check_and_push(context, code[i], VM_MALLOC_BLK);\n+            check_and_push_malloc_block(context, code[i]);\n@@ -1323,1 +1324,1 @@\n-        check_and_push(context, methodname, VM_STRING_UTF);\n+        check_and_push_string_utf(context, methodname);\n@@ -1372,1 +1373,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -1670,1 +1671,1 @@\n-            check_and_push(context, classname, VM_STRING_UTF);\n+            check_and_push_string_utf(context, classname);\n@@ -1820,1 +1821,1 @@\n-    check_and_push(context, signature, VM_STRING_UTF);\n+    check_and_push_string_utf(context, signature);\n@@ -2063,1 +2064,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2089,1 +2090,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2389,1 +2390,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2771,1 +2772,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2793,1 +2794,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -3633,1 +3634,1 @@\n-    check_and_push(context, classname, VM_STRING_UTF);\n+    check_and_push_string_utf(context, classname);\n@@ -3831,1 +3832,2 @@\n-                length = finish - p;\n+                assert(finish >= p);\n+                length = (int)(finish - p);\n@@ -3833,2 +3835,2 @@\n-                    buffer = calloc(length + 1, sizeof(char));\n-                    check_and_push(context, buffer, VM_MALLOC_BLK);\n+                    buffer = malloc(length + 1);\n+                    check_and_push_malloc_block(context, buffer);\n@@ -4153,1 +4155,1 @@\n-static void check_and_push(context_type *context, const void *ptr, int kind)\n+static void check_and_push_common(context_type *context, void *ptr, int kind)\n@@ -4165,1 +4167,1 @@\n-            free_block((void *)ptr, kind);\n+            free_block(ptr, kind);\n@@ -4170,1 +4172,1 @@\n-    p->ptr = (void *)ptr;\n+    p->ptr = ptr;\n@@ -4175,0 +4177,8 @@\n+static void check_and_push_malloc_block(context_type *context, void *ptr) {\n+  check_and_push_common(context, ptr, VM_MALLOC_BLK);\n+}\n+\n+static void check_and_push_string_utf(context_type *context, const char *ptr) {\n+  check_and_push_common(context, (void *)ptr, VM_STRING_UTF);\n+}\n+\n","filename":"src\/java.base\/share\/native\/libverify\/check_code.c","additions":32,"deletions":22,"binary":false,"changes":54,"status":"modified"}]}