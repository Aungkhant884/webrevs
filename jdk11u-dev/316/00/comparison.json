{"files":[{"patch":"@@ -868,2 +868,0 @@\n-com\/sun\/jdi\/BasicJDWPConnectionTest.java                        8195703 generic-all\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.io.BufferedReader;\n-import java.io.InputStreamReader;\n@@ -40,1 +38,0 @@\n-import jdk.testlibrary.Utils;\n@@ -43,1 +40,2 @@\n-import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -68,2 +66,1 @@\n-    public static ArrayList<String> prepareCmd(int port, String allowOpt) {\n-         String address = \"*:\" + String.valueOf(port);\n+    public static ArrayList<String> prepareCmd(String allowOpt) {\n@@ -73,1 +70,1 @@\n-                           \"suspend=n,address=\" + address + allowOpt;\n+                           \"suspend=n,address=*:0\" + allowOpt;\n@@ -78,0 +75,10 @@\n+    private static Pattern listenRegexp = Pattern.compile(\"Listening for transport \\\\b(.+)\\\\b at address: \\\\b(\\\\d+)\\\\b\");\n+    private static int detectPort(String s) {\n+        Matcher m = listenRegexp.matcher(s);\n+        if (!m.find()) {\n+            throw new RuntimeException(\"Could not detect port from '\" + s + \"'\");\n+        }\n+        \/\/ m.group(1) is transport, m.group(2) is port\n+        return Integer.parseInt(m.group(2));\n+    }\n+\n@@ -81,2 +88,1 @@\n-        int port = Utils.getFreePort();\n-        ArrayList<String> cmd = prepareCmd(port, allowOpt);\n+        ArrayList<String> cmd = prepareCmd(allowOpt);\n@@ -85,2 +91,6 @@\n-        int res = handshake(port);\n-        a.stopApp();\n+        int res;\n+        try {\n+            res = handshake(detectPort(a.getProcessStdout()));\n+        } finally {\n+            a.stopApp();\n+        }\n@@ -96,2 +106,1 @@\n-        int port = Utils.getFreePort();\n-        ArrayList<String> cmd = prepareCmd(port, allowOpt);\n+        ArrayList<String> cmd = prepareCmd(allowOpt);\n@@ -100,2 +109,6 @@\n-        int res = handshake(port);\n-        a.stopApp();\n+        int res;\n+        try {\n+            res = handshake(detectPort(a.getProcessStdout()));\n+        } finally {\n+            a.stopApp();\n+        }\n@@ -113,2 +126,1 @@\n-        int port = Utils.getFreePort();\n-        ArrayList<String> cmd = prepareCmd(port, allowOpt);\n+        ArrayList<String> cmd = prepareCmd(allowOpt);\n@@ -116,0 +128,1 @@\n+        LingeredApp a;\n@@ -117,1 +130,1 @@\n-            LingeredApp a = LingeredApp.startApp(cmd);\n+            a = LingeredApp.startApp(cmd);\n@@ -123,0 +136,2 @@\n+        \/\/ LingeredApp.startApp is expected to fail, but if not, terminate the app\n+        a.stopApp();\n@@ -178,21 +193,11 @@\n-    public static void main(String[] args) {\n-        try {\n-            DefaultTest();\n-            ExplicitDefaultTest();\n-            AllowTest();\n-            MultiAllowTest();\n-            DenyTest();\n-            MultiDenyTest();\n-            EmptyAllowOptionTest();\n-            ExplicitMultiDefault1Test();\n-            ExplicitMultiDefault2Test();\n-            System.err.println(\"\\nTest PASSED\");\n-        } catch (InterruptedException ex) {\n-            System.err.println(\"\\nTest ERROR, getFreePort\");\n-            ex.printStackTrace();\n-            System.exit(3);\n-        } catch (IOException ex) {\n-            System.err.println(\"\\nTest ERROR\");\n-            ex.printStackTrace();\n-            System.exit(3);\n-        }\n+    public static void main(String[] args) throws Exception {\n+        DefaultTest();\n+        ExplicitDefaultTest();\n+        AllowTest();\n+        MultiAllowTest();\n+        DenyTest();\n+        MultiDenyTest();\n+        EmptyAllowOptionTest();\n+        ExplicitMultiDefault1Test();\n+        ExplicitMultiDefault2Test();\n+        System.err.println(\"\\nTest PASSED\");\n","filename":"test\/jdk\/com\/sun\/jdi\/BasicJDWPConnectionTest.java","additions":44,"deletions":39,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -45,2 +45,0 @@\n-        int port = Utils.getFreePort();\n-\n@@ -48,1 +46,1 @@\n-                         + \",server=y\" + \",suspend=n\" + \",address=*:\" + String.valueOf(port);\n+                         + \",server=y\" + \",suspend=n\" + \",address=*:0\";\n","filename":"test\/jdk\/com\/sun\/jdi\/DoubleAgentTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.io.OutputStream;\n@@ -49,1 +46,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -142,0 +138,8 @@\n+    \/**\n+     * @return the LingeredApp's output.\n+     * Can be called after the app is run.\n+     *\/\n+    public String getProcessStdout() {\n+        return stdoutBuffer.toString();\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/apps\/LingeredApp.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"}]}