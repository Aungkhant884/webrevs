{"files":[{"patch":"@@ -65,1 +65,1 @@\n-import static jdk.test.lib.KnownOIDs.*;\n+import static sun.security.util.KnownOIDs.*;\n","filename":"test\/jdk\/sun\/security\/pkcs12\/KeytoolOpensslInteropTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-import jdk.test.lib.KnownOIDs;\n@@ -26,0 +25,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -34,1 +34,0 @@\n-import static jdk.test.lib.KnownOIDs.*;\n@@ -36,0 +35,1 @@\n+import static sun.security.util.KnownOIDs.*;\n","filename":"test\/jdk\/sun\/security\/pkcs12\/ParamsPreferences.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,2 +40,2 @@\n-import jdk.test.lib.KnownOIDs;\n-import static jdk.test.lib.KnownOIDs.*;\n+import sun.security.util.KnownOIDs;\n+import static sun.security.util.KnownOIDs.*;\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/CheckCertAKID.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,513 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.test.lib;\n-\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Objects;\n-import java.util.concurrent.ConcurrentHashMap;\n-\n-\/**\n- * This utility class maps algorithm name to the corresponding oid strings.\n- * NOTE: for 100% backward compatibility, the standard name for the enum\n- * is determined by existing usage and may be in lowercase\/uppercase in\n- * order to match existing output.\n- *\/\n-public enum KnownOIDs {\n-\n-    \/\/ X.500 Attributes 2.5.4.*\n-    CommonName(\"2.5.4.3\"),\n-    Surname(\"2.5.4.4\"),\n-    SerialNumber(\"2.5.4.5\"),\n-    CountryName(\"2.5.4.6\"),\n-    LocalityName(\"2.5.4.7\"),\n-    StateName(\"2.5.4.8\"),\n-    StreetAddress(\"2.5.4.9\"),\n-    OrgName(\"2.5.4.10\"),\n-    OrgUnitName(\"2.5.4.11\"),\n-    Title(\"2.5.4.12\"),\n-    GivenName(\"2.5.4.42\"),\n-    Initials(\"2.5.4.43\"),\n-    GenerationQualifier(\"2.5.4.44\"),\n-    DNQualifier(\"2.5.4.46\"),\n-\n-    \/\/ Certificate Extension 2.5.29.*\n-    SubjectDirectoryAttributes(\"2.5.29.9\"),\n-    SubjectKeyID(\"2.5.29.14\"),\n-    KeyUsage(\"2.5.29.15\"),\n-    PrivateKeyUsage(\"2.5.29.16\"),\n-    SubjectAlternativeName(\"2.5.29.17\"),\n-    IssuerAlternativeName(\"2.5.29.18\"),\n-    BasicConstraints(\"2.5.29.19\"),\n-    CRLNumber(\"2.5.29.20\"),\n-    ReasonCode(\"2.5.29.21\"),\n-    HoldInstructionCode(\"2.5.29.23\"),\n-    InvalidityDate(\"2.5.29.24\"),\n-    DeltaCRLIndicator(\"2.5.29.27\"),\n-    IssuingDistributionPoint(\"2.5.29.28\"),\n-    CertificateIssuer(\"2.5.29.29\"),\n-    NameConstraints(\"2.5.29.30\"),\n-    CRLDistributionPoints(\"2.5.29.31\"),\n-    CertificatePolicies(\"2.5.29.32\"),\n-    CE_CERT_POLICIES_ANY(\"2.5.29.32.0\"),\n-    PolicyMappings(\"2.5.29.33\"),\n-    AuthorityKeyID(\"2.5.29.35\"),\n-    PolicyConstraints(\"2.5.29.36\"),\n-    extendedKeyUsage(\"2.5.29.37\"),\n-    anyExtendedKeyUsage(\"2.5.29.37.0\"),\n-    FreshestCRL(\"2.5.29.46\"),\n-    InhibitAnyPolicy(\"2.5.29.54\"),\n-\n-    \/\/ PKIX 1.3.6.1.5.5.7.\n-    AuthInfoAccess(\"1.3.6.1.5.5.7.1.1\"),\n-    SubjectInfoAccess(\"1.3.6.1.5.5.7.1.11\"),\n-    \/\/ key usage purposes - PKIX.3.*\n-    serverAuth(\"1.3.6.1.5.5.7.3.1\"),\n-    clientAuth(\"1.3.6.1.5.5.7.3.2\"),\n-    codeSigning(\"1.3.6.1.5.5.7.3.3\"),\n-    emailProtection(\"1.3.6.1.5.5.7.3.4\"),\n-    ipsecEndSystem(\"1.3.6.1.5.5.7.3.5\"),\n-    ipsecTunnel(\"1.3.6.1.5.5.7.3.6\"),\n-    ipsecUser(\"1.3.6.1.5.5.7.3.7\"),\n-    KP_TimeStamping(\"1.3.6.1.5.5.7.3.8\", \"timeStamping\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-    OCSPSigning(\"1.3.6.1.5.5.7.3.9\"),\n-    \/\/ access descriptors - PKIX.48.*\n-    OCSP(\"1.3.6.1.5.5.7.48.1\"),\n-    OCSPBasicResponse(\"1.3.6.1.5.5.7.48.1.1\"),\n-    OCSPNonceExt(\"1.3.6.1.5.5.7.48.1.2\"),\n-    OCSPNoCheck(\"1.3.6.1.5.5.7.48.1.5\"),\n-    caIssuers(\"1.3.6.1.5.5.7.48.2\"),\n-    AD_TimeStamping(\"1.3.6.1.5.5.7.48.3\", \"timeStamping\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-    caRepository(\"1.3.6.1.5.5.7.48.5\", \"caRepository\"),\n-\n-    \/\/ NIST --\n-    \/\/ AES 2.16.840.1.101.3.4.1.*\n-    AES(\"2.16.840.1.101.3.4.1\"),\n-    AES_128$ECB$NoPadding(\"2.16.840.1.101.3.4.1.1\", \"AES_128\/ECB\/NoPadding\"),\n-    AES_128$CBC$NoPadding(\"2.16.840.1.101.3.4.1.2\", \"AES_128\/CBC\/NoPadding\"),\n-    AES_128$OFB$NoPadding(\"2.16.840.1.101.3.4.1.3\", \"AES_128\/OFB\/NoPadding\"),\n-    AES_128$CFB$NoPadding(\"2.16.840.1.101.3.4.1.4\", \"AES_128\/CFB\/NoPadding\"),\n-    AESWRAP_128(\"2.16.840.1.101.3.4.1.5\"),\n-    AES_128$GCM$NoPadding(\"2.16.840.1.101.3.4.1.6\", \"AES_128\/GCM\/NoPadding\"),\n-    AES_192$ECB$NoPadding(\"2.16.840.1.101.3.4.1.21\", \"AES_192\/ECB\/NoPadding\"),\n-    AES_192$CBC$NoPadding(\"2.16.840.1.101.3.4.1.22\", \"AES_192\/CBC\/NoPadding\"),\n-    AES_192$OFB$NoPadding(\"2.16.840.1.101.3.4.1.23\", \"AES_192\/OFB\/NoPadding\"),\n-    AES_192$CFB$NoPadding(\"2.16.840.1.101.3.4.1.24\", \"AES_192\/CFB\/NoPadding\"),\n-    AESWRAP_192(\"2.16.840.1.101.3.4.1.25\"),\n-    AES_192$GCM$NoPadding(\"2.16.840.1.101.3.4.1.26\", \"AES_192\/GCM\/NoPadding\"),\n-    AES_256$ECB$NoPadding(\"2.16.840.1.101.3.4.1.41\", \"AES_256\/ECB\/NoPadding\"),\n-    AES_256$CBC$NoPadding(\"2.16.840.1.101.3.4.1.42\", \"AES_256\/CBC\/NoPadding\"),\n-    AES_256$OFB$NoPadding(\"2.16.840.1.101.3.4.1.43\", \"AES_256\/OFB\/NoPadding\"),\n-    AES_256$CFB$NoPadding(\"2.16.840.1.101.3.4.1.44\", \"AES_256\/CFB\/NoPadding\"),\n-    AESWRAP_256(\"2.16.840.1.101.3.4.1.45\"),\n-    AES_256$GCM$NoPadding(\"2.16.840.1.101.3.4.1.46\", \"AES_256\/GCM\/NoPadding\"),\n-\n-    \/\/ hashAlgs 2.16.840.1.101.3.4.2.*\n-    SHA_256(\"2.16.840.1.101.3.4.2.1\", \"SHA-256\", \"SHA256\"),\n-    SHA_384(\"2.16.840.1.101.3.4.2.2\", \"SHA-384\", \"SHA384\"),\n-    SHA_512(\"2.16.840.1.101.3.4.2.3\", \"SHA-512\", \"SHA512\"),\n-    SHA_224(\"2.16.840.1.101.3.4.2.4\", \"SHA-224\", \"SHA224\"),\n-    SHA_512$224(\"2.16.840.1.101.3.4.2.5\", \"SHA-512\/224\", \"SHA512\/224\"),\n-    SHA_512$256(\"2.16.840.1.101.3.4.2.6\", \"SHA-512\/256\", \"SHA512\/256\"),\n-    SHA3_224(\"2.16.840.1.101.3.4.2.7\", \"SHA3-224\"),\n-    SHA3_256(\"2.16.840.1.101.3.4.2.8\", \"SHA3-256\"),\n-    SHA3_384(\"2.16.840.1.101.3.4.2.9\", \"SHA3-384\"),\n-    SHA3_512(\"2.16.840.1.101.3.4.2.10\", \"SHA3-512\"),\n-    SHAKE128(\"2.16.840.1.101.3.4.2.11\"),\n-    SHAKE256(\"2.16.840.1.101.3.4.2.12\"),\n-    HmacSHA3_224(\"2.16.840.1.101.3.4.2.13\", \"HmacSHA3-224\"),\n-    HmacSHA3_256(\"2.16.840.1.101.3.4.2.14\", \"HmacSHA3-256\"),\n-    HmacSHA3_384(\"2.16.840.1.101.3.4.2.15\", \"HmacSHA3-384\"),\n-    HmacSHA3_512(\"2.16.840.1.101.3.4.2.16\", \"HmacSHA3-512\"),\n-    SHAKE128_LEN(\"2.16.840.1.101.3.4.2.17\", \"SHAKE128-LEN\"),\n-    SHAKE256_LEN(\"2.16.840.1.101.3.4.2.18\", \"SHAKE256-LEN\"),\n-\n-    \/\/ sigAlgs 2.16.840.1.101.3.4.3.*\n-    SHA224withDSA(\"2.16.840.1.101.3.4.3.1\"),\n-    SHA256withDSA(\"2.16.840.1.101.3.4.3.2\"),\n-    SHA384withDSA(\"2.16.840.1.101.3.4.3.3\"),\n-    SHA512withDSA(\"2.16.840.1.101.3.4.3.4\"),\n-    SHA3_224withDSA(\"2.16.840.1.101.3.4.3.5\", \"SHA3-224withDSA\"),\n-    SHA3_256withDSA(\"2.16.840.1.101.3.4.3.6\", \"SHA3-256withDSA\"),\n-    SHA3_384withDSA(\"2.16.840.1.101.3.4.3.7\", \"SHA3-384withDSA\"),\n-    SHA3_512withDSA(\"2.16.840.1.101.3.4.3.8\", \"SHA3-512withDSA\"),\n-    SHA3_224withECDSA(\"2.16.840.1.101.3.4.3.9\", \"SHA3-224withECDSA\"),\n-    SHA3_256withECDSA(\"2.16.840.1.101.3.4.3.10\", \"SHA3-256withECDSA\"),\n-    SHA3_384withECDSA(\"2.16.840.1.101.3.4.3.11\", \"SHA3-384withECDSA\"),\n-    SHA3_512withECDSA(\"2.16.840.1.101.3.4.3.12\", \"SHA3-512withECDSA\"),\n-    SHA3_224withRSA(\"2.16.840.1.101.3.4.3.13\", \"SHA3-224withRSA\"),\n-    SHA3_256withRSA(\"2.16.840.1.101.3.4.3.14\", \"SHA3-256withRSA\"),\n-    SHA3_384withRSA(\"2.16.840.1.101.3.4.3.15\", \"SHA3-384withRSA\"),\n-    SHA3_512withRSA(\"2.16.840.1.101.3.4.3.16\", \"SHA3-512withRSA\"),\n-\n-    \/\/ RSASecurity\n-    \/\/ PKCS1 1.2.840.113549.1.1.*\n-    PKCS1(\"1.2.840.113549.1.1\", \"RSA\") { \/\/ RSA KeyPairGenerator and KeyFactory\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-    RSA(\"1.2.840.113549.1.1.1\"), \/\/ RSA encryption\n-\n-    MD2withRSA(\"1.2.840.113549.1.1.2\"),\n-    MD5withRSA(\"1.2.840.113549.1.1.4\"),\n-    SHA1withRSA(\"1.2.840.113549.1.1.5\"),\n-    OAEP(\"1.2.840.113549.1.1.7\"),\n-    MGF1(\"1.2.840.113549.1.1.8\"),\n-    PSpecified(\"1.2.840.113549.1.1.9\"),\n-    RSASSA_PSS(\"1.2.840.113549.1.1.10\", \"RSASSA-PSS\", \"PSS\"),\n-    SHA256withRSA(\"1.2.840.113549.1.1.11\"),\n-    SHA384withRSA(\"1.2.840.113549.1.1.12\"),\n-    SHA512withRSA(\"1.2.840.113549.1.1.13\"),\n-    SHA224withRSA(\"1.2.840.113549.1.1.14\"),\n-    SHA512$224withRSA(\"1.2.840.113549.1.1.15\", \"SHA512\/224withRSA\"),\n-    SHA512$256withRSA(\"1.2.840.113549.1.1.16\", \"SHA512\/256withRSA\"),\n-\n-    \/\/ PKCS3 1.2.840.113549.1.3.*\n-    DiffieHellman(\"1.2.840.113549.1.3.1\", \"DiffieHellman\", \"DH\"),\n-\n-    \/\/ PKCS5 1.2.840.113549.1.5.*\n-    PBEWithMD5AndDES(\"1.2.840.113549.1.5.3\"),\n-    PBEWithMD5AndRC2(\"1.2.840.113549.1.5.6\"),\n-    PBEWithSHA1AndDES(\"1.2.840.113549.1.5.10\"),\n-    PBEWithSHA1AndRC2(\"1.2.840.113549.1.5.11\"),\n-    PBKDF2WithHmacSHA1(\"1.2.840.113549.1.5.12\"),\n-    PBES2(\"1.2.840.113549.1.5.13\"),\n-\n-    \/\/ PKCS7 1.2.840.113549.1.7.*\n-    PKCS7(\"1.2.840.113549.1.7\"),\n-    Data(\"1.2.840.113549.1.7.1\"),\n-    SignedData(\"1.2.840.113549.1.7.2\"),\n-    JDK_OLD_Data(\"1.2.840.1113549.1.7.1\"), \/\/ extra 1 in 4th component\n-    JDK_OLD_SignedData(\"1.2.840.1113549.1.7.2\"),\n-    EnvelopedData(\"1.2.840.113549.1.7.3\"),\n-    SignedAndEnvelopedData(\"1.2.840.113549.1.7.4\"),\n-    DigestedData(\"1.2.840.113549.1.7.5\"),\n-    EncryptedData(\"1.2.840.113549.1.7.6\"),\n-\n-    \/\/ PKCS9 1.2.840.113549.1.9.*\n-    EmailAddress(\"1.2.840.113549.1.9.1\"),\n-    UnstructuredName(\"1.2.840.113549.1.9.2\"),\n-    ContentType(\"1.2.840.113549.1.9.3\"),\n-    MessageDigest(\"1.2.840.113549.1.9.4\"),\n-    SigningTime(\"1.2.840.113549.1.9.5\"),\n-    CounterSignature(\"1.2.840.113549.1.9.6\"),\n-    ChallengePassword(\"1.2.840.113549.1.9.7\"),\n-    UnstructuredAddress(\"1.2.840.113549.1.9.8\"),\n-    ExtendedCertificateAttributes(\"1.2.840.113549.1.9.9\"),\n-    IssuerAndSerialNumber(\"1.2.840.113549.1.9.10\"),\n-    ExtensionRequest(\"1.2.840.113549.1.9.14\"),\n-    SMIMECapability(\"1.2.840.113549.1.9.15\"),\n-    TimeStampTokenInfo(\"1.2.840.113549.1.9.16.1.4\"),\n-    SigningCertificate(\"1.2.840.113549.1.9.16.2.12\"),\n-    SignatureTimestampToken(\"1.2.840.113549.1.9.16.2.14\"),\n-    CHACHA20_POLY1305(\"1.2.840.113549.1.9.16.3.18\", \"CHACHA20-POLY1305\"),\n-    FriendlyName(\"1.2.840.113549.1.9.20\"),\n-    LocalKeyID(\"1.2.840.113549.1.9.21\"),\n-    CertTypeX509(\"1.2.840.113549.1.9.22.1\"),\n-    CMSAlgorithmProtection(\"1.2.840.113549.1.9.52\"),\n-\n-    \/\/ PKCS12 1.2.840.113549.1.12.*\n-    PBEWithSHA1AndRC4_128(\"1.2.840.113549.1.12.1.1\"),\n-    PBEWithSHA1AndRC4_40(\"1.2.840.113549.1.12.1.2\"),\n-    PBEWithSHA1AndDESede(\"1.2.840.113549.1.12.1.3\"),\n-    PBEWithSHA1AndRC2_128(\"1.2.840.113549.1.12.1.5\"),\n-    PBEWithSHA1AndRC2_40(\"1.2.840.113549.1.12.1.6\"),\n-    PKCS8ShroudedKeyBag(\"1.2.840.113549.1.12.10.1.2\"),\n-    CertBag(\"1.2.840.113549.1.12.10.1.3\"),\n-    SecretBag(\"1.2.840.113549.1.12.10.1.5\"),\n-\n-    \/\/ digestAlgs 1.2.840.113549.2.*\n-    MD2(\"1.2.840.113549.2.2\"),\n-    MD5(\"1.2.840.113549.2.5\"),\n-    HmacSHA1(\"1.2.840.113549.2.7\"),\n-    HmacSHA224(\"1.2.840.113549.2.8\"),\n-    HmacSHA256(\"1.2.840.113549.2.9\"),\n-    HmacSHA384(\"1.2.840.113549.2.10\"),\n-    HmacSHA512(\"1.2.840.113549.2.11\"),\n-    HmacSHA512$224(\"1.2.840.113549.2.12\", \"HmacSHA512\/224\"),\n-    HmacSHA512$256(\"1.2.840.113549.2.13\", \"HmacSHA512\/256\"),\n-\n-    \/\/ encryptionAlgs 1.2.840.113549.3.*\n-    RC2$CBC$PKCS5Padding(\"1.2.840.113549.3.2\", \"RC2\/CBC\/PKCS5Padding\"),\n-    ARCFOUR(\"1.2.840.113549.3.4\", \"ARCFOUR\", \"RC4\"),\n-    DESede$CBC$NoPadding(\"1.2.840.113549.3.7\", \"DESede\/CBC\/NoPadding\"),\n-    RC5$CBC$PKCS5Padding(\"1.2.840.113549.3.9\", \"RC5\/CBC\/PKCS5Padding\"),\n-\n-    \/\/ ANSI --\n-    \/\/ X9 1.2.840.10040.4.*\n-    DSA(\"1.2.840.10040.4.1\"),\n-    SHA1withDSA(\"1.2.840.10040.4.3\", \"SHA1withDSA\", \"DSS\"),\n-    \/\/ X9.62 1.2.840.10045.*\n-    EC(\"1.2.840.10045.2.1\"),\n-\n-    \/\/c2pnb163v1(\"1.2.840.10045.3.0.1\", \"X9.62 c2pnb163v1\"),\n-    \/\/c2pnb163v2(\"1.2.840.10045.3.0.2\", \"X9.62 c2pnb163v2\"),\n-    \/\/c2pnb163v3(\"1.2.840.10045.3.0.3\", \"X9.62 c2pnb163v3\"),\n-    \/\/c2pnb176w1(\"1.2.840.10045.3.0.4\", \"X9.62 c2pnb176w1\"),\n-    c2tnb191v1(\"1.2.840.10045.3.0.5\", \"X9.62 c2tnb191v1\"),\n-    c2tnb191v2(\"1.2.840.10045.3.0.6\", \"X9.62 c2tnb191v2\"),\n-    c2tnb191v3(\"1.2.840.10045.3.0.7\", \"X9.62 c2tnb191v3\"),\n-    \/\/c2pnb208w1(\"1.2.840.10045.3.0.10\", \"X9.62 c2pnb208w1\"),\n-    c2tnb239v1(\"1.2.840.10045.3.0.11\", \"X9.62 c2tnb239v1\"),\n-    c2tnb239v2(\"1.2.840.10045.3.0.12\", \"X9.62 c2tnb239v2\"),\n-    c2tnb239v3(\"1.2.840.10045.3.0.13\", \"X9.62 c2tnb239v3\"),\n-    \/\/c2pnb272w1(\"1.2.840.10045.3.0.16\", \"X9.62 c2pnb272w1\"),\n-    \/\/c2pnb304w1(\"1.2.840.10045.3.0.17\", \"X9.62 c2pnb304w1\"),\n-    c2tnb359v1(\"1.2.840.10045.3.0.18\", \"X9.62 c2tnb359v1\"),\n-    \/\/c2pnb368w1(\"1.2.840.10045.3.0.19\", \"X9.62 c2pnb368w1\"),\n-    c2tnb431r1(\"1.2.840.10045.3.0.20\", \"X9.62 c2tnb431r1\"),\n-\n-    secp192r1(\"1.2.840.10045.3.1.1\",\n-            \"secp192r1\", \"NIST P-192\", \"X9.62 prime192v1\"),\n-    prime192v2(\"1.2.840.10045.3.1.2\", \"X9.62 prime192v2\"),\n-    prime192v3(\"1.2.840.10045.3.1.3\", \"X9.62 prime192v3\"),\n-    prime239v1(\"1.2.840.10045.3.1.4\", \"X9.62 prime239v1\"),\n-    prime239v2(\"1.2.840.10045.3.1.5\", \"X9.62 prime239v2\"),\n-    prime239v3(\"1.2.840.10045.3.1.6\", \"X9.62 prime239v3\"),\n-    secp256r1(\"1.2.840.10045.3.1.7\",\n-            \"secp256r1\", \"NIST P-256\", \"X9.62 prime256v1\"),\n-    SHA1withECDSA(\"1.2.840.10045.4.1\"),\n-    SHA224withECDSA(\"1.2.840.10045.4.3.1\"),\n-    SHA256withECDSA(\"1.2.840.10045.4.3.2\"),\n-    SHA384withECDSA(\"1.2.840.10045.4.3.3\"),\n-    SHA512withECDSA(\"1.2.840.10045.4.3.4\"),\n-    SpecifiedSHA2withECDSA(\"1.2.840.10045.4.3\"),\n-\n-    \/\/ X9.42 1.2.840.10046.2.*\n-    X942_DH(\"1.2.840.10046.2.1\", \"DiffieHellman\") { \/\/ unused by JDK providers\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-\n-    \/\/ Teletrust 1.3.36.*\n-    brainpoolP160r1(\"1.3.36.3.3.2.8.1.1.1\"),\n-    brainpoolP192r1(\"1.3.36.3.3.2.8.1.1.3\"),\n-    brainpoolP224r1(\"1.3.36.3.3.2.8.1.1.5\"),\n-    brainpoolP256r1(\"1.3.36.3.3.2.8.1.1.7\"),\n-    brainpoolP320r1(\"1.3.36.3.3.2.8.1.1.9\"),\n-    brainpoolP384r1(\"1.3.36.3.3.2.8.1.1.11\"),\n-    brainpoolP512r1(\"1.3.36.3.3.2.8.1.1.13\"),\n-\n-    \/\/ Certicom 1.3.132.*\n-    sect163k1(\"1.3.132.0.1\", \"sect163k1\", \"NIST K-163\"),\n-    sect163r1(\"1.3.132.0.2\"),\n-    sect239k1(\"1.3.132.0.3\"),\n-    sect113r1(\"1.3.132.0.4\"),\n-    sect113r2(\"1.3.132.0.5\"),\n-    secp112r1(\"1.3.132.0.6\"),\n-    secp112r2(\"1.3.132.0.7\"),\n-    secp160r1(\"1.3.132.0.8\"),\n-    secp160k1(\"1.3.132.0.9\"),\n-    secp256k1(\"1.3.132.0.10\"),\n-    sect163r2(\"1.3.132.0.15\", \"sect163r2\", \"NIST B-163\"),\n-    sect283k1(\"1.3.132.0.16\", \"sect283k1\", \"NIST K-283\"),\n-    sect283r1(\"1.3.132.0.17\", \"sect283r1\", \"NIST B-283\"),\n-\n-    sect131r1(\"1.3.132.0.22\"),\n-    sect131r2(\"1.3.132.0.23\"),\n-    sect193r1(\"1.3.132.0.24\"),\n-    sect193r2(\"1.3.132.0.25\"),\n-    sect233k1(\"1.3.132.0.26\", \"sect233k1\", \"NIST K-233\"),\n-    sect233r1(\"1.3.132.0.27\", \"sect233r1\", \"NIST B-233\"),\n-    secp128r1(\"1.3.132.0.28\"),\n-    secp128r2(\"1.3.132.0.29\"),\n-    secp160r2(\"1.3.132.0.30\"),\n-    secp192k1(\"1.3.132.0.31\"),\n-    secp224k1(\"1.3.132.0.32\"),\n-    secp224r1(\"1.3.132.0.33\", \"secp224r1\", \"NIST P-224\"),\n-    secp384r1(\"1.3.132.0.34\", \"secp384r1\", \"NIST P-384\"),\n-    secp521r1(\"1.3.132.0.35\", \"secp521r1\", \"NIST P-521\"),\n-    sect409k1(\"1.3.132.0.36\", \"sect409k1\", \"NIST K-409\"),\n-    sect409r1(\"1.3.132.0.37\", \"sect409r1\", \"NIST B-409\"),\n-    sect571k1(\"1.3.132.0.38\", \"sect571k1\", \"NIST K-571\"),\n-    sect571r1(\"1.3.132.0.39\", \"sect571r1\", \"NIST B-571\"),\n-\n-    ECDH(\"1.3.132.1.12\"),\n-\n-    \/\/ OIW secsig 1.3.14.3.*\n-    OIW_DES_CBC(\"1.3.14.3.2.7\", \"DES\/CBC\", \"DES\"),\n-\n-    OIW_DSA(\"1.3.14.3.2.12\", \"DSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-\n-    OIW_JDK_SHA1withDSA(\"1.3.14.3.2.13\", \"SHA1withDSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-\n-    OIW_SHA1withRSA_Odd(\"1.3.14.3.2.15\", \"SHA1withRSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-\n-    DESede(\"1.3.14.3.2.17\", \"DESede\"),\n-\n-    SHA_1(\"1.3.14.3.2.26\", \"SHA-1\", \"SHA\", \"SHA1\"),\n-\n-    OIW_SHA1withDSA(\"1.3.14.3.2.27\", \"SHA1withDSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-\n-    OIW_SHA1withRSA(\"1.3.14.3.2.29\", \"SHA1withRSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n-\n-    \/\/ Thawte 1.3.101.*\n-    X25519(\"1.3.101.110\"),\n-    X448(\"1.3.101.111\"),\n-    Ed25519(\"1.3.101.112\"),\n-    Ed448(\"1.3.101.113\"),\n-\n-    \/\/ University College London (UCL) 0.9.2342.19200300.*\n-    UCL_UserID(\"0.9.2342.19200300.100.1.1\"),\n-    UCL_DomainComponent(\"0.9.2342.19200300.100.1.25\"),\n-\n-    \/\/ Netscape 2.16.840.1.113730.*\n-    NETSCAPE_CertType(\"2.16.840.1.113730.1.1\"),\n-    NETSCAPE_CertSequence(\"2.16.840.1.113730.2.5\"),\n-    NETSCAPE_ExportApproved(\"2.16.840.1.113730.4.1\"),\n-\n-    \/\/ Oracle 2.16.840.1.113894.*\n-    ORACLE_TrustedKeyUsage(\"2.16.840.1.113894.746875.1.1\"),\n-\n-    \/\/ Miscellaneous oids below which are legacy, and not well known\n-    \/\/ Consider removing them in future releases when their usage\n-    \/\/ have died out\n-\n-    ITUX509_RSA(\"2.5.8.1.1\", \"RSA\") { \/\/ unused by JDK providers\n-                                      \/\/ defined in X.509 for RSA keys\n-        @Override                     \/\/ with modulus length as its parameter\n-        boolean registerNames() { return false; }\n-    },\n-\n-    SkipIPAddress(\"1.3.6.1.4.1.42.2.11.2.1\"),\n-    JAVASOFT_JDKKeyProtector(\"1.3.6.1.4.1.42.2.17.1.1\"),\n-    JAVASOFT_JCEKeyProtector(\"1.3.6.1.4.1.42.2.19.1\"),\n-    MICROSOFT_ExportApproved(\"1.3.6.1.4.1.311.10.3.3\");\n-\n-    private String stdName;\n-    private String oid;\n-    private String[] aliases;\n-\n-    \/\/ find the matching enum using either name or oid string\n-    \/\/ return null if no match found\n-    public static KnownOIDs findMatch(String s) {\n-        s = s.toUpperCase(Locale.ENGLISH);\n-        KnownOIDs res = name2enum.get(s);\n-        if (res == null && debug != null) {\n-            debug.println(\"No KnownOIDs enum found for \" + s);\n-        }\n-        return res;\n-    }\n-\n-    \/\/private static final Debug debug = Debug.getInstance(\"jca\");\n-    private static final java.io.PrintStream debug = System.out;\n-    private static final ConcurrentHashMap<String, KnownOIDs> name2enum =\n-            new ConcurrentHashMap<>();\n-\n-    static {\n-        if (debug != null) {\n-            debug.println(\"Setting up name2enum:\");\n-        }\n-        for (KnownOIDs o : KnownOIDs.values()) {\n-            register(o);\n-        };\n-    }\n-\n-    private static void register(KnownOIDs o) {\n-        KnownOIDs ov = name2enum.put(o.oid, o);\n-        if (ov != null) {\n-            throw new RuntimeException(\"ERROR: Duplicate \" + o.oid +\n-                    \" between \" + o + \" and \" + ov);\n-        } else if (debug != null) {\n-            debug.println(o.oid + \" => \" + o.name());\n-        }\n-        \/\/ only register the stdName and aliases if o.registerNames()\n-        \/\/ returns true\n-        if (o.registerNames()) {\n-            String stdNameUpper = o.stdName.toUpperCase(Locale.ENGLISH);\n-            if (Objects.nonNull(name2enum.put(stdNameUpper, o))) {\n-                throw new RuntimeException(\"ERROR: Duplicate \" +\n-                        stdNameUpper + \" exists already\");\n-            }\n-            if (debug != null) {\n-                debug.println(stdNameUpper + \" => \" + o.name());\n-            }\n-\n-            for (String a :  o.aliases) {\n-                String aliasUpper = a.toUpperCase(Locale.ENGLISH);\n-                if (Objects.nonNull(name2enum.put(aliasUpper, o))) {\n-                    throw new RuntimeException(\"ERROR: Duplicate \" +\n-                            aliasUpper + \" exists already\");\n-                }\n-                if (debug != null) {\n-                    debug.println(aliasUpper + \" => \" + o.name());\n-                }\n-            }\n-        }\n-    }\n-\n-    private KnownOIDs(String oid) {\n-        this.oid = oid;\n-        this.stdName = name(); \/\/ defaults to enum name\n-        this.aliases = new String[0];\n-    }\n-\n-    private KnownOIDs(String oid, String stdName, String ... aliases) {\n-        this.oid = oid;\n-        this.stdName = stdName;\n-        this.aliases = aliases;\n-    }\n-\n-    \/\/ returns the oid string associated with this enum\n-    public String value() {\n-        return oid;\n-    }\n-\n-    \/\/ returns the user-friendly standard algorithm name\n-    public String stdName() {\n-        return stdName;\n-    }\n-\n-    \/\/ return the internal aliases\n-    public String[] aliases() {\n-        return aliases;\n-    }\n-\n-    boolean registerNames() {\n-        return true;\n-    }\n-}\n","filename":"test\/lib\/jdk\/test\/lib\/KnownOIDs.java","additions":0,"deletions":513,"binary":false,"changes":513,"status":"deleted"},{"patch":"@@ -26,1 +26,0 @@\n-import jdk.test.lib.KnownOIDs;\n@@ -29,0 +28,1 @@\n+import sun.security.util.KnownOIDs;\n","filename":"test\/lib\/jdk\/test\/lib\/security\/DerUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}