{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,3 @@\n+import java.time.Duration;\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n@@ -48,1 +51,1 @@\n-    static boolean debug = false;\n+    static boolean debug = true; \/\/ disable debug once stability proven\n@@ -85,2 +88,1 @@\n-        uri = \"http:\/\/localhost:\" +\n-                     port + \"\/foo.html\";\n+        uri = \"http:\/\/localhost:\" + port + \"\/foo.html\";\n@@ -96,1 +98,3 @@\n-    public void run () {\n+    public void run() {\n+        long start = System.nanoTime();\n+\n@@ -111,0 +115,1 @@\n+        debug(\"client: end - \" + Duration.ofNanos(System.nanoTime() - start));\n@@ -116,0 +121,1 @@\n+        long start = System.nanoTime();\n@@ -160,0 +166,5 @@\n+        for (Thread worker : svr.workers()) {\n+            worker.join(60_000);\n+        }\n+\n+        debug(\"main thread end - \" + Duration.ofNanos(System.nanoTime() - start));\n@@ -171,0 +182,1 @@\n+        private Queue<Worker> workers = new ConcurrentLinkedQueue<>();\n@@ -176,0 +188,4 @@\n+        public Queue<Worker> workers() {\n+            return workers;\n+        }\n+\n@@ -206,0 +222,1 @@\n+                    Worker w;\n@@ -208,0 +225,2 @@\n+                        w = new Worker(s, id);\n+                        workers.add(w);\n@@ -209,2 +228,0 @@\n-\n-                    Worker w = new Worker(s, id);\n@@ -239,1 +256,1 @@\n-        static Object rlock = new Object();\n+        static final Object rlock = new Object();\n@@ -252,1 +269,1 @@\n-        int readUntil (InputStream in, char[] seq) throws IOException {\n+        int readUntil(InputStream in, char[] seq) throws IOException {\n@@ -271,0 +288,2 @@\n+            long start = System.nanoTime();\n+\n@@ -274,1 +293,1 @@\n-                InputStream in = new BufferedInputStream (s.getInputStream());\n+                InputStream in = new BufferedInputStream(s.getInputStream());\n@@ -285,1 +304,1 @@\n-                    n = readUntil (in, new char[] {'\\r','\\n', '\\r','\\n'});\n+                    n = readUntil(in, new char[] {'\\r','\\n', '\\r','\\n'});\n@@ -302,1 +321,1 @@\n-                    out.print (\"Keep-Alive: timeout=15, max=\"+max+\"\\r\\n\");\n+                    out.print(\"Keep-Alive: timeout=15, max=\"+max+\"\\r\\n\");\n@@ -304,3 +323,3 @@\n-                    out.print (\"6\\r\\nHello \\r\\n\");\n-                    out.print (\"5\\r\\nWorld\\r\\n\");\n-                    out.print (\"0\\r\\n\\r\\n\");\n+                    out.print(\"6\\r\\nHello \\r\\n\");\n+                    out.print(\"5\\r\\nWorld\\r\\n\");\n+                    out.print(\"0\\r\\n\\r\\n\");\n@@ -321,0 +340,2 @@\n+                MultiThreadTest.debug(\"worker: \" + id  + \" end - \" +\n+                            Duration.ofNanos(System.nanoTime() - start));\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/MultiThreadTest.java","additions":36,"deletions":15,"binary":false,"changes":51,"status":"modified"}]}