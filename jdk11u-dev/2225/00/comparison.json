{"files":[{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4156278\n+ * @summary Basic functional test for\n+ *          Runtime.exec(String[] command, String[] env, File path) and\n+ *          Runtime.exec(String command, String[] env, File path).\n+ *\n+ * @library \/test\/lib\n+ * @run testng\/othervm SetCwd\n+ *\/\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.Test;\n+\n+import java.io.*;\n+\n+import static jdk.test.lib.Asserts.assertTrue;\n+\n+public class SetCwd {\n+\n+    private static final String TEST_CLASSES = System.getProperty(\n+            \"test.classes\", \".\");\n+\n+    private static final String[] CMD_ARRAY = new String[2];\n+\n+    @BeforeTest\n+    public static void setUp() throws Exception {\n+        CMD_ARRAY[0] = System.getProperty(\"java.home\") + File.separator +\n+                \"bin\" + File.separator + \"java\";\n+        CMD_ARRAY[1] = SimpleProcess.class.getName();\n+    }\n+\n+    @Test\n+    public void testRuntimeExecWithArray() throws Exception {\n+        Process process = Runtime.getRuntime().exec(CMD_ARRAY, null,\n+                new File(TEST_CLASSES));\n+        verifyProcessOutput(process);\n+    }\n+\n+    @Test\n+    public void testRuntimeExecWithString() throws Exception {\n+        String cmd = String.join(\" \", CMD_ARRAY);\n+        Process process = Runtime.getRuntime().exec(cmd, null,\n+                new File(TEST_CLASSES));\n+        verifyProcessOutput(process);\n+    }\n+\n+    \/\/ Verify the process has executed by comparing its output with the expected\n+    private void verifyProcessOutput(Process process) throws Exception {\n+        process.waitFor();\n+        assertTrue(process.exitValue() == 0);\n+\n+        try (BufferedReader reader = new BufferedReader(\n+                new InputStreamReader(process.getInputStream()))) {\n+            String line = reader.readLine();\n+            if (!line.startsWith(TEST_CLASSES)) {\n+                String error = String.format(\"Expected process output first line: \" +\n+                        \"'%s' Actual: '%s'\", TEST_CLASSES, line);\n+                throw new Exception(error);\n+            }\n+        }\n+    }\n+\n+    \/\/ This class main will be the entry point for test subprocesses\n+    static class SimpleProcess {\n+        public static void main (String[] args) throws Exception {\n+            File dir = new File(\".\");\n+            System.out.println(dir.getCanonicalPath());\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/exec\/SetCwd.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6829503\n+ * @summary  1) Test Console and DeleteOnExitHook can be initialized\n+ *              while shutdown is in progress\n+ *           2) Test if files that are added by the application shutdown\n+ *              hook are deleted on exit during shutdown\n+ * @library \/test\/lib\n+ * @run testng\/othervm ShutdownHooks\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.Test;\n+\n+import java.io.*;\n+import java.nio.file.Files;\n+\n+import static jdk.test.lib.Asserts.assertFalse;\n+\n+public class ShutdownHooks {\n+\n+    private static final String TEST_FILE_NAME = \"fileToBeDeleted\";\n+\n+    private static final File TEST_FILE = new File(TEST_FILE_NAME);\n+\n+    private static final String TEST_CLASSES = System.getProperty(\n+            \"test.classes\", \".\");\n+\n+    @BeforeTest\n+    public static void setUp() throws Exception {\n+        \/\/ Make sure file does not exist before test\n+        Files.deleteIfExists(TEST_FILE.toPath());\n+    }\n+\n+    @Test\n+    public void testShutdownHooks() throws Exception {\n+        \/\/ Run in a new process in order to evaluate shutdown hook results\n+        String[] testCommand = new String[] {\"-classpath\", TEST_CLASSES,\n+                ShutdownHooksProcess.class.getName()};\n+        ProcessTools.executeTestJvm(testCommand).shouldHaveExitValue(0);\n+\n+        String errorMsg = \"File exists despite shutdown hook has been run\";\n+        assertFalse(Files.exists(TEST_FILE.toPath()), errorMsg);\n+    }\n+\n+    \/\/ This class main will be the entry point for test subprocesses\n+    static class ShutdownHooksProcess {\n+        public static void main(String[] args) throws Exception {\n+            Runtime.getRuntime().addShutdownHook(new Cleaner());\n+\n+            System.out.println(\"Writing to \"+ TEST_FILE);\n+            try (PrintWriter pw = new PrintWriter(TEST_FILE)) {\n+                pw.println(\"Shutdown begins\");\n+            }\n+        }\n+\n+        static class Cleaner extends Thread {\n+            public void run() {\n+                \/\/ register the Console's shutdown hook while the application\n+                \/\/ shutdown hook is running\n+                Console cons = System.console();\n+                \/\/ register the DeleteOnExitHook while the application\n+                \/\/ shutdown hook is running\n+                TEST_FILE.deleteOnExit();\n+                try (PrintWriter pw = new PrintWriter(TEST_FILE)) {\n+                    pw.println(\"File is being deleted\");\n+                } catch (FileNotFoundException e) {\n+                    throw new RuntimeException(e);\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/shutdown\/ShutdownHooks.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"}]}