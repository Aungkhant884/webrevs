{"files":[{"patch":"@@ -416,1 +416,2 @@\n-  if (best->in(0) == not_null_block->head()) {\n+  Node* ctrl = best->in(0);\n+  if (get_block_for_node(ctrl) == not_null_block) {\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.c2;\n+\n+\/**\n+ * @test\n+ * @bug 8266480\n+ * @summary Check correct re-wiring of control edge when hoisting a memory\n+ *          operation for an implicit null check.\n+ * @run main\/othervm -Xbatch\n+ *                   compiler.c2.TestImplicitNullCheckDominance\n+ *\/\n+public class TestImplicitNullCheckDominance {\n+\n+    double dFld;\n+    int iFld;\n+\n+    static void test1(TestImplicitNullCheckDominance t, double d) {\n+        for (int i = 0; i < 100; i++) {\n+            t.dFld = d % 42;\n+            t.iFld = 43;\n+        }\n+    }\n+\n+    static void test2(TestImplicitNullCheckDominance t) {\n+        for (int i = 0; i < 10; i++) {\n+            for (int j = 0; j < 100; j++) {\n+               t.dFld %= 42;\n+               t.iFld = 43;\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        TestImplicitNullCheckDominance t = new TestImplicitNullCheckDominance();\n+        for (int i = 0; i < 50_000; ++i) {\n+            test1(t, i);\n+            test2(t);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestImplicitNullCheckDominance.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"}]}