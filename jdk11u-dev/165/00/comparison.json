{"files":[{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.JDKToolFinder;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.compiler.CompilerUtils;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import static jdk.test.lib.Utils.TEST_SRC;\n+\n+\/*\n+ * @test\n+ * @summary Test of JNDI factories using classes exported by third-party modules.\n+ * @library \/test\/lib\n+ * @modules jdk.compiler\n+ * @run main RunBasic\n+ *\/\n+\n+\/*\n+ * Demonstrates Java object storage\/retrieval, LDAP control and URL context\n+ * usage using an LDAP directory. The objects and their associated object\n+ * factories, state factories, control factories and URL context factories\n+ * are exported from third-party modules.\n+ *\n+ * Seven types of object are used:\n+ *   - an AWT object (Serializable) from the 'java.desktop' JDK module\n+ *   - a Person object (DirContext) from the 'person' third-party module\n+ *   - a Fruit object (Referenceable) from the 'fruit' third-party module\n+ *   - an RMI object (Remote) from the 'hello' third-party module\n+ *   - an LDAP request control (Control) from the 'foo' third-party module\n+ *   - an LDAP response control (Control) from the 'authz' third-party module\n+ *   - an ldapv4 URL (DirContext) from the 'ldapv4' third-party module\n+ *\/\n+\n+public class RunBasic {\n+\n+    private static final List<String> JAVA_CMDS;\n+\n+    static {\n+        String javaPath = JDKToolFinder.getJDKTool(\"java\");\n+\n+        JAVA_CMDS = Stream\n+                .concat(Stream.of(javaPath), Stream.of(Utils.getTestJavaOpts()))\n+                .collect(Collectors.collectingAndThen(Collectors.toList(),\n+                        Collections::unmodifiableList));\n+    }\n+\n+    public static void main(String[] args) throws Throwable {\n+        \/\/ prepare all test modules\n+        prepareModule(\"person\");\n+        prepareModule(\"fruit\");\n+        prepareModule(\"hello\");\n+        prepareModule(\"foo\");\n+        prepareModule(\"authz\");\n+        prepareModule(\"ldapv4\");\n+        prepareModule(\"test\", \"--module-source-path\",\n+                Path.of(TEST_SRC, \"src\").toString());\n+\n+        \/\/ run tests\n+        runTest(\"java.desktop\", \"test.StoreObject\");\n+        runTest(\"person\", \"test.StorePerson\");\n+        runTest(\"fruit\", \"test.StoreFruit\");\n+        runTest(\"hello\", \"test.StoreRemote\");\n+        runTest(\"foo\", \"test.ConnectWithFoo\");\n+        runTest(\"authz\", \"test.ConnectWithAuthzId\");\n+        runTest(\"ldapv4\", \"test.ReadByUrl\");\n+    }\n+\n+    private static void prepareModule(String mod, String... opts)\n+            throws IOException {\n+        System.out.println(\"Preparing the '\" + mod + \"' module...\");\n+        makeDir(\"mods\", mod);\n+        CompilerUtils.compile(Path.of(TEST_SRC, \"src\", mod),\n+                Path.of(\"mods\", (mod.equals(\"test\") ? \"\" : mod)), opts);\n+    }\n+\n+    private static void makeDir(String first, String... more)\n+            throws IOException {\n+        Files.createDirectories(Path.of(first, more));\n+    }\n+\n+    private static void runTest(String desc, String clsName) throws Throwable {\n+        System.out.println(\"Running with the '\" + desc + \"' module...\");\n+        runJava(\"-Dtest.src=\" + TEST_SRC, \"-p\", \"mods\", \"-m\", \"test\/\" + clsName,\n+                \"ldap:\/\/localhost\/dc=ie,dc=oracle,dc=com\");\n+    }\n+\n+    private static void runJava(String... opts) throws Throwable {\n+        ProcessTools.executeCommand(\n+                Stream.of(JAVA_CMDS, List.of(opts)).flatMap(Collection::stream)\n+                        .toArray(String[]::new)).shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/javax\/naming\/module\/RunBasic.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -1,104 +0,0 @@\n-#\n-# Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @summary Test of JNDI factories using classes exported by third-party modules.\n-\n-# Demonstrates Java object storage\/retrieval, LDAP control and URL context\n-# usage using an LDAP directory. The objects and their associated object\n-# factories, state factories, control factories and URL context factories\n-# are exported from third-party modules.\n-#\n-# Seven types of object are used:\n-#   - an AWT object (Serializable) from the 'java.desktop' JDK module\n-#   - a Person object (DirContext) from the 'person' third-party module\n-#   - a Fruit object (Referenceable) from the 'fruit' third-party module\n-#   - an RMI object (Remote) from the 'hello' third-party module\n-#   - an LDAP request control (Control) from the 'foo' third-party module\n-#   - an LDAP response control (Control) from the 'authz' third-party module\n-#   - an ldapv4 URL (DirContext) from the 'ldapv4' third-party module\n-#\n-\n-set -e\n-\n-if [ -z \"$TESTJAVA\" ]; then\n-  if [ $# -lt 1 ]; then exit 1; fi\n-  TESTJAVA=\"$1\"; shift\n-  COMPILEJAVA=\"${TESTJAVA}\"\n-  TESTSRC=\"`pwd`\"\n-  TESTCLASSES=\"`pwd`\"\n-fi\n-\n-JAVAC=\"$COMPILEJAVA\/bin\/javac\"\n-JAVA=\"$TESTJAVA\/bin\/java\"\n-\n-echo \"\\nPreparing the 'person' module...\"\n-mkdir -p mods\/person\n-$JAVAC -d mods\/person `find $TESTSRC\/src\/person -name \"*.java\"`\n-\n-echo \"\\nPreparing the 'fruit' module...\"\n-mkdir -p mods\/fruit\n-$JAVAC -d mods\/fruit `find $TESTSRC\/src\/fruit -name \"*.java\"`\n-\n-echo \"\\nPreparing the 'hello' module...\"\n-mkdir -p mods\/hello\n-$JAVAC -d mods\/hello `find $TESTSRC\/src\/hello -name \"*.java\"`\n-\n-echo \"\\nPreparing the 'foo' module...\"\n-mkdir -p mods\/foo\n-$JAVAC -d mods\/foo `find $TESTSRC\/src\/foo -name \"*.java\"`\n-\n-echo \"\\nPreparing the 'authz' module...\"\n-mkdir -p mods\/authz\n-$JAVAC -d mods\/authz `find $TESTSRC\/src\/authz -name \"*.java\"`\n-\n-echo \"\\nPreparing the 'ldapv4' module...\"\n-mkdir -p mods\/ldapv4\n-$JAVAC -d mods\/ldapv4 `find $TESTSRC\/src\/ldapv4 -name \"*.java\"`\n-\n-echo \"\\nPreparing the 'test' module...\"\n-mkdir -p mods\/test\n-$JAVAC -d mods --module-source-path $TESTSRC\/src `find $TESTSRC\/src\/test -name \"*.java\"`\n-\n-\n-echo \"\\nRunning with the 'java.desktop' module...\"\n-$JAVA -Dtest.src=${TESTSRC} -p mods -m test\/test.StoreObject ldap:\/\/localhost\/dc=ie,dc=oracle,dc=com\n-\n-echo \"\\nRunning with the 'person' module...\"\n-$JAVA -Dtest.src=${TESTSRC} -p mods -m test\/test.StorePerson ldap:\/\/localhost\/dc=ie,dc=oracle,dc=com\n-\n-echo \"\\nRunning with the 'fruit' module...\"\n-$JAVA -Dtest.src=${TESTSRC} -p mods -m test\/test.StoreFruit ldap:\/\/localhost\/dc=ie,dc=oracle,dc=com\n-\n-echo \"\\nRunning with the 'hello' module...\"\n-$JAVA -Dtest.src=${TESTSRC} -p mods -m test\/test.StoreRemote ldap:\/\/localhost\/dc=ie,dc=oracle,dc=com\n-\n-echo \"\\nRunning with the 'foo' module...\"\n-$JAVA -Dtest.src=${TESTSRC} -p mods -m test\/test.ConnectWithFoo ldap:\/\/localhost\/dc=ie,dc=oracle,dc=com\n-\n-echo \"\\nRunning with the 'authz' module...\"\n-$JAVA -Dtest.src=${TESTSRC} -p mods -m test\/test.ConnectWithAuthzId ldap:\/\/localhost\/dc=ie,dc=oracle,dc=com\n-\n-echo \"\\nRunning with the 'ldapv4' module...\"\n-$JAVA -Dtest.src=${TESTSRC} -p mods -m test\/test.ReadByUrl ldap:\/\/localhost\/dc=ie,dc=oracle,dc=com\n-\n","filename":"test\/jdk\/javax\/naming\/module\/basic.sh","additions":0,"deletions":104,"binary":false,"changes":104,"status":"deleted"}]}