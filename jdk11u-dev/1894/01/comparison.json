{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,2 +154,2 @@\n-            CLDRLocaleProviderAdapter clpa = (CLDRLocaleProviderAdapter)LocaleProviderAdapter.forType(Type.CLDR);\n-            var cands = clpa.getCandidateLocales(\"\", locale);\n+            var cands = ((CLDRLocaleProviderAdapter)LocaleProviderAdapter.forType(Type.CLDR))\n+                    .getCandidateLocales(\"\", locale);\n@@ -165,5 +165,0 @@\n-        \/\/ Region Fallback\n-        if (regionFormatFallback(names, index, locale)) {\n-            return;\n-        }\n-\n@@ -188,0 +183,5 @@\n+        \/\/ Region Fallback\n+        if (regionFormatFallback(names, index, locale)) {\n+            return;\n+        }\n+\n@@ -233,0 +233,5 @@\n+        if (index % 2 == 0) {\n+            \/\/ ignore short names\n+            return false;\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/util\/cldr\/CLDRTimeZoneNameProviderImpl.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n- * @bug 8081022 8151876 8166875 8189784 8206980\n+ * @bug 8081022 8151876 8166875 8189784 8206980 8278434\n@@ -62,0 +62,5 @@\n+    private static final Locale[] SAMPLE_LOCALES = {\n+        Locale.US, Locale.UK, Locale.FRANCE, Locale.GERMANY, Locale.ITALY, Locale.forLanguageTag(\"es\"),\n+        Locale.forLanguageTag(\"pt-BR\"), Locale.forLanguageTag(\"ru\"),\n+        Locale.CHINA, Locale.TAIWAN, Locale.JAPAN, Locale.KOREA, Locale.ROOT};\n+\n@@ -71,1 +76,0 @@\n-        Locale[] locales = Locale.getAvailableLocales();\n@@ -86,1 +90,1 @@\n-                for (Locale locale : locales) {\n+                for (Locale locale : SAMPLE_LOCALES) {\n@@ -119,1 +123,0 @@\n-        Locale[] locales = new Locale[] { Locale.ENGLISH, Locale.JAPANESE, Locale.FRENCH };\n@@ -121,1 +124,1 @@\n-        for (Locale locale : locales) {\n+        for (Locale locale : SAMPLE_LOCALES) {\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestZoneTextPrinterParser.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.java.text;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+\n+import java.text.DateFormatSymbols;\n+import java.util.Locale;\n+\n+@BenchmarkMode(Mode.SingleShotTime)\n+@State(Scope.Thread)\n+public class ZoneStrings {\n+\n+    @Benchmark\n+    public void testZoneStrings() {\n+        for (Locale l : Locale.getAvailableLocales()) {\n+            new DateFormatSymbols(l).getZoneStrings();\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/text\/ZoneStrings.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"}]}