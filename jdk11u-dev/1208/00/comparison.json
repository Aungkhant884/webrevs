{"files":[{"patch":"@@ -382,0 +382,1 @@\n+                tree.packge.sourcefile = tree.sourcefile;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Enter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+import com.sun.tools.javac.code.Symbol.TypeSymbol;\n@@ -720,1 +721,1 @@\n-                              (existing != null && initialInputs.contains(existing.sourcefile));\n+                              containedInInitialInputs(typename);\n@@ -734,0 +735,16 @@\n+    private boolean containedInInitialInputs(String typename) {\n+        \/\/ Name could be a type name or the name of a package-info file\n+        JavaFileObject sourceFile = null;\n+\n+        ClassSymbol existingClass = elementUtils.getTypeElement(typename);\n+        if (existingClass != null) {\n+            sourceFile = existingClass.sourcefile;\n+        } else if (typename.endsWith(\".package-info\")) {\n+            String targetName = typename.substring(0, typename.length() - \".package-info\".length());\n+            PackageSymbol existingPackage = elementUtils.getPackageElement(targetName);\n+            if (existingPackage != null)\n+                sourceFile = existingPackage.sourcefile;\n+        }\n+        return (sourceFile == null) ? false : initialInputs.contains(sourceFile);\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacFiler.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6380018 6392177 6993311\n+ * @bug 6380018 6392177 6993311 8193462\n@@ -38,1 +38,0 @@\n-import java.util.HashSet;\n@@ -64,2 +63,2 @@\n-        Set<TypeElement> expectedAnnotations = new HashSet<TypeElement>();\n-        expectedAnnotations.add(eltUtils.getTypeElement(\"java.lang.Deprecated\"));\n+        Set<TypeElement> expectedAnnotations =\n+            Set.of(eltUtils.getTypeElement(\"java.lang.Deprecated\"));\n@@ -94,4 +93,5 @@\n-                    PrintWriter pw = new PrintWriter(filer.createSourceFile(\"foo.package-info\").openWriter());\n-                    pw.println(\"@Deprecated\");\n-                    pw.println(\"package foo;\");\n-                    pw.close();\n+                    try(PrintWriter pw =\n+                        new PrintWriter(filer.createSourceFile(\"foo.package-info\").openWriter())) {\n+                        pw.println(\"@Deprecated\");\n+                        pw.println(\"package foo;\");\n+                    }\n@@ -99,0 +99,3 @@\n+                    attemptReopening(\"foo.package-info\");\n+                    attemptReopening(\"TestPackageInfo\");      \/\/ Initial input\n+                    attemptReopening(\"foo.bar.package-info\"); \/\/ Initial input\n@@ -106,3 +109,1 @@\n-\n-                Set<Element> expectedElement = new HashSet<Element>();\n-                expectedElement.add(eltUtils.getPackageElement(\"foo\"));\n+                Set<Element> expectedElement = Set.of(eltUtils.getPackageElement(\"foo\"));\n@@ -116,0 +117,2 @@\n+                attemptReopening(\"foo.package-info\");\n+\n@@ -124,0 +127,22 @@\n+\n+    private void attemptReopening(String name) {\n+        final String SHOULD_NOT_REACH = \"Should not reach: created \";\n+        try {\n+            try {\n+                filer.createSourceFile(name);\n+                throw new AssertionError(SHOULD_NOT_REACH + name + \".java\");\n+            } catch (FilerException fe) {\n+                ; \/\/ Expected\n+            }\n+\n+            try {\n+                filer.createClassFile(name);\n+                throw new AssertionError(SHOULD_NOT_REACH + name + \".class\");\n+            } catch (FilerException fe) {\n+                ; \/\/ Expected\n+            }\n+        } catch (IOException ioe) {\n+            throw new RuntimeException(ioe);\n+        }\n+\n+    }\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestPackageInfo.java","additions":37,"deletions":12,"binary":false,"changes":49,"status":"modified"}]}