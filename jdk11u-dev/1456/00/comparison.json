{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,3 @@\n- * @run driver jdk.test.lib.FileInstaller . .\n- * @run main\/othervm -XX:-UseGCOverheadLimit gc.gctests.LoadUnloadGC2.LoadUnloadGC2\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI gc.gctests.LoadUnloadGC2.LoadUnloadGC2\n@@ -40,0 +41,1 @@\n+import sun.hotspot.WhiteBox;\n@@ -48,0 +50,1 @@\n+        private static int CYCLE = 1000;\n@@ -51,0 +54,1 @@\n+                int iteration = 0;\n@@ -52,0 +56,1 @@\n+                        GarbageProducer garbageProducer = new GeneratedClassProducer();\n@@ -53,4 +58,10 @@\n-                                GarbageProducer garbageProducer = new GeneratedClassProducer();\n-                                log.info(\"Iteration: \" + stresser.getIteration());\n-                                GarbageUtils.eatMemory(stresser, garbageProducer, 0);\n-                                garbageProducer = null;\n+                                garbageProducer.create(512L);\n+                                if(iteration++ > CYCLE) {\n+                                    \/\/ Unload once every cycle.\n+                                    iteration = 0;\n+                                    garbageProducer = null;\n+                                    \/\/ Perform GC so that\n+                                    \/\/ class gets unloaded\n+                                    WhiteBox.getWhiteBox().fullGC();\n+                                    garbageProducer = new GeneratedClassProducer();\n+                               }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/LoadUnloadGC2\/LoadUnloadGC2.java","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"}]}