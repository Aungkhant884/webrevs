{"files":[{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -78,2 +65,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -188,1 +174,0 @@\n-#ifdef __cplusplus\n@@ -190,1 +175,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Allocate\/alloc001\/alloc001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -97,3 +97,4 @@\n-            NSK_DISPLAY1(\"ClassLoad event received for the class \\\"%s\\\"\\n\\\n-\\tsetting breakpoints ...\\n\",\n-                         sig);\n+            NSK_DISPLAY1(\n+                \"ClassLoad event received for the class \\\"%s\\\"\\n\"\n+                \"\\tsetting breakpoints ...\\n\",\n+                sig);\n@@ -129,2 +130,3 @@\n-        NSK_COMPLAIN2(\"TEST FAILED: Breakpoint event with unexpected thread info:\\n\\\n-\\tname: \\\"%s\\\"\\ttype: %s thread\\n\\n\",\n+        NSK_COMPLAIN2(\n+            \"TEST FAILED: Breakpoint event with unexpected thread info:\\n\"\n+            \"\\tname: \\\"%s\\\"\\ttype: %s thread\\n\\n\",\n@@ -164,3 +166,4 @@\n-        NSK_COMPLAIN1(\"TEST FAILED: Breakpoint event with unexpected class signature:\\n\\\n-\\t\\\"%s\\\"\\n\\n\",\n-            (clsSig == NULL)?\"NULL\":clsSig);\n+        NSK_COMPLAIN1(\n+            \"TEST FAILED: Breakpoint event with unexpected class signature:\\n\"\n+            \"\\t\\\"%s\\\"\\n\\n\",\n+            (clsSig == NULL) ? \"NULL\" : clsSig);\n@@ -223,2 +226,4 @@\n-            NSK_COMPLAIN3(\"TEST FAILED: wrong number of Breakpoint events\\n\\\n-\\tfor the method \\\"%s %s\\\":\\n\\t\\tgot: %d\\texpected: 1\\n\",\n+            NSK_COMPLAIN3(\n+                \"TEST FAILED: wrong number of Breakpoint events\\n\"\n+                \"\\tfor the method \\\"%s %s\\\":\\n\"\n+                \"\\t\\tgot: %d\\texpected: 1\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Breakpoint\/breakpoint001\/breakpoint001.cpp","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -136,2 +136,3 @@\n-        NSK_COMPLAIN1(\"TEST FAILED: JVMTI_EVENT_CLASS_LOAD event received for\\n\\\n-\\t a primitive class\/array of primitive types with the signature \\\"%s\\\"\\n\",\n+        NSK_COMPLAIN1(\n+            \"TEST FAILED: JVMTI_EVENT_CLASS_LOAD event received for\\n\"\n+            \"\\t a primitive class\/array of primitive types with the signature \\\"%s\\\"\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassLoad\/classload001\/classload001.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -260,2 +247,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -336,1 +322,0 @@\n-#ifdef __cplusplus\n@@ -338,1 +323,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassPrepare\/classprep001\/classprep001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -82,2 +69,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -134,2 +120,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"trial\", \"(I)I\");\n+    mid = env->GetStaticMethodID(cls, \"trial\", \"(I)I\");\n@@ -216,1 +201,0 @@\n-#ifdef __cplusplus\n@@ -218,1 +202,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk001\/clrbrk001.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -124,2 +110,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"([Ljava\/lang\/String;Ljava\/io\/PrintStream;)I\");\n+    mid = env->GetStaticMethodID(cls, \"run\", \"([Ljava\/lang\/String;Ljava\/io\/PrintStream;)I\");\n@@ -161,1 +146,0 @@\n-#ifdef __cplusplus\n@@ -163,1 +147,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk002\/clrbrk002.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -122,2 +108,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    mid = env->GetStaticMethodID(cls, \"checkPoint\", \"()V\");\n@@ -156,1 +141,0 @@\n-#ifdef __cplusplus\n@@ -158,1 +142,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearBreakpoint\/clrbrk005\/clrbrk005.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -77,1 +64,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, fld.klass));\n+    cls = env->FindClass(fld.klass);\n@@ -80,2 +67,1 @@\n-            fields[ind].fid = JNI_ENV_PTR(env)->\n-                    GetStaticFieldID(JNI_ENV_ARG(env, cls), fld.name, fld.sig);\n+            fields[ind].fid = env->GetStaticFieldID(cls, fld.name, fld.sig);\n@@ -83,2 +69,1 @@\n-            fields[ind].fid = JNI_ENV_PTR(env)->\n-                    GetFieldID(JNI_ENV_ARG(env, cls), fld.name, fld.sig);\n+            fields[ind].fid = env->GetFieldID(cls, fld.name, fld.sig);\n@@ -126,2 +111,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -194,1 +178,1 @@\n-    val = JNI_ENV_PTR(env)->GetIntField(JNI_ENV_ARG(env, obj), fields[0].fid);\n+    val = env->GetIntField(obj, fields[0].fid);\n@@ -219,1 +203,0 @@\n-#ifdef __cplusplus\n@@ -221,1 +204,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw001\/clrfldw001.cpp","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -74,2 +61,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -131,4 +117,2 @@\n-    fid1 = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-        \"fld1\", \"I\");\n-    fid2 = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-        \"fld2\", \"I\");\n+    fid1 = env->GetStaticFieldID(cls, \"fld1\", \"I\");\n+    fid2 = env->GetStaticFieldID(cls, \"fld2\", \"I\");\n@@ -172,1 +156,0 @@\n-#ifdef __cplusplus\n@@ -174,1 +157,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldAccessWatch\/clrfldw002\/clrfldw002.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -77,1 +64,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, fld.klass));\n+    cls = env->FindClass(fld.klass);\n@@ -80,2 +67,1 @@\n-            fields[ind].fid = JNI_ENV_PTR(env)->\n-                GetStaticFieldID(JNI_ENV_ARG(env, cls), fld.name, fld.sig);\n+            fields[ind].fid = env->GetStaticFieldID(cls, fld.name, fld.sig);\n@@ -83,2 +69,1 @@\n-            fields[ind].fid = JNI_ENV_PTR(env)->\n-                GetFieldID(JNI_ENV_ARG(env, cls), fld.name, fld.sig);\n+            fields[ind].fid = env->GetFieldID(cls, fld.name, fld.sig);\n@@ -126,2 +111,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -188,1 +172,1 @@\n-    JNI_ENV_PTR(env)->SetIntField(JNI_ENV_ARG(env, obj), fields[0].fid, 2000);\n+    env->SetIntField(obj, fields[0].fid, 2000);\n@@ -211,1 +195,0 @@\n-#ifdef __cplusplus\n@@ -213,1 +196,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw001\/clrfmodw001.cpp","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -75,2 +62,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -132,4 +118,2 @@\n-    fid1 = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-        \"fld1\", \"I\");\n-    fid2 = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-        \"fld2\", \"I\");\n+    fid1 = env->GetStaticFieldID(cls, \"fld1\", \"I\");\n+    fid2 = env->GetStaticFieldID(cls, \"fld2\", \"I\");\n@@ -175,1 +159,0 @@\n-#ifdef __cplusplus\n@@ -177,1 +160,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClearFieldModificationWatch\/clrfmodw002\/clrfmodw002.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -99,2 +86,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -129,1 +115,0 @@\n-#ifdef __cplusplus\n@@ -131,1 +116,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CreateRawMonitor\/crrawmon001\/crrawmon001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -114,1 +100,0 @@\n-#ifdef __cplusplus\n@@ -116,1 +101,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/CreateRawMonitor\/crrawmon002\/crrawmon002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -106,1 +92,0 @@\n-#ifdef __cplusplus\n@@ -108,1 +93,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Deallocate\/dealloc001\/dealloc001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -112,2 +99,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -142,1 +128,0 @@\n-#ifdef __cplusplus\n@@ -144,1 +129,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon001\/drrawmon001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -127,1 +113,0 @@\n-#ifdef __cplusplus\n@@ -129,1 +114,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon003\/drrawmon003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -108,1 +94,0 @@\n-#ifdef __cplusplus\n@@ -110,1 +95,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/DestroyRawMonitor\/drrawmon004\/drrawmon004.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -105,1 +92,1 @@\n-    cls = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG((JNIEnv *)env, exception));\n+    cls = env->GetObjectClass(exception);\n@@ -207,2 +194,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -266,2 +252,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/Exception\/exception001c\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/Exception\/exception001c\");\n@@ -272,2 +257,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/Exception\/exception001b\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/Exception\/exception001b\");\n@@ -278,2 +262,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/Exception\/exception001a\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/Exception\/exception001a\");\n@@ -284,2 +267,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clz),\n-        \"run\", \"()V\");\n+    mid = env->GetStaticMethodID(clz, \"run\", \"()V\");\n@@ -307,1 +289,1 @@\n-    JNI_ENV_PTR(env)->CallStaticVoidMethod(JNI_ENV_ARG(env, clz), mid);\n+    env->CallStaticVoidMethod(clz, mid);\n@@ -325,1 +307,0 @@\n-#ifdef __cplusplus\n@@ -327,1 +308,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Exception\/exception001\/exception001.cpp","additions":7,"deletions":27,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -93,1 +80,1 @@\n-    cls = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG((JNIEnv *)env, exception));\n+    cls = env->GetObjectClass(exception);\n@@ -166,2 +153,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -224,2 +210,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/ExceptionCatch\/excatch001c\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/ExceptionCatch\/excatch001c\");\n@@ -230,2 +215,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/ExceptionCatch\/excatch001b\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/ExceptionCatch\/excatch001b\");\n@@ -236,2 +220,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/ExceptionCatch\/excatch001a\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/ExceptionCatch\/excatch001a\");\n@@ -242,2 +225,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clz),\n-        \"run\", \"()V\");\n+    mid = env->GetStaticMethodID(clz, \"run\", \"()V\");\n@@ -259,1 +241,1 @@\n-    JNI_ENV_PTR(env)->CallStaticVoidMethod(JNI_ENV_ARG(env, clz), mid);\n+    env->CallStaticVoidMethod(clz, mid);\n@@ -277,1 +259,0 @@\n-#ifdef __cplusplus\n@@ -279,1 +260,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ExceptionCatch\/excatch001\/excatch001.cpp","additions":7,"deletions":27,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -261,2 +248,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -326,2 +312,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/FieldAccess\/fieldacc001a\"));\n+    cls = env->FindClass(\"nsk\/jvmti\/FieldAccess\/fieldacc001a\");\n@@ -335,2 +320,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetStaticFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetStaticFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -338,2 +323,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -370,1 +355,0 @@\n-#ifdef __cplusplus\n@@ -372,1 +356,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/FieldAccess\/fieldacc001\/fieldacc001.cpp","additions":6,"deletions":23,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -260,2 +247,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -324,2 +310,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/FieldAccess\/fieldacc002a\"));\n+    cls = env->FindClass(\"nsk\/jvmti\/FieldAccess\/fieldacc002a\");\n@@ -333,2 +318,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetStaticFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetStaticFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -336,2 +321,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -371,2 +356,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/FieldAccess\/fieldacc002a\"));\n+    cls = env->FindClass(\"nsk\/jvmti\/FieldAccess\/fieldacc002a\");\n@@ -378,31 +362,21 @@\n-    JNI_ENV_PTR(env)->GetStaticBooleanField(JNI_ENV_ARG(env, cls),\n-        watches[0].fid);\n-    JNI_ENV_PTR(env)->GetStaticByteField(JNI_ENV_ARG(env, cls),\n-        watches[1].fid);\n-    JNI_ENV_PTR(env)->GetStaticShortField(JNI_ENV_ARG(env, cls),\n-        watches[2].fid);\n-    JNI_ENV_PTR(env)->GetStaticIntField(JNI_ENV_ARG(env, cls),\n-        watches[3].fid);\n-    JNI_ENV_PTR(env)->GetStaticLongField(JNI_ENV_ARG(env, cls),\n-        watches[4].fid);\n-    JNI_ENV_PTR(env)->GetStaticFloatField(JNI_ENV_ARG(env, cls),\n-        watches[5].fid);\n-    JNI_ENV_PTR(env)->GetStaticDoubleField(JNI_ENV_ARG(env, cls),\n-        watches[6].fid);\n-    JNI_ENV_PTR(env)->GetStaticCharField(JNI_ENV_ARG(env, cls),\n-        watches[7].fid);\n-    JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG(env, cls),\n-        watches[8].fid);\n-    JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG(env, cls),\n-        watches[9].fid);\n-\n-    JNI_ENV_PTR(env)->GetBooleanField(JNI_ENV_ARG(env, obj), watches[10].fid);\n-    JNI_ENV_PTR(env)->GetByteField(JNI_ENV_ARG(env, obj), watches[11].fid);\n-    JNI_ENV_PTR(env)->GetShortField(JNI_ENV_ARG(env, obj), watches[12].fid);\n-    JNI_ENV_PTR(env)->GetIntField(JNI_ENV_ARG(env, obj), watches[13].fid);\n-    JNI_ENV_PTR(env)->GetLongField(JNI_ENV_ARG(env, obj), watches[14].fid);\n-    JNI_ENV_PTR(env)->GetFloatField(JNI_ENV_ARG(env, obj), watches[15].fid);\n-    JNI_ENV_PTR(env)->GetDoubleField(JNI_ENV_ARG(env, obj), watches[16].fid);\n-    JNI_ENV_PTR(env)->GetCharField(JNI_ENV_ARG(env, obj), watches[17].fid);\n-    JNI_ENV_PTR(env)->GetObjectField(JNI_ENV_ARG(env, obj), watches[18].fid);\n-    JNI_ENV_PTR(env)->GetObjectField(JNI_ENV_ARG(env, obj), watches[19].fid);\n+    env->GetStaticBooleanField(cls, watches[0].fid);\n+    env->GetStaticByteField(cls, watches[1].fid);\n+    env->GetStaticShortField(cls, watches[2].fid);\n+    env->GetStaticIntField(cls, watches[3].fid);\n+    env->GetStaticLongField(cls, watches[4].fid);\n+    env->GetStaticFloatField(cls, watches[5].fid);\n+    env->GetStaticDoubleField(cls, watches[6].fid);\n+    env->GetStaticCharField(cls, watches[7].fid);\n+    env->GetStaticObjectField(cls, watches[8].fid);\n+    env->GetStaticObjectField(cls, watches[9].fid);\n+\n+    env->GetBooleanField(obj, watches[10].fid);\n+    env->GetByteField(obj, watches[11].fid);\n+    env->GetShortField(obj, watches[12].fid);\n+    env->GetIntField(obj, watches[13].fid);\n+    env->GetLongField(obj, watches[14].fid);\n+    env->GetFloatField(obj, watches[15].fid);\n+    env->GetDoubleField(obj, watches[16].fid);\n+    env->GetCharField(obj, watches[17].fid);\n+    env->GetObjectField(obj, watches[18].fid);\n+    env->GetObjectField(obj, watches[19].fid);\n@@ -422,1 +396,0 @@\n-#ifdef __cplusplus\n@@ -424,1 +397,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/FieldAccess\/fieldacc002\/fieldacc002.cpp","additions":28,"deletions":56,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -240,2 +227,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -305,1 +291,1 @@\n-        cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, watches[i].f_cls));\n+        cls = env->FindClass(watches[i].f_cls);\n@@ -312,2 +298,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetStaticFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetStaticFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -315,2 +301,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -348,1 +334,0 @@\n-#ifdef __cplusplus\n@@ -350,1 +335,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/FieldAccess\/fieldacc003\/fieldacc003.cpp","additions":6,"deletions":22,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -226,2 +213,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -291,1 +277,1 @@\n-        cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, watches[i].f_cls));\n+        cls = env->FindClass(watches[i].f_cls);\n@@ -298,2 +284,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetStaticFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetStaticFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -301,2 +287,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -334,1 +320,0 @@\n-#ifdef __cplusplus\n@@ -336,1 +321,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/FieldAccess\/fieldacc004\/fieldacc004.cpp","additions":6,"deletions":22,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -173,2 +160,1 @@\n-        return (JNI_TRUE ==\n-            JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, v1.l), v2.l));\n+        return env->IsSameObject(v1.l, v2.l);\n@@ -338,2 +324,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -403,2 +388,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/FieldModification\/fieldmod001a\"));\n+    cls = env->FindClass(\"nsk\/jvmti\/FieldModification\/fieldmod001a\");\n@@ -412,2 +396,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetStaticFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetStaticFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -415,2 +399,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -471,1 +455,0 @@\n-#ifdef __cplusplus\n@@ -473,1 +456,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/FieldModification\/fieldmod001\/fieldmod001.cpp","additions":7,"deletions":25,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -173,2 +160,1 @@\n-        return (JNI_TRUE ==\n-            JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, v1.l), v2.l));\n+        return env->IsSameObject(v1.l, v2.l);\n@@ -221,2 +207,1 @@\n-    err = jvmti_env->GetMethodName(method,\n-        &watch.m_name, &watch.m_sig, &generic);\n+    err = jvmti_env->GetMethodName(method, &watch.m_name, &watch.m_sig, &generic);\n@@ -338,2 +323,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -405,2 +389,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/FieldModification\/fieldmod002a\"));\n+    cls = env->FindClass(\"nsk\/jvmti\/FieldModification\/fieldmod002a\");\n@@ -414,2 +397,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetStaticFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetStaticFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -417,2 +400,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -436,10 +419,5 @@\n-    ctor = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"<init>\", \"()V\");\n-    obj1 = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env,\n-        JNI_ENV_PTR(env)->NewObject(JNI_ENV_ARG(env, cls), ctor)));\n-    obj2 = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env,\n-        JNI_ENV_PTR(env)->NewObject(JNI_ENV_ARG(env, cls), ctor)));\n-    arr1 = (jintArray) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env,\n-        JNI_ENV_PTR(env)->NewIntArray(JNI_ENV_ARG(env, (jsize)1))));\n-    arr2 = (jintArray) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env,\n-        JNI_ENV_PTR(env)->NewIntArray(JNI_ENV_ARG(env, (jsize)1))));\n+    ctor = env->GetMethodID(cls, \"<init>\", \"()V\");\n+    obj1 = env->NewGlobalRef(env->NewObject(cls, ctor));\n+    obj2 = env->NewGlobalRef(env->NewObject(cls, ctor));\n+    arr1 = (jintArray) env->NewGlobalRef(env->NewIntArray((jsize) 1));\n+    arr2 = (jintArray) env->NewGlobalRef(env->NewIntArray((jsize) 1));\n@@ -483,2 +461,0 @@\n-\n-\n@@ -489,2 +465,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/FieldModification\/fieldmod002a\"));\n+    cls = env->FindClass(\"nsk\/jvmti\/FieldModification\/fieldmod002a\");\n@@ -496,41 +471,21 @@\n-    JNI_ENV_PTR(env)->SetStaticBooleanField(JNI_ENV_ARG(env, cls),\n-        watches[0].fid, watches[0].val.z);\n-    JNI_ENV_PTR(env)->SetStaticByteField(JNI_ENV_ARG(env, cls),\n-        watches[1].fid, watches[1].val.b);\n-    JNI_ENV_PTR(env)->SetStaticShortField(JNI_ENV_ARG(env, cls),\n-        watches[2].fid, watches[2].val.s);\n-    JNI_ENV_PTR(env)->SetStaticIntField(JNI_ENV_ARG(env, cls),\n-        watches[3].fid, watches[3].val.i);\n-    JNI_ENV_PTR(env)->SetStaticLongField(JNI_ENV_ARG(env, cls),\n-        watches[4].fid, watches[4].val.j);\n-    JNI_ENV_PTR(env)->SetStaticFloatField(JNI_ENV_ARG(env, cls),\n-        watches[5].fid, watches[5].val.f);\n-    JNI_ENV_PTR(env)->SetStaticDoubleField(JNI_ENV_ARG(env, cls),\n-        watches[6].fid, watches[6].val.d);\n-    JNI_ENV_PTR(env)->SetStaticCharField(JNI_ENV_ARG(env, cls),\n-        watches[7].fid, watches[7].val.c);\n-    JNI_ENV_PTR(env)->SetStaticObjectField(JNI_ENV_ARG(env, cls),\n-        watches[8].fid, watches[8].val.l);\n-    JNI_ENV_PTR(env)->SetStaticObjectField(JNI_ENV_ARG(env, cls),\n-        watches[9].fid, watches[9].val.l);\n-\n-    JNI_ENV_PTR(env)->SetBooleanField(JNI_ENV_ARG(env, obj),\n-        watches[10].fid, watches[10].val.z);\n-    JNI_ENV_PTR(env)->SetByteField(JNI_ENV_ARG(env, obj),\n-        watches[11].fid, watches[11].val.b);\n-    JNI_ENV_PTR(env)->SetShortField(JNI_ENV_ARG(env, obj),\n-        watches[12].fid, watches[12].val.s);\n-    JNI_ENV_PTR(env)->SetIntField(JNI_ENV_ARG(env, obj),\n-        watches[13].fid, watches[13].val.i);\n-    JNI_ENV_PTR(env)->SetLongField(JNI_ENV_ARG(env, obj),\n-        watches[14].fid, watches[14].val.j);\n-    JNI_ENV_PTR(env)->SetFloatField(JNI_ENV_ARG(env, obj),\n-        watches[15].fid, watches[15].val.f);\n-    JNI_ENV_PTR(env)->SetDoubleField(JNI_ENV_ARG(env, obj),\n-        watches[16].fid, watches[16].val.d);\n-    JNI_ENV_PTR(env)->SetCharField(JNI_ENV_ARG(env, obj),\n-        watches[17].fid, watches[17].val.c);\n-    JNI_ENV_PTR(env)->SetObjectField(JNI_ENV_ARG(env, obj),\n-        watches[18].fid, watches[18].val.l);\n-    JNI_ENV_PTR(env)->SetObjectField(JNI_ENV_ARG(env, obj),\n-        watches[19].fid, watches[19].val.l);\n+    env->SetStaticBooleanField(cls, watches[0].fid, watches[0].val.z);\n+    env->SetStaticByteField(cls, watches[1].fid, watches[1].val.b);\n+    env->SetStaticShortField(cls, watches[2].fid, watches[2].val.s);\n+    env->SetStaticIntField(cls, watches[3].fid, watches[3].val.i);\n+    env->SetStaticLongField(cls, watches[4].fid, watches[4].val.j);\n+    env->SetStaticFloatField(cls, watches[5].fid, watches[5].val.f);\n+    env->SetStaticDoubleField(cls, watches[6].fid, watches[6].val.d);\n+    env->SetStaticCharField(cls, watches[7].fid, watches[7].val.c);\n+    env->SetStaticObjectField(cls, watches[8].fid, watches[8].val.l);\n+    env->SetStaticObjectField(cls, watches[9].fid, watches[9].val.l);\n+\n+    env->SetBooleanField(obj, watches[10].fid, watches[10].val.z);\n+    env->SetByteField(obj, watches[11].fid, watches[11].val.b);\n+    env->SetShortField(obj, watches[12].fid, watches[12].val.s);\n+    env->SetIntField(obj, watches[13].fid, watches[13].val.i);\n+    env->SetLongField(obj, watches[14].fid, watches[14].val.j);\n+    env->SetFloatField(obj, watches[15].fid, watches[15].val.f);\n+    env->SetDoubleField(obj, watches[16].fid, watches[16].val.d);\n+    env->SetCharField(obj, watches[17].fid, watches[17].val.c);\n+    env->SetObjectField(obj, watches[18].fid, watches[18].val.l);\n+    env->SetObjectField(obj, watches[19].fid, watches[19].val.l);\n@@ -550,1 +505,0 @@\n-#ifdef __cplusplus\n@@ -552,1 +506,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/FieldModification\/fieldmod002\/fieldmod002.cpp","additions":35,"deletions":82,"binary":false,"changes":117,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -191,2 +178,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -252,2 +238,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"chain\", \"()V\");\n+    mid = env->GetStaticMethodID(cls, \"chain\", \"()V\");\n@@ -279,2 +264,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/FramePop\/framepop001a\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/FramePop\/framepop001a\");\n@@ -286,2 +270,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clz),\n-        \"dummy\", \"()V\");\n+    mid = env->GetStaticMethodID(clz, \"dummy\", \"()V\");\n@@ -292,1 +275,1 @@\n-    JNI_ENV_PTR(env)->CallStaticVoidMethod(JNI_ENV_ARG(env, clz), mid);\n+    env->CallStaticVoidMethod(clz, mid);\n@@ -303,1 +286,0 @@\n-#ifdef __cplusplus\n@@ -305,1 +287,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/FramePop\/framepop001\/framepop001.cpp","additions":5,"deletions":24,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#ifdef __cplusplus\n@@ -34,11 +33,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -46,1 +34,0 @@\n-#endif\n@@ -142,2 +129,1 @@\n-        if (JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, threads[i].thread),\n-                thr) == JNI_TRUE) {\n+        if (env->IsSameObject(threads[i].thread, thr)) {\n@@ -187,2 +173,1 @@\n-        if (JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, threads[i].thread),\n-                thr) == JNI_TRUE) {\n+        if (env->IsSameObject(threads[i].thread, thr)) {\n@@ -335,2 +320,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -439,1 +423,0 @@\n-#ifdef __cplusplus\n@@ -441,1 +424,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/FramePop\/framepop002\/framepop002.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -55,2 +55,3 @@\n-        NSK_COMPLAIN2(\"TEST FAILED: GarbageCollectionStart event has no a matched pair GarbageCollectionFinish:\\n\\\n-\\t%d GarbageCollectionStart events\\t%d GarbageCollectionFinish events\\n\\n\",\n+        NSK_COMPLAIN2(\n+            \"TEST FAILED: GarbageCollectionStart event has no a matched pair GarbageCollectionFinish:\\n\"\n+            \"\\t%d GarbageCollectionStart events\\t%d GarbageCollectionFinish events\\n\\n\",\n@@ -71,2 +72,3 @@\n-        NSK_COMPLAIN2(\"TEST FAILED: GarbageCollectionFinish event has no a matched pair GarbageCollectionStart:\\n\\\n-\\t%d GarbageCollectionStart events\\t%d GarbageCollectionFinish events\\n\\n\",\n+        NSK_COMPLAIN2(\n+            \"TEST FAILED: GarbageCollectionFinish event has no a matched pair GarbageCollectionStart:\\n\"\n+            \"\\t%d GarbageCollectionStart events\\t%d GarbageCollectionFinish events\\n\\n\",\n@@ -84,2 +86,3 @@\n-        NSK_COMPLAIN2(\"TEST FAILED: some GarbageCollectionFinish events have no a matched pair GarbageCollectionStart:\\n\\\n-\\t%d GarbageCollectionStart events\\t%d GarbageCollectionFinish events\\n\\n\",\n+        NSK_COMPLAIN2(\n+            \"TEST FAILED: some GarbageCollectionFinish events have no a matched pair GarbageCollectionStart:\\n\"\n+            \"\\t%d GarbageCollectionStart events\\t%d GarbageCollectionFinish events\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GarbageCollectionStart\/gcstart001\/gcstart001.cpp","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -72,2 +72,6 @@\n-            NSK_COMPLAIN5(\"TEST FAILED: class: \\\"%s\\\" \\\n-has\\n\\tsignature: \\\"%s\\\"\\n\\tgeneric signature: \\\"%s\\\"\\n\\n\\tExpected: \\\"%s\\\"\\n\\t\\\"%s\\\"\\n\\n\",\n+            NSK_COMPLAIN5(\n+                \"TEST FAILED: class: \\\"%s\\\" has\\n\"\n+                \"\\tsignature: \\\"%s\\\"\\n\"\n+                \"\\tgeneric signature: \\\"%s\\\"\\n\\n\"\n+                \"\\tExpected: \\\"%s\\\"\\n\"\n+                \"\\t\\\"%s\\\"\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassSignature\/getclsig006\/getclsig006.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -106,2 +106,6 @@\n-            NSK_COMPLAIN6(\"TEST FAILED: %s field \\\"%s\\\" \\\n-has\\n\\tsignature: \\\"%s\\\"\\n\\tgeneric signature: \\\"%s\\\"\\n\\n\\tExpected: \\\"%s\\\"\\n\\t\\t\\\"%s\\\"\\n\\n\",\n+            NSK_COMPLAIN6(\n+                \"TEST FAILED: %s field \\\"%s\\\" has\\n\"\n+                \"\\tsignature: \\\"%s\\\"\\n\"\n+                \"\\tgeneric signature: \\\"%s\\\"\\n\\n\"\n+                \"\\tExpected: \\\"%s\\\"\\n\"\n+                \"\\t\\t\\\"%s\\\"\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldName\/getfldnm005\/getfldnm005.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,9 +37,0 @@\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJNIFunctionTable\/getjniftab001\/getjniftab001.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,9 +32,0 @@\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n-\n@@ -92,3 +83,4 @@\n-    if ((err = vm->DetachCurrentThread(JNI_ENV_ARG1(vm))) != 0)\n-        printf(\"(%s,%d): Warning: DetachCurrentThread() returns: %d\\n\\\n-\\tcheck with the detached main thread skipped\\n\",\n+    if ((err = vm->DetachCurrentThread()) != 0) {\n+        printf(\n+            \"(%s,%d): Warning: DetachCurrentThread() returns: %d\\n\"\n+            \"\\tcheck with the detached main thread skipped\\n\",\n@@ -96,1 +88,1 @@\n-    else {\n+    } else {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJNIFunctionTable\/getjniftab002\/getjniftab002.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -110,2 +110,1 @@\n-            NSK_COMPLAIN3(\"TEST FAILURE: unable to get the method ID for the %s method\\\n- \\\"%s\\\", signature \\\"%s\\\"\\n\\n\",\n+            NSK_COMPLAIN3(\"TEST FAILURE: unable to get the method ID for the %s method \\\"%s\\\", signature \\\"%s\\\"\\n\\n\",\n@@ -127,2 +126,3 @@\n-                NSK_COMPLAIN5(\"TEST FAILED: %s method \\\"%s\\\", signature \\\"%s\\\":\\\n- found %d vars in the LocalVariableTable, expected %d\\n\\tHere are the found vars:\\n\",\n+                NSK_COMPLAIN5(\n+                    \"TEST FAILED: %s method \\\"%s\\\", signature \\\"%s\\\": found %d vars in the LocalVariableTable, expected %d\\n\"\n+                    \"\\tHere are the found vars:\\n\",\n@@ -139,3 +139,4 @@\n-            else\n-                NSK_DISPLAY4(\"Checking vars in the LocalVariableTable of the %s method \\\"%s\\\",\\\n- signature \\\"%s\\\" ...\\n\\tfound %d local vars as expected\\n\",\n+            else {\n+                NSK_DISPLAY4(\n+                    \"Checking vars in the LocalVariableTable of the %s method \\\"%s\\\", signature \\\"%s\\\" ...\\n\"\n+                    \"\\tfound %d local vars as expected\\n\",\n@@ -144,0 +145,1 @@\n+            }\n@@ -149,2 +151,3 @@\n-                            NSK_COMPLAIN6(\"TEST FAILED: %s method: \\\"%s\\\", signature: \\\"%s\\\": var \\\"%s\\\"\\\n- has signature \\\"%s\\\" in the LocalVariableTable, expected \\\"%s\\\"\\n\\n\",\n+                            NSK_COMPLAIN6(\n+                                \"TEST FAILED: %s method: \\\"%s\\\", signature: \\\"%s\\\": var \\\"%s\\\" \"\n+                                \"has signature \\\"%s\\\" in the LocalVariableTable, expected \\\"%s\\\"\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab004\/localtab004.cpp","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -118,2 +118,1 @@\n-            NSK_COMPLAIN3(\"TEST FAILURE: unable to get the method ID for the %s method\\\n- \\\"%s\\\", signature \\\"%s\\\"\\n\\n\",\n+            NSK_COMPLAIN3(\"TEST FAILURE: unable to get the method ID for the %s method \\\"%s\\\", signature \\\"%s\\\"\\n\\n\",\n@@ -135,2 +134,4 @@\n-                NSK_COMPLAIN5(\"TEST FAILED: %s method \\\"%s\\\", signature \\\"%s\\\":\\\n- found %d vars in the LocalVariableTable, expected %d\\n\\tHere are the found vars:\\n\",\n+                NSK_COMPLAIN5(\n+                    \"TEST FAILED: %s method \\\"%s\\\", signature \\\"%s\\\":\"\n+                    \"found %d vars in the LocalVariableTable, expected %d\\n\"\n+                    \"\\tHere are the found vars:\\n\",\n@@ -149,3 +150,5 @@\n-            else\n-                NSK_DISPLAY4(\">>> Checking vars in the LocalVariableTable of the %s method \\\"%s\\\",\\\n- signature \\\"%s\\\" ...\\n\\t%d local vars as expected\\n\",\n+            else {\n+                NSK_DISPLAY4(\n+                    \">>> Checking vars in the LocalVariableTable of the %s method \\\"%s\\\",\"\n+                    \"signature \\\"%s\\\" ...\\n\"\n+                    \"\\t%d local vars as expected\\n\",\n@@ -154,0 +157,1 @@\n+            }\n@@ -161,2 +165,5 @@\n-                            NSK_COMPLAIN8(\"TEST FAILED: %s method: \\\"%s\\\" \\\"%s\\\":\\n\\tvar \\\"%s\\\"\\\n- has signature \\\"%s\\\",\\n\\tgeneric signature \\\"%s\\\"\\n\\n\\tExpected: \\\"%s\\\"\\n\\t\\t\\\"%s\\\"\\n\\n\",\n+                            NSK_COMPLAIN8(\n+                                \"TEST FAILED: %s method: \\\"%s\\\" \\\"%s\\\":\\n\"\n+                                \"\\tvar \\\"%s\\\" has signature \\\"%s\\\",\\n\"\n+                                \"\\tgeneric signature \\\"%s\\\"\\n\\n\"\n+                                \"\\tExpected: \\\"%s\\\"\\n\\t\\t\\\"%s\\\"\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab005\/localtab005.cpp","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -68,2 +55,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -127,1 +113,0 @@\n-#ifdef __cplusplus\n@@ -129,1 +114,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd002\/intrpthrd002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -69,2 +56,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -143,1 +129,0 @@\n-#ifdef __cplusplus\n@@ -145,1 +130,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd003\/intrpthrd003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -118,1 +104,0 @@\n-#ifdef __cplusplus\n@@ -120,1 +105,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsArrayClass\/isarray004\/isarray004.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -128,1 +114,0 @@\n-#ifdef __cplusplus\n@@ -130,1 +115,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsArrayClass\/isarray005\/isarray005.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -119,1 +105,1 @@\n-    fid = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls), \"fld\", \"I\");\n+    fid = env->GetFieldID(cls, \"fld\", \"I\");\n@@ -171,1 +157,0 @@\n-#ifdef __cplusplus\n@@ -173,1 +158,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsFieldSynthetic\/isfldsin002\/isfldsin002.cpp","additions":2,"deletions":18,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -84,9 +71,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n-    if (res != JNI_OK || jvmti == NULL) {\n-        printf(\"Wrong result of a valid call to GetEnv!\\n\");\n-        return JNI_ERR;\n-    }\n-\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -144,2 +123,1 @@\n-        fid = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, clazz),\n-            fields[i].name, fields[i].sig);\n+        fid = env->GetFieldID(clazz, fields[i].name, fields[i].sig);\n@@ -178,1 +156,0 @@\n-#ifdef __cplusplus\n@@ -180,1 +157,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsFieldSynthetic\/isfldsin003\/isfldsin003.cpp","additions":2,"deletions":26,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -118,1 +104,0 @@\n-#ifdef __cplusplus\n@@ -120,1 +105,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsInterface\/isintrf004\/isintrf004.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -126,1 +112,0 @@\n-#ifdef __cplusplus\n@@ -128,1 +113,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsInterface\/isintrf005\/isintrf005.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -92,1 +78,1 @@\n-        mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cl), name, sig);\n+        mid = env->GetStaticMethodID(cl, name, sig);\n@@ -94,1 +80,1 @@\n-        mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cl), name, sig);\n+        mid = env->GetMethodID(cl, name, sig);\n@@ -132,2 +118,1 @@\n-    clsId = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/IsMethodNative\/isnative001$Inn\"));\n+    clsId = env->FindClass(\"nsk\/jvmti\/IsMethodNative\/isnative001$Inn\");\n@@ -144,1 +129,0 @@\n-#ifdef __cplusplus\n@@ -146,1 +130,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodNative\/isnative001\/isnative001.cpp","additions":4,"deletions":21,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -92,2 +78,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"<init>\", \"()V\");\n+    mid = env->GetMethodID(cls, \"<init>\", \"()V\");\n@@ -126,1 +111,0 @@\n-#ifdef __cplusplus\n@@ -128,1 +112,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodNative\/isnative002\/isnative002.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -96,2 +83,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -152,2 +138,1 @@\n-            mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cl),\n-                methods[i].name, methods[i].signature);\n+            mid = env->GetStaticMethodID(cl, methods[i].name, methods[i].signature);\n@@ -155,2 +140,1 @@\n-            mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cl),\n-                methods[i].name, methods[i].signature);\n+            mid = env->GetMethodID(cl, methods[i].name, methods[i].signature);\n@@ -193,1 +177,0 @@\n-#ifdef __cplusplus\n@@ -195,1 +178,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodSynthetic\/issynth001\/issynth001.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -119,2 +105,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"<init>\", \"()V\");\n+    mid = env->GetMethodID(cls, \"<init>\", \"()V\");\n@@ -159,1 +144,0 @@\n-#ifdef __cplusplus\n@@ -161,1 +145,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IsMethodSynthetic\/issynth002\/issynth002.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#ifdef __cplusplus\n@@ -34,13 +33,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -173,2 +159,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -243,2 +228,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-        \"dummy\", \"()V\");\n+    mid = env->GetStaticMethodID(cls, \"dummy\", \"()V\");\n@@ -250,1 +234,1 @@\n-    JNI_ENV_PTR(env)->CallStaticVoidMethod(JNI_ENV_ARG(env, cls), mid);\n+    env->CallStaticVoidMethod(cls, mid);\n@@ -282,1 +266,0 @@\n-#ifdef __cplusplus\n@@ -284,1 +267,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/MethodEntry\/mentry001\/mentry001.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -94,2 +81,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -153,2 +139,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-            \"emptyMethod\", \"()V\");\n+    mid = env->GetStaticMethodID(cls, \"emptyMethod\", \"()V\");\n@@ -201,1 +186,0 @@\n-#ifdef __cplusplus\n@@ -203,1 +187,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/MethodEntry\/mentry002\/mentry002.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#ifdef __cplusplus\n@@ -34,11 +33,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -46,1 +34,0 @@\n-#endif\n@@ -175,2 +162,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -255,2 +241,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/MethodExit\/mexit001a\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/MethodExit\/mexit001a\");\n@@ -262,2 +247,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clz),\n-        \"dummy\", \"()V\");\n+    mid = env->GetStaticMethodID(clz, \"dummy\", \"()V\");\n@@ -269,1 +253,1 @@\n-    JNI_ENV_PTR(env)->CallStaticVoidMethod(JNI_ENV_ARG(env, clz), mid);\n+    env->CallStaticVoidMethod(clz, mid);\n@@ -292,1 +276,0 @@\n-#ifdef __cplusplus\n@@ -294,1 +277,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/MethodExit\/mexit001\/mexit001.cpp","additions":4,"deletions":22,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#ifdef __cplusplus\n@@ -34,11 +33,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -46,1 +34,0 @@\n-#endif\n@@ -175,2 +162,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -233,2 +219,1 @@\n-    clz = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/MethodExit\/mexit002a\"));\n+    clz = env->FindClass(\"nsk\/jvmti\/MethodExit\/mexit002a\");\n@@ -240,2 +225,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clz),\n-        \"dummy\", \"()V\");\n+    mid = env->GetStaticMethodID(clz, \"dummy\", \"()V\");\n@@ -257,1 +241,1 @@\n-    JNI_ENV_PTR(env)->CallStaticVoidMethod(JNI_ENV_ARG(env, clz), mid);\n+    env->CallStaticVoidMethod(clz, mid);\n@@ -282,1 +266,0 @@\n-#ifdef __cplusplus\n@@ -284,1 +267,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/MethodExit\/mexit002\/mexit002.cpp","additions":4,"deletions":22,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -113,2 +113,3 @@\n-            NSK_DISPLAY1(\"CHECK PASSED: NativeMethodBind event received for the method:\\n\\\n-\\t\\\"%s\\\" as expected\\n\",\n+            NSK_DISPLAY1(\n+                \"CHECK PASSED: NativeMethodBind event received for the method:\\n\"\n+                \"\\t\\\"%s\\\" as expected\\n\",\n@@ -166,2 +167,2 @@\n-        NSK_DISPLAY3(\"Calling RegisterNatives() with \\\"%s %s\\\"\\n\\\n-\\tfor class \\\"%s\\\" ...\\n\",\n+        NSK_DISPLAY3(\"Calling RegisterNatives() with \\\"%s %s\\\"\\n\"\n+                     \"\\tfor class \\\"%s\\\" ...\\n\",\n@@ -190,2 +191,3 @@\n-            NSK_COMPLAIN3(\"TEST FAILED: wrong number of NativeMethodBind events for the method \\\"%s\\\":\\n\\\n-got: %d\\texpected: %d\\n\\n\",\n+            NSK_COMPLAIN3(\n+                \"TEST FAILED: wrong number of NativeMethodBind events for the method \\\"%s\\\":\\n\"\n+                \"got: %d\\texpected: %d\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NativeMethodBind\/nativemethbind001\/nativemethbind001.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -70,2 +70,3 @@\n-        NSK_COMPLAIN0(\"TEST FAILED: unable to obtain phase of the VM execution\\n\\\n-\\tduring NativeMethodBind callback\\n\\n\");\n+        NSK_COMPLAIN0(\n+            \"TEST FAILED: unable to obtain phase of the VM execution\\n\"\n+            \"\\tduring NativeMethodBind callback\\n\\n\");\n@@ -106,3 +107,4 @@\n-    if (wrongBindEv != 0)\n-        NSK_COMPLAIN1(\"TEST FAILED: there are %d NativeMethodBind events\\n\\\n-sent during non-start or non-live phase of the VM execution\\n\",\n+    if (wrongBindEv != 0) {\n+        NSK_COMPLAIN1(\n+            \"TEST FAILED: there are %d NativeMethodBind events\\n\"\n+            \"sent during non-start or non-live phase of the VM execution\\n\",\n@@ -110,0 +112,1 @@\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NativeMethodBind\/nativemethbind002\/nativemethbind002.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -127,3 +127,4 @@\n-        NSK_COMPLAIN5(\"TEST FAILED: wrong NativeMethodBind events\\n\\\n-\\tfor tested method \\\"%s %s\\\" bound with \\\"%s\\\":\\n\\\n-\\tgot: %d\\texpected: %d\\n\\n\",\n+        NSK_COMPLAIN5(\n+            \"TEST FAILED: wrong NativeMethodBind events\\n\"\n+            \"\\tfor tested method \\\"%s %s\\\" bound with \\\"%s\\\":\\n\"\n+            \"\\tgot: %d\\texpected: %d\\n\\n\",\n@@ -131,3 +132,5 @@\n-    } else\n-        NSK_DISPLAY4(\"CHECK PASSED: %d NativeMethodBind event(s)\\n\\\n-\\tfor tested method \\\"%s %s\\\" bound with \\\"%s\\\"\\n\\tas expected\\n\",\n+    } else {\n+        NSK_DISPLAY4(\n+            \"CHECK PASSED: %d NativeMethodBind event(s)\\n\"\n+            \"\\tfor tested method \\\"%s %s\\\" bound with \\\"%s\\\"\\n\"\n+            \"\\tas expected\\n\",\n@@ -135,0 +138,1 @@\n+    }\n@@ -154,2 +158,3 @@\n-    NSK_DISPLAY1(\"Inside the registerNative()\\n\\\n-Finding class \\\"%s\\\" ...\\n\", CLASS_SIG);\n+    NSK_DISPLAY1(\"Inside the registerNative()\\n\"\n+                 \"Finding class \\\"%s\\\" ...\\n\",\n+                 CLASS_SIG);\n@@ -168,2 +173,3 @@\n-    NSK_DISPLAY3(\"Calling RegisterNatives() with \\\"%s %s\\\"\\n\\\n-\\tfor class \\\"%s\\\" ...\\n\",\n+    NSK_DISPLAY3(\n+        \"Calling RegisterNatives() with \\\"%s %s\\\"\\n\"\n+        \"\\tfor class \\\"%s\\\" ...\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NativeMethodBind\/nativemethbind003\/nativemethbind003.cpp","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -141,4 +141,5 @@\n-    if (origCalls == 0)\n-        NSK_DISPLAY0(\"CHECK PASSED: original nativeMethod() to be redirected\\n\\\n-\\thas not been invoked as expected\\n\");\n-    else {\n+    if (origCalls == 0) {\n+        NSK_DISPLAY0(\n+            \"CHECK PASSED: original nativeMethod() to be redirected\\n\"\n+            \"\\thas not been invoked as expected\\n\");\n+    } else {\n@@ -146,2 +147,4 @@\n-        NSK_COMPLAIN1(\"TEST FAILED: nativeMethod() has not been redirected by the NativeMethodBind:\\n\\\n-\\t%d calls\\texpected: 0\\n\\n\", origCalls);\n+        NSK_COMPLAIN1(\n+            \"TEST FAILED: nativeMethod() has not been redirected by the NativeMethodBind:\\n\"\n+            \"\\t%d calls\\texpected: 0\\n\\n\",\n+            origCalls);\n@@ -150,4 +153,6 @@\n-    if (redirCalls == 1)\n-        NSK_DISPLAY1(\"CHECK PASSED: nativeMethod() has been redirected by the NativeMethodBind:\\n\\\n-\\t%d calls of redirected method as expected\\n\", redirCalls);\n-    else {\n+    if (redirCalls == 1) {\n+        NSK_DISPLAY1(\n+            \"CHECK PASSED: nativeMethod() has been redirected by the NativeMethodBind:\\n\"\n+            \"\\t%d calls of redirected method as expected\\n\",\n+            redirCalls);\n+    } else {\n@@ -155,2 +160,4 @@\n-        NSK_COMPLAIN1(\"TEST FAILED: nativeMethod() has not been redirected by the NativeMethodBind:\\n\\\n-\\t%d calls of redirected method\\texpected: 1\\n\\n\", redirCalls);\n+        NSK_COMPLAIN1(\n+            \"TEST FAILED: nativeMethod() has not been redirected by the NativeMethodBind:\\n\"\n+            \"\\t%d calls of redirected method\\texpected: 1\\n\\n\",\n+            redirCalls);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NativeMethodBind\/nativemethbind004\/nativemethbind004.cpp","additions":19,"deletions":12,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -66,2 +53,1 @@\n-    popThread = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG((JNIEnv *)env,\n-        thread));\n+    popThread = env->NewGlobalRef(thread);\n@@ -75,2 +61,1 @@\n-    popClass = (jclass) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG((JNIEnv *)env,\n-        popClass));\n+    popClass = (jclass) env->NewGlobalRef(popClass);\n@@ -98,2 +83,1 @@\n-        currThread = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG((JNIEnv *)env,\n-            thread));\n+        currThread = env->NewGlobalRef(thread);\n@@ -108,2 +92,1 @@\n-        currClass = (jclass) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG((JNIEnv *)env,\n-            currClass));\n+        currClass = (jclass) env->NewGlobalRef(currClass);\n@@ -150,2 +133,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -218,2 +200,1 @@\n-    mid1 = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cl),\n-        \"meth01\", \"(I)V\");\n+    mid1 = env->GetMethodID(cl, \"meth01\", \"(I)V\");\n@@ -226,2 +207,1 @@\n-    mid2 = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cl),\n-        \"meth02\", \"(I)V\");\n+    mid2 = env->GetMethodID(cl, \"meth02\", \"(I)V\");\n@@ -262,1 +242,1 @@\n-    currThread = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, thr));\n+    currThread = env->NewGlobalRef(thr);\n@@ -264,2 +244,1 @@\n-    currClass = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env,\n-        \"nsk\/jvmti\/NotifyFramePop\/nframepop001a\"));\n+    currClass = env->FindClass(\"nsk\/jvmti\/NotifyFramePop\/nframepop001a\");\n@@ -271,1 +250,1 @@\n-    currClass = (jclass) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, currClass));\n+    currClass = (jclass) env->NewGlobalRef(currClass);\n@@ -273,2 +252,1 @@\n-    currMethod = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, currClass),\n-        \"run\", \"()V\");\n+    currMethod = env->GetMethodID(currClass, \"run\", \"()V\");\n@@ -313,2 +291,1 @@\n-    if (JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, currThread),\n-            popThread) != JNI_TRUE) {\n+    if (!env->IsSameObject(currThread, popThread)) {\n@@ -319,2 +296,1 @@\n-    if (JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, currClass),\n-            popClass) != JNI_TRUE) {\n+    if (!env->IsSameObject(currClass, popClass)) {\n@@ -355,1 +331,0 @@\n-#ifdef __cplusplus\n@@ -357,1 +332,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop001\/nframepop001.cpp","additions":13,"deletions":39,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -68,2 +55,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -126,1 +112,0 @@\n-#ifdef __cplusplus\n@@ -128,1 +113,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop002\/nframepop002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -68,2 +55,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -136,1 +122,0 @@\n-#ifdef __cplusplus\n@@ -138,1 +123,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop003\/nframepop003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -168,2 +168,3 @@\n-            NSK_COMPLAIN3(\"TEST FAILED: %s: obtained an environment local storage has unexpected pointer:\\n\\\n-got: 0x%p\\texpected: 0x%p\\n\\n\",\n+            NSK_COMPLAIN3(\n+                \"TEST FAILED: %s: obtained an environment local storage has unexpected pointer:\\n\"\n+                \"got: 0x%p\\texpected: 0x%p\\n\\n\",\n@@ -206,3 +207,4 @@\n-        if (objfree == 0)\n-            NSK_DISPLAY1(\"Warning: no ObjectFree events for a tagged object\\n\\\n-\\twhich class \\\"%s\\\" has been detected for unloading\\n\\n\",\n+        if (objfree == 0) {\n+            NSK_DISPLAY1(\n+                \"Warning: no ObjectFree events for a tagged object\\n\"\n+                \"\\twhich class \\\"%s\\\" has been detected for unloading\\n\\n\",\n@@ -210,3 +212,4 @@\n-        else\n-            NSK_DISPLAY2(\"CHECK PASSED: %d ObjectFree event(s) received for a tagged object\\n\\\n-\\twhich class \\\"%s\\\" has been detected for unloading\\n\\n\",\n+        } else {\n+            NSK_DISPLAY2(\n+                \"CHECK PASSED: %d ObjectFree event(s) received for a tagged object\\n\"\n+                \"\\twhich class \\\"%s\\\" has been detected for unloading\\n\\n\",\n@@ -214,4 +217,7 @@\n-    } else\n-        NSK_DISPLAY1(\"Warning: unloading of the tested class \\\"%s\\\" has not been detected,\\n\\\n-\\tso the test has no results\\n\",\n-            CLASS_SIG);\n+        }\n+    } else {\n+         NSK_DISPLAY1(\n+             \"Warning: unloading of the tested class \\\"%s\\\" has not been detected,\\n\"\n+             \"\\tso the test has no results\\n\",\n+             CLASS_SIG);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ObjectFree\/objfree001\/objfree001.cpp","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -201,2 +201,3 @@\n-            NSK_COMPLAIN3(\"TEST FAILED: %s: obtained an environment local storage has unexpected pointer:\\n\\\n-got: 0x%p\\texpected: 0x%p\\n\\n\",\n+            NSK_COMPLAIN3(\n+                \"TEST FAILED: %s: obtained an environment local storage has unexpected pointer:\\n\"\n+                \"got: 0x%p\\texpected: 0x%p\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ObjectFree\/objfree002\/objfree002.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -115,2 +115,2 @@\n-            printf(\"Warning: unrestrictedly redefinition of classes is not implemented,\\n\\\n-\\tso the test has no results.\\n\");\n+            printf(\"Warning: unrestrictedly redefinition of classes is not implemented,\\n\"\n+                   \"\\tso the test has no results.\\n\");\n@@ -160,3 +160,7 @@\n-        if (vrb == 1)\n-            printf(\"Completely new static variables:\\n\\\n-\\tintComplNewFld = %d\\n\\tlongComplNewFld = %\" LL \"d\\n\", intFld, longFld);\n+        if (vrb == 1) {\n+            printf(\n+                \"Completely new static variables:\\n\"\n+                \"\\tintComplNewFld = %d\\n\"\n+                \"\\tlongComplNewFld = %\" LL \"d\\n\",\n+                intFld, longFld);\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass003\/redefclass003.cpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -120,2 +120,3 @@\n-            printf(\"Warning: unrestrictedly redefinition of classes is not implemented,\\n\\\n-\\tso the test has no results.\\n\");\n+            printf(\n+                \"Warning: unrestrictedly redefinition of classes is not implemented,\\n\"\n+                \"\\tso the test has no results.\\n\");\n@@ -185,4 +186,6 @@\n-        if (vrb == 1)\n-            printf(\"Completely new fields:\\n\\\n-\\tstringComplNewFld = \\\"%s\\\"\\n\\tintComplNewFld = %d\\n\\\n-\\tlongComplNewFld = %\" LL \"d\\n\",\n+        if (vrb == 1) {\n+            printf(\n+                \"Completely new fields:\\n\"\n+                \"\\tstringComplNewFld = \\\"%s\\\"\\n\"\n+                \"\\tintComplNewFld = %d\\n\"\n+                \"\\tlongComplNewFld = %\" LL \"d\\n\",\n@@ -190,0 +193,1 @@\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass004\/redefclass004.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -144,2 +144,2 @@\n-                printf(\"%s: Failed to get the method ID for the instance method\\\n- \\\"%s\\\" with signature \\\"%s\\\"\\n\",\n+                printf(\n+                    \"%s: Failed to get the method ID for the instance method \\\"%s\\\" with signature \\\"%s\\\"\\n\",\n@@ -153,2 +153,2 @@\n-                printf(\"%s: Failed to get the method ID for the static method\\\n- \\\"%s\\\" with signature \\\"%s\\\"\\n\",\n+                printf(\n+                    \"%s: Failed to get the method ID for the static method \\\"%s\\\" with signature \\\"%s\\\"\\n\",\n@@ -160,3 +160,5 @@\n-        if (vrb == 1)\n-            printf(\">>>>>>>> #%d Invoke SetBreakpoint():\\n\\tbreakpoint in the %s\\\n- method: name=\\\"%s\\\"; signature=\\\"%s\\\"; location=%d\\n\",\n+        if (vrb == 1) {\n+            printf(\n+                \">>>>>>>> #%d Invoke SetBreakpoint():\\n\"\n+                \"\\tbreakpoint in the %s method: name=\\\"%s\\\"; \"\n+                \"signature=\\\"%s\\\"; location=%d\\n\",\n@@ -165,0 +167,2 @@\n+        }\n+\n@@ -242,2 +246,3 @@\n-                printf(\"%s: getResult: Failed to get the method ID for the instance method\\\n- \\\"%s\\\" with signature \\\"%s\\\"\\n\",\n+                printf(\n+                    \"%s: getResult: Failed to get the method ID for the instance method\"\n+                    \"\\\"%s\\\" with signature \\\"%s\\\"\\n\",\n@@ -251,2 +256,3 @@\n-                printf(\"%s: getResult: Failed to get the method ID for the static method\\\n- \\\"%s\\\" with signature \\\"%s\\\"\\n\",\n+                printf(\n+                    \"%s: getResult: Failed to get the method ID for the static method\"\n+                    \"\\\"%s\\\" with signature \\\"%s\\\"\\n\",\n@@ -260,3 +266,4 @@\n-            printf(\"TEST FAILED: Breakpoint #%d in the %s method:\\n\\\n-\\tname=\\\"%s\\\"; signature=\\\"%s\\\"; location=%d was not cleared:\\n\\\n-\\tClearBreakpoint() returned the error %d: %s\\n\\n\",\n+            printf(\n+                \"TEST FAILED: Breakpoint #%d in the %s method:\\n\"\n+                \"\\tname=\\\"%s\\\"; signature=\\\"%s\\\"; location=%d was not cleared:\\n\"\n+                \"\\tClearBreakpoint() returned the error %d: %s\\n\\n\",\n@@ -268,4 +275,5 @@\n-            if (vrb == 1)\n-                printf(\"Check #%d PASSED: Breakpoint in the %s method:\\n\\\n-\\tname=\\\"%s\\\"; signature=\\\"%s\\\"; location=%d was cleared:\\n\\\n-\\tClearBreakpoint() returned the error %d: %s\\n\\n\",\n+            if (vrb == 1) {\n+                printf(\n+                    \"Check #%d PASSED: Breakpoint in the %s method:\\n\"\n+                    \"\\tname=\\\"%s\\\"; signature=\\\"%s\\\"; location=%d was cleared:\\n\"\n+                    \"\\tClearBreakpoint() returned the error %d: %s\\n\\n\",\n@@ -275,0 +283,2 @@\n+            }\n+\n@@ -277,2 +287,3 @@\n-                printf(\"TEST FAILED: the function SetBreakpoint() returned the error %d: %s\\n\\\n-\\ti.e. the breakpoint #%d has not been really cleared.\\n\\n\",\n+                printf(\n+                    \"TEST FAILED: the function SetBreakpoint() returned the error %d: %s\\n\"\n+                    \"\\ti.e. the breakpoint #%d has not been really cleared.\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass008\/redefclass008.cpp","additions":31,"deletions":20,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -177,2 +177,1 @@\n-            printf(\"%s: Failed to get the method ID for the%s%s method\\\n- \\\"%s\\\", signature \\\"%s\\\"\\n\",\n+            printf(\"%s: Failed to get the method ID for the%s%s method \\\"%s\\\", signature \\\"%s\\\"\\n\",\n@@ -195,2 +194,3 @@\n-                printf(\"TEST FAILED: %s%s method \\\"%s\\\", signature \\\"%s\\\":\\\n- found %d vars in the LocalVariableTable, expected %d\\n\",\n+                printf(\n+                    \"TEST FAILED: %s%s method \\\"%s\\\", signature \\\"%s\\\": \"\n+                    \"found %d vars in the LocalVariableTable, expected %d\\n\",\n@@ -204,2 +204,4 @@\n-                printf(\"\\nChecking vars in the LocalVariableTable of the %s method \\\"%s\\\",\\\n- signature \\\"%s\\\" ...\\n\\tfound %d local vars as expected\\n\",\n+                printf(\n+                    \"\\nChecking vars in the LocalVariableTable of the %s method \\\"%s\\\", \"\n+                    \"signature \\\"%s\\\" ...\\n\"\n+                    \"\\tfound %d local vars as expected\\n\",\n@@ -214,2 +216,3 @@\n-                                printf(\"TEST FAILED: %s method \\\"%s\\\", signature \\\"%s\\\": var \\\"%s\\\"\\\n- has signature \\\"%s\\\" in the LocalVariableTable, expected \\\"%s\\\"\\n\",\n+                                printf(\n+                                    \"TEST FAILED: %s method \\\"%s\\\", signature \\\"%s\\\": var \\\"%s\\\" \"\n+                                    \"has signature \\\"%s\\\" in the LocalVariableTable, expected \\\"%s\\\"\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass009\/redefclass009.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -155,2 +155,1 @@\n-            printf(\"%s: Failed to get the method ID for the%s%s method\\\n- \\\"%s\\\", signature \\\"%s\\\"\\n\",\n+            printf(\"%s: Failed to get the method ID for the%s%s method \\\"%s\\\", signature \\\"%s\\\"\\n\",\n@@ -173,2 +172,2 @@\n-                printf(\"TEST %s %s method \\\"%s\\\", signature \\\"%s\\\":\\\n- found %d lines in the LineNumberTable, expected %d\\n\",\n+                printf(\n+                    \"TEST %s %s method \\\"%s\\\", signature \\\"%s\\\": found %d lines in the LineNumberTable, expected %d\\n\",\n@@ -183,2 +182,3 @@\n-                printf(\"\\nChecking line numbers in the LineNumberTable of the %s method\\\n- \\\"%s\\\", signature \\\"%s\\\" ...\\n\\toverall number of lines: %d as expected\\n\",\n+                printf(\n+                    \"\\nChecking line numbers in the LineNumberTable of the %s method \\\"%s\\\", signature \\\"%s\\\" ...\\n\"\n+                    \"\\toverall number of lines: %d as expected\\n\",\n@@ -195,2 +195,3 @@\n-                    printf(\"TEST %s %s method \\\"%s\\\", signature \\\"%s\\\": entry #%d\\\n- has value %d in the LineNumberTable, expected %d\\n\",\n+                    printf(\n+                        \"TEST %s %s method \\\"%s\\\", signature \\\"%s\\\": \"\n+                        \"entry #%d has value %d in the LineNumberTable, expected %d\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass010\/redefclass010.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -354,3 +354,4 @@\n-    if ((res = vm->DetachCurrentThread()) != 0)\n-        printf(\"(%s,%d): Warning: DetachCurrentThread() returns: %d\\n\\\n-\\tcheck with the detached main thread skipped\\n\",\n+    if ((res = vm->DetachCurrentThread()) != 0) {\n+        printf(\n+            \"(%s,%d): Warning: DetachCurrentThread() returns: %d\\n\"\n+            \"\\tcheck with the detached main thread skipped\\n\",\n@@ -358,1 +359,1 @@\n-    else {\n+    } else {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetJNIFunctionTable\/setjniftab001\/setjniftab001.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -81,3 +81,4 @@\n-    if ((res = vm->DetachCurrentThread()) != JNI_OK)\n-        printf(\"(%s,%d): Warning: DetachCurrentThread() returns: %d\\n\\\n-\\tcheck with the detached main thread skipped\\n\",\n+    if ((res = vm->DetachCurrentThread()) != JNI_OK) {\n+        printf(\n+            \"(%s,%d): Warning: DetachCurrentThread() returns: %d\\n\"\n+            \"\\tcheck with the detached main thread skipped\\n\",\n@@ -85,1 +86,1 @@\n-    else {\n+    } else {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetJNIFunctionTable\/setjniftab002\/setjniftab002.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -91,3 +91,4 @@\n-            NSK_DISPLAY1(\"ClassLoad event received for the class \\\"%s\\\"\\n\\\n-\\tsetting breakpoint ...\\n\",\n-                         sig);\n+            NSK_DISPLAY1(\n+                \"ClassLoad event received for the class \\\"%s\\\"\\n\"\n+                \"\\tsetting breakpoint ...\\n\",\n+                sig);\n@@ -164,3 +165,5 @@\n-        NSK_DISPLAY3(\"\\tmethod name: \\\"%s\\\"\\n\\tsignature: \\\"%s\\\"\\n\\\n-\\tmethod declaring class: \\\"%s\\\"\\n\",\n-                methNam, methSig, sig);\n+        NSK_DISPLAY3(\n+            \"\\tmethod name: \\\"%s\\\"\\n\"\n+            \"\\tsignature: \\\"%s\\\"\\n\"\n+            \"\\tmethod declaring class: \\\"%s\\\"\\n\",\n+            methNam, methSig, sig);\n@@ -183,2 +186,3 @@\n-            NSK_DISPLAY1(\"CHECK PASSED: SingleStep event received for the method \\\"%s\\\" as expected\\n\\\n-\\tdisabling the event generation\\n\",\n+            NSK_DISPLAY1(\n+                \"CHECK PASSED: SingleStep event received for the method \\\"%s\\\" as expected\\n\"\n+                \"\\tdisabling the event generation\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SingleStep\/singlestep001\/singlestep001.cpp","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -72,3 +72,4 @@\n-    if (wrongStepEv != 0)\n-        NSK_COMPLAIN1(\"TEST FAILED: there are %d SingleStep events\\n\\\n-sent during non-live phase of the VM execution\\n\",\n+    if (wrongStepEv != 0) {\n+        NSK_COMPLAIN1(\n+            \"TEST FAILED: there are %d SingleStep events\\n\"\n+            \"sent during non-live phase of the VM execution\\n\",\n@@ -76,0 +77,1 @@\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SingleStep\/singlestep002\/singlestep002.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -89,4 +89,5 @@\n-            NSK_DISPLAY1(\"ClassLoad event received for the class \\\"%s\\\"\\n\\\n-\\tsetting breakpoint ...\\n\",\n-                sig);\n-            setBP(jvmti_env, env, klass);\n+        NSK_DISPLAY1(\n+            \"ClassLoad event received for the class \\\"%s\\\"\\n\"\n+            \"\\tsetting breakpoint ...\\n\",\n+            sig);\n+        setBP(jvmti_env, env, klass);\n@@ -172,3 +173,5 @@\n-                if (stepEv[i][1] == 1)\n-                    NSK_DISPLAY3(\"CHECK PASSED: SingleStep event received for the method:\\n\\\n-\\t \\\"%s %s\\\" of class \\\"%s\\\"\\n\\tas expected\\n\",\n+                if (stepEv[i][1] == 1) {\n+                    NSK_DISPLAY3(\n+                        \"CHECK PASSED: SingleStep event received for the method:\\n\"\n+                        \"\\t \\\"%s %s\\\" of class \\\"%s\\\"\\n\"\n+                        \"\\tas expected\\n\",\n@@ -176,1 +179,1 @@\n-                else {\n+                } else {\n@@ -178,3 +181,4 @@\n-                    NSK_COMPLAIN3(\"TEST FAILED: SingleStep event received for the method:\\n\\\n-\\t \\\"%s %s\\\" of class \\\"%s\\\"\\n\",\n-                    methNam, methSig, sig);\n+                    NSK_COMPLAIN3(\n+                        \"TEST FAILED: SingleStep event received for the method:\\n\"\n+                        \"\\t \\\"%s %s\\\" of class \\\"%s\\\"\\n\",\n+                        methNam, methSig, sig);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SingleStep\/singlestep003\/singlestep003.cpp","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -67,2 +67,4 @@\n-        NSK_COMPLAIN2(\"Received unexpected number of ObjectFree events: %d\\n\\t\\\n-expected number: %d\", obj_free, (EXP_OBJ_NUMBER - 1));\n+        NSK_COMPLAIN2(\n+            \"Received unexpected number of ObjectFree events: %d\\n\"\n+            \"\\texpected number: %d\\n\",\n+            obj_free, (EXP_OBJ_NUMBER - 1));\n@@ -250,2 +252,5 @@\n-        NSK_COMPLAIN2(\"IterateOverInstancesOfClass found unexpected number of objects: %d\\n\\t\\\n-expected number: %d\\n\\n\",  obj_count, EXP_OBJ_NUMBER);\n+        NSK_COMPLAIN2(\n+            \"IterateOverInstancesOfClass found unexpected number of objects: %d\\n\"\n+            \"\\texpected number: %d\\n\\n\",\n+            obj_count, EXP_OBJ_NUMBER);\n+\n@@ -270,2 +275,4 @@\n-        NSK_COMPLAIN2(\"IterateOverHeap found unexpected number of objects: %d\\n\\t\\\n-expected number: %d\\n\\n\",  obj_count, EXP_OBJ_NUMBER);\n+        NSK_COMPLAIN2(\n+            \"IterateOverHeap found unexpected number of objects: %d\\n\"\n+            \"\\texpected number: %d\\n\\n\",\n+            obj_count, EXP_OBJ_NUMBER);\n@@ -290,2 +297,4 @@\n-        NSK_COMPLAIN2(\"IterateOverReachableObjects found unexpected number of objects: %d\\n\\t\\\n-expected number: %d\\n\\n\",  obj_count, EXP_OBJ_NUMBER);\n+        NSK_COMPLAIN2(\n+            \"IterateOverReachableObjects found unexpected number of objects: %d\\n\"\n+            \"\\texpected number: %d\\n\\n\",\n+            obj_count, EXP_OBJ_NUMBER);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP01\/ap01t001\/ap01t001.cpp","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -121,2 +121,4 @@\n-        NSK_COMPLAIN3(\"IterateOverInstancesOfClass found unexpected number of %s objects: %d\\n\\t\\\n-expected number: %d\\n\\n\", TESTED_CLASS, obj_count, exp_count);\n+        NSK_COMPLAIN3(\n+            \"IterateOverInstancesOfClass found unexpected number of %s objects: %d\\n\"\n+            \"\\texpected number: %d\\n\\n\",\n+            TESTED_CLASS, obj_count, exp_count);\n@@ -142,2 +144,4 @@\n-        NSK_COMPLAIN3(\"IterateOverHeap found unexpected number of %s objects: %d\\n\\t\\\n-expected number: %d\\n\\n\", TESTED_CLASS, obj_count, exp_count);\n+        NSK_COMPLAIN3(\n+            \"IterateOverHeap found unexpected number of %s objects: %d\\n\"\n+            \"\\texpected number: %d\\n\\n\",\n+            TESTED_CLASS, obj_count, exp_count);\n@@ -162,2 +166,4 @@\n-        NSK_COMPLAIN3(\"IterateOverReachableObjects found unexpected number of %s objects: %d\\n\\t\\\n-expected number: %d\\n\\n\", TESTED_CLASS, obj_count, exp_count);\n+        NSK_COMPLAIN3(\n+            \"IterateOverReachableObjects found unexpected number of %s objects: %d\\n\"\n+            \"\\texpected number: %d\\n\\n\",\n+            TESTED_CLASS, obj_count, exp_count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP02\/ap02t001\/ap02t001.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -143,2 +143,4 @@\n-            NSK_COMPLAIN2(\"IterateOverInstancesOfClass found unexpected number of objects: %d\\n\\t\\\n-expected number: %d\\n\\n\",  obj_count, EXP_OBJ_NUMBER);\n+            NSK_COMPLAIN2(\n+                \"IterateOverInstancesOfClass found unexpected number of objects: %d\\n\"\n+                \"\\texpected number: %d\\n\\n\",\n+                obj_count, EXP_OBJ_NUMBER);\n@@ -163,2 +165,4 @@\n-            NSK_COMPLAIN2(\"IterateOverHeap found unexpected number of objects: %d\\n\\t\\\n-expected number: %d\\n\\n\",  obj_count, EXP_OBJ_NUMBER);\n+            NSK_COMPLAIN2(\n+                \"IterateOverHeap found unexpected number of objects: %d\\n\"\n+                \"\\texpected number: %d\\n\\n\",\n+                obj_count, EXP_OBJ_NUMBER);\n@@ -200,2 +204,4 @@\n-            NSK_COMPLAIN2(\"IterateOverObjectsReachableFromObject found unexpected number of objects: %d\\n\\t\\\n-expected number: %d\\n\\n\",  obj_count, EXP_OBJ_NUMBER);\n+            NSK_COMPLAIN2(\n+                \"IterateOverObjectsReachableFromObject found unexpected number of objects: %d\\n\"\n+                \"\\texpected number: %d\\n\\n\",\n+                obj_count, EXP_OBJ_NUMBER);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP03\/ap03t001\/ap03t001.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -84,2 +84,3 @@\n-            NSK_COMPLAIN3(\"%s: obtained an environment local storage has unexpected pointer:\\n\\\n-got: 0x%p\\texpected: 0x%p\\n\\n\",\n+            NSK_COMPLAIN3(\n+                \"%s: obtained an environment local storage has unexpected pointer:\\n\"\n+                \"got: 0x%p\\texpected: 0x%p\\n\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP10\/ap10t001\/ap10t001.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -67,2 +67,4 @@\n-        NSK_COMPLAIN2(\"Received unexpected number of ObjectFree events: %d\\n\\t\\\n-expected number: %d\", obj_free, EXP_OBJ_FREE);\n+        NSK_COMPLAIN2(\n+            \"Received unexpected number of ObjectFree events: %d\\n\"\n+            \"\\texpected number: %d\\n\",\n+            obj_free, EXP_OBJ_FREE);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP12\/ap12t001\/ap12t001.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -83,4 +83,4 @@\n-    if ((strcmp(name, expMeth) == 0) &&\n-            (strcmp(sig, expSig) == 0)) {\n-        NSK_DISPLAY4(\"===== %s event received for the tested method:\\n\\\n-\\tID=0x%p name=\\\"%s\\\" signature=\\\"%s\\\"\\n\",\n+    if ((strcmp(name, expMeth) == 0) && (strcmp(sig, expSig) == 0)) {\n+        NSK_DISPLAY4(\n+            \"===== %s event received for the tested method:\\n\"\n+            \"\\tID=0x%p name=\\\"%s\\\" signature=\\\"%s\\\"\\n\",\n@@ -88,1 +88,1 @@\n-         methFound = 1;\n+        methFound = 1;\n@@ -132,2 +132,3 @@\n-    NSK_DISPLAY2(\"[%s] >>>>> Invoke RedefineClasses():\\n\\\n-\\tnew class byte count=%d\\n\",\n+    NSK_DISPLAY2(\n+        \"[%s] >>>>> Invoke RedefineClasses():\\n\"\n+        \"\\tnew class byte count=%d\\n\",\n@@ -165,2 +166,3 @@\n-    NSK_DISPLAY3(\"[%s] method bytes count=%d\\n\\\n-\\tbytes count of the redefined method=%d\\n\",\n+    NSK_DISPLAY3(\n+        \"[%s] method bytes count=%d\\n\"\n+        \"\\tbytes count of the redefined method=%d\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t003\/hs201t003.cpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -115,3 +115,4 @@\n-    NSK_DISPLAY1(\"%s JVMTI env: doRedirect: the JNI function table obtained successfully\\n\\\n-\\toverwriting the function GetVersion() ...\\n\",\n-        (indx==0)?\"first\":\"second\");\n+    NSK_DISPLAY1(\n+        \"%s JVMTI env: doRedirect: the JNI function table obtained successfully\\n\"\n+        \"\\toverwriting the function GetVersion() ...\\n\",\n+        (indx == 0) ? \"first\" : \"second\");\n@@ -142,2 +143,3 @@\n-        NSK_DISPLAY5(\"\\nCHECK PASSED: GetVersion() interception set in the %s JVMTI env %s properly:\\n\\\n-\\t%d interception(s) with the%s%s JVMTI env as expected\\n\",\n+        NSK_DISPLAY5(\n+            \"\\nCHECK PASSED: GetVersion() interception set in the %s JVMTI env %s properly:\\n\"\n+            \"\\t%d interception(s) with the%s%s JVMTI env as expected\\n\",\n@@ -152,2 +154,3 @@\n-        NSK_COMPLAIN6(\"\\nTEST FAILED: GetVersion() interception set in the %s JVMTI env doesn't %s properly:\\n\\\n-\\t%d interception(s) with the%s%s JVMTI env instead of %d as expected\\n\",\n+        NSK_COMPLAIN6(\n+            \"\\nTEST FAILED: GetVersion() interception set in the %s JVMTI env doesn't %s properly:\\n\"\n+            \"\\t%d interception(s) with the%s%s JVMTI env instead of %d as expected\\n\",\n@@ -262,2 +265,3 @@\n-    NSK_DISPLAY0(\"\\n>>> TEST CASE #1) First JVMTI env: checking the redirection set in the same env ...\\n\\\n-\\nagent A (first JVMTI env): redirecting the function table ...\\n\");\n+    NSK_DISPLAY0(\n+        \"\\n>>> TEST CASE #1) First JVMTI env: checking the redirection set in the same env ...\\n\"\n+        \"\\nagent A (first JVMTI env): redirecting the function table ...\\n\");\n@@ -346,2 +350,3 @@\n-    NSK_DISPLAY0(\"\\n>>> TEST CASE #3) Second JVMTI env: checking the redirection set in the same env ...\\n\\\n-\\nagent B (second JVMTI env): redirecting the function table ...\\n\");\n+    NSK_DISPLAY0(\n+        \"\\n>>> TEST CASE #3) Second JVMTI env: checking the redirection set in the same env ...\\n\"\n+        \"\\nagent B (second JVMTI env): redirecting the function table ...\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI05\/ji05t001\/ji05t001.cpp","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -158,2 +158,2 @@\n-    NSK_DISPLAY0(\"doRedirect: the JNI function table obtained successfully\\n\\\n-\\toverwriting the function MonitorEnter ...\\n\");\n+    NSK_DISPLAY0(\"doRedirect: the JNI function table obtained successfully\\n\"\n+                 \"\\toverwriting the function MonitorEnter ...\\n\");\n@@ -176,2 +176,3 @@\n-        NSK_DISPLAY1(\"CHECK PASSED: the tested JNI function MonitorEnter() has been redirected:\\n\\\n-\\tat least %d intercepted call(s) as expected\",\n+        NSK_DISPLAY1(\n+            \"CHECK PASSED: the tested JNI function MonitorEnter() has been redirected:\\n\"\n+            \"\\tat least %d intercepted call(s) as expected\",\n@@ -182,2 +183,3 @@\n-        NSK_COMPLAIN2(\"TEST FAILED: the tested JNI function MonitorEnter() has not been redirected properly:\\n\\\n-\\tonly %d intercepted call(s) instead of at least %d as expected\\n\",\n+        NSK_COMPLAIN2(\n+            \"TEST FAILED: the tested JNI function MonitorEnter() has not been redirected properly:\\n\"\n+            \"\\tonly %d intercepted call(s) instead of at least %d as expected\\n\",\n@@ -197,2 +199,3 @@\n-    NSK_DISPLAY1(\"waitingThread: thread #%d started\\n\\\n-\\tattaching the thread to the VM ...\\n\",\n+    NSK_DISPLAY1(\n+        \"waitingThread: thread #%d started\\n\"\n+        \"\\tattaching the thread to the VM ...\\n\",\n@@ -242,2 +245,3 @@\n-    NSK_DISPLAY1(\"ownerThread: entered the monitor: monEntered=%d\\n\\\n-\\twaiting ...\\n\",\n+    NSK_DISPLAY1(\n+        \"ownerThread: entered the monitor: monEntered=%d\\n\"\n+        \"\\twaiting ...\\n\",\n@@ -375,2 +379,2 @@\n-    NSK_DISPLAY0(\">>> TEST CASE a) Trying to redirect the JNI function ...\\n\\\n-\\nstarting redirector thread ...\\n\");\n+    NSK_DISPLAY0(\">>> TEST CASE a) Trying to redirect the JNI function ...\\n\\n\"\n+                 \"starting redirector thread ...\\n\");\n@@ -411,2 +415,2 @@\n-    NSK_DISPLAY0(\">>> TEST CASE b) Exercising the interception ...\\n\\\n-\\nmain thread: trying to enter the monitor ...\\n\");\n+    NSK_DISPLAY0(\">>> TEST CASE b) Exercising the interception ...\\n\\n\"\n+                 \"main thread: trying to enter the monitor ...\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI06\/ji06t001\/ji06t001.cpp","additions":18,"deletions":14,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -170,3 +170,4 @@\n-                    display(0, \"#### JVMTIagent: found test class matched with \\\"%s\\\"\\n\\\n-<JVMTIagent>\\tsignature=%s\\n\",\n-                        shortTestName, cls_sig);\n+                    display(0,\n+                            \"#### JVMTIagent: found test class matched with \\\"%s\\\"\\n\"\n+                            \"<JVMTIagent>\\tsignature=%s\\n\",\n+                            shortTestName, cls_sig);\n@@ -175,1 +176,1 @@\n-                        clsByteCount);\n+                            clsByteCount);\n@@ -537,3 +538,4 @@\n-            display(0, \"#### JVMTIagent: hotswapping class in every method entry event enabled ####\\n\\\n-<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n-                stress_lev);\n+            display(0,\n+                    \"#### JVMTIagent: hotswapping class in every method entry event enabled ####\\n\"\n+                    \"<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n+                    stress_lev);\n@@ -543,3 +545,4 @@\n-            display(0, \"#### JVMTIagent: hotswapping class in every method entry event for every class enabled ####\\n\\\n-<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n-                stress_lev);\n+            display(0,\n+                    \"#### JVMTIagent: hotswapping class in every method entry event for every class enabled ####\\n\"\n+                    \"<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n+                    stress_lev);\n@@ -549,3 +552,4 @@\n-            display(0, \"#### JVMTIagent: hotswapping class in every single step event enabled ####\\n\\\n-<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n-                stress_lev);\n+            display(0,\n+                    \"#### JVMTIagent: hotswapping class in every single step event enabled ####\\n\"\n+                    \"<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n+                    stress_lev);\n@@ -555,3 +559,4 @@\n-            display(0, \"#### JVMTIagent: hotswapping class in every exception event enabled ####\\n\\\n-<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n-                stress_lev);\n+            display(0,\n+                    \"#### JVMTIagent: hotswapping class in every exception event enabled ####\\n\"\n+                    \"<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n+                    stress_lev);\n@@ -561,3 +566,4 @@\n-            display(0, \"#### JVMTIagent: hotswapping class in every exception event for every class enabled ####\\n\\\n-<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n-                stress_lev);\n+            display(0,\n+                    \"#### JVMTIagent: hotswapping class in every exception event for every class enabled ####\\n\"\n+                    \"<JVMTIagent>\\tHotSwap stress level: %d\\n\",\n+                    stress_lev);\n@@ -744,3 +750,4 @@\n-    display(0, \"#### JVMTIagent: >>>>>>>> Invoke RedefineClasses():\\n\\\n-<JVMTIagent>\\tnew class byte count=%d\\n\",\n-        classDef.class_byte_count);\n+    display(0,\n+            \"#### JVMTIagent: >>>>>>>> Invoke RedefineClasses():\\n\"\n+            \"<JVMTIagent>\\tnew class byte count=%d\\n\",\n+            classDef.class_byte_count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/JVMTIagent.cpp","additions":29,"deletions":22,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -239,2 +239,4 @@\n-        NSK_COMPLAIN1(\"%s: TEST LOGIC ERROR: method 'agentFinished' was called before \"\\\n-                \"targetAppClass was initialized\\n\", agentName);\n+        NSK_COMPLAIN1(\n+            \"%s: TEST LOGIC ERROR: method 'agentFinished' was called before \"\n+            \"targetAppClass was initialized\\n\",\n+            agentName);\n@@ -246,3 +248,4 @@\n-        NSK_COMPLAIN1(\"Status of agent '%s' is 'passed', but some error happened during test execution \"\\\n-                \"(see log for details), change agent status to 'failed'\\n\",\n-                agentName);\n+        NSK_COMPLAIN1(\n+            \"Status of agent '%s' is 'passed', but some error happened during test execution \"\n+            \"(see log for details), change agent status to 'failed'\\n\",\n+            agentName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/aod.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}