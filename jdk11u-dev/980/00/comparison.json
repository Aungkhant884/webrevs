{"files":[{"patch":"@@ -991,1 +991,2 @@\n-  if (cl->is_unroll_only()) return false;\n+  \/\/ RCE needs pre\/main\/post loops. Don't apply it on a single iteration loop.\n+  if (cl->is_unroll_only() || (cl->is_normal_loop() && cl->trip_count() == 1)) return false;\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2020, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8254887\n+ * @summary C2: assert(cl->trip_count() > 0) failed: peeling a fully unrolled loop\n+ *\n+ * @run main\/othervm -Xbatch TestPeelingNeverEnteredLoop\n+ *\n+ *\/\n+\n+public class TestPeelingNeverEnteredLoop {\n+\n+    public static final int N = 400;\n+\n+    public static byte byFld=83;\n+\n+    public static void lMeth() {\n+\n+        int iArr1[][]=new int[N][N];\n+        byte byArr[][]=new byte[N][N];\n+\n+        int i10 = 1;\n+        do {\n+            int i11 = 1;\n+            do {\n+                iArr1[i10 - 1][i11] = TestPeelingNeverEnteredLoop.byFld;\n+                byArr[i10][i11] -= (byte)-20046;\n+                for (int i12 = 1; 1 > i12; ++i12) {\n+                }\n+            } while (++i11 < 8);\n+        } while (++i10 < 212);\n+    }\n+\n+    public static void main(String[] strArr) {\n+        TestPeelingNeverEnteredLoop _instance = new TestPeelingNeverEnteredLoop();\n+        for (int i = 0; i < 1500; i++ ) {\n+            _instance.lMeth();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPeelingNeverEnteredLoop.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"}]}