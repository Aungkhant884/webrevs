{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,0 +113,1 @@\n+import java.time.Duration;\n@@ -287,9 +288,2 @@\n-        for (int i = 0; i < 100; i++) {\n-            if (expected.equals(test)) {\n-                return;\n-            }\n-            expected = LocalDateTime.now(Clock.system(zone));\n-            test = LocalDateTime.now(zone);\n-        }\n-        assertEquals(test.truncatedTo(ChronoUnit.SECONDS),\n-                     expected.truncatedTo(ChronoUnit.SECONDS));\n+        assertEquals(Duration.between(expected, test).truncatedTo(ChronoUnit.SECONDS),\n+                Duration.ZERO);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/TCKLocalDateTime.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,9 +244,2 @@\n-        for (int i = 0; i < 100; i++) {\n-            if (expected.equals(test)) {\n-                return;\n-            }\n-            expected = LocalTime.now(Clock.system(zone));\n-            test = LocalTime.now(zone);\n-        }\n-        assertEquals(test.truncatedTo(ChronoUnit.SECONDS),\n-                     expected.truncatedTo(ChronoUnit.SECONDS));\n+        assertEquals(Duration.between(expected, test).truncatedTo(ChronoUnit.SECONDS),\n+                Duration.ZERO);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/TCKLocalTime.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -256,9 +256,2 @@\n-        for (int i = 0; i < 100; i++) {\n-            if (expected.equals(test)) {\n-                return;\n-            }\n-            expected = ZonedDateTime.now(Clock.system(zone));\n-            test = ZonedDateTime.now(zone);\n-        }\n-        assertEquals(test.truncatedTo(ChronoUnit.SECONDS),\n-                     expected.truncatedTo(ChronoUnit.SECONDS));\n+        assertEquals(Duration.between(expected, test).truncatedTo(ChronoUnit.SECONDS),\n+                Duration.ZERO);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/TCKZonedDateTime.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"}]}