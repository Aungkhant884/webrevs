{"files":[{"patch":"@@ -821,1 +821,0 @@\n-javax\/swing\/JTable\/6263446\/bug6263446.java 8238720 windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,4 +32,11 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.*;\n-import javax.swing.table.*;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Rectangle;\n+import java.awt.event.InputEvent;\n+import javax.swing.DefaultCellEditor;\n+import javax.swing.JFrame;\n+import javax.swing.JTable;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+import javax.swing.table.TableModel;\n+import javax.swing.table.DefaultTableModel;\n@@ -39,0 +46,1 @@\n+    private static JFrame frame;\n@@ -46,2 +54,3 @@\n-        robot = new Robot();\n-        robot.setAutoDelay(50);\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(50);\n@@ -49,6 +58,3 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-\n-            public void run() {\n-                createAndShowGUI();\n-            }\n-        });\n+            SwingUtilities.invokeAndWait(() -> createAndShowGUI());\n+            robot.waitForIdle();\n+            robot.delay(1000);\n@@ -56,0 +62,3 @@\n+            Point point = getClickPoint();\n+            robot.mouseMove(point.x, point.y);\n+            robot.waitForIdle();\n@@ -57,13 +66,3 @@\n-        robot.waitForIdle();\n-\n-        Point point = getClickPoint();\n-        robot.mouseMove(point.x, point.y);\n-        robot.waitForIdle();\n-\n-        click(1);\n-        robot.waitForIdle();\n-        assertEditing(false);\n-\n-        click(2);\n-        robot.waitForIdle();\n-        checkSelectedText(null);\n+            click(1);\n+            robot.waitForIdle();\n+            assertEditing(false);\n@@ -71,3 +70,3 @@\n-        click(3);\n-        robot.waitForIdle();\n-        checkSelectedText(FIRST);\n+            click(2);\n+            robot.waitForIdle();\n+            checkSelectedText(null);\n@@ -75,0 +74,3 @@\n+            click(3);\n+            robot.waitForIdle();\n+            checkSelectedText(FIRST);\n@@ -76,3 +78,3 @@\n-        click(4);\n-        robot.waitForIdle();\n-        checkSelectedText(ALL);\n+            click(4);\n+            robot.waitForIdle();\n+            checkSelectedText(ALL);\n@@ -80,1 +82,2 @@\n-        setClickCountToStart(1);\n+            setClickCountToStart(1);\n+            robot.waitForIdle();\n@@ -82,3 +85,3 @@\n-        click(1);\n-        robot.waitForIdle();\n-        checkSelectedText(null);\n+            click(1);\n+            robot.waitForIdle();\n+            checkSelectedText(null);\n@@ -86,3 +89,3 @@\n-        click(2);\n-        robot.waitForIdle();\n-        checkSelectedText(FIRST);\n+            click(2);\n+            robot.waitForIdle();\n+            checkSelectedText(FIRST);\n@@ -90,3 +93,3 @@\n-        click(3);\n-        robot.waitForIdle();\n-        checkSelectedText(ALL);\n+            click(3);\n+            robot.waitForIdle();\n+            checkSelectedText(ALL);\n@@ -94,1 +97,2 @@\n-        setClickCountToStart(3);\n+            setClickCountToStart(3);\n+            robot.waitForIdle();\n@@ -96,3 +100,3 @@\n-        click(1);\n-        robot.waitForIdle();\n-        assertEditing(false);\n+            click(1);\n+            robot.waitForIdle();\n+            assertEditing(false);\n@@ -100,3 +104,3 @@\n-        click(2);\n-        robot.waitForIdle();\n-        assertEditing(false);\n+            click(2);\n+            robot.waitForIdle();\n+            assertEditing(false);\n@@ -104,3 +108,3 @@\n-        click(3);\n-        robot.waitForIdle();\n-        checkSelectedText(null);\n+            click(3);\n+            robot.waitForIdle();\n+            checkSelectedText(null);\n@@ -108,3 +112,3 @@\n-        click(4);\n-        robot.waitForIdle();\n-        checkSelectedText(FIRST);\n+            click(4);\n+            robot.waitForIdle();\n+            checkSelectedText(FIRST);\n@@ -112,3 +116,3 @@\n-        click(5);\n-        robot.waitForIdle();\n-        checkSelectedText(ALL);\n+            click(5);\n+            robot.waitForIdle();\n+            checkSelectedText(ALL);\n@@ -116,0 +120,1 @@\n+            SwingUtilities.invokeAndWait(() -> table.editCellAt(0, 0));\n@@ -117,1 +122,2 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n+            robot.waitForIdle();\n+            assertEditing(true);\n@@ -119,3 +125,6 @@\n-            @Override\n-            public void run() {\n-                table.editCellAt(0, 0);\n+            click(2);\n+            robot.waitForIdle();\n+            checkSelectedText(FIRST);\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(frame::dispose);\n@@ -123,9 +132,1 @@\n-        });\n-\n-        robot.waitForIdle();\n-        assertEditing(true);\n-\n-        click(2);\n-        robot.waitForIdle();\n-        checkSelectedText(FIRST);\n-\n+        }\n@@ -137,0 +138,1 @@\n+        robot.waitForIdle();\n@@ -138,0 +140,1 @@\n+        robot.waitForIdle();\n@@ -142,8 +145,4 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                DefaultCellEditor editor =\n-                        (DefaultCellEditor) table.getDefaultEditor(String.class);\n-                editor.setClickCountToStart(clicks);\n-            }\n+        SwingUtilities.invokeAndWait(() -> {\n+            DefaultCellEditor editor =\n+                    (DefaultCellEditor) table.getDefaultEditor(String.class);\n+            editor.setClickCountToStart(clicks);\n@@ -151,1 +150,0 @@\n-\n@@ -155,6 +153,2 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                table.getCellEditor().cancelCellEditing();\n-            }\n+        SwingUtilities.invokeAndWait(() -> {\n+            table.getCellEditor().cancelCellEditing();\n@@ -165,16 +159,9 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                DefaultCellEditor editor =\n-                        (DefaultCellEditor) table.getDefaultEditor(String.class);\n-                JTextField field = (JTextField) editor.getComponent();\n-                String text = field.getSelectedText();\n-                if (sel == null) {\n-                    if (text != null && text.length() != 0) {\n-                        throw new RuntimeException(\"Nothing should be selected,\"\n-                                + \" but \\\"\" + text + \"\\\" is selected.\");\n-                    }\n-                } else if (!sel.equals(text)) {\n-                    throw new RuntimeException(\"\\\"\" + sel + \"\\\" should be \"\n-                            + \"selected, but \\\"\" + text + \"\\\" is selected.\");\n+        SwingUtilities.invokeAndWait(() -> {\n+            DefaultCellEditor editor =\n+                    (DefaultCellEditor) table.getDefaultEditor(String.class);\n+            JTextField field = (JTextField) editor.getComponent();\n+            String text = field.getSelectedText();\n+            if (sel == null) {\n+                if (text != null && text.length() != 0) {\n+                    throw new RuntimeException(\"Nothing should be selected,\"\n+                            + \" but \\\"\" + text + \"\\\" is selected.\");\n@@ -182,0 +169,3 @@\n+            } else if (!sel.equals(text)) {\n+                throw new RuntimeException(\"\\\"\" + sel + \"\\\" should be \"\n+                        + \"selected, but \\\"\" + text + \"\\\" is selected.\");\n@@ -187,10 +177,6 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                if (editing && !table.isEditing()) {\n-                    throw new RuntimeException(\"Table should be editing\");\n-                }\n-                if (!editing && table.isEditing()) {\n-                    throw new RuntimeException(\"Table should not be editing\");\n-                }\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (editing && !table.isEditing()) {\n+                throw new RuntimeException(\"Table should be editing\");\n+            }\n+            if (!editing && table.isEditing()) {\n+                throw new RuntimeException(\"Table should not be editing\");\n@@ -203,10 +189,6 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                Rectangle rect = table.getCellRect(0, 0, false);\n-                Point point = new Point(rect.x + rect.width \/ 5,\n-                        rect.y + rect.height \/ 2);\n-                SwingUtilities.convertPointToScreen(point, table);\n-                result[0] = point;\n-            }\n+        SwingUtilities.invokeAndWait(() -> {\n+            Rectangle rect = table.getCellRect(0, 0, false);\n+            Point point = new Point(rect.x + rect.width \/ 5,\n+                                   rect.y + rect.height \/ 2);\n+            SwingUtilities.convertPointToScreen(point, table);\n+            result[0] = point;\n@@ -214,1 +196,0 @@\n-\n@@ -221,2 +202,2 @@\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -234,1 +215,1 @@\n-        JFrame frame = new JFrame(\"bug6263446\");\n+        frame = new JFrame(\"bug6263446\");\n@@ -238,0 +219,2 @@\n+        frame.setAlwaysOnTop(true);\n+        frame.setLocationRelativeTo(null);\n@@ -240,0 +223,1 @@\n+        frame.toFront();\n","filename":"test\/jdk\/javax\/swing\/JTable\/6263446\/bug6263446.java","additions":109,"deletions":125,"binary":false,"changes":234,"status":"modified"}]}