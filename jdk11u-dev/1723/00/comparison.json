{"files":[{"patch":"@@ -28,0 +28,1 @@\n+ * @library \/test\/lib\n@@ -34,0 +35,1 @@\n+import jdk.test.lib.Utils;\n@@ -35,3 +37,2 @@\n-interface AwaiterFactory {\n-    Awaiter getAwaiter();\n-}\n+public class Basic {\n+    static final long LONG_DELAY_MS = Utils.adjustTimeout(10_000);\n@@ -39,5 +40,3 @@\n-abstract class Awaiter extends Thread {\n-    private volatile Throwable result = null;\n-    protected void result(Throwable result) { this.result = result; }\n-    public Throwable result() { return this.result; }\n-}\n+    interface AwaiterFactory {\n+        Awaiter getAwaiter();\n+    }\n@@ -45,1 +44,5 @@\n-public class Basic {\n+    abstract static class Awaiter extends Thread {\n+        private volatile Throwable result = null;\n+        protected void result(Throwable result) { this.result = result; }\n+        public Throwable result() { return this.result; }\n+    }\n@@ -81,6 +84,3 @@\n-    private AwaiterFactory awaiterFactories(final CountDownLatch latch,\n-                                            final CountDownLatch gate,\n-                                            final int i) {\n-        if (i == 1)\n-            return new AwaiterFactory() { public Awaiter getAwaiter() {\n-                return awaiter(latch, gate); }};\n+    AwaiterFactory awaiterFactory(CountDownLatch latch, CountDownLatch gate) {\n+        return () -> awaiter(latch, gate);\n+    }\n@@ -88,2 +88,2 @@\n-        return new AwaiterFactory() { public Awaiter getAwaiter() {\n-            return awaiter(latch, gate, 10000); }};\n+    AwaiterFactory timedAwaiterFactory(CountDownLatch latch, CountDownLatch gate) {\n+        return () -> awaiter(latch, gate, LONG_DELAY_MS);\n@@ -103,2 +103,2 @@\n-            AwaiterFactory factory1 = test.awaiterFactories(latch, gate, 1);\n-            AwaiterFactory factory2 = test.awaiterFactories(latch, gate, 0);\n+            AwaiterFactory factory1 = test.awaiterFactory(latch, gate);\n+            AwaiterFactory factory2 = test.timedAwaiterFactory(latch, gate);\n@@ -132,2 +132,2 @@\n-            AwaiterFactory factory1 = test.awaiterFactories(latch, gate, 1);\n-            AwaiterFactory factory2 = test.awaiterFactories(latch, gate, 0);\n+            AwaiterFactory factory1 = test.awaiterFactory(latch, gate);\n+            AwaiterFactory factory2 = test.timedAwaiterFactory(latch, gate);\n@@ -165,2 +165,2 @@\n-            AwaiterFactory factory1 = test.awaiterFactories(latch, gate, 1);\n-            AwaiterFactory factory2 = test.awaiterFactories(latch, gate, 0);\n+            AwaiterFactory factory1 = test.awaiterFactory(latch, gate);\n+            AwaiterFactory factory2 = test.timedAwaiterFactory(latch, gate);\n","filename":"test\/jdk\/java\/util\/concurrent\/CountDownLatch\/Basic.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"}]}