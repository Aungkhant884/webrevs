{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,2 @@\n+import java.util.stream.Stream;\n+import java.util.stream.Collectors;\n@@ -58,0 +60,2 @@\n+        String ipv4Reversed = null;\n+\n@@ -59,1 +63,2 @@\n-            \/\/ First check that host resolves to IPv4 address\n+            \/\/ called from lookupWithIPv4Prefer\n+            \/\/ obtain an IPv4 address from the hostname.\n@@ -63,0 +68,3 @@\n+                ia = InetAddress.getByName(addr);\n+                System.out.print(addr + \":\" + ia.getHostName());\n+                return;\n@@ -67,5 +75,12 @@\n-        } else {\n-            String tmp = lookupWithIPv4Prefer();\n-            System.out.println(\"IPv4 lookup results: [\" + tmp + \"]\");\n-            if (SKIP.equals(tmp)) {\n-                System.out.println(HOST + \" can't be resolved - test skipped.\");\n+        } else if (args.length == 2 && args[0].equals(\"reverse\")) {\n+            \/\/ called from reverseWithIPv4Prefer\n+            \/\/ Check that IPv4 address can be resolved to host\n+            \/\/ with -Djava.net.preferIPv4Stack=true\n+            try {\n+                InetAddress ia = InetAddress.getByName(args[1]);\n+                addr = ia.getHostAddress();\n+                ipv4Reversed = ia.getHostName();\n+                System.out.print(addr + \":\" + ipv4Reversed);\n+                return;\n+            } catch (UnknownHostException e) {\n+                System.out.print(SKIP);\n@@ -74,0 +89,15 @@\n+        } else if (args.length != 1 || !args[0].equals(\"root\")) {\n+            throw new IllegalArgumentException(Stream.of(args).collect(Collectors.joining(\" \")));\n+        }\n+\n+        \/\/ spawn a subprocess to obtain the IPv4 address\n+        String tmp = lookupWithIPv4Prefer();\n+        System.out.println(\"IPv4 lookup results: [\" + tmp + \"]\");\n+        if (SKIP.equals(tmp)) {\n+            System.out.println(HOST + \" can't be resolved - test skipped.\");\n+            return;\n+        }\n+\n+        String[] strs = tmp.split(\":\");\n+        addr = strs[0];\n+        ipv4Name = strs[1];\n@@ -75,3 +105,7 @@\n-            String[] strs = tmp.split(\":\");\n-            addr = strs[0];\n-            ipv4Name = strs[1];\n+        \/\/ check that the a reverse lookup of the IPv4 address\n+        \/\/ will succeed with the IPv4 only stack\n+        tmp = reverseWithIPv4Prefer(addr);\n+        System.out.println(\"IPv4 reverse lookup results: [\" + tmp + \"]\");\n+        if (SKIP.equals(tmp)) {\n+            System.out.println(addr + \" can't be resolved with preferIPv4 - test skipped.\");\n+            return;\n@@ -80,1 +114,4 @@\n-        \/\/ reverse lookup\n+        strs = tmp.split(\":\");\n+        ipv4Reversed = strs[1];\n+\n+        \/\/ Now check that a reverse lookup will succeed with the dual stack.\n@@ -83,8 +120,10 @@\n-        if (args.length == 0) {\n-            System.out.print(addr + \":\" + name);\n-            return;\n-        } else {\n-            System.out.println(\"(default) \" + addr + \"--> \" + name);\n-            if (!ipv4Name.equals(name)) {\n-                throw new RuntimeException(\"Mismatch between default\"\n-                        + \" and java.net.preferIPv4Stack=true results\");\n+\n+        System.out.println(\"(default) \" + addr + \"--> \" + name\n+                               + \" (reversed IPv4: \" + ipv4Reversed + \")\");\n+        if (!ipv4Name.equals(name)) {\n+            \/\/ adding some diagnosting\n+            System.err.println(\"name=\" + name + \" doesn't match expected=\" + ipv4Name);\n+            System.err.println(\"Listing all adresses:\");\n+            for (InetAddress any : InetAddress.getAllByName(HOST)) {\n+                System.err.println(\"\\t[\" + any + \"] address=\" + any.getHostAddress()\n+                                   + \", host=\" + any.getHostName());\n@@ -92,0 +131,3 @@\n+            \/\/ make the test fail...\n+            throw new RuntimeException(\"Mismatch between default\"\n+                    + \" and java.net.preferIPv4Stack=true results\");\n@@ -103,1 +145,0 @@\n-}\n@@ -105,0 +146,9 @@\n+    static String reverseWithIPv4Prefer(String addr) throws IOException {\n+        String java = JDKToolFinder.getTestJDKTool(\"java\");\n+        String testClz = Lookup.class.getName();\n+        List<String> cmd = List.of(java, \"-Djava.net.preferIPv4Stack=true\",\n+                                   \"-cp\", CLASS_PATH, testClz, \"reverse\", addr);\n+        System.out.println(\"Executing: \" + cmd);\n+        return new OutputAnalyzer(new ProcessBuilder(cmd).start()).getOutput();\n+    }\n+}\n","filename":"test\/jdk\/java\/net\/InetAddress\/ptr\/Lookup.java","additions":70,"deletions":20,"binary":false,"changes":90,"status":"modified"}]}