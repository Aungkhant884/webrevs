{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        return new SingleByte.Decoder(this, b2c, $ASCIICOMPATIBLE$);\n+        return new SingleByte.Decoder(this, b2c, $ASCIICOMPATIBLE$, $LATIN1DECODABLE$);\n","filename":"make\/data\/charsetmapping\/SingleByte-X.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+        boolean isLatin1Decodable = true;\n@@ -72,0 +73,3 @@\n+            if (e.cp > 0xFF) {\n+                isLatin1Decodable = false;\n+            }\n@@ -181,0 +185,3 @@\n+            if (line.indexOf(\"$LATIN1DECODABLE$\") != -1) {\n+                line = line.replace(\"$LATIN1DECODABLE$\", isLatin1Decodable ? \"true\" : \"false\");\n+            }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/charsetmapping\/SBCS.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -194,0 +194,6 @@\n+            \/\/ fastpath for always Latin1 decodable single byte\n+            if (COMPACT_STRINGS && cd instanceof ArrayDecoder && ((ArrayDecoder)cd).isLatin1Decodable()) {\n+                byte[] dst = new byte[len];\n+                ((ArrayDecoder)cd).decodeToLatin1(ba, off, len, dst);\n+                return result.with(dst, LATIN1);\n+            }\n@@ -281,0 +287,7 @@\n+        \/\/ fastpath for always Latin1 decodable single byte\n+        if (COMPACT_STRINGS && cd instanceof ArrayDecoder && ((ArrayDecoder)cd).isLatin1Decodable()) {\n+            byte[] dst = new byte[len];\n+            ((ArrayDecoder)cd).decodeToLatin1(ba, off, len, dst);\n+            return new Result().with(dst, LATIN1);\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringCoding.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,3 @@\n+ *\n+ * FastPath encoded byte[]-> \"String Latin1 coding\" byte[] decoder for use when\n+ * charset is always decodable to the internal String Latin1 coding byte[], ie. all mappings <=0xff\n@@ -39,0 +42,10 @@\n+\n+    \/\/ Is always decodable to internal String Latin1 coding, ie. all mappings <= 0xff\n+    default boolean isLatin1Decodable() {\n+        return false;\n+    }\n+\n+    \/\/ Decode to internal String Latin1 coding byte[] fastpath for when isLatin1Decodable == true\n+    default int decodeToLatin1(byte[] src, int sp, int len, byte[] dst) {\n+        return 0;\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/ArrayDecoder.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+        private final boolean isLatin1Decodable;\n@@ -58,0 +59,1 @@\n+            this.isLatin1Decodable = false;\n@@ -64,0 +66,8 @@\n+            this.isLatin1Decodable = false;\n+        }\n+\n+        public Decoder(Charset cs, char[] b2c, boolean isASCIICompatible, boolean isLatin1Decodable) {\n+            super(cs, 1.0f, 1.0f);\n+            this.b2c = b2c;\n+            this.isASCIICompatible = isASCIICompatible;\n+            this.isLatin1Decodable = isLatin1Decodable;\n@@ -127,0 +137,12 @@\n+        @Override\n+        public int decodeToLatin1(byte[] src, int sp, int len, byte[] dst) {\n+            if (len > dst.length)\n+                len = dst.length;\n+\n+            int dp = 0;\n+            while (dp < len) {\n+                dst[dp++] = (byte)decode(src[sp++]);\n+            }\n+            return dp;\n+        }\n+\n@@ -146,0 +168,5 @@\n+\n+        @Override\n+        public boolean isLatin1Decodable() {\n+            return isLatin1Decodable;\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/SingleByte.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"}]}