{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -477,2 +477,1 @@\n-            String s = ex.getMessage();\n-            if (!s.startsWith(\"Bad file number\")) {\n+            if (!ex.getMessage().equalsIgnoreCase(\"stream closed\")) {\n@@ -481,1 +480,1 @@\n-            \/\/ else we got a Bad file number IOException which just means\n+            \/\/ else we got a \"Stream closed\" IOException which just means\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/VMConnection.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+import java.io.IOException;\n+import java.io.PrintStream;\n@@ -38,0 +40,4 @@\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -40,0 +46,2 @@\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n@@ -52,10 +60,18 @@\n-    public static void main(String[] args) {\n-        System.out.println(OK_MSG);\n-        \/\/ print all args\n-        List<String> vmArgs = ManagementFactory.getRuntimeMXBean().getInputArguments();\n-        for (String s: vmArgs) {\n-            System.out.println(argString(s));\n-        }\n-        \/\/ print requested sys.props\n-        for (String p: args) {\n-            System.out.println(propString(p, System.getProperty(p)));\n+    \/**\n+     * 1st argument is a filename to redirect application output,\n+     * the rest are names of the properties to dump.\n+     *\/\n+    public static void main(String[] args) throws IOException {\n+        String outFile = args[0];\n+        try (PrintStream out = new PrintStream(outFile, StandardCharsets.UTF_8)) {\n+            out.println(OK_MSG);\n+            \/\/ print all args\n+            List<String> vmArgs = ManagementFactory.getRuntimeMXBean().getInputArguments();\n+            for (String s : vmArgs) {\n+                out.println(argString(s));\n+            }\n+            \/\/ print requested sys.props (skip 1st arg which is output filename)\n+            for (int i=1; i < args.length; i++) {\n+                String p = args[i];\n+                out.println(propString(p, System.getProperty(p)));\n+            }\n@@ -67,0 +83,2 @@\n+    private static final String outFilename = UUID.randomUUID().toString() + \".out\";\n+    private static final Path outPath = Paths.get(outFilename);\n@@ -72,1 +90,2 @@\n-                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options=-client -XX:+PrintVMOptions,main=\" + targ)\n+                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options=-client -XX:+PrintVMOptions\"\n+                + \",main=\" + targ + \" \" + outFilename)\n@@ -77,1 +96,2 @@\n-                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options='-Dboo=foo',main=\" + targ + \" boo\")\n+                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options='-Dboo=foo'\"\n+                + \",main=\" + targ + \" \" + outFilename + \" boo\")\n@@ -82,1 +102,2 @@\n-                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options=\\\"-Dboo=foo 2\\\",main=\" + targ + \" boo\")\n+                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options=\\\"-Dboo=foo 2\\\"\"\n+                + \",main=\" + targ + \" \" + outFilename + \" boo\")\n@@ -87,1 +108,2 @@\n-                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options='-Dboo=foo 2',main=\" + targ + \" boo\")\n+                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options='-Dboo=foo 2'\"\n+                + \",main=\" + targ + \" \" + outFilename + \" boo\")\n@@ -92,1 +114,2 @@\n-                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options=-Dboo=foo '-Dboo2=foo 2',main=\" + targ + \" boo boo2\")\n+                \"com.sun.jdi.CommandLineLaunch:vmexec=java,options=-Dboo=foo '-Dboo2=foo 2'\"\n+                + \",main=\" + targ + \" \" + outFilename + \" boo boo2\")\n@@ -101,1 +124,1 @@\n-                + \",main=\" + targ)\n+                + \",main=\" + targ + \" \" + outFilename)\n@@ -110,1 +133,1 @@\n-                        + \",main=\" + targ)\n+                        + \",main=\" + targ + \" \" + outFilename)\n@@ -123,1 +146,1 @@\n-                        + \",main=\" + targ + \" prop1 prop2 prop3 prop4\")\n+                        + \",main=\" + targ + \" \" + outFilename + \" prop1 prop2 prop3 prop4\")\n@@ -157,0 +180,1 @@\n+\n@@ -160,3 +184,0 @@\n-            OutputAnalyzer out = new OutputAnalyzer(jdb.getJdbOutput());\n-            out.shouldContain(JbdOptionsTarg.OK_MSG);\n-            return new TestResult(out);\n@@ -164,0 +185,8 @@\n+        String output = Files.readAllLines(outPath, StandardCharsets.UTF_8).stream()\n+                .collect(Collectors.joining(System.getProperty(\"line.separator\")));\n+        Files.deleteIfExists(outPath);\n+        System.out.println(\"Debuggee output: [\");\n+        System.out.println(output);\n+        System.out.println(\"]\");\n+        OutputAnalyzer out = new OutputAnalyzer(output);\n+        return new TestResult(out);\n","filename":"test\/jdk\/com\/sun\/jdi\/JdbOptions.java","additions":50,"deletions":21,"binary":false,"changes":71,"status":"modified"}]}