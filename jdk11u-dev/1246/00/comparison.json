{"files":[{"patch":"@@ -140,1 +140,1 @@\n- * @LastModified: June 2022\n+ * @LastModified: July 2022\n@@ -153,0 +153,4 @@\n+    private boolean overLimit = false;\n+    public int grpLimit = 0;\n+    public int opLimit = 0;\n+    public int totalOpLimit = 0;\n@@ -379,0 +383,1 @@\n+          totalOpCount++;\n@@ -384,0 +389,1 @@\n+              totalOpCount++;\n@@ -393,0 +399,10 @@\n+      \/*\n+       * Sets the overLimit status as soon as the count of operators is over the\n+       * limit, which in turn triggers the XPathParser to report an error.\n+      *\/\n+      if (grpLimit > 0 && grpCount > grpLimit\n+              || opLimit > 0 && opCount > opLimit\n+              || totalOpLimit > 0 && totalOpCount > totalOpLimit) {\n+          overLimit = true;\n+      }\n+\n@@ -594,0 +610,1 @@\n+      overLimit = false;\n@@ -600,0 +617,1 @@\n+      if (overLimit) return null;\n@@ -674,0 +692,1 @@\n+            if (overLimit) return null;\n@@ -676,1 +695,0 @@\n-      totalOpCount += opCount;\n@@ -680,0 +698,4 @@\n+    public boolean isOverLimit() {\n+        return overLimit;\n+    }\n+\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/java_cup\/internal\/runtime\/lr_parser.java","additions":24,"deletions":2,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @LastModified: Jan 2022\n+ * @LastModified: July 2022\n@@ -49,3 +49,0 @@\n-    private int grpLimit = 0;\n-    private int opLimit = 0;\n-    private int totalOpLimit = 0;\n@@ -1121,3 +1118,10 @@\n-            int grpCount = getCount(ID_GROUP);\n-            int opCount = getCount(ID_OPERATOR);\n-            int totalOpCount = getCount(ID_TOTAL_OPERATOR);\n+            \/*\n+             * While the Java CUP parser is used for parsing symbols, the error\n+             * report mechanism has so far been kept within the Xalan implementation.\n+             * An error, i.e. the count of operators is over the limit, is\n+             * therefore handled here.\n+            *\/\n+            if (isOverLimit()) {\n+                int grpCount = getCount(ID_GROUP);\n+                int opCount = getCount(ID_OPERATOR);\n+                int totalOpCount = getCount(ID_TOTAL_OPERATOR);\n@@ -1125,19 +1129,20 @@\n-            String errCode = null;\n-            Object[] params = null;\n-            if (grpLimit > 0 && grpCount > grpLimit) {\n-                errCode = ErrorMsg.XPATH_GROUP_LIMIT;\n-                params = new Object[]{grpCount, grpLimit,\n-                    _xmlSM.getStateLiteral(Limit.XPATH_GROUP_LIMIT)};\n-            } else if (opLimit > 0 && opCount > opLimit) {\n-                errCode = ErrorMsg.XPATH_OPERATOR_LIMIT;\n-                params = new Object[]{opCount, opLimit,\n-                    _xmlSM.getStateLiteral(Limit.XPATH_OP_LIMIT)};\n-            } else if (totalOpLimit > 0 && totalOpCount > totalOpLimit) {\n-                errCode = ErrorMsg.XPATH_TOTAL_OPERATOR_LIMIT;\n-                params = new Object[]{totalOpCount, totalOpLimit,\n-                    _xmlSM.getStateLiteral(Limit.XPATH_TOTALOP_LIMIT)};\n-            }\n-            if (errCode != null) {\n-                _parser.reportError(Constants.FATAL,\n-                        new ErrorMsg(errCode, lineNumber, params));\n-                throw new RuntimeException(ErrorMsg.XPATH_LIMIT);\n+                String errCode = null;\n+                Object[] params = null;\n+                if (grpLimit > 0 && grpCount > grpLimit) {\n+                    errCode = ErrorMsg.XPATH_GROUP_LIMIT;\n+                    params = new Object[]{grpCount, grpLimit,\n+                        _xmlSM.getStateLiteral(Limit.XPATH_GROUP_LIMIT)};\n+                } else if (opLimit > 0 && opCount > opLimit) {\n+                    errCode = ErrorMsg.XPATH_OPERATOR_LIMIT;\n+                    params = new Object[]{opCount, opLimit,\n+                        _xmlSM.getStateLiteral(Limit.XPATH_OP_LIMIT)};\n+                } else if (totalOpLimit > 0 && totalOpCount > totalOpLimit) {\n+                    errCode = ErrorMsg.XPATH_TOTAL_OPERATOR_LIMIT;\n+                    params = new Object[]{totalOpCount, totalOpLimit,\n+                        _xmlSM.getStateLiteral(Limit.XPATH_TOTALOP_LIMIT)};\n+                }\n+                if (errCode != null) {\n+                    _parser.reportError(Constants.FATAL,\n+                            new ErrorMsg(errCode, lineNumber, params));\n+                    throw new RuntimeException(ErrorMsg.XPATH_LIMIT);\n+                }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/XPathParser.java","additions":31,"deletions":26,"binary":false,"changes":57,"status":"modified"}]}