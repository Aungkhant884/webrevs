{"files":[{"patch":"@@ -3910,3 +3910,6 @@\n-            Color bgColor = UIManager.getColor(\"TabbedPane.tabAreaBackground\");\n-            if (bgColor == null) {\n-                bgColor = tabPane.getBackground();\n+            Color background = tabPane.getBackground();\n+            Color tabAreaBackground = UIManager.getColor(\"TabbedPane.tabAreaBackground\");\n+            if (background instanceof UIResource && tabAreaBackground != null) {\n+                setBackground(tabAreaBackground);\n+            } else {\n+                setBackground(background);\n@@ -3914,1 +3917,0 @@\n-            setBackground(bgColor);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTabbedPaneUI.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,119 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.*;\n+import java.util.ArrayList;\n+import java.util.concurrent.CountDownLatch;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.UIManager;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8172269 8244557\n+ * @summary Tests JTabbedPane background for SCROLL_TAB_LAYOUT\n+ * @run main TestBackgroundScrollPolicy\n+ *\/\n+\n+public class TestBackgroundScrollPolicy {\n+    private static Robot ROBOT;\n+\n+    public static void main(String[] args) throws Exception {\n+        ROBOT = new Robot();\n+        ROBOT.setAutoWaitForIdle(true);\n+        ROBOT.setAutoDelay(100);\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing L&F: \" + laf.getClassName());\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            try {\n+                SwingUtilities.invokeAndWait(() -> createGUI());\n+                ROBOT.waitForIdle();\n+                ROBOT.delay(1000);\n+                SwingUtilities.invokeAndWait(() -> test(laf));\n+                ROBOT.delay(2000);\n+            } finally {\n+                if (frame != null) SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            }\n+            ROBOT.delay(1000);\n+        }\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void addOpaqueError(UIManager.LookAndFeelInfo laf, boolean opaque) {\n+        throw new RuntimeException(laf.getClassName() + \" background color wrong for opaque=\" + opaque);\n+    }\n+\n+    private static JFrame frame;\n+    private static JTabbedPane pane;\n+\n+    public static void createGUI() {\n+        pane = new JTabbedPane();\n+        pane.setOpaque(true);\n+        pane.setBackground(Color.RED);\n+        for (int i = 0; i < 3; i++) {\n+            pane.addTab(\"Tab \" + i, new JLabel(\"Content area \" + i));\n+        }\n+        pane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\n+        pane.repaint();\n+        frame = new JFrame();\n+        frame.getContentPane().setBackground(Color.BLUE);\n+        frame.add(pane);\n+        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n+        frame.setSize(400, 200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        frame.toFront();\n+    }\n+\n+    public static void test(UIManager.LookAndFeelInfo laf) {\n+        Point point = new Point(pane.getWidth() - 2, 2);\n+        SwingUtilities.convertPointToScreen(point, pane);\n+        Color actual = ROBOT.getPixelColor(point.x, point.y);\n+\n+        boolean opaque = pane.isOpaque();\n+        Color expected = opaque\n+                ? pane.getBackground()\n+                : frame.getContentPane().getBackground();\n+\n+        if (!expected.equals(actual)){\n+            System.out.println(\"expected \" + expected + \" actual \" + actual);\n+            addOpaqueError(laf, opaque);\n+        }\n+\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/TestBackgroundScrollPolicy.java","additions":119,"deletions":0,"binary":false,"changes":119,"status":"added"}]}