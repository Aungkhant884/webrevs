{"files":[{"patch":"@@ -0,0 +1,548 @@\n+#\n+# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+m4_include([basic_tools.m4])\n+m4_include([basic_windows.m4])\n+\n+###############################################################################\n+AC_DEFUN_ONCE([BASIC_INIT],\n+[\n+  # Save the original command line. This is passed to us by the wrapper configure script.\n+  AC_SUBST(CONFIGURE_COMMAND_LINE)\n+  # AUTOCONF might be set in the environment by the user. Preserve for \"make reconfigure\".\n+  AC_SUBST(AUTOCONF)\n+  # Save the path variable before it gets changed\n+  ORIGINAL_PATH=\"$PATH\"\n+  AC_SUBST(ORIGINAL_PATH)\n+  DATE_WHEN_CONFIGURED=`date`\n+  AC_SUBST(DATE_WHEN_CONFIGURED)\n+  AC_MSG_NOTICE([Configuration created at $DATE_WHEN_CONFIGURED.])\n+])\n+\n+###############################################################################\n+# Check that there are no unprocessed overridden variables left.\n+# If so, they are an incorrect argument and we will exit with an error.\n+AC_DEFUN([BASIC_CHECK_LEFTOVER_OVERRIDDEN],\n+[\n+  if test \"x$CONFIGURE_OVERRIDDEN_VARIABLES\" != x; then\n+    # Replace the separating ! with spaces before presenting for end user.\n+    unknown_variables=${CONFIGURE_OVERRIDDEN_VARIABLES\/\/!\/ }\n+    AC_MSG_WARN([The following variables might be unknown to configure: $unknown_variables])\n+  fi\n+])\n+\n+###############################################################################\n+# Setup basic configuration paths, and platform-specific stuff related to PATHs.\n+AC_DEFUN_ONCE([BASIC_SETUP_PATHS],\n+[\n+  # Save the current directory this script was started from\n+  CONFIGURE_START_DIR=\"$PWD\"\n+\n+  # We might need to rewrite ORIGINAL_PATH, if it includes \"#\", to quote them\n+  # for make. We couldn't do this when we retrieved ORIGINAL_PATH, since SED\n+  # was not available at that time.\n+  REWRITTEN_PATH=`$ECHO \"$ORIGINAL_PATH\" | $SED -e 's\/#\/\\\\\\\\#\/g'`\n+  if test \"x$REWRITTEN_PATH\" != \"x$ORIGINAL_PATH\"; then\n+    ORIGINAL_PATH=\"$REWRITTEN_PATH\"\n+    AC_MSG_NOTICE([Rewriting ORIGINAL_PATH to $REWRITTEN_PATH])\n+  fi\n+\n+  if test \"x$OPENJDK_TARGET_OS\" = \"xwindows\"; then\n+    PATH_SEP=\";\"\n+    EXE_SUFFIX=\".exe\"\n+    BASIC_CHECK_PATHS_WINDOWS\n+  else\n+    PATH_SEP=\":\"\n+    EXE_SUFFIX=\"\"\n+  fi\n+  AC_SUBST(PATH_SEP)\n+  AC_SUBST(EXE_SUFFIX)\n+\n+  # We get the top-level directory from the supporting wrappers.\n+  AC_MSG_CHECKING([for top-level directory])\n+  AC_MSG_RESULT([$TOPDIR])\n+  AC_SUBST(TOPDIR)\n+  AC_SUBST(CONFIGURE_START_DIR)\n+\n+  if test \"x$CUSTOM_ROOT\" != x; then\n+    UTIL_FIXUP_PATH(CUSTOM_ROOT)\n+    WORKSPACE_ROOT=\"${CUSTOM_ROOT}\"\n+  else\n+    WORKSPACE_ROOT=\"${TOPDIR}\"\n+  fi\n+  AC_SUBST(WORKSPACE_ROOT)\n+\n+  # We can only call UTIL_FIXUP_PATH after BASIC_CHECK_PATHS_WINDOWS.\n+  UTIL_FIXUP_PATH(CONFIGURE_START_DIR)\n+  UTIL_FIXUP_PATH(TOPDIR)\n+\n+  # Locate the directory of this script.\n+  AUTOCONF_DIR=$TOPDIR\/make\/autoconf\n+\n+  # Setup username (for use in adhoc version strings etc)\n+  # Outer [ ] to quote m4.\n+  [ USERNAME=`$ECHO \"$USER\" | $TR -d -c '[a-z][A-Z][0-9]'` ]\n+  AC_SUBST(USERNAME)\n+])\n+\n+###############################################################################\n+# Evaluates platform specific overrides for devkit variables.\n+# $1: Name of variable\n+AC_DEFUN([BASIC_EVAL_DEVKIT_VARIABLE],\n+[\n+  if test \"x[$]$1\" = x; then\n+    eval $1=\"\\${$1_${OPENJDK_TARGET_CPU}}\"\n+  fi\n+])\n+\n+###############################################################################\n+# Evaluates platform specific overrides for build devkit variables.\n+# $1: Name of variable\n+AC_DEFUN([BASIC_EVAL_BUILD_DEVKIT_VARIABLE],\n+[\n+  if test \"x[$]$1\" = x; then\n+    eval $1=\"\\${$1_${OPENJDK_BUILD_CPU}}\"\n+  fi\n+])\n+\n+###############################################################################\n+AC_DEFUN_ONCE([BASIC_SETUP_DEVKIT],\n+[\n+  AC_ARG_WITH([devkit], [AS_HELP_STRING([--with-devkit],\n+      [use this devkit for compilers, tools and resources])])\n+\n+  if test \"x$with_devkit\" = xyes; then\n+    AC_MSG_ERROR([--with-devkit must have a value])\n+  elif test \"x$with_devkit\" != x && test \"x$with_devkit\" != xno; then\n+    UTIL_FIXUP_PATH([with_devkit])\n+    DEVKIT_ROOT=\"$with_devkit\"\n+    # Check for a meta data info file in the root of the devkit\n+    if test -f \"$DEVKIT_ROOT\/devkit.info\"; then\n+      . $DEVKIT_ROOT\/devkit.info\n+      # This potentially sets the following:\n+      # A descriptive name of the devkit\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_NAME])\n+      # Corresponds to --with-extra-path\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_EXTRA_PATH])\n+      # Corresponds to --with-toolchain-path\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_TOOLCHAIN_PATH])\n+      # Corresponds to --with-sysroot\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_SYSROOT])\n+\n+      # Identifies the Visual Studio version in the devkit\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_VS_VERSION])\n+      # The Visual Studio include environment variable\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_VS_INCLUDE])\n+      # The Visual Studio lib environment variable\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_VS_LIB])\n+      # Corresponds to --with-msvcr-dll\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_MSVCR_DLL])\n+      # Corresponds to --with-msvcp-dll\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_MSVCP_DLL])\n+      # Corresponds to --with-ucrt-dll-dir\n+      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_UCRT_DLL_DIR])\n+    fi\n+\n+    AC_MSG_CHECKING([for devkit])\n+    if test \"x$DEVKIT_NAME\" != x; then\n+      AC_MSG_RESULT([$DEVKIT_NAME in $DEVKIT_ROOT])\n+    else\n+      AC_MSG_RESULT([$DEVKIT_ROOT])\n+    fi\n+\n+    UTIL_PREPEND_TO_PATH([EXTRA_PATH],$DEVKIT_EXTRA_PATH)\n+\n+    # Fallback default of just \/bin if DEVKIT_PATH is not defined\n+    if test \"x$DEVKIT_TOOLCHAIN_PATH\" = x; then\n+      DEVKIT_TOOLCHAIN_PATH=\"$DEVKIT_ROOT\/bin\"\n+    fi\n+    UTIL_PREPEND_TO_PATH([TOOLCHAIN_PATH],$DEVKIT_TOOLCHAIN_PATH)\n+\n+    # If DEVKIT_SYSROOT is set, use that, otherwise try a couple of known\n+    # places for backwards compatiblity.\n+    if test \"x$DEVKIT_SYSROOT\" != x; then\n+      SYSROOT=\"$DEVKIT_SYSROOT\"\n+    elif test -d \"$DEVKIT_ROOT\/$host_alias\/libc\"; then\n+      SYSROOT=\"$DEVKIT_ROOT\/$host_alias\/libc\"\n+    elif test -d \"$DEVKIT_ROOT\/$host\/sys-root\"; then\n+      SYSROOT=\"$DEVKIT_ROOT\/$host\/sys-root\"\n+    fi\n+\n+    if test \"x$DEVKIT_ROOT\" != x; then\n+      DEVKIT_LIB_DIR=\"$DEVKIT_ROOT\/lib\"\n+      if test \"x$OPENJDK_TARGET_CPU_BITS\" = x64; then\n+        DEVKIT_LIB_DIR=\"$DEVKIT_ROOT\/lib64\"\n+      fi\n+      AC_SUBST(DEVKIT_LIB_DIR)\n+    fi\n+  fi\n+\n+  # You can force the sysroot if the sysroot encoded into the compiler tools\n+  # is not correct.\n+  AC_ARG_WITH(sys-root, [AS_HELP_STRING([--with-sys-root],\n+      [alias for --with-sysroot for backwards compatability])],\n+      [SYSROOT=$with_sys_root]\n+  )\n+\n+  AC_ARG_WITH(sysroot, [AS_HELP_STRING([--with-sysroot],\n+      [use this directory as sysroot])],\n+      [SYSROOT=$with_sysroot]\n+  )\n+\n+  AC_ARG_WITH([tools-dir], [AS_HELP_STRING([--with-tools-dir],\n+      [alias for --with-toolchain-path for backwards compatibility])],\n+      [UTIL_PREPEND_TO_PATH([TOOLCHAIN_PATH],$with_tools_dir)]\n+  )\n+\n+  AC_ARG_WITH([toolchain-path], [AS_HELP_STRING([--with-toolchain-path],\n+      [prepend these directories when searching for toolchain binaries (compilers etc)])],\n+      [UTIL_PREPEND_TO_PATH([TOOLCHAIN_PATH],$with_toolchain_path)]\n+  )\n+\n+  AC_ARG_WITH([extra-path], [AS_HELP_STRING([--with-extra-path],\n+      [prepend these directories to the default path])],\n+      [UTIL_PREPEND_TO_PATH([EXTRA_PATH],$with_extra_path)]\n+  )\n+\n+  if test \"x$OPENJDK_BUILD_OS\" = \"xmacosx\"; then\n+    # If a devkit has been supplied, find xcodebuild in the toolchain_path.\n+    # If not, detect if Xcode is installed by running xcodebuild -version\n+    # if no Xcode installed, xcodebuild exits with 1\n+    # if Xcode is installed, even if xcode-select is misconfigured, then it exits with 0\n+    if test \"x$DEVKIT_ROOT\" != x || \/usr\/bin\/xcodebuild -version >\/dev\/null 2>&1; then\n+      # We need to use xcodebuild in the toolchain dir provided by the user, this will\n+      # fall back on the stub binary in \/usr\/bin\/xcodebuild\n+      AC_PATH_PROG([XCODEBUILD], [xcodebuild], [\/usr\/bin\/xcodebuild], [$TOOLCHAIN_PATH])\n+    else\n+      # this should result in SYSROOT being empty, unless --with-sysroot is provided\n+      # when only the command line tools are installed there are no SDKs, so headers\n+      # are copied into the system frameworks\n+      XCODEBUILD=\n+      AC_SUBST(XCODEBUILD)\n+    fi\n+\n+    AC_MSG_CHECKING([for sdk name])\n+    AC_ARG_WITH([sdk-name], [AS_HELP_STRING([--with-sdk-name],\n+        [use the platform SDK of the given name. @<:@macosx@:>@])],\n+        [SDKNAME=$with_sdk_name]\n+    )\n+    AC_MSG_RESULT([$SDKNAME])\n+\n+    # if toolchain path is specified then don't rely on system headers, they may not compile\n+    HAVE_SYSTEM_FRAMEWORK_HEADERS=0\n+    test -z \"$TOOLCHAIN_PATH\" && \\\n+      HAVE_SYSTEM_FRAMEWORK_HEADERS=`test ! -f \/System\/Library\/Frameworks\/Foundation.framework\/Headers\/Foundation.h; echo $?`\n+\n+    if test -z \"$SYSROOT\"; then\n+      if test -n \"$XCODEBUILD\"; then\n+        # if we don't have system headers, use default SDK name (last resort)\n+        if test -z \"$SDKNAME\" -a $HAVE_SYSTEM_FRAMEWORK_HEADERS -eq 0; then\n+          SDKNAME=${SDKNAME:-macosx}\n+        fi\n+\n+        if test -n \"$SDKNAME\"; then\n+          # Call xcodebuild to determine SYSROOT\n+          SYSROOT=`\"$XCODEBUILD\" -sdk $SDKNAME -version | $GREP '^Path: ' | $SED 's\/Path: \/\/'`\n+        fi\n+      else\n+        if test $HAVE_SYSTEM_FRAMEWORK_HEADERS -eq 0; then\n+          AC_MSG_ERROR([No xcodebuild tool and no system framework headers found, use --with-sysroot or --with-sdk-name to provide a path to a valid SDK])\n+        fi\n+      fi\n+    else\n+      # warn user if --with-sdk-name was also set\n+      if test -n \"$with_sdk_name\"; then\n+        AC_MSG_WARN([Both SYSROOT and --with-sdk-name are set, only SYSROOT will be used])\n+      fi\n+    fi\n+\n+    if test $HAVE_SYSTEM_FRAMEWORK_HEADERS -eq 0 -a -z \"$SYSROOT\"; then\n+      # If no system framework headers, then SYSROOT must be set, or we won't build\n+      AC_MSG_ERROR([Unable to determine SYSROOT and no headers found in \/System\/Library\/Frameworks. Check Xcode configuration, --with-sysroot or --with-sdk-name arguments.])\n+    fi\n+\n+    # Perform a basic sanity test\n+    if test ! -f \"$SYSROOT\/System\/Library\/Frameworks\/Foundation.framework\/Headers\/Foundation.h\"; then\n+      if test -z \"$SYSROOT\"; then\n+        AC_MSG_ERROR([Unable to find required framework headers, provide a path to an SDK via --with-sysroot or --with-sdk-name and be sure Xcode is installed properly])\n+      else\n+        AC_MSG_ERROR([Invalid SDK or SYSROOT path, dependent framework headers not found])\n+      fi\n+    fi\n+\n+    # set SDKROOT too, Xcode tools will pick it up\n+    SDKROOT=\"$SYSROOT\"\n+    AC_SUBST(SDKROOT)\n+  fi\n+\n+  # Prepend the extra path to the global path\n+  UTIL_PREPEND_TO_PATH([PATH],$EXTRA_PATH)\n+\n+  AC_MSG_CHECKING([for sysroot])\n+  AC_MSG_RESULT([$SYSROOT])\n+  AC_MSG_CHECKING([for toolchain path])\n+  AC_MSG_RESULT([$TOOLCHAIN_PATH])\n+  AC_MSG_CHECKING([for extra path])\n+  AC_MSG_RESULT([$EXTRA_PATH])\n+])\n+\n+###############################################################################\n+AC_DEFUN_ONCE([BASIC_SETUP_OUTPUT_DIR],\n+[\n+\n+  AC_ARG_WITH(conf-name, [AS_HELP_STRING([--with-conf-name],\n+      [use this as the name of the configuration @<:@generated from important configuration options@:>@])],\n+      [ CONF_NAME=${with_conf_name} ])\n+\n+  # Test from where we are running configure, in or outside of src root.\n+  AC_MSG_CHECKING([where to store configuration])\n+  if test \"x$CONFIGURE_START_DIR\" = \"x$TOPDIR\" \\\n+      || test \"x$CONFIGURE_START_DIR\" = \"x$CUSTOM_ROOT\" \\\n+      || test \"x$CONFIGURE_START_DIR\" = \"x$TOPDIR\/make\/autoconf\" \\\n+      || test \"x$CONFIGURE_START_DIR\" = \"x$TOPDIR\/make\" ; then\n+    # We are running configure from the src root.\n+    # Create a default .\/build\/target-variant-debuglevel output root.\n+    if test \"x${CONF_NAME}\" = x; then\n+      AC_MSG_RESULT([in default location])\n+      CONF_NAME=\"${OPENJDK_TARGET_OS}-${OPENJDK_TARGET_CPU}-${JVM_VARIANTS_WITH_AND}-${DEBUG_LEVEL}\"\n+    else\n+      AC_MSG_RESULT([in build directory with custom name])\n+    fi\n+\n+    OUTPUTDIR=\"${WORKSPACE_ROOT}\/build\/${CONF_NAME}\"\n+    $MKDIR -p \"$OUTPUTDIR\"\n+    if test ! -d \"$OUTPUTDIR\"; then\n+      AC_MSG_ERROR([Could not create build directory $OUTPUTDIR])\n+    fi\n+  else\n+    # We are running configure from outside of the src dir.\n+    # Then use the current directory as output dir!\n+    # If configuration is situated in normal build directory, just use the build\n+    # directory name as configuration name, otherwise use the complete path.\n+    if test \"x${CONF_NAME}\" = x; then\n+      CONF_NAME=`$ECHO $CONFIGURE_START_DIR | $SED -e \"s!^${TOPDIR}\/build\/!!\"`\n+    fi\n+    OUTPUTDIR=\"$CONFIGURE_START_DIR\"\n+    AC_MSG_RESULT([in current directory])\n+\n+    # WARNING: This might be a bad thing to do. You need to be sure you want to\n+    # have a configuration in this directory. Do some sanity checks!\n+\n+    if test ! -e \"$OUTPUTDIR\/spec.gmk\"; then\n+      # If we have a spec.gmk, we have run here before and we are OK. Otherwise, check for\n+      # other files\n+      files_present=`$LS $OUTPUTDIR`\n+      # Configure has already touched config.log and confdefs.h in the current dir when this check\n+      # is performed.\n+      filtered_files=`$ECHO \"$files_present\" \\\n+          | $SED -e 's\/config.log\/\/g' \\\n+              -e 's\/configure.log\/\/g' \\\n+              -e 's\/confdefs.h\/\/g' \\\n+              -e 's\/configure-support\/\/g' \\\n+              -e 's\/ \/\/g' \\\n+          | $TR -d '\\n'`\n+      if test \"x$filtered_files\" != x; then\n+        AC_MSG_NOTICE([Current directory is $CONFIGURE_START_DIR.])\n+        AC_MSG_NOTICE([Since this is not the source root, configure will output the configuration here])\n+        AC_MSG_NOTICE([(as opposed to creating a configuration in <src_root>\/build\/<conf-name>).])\n+        AC_MSG_NOTICE([However, this directory is not empty. This is not allowed, since it could])\n+        AC_MSG_NOTICE([seriously mess up just about everything.])\n+        AC_MSG_NOTICE([Try 'cd $TOPDIR' and restart configure])\n+        AC_MSG_NOTICE([(or create a new empty directory and cd to it).])\n+        AC_MSG_ERROR([Will not continue creating configuration in $CONFIGURE_START_DIR])\n+      fi\n+    fi\n+  fi\n+  AC_MSG_CHECKING([what configuration name to use])\n+  AC_MSG_RESULT([$CONF_NAME])\n+\n+  UTIL_FIXUP_PATH(OUTPUTDIR)\n+\n+  CONFIGURESUPPORT_OUTPUTDIR=\"$OUTPUTDIR\/configure-support\"\n+  $MKDIR -p \"$CONFIGURESUPPORT_OUTPUTDIR\"\n+\n+  SPEC=\"$OUTPUTDIR\/spec.gmk\"\n+  AC_SUBST(SPEC)\n+  AC_SUBST(CONF_NAME)\n+  AC_SUBST(OUTPUTDIR)\n+  AC_SUBST(CONFIGURESUPPORT_OUTPUTDIR)\n+\n+  # The spec.gmk file contains all variables for the make system.\n+  AC_CONFIG_FILES([$OUTPUTDIR\/spec.gmk:$AUTOCONF_DIR\/spec.gmk.in])\n+  # The bootcycle-spec.gmk file contains support for boot cycle builds.\n+  AC_CONFIG_FILES([$OUTPUTDIR\/bootcycle-spec.gmk:$AUTOCONF_DIR\/bootcycle-spec.gmk.in])\n+  # The buildjdk-spec.gmk file contains support for building a buildjdk when cross compiling.\n+  AC_CONFIG_FILES([$OUTPUTDIR\/buildjdk-spec.gmk:$AUTOCONF_DIR\/buildjdk-spec.gmk.in])\n+  # The compare.sh is used to compare the build output to other builds.\n+  AC_CONFIG_FILES([$OUTPUTDIR\/compare.sh:$AUTOCONF_DIR\/compare.sh.in])\n+  # The generated Makefile knows where the spec.gmk is and where the source is.\n+  # You can run make from the OUTPUTDIR, or from the top-level Makefile\n+  # which will look for generated configurations\n+  AC_CONFIG_FILES([$OUTPUTDIR\/Makefile:$AUTOCONF_DIR\/Makefile.in])\n+])\n+\n+###############################################################################\n+# Check if build directory is on local disk. If not possible to determine,\n+# we prefer to claim it's local.\n+# Argument 1: directory to test\n+# Argument 2: what to do if it is on local disk\n+# Argument 3: what to do otherwise (remote disk or failure)\n+AC_DEFUN([BASIC_CHECK_DIR_ON_LOCAL_DISK],\n+[\n+  # df -l lists only local disks; if the given directory is not found then\n+  # a non-zero exit code is given\n+  if test \"x$DF\" = x; then\n+    if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n+      # msys does not have df; use Windows \"net use\" instead.\n+      IS_NETWORK_DISK=`net use | grep \\`pwd -W | cut -d \":\" -f 1 | tr a-z A-Z\\`:`\n+      if test \"x$IS_NETWORK_DISK\" = x; then\n+        $2\n+      else\n+        $3\n+      fi\n+    else\n+      # No df here, say it's local\n+      $2\n+    fi\n+  else\n+    # JDK-8189619\n+    # df on AIX does not understand -l. On modern AIXes it understands \"-T local\" which\n+    # is the same. On older AIXes we just continue to live with a \"not local build\" warning.\n+    if test \"x$OPENJDK_TARGET_OS\" = xaix; then\n+      DF_LOCAL_ONLY_OPTION='-T local'\n+    else\n+      DF_LOCAL_ONLY_OPTION='-l'\n+    fi\n+    if $DF $DF_LOCAL_ONLY_OPTION $1 > \/dev\/null 2>&1; then\n+      $2\n+    else\n+      # In WSL, local Windows drives are considered remote by df, but we are\n+      # required to build into a directory accessible from windows, so consider\n+      # them local here.\n+      $3\n+    fi\n+  fi\n+])\n+\n+###############################################################################\n+# Check that source files have basic read permissions set. This might\n+# not be the case in cygwin in certain conditions.\n+AC_DEFUN_ONCE([BASIC_CHECK_SRC_PERMS],\n+[\n+  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n+    file_to_test=\"$TOPDIR\/LICENSE\"\n+    if test `$STAT -c '%a' \"$file_to_test\"` -lt 400; then\n+      AC_MSG_ERROR([Bad file permissions on src files. This is usually caused by cloning the repositories with a non cygwin hg in a directory not created in cygwin.])\n+    fi\n+  fi\n+])\n+\n+###############################################################################\n+AC_DEFUN_ONCE([BASIC_TEST_USABILITY_ISSUES],\n+[\n+  AC_MSG_CHECKING([if build directory is on local disk])\n+  BASIC_CHECK_DIR_ON_LOCAL_DISK($OUTPUTDIR,\n+      [OUTPUT_DIR_IS_LOCAL=\"yes\"],\n+      [OUTPUT_DIR_IS_LOCAL=\"no\"])\n+  AC_MSG_RESULT($OUTPUT_DIR_IS_LOCAL)\n+\n+  BASIC_CHECK_SRC_PERMS\n+\n+  # Check if the user has any old-style ALT_ variables set.\n+  FOUND_ALT_VARIABLES=`env | grep ^ALT_`\n+\n+  # Before generating output files, test if they exist. If they do, this is a reconfigure.\n+  # Since we can't properly handle the dependencies for this, warn the user about the situation\n+  if test -e $OUTPUTDIR\/spec.gmk; then\n+    IS_RECONFIGURE=yes\n+  else\n+    IS_RECONFIGURE=no\n+  fi\n+])\n+\n+################################################################################\n+#\n+# Default make target\n+#\n+AC_DEFUN_ONCE([BASIC_SETUP_DEFAULT_MAKE_TARGET],\n+[\n+  AC_ARG_WITH(default-make-target, [AS_HELP_STRING([--with-default-make-target],\n+      [set the default make target @<:@exploded-image@:>@])])\n+  if test \"x$with_default_make_target\" = \"x\" \\\n+      || test \"x$with_default_make_target\" = \"xyes\"; then\n+    DEFAULT_MAKE_TARGET=\"exploded-image\"\n+  elif test \"x$with_default_make_target\" = \"xno\"; then\n+    AC_MSG_ERROR([--without-default-make-target is not a valid option])\n+  else\n+    DEFAULT_MAKE_TARGET=\"$with_default_make_target\"\n+  fi\n+\n+  AC_SUBST(DEFAULT_MAKE_TARGET)\n+])\n+\n+###############################################################################\n+# Setup the default value for LOG=\n+#\n+AC_DEFUN_ONCE([BASIC_SETUP_DEFAULT_LOG],\n+[\n+  AC_ARG_WITH(log, [AS_HELP_STRING([--with-log],\n+      [[default vaue for make LOG argument [warn]]])])\n+  AC_MSG_CHECKING([for default LOG value])\n+  if test \"x$with_log\" = x; then\n+    DEFAULT_LOG=\"\"\n+  else\n+    # Syntax for valid LOG options is a bit too complex for it to be worth\n+    # implementing a test for correctness in configure. Just accept it.\n+    DEFAULT_LOG=$with_log\n+  fi\n+  AC_MSG_RESULT([$DEFAULT_LOG])\n+  AC_SUBST(DEFAULT_LOG)\n+])\n+\n+###############################################################################\n+# Code to run after AC_OUTPUT\n+AC_DEFUN_ONCE([BASIC_POST_CONFIG_OUTPUT],\n+[\n+  # Try to move config.log (generated by autoconf) to the configure-support directory.\n+  if test -e .\/config.log; then\n+    $MV -f .\/config.log \"$CONFIGURESUPPORT_OUTPUTDIR\/config.log\" 2> \/dev\/null\n+  fi\n+\n+  # Rotate our log file (configure.log)\n+  if test -e \"$OUTPUTDIR\/configure.log.old\"; then\n+    $RM -f \"$OUTPUTDIR\/configure.log.old\"\n+  fi\n+  if test -e \"$OUTPUTDIR\/configure.log\"; then\n+    $MV -f \"$OUTPUTDIR\/configure.log\" \"$OUTPUTDIR\/configure.log.old\" 2> \/dev\/null\n+  fi\n+\n+  # Move configure.log from current directory to the build output root\n+  if test -e .\/configure.log; then\n+    $MV -f .\/configure.log \"$OUTPUTDIR\/configure.log\" 2> \/dev\/null\n+  fi\n+\n+  # Make the compare script executable\n+  $CHMOD +x $OUTPUTDIR\/compare.sh\n+])\n","filename":"make\/autoconf\/basic.m4","additions":548,"deletions":0,"binary":false,"changes":548,"status":"added"},{"patch":"@@ -0,0 +1,486 @@\n+#\n+# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+###############################################################################\n+# Setup the most fundamental tools that relies on not much else to set up,\n+# but is used by much of the early bootstrap code.\n+AC_DEFUN_ONCE([BASIC_SETUP_FUNDAMENTAL_TOOLS],\n+[\n+  # Start with tools that do not need have cross compilation support\n+  # and can be expected to be found in the default PATH. These tools are\n+  # used by configure.\n+\n+  # First are all the simple required tools.\n+  UTIL_REQUIRE_PROGS(BASENAME, basename)\n+  UTIL_REQUIRE_PROGS(BASH, bash)\n+  UTIL_REQUIRE_PROGS(CAT, cat)\n+  UTIL_REQUIRE_PROGS(CHMOD, chmod)\n+  UTIL_REQUIRE_PROGS(CMP, cmp)\n+  UTIL_REQUIRE_PROGS(COMM, comm)\n+  UTIL_REQUIRE_PROGS(CP, cp)\n+  UTIL_REQUIRE_PROGS(CUT, cut)\n+  UTIL_REQUIRE_PROGS(DATE, date)\n+  UTIL_REQUIRE_PROGS(DIFF, [gdiff diff])\n+  UTIL_REQUIRE_PROGS(DIRNAME, dirname)\n+  UTIL_REQUIRE_PROGS(ECHO, echo)\n+  UTIL_REQUIRE_PROGS(EXPR, expr)\n+  UTIL_REQUIRE_PROGS(FILE, file)\n+  UTIL_REQUIRE_PROGS(FIND, find)\n+  UTIL_REQUIRE_PROGS(HEAD, head)\n+  UTIL_REQUIRE_PROGS(GUNZIP, gunzip)\n+  UTIL_REQUIRE_PROGS(GZIP, pigz gzip)\n+  UTIL_REQUIRE_PROGS(LN, ln)\n+  UTIL_REQUIRE_PROGS(LS, ls)\n+  # gmkdir is known to be safe for concurrent invocations with -p flag.\n+  UTIL_REQUIRE_PROGS(MKDIR, [gmkdir mkdir])\n+  UTIL_REQUIRE_PROGS(MKTEMP, mktemp)\n+  UTIL_REQUIRE_PROGS(MV, mv)\n+  UTIL_REQUIRE_PROGS(NAWK, [nawk gawk awk])\n+  UTIL_REQUIRE_PROGS(PRINTF, printf)\n+  UTIL_REQUIRE_PROGS(READLINK, [greadlink readlink])\n+  UTIL_REQUIRE_PROGS(RM, rm)\n+  UTIL_REQUIRE_PROGS(RMDIR, rmdir)\n+  UTIL_REQUIRE_PROGS(SH, sh)\n+  UTIL_REQUIRE_PROGS(SORT, sort)\n+  UTIL_REQUIRE_PROGS(TAIL, tail)\n+  UTIL_REQUIRE_PROGS(TAR, gtar tar)\n+  UTIL_REQUIRE_PROGS(TEE, tee)\n+  UTIL_REQUIRE_PROGS(TOUCH, touch)\n+  UTIL_REQUIRE_PROGS(TR, tr)\n+  UTIL_REQUIRE_PROGS(UNAME, uname)\n+  UTIL_REQUIRE_PROGS(UNIQ, uniq)\n+  UTIL_REQUIRE_PROGS(WC, wc)\n+  UTIL_REQUIRE_PROGS(WHICH, which)\n+  UTIL_REQUIRE_PROGS(XARGS, xargs)\n+\n+  # Then required tools that require some special treatment.\n+  UTIL_REQUIRE_SPECIAL(AWK, [AC_PROG_AWK])\n+  UTIL_REQUIRE_SPECIAL(GREP, [AC_PROG_GREP])\n+  UTIL_REQUIRE_SPECIAL(EGREP, [AC_PROG_EGREP])\n+  UTIL_REQUIRE_SPECIAL(FGREP, [AC_PROG_FGREP])\n+  UTIL_REQUIRE_SPECIAL(SED, [AC_PROG_SED])\n+\n+  # Always force rm.\n+  RM=\"$RM -f\"\n+\n+  # pwd behaves differently on various platforms and some don't support the -L flag.\n+  # Always use the bash builtin pwd to get uniform behavior.\n+  THEPWDCMD=pwd\n+\n+  # These are not required on all platforms\n+  UTIL_PATH_PROGS(CYGPATH, cygpath)\n+  UTIL_PATH_PROGS(WSLPATH, wslpath)\n+  UTIL_PATH_PROGS(DF, df)\n+  UTIL_PATH_PROGS(CPIO, [cpio bsdcpio])\n+  UTIL_PATH_PROGS(NICE, nice)\n+])\n+\n+###############################################################################\n+# Check if we have found a usable version of make\n+# $1: the path to a potential make binary (or empty)\n+# $2: the description on how we found this\n+AC_DEFUN([BASIC_CHECK_MAKE_VERSION],\n+[\n+  MAKE_CANDIDATE=\"$1\"\n+  DESCRIPTION=\"$2\"\n+\n+  # On Cygwin, we require a newer version of make than on other platforms\n+  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n+    MAKE_VERSION_EXPR=\"-e 4\\.\"\n+    MAKE_REQUIRED_VERSION=\"4.0\"\n+   else\n+    MAKE_VERSION_EXPR=\"-e 3\\.8[[12]] -e 4\\.\"\n+    MAKE_REQUIRED_VERSION=\"3.81\"\n+  fi\n+\n+  if test \"x$MAKE_CANDIDATE\" != x; then\n+    AC_MSG_NOTICE([Testing potential make at $MAKE_CANDIDATE, found using $DESCRIPTION])\n+    MAKE_VERSION_STRING=`$MAKE_CANDIDATE --version | $HEAD -n 1`\n+    IS_GNU_MAKE=`$ECHO $MAKE_VERSION_STRING | $GREP 'GNU Make'`\n+    if test \"x$IS_GNU_MAKE\" = x; then\n+      AC_MSG_NOTICE([Found potential make at $MAKE_CANDIDATE, however, this is not GNU Make. Ignoring.])\n+    else\n+      IS_MODERN_MAKE=`$ECHO $MAKE_VERSION_STRING | $GREP $MAKE_VERSION_EXPR`\n+      if test \"x$IS_MODERN_MAKE\" = x; then\n+        AC_MSG_NOTICE([Found GNU make at $MAKE_CANDIDATE, however this is not version $MAKE_REQUIRED_VERSION or later. (it is: $MAKE_VERSION_STRING). Ignoring.])\n+      else\n+        if test \"x$OPENJDK_BUILD_OS\" = \"xwindows\"; then\n+          if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n+            MAKE_EXPECTED_ENV='cygwin'\n+          elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n+            MAKE_EXPECTED_ENV='msys'\n+          else\n+            AC_MSG_ERROR([Unknown Windows environment])\n+          fi\n+          MAKE_BUILT_FOR=`$MAKE_CANDIDATE --version | $GREP -i 'built for'`\n+          IS_MAKE_CORRECT_ENV=`$ECHO $MAKE_BUILT_FOR | $GREP $MAKE_EXPECTED_ENV`\n+        else\n+          # Not relevant for non-Windows\n+          IS_MAKE_CORRECT_ENV=true\n+        fi\n+        if test \"x$IS_MAKE_CORRECT_ENV\" = x; then\n+          AC_MSG_NOTICE([Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring.])\n+        else\n+          FOUND_MAKE=$MAKE_CANDIDATE\n+          UTIL_FIXUP_EXECUTABLE(FOUND_MAKE)\n+        fi\n+      fi\n+    fi\n+  fi\n+])\n+\n+###############################################################################\n+AC_DEFUN([BASIC_CHECK_MAKE_OUTPUT_SYNC],\n+[\n+  # Check if make supports the output sync option and if so, setup using it.\n+  AC_MSG_CHECKING([if make --output-sync is supported])\n+  if $MAKE --version -O > \/dev\/null 2>&1; then\n+    OUTPUT_SYNC_SUPPORTED=true\n+    AC_MSG_RESULT([yes])\n+    AC_MSG_CHECKING([for output-sync value])\n+    AC_ARG_WITH([output-sync], [AS_HELP_STRING([--with-output-sync],\n+      [set make output sync type if supported by make. @<:@recurse@:>@])],\n+      [OUTPUT_SYNC=$with_output_sync])\n+    if test \"x$OUTPUT_SYNC\" = \"x\"; then\n+      OUTPUT_SYNC=none\n+    fi\n+    AC_MSG_RESULT([$OUTPUT_SYNC])\n+    if ! $MAKE --version -O$OUTPUT_SYNC > \/dev\/null 2>&1; then\n+      AC_MSG_ERROR([Make did not the support the value $OUTPUT_SYNC as output sync type.])\n+    fi\n+  else\n+    OUTPUT_SYNC_SUPPORTED=false\n+    AC_MSG_RESULT([no])\n+  fi\n+  AC_SUBST(OUTPUT_SYNC_SUPPORTED)\n+  AC_SUBST(OUTPUT_SYNC)\n+])\n+\n+###############################################################################\n+# Goes looking for a usable version of GNU make.\n+AC_DEFUN([BASIC_CHECK_GNU_MAKE],\n+[\n+  UTIL_SETUP_TOOL([MAKE],\n+  [\n+    # Try our hardest to locate a correct version of GNU make\n+    AC_PATH_PROGS(CHECK_GMAKE, gmake)\n+    BASIC_CHECK_MAKE_VERSION(\"$CHECK_GMAKE\", [gmake in PATH])\n+\n+    if test \"x$FOUND_MAKE\" = x; then\n+      AC_PATH_PROGS(CHECK_MAKE, make)\n+      BASIC_CHECK_MAKE_VERSION(\"$CHECK_MAKE\", [make in PATH])\n+    fi\n+\n+    if test \"x$FOUND_MAKE\" = x; then\n+      if test \"x$TOOLCHAIN_PATH\" != x; then\n+        # We have a toolchain path, check that as well before giving up.\n+        OLD_PATH=$PATH\n+        PATH=$TOOLCHAIN_PATH:$PATH\n+        AC_PATH_PROGS(CHECK_TOOLSDIR_GMAKE, gmake)\n+        BASIC_CHECK_MAKE_VERSION(\"$CHECK_TOOLSDIR_GMAKE\", [gmake in tools-dir])\n+        if test \"x$FOUND_MAKE\" = x; then\n+          AC_PATH_PROGS(CHECK_TOOLSDIR_MAKE, make)\n+          BASIC_CHECK_MAKE_VERSION(\"$CHECK_TOOLSDIR_MAKE\", [make in tools-dir])\n+        fi\n+        PATH=$OLD_PATH\n+      fi\n+    fi\n+\n+    if test \"x$FOUND_MAKE\" = x; then\n+      AC_MSG_ERROR([Cannot find GNU make $MAKE_REQUIRED_VERSION or newer! Please put it in the path, or add e.g. MAKE=\/opt\/gmake3.81\/make as argument to configure.])\n+    fi\n+  ],[\n+    # If MAKE was set by user, verify the version\n+    BASIC_CHECK_MAKE_VERSION(\"$MAKE\", [user supplied MAKE=$MAKE])\n+    if test \"x$FOUND_MAKE\" = x; then\n+      AC_MSG_ERROR([The specified make (by MAKE=$MAKE) is not GNU make $MAKE_REQUIRED_VERSION or newer.])\n+    fi\n+  ])\n+\n+  MAKE=$FOUND_MAKE\n+  AC_SUBST(MAKE)\n+  AC_MSG_NOTICE([Using GNU make at $FOUND_MAKE (version: $MAKE_VERSION_STRING)])\n+\n+  BASIC_CHECK_MAKE_OUTPUT_SYNC\n+])\n+\n+###############################################################################\n+AC_DEFUN([BASIC_CHECK_FIND_DELETE],\n+[\n+  # Test if find supports -delete\n+  AC_MSG_CHECKING([if find supports -delete])\n+  FIND_DELETE=\"-delete\"\n+\n+  DELETEDIR=`$MKTEMP -d tmp.XXXXXXXXXX` || (echo Could not create temporary directory!; exit $?)\n+\n+  echo Hejsan > $DELETEDIR\/TestIfFindSupportsDelete\n+\n+  TEST_DELETE=`$FIND \"$DELETEDIR\" -name TestIfFindSupportsDelete $FIND_DELETE 2>&1`\n+  if test -f $DELETEDIR\/TestIfFindSupportsDelete; then\n+    # No, it does not.\n+    $RM $DELETEDIR\/TestIfFindSupportsDelete\n+    if test \"x$OPENJDK_TARGET_OS\" = \"xaix\"; then\n+      # AIX 'find' is buggy if called with '-exec {} \\+' and an empty file list\n+      FIND_DELETE=\"-print | $XARGS $RM\"\n+    else\n+      FIND_DELETE=\"-exec $RM \\{\\} \\+\"\n+    fi\n+    AC_MSG_RESULT([no])\n+  else\n+    AC_MSG_RESULT([yes])\n+  fi\n+  $RMDIR $DELETEDIR\n+  AC_SUBST(FIND_DELETE)\n+])\n+\n+###############################################################################\n+AC_DEFUN([BASIC_CHECK_TAR],\n+[\n+  # Test which kind of tar was found\n+  if test \"x$($TAR --version | $GREP \"GNU tar\")\" != \"x\"; then\n+    TAR_TYPE=\"gnu\"\n+  elif test \"x$($TAR --version | $GREP \"bsdtar\")\" != \"x\"; then\n+    TAR_TYPE=\"bsd\"\n+  elif test \"x$($TAR -v | $GREP \"bsdtar\")\" != \"x\"; then\n+    TAR_TYPE=\"bsd\"\n+  elif test \"x$($TAR --version | $GREP \"busybox\")\" != \"x\"; then\n+    TAR_TYPE=\"busybox\"\n+  elif test \"x$OPENJDK_BUILD_OS\" = \"xsolaris\"; then\n+    TAR_TYPE=\"solaris\"\n+  elif test \"x$OPENJDK_BUILD_OS\" = \"xaix\"; then\n+    TAR_TYPE=\"aix\"\n+  fi\n+  AC_MSG_CHECKING([what type of tar was found])\n+  AC_MSG_RESULT([$TAR_TYPE])\n+\n+  TAR_CREATE_FILE_PARAM=\"\"\n+\n+  if test \"x$TAR_TYPE\" = \"xgnu\"; then\n+    TAR_INCLUDE_PARAM=\"T\"\n+    TAR_SUPPORTS_TRANSFORM=\"true\"\n+    if test \"x$OPENJDK_TARGET_OS\" = \"xsolaris\"; then\n+      # When using gnu tar for Solaris targets, need to use compatibility mode\n+      TAR_CREATE_EXTRA_PARAM=\"--format=ustar\"\n+    fi\n+  elif test \"x$TAR_TYPE\" = \"aix\"; then\n+    # -L InputList of aix tar: name of file listing the files and directories\n+    # that need to be archived or extracted\n+    TAR_INCLUDE_PARAM=\"L\"\n+    TAR_SUPPORTS_TRANSFORM=\"false\"\n+  elif test \"x$TAR_TYPE\" = \"xbusybox\"; then\n+    TAR_INCLUDE_PARAM=\"T\"\n+    TAR_SUPPORTS_TRANSFORM=\"false\"\n+  else\n+    TAR_INCLUDE_PARAM=\"I\"\n+    TAR_SUPPORTS_TRANSFORM=\"false\"\n+  fi\n+  AC_SUBST(TAR_TYPE)\n+  AC_SUBST(TAR_CREATE_EXTRA_PARAM)\n+  AC_SUBST(TAR_INCLUDE_PARAM)\n+  AC_SUBST(TAR_SUPPORTS_TRANSFORM)\n+])\n+\n+###############################################################################\n+AC_DEFUN([BASIC_CHECK_GREP],\n+[\n+  # Test that grep supports -Fx with a list of pattern which includes null pattern.\n+  # This is a problem for the grep resident on AIX.\n+  AC_MSG_CHECKING([that grep ($GREP) -Fx handles empty lines in the pattern list correctly])\n+  # Multiple subsequent spaces..\n+  STACK_SPACES='aaa   bbb   ccc'\n+  # ..converted to subsequent newlines, causes STACK_LIST to be a list with some empty\n+  # patterns in it.\n+  STACK_LIST=${STACK_SPACES\/\/ \/$'\\n'}\n+  NEEDLE_SPACES='ccc bbb aaa'\n+  NEEDLE_LIST=${NEEDLE_SPACES\/\/ \/$'\\n'}\n+  RESULT=\"$($GREP -Fvx \"$STACK_LIST\" <<< \"$NEEDLE_LIST\")\"\n+  if test \"x$RESULT\" == \"x\"; then\n+    AC_MSG_RESULT([yes])\n+  else\n+    if test \"x$OPENJDK_TARGET_OS\" = \"xaix\"; then\n+      ADDINFO=\"Please make sure you use GNU grep, usually found at \/opt\/freeware\/bin.\"\n+    fi\n+    AC_MSG_ERROR([grep does not handle -Fx correctly. ${ADDINFO}])\n+  fi\n+])\n+\n+###############################################################################\n+AC_DEFUN_ONCE([BASIC_SETUP_COMPLEX_TOOLS],\n+[\n+  BASIC_CHECK_GNU_MAKE\n+\n+  BASIC_CHECK_FIND_DELETE\n+  BASIC_CHECK_TAR\n+  BASIC_CHECK_GREP\n+  BASIC_SETUP_PANDOC\n+\n+  # These tools might not be installed by default,\n+  # need hint on how to install them.\n+  UTIL_REQUIRE_PROGS(UNZIP, unzip)\n+  # Since zip uses \"ZIP\" as a environment variable for passing options, we need\n+  # to name our variable differently, hence ZIPEXE.\n+  UTIL_REQUIRE_PROGS(ZIPEXE, zip)\n+\n+  # Non-required basic tools\n+\n+  UTIL_PATH_PROGS(LDD, ldd)\n+  if test \"x$LDD\" = \"x\"; then\n+    # List shared lib dependencies is used for\n+    # debug output and checking for forbidden dependencies.\n+    # We can build without it.\n+    LDD=\"true\"\n+  fi\n+  UTIL_PATH_PROGS(READELF, [greadelf readelf])\n+  UTIL_PATH_PROGS(DOT, dot)\n+  UTIL_PATH_PROGS(HG, hg)\n+  UTIL_PATH_PROGS(GIT, git)\n+  UTIL_PATH_PROGS(STAT, stat)\n+  UTIL_PATH_PROGS(TIME, time)\n+  UTIL_PATH_PROGS(FLOCK, flock)\n+  # Dtrace is usually found in \/usr\/sbin on Solaris, but that directory may not\n+  # be in the user path.\n+  UTIL_PATH_PROGS(DTRACE, dtrace, $PATH:\/usr\/sbin)\n+  UTIL_PATH_PROGS(PATCH, [gpatch patch])\n+  # Check if it's GNU time\n+  IS_GNU_TIME=`$TIME --version 2>&1 | $GREP 'GNU time'`\n+  if test \"x$IS_GNU_TIME\" != x; then\n+    IS_GNU_TIME=yes\n+  else\n+    IS_GNU_TIME=no\n+  fi\n+  AC_SUBST(IS_GNU_TIME)\n+\n+  if test \"x$OPENJDK_TARGET_OS\" = \"xmacosx\"; then\n+    UTIL_REQUIRE_PROGS(DSYMUTIL, dsymutil)\n+    UTIL_REQUIRE_PROGS(MIG, mig)\n+    UTIL_REQUIRE_PROGS(XATTR, xattr)\n+    UTIL_PATH_PROGS(CODESIGN, codesign)\n+\n+    if test \"x$CODESIGN\" != \"x\"; then\n+      # Check for user provided code signing identity.\n+      # If no identity was provided, fall back to \"openjdk_codesign\".\n+      AC_ARG_WITH([macosx-codesign-identity], [AS_HELP_STRING([--with-macosx-codesign-identity],\n+        [specify the code signing identity])],\n+        [MACOSX_CODESIGN_IDENTITY=$with_macosx_codesign_identity],\n+        [MACOSX_CODESIGN_IDENTITY=openjdk_codesign]\n+      )\n+\n+      AC_SUBST(MACOSX_CODESIGN_IDENTITY)\n+\n+      # Verify that the codesign certificate is present\n+      AC_MSG_CHECKING([if codesign certificate is present])\n+      $RM codesign-testfile\n+      $TOUCH codesign-testfile\n+      $CODESIGN -s \"$MACOSX_CODESIGN_IDENTITY\" codesign-testfile 2>&AS_MESSAGE_LOG_FD \\\n+          >&AS_MESSAGE_LOG_FD || CODESIGN=\n+      $RM codesign-testfile\n+      if test \"x$CODESIGN\" = x; then\n+        AC_MSG_RESULT([no])\n+      else\n+        AC_MSG_RESULT([yes])\n+        # Verify that the codesign has --option runtime\n+        AC_MSG_CHECKING([if codesign has --option runtime])\n+        $RM codesign-testfile\n+        $TOUCH codesign-testfile\n+        $CODESIGN --option runtime -s \"$MACOSX_CODESIGN_IDENTITY\" codesign-testfile \\\n+            2>&AS_MESSAGE_LOG_FD >&AS_MESSAGE_LOG_FD || CODESIGN=\n+        $RM codesign-testfile\n+        if test \"x$CODESIGN\" = x; then\n+          AC_MSG_ERROR([codesign does not have --option runtime. macOS 10.13.6 and above is required.])\n+        else\n+          AC_MSG_RESULT([yes])\n+        fi\n+      fi\n+    fi\n+    UTIL_REQUIRE_PROGS(SETFILE, SetFile)\n+  elif test \"x$OPENJDK_TARGET_OS\" = \"xsolaris\"; then\n+    UTIL_REQUIRE_PROGS(ELFEDIT, elfedit)\n+  fi\n+  if ! test \"x$OPENJDK_TARGET_OS\" = \"xwindows\"; then\n+    UTIL_REQUIRE_BUILTIN_PROGS(ULIMIT, ulimit)\n+  fi\n+])\n+\n+###############################################################################\n+# Check for support for specific options in bash\n+AC_DEFUN_ONCE([BASIC_CHECK_BASH_OPTIONS],\n+[\n+  # Check bash version\n+  # Extra [ ] to stop m4 mangling\n+  [ BASH_VER=`$BASH --version | $SED -n  -e 's\/^.*bash.*ersion *\\([0-9.]*\\).*$\/\\1\/ p'` ]\n+  AC_MSG_CHECKING([bash version])\n+  AC_MSG_RESULT([$BASH_VER])\n+\n+  BASH_MAJOR=`$ECHO $BASH_VER | $CUT -d . -f 1`\n+  BASH_MINOR=`$ECHO $BASH_VER | $CUT -d . -f 2`\n+  if test $BASH_MAJOR -lt 3 || (test $BASH_MAJOR -eq 3 && test $BASH_MINOR -lt 2); then\n+    AC_MSG_ERROR([bash version 3.2 or better is required])\n+  fi\n+\n+  # Test if bash supports pipefail.\n+  AC_MSG_CHECKING([if bash supports pipefail])\n+  if ${BASH} -c 'set -o pipefail'; then\n+    BASH_ARGS=\"$BASH_ARGS -o pipefail\"\n+    AC_MSG_RESULT([yes])\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n+\n+  AC_MSG_CHECKING([if bash supports errexit (-e)])\n+  if ${BASH} -e -c 'true'; then\n+    BASH_ARGS=\"$BASH_ARGS -e\"\n+    AC_MSG_RESULT([yes])\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n+\n+  AC_SUBST(BASH_ARGS)\n+])\n+\n+################################################################################\n+#\n+# Setup Pandoc\n+#\n+AC_DEFUN_ONCE([BASIC_SETUP_PANDOC],\n+[\n+  UTIL_PATH_PROGS(PANDOC, pandoc)\n+  PANDOC_MARKDOWN_FLAG=\"markdown\"\n+  if test -n \"$PANDOC\"; then\n+    AC_MSG_CHECKING(if the pandoc smart extension needs to be disabled for markdown)\n+    if $PANDOC --list-extensions | $GREP -q '\\+smart'; then\n+      AC_MSG_RESULT([yes])\n+      PANDOC_MARKDOWN_FLAG=\"markdown-smart\"\n+    else\n+      AC_MSG_RESULT([no])\n+    fi\n+  fi\n+  if test -n \"$PANDOC\"; then\n+    ENABLE_PANDOC=\"true\"\n+  else\n+    ENABLE_PANDOC=\"false\"\n+  fi\n+  AC_SUBST(ENABLE_PANDOC)\n+  AC_SUBST(PANDOC_MARKDOWN_FLAG)\n+])\n","filename":"make\/autoconf\/basic_tools.m4","additions":486,"deletions":0,"binary":false,"changes":486,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+#\n+# Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Setup basic configuration paths, and platform-specific stuff related to PATHs.\n+AC_DEFUN([BASIC_CHECK_PATHS_WINDOWS],\n+[\n+  SRC_ROOT_LENGTH=`$THEPWDCMD -L|$WC -m`\n+  if test $SRC_ROOT_LENGTH -gt 100; then\n+    AC_MSG_ERROR([Your base path is too long. It is $SRC_ROOT_LENGTH characters long, but only 100 is supported])\n+  fi\n+\n+  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n+    AC_MSG_CHECKING([cygwin release])\n+    CYGWIN_VERSION=`$UNAME -r`\n+    AC_MSG_RESULT([$CYGWIN_VERSION])\n+    WINDOWS_ENV_VENDOR='cygwin'\n+    WINDOWS_ENV_VERSION=\"$CYGWIN_VERSION\"\n+\n+    CYGWIN_VERSION_OLD=`$ECHO $CYGWIN_VERSION | $GREP -e '^1\\.[0-6]'`\n+    if test \"x$CYGWIN_VERSION_OLD\" != x; then\n+      AC_MSG_NOTICE([Your cygwin is too old. You are running $CYGWIN_VERSION, but at least cygwin 1.7 is required. Please upgrade.])\n+      AC_MSG_ERROR([Cannot continue])\n+    fi\n+    if test \"x$CYGPATH\" = x; then\n+      AC_MSG_ERROR([Something is wrong with your cygwin installation since I cannot find cygpath.exe in your path])\n+    fi\n+    AC_MSG_CHECKING([cygwin root directory as unix-style path])\n+    # The cmd output ends with Windows line endings (CR\/LF)\n+    cygwin_winpath_root=`cd \/ ; cmd \/c cd | $TR -d '\\r\\n'`\n+    # Force cygpath to report the proper root by including a trailing space, and then stripping it off again.\n+    CYGWIN_ROOT_PATH=`$CYGPATH -u \"$cygwin_winpath_root \" | $CUT -f 1 -d \" \"`\n+    AC_MSG_RESULT([$CYGWIN_ROOT_PATH])\n+    WINDOWS_ENV_ROOT_PATH=\"$CYGWIN_ROOT_PATH\"\n+    test_cygdrive_prefix=`$ECHO $CYGWIN_ROOT_PATH | $GREP ^\/cygdrive\/`\n+    if test \"x$test_cygdrive_prefix\" = x; then\n+      AC_MSG_ERROR([Your cygdrive prefix is not \/cygdrive. This is currently not supported. Change with mount -c.])\n+    fi\n+  elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n+    AC_MSG_CHECKING([msys release])\n+    MSYS_VERSION=`$UNAME -r`\n+    AC_MSG_RESULT([$MSYS_VERSION])\n+\n+    WINDOWS_ENV_VENDOR='msys'\n+    WINDOWS_ENV_VERSION=\"$MSYS_VERSION\"\n+\n+    AC_MSG_CHECKING([msys root directory as unix-style path])\n+    # The cmd output ends with Windows line endings (CR\/LF), the grep command will strip that away\n+    MSYS_ROOT_PATH=`cd \/ ; cmd \/c cd | $GREP \".*\"`\n+    UTIL_REWRITE_AS_UNIX_PATH(MSYS_ROOT_PATH)\n+    AC_MSG_RESULT([$MSYS_ROOT_PATH])\n+    WINDOWS_ENV_ROOT_PATH=\"$MSYS_ROOT_PATH\"\n+  else\n+    AC_MSG_ERROR([Unknown Windows environment. Neither cygwin nor msys was detected.])\n+  fi\n+\n+  # Test if windows or unix (cygwin\/msys) find is first in path.\n+  AC_MSG_CHECKING([what kind of 'find' is first on the PATH])\n+  FIND_BINARY_OUTPUT=`find --version 2>&1`\n+  if test \"x`echo $FIND_BINARY_OUTPUT | $GREP GNU`\" != x; then\n+    AC_MSG_RESULT([unix style])\n+  elif test \"x`echo $FIND_BINARY_OUTPUT | $GREP FIND`\" != x; then\n+    AC_MSG_RESULT([Windows])\n+    AC_MSG_NOTICE([Your path contains Windows tools (C:\\Windows\\system32) before your unix (cygwin or msys) tools.])\n+    AC_MSG_NOTICE([This will not work. Please correct and make sure \/usr\/bin (or similar) is first in path.])\n+    AC_MSG_ERROR([Cannot continue])\n+  else\n+    AC_MSG_RESULT([unknown])\n+    AC_MSG_WARN([It seems that your find utility is non-standard.])\n+  fi\n+])\n+\n+AC_DEFUN_ONCE([BASIC_COMPILE_FIXPATH],\n+[\n+  # When using cygwin or msys, we need a wrapper binary that renames\n+  # \/cygdrive\/c\/ arguments into c:\/ arguments and peeks into\n+  # @files and rewrites these too! This wrapper binary is\n+  # called fixpath.\n+  FIXPATH=\n+  if test \"x$OPENJDK_BUILD_OS\" = xwindows; then\n+    AC_MSG_CHECKING([if fixpath can be created])\n+    FIXPATH_SRC=\"$TOPDIR\/make\/src\/native\/fixpath.c\"\n+    FIXPATH_BIN=\"$CONFIGURESUPPORT_OUTPUTDIR\/bin\/fixpath.exe\"\n+    FIXPATH_DIR=\"$CONFIGURESUPPORT_OUTPUTDIR\/fixpath\"\n+    if test \"x$OPENJDK_BUILD_OS_ENV\" = xwindows.cygwin; then\n+      # Important to keep the .exe suffix on Cygwin for Hotspot makefiles\n+      FIXPATH=\"$FIXPATH_BIN -c\"\n+    elif test \"x$OPENJDK_BUILD_OS_ENV\" = xwindows.msys; then\n+      # Take all collected prefixes and turn them into a -m\/c\/foo@\/c\/bar@... command line\n+      # @ was chosen as separator to minimize risk of other tools messing around with it\n+      all_unique_prefixes=`echo \"${all_fixpath_prefixes@<:@@@:>@}\" \\\n+          | tr ' ' '\\n' | $GREP '^\/.\/' | $SORT | $UNIQ`\n+      fixpath_argument_list=`echo $all_unique_prefixes  | tr ' ' '@'`\n+      FIXPATH=\"$FIXPATH_BIN -m$fixpath_argument_list\"\n+    fi\n+    FIXPATH_SRC_W=\"$FIXPATH_SRC\"\n+    FIXPATH_BIN_W=\"$FIXPATH_BIN\"\n+    UTIL_REWRITE_AS_WINDOWS_MIXED_PATH([FIXPATH_SRC_W])\n+    UTIL_REWRITE_AS_WINDOWS_MIXED_PATH([FIXPATH_BIN_W])\n+    $RM -rf $FIXPATH_BIN $FIXPATH_DIR\n+    $MKDIR -p $FIXPATH_DIR $CONFIGURESUPPORT_OUTPUTDIR\/bin\n+    cd $FIXPATH_DIR\n+    $CC $FIXPATH_SRC_W -Fe$FIXPATH_BIN_W > $FIXPATH_DIR\/fixpath1.log 2>&1\n+    cd $CONFIGURE_START_DIR\n+\n+    if test ! -x $FIXPATH_BIN; then\n+      AC_MSG_RESULT([no])\n+      cat $FIXPATH_DIR\/fixpath1.log\n+      AC_MSG_ERROR([Could not create $FIXPATH_BIN])\n+    fi\n+    AC_MSG_RESULT([yes])\n+\n+    AC_MSG_CHECKING([if fixpath.exe works])\n+    cd $FIXPATH_DIR\n+    $FIXPATH $CC $FIXPATH_SRC -Fe$FIXPATH_DIR\/fixpath2.exe \\\n+        > $FIXPATH_DIR\/fixpath2.log 2>&1\n+    cd $CONFIGURE_START_DIR\n+    if test ! -x $FIXPATH_DIR\/fixpath2.exe; then\n+      AC_MSG_RESULT([no])\n+      cat $FIXPATH_DIR\/fixpath2.log\n+      AC_MSG_ERROR([fixpath did not work!])\n+    fi\n+    AC_MSG_RESULT([yes])\n+\n+    FIXPATH_DETACH_FLAG=\"--detach\"\n+  fi\n+\n+  AC_SUBST(FIXPATH)\n+  AC_SUBST(FIXPATH_DETACH_FLAG)\n+])\n","filename":"make\/autoconf\/basic_windows.m4","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -1,1507 +0,0 @@\n-#\n-# Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-###############################################################################\n-# Create a function\/macro that takes a series of named arguments. The call is\n-# similar to AC_DEFUN, but the setup of the function looks like this:\n-# BASIC_DEFUN_NAMED([MYFUNC], [FOO *BAR], [$@], [\n-# ... do something\n-#   AC_MSG_NOTICE([Value of BAR is ARG_BAR])\n-# ])\n-# A star (*) in front of a named argument means that it is required and it's\n-# presence will be verified. To pass e.g. the first value as a normal indexed\n-# argument, use [m4_shift($@)] as the third argument instead of [$@]. These\n-# arguments are referenced in the function by their name prefixed by ARG_, e.g.\n-# \"ARG_FOO\".\n-#\n-# The generated function can be called like this:\n-# MYFUNC(FOO: [foo-val],\n-#     BAR: [\n-#         $ECHO hello world\n-#     ])\n-# Note that the argument value must start on the same line as the argument name.\n-#\n-# Argument 1: Name of the function to define\n-# Argument 2: List of legal named arguments, with a * prefix for required arguments\n-# Argument 3: Argument array to treat as named, typically $@\n-# Argument 4: The main function body\n-AC_DEFUN([BASIC_DEFUN_NAMED],\n-[\n-  AC_DEFUN($1, [\n-    m4_foreach(arg, m4_split($2), [\n-      m4_if(m4_bregexp(arg, [^\\*]), -1,\n-        [\n-          m4_set_add(legal_named_args, arg)\n-        ],\n-        [\n-          m4_set_add(legal_named_args, m4_substr(arg, 1))\n-          m4_set_add(required_named_args, m4_substr(arg, 1))\n-        ]\n-      )\n-    ])\n-\n-    m4_foreach([arg], [$3], [\n-      m4_define(arg_name, m4_substr(arg, 0, m4_bregexp(arg, [: ])))\n-      m4_set_contains(legal_named_args, arg_name, [],[AC_MSG_ERROR([Internal error: arg_name is not a valid named argument to [$1]. Valid arguments are 'm4_set_contents(legal_named_args, [ ])'.])])\n-      m4_set_remove(required_named_args, arg_name)\n-      m4_set_remove(legal_named_args, arg_name)\n-      m4_pushdef([ARG_][]arg_name, m4_substr(arg, m4_incr(m4_incr(m4_bregexp(arg, [: ])))))\n-      m4_set_add(defined_args, arg_name)\n-      m4_undefine([arg_name])\n-    ])\n-    m4_set_empty(required_named_args, [], [\n-      AC_MSG_ERROR([Internal error: Required named arguments are missing for [$1]. Missing arguments: 'm4_set_contents(required_named_args, [ ])'])\n-    ])\n-    m4_foreach([arg], m4_indir([m4_dquote]m4_set_listc([legal_named_args])), [\n-      m4_pushdef([ARG_][]arg, [])\n-      m4_set_add(defined_args, arg)\n-    ])\n-    m4_set_delete(legal_named_args)\n-    m4_set_delete(required_named_args)\n-\n-    # Execute function body\n-    $4\n-\n-    m4_foreach([arg], m4_indir([m4_dquote]m4_set_listc([defined_args])), [\n-      m4_popdef([ARG_][]arg)\n-    ])\n-\n-    m4_set_delete(defined_args)\n-  ])\n-])\n-\n-###############################################################################\n-# Check if a list of space-separated words are selected only from a list of\n-# space-separated legal words. Typical use is to see if a user-specified\n-# set of words is selected from a set of legal words.\n-#\n-# Sets the specified variable to list of non-matching (offending) words, or to\n-# the empty string if all words are matching the legal set.\n-#\n-# $1: result variable name\n-# $2: list of values to check\n-# $3: list of legal values\n-AC_DEFUN([BASIC_GET_NON_MATCHING_VALUES],\n-[\n-  # grep filter function inspired by a comment to http:\/\/stackoverflow.com\/a\/1617326\n-  # Notice that the original variant fails on SLES 10 and 11\n-  # Some grep versions (at least bsd) behaves strangely on the base case with\n-  # no legal_values, so make it explicit.\n-  values_to_check=`$ECHO $2 | $TR ' ' '\\n'`\n-  legal_values=`$ECHO $3 | $TR ' ' '\\n'`\n-  if test -z \"$legal_values\"; then\n-    $1=\"$2\"\n-  else\n-    result=`$GREP -Fvx \"$legal_values\" <<< \"$values_to_check\" | $GREP -v '^$'`\n-    $1=${result\/\/$'\\n'\/ }\n-  fi\n-])\n-\n-###############################################################################\n-# Check if a list of space-separated words contains any word(s) from a list of\n-# space-separated illegal words. Typical use is to see if a user-specified\n-# set of words contains any from a set of illegal words.\n-#\n-# Sets the specified variable to list of matching illegal words, or to\n-# the empty string if no words are matching the illegal set.\n-#\n-# $1: result variable name\n-# $2: list of values to check\n-# $3: list of illegal values\n-AC_DEFUN([BASIC_GET_MATCHING_VALUES],\n-[\n-  # grep filter function inspired by a comment to http:\/\/stackoverflow.com\/a\/1617326\n-  # Notice that the original variant fails on SLES 10 and 11\n-  # Some grep versions (at least bsd) behaves strangely on the base case with\n-  # no legal_values, so make it explicit.\n-  values_to_check=`$ECHO $2 | $TR ' ' '\\n'`\n-  illegal_values=`$ECHO $3 | $TR ' ' '\\n'`\n-  if test -z \"$illegal_values\"; then\n-    $1=\"\"\n-  else\n-    result=`$GREP -Fx \"$illegal_values\" <<< \"$values_to_check\" | $GREP -v '^$'`\n-    $1=${result\/\/$'\\n'\/ }\n-  fi\n-])\n-\n-###############################################################################\n-# Sort a space-separated list, and remove duplicates.\n-#\n-# Sets the specified variable to the resulting list.\n-#\n-# $1: result variable name\n-# $2: list of values to sort\n-AC_DEFUN([BASIC_SORT_LIST],\n-[\n-  values_to_sort=`$ECHO $2 | $TR ' ' '\\n'`\n-  result=`$SORT -u <<< \"$values_to_sort\" | $GREP -v '^$'`\n-  $1=${result\/\/$'\\n'\/ }\n-])\n-\n-###############################################################################\n-# Test if $1 is a valid argument to $3 (often is $JAVA passed as $3)\n-# If so, then append $1 to $2 \\\n-# Also set JVM_ARG_OK to true\/false depending on outcome.\n-AC_DEFUN([ADD_JVM_ARG_IF_OK],\n-[\n-  $ECHO \"Check if jvm arg is ok: $1\" >&AS_MESSAGE_LOG_FD\n-  $ECHO \"Command: $3 $1 -version\" >&AS_MESSAGE_LOG_FD\n-  OUTPUT=`$3 $1 $USER_BOOT_JDK_OPTIONS -version 2>&1`\n-  FOUND_WARN=`$ECHO \"$OUTPUT\" | $GREP -i warn`\n-  FOUND_VERSION=`$ECHO $OUTPUT | $GREP \" version \\\"\"`\n-  if test \"x$FOUND_VERSION\" != x && test \"x$FOUND_WARN\" = x; then\n-    $2=\"[$]$2 $1\"\n-    JVM_ARG_OK=true\n-  else\n-    $ECHO \"Arg failed:\" >&AS_MESSAGE_LOG_FD\n-    $ECHO \"$OUTPUT\" >&AS_MESSAGE_LOG_FD\n-    JVM_ARG_OK=false\n-  fi\n-])\n-\n-# Appends a string to a path variable, only adding the : when needed.\n-AC_DEFUN([BASIC_APPEND_TO_PATH],\n-[\n-  if test \"x$2\" != x; then\n-    if test \"x[$]$1\" = x; then\n-      $1=\"$2\"\n-    else\n-      $1=\"[$]$1:$2\"\n-    fi\n-  fi\n-])\n-\n-# Prepends a string to a path variable, only adding the : when needed.\n-AC_DEFUN([BASIC_PREPEND_TO_PATH],\n-[\n-  if test \"x$2\" != x; then\n-    if test \"x[$]$1\" = x; then\n-      $1=\"$2\"\n-    else\n-      $1=\"$2:[$]$1\"\n-    fi\n-  fi\n-])\n-\n-###############################################################################\n-# This will make sure the given variable points to a full and proper\n-# path. This means:\n-# 1) There will be no spaces in the path. On unix platforms,\n-#    spaces in the path will result in an error. On Windows,\n-#    the path will be rewritten using short-style to be space-free.\n-# 2) The path will be absolute, and it will be in unix-style (on\n-#     cygwin).\n-# $1: The name of the variable to fix\n-AC_DEFUN([BASIC_FIXUP_PATH],\n-[\n-  # Only process if variable expands to non-empty\n-\n-  if test \"x[$]$1\" != x; then\n-    if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n-      BASIC_FIXUP_PATH_CYGWIN($1)\n-    elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n-      BASIC_FIXUP_PATH_MSYS($1)\n-    else\n-      # We're on a unix platform. Hooray! :)\n-      path=\"[$]$1\"\n-      has_space=`$ECHO \"$path\" | $GREP \" \"`\n-      if test \"x$has_space\" != x; then\n-        AC_MSG_NOTICE([The path of $1, which resolves as \"$path\", is invalid.])\n-        AC_MSG_ERROR([Spaces are not allowed in this path.])\n-      fi\n-\n-      # Use eval to expand a potential ~\n-      eval path=\"$path\"\n-      if test ! -f \"$path\" && test ! -d \"$path\"; then\n-        AC_MSG_ERROR([The path of $1, which resolves as \"$path\", is not found.])\n-      fi\n-\n-      if test -d \"$path\"; then\n-        $1=\"`cd \"$path\"; $THEPWDCMD -L`\"\n-      else\n-        dir=\"`$DIRNAME \"$path\"`\"\n-        base=\"`$BASENAME \"$path\"`\"\n-        $1=\"`cd \"$dir\"; $THEPWDCMD -L`\/$base\"\n-      fi\n-    fi\n-  fi\n-])\n-\n-###############################################################################\n-# This will make sure the given variable points to a executable\n-# with a full and proper path. This means:\n-# 1) There will be no spaces in the path. On unix platforms,\n-#    spaces in the path will result in an error. On Windows,\n-#    the path will be rewritten using short-style to be space-free.\n-# 2) The path will be absolute, and it will be in unix-style (on\n-#     cygwin).\n-# Any arguments given to the executable is preserved.\n-# If the input variable does not have a directory specification, then\n-# it need to be in the PATH.\n-# $1: The name of the variable to fix\n-AC_DEFUN([BASIC_FIXUP_EXECUTABLE],\n-[\n-  # Only process if variable expands to non-empty\n-\n-  if test \"x[$]$1\" != x; then\n-    if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n-      BASIC_FIXUP_EXECUTABLE_CYGWIN($1)\n-    elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n-      BASIC_FIXUP_EXECUTABLE_MSYS($1)\n-    else\n-      # We're on a unix platform. Hooray! :)\n-      # First separate the path from the arguments. This will split at the first\n-      # space.\n-      complete=\"[$]$1\"\n-      path=\"${complete%% *}\"\n-      tmp=\"$complete EOL\"\n-      arguments=\"${tmp#* }\"\n-\n-      # Cannot rely on the command \"which\" here since it doesn't always work.\n-      is_absolute_path=`$ECHO \"$path\" | $GREP ^\/`\n-      if test -z \"$is_absolute_path\"; then\n-        # Path to executable is not absolute. Find it.\n-        IFS_save=\"$IFS\"\n-        IFS=:\n-        for p in $PATH; do\n-          if test -f \"$p\/$path\" && test -x \"$p\/$path\"; then\n-            new_path=\"$p\/$path\"\n-            break\n-          fi\n-        done\n-        IFS=\"$IFS_save\"\n-      else\n-        # This is an absolute path, we can use it without further modifications.\n-        new_path=\"$path\"\n-      fi\n-\n-      if test \"x$new_path\" = x; then\n-        AC_MSG_NOTICE([The path of $1, which resolves as \"$complete\", is not found.])\n-        has_space=`$ECHO \"$complete\" | $GREP \" \"`\n-        if test \"x$has_space\" != x; then\n-          AC_MSG_NOTICE([This might be caused by spaces in the path, which is not allowed.])\n-        fi\n-        AC_MSG_ERROR([Cannot locate the the path of $1])\n-      fi\n-    fi\n-\n-    # Now join together the path and the arguments once again\n-    if test \"x$arguments\" != xEOL; then\n-      new_complete=\"$new_path ${arguments% *}\"\n-    else\n-      new_complete=\"$new_path\"\n-    fi\n-\n-    if test \"x$complete\" != \"x$new_complete\"; then\n-      $1=\"$new_complete\"\n-      AC_MSG_NOTICE([Rewriting $1 to \"$new_complete\"])\n-    fi\n-  fi\n-])\n-\n-###############################################################################\n-AC_DEFUN([BASIC_REMOVE_SYMBOLIC_LINKS],\n-[\n-  if test \"x$OPENJDK_BUILD_OS\" != xwindows; then\n-    # Follow a chain of symbolic links. Use readlink\n-    # where it exists, else fall back to horribly\n-    # complicated shell code.\n-    if test \"x$READLINK_TESTED\" != yes; then\n-      # On MacOSX there is a readlink tool with a different\n-      # purpose than the GNU readlink tool. Check the found readlink.\n-      READLINK_ISGNU=`$READLINK --version 2>&1 | $GREP GNU`\n-      # If READLINK_ISGNU is empty, then it's a non-GNU readlink. Don't use it.\n-      READLINK_TESTED=yes\n-    fi\n-\n-    if test \"x$READLINK\" != x && test \"x$READLINK_ISGNU\" != x; then\n-      $1=`$READLINK -f [$]$1`\n-    else\n-      # Save the current directory for restoring afterwards\n-      STARTDIR=$PWD\n-      COUNTER=0\n-      sym_link_dir=`$DIRNAME [$]$1`\n-      sym_link_file=`$BASENAME [$]$1`\n-      cd $sym_link_dir\n-      # Use -P flag to resolve symlinks in directories.\n-      cd `$THEPWDCMD -P`\n-      sym_link_dir=`$THEPWDCMD -P`\n-      # Resolve file symlinks\n-      while test $COUNTER -lt 20; do\n-        ISLINK=`$LS -l $sym_link_dir\/$sym_link_file | $GREP '\\->' | $SED -e 's\/.*-> \\(.*\\)\/\\1\/'`\n-        if test \"x$ISLINK\" == x; then\n-          # This is not a symbolic link! We are done!\n-          break\n-        fi\n-        # Again resolve directory symlinks since the target of the just found\n-        # link could be in a different directory\n-        cd `$DIRNAME $ISLINK`\n-        sym_link_dir=`$THEPWDCMD -P`\n-        sym_link_file=`$BASENAME $ISLINK`\n-        let COUNTER=COUNTER+1\n-      done\n-      cd $STARTDIR\n-      $1=$sym_link_dir\/$sym_link_file\n-    fi\n-  fi\n-])\n-\n-###############################################################################\n-# Register a --with argument but mark it as deprecated\n-# $1: The name of the with argument to deprecate, not including --with-\n-AC_DEFUN([BASIC_DEPRECATED_ARG_WITH],\n-[\n-  AC_ARG_WITH($1, [AS_HELP_STRING([--with-$1],\n-      [Deprecated. Option is kept for backwards compatibility and is ignored])],\n-      [AC_MSG_WARN([Option --with-$1 is deprecated and will be ignored.])])\n-])\n-\n-###############################################################################\n-# Register a --enable argument but mark it as deprecated\n-# $1: The name of the with argument to deprecate, not including --enable-\n-# $2: The name of the argument to deprecate, in shell variable style (i.e. with _ instead of -)\n-# $3: Messages to user.\n-AC_DEFUN([BASIC_DEPRECATED_ARG_ENABLE],\n-[\n-  AC_ARG_ENABLE($1, [AS_HELP_STRING([--enable-$1],\n-      [Deprecated. Option is kept for backwards compatibility and is ignored])])\n-  if test \"x$enable_$2\" != x; then\n-    AC_MSG_WARN([Option --enable-$1 is deprecated and will be ignored.])\n-\n-    if test \"x$3\" != x; then\n-      AC_MSG_WARN([$3])\n-    fi\n-\n-  fi\n-])\n-\n-###############################################################################\n-AC_DEFUN_ONCE([BASIC_INIT],\n-[\n-  # Save the original command line. This is passed to us by the wrapper configure script.\n-  AC_SUBST(CONFIGURE_COMMAND_LINE)\n-  # AUTOCONF might be set in the environment by the user. Preserve for \"make reconfigure\".\n-  AC_SUBST(AUTOCONF)\n-  # Save the path variable before it gets changed\n-  ORIGINAL_PATH=\"$PATH\"\n-  AC_SUBST(ORIGINAL_PATH)\n-  DATE_WHEN_CONFIGURED=`date`\n-  AC_SUBST(DATE_WHEN_CONFIGURED)\n-  AC_MSG_NOTICE([Configuration created at $DATE_WHEN_CONFIGURED.])\n-])\n-\n-###############################################################################\n-# Test that variable $1 denoting a program is not empty. If empty, exit with an error.\n-# $1: variable to check\n-AC_DEFUN([BASIC_CHECK_NONEMPTY],\n-[\n-  if test \"x[$]$1\" = x; then\n-    AC_MSG_ERROR([Could not find required tool for $1])\n-  fi\n-])\n-\n-###############################################################################\n-# Check that there are no unprocessed overridden variables left.\n-# If so, they are an incorrect argument and we will exit with an error.\n-AC_DEFUN([BASIC_CHECK_LEFTOVER_OVERRIDDEN],\n-[\n-  if test \"x$CONFIGURE_OVERRIDDEN_VARIABLES\" != x; then\n-    # Replace the separating ! with spaces before presenting for end user.\n-    unknown_variables=${CONFIGURE_OVERRIDDEN_VARIABLES\/\/!\/ }\n-    AC_MSG_WARN([The following variables might be unknown to configure: $unknown_variables])\n-  fi\n-])\n-\n-###############################################################################\n-# Setup a tool for the given variable. If correctly specified by the user,\n-# use that value, otherwise search for the tool using the supplied code snippet.\n-# $1: variable to set\n-# $2: code snippet to call to look for the tool\n-# $3: code snippet to call if variable was used to find tool\n-AC_DEFUN([BASIC_SETUP_TOOL],\n-[\n-  # Publish this variable in the help.\n-  AC_ARG_VAR($1, [Override default value for $1])\n-\n-  if [[ -z \"${$1+x}\" ]]; then\n-    # The variable is not set by user, try to locate tool using the code snippet\n-    $2\n-  else\n-    # The variable is set, but is it from the command line or the environment?\n-\n-    # Try to remove the string !$1! from our list.\n-    try_remove_var=${CONFIGURE_OVERRIDDEN_VARIABLES\/\/!$1!\/}\n-    if test \"x$try_remove_var\" = \"x$CONFIGURE_OVERRIDDEN_VARIABLES\"; then\n-      # If it failed, the variable was not from the command line. Ignore it,\n-      # but warn the user (except for BASH, which is always set by the calling BASH).\n-      if test \"x$1\" != xBASH; then\n-        AC_MSG_WARN([Ignoring value of $1 from the environment. Use command line variables instead.])\n-      fi\n-      # Try to locate tool using the code snippet\n-      $2\n-    else\n-      # If it succeeded, then it was overridden by the user. We will use it\n-      # for the tool.\n-\n-      # First remove it from the list of overridden variables, so we can test\n-      # for unknown variables in the end.\n-      CONFIGURE_OVERRIDDEN_VARIABLES=\"$try_remove_var\"\n-\n-      # Check if we try to supply an empty value\n-      if test \"x[$]$1\" = x; then\n-        AC_MSG_NOTICE([Setting user supplied tool $1= (no value)])\n-        AC_MSG_CHECKING([for $1])\n-        AC_MSG_RESULT([disabled])\n-      else\n-        # Check if the provided tool contains a complete path.\n-        tool_specified=\"[$]$1\"\n-        tool_basename=\"${tool_specified##*\/}\"\n-        if test \"x$tool_basename\" = \"x$tool_specified\"; then\n-          # A command without a complete path is provided, search $PATH.\n-          AC_MSG_NOTICE([Will search for user supplied tool $1=$tool_basename])\n-          AC_PATH_PROG($1, $tool_basename)\n-          if test \"x[$]$1\" = x; then\n-            AC_MSG_ERROR([User supplied tool $tool_basename could not be found])\n-          fi\n-        else\n-          # Otherwise we believe it is a complete path. Use it as it is.\n-          AC_MSG_NOTICE([Will use user supplied tool $1=$tool_specified])\n-          AC_MSG_CHECKING([for $1])\n-          if test ! -x \"$tool_specified\"; then\n-            AC_MSG_RESULT([not found])\n-            AC_MSG_ERROR([User supplied tool $1=$tool_specified does not exist or is not executable])\n-          fi\n-          AC_MSG_RESULT([$tool_specified])\n-        fi\n-      fi\n-    fi\n-    $3\n-  fi\n-])\n-\n-###############################################################################\n-# Call BASIC_SETUP_TOOL with AC_PATH_PROGS to locate the tool\n-# $1: variable to set\n-# $2: executable name (or list of names) to look for\n-# $3: [path]\n-AC_DEFUN([BASIC_PATH_PROGS],\n-[\n-  BASIC_SETUP_TOOL($1, [AC_PATH_PROGS($1, $2, , $3)])\n-])\n-\n-###############################################################################\n-# Call BASIC_SETUP_TOOL with AC_CHECK_TOOLS to locate the tool\n-# $1: variable to set\n-# $2: executable name (or list of names) to look for\n-AC_DEFUN([BASIC_CHECK_TOOLS],\n-[\n-  BASIC_SETUP_TOOL($1, [AC_CHECK_TOOLS($1, $2)])\n-])\n-\n-###############################################################################\n-# Like BASIC_PATH_PROGS but fails if no tool was found.\n-# $1: variable to set\n-# $2: executable name (or list of names) to look for\n-# $3: [path]\n-AC_DEFUN([BASIC_REQUIRE_PROGS],\n-[\n-  BASIC_PATH_PROGS($1, $2, , $3)\n-  BASIC_CHECK_NONEMPTY($1)\n-])\n-\n-###############################################################################\n-# Like BASIC_SETUP_TOOL but fails if no tool was found.\n-# $1: variable to set\n-# $2: autoconf macro to call to look for the special tool\n-AC_DEFUN([BASIC_REQUIRE_SPECIAL],\n-[\n-  BASIC_SETUP_TOOL($1, [$2])\n-  BASIC_CHECK_NONEMPTY($1)\n-])\n-\n-###############################################################################\n-# Like BASIC_REQUIRE_PROGS but also allows for bash built-ins\n-# $1: variable to set\n-# $2: executable name (or list of names) to look for\n-# $3: [path]\n-AC_DEFUN([BASIC_REQUIRE_BUILTIN_PROGS],\n-[\n-  BASIC_SETUP_TOOL($1, [AC_PATH_PROGS($1, $2, , $3)])\n-  if test \"x[$]$1\" = x; then\n-    AC_MSG_NOTICE([Required tool $2 not found in PATH, checking built-in])\n-    if help $2 > \/dev\/null 2>&1; then\n-      AC_MSG_NOTICE([Found $2 as shell built-in. Using it])\n-      $1=\"$2\"\n-    else\n-      AC_MSG_ERROR([Required tool $2 also not found as built-in.])\n-    fi\n-  fi\n-  BASIC_CHECK_NONEMPTY($1)\n-])\n-\n-###############################################################################\n-# Setup the most fundamental tools that relies on not much else to set up,\n-# but is used by much of the early bootstrap code.\n-AC_DEFUN_ONCE([BASIC_SETUP_FUNDAMENTAL_TOOLS],\n-[\n-  # Start with tools that do not need have cross compilation support\n-  # and can be expected to be found in the default PATH. These tools are\n-  # used by configure.\n-\n-  # First are all the simple required tools.\n-  BASIC_REQUIRE_PROGS(BASENAME, basename)\n-  BASIC_REQUIRE_PROGS(BASH, bash)\n-  BASIC_REQUIRE_PROGS(CAT, cat)\n-  BASIC_REQUIRE_PROGS(CHMOD, chmod)\n-  BASIC_REQUIRE_PROGS(CMP, cmp)\n-  BASIC_REQUIRE_PROGS(COMM, comm)\n-  BASIC_REQUIRE_PROGS(CP, cp)\n-  BASIC_REQUIRE_PROGS(CUT, cut)\n-  BASIC_REQUIRE_PROGS(DATE, date)\n-  BASIC_REQUIRE_PROGS(DIFF, [gdiff diff])\n-  BASIC_REQUIRE_PROGS(DIRNAME, dirname)\n-  BASIC_REQUIRE_PROGS(ECHO, echo)\n-  BASIC_REQUIRE_PROGS(EXPR, expr)\n-  BASIC_REQUIRE_PROGS(FILE, file)\n-  BASIC_REQUIRE_PROGS(FIND, find)\n-  BASIC_REQUIRE_PROGS(HEAD, head)\n-  BASIC_REQUIRE_PROGS(GUNZIP, gunzip)\n-  BASIC_REQUIRE_PROGS(GZIP, pigz gzip)\n-  BASIC_REQUIRE_PROGS(LN, ln)\n-  BASIC_REQUIRE_PROGS(LS, ls)\n-  BASIC_REQUIRE_PROGS(MKDIR, mkdir)\n-  BASIC_REQUIRE_PROGS(MKTEMP, mktemp)\n-  BASIC_REQUIRE_PROGS(MV, mv)\n-  BASIC_REQUIRE_PROGS(NAWK, [nawk gawk awk])\n-  BASIC_REQUIRE_PROGS(PRINTF, printf)\n-  BASIC_REQUIRE_PROGS(READLINK, [greadlink readlink])\n-  BASIC_REQUIRE_PROGS(RM, rm)\n-  BASIC_REQUIRE_PROGS(RMDIR, rmdir)\n-  BASIC_REQUIRE_PROGS(SH, sh)\n-  BASIC_REQUIRE_PROGS(SORT, sort)\n-  BASIC_REQUIRE_PROGS(TAIL, tail)\n-  BASIC_REQUIRE_PROGS(TAR, gtar tar)\n-  BASIC_REQUIRE_PROGS(TEE, tee)\n-  BASIC_REQUIRE_PROGS(TOUCH, touch)\n-  BASIC_REQUIRE_PROGS(TR, tr)\n-  BASIC_REQUIRE_PROGS(UNAME, uname)\n-  BASIC_REQUIRE_PROGS(UNIQ, uniq)\n-  BASIC_REQUIRE_PROGS(WC, wc)\n-  BASIC_REQUIRE_PROGS(WHICH, which)\n-  BASIC_REQUIRE_PROGS(XARGS, xargs)\n-\n-  # Then required tools that require some special treatment.\n-  BASIC_REQUIRE_SPECIAL(AWK, [AC_PROG_AWK])\n-  BASIC_REQUIRE_SPECIAL(GREP, [AC_PROG_GREP])\n-  BASIC_REQUIRE_SPECIAL(EGREP, [AC_PROG_EGREP])\n-  BASIC_REQUIRE_SPECIAL(FGREP, [AC_PROG_FGREP])\n-  BASIC_REQUIRE_SPECIAL(SED, [AC_PROG_SED])\n-\n-  # Always force rm.\n-  RM=\"$RM -f\"\n-\n-  # pwd behaves differently on various platforms and some don't support the -L flag.\n-  # Always use the bash builtin pwd to get uniform behavior.\n-  THEPWDCMD=pwd\n-\n-  # These are not required on all platforms\n-  BASIC_PATH_PROGS(CYGPATH, cygpath)\n-  BASIC_PATH_PROGS(DF, df)\n-  BASIC_PATH_PROGS(CPIO, [cpio bsdcpio])\n-  BASIC_PATH_PROGS(NICE, nice)\n-])\n-\n-###############################################################################\n-# Setup basic configuration paths, and platform-specific stuff related to PATHs.\n-AC_DEFUN_ONCE([BASIC_SETUP_PATHS],\n-[\n-  # Save the current directory this script was started from\n-  CONFIGURE_START_DIR=\"$PWD\"\n-\n-  # We might need to rewrite ORIGINAL_PATH, if it includes \"#\", to quote them\n-  # for make. We couldn't do this when we retrieved ORIGINAL_PATH, since SED\n-  # was not available at that time.\n-  REWRITTEN_PATH=`$ECHO \"$ORIGINAL_PATH\" | $SED -e 's\/#\/\\\\\\\\#\/g'`\n-  if test \"x$REWRITTEN_PATH\" != \"x$ORIGINAL_PATH\"; then\n-    ORIGINAL_PATH=\"$REWRITTEN_PATH\"\n-    AC_MSG_NOTICE([Rewriting ORIGINAL_PATH to $REWRITTEN_PATH])\n-  fi\n-\n-  if test \"x$OPENJDK_TARGET_OS\" = \"xwindows\"; then\n-    PATH_SEP=\";\"\n-    BASIC_CHECK_PATHS_WINDOWS\n-  else\n-    PATH_SEP=\":\"\n-  fi\n-  AC_SUBST(PATH_SEP)\n-\n-  # We get the top-level directory from the supporting wrappers.\n-  AC_MSG_CHECKING([for top-level directory])\n-  AC_MSG_RESULT([$TOPDIR])\n-  AC_SUBST(TOPDIR)\n-  AC_SUBST(CONFIGURE_START_DIR)\n-\n-  # We can only call BASIC_FIXUP_PATH after BASIC_CHECK_PATHS_WINDOWS.\n-  BASIC_FIXUP_PATH(CONFIGURE_START_DIR)\n-  BASIC_FIXUP_PATH(TOPDIR)\n-\n-  if test \"x$CUSTOM_ROOT\" != x; then\n-    BASIC_FIXUP_PATH(CUSTOM_ROOT)\n-    WORKSPACE_ROOT=\"${CUSTOM_ROOT}\"\n-  else\n-    WORKSPACE_ROOT=\"${TOPDIR}\"\n-  fi\n-  AC_SUBST(WORKSPACE_ROOT)\n-\n-  # Locate the directory of this script.\n-  AUTOCONF_DIR=$TOPDIR\/make\/autoconf\n-\n-  # Setup username (for use in adhoc version strings etc)\n-  # Outer [ ] to quote m4.\n-  [ USERNAME=`$ECHO \"$USER\" | $TR -d -c '[a-z][A-Z][0-9]'` ]\n-  AC_SUBST(USERNAME)\n-])\n-\n-###############################################################################\n-# Evaluates platform specific overrides for devkit variables.\n-# $1: Name of variable\n-AC_DEFUN([BASIC_EVAL_DEVKIT_VARIABLE],\n-[\n-  if test \"x[$]$1\" = x; then\n-    eval $1=\"\\${$1_${OPENJDK_TARGET_CPU}}\"\n-  fi\n-])\n-\n-###############################################################################\n-# Evaluates platform specific overrides for build devkit variables.\n-# $1: Name of variable\n-AC_DEFUN([BASIC_EVAL_BUILD_DEVKIT_VARIABLE],\n-[\n-  if test \"x[$]$1\" = x; then\n-    eval $1=\"\\${$1_${OPENJDK_BUILD_CPU}}\"\n-  fi\n-])\n-\n-###############################################################################\n-AC_DEFUN_ONCE([BASIC_SETUP_DEVKIT],\n-[\n-  AC_ARG_WITH([devkit], [AS_HELP_STRING([--with-devkit],\n-      [use this devkit for compilers, tools and resources])])\n-\n-  if test \"x$with_devkit\" = xyes; then\n-    AC_MSG_ERROR([--with-devkit must have a value])\n-  elif test \"x$with_devkit\" != x && test \"x$with_devkit\" != xno; then\n-    BASIC_FIXUP_PATH([with_devkit])\n-    DEVKIT_ROOT=\"$with_devkit\"\n-    # Check for a meta data info file in the root of the devkit\n-    if test -f \"$DEVKIT_ROOT\/devkit.info\"; then\n-      . $DEVKIT_ROOT\/devkit.info\n-      # This potentially sets the following:\n-      # A descriptive name of the devkit\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_NAME])\n-      # Corresponds to --with-extra-path\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_EXTRA_PATH])\n-      # Corresponds to --with-toolchain-path\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_TOOLCHAIN_PATH])\n-      # Corresponds to --with-sysroot\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_SYSROOT])\n-\n-      # Identifies the Visual Studio version in the devkit\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_VS_VERSION])\n-      # The Visual Studio include environment variable\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_VS_INCLUDE])\n-      # The Visual Studio lib environment variable\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_VS_LIB])\n-      # Corresponds to --with-msvcr-dll\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_MSVCR_DLL])\n-      # Corresponds to --with-msvcp-dll\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_MSVCP_DLL])\n-      # Corresponds to --with-ucrt-dll-dir\n-      BASIC_EVAL_DEVKIT_VARIABLE([DEVKIT_UCRT_DLL_DIR])\n-    fi\n-\n-    AC_MSG_CHECKING([for devkit])\n-    if test \"x$DEVKIT_NAME\" != x; then\n-      AC_MSG_RESULT([$DEVKIT_NAME in $DEVKIT_ROOT])\n-    else\n-      AC_MSG_RESULT([$DEVKIT_ROOT])\n-    fi\n-\n-    BASIC_PREPEND_TO_PATH([EXTRA_PATH],$DEVKIT_EXTRA_PATH)\n-\n-    # Fallback default of just \/bin if DEVKIT_PATH is not defined\n-    if test \"x$DEVKIT_TOOLCHAIN_PATH\" = x; then\n-      DEVKIT_TOOLCHAIN_PATH=\"$DEVKIT_ROOT\/bin\"\n-    fi\n-    BASIC_PREPEND_TO_PATH([TOOLCHAIN_PATH],$DEVKIT_TOOLCHAIN_PATH)\n-\n-    # If DEVKIT_SYSROOT is set, use that, otherwise try a couple of known\n-    # places for backwards compatiblity.\n-    if test \"x$DEVKIT_SYSROOT\" != x; then\n-      SYSROOT=\"$DEVKIT_SYSROOT\"\n-    elif test -d \"$DEVKIT_ROOT\/$host_alias\/libc\"; then\n-      SYSROOT=\"$DEVKIT_ROOT\/$host_alias\/libc\"\n-    elif test -d \"$DEVKIT_ROOT\/$host\/sys-root\"; then\n-      SYSROOT=\"$DEVKIT_ROOT\/$host\/sys-root\"\n-    fi\n-\n-    if test \"x$DEVKIT_ROOT\" != x; then\n-      DEVKIT_LIB_DIR=\"$DEVKIT_ROOT\/lib\"\n-      if test \"x$OPENJDK_TARGET_CPU_BITS\" = x64; then\n-        DEVKIT_LIB_DIR=\"$DEVKIT_ROOT\/lib64\"\n-      fi\n-      AC_SUBST(DEVKIT_LIB_DIR)\n-    fi\n-  fi\n-\n-  # You can force the sysroot if the sysroot encoded into the compiler tools\n-  # is not correct.\n-  AC_ARG_WITH(sys-root, [AS_HELP_STRING([--with-sys-root],\n-      [alias for --with-sysroot for backwards compatability])],\n-      [SYSROOT=$with_sys_root]\n-  )\n-\n-  AC_ARG_WITH(sysroot, [AS_HELP_STRING([--with-sysroot],\n-      [use this directory as sysroot])],\n-      [SYSROOT=$with_sysroot]\n-  )\n-\n-  AC_ARG_WITH([tools-dir], [AS_HELP_STRING([--with-tools-dir],\n-      [alias for --with-toolchain-path for backwards compatibility])],\n-      [BASIC_PREPEND_TO_PATH([TOOLCHAIN_PATH],$with_tools_dir)]\n-  )\n-\n-  AC_ARG_WITH([toolchain-path], [AS_HELP_STRING([--with-toolchain-path],\n-      [prepend these directories when searching for toolchain binaries (compilers etc)])],\n-      [BASIC_PREPEND_TO_PATH([TOOLCHAIN_PATH],$with_toolchain_path)]\n-  )\n-\n-  AC_ARG_WITH([extra-path], [AS_HELP_STRING([--with-extra-path],\n-      [prepend these directories to the default path])],\n-      [BASIC_PREPEND_TO_PATH([EXTRA_PATH],$with_extra_path)]\n-  )\n-\n-  if test \"x$OPENJDK_BUILD_OS\" = \"xmacosx\"; then\n-    # If a devkit has been supplied, find xcodebuild in the toolchain_path.\n-    # If not, detect if Xcode is installed by running xcodebuild -version\n-    # if no Xcode installed, xcodebuild exits with 1\n-    # if Xcode is installed, even if xcode-select is misconfigured, then it exits with 0\n-    if test \"x$DEVKIT_ROOT\" != x || \/usr\/bin\/xcodebuild -version >\/dev\/null 2>&1; then\n-      # We need to use xcodebuild in the toolchain dir provided by the user, this will\n-      # fall back on the stub binary in \/usr\/bin\/xcodebuild\n-      AC_PATH_PROG([XCODEBUILD], [xcodebuild], [\/usr\/bin\/xcodebuild], [$TOOLCHAIN_PATH])\n-    else\n-      # this should result in SYSROOT being empty, unless --with-sysroot is provided\n-      # when only the command line tools are installed there are no SDKs, so headers\n-      # are copied into the system frameworks\n-      XCODEBUILD=\n-      AC_SUBST(XCODEBUILD)\n-    fi\n-\n-    AC_MSG_CHECKING([for sdk name])\n-    AC_ARG_WITH([sdk-name], [AS_HELP_STRING([--with-sdk-name],\n-        [use the platform SDK of the given name. @<:@macosx@:>@])],\n-        [SDKNAME=$with_sdk_name]\n-    )\n-    AC_MSG_RESULT([$SDKNAME])\n-\n-    # if toolchain path is specified then don't rely on system headers, they may not compile\n-    HAVE_SYSTEM_FRAMEWORK_HEADERS=0\n-    test -z \"$TOOLCHAIN_PATH\" && \\\n-      HAVE_SYSTEM_FRAMEWORK_HEADERS=`test ! -f \/System\/Library\/Frameworks\/Foundation.framework\/Headers\/Foundation.h; echo $?`\n-\n-    if test -z \"$SYSROOT\"; then\n-      if test -n \"$XCODEBUILD\"; then\n-        # if we don't have system headers, use default SDK name (last resort)\n-        if test -z \"$SDKNAME\" -a $HAVE_SYSTEM_FRAMEWORK_HEADERS -eq 0; then\n-          SDKNAME=${SDKNAME:-macosx}\n-        fi\n-\n-        if test -n \"$SDKNAME\"; then\n-          # Call xcodebuild to determine SYSROOT\n-          SYSROOT=`\"$XCODEBUILD\" -sdk $SDKNAME -version | $GREP '^Path: ' | $SED 's\/Path: \/\/'`\n-        fi\n-      else\n-        if test $HAVE_SYSTEM_FRAMEWORK_HEADERS -eq 0; then\n-          AC_MSG_ERROR([No xcodebuild tool and no system framework headers found, use --with-sysroot or --with-sdk-name to provide a path to a valid SDK])\n-        fi\n-      fi\n-    else\n-      # warn user if --with-sdk-name was also set\n-      if test -n \"$with_sdk_name\"; then\n-        AC_MSG_WARN([Both SYSROOT and --with-sdk-name are set, only SYSROOT will be used])\n-      fi\n-    fi\n-\n-    if test $HAVE_SYSTEM_FRAMEWORK_HEADERS -eq 0 -a -z \"$SYSROOT\"; then\n-      # If no system framework headers, then SYSROOT must be set, or we won't build\n-      AC_MSG_ERROR([Unable to determine SYSROOT and no headers found in \/System\/Library\/Frameworks. Check Xcode configuration, --with-sysroot or --with-sdk-name arguments.])\n-    fi\n-\n-    # Perform a basic sanity test\n-    if test ! -f \"$SYSROOT\/System\/Library\/Frameworks\/Foundation.framework\/Headers\/Foundation.h\"; then\n-      if test -z \"$SYSROOT\"; then\n-        AC_MSG_ERROR([Unable to find required framework headers, provide a path to an SDK via --with-sysroot or --with-sdk-name and be sure Xcode is installed properly])\n-      else\n-        AC_MSG_ERROR([Invalid SDK or SYSROOT path, dependent framework headers not found])\n-      fi\n-    fi\n-\n-    # set SDKROOT too, Xcode tools will pick it up\n-    SDKROOT=\"$SYSROOT\"\n-    AC_SUBST(SDKROOT)\n-  fi\n-\n-  # Prepend the extra path to the global path\n-  BASIC_PREPEND_TO_PATH([PATH],$EXTRA_PATH)\n-\n-  AC_MSG_CHECKING([for sysroot])\n-  AC_MSG_RESULT([$SYSROOT])\n-  AC_MSG_CHECKING([for toolchain path])\n-  AC_MSG_RESULT([$TOOLCHAIN_PATH])\n-  AC_MSG_CHECKING([for extra path])\n-  AC_MSG_RESULT([$EXTRA_PATH])\n-])\n-\n-###############################################################################\n-AC_DEFUN_ONCE([BASIC_SETUP_OUTPUT_DIR],\n-[\n-\n-  AC_ARG_WITH(conf-name, [AS_HELP_STRING([--with-conf-name],\n-      [use this as the name of the configuration @<:@generated from important configuration options@:>@])],\n-      [ CONF_NAME=${with_conf_name} ])\n-\n-  # Test from where we are running configure, in or outside of src root.\n-  AC_MSG_CHECKING([where to store configuration])\n-  if test \"x$CONFIGURE_START_DIR\" = \"x$TOPDIR\" \\\n-      || test \"x$CONFIGURE_START_DIR\" = \"x$CUSTOM_ROOT\" \\\n-      || test \"x$CONFIGURE_START_DIR\" = \"x$TOPDIR\/make\/autoconf\" \\\n-      || test \"x$CONFIGURE_START_DIR\" = \"x$TOPDIR\/make\" ; then\n-    # We are running configure from the src root.\n-    # Create a default .\/build\/target-variant-debuglevel output root.\n-    if test \"x${CONF_NAME}\" = x; then\n-      AC_MSG_RESULT([in default location])\n-      CONF_NAME=\"${OPENJDK_TARGET_OS}-${OPENJDK_TARGET_CPU}-${JDK_VARIANT}-${JVM_VARIANTS_WITH_AND}-${DEBUG_LEVEL}\"\n-    else\n-      AC_MSG_RESULT([in build directory with custom name])\n-    fi\n-\n-    OUTPUTDIR=\"${WORKSPACE_ROOT}\/build\/${CONF_NAME}\"\n-    $MKDIR -p \"$OUTPUTDIR\"\n-    if test ! -d \"$OUTPUTDIR\"; then\n-      AC_MSG_ERROR([Could not create build directory $OUTPUTDIR])\n-    fi\n-  else\n-    # We are running configure from outside of the src dir.\n-    # Then use the current directory as output dir!\n-    # If configuration is situated in normal build directory, just use the build\n-    # directory name as configuration name, otherwise use the complete path.\n-    if test \"x${CONF_NAME}\" = x; then\n-      CONF_NAME=`$ECHO $CONFIGURE_START_DIR | $SED -e \"s!^${TOPDIR}\/build\/!!\"`\n-    fi\n-    OUTPUTDIR=\"$CONFIGURE_START_DIR\"\n-    AC_MSG_RESULT([in current directory])\n-\n-    # WARNING: This might be a bad thing to do. You need to be sure you want to\n-    # have a configuration in this directory. Do some sanity checks!\n-\n-    if test ! -e \"$OUTPUTDIR\/spec.gmk\"; then\n-      # If we have a spec.gmk, we have run here before and we are OK. Otherwise, check for\n-      # other files\n-      files_present=`$LS $OUTPUTDIR`\n-      # Configure has already touched config.log and confdefs.h in the current dir when this check\n-      # is performed.\n-      filtered_files=`$ECHO \"$files_present\" \\\n-          | $SED -e 's\/config.log\/\/g' \\\n-              -e 's\/configure.log\/\/g' \\\n-              -e 's\/confdefs.h\/\/g' \\\n-              -e 's\/configure-support\/\/g' \\\n-              -e 's\/ \/\/g' \\\n-          | $TR -d '\\n'`\n-      if test \"x$filtered_files\" != x; then\n-        AC_MSG_NOTICE([Current directory is $CONFIGURE_START_DIR.])\n-        AC_MSG_NOTICE([Since this is not the source root, configure will output the configuration here])\n-        AC_MSG_NOTICE([(as opposed to creating a configuration in <src_root>\/build\/<conf-name>).])\n-        AC_MSG_NOTICE([However, this directory is not empty. This is not allowed, since it could])\n-        AC_MSG_NOTICE([seriously mess up just about everything.])\n-        AC_MSG_NOTICE([Try 'cd $TOPDIR' and restart configure])\n-        AC_MSG_NOTICE([(or create a new empty directory and cd to it).])\n-        AC_MSG_ERROR([Will not continue creating configuration in $CONFIGURE_START_DIR])\n-      fi\n-    fi\n-  fi\n-  AC_MSG_CHECKING([what configuration name to use])\n-  AC_MSG_RESULT([$CONF_NAME])\n-\n-  BASIC_FIXUP_PATH(OUTPUTDIR)\n-\n-  CONFIGURESUPPORT_OUTPUTDIR=\"$OUTPUTDIR\/configure-support\"\n-  $MKDIR -p \"$CONFIGURESUPPORT_OUTPUTDIR\"\n-\n-  SPEC=\"$OUTPUTDIR\/spec.gmk\"\n-  AC_SUBST(SPEC)\n-  AC_SUBST(CONF_NAME)\n-  AC_SUBST(OUTPUTDIR)\n-  AC_SUBST(CONFIGURESUPPORT_OUTPUTDIR)\n-\n-  # The spec.gmk file contains all variables for the make system.\n-  AC_CONFIG_FILES([$OUTPUTDIR\/spec.gmk:$AUTOCONF_DIR\/spec.gmk.in])\n-  # The bootcycle-spec.gmk file contains support for boot cycle builds.\n-  AC_CONFIG_FILES([$OUTPUTDIR\/bootcycle-spec.gmk:$AUTOCONF_DIR\/bootcycle-spec.gmk.in])\n-  # The buildjdk-spec.gmk file contains support for building a buildjdk when cross compiling.\n-  AC_CONFIG_FILES([$OUTPUTDIR\/buildjdk-spec.gmk:$AUTOCONF_DIR\/buildjdk-spec.gmk.in])\n-  # The compare.sh is used to compare the build output to other builds.\n-  AC_CONFIG_FILES([$OUTPUTDIR\/compare.sh:$AUTOCONF_DIR\/compare.sh.in])\n-  # The generated Makefile knows where the spec.gmk is and where the source is.\n-  # You can run make from the OUTPUTDIR, or from the top-level Makefile\n-  # which will look for generated configurations\n-  AC_CONFIG_FILES([$OUTPUTDIR\/Makefile:$AUTOCONF_DIR\/Makefile.in])\n-])\n-\n-#%%% Simple tools %%%\n-\n-###############################################################################\n-# Check if we have found a usable version of make\n-# $1: the path to a potential make binary (or empty)\n-# $2: the description on how we found this\n-AC_DEFUN([BASIC_CHECK_MAKE_VERSION],\n-[\n-  MAKE_CANDIDATE=\"$1\"\n-  DESCRIPTION=\"$2\"\n-\n-  # On Cygwin, we require a newer version of make than on other platforms\n-  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n-    MAKE_VERSION_EXPR=\"-e 4\\.\"\n-    MAKE_REQUIRED_VERSION=\"4.0\"\n-   else\n-    MAKE_VERSION_EXPR=\"-e 3\\.8[[12]] -e 4\\.\"\n-    MAKE_REQUIRED_VERSION=\"3.81\"\n-  fi\n-\n-  if test \"x$MAKE_CANDIDATE\" != x; then\n-    AC_MSG_NOTICE([Testing potential make at $MAKE_CANDIDATE, found using $DESCRIPTION])\n-    MAKE_VERSION_STRING=`$MAKE_CANDIDATE --version | $HEAD -n 1`\n-    IS_GNU_MAKE=`$ECHO $MAKE_VERSION_STRING | $GREP 'GNU Make'`\n-    if test \"x$IS_GNU_MAKE\" = x; then\n-      AC_MSG_NOTICE([Found potential make at $MAKE_CANDIDATE, however, this is not GNU Make. Ignoring.])\n-    else\n-      IS_MODERN_MAKE=`$ECHO $MAKE_VERSION_STRING | $GREP $MAKE_VERSION_EXPR`\n-      if test \"x$IS_MODERN_MAKE\" = x; then\n-        AC_MSG_NOTICE([Found GNU make at $MAKE_CANDIDATE, however this is not version $MAKE_REQUIRED_VERSION or later. (it is: $MAKE_VERSION_STRING). Ignoring.])\n-      else\n-        if test \"x$OPENJDK_BUILD_OS\" = \"xwindows\"; then\n-          if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n-            MAKE_EXPECTED_ENV='cygwin'\n-          elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n-            MAKE_EXPECTED_ENV='msys'\n-          else\n-            AC_MSG_ERROR([Unknown Windows environment])\n-          fi\n-          MAKE_BUILT_FOR=`$MAKE_CANDIDATE --version | $GREP -i 'built for'`\n-          IS_MAKE_CORRECT_ENV=`$ECHO $MAKE_BUILT_FOR | $GREP $MAKE_EXPECTED_ENV`\n-        else\n-          # Not relevant for non-Windows\n-          IS_MAKE_CORRECT_ENV=true\n-        fi\n-        if test \"x$IS_MAKE_CORRECT_ENV\" = x; then\n-          AC_MSG_NOTICE([Found GNU make version $MAKE_VERSION_STRING at $MAKE_CANDIDATE, but it is not for $MAKE_EXPECTED_ENV (it says: $MAKE_BUILT_FOR). Ignoring.])\n-        else\n-          FOUND_MAKE=$MAKE_CANDIDATE\n-          BASIC_FIXUP_EXECUTABLE(FOUND_MAKE)\n-        fi\n-      fi\n-    fi\n-  fi\n-])\n-\n-###############################################################################\n-AC_DEFUN([BASIC_CHECK_MAKE_OUTPUT_SYNC],\n-[\n-  # Check if make supports the output sync option and if so, setup using it.\n-  AC_MSG_CHECKING([if make --output-sync is supported])\n-  if $MAKE --version -O > \/dev\/null 2>&1; then\n-    OUTPUT_SYNC_SUPPORTED=true\n-    AC_MSG_RESULT([yes])\n-    AC_MSG_CHECKING([for output-sync value])\n-    AC_ARG_WITH([output-sync], [AS_HELP_STRING([--with-output-sync],\n-      [set make output sync type if supported by make. @<:@recurse@:>@])],\n-      [OUTPUT_SYNC=$with_output_sync])\n-    if test \"x$OUTPUT_SYNC\" = \"x\"; then\n-      OUTPUT_SYNC=none\n-    fi\n-    AC_MSG_RESULT([$OUTPUT_SYNC])\n-    if ! $MAKE --version -O$OUTPUT_SYNC > \/dev\/null 2>&1; then\n-      AC_MSG_ERROR([Make did not the support the value $OUTPUT_SYNC as output sync type.])\n-    fi\n-  else\n-    OUTPUT_SYNC_SUPPORTED=false\n-    AC_MSG_RESULT([no])\n-  fi\n-  AC_SUBST(OUTPUT_SYNC_SUPPORTED)\n-  AC_SUBST(OUTPUT_SYNC)\n-])\n-\n-###############################################################################\n-# Goes looking for a usable version of GNU make.\n-AC_DEFUN([BASIC_CHECK_GNU_MAKE],\n-[\n-  BASIC_SETUP_TOOL([MAKE],\n-  [\n-    # Try our hardest to locate a correct version of GNU make\n-    AC_PATH_PROGS(CHECK_GMAKE, gmake)\n-    BASIC_CHECK_MAKE_VERSION(\"$CHECK_GMAKE\", [gmake in PATH])\n-\n-    if test \"x$FOUND_MAKE\" = x; then\n-      AC_PATH_PROGS(CHECK_MAKE, make)\n-      BASIC_CHECK_MAKE_VERSION(\"$CHECK_MAKE\", [make in PATH])\n-    fi\n-\n-    if test \"x$FOUND_MAKE\" = x; then\n-      if test \"x$TOOLCHAIN_PATH\" != x; then\n-        # We have a toolchain path, check that as well before giving up.\n-        OLD_PATH=$PATH\n-        PATH=$TOOLCHAIN_PATH:$PATH\n-        AC_PATH_PROGS(CHECK_TOOLSDIR_GMAKE, gmake)\n-        BASIC_CHECK_MAKE_VERSION(\"$CHECK_TOOLSDIR_GMAKE\", [gmake in tools-dir])\n-        if test \"x$FOUND_MAKE\" = x; then\n-          AC_PATH_PROGS(CHECK_TOOLSDIR_MAKE, make)\n-          BASIC_CHECK_MAKE_VERSION(\"$CHECK_TOOLSDIR_MAKE\", [make in tools-dir])\n-        fi\n-        PATH=$OLD_PATH\n-      fi\n-    fi\n-\n-    if test \"x$FOUND_MAKE\" = x; then\n-      AC_MSG_ERROR([Cannot find GNU make $MAKE_REQUIRED_VERSION or newer! Please put it in the path, or add e.g. MAKE=\/opt\/gmake3.81\/make as argument to configure.])\n-    fi\n-  ],[\n-    # If MAKE was set by user, verify the version\n-    BASIC_CHECK_MAKE_VERSION(\"$MAKE\", [user supplied MAKE=$MAKE])\n-    if test \"x$FOUND_MAKE\" = x; then\n-      AC_MSG_ERROR([The specified make (by MAKE=$MAKE) is not GNU make $MAKE_REQUIRED_VERSION or newer.])\n-    fi\n-  ])\n-\n-  MAKE=$FOUND_MAKE\n-  AC_SUBST(MAKE)\n-  AC_MSG_NOTICE([Using GNU make at $FOUND_MAKE (version: $MAKE_VERSION_STRING)])\n-\n-  BASIC_CHECK_MAKE_OUTPUT_SYNC\n-])\n-\n-###############################################################################\n-AC_DEFUN([BASIC_CHECK_FIND_DELETE],\n-[\n-  # Test if find supports -delete\n-  AC_MSG_CHECKING([if find supports -delete])\n-  FIND_DELETE=\"-delete\"\n-\n-  DELETEDIR=`$MKTEMP -d tmp.XXXXXXXXXX` || (echo Could not create temporary directory!; exit $?)\n-\n-  echo Hejsan > $DELETEDIR\/TestIfFindSupportsDelete\n-\n-  TEST_DELETE=`$FIND \"$DELETEDIR\" -name TestIfFindSupportsDelete $FIND_DELETE 2>&1`\n-  if test -f $DELETEDIR\/TestIfFindSupportsDelete; then\n-    # No, it does not.\n-    $RM $DELETEDIR\/TestIfFindSupportsDelete\n-    if test \"x$OPENJDK_TARGET_OS\" = \"xaix\"; then\n-      # AIX 'find' is buggy if called with '-exec {} \\+' and an empty file list\n-      FIND_DELETE=\"-print | $XARGS $RM\"\n-    else\n-      FIND_DELETE=\"-exec $RM \\{\\} \\+\"\n-    fi\n-    AC_MSG_RESULT([no])\n-  else\n-    AC_MSG_RESULT([yes])\n-  fi\n-  $RMDIR $DELETEDIR\n-  AC_SUBST(FIND_DELETE)\n-])\n-\n-###############################################################################\n-AC_DEFUN([BASIC_CHECK_TAR],\n-[\n-  # Test which kind of tar was found\n-  if test \"x$($TAR --version | $GREP \"GNU tar\")\" != \"x\"; then\n-    TAR_TYPE=\"gnu\"\n-  elif test \"x$($TAR --version | $GREP \"bsdtar\")\" != \"x\"; then\n-    TAR_TYPE=\"bsd\"\n-  elif test \"x$($TAR -v | $GREP \"bsdtar\")\" != \"x\"; then\n-    TAR_TYPE=\"bsd\"\n-  elif test \"x$($TAR --version | $GREP \"busybox\")\" != \"x\"; then\n-    TAR_TYPE=\"busybox\"\n-  elif test \"x$OPENJDK_BUILD_OS\" = \"xsolaris\"; then\n-    TAR_TYPE=\"solaris\"\n-  fi\n-  AC_MSG_CHECKING([what type of tar was found])\n-  AC_MSG_RESULT([$TAR_TYPE])\n-\n-  TAR_CREATE_FILE_PARAM=\"\"\n-\n-  if test \"x$TAR_TYPE\" = \"xgnu\"; then\n-    TAR_INCLUDE_PARAM=\"T\"\n-    TAR_SUPPORTS_TRANSFORM=\"true\"\n-    if test \"x$OPENJDK_TARGET_OS\" = \"xsolaris\"; then\n-      # When using gnu tar for Solaris targets, need to use compatibility mode\n-      TAR_CREATE_EXTRA_PARAM=\"--format=ustar\"\n-    fi\n-  elif test \"x$TAR_TYPE\" = \"xbusybox\"; then\n-    TAR_INCLUDE_PARAM=\"T\"\n-    TAR_SUPPORTS_TRANSFORM=\"false\"\n-  else\n-    TAR_INCLUDE_PARAM=\"I\"\n-    TAR_SUPPORTS_TRANSFORM=\"false\"\n-  fi\n-  AC_SUBST(TAR_TYPE)\n-  AC_SUBST(TAR_CREATE_EXTRA_PARAM)\n-  AC_SUBST(TAR_INCLUDE_PARAM)\n-  AC_SUBST(TAR_SUPPORTS_TRANSFORM)\n-])\n-\n-###############################################################################\n-AC_DEFUN([BASIC_CHECK_GREP],\n-[\n-  # Test that grep supports -Fx with a list of pattern which includes null pattern.\n-  # This is a problem for the grep resident on AIX.\n-  AC_MSG_CHECKING([that grep ($GREP) -Fx handles empty lines in the pattern list correctly])\n-  # Multiple subsequent spaces..\n-  STACK_SPACES='aaa   bbb   ccc'\n-  # ..converted to subsequent newlines, causes STACK_LIST to be a list with some empty\n-  # patterns in it.\n-  STACK_LIST=${STACK_SPACES\/\/ \/$'\\n'}\n-  NEEDLE_SPACES='ccc bbb aaa'\n-  NEEDLE_LIST=${NEEDLE_SPACES\/\/ \/$'\\n'}\n-  RESULT=\"$($GREP -Fvx \"$STACK_LIST\" <<< \"$NEEDLE_LIST\")\"\n-  if test \"x$RESULT\" == \"x\"; then\n-    AC_MSG_RESULT([yes])\n-  else\n-    if test \"x$OPENJDK_TARGET_OS\" = \"xaix\"; then\n-      ADDINFO=\"Please make sure you use GNU grep, usually found at \/opt\/freeware\/bin.\"\n-    fi\n-    AC_MSG_ERROR([grep does not handle -Fx correctly. ${ADDINFO}])\n-  fi\n-])\n-\n-###############################################################################\n-AC_DEFUN_ONCE([BASIC_SETUP_COMPLEX_TOOLS],\n-[\n-  BASIC_CHECK_GNU_MAKE\n-\n-  BASIC_CHECK_FIND_DELETE\n-  BASIC_CHECK_TAR\n-  BASIC_CHECK_GREP\n-  BASIC_SETUP_PANDOC\n-\n-  # These tools might not be installed by default,\n-  # need hint on how to install them.\n-  BASIC_REQUIRE_PROGS(UNZIP, unzip)\n-  # Since zip uses \"ZIP\" as a environment variable for passing options, we need\n-  # to name our variable differently, hence ZIPEXE.\n-  BASIC_REQUIRE_PROGS(ZIPEXE, zip)\n-\n-  # Non-required basic tools\n-\n-  BASIC_PATH_PROGS(LDD, ldd)\n-  if test \"x$LDD\" = \"x\"; then\n-    # List shared lib dependencies is used for\n-    # debug output and checking for forbidden dependencies.\n-    # We can build without it.\n-    LDD=\"true\"\n-  fi\n-  BASIC_PATH_PROGS(READELF, [greadelf readelf])\n-  BASIC_PATH_PROGS(DOT, dot)\n-  BASIC_PATH_PROGS(HG, hg)\n-  BASIC_PATH_PROGS(GIT, git)\n-  BASIC_PATH_PROGS(STAT, stat)\n-  BASIC_PATH_PROGS(TIME, time)\n-  BASIC_PATH_PROGS(FLOCK, flock)\n-  # Dtrace is usually found in \/usr\/sbin on Solaris, but that directory may not\n-  # be in the user path.\n-  BASIC_PATH_PROGS(DTRACE, dtrace, $PATH:\/usr\/sbin)\n-  BASIC_PATH_PROGS(PATCH, [gpatch patch])\n-  # Check if it's GNU time\n-  IS_GNU_TIME=`$TIME --version 2>&1 | $GREP 'GNU time'`\n-  if test \"x$IS_GNU_TIME\" != x; then\n-    IS_GNU_TIME=yes\n-  else\n-    IS_GNU_TIME=no\n-  fi\n-  AC_SUBST(IS_GNU_TIME)\n-\n-  if test \"x$OPENJDK_TARGET_OS\" = \"xmacosx\"; then\n-    BASIC_REQUIRE_PROGS(DSYMUTIL, dsymutil)\n-    BASIC_REQUIRE_PROGS(MIG, mig)\n-    BASIC_REQUIRE_PROGS(XATTR, xattr)\n-    BASIC_PATH_PROGS(CODESIGN, codesign)\n-\n-    if test \"x$CODESIGN\" != \"x\"; then\n-      # Check for user provided code signing identity.\n-      # If no identity was provided, fall back to \"openjdk_codesign\".\n-      AC_ARG_WITH([macosx-codesign-identity], [AS_HELP_STRING([--with-macosx-codesign-identity],\n-        [specify the code signing identity])],\n-        [MACOSX_CODESIGN_IDENTITY=$with_macosx_codesign_identity],\n-        [MACOSX_CODESIGN_IDENTITY=openjdk_codesign]\n-      )\n-\n-      AC_SUBST(MACOSX_CODESIGN_IDENTITY)\n-\n-      # Verify that the codesign certificate is present\n-      AC_MSG_CHECKING([if codesign certificate is present])\n-      $RM codesign-testfile\n-      $TOUCH codesign-testfile\n-      $CODESIGN -s \"$MACOSX_CODESIGN_IDENTITY\" codesign-testfile 2>&AS_MESSAGE_LOG_FD \\\n-          >&AS_MESSAGE_LOG_FD || CODESIGN=\n-      $RM codesign-testfile\n-      if test \"x$CODESIGN\" = x; then\n-        AC_MSG_RESULT([no])\n-      else\n-        AC_MSG_RESULT([yes])\n-        # Verify that the codesign has --option runtime\n-        AC_MSG_CHECKING([if codesign has --option runtime])\n-        $RM codesign-testfile\n-        $TOUCH codesign-testfile\n-        $CODESIGN --option runtime -s \"$MACOSX_CODESIGN_IDENTITY\" codesign-testfile \\\n-            2>&AS_MESSAGE_LOG_FD >&AS_MESSAGE_LOG_FD || CODESIGN=\n-        $RM codesign-testfile\n-        if test \"x$CODESIGN\" = x; then\n-          AC_MSG_ERROR([codesign does not have --option runtime. macOS 10.13.6 and above is required.])\n-        else\n-          AC_MSG_RESULT([yes])\n-        fi\n-      fi\n-    fi\n-    BASIC_REQUIRE_PROGS(SETFILE, SetFile)\n-  elif test \"x$OPENJDK_TARGET_OS\" = \"xsolaris\"; then\n-    BASIC_REQUIRE_PROGS(ELFEDIT, elfedit)\n-  fi\n-  if ! test \"x$OPENJDK_TARGET_OS\" = \"xwindows\"; then\n-    BASIC_REQUIRE_BUILTIN_PROGS(ULIMIT, ulimit)\n-  fi\n-])\n-\n-###############################################################################\n-# Check if build directory is on local disk. If not possible to determine,\n-# we prefer to claim it's local.\n-# Argument 1: directory to test\n-# Argument 2: what to do if it is on local disk\n-# Argument 3: what to do otherwise (remote disk or failure)\n-AC_DEFUN([BASIC_CHECK_DIR_ON_LOCAL_DISK],\n-[\n-  # df -l lists only local disks; if the given directory is not found then\n-  # a non-zero exit code is given\n-  if test \"x$DF\" = x; then\n-    if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n-      # msys does not have df; use Windows \"net use\" instead.\n-      IS_NETWORK_DISK=`net use | grep \\`pwd -W | cut -d \":\" -f 1 | tr a-z A-Z\\`:`\n-      if test \"x$IS_NETWORK_DISK\" = x; then\n-        $2\n-      else\n-        $3\n-      fi\n-    else\n-      # No df here, say it's local\n-      $2\n-    fi\n-  else\n-    # JDK-8189619\n-    # df on AIX does not understand -l. On modern AIXes it understands \"-T local\" which\n-    # is the same. On older AIXes we just continue to live with a \"not local build\" warning.\n-    if test \"x$OPENJDK_TARGET_OS\" = xaix; then\n-      DF_LOCAL_ONLY_OPTION='-T local'\n-    else\n-      DF_LOCAL_ONLY_OPTION='-l'\n-    fi\n-    if $DF $DF_LOCAL_ONLY_OPTION $1 > \/dev\/null 2>&1; then\n-      $2\n-    else\n-      $3\n-    fi\n-  fi\n-])\n-\n-###############################################################################\n-# Check that source files have basic read permissions set. This might\n-# not be the case in cygwin in certain conditions.\n-AC_DEFUN_ONCE([BASIC_CHECK_SRC_PERMS],\n-[\n-  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n-    file_to_test=\"$TOPDIR\/LICENSE\"\n-    if test `$STAT -c '%a' \"$file_to_test\"` -lt 400; then\n-      AC_MSG_ERROR([Bad file permissions on src files. This is usually caused by cloning the repositories with a non cygwin hg in a directory not created in cygwin.])\n-    fi\n-  fi\n-])\n-\n-###############################################################################\n-AC_DEFUN_ONCE([BASIC_TEST_USABILITY_ISSUES],\n-[\n-  AC_MSG_CHECKING([if build directory is on local disk])\n-  BASIC_CHECK_DIR_ON_LOCAL_DISK($OUTPUTDIR,\n-      [OUTPUT_DIR_IS_LOCAL=\"yes\"],\n-      [OUTPUT_DIR_IS_LOCAL=\"no\"])\n-  AC_MSG_RESULT($OUTPUT_DIR_IS_LOCAL)\n-\n-  BASIC_CHECK_SRC_PERMS\n-\n-  # Check if the user has any old-style ALT_ variables set.\n-  FOUND_ALT_VARIABLES=`env | grep ^ALT_`\n-\n-  # Before generating output files, test if they exist. If they do, this is a reconfigure.\n-  # Since we can't properly handle the dependencies for this, warn the user about the situation\n-  if test -e $OUTPUTDIR\/spec.gmk; then\n-    IS_RECONFIGURE=yes\n-  else\n-    IS_RECONFIGURE=no\n-  fi\n-])\n-\n-###############################################################################\n-# Check for support for specific options in bash\n-AC_DEFUN_ONCE([BASIC_CHECK_BASH_OPTIONS],\n-[\n-  # Check bash version\n-  # Extra [ ] to stop m4 mangling\n-  [ BASH_VER=`$BASH --version | $SED -n  -e 's\/^.*bash.*ersion *\\([0-9.]*\\).*$\/\\1\/ p'` ]\n-  AC_MSG_CHECKING([bash version])\n-  AC_MSG_RESULT([$BASH_VER])\n-\n-  BASH_MAJOR=`$ECHO $BASH_VER | $CUT -d . -f 1`\n-  BASH_MINOR=`$ECHO $BASH_VER | $CUT -d . -f 2`\n-  if test $BASH_MAJOR -lt 3 || (test $BASH_MAJOR -eq 3 && test $BASH_MINOR -lt 2); then\n-    AC_MSG_ERROR([bash version 3.2 or better is required])\n-  fi\n-\n-  # Test if bash supports pipefail.\n-  AC_MSG_CHECKING([if bash supports pipefail])\n-  if ${BASH} -c 'set -o pipefail'; then\n-    BASH_ARGS=\"$BASH_ARGS -o pipefail\"\n-    AC_MSG_RESULT([yes])\n-  else\n-    AC_MSG_RESULT([no])\n-  fi\n-\n-  AC_MSG_CHECKING([if bash supports errexit (-e)])\n-  if ${BASH} -e -c 'true'; then\n-    BASH_ARGS=\"$BASH_ARGS -e\"\n-    AC_MSG_RESULT([yes])\n-  else\n-    AC_MSG_RESULT([no])\n-  fi\n-\n-  AC_SUBST(BASH_ARGS)\n-])\n-\n-################################################################################\n-#\n-# Setup Pandoc\n-#\n-AC_DEFUN_ONCE([BASIC_SETUP_PANDOC],\n-[\n-  BASIC_PATH_PROGS(PANDOC, pandoc)\n-\n-  PANDOC_MARKDOWN_FLAG=\"markdown\"\n-  if test -n \"$PANDOC\"; then\n-    AC_MSG_CHECKING(if the pandoc smart extension needs to be disabled for markdown)\n-    if $PANDOC --list-extensions | $GREP -q '\\+smart'; then\n-      AC_MSG_RESULT([yes])\n-      PANDOC_MARKDOWN_FLAG=\"markdown-smart\"\n-    else\n-      AC_MSG_RESULT([no])\n-    fi\n-  fi\n-\n-  if test -n \"$PANDOC\"; then\n-    ENABLE_PANDOC=\"true\"\n-  else\n-    ENABLE_PANDOC=\"false\"\n-  fi\n-  AC_SUBST(ENABLE_PANDOC)\n-  AC_SUBST(PANDOC_MARKDOWN_FLAG)\n-])\n-\n-################################################################################\n-#\n-# Default make target\n-#\n-AC_DEFUN_ONCE([BASIC_SETUP_DEFAULT_MAKE_TARGET],\n-[\n-  AC_ARG_WITH(default-make-target, [AS_HELP_STRING([--with-default-make-target],\n-      [set the default make target @<:@exploded-image@:>@])])\n-  if test \"x$with_default_make_target\" = \"x\" \\\n-      || test \"x$with_default_make_target\" = \"xyes\"; then\n-    DEFAULT_MAKE_TARGET=\"exploded-image\"\n-  elif test \"x$with_default_make_target\" = \"xno\"; then\n-    AC_MSG_ERROR([--without-default-make-target is not a valid option])\n-  else\n-    DEFAULT_MAKE_TARGET=\"$with_default_make_target\"\n-  fi\n-\n-  AC_SUBST(DEFAULT_MAKE_TARGET)\n-])\n-\n-###############################################################################\n-# Setup the default value for LOG=\n-#\n-AC_DEFUN_ONCE([BASIC_SETUP_DEFAULT_LOG],\n-[\n-  AC_ARG_WITH(log, [AS_HELP_STRING([--with-log],\n-      [[default vaue for make LOG argument [warn]]])])\n-  AC_MSG_CHECKING([for default LOG value])\n-  if test \"x$with_log\" = x; then\n-    DEFAULT_LOG=\"\"\n-  else\n-    # Syntax for valid LOG options is a bit too complex for it to be worth\n-    # implementing a test for correctness in configure. Just accept it.\n-    DEFAULT_LOG=$with_log\n-  fi\n-  AC_MSG_RESULT([$DEFAULT_LOG])\n-  AC_SUBST(DEFAULT_LOG)\n-])\n-\n-###############################################################################\n-# Code to run after AC_OUTPUT\n-AC_DEFUN_ONCE([BASIC_POST_CONFIG_OUTPUT],\n-[\n-  # Try to move config.log (generated by autoconf) to the configure-support directory.\n-  if test -e .\/config.log; then\n-    $MV -f .\/config.log \"$CONFIGURESUPPORT_OUTPUTDIR\/config.log\" 2> \/dev\/null\n-  fi\n-\n-  # Rotate our log file (configure.log)\n-  if test -e \"$OUTPUTDIR\/configure.log.old\"; then\n-    $RM -f \"$OUTPUTDIR\/configure.log.old\"\n-  fi\n-  if test -e \"$OUTPUTDIR\/configure.log\"; then\n-    $MV -f \"$OUTPUTDIR\/configure.log\" \"$OUTPUTDIR\/configure.log.old\" 2> \/dev\/null\n-  fi\n-\n-  # Move configure.log from current directory to the build output root\n-  if test -e .\/configure.log; then\n-    $MV -f .\/configure.log \"$OUTPUTDIR\/configure.log\" 2> \/dev\/null\n-  fi\n-\n-  # Make the compare script executable\n-  $CHMOD +x $OUTPUTDIR\/compare.sh\n-])\n","filename":"make\/autoconf\/basics.m4","additions":0,"deletions":1507,"binary":false,"changes":1507,"status":"deleted"},{"patch":"@@ -1,451 +0,0 @@\n-#\n-# Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-AC_DEFUN([BASIC_WINDOWS_REWRITE_AS_UNIX_PATH],\n-[\n-  windows_path=\"[$]$1\"\n-  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n-    unix_path=`$CYGPATH -u \"$windows_path\"`\n-    $1=\"$unix_path\"\n-  elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n-    unix_path=`$ECHO \"$windows_path\" | $SED -e 's,^\\\\(.\\\\):,\/\\\\1,g' -e 's,\\\\\\\\,\/,g'`\n-    $1=\"$unix_path\"\n-  fi\n-])\n-\n-AC_DEFUN([BASIC_WINDOWS_REWRITE_AS_WINDOWS_MIXED_PATH],\n-[\n-  unix_path=\"[$]$1\"\n-  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n-    windows_path=`$CYGPATH -m \"$unix_path\"`\n-    $1=\"$windows_path\"\n-  elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n-    windows_path=`cmd \/\/c echo $unix_path`\n-    $1=\"$windows_path\"\n-  fi\n-])\n-\n-# Helper function which possibly converts a path using DOS-style short mode.\n-# If so, the updated path is stored in $new_path.\n-# $1: The path to check\n-AC_DEFUN([BASIC_MAKE_WINDOWS_SPACE_SAFE_CYGWIN],\n-[\n-  input_path=\"$1\"\n-  # Check if we need to convert this using DOS-style short mode. If the path\n-  # contains just simple characters, use it. Otherwise (spaces, weird characters),\n-  # take no chances and rewrite it.\n-  # Note: m4 eats our [], so we need to use @<:@ and @:>@ instead.\n-  has_forbidden_chars=`$ECHO \"$input_path\" | $GREP @<:@^-._\/a-zA-Z0-9@:>@`\n-  if test \"x$has_forbidden_chars\" != x; then\n-    # Now convert it to mixed DOS-style, short mode (no spaces, and \/ instead of \\)\n-    shortmode_path=`$CYGPATH -s -m -a \"$input_path\"`\n-    path_after_shortmode=`$CYGPATH -u \"$shortmode_path\"`\n-    if test \"x$path_after_shortmode\" != \"x$input_to_shortpath\"; then\n-      # Going to short mode and back again did indeed matter. Since short mode is\n-      # case insensitive, let's make it lowercase to improve readability.\n-      shortmode_path=`$ECHO \"$shortmode_path\" | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n-      # Now convert it back to Unix-style (cygpath)\n-      input_path=`$CYGPATH -u \"$shortmode_path\"`\n-      new_path=\"$input_path\"\n-    fi\n-  fi\n-\n-  test_cygdrive_prefix=`$ECHO $input_path | $GREP ^\/cygdrive\/`\n-  if test \"x$test_cygdrive_prefix\" = x; then\n-    # As a simple fix, exclude \/usr\/bin since it's not a real path.\n-    if test \"x`$ECHO $1 | $GREP ^\/usr\/bin\/`\" = x; then\n-      # The path is in a Cygwin special directory (e.g. \/home). We need this converted to\n-      # a path prefixed by \/cygdrive for fixpath to work.\n-      new_path=\"$CYGWIN_ROOT_PATH$input_path\"\n-    fi\n-  fi\n-])\n-\n-# Helper function which possibly converts a path using DOS-style short mode.\n-# If so, the updated path is stored in $new_path.\n-# $1: The path to check\n-AC_DEFUN([BASIC_MAKE_WINDOWS_SPACE_SAFE_MSYS],\n-[\n-  input_path=\"$1\"\n-  # Check if we need to convert this using DOS-style short mode. If the path\n-  # contains just simple characters, use it. Otherwise (spaces, weird characters),\n-  # take no chances and rewrite it.\n-  # Note: m4 eats our [], so we need to use @<:@ and @:>@ instead.\n-  has_forbidden_chars=`$ECHO \"$input_path\" | $GREP @<:@^-_\/:a-zA-Z0-9@:>@`\n-  if test \"x$has_forbidden_chars\" != x; then\n-    # Now convert it to mixed DOS-style, short mode (no spaces, and \/ instead of \\)\n-    new_path=`cmd \/c \"for %A in (\\\"$input_path\\\") do @echo %~sA\"|$TR \\\\\\\\\\\\\\\\ \/ | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n-  fi\n-])\n-\n-# FIXME: The BASIC_FIXUP_*_CYGWIN\/MSYS is most likely too convoluted\n-# and could probably be heavily simplified. However, all changes in this\n-# area tend to need lot of testing in different scenarios, and in lack of\n-# proper unit testing, cleaning this up has not been deemed worth the effort\n-# at the moment.\n-\n-AC_DEFUN([BASIC_FIXUP_PATH_CYGWIN],\n-[\n-  # Input might be given as Windows format, start by converting to\n-  # unix format.\n-  path=\"[$]$1\"\n-  new_path=`$CYGPATH -u \"$path\"`\n-\n-  # Cygwin tries to hide some aspects of the Windows file system, such that binaries are\n-  # named .exe but called without that suffix. Therefore, \"foo\" and \"foo.exe\" are considered\n-  # the same file, most of the time (as in \"test -f\"). But not when running cygpath -s, then\n-  # \"foo.exe\" is OK but \"foo\" is an error.\n-  #\n-  # This test is therefore slightly more accurate than \"test -f\" to check for file precense.\n-  # It is also a way to make sure we got the proper file name for the real test later on.\n-  test_shortpath=`$CYGPATH -s -m \"$new_path\" 2> \/dev\/null`\n-  if test \"x$test_shortpath\" = x; then\n-    AC_MSG_NOTICE([The path of $1, which resolves as \"$path\", is invalid.])\n-    AC_MSG_ERROR([Cannot locate the the path of $1])\n-  fi\n-\n-  # Call helper function which possibly converts this using DOS-style short mode.\n-  # If so, the updated path is stored in $new_path.\n-  BASIC_MAKE_WINDOWS_SPACE_SAFE_CYGWIN([$new_path])\n-\n-  if test \"x$path\" != \"x$new_path\"; then\n-    $1=\"$new_path\"\n-    AC_MSG_NOTICE([Rewriting $1 to \"$new_path\"])\n-  fi\n-])\n-\n-AC_DEFUN([BASIC_FIXUP_PATH_MSYS],\n-[\n-  path=\"[$]$1\"\n-  has_colon=`$ECHO $path | $GREP ^.:`\n-  new_path=\"$path\"\n-  if test \"x$has_colon\" = x; then\n-    # Not in mixed or Windows style, start by that.\n-    new_path=`cmd \/\/c echo $path`\n-  fi\n-\n-  BASIC_MAKE_WINDOWS_SPACE_SAFE_MSYS([$new_path])\n-  BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(new_path)\n-  if test \"x$path\" != \"x$new_path\"; then\n-    $1=\"$new_path\"\n-    AC_MSG_NOTICE([Rewriting $1 to \"$new_path\"])\n-  fi\n-\n-  # Save the first 10 bytes of this path to the storage, so fixpath can work.\n-  all_fixpath_prefixes=(\"${all_fixpath_prefixes@<:@@@:>@}\" \"${new_path:0:10}\")\n-])\n-\n-AC_DEFUN([BASIC_FIXUP_EXECUTABLE_CYGWIN],\n-[\n-  # First separate the path from the arguments. This will split at the first\n-  # space.\n-  complete=\"[$]$1\"\n-  path=\"${complete%% *}\"\n-  tmp=\"$complete EOL\"\n-  arguments=\"${tmp#* }\"\n-\n-  # Input might be given as Windows format, start by converting to\n-  # unix format.\n-  new_path=`$CYGPATH -u \"$path\"`\n-\n-  # Now try to locate executable using which\n-  new_path=`$WHICH \"$new_path\" 2> \/dev\/null`\n-  # bat and cmd files are not always considered executable in cygwin causing which\n-  # to not find them\n-  if test \"x$new_path\" = x \\\n-      && test \"x`$ECHO \\\"$path\\\" | $GREP -i -e \\\"\\\\.bat$\\\" -e \\\"\\\\.cmd$\\\"`\" != x \\\n-      && test \"x`$LS \\\"$path\\\" 2>\/dev\/null`\" != x; then\n-    new_path=`$CYGPATH -u \"$path\"`\n-  fi\n-  if test \"x$new_path\" = x; then\n-    # Oops. Which didn't find the executable.\n-    # The splitting of arguments from the executable at a space might have been incorrect,\n-    # since paths with space are more likely in Windows. Give it another try with the whole\n-    # argument.\n-    path=\"$complete\"\n-    arguments=\"EOL\"\n-    new_path=`$CYGPATH -u \"$path\"`\n-    new_path=`$WHICH \"$new_path\" 2> \/dev\/null`\n-    # bat and cmd files are not always considered executable in cygwin causing which\n-    # to not find them\n-    if test \"x$new_path\" = x \\\n-        && test \"x`$ECHO \\\"$path\\\" | $GREP -i -e \\\"\\\\.bat$\\\" -e \\\"\\\\.cmd$\\\"`\" != x \\\n-        && test \"x`$LS \\\"$path\\\" 2>\/dev\/null`\" != x; then\n-      new_path=`$CYGPATH -u \"$path\"`\n-    fi\n-    if test \"x$new_path\" = x; then\n-      # It's still not found. Now this is an unrecoverable error.\n-      AC_MSG_NOTICE([The path of $1, which resolves as \"$complete\", is not found.])\n-      has_space=`$ECHO \"$complete\" | $GREP \" \"`\n-      if test \"x$has_space\" != x; then\n-        AC_MSG_NOTICE([You might be mixing spaces in the path and extra arguments, which is not allowed.])\n-      fi\n-      AC_MSG_ERROR([Cannot locate the the path of $1])\n-    fi\n-  fi\n-\n-  # Cygwin tries to hide some aspects of the Windows file system, such that binaries are\n-  # named .exe but called without that suffix. Therefore, \"foo\" and \"foo.exe\" are considered\n-  # the same file, most of the time (as in \"test -f\"). But not when running cygpath -s, then\n-  # \"foo.exe\" is OK but \"foo\" is an error.\n-  #\n-  # This test is therefore slightly more accurate than \"test -f\" to check for file presence.\n-  # It is also a way to make sure we got the proper file name for the real test later on.\n-  test_shortpath=`$CYGPATH -s -m \"$new_path\" 2> \/dev\/null`\n-  if test \"x$test_shortpath\" = x; then\n-    # Short path failed, file does not exist as specified.\n-    # Try adding .exe or .cmd\n-    if test -f \"${new_path}.exe\"; then\n-      input_to_shortpath=\"${new_path}.exe\"\n-    elif test -f \"${new_path}.cmd\"; then\n-      input_to_shortpath=\"${new_path}.cmd\"\n-    else\n-      AC_MSG_NOTICE([The path of $1, which resolves as \"$new_path\", is invalid.])\n-      AC_MSG_NOTICE([Neither \"$new_path\" nor \"$new_path.exe\/cmd\" can be found])\n-      AC_MSG_ERROR([Cannot locate the the path of $1])\n-    fi\n-  else\n-    input_to_shortpath=\"$new_path\"\n-  fi\n-\n-  # Call helper function which possibly converts this using DOS-style short mode.\n-  # If so, the updated path is stored in $new_path.\n-  new_path=\"$input_to_shortpath\"\n-  BASIC_MAKE_WINDOWS_SPACE_SAFE_CYGWIN([$input_to_shortpath])\n-  # remove trailing .exe if any\n-  new_path=\"${new_path\/%.exe\/}\"\n-])\n-\n-AC_DEFUN([BASIC_FIXUP_EXECUTABLE_MSYS],\n-[\n-  # First separate the path from the arguments. This will split at the first\n-  # space.\n-  complete=\"[$]$1\"\n-  path=\"${complete%% *}\"\n-  tmp=\"$complete EOL\"\n-  arguments=\"${tmp#* }\"\n-\n-  # Input might be given as Windows format, start by converting to\n-  # unix format.\n-  new_path=\"$path\"\n-  BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(new_path)\n-\n-  # Now try to locate executable using which\n-  new_path=`$WHICH \"$new_path\" 2> \/dev\/null`\n-\n-  if test \"x$new_path\" = x; then\n-    # Oops. Which didn't find the executable.\n-    # The splitting of arguments from the executable at a space might have been incorrect,\n-    # since paths with space are more likely in Windows. Give it another try with the whole\n-    # argument.\n-    path=\"$complete\"\n-    arguments=\"EOL\"\n-    new_path=\"$path\"\n-    BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(new_path)\n-\n-    new_path=`$WHICH \"$new_path\" 2> \/dev\/null`\n-    # bat and cmd files are not always considered executable in MSYS causing which\n-    # to not find them\n-    if test \"x$new_path\" = x \\\n-        && test \"x`$ECHO \\\"$path\\\" | $GREP -i -e \\\"\\\\.bat$\\\" -e \\\"\\\\.cmd$\\\"`\" != x \\\n-        && test \"x`$LS \\\"$path\\\" 2>\/dev\/null`\" != x; then\n-      new_path=\"$path\"\n-      BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(new_path)\n-    fi\n-\n-    if test \"x$new_path\" = x; then\n-      # It's still not found. Now this is an unrecoverable error.\n-      AC_MSG_NOTICE([The path of $1, which resolves as \"$complete\", is not found.])\n-      has_space=`$ECHO \"$complete\" | $GREP \" \"`\n-      if test \"x$has_space\" != x; then\n-        AC_MSG_NOTICE([You might be mixing spaces in the path and extra arguments, which is not allowed.])\n-      fi\n-      AC_MSG_ERROR([Cannot locate the the path of $1])\n-    fi\n-  fi\n-\n-  # Now new_path has a complete unix path to the binary\n-  if test \"x`$ECHO $new_path | $GREP ^\/bin\/`\" != x; then\n-    # Keep paths in \/bin as-is, but remove trailing .exe if any\n-    new_path=\"${new_path\/%.exe\/}\"\n-    # Do not save \/bin paths to all_fixpath_prefixes!\n-  else\n-    # Not in mixed or Windows style, start by that.\n-    new_path=`cmd \/\/c echo $new_path`\n-    BASIC_MAKE_WINDOWS_SPACE_SAFE_MSYS([$new_path])\n-    # Output is in $new_path\n-    BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(new_path)\n-    # remove trailing .exe if any\n-    new_path=\"${new_path\/%.exe\/}\"\n-\n-    # Save the first 10 bytes of this path to the storage, so fixpath can work.\n-    all_fixpath_prefixes=(\"${all_fixpath_prefixes@<:@@@:>@}\" \"${new_path:0:10}\")\n-  fi\n-])\n-\n-# Setup basic configuration paths, and platform-specific stuff related to PATHs.\n-AC_DEFUN([BASIC_CHECK_PATHS_WINDOWS],\n-[\n-  SRC_ROOT_LENGTH=`$THEPWDCMD -L|$WC -m`\n-  if test $SRC_ROOT_LENGTH -gt 100; then\n-    AC_MSG_ERROR([Your base path is too long. It is $SRC_ROOT_LENGTH characters long, but only 100 is supported])\n-  fi\n-\n-  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n-    AC_MSG_CHECKING([cygwin release])\n-    CYGWIN_VERSION=`$UNAME -r`\n-    AC_MSG_RESULT([$CYGWIN_VERSION])\n-    WINDOWS_ENV_VENDOR='cygwin'\n-    WINDOWS_ENV_VERSION=\"$CYGWIN_VERSION\"\n-\n-    CYGWIN_VERSION_OLD=`$ECHO $CYGWIN_VERSION | $GREP -e '^1\\.[0-6]'`\n-    if test \"x$CYGWIN_VERSION_OLD\" != x; then\n-      AC_MSG_NOTICE([Your cygwin is too old. You are running $CYGWIN_VERSION, but at least cygwin 1.7 is required. Please upgrade.])\n-      AC_MSG_ERROR([Cannot continue])\n-    fi\n-    if test \"x$CYGPATH\" = x; then\n-      AC_MSG_ERROR([Something is wrong with your cygwin installation since I cannot find cygpath.exe in your path])\n-    fi\n-    AC_MSG_CHECKING([cygwin root directory as unix-style path])\n-    # The cmd output ends with Windows line endings (CR\/LF)\n-    cygwin_winpath_root=`cd \/ ; cmd \/c cd | $TR -d '\\r\\n'`\n-    # Force cygpath to report the proper root by including a trailing space, and then stripping it off again.\n-    CYGWIN_ROOT_PATH=`$CYGPATH -u \"$cygwin_winpath_root \" | $CUT -f 1 -d \" \"`\n-    AC_MSG_RESULT([$CYGWIN_ROOT_PATH])\n-    WINDOWS_ENV_ROOT_PATH=\"$CYGWIN_ROOT_PATH\"\n-    test_cygdrive_prefix=`$ECHO $CYGWIN_ROOT_PATH | $GREP ^\/cygdrive\/`\n-    if test \"x$test_cygdrive_prefix\" = x; then\n-      AC_MSG_ERROR([Your cygdrive prefix is not \/cygdrive. This is currently not supported. Change with mount -c.])\n-    fi\n-  elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n-    AC_MSG_CHECKING([msys release])\n-    MSYS_VERSION=`$UNAME -r`\n-    AC_MSG_RESULT([$MSYS_VERSION])\n-\n-    WINDOWS_ENV_VENDOR='msys'\n-    WINDOWS_ENV_VERSION=\"$MSYS_VERSION\"\n-\n-    AC_MSG_CHECKING([msys root directory as unix-style path])\n-    # The cmd output ends with Windows line endings (CR\/LF), the grep command will strip that away\n-    MSYS_ROOT_PATH=`cd \/ ; cmd \/c cd | $GREP \".*\"`\n-    BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(MSYS_ROOT_PATH)\n-    AC_MSG_RESULT([$MSYS_ROOT_PATH])\n-    WINDOWS_ENV_ROOT_PATH=\"$MSYS_ROOT_PATH\"\n-  else\n-    AC_MSG_ERROR([Unknown Windows environment. Neither cygwin nor msys was detected.])\n-  fi\n-\n-  # Test if windows or unix (cygwin\/msys) find is first in path.\n-  AC_MSG_CHECKING([what kind of 'find' is first on the PATH])\n-  FIND_BINARY_OUTPUT=`find --version 2>&1`\n-  if test \"x`echo $FIND_BINARY_OUTPUT | $GREP GNU`\" != x; then\n-    AC_MSG_RESULT([unix style])\n-  elif test \"x`echo $FIND_BINARY_OUTPUT | $GREP FIND`\" != x; then\n-    AC_MSG_RESULT([Windows])\n-    AC_MSG_NOTICE([Your path contains Windows tools (C:\\Windows\\system32) before your unix (cygwin or msys) tools.])\n-    AC_MSG_NOTICE([This will not work. Please correct and make sure \/usr\/bin (or similar) is first in path.])\n-    AC_MSG_ERROR([Cannot continue])\n-  else\n-    AC_MSG_RESULT([unknown])\n-    AC_MSG_WARN([It seems that your find utility is non-standard.])\n-  fi\n-])\n-\n-AC_DEFUN_ONCE([BASIC_COMPILE_FIXPATH],\n-[\n-  # When using cygwin or msys, we need a wrapper binary that renames\n-  # \/cygdrive\/c\/ arguments into c:\/ arguments and peeks into\n-  # @files and rewrites these too! This wrapper binary is\n-  # called fixpath.\n-  FIXPATH=\n-  if test \"x$OPENJDK_BUILD_OS\" = xwindows; then\n-    FIXPATH_SRC=\"$TOPDIR\/make\/src\/native\/fixpath.c\"\n-    FIXPATH_DIR=\"$CONFIGURESUPPORT_OUTPUTDIR\/fixpath\"\n-\n-    if test \"x$OPENJDK_TARGET_CPU\" != \"xaarch64\"; then\n-      AC_MSG_CHECKING([if fixpath can be created])\n-\n-      FIXPATH_BIN=\"$CONFIGURESUPPORT_OUTPUTDIR\/bin\/fixpath.exe\"\n-      FIXPATH_SRC_W=\"$FIXPATH_SRC\"\n-      FIXPATH_BIN_W=\"$FIXPATH_BIN\"\n-      BASIC_WINDOWS_REWRITE_AS_WINDOWS_MIXED_PATH([FIXPATH_SRC_W])\n-      BASIC_WINDOWS_REWRITE_AS_WINDOWS_MIXED_PATH([FIXPATH_BIN_W])\n-      $RM -rf $FIXPATH_BIN $FIXPATH_DIR\n-      $MKDIR -p $FIXPATH_DIR $CONFIGURESUPPORT_OUTPUTDIR\/bin\n-      cd $FIXPATH_DIR\n-      $CC $FIXPATH_SRC_W -Fe$FIXPATH_BIN_W > $FIXPATH_DIR\/fixpath1.log 2>&1\n-      cd $CONFIGURE_START_DIR\n-\n-      if test ! -x $FIXPATH_BIN; then\n-        AC_MSG_RESULT([no])\n-        cat $FIXPATH_DIR\/fixpath1.log\n-        AC_MSG_ERROR([Could not create $FIXPATH_BIN])\n-      fi\n-      AC_MSG_RESULT([yes])\n-\n-    else # OPENJDK_TARGET_CPU is aarch64\n-      AC_MSG_CHECKING([if fixpath is in place])\n-\n-      FIXPATH_BIN=\"$TOPDIR\/fixpath.exe\"\n-      $RM -rf $FIXPATH_DIR\n-      $MKDIR -p $FIXPATH_DIR\n-\n-      if test ! -x $FIXPATH_BIN; then\n-        AC_MSG_RESULT([no])\n-        AC_MSG_ERROR([Could not find fixpath.exe under $TOPDIR])\n-      fi\n-      AC_MSG_RESULT([yes])\n-    fi\n-\n-    if test \"x$OPENJDK_BUILD_OS_ENV\" = xwindows.cygwin; then\n-      # Important to keep the .exe suffix on Cygwin for Hotspot makefiles\n-      FIXPATH=\"$FIXPATH_BIN -c\"\n-    elif test \"x$OPENJDK_BUILD_OS_ENV\" = xwindows.msys; then\n-      # Take all collected prefixes and turn them into a -m\/c\/foo@\/c\/bar@... command line\n-      # @ was chosen as separator to minimize risk of other tools messing around with it\n-      all_unique_prefixes=`echo \"${all_fixpath_prefixes@<:@@@:>@}\" \\\n-          | tr ' ' '\\n' | $GREP '^\/.\/' | $SORT | $UNIQ`\n-      fixpath_argument_list=`echo $all_unique_prefixes  | tr ' ' '@'`\n-      FIXPATH=\"$FIXPATH_BIN -m$fixpath_argument_list\"\n-    fi\n-\n-    AC_MSG_CHECKING([if fixpath.exe works])\n-    cd $FIXPATH_DIR\n-    $FIXPATH $CC $FIXPATH_SRC -Fe$FIXPATH_DIR\/fixpath2.exe \\\n-        > $FIXPATH_DIR\/fixpath2.log 2>&1\n-    cd $CONFIGURE_START_DIR\n-    if test ! -x $FIXPATH_DIR\/fixpath2.exe; then\n-      AC_MSG_RESULT([no])\n-      cat $FIXPATH_DIR\/fixpath2.log\n-      AC_MSG_ERROR([fixpath did not work!])\n-    fi\n-    AC_MSG_RESULT([yes])\n-\n-    FIXPATH_DETACH_FLAG=\"--detach\"\n-  fi\n-\n-  AC_SUBST(FIXPATH)\n-  AC_SUBST(FIXPATH_DETACH_FLAG)\n-])\n","filename":"make\/autoconf\/basics_windows.m4","additions":0,"deletions":451,"binary":false,"changes":451,"status":"deleted"},{"patch":"@@ -100,1 +100,1 @@\n-            BASIC_FIXUP_PATH(BOOT_JDK)\n+            UTIL_FIXUP_PATH(BOOT_JDK)\n@@ -153,1 +153,1 @@\n-    BASIC_FIXUP_PATH(JAVA_HOME_PROCESSED)\n+    UTIL_FIXUP_PATH(JAVA_HOME_PROCESSED)\n@@ -180,1 +180,1 @@\n-    BASIC_REMOVE_SYMBOLIC_LINKS(BINARY)\n+    UTIL_REMOVE_SYMBOLIC_LINKS(BINARY)\n@@ -244,1 +244,1 @@\n-    BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(VIRTUAL_DIR)\n+    UTIL_REWRITE_AS_UNIX_PATH(VIRTUAL_DIR)\n@@ -272,1 +272,1 @@\n-  BASIC_SETUP_TOOL($1,\n+  UTIL_SETUP_TOOL($1,\n@@ -365,1 +365,1 @@\n-  ADD_JVM_ARG_IF_OK([-XX:+UnlockDiagnosticVMOptions -XX:-VerifySharedSpaces -XX:SharedArchiveFile=$BOOT_JDK_CDS_ARCHIVE],boot_jdk_cds_args,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-XX:+UnlockDiagnosticVMOptions -XX:-VerifySharedSpaces -XX:SharedArchiveFile=$BOOT_JDK_CDS_ARCHIVE],boot_jdk_cds_args,[$JAVA])\n@@ -394,1 +394,1 @@\n-  ADD_JVM_ARG_IF_OK([-Duser.language=en -Duser.country=US],boot_jdk_jvmargs,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-Duser.language=en -Duser.country=US],boot_jdk_jvmargs,[$JAVA])\n@@ -398,1 +398,1 @@\n-    ADD_JVM_ARG_IF_OK([$boot_jdk_cds_args -Xshare:auto],boot_jdk_jvmargs,[$JAVA])\n+    UTIL_ADD_JVM_ARG_IF_OK([$boot_jdk_cds_args -Xshare:auto],boot_jdk_jvmargs,[$JAVA])\n@@ -401,1 +401,1 @@\n-    ADD_JVM_ARG_IF_OK([-Xshare:auto],boot_jdk_jvmargs,[$JAVA])\n+    UTIL_ADD_JVM_ARG_IF_OK([-Xshare:auto],boot_jdk_jvmargs,[$JAVA])\n@@ -405,1 +405,1 @@\n-  ADD_JVM_ARG_IF_OK([$USER_BOOT_JDK_OPTIONS],boot_jdk_jvmargs,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([$USER_BOOT_JDK_OPTIONS],boot_jdk_jvmargs,[$JAVA])\n@@ -416,1 +416,1 @@\n-  ADD_JVM_ARG_IF_OK([-Xms64M],boot_jdk_jvmargs_big,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-Xms64M],boot_jdk_jvmargs_big,[$JAVA])\n@@ -444,2 +444,2 @@\n-  ADD_JVM_ARG_IF_OK([-Xmx${JVM_MAX_HEAP}M],boot_jdk_jvmargs_big,[$JAVA])\n-  ADD_JVM_ARG_IF_OK([-XX:ThreadStackSize=$STACK_SIZE],boot_jdk_jvmargs_big,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-Xmx${JVM_MAX_HEAP}M],boot_jdk_jvmargs_big,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-XX:ThreadStackSize=$STACK_SIZE],boot_jdk_jvmargs_big,[$JAVA])\n@@ -472,4 +472,4 @@\n-  ADD_JVM_ARG_IF_OK([-XX:+UseSerialGC],boot_jdk_jvmargs_small,[$JAVA])\n-  ADD_JVM_ARG_IF_OK([-Xms32M],boot_jdk_jvmargs_small,[$JAVA])\n-  ADD_JVM_ARG_IF_OK([-Xmx512M],boot_jdk_jvmargs_small,[$JAVA])\n-  ADD_JVM_ARG_IF_OK([-XX:TieredStopAtLevel=1],boot_jdk_jvmargs_small,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-XX:+UseSerialGC],boot_jdk_jvmargs_small,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-Xms32M],boot_jdk_jvmargs_small,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-Xmx512M],boot_jdk_jvmargs_small,[$JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-XX:TieredStopAtLevel=1],boot_jdk_jvmargs_small,[$JAVA])\n@@ -534,1 +534,1 @@\n-          BASIC_FIXUP_PATH(BUILD_JDK)\n+          UTIL_FIXUP_PATH(BUILD_JDK)\n","filename":"make\/autoconf\/boot-jdk.m4","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-      BASIC_REQUIRE_PROGS(CCACHE, ccache)\n+      UTIL_REQUIRE_PROGS(CCACHE, ccache)\n@@ -291,1 +291,1 @@\n-    BASIC_REQUIRE_PROGS(ICECC_CMD, icecc)\n+    UTIL_REQUIRE_PROGS(ICECC_CMD, icecc)\n@@ -296,1 +296,1 @@\n-    BASIC_REQUIRE_PROGS(ICECC_CREATE_ENV, icecc-create-env)\n+    UTIL_REQUIRE_PROGS(ICECC_CREATE_ENV, icecc-create-env)\n@@ -311,1 +311,1 @@\n-      BASIC_REQUIRE_PROGS(ICECC_WRAPPER, compilerwrapper)\n+      UTIL_REQUIRE_PROGS(ICECC_WRAPPER, compilerwrapper)\n@@ -445,1 +445,1 @@\n-  ADD_JVM_ARG_IF_OK([-Xms${MS_VALUE}M -Xmx${MX_VALUE}M],SJAVAC_SERVER_JAVA_FLAGS,[$SJAVAC_SERVER_JAVA])\n+  UTIL_ADD_JVM_ARG_IF_OK([-Xms${MS_VALUE}M -Xmx${MX_VALUE}M],SJAVAC_SERVER_JAVA_FLAGS,[$SJAVAC_SERVER_JAVA])\n","filename":"make\/autoconf\/build-performance.m4","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,2 +40,1 @@\n-m4_include([basics.m4])\n-m4_include([basics_windows.m4])\n+m4_include([util.m4])\n@@ -43,0 +42,1 @@\n+m4_include([basic.m4])\n@@ -54,1 +54,0 @@\n-m4_include([toolchain_windows.m4])\n","filename":"make\/autoconf\/configure.ac","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -434,1 +434,1 @@\n-BASIC_DEFUN_NAMED([FLAGS_C_COMPILER_CHECK_ARGUMENTS],\n+UTIL_DEFUN_NAMED([FLAGS_C_COMPILER_CHECK_ARGUMENTS],\n@@ -465,1 +465,1 @@\n-BASIC_DEFUN_NAMED([FLAGS_CXX_COMPILER_CHECK_ARGUMENTS],\n+UTIL_DEFUN_NAMED([FLAGS_CXX_COMPILER_CHECK_ARGUMENTS],\n@@ -496,1 +496,1 @@\n-BASIC_DEFUN_NAMED([FLAGS_COMPILER_CHECK_ARGUMENTS],\n+UTIL_DEFUN_NAMED([FLAGS_COMPILER_CHECK_ARGUMENTS],\n@@ -528,1 +528,1 @@\n-BASIC_DEFUN_NAMED([FLAGS_LINKER_CHECK_ARGUMENTS],\n+UTIL_DEFUN_NAMED([FLAGS_LINKER_CHECK_ARGUMENTS],\n","filename":"make\/autoconf\/flags.m4","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -113,1 +113,2 @@\n-  BASIC_GET_NON_MATCHING_VALUES(INVALID_VARIANTS, $JVM_VARIANTS, $VALID_JVM_VARIANTS)\n+  UTIL_GET_NON_MATCHING_VALUES(INVALID_VARIANTS, $JVM_VARIANTS, \\\n+      $VALID_JVM_VARIANTS)\n@@ -122,3 +123,5 @@\n-  BASIC_GET_NON_MATCHING_VALUES(INVALID_MULTIPLE_VARIANTS, $JVM_VARIANTS, $VALID_MULTIPLE_JVM_VARIANTS)\n-  if  test \"x$INVALID_MULTIPLE_VARIANTS\" != x && test \"x$BUILDING_MULTIPLE_JVM_VARIANTS\" = xtrue; then\n-    AC_MSG_ERROR([You cannot build multiple variants with anything else than $VALID_MULTIPLE_JVM_VARIANTS.])\n+  UTIL_GET_NON_MATCHING_VALUES(INVALID_MULTIPLE_VARIANTS, $JVM_VARIANTS, \\\n+      $VALID_MULTIPLE_JVM_VARIANTS)\n+  if  test \"x$INVALID_MULTIPLE_VARIANTS\" != x && \\\n+      test \"x$BUILDING_MULTIPLE_JVM_VARIANTS\" = xtrue; then\n+    AC_MSG_ERROR([You can only build multiple variants using these variants: '$VALID_MULTIPLE_JVM_VARIANTS'])\n@@ -294,1 +297,1 @@\n-  BASIC_SORT_LIST(VALID_JVM_FEATURES, $VALID_JVM_FEATURES)\n+  UTIL_SORT_LIST(VALID_JVM_FEATURES, $VALID_JVM_FEATURES)\n@@ -310,1 +313,1 @@\n-    BASIC_GET_NON_MATCHING_VALUES(INVALID_FEATURES, $JVM_FEATURES $DISABLED_JVM_FEATURES, $VALID_JVM_FEATURES $DEPRECATED_JVM_FEATURES)\n+    UTIL_GET_NON_MATCHING_VALUES(INVALID_FEATURES, $JVM_FEATURES $DISABLED_JVM_FEATURES, $VALID_JVM_FEATURES $DEPRECATED_JVM_FEATURES)\n@@ -318,1 +321,1 @@\n-    BASIC_GET_MATCHING_VALUES(DEPRECATED_FEATURES, $JVM_FEATURES $DISABLED_JVM_FEATURES, $DEPRECATED_JVM_FEATURES)\n+    UTIL_GET_MATCHING_VALUES(DEPRECATED_FEATURES, $JVM_FEATURES $DISABLED_JVM_FEATURES, $DEPRECATED_JVM_FEATURES)\n@@ -322,2 +325,2 @@\n-      BASIC_GET_NON_MATCHING_VALUES(JVM_FEATURES, $JVM_FEATURES, $DEPRECATED_FEATURES)\n-      BASIC_GET_NON_MATCHING_VALUES(DISABLED_JVM_FEATURES, $DISABLED_JVM_FEATURES, $DEPRECATED_FEATURES)\n+      UTIL_GET_NON_MATCHING_VALUES(JVM_FEATURES, $JVM_FEATURES, $DEPRECATED_FEATURES)\n+      UTIL_GET_NON_MATCHING_VALUES(DISABLED_JVM_FEATURES, $DISABLED_JVM_FEATURES, $DEPRECATED_FEATURES)\n@@ -557,1 +560,1 @@\n-  BASIC_DEPRECATED_ARG_WITH(jvm-interpreter)\n+  UTIL_DEPRECATED_ARG_WITH(jvm-interpreter)\n@@ -571,1 +574,1 @@\n-    BASIC_GET_NON_MATCHING_VALUES(JVM_FEATURES_FOR_VARIANT, $JVM_FEATURES_FOR_VARIANT, $DISABLED_JVM_FEATURES)\n+    UTIL_GET_NON_MATCHING_VALUES(JVM_FEATURES_FOR_VARIANT, $JVM_FEATURES_FOR_VARIANT, $DISABLED_JVM_FEATURES)\n@@ -574,1 +577,1 @@\n-    BASIC_SORT_LIST(JVM_FEATURES_FOR_VARIANT, $JVM_FEATURES_FOR_VARIANT)\n+    UTIL_SORT_LIST(JVM_FEATURES_FOR_VARIANT, $JVM_FEATURES_FOR_VARIANT)\n@@ -587,1 +590,1 @@\n-    BASIC_GET_NON_MATCHING_VALUES(INVALID_FEATURES, $JVM_FEATURES_FOR_VARIANT, $VALID_JVM_FEATURES)\n+    UTIL_GET_NON_MATCHING_VALUES(INVALID_FEATURES, $JVM_FEATURES_FOR_VARIANT, $VALID_JVM_FEATURES)\n","filename":"make\/autoconf\/hotspot.m4","additions":16,"deletions":13,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-  BASIC_DEPRECATED_ARG_WITH(custom-make-dir)\n+  UTIL_DEPRECATED_ARG_WITH(custom-make-dir)\n@@ -349,1 +349,1 @@\n-  BASIC_DEPRECATED_ARG_ENABLE(debug-symbols, debug_symbols,\n+  UTIL_DEPRECATED_ARG_ENABLE(debug-symbols, debug_symbols,\n@@ -354,1 +354,1 @@\n-  BASIC_DEPRECATED_ARG_ENABLE(zip-debug-info, zip_debug_info,\n+  UTIL_DEPRECATED_ARG_ENABLE(zip-debug-info, zip_debug_info,\n","filename":"make\/autoconf\/jdk-options.m4","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,7 +61,7 @@\n-  BASIC_DEPRECATED_ARG_WITH([milestone])\n-  BASIC_DEPRECATED_ARG_WITH([update-version])\n-  BASIC_DEPRECATED_ARG_WITH([user-release-suffix])\n-  BASIC_DEPRECATED_ARG_WITH([build-number])\n-  BASIC_DEPRECATED_ARG_WITH([version-major])\n-  BASIC_DEPRECATED_ARG_WITH([version-minor])\n-  BASIC_DEPRECATED_ARG_WITH([version-security])\n+  UTIL_DEPRECATED_ARG_WITH([milestone])\n+  UTIL_DEPRECATED_ARG_WITH([update-version])\n+  UTIL_DEPRECATED_ARG_WITH([user-release-suffix])\n+  UTIL_DEPRECATED_ARG_WITH([build-number])\n+  UTIL_DEPRECATED_ARG_WITH([version-major])\n+  UTIL_DEPRECATED_ARG_WITH([version-minor])\n+  UTIL_DEPRECATED_ARG_WITH([version-security])\n","filename":"make\/autoconf\/jdk-version.m4","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-  BASIC_FIXUP_PATH([GRAALUNIT_LIB])\n+  UTIL_FIXUP_PATH([GRAALUNIT_LIB])\n@@ -57,1 +57,0 @@\n-\n","filename":"make\/autoconf\/lib-tests.m4","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -190,3 +190,3 @@\n-    BASIC_DEPRECATED_ARG_WITH([dxsdk])\n-    BASIC_DEPRECATED_ARG_WITH([dxsdk-lib])\n-    BASIC_DEPRECATED_ARG_WITH([dxsdk-include])\n+    UTIL_DEPRECATED_ARG_WITH([dxsdk])\n+    UTIL_DEPRECATED_ARG_WITH([dxsdk-lib])\n+    UTIL_DEPRECATED_ARG_WITH([dxsdk-include])\n@@ -217,1 +217,1 @@\n-      BASIC_FIXUP_PATH([STLPORT_LIB])\n+      UTIL_FIXUP_PATH([STLPORT_LIB])\n","filename":"make\/autoconf\/libraries.m4","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-      BASIC_FIXUP_PATH([IMPORT_MODULES_TOPDIR])\n+      UTIL_FIXUP_PATH([IMPORT_MODULES_TOPDIR])\n","filename":"make\/autoconf\/source-dirs.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+m4_include([toolchain_windows.m4])\n@@ -94,1 +95,1 @@\n-BASIC_DEFUN_NAMED([TOOLCHAIN_CHECK_COMPILER_VERSION],\n+UTIL_DEFUN_NAMED([TOOLCHAIN_CHECK_COMPILER_VERSION],\n@@ -145,1 +146,1 @@\n-BASIC_DEFUN_NAMED([TOOLCHAIN_CHECK_LINKER_VERSION],\n+UTIL_DEFUN_NAMED([TOOLCHAIN_CHECK_LINKER_VERSION],\n@@ -583,1 +584,1 @@\n-  BASIC_FIXUP_EXECUTABLE($1)\n+  UTIL_FIXUP_EXECUTABLE($1)\n@@ -588,1 +589,1 @@\n-  BASIC_REMOVE_SYMBOLIC_LINKS(SYMLINK_ORIGINAL)\n+  UTIL_REMOVE_SYMBOLIC_LINKS(SYMLINK_ORIGINAL)\n@@ -712,1 +713,1 @@\n-  BASIC_FIXUP_EXECUTABLE(CPP)\n+  UTIL_FIXUP_EXECUTABLE(CPP)\n@@ -714,1 +715,1 @@\n-  BASIC_FIXUP_EXECUTABLE(CXXCPP)\n+  UTIL_FIXUP_EXECUTABLE(CXXCPP)\n@@ -724,1 +725,1 @@\n-    BASIC_FIXUP_EXECUTABLE(LD)\n+    UTIL_FIXUP_EXECUTABLE(LD)\n@@ -742,2 +743,2 @@\n-    BASIC_CHECK_TOOLS([LD_JAOTC], ld)\n-    BASIC_FIXUP_EXECUTABLE(LD_JAOTC)\n+    UTIL_CHECK_TOOLS([LD_JAOTC], ld)\n+    UTIL_FIXUP_EXECUTABLE(LD_JAOTC)\n@@ -765,2 +766,2 @@\n-    BASIC_PATH_PROGS(AS, as)\n-    BASIC_FIXUP_EXECUTABLE(AS)\n+    UTIL_PATH_PROGS(AS, as)\n+    UTIL_FIXUP_EXECUTABLE(AS)\n@@ -783,1 +784,1 @@\n-    BASIC_CHECK_TOOLS(AR, ar gcc-ar)\n+    UTIL_CHECK_TOOLS(AR, ar gcc-ar)\n@@ -785,1 +786,1 @@\n-    BASIC_CHECK_TOOLS(AR, ar)\n+    UTIL_CHECK_TOOLS(AR, ar)\n@@ -787,1 +788,1 @@\n-  BASIC_FIXUP_EXECUTABLE(AR)\n+  UTIL_FIXUP_EXECUTABLE(AR)\n@@ -796,6 +797,6 @@\n-    BASIC_PATH_PROGS(LIPO, lipo)\n-    BASIC_FIXUP_EXECUTABLE(LIPO)\n-    BASIC_REQUIRE_PROGS(OTOOL, otool)\n-    BASIC_FIXUP_EXECUTABLE(OTOOL)\n-    BASIC_REQUIRE_PROGS(INSTALL_NAME_TOOL, install_name_tool)\n-    BASIC_FIXUP_EXECUTABLE(INSTALL_NAME_TOOL)\n+    UTIL_PATH_PROGS(LIPO, lipo)\n+    UTIL_FIXUP_EXECUTABLE(LIPO)\n+    UTIL_REQUIRE_PROGS(OTOOL, otool)\n+    UTIL_FIXUP_EXECUTABLE(OTOOL)\n+    UTIL_REQUIRE_PROGS(INSTALL_NAME_TOOL, install_name_tool)\n+    UTIL_FIXUP_EXECUTABLE(INSTALL_NAME_TOOL)\n@@ -806,1 +807,1 @@\n-    BASIC_FIXUP_EXECUTABLE(MT)\n+    UTIL_FIXUP_EXECUTABLE(MT)\n@@ -809,1 +810,1 @@\n-    BASIC_FIXUP_EXECUTABLE(RC)\n+    UTIL_FIXUP_EXECUTABLE(RC)\n@@ -811,1 +812,1 @@\n-    BASIC_FIXUP_EXECUTABLE(DUMPBIN)\n+    UTIL_FIXUP_EXECUTABLE(DUMPBIN)\n@@ -823,6 +824,6 @@\n-    BASIC_PATH_PROGS(STRIP, strip)\n-    BASIC_FIXUP_EXECUTABLE(STRIP)\n-    BASIC_PATH_PROGS(NM, nm)\n-    BASIC_FIXUP_EXECUTABLE(NM)\n-    BASIC_PATH_PROGS(GNM, gnm)\n-    BASIC_FIXUP_EXECUTABLE(GNM)\n+    UTIL_PATH_PROGS(STRIP, strip)\n+    UTIL_FIXUP_EXECUTABLE(STRIP)\n+    UTIL_PATH_PROGS(NM, nm)\n+    UTIL_FIXUP_EXECUTABLE(NM)\n+    UTIL_PATH_PROGS(GNM, gnm)\n+    UTIL_FIXUP_EXECUTABLE(GNM)\n@@ -831,2 +832,2 @@\n-    BASIC_CHECK_TOOLS(STRIP, strip)\n-    BASIC_FIXUP_EXECUTABLE(STRIP)\n+    UTIL_CHECK_TOOLS(STRIP, strip)\n+    UTIL_FIXUP_EXECUTABLE(STRIP)\n@@ -834,1 +835,1 @@\n-      BASIC_CHECK_TOOLS(NM, nm gcc-nm)\n+      UTIL_CHECK_TOOLS(NM, nm gcc-nm)\n@@ -836,1 +837,1 @@\n-      BASIC_CHECK_TOOLS(NM, nm)\n+      UTIL_CHECK_TOOLS(NM, nm)\n@@ -838,1 +839,1 @@\n-    BASIC_FIXUP_EXECUTABLE(NM)\n+    UTIL_FIXUP_EXECUTABLE(NM)\n@@ -846,1 +847,1 @@\n-    BASIC_CHECK_TOOLS(OBJCOPY, [gobjcopy objcopy])\n+    UTIL_CHECK_TOOLS(OBJCOPY, [gobjcopy objcopy])\n@@ -849,1 +850,1 @@\n-      BASIC_FIXUP_EXECUTABLE(OBJCOPY)\n+      UTIL_FIXUP_EXECUTABLE(OBJCOPY)\n@@ -890,1 +891,1 @@\n-  BASIC_CHECK_TOOLS(OBJDUMP, [gobjdump objdump])\n+  UTIL_CHECK_TOOLS(OBJDUMP, [gobjdump objdump])\n@@ -892,1 +893,1 @@\n-    # Only used for compare.sh; we can live without it. BASIC_FIXUP_EXECUTABLE\n+    # Only used for compare.sh; we can live without it. UTIL_FIXUP_EXECUTABLE\n@@ -894,1 +895,1 @@\n-    BASIC_FIXUP_EXECUTABLE(OBJDUMP)\n+    UTIL_FIXUP_EXECUTABLE(OBJDUMP)\n@@ -899,3 +900,3 @@\n-      BASIC_CHECK_TOOLS(CXXFILT, [c++filt])\n-      BASIC_CHECK_NONEMPTY(CXXFILT)\n-      BASIC_FIXUP_EXECUTABLE(CXXFILT)\n+      UTIL_CHECK_TOOLS(CXXFILT, [c++filt])\n+      UTIL_CHECK_NONEMPTY(CXXFILT)\n+      UTIL_FIXUP_EXECUTABLE(CXXFILT)\n@@ -929,1 +930,1 @@\n-        BASIC_FIXUP_PATH([with_build_devkit])\n+        UTIL_FIXUP_PATH([with_build_devkit])\n@@ -987,2 +988,2 @@\n-      BASIC_REQUIRE_PROGS(BUILD_CC, [clang cl cc gcc])\n-      BASIC_REQUIRE_PROGS(BUILD_CXX, [clang++ cl CC g++])\n+      UTIL_REQUIRE_PROGS(BUILD_CC, [clang cl cc gcc])\n+      UTIL_REQUIRE_PROGS(BUILD_CXX, [clang++ cl CC g++])\n@@ -990,2 +991,2 @@\n-      BASIC_REQUIRE_PROGS(BUILD_CC, [cl cc gcc])\n-      BASIC_REQUIRE_PROGS(BUILD_CXX, [cl CC g++])\n+      UTIL_REQUIRE_PROGS(BUILD_CC, [cl cc gcc])\n+      UTIL_REQUIRE_PROGS(BUILD_CXX, [cl CC g++])\n@@ -993,10 +994,10 @@\n-    BASIC_FIXUP_EXECUTABLE(BUILD_CC)\n-    BASIC_FIXUP_EXECUTABLE(BUILD_CXX)\n-    BASIC_PATH_PROGS(BUILD_NM, nm gcc-nm)\n-    BASIC_FIXUP_EXECUTABLE(BUILD_NM)\n-    BASIC_PATH_PROGS(BUILD_AR, ar gcc-ar)\n-    BASIC_FIXUP_EXECUTABLE(BUILD_AR)\n-    BASIC_PATH_PROGS(BUILD_OBJCOPY, objcopy)\n-    BASIC_FIXUP_EXECUTABLE(BUILD_OBJCOPY)\n-    BASIC_PATH_PROGS(BUILD_STRIP, strip)\n-    BASIC_FIXUP_EXECUTABLE(BUILD_STRIP)\n+    UTIL_FIXUP_EXECUTABLE(BUILD_CC)\n+    UTIL_FIXUP_EXECUTABLE(BUILD_CXX)\n+    UTIL_PATH_PROGS(BUILD_NM, nm gcc-nm)\n+    UTIL_FIXUP_EXECUTABLE(BUILD_NM)\n+    UTIL_PATH_PROGS(BUILD_AR, ar gcc-ar)\n+    UTIL_FIXUP_EXECUTABLE(BUILD_AR)\n+    UTIL_PATH_PROGS(BUILD_OBJCOPY, objcopy)\n+    UTIL_FIXUP_EXECUTABLE(BUILD_OBJCOPY)\n+    UTIL_PATH_PROGS(BUILD_STRIP, strip)\n+    UTIL_FIXUP_EXECUTABLE(BUILD_STRIP)\n@@ -1010,1 +1011,1 @@\n-      BASIC_FIXUP_EXECUTABLE(BUILD_LD)\n+      UTIL_FIXUP_EXECUTABLE(BUILD_LD)\n@@ -1135,1 +1136,1 @@\n-    BASIC_FIXUP_PATH([JT_HOME])\n+    UTIL_FIXUP_PATH([JT_HOME])\n@@ -1175,1 +1176,1 @@\n-      BASIC_PATH_PROGS(JTREGEXE, jtreg)\n+      UTIL_PATH_PROGS(JTREGEXE, jtreg)\n@@ -1201,2 +1202,2 @@\n-  BASIC_FIXUP_EXECUTABLE(JTREGEXE)\n-  BASIC_FIXUP_PATH(JT_HOME)\n+  UTIL_FIXUP_EXECUTABLE(JTREGEXE)\n+  UTIL_FIXUP_PATH(JT_HOME)\n","filename":"make\/autoconf\/toolchain.m4","additions":63,"deletions":62,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(VS_BASE)\n+    UTIL_REWRITE_AS_UNIX_PATH(VS_BASE)\n@@ -167,1 +167,1 @@\n-    BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(WIN_SDK_BASE)\n+    UTIL_REWRITE_AS_UNIX_PATH(WIN_SDK_BASE)\n@@ -322,1 +322,1 @@\n-      BASIC_WINDOWS_REWRITE_AS_WINDOWS_MIXED_PATH([ipath])\n+      UTIL_REWRITE_AS_WINDOWS_MIXED_PATH([ipath])\n@@ -329,1 +329,1 @@\n-      BASIC_WINDOWS_REWRITE_AS_WINDOWS_MIXED_PATH([libpath])\n+      UTIL_REWRITE_AS_WINDOWS_MIXED_PATH([libpath])\n@@ -399,1 +399,1 @@\n-      BASIC_FIXUP_EXECUTABLE(VS_ENV_CMD)\n+      UTIL_FIXUP_EXECUTABLE(VS_ENV_CMD)\n@@ -411,1 +411,1 @@\n-      BASIC_WINDOWS_REWRITE_AS_WINDOWS_MIXED_PATH([WINPATH_VS_ENV_CMD])\n+      UTIL_REWRITE_AS_WINDOWS_MIXED_PATH([WINPATH_VS_ENV_CMD])\n@@ -413,1 +413,1 @@\n-      BASIC_WINDOWS_REWRITE_AS_WINDOWS_MIXED_PATH([WINPATH_BASH])\n+      UTIL_REWRITE_AS_WINDOWS_MIXED_PATH([WINPATH_BASH])\n@@ -574,1 +574,1 @@\n-      BASIC_FIXUP_PATH(CYGWIN_VC_INSTALL_DIR)\n+      UTIL_FIXUP_PATH(CYGWIN_VC_INSTALL_DIR)\n@@ -580,1 +580,1 @@\n-        BASIC_FIXUP_PATH(CYGWIN_VC_TOOLS_REDIST_DIR)\n+        UTIL_FIXUP_PATH(CYGWIN_VC_TOOLS_REDIST_DIR)\n@@ -603,1 +603,1 @@\n-    BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(CYGWIN_SYSTEMROOT)\n+    UTIL_REWRITE_AS_UNIX_PATH(CYGWIN_SYSTEMROOT)\n@@ -613,1 +613,1 @@\n-      BASIC_WINDOWS_REWRITE_AS_UNIX_PATH(CYGWIN_VS_TOOLS_DIR)\n+      UTIL_REWRITE_AS_UNIX_PATH(CYGWIN_VS_TOOLS_DIR)\n@@ -710,1 +710,1 @@\n-        BASIC_FIXUP_PATH([UCRT_DLL_DIR])\n+        UTIL_FIXUP_PATH([UCRT_DLL_DIR])\n@@ -717,1 +717,1 @@\n-      BASIC_FIXUP_PATH([CYGWIN_WINDOWSSDKDIR])\n+      UTIL_FIXUP_PATH([CYGWIN_WINDOWSSDKDIR])\n@@ -764,1 +764,1 @@\n-      BASIC_WINDOWS_REWRITE_AS_UNIX_PATH([testpath])\n+      UTIL_REWRITE_AS_UNIX_PATH([testpath])\n@@ -766,1 +766,1 @@\n-        BASIC_FIXUP_PATH([ipath])\n+        UTIL_FIXUP_PATH([ipath])\n@@ -780,1 +780,1 @@\n-      BASIC_WINDOWS_REWRITE_AS_UNIX_PATH([testpath])\n+      UTIL_REWRITE_AS_UNIX_PATH([testpath])\n@@ -782,1 +782,1 @@\n-        BASIC_FIXUP_PATH([libpath])\n+        UTIL_FIXUP_PATH([libpath])\n","filename":"make\/autoconf\/toolchain_windows.m4","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -0,0 +1,378 @@\n+#\n+# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+m4_include([util_paths.m4])\n+m4_include([util_windows.m4])\n+\n+###############################################################################\n+# Create a function\/macro that takes a series of named arguments. The call is\n+# similar to AC_DEFUN, but the setup of the function looks like this:\n+# UTIL_DEFUN_NAMED([MYFUNC], [FOO *BAR], [$@], [\n+# ... do something\n+#   AC_MSG_NOTICE([Value of BAR is ARG_BAR])\n+# ])\n+# A star (*) in front of a named argument means that it is required and it's\n+# presence will be verified. To pass e.g. the first value as a normal indexed\n+# argument, use [m4_shift($@)] as the third argument instead of [$@]. These\n+# arguments are referenced in the function by their name prefixed by ARG_, e.g.\n+# \"ARG_FOO\".\n+#\n+# The generated function can be called like this:\n+# MYFUNC(FOO: [foo-val],\n+#     BAR: [\n+#         $ECHO hello world\n+#     ])\n+# Note that the argument value must start on the same line as the argument name.\n+#\n+# Argument 1: Name of the function to define\n+# Argument 2: List of legal named arguments, with a * prefix for required arguments\n+# Argument 3: Argument array to treat as named, typically $@\n+# Argument 4: The main function body\n+AC_DEFUN([UTIL_DEFUN_NAMED],\n+[\n+  AC_DEFUN($1, [\n+    m4_foreach(arg, m4_split($2), [\n+      m4_if(m4_bregexp(arg, [^\\*]), -1,\n+        [\n+          m4_set_add(legal_named_args, arg)\n+        ],\n+        [\n+          m4_set_add(legal_named_args, m4_substr(arg, 1))\n+          m4_set_add(required_named_args, m4_substr(arg, 1))\n+        ]\n+      )\n+    ])\n+\n+    m4_foreach([arg], [$3], [\n+      m4_define(arg_name, m4_substr(arg, 0, m4_bregexp(arg, [: ])))\n+      m4_set_contains(legal_named_args, arg_name, [],[AC_MSG_ERROR([Internal error: arg_name is not a valid named argument to [$1]. Valid arguments are 'm4_set_contents(legal_named_args, [ ])'.])])\n+      m4_set_remove(required_named_args, arg_name)\n+      m4_set_remove(legal_named_args, arg_name)\n+      m4_pushdef([ARG_][]arg_name, m4_substr(arg, m4_incr(m4_incr(m4_bregexp(arg, [: ])))))\n+      m4_set_add(defined_args, arg_name)\n+      m4_undefine([arg_name])\n+    ])\n+    m4_set_empty(required_named_args, [], [\n+      AC_MSG_ERROR([Internal error: Required named arguments are missing for [$1]. Missing arguments: 'm4_set_contents(required_named_args, [ ])'])\n+    ])\n+    m4_foreach([arg], m4_indir([m4_dquote]m4_set_listc([legal_named_args])), [\n+      m4_pushdef([ARG_][]arg, [])\n+      m4_set_add(defined_args, arg)\n+    ])\n+    m4_set_delete(legal_named_args)\n+    m4_set_delete(required_named_args)\n+\n+    # Execute function body\n+    $4\n+\n+    m4_foreach([arg], m4_indir([m4_dquote]m4_set_listc([defined_args])), [\n+      m4_popdef([ARG_][]arg)\n+    ])\n+\n+    m4_set_delete(defined_args)\n+  ])\n+])\n+\n+###############################################################################\n+# Check if a list of space-separated words are selected only from a list of\n+# space-separated legal words. Typical use is to see if a user-specified\n+# set of words is selected from a set of legal words.\n+#\n+# Sets the specified variable to list of non-matching (offending) words, or to\n+# the empty string if all words are matching the legal set.\n+#\n+# $1: result variable name\n+# $2: list of values to check\n+# $3: list of legal values\n+AC_DEFUN([UTIL_GET_NON_MATCHING_VALUES],\n+[\n+  # grep filter function inspired by a comment to http:\/\/stackoverflow.com\/a\/1617326\n+  # Notice that the original variant fails on SLES 10 and 11\n+  # Some grep versions (at least bsd) behaves strangely on the base case with\n+  # no legal_values, so make it explicit.\n+  values_to_check=`$ECHO $2 | $TR ' ' '\\n'`\n+  legal_values=`$ECHO $3 | $TR ' ' '\\n'`\n+  if test -z \"$legal_values\"; then\n+    $1=\"$2\"\n+  else\n+    result=`$GREP -Fvx \"$legal_values\" <<< \"$values_to_check\" | $GREP -v '^$'`\n+    $1=${result\/\/$'\\n'\/ }\n+  fi\n+])\n+\n+###############################################################################\n+# Check if a list of space-separated words contains any word(s) from a list of\n+# space-separated illegal words. Typical use is to see if a user-specified\n+# set of words contains any from a set of illegal words.\n+#\n+# Sets the specified variable to list of matching illegal words, or to\n+# the empty string if no words are matching the illegal set.\n+#\n+# $1: result variable name\n+# $2: list of values to check\n+# $3: list of illegal values\n+AC_DEFUN([UTIL_GET_MATCHING_VALUES],\n+[\n+  # grep filter function inspired by a comment to http:\/\/stackoverflow.com\/a\/1617326\n+  # Notice that the original variant fails on SLES 10 and 11\n+  # Some grep versions (at least bsd) behaves strangely on the base case with\n+  # no legal_values, so make it explicit.\n+  values_to_check=`$ECHO $2 | $TR ' ' '\\n'`\n+  illegal_values=`$ECHO $3 | $TR ' ' '\\n'`\n+  if test -z \"$illegal_values\"; then\n+    $1=\"\"\n+  else\n+    result=`$GREP -Fx \"$illegal_values\" <<< \"$values_to_check\" | $GREP -v '^$'`\n+    $1=${result\/\/$'\\n'\/ }\n+  fi\n+])\n+\n+###############################################################################\n+# Sort a space-separated list, and remove duplicates.\n+#\n+# Sets the specified variable to the resulting list.\n+#\n+# $1: result variable name\n+# $2: list of values to sort\n+AC_DEFUN([UTIL_SORT_LIST],\n+[\n+  values_to_sort=`$ECHO $2 | $TR ' ' '\\n'`\n+  result=`$SORT -u <<< \"$values_to_sort\" | $GREP -v '^$'`\n+  $1=${result\/\/$'\\n'\/ }\n+])\n+\n+###############################################################################\n+# Test if $1 is a valid argument to $3 (often is $JAVA passed as $3)\n+# If so, then append $1 to $2 \\\n+# Also set JVM_ARG_OK to true\/false depending on outcome.\n+AC_DEFUN([UTIL_ADD_JVM_ARG_IF_OK],\n+[\n+  $ECHO \"Check if jvm arg is ok: $1\" >&AS_MESSAGE_LOG_FD\n+  $ECHO \"Command: $3 $1 -version\" >&AS_MESSAGE_LOG_FD\n+  OUTPUT=`$3 $1 $USER_BOOT_JDK_OPTIONS -version 2>&1`\n+  FOUND_WARN=`$ECHO \"$OUTPUT\" | $GREP -i warn`\n+  FOUND_VERSION=`$ECHO $OUTPUT | $GREP \" version \\\"\"`\n+  if test \"x$FOUND_VERSION\" != x && test \"x$FOUND_WARN\" = x; then\n+    $2=\"[$]$2 $1\"\n+    JVM_ARG_OK=true\n+  else\n+    $ECHO \"Arg failed:\" >&AS_MESSAGE_LOG_FD\n+    $ECHO \"$OUTPUT\" >&AS_MESSAGE_LOG_FD\n+    JVM_ARG_OK=false\n+  fi\n+])\n+\n+###############################################################################\n+# Register a --with argument but mark it as deprecated\n+# $1: The name of the with argument to deprecate, not including --with-\n+AC_DEFUN([UTIL_DEPRECATED_ARG_WITH],\n+[\n+  AC_ARG_WITH($1, [AS_HELP_STRING([--with-$1],\n+      [Deprecated. Option is kept for backwards compatibility and is ignored])],\n+      [AC_MSG_WARN([Option --with-$1 is deprecated and will be ignored.])])\n+])\n+\n+###############################################################################\n+# Register a --enable argument but mark it as deprecated\n+# $1: The name of the with argument to deprecate, not including --enable-\n+# $2: The name of the argument to deprecate, in shell variable style (i.e. with _ instead of -)\n+# $3: Messages to user.\n+AC_DEFUN([UTIL_DEPRECATED_ARG_ENABLE],\n+[\n+  AC_ARG_ENABLE($1, [AS_HELP_STRING([--enable-$1],\n+      [Deprecated. Option is kept for backwards compatibility and is ignored])])\n+  if test \"x$enable_$2\" != x; then\n+    AC_MSG_WARN([Option --enable-$1 is deprecated and will be ignored.])\n+\n+    if test \"x$3\" != x; then\n+      AC_MSG_WARN([$3])\n+    fi\n+\n+  fi\n+])\n+\n+###############################################################################\n+# Register an --enable-* argument as an alias for another argument.\n+# $1: The name of the enable argument for the new alias, not including --enable-\n+# $2: The full name of the argument of which to make this an alias, including\n+#     --enable- or --with-.\n+AC_DEFUN([UTIL_ALIASED_ARG_ENABLE],\n+[\n+  AC_ARG_ENABLE($1, [AS_HELP_STRING([--enable-$1], [alias for $2])], [\n+    # Use m4 to strip initial -- from target ($2), convert - to _, prefix enable_\n+    # to new alias name, and create a shell variable assignment,\n+    # e.g.: enable_old_style=\"$enable_new_alias\"\n+    translit(patsubst($2, --), -, _)=\"$[enable_]translit($1, -, _)\"\n+  ])\n+])\n+\n+###############################################################################\n+# Test that variable $1 denoting a program is not empty. If empty, exit with an error.\n+# $1: variable to check\n+AC_DEFUN([UTIL_CHECK_NONEMPTY],\n+[\n+  if test \"x[$]$1\" = x; then\n+    AC_MSG_ERROR([Could not find required tool for $1])\n+  fi\n+])\n+\n+###############################################################################\n+# Setup a tool for the given variable. If correctly specified by the user,\n+# use that value, otherwise search for the tool using the supplied code snippet.\n+# $1: variable to set\n+# $2: code snippet to call to look for the tool\n+# $3: code snippet to call if variable was used to find tool\n+AC_DEFUN([UTIL_SETUP_TOOL],\n+[\n+  # Publish this variable in the help.\n+  AC_ARG_VAR($1, [Override default value for $1])\n+\n+  if [[ -z \"${$1+x}\" ]]; then\n+    # The variable is not set by user, try to locate tool using the code snippet\n+    $2\n+  else\n+    # The variable is set, but is it from the command line or the environment?\n+\n+    # Try to remove the string !$1! from our list.\n+    try_remove_var=${CONFIGURE_OVERRIDDEN_VARIABLES\/\/!$1!\/}\n+    if test \"x$try_remove_var\" = \"x$CONFIGURE_OVERRIDDEN_VARIABLES\"; then\n+      # If it failed, the variable was not from the command line. Ignore it,\n+      # but warn the user (except for BASH, which is always set by the calling BASH).\n+      if test \"x$1\" != xBASH; then\n+        AC_MSG_WARN([Ignoring value of $1 from the environment. Use command line variables instead.])\n+      fi\n+      # Try to locate tool using the code snippet\n+      $2\n+    else\n+      # If it succeeded, then it was overridden by the user. We will use it\n+      # for the tool.\n+\n+      # First remove it from the list of overridden variables, so we can test\n+      # for unknown variables in the end.\n+      CONFIGURE_OVERRIDDEN_VARIABLES=\"$try_remove_var\"\n+\n+      tool_override=[$]$1\n+      AC_MSG_NOTICE([User supplied override $1=\"$tool_override\"])\n+\n+      # Check if we try to supply an empty value\n+      if test \"x$tool_override\" = x; then\n+        AC_MSG_CHECKING([for $1])\n+        AC_MSG_RESULT([disabled])\n+      else\n+        # Split up override in command part and argument part\n+        tool_and_args=($tool_override)\n+        [ tool_command=${tool_and_args[0]} ]\n+        [ unset 'tool_and_args[0]' ]\n+        [ tool_args=${tool_and_args[@]} ]\n+\n+        # Check if the provided tool contains a complete path.\n+        tool_basename=\"${tool_command##*\/}\"\n+        if test \"x$tool_basename\" = \"x$tool_command\"; then\n+          # A command without a complete path is provided, search $PATH.\n+          AC_MSG_NOTICE([Will search for user supplied tool \"$tool_basename\"])\n+          AC_PATH_PROG($1, $tool_basename)\n+          if test \"x[$]$1\" = x; then\n+            AC_MSG_ERROR([User supplied tool $1=\"$tool_basename\" could not be found])\n+          fi\n+        else\n+          # Otherwise we believe it is a complete path. Use it as it is.\n+          AC_MSG_NOTICE([Will use user supplied tool \"$tool_command\"])\n+          AC_MSG_CHECKING([for $tool_command])\n+          if test ! -x \"$tool_command\"; then\n+            AC_MSG_RESULT([not found])\n+            AC_MSG_ERROR([User supplied tool $1=\"$tool_command\" does not exist or is not executable])\n+          fi\n+           $1=\"$tool_command\"\n+          AC_MSG_RESULT([found])\n+        fi\n+        if test \"x$tool_args\" != x; then\n+          # If we got arguments, re-append them to the command after the fixup.\n+          $1=\"[$]$1 $tool_args\"\n+        fi\n+      fi\n+    fi\n+    $3\n+  fi\n+])\n+\n+###############################################################################\n+# Call UTIL_SETUP_TOOL with AC_PATH_PROGS to locate the tool\n+# $1: variable to set\n+# $2: executable name (or list of names) to look for\n+# $3: [path]\n+AC_DEFUN([UTIL_PATH_PROGS],\n+[\n+  UTIL_SETUP_TOOL($1, [AC_PATH_PROGS($1, $2, , $3)])\n+])\n+\n+###############################################################################\n+# Call UTIL_SETUP_TOOL with AC_CHECK_TOOLS to locate the tool\n+# $1: variable to set\n+# $2: executable name (or list of names) to look for\n+AC_DEFUN([UTIL_CHECK_TOOLS],\n+[\n+  UTIL_SETUP_TOOL($1, [AC_CHECK_TOOLS($1, $2)])\n+])\n+\n+###############################################################################\n+# Like UTIL_PATH_PROGS but fails if no tool was found.\n+# $1: variable to set\n+# $2: executable name (or list of names) to look for\n+# $3: [path]\n+AC_DEFUN([UTIL_REQUIRE_PROGS],\n+[\n+  UTIL_PATH_PROGS($1, $2, , $3)\n+  UTIL_CHECK_NONEMPTY($1)\n+])\n+\n+###############################################################################\n+# Like UTIL_SETUP_TOOL but fails if no tool was found.\n+# $1: variable to set\n+# $2: autoconf macro to call to look for the special tool\n+AC_DEFUN([UTIL_REQUIRE_SPECIAL],\n+[\n+  UTIL_SETUP_TOOL($1, [$2])\n+  UTIL_CHECK_NONEMPTY($1)\n+])\n+\n+###############################################################################\n+# Like UTIL_REQUIRE_PROGS but also allows for bash built-ins\n+# $1: variable to set\n+# $2: executable name (or list of names) to look for\n+# $3: [path]\n+AC_DEFUN([UTIL_REQUIRE_BUILTIN_PROGS],\n+[\n+  UTIL_SETUP_TOOL($1, [AC_PATH_PROGS($1, $2, , $3)])\n+  if test \"x[$]$1\" = x; then\n+    AC_MSG_NOTICE([Required tool $2 not found in PATH, checking built-in])\n+    if help $2 > \/dev\/null 2>&1; then\n+      AC_MSG_NOTICE([Found $2 as shell built-in. Using it])\n+      $1=\"$2\"\n+    else\n+      AC_MSG_ERROR([Required tool $2 also not found as built-in.])\n+    fi\n+  fi\n+  UTIL_CHECK_NONEMPTY($1)\n+])\n","filename":"make\/autoconf\/util.m4","additions":378,"deletions":0,"binary":false,"changes":378,"status":"added"},{"patch":"@@ -0,0 +1,228 @@\n+#\n+# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Appends a string to a path variable, only adding the : when needed.\n+AC_DEFUN([UTIL_APPEND_TO_PATH],\n+[\n+  if test \"x$2\" != x; then\n+    if test \"x[$]$1\" = x; then\n+      $1=\"$2\"\n+    else\n+      $1=\"[$]$1:$2\"\n+    fi\n+  fi\n+])\n+\n+# Prepends a string to a path variable, only adding the : when needed.\n+AC_DEFUN([UTIL_PREPEND_TO_PATH],\n+[\n+  if test \"x$2\" != x; then\n+    if test \"x[$]$1\" = x; then\n+      $1=\"$2\"\n+    else\n+      $1=\"$2:[$]$1\"\n+    fi\n+  fi\n+])\n+\n+################################################################################\n+# This will make a path absolute. Assumes it's already a unix path. Also\n+# resolves ~ to homedir.\n+AC_DEFUN([UTIL_ABSOLUTE_PATH],\n+[\n+  if test \"x[$]$1\" != x; then\n+    new_path=\"[$]$1\"\n+\n+    # Use eval to expand a potential ~. This technique does not work if there\n+    # are spaces in the path (which is valid at this point on Windows), so only\n+    # try to apply it if there is an actual ~ first in the path.\n+    if [ [[ \"$new_path\" = \"~\"* ]] ]; then\n+      eval new_path=\"$new_path\"\n+      if test ! -f \"$new_path\" && test ! -d \"$new_path\"; then\n+        AC_MSG_ERROR([The new_path of $1, which resolves as \"$new_path\", is not found.])\n+      fi\n+    fi\n+\n+    if test -d \"$new_path\"; then\n+      $1=\"`cd \"$new_path\"; $THEPWDCMD -L`\"\n+    else\n+      dir=\"`$DIRNAME \"$new_path\"`\"\n+      base=\"`$BASENAME \"$new_path\"`\"\n+      $1=\"`cd \"$dir\"; $THEPWDCMD -L`\/$base\"\n+    fi\n+  fi\n+])\n+\n+###############################################################################\n+# This will make sure the given variable points to a full and proper\n+# path. This means:\n+# 1) There will be no spaces in the path. On unix platforms,\n+#    spaces in the path will result in an error. On Windows,\n+#    the path will be rewritten using short-style to be space-free.\n+# 2) The path will be absolute, and it will be in unix-style (on\n+#     cygwin).\n+# $1: The name of the variable to fix\n+AC_DEFUN([UTIL_FIXUP_PATH],\n+[\n+  # Only process if variable expands to non-empty\n+  if test \"x[$]$1\" != x; then\n+    if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n+      UTIL_FIXUP_PATH_CYGWIN($1)\n+    elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n+      UTIL_FIXUP_PATH_MSYS($1)\n+    else\n+      # We're on a unix platform. Hooray! :)\n+      path=\"[$]$1\"\n+      has_space=`$ECHO \"$path\" | $GREP \" \"`\n+      if test \"x$has_space\" != x; then\n+        AC_MSG_NOTICE([The path of $1, which resolves as \"$path\", is invalid.])\n+        AC_MSG_ERROR([Spaces are not allowed in this path.])\n+      fi\n+\n+      UTIL_ABSOLUTE_PATH(path)\n+      $1=\"$path\"\n+    fi\n+  fi\n+])\n+\n+###############################################################################\n+# This will make sure the given variable points to a executable\n+# with a full and proper path. This means:\n+# 1) There will be no spaces in the path. On unix platforms,\n+#    spaces in the path will result in an error. On Windows,\n+#    the path will be rewritten using short-style to be space-free.\n+# 2) The path will be absolute, and it will be in unix-style (on\n+#     cygwin).\n+# Any arguments given to the executable is preserved.\n+# If the input variable does not have a directory specification, then\n+# it need to be in the PATH.\n+# $1: The name of the variable to fix\n+AC_DEFUN([UTIL_FIXUP_EXECUTABLE],\n+[\n+  # Only process if variable expands to non-empty\n+\n+  if test \"x[$]$1\" != x; then\n+    if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n+      UTIL_FIXUP_EXECUTABLE_CYGWIN($1)\n+    elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n+      UTIL_FIXUP_EXECUTABLE_MSYS($1)\n+    else\n+      # We're on a unix platform. Hooray! :)\n+      # First separate the path from the arguments. This will split at the first\n+      # space.\n+      complete=\"[$]$1\"\n+      path=\"${complete%% *}\"\n+      tmp=\"$complete EOL\"\n+      arguments=\"${tmp#* }\"\n+\n+      # Cannot rely on the command \"which\" here since it doesn't always work.\n+      is_absolute_path=`$ECHO \"$path\" | $GREP ^\/`\n+      if test -z \"$is_absolute_path\"; then\n+        # Path to executable is not absolute. Find it.\n+        IFS_save=\"$IFS\"\n+        IFS=:\n+        for p in $PATH; do\n+          if test -f \"$p\/$path\" && test -x \"$p\/$path\"; then\n+            new_path=\"$p\/$path\"\n+            break\n+          fi\n+        done\n+        IFS=\"$IFS_save\"\n+      else\n+        # This is an absolute path, we can use it without further modifications.\n+        new_path=\"$path\"\n+      fi\n+\n+      if test \"x$new_path\" = x; then\n+        AC_MSG_NOTICE([The path of $1, which resolves as \"$complete\", is not found.])\n+        has_space=`$ECHO \"$complete\" | $GREP \" \"`\n+        if test \"x$has_space\" != x; then\n+          AC_MSG_NOTICE([This might be caused by spaces in the path, which is not allowed.])\n+        fi\n+        AC_MSG_ERROR([Cannot locate the the path of $1])\n+      fi\n+    fi\n+\n+    # Now join together the path and the arguments once again\n+    if test \"x$arguments\" != xEOL; then\n+      new_complete=\"$new_path ${arguments% *}\"\n+    else\n+      new_complete=\"$new_path\"\n+    fi\n+\n+    if test \"x$complete\" != \"x$new_complete\"; then\n+      $1=\"$new_complete\"\n+      AC_MSG_NOTICE([Rewriting $1 to \"$new_complete\"])\n+    fi\n+  fi\n+])\n+\n+###############################################################################\n+AC_DEFUN([UTIL_REMOVE_SYMBOLIC_LINKS],\n+[\n+  if test \"x$OPENJDK_BUILD_OS\" != xwindows; then\n+    # Follow a chain of symbolic links. Use readlink\n+    # where it exists, else fall back to horribly\n+    # complicated shell code.\n+    if test \"x$READLINK_TESTED\" != yes; then\n+      # On MacOSX there is a readlink tool with a different\n+      # purpose than the GNU readlink tool. Check the found readlink.\n+      READLINK_ISGNU=`$READLINK --version 2>&1 | $GREP GNU`\n+      # If READLINK_ISGNU is empty, then it's a non-GNU readlink. Don't use it.\n+      READLINK_TESTED=yes\n+    fi\n+\n+    if test \"x$READLINK\" != x && test \"x$READLINK_ISGNU\" != x; then\n+      $1=`$READLINK -f [$]$1`\n+    else\n+      # Save the current directory for restoring afterwards\n+      STARTDIR=$PWD\n+      COUNTER=0\n+      sym_link_dir=`$DIRNAME [$]$1`\n+      sym_link_file=`$BASENAME [$]$1`\n+      cd $sym_link_dir\n+      # Use -P flag to resolve symlinks in directories.\n+      cd `$THEPWDCMD -P`\n+      sym_link_dir=`$THEPWDCMD -P`\n+      # Resolve file symlinks\n+      while test $COUNTER -lt 20; do\n+        ISLINK=`$LS -l $sym_link_dir\/$sym_link_file | $GREP '\\->' | $SED -e 's\/.*-> \\(.*\\)\/\\1\/'`\n+        if test \"x$ISLINK\" == x; then\n+          # This is not a symbolic link! We are done!\n+          break\n+        fi\n+        # Again resolve directory symlinks since the target of the just found\n+        # link could be in a different directory\n+        cd `$DIRNAME $ISLINK`\n+        sym_link_dir=`$THEPWDCMD -P`\n+        sym_link_file=`$BASENAME $ISLINK`\n+        let COUNTER=COUNTER+1\n+      done\n+      cd $STARTDIR\n+      $1=$sym_link_dir\/$sym_link_file\n+    fi\n+  fi\n+])\n+\n","filename":"make\/autoconf\/util_paths.m4","additions":228,"deletions":0,"binary":false,"changes":228,"status":"added"},{"patch":"@@ -0,0 +1,308 @@\n+#\n+# Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+AC_DEFUN([UTIL_REWRITE_AS_UNIX_PATH],\n+[\n+  windows_path=\"[$]$1\"\n+  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n+    unix_path=`$CYGPATH -u \"$windows_path\"`\n+    $1=\"$unix_path\"\n+  elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n+    unix_path=`$ECHO \"$windows_path\" | $SED -e 's,^\\\\(.\\\\):,\/\\\\1,g' -e 's,\\\\\\\\,\/,g'`\n+    $1=\"$unix_path\"\n+  fi\n+])\n+\n+AC_DEFUN([UTIL_REWRITE_AS_WINDOWS_MIXED_PATH],\n+[\n+  unix_path=\"[$]$1\"\n+  if test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.cygwin\"; then\n+    windows_path=`$CYGPATH -m \"$unix_path\"`\n+    $1=\"$windows_path\"\n+  elif test \"x$OPENJDK_BUILD_OS_ENV\" = \"xwindows.msys\"; then\n+    windows_path=`cmd \/\/c echo $unix_path`\n+    $1=\"$windows_path\"\n+  fi\n+])\n+\n+# Helper function which possibly converts a path using DOS-style short mode.\n+# If so, the updated path is stored in $new_path.\n+# $1: The path to check\n+AC_DEFUN([UTIL_MAKE_WINDOWS_SPACE_SAFE_CYGWIN],\n+[\n+  input_path=\"$1\"\n+  # Check if we need to convert this using DOS-style short mode. If the path\n+  # contains just simple characters, use it. Otherwise (spaces, weird characters),\n+  # take no chances and rewrite it.\n+  # Note: m4 eats our [], so we need to use @<:@ and @:>@ instead.\n+  has_forbidden_chars=`$ECHO \"$input_path\" | $GREP @<:@^-._\/a-zA-Z0-9@:>@`\n+  if test \"x$has_forbidden_chars\" != x; then\n+    # Now convert it to mixed DOS-style, short mode (no spaces, and \/ instead of \\)\n+    shortmode_path=`$CYGPATH -s -m -a \"$input_path\"`\n+    path_after_shortmode=`$CYGPATH -u \"$shortmode_path\"`\n+    if test \"x$path_after_shortmode\" != \"x$input_to_shortpath\"; then\n+      # Going to short mode and back again did indeed matter. Since short mode is\n+      # case insensitive, let's make it lowercase to improve readability.\n+      shortmode_path=`$ECHO \"$shortmode_path\" | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+      # Now convert it back to Unix-style (cygpath)\n+      input_path=`$CYGPATH -u \"$shortmode_path\"`\n+      new_path=\"$input_path\"\n+    fi\n+  fi\n+\n+  test_cygdrive_prefix=`$ECHO $input_path | $GREP ^\/cygdrive\/`\n+  if test \"x$test_cygdrive_prefix\" = x; then\n+    # As a simple fix, exclude \/usr\/bin since it's not a real path.\n+    if test \"x`$ECHO $1 | $GREP ^\/usr\/bin\/`\" = x; then\n+      # The path is in a Cygwin special directory (e.g. \/home). We need this converted to\n+      # a path prefixed by \/cygdrive for fixpath to work.\n+      new_path=\"$CYGWIN_ROOT_PATH$input_path\"\n+    fi\n+  fi\n+])\n+\n+# Helper function which possibly converts a path using DOS-style short mode.\n+# If so, the updated path is stored in $new_path.\n+# $1: The path to check\n+AC_DEFUN([UTIL_MAKE_WINDOWS_SPACE_SAFE_MSYS],\n+[\n+  input_path=\"$1\"\n+  # Check if we need to convert this using DOS-style short mode. If the path\n+  # contains just simple characters, use it. Otherwise (spaces, weird characters),\n+  # take no chances and rewrite it.\n+  # Note: m4 eats our [], so we need to use @<:@ and @:>@ instead.\n+  has_forbidden_chars=`$ECHO \"$input_path\" | $GREP @<:@^-_\/:a-zA-Z0-9@:>@`\n+  if test \"x$has_forbidden_chars\" != x; then\n+    # Now convert it to mixed DOS-style, short mode (no spaces, and \/ instead of \\)\n+    new_path=`cmd \/c \"for %A in (\\\"$input_path\\\") do @echo %~sA\"|$TR \\\\\\\\\\\\\\\\ \/ | $TR 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+  fi\n+])\n+\n+# FIXME: The UTIL_FIXUP_*_CYGWIN\/MSYS is most likely too convoluted\n+# and could probably be heavily simplified. However, all changes in this\n+# area tend to need lot of testing in different scenarios, and in lack of\n+# proper unit testing, cleaning this up has not been deemed worth the effort\n+# at the moment.\n+\n+AC_DEFUN([UTIL_FIXUP_PATH_CYGWIN],\n+[\n+  # Input might be given as Windows format, start by converting to\n+  # unix format.\n+  path=\"[$]$1\"\n+  new_path=`$CYGPATH -u \"$path\"`\n+\n+  UTIL_ABSOLUTE_PATH(new_path)\n+\n+  # Cygwin tries to hide some aspects of the Windows file system, such that binaries are\n+  # named .exe but called without that suffix. Therefore, \"foo\" and \"foo.exe\" are considered\n+  # the same file, most of the time (as in \"test -f\"). But not when running cygpath -s, then\n+  # \"foo.exe\" is OK but \"foo\" is an error.\n+  #\n+  # This test is therefore slightly more accurate than \"test -f\" to check for file precense.\n+  # It is also a way to make sure we got the proper file name for the real test later on.\n+  test_shortpath=`$CYGPATH -s -m \"$new_path\" 2> \/dev\/null`\n+  if test \"x$test_shortpath\" = x; then\n+    AC_MSG_NOTICE([The path of $1, which resolves as \"$path\", is invalid.])\n+    AC_MSG_ERROR([Cannot locate the the path of $1])\n+  fi\n+\n+  # Call helper function which possibly converts this using DOS-style short mode.\n+  # If so, the updated path is stored in $new_path.\n+  UTIL_MAKE_WINDOWS_SPACE_SAFE_CYGWIN([$new_path])\n+\n+  if test \"x$path\" != \"x$new_path\"; then\n+    $1=\"$new_path\"\n+    AC_MSG_NOTICE([Rewriting $1 to \"$new_path\"])\n+  fi\n+])\n+\n+AC_DEFUN([UTIL_FIXUP_PATH_MSYS],\n+[\n+  path=\"[$]$1\"\n+  has_colon=`$ECHO $path | $GREP ^.:`\n+  new_path=\"$path\"\n+  if test \"x$has_colon\" = x; then\n+    # Not in mixed or Windows style, start by that.\n+    new_path=`cmd \/\/c echo $path`\n+  fi\n+\n+  UTIL_MAKE_WINDOWS_SPACE_SAFE_MSYS([$new_path])\n+  UTIL_REWRITE_AS_UNIX_PATH(new_path)\n+  if test \"x$path\" != \"x$new_path\"; then\n+    $1=\"$new_path\"\n+    AC_MSG_NOTICE([Rewriting $1 to \"$new_path\"])\n+  fi\n+\n+  # Save the first 10 bytes of this path to the storage, so fixpath can work.\n+  all_fixpath_prefixes=(\"${all_fixpath_prefixes@<:@@@:>@}\" \"${new_path:0:10}\")\n+])\n+\n+AC_DEFUN([UTIL_FIXUP_EXECUTABLE_CYGWIN],\n+[\n+  # First separate the path from the arguments. This will split at the first\n+  # space.\n+  complete=\"[$]$1\"\n+  path=\"${complete%% *}\"\n+  tmp=\"$complete EOL\"\n+  arguments=\"${tmp#* }\"\n+\n+  # Input might be given as Windows format, start by converting to\n+  # unix format.\n+  new_path=`$CYGPATH -u \"$path\"`\n+\n+  # Now try to locate executable using which\n+  new_path=`$WHICH \"$new_path\" 2> \/dev\/null`\n+  # bat and cmd files are not always considered executable in cygwin causing which\n+  # to not find them\n+  if test \"x$new_path\" = x \\\n+      && test \"x`$ECHO \\\"$path\\\" | $GREP -i -e \\\"\\\\.bat$\\\" -e \\\"\\\\.cmd$\\\"`\" != x \\\n+      && test \"x`$LS \\\"$path\\\" 2>\/dev\/null`\" != x; then\n+    new_path=`$CYGPATH -u \"$path\"`\n+  fi\n+  if test \"x$new_path\" = x; then\n+    # Oops. Which didn't find the executable.\n+    # The splitting of arguments from the executable at a space might have been incorrect,\n+    # since paths with space are more likely in Windows. Give it another try with the whole\n+    # argument.\n+    path=\"$complete\"\n+    arguments=\"EOL\"\n+    new_path=`$CYGPATH -u \"$path\"`\n+    new_path=`$WHICH \"$new_path\" 2> \/dev\/null`\n+    # bat and cmd files are not always considered executable in cygwin causing which\n+    # to not find them\n+    if test \"x$new_path\" = x \\\n+        && test \"x`$ECHO \\\"$path\\\" | $GREP -i -e \\\"\\\\.bat$\\\" -e \\\"\\\\.cmd$\\\"`\" != x \\\n+        && test \"x`$LS \\\"$path\\\" 2>\/dev\/null`\" != x; then\n+      new_path=`$CYGPATH -u \"$path\"`\n+    fi\n+    if test \"x$new_path\" = x; then\n+      # It's still not found. Now this is an unrecoverable error.\n+      AC_MSG_NOTICE([The path of $1, which resolves as \"$complete\", is not found.])\n+      has_space=`$ECHO \"$complete\" | $GREP \" \"`\n+      if test \"x$has_space\" != x; then\n+        AC_MSG_NOTICE([You might be mixing spaces in the path and extra arguments, which is not allowed.])\n+      fi\n+      AC_MSG_ERROR([Cannot locate the the path of $1])\n+    fi\n+  fi\n+\n+  # Cygwin tries to hide some aspects of the Windows file system, such that binaries are\n+  # named .exe but called without that suffix. Therefore, \"foo\" and \"foo.exe\" are considered\n+  # the same file, most of the time (as in \"test -f\"). But not when running cygpath -s, then\n+  # \"foo.exe\" is OK but \"foo\" is an error.\n+  #\n+  # This test is therefore slightly more accurate than \"test -f\" to check for file presence.\n+  # It is also a way to make sure we got the proper file name for the real test later on.\n+  test_shortpath=`$CYGPATH -s -m \"$new_path\" 2> \/dev\/null`\n+  if test \"x$test_shortpath\" = x; then\n+    # Short path failed, file does not exist as specified.\n+    # Try adding .exe or .cmd\n+    if test -f \"${new_path}.exe\"; then\n+      input_to_shortpath=\"${new_path}.exe\"\n+    elif test -f \"${new_path}.cmd\"; then\n+      input_to_shortpath=\"${new_path}.cmd\"\n+    else\n+      AC_MSG_NOTICE([The path of $1, which resolves as \"$new_path\", is invalid.])\n+      AC_MSG_NOTICE([Neither \"$new_path\" nor \"$new_path.exe\/cmd\" can be found])\n+      AC_MSG_ERROR([Cannot locate the the path of $1])\n+    fi\n+  else\n+    input_to_shortpath=\"$new_path\"\n+  fi\n+\n+  # Call helper function which possibly converts this using DOS-style short mode.\n+  # If so, the updated path is stored in $new_path.\n+  new_path=\"$input_to_shortpath\"\n+  UTIL_MAKE_WINDOWS_SPACE_SAFE_CYGWIN([$input_to_shortpath])\n+  # remove trailing .exe if any\n+  new_path=\"${new_path\/%.exe\/}\"\n+])\n+\n+AC_DEFUN([UTIL_FIXUP_EXECUTABLE_MSYS],\n+[\n+  # First separate the path from the arguments. This will split at the first\n+  # space.\n+  complete=\"[$]$1\"\n+  path=\"${complete%% *}\"\n+  tmp=\"$complete EOL\"\n+  arguments=\"${tmp#* }\"\n+\n+  # Input might be given as Windows format, start by converting to\n+  # unix format.\n+  new_path=\"$path\"\n+  UTIL_REWRITE_AS_UNIX_PATH(new_path)\n+\n+  # Now try to locate executable using which\n+  new_path=`$WHICH \"$new_path\" 2> \/dev\/null`\n+\n+  if test \"x$new_path\" = x; then\n+    # Oops. Which didn't find the executable.\n+    # The splitting of arguments from the executable at a space might have been incorrect,\n+    # since paths with space are more likely in Windows. Give it another try with the whole\n+    # argument.\n+    path=\"$complete\"\n+    arguments=\"EOL\"\n+    new_path=\"$path\"\n+    UTIL_REWRITE_AS_UNIX_PATH(new_path)\n+\n+    new_path=`$WHICH \"$new_path\" 2> \/dev\/null`\n+    # bat and cmd files are not always considered executable in MSYS causing which\n+    # to not find them\n+    if test \"x$new_path\" = x \\\n+        && test \"x`$ECHO \\\"$path\\\" | $GREP -i -e \\\"\\\\.bat$\\\" -e \\\"\\\\.cmd$\\\"`\" != x \\\n+        && test \"x`$LS \\\"$path\\\" 2>\/dev\/null`\" != x; then\n+      new_path=\"$path\"\n+      UTIL_REWRITE_AS_UNIX_PATH(new_path)\n+    fi\n+\n+    if test \"x$new_path\" = x; then\n+      # It's still not found. Now this is an unrecoverable error.\n+      AC_MSG_NOTICE([The path of $1, which resolves as \"$complete\", is not found.])\n+      has_space=`$ECHO \"$complete\" | $GREP \" \"`\n+      if test \"x$has_space\" != x; then\n+        AC_MSG_NOTICE([You might be mixing spaces in the path and extra arguments, which is not allowed.])\n+      fi\n+      AC_MSG_ERROR([Cannot locate the the path of $1])\n+    fi\n+  fi\n+\n+  # Now new_path has a complete unix path to the binary\n+  if test \"x`$ECHO $new_path | $GREP ^\/bin\/`\" != x; then\n+    # Keep paths in \/bin as-is, but remove trailing .exe if any\n+    new_path=\"${new_path\/%.exe\/}\"\n+    # Do not save \/bin paths to all_fixpath_prefixes!\n+  else\n+    # Not in mixed or Windows style, start by that.\n+    new_path=`cmd \/\/c echo $new_path`\n+    UTIL_MAKE_WINDOWS_SPACE_SAFE_MSYS([$new_path])\n+    # Output is in $new_path\n+    UTIL_REWRITE_AS_UNIX_PATH(new_path)\n+    # remove trailing .exe if any\n+    new_path=\"${new_path\/%.exe\/}\"\n+\n+    # Save the first 10 bytes of this path to the storage, so fixpath can work.\n+    all_fixpath_prefixes=(\"${all_fixpath_prefixes@<:@@@:>@}\" \"${new_path:0:10}\")\n+  fi\n+])\n","filename":"make\/autoconf\/util_windows.m4","additions":308,"deletions":0,"binary":false,"changes":308,"status":"added"}]}