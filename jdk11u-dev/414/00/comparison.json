{"files":[{"patch":"@@ -176,1 +176,0 @@\n-java\/awt\/Focus\/6378278\/InputVerifierTest.java 8198616 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-  @author oleg.sukhodolsky: area=awt.focus\n@@ -55,0 +54,1 @@\n+import javax.swing.SwingUtilities;\n@@ -61,0 +61,3 @@\n+    static JFrame frame;\n+    static JTextField t1;\n+    static JTextField t2;\n@@ -62,1 +65,1 @@\n-    private static void init()\n+    private static void init() throws Exception\n@@ -64,24 +67,0 @@\n-        JFrame frame = new JFrame();\n-        JTextField t1 = new JTextField();\n-        t1.setInputVerifier(new InputVerifier() {\n-            public boolean verify(JComponent input) {\n-                System.out.println(\"verify(\" + input + \")\");\n-                ivWasCalled = true;\n-                return true;\n-            }\n-        });\n-        JTextField t2 = new JTextField();\n-\n-        frame.getContentPane().add(t1, BorderLayout.NORTH);\n-        frame.getContentPane().add(t2, BorderLayout.SOUTH);\n-        frame.setSize(200, 200);\n-        frame.setVisible(true);\n-\n-        Robot r = null;\n-        try {\n-            r = new Robot();\n-        } catch (AWTException e) {\n-            e.printStackTrace();\n-            InputVerifierTest.fail(e.toString());\n-        }\n-\n@@ -89,19 +68,25 @@\n-            r.waitForIdle();\n-\n-            mouseClickOnComp(r, t1);\n-            r.waitForIdle();\n-\n-            if (!t1.isFocusOwner()) {\n-                throw new RuntimeException(\"t1 is not a focus owner\");\n-            }\n-            ivWasCalled = false;\n-            r.keyPress(KeyEvent.VK_TAB);\n-            r.delay(10);\n-            r.keyRelease(KeyEvent.VK_TAB);\n-            r.waitForIdle();\n-\n-            if (!t2.isFocusOwner()) {\n-                throw new RuntimeException(\"t2 is not a focus owner\");\n-            }\n-            if (!ivWasCalled) {\n-                throw new RuntimeException(\"InputVerifier was not called after tabbing\");\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                t1 = new JTextField();\n+                t1.setInputVerifier(new InputVerifier() {\n+                    public boolean verify(JComponent input) {\n+                        System.out.println(\"verify(\" + input + \")\");\n+                        ivWasCalled = true;\n+                        return true;\n+                    }\n+                });\n+                t2 = new JTextField();\n+\n+                frame.getContentPane().add(t1, BorderLayout.NORTH);\n+                frame.getContentPane().add(t2, BorderLayout.SOUTH);\n+                frame.setLocationRelativeTo(null);\n+                frame.setSize(200, 200);\n+                frame.setVisible(true);\n+            });\n+\n+            Robot r = null;\n+            try {\n+                r = new Robot();\n+            } catch (AWTException e) {\n+                e.printStackTrace();\n+                InputVerifierTest.fail(e.toString());\n@@ -110,5 +95,44 @@\n-            mouseClickOnComp(r, t1);\n-            r.waitForIdle();\n-\n-            if (!t1.isFocusOwner()) {\n-                throw new RuntimeException(\"t1 is not a focus owner\");\n+            try {\n+                r.setAutoDelay(100);\n+                r.waitForIdle();\n+                r.delay(1000);\n+\n+                mouseClickOnComp(r, t1);\n+                r.waitForIdle();\n+\n+                if (!t1.isFocusOwner()) {\n+                    throw new RuntimeException(\"t1 is not a focus owner\");\n+                }\n+                ivWasCalled = false;\n+                r.keyPress(KeyEvent.VK_TAB);\n+                r.keyRelease(KeyEvent.VK_TAB);\n+                r.waitForIdle();\n+                r.delay(500);\n+\n+                if (!t2.isFocusOwner()) {\n+                    throw new RuntimeException(\"t2 is not a focus owner 1\");\n+                }\n+                if (!ivWasCalled) {\n+                    throw new RuntimeException(\"InputVerifier was not called after tabbing\");\n+                }\n+\n+                mouseClickOnComp(r, t1);\n+                r.waitForIdle();\n+\n+                if (!t1.isFocusOwner()) {\n+                    throw new RuntimeException(\"t1 is not a focus owner\");\n+                }\n+\n+                ivWasCalled = false;\n+                mouseClickOnComp(r, t2);\n+                r.waitForIdle();\n+                r.delay(500);\n+                if (!t2.isFocusOwner()) {\n+                    throw new RuntimeException(\"t2 is not a focus owner 2\");\n+                }\n+                if (!ivWasCalled) {\n+                    throw new RuntimeException(\"InputVErifier was not called after mouse press\");\n+                }\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+                InputVerifierTest.fail(e.toString());\n@@ -117,12 +141,7 @@\n-            ivWasCalled = false;\n-            mouseClickOnComp(r, t2);\n-            r.waitForIdle();\n-            if (!t2.isFocusOwner()) {\n-                throw new RuntimeException(\"t2 is not a focus owner\");\n-            }\n-            if (!ivWasCalled) {\n-                throw new RuntimeException(\"InputVErifier was not called after mouse press\");\n-            }\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            InputVerifierTest.fail(e.toString());\n+            InputVerifierTest.pass();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -130,3 +149,0 @@\n-\n-        InputVerifierTest.pass();\n-\n@@ -140,4 +156,3 @@\n-        r.delay(10);\n-        r.mousePress(InputEvent.BUTTON1_MASK);\n-        r.delay(10);\n-        r.mouseRelease(InputEvent.BUTTON1_MASK);\n+        r.waitForIdle();\n+        r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -170,1 +185,1 @@\n-    public static void main( String args[] ) throws InterruptedException\n+    public static void main( String args[] ) throws Exception\n","filename":"test\/jdk\/java\/awt\/Focus\/6378278\/InputVerifierTest.java","additions":86,"deletions":71,"binary":false,"changes":157,"status":"modified"}]}