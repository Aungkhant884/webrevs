{"files":[{"patch":"@@ -96,1 +96,0 @@\n-<li><a href=\"#setting-up-a-forest-for-pushing-changes-defpath\">Setting Up a Forest for Pushing Changes (defpath)<\/a><\/li>\n@@ -101,1 +100,0 @@\n-<li><a href=\"#learn-about-mercurial\">Learn About Mercurial<\/a><\/li>\n@@ -115,1 +113,1 @@\n-<p>If you are eager to try out building the JDK, these simple steps works most of the time. They assume that you have installed Mercurial (and Cygwin if running on Windows) and cloned the top-level JDK repository that you want to build.<\/p>\n+<p>If you are eager to try out building the JDK, these simple steps works most of the time. They assume that you have installed Git (and Cygwin if running on Windows) and cloned the top-level JDK repository that you want to build.<\/p>\n@@ -118,1 +116,1 @@\n-<code>hg clone http:\/\/hg.openjdk.java.net\/jdk\/jdk<\/code><\/p><\/li>\n+<code>git clone https:\/\/git.openjdk.java.net\/jdk\/<\/code><\/p><\/li>\n@@ -134,2 +132,2 @@\n-<p>Make sure you are getting the correct version. As of JDK 10, the source is no longer split into separate repositories so you only need to clone one single repository. At the <a href=\"http:\/\/hg.openjdk.java.net\/\">OpenJDK Mercurial server<\/a> you can see a list of all available forests. If you want to build an older version, e.g. JDK 8, it is recommended that you get the <code>jdk8u<\/code> forest, which contains incremental updates, instead of the <code>jdk8<\/code> forest, which was frozen at JDK 8 GA.<\/p>\n-<p>If you are new to Mercurial, a good place to start is the <a href=\"http:\/\/www.mercurial-scm.org\/guide\">Mercurial Beginner's Guide<\/a>. The rest of this document assumes a working knowledge of Mercurial.<\/p>\n+<p>Make sure you are getting the correct version. As of JDK 10, the source is no longer split into separate repositories so you only need to clone one single repository. At the <a href=\"https:\/\/git.openjdk.java.net\/\">OpenJDK Git site<\/a> you can see a list of all available repositories. If you want to build an older version, e.g. JDK 8, it is recommended that you get the <code>jdk8u<\/code> forest, which contains incremental updates, instead of the <code>jdk8<\/code> forest, which was frozen at JDK 8 GA.<\/p>\n+<p>If you are new to Git, a good place to start is the book <a href=\"https:\/\/git-scm.com\/book\/en\/v2\">Pro Git<\/a>. The rest of this document assumes a working knowledge of Git.<\/p>\n@@ -146,1 +144,5 @@\n-<li><p>Clone the JDK repository using the Cygwin command line <code>hg<\/code> client as instructed in this document. That is, do <em>not<\/em> use another Mercurial client such as TortoiseHg.<\/p><\/li>\n+<li><p>You need to install a git client. You have two choices, Cygwin git or Git for Windows. Unfortunately there are pros and cons with each choice.<\/p>\n+<ul>\n+<li><p>The Cygwin <code>git<\/code> client has no line ending issues and understands Cygwin paths (which are used throughout the JDK build system). However, it does not currently work well with the Skara CLI tooling. Please see the <a href=\"https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Skara#Skara-Git\">Skara wiki on Git clients<\/a> for up-to-date information about the Skara git client support.<\/p><\/li>\n+<li><p>The <a href=\"https:\/\/gitforwindows.org\">Git for Windows<\/a> client has issues with line endings, and do not understand Cygwin paths. It does work well with the Skara CLI tooling, however. To alleviate the line ending problems, make sure you set <code>core.autocrlf<\/code> to <code>false<\/code> (this is asked during installation).<\/p><\/li>\n+<\/ul><\/li>\n@@ -196,1 +198,1 @@\n-<p>Internally in the build system, all paths are represented as Unix-style paths, e.g. <code>\/cygdrive\/c\/hg\/jdk9\/Makefile<\/code> rather than <code>C:\\hg\\jdk9\\Makefile<\/code>. This rule also applies to input to the build system, e.g. in arguments to <code>configure<\/code>. So, use <code>--with-msvcr-dll=\/cygdrive\/c\/msvcr100.dll<\/code> rather than <code>--with-msvcr-dll=c:\\msvcr100.dll<\/code>. For details on this conversion, see the section on <a href=\"#fixpath\">Fixpath<\/a>.<\/p>\n+<p>Internally in the build system, all paths are represented as Unix-style paths, e.g. <code>\/cygdrive\/c\/git\/jdk\/Makefile<\/code> rather than <code>C:\\git\\jdk\\Makefile<\/code>. This rule also applies to input to the build system, e.g. in arguments to <code>configure<\/code>. So, use <code>--with-msvcr-dll=\/cygdrive\/c\/msvcr100.dll<\/code> rather than <code>--with-msvcr-dll=c:\\msvcr100.dll<\/code>. For details on this conversion, see the section on <a href=\"#fixpath\">Fixpath<\/a>.<\/p>\n@@ -580,1 +582,1 @@\n-<th style=\"text-align: left;\">Supported devkit targets<\/th>\n+<th>Supported devkit targets<\/th>\n@@ -585,1 +587,1 @@\n-<td style=\"text-align: left;\">x86_64-linux-gnu<\/td>\n+<td>x86_64-linux-gnu<\/td>\n@@ -588,1 +590,1 @@\n-<td style=\"text-align: left;\">aarch64-linux-gnu<\/td>\n+<td>aarch64-linux-gnu<\/td>\n@@ -591,1 +593,1 @@\n-<td style=\"text-align: left;\">arm-linux-gnueabihf<\/td>\n+<td>arm-linux-gnueabihf<\/td>\n@@ -594,1 +596,1 @@\n-<td style=\"text-align: left;\">ppc64-linux-gnu<\/td>\n+<td>ppc64-linux-gnu<\/td>\n@@ -597,1 +599,1 @@\n-<td style=\"text-align: left;\">ppc64le-linux-gnu<\/td>\n+<td>ppc64le-linux-gnu<\/td>\n@@ -600,1 +602,1 @@\n-<td style=\"text-align: left;\">s390x-linux-gnu<\/td>\n+<td>s390x-linux-gnu<\/td>\n@@ -703,2 +705,2 @@\n-<th style=\"text-align: left;\"><code>--arch=...<\/code><\/th>\n-<th style=\"text-align: left;\"><code>--openjdk-target=...<\/code><\/th>\n+<th><code>--arch=...<\/code><\/th>\n+<th><code>--openjdk-target=...<\/code><\/th>\n@@ -712,2 +714,2 @@\n-<td style=\"text-align: left;\">i386<\/td>\n-<td style=\"text-align: left;\">i386-linux-gnu<\/td>\n+<td>i386<\/td>\n+<td>i386-linux-gnu<\/td>\n@@ -719,2 +721,2 @@\n-<td style=\"text-align: left;\">armhf<\/td>\n-<td style=\"text-align: left;\">arm-linux-gnueabihf<\/td>\n+<td>armhf<\/td>\n+<td>arm-linux-gnueabihf<\/td>\n@@ -726,2 +728,2 @@\n-<td style=\"text-align: left;\">arm64<\/td>\n-<td style=\"text-align: left;\">aarch64-linux-gnu<\/td>\n+<td>arm64<\/td>\n+<td>aarch64-linux-gnu<\/td>\n@@ -733,2 +735,2 @@\n-<td style=\"text-align: left;\">ppc64el<\/td>\n-<td style=\"text-align: left;\">powerpc64le-linux-gnu<\/td>\n+<td>ppc64el<\/td>\n+<td>powerpc64le-linux-gnu<\/td>\n@@ -740,2 +742,2 @@\n-<td style=\"text-align: left;\">s390x<\/td>\n-<td style=\"text-align: left;\">s390x-linux-gnu<\/td>\n+<td>s390x<\/td>\n+<td>s390x-linux-gnu<\/td>\n@@ -792,1 +794,1 @@\n-\/localhome\/hg\/jdk9-sandbox\/hotspot\/src\/share\/vm\/services\/psMemoryPool.cpp:1:1: error: &#39;failhere&#39; does not name a type\n+\/localhome\/git\/jdk-sandbox\/hotspot\/src\/share\/vm\/services\/psMemoryPool.cpp:1:1: error: &#39;failhere&#39; does not name a type\n@@ -795,1 +797,1 @@\n-* All command lines available in \/localhome\/hg\/jdk9-sandbox\/build\/linux-x64\/make-support\/failure-logs.\n+* All command lines available in \/localhome\/git\/jdk-sandbox\/build\/linux-x64\/make-support\/failure-logs.\n@@ -799,1 +801,1 @@\n-lib\/CompileJvm.gmk:207: recipe for target &#39;\/localhome\/hg\/jdk9-sandbox\/build\/linux-x64\/hotspot\/variant-server\/libjvm\/objs\/psMemoryPool.o&#39; failed\n+lib\/CompileJvm.gmk:207: recipe for target &#39;\/localhome\/git\/jdk-sandbox\/build\/linux-x64\/hotspot\/variant-server\/libjvm\/objs\/psMemoryPool.o&#39; failed\n@@ -822,1 +824,1 @@\n-<p>Incremental rebuilds mean that when you modify part of the product, only the affected parts get rebuilt. While this works great in most cases, and significantly speed up the development process, from time to time complex interdependencies will result in an incorrect build result. This is the most common cause for unexpected build problems, together with inconsistencies between the different Mercurial repositories in the forest.<\/p>\n+<p>Incremental rebuilds mean that when you modify part of the product, only the affected parts get rebuilt. While this works great in most cases, and significantly speed up the development process, from time to time complex interdependencies will result in an incorrect build result. This is the most common cause for unexpected build problems.<\/p>\n@@ -825,2 +827,2 @@\n-<li><p>Make sure your forest is up-to-date<\/p>\n-<p>Run <code>bash get_source.sh<\/code> to make sure you have the latest version of all repositories.<\/p><\/li>\n+<li><p>Make sure your repository is up-to-date<\/p>\n+<p>Run <code>git pull origin master<\/code> to make sure you have the latest changes.<\/p><\/li>\n@@ -835,2 +837,2 @@\n-<li><p>Re-clone the Mercurial forest<\/p>\n-<p>Sometimes the Mercurial repositories themselves gets in a state that causes the product to be un-buildable. In such a case, the simplest solution is often the &quot;sledgehammer approach&quot;: delete the entire forest, and re-clone it. If you have local changes, save them first to a different location using <code>hg export<\/code>.<\/p><\/li>\n+<li><p>Re-clone the Git repository<\/p>\n+<p>Sometimes the Git repository gets in a state that causes the product to be un-buildable. In such a case, the simplest solution is often the &quot;sledgehammer approach&quot;: delete the entire repository, and re-clone it. If you have local changes, save them first to a different location using <code>git format-patch<\/code>.<\/p><\/li>\n@@ -855,6 +857,1 @@\n-<p>If none of the suggestions in this document helps you, or if you find what you believe is a bug in the build system, please contact the Build Group by sending a mail to <script type=\"text\/javascript\">\n-<!--\n-h='&#x6f;&#112;&#x65;&#110;&#106;&#100;&#x6b;&#46;&#106;&#x61;&#118;&#x61;&#46;&#110;&#x65;&#116;';a='&#64;';n='&#98;&#x75;&#x69;&#108;&#100;&#x2d;&#100;&#x65;&#118;';e=n+a+h;\n-document.write('<a h'+'ref'+'=\"ma'+'ilto'+':'+e+'\" clas'+'s=\"em' + 'ail\">'+e+'<\\\/'+'a'+'>');\n-\/\/ -->\n-<\/script><noscript>&#98;&#x75;&#x69;&#108;&#100;&#x2d;&#100;&#x65;&#118;&#32;&#x61;&#116;&#32;&#x6f;&#112;&#x65;&#110;&#106;&#100;&#x6b;&#32;&#100;&#x6f;&#116;&#32;&#106;&#x61;&#118;&#x61;&#32;&#100;&#x6f;&#116;&#32;&#110;&#x65;&#116;<\/noscript>. Please include the relevant parts of the configure and\/or build log.<\/p>\n+<p>If none of the suggestions in this document helps you, or if you find what you believe is a bug in the build system, please contact the Build Group by sending a mail to <a href=\"mailto:build-dev@openjdk.java.net\">build-dev@openjdk.java.net<\/a>. Please include the relevant parts of the configure and\/or build log.<\/p>\n@@ -863,14 +860,0 @@\n-<h3 id=\"setting-up-a-forest-for-pushing-changes-defpath\">Setting Up a Forest for Pushing Changes (defpath)<\/h3>\n-<p>To help you prepare a proper push path for a Mercurial repository, there exists a useful tool known as <a href=\"http:\/\/openjdk.java.net\/projects\/code-tools\/defpath\">defpath<\/a>. It will help you setup a proper push path for pushing changes to the JDK.<\/p>\n-<p>Install the extension by cloning <code>http:\/\/hg.openjdk.java.net\/code-tools\/defpath<\/code> and updating your <code>.hgrc<\/code> file. Here's one way to do this:<\/p>\n-<pre><code>cd ~\n-mkdir hg-ext\n-cd hg-ext\n-hg clone http:\/\/hg.openjdk.java.net\/code-tools\/defpath\n-cat &lt;&lt; EOT &gt;&gt; ~\/.hgrc\n-[extensions]\n-defpath=~\/hg-ext\/defpath\/defpath.py\n-EOT<\/code><\/pre>\n-<p>You can now setup a proper push path using:<\/p>\n-<pre><code>hg defpath -d -u &lt;your OpenJDK username&gt;<\/code><\/pre>\n-<p>If you also have the <code>trees<\/code> extension installed in Mercurial, you will automatically get a <code>tdefpath<\/code> command, which is even more useful. By running <code>hg tdefpath -du &lt;username&gt;<\/code> in the top repository of your forest, all repos will get setup automatically. This is the recommended usage.<\/p>\n@@ -930,8 +913,0 @@\n-<h3 id=\"learn-about-mercurial\">Learn About Mercurial<\/h3>\n-<p>To become an efficient JDK developer, it is recommended that you invest in learning Mercurial properly. Here are some links that can get you started:<\/p>\n-<ul>\n-<li><a href=\"http:\/\/www.mercurial-scm.org\/wiki\/GitConcepts\">Mercurial for git users<\/a><\/li>\n-<li><a href=\"http:\/\/www.mercurial-scm.org\/wiki\/Tutorial\">The official Mercurial tutorial<\/a><\/li>\n-<li><a href=\"http:\/\/hginit.com\/\">hg init<\/a><\/li>\n-<li><a href=\"http:\/\/hgbook.red-bean.com\/read\/\">Mercurial: The Definitive Guide<\/a><\/li>\n-<\/ul>\n","filename":"doc\/building.html","additions":38,"deletions":63,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-the time. They assume that you have installed Mercurial (and Cygwin if running\n+the time. They assume that you have installed Git (and Cygwin if running\n@@ -10,1 +10,1 @@\n-    `hg clone http:\/\/hg.openjdk.java.net\/jdk\/jdk`\n+    `git clone https:\/\/git.openjdk.java.net\/jdk\/`\n@@ -50,2 +50,2 @@\n-repository. At the [OpenJDK Mercurial server](http:\/\/hg.openjdk.java.net\/) you\n-can see a list of all available forests. If you want to build an older version,\n+repository. At the [OpenJDK Git site](https:\/\/git.openjdk.java.net\/) you\n+can see a list of all available repositories. If you want to build an older version,\n@@ -55,3 +55,3 @@\n-If you are new to Mercurial, a good place to start is the [Mercurial Beginner's\n-Guide](http:\/\/www.mercurial-scm.org\/guide). The rest of this document assumes a\n-working knowledge of Mercurial.\n+If you are new to Git, a good place to start is the book [Pro\n+Git](https:\/\/git-scm.com\/book\/en\/v2). The rest of this document\n+assumes a working knowledge of Git.\n@@ -92,3 +92,15 @@\n-      * Clone the JDK repository using the Cygwin command line `hg` client\n-        as instructed in this document. That is, do *not* use another Mercurial\n-        client such as TortoiseHg.\n+      * You need to install a git client. You have two choices, Cygwin git or\n+        Git for Windows. Unfortunately there are pros and cons with each choice.\n+\n+        * The Cygwin `git` client has no line ending issues and understands\n+          Cygwin paths (which are used throughout the JDK build system).\n+          However, it does not currently work well with the Skara CLI tooling.\n+          Please see the [Skara wiki on Git clients](\n+          https:\/\/wiki.openjdk.java.net\/display\/SKARA\/Skara#Skara-Git) for\n+          up-to-date information about the Skara git client support.\n+\n+        * The [Git for Windows](https:\/\/gitforwindows.org) client has issues\n+          with line endings, and do not understand Cygwin paths. It does work\n+          well with the Skara CLI tooling, however. To alleviate the line ending\n+          problems, make sure you set `core.autocrlf` to `false` (this is asked\n+          during installation).\n@@ -174,1 +186,1 @@\n-e.g. `\/cygdrive\/c\/hg\/jdk9\/Makefile` rather than `C:\\hg\\jdk9\\Makefile`. This\n+e.g. `\/cygdrive\/c\/git\/jdk\/Makefile` rather than `C:\\git\\jdk\\Makefile`. This\n@@ -1264,1 +1276,1 @@\n-\/localhome\/hg\/jdk9-sandbox\/hotspot\/src\/share\/vm\/services\/psMemoryPool.cpp:1:1: error: 'failhere' does not name a type\n+\/localhome\/git\/jdk-sandbox\/hotspot\/src\/share\/vm\/services\/psMemoryPool.cpp:1:1: error: 'failhere' does not name a type\n@@ -1267,1 +1279,1 @@\n-* All command lines available in \/localhome\/hg\/jdk9-sandbox\/build\/linux-x64\/make-support\/failure-logs.\n+* All command lines available in \/localhome\/git\/jdk-sandbox\/build\/linux-x64\/make-support\/failure-logs.\n@@ -1271,1 +1283,1 @@\n-lib\/CompileJvm.gmk:207: recipe for target '\/localhome\/hg\/jdk9-sandbox\/build\/linux-x64\/hotspot\/variant-server\/libjvm\/objs\/psMemoryPool.o' failed\n+lib\/CompileJvm.gmk:207: recipe for target '\/localhome\/git\/jdk-sandbox\/build\/linux-x64\/hotspot\/variant-server\/libjvm\/objs\/psMemoryPool.o' failed\n@@ -1361,2 +1373,1 @@\n-common cause for unexpected build problems, together with inconsistencies\n-between the different Mercurial repositories in the forest.\n+common cause for unexpected build problems.\n@@ -1368,1 +1379,1 @@\n- 1. Make sure your forest is up-to-date\n+ 1. Make sure your repository is up-to-date\n@@ -1370,2 +1381,1 @@\n-    Run `bash get_source.sh` to make sure you have the latest version of all\n-    repositories.\n+    Run `git pull origin master` to make sure you have the latest changes.\n@@ -1396,1 +1406,1 @@\n- 4. Re-clone the Mercurial forest\n+ 4. Re-clone the Git repository\n@@ -1398,5 +1408,5 @@\n-    Sometimes the Mercurial repositories themselves gets in a state that causes\n-    the product to be un-buildable. In such a case, the simplest solution is\n-    often the \"sledgehammer approach\": delete the entire forest, and re-clone\n-    it. If you have local changes, save them first to a different location\n-    using `hg export`.\n+    Sometimes the Git repository gets in a state that causes the product\n+    to be un-buildable. In such a case, the simplest solution is often the\n+    \"sledgehammer approach\": delete the entire repository, and re-clone it.\n+    If you have local changes, save them first to a different location using\n+    `git format-patch`.\n@@ -1453,32 +1463,0 @@\n-### Setting Up a Forest for Pushing Changes (defpath)\n-\n-To help you prepare a proper push path for a Mercurial repository, there exists\n-a useful tool known as [defpath](\n-http:\/\/openjdk.java.net\/projects\/code-tools\/defpath). It will help you setup a\n-proper push path for pushing changes to the JDK.\n-\n-Install the extension by cloning\n-`http:\/\/hg.openjdk.java.net\/code-tools\/defpath` and updating your `.hgrc` file.\n-Here's one way to do this:\n-\n-```\n-cd ~\n-mkdir hg-ext\n-cd hg-ext\n-hg clone http:\/\/hg.openjdk.java.net\/code-tools\/defpath\n-cat << EOT >> ~\/.hgrc\n-[extensions]\n-defpath=~\/hg-ext\/defpath\/defpath.py\n-EOT\n-```\n-\n-You can now setup a proper push path using:\n-```\n-hg defpath -d -u <your OpenJDK username>\n-```\n-\n-If you also have the `trees` extension installed in Mercurial, you will\n-automatically get a `tdefpath` command, which is even more useful. By running\n-`hg tdefpath -du <username>` in the top repository of your forest, all repos\n-will get setup automatically. This is the recommended usage.\n-\n@@ -1627,10 +1605,0 @@\n-### Learn About Mercurial\n-\n-To become an efficient JDK developer, it is recommended that you invest in\n-learning Mercurial properly. Here are some links that can get you started:\n-\n-  * [Mercurial for git users](http:\/\/www.mercurial-scm.org\/wiki\/GitConcepts)\n-  * [The official Mercurial tutorial](http:\/\/www.mercurial-scm.org\/wiki\/Tutorial)\n-  * [hg init](http:\/\/hginit.com\/)\n-  * [Mercurial: The Definitive Guide](http:\/\/hgbook.red-bean.com\/read\/)\n-\n","filename":"doc\/building.md","additions":35,"deletions":67,"binary":false,"changes":102,"status":"modified"}]}