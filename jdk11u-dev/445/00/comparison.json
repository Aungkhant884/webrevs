{"files":[{"patch":"@@ -3327,1 +3327,0 @@\n-\n@@ -3330,4 +3329,1 @@\n-  if (_parent \/*not the root loop*\/ &&\n-      !_irreducible &&\n-      \/\/ Also ignore the occasional dead backedge\n-      !tail()->is_top()) {\n+  if (!is_root() && is_loop()) {\n@@ -3337,5 +3333,2 @@\n-  \/\/ Gate unrolling, RCE and peeling efforts.\n-  if (!_child &&                \/\/ If not an inner loop, do not split\n-      !_irreducible &&\n-      _allow_optimizations &&\n-      !tail()->is_top()) {     \/\/ Also ignore the occasional dead backedge\n+  \/\/ Unrolling, RCE and peeling efforts, iff innermost loop.\n+  if (_allow_optimizations && is_innermost()) {\n@@ -3343,3 +3336,3 @@\n-        if (!iteration_split_impl(phase, old_new)) {\n-          return false;\n-        }\n+      if (!iteration_split_impl(phase, old_new)) {\n+        return false;\n+      }\n@@ -3619,1 +3612,1 @@\n-  if (!lpt->is_counted() || !lpt->is_inner()) {\n+  if (!lpt->is_counted() || !lpt->is_innermost()) {\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -3013,1 +3013,1 @@\n-      if (!is_counted || !lpt->is_inner()) continue;\n+      if (!is_counted || !lpt->is_innermost()) continue;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -621,3 +621,5 @@\n-  bool is_loop()    { return !_irreducible && _tail && !_tail->is_top(); }\n-  bool is_inner()   { return is_loop() && _child == NULL; }\n-  bool is_counted() { return is_loop() && _head != NULL && _head->is_CountedLoop(); }\n+  bool is_root() { return _parent == NULL; }\n+  \/\/ A proper\/reducible loop w\/o any (occasional) dead back-edge.\n+  bool is_loop() { return !_irreducible && !tail()->is_top(); }\n+  bool is_counted()   { return is_loop() && _head->is_CountedLoop(); }\n+  bool is_innermost() { return is_loop() && _child == NULL; }\n@@ -1419,8 +1421,5 @@\n-\/\/ Handle lazy update of _tail field\n-  Node *n = _tail;\n-  \/\/while( !n->in(0) )  \/\/ Skip dead CFG nodes\n-    \/\/n = n->in(1);\n-  if (n->in(0) == NULL)\n-    n = _phase->get_ctrl(n);\n-  _tail = n;\n-  return n;\n+  \/\/ Handle lazy update of _tail field.\n+  if (_tail->in(0) == NULL) {\n+    _tail = _phase->get_ctrl(_tail);\n+  }\n+  return _tail;\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"}]}