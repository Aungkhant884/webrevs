{"files":[{"patch":"@@ -40,1 +40,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: June 2022\n@@ -231,2 +231,2 @@\n-        int size = constantPool.length < ConstantPoolGen.CONSTANT_POOL_SIZE - 1 ?\n-                constantPool.length : ConstantPoolGen.CONSTANT_POOL_SIZE - 1;\n+        int size = constantPool.length < ConstantPoolGen.CONSTANT_POOL_SIZE ?\n+                constantPool.length : ConstantPoolGen.CONSTANT_POOL_SIZE;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantPool.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: June 2022\n@@ -56,1 +56,1 @@\n-    public static final int CONSTANT_POOL_SIZE = 65536;\n+    public static final int CONSTANT_POOL_SIZE = 65535;\n@@ -84,0 +84,13 @@\n+        \/*\n+         * To be logically\/programmatically correct, the size of the constant pool\n+         * shall not exceed the size limit as the code below does a copy and then\n+         * walk through the whole array.\n+         * This is however, not used by XSLT (or the java.xml implementation),\n+         * and only happens when BCELifier is called (see BCELifier).\n+        *\/\n+        if (cs.length > CONSTANT_POOL_SIZE) {\n+            throw new RuntimeException(\"The number of constants \" + cs.length\n+                    + \" is over the size limit of the constant pool: \"\n+                    + CONSTANT_POOL_SIZE);\n+        }\n+\n@@ -218,2 +231,2 @@\n-                    + \" is over the size of the constant pool: \"\n-                    + (CONSTANT_POOL_SIZE - 1));\n+                    + \" is over the size limit of the constant pool: \"\n+                    + CONSTANT_POOL_SIZE);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ConstantPoolGen.java","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"}]}