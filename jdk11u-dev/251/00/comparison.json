{"files":[{"patch":"@@ -104,1 +104,1 @@\n-  return ref->obj_field_addr_raw<HeapWord>(referent_offset);\n+  return ref->obj_field_addr<HeapWord>(referent_offset);\n@@ -116,1 +116,1 @@\n-  return ref->obj_field_addr_raw<HeapWord>(next_offset);\n+  return ref->obj_field_addr<HeapWord>(next_offset);\n@@ -128,1 +128,1 @@\n-  return ref->obj_field_addr_raw<HeapWord>(discovered_offset);\n+  return ref->obj_field_addr<HeapWord>(discovered_offset);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -427,1 +427,1 @@\n-    q->init_mark_raw();\n+    q->init_mark();\n","filename":"src\/hotspot\/share\/gc\/cms\/compactibleFreeListSpace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1056,1 +1056,1 @@\n-  obj->set_mark_raw(m);\n+  obj->set_mark(m);\n@@ -7761,2 +7761,2 @@\n-    next = oop(cur->mark_raw());\n-    cur->set_mark_raw(proto);   \/\/ until proven otherwise\n+    next = oop(cur->mark());\n+    cur->set_mark(proto);   \/\/ until proven otherwise\n@@ -7845,2 +7845,2 @@\n-  for (; i > 1 && cur->mark_raw() != NULL; cur = oop(cur->mark_raw()), i--);\n-  if (cur->mark_raw() == NULL) {\n+  for (; i > 1 && cur->mark() != NULL; cur = oop(cur->mark()), i--);\n+  if (cur->mark() == NULL) {\n@@ -7856,3 +7856,3 @@\n-    assert(cur->mark_raw() != BUSY, \"Error\");\n-    oop suffix_head = cur->mark_raw(); \/\/ suffix will be put back on global list\n-    cur->set_mark_raw(NULL);           \/\/ break off suffix\n+    assert(cur->mark() != BUSY, \"Error\");\n+    oop suffix_head = cur->mark(); \/\/ suffix will be put back on global list\n+    cur->set_mark(NULL);           \/\/ break off suffix\n@@ -7878,1 +7878,1 @@\n-      for (cur = suffix_head; cur->mark_raw() != NULL; cur = (oop)(cur->mark_raw()));\n+      for (cur = suffix_head; cur->mark() != NULL; cur = (oop)(cur->mark()));\n@@ -7880,1 +7880,1 @@\n-      assert(suffix_tail != NULL && suffix_tail->mark_raw() == NULL,\n+      assert(suffix_tail != NULL && suffix_tail->mark() == NULL,\n@@ -7887,1 +7887,1 @@\n-          suffix_tail->set_mark_raw(markOop(cur_overflow_list));\n+          suffix_tail->set_mark(markOop(cur_overflow_list));\n@@ -7889,1 +7889,1 @@\n-          suffix_tail->set_mark_raw(NULL);\n+          suffix_tail->set_mark(NULL);\n@@ -7905,2 +7905,2 @@\n-    next = oop(cur->mark_raw());\n-    cur->set_mark_raw(proto);   \/\/ until proven otherwise\n+    next = oop(cur->mark());\n+    cur->set_mark(proto);   \/\/ until proven otherwise\n@@ -7924,1 +7924,1 @@\n-  p->set_mark_raw((markOop)_overflow_list);\n+  p->set_mark((markOop)_overflow_list);\n@@ -7938,1 +7938,1 @@\n-      p->set_mark_raw(markOop(cur_overflow_list));\n+      p->set_mark(markOop(cur_overflow_list));\n@@ -7940,1 +7940,1 @@\n-      p->set_mark_raw(NULL);\n+      p->set_mark(NULL);\n@@ -7965,1 +7965,1 @@\n-  assert(m == p->mark_raw(), \"Mark word changed\");\n+  assert(m == p->mark(), \"Mark word changed\");\n@@ -7972,1 +7972,1 @@\n-  markOop m = p->mark_raw();\n+  markOop m = p->mark();\n@@ -7979,1 +7979,1 @@\n-  markOop m = p->mark_raw();\n+  markOop m = p->mark();\n@@ -7987,1 +7987,1 @@\n-    \/\/ that m == p->mark_raw().\n+    \/\/ that m == p->mark().\n@@ -8020,1 +8020,1 @@\n-    assert(p->mark_raw() == markOopDesc::prototype(),\n+    assert(p->mark() == markOopDesc::prototype(),\n@@ -8023,1 +8023,1 @@\n-    p->set_mark_raw(m);\n+    p->set_mark(m);\n","filename":"src\/hotspot\/share\/gc\/cms\/concurrentMarkSweepGeneration.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -1102,1 +1102,1 @@\n-  dummyOld.set_mark_raw(m);\n+  dummyOld.set_mark(m);\n@@ -1150,1 +1150,1 @@\n-    new_obj->set_mark_raw(m);\n+    new_obj->set_mark(m);\n","filename":"src\/hotspot\/share\/gc\/cms\/parNewGeneration.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    markOop m = obj->mark_raw();\n+    markOop m = obj->mark();\n@@ -113,1 +113,1 @@\n-      markOop m = obj->mark_raw();\n+      markOop m = obj->mark();\n","filename":"src\/hotspot\/share\/gc\/cms\/parOopClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-  markOop mark = oop(trackOop)->mark_raw();\n+  markOop mark = oop(trackOop)->mark();\n@@ -236,1 +236,1 @@\n-    assert(junk->next_addr() == (void*)(oop(junk)->mark_addr_raw()),\n+    assert(junk->next_addr() == (void*)(oop(junk)->mark_addr()),\n","filename":"src\/hotspot\/share\/gc\/cms\/promotionInfo.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-      oop(curObj)->set_mark_raw(nextDisplacedHeader());\n+      oop(curObj)->set_mark(nextDisplacedHeader());\n@@ -60,1 +60,1 @@\n-      oop(curObj)->init_mark_raw();\n+      oop(curObj)->init_mark();\n","filename":"src\/hotspot\/share\/gc\/cms\/promotionInfo.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-          obj->init_mark_raw();\n+          obj->init_mark();\n@@ -74,1 +74,1 @@\n-  oop(destination)->init_mark_raw();\n+  oop(destination)->init_mark();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-      object->init_mark_raw();\n+      object->init_mark();\n@@ -119,3 +119,3 @@\n-      assert(object->mark_raw() == markOopDesc::prototype_for_object(object) || \/\/ Correct mark\n-             object->mark_raw()->must_be_preserved(object) || \/\/ Will be restored by PreservedMarksSet\n-             (UseBiasedLocking && object->has_bias_pattern_raw()), \/\/ Will be restored by BiasedLocking\n+      assert(object->mark() == markOopDesc::prototype_for_object(object) || \/\/ Correct mark\n+             object->mark()->must_be_preserved(object) || \/\/ Will be restored by PreservedMarksSet\n+             (UseBiasedLocking && object->has_bias_pattern()), \/\/ Will be restored by BiasedLocking\n@@ -123,1 +123,1 @@\n-             p2i(object), p2i(object->mark_raw()), p2i(markOopDesc::prototype_for_object(object)));\n+             p2i(object), p2i(object->mark()), p2i(markOopDesc::prototype_for_object(object)));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  markOop mark = obj->mark_raw();\n+  markOop mark = obj->mark();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,3 +79,3 @@\n-    assert(obj->mark_raw() == markOopDesc::prototype_for_object(obj) || \/\/ Correct mark\n-           obj->mark_raw()->must_be_preserved(obj) || \/\/ Will be restored by PreservedMarksSet\n-           (UseBiasedLocking && obj->has_bias_pattern_raw()), \/\/ Will be restored by BiasedLocking\n+    assert(obj->mark() == markOopDesc::prototype_for_object(obj) || \/\/ Correct mark\n+           obj->mark()->must_be_preserved(obj) || \/\/ Will be restored by PreservedMarksSet\n+           (UseBiasedLocking && obj->has_bias_pattern()), \/\/ Will be restored by BiasedLocking\n@@ -83,1 +83,1 @@\n-           p2i(obj), p2i(obj->mark_raw()), p2i(markOopDesc::prototype_for_object(obj)));\n+           p2i(obj), p2i(obj->mark()), p2i(markOopDesc::prototype_for_object(obj)));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCOopClosures.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-  Prefetch::write(obj->mark_addr_raw(), 0);\n-  Prefetch::read(obj->mark_addr_raw(), (HeapWordSize*2));\n+  Prefetch::write(obj->mark_addr(), 0);\n+  Prefetch::read(obj->mark_addr(), (HeapWordSize*2));\n@@ -252,1 +252,1 @@\n-    markOop m = obj->mark_raw();\n+    markOop m = obj->mark();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-        obj->set_mark_raw(old_mark);\n+        obj->set_mark(old_mark);\n@@ -285,1 +285,1 @@\n-        obj->set_mark_raw(old_mark->set_age(age));\n+        obj->set_mark(old_mark->set_age(age));\n@@ -289,1 +289,1 @@\n-      obj->set_mark_raw(old_mark);\n+      obj->set_mark(old_mark);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    markOop m = obj->mark_raw();\n+    markOop m = obj->mark();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-  T* const base = (T*)obj->base_raw();\n+  T* const base = (T*)obj->base();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,2 +116,2 @@\n-    assert(oop(q)->mark_raw()->is_marked() || oop(q)->mark_raw()->is_unlocked() ||\n-           oop(q)->mark_raw()->has_bias_pattern(),\n+    assert(oop(q)->mark()->is_marked() || oop(q)->mark()->is_unlocked() ||\n+           oop(q)->mark()->has_bias_pattern(),\n@@ -154,1 +154,1 @@\n-        oop(q)->init_mark_raw();\n+        oop(q)->init_mark();\n@@ -214,1 +214,1 @@\n-            oop(q)->init_mark_raw();\n+            oop(q)->init_mark();\n@@ -262,1 +262,1 @@\n-    oop(q)->set_mark_raw(oop(q)->mark_raw()->set_marked());\n+    oop(q)->set_mark(oop(q)->mark()->set_marked());\n@@ -353,1 +353,1 @@\n-      q = (HeapWord*) oop(_first_dead)->mark_raw()->decode_pointer();\n+      q = (HeapWord*) oop(_first_dead)->mark()->decode_pointer();\n@@ -364,1 +364,1 @@\n-      q = (HeapWord*) oop(q)->mark_raw()->decode_pointer();\n+      q = (HeapWord*) oop(q)->mark()->decode_pointer();\n@@ -380,1 +380,1 @@\n-      oop(compaction_top)->init_mark_raw();\n+      oop(compaction_top)->init_mark();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psMarkSweepDecorator.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-  filler_oop->set_mark_raw(markOopDesc::prototype());\n+  filler_oop->set_mark(markOopDesc::prototype());\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionLAB.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  markOop test_mark = o->mark_raw();\n+  markOop test_mark = o->mark();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -728,1 +728,1 @@\n-  _preserved_marks_set.get()->push_if_necessary(old, old->mark_raw());\n+  _preserved_marks_set.get()->push_if_necessary(old, old->mark());\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-    if (!obj->mark_raw()->is_marked()) {\n+    if (!obj->mark()->is_marked()) {\n@@ -150,1 +150,1 @@\n-  _obj->set_mark_raw(_mark);\n+  _obj->set_mark(_mark);\n@@ -207,1 +207,1 @@\n-    obj->set_mark_raw(mark);\n+    obj->set_mark(mark);\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-  markOop mark = obj->mark_raw();\n-  obj->set_mark_raw(markOopDesc::prototype()->set_marked());\n+  markOop mark = obj->mark();\n+  obj->set_mark(markOopDesc::prototype()->set_marked());\n@@ -53,1 +53,1 @@\n-    if (!obj->mark_raw()->is_marked()) {\n+    if (!obj->mark()->is_marked()) {\n@@ -82,1 +82,1 @@\n-    oop new_obj = oop(obj->mark_raw()->decode_pointer());\n+    oop new_obj = oop(obj->mark()->decode_pointer());\n@@ -85,2 +85,2 @@\n-           obj->mark_raw() == markOopDesc::prototype() || \/\/ not gc marked?\n-           (UseBiasedLocking && obj->mark_raw()->has_bias_pattern()),\n+           obj->mark() == markOopDesc::prototype() || \/\/ not gc marked?\n+           (UseBiasedLocking && obj->mark()->has_bias_pattern()),\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -46,16 +46,0 @@\n-\/\/ To enable runtime-resolution of GC barriers on primitives, please\n-\/\/ define SUPPORT_BARRIER_ON_PRIMITIVES.\n-#ifdef SUPPORT_BARRIER_ON_PRIMITIVES\n-#define ACCESS_PRIMITIVE_SUPPORT INTERNAL_BT_BARRIER_ON_PRIMITIVES\n-#else\n-#define ACCESS_PRIMITIVE_SUPPORT INTERNAL_EMPTY\n-#endif\n-\n-#ifdef SUPPORT_NOT_TO_SPACE_INVARIANT\n-#define ACCESS_TO_SPACE_INVARIANT_SUPPORT INTERNAL_EMPTY\n-#else\n-#define ACCESS_TO_SPACE_INVARIANT_SUPPORT INTERNAL_BT_TO_SPACE_INVARIANT\n-#endif\n-\n-#define BT_BUILDTIME_DECORATORS (ACCESS_PRIMITIVE_SUPPORT | ACCESS_TO_SPACE_INVARIANT_SUPPORT)\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSetConfig.hpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -400,1 +400,1 @@\n-    oopDesc::set_mark_raw(mem, _klass->prototype_header());\n+    oopDesc::set_mark(mem, _klass->prototype_header());\n@@ -403,1 +403,1 @@\n-    oopDesc::set_mark_raw(mem, markOopDesc::prototype());\n+    oopDesc::set_mark(mem, markOopDesc::prototype());\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  obj->init_mark_raw();\n+  obj->init_mark();\n@@ -83,1 +83,1 @@\n-  _o->set_mark_raw(_m);\n+  _o->set_mark(_m);\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -395,1 +395,1 @@\n-    q->init_mark_raw();\n+    q->init_mark();\n@@ -654,1 +654,1 @@\n-    t->set_mark_raw(markOopDesc::prototype());\n+    t->set_mark(markOopDesc::prototype());\n@@ -661,1 +661,1 @@\n-    obj->set_mark_raw(markOopDesc::prototype());\n+    obj->set_mark(markOopDesc::prototype());\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-      obj->set_mark_raw(obj->mark_raw()->set_marked());\n+      obj->set_mark(obj->mark()->set_marked());\n@@ -168,2 +168,2 @@\n-           oop(cur_obj)->mark_raw()->is_marked() || oop(cur_obj)->mark_raw()->is_unlocked() ||\n-           oop(cur_obj)->mark_raw()->has_bias_pattern(),\n+           oop(cur_obj)->mark()->is_marked() || oop(cur_obj)->mark()->is_unlocked() ||\n+           oop(cur_obj)->mark()->has_bias_pattern(),\n@@ -344,1 +344,1 @@\n-      oop(compaction_top)->init_mark_raw();\n+      oop(compaction_top)->init_mark();\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  markOop mark = obj->mark_raw();\n+  markOop mark = obj->mark();\n@@ -57,1 +57,1 @@\n-  markOop mark = obj->mark_raw();\n+  markOop mark = obj->mark();\n@@ -73,1 +73,1 @@\n-  return obj->mark_raw()->is_marked();\n+  return obj->mark()->is_marked();\n@@ -77,1 +77,1 @@\n-  markOop old_mark = obj->mark_raw();\n+  markOop old_mark = obj->mark();\n@@ -83,1 +83,1 @@\n-  markOop prev_mark = obj->cas_set_mark_raw(new_mark, old_mark);\n+  markOop prev_mark = obj->cas_set_mark(new_mark, old_mark, memory_order_conservative);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahForwarding.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -316,1 +316,1 @@\n-    _preserved_marks->push_if_necessary(p, p->mark_raw());\n+    _preserved_marks->push_if_necessary(p, p->mark());\n@@ -423,1 +423,1 @@\n-        _preserved_marks->get(0)->push_if_necessary(old_obj, old_obj->mark_raw());\n+        _preserved_marks->get(0)->push_if_necessary(old_obj, old_obj->mark());\n@@ -796,1 +796,1 @@\n-      new_obj->init_mark_raw();\n+      new_obj->init_mark();\n@@ -911,1 +911,1 @@\n-      new_obj->init_mark_raw();\n+      new_obj->init_mark();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkCompact.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -272,5 +272,0 @@\n-\n-  static oop resolve(oop obj) {\n-    verify_decorators<INTERNAL_EMPTY>();\n-    return AccessInternal::resolve<decorators>(obj);\n-  }\n","filename":"src\/hotspot\/share\/oops\/access.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -665,2 +665,1 @@\n-      return !HasDecorator<decorators, INTERNAL_BT_BARRIER_ON_PRIMITIVES>::value &&\n-             !HasDecorator<decorators, INTERNAL_VALUE_IS_OOP>::value;\n+      return !HasDecorator<decorators, INTERNAL_VALUE_IS_OOP>::value;\n@@ -962,15 +961,0 @@\n-\n-    template <DecoratorSet decorators>\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, INTERNAL_BT_TO_SPACE_INVARIANT>::value, oop>::type\n-    resolve(oop obj) {\n-      typedef RawAccessBarrier<decorators & RAW_DECORATOR_MASK> Raw;\n-      return Raw::resolve(obj);\n-    }\n-\n-    template <DecoratorSet decorators>\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, INTERNAL_BT_TO_SPACE_INVARIANT>::value, oop>::type\n-    resolve(oop obj) {\n-      return RuntimeDispatch<decorators, oop, BARRIER_RESOLVE>::resolve(obj);\n-    }\n@@ -1269,6 +1253,0 @@\n-  template <DecoratorSet decorators>\n-  inline oop resolve(oop obj) {\n-    const DecoratorSet expanded_decorators = DecoratorFixup<decorators>::value;\n-    return PreRuntimeDispatch::resolve<expanded_decorators>(obj);\n-  }\n-\n","filename":"src\/hotspot\/share\/oops\/accessBackend.hpp","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -363,1 +363,1 @@\n-  dst->init_mark_raw();\n+  dst->init_mark();\n","filename":"src\/hotspot\/share\/oops\/accessBackend.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,7 +55,0 @@\n-\/\/ == Internal build-time Decorators ==\n-\/\/ * INTERNAL_BT_BARRIER_ON_PRIMITIVES: This is set in the barrierSetConfig.hpp file.\n-\/\/ * INTERNAL_BT_TO_SPACE_INVARIANT: This is set in the barrierSetConfig.hpp file iff\n-\/\/   no GC is bundled in the build that is to-space invariant.\n-const DecoratorSet INTERNAL_BT_BARRIER_ON_PRIMITIVES = UCONST64(1) << 3;\n-const DecoratorSet INTERNAL_BT_TO_SPACE_INVARIANT    = UCONST64(1) << 4;\n-\n@@ -68,1 +61,1 @@\n-                                                       INTERNAL_BT_BARRIER_ON_PRIMITIVES | INTERNAL_RT_USE_COMPRESSED_OOPS;\n+                                                       INTERNAL_RT_USE_COMPRESSED_OOPS;\n@@ -234,1 +227,1 @@\n-    static const DecoratorSet value = barrier_strength_default | BT_BUILDTIME_DECORATORS;\n+    static const DecoratorSet value = barrier_strength_default;\n@@ -250,2 +243,1 @@\n-    DecoratorSet value = barrier_strength_default | BT_BUILDTIME_DECORATORS;\n-    return value;\n+    return barrier_strength_default;\n","filename":"src\/hotspot\/share\/oops\/accessDecorators.hpp","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -89,1 +89,0 @@\n-  inline void* base_raw(BasicType type) const; \/\/ GC barrier invariant\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,5 +32,0 @@\n-  oop resolved_obj = Access<>::resolve(as_oop());\n-  return arrayOop(resolved_obj)->base_raw(type);\n-}\n-\n-void* arrayOopDesc::base_raw(BasicType type) const {\n","filename":"src\/hotspot\/share\/oops\/arrayOop.inline.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  T* p         = (T*)obj->obj_field_addr_raw<T>(map->offset());\n+  T* p         = (T*)obj->obj_field_addr<T>(map->offset());\n@@ -69,1 +69,1 @@\n-  T* const start = (T*)obj->obj_field_addr_raw<T>(map->offset());\n+  T* const start = (T*)obj->obj_field_addr<T>(map->offset());\n@@ -80,1 +80,1 @@\n-  T* p   = (T*)obj->obj_field_addr_raw<T>(map->offset());\n+  T* p   = (T*)obj->obj_field_addr<T>(map->offset());\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  T* p         = (T*)a->base_raw();\n+  T* p         = (T*)a->base();\n@@ -55,1 +55,1 @@\n-  T* p   = (T*)a->base_raw();\n+  T* p   = (T*)a->base();\n@@ -104,2 +104,2 @@\n-  T* low = start == 0 ? cast_from_oop<T*>(a) : a->obj_at_addr_raw<T>(start);\n-  T* high = (T*)a->base_raw() + end;\n+  T* low = start == 0 ? cast_from_oop<T*>(a) : a->obj_at_addr<T>(start);\n+  T* high = (T*)a->base() + end;\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-  template <class T> T* obj_at_addr_raw(int index) const;\n@@ -85,1 +84,0 @@\n-  HeapWord* base_raw() const;\n","filename":"src\/hotspot\/share\/oops\/objArrayOop.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-inline HeapWord* objArrayOopDesc::base_raw() const { return (HeapWord*) arrayOopDesc::base_raw(T_OBJECT); }\n@@ -42,5 +41,0 @@\n-template <class T> T* objArrayOopDesc::obj_at_addr_raw(int index) const {\n-  assert(is_within_bounds(index), \"index %d out of bounds %d\", index, length());\n-  return &((T*)base_raw())[index];\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/objArrayOop.inline.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-  if (obj->mark_raw() != NULL) {\n+  if (obj->mark() != NULL) {\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,2 +67,1 @@\n-  inline markOop  mark_raw()      const;\n-  inline markOop* mark_addr_raw() const;\n+  inline markOop* mark_addr() const;\n@@ -71,2 +70,1 @@\n-  inline void set_mark_raw(volatile markOop m);\n-  static inline void set_mark_raw(HeapWord* mem, markOop m);\n+  static inline void set_mark(HeapWord* mem, markOop m);\n@@ -76,1 +74,1 @@\n-  inline markOop cas_set_mark_raw(markOop new_mark, markOop old_mark, atomic_memory_order order = memory_order_conservative);\n+  inline markOop cas_set_mark(markOop new_mark, markOop old_mark, atomic_memory_order order);\n@@ -81,1 +79,0 @@\n-  inline void init_mark_raw();\n@@ -132,2 +129,1 @@\n-  inline void* field_addr(int offset)     const;\n-  inline void* field_addr_raw(int offset) const;\n+  inline void* field_addr(int offset) const;\n@@ -136,1 +132,1 @@\n-  template <class T> inline T* obj_field_addr_raw(int offset) const;\n+  template <class T> inline T* obj_field_addr(int offset) const;\n@@ -248,1 +244,0 @@\n-  inline bool has_bias_pattern_raw() const;\n@@ -319,3 +314,3 @@\n-  inline bool    has_displaced_mark_raw() const;\n-  inline markOop displaced_mark_raw() const;\n-  inline void    set_displaced_mark_raw(markOop m);\n+  inline bool    has_displaced_mark() const;\n+  inline markOop displaced_mark() const;\n+  inline void    set_displaced_mark(markOop m);\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -50,5 +50,1 @@\n-markOop  oopDesc::mark_raw()  const {\n-  return _mark;\n-}\n-\n-markOop* oopDesc::mark_addr_raw() const {\n+markOop* oopDesc::mark_addr() const {\n@@ -62,5 +58,1 @@\n-void oopDesc::set_mark_raw(volatile markOop m) {\n-  _mark = m;\n-}\n-\n-void oopDesc::set_mark_raw(HeapWord* mem, markOop m) {\n+void oopDesc::set_mark(HeapWord* mem, markOop m) {\n@@ -78,1 +70,1 @@\n-markOop oopDesc::cas_set_mark_raw(markOop new_mark, markOop old_mark, atomic_memory_order order) {\n+markOop oopDesc::cas_set_mark(markOop new_mark, markOop old_mark, atomic_memory_order order) {\n@@ -86,4 +78,0 @@\n-void oopDesc::init_mark_raw() {\n-  set_mark_raw(markOopDesc::prototype_for_object(this));\n-}\n-\n@@ -281,2 +269,1 @@\n-void*    oopDesc::field_addr_raw(int offset)     const { return reinterpret_cast<void*>(cast_from_oop<intptr_t>(as_oop()) + offset); }\n-void*    oopDesc::field_addr(int offset)         const { return Access<>::resolve(as_oop())->field_addr_raw(offset); }\n+void*    oopDesc::field_addr(int offset)     const { return reinterpret_cast<void*>(cast_from_oop<intptr_t>(as_oop()) + offset); }\n@@ -285,1 +272,1 @@\n-T*       oopDesc::obj_field_addr_raw(int offset) const { return (T*) field_addr_raw(offset); }\n+T*       oopDesc::obj_field_addr(int offset) const { return (T*) field_addr(offset); }\n@@ -332,4 +319,0 @@\n-bool oopDesc::has_bias_pattern_raw() const {\n-  return mark_raw()->has_bias_pattern();\n-}\n-\n@@ -338,1 +321,1 @@\n-  return mark_raw()->is_marked();\n+  return mark()->is_marked();\n@@ -345,1 +328,1 @@\n-  return mark_raw()->is_marked();\n+  return mark()->is_marked();\n@@ -359,1 +342,1 @@\n-  set_mark_raw(m);\n+  set_mark(m);\n@@ -370,1 +353,1 @@\n-  return cas_set_mark_raw(m, compare, order) == compare;\n+  return cas_set_mark(m, compare, order) == compare;\n@@ -374,1 +357,1 @@\n-  markOop oldMark = mark_raw();\n+  markOop oldMark = mark();\n@@ -382,1 +365,1 @@\n-    curMark = cas_set_mark_raw(forwardPtrMark, oldMark, order);\n+    curMark = cas_set_mark(forwardPtrMark, oldMark, order);\n@@ -399,1 +382,1 @@\n-  return (oop) mark_raw()->decode_pointer();\n+  return (oop) mark()->decode_pointer();\n@@ -413,2 +396,2 @@\n-  if (has_displaced_mark_raw()) {\n-    return displaced_mark_raw()->age();\n+  if (has_displaced_mark()) {\n+    return displaced_mark()->age();\n@@ -416,1 +399,1 @@\n-    return mark_raw()->age();\n+    return mark()->age();\n@@ -422,2 +405,2 @@\n-  if (has_displaced_mark_raw()) {\n-    set_displaced_mark_raw(displaced_mark_raw()->incr_age());\n+  if (has_displaced_mark()) {\n+    set_displaced_mark(displaced_mark()->incr_age());\n@@ -425,1 +408,1 @@\n-    set_mark_raw(mark_raw()->incr_age());\n+    set_mark(mark()->incr_age());\n@@ -501,2 +484,2 @@\n-bool oopDesc::has_displaced_mark_raw() const {\n-  return mark_raw()->has_displaced_mark_helper();\n+bool oopDesc::has_displaced_mark() const {\n+  return mark()->has_displaced_mark_helper();\n@@ -505,2 +488,2 @@\n-markOop oopDesc::displaced_mark_raw() const {\n-  return mark_raw()->displaced_mark_helper();\n+markOop oopDesc::displaced_mark() const {\n+  return mark()->displaced_mark_helper();\n@@ -509,2 +492,2 @@\n-void oopDesc::set_displaced_mark_raw(markOop m) {\n-  mark_raw()->set_displaced_mark_helper(m);\n+void oopDesc::set_displaced_mark(markOop m) {\n+  mark()->set_displaced_mark_helper(m);\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":24,"deletions":41,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -113,2 +113,2 @@\n-      assert(p->field_addr_raw((jint)byte_offset) == ptr_plus_disp,\n-             \"raw [ptr+disp] must be consistent with oop::field_addr_raw\");\n+      assert(p->field_addr((jint)byte_offset) == ptr_plus_disp,\n+             \"raw [ptr+disp] must be consistent with oop::field_addr\");\n@@ -126,4 +126,0 @@\n-  if (p != NULL) {\n-    p = Access<>::resolve(p);\n-  }\n-\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  FakeOop() : _oop() { _oop.set_mark_raw(originalMark()); }\n+  FakeOop() : _oop() { _oop.set_mark(originalMark()); }\n@@ -45,2 +45,3 @@\n-  markOop mark() { return _oop.mark_raw(); }\n-  void set_mark(markOop m) { _oop.set_mark_raw(m); }\n+\n+  markOop mark() { return _oop.mark(); }\n+  void set_mark(markOop m) { _oop.set_mark(m); }\n@@ -49,1 +50,1 @@\n-    _oop.set_mark_raw(m);\n+    _oop.set_mark(m);\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_preservedMarks.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}