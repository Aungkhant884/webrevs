{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -36,1 +36,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se7\/html\/jvms-4.html#jvms-4.1-200-A\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se7\/html\/jvms-4.html#jvms-4.1-200-A\">\n@@ -214,1 +214,2 @@\n-   *  @see <a href='http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se9\/html\/jvms-4.html#jvms-4.1-200-E.1'>\n+   *\n+   *  @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se9\/html\/jvms-4.html#jvms-4.1-200-E.1\">\n@@ -216,1 +217,1 @@\n-   *  @see <a href='http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se9\/html\/jvms-4.html#jvms-4.5'>\n+   *  @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se9\/html\/jvms-4.html#jvms-4.5\">\n@@ -218,1 +219,1 @@\n-   *  @see <a href='http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se9\/html\/jvms-4.html#jvms-4.6'>\n+   *  @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se9\/html\/jvms-4.html#jvms-4.6\">\n@@ -220,1 +221,1 @@\n-   *  @see <a href='http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se9\/html\/jvms-4.html#jvms-4.7.6-300-D.1-D.1'>\n+   *  @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se9\/html\/jvms-4.html#jvms-4.7.6-300-D.1-D.1\">\n@@ -384,1 +385,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.7\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.7\">\n@@ -391,1 +392,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.4\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.4\">\n@@ -398,1 +399,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.4\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.4\">\n@@ -405,1 +406,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.5\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.5\">\n@@ -412,1 +413,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.5\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.5\">\n@@ -419,1 +420,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.1\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.1\">\n@@ -426,1 +427,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.2\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.2\">\n@@ -433,1 +434,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.3\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.3\">\n@@ -439,1 +440,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.2\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.2\">\n@@ -445,1 +446,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.2\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.2\">\n@@ -451,1 +452,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.6\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.6\">\n@@ -457,1 +458,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.8\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.8\">\n@@ -464,1 +465,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.9\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.9\">\n@@ -479,1 +480,1 @@\n-   * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.10\">\n+   * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.10\">\n@@ -549,1 +550,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.11-100-A\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.11-100-A\">\n@@ -567,2 +568,2 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.3-300-E\">\n-   * The Java Virtual Machine Specification, Java SE 8 Edition, page 104, chapter 4.7.3<\/a>\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.3-300-E\">\n+   * The Java Virtual Machine Specification, Java SE 8 Edition, page 104, chapter 4.7.<\/a>\n@@ -576,1 +577,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.3.2-150\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.3.2-150\">\n@@ -582,1 +583,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.nop\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.nop\">\n@@ -587,1 +588,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aconst_null\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aconst_null\">\n@@ -592,1 +593,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n@@ -597,1 +598,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n@@ -602,1 +603,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n@@ -607,1 +608,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n@@ -612,1 +613,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n@@ -617,1 +618,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n@@ -622,1 +623,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iconst_i\">\n@@ -627,1 +628,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lconst_l\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lconst_l\">\n@@ -632,1 +633,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lconst_l\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lconst_l\">\n@@ -637,1 +638,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fconst_f\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fconst_f\">\n@@ -642,1 +643,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fconst_f\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fconst_f\">\n@@ -647,1 +648,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fconst_f\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fconst_f\">\n@@ -652,1 +653,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dconst_d\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dconst_d\">\n@@ -657,1 +658,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dconst_d\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dconst_d\">\n@@ -662,1 +663,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.bipush\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.bipush\">\n@@ -667,1 +668,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.sipush\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.sipush\">\n@@ -672,1 +673,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ldc\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ldc\">\n@@ -677,1 +678,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ldc_w\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ldc_w\">\n@@ -682,1 +683,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ldc2_w\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ldc2_w\">\n@@ -687,1 +688,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload\">\n@@ -692,1 +693,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload\">\n@@ -697,1 +698,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload\">\n@@ -702,1 +703,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload\">\n@@ -707,1 +708,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload\">\n@@ -712,1 +713,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload_n\">\n@@ -717,1 +718,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload_n\">\n@@ -722,1 +723,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload_n\">\n@@ -727,1 +728,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iload_n\">\n@@ -732,1 +733,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload_n\">\n@@ -737,1 +738,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload_n\">\n@@ -742,1 +743,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload_n\">\n@@ -747,1 +748,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lload_n\">\n@@ -752,1 +753,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload_n\">\n@@ -757,1 +758,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload_n\">\n@@ -762,1 +763,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload_n\">\n@@ -767,1 +768,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fload_n\">\n@@ -772,1 +773,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload_n\">\n@@ -777,1 +778,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload_n\">\n@@ -782,1 +783,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload_n\">\n@@ -787,1 +788,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dload_n\">\n@@ -792,1 +793,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload_n\">\n@@ -797,1 +798,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload_n\">\n@@ -802,1 +803,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload_n\">\n@@ -807,1 +808,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aload_n\">\n@@ -812,1 +813,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iaload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iaload\">\n@@ -817,1 +818,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.laload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.laload\">\n@@ -822,1 +823,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.faload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.faload\">\n@@ -827,1 +828,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.daload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.daload\">\n@@ -832,1 +833,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aaload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aaload\">\n@@ -837,1 +838,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.baload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.baload\">\n@@ -842,1 +843,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.caload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.caload\">\n@@ -847,1 +848,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.saload\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.saload\">\n@@ -852,1 +853,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore\">\n@@ -857,1 +858,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore\">\n@@ -862,1 +863,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore\">\n@@ -867,1 +868,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore\">\n@@ -872,1 +873,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore\">\n@@ -877,1 +878,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore_n\">\n@@ -882,1 +883,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore_n\">\n@@ -887,1 +888,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore_n\">\n@@ -892,1 +893,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.istore_n\">\n@@ -897,1 +898,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore_n\">\n@@ -902,1 +903,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore_n\">\n@@ -907,1 +908,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore_n\">\n@@ -912,1 +913,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lstore_n\">\n@@ -917,1 +918,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore_n\">\n@@ -922,1 +923,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore_n\">\n@@ -927,1 +928,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore_n\">\n@@ -932,1 +933,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fstore_n\">\n@@ -937,1 +938,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore_n\">\n@@ -942,1 +943,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore_n\">\n@@ -947,1 +948,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore_n\">\n@@ -952,1 +953,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dstore_n\">\n@@ -957,1 +958,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore_n\">\n@@ -962,1 +963,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore_n\">\n@@ -967,1 +968,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore_n\">\n@@ -972,1 +973,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore_n\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.astore_n\">\n@@ -977,1 +978,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iastore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iastore\">\n@@ -982,1 +983,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lastore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lastore\">\n@@ -987,1 +988,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fastore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fastore\">\n@@ -992,1 +993,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dastore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dastore\">\n@@ -997,1 +998,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aastore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.aastore\">\n@@ -1002,1 +1003,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.bastore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.bastore\">\n@@ -1007,1 +1008,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.castore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.castore\">\n@@ -1012,1 +1013,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.sastore\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.sastore\">\n@@ -1017,1 +1018,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.pop\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.pop\">\n@@ -1022,1 +1023,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.pop2\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.pop2\">\n@@ -1027,1 +1028,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup\">\n@@ -1032,1 +1033,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup_x1\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup_x1\">\n@@ -1037,1 +1038,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup_x2\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup_x2\">\n@@ -1042,1 +1043,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup2\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup2\">\n@@ -1047,1 +1048,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup2_x1\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup2_x1\">\n@@ -1052,1 +1053,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup2_x2\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dup2_x2\">\n@@ -1057,1 +1058,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.swap\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.swap\">\n@@ -1062,1 +1063,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iadd\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iadd\">\n@@ -1067,1 +1068,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ladd\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ladd\">\n@@ -1072,1 +1073,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fadd\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fadd\">\n@@ -1077,1 +1078,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dadd\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dadd\">\n@@ -1082,1 +1083,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.isub\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.isub\">\n@@ -1087,1 +1088,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lsub\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lsub\">\n@@ -1092,1 +1093,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fsub\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fsub\">\n@@ -1097,1 +1098,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dsub\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dsub\">\n@@ -1102,1 +1103,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.imul\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.imul\">\n@@ -1107,1 +1108,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lmul\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lmul\">\n@@ -1112,1 +1113,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fmul\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fmul\">\n@@ -1117,1 +1118,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dmul\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dmul\">\n@@ -1122,1 +1123,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.idiv\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.idiv\">\n@@ -1127,1 +1128,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ldiv\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ldiv\">\n@@ -1132,1 +1133,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fdiv\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fdiv\">\n@@ -1137,1 +1138,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ddiv\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ddiv\">\n@@ -1142,1 +1143,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.irem\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.irem\">\n@@ -1147,1 +1148,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lrem\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lrem\">\n@@ -1152,1 +1153,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.frem\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.frem\">\n@@ -1157,1 +1158,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.drem\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.drem\">\n@@ -1162,1 +1163,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ineg\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ineg\">\n@@ -1167,1 +1168,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lneg\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lneg\">\n@@ -1172,1 +1173,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fneg\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fneg\">\n@@ -1177,1 +1178,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dneg\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dneg\">\n@@ -1182,1 +1183,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ishl\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ishl\">\n@@ -1187,1 +1188,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lshl\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lshl\">\n@@ -1192,1 +1193,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ishr\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ishr\">\n@@ -1197,1 +1198,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lshr\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lshr\">\n@@ -1202,1 +1203,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iushr\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iushr\">\n@@ -1207,1 +1208,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lushr\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lushr\">\n@@ -1212,1 +1213,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iand\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iand\">\n@@ -1217,1 +1218,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.land\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.land\">\n@@ -1222,1 +1223,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ior\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ior\">\n@@ -1227,1 +1228,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lor\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lor\">\n@@ -1232,1 +1233,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ixor\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ixor\">\n@@ -1237,1 +1238,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lxor\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lxor\">\n@@ -1242,1 +1243,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iinc\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iinc\">\n@@ -1247,1 +1248,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2l\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2l\">\n@@ -1252,1 +1253,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2f\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2f\">\n@@ -1257,1 +1258,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2d\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2d\">\n@@ -1262,1 +1263,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.l2i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.l2i\">\n@@ -1267,1 +1268,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.l2f\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.l2f\">\n@@ -1272,1 +1273,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.l2d\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.l2d\">\n@@ -1277,1 +1278,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.f2i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.f2i\">\n@@ -1282,1 +1283,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.f2l\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.f2l\">\n@@ -1287,1 +1288,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.f2d\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.f2d\">\n@@ -1292,1 +1293,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.d2i\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.d2i\">\n@@ -1297,1 +1298,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.d2l\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.d2l\">\n@@ -1302,1 +1303,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.d2f\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.d2f\">\n@@ -1307,1 +1308,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2b\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2b\">\n@@ -1312,1 +1313,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5\">\n@@ -1317,1 +1318,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2c\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2c\">\n@@ -1322,1 +1323,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5\">\n@@ -1327,1 +1328,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2s\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.i2s\">\n@@ -1332,1 +1333,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5\">\n@@ -1337,1 +1338,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lcmp\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lcmp\">\n@@ -1342,1 +1343,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fcmpl\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fcmpl\">\n@@ -1347,1 +1348,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fcmpg\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.fcmpg\">\n@@ -1352,1 +1353,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dcmpl\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dcmpl\">\n@@ -1357,1 +1358,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dcmpg\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dcmpg\">\n@@ -1362,1 +1363,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifeq\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifeq\">\n@@ -1367,1 +1368,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifne\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifne\">\n@@ -1372,1 +1373,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iflt\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.iflt\">\n@@ -1377,1 +1378,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifge\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifge\">\n@@ -1382,1 +1383,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifgt\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifgt\">\n@@ -1387,1 +1388,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifle\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifle\">\n@@ -1392,1 +1393,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n@@ -1397,1 +1398,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n@@ -1402,1 +1403,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n@@ -1407,1 +1408,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n@@ -1412,1 +1413,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n@@ -1417,1 +1418,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_icmp_cond\">\n@@ -1422,1 +1423,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_acmp_cond\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_acmp_cond\">\n@@ -1427,1 +1428,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_acmp_cond\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.if_acmp_cond\">\n@@ -1432,1 +1433,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.goto\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.goto\">\n@@ -1437,1 +1438,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.jsr\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.jsr\">\n@@ -1442,1 +1443,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ret\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ret\">\n@@ -1447,1 +1448,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.tableswitch\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.tableswitch\">\n@@ -1452,1 +1453,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lookupswitch\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lookupswitch\">\n@@ -1457,1 +1458,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ireturn\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ireturn\">\n@@ -1462,1 +1463,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lreturn\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.lreturn\">\n@@ -1467,1 +1468,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.freturn\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.freturn\">\n@@ -1472,1 +1473,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dreturn\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.dreturn\">\n@@ -1477,1 +1478,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.areturn\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.areturn\">\n@@ -1482,1 +1483,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.return\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.return\">\n@@ -1487,1 +1488,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.getstatic\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.getstatic\">\n@@ -1492,1 +1493,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.putstatic\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.putstatic\">\n@@ -1497,1 +1498,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.getfield\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.getfield\">\n@@ -1502,1 +1503,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.putfield\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.putfield\">\n@@ -1507,1 +1508,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokevirtual\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokevirtual\">\n@@ -1512,1 +1513,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokespecial\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokespecial\">\n@@ -1517,1 +1518,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5\">\n@@ -1522,1 +1523,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokestatic\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokestatic\">\n@@ -1527,1 +1528,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokeinterface\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokeinterface\">\n@@ -1532,1 +1533,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokedynamic\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokedynamic\">\n@@ -1537,1 +1538,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.new\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.new\">\n@@ -1542,1 +1543,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.newarray\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.newarray\">\n@@ -1547,1 +1548,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.anewarray\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.anewarray\">\n@@ -1552,1 +1553,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.arraylength\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.arraylength\">\n@@ -1557,1 +1558,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.athrow\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.athrow\">\n@@ -1562,1 +1563,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.checkcast\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.checkcast\">\n@@ -1567,1 +1568,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.instanceof\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.instanceof\">\n@@ -1572,1 +1573,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.monitorenter\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.monitorenter\">\n@@ -1577,1 +1578,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.monitorexit\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.monitorexit\">\n@@ -1582,1 +1583,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.wide\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.wide\">\n@@ -1587,1 +1588,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.multianewarray\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.multianewarray\">\n@@ -1592,1 +1593,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifnull\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifnull\">\n@@ -1597,1 +1598,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifnonnull\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.ifnonnull\">\n@@ -1602,1 +1603,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.goto_w\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.goto_w\">\n@@ -1607,1 +1608,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.jsr_w\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.jsr_w\">\n@@ -1612,1 +1613,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.2\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.2\">\n@@ -1619,1 +1620,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1626,1 +1627,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1633,1 +1634,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1640,1 +1641,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1647,1 +1648,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1654,1 +1655,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1661,1 +1662,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1668,1 +1669,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1675,1 +1676,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1682,1 +1683,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1689,1 +1690,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1696,1 +1697,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1703,1 +1704,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1710,1 +1711,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1717,1 +1718,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1724,1 +1725,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1731,1 +1732,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1738,1 +1739,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1745,1 +1746,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1752,1 +1753,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1759,1 +1760,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1766,1 +1767,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1773,1 +1774,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1780,1 +1781,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1787,1 +1788,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se5.0\/html\/ChangesAppendix.doc.html#448885\">\n@@ -1792,1 +1793,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.2\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.2\">\n@@ -1797,1 +1798,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.2\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.2\">\n@@ -1829,1 +1830,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n@@ -1834,1 +1835,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n@@ -1839,1 +1840,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n@@ -1844,1 +1845,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n@@ -1849,1 +1850,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n@@ -1854,1 +1855,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n@@ -1859,1 +1860,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n@@ -1864,1 +1865,1 @@\n-   * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n+   * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.9.1-120-P\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/Const.java","additions":268,"deletions":267,"binary":false,"changes":535,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -30,1 +30,2 @@\n-    \/** The mother of all exceptions\n+    \/**\n+     * The mother of all exceptions\n@@ -33,1 +34,3 @@\n-    \/** Super class of any run-time exception\n+\n+    \/**\n+     * Super class of any run-time exception\n@@ -36,1 +39,3 @@\n-    \/** Super class of any linking exception (aka Linkage Error)\n+\n+    \/**\n+     * Super class of any linking exception (aka Linkage Error)\n@@ -39,1 +44,3 @@\n-    \/** Linking Exceptions\n+\n+    \/**\n+     * Linking Exceptions\n@@ -55,1 +62,3 @@\n-    \/** Run-Time Exceptions\n+\n+    \/**\n+     * Run-Time Exceptions\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/ExceptionConst.java","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    private ElementValue default_value;\n+    private ElementValue defaultValue;\n@@ -47,1 +47,1 @@\n-        default_value = ElementValue.readElementValue(input, constant_pool);\n+        defaultValue = ElementValue.readElementValue(input, constant_pool);\n@@ -58,1 +58,1 @@\n-        this.default_value = defaultValue;\n+        this.defaultValue = defaultValue;\n@@ -77,1 +77,1 @@\n-        default_value = defaultValue;\n+        this.defaultValue = defaultValue;\n@@ -84,1 +84,1 @@\n-        return default_value;\n+        return defaultValue;\n@@ -95,1 +95,1 @@\n-        default_value.dump(dos);\n+        defaultValue.dump(dos);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/AnnotationDefault.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-                    throw new RuntimeException(\n+                    throw new IllegalArgumentException(\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/AnnotationElementValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,2 +40,2 @@\n-    private final int type_index;\n-    private final ConstantPool constant_pool;\n+    private final int typeIndex;\n+    private final ConstantPool constantPool;\n@@ -44,1 +44,1 @@\n-    private List<ElementValuePair> element_value_pairs;\n+    private List<ElementValuePair> elementValuePairs;\n@@ -50,1 +50,1 @@\n-     * @param constant_pool\n+     * @param constantPool\n@@ -59,1 +59,1 @@\n-        annotationEntry.element_value_pairs = new ArrayList<>();\n+        annotationEntry.elementValuePairs = new ArrayList<>();\n@@ -61,1 +61,1 @@\n-            annotationEntry.element_value_pairs.add(\n+            annotationEntry.elementValuePairs.add(\n@@ -69,2 +69,2 @@\n-        this.type_index = type_index;\n-        this.constant_pool = constant_pool;\n+        this.typeIndex = type_index;\n+        this.constantPool = constant_pool;\n@@ -75,1 +75,1 @@\n-        return type_index;\n+        return typeIndex;\n@@ -79,1 +79,1 @@\n-        return constant_pool;\n+        return constantPool;\n@@ -101,1 +101,1 @@\n-        final ConstantUtf8 c = (ConstantUtf8) constant_pool.getConstant(type_index, Const.CONSTANT_Utf8);\n+        final ConstantUtf8 c = (ConstantUtf8) constantPool.getConstant(typeIndex, Const.CONSTANT_Utf8);\n@@ -109,1 +109,1 @@\n-        return type_index;\n+        return typeIndex;\n@@ -116,1 +116,1 @@\n-        return element_value_pairs.size();\n+        return elementValuePairs.size();\n@@ -124,1 +124,1 @@\n-        return element_value_pairs.toArray(new ElementValuePair[element_value_pairs.size()]);\n+        return elementValuePairs.toArray(new ElementValuePair[elementValuePairs.size()]);\n@@ -128,2 +128,2 @@\n-        dos.writeShort(type_index); \/\/ u2 index of type name in cpool\n-        dos.writeShort(element_value_pairs.size()); \/\/ u2 element_value pair\n+        dos.writeShort(typeIndex); \/\/ u2 index of type name in cpool\n+        dos.writeShort(elementValuePairs.size()); \/\/ u2 element_value pair\n@@ -131,1 +131,1 @@\n-        for (final ElementValuePair envp : element_value_pairs) {\n+        for (final ElementValuePair envp : elementValuePairs) {\n@@ -137,1 +137,1 @@\n-        element_value_pairs.add(elementNameValuePair);\n+        elementValuePairs.add(elementNameValuePair);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/AnnotationEntry.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    private AnnotationEntry[] annotation_table;\n+    private AnnotationEntry[] annotationTable;\n@@ -49,1 +49,1 @@\n-        annotation_table = new AnnotationEntry[annotation_table_length];\n+        annotationTable = new AnnotationEntry[annotation_table_length];\n@@ -51,1 +51,1 @@\n-            annotation_table[i] = AnnotationEntry.read(input, constant_pool, isRuntimeVisible);\n+            annotationTable[i] = AnnotationEntry.read(input, constant_pool, isRuntimeVisible);\n@@ -56,2 +56,2 @@\n-     * @param annotation_type the subclass type of the annotation\n-     * @param name_index Index pointing to the name <em>Code<\/em>\n+     * @param annotationType the subclass type of the annotation\n+     * @param nameIndex Index pointing to the name <em>Code<\/em>\n@@ -59,2 +59,2 @@\n-     * @param annotation_table the actual annotations\n-     * @param constant_pool Array of constants\n+     * @param annotationTable the actual annotations\n+     * @param constantPool Array of constants\n@@ -62,4 +62,4 @@\n-    public Annotations(final byte annotation_type, final int name_index, final int length, final AnnotationEntry[] annotation_table,\n-            final ConstantPool constant_pool, final boolean isRuntimeVisible) {\n-        super(annotation_type, name_index, length, constant_pool);\n-        this.annotation_table = annotation_table;\n+    public Annotations(final byte annotationType, final int nameIndex, final int length, final AnnotationEntry[] annotationTable,\n+            final ConstantPool constantPool, final boolean isRuntimeVisible) {\n+        super(annotationType, nameIndex, length, constantPool);\n+        this.annotationTable = annotationTable;\n@@ -81,1 +81,1 @@\n-     * @param annotation_table the entries to set in this annotation\n+     * @param annotationTable the entries to set in this annotation\n@@ -83,2 +83,2 @@\n-    public final void setAnnotationTable(final AnnotationEntry[] annotation_table) {\n-        this.annotation_table = annotation_table;\n+    public final void setAnnotationTable(final AnnotationEntry[] annotationTable) {\n+        this.annotationTable = annotationTable;\n@@ -91,1 +91,1 @@\n-        return annotation_table;\n+        return annotationTable;\n@@ -98,1 +98,1 @@\n-        if (annotation_table == null) {\n+        if (annotationTable == null) {\n@@ -101,1 +101,1 @@\n-        return annotation_table.length;\n+        return annotationTable.length;\n@@ -109,1 +109,1 @@\n-        if (annotation_table == null) {\n+        if (annotationTable == null) {\n@@ -112,2 +112,2 @@\n-        dos.writeShort(annotation_table.length);\n-        for (final AnnotationEntry element : annotation_table) {\n+        dos.writeShort(annotationTable.length);\n+        for (final AnnotationEntry element : annotationTable) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/Annotations.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    private final ElementValue[] evalues;\n+    private final ElementValue[] elementValues;\n@@ -40,1 +40,1 @@\n-        for (int i = 0; i < evalues.length; i++)\n+        for (int i = 0; i < elementValues.length; i++)\n@@ -42,2 +42,2 @@\n-            sb.append(evalues[i]);\n-            if ((i + 1) < evalues.length) {\n+            sb.append(elementValues[i]);\n+            if ((i + 1) < elementValues.length) {\n@@ -55,1 +55,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalArgumentException(\n@@ -58,1 +58,1 @@\n-        this.evalues = datums;\n+        this.elementValues = datums;\n@@ -65,2 +65,2 @@\n-        dos.writeShort(evalues.length);\n-        for (final ElementValue evalue : evalues) {\n+        dos.writeShort(elementValues.length);\n+        for (final ElementValue evalue : elementValues) {\n@@ -76,1 +76,1 @@\n-        for (int i = 0; i < evalues.length; i++)\n+        for (int i = 0; i < elementValues.length; i++)\n@@ -78,2 +78,2 @@\n-            sb.append(evalues[i].stringifyValue());\n-            if ((i + 1) < evalues.length) {\n+            sb.append(elementValues[i].stringifyValue());\n+            if ((i + 1) < elementValues.length) {\n@@ -89,1 +89,1 @@\n-        return evalues;\n+        return elementValues;\n@@ -94,1 +94,1 @@\n-        return evalues.length;\n+        return elementValues.length;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ArrayElementValue.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/Attribute.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.23\">\n+ * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.23\">\n@@ -43,1 +43,1 @@\n-    private int bootstrap_method_ref;\n+    private int bootstrapMethodRef;\n@@ -46,1 +46,1 @@\n-    private int[] bootstrap_arguments;\n+    private int[] bootstrapArguments;\n@@ -65,2 +65,2 @@\n-        for (int i = 0; i < bootstrap_arguments.length; i++) {\n-            bootstrap_arguments[i] = input.readUnsignedShort();\n+        for (int i = 0; i < bootstrapArguments.length; i++) {\n+            bootstrapArguments[i] = input.readUnsignedShort();\n@@ -76,2 +76,2 @@\n-     * @param bootstrap_method_ref int index into constant_pool of CONSTANT_MethodHandle\n-     * @param bootstrap_arguments int[] indices into constant_pool of CONSTANT_[type]_info\n+     * @param bootstrapMethodRef int index into constant_pool of CONSTANT_MethodHandle\n+     * @param bootstrapArguments int[] indices into constant_pool of CONSTANT_[type]_info\n@@ -79,3 +79,3 @@\n-    public BootstrapMethod(final int bootstrap_method_ref, final int[] bootstrap_arguments) {\n-        this.bootstrap_method_ref = bootstrap_method_ref;\n-        this.bootstrap_arguments = bootstrap_arguments;\n+    public BootstrapMethod(final int bootstrapMethodRef, final int[] bootstrapArguments) {\n+        this.bootstrapMethodRef = bootstrapMethodRef;\n+        this.bootstrapArguments = bootstrapArguments;\n@@ -88,1 +88,1 @@\n-        return bootstrap_method_ref;\n+        return bootstrapMethodRef;\n@@ -92,1 +92,1 @@\n-     * @param bootstrap_method_ref int index into constant_pool of CONSTANT_MethodHandle\n+     * @param bootstrapMethodRef int index into constant_pool of CONSTANT_MethodHandle\n@@ -94,2 +94,2 @@\n-    public void setBootstrapMethodRef(final int bootstrap_method_ref) {\n-        this.bootstrap_method_ref = bootstrap_method_ref;\n+    public void setBootstrapMethodRef(final int bootstrapMethodRef) {\n+        this.bootstrapMethodRef = bootstrapMethodRef;\n@@ -102,1 +102,1 @@\n-        return bootstrap_arguments;\n+        return bootstrapArguments;\n@@ -109,1 +109,1 @@\n-        return bootstrap_arguments.length;\n+        return bootstrapArguments.length;\n@@ -113,1 +113,1 @@\n-     * @param bootstrap_arguments int[] indices into constant_pool of CONSTANT_[type]_info\n+     * @param bootstrapArguments int[] indices into constant_pool of CONSTANT_[type]_info\n@@ -115,2 +115,2 @@\n-    public void setBootstrapArguments(final int[] bootstrap_arguments) {\n-        this.bootstrap_arguments = bootstrap_arguments;\n+    public void setBootstrapArguments(final int[] bootstrapArguments) {\n+        this.bootstrapArguments = bootstrapArguments;\n@@ -124,2 +124,2 @@\n-        return \"BootstrapMethod(\" + bootstrap_method_ref + \", \" + bootstrap_arguments.length + \", \"\n-               + Arrays.toString(bootstrap_arguments) + \")\";\n+        return \"BootstrapMethod(\" + bootstrapMethodRef + \", \" + bootstrapArguments.length + \", \"\n+               + Arrays.toString(bootstrapArguments) + \")\";\n@@ -131,1 +131,1 @@\n-    public final String toString( final ConstantPool constant_pool ) {\n+    public final String toString( final ConstantPool constantPool ) {\n@@ -134,1 +134,1 @@\n-        bootstrap_method_name = constant_pool.constantToString(bootstrap_method_ref,\n+        bootstrap_method_name = constantPool.constantToString(bootstrapMethodRef,\n@@ -137,1 +137,1 @@\n-        final int num_bootstrap_arguments = bootstrap_arguments.length;\n+        final int num_bootstrap_arguments = bootstrapArguments.length;\n@@ -142,1 +142,1 @@\n-                buf.append(constant_pool.constantToString(constant_pool.getConstant(bootstrap_arguments[i])));\n+                buf.append(constantPool.constantToString(constantPool.getConstant(bootstrapArguments[i])));\n@@ -155,3 +155,3 @@\n-        file.writeShort(bootstrap_method_ref);\n-        file.writeShort(bootstrap_arguments.length);\n-        for (final int bootstrap_argument : bootstrap_arguments) {\n+        file.writeShort(bootstrapMethodRef);\n+        file.writeShort(bootstrapArguments.length);\n+        for (final int bootstrap_argument : bootstrapArguments) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/BootstrapMethod.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.23\">\n+ * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.23\">\n@@ -39,1 +39,1 @@\n-    private BootstrapMethod[] bootstrap_methods;  \/\/ TODO this could be made final (setter is not used)\n+    private BootstrapMethod[] bootstrapMethods;  \/\/ TODO this could be made final (setter is not used)\n@@ -53,1 +53,1 @@\n-     * @param bootstrap_methods array of bootstrap methods\n+     * @param bootstrapMethods array of bootstrap methods\n@@ -56,1 +56,1 @@\n-    public BootstrapMethods(final int name_index, final int length, final BootstrapMethod[] bootstrap_methods, final ConstantPool constant_pool) {\n+    public BootstrapMethods(final int name_index, final int length, final BootstrapMethod[] bootstrapMethods, final ConstantPool constant_pool) {\n@@ -58,1 +58,1 @@\n-        this.bootstrap_methods = bootstrap_methods;\n+        this.bootstrapMethods = bootstrapMethods;\n@@ -74,1 +74,1 @@\n-        bootstrap_methods = new BootstrapMethod[num_bootstrap_methods];\n+        bootstrapMethods = new BootstrapMethod[num_bootstrap_methods];\n@@ -76,1 +76,1 @@\n-            bootstrap_methods[i] = new BootstrapMethod(input);\n+            bootstrapMethods[i] = new BootstrapMethod(input);\n@@ -84,1 +84,1 @@\n-        return bootstrap_methods;\n+        return bootstrapMethods;\n@@ -88,1 +88,1 @@\n-     * @param bootstrap_methods the array of bootstrap methods\n+     * @param bootstrapMethods the array of bootstrap methods\n@@ -90,2 +90,2 @@\n-    public final void setBootstrapMethods(final BootstrapMethod[] bootstrap_methods) {\n-        this.bootstrap_methods = bootstrap_methods;\n+    public final void setBootstrapMethods(final BootstrapMethod[] bootstrapMethods) {\n+        this.bootstrapMethods = bootstrapMethods;\n@@ -108,1 +108,1 @@\n-        c.bootstrap_methods = new BootstrapMethod[bootstrap_methods.length];\n+        c.bootstrapMethods = new BootstrapMethod[bootstrapMethods.length];\n@@ -110,2 +110,2 @@\n-        for (int i = 0; i < bootstrap_methods.length; i++) {\n-            c.bootstrap_methods[i] = bootstrap_methods[i].copy();\n+        for (int i = 0; i < bootstrapMethods.length; i++) {\n+            c.bootstrapMethods[i] = bootstrapMethods[i].copy();\n@@ -127,2 +127,2 @@\n-        file.writeShort(bootstrap_methods.length);\n-        for (final BootstrapMethod bootstrap_method : bootstrap_methods) {\n+        file.writeShort(bootstrapMethods.length);\n+        for (final BootstrapMethod bootstrap_method : bootstrapMethods) {\n@@ -140,1 +140,1 @@\n-        buf.append(bootstrap_methods.length);\n+        buf.append(bootstrapMethods.length);\n@@ -142,1 +142,1 @@\n-        for (int i = 0; i < bootstrap_methods.length; i++) {\n+        for (int i = 0; i < bootstrapMethods.length; i++) {\n@@ -147,1 +147,1 @@\n-            final String[] lines = (bootstrap_methods[i].toString(super.getConstantPool())).split(\"\\\\r?\\\\n\");\n+            final String[] lines = (bootstrapMethods[i].toString(super.getConstantPool())).split(\"\\\\r?\\\\n\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/BootstrapMethods.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -51,4 +51,4 @@\n-    private final String file_name;\n-    private String zip_file;\n-    private int class_name_index;\n-    private int superclass_name_index;\n+    private final String fileName;\n+    private String zipFile;\n+    private int classNameIndex;\n+    private int superclassNameIndex;\n@@ -57,1 +57,1 @@\n-    private int access_flags; \/\/ Access rights of parsed class\n+    private int accessFlags; \/\/ Access rights of parsed class\n@@ -59,1 +59,1 @@\n-    private ConstantPool constant_pool; \/\/ collection of constants\n+    private ConstantPool constantPool; \/\/ collection of constants\n@@ -63,1 +63,1 @@\n-    private final boolean is_zip; \/\/ Loaded from zip file\n+    private final boolean isZip; \/\/ Loaded from zip file\n@@ -71,1 +71,1 @@\n-     * @param file_name File name\n+     * @param fileName File name\n@@ -73,2 +73,2 @@\n-    public ClassParser(final InputStream inputStream, final String file_name) {\n-        this.file_name = file_name;\n+    public ClassParser(final InputStream inputStream, final String fileName) {\n+        this.fileName = fileName;\n@@ -77,1 +77,1 @@\n-        is_zip = clazz.startsWith(\"java.util.zip.\") || clazz.startsWith(\"java.util.jar.\");\n+        isZip = clazz.startsWith(\"java.util.zip.\") || clazz.startsWith(\"java.util.jar.\");\n@@ -88,1 +88,1 @@\n-     * @param file_name file name\n+     * @param fileName file name\n@@ -90,3 +90,3 @@\n-    public ClassParser(final String file_name) {\n-        is_zip = false;\n-        this.file_name = file_name;\n+    public ClassParser(final String fileName) {\n+        isZip = false;\n+        this.fileName = fileName;\n@@ -99,2 +99,2 @@\n-     * @param zip_file zip file name\n-     * @param file_name file name\n+     * @param zipFile zip file name\n+     * @param fileName file name\n@@ -102,2 +102,2 @@\n-    public ClassParser(final String zip_file, final String file_name) {\n-        is_zip = true;\n+    public ClassParser(final String zipFile, final String fileName) {\n+        isZip = true;\n@@ -105,2 +105,2 @@\n-        this.zip_file = zip_file;\n-        this.file_name = file_name;\n+        this.zipFile = zipFile;\n+        this.fileName = fileName;\n@@ -125,3 +125,3 @@\n-                if (is_zip) {\n-                    zip = new ZipFile(zip_file);\n-                    final ZipEntry entry = zip.getEntry(file_name);\n+                if (isZip) {\n+                    zip = new ZipFile(zipFile);\n+                    final ZipEntry entry = zip.getEntry(fileName);\n@@ -130,1 +130,1 @@\n-                        throw new IOException(\"File \" + file_name + \" not found\");\n+                        throw new IOException(\"File \" + fileName + \" not found\");\n@@ -137,1 +137,1 @@\n-                            file_name), BUFSIZE));\n+                            fileName), BUFSIZE));\n@@ -168,2 +168,2 @@\n-            \/\/        if(!(is_zip && (buf.length == 1))) {\n-            \/\/      System.err.println(\"WARNING: Trailing garbage at end of \" + file_name);\n+            \/\/        if(!(isZip && (buf.length == 1))) {\n+            \/\/      System.err.println(\"WARNING: Trailing garbage at end of \" + fileName);\n@@ -193,2 +193,2 @@\n-        return new JavaClass(class_name_index, superclass_name_index, file_name, major, minor,\n-                access_flags, constant_pool, interfaces, fields, methods, attributes, is_zip\n+        return new JavaClass(classNameIndex, superclassNameIndex, fileName, major, minor,\n+                accessFlags, constantPool, interfaces, fields, methods, attributes, isZip\n@@ -209,1 +209,1 @@\n-            attributes[i] = Attribute.readAttribute(dataInputStream, constant_pool);\n+            attributes[i] = Attribute.readAttribute(dataInputStream, constantPool);\n@@ -220,1 +220,1 @@\n-        access_flags = dataInputStream.readUnsignedShort();\n+        accessFlags = dataInputStream.readUnsignedShort();\n@@ -224,2 +224,2 @@\n-        if ((access_flags & Const.ACC_INTERFACE) != 0) {\n-            access_flags |= Const.ACC_ABSTRACT;\n+        if ((accessFlags & Const.ACC_INTERFACE) != 0) {\n+            accessFlags |= Const.ACC_ABSTRACT;\n@@ -227,3 +227,3 @@\n-        if (((access_flags & Const.ACC_ABSTRACT) != 0)\n-                && ((access_flags & Const.ACC_FINAL) != 0)) {\n-            throw new ClassFormatException(\"Class \" + file_name + \" can't be both final and abstract\");\n+        if (((accessFlags & Const.ACC_ABSTRACT) != 0)\n+                && ((accessFlags & Const.ACC_FINAL) != 0)) {\n+            throw new ClassFormatException(\"Class \" + fileName + \" can't be both final and abstract\");\n@@ -231,2 +231,2 @@\n-        class_name_index = dataInputStream.readUnsignedShort();\n-        superclass_name_index = dataInputStream.readUnsignedShort();\n+        classNameIndex = dataInputStream.readUnsignedShort();\n+        superclassNameIndex = dataInputStream.readUnsignedShort();\n@@ -242,1 +242,1 @@\n-        constant_pool = new ConstantPool(dataInputStream);\n+        constantPool = new ConstantPool(dataInputStream);\n@@ -255,1 +255,1 @@\n-            fields[i] = new Field(dataInputStream, constant_pool);\n+            fields[i] = new Field(dataInputStream, constantPool);\n@@ -269,1 +269,1 @@\n-            throw new ClassFormatException(file_name + \" is not a Java .class file\");\n+            throw new ClassFormatException(fileName + \" is not a Java .class file\");\n@@ -297,1 +297,1 @@\n-            methods[i] = new Method(dataInputStream, constant_pool);\n+            methods[i] = new Method(dataInputStream, constantPool);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ClassParser.java","additions":43,"deletions":43,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-    private int max_stack; \/\/ Maximum size of stack used by this method  \/\/ TODO this could be made final (setter is not used)\n-    private int max_locals; \/\/ Number of local variables  \/\/ TODO this could be made final (setter is not used)\n+    private int maxStack; \/\/ Maximum size of stack used by this method  \/\/ TODO this could be made final (setter is not used)\n+    private int maxLocals; \/\/ Number of local variables  \/\/ TODO this could be made final (setter is not used)\n@@ -52,1 +52,1 @@\n-    private CodeException[] exception_table; \/\/ Table of handled exceptions\n+    private CodeException[] exceptionTable; \/\/ Table of handled exceptions\n@@ -84,1 +84,1 @@\n-        exception_table = new CodeException[exception_table_length];\n+        exceptionTable = new CodeException[exception_table_length];\n@@ -86,1 +86,1 @@\n-            exception_table[i] = new CodeException(file);\n+            exceptionTable[i] = new CodeException(file);\n@@ -107,2 +107,2 @@\n-     * @param max_stack Maximum size of stack\n-     * @param max_locals Number of local variables\n+     * @param maxStack Maximum size of stack\n+     * @param maxLocals Number of local variables\n@@ -110,1 +110,1 @@\n-     * @param exception_table Table of handled exceptions\n+     * @param exceptionTable of handled exceptions\n@@ -114,2 +114,2 @@\n-    public Code(final int name_index, final int length, final int max_stack, final int max_locals, final byte[] code,\n-            final CodeException[] exception_table, final Attribute[] attributes, final ConstantPool constant_pool) {\n+    public Code(final int name_index, final int length, final int maxStack, final int maxLocals, final byte[] code,\n+            final CodeException[] exceptionTable, final Attribute[] attributes, final ConstantPool constant_pool) {\n@@ -117,2 +117,2 @@\n-        this.max_stack = max_stack;\n-        this.max_locals = max_locals;\n+        this.maxStack = maxStack;\n+        this.maxLocals = maxLocals;\n@@ -120,1 +120,1 @@\n-        this.exception_table = exception_table != null ? exception_table : new CodeException[0];\n+        this.exceptionTable = exceptionTable != null ? exceptionTable : new CodeException[0];\n@@ -148,2 +148,2 @@\n-        file.writeShort(max_stack);\n-        file.writeShort(max_locals);\n+        file.writeShort(maxStack);\n+        file.writeShort(maxLocals);\n@@ -152,2 +152,2 @@\n-        file.writeShort(exception_table.length);\n-        for (final CodeException exception : exception_table) {\n+        file.writeShort(exceptionTable.length);\n+        for (final CodeException exception : exceptionTable) {\n@@ -211,1 +211,1 @@\n-        return exception_table;\n+        return exceptionTable;\n@@ -219,1 +219,1 @@\n-        return max_locals;\n+        return maxLocals;\n@@ -227,1 +227,1 @@\n-        return max_stack;\n+        return maxStack;\n@@ -236,1 +236,1 @@\n-        return 2 \/*max_stack*\/+ 2 \/*max_locals*\/+ 4 \/*code length*\/\n+        return 2 \/*maxStack*\/+ 2 \/*maxLocals*\/+ 4 \/*code length*\/\n@@ -239,1 +239,1 @@\n-                + 8 * (exception_table == null ? 0 : exception_table.length) \/* exception table *\/\n+                + 8 * (exceptionTable == null ? 0 : exceptionTable.length) \/* exception table *\/\n@@ -278,1 +278,1 @@\n-     * @param exception_table exception table\n+     * @param exceptionTable exception table\n@@ -280,2 +280,2 @@\n-    public void setExceptionTable( final CodeException[] exception_table ) {\n-        this.exception_table = exception_table != null ? exception_table : new CodeException[0];\n+    public void setExceptionTable( final CodeException[] exceptionTable ) {\n+        this.exceptionTable = exceptionTable != null ? exceptionTable : new CodeException[0];\n@@ -287,1 +287,1 @@\n-     * @param max_locals maximum number of local variables\n+     * @param maxLocals maximum number of local variables\n@@ -289,2 +289,2 @@\n-    public void setMaxLocals( final int max_locals ) {\n-        this.max_locals = max_locals;\n+    public void setMaxLocals( final int maxLocals ) {\n+        this.maxLocals = maxLocals;\n@@ -295,1 +295,1 @@\n-     * @param max_stack maximum stack size\n+     * @param maxStack maximum stack size\n@@ -297,2 +297,2 @@\n-    public void setMaxStack( final int max_stack ) {\n-        this.max_stack = max_stack;\n+    public void setMaxStack( final int maxStack ) {\n+        this.maxStack = maxStack;\n@@ -307,2 +307,2 @@\n-        buf.append(\"Code(max_stack = \").append(max_stack).append(\", max_locals = \").append(\n-                max_locals).append(\", code_length = \").append(code.length).append(\")\\n\").append(\n+        buf.append(\"Code(maxStack = \").append(maxStack).append(\", maxLocals = \").append(\n+                maxLocals).append(\", code_length = \").append(code.length).append(\")\\n\").append(\n@@ -310,1 +310,1 @@\n-        if (exception_table.length > 0) {\n+        if (exceptionTable.length > 0) {\n@@ -312,1 +312,1 @@\n-            for (final CodeException exception : exception_table) {\n+            for (final CodeException exception : exceptionTable) {\n@@ -319,0 +319,1 @@\n+                buf.append(\"\\n\").append(attribute.getName()).append(\":\");\n@@ -348,3 +349,3 @@\n-        c.exception_table = new CodeException[exception_table.length];\n-        for (int i = 0; i < exception_table.length; i++) {\n-            c.exception_table[i] = exception_table[i].copy();\n+        c.exceptionTable = new CodeException[exceptionTable.length];\n+        for (int i = 0; i < exceptionTable.length; i++) {\n+            c.exceptionTable[i] = exceptionTable[i].copy();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/Code.java","additions":39,"deletions":38,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -39,3 +39,3 @@\n-    private int start_pc; \/\/ Range in the code the exception handler is\n-    private int end_pc; \/\/ active. start_pc is inclusive, end_pc exclusive\n-    private int handler_pc; \/* Starting address of exception handler, i.e.,\n+    private int startPc; \/\/ Range in the code the exception handler is\n+    private int endPc; \/\/ active. startPc is inclusive, endPc exclusive\n+    private int handlerPc; \/* Starting address of exception handler, i.e.,\n@@ -44,1 +44,1 @@\n-    private int catch_type; \/* If this is zero the handler catches any\n+    private int catchType; \/* If this is zero the handler catches any\n@@ -70,4 +70,4 @@\n-     * @param start_pc Range in the code the exception handler is active,\n-     * start_pc is inclusive while\n-     * @param end_pc is exclusive\n-     * @param handler_pc Starting address of exception handler, i.e.,\n+     * @param startPc Range in the code the exception handler is active,\n+     * startPc is inclusive while\n+     * @param endPc is exclusive\n+     * @param handlerPc Starting address of exception handler, i.e.,\n@@ -75,1 +75,1 @@\n-     * @param catch_type If zero the handler catches any\n+     * @param catchType If zero the handler catches any\n@@ -79,5 +79,5 @@\n-    public CodeException(final int start_pc, final int end_pc, final int handler_pc, final int catch_type) {\n-        this.start_pc = start_pc;\n-        this.end_pc = end_pc;\n-        this.handler_pc = handler_pc;\n-        this.catch_type = catch_type;\n+    public CodeException(final int startPc, final int endPc, final int handlerPc, final int catchType) {\n+        this.startPc = startPc;\n+        this.endPc = endPc;\n+        this.handlerPc = handlerPc;\n+        this.catchType = catchType;\n@@ -107,4 +107,4 @@\n-        file.writeShort(start_pc);\n-        file.writeShort(end_pc);\n-        file.writeShort(handler_pc);\n-        file.writeShort(catch_type);\n+        file.writeShort(startPc);\n+        file.writeShort(endPc);\n+        file.writeShort(handlerPc);\n+        file.writeShort(catchType);\n@@ -119,1 +119,1 @@\n-        return catch_type;\n+        return catchType;\n@@ -127,1 +127,1 @@\n-        return end_pc;\n+        return endPc;\n@@ -135,1 +135,1 @@\n-        return handler_pc;\n+        return handlerPc;\n@@ -143,1 +143,1 @@\n-        return start_pc;\n+        return startPc;\n@@ -148,1 +148,1 @@\n-     * @param catch_type the type of exception that is caught\n+     * @param catchType the type of exception that is caught\n@@ -150,2 +150,2 @@\n-    public void setCatchType( final int catch_type ) {\n-        this.catch_type = catch_type;\n+    public void setCatchType( final int catchType ) {\n+        this.catchType = catchType;\n@@ -156,1 +156,1 @@\n-     * @param end_pc end of handled block\n+     * @param endPc end of handled block\n@@ -158,2 +158,2 @@\n-    public void setEndPC( final int end_pc ) {\n-        this.end_pc = end_pc;\n+    public void setEndPC( final int endPc ) {\n+        this.endPc = endPc;\n@@ -164,1 +164,1 @@\n-     * @param handler_pc where the actual code is\n+     * @param handlerPc where the actual code is\n@@ -166,2 +166,2 @@\n-    public void setHandlerPC( final int handler_pc ) { \/\/ TODO unused\n-        this.handler_pc = handler_pc;\n+    public void setHandlerPC( final int handlerPc ) { \/\/ TODO unused\n+        this.handlerPc = handlerPc;\n@@ -172,1 +172,1 @@\n-     * @param start_pc start of handled block\n+     * @param startPc start of handled block\n@@ -174,2 +174,2 @@\n-    public void setStartPC( final int start_pc ) { \/\/ TODO unused\n-        this.start_pc = start_pc;\n+    public void setStartPC( final int startPc ) { \/\/ TODO unused\n+        this.startPc = startPc;\n@@ -184,2 +184,2 @@\n-        return \"CodeException(start_pc = \" + start_pc + \", end_pc = \" + end_pc + \", handler_pc = \"\n-                + handler_pc + \", catch_type = \" + catch_type + \")\";\n+        return \"CodeException(startPc = \" + startPc + \", endPc = \" + endPc + \", handlerPc = \"\n+                + handlerPc + \", catchType = \" + catchType + \")\";\n@@ -194,1 +194,1 @@\n-        if (catch_type == 0) {\n+        if (catchType == 0) {\n@@ -197,2 +197,2 @@\n-            str = Utility.compactClassName(cp.getConstantString(catch_type, Const.CONSTANT_Class), false)\n-                    + (verbose ? \"(\" + catch_type + \")\" : \"\");\n+            str = Utility.compactClassName(cp.getConstantString(catchType, Const.CONSTANT_Class), false)\n+                    + (verbose ? \"(\" + catchType + \")\" : \"\");\n@@ -200,1 +200,1 @@\n-        return start_pc + \"\\t\" + end_pc + \"\\t\" + handler_pc + \"\\t\" + str;\n+        return startPc + \"\\t\" + endPc + \"\\t\" + handlerPc + \"\\t\" + str;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/CodeException.java","additions":42,"deletions":42,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/Constant.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    private int name_index; \/\/ Identical to ConstantString except for the name\n+    private int nameIndex; \/\/ Identical to ConstantString except for the name\n@@ -61,1 +61,1 @@\n-     * @param name_index Name index in constant pool.  Should refer to a\n+     * @param nameIndex Name index in constant pool.  Should refer to a\n@@ -64,1 +64,1 @@\n-    public ConstantClass(final int name_index) {\n+    public ConstantClass(final int nameIndex) {\n@@ -66,1 +66,1 @@\n-        this.name_index = name_index;\n+        this.nameIndex = nameIndex;\n@@ -92,1 +92,1 @@\n-        file.writeShort(name_index);\n+        file.writeShort(nameIndex);\n@@ -100,1 +100,1 @@\n-        return name_index;\n+        return nameIndex;\n@@ -105,1 +105,1 @@\n-     * @param name_index the name index in the constant pool of this Constant Class\n+     * @param nameIndex the name index in the constant pool of this Constant Class\n@@ -107,2 +107,2 @@\n-    public void setNameIndex( final int name_index ) {\n-        this.name_index = name_index;\n+    public void setNameIndex( final int nameIndex ) {\n+        this.nameIndex = nameIndex;\n@@ -116,1 +116,1 @@\n-        final Constant c = cp.getConstant(name_index, Const.CONSTANT_Utf8);\n+        final Constant c = cp.getConstant(nameIndex, Const.CONSTANT_Utf8);\n@@ -133,1 +133,1 @@\n-        return super.toString() + \"(name_index = \" + name_index + \")\";\n+        return super.toString() + \"(nameIndex = \" + nameIndex + \")\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantClass.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @see  <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.10\">\n+ * @see  <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.4.10\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantInvokeDynamic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-    private int reference_kind;\n-    private int reference_index;\n+    private int referenceKind;\n+    private int referenceIndex;\n@@ -64,2 +64,2 @@\n-        this.reference_kind = reference_kind;\n-        this.reference_index = reference_index;\n+        this.referenceKind = reference_kind;\n+        this.referenceIndex = reference_index;\n@@ -91,2 +91,2 @@\n-        file.writeByte(reference_kind);\n-        file.writeShort(reference_index);\n+        file.writeByte(referenceKind);\n+        file.writeShort(referenceIndex);\n@@ -97,1 +97,1 @@\n-        return reference_kind;\n+        return referenceKind;\n@@ -102,1 +102,1 @@\n-        this.reference_kind = reference_kind;\n+        this.referenceKind = reference_kind;\n@@ -107,1 +107,1 @@\n-        return reference_index;\n+        return referenceIndex;\n@@ -112,1 +112,1 @@\n-        this.reference_index = reference_index;\n+        this.referenceIndex = reference_index;\n@@ -121,2 +121,2 @@\n-        return super.toString() + \"(reference_kind = \" + reference_kind +\n-                \", reference_index = \" + reference_index + \")\";\n+        return super.toString() + \"(referenceKind = \" + referenceKind +\n+                \", referenceIndex = \" + referenceIndex + \")\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantMethodHandle.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private int descriptor_index;\n+    private int descriptorIndex;\n@@ -63,1 +63,1 @@\n-        this.descriptor_index = descriptor_index;\n+        this.descriptorIndex = descriptor_index;\n@@ -89,1 +89,1 @@\n-        file.writeShort(descriptor_index);\n+        file.writeShort(descriptorIndex);\n@@ -94,1 +94,1 @@\n-        return descriptor_index;\n+        return descriptorIndex;\n@@ -99,1 +99,1 @@\n-        this.descriptor_index = descriptor_index;\n+        this.descriptorIndex = descriptor_index;\n@@ -108,1 +108,1 @@\n-        return super.toString() + \"(descriptor_index = \" + descriptor_index + \")\";\n+        return super.toString() + \"(descriptorIndex = \" + descriptorIndex + \")\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantMethodType.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    private int name_index;\n+    private int nameIndex;\n@@ -64,1 +64,1 @@\n-     * @param name_index Name index in constant pool.  Should refer to a\n+     * @param nameIndex Name index in constant pool.  Should refer to a\n@@ -67,1 +67,1 @@\n-    public ConstantModule(final int name_index) {\n+    public ConstantModule(final int nameIndex) {\n@@ -69,1 +69,1 @@\n-        this.name_index = name_index;\n+        this.nameIndex = nameIndex;\n@@ -95,1 +95,1 @@\n-        file.writeShort(name_index);\n+        file.writeShort(nameIndex);\n@@ -103,1 +103,1 @@\n-        return name_index;\n+        return nameIndex;\n@@ -108,1 +108,1 @@\n-     * @param name_index the name index in the constant pool of this Constant Module\n+     * @param nameIndex the name index in the constant pool of this Constant Module\n@@ -110,2 +110,2 @@\n-    public void setNameIndex( final int name_index ) {\n-        this.name_index = name_index;\n+    public void setNameIndex( final int nameIndex ) {\n+        this.nameIndex = nameIndex;\n@@ -119,1 +119,1 @@\n-        final Constant c = cp.getConstant(name_index, Const.CONSTANT_Utf8);\n+        final Constant c = cp.getConstant(nameIndex, Const.CONSTANT_Utf8);\n@@ -136,1 +136,1 @@\n-        return super.toString() + \"(name_index = \" + name_index + \")\";\n+        return super.toString() + \"(nameIndex = \" + nameIndex + \")\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantModule.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-    private int name_index; \/\/ Name of field\/method\n-    private int signature_index; \/\/ and its signature.\n+    private int nameIndex; \/\/ Name of field\/method\n+    private int signatureIndex; \/\/ and its signature.\n@@ -63,2 +63,2 @@\n-     * @param name_index Name of field\/method\n-     * @param signature_index and its signature\n+     * @param nameIndex Name of field\/method\n+     * @param signatureIndex and its signature\n@@ -66,1 +66,1 @@\n-    public ConstantNameAndType(final int name_index, final int signature_index) {\n+    public ConstantNameAndType(final int nameIndex, final int signatureIndex) {\n@@ -68,2 +68,2 @@\n-        this.name_index = name_index;\n-        this.signature_index = signature_index;\n+        this.nameIndex = nameIndex;\n+        this.signatureIndex = signatureIndex;\n@@ -95,2 +95,2 @@\n-        file.writeShort(name_index);\n-        file.writeShort(signature_index);\n+        file.writeShort(nameIndex);\n+        file.writeShort(signatureIndex);\n@@ -104,1 +104,1 @@\n-        return name_index;\n+        return nameIndex;\n@@ -119,1 +119,1 @@\n-        return signature_index;\n+        return signatureIndex;\n@@ -131,1 +131,1 @@\n-     * @param name_index the name index of this constant\n+     * @param nameIndex the name index of this constant\n@@ -133,2 +133,2 @@\n-    public void setNameIndex( final int name_index ) {\n-        this.name_index = name_index;\n+    public void setNameIndex( final int nameIndex ) {\n+        this.nameIndex = nameIndex;\n@@ -139,1 +139,1 @@\n-     * @param signature_index the signature index in the constant pool of this type\n+     * @param signatureIndex the signature index in the constant pool of this type\n@@ -141,2 +141,2 @@\n-    public void setSignatureIndex( final int signature_index ) {\n-        this.signature_index = signature_index;\n+    public void setSignatureIndex( final int signatureIndex ) {\n+        this.signatureIndex = signatureIndex;\n@@ -151,2 +151,2 @@\n-        return super.toString() + \"(name_index = \" + name_index + \", signature_index = \"\n-                + signature_index + \")\";\n+        return super.toString() + \"(nameIndex = \" + nameIndex + \", signatureIndex = \"\n+                + signatureIndex + \")\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantNameAndType.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    private int name_index;\n+    private int nameIndex;\n@@ -64,1 +64,1 @@\n-     * @param name_index Name index in constant pool.  Should refer to a\n+     * @param nameIndex Name index in constant pool.  Should refer to a\n@@ -67,1 +67,1 @@\n-    public ConstantPackage(final int name_index) {\n+    public ConstantPackage(final int nameIndex) {\n@@ -69,1 +69,1 @@\n-        this.name_index = name_index;\n+        this.nameIndex = nameIndex;\n@@ -95,1 +95,1 @@\n-        file.writeShort(name_index);\n+        file.writeShort(nameIndex);\n@@ -103,1 +103,1 @@\n-        return name_index;\n+        return nameIndex;\n@@ -108,1 +108,1 @@\n-     * @param name_index the name index in the constant pool of this Constant Package\n+     * @param nameIndex the name index in the constant pool of this Constant Package\n@@ -110,2 +110,2 @@\n-    public void setNameIndex( final int name_index ) {\n-        this.name_index = name_index;\n+    public void setNameIndex( final int nameIndex ) {\n+        this.nameIndex = nameIndex;\n@@ -119,1 +119,1 @@\n-        final Constant c = cp.getConstant(name_index, Const.CONSTANT_Utf8);\n+        final Constant c = cp.getConstant(nameIndex, Const.CONSTANT_Utf8);\n@@ -136,1 +136,1 @@\n-        return super.toString() + \"(name_index = \" + name_index + \")\";\n+        return super.toString() + \"(nameIndex = \" + nameIndex + \")\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantPackage.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private Constant[] constant_pool;\n+    private Constant[] constantPool;\n@@ -46,1 +46,1 @@\n-     * @param constant_pool Array of constants\n+     * @param constantPool Array of constants\n@@ -48,2 +48,2 @@\n-    public ConstantPool(final Constant[] constant_pool) {\n-        this.constant_pool = constant_pool;\n+    public ConstantPool(final Constant[] constantPool) {\n+        this.constantPool = constantPool;\n@@ -62,2 +62,2 @@\n-        constant_pool = new Constant[constant_pool_count];\n-        \/* constant_pool[0] is unused by the compiler and may be used freely\n+        constantPool = new Constant[constant_pool_count];\n+        \/* constantPool[0] is unused by the compiler and may be used freely\n@@ -67,1 +67,1 @@\n-            constant_pool[i] = Constant.readConstant(input);\n+            constantPool[i] = Constant.readConstant(input);\n@@ -75,1 +75,1 @@\n-            tag = constant_pool[i].getTag();\n+            tag = constantPool[i].getTag();\n@@ -172,1 +172,1 @@\n-                throw new RuntimeException(\"Unknown constant type \" + tag);\n+                throw new IllegalArgumentException(\"Unknown constant type \" + tag);\n@@ -225,4 +225,4 @@\n-        file.writeShort(constant_pool.length);\n-        for (int i = 1; i < constant_pool.length; i++) {\n-            if (constant_pool[i] != null) {\n-                constant_pool[i].dump(file);\n+        file.writeShort(constantPool.length);\n+        for (int i = 1; i < constantPool.length; i++) {\n+            if (constantPool[i] != null) {\n+                constantPool[i].dump(file);\n@@ -241,1 +241,1 @@\n-        if (index >= constant_pool.length || index < 0) {\n+        if (index >= constantPool.length || index < 0) {\n@@ -243,1 +243,1 @@\n-                    + \". Constant pool size is: \" + constant_pool.length);\n+                    + \". Constant pool size is: \" + constantPool.length);\n@@ -245,1 +245,1 @@\n-        return constant_pool[index];\n+        return constantPool[index];\n@@ -276,1 +276,1 @@\n-        return constant_pool;\n+        return constantPool;\n@@ -317,1 +317,1 @@\n-                throw new RuntimeException(\"getConstantString called with illegal tag \" + tag);\n+                throw new IllegalArgumentException(\"getConstantString called with illegal tag \" + tag);\n@@ -329,1 +329,1 @@\n-        return constant_pool == null ? 0 : constant_pool.length;\n+        return constantPool == null ? 0 : constantPool.length;\n@@ -337,1 +337,1 @@\n-        constant_pool[index] = constant;\n+        constantPool[index] = constant;\n@@ -342,1 +342,1 @@\n-     * @param constant_pool\n+     * @param constantPool\n@@ -344,2 +344,2 @@\n-    public void setConstantPool( final Constant[] constant_pool ) {\n-        this.constant_pool = constant_pool;\n+    public void setConstantPool( final Constant[] constantPool ) {\n+        this.constantPool = constantPool;\n@@ -355,2 +355,2 @@\n-        for (int i = 1; i < constant_pool.length; i++) {\n-            buf.append(i).append(\")\").append(constant_pool[i]).append(\"\\n\");\n+        for (int i = 1; i < constantPool.length; i++) {\n+            buf.append(i).append(\")\").append(constantPool[i]).append(\"\\n\");\n@@ -369,4 +369,4 @@\n-            c.constant_pool = new Constant[constant_pool.length];\n-            for (int i = 1; i < constant_pool.length; i++) {\n-                if (constant_pool[i] != null) {\n-                    c.constant_pool[i] = constant_pool[i].copy();\n+            c.constantPool = new Constant[constantPool.length];\n+            for (int i = 1; i < constantPool.length; i++) {\n+                if (constantPool[i] != null) {\n+                    c.constantPool[i] = constantPool[i].copy();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantPool.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    private int string_index; \/\/ Identical to ConstantClass except for this name\n+    private int stringIndex; \/\/ Identical to ConstantClass except for this name\n@@ -61,1 +61,1 @@\n-     * @param string_index Index of Constant_Utf8 in constant pool\n+     * @param stringIndex Index of Constant_Utf8 in constant pool\n@@ -63,1 +63,1 @@\n-    public ConstantString(final int string_index) {\n+    public ConstantString(final int stringIndex) {\n@@ -65,1 +65,1 @@\n-        this.string_index = string_index;\n+        this.stringIndex = stringIndex;\n@@ -91,1 +91,1 @@\n-        file.writeShort(string_index);\n+        file.writeShort(stringIndex);\n@@ -99,1 +99,1 @@\n-        return string_index;\n+        return stringIndex;\n@@ -104,1 +104,1 @@\n-     * @param string_index the index into the constant of the string value\n+     * @param stringIndex the index into the constant of the string value\n@@ -106,2 +106,2 @@\n-    public void setStringIndex( final int string_index ) {\n-        this.string_index = string_index;\n+    public void setStringIndex( final int stringIndex ) {\n+        this.stringIndex = stringIndex;\n@@ -116,1 +116,1 @@\n-        return super.toString() + \"(string_index = \" + string_index + \")\";\n+        return super.toString() + \"(stringIndex = \" + stringIndex + \")\";\n@@ -124,1 +124,1 @@\n-        final Constant c = cp.getConstant(string_index, Const.CONSTANT_Utf8);\n+        final Constant c = cp.getConstant(stringIndex, Const.CONSTANT_Utf8);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantString.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private int constantvalue_index;\n+    private int constantValueIndex;\n@@ -68,1 +68,1 @@\n-     * @param constantvalue_index Index in constant pool\n+     * @param constantValueIndex Index in constant pool\n@@ -71,1 +71,1 @@\n-    public ConstantValue(final int name_index, final int length, final int constantvalue_index,\n+    public ConstantValue(final int name_index, final int length, final int constantValueIndex,\n@@ -74,1 +74,1 @@\n-        this.constantvalue_index = constantvalue_index;\n+        this.constantValueIndex = constantValueIndex;\n@@ -100,1 +100,1 @@\n-        file.writeShort(constantvalue_index);\n+        file.writeShort(constantValueIndex);\n@@ -108,1 +108,1 @@\n-        return constantvalue_index;\n+        return constantValueIndex;\n@@ -113,1 +113,1 @@\n-     * @param constantvalue_index the index info the constant pool of this constant value\n+     * @param constantValueIndex the index info the constant pool of this constant value\n@@ -115,2 +115,2 @@\n-    public void setConstantValueIndex( final int constantvalue_index ) {\n-        this.constantvalue_index = constantvalue_index;\n+    public void setConstantValueIndex( final int constantValueIndex ) {\n+        this.constantValueIndex = constantValueIndex;\n@@ -125,1 +125,1 @@\n-        Constant c = super.getConstantPool().getConstant(constantvalue_index);\n+        Constant c = super.getConstantPool().getConstant(constantValueIndex);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ConstantValue.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -108,1 +108,1 @@\n-                throw new RuntimeException(\"Unexpected element value kind in annotation: \" + type);\n+                throw new IllegalArgumentException(\"Unexpected element value kind in annotation: \" + type);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ElementValue.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalArgumentException(\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/EnumElementValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    private int[] exception_index_table; \/\/ constant pool\n+    private int[] exceptionIndexTable; \/\/ constant pool\n@@ -57,1 +57,1 @@\n-     * @param exception_index_table Table of indices in constant pool\n+     * @param exceptionIndexTable Table of indices in constant pool\n@@ -60,1 +60,1 @@\n-    public ExceptionTable(final int name_index, final int length, final int[] exception_index_table,\n+    public ExceptionTable(final int name_index, final int length, final int[] exceptionIndexTable,\n@@ -63,1 +63,1 @@\n-        this.exception_index_table = exception_index_table != null ? exception_index_table : new int[0];\n+        this.exceptionIndexTable = exceptionIndexTable != null ? exceptionIndexTable : new int[0];\n@@ -69,1 +69,1 @@\n-     * @param name_index Index in constant pool\n+     * @param nameIndex Index in constant pool\n@@ -72,1 +72,1 @@\n-     * @param constant_pool Array of constants\n+     * @param constantPool Array of constants\n@@ -75,2 +75,2 @@\n-    ExceptionTable(final int name_index, final int length, final DataInput input, final ConstantPool constant_pool) throws IOException {\n-        this(name_index, length, (int[]) null, constant_pool);\n+    ExceptionTable(final int nameIndex, final int length, final DataInput input, final ConstantPool constantPool) throws IOException {\n+        this(nameIndex, length, (int[]) null, constantPool);\n@@ -78,1 +78,1 @@\n-        exception_index_table = new int[number_of_exceptions];\n+        exceptionIndexTable = new int[number_of_exceptions];\n@@ -80,1 +80,1 @@\n-            exception_index_table[i] = input.readUnsignedShort();\n+            exceptionIndexTable[i] = input.readUnsignedShort();\n@@ -107,2 +107,2 @@\n-        file.writeShort(exception_index_table.length);\n-        for (final int index : exception_index_table) {\n+        file.writeShort(exceptionIndexTable.length);\n+        for (final int index : exceptionIndexTable) {\n@@ -118,1 +118,1 @@\n-        return exception_index_table;\n+        return exceptionIndexTable;\n@@ -126,1 +126,1 @@\n-        return exception_index_table == null ? 0 : exception_index_table.length;\n+        return exceptionIndexTable == null ? 0 : exceptionIndexTable.length;\n@@ -134,3 +134,3 @@\n-        final String[] names = new String[exception_index_table.length];\n-        for (int i = 0; i < exception_index_table.length; i++) {\n-            names[i] = super.getConstantPool().getConstantString(exception_index_table[i],\n+        final String[] names = new String[exceptionIndexTable.length];\n+        for (int i = 0; i < exceptionIndexTable.length; i++) {\n+            names[i] = super.getConstantPool().getConstantString(exceptionIndexTable[i],\n@@ -144,1 +144,1 @@\n-     * @param exception_index_table the list of exception indexes\n+     * @param exceptionIndexTable the list of exception indexes\n@@ -147,2 +147,2 @@\n-    public void setExceptionIndexTable( final int[] exception_index_table ) {\n-        this.exception_index_table = exception_index_table != null ? exception_index_table : new int[0];\n+    public void setExceptionIndexTable( final int[] exceptionIndexTable ) {\n+        this.exceptionIndexTable = exceptionIndexTable != null ? exceptionIndexTable : new int[0];\n@@ -160,2 +160,2 @@\n-        for (int i = 0; i < exception_index_table.length; i++) {\n-            str = super.getConstantPool().getConstantString(exception_index_table[i], Const.CONSTANT_Class);\n+        for (int i = 0; i < exceptionIndexTable.length; i++) {\n+            str = super.getConstantPool().getConstantString(exceptionIndexTable[i], Const.CONSTANT_Class);\n@@ -163,1 +163,1 @@\n-            if (i < exception_index_table.length - 1) {\n+            if (i < exceptionIndexTable.length - 1) {\n@@ -177,4 +177,4 @@\n-        if (exception_index_table != null) {\n-            c.exception_index_table = new int[exception_index_table.length];\n-            System.arraycopy(exception_index_table, 0, c.exception_index_table, 0,\n-                    exception_index_table.length);\n+        if (exceptionIndexTable != null) {\n+            c.exceptionIndexTable = new int[exceptionIndexTable.length];\n+            System.arraycopy(exceptionIndexTable, 0, c.exceptionIndexTable, 0,\n+                    exceptionIndexTable.length);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ExceptionTable.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -39,4 +39,4 @@\n-    private int inner_class_index;\n-    private int outer_class_index;\n-    private int inner_name_index;\n-    private int inner_access_flags;\n+    private int innerClassIndex;\n+    private int outerClassIndex;\n+    private int innerNameIndex;\n+    private int innerAccessFlags;\n@@ -66,4 +66,4 @@\n-     * @param inner_class_index Class index in constant pool of inner class\n-     * @param outer_class_index Class index in constant pool of outer class\n-     * @param inner_name_index  Name index in constant pool of inner class\n-     * @param inner_access_flags Access flags of inner class\n+     * @param innerClassIndex Class index in constant pool of inner class\n+     * @param outerClassIndex Class index in constant pool of outer class\n+     * @param innerNameIndex  Name index in constant pool of inner class\n+     * @param innerAccessFlags Access flags of inner class\n@@ -71,6 +71,6 @@\n-    public InnerClass(final int inner_class_index, final int outer_class_index, final int inner_name_index,\n-            final int inner_access_flags) {\n-        this.inner_class_index = inner_class_index;\n-        this.outer_class_index = outer_class_index;\n-        this.inner_name_index = inner_name_index;\n-        this.inner_access_flags = inner_access_flags;\n+    public InnerClass(final int innerClassIndex, final int outerClassIndex, final int innerNameIndex,\n+            final int innerAccessFlags) {\n+        this.innerClassIndex = innerClassIndex;\n+        this.outerClassIndex = outerClassIndex;\n+        this.innerNameIndex = innerNameIndex;\n+        this.innerAccessFlags = innerAccessFlags;\n@@ -100,4 +100,4 @@\n-        file.writeShort(inner_class_index);\n-        file.writeShort(outer_class_index);\n-        file.writeShort(inner_name_index);\n-        file.writeShort(inner_access_flags);\n+        file.writeShort(innerClassIndex);\n+        file.writeShort(outerClassIndex);\n+        file.writeShort(innerNameIndex);\n+        file.writeShort(innerAccessFlags);\n@@ -111,1 +111,1 @@\n-        return inner_access_flags;\n+        return innerAccessFlags;\n@@ -119,1 +119,1 @@\n-        return inner_class_index;\n+        return innerClassIndex;\n@@ -127,1 +127,1 @@\n-        return inner_name_index;\n+        return innerNameIndex;\n@@ -135,1 +135,1 @@\n-        return outer_class_index;\n+        return outerClassIndex;\n@@ -140,1 +140,1 @@\n-     * @param inner_access_flags access flags for this inner class\n+     * @param innerAccessFlags access flags for this inner class\n@@ -142,2 +142,2 @@\n-    public void setInnerAccessFlags( final int inner_access_flags ) {\n-        this.inner_access_flags = inner_access_flags;\n+    public void setInnerAccessFlags( final int innerAccessFlags ) {\n+        this.innerAccessFlags = innerAccessFlags;\n@@ -148,1 +148,1 @@\n-     * @param inner_class_index index into the constant pool for this class\n+     * @param innerClassIndex index into the constant pool for this class\n@@ -150,2 +150,2 @@\n-    public void setInnerClassIndex( final int inner_class_index ) {\n-        this.inner_class_index = inner_class_index;\n+    public void setInnerClassIndex( final int innerClassIndex ) {\n+        this.innerClassIndex = innerClassIndex;\n@@ -156,1 +156,1 @@\n-     * @param inner_name_index index into the constant pool for this class's name\n+     * @param innerNameIndex index into the constant pool for this class's name\n@@ -158,2 +158,2 @@\n-    public void setInnerNameIndex( final int inner_name_index ) { \/\/ TODO unused\n-        this.inner_name_index = inner_name_index;\n+    public void setInnerNameIndex( final int innerNameIndex ) { \/\/ TODO unused\n+        this.innerNameIndex = innerNameIndex;\n@@ -164,1 +164,1 @@\n-     * @param outer_class_index index into the constant pool for the owning class\n+     * @param outerClassIndex index into the constant pool for the owning class\n@@ -166,2 +166,2 @@\n-    public void setOuterClassIndex( final int outer_class_index ) { \/\/ TODO unused\n-        this.outer_class_index = outer_class_index;\n+    public void setOuterClassIndex( final int outerClassIndex ) { \/\/ TODO unused\n+        this.outerClassIndex = outerClassIndex;\n@@ -176,2 +176,2 @@\n-        return \"InnerClass(\" + inner_class_index + \", \" + outer_class_index + \", \"\n-                + inner_name_index + \", \" + inner_access_flags + \")\";\n+        return \"InnerClass(\" + innerClassIndex + \", \" + outerClassIndex + \", \"\n+                + innerNameIndex + \", \" + innerAccessFlags + \")\";\n@@ -184,1 +184,1 @@\n-    public String toString( final ConstantPool constant_pool ) {\n+    public String toString( final ConstantPool constantPool ) {\n@@ -187,1 +187,1 @@\n-        String inner_class_name = constant_pool.getConstantString(inner_class_index,\n+        String inner_class_name = constantPool.getConstantString(innerClassIndex,\n@@ -190,2 +190,2 @@\n-        if (outer_class_index != 0) {\n-            outer_class_name = constant_pool.getConstantString(outer_class_index,\n+        if (outerClassIndex != 0) {\n+            outer_class_name = constantPool.getConstantString(outerClassIndex,\n@@ -197,2 +197,2 @@\n-        if (inner_name_index != 0) {\n-            inner_name = ((ConstantUtf8) constant_pool.getConstant(inner_name_index,\n+        if (innerNameIndex != 0) {\n+            inner_name = ((ConstantUtf8) constantPool.getConstant(innerNameIndex,\n@@ -203,1 +203,1 @@\n-        String access = Utility.accessToString(inner_access_flags, true);\n+        String access = Utility.accessToString(innerAccessFlags, true);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/InnerClass.java","additions":43,"deletions":43,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    private InnerClass[] inner_classes;\n+    private InnerClass[] innerClasses;\n@@ -55,1 +55,1 @@\n-     * @param inner_classes array of inner classes attributes\n+     * @param innerClasses array of inner classes attributes\n@@ -58,1 +58,1 @@\n-    public InnerClasses(final int name_index, final int length, final InnerClass[] inner_classes,\n+    public InnerClasses(final int name_index, final int length, final InnerClass[] innerClasses,\n@@ -61,1 +61,1 @@\n-        this.inner_classes = inner_classes != null ? inner_classes : new InnerClass[0];\n+        this.innerClasses = innerClasses != null ? innerClasses : new InnerClass[0];\n@@ -78,1 +78,1 @@\n-        inner_classes = new InnerClass[number_of_classes];\n+        innerClasses = new InnerClass[number_of_classes];\n@@ -80,1 +80,1 @@\n-            inner_classes[i] = new InnerClass(input);\n+            innerClasses[i] = new InnerClass(input);\n@@ -107,2 +107,2 @@\n-        file.writeShort(inner_classes.length);\n-        for (final InnerClass inner_class : inner_classes) {\n+        file.writeShort(innerClasses.length);\n+        for (final InnerClass inner_class : innerClasses) {\n@@ -118,1 +118,1 @@\n-        return inner_classes;\n+        return innerClasses;\n@@ -123,1 +123,1 @@\n-     * @param inner_classes the array of inner classes\n+     * @param innerClasses the array of inner classes\n@@ -125,2 +125,2 @@\n-    public void setInnerClasses( final InnerClass[] inner_classes ) {\n-        this.inner_classes = inner_classes != null ? inner_classes : new InnerClass[0];\n+    public void setInnerClasses( final InnerClass[] innerClasses ) {\n+        this.innerClasses = innerClasses != null ? innerClasses : new InnerClass[0];\n@@ -137,1 +137,1 @@\n-        buf.append(inner_classes.length);\n+        buf.append(innerClasses.length);\n@@ -139,1 +139,1 @@\n-        for (final InnerClass inner_class : inner_classes) {\n+        for (final InnerClass inner_class : innerClasses) {\n@@ -153,3 +153,3 @@\n-        c.inner_classes = new InnerClass[inner_classes.length];\n-        for (int i = 0; i < inner_classes.length; i++) {\n-            c.inner_classes[i] = inner_classes[i].copy();\n+        c.innerClasses = new InnerClass[innerClasses.length];\n+        for (int i = 0; i < innerClasses.length; i++) {\n+            c.innerClasses[i] = innerClasses[i].copy();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/InnerClasses.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * See <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/\">JVM specification<\/a> for details.\n+ * See <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/\">JVM specification<\/a> for details.\n@@ -50,1 +50,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -54,7 +54,7 @@\n-    private String file_name;\n-    private String package_name;\n-    private String source_file_name = \"<Unknown>\";\n-    private int class_name_index;\n-    private int superclass_name_index;\n-    private String class_name;\n-    private String superclass_name;\n+    private String fileName;\n+    private String packageName;\n+    private String sourceFileName = \"<Unknown>\";\n+    private int classNameIndex;\n+    private int superclassNameIndex;\n+    private String className;\n+    private String superclassName;\n@@ -63,1 +63,1 @@\n-    private ConstantPool constant_pool; \/\/ Constant pool\n+    private ConstantPool constantPool; \/\/ Constant pool\n@@ -65,1 +65,1 @@\n-    private String[] interface_names;\n+    private String[] interfaceNames;\n@@ -107,1 +107,1 @@\n-     * @param class_name_index Index into constant pool referencing a\n+     * @param classNameIndex Index into constant pool referencing a\n@@ -109,1 +109,1 @@\n-     * @param superclass_name_index Index into constant pool referencing a\n+     * @param superclassNameIndex Index into constant pool referencing a\n@@ -111,1 +111,1 @@\n-     * @param file_name File name\n+     * @param fileName File name\n@@ -115,1 +115,1 @@\n-     * @param constant_pool Array of constants\n+     * @param constantPool Array of constants\n@@ -122,3 +122,3 @@\n-    public JavaClass(final int class_name_index, final int superclass_name_index,\n-            final String file_name, final int major, final int minor, final int access_flags,\n-            final ConstantPool constant_pool, int[] interfaces, Field[] fields,\n+    public JavaClass(final int classNameIndex, final int superclassNameIndex,\n+            final String fileName, final int major, final int minor, final int access_flags,\n+            final ConstantPool constantPool, int[] interfaces, Field[] fields,\n@@ -139,3 +139,3 @@\n-        this.class_name_index = class_name_index;\n-        this.superclass_name_index = superclass_name_index;\n-        this.file_name = file_name;\n+        this.classNameIndex = classNameIndex;\n+        this.superclassNameIndex = superclassNameIndex;\n+        this.fileName = fileName;\n@@ -144,1 +144,1 @@\n-        this.constant_pool = constant_pool;\n+        this.constantPool = constantPool;\n@@ -153,1 +153,1 @@\n-                source_file_name = ((SourceFile) attribute).getSourceFileName();\n+                sourceFileName = ((SourceFile) attribute).getSourceFileName();\n@@ -161,3 +161,3 @@\n-        class_name = constant_pool.getConstantString(class_name_index, Const.CONSTANT_Class);\n-        class_name = Utility.compactClassName(class_name, false);\n-        final int index = class_name.lastIndexOf('.');\n+        className = constantPool.getConstantString(classNameIndex, Const.CONSTANT_Class);\n+        className = Utility.compactClassName(className, false);\n+        final int index = className.lastIndexOf('.');\n@@ -165,1 +165,1 @@\n-            package_name = \"\";\n+            packageName = \"\";\n@@ -167,1 +167,1 @@\n-            package_name = class_name.substring(0, index);\n+            packageName = className.substring(0, index);\n@@ -169,1 +169,1 @@\n-        if (superclass_name_index > 0) {\n+        if (superclassNameIndex > 0) {\n@@ -171,1 +171,1 @@\n-            superclass_name = constant_pool.getConstantString(superclass_name_index,\n+            superclassName = constantPool.getConstantString(superclassNameIndex,\n@@ -173,1 +173,1 @@\n-            superclass_name = Utility.compactClassName(superclass_name, false);\n+            superclassName = Utility.compactClassName(superclassName, false);\n@@ -175,1 +175,1 @@\n-            superclass_name = \"java.lang.Object\";\n+            superclassName = \"java.lang.Object\";\n@@ -177,1 +177,1 @@\n-        interface_names = new String[interfaces.length];\n+        interfaceNames = new String[interfaces.length];\n@@ -179,2 +179,2 @@\n-            final String str = constant_pool.getConstantString(interfaces[i], Const.CONSTANT_Class);\n-            interface_names[i] = Utility.compactClassName(str, false);\n+            final String str = constantPool.getConstantString(interfaces[i], Const.CONSTANT_Class);\n+            interfaceNames[i] = Utility.compactClassName(str, false);\n@@ -188,3 +188,3 @@\n-     * @param class_name_index Class name\n-     * @param superclass_name_index Superclass name\n-     * @param file_name File name\n+     * @param classNameIndex Class name\n+     * @param superclassNameIndex Superclass name\n+     * @param fileName File name\n@@ -194,1 +194,1 @@\n-     * @param constant_pool Array of constants\n+     * @param constantPool Array of constants\n@@ -200,3 +200,3 @@\n-    public JavaClass(final int class_name_index, final int superclass_name_index,\n-            final String file_name, final int major, final int minor, final int access_flags,\n-            final ConstantPool constant_pool, final int[] interfaces, final Field[] fields,\n+    public JavaClass(final int classNameIndex, final int superclassNameIndex,\n+            final String fileName, final int major, final int minor, final int access_flags,\n+            final ConstantPool constantPool, final int[] interfaces, final Field[] fields,\n@@ -204,2 +204,2 @@\n-        this(class_name_index, superclass_name_index, file_name, major, minor, access_flags,\n-                constant_pool, interfaces, fields, methods, attributes, HEAP);\n+        this(classNameIndex, superclassNameIndex, fileName, major, minor, access_flags,\n+                constantPool, interfaces, fields, methods, attributes, HEAP);\n@@ -254,1 +254,1 @@\n-     * Dump class to a file named file_name.\n+     * Dump class to a file named fileName.\n@@ -306,1 +306,1 @@\n-        constant_pool.dump(file);\n+        constantPool.dump(file);\n@@ -308,2 +308,2 @@\n-        file.writeShort(class_name_index);\n-        file.writeShort(superclass_name_index);\n+        file.writeShort(classNameIndex);\n+        file.writeShort(superclassNameIndex);\n@@ -357,1 +357,1 @@\n-        return class_name;\n+        return className;\n@@ -365,1 +365,1 @@\n-        return package_name;\n+        return packageName;\n@@ -373,1 +373,1 @@\n-        return class_name_index;\n+        return classNameIndex;\n@@ -381,1 +381,1 @@\n-        return constant_pool;\n+        return constantPool;\n@@ -399,1 +399,1 @@\n-        return file_name;\n+        return fileName;\n@@ -407,1 +407,1 @@\n-        return interface_names;\n+        return interfaceNames;\n@@ -462,1 +462,1 @@\n-        return source_file_name;\n+        return sourceFileName;\n@@ -474,1 +474,1 @@\n-        return superclass_name;\n+        return superclassName;\n@@ -482,1 +482,1 @@\n-        return superclass_name_index;\n+        return superclassNameIndex;\n@@ -494,1 +494,1 @@\n-     * @param class_name .\n+     * @param className .\n@@ -496,2 +496,2 @@\n-    public void setClassName( final String class_name ) {\n-        this.class_name = class_name;\n+    public void setClassName( final String className ) {\n+        this.className = className;\n@@ -502,1 +502,1 @@\n-     * @param class_name_index .\n+     * @param classNameIndex .\n@@ -504,2 +504,2 @@\n-    public void setClassNameIndex( final int class_name_index ) {\n-        this.class_name_index = class_name_index;\n+    public void setClassNameIndex( final int classNameIndex ) {\n+        this.classNameIndex = classNameIndex;\n@@ -510,1 +510,1 @@\n-     * @param constant_pool .\n+     * @param constantPool .\n@@ -512,2 +512,2 @@\n-    public void setConstantPool( final ConstantPool constant_pool ) {\n-        this.constant_pool = constant_pool;\n+    public void setConstantPool( final ConstantPool constantPool ) {\n+        this.constantPool = constantPool;\n@@ -528,2 +528,2 @@\n-    public void setFileName( final String file_name ) {\n-        this.file_name = file_name;\n+    public void setFileName( final String fileName ) {\n+        this.fileName = fileName;\n@@ -534,1 +534,1 @@\n-     * @param interface_names .\n+     * @param interfaceNames .\n@@ -536,2 +536,2 @@\n-    public void setInterfaceNames( final String[] interface_names ) {\n-        this.interface_names = interface_names;\n+    public void setInterfaceNames( final String[] interfaceNames ) {\n+        this.interfaceNames = interfaceNames;\n@@ -576,2 +576,2 @@\n-    public void setSourceFileName( final String source_file_name ) {\n-        this.source_file_name = source_file_name;\n+    public void setSourceFileName( final String sourceFileName ) {\n+        this.sourceFileName = sourceFileName;\n@@ -582,1 +582,1 @@\n-     * @param superclass_name .\n+     * @param superclassName .\n@@ -584,2 +584,2 @@\n-    public void setSuperclassName( final String superclass_name ) {\n-        this.superclass_name = superclass_name;\n+    public void setSuperclassName( final String superclassName ) {\n+        this.superclassName = superclassName;\n@@ -590,1 +590,1 @@\n-     * @param superclass_name_index .\n+     * @param superclassNameIndex .\n@@ -592,2 +592,2 @@\n-    public void setSuperclassNameIndex( final int superclass_name_index ) {\n-        this.superclass_name_index = superclass_name_index;\n+    public void setSuperclassNameIndex( final int superclassNameIndex ) {\n+        this.superclassNameIndex = superclassNameIndex;\n@@ -606,2 +606,2 @@\n-                class_name).append(\" extends \").append(\n-                Utility.compactClassName(superclass_name, false)).append('\\n');\n+                className).append(\" extends \").append(\n+                Utility.compactClassName(superclassName, false)).append('\\n');\n@@ -612,1 +612,1 @@\n-                buf.append(interface_names[i]);\n+                buf.append(interfaceNames[i]);\n@@ -619,2 +619,2 @@\n-        buf.append(\"file name\\t\\t\").append(file_name).append('\\n');\n-        buf.append(\"compiled from\\t\\t\").append(source_file_name).append('\\n');\n+        buf.append(\"file name\\t\\t\").append(fileName).append('\\n');\n+        buf.append(\"compiled from\\t\\t\").append(sourceFileName).append('\\n');\n@@ -623,1 +623,1 @@\n-        buf.append(\"constant pool\\t\\t\").append(constant_pool.getLength()).append(\" entries\\n\");\n+        buf.append(\"constant pool\\t\\t\").append(constantPool.getLength()).append(\" entries\\n\");\n@@ -671,1 +671,1 @@\n-            c.constant_pool = constant_pool.copy();\n+            c.constantPool = constantPool.copy();\n@@ -673,1 +673,1 @@\n-            c.interface_names = interface_names.clone();\n+            c.interfaceNames = interfaceNames.clone();\n@@ -676,1 +676,1 @@\n-                c.fields[i] = fields[i].copy(c.constant_pool);\n+                c.fields[i] = fields[i].copy(c.constantPool);\n@@ -680,1 +680,1 @@\n-                c.methods[i] = methods[i].copy(c.constant_pool);\n+                c.methods[i] = methods[i].copy(c.constantPool);\n@@ -684,1 +684,1 @@\n-                c.attributes[i] = attributes[i].copy(c.constant_pool);\n+                c.attributes[i] = attributes[i].copy(c.constantPool);\n@@ -727,1 +727,1 @@\n-                      String inner_class_name = constant_pool.getConstantString(innerClasse.getInnerClassIndex(),\n+                      String inner_class_name = constantPool.getConstantString(innerClasse.getInnerClassIndex(),\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/JavaClass.java","additions":92,"deletions":92,"binary":false,"changes":184,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    private short start_pc;\n+    private short startPc;\n@@ -41,1 +41,1 @@\n-    private short line_number;\n+    private short lineNumber;\n@@ -65,2 +65,2 @@\n-     * @param start_pc Program Counter (PC) corresponds to\n-     * @param line_number line number in source file\n+     * @param startPc Program Counter (PC) corresponds to\n+     * @param lineNumber line number in source file\n@@ -68,3 +68,3 @@\n-    public LineNumber(final int start_pc, final int line_number) {\n-        this.start_pc = (short) start_pc;\n-        this.line_number = (short)line_number;\n+    public LineNumber(final int startPc, final int lineNumber) {\n+        this.startPc = (short) startPc;\n+        this.lineNumber = (short)lineNumber;\n@@ -94,2 +94,2 @@\n-        file.writeShort(start_pc);\n-        file.writeShort(line_number);\n+        file.writeShort(startPc);\n+        file.writeShort(lineNumber);\n@@ -103,1 +103,1 @@\n-        return 0xffff & line_number;\n+        return 0xffff & lineNumber;\n@@ -111,1 +111,1 @@\n-        return  0xffff & start_pc;\n+        return  0xffff & startPc;\n@@ -116,1 +116,1 @@\n-     * @param line_number the source line number\n+     * @param lineNumber the source line number\n@@ -118,2 +118,2 @@\n-    public void setLineNumber( final int line_number ) {\n-        this.line_number = (short) line_number;\n+    public void setLineNumber( final int lineNumber ) {\n+        this.lineNumber = (short) lineNumber;\n@@ -124,1 +124,1 @@\n-     * @param start_pc the pc for this line number\n+     * @param startPc the pc for this line number\n@@ -126,2 +126,2 @@\n-    public void setStartPC( final int start_pc ) {\n-        this.start_pc = (short) start_pc;\n+    public void setStartPC( final int startPc ) {\n+        this.startPc = (short) startPc;\n@@ -136,1 +136,1 @@\n-        return \"LineNumber(\" + start_pc + \", \" + line_number + \")\";\n+        return \"LineNumber(\" + startPc + \", \" + lineNumber + \")\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/LineNumber.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -40,1 +40,1 @@\n-    private LineNumber[] line_number_table; \/\/ Table of line\/numbers pairs\n+    private LineNumber[] lineNumberTable; \/\/ Table of line\/numbers pairs\n@@ -55,1 +55,1 @@\n-     * @param line_number_table Table of line\/numbers pairs\n+     * @param lineNumberTable Table of line\/numbers pairs\n@@ -61,1 +61,1 @@\n-        this.line_number_table = line_number_table;\n+        this.lineNumberTable = line_number_table;\n@@ -76,1 +76,1 @@\n-        line_number_table = new LineNumber[line_number_table_length];\n+        lineNumberTable = new LineNumber[line_number_table_length];\n@@ -78,1 +78,1 @@\n-            line_number_table[i] = new LineNumber(input);\n+            lineNumberTable[i] = new LineNumber(input);\n@@ -103,2 +103,2 @@\n-        file.writeShort(line_number_table.length);\n-        for (final LineNumber lineNumber : line_number_table) {\n+        file.writeShort(lineNumberTable.length);\n+        for (final LineNumber lineNumber : lineNumberTable) {\n@@ -113,1 +113,1 @@\n-        return line_number_table;\n+        return lineNumberTable;\n@@ -117,1 +117,1 @@\n-     * @param line_number_table the line number entries for this table\n+     * @param lineNumberTable the line number entries for this table\n@@ -119,2 +119,2 @@\n-    public void setLineNumberTable( final LineNumber[] line_number_table ) {\n-        this.line_number_table = line_number_table;\n+    public void setLineNumberTable( final LineNumber[] lineNumberTable ) {\n+        this.lineNumberTable = lineNumberTable;\n@@ -131,3 +131,3 @@\n-        for (int i = 0; i < line_number_table.length; i++) {\n-            line.append(line_number_table[i].toString());\n-            if (i < line_number_table.length - 1) {\n+        for (int i = 0; i < lineNumberTable.length; i++) {\n+            line.append(lineNumberTable[i].toString());\n+            if (i < lineNumberTable.length - 1) {\n@@ -136,1 +136,1 @@\n-            if ((line.length() > MAX_LINE_LENGTH) && (i < line_number_table.length - 1)) {\n+            if ((line.length() > MAX_LINE_LENGTH) && (i < lineNumberTable.length - 1)) {\n@@ -154,1 +154,1 @@\n-        int r = line_number_table.length - 1;\n+        int r = lineNumberTable.length - 1;\n@@ -164,1 +164,1 @@\n-            final int j = line_number_table[i].getStartPC();\n+            final int j = lineNumberTable[i].getStartPC();\n@@ -166,1 +166,1 @@\n-                return line_number_table[i].getLineNumber();\n+                return lineNumberTable[i].getLineNumber();\n@@ -187,1 +187,1 @@\n-        return line_number_table[min_index].getLineNumber();\n+        return lineNumberTable[min_index].getLineNumber();\n@@ -196,1 +196,1 @@\n-        \/\/ line_number_table to be made final\n+        \/\/ lineNumberTable to be made final\n@@ -198,3 +198,3 @@\n-        c.line_number_table = new LineNumber[line_number_table.length];\n-        for (int i = 0; i < line_number_table.length; i++) {\n-            c.line_number_table[i] = line_number_table[i].copy();\n+        c.lineNumberTable = new LineNumber[lineNumberTable.length];\n+        for (int i = 0; i < lineNumberTable.length; i++) {\n+            c.lineNumberTable[i] = lineNumberTable[i].copy();\n@@ -206,0 +206,1 @@\n+\n@@ -207,1 +208,1 @@\n-        return line_number_table == null ? 0 : line_number_table.length;\n+        return lineNumberTable == null ? 0 : lineNumberTable.length;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/LineNumberTable.java","additions":27,"deletions":26,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n- * attribute contains a descriptor_index, not a signature_index.  The\n- * LocalVariableTypeTable attribute does have a signature_index.\n+ * attribute contains a descriptor_index, not a signatureIndex.  The\n+ * LocalVariableTypeTable attribute does have a signatureIndex.\n@@ -41,1 +41,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -45,1 +45,1 @@\n-    private int start_pc; \/\/ Range in which the variable is valid\n+    private int startPc; \/\/ Range in which the variable is valid\n@@ -47,1 +47,1 @@\n-    private int name_index; \/\/ Index in constant pool of variable name\n+    private int nameIndex; \/\/ Index in constant pool of variable name\n@@ -49,2 +49,2 @@\n-    \/\/ and a signature_index for a local variable type table entry.\n-    private int signature_index; \/\/ Index of variable signature\n+    \/\/ and a signatureIndex for a local variable type table entry.\n+    private int signatureIndex; \/\/ Index of variable signature\n@@ -54,2 +54,2 @@\n-    private ConstantPool constant_pool;\n-    private int orig_index; \/\/ never changes; used to match up with LocalVariableTypeTable entries\n+    private ConstantPool constantPool;\n+    private int origIndex; \/\/ never changes; used to match up with LocalVariableTypeTable entries\n@@ -67,1 +67,1 @@\n-        this.orig_index = localVariable.getOrigIndex();\n+        this.origIndex = localVariable.getOrigIndex();\n@@ -82,1 +82,1 @@\n-     * @param start_pc Range in which the variable\n+     * @param startPc Range in which the variable\n@@ -84,2 +84,2 @@\n-     * @param name_index Index in constant pool of variable name\n-     * @param signature_index Index of variable's signature\n+     * @param nameIndex Index in constant pool of variable name\n+     * @param signatureIndex Index of variable's signature\n@@ -87,1 +87,1 @@\n-     * @param constant_pool Array of constants\n+     * @param constantPool Array of constants\n@@ -89,3 +89,3 @@\n-    public LocalVariable(final int start_pc, final int length, final int name_index, final int signature_index, final int index,\n-            final ConstantPool constant_pool) {\n-        this.start_pc = start_pc;\n+    public LocalVariable(final int startPc, final int length, final int nameIndex, final int signatureIndex, final int index,\n+            final ConstantPool constantPool) {\n+        this.startPc = startPc;\n@@ -93,2 +93,2 @@\n-        this.name_index = name_index;\n-        this.signature_index = signature_index;\n+        this.nameIndex = nameIndex;\n+        this.signatureIndex = signatureIndex;\n@@ -96,2 +96,2 @@\n-        this.constant_pool = constant_pool;\n-        this.orig_index = index;\n+        this.constantPool = constantPool;\n+        this.origIndex = index;\n@@ -102,1 +102,1 @@\n-     * @param start_pc Range in which the variable\n+     * @param startPc Range in which the variable\n@@ -104,2 +104,2 @@\n-     * @param name_index Index in constant pool of variable name\n-     * @param signature_index Index of variable's signature\n+     * @param nameIndex Index in constant pool of variable name\n+     * @param signatureIndex Index of variable's signature\n@@ -107,2 +107,2 @@\n-     * @param constant_pool Array of constants\n-     * @param orig_index Variable is `index'th local variable on the method's frame prior to any changes\n+     * @param constantPool Array of constants\n+     * @param origIndex Variable is `index'th local variable on the method's frame prior to any changes\n@@ -110,3 +110,3 @@\n-    public LocalVariable(final int start_pc, final int length, final int name_index, final int signature_index, final int index,\n-            final ConstantPool constant_pool, final int orig_index) {\n-        this.start_pc = start_pc;\n+    public LocalVariable(final int startPc, final int length, final int nameIndex, final int signatureIndex, final int index,\n+            final ConstantPool constantPool, final int origIndex) {\n+        this.startPc = startPc;\n@@ -114,2 +114,2 @@\n-        this.name_index = name_index;\n-        this.signature_index = signature_index;\n+        this.nameIndex = nameIndex;\n+        this.signatureIndex = signatureIndex;\n@@ -117,2 +117,2 @@\n-        this.constant_pool = constant_pool;\n-        this.orig_index = orig_index;\n+        this.constantPool = constantPool;\n+        this.origIndex = origIndex;\n@@ -143,1 +143,1 @@\n-        dataOutputStream.writeShort(start_pc);\n+        dataOutputStream.writeShort(startPc);\n@@ -145,2 +145,2 @@\n-        dataOutputStream.writeShort(name_index);\n-        dataOutputStream.writeShort(signature_index);\n+        dataOutputStream.writeShort(nameIndex);\n+        dataOutputStream.writeShort(signatureIndex);\n@@ -154,1 +154,1 @@\n-        return constant_pool;\n+        return constantPool;\n@@ -171,1 +171,1 @@\n-        c = (ConstantUtf8) constant_pool.getConstant(name_index, Const.CONSTANT_Utf8);\n+        c = (ConstantUtf8) constantPool.getConstant(nameIndex, Const.CONSTANT_Utf8);\n@@ -180,1 +180,1 @@\n-        return name_index;\n+        return nameIndex;\n@@ -189,1 +189,1 @@\n-        c = (ConstantUtf8) constant_pool.getConstant(signature_index, Const.CONSTANT_Utf8);\n+        c = (ConstantUtf8) constantPool.getConstant(signatureIndex, Const.CONSTANT_Utf8);\n@@ -198,1 +198,1 @@\n-        return signature_index;\n+        return signatureIndex;\n@@ -214,1 +214,1 @@\n-        return orig_index;\n+        return origIndex;\n@@ -222,1 +222,1 @@\n-        return start_pc;\n+        return startPc;\n@@ -233,1 +233,1 @@\n-        return label + \"(start_pc = \" + start_pc + \", length = \" + length + \", index = \"\n+        return label + \"(startPc = \" + startPc + \", length = \" + length + \", index = \"\n@@ -239,1 +239,1 @@\n-     * @param constant_pool Constant pool to be used for this object.\n+     * @param constantPool Constant pool to be used for this object.\n@@ -241,2 +241,2 @@\n-    public void setConstantPool( final ConstantPool constant_pool ) {\n-        this.constant_pool = constant_pool;\n+    public void setConstantPool( final ConstantPool constantPool ) {\n+        this.constantPool = constantPool;\n@@ -255,1 +255,1 @@\n-     * @param name_index the index into the constant pool for the name of this variable\n+     * @param nameIndex the index into the constant pool for the name of this variable\n@@ -257,2 +257,2 @@\n-    public void setNameIndex( final int name_index ) { \/\/ TODO unused\n-        this.name_index = name_index;\n+    public void setNameIndex( final int nameIndex ) { \/\/ TODO unused\n+        this.nameIndex = nameIndex;\n@@ -263,1 +263,1 @@\n-     * @param signature_index the index into the constant pool for the signature of this variable\n+     * @param signatureIndex the index into the constant pool for the signature of this variable\n@@ -265,2 +265,2 @@\n-    public void setSignatureIndex( final int signature_index ) { \/\/ TODO unused\n-        this.signature_index = signature_index;\n+    public void setSignatureIndex( final int signatureIndex ) { \/\/ TODO unused\n+        this.signatureIndex = signatureIndex;\n@@ -279,1 +279,1 @@\n-     * @param start_pc Specify range where the local variable is valid.\n+     * @param startPc Specify range where the local variable is valid.\n@@ -281,2 +281,2 @@\n-    public void setStartPC( final int start_pc ) { \/\/ TODO unused\n-        this.start_pc = start_pc;\n+    public void setStartPC( final int startPc ) { \/\/ TODO unused\n+        this.startPc = startPc;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/LocalVariable.java","additions":57,"deletions":57,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private LocalVariable[] local_variable_table; \/\/ variables\n+    private LocalVariable[] localVariableTable; \/\/ variables\n@@ -52,1 +52,1 @@\n-     * @param name_index Index in constant pool to `LocalVariableTable'\n+     * @param nameIndex Index in constant pool to `LocalVariableTable'\n@@ -54,2 +54,2 @@\n-     * @param local_variable_table Table of local variables\n-     * @param constant_pool Array of constants\n+     * @param localVariableTable Table of local variables\n+     * @param constantPool Array of constants\n@@ -57,4 +57,4 @@\n-    public LocalVariableTable(final int name_index, final int length, final LocalVariable[] local_variable_table,\n-            final ConstantPool constant_pool) {\n-        super(Const.ATTR_LOCAL_VARIABLE_TABLE, name_index, length, constant_pool);\n-        this.local_variable_table = local_variable_table;\n+    public LocalVariableTable(final int nameIndex, final int length, final LocalVariable[] localVariableTable,\n+            final ConstantPool constantPool) {\n+        super(Const.ATTR_LOCAL_VARIABLE_TABLE, nameIndex, length, constantPool);\n+        this.localVariableTable = localVariableTable;\n@@ -76,1 +76,1 @@\n-        local_variable_table = new LocalVariable[local_variable_table_length];\n+        localVariableTable = new LocalVariable[local_variable_table_length];\n@@ -78,1 +78,1 @@\n-            local_variable_table[i] = new LocalVariable(input, constant_pool);\n+            localVariableTable[i] = new LocalVariable(input, constant_pool);\n@@ -105,2 +105,2 @@\n-        file.writeShort(local_variable_table.length);\n-        for (final LocalVariable variable : local_variable_table) {\n+        file.writeShort(localVariableTable.length);\n+        for (final LocalVariable variable : localVariableTable) {\n@@ -116,1 +116,1 @@\n-        return local_variable_table;\n+        return localVariableTable;\n@@ -131,1 +131,1 @@\n-        for (final LocalVariable variable : local_variable_table) {\n+        for (final LocalVariable variable : localVariableTable) {\n@@ -148,1 +148,1 @@\n-        for (final LocalVariable variable : local_variable_table) {\n+        for (final LocalVariable variable : localVariableTable) {\n@@ -162,1 +162,1 @@\n-        this.local_variable_table = local_variable_table;\n+        this.localVariableTable = local_variable_table;\n@@ -172,3 +172,3 @@\n-        for (int i = 0; i < local_variable_table.length; i++) {\n-            buf.append(local_variable_table[i]);\n-            if (i < local_variable_table.length - 1) {\n+        for (int i = 0; i < localVariableTable.length; i++) {\n+            buf.append(localVariableTable[i]);\n+            if (i < localVariableTable.length - 1) {\n@@ -188,3 +188,3 @@\n-        c.local_variable_table = new LocalVariable[local_variable_table.length];\n-        for (int i = 0; i < local_variable_table.length; i++) {\n-            c.local_variable_table[i] = local_variable_table[i].copy();\n+        c.localVariableTable = new LocalVariable[localVariableTable.length];\n+        for (int i = 0; i < localVariableTable.length; i++) {\n+            c.localVariableTable[i] = localVariableTable[i].copy();\n@@ -198,1 +198,1 @@\n-        return local_variable_table == null ? 0 : local_variable_table.length;\n+        return localVariableTable == null ? 0 : localVariableTable.length;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/LocalVariableTable.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-\/\/    } local_variable_type_table[local_variable_type_table_length];\n+\/\/    } localVariableTypeTable[local_variable_type_table_length];\n@@ -62,1 +62,1 @@\n-    private LocalVariable[] local_variable_type_table;        \/\/ variables\n+    private LocalVariable[] localVariableTypeTable;        \/\/ variables\n@@ -70,1 +70,1 @@\n-        this.local_variable_type_table = local_variable_table;\n+        this.localVariableTypeTable = local_variable_table;\n@@ -77,1 +77,1 @@\n-        local_variable_type_table = new LocalVariable[local_variable_type_table_length];\n+        localVariableTypeTable = new LocalVariable[local_variable_type_table_length];\n@@ -80,1 +80,1 @@\n-            local_variable_type_table[i] = new LocalVariable(input, cpool);\n+            localVariableTypeTable[i] = new LocalVariable(input, cpool);\n@@ -92,2 +92,2 @@\n-        file.writeShort(local_variable_type_table.length);\n-        for (final LocalVariable variable : local_variable_type_table) {\n+        file.writeShort(localVariableTypeTable.length);\n+        for (final LocalVariable variable : localVariableTypeTable) {\n@@ -99,1 +99,1 @@\n-        return local_variable_type_table;\n+        return localVariableTypeTable;\n@@ -103,1 +103,1 @@\n-        for (final LocalVariable variable : local_variable_type_table) {\n+        for (final LocalVariable variable : localVariableTypeTable) {\n@@ -113,1 +113,1 @@\n-        this.local_variable_type_table = local_variable_table;\n+        this.localVariableTypeTable = local_variable_table;\n@@ -123,2 +123,2 @@\n-        for (int i = 0; i < local_variable_type_table.length; i++) {\n-            buf.append(local_variable_type_table[i].toStringShared(true));\n+        for (int i = 0; i < localVariableTypeTable.length; i++) {\n+            buf.append(localVariableTypeTable[i].toStringShared(true));\n@@ -126,1 +126,1 @@\n-            if (i < local_variable_type_table.length - 1) {\n+            if (i < localVariableTypeTable.length - 1) {\n@@ -141,3 +141,3 @@\n-        c.local_variable_type_table = new LocalVariable[local_variable_type_table.length];\n-        for (int i = 0; i < local_variable_type_table.length; i++) {\n-            c.local_variable_type_table[i] = local_variable_type_table[i].copy();\n+        c.localVariableTypeTable = new LocalVariable[localVariableTypeTable.length];\n+        for (int i = 0; i < localVariableTypeTable.length; i++) {\n+            c.localVariableTypeTable[i] = localVariableTypeTable[i].copy();\n@@ -151,1 +151,1 @@\n-        return local_variable_type_table == null ? 0 : local_variable_type_table.length;\n+        return localVariableTypeTable == null ? 0 : localVariableTypeTable.length;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/LocalVariableTypeTable.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.24\">\n+ * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.24\">\n@@ -40,1 +40,1 @@\n-    private int name_index;\n+    private int nameIndex;\n@@ -43,1 +43,1 @@\n-    private int access_flags;\n+    private int accessFlags;\n@@ -56,2 +56,2 @@\n-        name_index = input.readUnsignedShort();\n-        access_flags = input.readUnsignedShort();\n+        nameIndex = input.readUnsignedShort();\n+        accessFlags = input.readUnsignedShort();\n@@ -61,1 +61,1 @@\n-        return name_index;\n+        return nameIndex;\n@@ -65,1 +65,1 @@\n-        this.name_index = name_index;\n+        this.nameIndex = name_index;\n@@ -72,1 +72,1 @@\n-        if (name_index == 0) {\n+        if (nameIndex == 0) {\n@@ -75,1 +75,1 @@\n-        return ((ConstantUtf8) constant_pool.getConstant(name_index, Const.CONSTANT_Utf8)).getBytes();\n+        return ((ConstantUtf8) constant_pool.getConstant(nameIndex, Const.CONSTANT_Utf8)).getBytes();\n@@ -79,1 +79,1 @@\n-        return access_flags;\n+        return accessFlags;\n@@ -83,1 +83,1 @@\n-        this.access_flags = access_flags;\n+        this.accessFlags = access_flags;\n@@ -87,1 +87,1 @@\n-        return (access_flags & Const.ACC_FINAL) != 0;\n+        return (accessFlags & Const.ACC_FINAL) != 0;\n@@ -91,1 +91,1 @@\n-        return (access_flags & Const.ACC_SYNTHETIC) != 0;\n+        return (accessFlags & Const.ACC_SYNTHETIC) != 0;\n@@ -95,1 +95,1 @@\n-        return (access_flags & Const.ACC_MANDATED) != 0;\n+        return (accessFlags & Const.ACC_MANDATED) != 0;\n@@ -109,2 +109,2 @@\n-        file.writeShort(name_index);\n-        file.writeShort(access_flags);\n+        file.writeShort(nameIndex);\n+        file.writeShort(accessFlags);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/MethodParameter.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.24\">\n+ * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.24\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/MethodParameters.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n- * This class is derived from <em>Attribute<\/em> and represents the list of modules required, exported, opened or provided by a module.\n+ * This class is derived from <em>Attribute<\/em> and represents the list of\n+ * modules required, exported, opened or provided by a module.\n@@ -39,3 +40,3 @@\n-    private final int module_name_index;\n-    private final int module_flags;\n-    private final int module_version_index;\n+    private final int moduleNameIndex;\n+    private final int moduleFlags;\n+    private final int moduleVersionIndex;\n@@ -43,6 +44,6 @@\n-    private ModuleRequires[] requires_table;\n-    private ModuleExports[] exports_table;\n-    private ModuleOpens[] opens_table;\n-    private final int uses_count;\n-    private final int[] uses_index;\n-    private ModuleProvides[] provides_table;\n+    private ModuleRequires[] requiresTable;\n+    private ModuleExports[] exportsTable;\n+    private ModuleOpens[] opensTable;\n+    private final int usesCount;\n+    private final int[] usesIndex;\n+    private ModuleProvides[] providesTable;\n@@ -61,3 +62,3 @@\n-        module_name_index = input.readUnsignedShort();\n-        module_flags = input.readUnsignedShort();\n-        module_version_index = input.readUnsignedShort();\n+        moduleNameIndex = input.readUnsignedShort();\n+        moduleFlags = input.readUnsignedShort();\n+        moduleVersionIndex = input.readUnsignedShort();\n@@ -66,1 +67,1 @@\n-        requires_table = new ModuleRequires[requires_count];\n+        requiresTable = new ModuleRequires[requires_count];\n@@ -68,1 +69,1 @@\n-            requires_table[i] = new ModuleRequires(input);\n+            requiresTable[i] = new ModuleRequires(input);\n@@ -72,1 +73,1 @@\n-        exports_table = new ModuleExports[exports_count];\n+        exportsTable = new ModuleExports[exports_count];\n@@ -74,1 +75,1 @@\n-            exports_table[i] = new ModuleExports(input);\n+            exportsTable[i] = new ModuleExports(input);\n@@ -78,1 +79,1 @@\n-        opens_table = new ModuleOpens[opens_count];\n+        opensTable = new ModuleOpens[opens_count];\n@@ -80,1 +81,1 @@\n-            opens_table[i] = new ModuleOpens(input);\n+            opensTable[i] = new ModuleOpens(input);\n@@ -83,4 +84,4 @@\n-        uses_count = input.readUnsignedShort();\n-        uses_index = new int[uses_count];\n-        for (int i = 0; i < uses_count; i++) {\n-            uses_index[i] = input.readUnsignedShort();\n+        usesCount = input.readUnsignedShort();\n+        usesIndex = new int[usesCount];\n+        for (int i = 0; i < usesCount; i++) {\n+            usesIndex[i] = input.readUnsignedShort();\n@@ -90,1 +91,1 @@\n-        provides_table = new ModuleProvides[provides_count];\n+        providesTable = new ModuleProvides[provides_count];\n@@ -92,1 +93,1 @@\n-            provides_table[i] = new ModuleProvides(input);\n+            providesTable[i] = new ModuleProvides(input);\n@@ -116,1 +117,1 @@\n-        return requires_table;\n+        return requiresTable;\n@@ -125,1 +126,1 @@\n-        return exports_table;\n+        return exportsTable;\n@@ -134,1 +135,1 @@\n-        return opens_table;\n+        return opensTable;\n@@ -143,1 +144,1 @@\n-        return provides_table;\n+        return providesTable;\n@@ -157,3 +158,3 @@\n-        file.writeShort(module_name_index);\n-        file.writeShort(module_flags);\n-        file.writeShort(module_version_index);\n+        file.writeShort(moduleNameIndex);\n+        file.writeShort(moduleFlags);\n+        file.writeShort(moduleVersionIndex);\n@@ -161,2 +162,2 @@\n-        file.writeShort(requires_table.length);\n-        for (final ModuleRequires entry : requires_table) {\n+        file.writeShort(requiresTable.length);\n+        for (final ModuleRequires entry : requiresTable) {\n@@ -166,2 +167,2 @@\n-        file.writeShort(exports_table.length);\n-        for (final ModuleExports entry : exports_table) {\n+        file.writeShort(exportsTable.length);\n+        for (final ModuleExports entry : exportsTable) {\n@@ -171,2 +172,2 @@\n-        file.writeShort(opens_table.length);\n-        for (final ModuleOpens entry : opens_table) {\n+        file.writeShort(opensTable.length);\n+        for (final ModuleOpens entry : opensTable) {\n@@ -176,2 +177,2 @@\n-        file.writeShort(uses_index.length);\n-        for (final int entry : uses_index) {\n+        file.writeShort(usesIndex.length);\n+        for (final int entry : usesIndex) {\n@@ -181,2 +182,2 @@\n-        file.writeShort(provides_table.length);\n-        for (final ModuleProvides entry : provides_table) {\n+        file.writeShort(providesTable.length);\n+        for (final ModuleProvides entry : providesTable) {\n@@ -196,3 +197,3 @@\n-        buf.append(\"  name:    \") .append(cp.getConstantString(module_name_index, Const.CONSTANT_Module).replace('\/', '.')).append(\"\\n\");\n-        buf.append(\"  flags:   \") .append(String.format(\"%04x\", module_flags)).append(\"\\n\");\n-        final String version = module_version_index == 0 ? \"0\" : cp.getConstantString(module_version_index, Const.CONSTANT_Utf8);\n+        buf.append(\"  name:    \") .append(cp.getConstantString(moduleNameIndex, Const.CONSTANT_Module).replace('\/', '.')).append(\"\\n\");\n+        buf.append(\"  flags:   \") .append(String.format(\"%04x\", moduleFlags)).append(\"\\n\");\n+        final String version = moduleVersionIndex == 0 ? \"0\" : cp.getConstantString(moduleVersionIndex, Const.CONSTANT_Utf8);\n@@ -201,2 +202,2 @@\n-        buf.append(\"  requires(\").append(requires_table.length).append(\"):\\n\");\n-        for (final ModuleRequires module : requires_table) {\n+        buf.append(\"  requires(\").append(requiresTable.length).append(\"):\\n\");\n+        for (final ModuleRequires module : requiresTable) {\n@@ -206,2 +207,2 @@\n-        buf.append(\"  exports(\").append(exports_table.length).append(\"):\\n\");\n-        for (final ModuleExports module : exports_table) {\n+        buf.append(\"  exports(\").append(exportsTable.length).append(\"):\\n\");\n+        for (final ModuleExports module : exportsTable) {\n@@ -211,2 +212,2 @@\n-        buf.append(\"  opens(\").append(opens_table.length).append(\"):\\n\");\n-        for (final ModuleOpens module : opens_table) {\n+        buf.append(\"  opens(\").append(opensTable.length).append(\"):\\n\");\n+        for (final ModuleOpens module : opensTable) {\n@@ -216,2 +217,2 @@\n-        buf.append(\"  uses(\").append(uses_index.length).append(\"):\\n\");\n-        for (final int index : uses_index) {\n+        buf.append(\"  uses(\").append(usesIndex.length).append(\"):\\n\");\n+        for (final int index : usesIndex) {\n@@ -222,2 +223,2 @@\n-        buf.append(\"  provides(\").append(provides_table.length).append(\"):\\n\");\n-        for (final ModuleProvides module : provides_table) {\n+        buf.append(\"  provides(\").append(providesTable.length).append(\"):\\n\");\n+        for (final ModuleProvides module : providesTable) {\n@@ -238,3 +239,3 @@\n-        c.requires_table = new ModuleRequires[requires_table.length];\n-        for (int i = 0; i < requires_table.length; i++) {\n-            c.requires_table[i] = requires_table[i].copy();\n+        c.requiresTable = new ModuleRequires[requiresTable.length];\n+        for (int i = 0; i < requiresTable.length; i++) {\n+            c.requiresTable[i] = requiresTable[i].copy();\n@@ -243,3 +244,3 @@\n-        c.exports_table = new ModuleExports[exports_table.length];\n-        for (int i = 0; i < exports_table.length; i++) {\n-            c.exports_table[i] = exports_table[i].copy();\n+        c.exportsTable = new ModuleExports[exportsTable.length];\n+        for (int i = 0; i < exportsTable.length; i++) {\n+            c.exportsTable[i] = exportsTable[i].copy();\n@@ -248,3 +249,3 @@\n-        c.opens_table = new ModuleOpens[opens_table.length];\n-        for (int i = 0; i < opens_table.length; i++) {\n-            c.opens_table[i] = opens_table[i].copy();\n+        c.opensTable = new ModuleOpens[opensTable.length];\n+        for (int i = 0; i < opensTable.length; i++) {\n+            c.opensTable[i] = opensTable[i].copy();\n@@ -253,3 +254,3 @@\n-        c.provides_table = new ModuleProvides[provides_table.length];\n-        for (int i = 0; i < provides_table.length; i++) {\n-            c.provides_table[i] = provides_table[i].copy();\n+        c.providesTable = new ModuleProvides[providesTable.length];\n+        for (int i = 0; i < providesTable.length; i++) {\n+            c.providesTable[i] = providesTable[i].copy();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/Module.java","additions":68,"deletions":67,"binary":false,"changes":135,"status":"modified"},{"patch":"@@ -39,4 +39,4 @@\n-    private final int exports_index;  \/\/ points to CONSTANT_Package_info\n-    private final int exports_flags;\n-    private final int exports_to_count;\n-    private final int[] exports_to_index;  \/\/ points to CONSTANT_Module_info\n+    private final int exportsIndex;  \/\/ points to CONSTANT_Package_info\n+    private final int exportsFlags;\n+    private final int exportsToCount;\n+    private final int[] exportsToIndex;  \/\/ points to CONSTANT_Module_info\n@@ -52,6 +52,6 @@\n-        exports_index = file.readUnsignedShort();\n-        exports_flags = file.readUnsignedShort();\n-        exports_to_count = file.readUnsignedShort();\n-        exports_to_index = new int[exports_to_count];\n-        for (int i = 0; i < exports_to_count; i++) {\n-            exports_to_index[i] = file.readUnsignedShort();\n+        exportsIndex = file.readUnsignedShort();\n+        exportsFlags = file.readUnsignedShort();\n+        exportsToCount = file.readUnsignedShort();\n+        exportsToIndex = new int[exportsToCount];\n+        for (int i = 0; i < exportsToCount; i++) {\n+            exportsToIndex[i] = file.readUnsignedShort();\n@@ -83,4 +83,4 @@\n-        file.writeShort(exports_index);\n-        file.writeShort(exports_flags);\n-        file.writeShort(exports_to_count);\n-        for (final int entry : exports_to_index) {\n+        file.writeShort(exportsIndex);\n+        file.writeShort(exportsFlags);\n+        file.writeShort(exportsToCount);\n+        for (final int entry : exportsToIndex) {\n@@ -97,1 +97,1 @@\n-        return \"exports(\" + exports_index + \", \" + exports_flags + \", \" + exports_to_count + \", ...)\";\n+        return \"exports(\" + exportsIndex + \", \" + exportsFlags + \", \" + exportsToCount + \", ...)\";\n@@ -106,1 +106,1 @@\n-        final String package_name = constant_pool.constantToString(exports_index, Const.CONSTANT_Package);\n+        final String package_name = constant_pool.constantToString(exportsIndex, Const.CONSTANT_Package);\n@@ -108,3 +108,3 @@\n-        buf.append(\", \").append(String.format(\"%04x\", exports_flags));\n-        buf.append(\", to(\").append(exports_to_count).append(\"):\\n\");\n-        for (final int index : exports_to_index) {\n+        buf.append(\", \").append(String.format(\"%04x\", exportsFlags));\n+        buf.append(\", to(\").append(exportsToCount).append(\"):\\n\");\n+        for (final int index : exportsToIndex) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ModuleExports.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    private int main_class_index;\n+    private int mainClassIndex;\n@@ -53,2 +53,2 @@\n-     * @param main_class_index Host class index\n-     * @param constant_pool Array of constants\n+     * @param mainClassIndex Host class index\n+     * @param constantPool Array of constants\n@@ -56,4 +56,4 @@\n-    public ModuleMainClass(final int name_index, final int length, final int main_class_index,\n-            final ConstantPool constant_pool) {\n-        super(Const.ATTR_NEST_MEMBERS, name_index, length, constant_pool);\n-        this.main_class_index = main_class_index;\n+    public ModuleMainClass(final int name_index, final int length, final int mainClassIndex,\n+            final ConstantPool constantPool) {\n+        super(Const.ATTR_NEST_MEMBERS, name_index, length, constantPool);\n+        this.mainClassIndex = mainClassIndex;\n@@ -65,1 +65,1 @@\n-     * @param name_index Index in constant pool\n+     * @param nameIndex Index in constant pool\n@@ -68,1 +68,1 @@\n-     * @param constant_pool Array of constants\n+     * @param constantPool Array of constants\n@@ -71,3 +71,3 @@\n-    ModuleMainClass(final int name_index, final int length, final DataInput input, final ConstantPool constant_pool) throws IOException {\n-        this(name_index, length, 0, constant_pool);\n-        main_class_index = input.readUnsignedShort();\n+    ModuleMainClass(final int nameIndex, final int length, final DataInput input, final ConstantPool constantPool) throws IOException {\n+        this(nameIndex, length, 0, constantPool);\n+        mainClassIndex = input.readUnsignedShort();\n@@ -99,1 +99,1 @@\n-        file.writeShort(main_class_index);\n+        file.writeShort(mainClassIndex);\n@@ -107,1 +107,1 @@\n-        return main_class_index;\n+        return mainClassIndex;\n@@ -112,1 +112,1 @@\n-     * @param main_class_index the host class index\n+     * @param mainClassIndex the host class index\n@@ -114,2 +114,2 @@\n-    public void setHostClassIndex( final int main_class_index ) {\n-        this.main_class_index = main_class_index;\n+    public void setHostClassIndex( final int mainClassIndex ) {\n+        this.mainClassIndex = mainClassIndex;\n@@ -126,1 +126,1 @@\n-        final String class_name = super.getConstantPool().getConstantString(main_class_index, Const.CONSTANT_Class);\n+        final String class_name = super.getConstantPool().getConstantString(mainClassIndex, Const.CONSTANT_Class);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ModuleMainClass.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -39,4 +39,4 @@\n-    private final int opens_index;  \/\/ points to CONSTANT_Package_info\n-    private final int opens_flags;\n-    private final int opens_to_count;\n-    private final int[] opens_to_index;  \/\/ points to CONSTANT_Module_info\n+    private final int opensIndex;  \/\/ points to CONSTANT_Package_info\n+    private final int opensFlags;\n+    private final int opensToCount;\n+    private final int[] opensToIndex;  \/\/ points to CONSTANT_Module_info\n@@ -52,6 +52,6 @@\n-        opens_index = file.readUnsignedShort();\n-        opens_flags = file.readUnsignedShort();\n-        opens_to_count = file.readUnsignedShort();\n-        opens_to_index = new int[opens_to_count];\n-        for (int i = 0; i < opens_to_count; i++) {\n-            opens_to_index[i] = file.readUnsignedShort();\n+        opensIndex = file.readUnsignedShort();\n+        opensFlags = file.readUnsignedShort();\n+        opensToCount = file.readUnsignedShort();\n+        opensToIndex = new int[opensToCount];\n+        for (int i = 0; i < opensToCount; i++) {\n+            opensToIndex[i] = file.readUnsignedShort();\n@@ -83,4 +83,4 @@\n-        file.writeShort(opens_index);\n-        file.writeShort(opens_flags);\n-        file.writeShort(opens_to_count);\n-        for (final int entry : opens_to_index) {\n+        file.writeShort(opensIndex);\n+        file.writeShort(opensFlags);\n+        file.writeShort(opensToCount);\n+        for (final int entry : opensToIndex) {\n@@ -97,1 +97,1 @@\n-        return \"opens(\" + opens_index + \", \" + opens_flags + \", \" + opens_to_count + \", ...)\";\n+        return \"opens(\" + opensIndex + \", \" + opensFlags + \", \" + opensToCount + \", ...)\";\n@@ -106,1 +106,1 @@\n-        final String package_name = constant_pool.constantToString(opens_index, Const.CONSTANT_Package);\n+        final String package_name = constant_pool.constantToString(opensIndex, Const.CONSTANT_Package);\n@@ -108,3 +108,3 @@\n-        buf.append(\", \").append(String.format(\"%04x\", opens_flags));\n-        buf.append(\", to(\").append(opens_to_count).append(\"):\\n\");\n-        for (final int index : opens_to_index) {\n+        buf.append(\", \").append(String.format(\"%04x\", opensFlags));\n+        buf.append(\", to(\").append(opensToCount).append(\"):\\n\");\n+        for (final int index : opensToIndex) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ModuleOpens.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    private int[] package_index_table;\n+    private int[] packageIndexTable;\n@@ -51,1 +51,1 @@\n-     * @param name_index Index in constant pool\n+     * @param nameIndex Index in constant pool\n@@ -53,2 +53,2 @@\n-     * @param package_index_table Table of indices in constant pool\n-     * @param constant_pool Array of constants\n+     * @param packageIndexTable Table of indices in constant pool\n+     * @param constantPool Array of constants\n@@ -56,4 +56,4 @@\n-    public ModulePackages(final int name_index, final int length, final int[] package_index_table,\n-            final ConstantPool constant_pool) {\n-        super(Const.ATTR_MODULE_PACKAGES, name_index, length, constant_pool);\n-        this.package_index_table = package_index_table != null ? package_index_table : new int[0];\n+    public ModulePackages(final int nameIndex, final int length, final int[] packageIndexTable,\n+            final ConstantPool constantPool) {\n+        super(Const.ATTR_MODULE_PACKAGES, nameIndex, length, constantPool);\n+        this.packageIndexTable = packageIndexTable != null ? packageIndexTable : new int[0];\n@@ -74,1 +74,1 @@\n-        package_index_table = new int[number_of_packages];\n+        packageIndexTable = new int[number_of_packages];\n@@ -76,1 +76,1 @@\n-            package_index_table[i] = input.readUnsignedShort();\n+            packageIndexTable[i] = input.readUnsignedShort();\n@@ -103,2 +103,2 @@\n-        file.writeShort(package_index_table.length);\n-        for (final int index : package_index_table) {\n+        file.writeShort(packageIndexTable.length);\n+        for (final int index : packageIndexTable) {\n@@ -114,1 +114,1 @@\n-        return package_index_table;\n+        return packageIndexTable;\n@@ -122,1 +122,1 @@\n-        return package_index_table == null ? 0 : package_index_table.length;\n+        return packageIndexTable == null ? 0 : packageIndexTable.length;\n@@ -130,3 +130,3 @@\n-        final String[] names = new String[package_index_table.length];\n-        for (int i = 0; i < package_index_table.length; i++) {\n-            names[i] = super.getConstantPool().getConstantString(package_index_table[i],\n+        final String[] names = new String[packageIndexTable.length];\n+        for (int i = 0; i < packageIndexTable.length; i++) {\n+            names[i] = super.getConstantPool().getConstantString(packageIndexTable[i],\n@@ -140,1 +140,1 @@\n-     * @param package_index_table the list of package indexes\n+     * @param packageIndexTable the list of package indexes\n@@ -143,2 +143,2 @@\n-    public void setPackageIndexTable( final int[] package_index_table ) {\n-        this.package_index_table = package_index_table != null ? package_index_table : new int[0];\n+    public void setPackageIndexTable( final int[] packageIndexTable ) {\n+        this.packageIndexTable = packageIndexTable != null ? packageIndexTable : new int[0];\n@@ -155,1 +155,1 @@\n-        buf.append(package_index_table.length);\n+        buf.append(packageIndexTable.length);\n@@ -157,1 +157,1 @@\n-        for (final int index : package_index_table) {\n+        for (final int index : packageIndexTable) {\n@@ -171,4 +171,4 @@\n-        if (package_index_table != null) {\n-            c.package_index_table = new int[package_index_table.length];\n-            System.arraycopy(package_index_table, 0, c.package_index_table, 0,\n-                    package_index_table.length);\n+        if (packageIndexTable != null) {\n+            c.packageIndexTable = new int[packageIndexTable.length];\n+            System.arraycopy(packageIndexTable, 0, c.packageIndexTable, 0,\n+                    packageIndexTable.length);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ModulePackages.java","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n-    private final int provides_index;  \/\/ points to CONSTANT_Class_info\n-    private final int provides_with_count;\n-    private final int[] provides_with_index;  \/\/ points to CONSTANT_Class_info\n+    private final int providesIndex;  \/\/ points to CONSTANT_Class_info\n+    private final int providesWithCount;\n+    private final int[] providesWithIndex;  \/\/ points to CONSTANT_Class_info\n@@ -51,5 +51,5 @@\n-        provides_index = file.readUnsignedShort();\n-        provides_with_count = file.readUnsignedShort();\n-        provides_with_index = new int[provides_with_count];\n-        for (int i = 0; i < provides_with_count; i++) {\n-            provides_with_index[i] = file.readUnsignedShort();\n+        providesIndex = file.readUnsignedShort();\n+        providesWithCount = file.readUnsignedShort();\n+        providesWithIndex = new int[providesWithCount];\n+        for (int i = 0; i < providesWithCount; i++) {\n+            providesWithIndex[i] = file.readUnsignedShort();\n@@ -81,3 +81,3 @@\n-        file.writeShort(provides_index);\n-        file.writeShort(provides_with_count);\n-        for (final int entry : provides_with_index) {\n+        file.writeShort(providesIndex);\n+        file.writeShort(providesWithCount);\n+        for (final int entry : providesWithIndex) {\n@@ -94,1 +94,1 @@\n-        return \"provides(\" + provides_index + \", \" + provides_with_count + \", ...)\";\n+        return \"provides(\" + providesIndex + \", \" + providesWithCount + \", ...)\";\n@@ -103,1 +103,1 @@\n-        final String interface_name = constant_pool.constantToString(provides_index, Const.CONSTANT_Class);\n+        final String interface_name = constant_pool.constantToString(providesIndex, Const.CONSTANT_Class);\n@@ -105,2 +105,2 @@\n-        buf.append(\", with(\").append(provides_with_count).append(\"):\\n\");\n-        for (final int index : provides_with_index) {\n+        buf.append(\", with(\").append(providesWithCount).append(\"):\\n\");\n+        for (final int index : providesWithIndex) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ModuleProvides.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n-    private final int requires_index;  \/\/ points to CONSTANT_Module_info\n-    private final int requires_flags;\n-    private final int requires_version_index;  \/\/ either 0 or points to CONSTANT_Utf8_info\n+    private final int requiresIndex;  \/\/ points to CONSTANT_Module_info\n+    private final int requiresFlags;\n+    private final int requiresVersionIndex;  \/\/ either 0 or points to CONSTANT_Utf8_info\n@@ -51,3 +51,3 @@\n-        requires_index = file.readUnsignedShort();\n-        requires_flags = file.readUnsignedShort();\n-        requires_version_index = file.readUnsignedShort();\n+        requiresIndex = file.readUnsignedShort();\n+        requiresFlags = file.readUnsignedShort();\n+        requiresVersionIndex = file.readUnsignedShort();\n@@ -78,3 +78,3 @@\n-        file.writeShort(requires_index);\n-        file.writeShort(requires_flags);\n-        file.writeShort(requires_version_index);\n+        file.writeShort(requiresIndex);\n+        file.writeShort(requiresFlags);\n+        file.writeShort(requiresVersionIndex);\n@@ -89,1 +89,1 @@\n-        return \"requires(\" + requires_index + \", \" + String.format(\"%04x\", requires_flags) + \", \" + requires_version_index + \")\";\n+        return \"requires(\" + requiresIndex + \", \" + String.format(\"%04x\", requiresFlags) + \", \" + requiresVersionIndex + \")\";\n@@ -98,1 +98,1 @@\n-        final String module_name = constant_pool.constantToString(requires_index, Const.CONSTANT_Module);\n+        final String module_name = constant_pool.constantToString(requiresIndex, Const.CONSTANT_Module);\n@@ -100,2 +100,2 @@\n-        buf.append(\", \").append(String.format(\"%04x\", requires_flags));\n-        final String version = requires_version_index == 0 ? \"0\" : constant_pool.getConstantString(requires_version_index, Const.CONSTANT_Utf8);\n+        buf.append(\", \").append(String.format(\"%04x\", requiresFlags));\n+        final String version = requiresVersionIndex == 0 ? \"0\" : constant_pool.getConstantString(requiresVersionIndex, Const.CONSTANT_Utf8);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ModuleRequires.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private int host_class_index;\n+    private int hostClassIndex;\n@@ -52,1 +52,1 @@\n-     * @param name_index Index in constant pool\n+     * @param nameIndex Index in constant pool\n@@ -54,2 +54,2 @@\n-     * @param host_class_index Host class index\n-     * @param constant_pool Array of constants\n+     * @param hostClassIndex Host class index\n+     * @param constantPool Array of constants\n@@ -57,4 +57,4 @@\n-    public NestHost(final int name_index, final int length, final int host_class_index,\n-            final ConstantPool constant_pool) {\n-        super(Const.ATTR_NEST_MEMBERS, name_index, length, constant_pool);\n-        this.host_class_index = host_class_index;\n+    public NestHost(final int nameIndex, final int length, final int hostClassIndex,\n+            final ConstantPool constantPool) {\n+        super(Const.ATTR_NEST_MEMBERS, nameIndex, length, constantPool);\n+        this.hostClassIndex = hostClassIndex;\n@@ -74,1 +74,1 @@\n-        host_class_index = input.readUnsignedShort();\n+        hostClassIndex = input.readUnsignedShort();\n@@ -100,1 +100,1 @@\n-        file.writeShort(host_class_index);\n+        file.writeShort(hostClassIndex);\n@@ -108,1 +108,1 @@\n-        return host_class_index;\n+        return hostClassIndex;\n@@ -113,1 +113,1 @@\n-     * @param host_class_index the host class index\n+     * @param hostClassIndex the host class index\n@@ -115,2 +115,2 @@\n-    public void setHostClassIndex( final int host_class_index ) {\n-        this.host_class_index = host_class_index;\n+    public void setHostClassIndex( final int hostClassIndex ) {\n+        this.hostClassIndex = hostClassIndex;\n@@ -127,1 +127,1 @@\n-        final String class_name = super.getConstantPool().getConstantString(host_class_index, Const.CONSTANT_Class);\n+        final String class_name = super.getConstantPool().getConstantString(hostClassIndex, Const.CONSTANT_Class);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/NestHost.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -38,2 +38,2 @@\n-    private int pmg_class_index;\n-    private int pmg_index;\n+    private int pmgClassIndex;\n+    private int pmgIndex;\n@@ -46,3 +46,3 @@\n-    public PMGClass(final PMGClass c) {\n-        this(c.getNameIndex(), c.getLength(), c.getPMGIndex(), c.getPMGClassIndex(), c\n-                .getConstantPool());\n+    public PMGClass(final PMGClass pgmClass) {\n+        this(pgmClass.getNameIndex(), pgmClass.getLength(), pgmClass.getPMGIndex(), pgmClass.getPMGClassIndex(),\n+            pgmClass.getConstantPool());\n@@ -69,3 +69,3 @@\n-     * @param pmg_index index in constant pool for source file name\n-     * @param pmg_class_index Index in constant pool to CONSTANT_Utf8\n-     * @param constant_pool Array of constants\n+     * @param pmgIndex index in constant pool for source file name\n+     * @param pmgClassIndex Index in constant pool to CONSTANT_Utf8\n+     * @param constantPool Array of constants\n@@ -73,5 +73,5 @@\n-    public PMGClass(final int name_index, final int length, final int pmg_index, final int pmg_class_index,\n-            final ConstantPool constant_pool) {\n-        super(Const.ATTR_PMG, name_index, length, constant_pool);\n-        this.pmg_index = pmg_index;\n-        this.pmg_class_index = pmg_class_index;\n+    public PMGClass(final int name_index, final int length, final int pmgIndex, final int pmgClassIndex,\n+            final ConstantPool constantPool) {\n+        super(Const.ATTR_PMG, name_index, length, constantPool);\n+        this.pmgIndex = pmgIndex;\n+        this.pmgClassIndex = pmgClassIndex;\n@@ -103,2 +103,2 @@\n-        file.writeShort(pmg_index);\n-        file.writeShort(pmg_class_index);\n+        file.writeShort(pmgIndex);\n+        file.writeShort(pmgClassIndex);\n@@ -112,1 +112,1 @@\n-        return pmg_class_index;\n+        return pmgClassIndex;\n@@ -117,1 +117,1 @@\n-     * @param pmg_class_index\n+     * @param pmgClassIndex\n@@ -119,2 +119,2 @@\n-    public void setPMGClassIndex( final int pmg_class_index ) {\n-        this.pmg_class_index = pmg_class_index;\n+    public void setPMGClassIndex( final int pmgClassIndex ) {\n+        this.pmgClassIndex = pmgClassIndex;\n@@ -128,1 +128,1 @@\n-        return pmg_index;\n+        return pmgIndex;\n@@ -133,1 +133,1 @@\n-     * @param pmg_index\n+     * @param pmgIndex\n@@ -135,2 +135,2 @@\n-    public void setPMGIndex( final int pmg_index ) {\n-        this.pmg_index = pmg_index;\n+    public void setPMGIndex( final int pmgIndex ) {\n+        this.pmgIndex = pmgIndex;\n@@ -144,1 +144,1 @@\n-        final ConstantUtf8 c = (ConstantUtf8) super.getConstantPool().getConstant(pmg_index,\n+        final ConstantUtf8 c = (ConstantUtf8) super.getConstantPool().getConstant(pmgIndex,\n@@ -154,1 +154,1 @@\n-        final ConstantUtf8 c = (ConstantUtf8) super.getConstantPool().getConstant(pmg_class_index,\n+        final ConstantUtf8 c = (ConstantUtf8) super.getConstantPool().getConstant(pmgClassIndex,\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/PMGClass.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    private final AnnotationEntry[] annotation_table;\n+    private final AnnotationEntry[] annotationTable;\n@@ -49,1 +49,1 @@\n-        annotation_table = new AnnotationEntry[annotation_table_length];\n+        annotationTable = new AnnotationEntry[annotation_table_length];\n@@ -52,1 +52,1 @@\n-            annotation_table[i] = AnnotationEntry.read(input, constant_pool, false);\n+            annotationTable[i] = AnnotationEntry.read(input, constant_pool, false);\n@@ -73,1 +73,1 @@\n-        return annotation_table;\n+        return annotationTable;\n@@ -77,2 +77,2 @@\n-        dos.writeShort(annotation_table.length);\n-        for (final AnnotationEntry entry : annotation_table) {\n+        dos.writeShort(annotationTable.length);\n+        for (final AnnotationEntry entry : annotationTable) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ParameterAnnotationEntry.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    private ParameterAnnotationEntry[] parameter_annotation_table;\n+    private ParameterAnnotationEntry[] parameterAnnotationTable;\n@@ -50,1 +50,1 @@\n-        parameter_annotation_table = new ParameterAnnotationEntry[num_parameters];\n+        parameterAnnotationTable = new ParameterAnnotationEntry[num_parameters];\n@@ -52,1 +52,1 @@\n-            parameter_annotation_table[i] = new ParameterAnnotationEntry(input, constant_pool);\n+            parameterAnnotationTable[i] = new ParameterAnnotationEntry(input, constant_pool);\n@@ -58,2 +58,2 @@\n-     * @param parameter_annotation_type the subclass type of the parameter annotation\n-     * @param name_index Index pointing to the name <em>Code<\/em>\n+     * @param parameterAnnotationType the subclass type of the parameter annotation\n+     * @param nameIndex Index pointing to the name <em>Code<\/em>\n@@ -61,2 +61,2 @@\n-     * @param parameter_annotation_table the actual parameter annotations\n-     * @param constant_pool Array of constants\n+     * @param parameterAnnotationTable the actual parameter annotations\n+     * @param constantPool Array of constants\n@@ -64,4 +64,4 @@\n-    public ParameterAnnotations(final byte parameter_annotation_type, final int name_index, final int length,\n-            final ParameterAnnotationEntry[] parameter_annotation_table, final ConstantPool constant_pool) {\n-        super(parameter_annotation_type, name_index, length, constant_pool);\n-        this.parameter_annotation_table = parameter_annotation_table;\n+    public ParameterAnnotations(final byte parameterAnnotationType, final int nameIndex, final int length,\n+            final ParameterAnnotationEntry[] parameterAnnotationTable, final ConstantPool constantPool) {\n+        super(parameterAnnotationType, nameIndex, length, constantPool);\n+        this.parameterAnnotationTable = parameterAnnotationTable;\n@@ -85,1 +85,1 @@\n-     * @param parameter_annotation_table the entries to set in this parameter annotation\n+     * @param parameterAnnotationTable the entries to set in this parameter annotation\n@@ -87,2 +87,2 @@\n-    public final void setParameterAnnotationTable(final ParameterAnnotationEntry[] parameter_annotation_table ) {\n-        this.parameter_annotation_table = parameter_annotation_table;\n+    public final void setParameterAnnotationTable(final ParameterAnnotationEntry[] parameterAnnotationTable ) {\n+        this.parameterAnnotationTable = parameterAnnotationTable;\n@@ -96,1 +96,1 @@\n-        return parameter_annotation_table;\n+        return parameterAnnotationTable;\n@@ -104,1 +104,1 @@\n-        return parameter_annotation_table;\n+        return parameterAnnotationTable;\n@@ -111,1 +111,1 @@\n-        dos.writeByte(parameter_annotation_table.length);\n+        dos.writeByte(parameterAnnotationTable.length);\n@@ -113,1 +113,1 @@\n-        for (final ParameterAnnotationEntry element : parameter_annotation_table) {\n+        for (final ParameterAnnotationEntry element : parameterAnnotationTable) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/ParameterAnnotations.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private int signature_index;\n+    private int signatureIndex;\n@@ -68,1 +68,1 @@\n-     * @param signature_index Index in constant pool to CONSTANT_Utf8\n+     * @param signatureIndex Index in constant pool to CONSTANT_Utf8\n@@ -71,1 +71,1 @@\n-    public Signature(final int name_index, final int length, final int signature_index, final ConstantPool constant_pool) {\n+    public Signature(final int name_index, final int length, final int signatureIndex, final ConstantPool constant_pool) {\n@@ -73,1 +73,1 @@\n-        this.signature_index = signature_index;\n+        this.signatureIndex = signatureIndex;\n@@ -100,1 +100,1 @@\n-        file.writeShort(signature_index);\n+        file.writeShort(signatureIndex);\n@@ -108,1 +108,1 @@\n-        return signature_index;\n+        return signatureIndex;\n@@ -113,1 +113,1 @@\n-     * @param signature_index the index info the constant pool of this signature\n+     * @param signatureIndex the index info the constant pool of this signature\n@@ -115,2 +115,2 @@\n-    public void setSignatureIndex( final int signature_index ) {\n-        this.signature_index = signature_index;\n+    public void setSignatureIndex( final int signatureIndex ) {\n+        this.signatureIndex = signatureIndex;\n@@ -124,1 +124,1 @@\n-        final ConstantUtf8 c = (ConstantUtf8) super.getConstantPool().getConstant(signature_index,\n+        final ConstantUtf8 c = (ConstantUtf8) super.getConstantPool().getConstant(signatureIndex,\n@@ -160,1 +160,1 @@\n-            throw new RuntimeException(\"Illegal signature: \" + in.getData()\n+            throw new IllegalArgumentException(\"Illegal signature: \" + in.getData()\n@@ -210,1 +210,1 @@\n-                    throw new RuntimeException(\"Illegal signature: \" + in.getData()\n+                    throw new IllegalArgumentException(\"Illegal signature: \" + in.getData()\n@@ -231,1 +231,1 @@\n-            throw new RuntimeException(\"Illegal signature: \" + in.getData() + \" read \" + (char) ch);\n+            throw new IllegalArgumentException(\"Illegal signature: \" + in.getData() + \" read \" + (char) ch);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/Signature.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -69,1 +69,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -80,1 +80,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -91,1 +91,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -102,1 +102,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -112,1 +112,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -122,1 +122,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -132,1 +132,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -142,1 +142,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -203,1 +203,1 @@\n-            throw new RuntimeException(\"SimpleElementValue class does not know how to stringify type \" + _type);\n+            throw new IllegalStateException(\"SimpleElementValue class does not know how to stringify type \" + _type);\n@@ -226,1 +226,1 @@\n-            throw new RuntimeException(\"SimpleElementValue doesnt know how to write out type \" + _type);\n+            throw new IllegalStateException(\"SimpleElementValue doesnt know how to write out type \" + _type);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/SimpleElementValue.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    private int sourcefile_index;\n+    private int sourceFileIndex;\n@@ -70,1 +70,1 @@\n-     * @param constant_pool The constant pool that this attribute is\n+     * @param constantPool The constant pool that this attribute is\n@@ -72,1 +72,1 @@\n-     * @param sourcefile_index Index in constant pool to CONSTANT_Utf8.  This\n+     * @param sourceFileIndex Index in constant pool to CONSTANT_Utf8.  This\n@@ -79,3 +79,3 @@\n-    public SourceFile(final int name_index, final int length, final int sourcefile_index, final ConstantPool constant_pool) {\n-        super(Const.ATTR_SOURCE_FILE, name_index, length, constant_pool);\n-        this.sourcefile_index = sourcefile_index;\n+    public SourceFile(final int name_index, final int length, final int sourceFileIndex, final ConstantPool constantPool) {\n+        super(Const.ATTR_SOURCE_FILE, name_index, length, constantPool);\n+        this.sourceFileIndex = sourceFileIndex;\n@@ -107,1 +107,1 @@\n-        file.writeShort(sourcefile_index);\n+        file.writeShort(sourceFileIndex);\n@@ -115,1 +115,1 @@\n-        return sourcefile_index;\n+        return sourceFileIndex;\n@@ -120,1 +120,1 @@\n-     * @param sourcefile_index\n+     * @param sourceFileIndex\n@@ -122,2 +122,2 @@\n-    public void setSourceFileIndex( final int sourcefile_index ) {\n-        this.sourcefile_index = sourcefile_index;\n+    public void setSourceFileIndex( final int sourceFileIndex ) {\n+        this.sourceFileIndex = sourceFileIndex;\n@@ -131,1 +131,1 @@\n-        final ConstantUtf8 c = (ConstantUtf8) super.getConstantPool().getConstant(sourcefile_index,\n+        final ConstantUtf8 c = (ConstantUtf8) super.getConstantPool().getConstant(sourceFileIndex,\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/SourceFile.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,2 +2,1 @@\n- * reserved comment block\n- * DO NOT REMOVE OR ALTER!\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +41,1 @@\n+ * @LastModified: Oct 2020\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/StackMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,5 +40,5 @@\n-    private int frame_type;\n-    private int byte_code_offset;\n-    private StackMapType[] types_of_locals;\n-    private StackMapType[] types_of_stack_items;\n-    private ConstantPool constant_pool;\n+    private int frameType;\n+    private int byteCodeOffset;\n+    private StackMapType[] typesOfLocals;\n+    private StackMapType[] typesOfStackItems;\n+    private ConstantPool constantPool;\n@@ -56,19 +56,19 @@\n-        if (frame_type >= Const.SAME_FRAME && frame_type <= Const.SAME_FRAME_MAX) {\n-            byte_code_offset = frame_type - Const.SAME_FRAME;\n-        } else if (frame_type >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n-                   frame_type <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n-            byte_code_offset = frame_type - Const.SAME_LOCALS_1_STACK_ITEM_FRAME;\n-            types_of_stack_items = new StackMapType[1];\n-            types_of_stack_items[0] = new StackMapType(input, constantPool);\n-        } else if (frame_type == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n-            byte_code_offset = input.readShort();\n-            types_of_stack_items = new StackMapType[1];\n-            types_of_stack_items[0] = new StackMapType(input, constantPool);\n-        } else if (frame_type >= Const.CHOP_FRAME && frame_type <= Const.CHOP_FRAME_MAX) {\n-            byte_code_offset = input.readShort();\n-        } else if (frame_type == Const.SAME_FRAME_EXTENDED) {\n-            byte_code_offset = input.readShort();\n-        } else if (frame_type >= Const.APPEND_FRAME && frame_type <= Const.APPEND_FRAME_MAX) {\n-            byte_code_offset = input.readShort();\n-            final int number_of_locals = frame_type - 251;\n-            types_of_locals = new StackMapType[number_of_locals];\n+        if (frameType >= Const.SAME_FRAME && frameType <= Const.SAME_FRAME_MAX) {\n+            byteCodeOffset = frameType - Const.SAME_FRAME;\n+        } else if (frameType >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n+                   frameType <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n+            byteCodeOffset = frameType - Const.SAME_LOCALS_1_STACK_ITEM_FRAME;\n+            typesOfStackItems = new StackMapType[1];\n+            typesOfStackItems[0] = new StackMapType(input, constantPool);\n+        } else if (frameType == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n+            byteCodeOffset = input.readShort();\n+            typesOfStackItems = new StackMapType[1];\n+            typesOfStackItems[0] = new StackMapType(input, constantPool);\n+        } else if (frameType >= Const.CHOP_FRAME && frameType <= Const.CHOP_FRAME_MAX) {\n+            byteCodeOffset = input.readShort();\n+        } else if (frameType == Const.SAME_FRAME_EXTENDED) {\n+            byteCodeOffset = input.readShort();\n+        } else if (frameType >= Const.APPEND_FRAME && frameType <= Const.APPEND_FRAME_MAX) {\n+            byteCodeOffset = input.readShort();\n+            final int number_of_locals = frameType - 251;\n+            typesOfLocals = new StackMapType[number_of_locals];\n@@ -76,1 +76,1 @@\n-                types_of_locals[i] = new StackMapType(input, constantPool);\n+                typesOfLocals[i] = new StackMapType(input, constantPool);\n@@ -78,2 +78,2 @@\n-        } else if (frame_type == Const.FULL_FRAME) {\n-            byte_code_offset = input.readShort();\n+        } else if (frameType == Const.FULL_FRAME) {\n+            byteCodeOffset = input.readShort();\n@@ -81,1 +81,1 @@\n-            types_of_locals = new StackMapType[number_of_locals];\n+            typesOfLocals = new StackMapType[number_of_locals];\n@@ -83,1 +83,1 @@\n-                types_of_locals[i] = new StackMapType(input, constantPool);\n+                typesOfLocals[i] = new StackMapType(input, constantPool);\n@@ -86,1 +86,1 @@\n-            types_of_stack_items = new StackMapType[number_of_stack_items];\n+            typesOfStackItems = new StackMapType[number_of_stack_items];\n@@ -88,1 +88,1 @@\n-                types_of_stack_items[i] = new StackMapType(input, constantPool);\n+                typesOfStackItems[i] = new StackMapType(input, constantPool);\n@@ -92,1 +92,1 @@\n-            throw new ClassFormatException (\"Invalid frame type found while parsing stack map table: \" + frame_type);\n+            throw new ClassFormatException (\"Invalid frame type found while parsing stack map table: \" + frameType);\n@@ -112,4 +112,4 @@\n-        this.byte_code_offset = byteCodeOffset;\n-        this.types_of_locals = typesOfLocals != null ? typesOfLocals : new StackMapType[0];\n-        this.types_of_stack_items = typesOfStackItems != null ? typesOfStackItems : new StackMapType[0];\n-        this.constant_pool = constantPool;\n+        this.byteCodeOffset = byteCodeOffset;\n+        this.typesOfLocals = typesOfLocals != null ? typesOfLocals : new StackMapType[0];\n+        this.typesOfStackItems = typesOfStackItems != null ? typesOfStackItems : new StackMapType[0];\n+        this.constantPool = constantPool;\n@@ -121,1 +121,1 @@\n-     * @param tag the frame_type to use\n+     * @param tag the frameType to use\n@@ -130,5 +130,5 @@\n-        this.frame_type = tag;\n-        this.byte_code_offset = byteCodeOffset;\n-        this.types_of_locals = typesOfLocals != null ? typesOfLocals : new StackMapType[0];\n-        this.types_of_stack_items = typesOfStackItems != null ? typesOfStackItems : new StackMapType[0];\n-        this.constant_pool = constantPool;\n+        this.frameType = tag;\n+        this.byteCodeOffset = byteCodeOffset;\n+        this.typesOfLocals = typesOfLocals != null ? typesOfLocals : new StackMapType[0];\n+        this.typesOfStackItems = typesOfStackItems != null ? typesOfStackItems : new StackMapType[0];\n+        this.constantPool = constantPool;\n@@ -145,2 +145,2 @@\n-        file.write(frame_type);\n-        if (frame_type >= Const.SAME_FRAME && frame_type <= Const.SAME_FRAME_MAX) {\n+        file.write(frameType);\n+        if (frameType >= Const.SAME_FRAME && frameType <= Const.SAME_FRAME_MAX) {\n@@ -148,13 +148,13 @@\n-        } else if (frame_type >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n-                   frame_type <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n-            types_of_stack_items[0].dump(file);\n-        } else if (frame_type == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n-            file.writeShort(byte_code_offset);\n-            types_of_stack_items[0].dump(file);\n-        } else if (frame_type >= Const.CHOP_FRAME && frame_type <= Const.CHOP_FRAME_MAX) {\n-            file.writeShort(byte_code_offset);\n-        } else if (frame_type == Const.SAME_FRAME_EXTENDED) {\n-            file.writeShort(byte_code_offset);\n-        } else if (frame_type >= Const.APPEND_FRAME && frame_type <= Const.APPEND_FRAME_MAX) {\n-            file.writeShort(byte_code_offset);\n-            for (final StackMapType type : types_of_locals) {\n+        } else if (frameType >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n+                   frameType <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n+            typesOfStackItems[0].dump(file);\n+        } else if (frameType == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n+            file.writeShort(byteCodeOffset);\n+            typesOfStackItems[0].dump(file);\n+        } else if (frameType >= Const.CHOP_FRAME && frameType <= Const.CHOP_FRAME_MAX) {\n+            file.writeShort(byteCodeOffset);\n+        } else if (frameType == Const.SAME_FRAME_EXTENDED) {\n+            file.writeShort(byteCodeOffset);\n+        } else if (frameType >= Const.APPEND_FRAME && frameType <= Const.APPEND_FRAME_MAX) {\n+            file.writeShort(byteCodeOffset);\n+            for (final StackMapType type : typesOfLocals) {\n@@ -163,4 +163,4 @@\n-        } else if (frame_type == Const.FULL_FRAME) {\n-            file.writeShort(byte_code_offset);\n-            file.writeShort(types_of_locals.length);\n-            for (final StackMapType type : types_of_locals) {\n+        } else if (frameType == Const.FULL_FRAME) {\n+            file.writeShort(byteCodeOffset);\n+            file.writeShort(typesOfLocals.length);\n+            for (final StackMapType type : typesOfLocals) {\n@@ -169,2 +169,2 @@\n-            file.writeShort(types_of_stack_items.length);\n-            for (final StackMapType type : types_of_stack_items) {\n+            file.writeShort(typesOfStackItems.length);\n+            for (final StackMapType type : typesOfStackItems) {\n@@ -175,1 +175,1 @@\n-            throw new ClassFormatException (\"Invalid Stack map table tag: \" + frame_type);\n+            throw new ClassFormatException (\"Invalid Stack map table tag: \" + frameType);\n@@ -187,1 +187,1 @@\n-        if (frame_type >= Const.SAME_FRAME && frame_type <= Const.SAME_FRAME_MAX) {\n+        if (frameType >= Const.SAME_FRAME && frameType <= Const.SAME_FRAME_MAX) {\n@@ -189,2 +189,2 @@\n-        } else if (frame_type >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n-                  frame_type <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n+        } else if (frameType >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n+                  frameType <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n@@ -192,1 +192,1 @@\n-        } else if (frame_type == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n+        } else if (frameType == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n@@ -194,3 +194,3 @@\n-        } else if (frame_type >= Const.CHOP_FRAME && frame_type <= Const.CHOP_FRAME_MAX) {\n-            buf.append(\"CHOP \").append(String.valueOf(251-frame_type));\n-        } else if (frame_type == Const.SAME_FRAME_EXTENDED) {\n+        } else if (frameType >= Const.CHOP_FRAME && frameType <= Const.CHOP_FRAME_MAX) {\n+            buf.append(\"CHOP \").append(String.valueOf(251-frameType));\n+        } else if (frameType == Const.SAME_FRAME_EXTENDED) {\n@@ -198,3 +198,3 @@\n-        } else if (frame_type >= Const.APPEND_FRAME && frame_type <= Const.APPEND_FRAME_MAX) {\n-            buf.append(\"APPEND \").append(String.valueOf(frame_type-251));\n-        } else if (frame_type == Const.FULL_FRAME) {\n+        } else if (frameType >= Const.APPEND_FRAME && frameType <= Const.APPEND_FRAME_MAX) {\n+            buf.append(\"APPEND \").append(String.valueOf(frameType-251));\n+        } else if (frameType == Const.FULL_FRAME) {\n@@ -203,1 +203,1 @@\n-            buf.append(\"UNKNOWN (\").append(frame_type).append(\")\");\n+            buf.append(\"UNKNOWN (\").append(frameType).append(\")\");\n@@ -205,2 +205,2 @@\n-        buf.append(\", offset delta=\").append(byte_code_offset);\n-        if (types_of_locals.length > 0) {\n+        buf.append(\", offset delta=\").append(byteCodeOffset);\n+        if (typesOfLocals.length > 0) {\n@@ -208,3 +208,3 @@\n-            for (int i = 0; i < types_of_locals.length; i++) {\n-                buf.append(types_of_locals[i]);\n-                if (i < types_of_locals.length - 1) {\n+            for (int i = 0; i < typesOfLocals.length; i++) {\n+                buf.append(typesOfLocals[i]);\n+                if (i < typesOfLocals.length - 1) {\n@@ -216,1 +216,1 @@\n-        if (types_of_stack_items.length > 0) {\n+        if (typesOfStackItems.length > 0) {\n@@ -218,3 +218,3 @@\n-            for (int i = 0; i < types_of_stack_items.length; i++) {\n-                buf.append(types_of_stack_items[i]);\n-                if (i < types_of_stack_items.length - 1) {\n+            for (int i = 0; i < typesOfStackItems.length; i++) {\n+                buf.append(typesOfStackItems[i]);\n+                if (i < typesOfStackItems.length - 1) {\n@@ -236,1 +236,1 @@\n-        if (frame_type >= Const.SAME_FRAME && frame_type <= Const.SAME_FRAME_MAX) {\n+        if (frameType >= Const.SAME_FRAME && frameType <= Const.SAME_FRAME_MAX) {\n@@ -238,6 +238,6 @@\n-        } else if (frame_type >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n-                   frame_type <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n-            return 1 + (types_of_stack_items[0].hasIndex() ? 3 : 1);\n-        } else if (frame_type == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n-            return 3 + (types_of_stack_items[0].hasIndex() ? 3 : 1);\n-        } else if (frame_type >= Const.CHOP_FRAME && frame_type <= Const.CHOP_FRAME_MAX) {\n+        } else if (frameType >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n+                   frameType <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n+            return 1 + (typesOfStackItems[0].hasIndex() ? 3 : 1);\n+        } else if (frameType == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) {\n+            return 3 + (typesOfStackItems[0].hasIndex() ? 3 : 1);\n+        } else if (frameType >= Const.CHOP_FRAME && frameType <= Const.CHOP_FRAME_MAX) {\n@@ -245,1 +245,1 @@\n-        } else if (frame_type == Const.SAME_FRAME_EXTENDED) {\n+        } else if (frameType == Const.SAME_FRAME_EXTENDED) {\n@@ -247,1 +247,1 @@\n-        } else if (frame_type >= Const.APPEND_FRAME && frame_type <= Const.APPEND_FRAME_MAX) {\n+        } else if (frameType >= Const.APPEND_FRAME && frameType <= Const.APPEND_FRAME_MAX) {\n@@ -249,1 +249,1 @@\n-            for (final StackMapType types_of_local : types_of_locals) {\n+            for (final StackMapType types_of_local : typesOfLocals) {\n@@ -253,1 +253,1 @@\n-        } else if (frame_type == Const.FULL_FRAME) {\n+        } else if (frameType == Const.FULL_FRAME) {\n@@ -255,1 +255,1 @@\n-            for (final StackMapType types_of_local : types_of_locals) {\n+            for (final StackMapType types_of_local : typesOfLocals) {\n@@ -258,1 +258,1 @@\n-            for (final StackMapType types_of_stack_item : types_of_stack_items) {\n+            for (final StackMapType types_of_stack_item : typesOfStackItems) {\n@@ -263,1 +263,1 @@\n-            throw new RuntimeException(\"Invalid StackMap frame_type: \" + frame_type);\n+            throw new IllegalStateException(\"Invalid StackMap frameType: \" + frameType);\n@@ -270,1 +270,1 @@\n-            byte_code_offset = f - Const.SAME_FRAME;\n+            byteCodeOffset = f - Const.SAME_FRAME;\n@@ -273,1 +273,1 @@\n-            byte_code_offset = f - Const.SAME_LOCALS_1_STACK_ITEM_FRAME;\n+            byteCodeOffset = f - Const.SAME_LOCALS_1_STACK_ITEM_FRAME;\n@@ -280,1 +280,1 @@\n-            throw new RuntimeException(\"Invalid StackMap frame_type\");\n+            throw new IllegalArgumentException(\"Invalid StackMap frameType\");\n@@ -282,1 +282,1 @@\n-        frame_type = f;\n+        frameType = f;\n@@ -287,1 +287,1 @@\n-        return frame_type;\n+        return frameType;\n@@ -293,1 +293,1 @@\n-            throw new RuntimeException(\"Invalid StackMap offset: \" + new_offset);\n+            throw new IllegalArgumentException(\"Invalid StackMap offset: \" + new_offset);\n@@ -296,2 +296,2 @@\n-        if (frame_type >= Const.SAME_FRAME &&\n-            frame_type <= Const.SAME_FRAME_MAX) {\n+        if (frameType >= Const.SAME_FRAME &&\n+            frameType <= Const.SAME_FRAME_MAX) {\n@@ -299,1 +299,1 @@\n-                frame_type = Const.SAME_FRAME_EXTENDED;\n+                frameType = Const.SAME_FRAME_EXTENDED;\n@@ -301,1 +301,1 @@\n-                frame_type = new_offset;\n+                frameType = new_offset;\n@@ -303,2 +303,2 @@\n-        } else if (frame_type >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n-                   frame_type <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n+        } else if (frameType >= Const.SAME_LOCALS_1_STACK_ITEM_FRAME &&\n+                   frameType <= Const.SAME_LOCALS_1_STACK_ITEM_FRAME_MAX) {\n@@ -306,1 +306,1 @@\n-                frame_type = Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED;\n+                frameType = Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED;\n@@ -308,1 +308,1 @@\n-                frame_type = Const.SAME_LOCALS_1_STACK_ITEM_FRAME + new_offset;\n+                frameType = Const.SAME_LOCALS_1_STACK_ITEM_FRAME + new_offset;\n@@ -310,7 +310,7 @@\n-        } else if (frame_type == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n-        } else if (frame_type >= Const.CHOP_FRAME &&\n-                   frame_type <= Const.CHOP_FRAME_MAX) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n-        } else if (frame_type == Const.SAME_FRAME_EXTENDED) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n-        } else if (frame_type >= Const.APPEND_FRAME &&\n-                   frame_type <= Const.APPEND_FRAME_MAX) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n-        } else if (frame_type == Const.FULL_FRAME) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n+        } else if (frameType == Const.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n+        } else if (frameType >= Const.CHOP_FRAME &&\n+                   frameType <= Const.CHOP_FRAME_MAX) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n+        } else if (frameType == Const.SAME_FRAME_EXTENDED) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n+        } else if (frameType >= Const.APPEND_FRAME &&\n+                   frameType <= Const.APPEND_FRAME_MAX) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n+        } else if (frameType == Const.FULL_FRAME) { \/\/ CHECKSTYLE IGNORE EmptyBlock\n@@ -318,1 +318,1 @@\n-            throw new RuntimeException(\"Invalid StackMap frame_type: \" + frame_type);\n+            throw new IllegalStateException(\"Invalid StackMap frameType: \" + frameType);\n@@ -320,1 +320,1 @@\n-        byte_code_offset = new_offset;\n+        byteCodeOffset = new_offset;\n@@ -332,1 +332,1 @@\n-        setByteCodeOffset(byte_code_offset + delta);\n+        setByteCodeOffset(byteCodeOffset + delta);\n@@ -337,1 +337,1 @@\n-        return byte_code_offset;\n+        return byteCodeOffset;\n@@ -351,1 +351,1 @@\n-        return types_of_locals.length;\n+        return typesOfLocals.length;\n@@ -356,1 +356,1 @@\n-        types_of_locals = types != null ? types : new StackMapType[0];\n+        typesOfLocals = types != null ? types : new StackMapType[0];\n@@ -361,1 +361,1 @@\n-        return types_of_locals;\n+        return typesOfLocals;\n@@ -375,1 +375,1 @@\n-        return types_of_stack_items.length;\n+        return typesOfStackItems.length;\n@@ -380,1 +380,1 @@\n-        types_of_stack_items = types != null ? types : new StackMapType[0];\n+        typesOfStackItems = types != null ? types : new StackMapType[0];\n@@ -385,1 +385,1 @@\n-        return types_of_stack_items;\n+        return typesOfStackItems;\n@@ -400,3 +400,3 @@\n-        e.types_of_locals = new StackMapType[types_of_locals.length];\n-        for (int i = 0; i < types_of_locals.length; i++) {\n-            e.types_of_locals[i] = types_of_locals[i].copy();\n+        e.typesOfLocals = new StackMapType[typesOfLocals.length];\n+        for (int i = 0; i < typesOfLocals.length; i++) {\n+            e.typesOfLocals[i] = typesOfLocals[i].copy();\n@@ -404,3 +404,3 @@\n-        e.types_of_stack_items = new StackMapType[types_of_stack_items.length];\n-        for (int i = 0; i < types_of_stack_items.length; i++) {\n-            e.types_of_stack_items[i] = types_of_stack_items[i].copy();\n+        e.typesOfStackItems = new StackMapType[typesOfStackItems.length];\n+        for (int i = 0; i < typesOfStackItems.length; i++) {\n+            e.typesOfStackItems[i] = typesOfStackItems[i].copy();\n@@ -429,1 +429,1 @@\n-        return constant_pool;\n+        return constantPool;\n@@ -434,1 +434,1 @@\n-     * @param constant_pool Constant pool to be used for this object.\n+     * @param constantPool Constant pool to be used for this object.\n@@ -436,2 +436,2 @@\n-    public void setConstantPool( final ConstantPool constant_pool ) {\n-        this.constant_pool = constant_pool;\n+    public void setConstantPool( final ConstantPool constantPool ) {\n+        this.constantPool = constantPool;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/StackMapEntry.java","additions":139,"deletions":139,"binary":false,"changes":278,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    private ConstantPool constant_pool;\n+    private ConstantPool constantPool;\n@@ -55,1 +55,1 @@\n-        this.constant_pool = constant_pool;\n+        this.constantPool = constant_pool;\n@@ -65,1 +65,1 @@\n-            throw new RuntimeException(\"Illegal type for StackMapType: \" + type);\n+            throw new IllegalArgumentException(\"Illegal type for StackMapType: \" + type);\n@@ -69,1 +69,1 @@\n-        this.constant_pool = constant_pool;\n+        this.constantPool = constant_pool;\n@@ -75,1 +75,1 @@\n-            throw new RuntimeException(\"Illegal type for StackMapType: \" + t);\n+            throw new IllegalArgumentException(\"Illegal type for StackMapType: \" + t);\n@@ -125,1 +125,1 @@\n-            return \", class=\" + constant_pool.constantToString(index, Const.CONSTANT_Class);\n+            return \", class=\" + constantPool.constantToString(index, Const.CONSTANT_Class);\n@@ -160,1 +160,1 @@\n-        return constant_pool;\n+        return constantPool;\n@@ -165,1 +165,1 @@\n-     * @param constant_pool Constant pool to be used for this object.\n+     * @param constantPool Constant pool to be used for this object.\n@@ -167,2 +167,2 @@\n-    public void setConstantPool( final ConstantPool constant_pool ) {\n-        this.constant_pool = constant_pool;\n+    public void setConstantPool( final ConstantPool constantPool ) {\n+        this.constantPool = constantPool;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/StackMapType.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private static final Map<String, Unknown> unknown_attributes = new HashMap<>();\n+    private static final Map<String, Unknown> unknownAttributes = new HashMap<>();\n@@ -54,3 +54,3 @@\n-        final Unknown[] unknowns = new Unknown[unknown_attributes.size()];\n-        unknown_attributes.values().toArray(unknowns);\n-        unknown_attributes.clear();\n+        final Unknown[] unknowns = new Unknown[unknownAttributes.size()];\n+        unknownAttributes.values().toArray(unknowns);\n+        unknownAttributes.clear();\n@@ -83,1 +83,1 @@\n-        unknown_attributes.put(name, this);\n+        unknownAttributes.put(name, this);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/Unknown.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -775,1 +775,1 @@\n-     * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.3\">\n+     * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.3\">\n@@ -778,1 +778,1 @@\n-     * @see <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.9.1\">\n+     * @see <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-4.html#jvms-4.7.9.1\">\n@@ -838,3 +838,20 @@\n-        } else {\n-            \/\/ Could be Class or Type...\n-            type = typeSignatureToString(signature.substring(index), chopit);\n+        }\n+        \/\/ Could be Class or Type...\n+        type = typeSignatureToString(signature.substring(index), chopit);\n+        index += unwrap(consumed_chars); \/\/ update position\n+        if ((typeParams.length() == 0) && (index == signature.length())) {\n+            \/\/ We have a Type signature.\n+            return type;\n+        }\n+        \/\/ We have a Class signature.\n+        final StringBuilder typeClass = new StringBuilder(typeParams);\n+        typeClass.append(\" extends \");\n+        typeClass.append(type);\n+        if (index < signature.length()) {\n+            typeClass.append(\" implements \");\n+            typeClass.append(typeSignatureToString(signature.substring(index), chopit));\n+            index += unwrap(consumed_chars); \/\/ update position\n+        }\n+        while (index < signature.length()) {\n+            typeClass.append(\", \");\n+            typeClass.append(typeSignatureToString(signature.substring(index), chopit));\n@@ -842,19 +859,0 @@\n-            if ((typeParams.length() == 0) && (index == signature.length())) {\n-                \/\/ We have a Type signature.\n-                return type;\n-            }\n-            \/\/ We have a Class signature.\n-            final StringBuilder typeClass = new StringBuilder(typeParams);\n-            typeClass.append(\" extends \");\n-            typeClass.append(type);\n-            if (index < signature.length()) {\n-                typeClass.append(\" implements \");\n-                typeClass.append(typeSignatureToString(signature.substring(index), chopit));\n-                index += unwrap(consumed_chars); \/\/ update position\n-            }\n-            while (index < signature.length()) {\n-                typeClass.append(\", \");\n-                typeClass.append(typeSignatureToString(signature.substring(index), chopit));\n-                index += unwrap(consumed_chars); \/\/ update position\n-            }\n-            return typeClass.toString();\n@@ -862,0 +860,1 @@\n+        return typeClass.toString();\n@@ -1152,1 +1151,1 @@\n-                        throw new RuntimeException(\"Illegal type: \" + type);\n+                        throw new IllegalArgumentException(\"Illegal type: \" + type);\n@@ -1194,1 +1193,1 @@\n-                        throw new RuntimeException(\"Illegally nested brackets:\" + brackets);\n+                        throw new IllegalArgumentException(\"Illegally nested brackets:\" + brackets);\n@@ -1200,1 +1199,1 @@\n-                        throw new RuntimeException(\"Illegally nested brackets:\" + brackets);\n+                        throw new IllegalArgumentException(\"Illegally nested brackets:\" + brackets);\n@@ -1211,1 +1210,1 @@\n-            throw new RuntimeException(\"Illegally nested brackets:\" + brackets);\n+            throw new IllegalArgumentException(\"Illegally nested brackets:\" + brackets);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/classfile\/Utility.java","additions":29,"deletions":30,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalArgumentException(\n@@ -72,1 +72,1 @@\n-        throw new RuntimeException(\"Not implemented yet\");\n+        throw new UnsupportedOperationException(\"Not implemented yet\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/AnnotationElementValueGen.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalArgumentException(\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ArrayElementValueGen.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-                throw new ClassGenException(\"Oops: unknown case in switch\" + _opcode);\n+                throw new ClassGenException(\"Unknown case in switch\" + _opcode);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ArrayInstruction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-    private Type basic_type;\n+    private Type basicType;\n@@ -69,1 +69,1 @@\n-                basic_type = array.basic_type;\n+                basicType = array.basicType;\n@@ -75,1 +75,1 @@\n-                basic_type = type;\n+                basicType = type;\n@@ -82,1 +82,1 @@\n-        buf.append(basic_type.getSignature());\n+        buf.append(basicType.getSignature());\n@@ -91,1 +91,1 @@\n-        return basic_type;\n+        return basicType;\n@@ -100,1 +100,1 @@\n-            return basic_type;\n+            return basicType;\n@@ -102,1 +102,1 @@\n-        return new ArrayType(basic_type, dimensions - 1);\n+        return new ArrayType(basicType, dimensions - 1);\n@@ -117,1 +117,1 @@\n-        return basic_type.hashCode() ^ dimensions;\n+        return basicType.hashCode() ^ dimensions;\n@@ -127,1 +127,1 @@\n-            return (array.dimensions == dimensions) && array.basic_type.equals(basic_type);\n+            return (array.dimensions == dimensions) && array.basicType.equals(basicType);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ArrayType.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -51,4 +51,4 @@\n-    private String class_name;\n-    private String super_class_name;\n-    private final String file_name;\n-    private int class_name_index = -1;\n+    private String className;\n+    private String superClassName;\n+    private final String fileName;\n+    private int classNameIndex = -1;\n@@ -56,2 +56,2 @@\n-    private int major = Const.MAJOR;\n-    private int minor = Const.MINOR;\n+    private int major = Const.MAJOR_1_1;\n+    private int minor = Const.MINOR_1_1;\n@@ -60,5 +60,5 @@\n-    private final List<Field> field_vec = new ArrayList<>();\n-    private final List<Method> method_vec = new ArrayList<>();\n-    private final List<Attribute> attribute_vec = new ArrayList<>();\n-    private final List<String> interface_vec = new ArrayList<>();\n-    private final List<AnnotationEntryGen> annotation_vec = new ArrayList<>();\n+    private final List<Field> fieldList = new ArrayList<>();\n+    private final List<Method> methodList = new ArrayList<>();\n+    private final List<Attribute> attributeList = new ArrayList<>();\n+    private final List<String> interfaceList = new ArrayList<>();\n+    private final List<AnnotationEntryGen> annotationList = new ArrayList<>();\n@@ -66,1 +66,1 @@\n-    private static BCELComparator _cmp = new BCELComparator() {\n+    private static BCELComparator bcelComparator = new BCELComparator() {\n@@ -86,4 +86,4 @@\n-     * @param class_name fully qualified class name\n-     * @param super_class_name fully qualified superclass name\n-     * @param file_name source file name\n-     * @param access_flags access qualifiers\n+     * @param className fully qualified class name\n+     * @param superClassName fully qualified superclass name\n+     * @param fileName source file name\n+     * @param accessFlags access qualifiers\n@@ -93,1 +93,1 @@\n-    public ClassGen(final String class_name, final String super_class_name, final String file_name, final int access_flags,\n+    public ClassGen(final String className, final String superClassName, final String fileName, final int accessFlags,\n@@ -95,4 +95,4 @@\n-        super(access_flags);\n-        this.class_name = class_name;\n-        this.super_class_name = super_class_name;\n-        this.file_name = file_name;\n+        super(accessFlags);\n+        this.className = className;\n+        this.superClassName = superClassName;\n+        this.fileName = fileName;\n@@ -101,2 +101,2 @@\n-        if (file_name != null) {\n-            addAttribute(new SourceFile(cp.addUtf8(\"SourceFile\"), 2, cp.addUtf8(file_name), cp\n+        if (fileName != null) {\n+            addAttribute(new SourceFile(cp.addUtf8(\"SourceFile\"), 2, cp.addUtf8(fileName), cp\n@@ -105,2 +105,2 @@\n-        class_name_index = cp.addClass(class_name);\n-        superclass_name_index = cp.addClass(super_class_name);\n+        classNameIndex = cp.addClass(className);\n+        superclass_name_index = cp.addClass(superClassName);\n@@ -117,4 +117,4 @@\n-     * @param class_name fully qualified class name\n-     * @param super_class_name fully qualified superclass name\n-     * @param file_name source file name\n-     * @param access_flags access qualifiers\n+     * @param className fully qualified class name\n+     * @param superClassName fully qualified superclass name\n+     * @param fileName source file name\n+     * @param accessFlags access qualifiers\n@@ -123,1 +123,1 @@\n-    public ClassGen(final String class_name, final String super_class_name, final String file_name, final int access_flags,\n+    public ClassGen(final String className, final String superClassName, final String fileName, final int accessFlags,\n@@ -125,1 +125,1 @@\n-        this(class_name, super_class_name, file_name, access_flags, interfaces,\n+        this(className, superClassName, fileName, accessFlags, interfaces,\n@@ -136,1 +136,1 @@\n-        class_name_index = clazz.getClassNameIndex();\n+        classNameIndex = clazz.getClassNameIndex();\n@@ -138,3 +138,3 @@\n-        class_name = clazz.getClassName();\n-        super_class_name = clazz.getSuperclassName();\n-        file_name = clazz.getSourceFileName();\n+        className = clazz.getClassName();\n+        superClassName = clazz.getSuperclassName();\n+        fileName = clazz.getSourceFileName();\n@@ -208,1 +208,1 @@\n-        if (annotation_vec.isEmpty()) {\n+        if (annotationList.isEmpty()) {\n@@ -213,3 +213,3 @@\n-            attributes = new Attribute[attribute_vec.size()+annAttributes.length];\n-            attribute_vec.toArray(attributes);\n-            System.arraycopy(annAttributes,0,attributes,attribute_vec.size(),annAttributes.length);\n+            attributes = new Attribute[attributeList.size()+annAttributes.length];\n+            attributeList.toArray(attributes);\n+            System.arraycopy(annAttributes,0,attributes,attributeList.size(),annAttributes.length);\n@@ -219,1 +219,1 @@\n-        return new JavaClass(class_name_index, superclass_name_index, file_name, major, minor,\n+        return new JavaClass(classNameIndex, superclass_name_index, fileName, major, minor,\n@@ -229,1 +229,1 @@\n-        interface_vec.add(name);\n+        interfaceList.add(name);\n@@ -238,1 +238,1 @@\n-        interface_vec.remove(name);\n+        interfaceList.remove(name);\n@@ -278,1 +278,1 @@\n-        attribute_vec.add(a);\n+        attributeList.add(a);\n@@ -282,1 +282,1 @@\n-        annotation_vec.add(a);\n+        annotationList.add(a);\n@@ -291,1 +291,1 @@\n-        method_vec.add(m);\n+        methodList.add(m);\n@@ -304,1 +304,1 @@\n-        il.append(new INVOKESPECIAL(cp.addMethodref(super_class_name, \"<init>\", \"()V\")));\n+        il.append(new INVOKESPECIAL(cp.addMethodref(superClassName, \"<init>\", \"()V\")));\n@@ -307,1 +307,1 @@\n-                class_name, il, cp);\n+                className, il, cp);\n@@ -318,1 +318,1 @@\n-        field_vec.add(f);\n+        fieldList.add(f);\n@@ -323,1 +323,1 @@\n-        return field_vec.contains(f);\n+        return fieldList.contains(f);\n@@ -330,1 +330,1 @@\n-        for (final Field f : field_vec) {\n+        for (final Field f : fieldList) {\n@@ -342,1 +342,1 @@\n-        for (final Method m : method_vec) {\n+        for (final Method m : methodList) {\n@@ -356,1 +356,1 @@\n-        attribute_vec.remove(a);\n+        attributeList.remove(a);\n@@ -365,1 +365,1 @@\n-        method_vec.remove(m);\n+        methodList.remove(m);\n@@ -376,1 +376,1 @@\n-        final int i = method_vec.indexOf(old);\n+        final int i = methodList.indexOf(old);\n@@ -378,1 +378,1 @@\n-            method_vec.add(new_);\n+            methodList.add(new_);\n@@ -380,1 +380,1 @@\n-            method_vec.set(i, new_);\n+            methodList.set(i, new_);\n@@ -392,1 +392,1 @@\n-        final int i = field_vec.indexOf(old);\n+        final int i = fieldList.indexOf(old);\n@@ -394,1 +394,1 @@\n-            field_vec.add(new_);\n+            fieldList.add(new_);\n@@ -396,1 +396,1 @@\n-            field_vec.set(i, new_);\n+            fieldList.set(i, new_);\n@@ -406,1 +406,1 @@\n-        field_vec.remove(f);\n+        fieldList.remove(f);\n@@ -411,1 +411,1 @@\n-        return class_name;\n+        return className;\n@@ -416,1 +416,1 @@\n-        return super_class_name;\n+        return superClassName;\n@@ -421,1 +421,1 @@\n-        return file_name;\n+        return fileName;\n@@ -426,2 +426,2 @@\n-        class_name = name.replace('\/', '.');\n-        class_name_index = cp.addClass(name);\n+        className = name.replace('\/', '.');\n+        classNameIndex = cp.addClass(name);\n@@ -432,1 +432,1 @@\n-        super_class_name = name.replace('\/', '.');\n+        superClassName = name.replace('\/', '.');\n@@ -438,1 +438,1 @@\n-        return method_vec.toArray(new Method[method_vec.size()]);\n+        return methodList.toArray(new Method[methodList.size()]);\n@@ -443,1 +443,1 @@\n-        method_vec.clear();\n+        methodList.clear();\n@@ -451,1 +451,1 @@\n-        method_vec.set(pos, method);\n+        methodList.set(pos, method);\n@@ -456,1 +456,1 @@\n-        return method_vec.get(pos);\n+        return methodList.get(pos);\n@@ -461,1 +461,1 @@\n-        final int size = interface_vec.size();\n+        final int size = interfaceList.size();\n@@ -463,1 +463,1 @@\n-        interface_vec.toArray(interfaces);\n+        interfaceList.toArray(interfaces);\n@@ -469,1 +469,1 @@\n-        final int size = interface_vec.size();\n+        final int size = interfaceList.size();\n@@ -472,1 +472,1 @@\n-            interfaces[i] = cp.addClass(interface_vec.get(i));\n+            interfaces[i] = cp.addClass(interfaceList.get(i));\n@@ -479,1 +479,1 @@\n-        return field_vec.toArray(new Field[field_vec.size()]);\n+        return fieldList.toArray(new Field[fieldList.size()]);\n@@ -484,1 +484,1 @@\n-        return attribute_vec.toArray(new Attribute[attribute_vec.size()]);\n+        return attributeList.toArray(new Attribute[attributeList.size()]);\n@@ -489,1 +489,1 @@\n-        return annotation_vec.toArray(new AnnotationEntryGen[annotation_vec.size()]);\n+        return annotationList.toArray(new AnnotationEntryGen[annotationList.size()]);\n@@ -504,2 +504,2 @@\n-        this.class_name_index = class_name_index;\n-        class_name = cp.getConstantPool().getConstantString(class_name_index,\n+        this.classNameIndex = class_name_index;\n+        className = cp.getConstantPool().getConstantString(class_name_index,\n@@ -512,1 +512,1 @@\n-        super_class_name = cp.getConstantPool().getConstantString(superclass_name_index,\n+        superClassName = cp.getConstantPool().getConstantString(superclass_name_index,\n@@ -523,1 +523,1 @@\n-        return class_name_index;\n+        return classNameIndex;\n@@ -575,1 +575,1 @@\n-        return _cmp;\n+        return bcelComparator;\n@@ -583,1 +583,1 @@\n-        _cmp = comparator;\n+        bcelComparator = comparator;\n@@ -596,1 +596,1 @@\n-        return _cmp.equals(this, obj);\n+        return bcelComparator.equals(this, obj);\n@@ -608,1 +608,1 @@\n-        return _cmp.hashCode(this);\n+        return bcelComparator.hashCode(this);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ClassGen.java","additions":87,"deletions":87,"binary":false,"changes":174,"status":"modified"},{"patch":"@@ -40,4 +40,4 @@\n-    private InstructionHandle start_pc;\n-    private InstructionHandle end_pc;\n-    private InstructionHandle handler_pc;\n-    private ObjectType catch_type;\n+    private InstructionHandle startPc;\n+    private InstructionHandle endPc;\n+    private InstructionHandle handlerPc;\n+    private ObjectType catchType;\n@@ -50,4 +50,4 @@\n-     * @param start_pc Start of handled region (inclusive)\n-     * @param end_pc End of handled region (inclusive)\n-     * @param handler_pc Where handling is done\n-     * @param catch_type which exception is handled, null for ANY\n+     * @param startPc Start of handled region (inclusive)\n+     * @param endPc End of handled region (inclusive)\n+     * @param handlerPc Where handling is done\n+     * @param catchType which exception is handled, null for ANY\n@@ -55,6 +55,6 @@\n-    public CodeExceptionGen(final InstructionHandle start_pc, final InstructionHandle end_pc,\n-            final InstructionHandle handler_pc, final ObjectType catch_type) {\n-        setStartPC(start_pc);\n-        setEndPC(end_pc);\n-        setHandlerPC(handler_pc);\n-        this.catch_type = catch_type;\n+    public CodeExceptionGen(final InstructionHandle startPc, final InstructionHandle endPc,\n+            final InstructionHandle handlerPc, final ObjectType catchType) {\n+        setStartPC(startPc);\n+        setEndPC(endPc);\n+        setHandlerPC(handlerPc);\n+        this.catchType = catchType;\n@@ -74,3 +74,3 @@\n-        return new CodeException(start_pc.getPosition(), end_pc.getPosition()\n-                + end_pc.getInstruction().getLength(), handler_pc.getPosition(),\n-                (catch_type == null) ? 0 : cp.addClass(catch_type));\n+        return new CodeException(startPc.getPosition(), endPc.getPosition()\n+                + endPc.getInstruction().getLength(), handlerPc.getPosition(),\n+                (catchType == null) ? 0 : cp.addClass(catchType));\n@@ -81,1 +81,1 @@\n-     * @param start_pc Start of handled region (inclusive)\n+     * @param startPc Start of handled region (inclusive)\n@@ -84,2 +84,2 @@\n-        BranchInstruction.notifyTarget(this.start_pc, start_pc, this);\n-        this.start_pc = start_pc;\n+        BranchInstruction.notifyTarget(this.startPc, start_pc, this);\n+        this.startPc = start_pc;\n@@ -90,1 +90,1 @@\n-     * @param end_pc End of handled region (inclusive)\n+     * @param endPc End of handled region (inclusive)\n@@ -93,2 +93,2 @@\n-        BranchInstruction.notifyTarget(this.end_pc, end_pc, this);\n-        this.end_pc = end_pc;\n+        BranchInstruction.notifyTarget(this.endPc, end_pc, this);\n+        this.endPc = end_pc;\n@@ -99,1 +99,1 @@\n-     * @param handler_pc Start of handler\n+     * @param handlerPc Start of handler\n@@ -102,2 +102,2 @@\n-        BranchInstruction.notifyTarget(this.handler_pc, handler_pc, this);\n-        this.handler_pc = handler_pc;\n+        BranchInstruction.notifyTarget(this.handlerPc, handler_pc, this);\n+        this.handlerPc = handler_pc;\n@@ -114,1 +114,1 @@\n-        if (start_pc == old_ih) {\n+        if (startPc == old_ih) {\n@@ -118,1 +118,1 @@\n-        if (end_pc == old_ih) {\n+        if (endPc == old_ih) {\n@@ -122,1 +122,1 @@\n-        if (handler_pc == old_ih) {\n+        if (handlerPc == old_ih) {\n@@ -127,2 +127,2 @@\n-            throw new ClassGenException(\"Not targeting \" + old_ih + \", but {\" + start_pc + \", \"\n-                    + end_pc + \", \" + handler_pc + \"}\");\n+            throw new ClassGenException(\"Not targeting \" + old_ih + \", but {\" + startPc + \", \"\n+                    + endPc + \", \" + handlerPc + \"}\");\n@@ -138,1 +138,1 @@\n-        return (start_pc == ih) || (end_pc == ih) || (handler_pc == ih);\n+        return (startPc == ih) || (endPc == ih) || (handlerPc == ih);\n@@ -143,2 +143,2 @@\n-    public void setCatchType( final ObjectType catch_type ) {\n-        this.catch_type = catch_type;\n+    public void setCatchType( final ObjectType catchType ) {\n+        this.catchType = catchType;\n@@ -150,1 +150,1 @@\n-        return catch_type;\n+        return catchType;\n@@ -157,1 +157,1 @@\n-        return start_pc;\n+        return startPc;\n@@ -164,1 +164,1 @@\n-        return end_pc;\n+        return endPc;\n@@ -171,1 +171,1 @@\n-        return handler_pc;\n+        return handlerPc;\n@@ -177,1 +177,1 @@\n-        return \"CodeExceptionGen(\" + start_pc + \", \" + end_pc + \", \" + handler_pc + \")\";\n+        return \"CodeExceptionGen(\" + startPc + \", \" + endPc + \", \" + handlerPc + \")\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/CodeExceptionGen.java","additions":39,"deletions":39,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -101,2 +101,2 @@\n-                if (!string_table.containsKey(key)) {\n-                    string_table.put(key, new Index(i));\n+                if (!stringTable.containsKey(key)) {\n+                    stringTable.put(key, new Index(i));\n@@ -108,2 +108,2 @@\n-                if (!class_table.containsKey(key)) {\n-                    class_table.put(key, new Index(i));\n+                if (!classTable.containsKey(key)) {\n+                    classTable.put(key, new Index(i));\n@@ -122,2 +122,2 @@\n-                if (!n_a_t_table.containsKey(key)) {\n-                    n_a_t_table.put(key, new Index(i));\n+                if (!natTable.containsKey(key)) {\n+                    natTable.put(key, new Index(i));\n@@ -128,2 +128,2 @@\n-                if (!utf8_table.containsKey(key)) {\n-                    utf8_table.put(key, new Index(i));\n+                if (!utf8Table.containsKey(key)) {\n+                    utf8Table.put(key, new Index(i));\n@@ -167,2 +167,2 @@\n-                if (!cp_table.containsKey(key)) {\n-                    cp_table.put(key, new Index(i));\n+                if (!cpTable.containsKey(key)) {\n+                    cpTable.put(key, new Index(i));\n@@ -223,1 +223,1 @@\n-    private final Map<String, Index> string_table = new HashMap<>();\n+    private final Map<String, Index> stringTable = new HashMap<>();\n@@ -233,1 +233,1 @@\n-        final Index index = string_table.get(str);\n+        final Index index = stringTable.get(str);\n@@ -254,2 +254,2 @@\n-        if (!string_table.containsKey(str)) {\n-            string_table.put(str, new Index(ret));\n+        if (!stringTable.containsKey(str)) {\n+            stringTable.put(str, new Index(ret));\n@@ -260,1 +260,1 @@\n-    private final Map<String, Index> class_table = new HashMap<>();\n+    private final Map<String, Index> classTable = new HashMap<>();\n@@ -270,1 +270,1 @@\n-        final Index index = class_table.get(str.replace('.', '\/'));\n+        final Index index = classTable.get(str.replace('.', '\/'));\n@@ -284,2 +284,2 @@\n-        if (!class_table.containsKey(clazz)) {\n-            class_table.put(clazz, new Index(ret));\n+        if (!classTable.containsKey(clazz)) {\n+            classTable.put(clazz, new Index(ret));\n@@ -399,1 +399,1 @@\n-    private final Map<String, Index> utf8_table = new HashMap<>();\n+    private final Map<String, Index> utf8Table = new HashMap<>();\n@@ -409,1 +409,1 @@\n-        final Index index = utf8_table.get(n);\n+        final Index index = utf8Table.get(n);\n@@ -428,2 +428,2 @@\n-        if (!utf8_table.containsKey(n)) {\n-            utf8_table.put(n, new Index(ret));\n+        if (!utf8Table.containsKey(n)) {\n+            utf8Table.put(n, new Index(ret));\n@@ -511,1 +511,1 @@\n-    private final Map<String, Index> n_a_t_table = new HashMap<>();\n+    private final Map<String, Index> natTable = new HashMap<>();\n@@ -522,1 +522,1 @@\n-        final Index _index = n_a_t_table.get(name + NAT_DELIM + signature);\n+        final Index _index = natTable.get(name + NAT_DELIM + signature);\n@@ -548,2 +548,2 @@\n-        if (!n_a_t_table.containsKey(key)) {\n-            n_a_t_table.put(key, new Index(ret));\n+        if (!natTable.containsKey(key)) {\n+            natTable.put(key, new Index(ret));\n@@ -554,1 +554,1 @@\n-    private final Map<String, Index> cp_table = new HashMap<>();\n+    private final Map<String, Index> cpTable = new HashMap<>();\n@@ -566,1 +566,1 @@\n-        final Index index = cp_table.get(class_name + METHODREF_DELIM + method_name\n+        final Index index = cpTable.get(class_name + METHODREF_DELIM + method_name\n@@ -599,2 +599,2 @@\n-        if (!cp_table.containsKey(key)) {\n-            cp_table.put(key, new Index(ret));\n+        if (!cpTable.containsKey(key)) {\n+            cpTable.put(key, new Index(ret));\n@@ -620,1 +620,1 @@\n-        final Index index = cp_table.get(class_name + IMETHODREF_DELIM + method_name\n+        final Index index = cpTable.get(class_name + IMETHODREF_DELIM + method_name\n@@ -654,2 +654,2 @@\n-        if (!cp_table.containsKey(key)) {\n-            cp_table.put(key, new Index(ret));\n+        if (!cpTable.containsKey(key)) {\n+            cpTable.put(key, new Index(ret));\n@@ -675,1 +675,1 @@\n-        final Index index = cp_table.get(class_name + FIELDREF_DELIM + field_name\n+        final Index index = cpTable.get(class_name + FIELDREF_DELIM + field_name\n@@ -703,2 +703,2 @@\n-        if (!cp_table.containsKey(key)) {\n-            cp_table.put(key, new Index(ret));\n+        if (!cpTable.containsKey(key)) {\n+            cpTable.put(key, new Index(ret));\n@@ -820,1 +820,1 @@\n-                        throw new RuntimeException(\"Unknown constant type \" + c);\n+                        throw new IllegalArgumentException(\"Unknown constant type \" + c);\n@@ -824,1 +824,1 @@\n-                throw new RuntimeException(\"Unknown constant type \" + c);\n+                throw new IllegalArgumentException(\"Unknown constant type \" + c);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ConstantPoolGen.java","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -144,1 +144,1 @@\n-            throw new RuntimeException(\"Unexpected element value kind in annotation: \" + type);\n+            throw new IllegalArgumentException(\"Unexpected element value kind in annotation: \" + type);\n@@ -186,1 +186,1 @@\n-            throw new RuntimeException(\"Not implemented yet! (\" + value.getElementValueType() + \")\");\n+            throw new UnsupportedOperationException(\"Not implemented yet! (\" + value.getElementValueType() + \")\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ElementValueGen.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    private final ConstantPoolGen cpool;\n+    private final ConstantPoolGen constantPoolGen;\n@@ -45,1 +45,1 @@\n-        this.cpool = cpool;\n+        this.constantPoolGen = cpool;\n@@ -48,1 +48,1 @@\n-        \/\/ cpool.getConstant(nvp.getNameIndex())\n+        \/\/ constantPoolGen.getConstant(nvp.getNameIndex())\n@@ -50,1 +50,1 @@\n-        \/\/ (!nvp.getNameString().equals(((ConstantUtf8)cpool.getConstant(nvp.getNameIndex())).getBytes()))\n+        \/\/ (!nvp.getNameString().equals(((ConstantUtf8)constantPoolGen.getConstant(nvp.getNameIndex())).getBytes()))\n@@ -52,1 +52,1 @@\n-        \/\/ throw new RuntimeException(\"envp buggered\");\n+        \/\/ throw new IllegalArgumentException(\"envp buggered\");\n@@ -71,1 +71,1 @@\n-        return new ElementValuePair(nameIdx, immutableValue, cpool\n+        return new ElementValuePair(nameIdx, immutableValue, constantPoolGen\n@@ -80,1 +80,1 @@\n-        this.cpool = cpool;\n+        this.constantPoolGen = cpool;\n@@ -88,1 +88,1 @@\n-        this.cpool = cpool;\n+        this.constantPoolGen = cpool;\n@@ -104,2 +104,2 @@\n-        \/\/ ConstantString cu8 = (ConstantString)cpool.getConstant(nameIdx);\n-        return ((ConstantUtf8) cpool.getConstant(nameIdx)).getBytes();\n+        \/\/ ConstantString cu8 = (ConstantString)constantPoolGen.getConstant(nameIdx);\n+        return ((ConstantUtf8) constantPoolGen.getConstant(nameIdx)).getBytes();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ElementValuePairGen.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalArgumentException(\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/EnumElementValueGen.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -258,1 +258,1 @@\n-                throw new RuntimeException(\"Oops: Unhandled : \" + super.getType().getType()); \/\/ sic\n+                throw new IllegalStateException(\"Unhandled : \" + super.getType().getType()); \/\/ sic\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/FieldGen.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @LastModified: Jun 2020\n+ * @LastModified: May 2021\n@@ -41,1 +41,1 @@\n-    private final List<Attribute> attribute_vec = new ArrayList<>();\n+    private final List<Attribute> attributeList = new ArrayList<>();\n@@ -44,1 +44,1 @@\n-    private final List<AnnotationEntryGen>       annotation_vec= new ArrayList<>();\n+    private final List<AnnotationEntryGen> annotationList = new ArrayList<>();\n@@ -106,1 +106,1 @@\n-        attribute_vec.add(a);\n+        attributeList.add(a);\n@@ -112,1 +112,1 @@\n-    protected void addAnnotationEntry(final AnnotationEntryGen ag) \/\/ TODO could this be package protected?\n+    public void addAnnotationEntry(final AnnotationEntryGen ag)\n@@ -114,1 +114,1 @@\n-        annotation_vec.add(ag);\n+        annotationList.add(ag);\n@@ -122,1 +122,1 @@\n-        attribute_vec.remove(a);\n+        attributeList.remove(a);\n@@ -128,1 +128,1 @@\n-    protected void removeAnnotationEntry(final AnnotationEntryGen ag) \/\/ TODO could this be package protected?\n+    public void removeAnnotationEntry(final AnnotationEntryGen ag)\n@@ -130,1 +130,1 @@\n-        annotation_vec.remove(ag);\n+        annotationList.remove(ag);\n@@ -138,1 +138,1 @@\n-        attribute_vec.clear();\n+        attributeList.clear();\n@@ -144,1 +144,1 @@\n-    protected void removeAnnotationEntries() \/\/ TODO could this be package protected?\n+    public void removeAnnotationEntries()\n@@ -146,1 +146,1 @@\n-        annotation_vec.clear();\n+        annotationList.clear();\n@@ -154,3 +154,1 @@\n-        final Attribute[] attributes = new Attribute[attribute_vec.size()];\n-        attribute_vec.toArray(attributes);\n-        return attributes;\n+        return attributeList.toArray(new Attribute[0]);\n@@ -160,3 +158,1 @@\n-        final AnnotationEntryGen[] annotations = new AnnotationEntryGen[annotation_vec.size()];\n-          annotation_vec.toArray(annotations);\n-          return annotations;\n+        return annotationList.toArray(new AnnotationEntryGen[0]);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/FieldGenOrMethodGen.java","additions":15,"deletions":19,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokedynamic\">\n+ * <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokedynamic\">\n@@ -42,1 +42,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/INVOKEDYNAMIC.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokeinterface\">\n+ * <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokeinterface\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/INVOKEINTERFACE.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokespecial\">\n+ * <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokespecial\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/INVOKESPECIAL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokestatic\">\n+ * <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokestatic\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/INVOKESTATIC.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * <a href=\"http:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokevirtual\">\n+ * <a href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se8\/html\/jvms-6.html#jvms-6.5.invokevirtual\">\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/INVOKEVIRTUAL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -79,0 +79,21 @@\n+        return createInvoke(class_name, name, ret_type, arg_types, kind, kind == Const.INVOKEINTERFACE);\n+    }\n+\n+    \/**\n+     * Creates an invoke instruction. (Except for invokedynamic.)\n+     *\n+     * @param class_name name of the called class\n+     * @param name name of the called method\n+     * @param ret_type return type of method\n+     * @param arg_types argument types of method\n+     * @param kind how to invoke: INVOKEINTERFACE, INVOKESTATIC, INVOKEVIRTUAL, or INVOKESPECIAL\n+     * @param use_interface force use of InterfaceMethodref\n+     * @return A new InvokeInstruction.\n+     * @since 6.5.0\n+     *\/\n+    public InvokeInstruction createInvoke( final String class_name, final String name, final Type ret_type,\n+        final Type[] arg_types, final short kind, final boolean use_interface) {\n+        if (kind != Const.INVOKESPECIAL && kind != Const.INVOKEVIRTUAL && kind != Const.INVOKESTATIC\n+            && kind != Const.INVOKEINTERFACE && kind != Const.INVOKEDYNAMIC) {\n+            throw new IllegalArgumentException(\"Unknown invoke kind: \" + kind);\n+        }\n@@ -85,1 +106,1 @@\n-        if (kind == Const.INVOKEINTERFACE) {\n+        if (use_interface) {\n@@ -91,12 +112,13 @@\n-            case Const.INVOKESPECIAL:\n-                return new INVOKESPECIAL(index);\n-            case Const.INVOKEVIRTUAL:\n-                return new INVOKEVIRTUAL(index);\n-            case Const.INVOKESTATIC:\n-                return new INVOKESTATIC(index);\n-            case Const.INVOKEINTERFACE:\n-                return new INVOKEINTERFACE(index, nargs + 1);\n-            case Const.INVOKEDYNAMIC:\n-                return new INVOKEDYNAMIC(index);\n-            default:\n-                throw new RuntimeException(\"Oops: Unknown invoke kind: \" + kind);\n+        case Const.INVOKESPECIAL:\n+            return new INVOKESPECIAL(index);\n+        case Const.INVOKEVIRTUAL:\n+            return new INVOKEVIRTUAL(index);\n+        case Const.INVOKESTATIC:\n+            return new INVOKESTATIC(index);\n+        case Const.INVOKEINTERFACE:\n+            return new INVOKEINTERFACE(index, nargs + 1);\n+        case Const.INVOKEDYNAMIC:\n+            return new INVOKEDYNAMIC(index);\n+        default:\n+            \/\/ Can't happen\n+            throw new IllegalStateException(\"Unknown invoke kind: \" + kind);\n@@ -251,1 +273,1 @@\n-                throw new RuntimeException(\"Oops: No append for this type? \" + type);\n+                throw new IllegalArgumentException(\"No append for this type? \" + type);\n@@ -279,1 +301,1 @@\n-                throw new RuntimeException(\"Oops: Unknown getfield kind:\" + kind);\n+                throw new IllegalArgumentException(\"Unknown getfield kind:\" + kind);\n@@ -313,1 +335,1 @@\n-                throw new RuntimeException(\"Invalid type: \" + type);\n+                throw new IllegalArgumentException(\"Invalid type: \" + type);\n@@ -341,1 +363,1 @@\n-                throw new RuntimeException(\"Invalid operand \" + op);\n+                throw new IllegalArgumentException(\"Invalid operand \" + op);\n@@ -369,1 +391,1 @@\n-                throw new RuntimeException(\"Invalid operand \" + op);\n+                throw new IllegalArgumentException(\"Invalid operand \" + op);\n@@ -387,1 +409,1 @@\n-                throw new RuntimeException(\"Invalid operand \" + op);\n+                throw new IllegalArgumentException(\"Invalid operand \" + op);\n@@ -405,1 +427,1 @@\n-                throw new RuntimeException(\"Invalid operand \" + op);\n+                throw new IllegalArgumentException(\"Invalid operand \" + op);\n@@ -430,1 +452,1 @@\n-                throw new RuntimeException(\"Invalid type \" + type);\n+                throw new IllegalArgumentException(\"Invalid type \" + type);\n@@ -488,1 +510,1 @@\n-                throw new RuntimeException(\"Invalid type \" + type);\n+                throw new IllegalArgumentException(\"Invalid type \" + type);\n@@ -514,1 +536,1 @@\n-                throw new RuntimeException(\"Invalid type \" + type);\n+                throw new IllegalArgumentException(\"Invalid type \" + type);\n@@ -543,1 +565,1 @@\n-                throw new RuntimeException(\"Invalid type \" + type);\n+                throw new IllegalArgumentException(\"Invalid type \" + type);\n@@ -572,1 +594,1 @@\n-                throw new RuntimeException(\"Invalid type \" + type);\n+                throw new IllegalArgumentException(\"Invalid type \" + type);\n@@ -595,1 +617,1 @@\n-                throw new RuntimeException(\"Could not find instruction: \" + name, e);\n+                throw new IllegalArgumentException(\"Could not find instruction: \" + name, e);\n@@ -604,1 +626,1 @@\n-            throw new RuntimeException(\"Can not cast \" + src_type + \" to \" + dest_type);\n+            throw new IllegalArgumentException(\"Cannot cast \" + src_type + \" to \" + dest_type);\n@@ -702,1 +724,1 @@\n-                throw new RuntimeException(\"Invalid type: \" + type);\n+                throw new IllegalArgumentException(\"Invalid type: \" + type);\n@@ -754,1 +776,1 @@\n-                throw new RuntimeException(\"Invalid opcode: \" + opcode);\n+                throw new IllegalArgumentException(\"Invalid opcode: \" + opcode);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/InstructionFactory.java","additions":53,"deletions":31,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -298,1 +298,1 @@\n-     * @ since 6.0\n+     * @since 6.0\n@@ -308,1 +308,1 @@\n-     * @ since 6.0\n+     * @since 6.0\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/InstructionHandle.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -57,1 +57,1 @@\n-    private int[] byte_positions; \/\/ byte code offsets corresponding to instructions\n+    private int[] bytePositions; \/\/ byte code offsets corresponding to instructions\n@@ -148,1 +148,1 @@\n-        final int[] positions = byte_positions;\n+        final int[] positions = bytePositions;\n@@ -196,2 +196,2 @@\n-        byte_positions = new int[count]; \/\/ Trim to proper size\n-        System.arraycopy(pos, 0, byte_positions, 0, count);\n+        bytePositions = new int[count]; \/\/ Trim to proper size\n+        System.arraycopy(pos, 0, bytePositions, 0, count);\n@@ -207,1 +207,1 @@\n-                *\/\n+                 *\/\n@@ -800,4 +800,2 @@\n-     * Remove instructions from instruction `from' to instruction `to' contained\n-     * in this list. The user must ensure that `from' is an instruction before\n-     * `to', or risk havoc. The corresponding Instruction handles must not be\n-     * reused!\n+     * Remove instructions from instruction `from' to instruction `to' contained in this list. The user must ensure that `from' is an instruction before `to',\n+     * or risk havoc. The corresponding Instruction handles must not be reused!\n@@ -963,2 +961,2 @@\n-        byte_positions = new int[count]; \/\/ Trim to proper size\n-        System.arraycopy(pos, 0, byte_positions, 0, count);\n+        bytePositions = new int[count]; \/\/ Trim to proper size\n+        System.arraycopy(pos, 0, bytePositions, 0, count);\n@@ -1077,1 +1075,1 @@\n-        return byte_positions;\n+        return bytePositions;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/InstructionList.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-                throw new RuntimeException(\"physicalSuccessor() called on a shared JsrInstruction.\");\n+                throw new IllegalStateException(\"physicalSuccessor() called on a shared JsrInstruction.\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/JsrInstruction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -115,1 +115,1 @@\n-                throw new RuntimeException(\"Unknown or invalid constant type at \" + super.getIndex());\n+                throw new IllegalArgumentException(\"Unknown or invalid constant type at \" + super.getIndex());\n@@ -132,1 +132,1 @@\n-                throw new RuntimeException(\"Unknown or invalid constant type at \" + super.getIndex());\n+                throw new IllegalArgumentException(\"Unknown or invalid constant type at \" + super.getIndex());\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/LDC.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -53,1 +53,1 @@\n-                throw new RuntimeException(\"Unknown constant type \" + super.getOpcode());\n+                throw new IllegalArgumentException(\"Unknown constant type \" + super.getOpcode());\n@@ -66,1 +66,1 @@\n-                throw new RuntimeException(\"Unknown or invalid constant type at \" + super.getIndex());\n+                throw new IllegalArgumentException(\"Unknown or invalid constant type at \" + super.getIndex());\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/LDC2_W.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+import java.util.Objects;\n+\n@@ -36,2 +38,1 @@\n-    private int src_line;\n-\n+    private int srcLine;\n@@ -79,1 +80,1 @@\n-        return new LineNumber(ih.getPosition(), src_line);\n+        return new LineNumber(ih.getPosition(), srcLine);\n@@ -83,6 +84,4 @@\n-    public void setInstruction( final InstructionHandle ih ) { \/\/ TODO could be package-protected?\n-        if (ih == null) {\n-            throw new NullPointerException(\"InstructionHandle may not be null\");\n-        }\n-        BranchInstruction.notifyTarget(this.ih, ih, this);\n-        this.ih = ih;\n+    public void setInstruction( final InstructionHandle instructionHandle ) { \/\/ TODO could be package-protected?\n+        Objects.requireNonNull(instructionHandle, \"instructionHandle\");\n+        BranchInstruction.notifyTarget(this.ih, instructionHandle, this);\n+        this.ih = instructionHandle;\n@@ -108,1 +107,1 @@\n-        this.src_line = src_line;\n+        this.srcLine = src_line;\n@@ -113,1 +112,1 @@\n-        return src_line;\n+        return srcLine;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/LineNumberGen.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -42,2 +42,2 @@\n-    private int orig_index; \/\/ never changes; used to match up with LocalVariableTypeTable entries\n-    private boolean live_to_end;\n+    private int origIndex; \/\/ never changes; used to match up with LocalVariableTypeTable entries\n+    private boolean liveToEnd;\n@@ -66,2 +66,2 @@\n-        this.orig_index = index;\n-        this.live_to_end = end == null;\n+        this.origIndex = index;\n+        this.liveToEnd = end == null;\n@@ -80,1 +80,1 @@\n-     * @param orig_index index of local variable prior to any changes to index\n+     * @param origIndex index of local variable prior to any changes to index\n@@ -83,1 +83,1 @@\n-            final InstructionHandle end, final int orig_index) {\n+            final InstructionHandle end, final int origIndex) {\n@@ -85,1 +85,1 @@\n-        this.orig_index = orig_index;\n+        this.origIndex = origIndex;\n@@ -98,1 +98,1 @@\n-     * instruction of the method.  Hence the live_to_end flag to differentiate\n+     * instruction of the method.  Hence the liveToEnd flag to differentiate\n@@ -109,1 +109,1 @@\n-            if ((end.getNext() == null) && live_to_end) {\n+            if ((end.getNext() == null) && liveToEnd) {\n@@ -116,1 +116,1 @@\n-                .getConstantPool(), orig_index);\n+                .getConstantPool(), origIndex);\n@@ -131,1 +131,1 @@\n-        return orig_index;\n+        return origIndex;\n@@ -136,1 +136,1 @@\n-        this.live_to_end = live_to_end;\n+        this.liveToEnd = live_to_end;\n@@ -141,1 +141,1 @@\n-        return live_to_end;\n+        return liveToEnd;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/LocalVariableGen.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -37,2 +37,2 @@\n-    private short c_tag = -1; \/\/ compact version, such as ILOAD_0\n-    private short canon_tag = -1; \/\/ canonical tag such as ILOAD\n+    private short cTag = -1; \/\/ compact version, such as ILOAD_0\n+    private short canonTag = -1; \/\/ canonical tag such as ILOAD\n@@ -53,2 +53,2 @@\n-        this.canon_tag = canon_tag;\n-        this.c_tag = c_tag;\n+        this.canonTag = canon_tag;\n+        this.cTag = c_tag;\n@@ -68,1 +68,1 @@\n-     * @param c_tag Instruction number for compact version, ALOAD_0, e.g.\n+     * @param cTag Instruction number for compact version, ALOAD_0, e.g.\n@@ -71,1 +71,1 @@\n-    protected LocalVariableInstruction(final short opcode, final short c_tag, final int n) {\n+    protected LocalVariableInstruction(final short opcode, final short cTag, final int n) {\n@@ -73,2 +73,2 @@\n-        this.c_tag = c_tag;\n-        canon_tag = opcode;\n+        this.cTag = cTag;\n+        canonTag = opcode;\n@@ -170,1 +170,1 @@\n-            super.setOpcode((short) (c_tag + n));\n+            super.setOpcode((short) (cTag + n));\n@@ -173,1 +173,1 @@\n-            super.setOpcode(canon_tag);\n+            super.setOpcode(canonTag);\n@@ -186,1 +186,1 @@\n-        return canon_tag;\n+        return canonTag;\n@@ -200,1 +200,1 @@\n-        switch (canon_tag) {\n+        switch (canonTag) {\n@@ -217,1 +217,1 @@\n-                throw new ClassGenException(\"Oops: unknown case in switch\" + canon_tag);\n+                throw new ClassGenException(\"Unknown case in switch\" + canonTag);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/LocalVariableInstruction.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -64,5 +64,5 @@\n-    private String class_name;\n-    private Type[] arg_types;\n-    private String[] arg_names;\n-    private int max_locals;\n-    private int max_stack;\n+    private String className;\n+    private Type[] argTypes;\n+    private String[] argNames;\n+    private int maxLocals;\n+    private int maxStack;\n@@ -70,9 +70,9 @@\n-    private boolean strip_attributes;\n-    private LocalVariableTypeTable local_variable_type_table = null;\n-    private final List<LocalVariableGen> variable_vec = new ArrayList<>();\n-    private final List<LineNumberGen> line_number_vec = new ArrayList<>();\n-    private final List<CodeExceptionGen> exception_vec = new ArrayList<>();\n-    private final List<String> throws_vec = new ArrayList<>();\n-    private final List<Attribute> code_attrs_vec = new ArrayList<>();\n-\n-    private List<AnnotationEntryGen>[] param_annotations; \/\/ Array of lists containing AnnotationGen objects\n+    private boolean stripAttributes;\n+    private LocalVariableTypeTable localVariableTypeTable = null;\n+    private final List<LocalVariableGen> variableList = new ArrayList<>();\n+    private final List<LineNumberGen> lineNumberList = new ArrayList<>();\n+    private final List<CodeExceptionGen> exceptionList = new ArrayList<>();\n+    private final List<String> throwsList = new ArrayList<>();\n+    private final List<Attribute> codeAttrsList = new ArrayList<>();\n+\n+    private List<AnnotationEntryGen>[] paramAnnotations; \/\/ Array of lists containing AnnotationGen objects\n@@ -114,2 +114,2 @@\n-     * @param arg_types argument types\n-     * @param arg_names argument names (if this is null, default names will be provided\n+     * @param argTypes argument types\n+     * @param argNames argument names (if this is null, default names will be provided\n@@ -118,1 +118,1 @@\n-     * @param class_name class name containing this method (may be null, if you don't care)\n+     * @param className class name containing this method (may be null, if you don't care)\n@@ -123,2 +123,2 @@\n-    public MethodGen(final int access_flags, final Type return_type, final Type[] arg_types, String[] arg_names,\n-            final String method_name, final String class_name, final InstructionList il, final ConstantPoolGen cp) {\n+    public MethodGen(final int access_flags, final Type return_type, final Type[] argTypes, String[] argNames,\n+            final String method_name, final String className, final InstructionList il, final ConstantPoolGen cp) {\n@@ -127,2 +127,2 @@\n-        setArgumentTypes(arg_types);\n-        setArgumentNames(arg_names);\n+        setArgumentTypes(argTypes);\n+        setArgumentNames(argNames);\n@@ -130,1 +130,1 @@\n-        setClassName(class_name);\n+        setClassName(className);\n@@ -141,2 +141,2 @@\n-            if (!isStatic() && (class_name != null)) { \/\/ Instance method -> `this' is local var 0\n-                addLocalVariable(\"this\",  ObjectType.getInstance(class_name), start, end);\n+            if (!isStatic() && (className != null)) { \/\/ Instance method -> `this' is local var 0\n+                addLocalVariable(\"this\",  ObjectType.getInstance(className), start, end);\n@@ -145,3 +145,3 @@\n-        if (arg_types != null) {\n-            final int size = arg_types.length;\n-            for (final Type arg_type : arg_types) {\n+        if (argTypes != null) {\n+            final int size = argTypes.length;\n+            for (final Type arg_type : argTypes) {\n@@ -152,2 +152,2 @@\n-            if (arg_names != null) { \/\/ Names for variables provided?\n-                if (size != arg_names.length) {\n+            if (argNames != null) { \/\/ Names for variables provided?\n+                if (size != argNames.length) {\n@@ -155,1 +155,1 @@\n-                            + \" vs. \" + arg_names.length);\n+                            + \" vs. \" + argNames.length);\n@@ -158,1 +158,1 @@\n-                arg_names = new String[size];\n+                argNames = new String[size];\n@@ -160,1 +160,1 @@\n-                    arg_names[i] = \"arg\" + i;\n+                    argNames[i] = \"arg\" + i;\n@@ -162,1 +162,1 @@\n-                setArgumentNames(arg_names);\n+                setArgumentNames(argNames);\n@@ -166,1 +166,1 @@\n-                    addLocalVariable(arg_names[i], arg_types[i], start, end);\n+                    addLocalVariable(argNames[i], argTypes[i], start, end);\n@@ -176,2 +176,2 @@\n-     * @param m method\n-     * @param class_name class name containing this method\n+     * @param method method\n+     * @param className class name containing this method\n@@ -180,8 +180,9 @@\n-    public MethodGen(final Method m, final String class_name, final ConstantPoolGen cp) {\n-        this(m.getAccessFlags(), Type.getReturnType(m.getSignature()), Type.getArgumentTypes(m\n-                .getSignature()), null \/* may be overridden anyway *\/\n-        , m.getName(), class_name,\n-                ((m.getAccessFlags() & (Const.ACC_ABSTRACT | Const.ACC_NATIVE)) == 0)\n-                        ? new InstructionList(m.getCode().getCode())\n-                        : null, cp);\n-        final Attribute[] attributes = m.getAttributes();\n+    public MethodGen(final Method method, final String className, final ConstantPoolGen cp) {\n+        this(method.getAccessFlags(), Type.getReturnType(method.getSignature()),\n+            Type.getArgumentTypes(method.getSignature()), null \/* may be overridden anyway *\/\n+            , method.getName(), className,\n+            ((method.getAccessFlags() & (Const.ACC_ABSTRACT | Const.ACC_NATIVE)) == 0)\n+                ? new InstructionList(getByteCodes(method))\n+                : null,\n+            cp);\n+        final Attribute[] attributes = method.getAttributes();\n@@ -200,1 +201,1 @@\n-                            final String cen = m.getConstantPool().getConstantString(type,\n+                            final String cen = method.getConstantPool().getConstantString(type,\n@@ -205,1 +206,1 @@\n-                        final int length = m.getCode().getCode().length;\n+                        final int length = getByteCodes(method).length;\n@@ -213,2 +214,2 @@\n-                        addExceptionHandler(il.findHandle(ce.getStartPC()), end, il.findHandle(ce\n-                                .getHandlerPC()), c_type);\n+                        addExceptionHandler(il.findHandle(ce.getStartPC()), end,\n+                                il.findHandle(ce.getHandlerPC()), c_type);\n@@ -231,1 +232,1 @@\n-                        this.local_variable_type_table = (LocalVariableTypeTable) a.copy(cp.getConstantPool());\n+                        this.localVariableTypeTable = (LocalVariableTypeTable) a.copy(cp.getConstantPool());\n@@ -253,0 +254,9 @@\n+\n+    private static byte[] getByteCodes(final Method method) {\n+        final Code code = method.getCode();\n+        if (code == null) {\n+            throw new IllegalStateException(String.format(\"The method '%s' has no code.\", method));\n+        }\n+        return code.getCode();\n+    }\n+\n@@ -271,2 +281,2 @@\n-            if (slot + add > max_locals) {\n-                max_locals = slot + add;\n+            if (slot + add > maxLocals) {\n+                maxLocals = slot + add;\n@@ -276,2 +286,2 @@\n-            if ((i = variable_vec.indexOf(l)) >= 0) {\n-                variable_vec.set(i, l);\n+            if ((i = variableList.indexOf(l)) >= 0) {\n+                variableList.set(i, l);\n@@ -279,1 +289,1 @@\n-                variable_vec.add(l);\n+                variableList.add(l);\n@@ -319,1 +329,1 @@\n-        return addLocalVariable(name, type, max_locals, start, end);\n+        return addLocalVariable(name, type, maxLocals, start, end);\n@@ -328,1 +338,1 @@\n-        variable_vec.remove(l);\n+        variableList.remove(l);\n@@ -336,1 +346,1 @@\n-        variable_vec.clear();\n+        variableList.clear();\n@@ -347,1 +357,1 @@\n-        final int size = variable_vec.size();\n+        final int size = variableList.size();\n@@ -349,1 +359,1 @@\n-        variable_vec.toArray(lg);\n+        variableList.toArray(lg);\n@@ -383,1 +393,1 @@\n-        return local_variable_type_table;\n+        return localVariableTypeTable;\n@@ -393,3 +403,3 @@\n-    public LineNumberGen addLineNumber( final InstructionHandle ih, final int src_line ) {\n-        final LineNumberGen l = new LineNumberGen(ih, src_line);\n-        line_number_vec.add(l);\n+    public LineNumberGen addLineNumber( final InstructionHandle ih, final int srcLine ) {\n+        final LineNumberGen l = new LineNumberGen(ih, srcLine);\n+        lineNumberList.add(l);\n@@ -404,1 +414,1 @@\n-        line_number_vec.remove(l);\n+        lineNumberList.remove(l);\n@@ -412,1 +422,1 @@\n-        line_number_vec.clear();\n+        lineNumberList.clear();\n@@ -420,2 +430,2 @@\n-        final LineNumberGen[] lg = new LineNumberGen[line_number_vec.size()];\n-        line_number_vec.toArray(lg);\n+        final LineNumberGen[] lg = new LineNumberGen[lineNumberList.size()];\n+        lineNumberList.toArray(lg);\n@@ -430,1 +440,1 @@\n-        final int size = line_number_vec.size();\n+        final int size = lineNumberList.size();\n@@ -433,1 +443,1 @@\n-            ln[i] = line_number_vec.get(i).getLineNumber();\n+            ln[i] = lineNumberList.get(i).getLineNumber();\n@@ -457,1 +467,1 @@\n-        exception_vec.add(c);\n+        exceptionList.add(c);\n@@ -466,1 +476,1 @@\n-        exception_vec.remove(c);\n+        exceptionList.remove(c);\n@@ -474,1 +484,1 @@\n-        exception_vec.clear();\n+        exceptionList.clear();\n@@ -482,2 +492,2 @@\n-        final CodeExceptionGen[] cg = new CodeExceptionGen[exception_vec.size()];\n-        exception_vec.toArray(cg);\n+        final CodeExceptionGen[] cg = new CodeExceptionGen[exceptionList.size()];\n+        exceptionList.toArray(cg);\n@@ -492,1 +502,1 @@\n-        final int size = exception_vec.size();\n+        final int size = exceptionList.size();\n@@ -495,1 +505,1 @@\n-            final CodeExceptionGen c =  exception_vec.get(i);\n+            final CodeExceptionGen c =  exceptionList.get(i);\n@@ -505,1 +515,1 @@\n-     * @param class_name (fully qualified) name of exception\n+     * @param className (fully qualified) name of exception\n@@ -507,2 +517,2 @@\n-    public void addException( final String class_name ) {\n-        throws_vec.add(class_name);\n+    public void addException( final String className ) {\n+        throwsList.add(className);\n@@ -516,1 +526,1 @@\n-        throws_vec.remove(c);\n+        throwsList.remove(c);\n@@ -524,1 +534,1 @@\n-        throws_vec.clear();\n+        throwsList.clear();\n@@ -532,3 +542,1 @@\n-        final String[] e = new String[throws_vec.size()];\n-        throws_vec.toArray(e);\n-        return e;\n+        return throwsList.toArray(new String[0]);\n@@ -542,1 +550,1 @@\n-        final int size = throws_vec.size();\n+        final int size = throwsList.size();\n@@ -545,1 +553,1 @@\n-            ex[i] = cp.addClass(throws_vec.get(i));\n+            ex[i] = cp.addClass(throwsList.get(i));\n@@ -561,1 +569,1 @@\n-        code_attrs_vec.add(a);\n+        codeAttrsList.add(a);\n@@ -569,1 +577,1 @@\n-        local_variable_type_table = null;\n+        localVariableTypeTable = null;\n@@ -576,1 +584,1 @@\n-        code_attrs_vec.remove(a);\n+        codeAttrsList.remove(a);\n@@ -584,2 +592,2 @@\n-        local_variable_type_table = null;\n-        code_attrs_vec.clear();\n+        localVariableTypeTable = null;\n+        codeAttrsList.clear();\n@@ -593,3 +601,1 @@\n-        final Attribute[] attributes = new Attribute[code_attrs_vec.size()];\n-        code_attrs_vec.toArray(attributes);\n-        return attributes;\n+        return codeAttrsList.toArray(new Attribute[0]);\n@@ -602,1 +608,1 @@\n-          final Attribute[] attrs = AnnotationEntryGen.getAnnotationAttributes(cp, super.getAnnotationEntries());\n+        final Attribute[] attrs = AnnotationEntryGen.getAnnotationAttributes(cp, super.getAnnotationEntries());\n@@ -606,1 +612,1 @@\n-      }\n+    }\n@@ -611,11 +617,41 @@\n-      public void addParameterAnnotationsAsAttribute(final ConstantPoolGen cp) {\n-          if (!hasParameterAnnotations) {\n-              return;\n-          }\n-          final Attribute[] attrs = AnnotationEntryGen.getParameterAnnotationAttributes(cp,param_annotations);\n-          if (attrs != null) {\n-              for (final Attribute attr : attrs) {\n-                  addAttribute(attr);\n-              }\n-          }\n-      }\n+    public void addParameterAnnotationsAsAttribute(final ConstantPoolGen cp) {\n+        if (!hasParameterAnnotations) {\n+            return;\n+        }\n+        final Attribute[] attrs = AnnotationEntryGen.getParameterAnnotationAttributes(cp, paramAnnotations);\n+        if (attrs != null) {\n+            for (final Attribute attr : attrs) {\n+                addAttribute(attr);\n+            }\n+        }\n+    }\n+\n+    private Attribute[] addRuntimeAnnotationsAsAttribute(final ConstantPoolGen cp) {\n+        final Attribute[] attrs = AnnotationEntryGen.getAnnotationAttributes(cp, super.getAnnotationEntries());\n+        for (final Attribute attr : attrs) {\n+            addAttribute(attr);\n+        }\n+        return attrs;\n+    }\n+\n+    private Attribute[] addRuntimeParameterAnnotationsAsAttribute(final ConstantPoolGen cp) {\n+        if (!hasParameterAnnotations) {\n+            return new Attribute[0];\n+        }\n+        final Attribute[] attrs = AnnotationEntryGen.getParameterAnnotationAttributes(cp, paramAnnotations);\n+        for (final Attribute attr : attrs) {\n+            addAttribute(attr);\n+        }\n+        return attrs;\n+    }\n+\n+    \/**\n+     * Would prefer to make this private, but need a way to test if client is\n+     * using BCEL version 6.5.0 or later that contains fix for BCEL-329.\n+     * @since 6.5.0\n+     *\/\n+    public void removeRuntimeAttributes(final Attribute[] attrs) {\n+        for (final Attribute attr : attrs) {\n+            removeAttribute(attr);\n+        }\n+    }\n@@ -645,1 +681,1 @@\n-        if ((variable_vec.size() > 0) && !strip_attributes) {\n+        if ((variableList.size() > 0) && !stripAttributes) {\n@@ -649,1 +685,1 @@\n-        if (local_variable_type_table != null) {\n+        if (localVariableTypeTable != null) {\n@@ -654,1 +690,1 @@\n-            addCodeAttribute(local_variable_type_table);\n+            addCodeAttribute(localVariableTypeTable);\n@@ -656,1 +692,1 @@\n-        if ((line_number_vec.size() > 0) && !strip_attributes) {\n+        if ((lineNumberList.size() > 0) && !stripAttributes) {\n@@ -680,1 +716,1 @@\n-                    max_stack, max_locals, byte_code, c_exc, code_attrs, _cp.getConstantPool());\n+                    maxStack, maxLocals, byte_code, c_exc, code_attrs, _cp.getConstantPool());\n@@ -683,2 +719,2 @@\n-        addAnnotationsAsAttribute(_cp);\n-        addParameterAnnotationsAsAttribute(_cp);\n+        final Attribute[] annotations = addRuntimeAnnotationsAsAttribute(_cp);\n+        final Attribute[] parameterAnnotations = addRuntimeParameterAnnotationsAsAttribute(_cp);\n@@ -686,1 +722,1 @@\n-        if (throws_vec.size() > 0) {\n+        if (throwsList.size() > 0) {\n@@ -696,2 +732,2 @@\n-        if (local_variable_type_table != null) {\n-            removeCodeAttribute(local_variable_type_table);\n+        if (localVariableTypeTable != null) {\n+            removeCodeAttribute(localVariableTypeTable);\n@@ -708,0 +744,2 @@\n+        removeRuntimeAttributes(annotations);\n+        removeRuntimeAttributes(parameterAnnotations);\n@@ -731,1 +769,1 @@\n-        final LocalVariable[] lvg = local_variable_type_table.getLocalVariableTypeTable();\n+        final LocalVariable[] lvg = localVariableTypeTable.getLocalVariableTypeTable();\n@@ -778,1 +816,1 @@\n-        max_locals = m;\n+        maxLocals = m;\n@@ -783,1 +821,1 @@\n-        return max_locals;\n+        return maxLocals;\n@@ -791,1 +829,1 @@\n-        max_stack = m;\n+        maxStack = m;\n@@ -796,1 +834,1 @@\n-        return max_stack;\n+        return maxStack;\n@@ -803,1 +841,1 @@\n-        return class_name;\n+        return className;\n@@ -808,1 +846,1 @@\n-        this.class_name = class_name;\n+        this.className = class_name;\n@@ -823,1 +861,1 @@\n-        this.arg_types = arg_types;\n+        this.argTypes = arg_types;\n@@ -828,1 +866,1 @@\n-        return arg_types.clone();\n+        return argTypes.clone();\n@@ -833,1 +871,1 @@\n-        arg_types[i] = type;\n+        argTypes[i] = type;\n@@ -838,1 +876,1 @@\n-        return arg_types[i];\n+        return argTypes[i];\n@@ -843,1 +881,1 @@\n-        this.arg_names = arg_names;\n+        this.argNames = arg_names;\n@@ -848,1 +886,1 @@\n-        return arg_names.clone();\n+        return argNames.clone();\n@@ -853,1 +891,1 @@\n-        arg_names[i] = name;\n+        argNames[i] = name;\n@@ -858,1 +896,1 @@\n-        return arg_names[i];\n+        return argNames[i];\n@@ -874,1 +912,1 @@\n-        return Type.getMethodSignature(super.getType(), arg_types);\n+        return Type.getMethodSignature(super.getType(), argTypes);\n@@ -883,1 +921,1 @@\n-            max_stack = getMaxStack(super.getConstantPool(), il, getExceptionHandlers());\n+            maxStack = getMaxStack(super.getConstantPool(), il, getExceptionHandlers());\n@@ -885,1 +923,1 @@\n-            max_stack = 0;\n+            maxStack = 0;\n@@ -896,2 +934,2 @@\n-            if (arg_types != null) {\n-                for (final Type arg_type : arg_types) {\n+            if (argTypes != null) {\n+                for (final Type arg_type : argTypes) {\n@@ -912,1 +950,1 @@\n-            max_locals = max;\n+            maxLocals = max;\n@@ -914,1 +952,1 @@\n-            max_locals = 0;\n+            maxLocals = 0;\n@@ -923,1 +961,1 @@\n-        strip_attributes = flag;\n+        stripAttributes = flag;\n@@ -1094,1 +1132,1 @@\n-        String signature = Type.getMethodSignature(super.getType(), arg_types);\n+        String signature = Type.getMethodSignature(super.getType(), argTypes);\n@@ -1104,2 +1142,2 @@\n-        if (throws_vec.size() > 0) {\n-            for (final String throwsDescriptor : throws_vec) {\n+        if (throwsList.size() > 0) {\n+            for (final String throwsDescriptor : throwsList) {\n@@ -1115,1 +1153,1 @@\n-    public MethodGen copy( final String class_name, final ConstantPoolGen cp ) {\n+    public MethodGen copy( final String className, final ConstantPoolGen cp ) {\n@@ -1117,1 +1155,1 @@\n-        final MethodGen mg = new MethodGen(m, class_name, super.getConstantPool());\n+        final MethodGen mg = new MethodGen(m, className, super.getConstantPool());\n@@ -1125,1 +1163,1 @@\n-    \/\/J5TODO: Should param_annotations be an array of arrays? Rather than an array of lists, this\n+    \/\/J5TODO: Should paramAnnotations be an array of arrays? Rather than an array of lists, this\n@@ -1133,1 +1171,1 @@\n-        if (!hasParameterAnnotations || i > arg_types.length) {\n+        if (!hasParameterAnnotations || i > argTypes.length) {\n@@ -1136,1 +1174,1 @@\n-        return param_annotations[i];\n+        return paramAnnotations[i];\n@@ -1159,1 +1197,1 @@\n-                \/\/ Initialize param_annotations\n+                \/\/ Initialize paramAnnotations\n@@ -1162,5 +1200,5 @@\n-                    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n-                    final List<AnnotationEntryGen>[] parmList = new List[arg_types.length];\n-                    param_annotations = parmList;\n-                    for (int j = 0; j < arg_types.length; j++) {\n-                        param_annotations[j] = new ArrayList<>();\n+                    @SuppressWarnings({\"rawtypes\", \"unchecked\"}) \/\/ OK\n+                    final List<AnnotationEntryGen>[] parmList = new List[argTypes.length];\n+                    paramAnnotations = parmList;\n+                    for (int j = 0; j < argTypes.length; j++) {\n+                        paramAnnotations[j] = new ArrayList<>();\n@@ -1184,1 +1222,1 @@\n-                    param_annotations[j].addAll(mutable);\n+                    paramAnnotations[j].addAll(mutable);\n@@ -1214,2 +1252,2 @@\n-            final List<AnnotationEntryGen>[] parmList = new List[arg_types.length];\n-            param_annotations = parmList;\n+            final List<AnnotationEntryGen>[] parmList = new List[argTypes.length];\n+            paramAnnotations = parmList;\n@@ -1218,1 +1256,1 @@\n-        final List<AnnotationEntryGen> existingAnnotations = param_annotations[parameterIndex];\n+        final List<AnnotationEntryGen> existingAnnotations = paramAnnotations[parameterIndex];\n@@ -1227,1 +1265,1 @@\n-            param_annotations[parameterIndex] = l;\n+            paramAnnotations[parameterIndex] = l;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/MethodGen.java","additions":199,"deletions":161,"binary":false,"changes":360,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private final String class_name; \/\/ Class name of type\n+    private final String className; \/\/ Class name of type\n@@ -39,2 +39,2 @@\n-    public static ObjectType getInstance(final String class_name) {\n-        return new ObjectType(class_name);\n+    public static ObjectType getInstance(final String className) {\n+        return new ObjectType(className);\n@@ -44,1 +44,1 @@\n-     * @param class_name fully qualified class name, e.g. java.lang.String\n+     * @param className fully qualified class name, e.g. java.lang.String\n@@ -46,3 +46,3 @@\n-    public ObjectType(final String class_name) {\n-        super(Const.T_REFERENCE, \"L\" + class_name.replace('.', '\/') + \";\");\n-        this.class_name = class_name.replace('\/', '.');\n+    public ObjectType(final String className) {\n+        super(Const.T_REFERENCE, \"L\" + className.replace('.', '\/') + \";\");\n+        this.className = className.replace('\/', '.');\n@@ -55,1 +55,1 @@\n-        return class_name;\n+        return className;\n@@ -63,1 +63,1 @@\n-        return class_name.hashCode();\n+        return className.hashCode();\n@@ -72,1 +72,1 @@\n-                ? ((ObjectType) type).class_name.equals(class_name)\n+                ? ((ObjectType) type).className.equals(className)\n@@ -87,1 +87,1 @@\n-            final JavaClass jc = Repository.lookupClass(class_name);\n+            final JavaClass jc = Repository.lookupClass(className);\n@@ -105,1 +105,1 @@\n-            final JavaClass jc = Repository.lookupClass(class_name);\n+            final JavaClass jc = Repository.lookupClass(className);\n@@ -122,1 +122,1 @@\n-        final JavaClass jc = Repository.lookupClass(class_name);\n+        final JavaClass jc = Repository.lookupClass(className);\n@@ -136,1 +136,1 @@\n-        final JavaClass jc = Repository.lookupClass(class_name);\n+        final JavaClass jc = Repository.lookupClass(className);\n@@ -150,1 +150,1 @@\n-        return Repository.instanceOf(this.class_name, superclass.class_name);\n+        return Repository.instanceOf(this.className, superclass.className);\n@@ -160,1 +160,1 @@\n-        final JavaClass jc = Repository.lookupClass(class_name);\n+        final JavaClass jc = Repository.lookupClass(className);\n@@ -164,1 +164,1 @@\n-        final JavaClass acc = Repository.lookupClass(accessor.class_name);\n+        final JavaClass acc = Repository.lookupClass(accessor.className);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/ObjectType.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    private int match_length;\n+    private int matchLength;\n@@ -56,1 +56,1 @@\n-        if ((match_length = match.length) < 2) {\n+        if ((matchLength = match.length) < 2) {\n@@ -59,1 +59,1 @@\n-            sort(0, match_length - 1);\n+            sort(0, matchLength - 1);\n@@ -76,1 +76,1 @@\n-        final int max_size = match_length + match_length * max_gap;\n+        final int max_size = matchLength + matchLength * max_gap;\n@@ -82,1 +82,1 @@\n-        for (int i = 1; i < match_length; i++) {\n+        for (int i = 1; i < matchLength; i++) {\n@@ -141,1 +141,1 @@\n-        for (int i = 1; i < match_length; i++) {\n+        for (int i = 1; i < matchLength; i++) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/SWITCH.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * <p>We use our super's <code>target<\/code> property as the default target.\n+ * <p>We use our super's {@code target} property as the default target.\n@@ -35,1 +35,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/Select.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-                throw new RuntimeException(\n+                throw new IllegalArgumentException(\n@@ -192,1 +192,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -202,1 +202,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -246,1 +246,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n@@ -269,1 +269,1 @@\n-            throw new RuntimeException(\n+            throw new IllegalStateException(\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/SimpleElementValueGen.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -298,1 +298,1 @@\n-                throw new IllegalStateException(\"Ooops, what primitive type is \" + cl);\n+                throw new IllegalStateException(\"Unknown primitive type \" + cl);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/generic\/Type.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -204,1 +204,1 @@\n-                throw new RuntimeException(\"Oops: \" + opcode);\n+                throw new IllegalArgumentException(\"Unhandled opcode: \" + opcode);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/util\/BCELFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private final String class_name; \/\/ name of current class\n+    private final String className; \/\/ name of current class\n@@ -54,3 +54,3 @@\n-    private BitSet goto_set;\n-    private final ConstantPool constant_pool;\n-    private final ConstantHTML constant_html;\n+    private BitSet gotoSet;\n+    private final ConstantPool constantPool;\n+    private final ConstantHTML constantHtml;\n@@ -62,1 +62,1 @@\n-        this.class_name = class_name;\n+        this.className = class_name;\n@@ -64,2 +64,2 @@\n-        this.constant_pool = constant_pool;\n-        this.constant_html = constant_html;\n+        this.constantPool = constant_pool;\n+        this.constantHtml = constant_html;\n@@ -234,1 +234,1 @@\n-                final ConstantFieldref c1 = (ConstantFieldref) constant_pool.getConstant(index,\n+                final ConstantFieldref c1 = (ConstantFieldref) constantPool.getConstant(index,\n@@ -237,1 +237,1 @@\n-                name = constant_pool.getConstantString(class_index, Const.CONSTANT_Class);\n+                name = constantPool.getConstantString(class_index, Const.CONSTANT_Class);\n@@ -240,3 +240,3 @@\n-                final String field_name = constant_pool.constantToString(index, Const.CONSTANT_NameAndType);\n-                if (name.equals(class_name)) { \/\/ Local field\n-                    buf.append(\"<A HREF=\\\"\").append(class_name).append(\"_methods.html#field\")\n+                final String field_name = constantPool.constantToString(index, Const.CONSTANT_NameAndType);\n+                if (name.equals(className)) { \/\/ Local field\n+                    buf.append(\"<A HREF=\\\"\").append(className).append(\"_methods.html#field\")\n@@ -246,1 +246,1 @@\n-                    buf.append(constant_html.referenceConstant(class_index)).append(\".\").append(\n+                    buf.append(constantHtml.referenceConstant(class_index)).append(\".\").append(\n@@ -256,1 +256,1 @@\n-                buf.append(constant_html.referenceConstant(index));\n+                buf.append(constantHtml.referenceConstant(index));\n@@ -272,1 +272,1 @@\n-                    final ConstantInterfaceMethodref c = (ConstantInterfaceMethodref) constant_pool\n+                    final ConstantInterfaceMethodref c = (ConstantInterfaceMethodref) constantPool\n@@ -280,1 +280,1 @@\n-                    final ConstantInvokeDynamic c = (ConstantInvokeDynamic) constant_pool\n+                    final ConstantInvokeDynamic c = (ConstantInvokeDynamic) constantPool\n@@ -288,1 +288,1 @@\n-                    final ConstantMethodref c = (ConstantMethodref) constant_pool.getConstant(m_index,\n+                    final ConstantMethodref c = (ConstantMethodref) constantPool.getConstant(m_index,\n@@ -294,1 +294,1 @@\n-                str = Class2HTML.toHTML(constant_pool.constantToString(constant_pool.getConstant(\n+                str = Class2HTML.toHTML(constantPool.constantToString(constantPool.getConstant(\n@@ -297,1 +297,1 @@\n-                final ConstantNameAndType c2 = (ConstantNameAndType) constant_pool.getConstant(index,\n+                final ConstantNameAndType c2 = (ConstantNameAndType) constantPool.getConstant(index,\n@@ -299,1 +299,1 @@\n-                signature = constant_pool.constantToString(c2.getSignatureIndex(), Const.CONSTANT_Utf8);\n+                signature = constantPool.constantToString(c2.getSignatureIndex(), Const.CONSTANT_Utf8);\n@@ -302,1 +302,1 @@\n-                buf.append(name).append(\".<A HREF=\\\"\").append(class_name).append(\"_cp.html#cp\")\n+                buf.append(name).append(\".<A HREF=\\\"\").append(className).append(\"_cp.html#cp\")\n@@ -320,1 +320,1 @@\n-                buf.append(\"<A HREF=\\\"\").append(class_name).append(\"_cp.html#cp\").append(index)\n+                buf.append(\"<A HREF=\\\"\").append(className).append(\"_cp.html#cp\").append(index)\n@@ -322,2 +322,2 @@\n-                                Class2HTML.toHTML(constant_pool.constantToString(index,\n-                                        constant_pool.getConstant(index).getTag()))).append(\"<\/a>\");\n+                                Class2HTML.toHTML(constantPool.constantToString(index,\n+                                        constantPool.getConstant(index).getTag()))).append(\"<\/a>\");\n@@ -327,1 +327,1 @@\n-                buf.append(\"<A HREF=\\\"\").append(class_name).append(\"_cp.html#cp\").append(index)\n+                buf.append(\"<A HREF=\\\"\").append(className).append(\"_cp.html#cp\").append(index)\n@@ -329,2 +329,2 @@\n-                                Class2HTML.toHTML(constant_pool.constantToString(index,\n-                                        constant_pool.getConstant(index).getTag()))).append(\"<\/a>\");\n+                                Class2HTML.toHTML(constantPool.constantToString(index,\n+                                        constantPool.getConstant(index).getTag()))).append(\"<\/a>\");\n@@ -336,1 +336,1 @@\n-                buf.append(constant_html.referenceConstant(index));\n+                buf.append(constantHtml.referenceConstant(index));\n@@ -343,1 +343,1 @@\n-                buf.append(constant_html.referenceConstant(index)).append(\":\").append(dimensions)\n+                buf.append(constantHtml.referenceConstant(index)).append(\":\").append(dimensions)\n@@ -392,1 +392,1 @@\n-        goto_set = new BitSet(bytes.available());\n+        gotoSet = new BitSet(bytes.available());\n@@ -400,3 +400,3 @@\n-                goto_set.set(cex.getStartPC());\n-                goto_set.set(cex.getEndPC());\n-                goto_set.set(cex.getHandlerPC());\n+                gotoSet.set(cex.getStartPC());\n+                gotoSet.set(cex.getEndPC());\n+                gotoSet.set(cex.getHandlerPC());\n@@ -413,2 +413,2 @@\n-                        goto_set.set(start);\n-                        goto_set.set(end);\n+                        gotoSet.set(start);\n+                        gotoSet.set(end);\n@@ -442,1 +442,1 @@\n-                        goto_set.set(default_offset);\n+                        gotoSet.set(default_offset);\n@@ -445,1 +445,1 @@\n-                            goto_set.set(index);\n+                            gotoSet.set(index);\n@@ -451,1 +451,1 @@\n-                        goto_set.set(default_offset);\n+                        gotoSet.set(default_offset);\n@@ -456,1 +456,1 @@\n-                            goto_set.set(index);\n+                            gotoSet.set(index);\n@@ -480,1 +480,1 @@\n-                    goto_set.set(index);\n+                    gotoSet.set(index);\n@@ -486,1 +486,1 @@\n-                    goto_set.set(index);\n+                    gotoSet.set(index);\n@@ -516,1 +516,1 @@\n-                + class_name + \"_methods.html#method\" + method_number + \"\\\" TARGET=Methods>\"\n+                + className + \"_methods.html#method\" + method_number + \"\\\" TARGET=Methods>\"\n@@ -532,1 +532,1 @@\n-                    file.print(\"<LI><A HREF=\\\"\" + class_name + \"_attributes.html#method\"\n+                    file.print(\"<LI><A HREF=\\\"\" + className + \"_attributes.html#method\"\n@@ -545,1 +545,1 @@\n-                        file.print(\"<LI><A HREF=\\\"\" + class_name + \"_attributes.html#\" + \"method\"\n+                        file.print(\"<LI><A HREF=\\\"\" + className + \"_attributes.html#\" + \"method\"\n@@ -555,1 +555,1 @@\n-            \/\/System.out.println(name + \"\\n\" + Utility.codeToString(code, constant_pool, 0, -1));\n+            \/\/System.out.println(name + \"\\n\" + Utility.codeToString(code, constantPool, 0, -1));\n@@ -571,1 +571,1 @@\n-                    if (goto_set.get(offset)) {\n+                    if (gotoSet.get(offset)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/util\/CodeHTML.java","additions":46,"deletions":46,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -47,3 +47,3 @@\n-    private final String class_name; \/\/ name of current class\n-    private final String class_package; \/\/ name of package\n-    private final ConstantPool constant_pool; \/\/ reference to constant pool\n+    private final String className; \/\/ name of current class\n+    private final String classPackage; \/\/ name of package\n+    private final ConstantPool constantPool; \/\/ reference to constant pool\n@@ -51,1 +51,1 @@\n-    private final String[] constant_ref; \/\/ String to return for cp[i]\n+    private final String[] constantRef; \/\/ String to return for cp[i]\n@@ -58,3 +58,3 @@\n-        this.class_name = class_name;\n-        this.class_package = class_package;\n-        this.constant_pool = constant_pool;\n+        this.className = class_name;\n+        this.classPackage = class_package;\n+        this.constantPool = constant_pool;\n@@ -64,2 +64,2 @@\n-        constant_ref = new String[constants.length];\n-        constant_ref[0] = \"&lt;unknown&gt;\";\n+        constantRef = new String[constants.length];\n+        constantRef[0] = \"&lt;unknown&gt;\";\n@@ -85,1 +85,1 @@\n-        return constant_ref[index];\n+        return constantRef[index];\n@@ -104,1 +104,1 @@\n-                    final ConstantMethodref c = (ConstantMethodref) constant_pool.getConstant(index,\n+                    final ConstantMethodref c = (ConstantMethodref) constantPool.getConstant(index,\n@@ -109,1 +109,1 @@\n-                    final ConstantInterfaceMethodref c1 = (ConstantInterfaceMethodref) constant_pool\n+                    final ConstantInterfaceMethodref c1 = (ConstantInterfaceMethodref) constantPool\n@@ -115,1 +115,1 @@\n-                final String method_name = constant_pool.constantToString(name_index,\n+                final String method_name = constantPool.constantToString(name_index,\n@@ -119,1 +119,1 @@\n-                final String method_class = constant_pool.constantToString(class_index, Const.CONSTANT_Class);\n+                final String method_class = constantPool.constantToString(class_index, Const.CONSTANT_Class);\n@@ -121,1 +121,1 @@\n-                short_method_class = Utility.compactClassName(short_method_class, class_package\n+                short_method_class = Utility.compactClassName(short_method_class, classPackage\n@@ -124,1 +124,1 @@\n-                final ConstantNameAndType c2 = (ConstantNameAndType) constant_pool.getConstant(\n+                final ConstantNameAndType c2 = (ConstantNameAndType) constantPool.getConstant(\n@@ -126,1 +126,1 @@\n-                final String signature = constant_pool.constantToString(c2.getSignatureIndex(),\n+                final String signature = constantPool.constantToString(c2.getSignatureIndex(),\n@@ -142,2 +142,2 @@\n-                if (method_class.equals(class_name)) {\n-                    ref = \"<A HREF=\\\"\" + class_name + \"_code.html#method\"\n+                if (method_class.equals(className)) {\n+                    ref = \"<A HREF=\\\"\" + className + \"_code.html#method\"\n@@ -150,1 +150,1 @@\n-                constant_ref[index] = ret_type + \"&nbsp;<A HREF=\\\"\" + class_name + \"_cp.html#cp\"\n+                constantRef[index] = ret_type + \"&nbsp;<A HREF=\\\"\" + className + \"_cp.html#cp\"\n@@ -152,1 +152,1 @@\n-                        + \"<\/A>.<A HREF=\\\"\" + class_name + \"_cp.html#cp\" + index\n+                        + \"<\/A>.<A HREF=\\\"\" + className + \"_cp.html#cp\" + index\n@@ -161,1 +161,1 @@\n-                final ConstantFieldref c3 = (ConstantFieldref) constant_pool.getConstant(index,\n+                final ConstantFieldref c3 = (ConstantFieldref) constantPool.getConstant(index,\n@@ -166,1 +166,1 @@\n-                final String field_class = constant_pool.constantToString(class_index, Const.CONSTANT_Class);\n+                final String field_class = constantPool.constantToString(class_index, Const.CONSTANT_Class);\n@@ -169,2 +169,2 @@\n-                        class_package + \".\", true); \/\/ Remove class package prefix\n-                final String field_name = constant_pool\n+                        classPackage + \".\", true); \/\/ Remove class package prefix\n+                final String field_name = constantPool\n@@ -172,1 +172,1 @@\n-                if (field_class.equals(class_name)) {\n+                if (field_class.equals(className)) {\n@@ -179,1 +179,1 @@\n-                constant_ref[index] = \"<A HREF=\\\"\" + class_name + \"_cp.html#cp\" + class_index\n+                constantRef[index] = \"<A HREF=\\\"\" + className + \"_cp.html#cp\" + class_index\n@@ -181,1 +181,1 @@\n-                        + class_name + \"_cp.html#cp\" + index + \"\\\" TARGET=ConstantPool>\"\n+                        + className + \"_cp.html#cp\" + index + \"\\\" TARGET=ConstantPool>\"\n@@ -189,1 +189,1 @@\n-                final ConstantClass c4 = (ConstantClass) constant_pool.getConstant(index, Const.CONSTANT_Class);\n+                final ConstantClass c4 = (ConstantClass) constantPool.getConstant(index, Const.CONSTANT_Class);\n@@ -191,1 +191,1 @@\n-                final String class_name2 = constant_pool.constantToString(index, tag); \/\/ \/ -> .\n+                final String class_name2 = constantPool.constantToString(index, tag); \/\/ \/ -> .\n@@ -193,1 +193,1 @@\n-                short_class_name = Utility.compactClassName(short_class_name, class_package + \".\",\n+                short_class_name = Utility.compactClassName(short_class_name, classPackage + \".\",\n@@ -197,1 +197,1 @@\n-                constant_ref[index] = \"<A HREF=\\\"\" + class_name + \"_cp.html#cp\" + index\n+                constantRef[index] = \"<A HREF=\\\"\" + className + \"_cp.html#cp\" + index\n@@ -203,1 +203,1 @@\n-                final ConstantString c5 = (ConstantString) constant_pool.getConstant(index,\n+                final ConstantString c5 = (ConstantString) constantPool.getConstant(index,\n@@ -206,1 +206,1 @@\n-                final String str = Class2HTML.toHTML(constant_pool.constantToString(index, tag));\n+                final String str = Class2HTML.toHTML(constantPool.constantToString(index, tag));\n@@ -211,1 +211,1 @@\n-                final ConstantNameAndType c6 = (ConstantNameAndType) constant_pool.getConstant(index,\n+                final ConstantNameAndType c6 = (ConstantNameAndType) constantPool.getConstant(index,\n@@ -216,1 +216,1 @@\n-                        + Class2HTML.toHTML(constant_pool.constantToString(index, tag))\n+                        + Class2HTML.toHTML(constantPool.constantToString(index, tag))\n@@ -222,1 +222,1 @@\n-                file.println(\"<P><TT>\" + Class2HTML.toHTML(constant_pool.constantToString(index, tag)) + \"<\/TT>\\n\");\n+                file.println(\"<P><TT>\" + Class2HTML.toHTML(constantPool.constantToString(index, tag)) + \"<\/TT>\\n\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/util\/ConstantHTML.java","additions":37,"deletions":37,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -75,1 +75,1 @@\n-    private String il_string; \/\/ instruction list as string\n+    private String ilString; \/\/ instruction list as string\n@@ -102,1 +102,1 @@\n-        il_string = new String(buf);\n+        ilString = new String(buf);\n@@ -123,1 +123,1 @@\n-        throw new RuntimeException(\"Instruction unknown: \" + pattern);\n+        throw new IllegalArgumentException(\"Instruction unknown: \" + pattern);\n@@ -224,2 +224,2 @@\n-        final Matcher matcher = regex.matcher(il_string);\n-        while (start < il_string.length() && matcher.find(start)) {\n+        final Matcher matcher = regex.matcher(ilString);\n+        while (start < ilString.length() && matcher.find(start)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/util\/InstructionFinder.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    private final String class_name; \/\/ name of current class\n+    private final String className; \/\/ name of current class\n@@ -46,1 +46,1 @@\n-    private final ConstantHTML constant_html;\n+    private final ConstantHTML constantHtml;\n@@ -52,1 +52,1 @@\n-        this.class_name = class_name;\n+        this.className = class_name;\n@@ -54,1 +54,1 @@\n-        this.constant_html = constant_html;\n+        this.constantHtml = constant_html;\n@@ -98,1 +98,1 @@\n-                file.print(\"<TD>= <A HREF=\\\"\" + class_name + \"_attributes.html#\" + name + \"@\" + i\n+                file.print(\"<TD>= <A HREF=\\\"\" + className + \"_attributes.html#\" + name + \"@\" + i\n@@ -128,1 +128,1 @@\n-        file.print(\"<TD>\" + Class2HTML.referenceType(type) + \"<\/TD><TD>\" + \"<A HREF=\" + class_name\n+        file.print(\"<TD>\" + Class2HTML.referenceType(type) + \"<\/TD><TD>\" + \"<A HREF=\" + className\n@@ -147,1 +147,1 @@\n-                    file.print(constant_html.referenceConstant(exceptions[j]));\n+                    file.print(constantHtml.referenceConstant(exceptions[j]));\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/util\/MethodHTML.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- * @LastModified: Jan 2020\n+ * @LastModified: May 2021\n@@ -63,1 +63,1 @@\n-    }\n+        }\n@@ -81,1 +81,1 @@\n-        }\n+}\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/bcel\/internal\/util\/SyntheticRepository.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## Apache Commons Byte Code Engineering Library (BCEL) Version 6.4.1\n+## Apache Commons Byte Code Engineering Library (BCEL) Version 6.5.0\n","filename":"src\/java.xml\/share\/legal\/bcel.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}