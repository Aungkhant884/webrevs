{"files":[{"patch":"@@ -2303,1 +2303,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t size) {\n+bool os::pd_uncommit_memory(char* addr, size_t size, bool exec) {\n@@ -2376,1 +2376,1 @@\n-char* os::pd_reserve_memory(size_t bytes, size_t alignment_hint) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec, size_t alignment_hint) {\n@@ -2583,1 +2583,1 @@\n-char* os::pd_attempt_reserve_memory_at(size_t bytes, char* requested_addr) {\n+char* os::pd_attempt_reserve_memory_at(size_t bytes, char* requested_addr, bool exec) {\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2008,1 +2008,1 @@\n-#ifdef __OpenBSD__\n+#if defined(__OpenBSD__)\n@@ -2014,0 +2014,13 @@\n+#elif defined(__APPLE__)\n+  if (exec) {\n+    \/\/ Do not replace MAP_JIT mappings, see JDK-8234930\n+    if (::mprotect(addr, size, prot) == 0) {\n+      return true;\n+    }\n+  } else {\n+    uintptr_t res = (uintptr_t) ::mmap(addr, size, prot,\n+                                       MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0);\n+    if (res != (uintptr_t) MAP_FAILED) {\n+      return true;\n+    }\n+  }\n@@ -2092,2 +2105,2 @@\n-bool os::pd_uncommit_memory(char* addr, size_t size) {\n-#ifdef __OpenBSD__\n+bool os::pd_uncommit_memory(char* addr, size_t size, bool exec) {\n+#if defined(__OpenBSD__)\n@@ -2097,0 +2110,11 @@\n+#elif defined(__APPLE__)\n+  if (exec) {\n+    if (::madvise(addr, size, MADV_FREE) != 0) {\n+      return false;\n+    }\n+    return ::mprotect(addr, size, PROT_NONE) == 0;\n+  } else {\n+    uintptr_t res = (uintptr_t) ::mmap(addr, size, PROT_NONE,\n+        MAP_PRIVATE|MAP_FIXED|MAP_NORESERVE|MAP_ANONYMOUS, -1, 0);\n+    return res  != (uintptr_t) MAP_FAILED;\n+  }\n@@ -2117,1 +2141,1 @@\n-static char* anon_mmap(char* requested_addr, size_t bytes) {\n+static char* anon_mmap(char* requested_addr, size_t bytes, bool exec) {\n@@ -2119,1 +2143,2 @@\n-  const int flags = MAP_PRIVATE | MAP_NORESERVE | MAP_ANONYMOUS;\n+  const int flags = MAP_PRIVATE | MAP_NORESERVE | MAP_ANONYMOUS\n+      MACOS_ONLY(| (exec ? MAP_JIT : 0));\n@@ -2133,1 +2158,1 @@\n-char* os::pd_reserve_memory(size_t bytes, size_t alignment_hint) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec, size_t alignment_hint) {\n@@ -2135,1 +2160,1 @@\n-  return anon_mmap(NULL \/* addr *\/, bytes);\n+  return anon_mmap(NULL \/* addr *\/, bytes, exec);\n@@ -2288,1 +2313,1 @@\n-  char* result = pd_attempt_reserve_memory_at(bytes, requested_addr);\n+  char* result = pd_attempt_reserve_memory_at(bytes, requested_addr, !ExecMem);\n@@ -2300,1 +2325,1 @@\n-char* os::pd_attempt_reserve_memory_at(size_t bytes, char* requested_addr) {\n+char* os::pd_attempt_reserve_memory_at(size_t bytes, char* requested_addr, bool exec) {\n@@ -2318,1 +2343,1 @@\n-  char * addr = anon_mmap(requested_addr, bytes);\n+  char * addr = anon_mmap(requested_addr, bytes, exec);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":35,"deletions":10,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -3378,1 +3378,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t size) {\n+bool os::pd_uncommit_memory(char* addr, size_t size, bool exec) {\n@@ -3625,1 +3625,1 @@\n-char* os::pd_reserve_memory(size_t bytes, size_t alignment_hint) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec, size_t alignment_hint) {\n@@ -4272,1 +4272,1 @@\n-  char* result = pd_attempt_reserve_memory_at(bytes, requested_addr);\n+  char* result = pd_attempt_reserve_memory_at(bytes, requested_addr, !ExecMem);\n@@ -4284,1 +4284,1 @@\n-char* os::pd_attempt_reserve_memory_at(size_t bytes, char* requested_addr) {\n+char* os::pd_attempt_reserve_memory_at(size_t bytes, char* requested_addr, bool exec) {\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-char* os::reserve_memory_aligned(size_t size, size_t alignment) {\n+char* os::reserve_memory_aligned(size_t size, size_t alignment, bool exec) {\n@@ -325,1 +325,1 @@\n-  char* extra_base = os::reserve_memory(extra_size, alignment);\n+  char* extra_base = os::reserve_memory(extra_size, alignment, exec);\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2533,1 +2533,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t bytes) {\n+bool os::pd_uncommit_memory(char* addr, size_t bytes, bool exec) {\n@@ -2570,1 +2570,1 @@\n-char* os::pd_reserve_memory(size_t bytes, size_t alignment_hint) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec, size_t alignment_hint) {\n@@ -2578,1 +2578,1 @@\n-  char* result = pd_attempt_reserve_memory_at(bytes, requested_addr);\n+  char* result = pd_attempt_reserve_memory_at(bytes, requested_addr, !ExecMem);\n@@ -2590,1 +2590,1 @@\n-char* os::pd_attempt_reserve_memory_at(size_t bytes, char* requested_addr) {\n+char* os::pd_attempt_reserve_memory_at(size_t bytes, char* requested_addr, bool exec) {\n","filename":"src\/hotspot\/os\/solaris\/os_solaris.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3112,1 +3112,2 @@\n-char* os::reserve_memory_aligned(size_t size, size_t alignment) {\n+char* os::reserve_memory_aligned(size_t size, size_t alignment, bool exec) {\n+  \/\/ exec can be ignored\n@@ -3120,1 +3121,1 @@\n-char* os::pd_reserve_memory(size_t bytes, size_t alignment_hint) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec, size_t alignment_hint) {\n@@ -3122,1 +3123,1 @@\n-  return pd_attempt_reserve_memory_at(bytes, NULL \/* addr *\/);\n+  return pd_attempt_reserve_memory_at(bytes, NULL \/* addr *\/, exec);\n@@ -3127,1 +3128,1 @@\n-char* os::pd_attempt_reserve_memory_at(size_t bytes, char* addr) {\n+char* os::pd_attempt_reserve_memory_at(size_t bytes, char* addr, bool exec) {\n@@ -3325,1 +3326,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t bytes) {\n+bool os::pd_uncommit_memory(char* addr, size_t bytes, bool exec) {\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  char* addr = os::reserve_memory(size, alignment, flags);\n+  char* addr = os::reserve_memory(size, !ExecMem, alignment, flags);\n@@ -81,1 +81,1 @@\n-  char* addr = os::reserve_memory(size, alignment, flags);\n+  char* addr = os::reserve_memory(size, !ExecMem, alignment, flags);\n","filename":"src\/hotspot\/share\/memory\/allocation.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-static char* attempt_map_or_reserve_memory_at(size_t size, char* base, int fd) {\n+static char* attempt_map_or_reserve_memory_at(size_t size, char* base, int fd, bool executable) {\n@@ -90,1 +90,1 @@\n-  return os::attempt_reserve_memory_at(size, base);\n+  return os::attempt_reserve_memory_at(size, base, executable);\n@@ -94,1 +94,1 @@\n-static char* map_or_reserve_memory(size_t size, int fd) {\n+static char* map_or_reserve_memory(size_t size, int fd, bool executable) {\n@@ -98,1 +98,1 @@\n-  return os::reserve_memory(size);\n+  return os::reserve_memory(size, executable);\n@@ -102,1 +102,1 @@\n-static char* map_or_reserve_memory_aligned(size_t size, size_t alignment, int fd) {\n+static char* map_or_reserve_memory_aligned(size_t size, size_t alignment, int fd, bool executable) {\n@@ -106,1 +106,1 @@\n-  return os::reserve_memory_aligned(size, alignment);\n+  return os::reserve_memory_aligned(size, alignment, executable);\n@@ -217,1 +217,1 @@\n-      base = attempt_map_or_reserve_memory_at(size, requested_address, _fd_for_heap);\n+      base = attempt_map_or_reserve_memory_at(size, requested_address, _fd_for_heap, _executable);\n@@ -223,1 +223,1 @@\n-      base = map_or_reserve_memory(size, _fd_for_heap);\n+      base = map_or_reserve_memory(size, _fd_for_heap, _executable);\n@@ -235,1 +235,1 @@\n-      base = map_or_reserve_memory_aligned(size, alignment, _fd_for_heap);\n+      base = map_or_reserve_memory_aligned(size, alignment, _fd_for_heap, _executable);\n@@ -415,1 +415,1 @@\n-      base = attempt_map_or_reserve_memory_at(size, requested_address, _fd_for_heap);\n+      base = attempt_map_or_reserve_memory_at(size, requested_address, _fd_for_heap, executable());\n@@ -417,1 +417,1 @@\n-      base = map_or_reserve_memory(size, _fd_for_heap);\n+      base = map_or_reserve_memory(size, _fd_for_heap, executable());\n@@ -1017,1 +1017,1 @@\n-    if (!os::uncommit_memory(aligned_upper_new_high, upper_needs)) {\n+    if (!os::uncommit_memory(aligned_upper_new_high, upper_needs, _executable)) {\n@@ -1028,1 +1028,1 @@\n-    if (!os::uncommit_memory(aligned_middle_new_high, middle_needs)) {\n+    if (!os::uncommit_memory(aligned_middle_new_high, middle_needs, _executable)) {\n@@ -1039,1 +1039,1 @@\n-    if (!os::uncommit_memory(aligned_lower_new_high, lower_needs)) {\n+    if (!os::uncommit_memory(aligned_lower_new_high, lower_needs, _executable)) {\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1740,2 +1740,2 @@\n-char* os::reserve_memory(size_t bytes, size_t alignment_hint, MEMFLAGS flags) {\n-  char* result = pd_reserve_memory(bytes, alignment_hint);\n+char* os::reserve_memory(size_t bytes, bool executable, size_t alignment_hint, MEMFLAGS flags) {\n+  char* result = pd_reserve_memory(bytes, executable, alignment_hint);\n@@ -1753,2 +1753,2 @@\n-char* os::attempt_reserve_memory_at(size_t bytes, char* addr) {\n-  char* result = pd_attempt_reserve_memory_at(bytes, addr);\n+char* os::attempt_reserve_memory_at(size_t bytes, char* addr, bool executable) {\n+  char* result = pd_attempt_reserve_memory_at(bytes, addr, executable);\n@@ -1795,1 +1795,1 @@\n-bool os::uncommit_memory(char* addr, size_t bytes) {\n+bool os::uncommit_memory(char* addr, size_t bytes, bool executable) {\n@@ -1799,1 +1799,1 @@\n-    res = pd_uncommit_memory(addr, bytes);\n+    res = pd_uncommit_memory(addr, bytes, executable);\n@@ -1804,1 +1804,1 @@\n-    res = pd_uncommit_memory(addr, bytes);\n+    res = pd_uncommit_memory(addr, bytes, executable);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-  static char*  pd_reserve_memory(size_t bytes, size_t alignment_hint);\n+  static char*  pd_reserve_memory(size_t bytes, bool executable, size_t alignment_hint);\n@@ -116,1 +116,1 @@\n-  static char*  pd_attempt_reserve_memory_at(size_t bytes, char* addr);\n+  static char*  pd_attempt_reserve_memory_at(size_t bytes, char* addr, bool executable);\n@@ -130,1 +130,1 @@\n-  static bool   pd_uncommit_memory(char* addr, size_t bytes);\n+  static bool   pd_uncommit_memory(char* addr, size_t bytes, bool executable);\n@@ -333,1 +333,1 @@\n-  static char*  reserve_memory(size_t bytes, size_t alignment_hint = 0, MEMFLAGS flags = mtOther);\n+  static char*  reserve_memory(size_t bytes, bool executable = false, size_t alignment_hint = 0, MEMFLAGS flags = mtOther);\n@@ -336,1 +336,1 @@\n-  static char*  reserve_memory_aligned(size_t size, size_t alignment);\n+  static char*  reserve_memory_aligned(size_t size, size_t alignment, bool executable = false);\n@@ -340,1 +340,1 @@\n-  static char*  attempt_reserve_memory_at(size_t bytes, char* addr);\n+  static char*  attempt_reserve_memory_at(size_t bytes, char* addr, bool executable = false);\n@@ -354,1 +354,1 @@\n-  static bool   uncommit_memory(char* addr, size_t bytes);\n+  static bool   uncommit_memory(char* addr, size_t bytes, bool executable = false);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-    char* base = os::reserve_memory(size, page_sz, mtThreadStack);\n-    bool result = os::commit_memory(base, size, false);\n+    char* base = os::reserve_memory(size, !ExecMem, page_sz, mtThreadStack);\n+    bool result = os::commit_memory(base, size, !ExecMem);\n@@ -172,1 +172,1 @@\n-    char* base = os::reserve_memory(size, page_sz, mtTest);\n+    char* base = os::reserve_memory(size, !ExecMem, page_sz, mtTest);\n@@ -174,1 +174,1 @@\n-    result = os::commit_memory(base, size, false);\n+    result = os::commit_memory(base, size, !ExecMem);\n","filename":"test\/hotspot\/gtest\/runtime\/test_committed_virtualmemory.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}