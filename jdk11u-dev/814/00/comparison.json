{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- *      8216969\n+ *      8190748 8216969\n@@ -345,1 +345,1 @@\n-        String format = \"yyyyMMddHHmmssSSS\";\n+        String format = \"yyyyMMddHHmmssSSSzzzz\";\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/DateFormatTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4833268 6253991 8008577\n+ * @bug 4833268 6253991 8008577 8190748\n@@ -32,0 +32,1 @@\n+import java.time.ZoneId;\n@@ -163,0 +164,5 @@\n+            var defZone = ZoneId.systemDefault();\n+            if (defZone.getRules().getTransition(orig.toInstant().atZone(defZone).toLocalDateTime()) != null) {\n+                System.out.println(\"At the offset transition. Round trip test skipped.\");\n+                return;\n+            }\n@@ -166,1 +172,1 @@\n-                error(\"testRoundTrip: bad date: origianl: '%s', parsed '%s'%n\", orig, parsed);\n+                error(\"testRoundTrip: bad date: original: '%s', parsed '%s'%n\", orig, parsed);\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/NonGregorianFormatTest.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"}]}