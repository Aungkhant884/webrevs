{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.io.UncheckedIOException;\n@@ -175,0 +176,2 @@\n+        } catch (UncheckedIOException e) {\n+            return defaultRetval;\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemController.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.io.UncheckedIOException;\n@@ -48,0 +49,2 @@\n+        } catch (UncheckedIOException e) {\n+            throw e.getCause();\n@@ -71,0 +74,2 @@\n+        } catch (UncheckedIOException e) {\n+            throw e.getCause();\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupUtil.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -129,1 +129,4 @@\n-            if (kmemlimit != 0 && limit != kmemlimit) {\n+            \/\/ Note that the kernel memory limit might get ignored by OCI runtimes\n+            \/\/ This feature is deprecated. Only perform the check if we get an actual\n+            \/\/ limit back.\n+            if (kmemlimit != UNLIMITED && limit != kmemlimit) {\n@@ -131,2 +134,2 @@\n-                        + limit + \"]\" + \", got : [\"\n-                        + kmemlimit + \"]\");\n+                            + limit + \"]\" + \", got : [\"\n+                            + kmemlimit + \"]\");\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/MetricsMemoryTester.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -288,5 +288,7 @@\n-        oldVal = metrics.getMemoryAndSwapFailCount();\n-        newVal = getLongValueFromFile(Controller.MEMORY, \"memory.memsw.failcnt\");\n-        if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {\n-            fail(Controller.MEMORY, \"memory.memsw.failcnt\", oldVal, newVal);\n-        }\n+        \/\/ Skip swap tests if no swap is configured.\n+        if (metrics.getMemoryAndSwapLimit() > metrics.getMemoryLimit()) {\n+            oldVal = metrics.getMemoryAndSwapFailCount();\n+            newVal = getLongValueFromFile(Controller.MEMORY, \"memory.memsw.failcnt\");\n+            if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {\n+                fail(Controller.MEMORY, \"memory.memsw.failcnt\", oldVal, newVal);\n+            }\n@@ -294,6 +296,6 @@\n-        oldVal = metrics.getMemoryAndSwapLimit();\n-        newVal = getLongValueFromFile(Controller.MEMORY, \"memory.memsw.limit_in_bytes\");\n-        newVal = newVal > unlimited_minimum ? -1L : newVal;\n-        if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {\n-            fail(Controller.MEMORY, \"memory.memsw.limit_in_bytes\", oldVal, newVal);\n-        }\n+            oldVal = metrics.getMemoryAndSwapLimit();\n+            newVal = getLongValueFromFile(Controller.MEMORY, \"memory.memsw.limit_in_bytes\");\n+            newVal = newVal > unlimited_minimum ? -1L : newVal;\n+            if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {\n+                fail(Controller.MEMORY, \"memory.memsw.limit_in_bytes\", oldVal, newVal);\n+            }\n@@ -301,5 +303,5 @@\n-        oldVal = metrics.getMemoryAndSwapMaxUsage();\n-        newVal = getLongValueFromFile(Controller.MEMORY, \"memory.memsw.max_usage_in_bytes\");\n-        if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {\n-            fail(Controller.MEMORY, \"memory.memsw.max_usage_in_bytes\", oldVal, newVal);\n-        }\n+            oldVal = metrics.getMemoryAndSwapMaxUsage();\n+            newVal = getLongValueFromFile(Controller.MEMORY, \"memory.memsw.max_usage_in_bytes\");\n+            if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {\n+                fail(Controller.MEMORY, \"memory.memsw.max_usage_in_bytes\", oldVal, newVal);\n+            }\n@@ -307,4 +309,8 @@\n-        oldVal = metrics.getMemoryAndSwapUsage();\n-        newVal = getLongValueFromFile(Controller.MEMORY, \"memory.memsw.usage_in_bytes\");\n-        if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {\n-            fail(Controller.MEMORY, \"memory.memsw.usage_in_bytes\", oldVal, newVal);\n+            if (!CgroupMetricsTester.compareWithErrorMargin(oldVal, newVal)) {\n+                fail(Controller.MEMORY, \"memory.memsw.usage_in_bytes\", oldVal, newVal);\n+                oldVal = metrics.getMemoryAndSwapUsage();\n+                newVal = getLongValueFromFile(Controller.MEMORY, \"memory.memsw.usage_in_bytes\");\n+                if (!compareWithErrorMargin(oldVal, newVal)) {\n+                    fail(SubSystem.MEMORY, \"memory.memsw.usage_in_bytes\", oldVal, newVal);\n+                }\n+            }\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV1.java","additions":26,"deletions":20,"binary":false,"changes":46,"status":"modified"}]}