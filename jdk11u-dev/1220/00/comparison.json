{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Red Hat, Inc. and\/or its affiliates.\n+ * Copyright (c) 2018, 2022, Red Hat, Inc. and\/or its affiliates.\n@@ -40,6 +40,0 @@\n-    static {\n-        System.loadLibrary(\"CriticalNative\");\n-    }\n-\n-    static native boolean isNull(int[] a);\n-\n@@ -49,1 +43,1 @@\n-        if (isNull(arr)) {\n+        if (CriticalNative.isNull(arr)) {\n@@ -53,1 +47,1 @@\n-        if (!isNull(null)) {\n+        if (!CriticalNative.isNull(null)) {\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/jni\/CriticalNativeArgs.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Red Hat, Inc. and\/or its affiliates.\n+ * Copyright (c) 2018, 2022, Red Hat, Inc. and\/or its affiliates.\n@@ -29,2 +29,0 @@\n-import gc.shenandoah.jni.CriticalNative;\n-\n@@ -33,1 +31,3 @@\n- * @library \/test\/lib\n+ * @library \/\n+ *          \/test\/lib\n+ *\n@@ -46,4 +46,0 @@\n-    static {\n-        System.loadLibrary(\"CriticalNative\");\n-    }\n-\n@@ -53,5 +49,0 @@\n-    static native long sum1(long[] a);\n-\n-    \/\/ More than 6 parameters\n-    static native long sum2(long a1, int[] a2, int[] a3, long[] a4, int[] a5);\n-\n@@ -96,1 +87,1 @@\n-        long native_sum = sum1(arr);\n+        long native_sum = CriticalNative.sum1(arr);\n@@ -138,1 +129,1 @@\n-        long native_sum = sum2(a1, a2, a3, a4, a5);\n+        long native_sum = CriticalNative.sum2(a1, a2, a3, a4, a5);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/jni\/CriticalNativeStress.java","additions":6,"deletions":15,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2016, 2022, Red Hat, Inc. All rights reserved.\n@@ -32,0 +32,1 @@\n+ * @library \/\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/gcbasher\/TestGCBasherWithShenandoah.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2017, 2022, Red Hat, Inc. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @library \/\n@@ -46,0 +47,1 @@\n+ * @library \/\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/gclocker\/TestGCLockerWithShenandoah.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,0 +80,1 @@\n+ * @library \/ \/test\/lib\n@@ -97,0 +98,1 @@\n+ * @library \/ \/test\/lib\n@@ -131,0 +133,1 @@\n+ * @library \/ \/test\/lib\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/gcold\/TestGCOldWithShenandoah.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2017, 2022, Red Hat, Inc. All rights reserved.\n@@ -31,0 +31,1 @@\n+ * @library \/\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/systemgc\/TestSystemGCWithShenandoah.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}