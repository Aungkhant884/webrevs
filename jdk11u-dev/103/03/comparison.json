{"files":[{"patch":"@@ -921,3 +921,4 @@\n-            server: \"javare\",\n-            revision: \"4.2\",\n-            build_number: \"b13\",\n+            server: \"jpg\",\n+            product: \"jtreg\",\n+            version: \"5.1\",\n+            build_number: \"b01\",\n@@ -925,1 +926,1 @@\n-            file: \"jtreg_bin-4.2.zip\",\n+            file: \"bundles\/jtreg_bin-5.1.zip\",\n","filename":"make\/conf\/jib-profiles.js","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,25 +127,0 @@\n-\n-    @Override\n-    public void startingTest(TestResult tr) {\n-        \/\/ no-op\n-    }\n-\n-    @Override\n-    public void stoppingTestRun() {\n-        \/\/ no-op\n-    }\n-\n-    @Override\n-    public void finishedTesting() {\n-        \/\/ no-op\n-    }\n-\n-    @Override\n-    public void finishedTestRun(boolean allOK) {\n-        \/\/ no-op\n-    }\n-\n-    @Override\n-    public void error(String msg) {\n-        \/\/ no-op\n-    }\n","filename":"test\/failure_handler\/src\/share\/classes\/jdk\/test\/failurehandler\/jtreg\/GatherDiagnosticInfoObserver.java","additions":1,"deletions":26,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-requiredVersion=4.2 b13\n+requiredVersion=5.1 b1\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219140 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-requiredVersion=4.2 b12\n+requiredVersion=5.1 b1\n","filename":"test\/jaxp\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,2 @@\n-sun\/security\/mscapi java\/util\/stream java\/util\/Arrays\/largeMemory java\/util\/BitSet\/stream javax\/rmi\n+sun\/security\/mscapi java\/util\/stream java\/util\/Arrays\/largeMemory java\/util\/BitSet\/stream javax\/rmi \\\n+sanity\/client\n@@ -58,1 +59,1 @@\n-requiredVersion=4.2 b12\n+requiredVersion=5.1 b1\n","filename":"test\/jdk\/TEST.ROOT","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/com\/sun\/security\/auth\/login\/ConfigFile\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/java\/lang\/ModuleTests\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/java\/lang\/invoke\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/java\/rmi\/registry\/serialFilter\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/java\/security\/Security\/SecurityPropFile\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/javax\/management\/security\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/javax\/security\/auth\/login\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -11,1 +11,1 @@\n-2) Download\/Install JTReg harness, minimum required version is 4.1 b13.    \n+2) Download\/Install JTReg harness.    \n@@ -45,1 +45,1 @@\n-Original SwingSet3 repository is https:\/\/java.net\/projects\/swingset3\n\\ No newline at end of file\n+Original SwingSet3 repository is https:\/\/java.net\/projects\/swingset3\n","filename":"test\/jdk\/sanity\/client\/README","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @key headful screenshots intermittent\n+ * @key headful screenshots\n","filename":"test\/jdk\/sanity\/client\/SwingSet\/src\/ButtonDemoScreenshotTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n- * @key headful\n+ * @key headful screenshots\n","filename":"test\/jdk\/sanity\/client\/SwingSet\/src\/EditorPaneDemoTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-# This file identifies the root of the test-suite hierarchy.\r\n-# It also contains test-suite configuration information.\r\n-\r\n-# The list of keywords supported in the entire test suite.  The\r\n-# \"intermittent\" keyword marks tests known to fail intermittently.\r\n-# The \"randomness\" keyword marks tests using randomness with test\r\n-# cases differing from run to run. (A test using a fixed random seed\r\n-# would not count as \"randomness\" by this definition.) Extra care\r\n-# should be taken to handle test failures of intermittent or\r\n-# randomness tests.\r\n-#\r\n-# A \"headful\" test requires a graphical environment to meaningfully\r\n-# run. Tests that are not headful are \"headless.\" \r\n-\r\n-keys=2d dnd i18n intermittent randomness headful\r\n-\r\n-# Tests that must run in othervm mode\r\n-othervm.dirs=sanity\/client\/SwingSet\r\n-\r\n-# Tests that cannot run concurrently\r\n-exclusiveAccess.dirs=sanity\/client\/SwingSet\r\n-\r\n-# Tests using jtreg 4.1 b13 features\r\n-requiredVersion=4.1 b13\r\n","filename":"test\/jdk\/sanity\/client\/TEST.ROOT.template","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -0,0 +1,22 @@\n+#  Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+#  This code is free software; you can redistribute it and\/or modify it\n+#  under the terms of the GNU General Public License version 2 only, as\n+#  published by the Free Software Foundation.\n+#\n+#  This code is distributed in the hope that it will be useful, but WITHOUT\n+#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+#  version 2 for more details (a copy is included in the LICENSE file that\n+#  accompanied this code).\n+#\n+#  You should have received a copy of the GNU General Public License version\n+#  2 along with this work; if not, write to the Free Software Foundation,\n+#  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+#  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+#  or visit www.oracle.com if you need additional information or have any\n+#  questions.\n+#\n+\n@@ -9,6 +31,0 @@\n-\n-# Tests that cannot run concurrently\n-exclusiveAccess.dirs=SwingSet\n-\n-# Tests require jtreg 4.1 b13 features\n-#requiredVersion=4.1 b13\n","filename":"test\/jdk\/sanity\/client\/TEST.properties","additions":22,"deletions":6,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,2 @@\n+# disabled till JDK-8219408 is fixed\n+allowSmartActionArgs=false\n","filename":"test\/jdk\/sun\/security\/util\/Resources\/TEST.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -18,1 +18,1 @@\n-requiredVersion=4.2 b12\n+requiredVersion=5.1 b1\n","filename":"test\/langtools\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,0 +106,5 @@\n+     * Returns the value of 'test.name' system property\n+     *\/\n+    public static final String TEST_NAME = System.getProperty(\"test.name\", \".\");\n+\n+   \/**\n@@ -739,52 +744,0 @@\n-    \/\/ This method is intended to be called from a jtreg test.\n-    \/\/ It will identify the name of the test by means of stack walking.\n-    \/\/ It can handle both jtreg tests and a testng tests wrapped inside jtreg tests.\n-    \/\/ For jtreg tests the name of the test will be searched by stack-walking\n-    \/\/ until the method main() is found; the class containing that method is the\n-    \/\/ main test class and will be returned as the name of the test.\n-    \/\/ Special handling is used for testng tests.\n-    public static String getTestName() {\n-        String result = null;\n-        \/\/ If we are using testng, then we should be able to load the \"Test\" annotation.\n-        Class testClassAnnotation;\n-\n-        try {\n-            testClassAnnotation = Class.forName(\"org.testng.annotations.Test\");\n-        } catch (ClassNotFoundException e) {\n-            testClassAnnotation = null;\n-        }\n-\n-        StackTraceElement[] elms = (new Throwable()).getStackTrace();\n-        for (StackTraceElement n: elms) {\n-            String className = n.getClassName();\n-\n-            \/\/ If this is a \"main\" method, then use its class name, but only\n-            \/\/ if we are not using testng.\n-            if (testClassAnnotation == null && \"main\".equals(n.getMethodName())) {\n-                result = className;\n-                break;\n-            }\n-\n-            \/\/ If this is a testng test, the test will have no \"main\" method. We can\n-            \/\/ detect a testng test class by looking for the org.testng.annotations.Test\n-            \/\/ annotation. If present, then use the name of this class.\n-            if (testClassAnnotation != null) {\n-                try {\n-                    Class c = Class.forName(className);\n-                    if (c.isAnnotationPresent(testClassAnnotation)) {\n-                        result = className;\n-                        break;\n-                    }\n-                } catch (ClassNotFoundException e) {\n-                    throw new RuntimeException(\"Unexpected exception: \" + e, e);\n-                }\n-            }\n-        }\n-\n-        if (result == null) {\n-            throw new RuntimeException(\"Couldn't find main test class in stack trace\");\n-        }\n-\n-        return result;\n-    }\n-\n","filename":"test\/lib\/jdk\/test\/lib\/Utils.java","additions":5,"deletions":52,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -492,1 +492,1 @@\n-        return makeClassList(getTestName() + \"-\", classes);\n+        return makeClassList(testName + \"-\", classes);\n@@ -522,12 +522,1 @@\n-\n-    \/\/ Optimization for getting a test name.\n-    \/\/ Test name does not change during execution of the test,\n-    \/\/ but getTestName() uses stack walking hence it is expensive.\n-    \/\/ Therefore cache it and reuse it.\n-    private static String testName;\n-    public static String getTestName() {\n-        if (testName == null) {\n-            testName = Utils.getTestName();\n-        }\n-        return testName;\n-    }\n+    private static String testName = Utils.TEST_NAME.replace('\/', '.');\n@@ -542,1 +531,1 @@\n-        defaultArchiveName = getTestName() +\n+        defaultArchiveName = testName +\n@@ -554,1 +543,1 @@\n-        return new File(dir, getTestName() + \"-\" + name);\n+        return new File(dir, testName + \"-\" + name);\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSTestUtils.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-requiredVersion=4.2 b12\n+requiredVersion=5.1 b1\n","filename":"test\/nashorn\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}