{"files":[{"patch":"@@ -14,0 +14,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/PolynomialRoot.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -29,0 +30,1 @@\n+ * @library \/test\/lib\n@@ -36,0 +38,1 @@\n+import jdk.test.lib.Utils;\n@@ -136,1 +139,1 @@\n-        Random r = new Random();\n+        Random r = Utils.getRandomInstance();\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/Test6661247.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -30,0 +31,1 @@\n+ * @library \/test\/lib\n@@ -36,0 +38,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -122,6 +126,7 @@\n-        hold[holdIndex + 0] = (float) (Math.random() * 100);\n-        hold[holdIndex + 1] = (float) (Math.random() * 100);\n-        hold[holdIndex + 2] = (float) (Math.random() * 100);\n-        hold[holdIndex + 3] = (float) (Math.random() * 100);\n-        hold[holdIndex + 4] = (float) (Math.random() * 100);\n-        hold[holdIndex + 5] = (float) (Math.random() * 100);\n+        Random rng = Utils.getRandomInstance();\n+        hold[holdIndex + 0] = (float) (rng.nextDouble() * 100);\n+        hold[holdIndex + 1] = (float) (rng.nextDouble() * 100);\n+        hold[holdIndex + 2] = (float) (rng.nextDouble() * 100);\n+        hold[holdIndex + 3] = (float) (rng.nextDouble() * 100);\n+        hold[holdIndex + 4] = (float) (rng.nextDouble() * 100);\n+        hold[holdIndex + 5] = (float) (rng.nextDouble() * 100);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/Test7047069.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -28,1 +29,1 @@\n- *\n+ * @library \/test\/lib\n@@ -34,0 +35,4 @@\n+import jdk.test.lib.Utils;\n+\n+import java.util.Random;\n+\n@@ -40,0 +45,1 @@\n+    Random rng = Utils.getRandomInstance();\n@@ -46,2 +52,2 @@\n-      int i1 = (int)(Math.random() * 128D * (double)i);\n-      anIntArray1190[i1] = (int)(Math.random() * 256D);\n+      int i1 = (int)(rng.nextDouble() * 128D * (double)i);\n+      anIntArray1190[i1] = (int)(rng.nextDouble() * 256D);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/Test7160610.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/Test7177917.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/codeheapsize\/TestCodeHeapSizeOptions.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/dtrace\/SegmentedCodeCacheDtraceTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import jdk.test.lib.Utils;\n@@ -35,1 +34,0 @@\n-import java.util.Random;\n@@ -40,1 +38,0 @@\n-    public static final Random RNG = Utils.getRandomInstance();\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/Helper.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key stress randomness\n@@ -49,0 +50,1 @@\n+import jdk.test.lib.Utils;\n@@ -52,0 +54,1 @@\n+import java.util.Random;\n@@ -63,0 +66,1 @@\n+    private final Random rng = Utils.getRandomInstance();\n@@ -107,1 +111,1 @@\n-            int sleep = Helper.RNG.nextInt(MAX_SLEEP);\n+            int sleep = rng.nextInt(MAX_SLEEP);\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/OverloadCompileQueueTest.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -52,0 +52,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -59,0 +61,1 @@\n+    private final Random rng = Utils.getRandomInstance();\n@@ -67,1 +70,1 @@\n-        boolean allocate = blobs.isEmpty() || Helper.RNG.nextBoolean();\n+        boolean allocate = blobs.isEmpty() || rng.nextBoolean();\n@@ -69,1 +72,1 @@\n-            int type = Helper.RNG.nextInt(BLOB_TYPES.length);\n+            int type = rng.nextInt(BLOB_TYPES.length);\n@@ -71,1 +74,1 @@\n-                    Helper.RNG.nextInt(MAX_BLOB_SIZE), BLOB_TYPES[type].id);\n+                    rng.nextInt(MAX_BLOB_SIZE), BLOB_TYPES[type].id);\n@@ -76,1 +79,1 @@\n-            int index = Helper.RNG.nextInt(blobs.size());\n+            int index = rng.nextInt(blobs.size());\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/RandomAllocationTest.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -49,0 +49,3 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n+\n@@ -50,0 +53,1 @@\n+    private final Random rng = Utils.getRandomInstance();\n@@ -57,1 +61,1 @@\n-        Helper.WHITE_BOX.deoptimizeFrames(Helper.RNG.nextBoolean());\n+        Helper.WHITE_BOX.deoptimizeFrames(rng.nextBoolean());\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/UnexpectedDeoptimizationTest.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/Test6896617.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/Test7100757.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @comment the test isn't marked w\/ randomness as it uses predefined key b\/c of keySize==128\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/TestAESMain.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -50,0 +51,1 @@\n+import jdk.test.lib.Utils;\n@@ -86,1 +88,1 @@\n-        new Random().nextBytes(inputText);\n+        Utils.getRandomInstance().nextBytes(inputText);\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/TestCipherBlockChainingEncrypt.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commandfile\/CompileOnlyTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commandfile\/ExcludeTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commandfile\/LogTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commandfile\/PrintTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commands\/CompileOnlyTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commands\/ExcludeTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commands\/LogTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commands\/PrintTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/directives\/CompileOnlyTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/directives\/ExcludeTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/directives\/LogTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/directives\/PrintTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/AddAndRemoveTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/AddCompileOnlyTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/AddExcludeTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/AddLogTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/AddPrintAssemblyTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/ClearDirectivesFileStackTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/ClearDirectivesStackTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/PrintDirectivesTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -71,0 +72,1 @@\n+        String nextCommand = nextCommand();\n@@ -72,1 +74,1 @@\n-                .execute(nextCommand()));\n+                .execute(nextCommand));\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/jcmd\/StressAddMultiThreadedTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/matcher\/MethodMatcherTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/mixed\/RandomCommandsTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/mixed\/RandomValidCommandsTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/parser\/DirectiveStressTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-    private static final Random RANDOM = Utils.getRandomInstance();\n@@ -80,0 +79,1 @@\n+        Random random = Utils.getRandomInstance();\n@@ -86,1 +86,1 @@\n-                    RANDOM.nextBoolean());\n+                    random.nextBoolean());\n@@ -92,1 +92,1 @@\n-            file.option(Utils.getRandomElement(options), RANDOM.nextBoolean());\n+            file.option(Utils.getRandomElement(options), random.nextBoolean());\n@@ -96,1 +96,1 @@\n-                .map(s -> (RANDOM.nextBoolean() ? \"+\" : \"-\") + s)\n+                .map(s -> (random.nextBoolean() ? \"+\" : \"-\") + s)\n@@ -106,2 +106,3 @@\n-        int amount = 1 + RANDOM.nextInt(descriptors.size() - 1);\n-        int skipAmount = RANDOM.nextInt(descriptors.size() - amount);\n+        Random random = Utils.getRandomInstance();\n+        int amount = 1 + random.nextInt(descriptors.size() - 1);\n+        int skipAmount = random.nextInt(descriptors.size() - amount);\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/parser\/HugeDirectiveUtil.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/TestSelfArrayCopy.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -30,0 +31,1 @@\n+ * @library \/test\/lib\n@@ -41,0 +43,1 @@\n+ * @key randomness\n@@ -45,0 +48,1 @@\n+ * @library \/test\/lib\n@@ -59,0 +63,1 @@\n+import jdk.test.lib.Utils;\n@@ -99,1 +104,1 @@\n-        Random r = new Random(System.nanoTime());\n+        Random r = Utils.getRandomInstance();\n@@ -117,1 +122,1 @@\n-        Random r = new Random(System.nanoTime());\n+        Random r = Utils.getRandomInstance();\n","filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/UnsafeIntrinsicsTest.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private static final Random RANDOM = new Random();\n+    private static final Random RANDOM = new Random(42);\n","filename":"test\/hotspot\/jtreg\/compiler\/interpreter\/DisableOSRTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n-import java.util.Random;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/base64\/TestBase64.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,1 @@\n-    Random rnd = new Random(0);\n+    Random rnd = new Random(42);\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bigInteger\/MontgomeryMultiplyTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -31,0 +32,1 @@\n+ * @library \/test\/lib\n@@ -50,0 +52,1 @@\n+import jdk.test.lib.Utils;\n@@ -91,6 +94,2 @@\n-      Random rand = new Random();\n-      long seed = System.nanoTime();\n-      Random rand1 = new Random();\n-      long seed1 = System.nanoTime();\n-      rand.setSeed(seed);\n-      rand1.setSeed(seed1);\n+      Random rand = new Random(Utils.getRandomInstance().nextLong());\n+      Random rand1 = new Random(Utils.getRandomInstance().nextLong());\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bigInteger\/TestMulAdd.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -29,0 +30,1 @@\n+ * @library \/test\/lib\n@@ -42,0 +44,1 @@\n+import jdk.test.lib.Utils;\n@@ -83,6 +86,2 @@\n-      Random rand = new Random();\n-      long seed = System.nanoTime();\n-      Random rand1 = new Random();\n-      long seed1 = System.nanoTime();\n-      rand.setSeed(seed);\n-      rand1.setSeed(seed1);\n+      Random rand = new Random(Utils.getRandomInstance().nextLong());\n+      Random rand1 = new Random(Utils.getRandomInstance().nextLong());\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bigInteger\/TestMultiplyToLen.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n@@ -28,0 +29,1 @@\n+ * @library \/test\/lib\n@@ -45,0 +47,1 @@\n+import jdk.test.lib.Utils;\n@@ -86,6 +89,2 @@\n-      Random rand = new Random();\n-      long seed = System.nanoTime();\n-      Random rand1 = new Random();\n-      long seed1 = System.nanoTime();\n-      rand.setSeed(seed);\n-      rand1.setSeed(seed1);\n+      Random rand = new Random(Utils.getRandomInstance().nextLong());\n+      Random rand1 = new Random(Utils.getRandomInstance().nextLong());\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bigInteger\/TestSquareToLen.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,3 +62,0 @@\n-     *   <li>-seed=&lt;SEED&gt; arguments for <b>expr<\/b>'s methods\n-     *       obtained via RNG initiated with seed <i>SEED<\/i>. By default\n-     *       some random seed will be used.<\/li>\n@@ -78,1 +75,3 @@\n-        int seed = Utils.getRandomInstance().nextInt();\n+        \/\/ ensure seed got printed out\n+        Utils.getRandomInstance();\n+        long seed = Utils.SEED;\n@@ -85,2 +84,0 @@\n-            } else if (testOption.startsWith(\"-seed=\")) {\n-                seed = Integer.valueOf(testOption.replace(\"-seed=\", \"\"));\n@@ -122,1 +119,1 @@\n-                                         int seed, int iterations)\n+                                         long seed, int iterations)\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/BMITestRunner.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestAndnI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestAndnL.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsiI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsiL.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsmskI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsmskL.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsrI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBlsrL.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestLzcntI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestLzcntL.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestTzcntI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestTzcntL.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ * @library \/test\/lib\n@@ -30,0 +31,1 @@\n+ * @comment the test isn't marked by 'randomness' b\/c randomSearchTree case isn't used\n@@ -55,0 +57,1 @@\n+import jdk.test.lib.Utils;\n@@ -201,1 +204,1 @@\n-    private static Random r = new Random();\n+    private static Random r = Utils.getRandomInstance();\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/math\/TestFpMinMaxIntrinsics.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/AddExactILoadTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/AddExactILoopDependentTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/AddExactINonConstantTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/AddExactIRepeatTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/AddExactLNonConstantTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/MulExactILoadTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/MulExactILoopDependentTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/MulExactINonConstantTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/MulExactIRepeatTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/MulExactLNonConstantTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/NegExactILoadTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/NegExactILoopDependentTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/NegExactINonConstantTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/NegExactLNonConstantTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/SubExactILoadTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/SubExactILoopDependentTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/SubExactINonConstantTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/SubExactIRepeatTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/mathexact\/SubExactLNonConstantTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-UseUnalignedAccesses -Djdk.test.lib.random.seed=0 DirectByteBufferTest\n- * @run main\/othervm -Djdk.test.lib.random.seed=0 DirectByteBufferTest\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-UseUnalignedAccesses -Djdk.test.lib.random.seed=42 DirectByteBufferTest\n+ * @run main\/othervm -Djdk.test.lib.random.seed=42 DirectByteBufferTest\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/unsafe\/DirectByteBufferTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-UseUnalignedAccesses -Djdk.test.lib.random.seed=0\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-UseUnalignedAccesses -Djdk.test.lib.random.seed=42\n@@ -34,1 +34,1 @@\n- * @run main\/othervm -Djdk.test.lib.random.seed=0\n+ * @run main\/othervm -Djdk.test.lib.random.seed=42\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/unsafe\/HeapByteBufferTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/ConcurrentClassLoadingTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/AllocateCompileIdTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/HasCompiledCodeForOSRTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/types\/correctness\/OffTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/UnsafeRaw.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    static final Random random = new Random();\n+    static final Random random = new Random(42);\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/UnsafeSmallOffsetBooleanAccessTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    private static final Random RANDOM = new Random();\n+    private static final Random RANDOM = new Random(42);\n","filename":"test\/hotspot\/jtreg\/compiler\/whitebox\/BlockingCompilation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}