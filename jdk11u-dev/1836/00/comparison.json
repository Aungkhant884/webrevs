{"files":[{"patch":"@@ -621,2 +621,4 @@\n-        if (metadata.compression == BI_RGB) {\n-            long imageDataSize = ((long)width * height * (bitsPerPixel \/ 8));\n+        if (metadata.compression == BI_RGB &&\n+            metadata.paletteSize == 0 &&\n+            metadata.bitsPerPixel >= 16) {\n+            long imageDataSize = (((long)width * height * bitsPerPixel) \/ 8);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/bmp\/BMPImageReader.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8302151\n+ * @summary Tests that we should not try to calculate bitmap image\n+            size using bitmap file size when we have a color palette\n+ *\/\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.EOFException;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+\n+public class BMP1bppImageWithPaletteTest {\n+\n+    public static void main(String[] args) throws IOException {\n+        \/\/ incomplete 1bpp BMP byte stream with color palette and\n+        \/\/ invalid file size data\n+        byte[] corruptedBmp = { (byte) 0x42, (byte) 0x4d, (byte) 0x0e,\n+            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,\n+            (byte) 0x00, (byte) 0x00, (byte) 0x3e, (byte) 0x00, (byte) 0x00,\n+            (byte) 0x00, (byte) 0x28, (byte) 0x00, (byte) 0x00, (byte) 0x00,\n+            (byte) 0xa2, (byte) 0x06, (byte) 0x00, (byte) 0x00, (byte) 0xb4,\n+            (byte) 0x08, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00,\n+            (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,\n+            (byte) 0x00, (byte) 0xe0, (byte) 0x57, (byte) 0x07, (byte) 0x00,\n+            (byte) 0xc2, (byte) 0x1e, (byte) 0x00, (byte) 0x00, (byte) 0xc2,\n+            (byte) 0x1e, (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00,\n+            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,\n+            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff\n+        };\n+\n+        \/\/ We expect EOFException to be thrown\n+        try {\n+            ImageIO.read(new ByteArrayInputStream(corruptedBmp));\n+        } catch(Exception ex) {\n+            if (!(ex instanceof EOFException))\n+                throw ex;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/imageio\/plugins\/bmp\/BMP1bppImageWithPaletteTest.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"}]}