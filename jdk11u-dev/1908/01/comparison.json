{"files":[{"patch":"@@ -111,1 +111,2 @@\n-     * Algorithm identifiers and corresponding OIDs for the contents of the PKCS12 bag we get from the Keychain.\n+     * Algorithm identifiers and corresponding OIDs for the contents of the\n+     * PKCS12 bag we get from the Keychain.\n@@ -113,4 +114,4 @@\n-    private static final int keyBag[]  = {1, 2, 840, 113549, 1, 12, 10, 1, 2};\n-    private static final int pbeWithSHAAnd3KeyTripleDESCBC[] =     {1, 2, 840, 113549, 1, 12, 1, 3};\n-    private static ObjectIdentifier PKCS8ShroudedKeyBag_OID;\n-    private static ObjectIdentifier pbeWithSHAAnd3KeyTripleDESCBC_OID;\n+    private static ObjectIdentifier PKCS8ShroudedKeyBag_OID =\n+            ObjectIdentifier.of(KnownOIDs.PKCS8ShroudedKeyBag);\n+    private static ObjectIdentifier pbeWithSHAAnd3KeyTripleDESCBC_OID =\n+            ObjectIdentifier.of(KnownOIDs.PBEWithSHA1AndDESede);\n@@ -134,6 +135,0 @@\n-        try {\n-            PKCS8ShroudedKeyBag_OID = new ObjectIdentifier(keyBag);\n-            pbeWithSHAAnd3KeyTripleDESCBC_OID = new ObjectIdentifier(pbeWithSHAAnd3KeyTripleDESCBC);\n-        } catch (IOException ioe) {\n-            \/\/ should not happen\n-        }\n","filename":"src\/java.base\/macosx\/classes\/apple\/security\/KeychainStore.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,0 @@\n-    private int DH_data[] = { 1, 2, 840, 113549, 1, 3, 1 };\n-\n@@ -222,1 +220,1 @@\n-                algid.putOID(new ObjectIdentifier(DH_data));\n+                algid.putOID(DHPublicKey.DH_OID);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPrivateKey.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,3 @@\n-    private int DH_data[] = { 1, 2, 840, 113549, 1, 3, 1 };\n+    \/\/ Note: this OID is used by DHPrivateKey as well.\n+    static ObjectIdentifier DH_OID =\n+            ObjectIdentifier.of(KnownOIDs.DiffieHellman);\n@@ -205,1 +207,1 @@\n-                algid.putOID(new ObjectIdentifier(DH_data));\n+                algid.putOID(DH_OID);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPublicKey.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -70,8 +71,0 @@\n-    \/\/ defined by SunSoft (SKI project)\n-    private static final String PBE_WITH_MD5_AND_DES3_CBC_OID\n-            = \"1.3.6.1.4.1.42.2.19.1\";\n-\n-    \/\/ JavaSoft proprietary key-protection algorithm (used to protect private\n-    \/\/ keys in the keystore implementation that comes with JDK 1.2)\n-    private static final String KEY_PROTECTOR_OID = \"1.3.6.1.4.1.42.2.17.1.1\";\n-\n@@ -157,1 +150,2 @@\n-            (new ObjectIdentifier(PBE_WITH_MD5_AND_DES3_CBC_OID), pbeParams);\n+            (ObjectIdentifier.of(KnownOIDs.JAVASOFT_JCEKeyProtector),\n+             pbeParams);\n@@ -172,2 +166,2 @@\n-            if (!encrAlg.equals(PBE_WITH_MD5_AND_DES3_CBC_OID)\n-                && !encrAlg.equals(KEY_PROTECTOR_OID)) {\n+            if (!encrAlg.equals(KnownOIDs.JAVASOFT_JCEKeyProtector.value())\n+                && !encrAlg.equals(KnownOIDs.JAVASOFT_JDKKeyProtector.value())) {\n@@ -178,1 +172,1 @@\n-            if (encrAlg.equals(KEY_PROTECTOR_OID)) {\n+            if (encrAlg.equals(KnownOIDs.JAVASOFT_JDKKeyProtector.value())) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/KeyProtector.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -58,18 +58,4 @@\n-    private static ObjectIdentifier OID_MGF1;\n-    private static ObjectIdentifier OID_PSpecified;\n-\n-    static {\n-        try {\n-            OID_MGF1 = new ObjectIdentifier(new int[] {1,2,840,113549,1,1,8});\n-        } catch (IOException ioe) {\n-            \/\/ should not happen\n-            OID_MGF1 = null;\n-        }\n-        try {\n-            OID_PSpecified =\n-                new ObjectIdentifier(new int[] {1,2,840,113549,1,1,9});\n-        } catch (IOException ioe) {\n-            \/\/ should not happen\n-            OID_PSpecified = null;\n-        }\n-    }\n+    private static ObjectIdentifier OID_MGF1 =\n+            ObjectIdentifier.of(KnownOIDs.MGF1);\n+    private static ObjectIdentifier OID_PSpecified =\n+            ObjectIdentifier.of(KnownOIDs.PSpecified);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/OAEPParameters.java","additions":4,"deletions":18,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,0 @@\n-\n@@ -96,48 +95,10 @@\n-    private static final int pkcs5PBKDF2[] =\n-                                        {1, 2, 840, 113549, 1, 5, 12};\n-    private static final int pkcs5PBES2[] =\n-                                        {1, 2, 840, 113549, 1, 5, 13};\n-    private static final int hmacWithSHA1[] =\n-                                        {1, 2, 840, 113549, 2, 7};\n-    private static final int hmacWithSHA224[] =\n-                                        {1, 2, 840, 113549, 2, 8};\n-    private static final int hmacWithSHA256[] =\n-                                        {1, 2, 840, 113549, 2, 9};\n-    private static final int hmacWithSHA384[] =\n-                                        {1, 2, 840, 113549, 2, 10};\n-    private static final int hmacWithSHA512[] =\n-                                        {1, 2, 840, 113549, 2, 11};\n-    private static final int aes128CBC[] =\n-                                        {2, 16, 840, 1, 101, 3, 4, 1, 2};\n-    private static final int aes192CBC[] =\n-                                        {2, 16, 840, 1, 101, 3, 4, 1, 22};\n-    private static final int aes256CBC[] =\n-                                        {2, 16, 840, 1, 101, 3, 4, 1, 42};\n-\n-    private static ObjectIdentifier pkcs5PBKDF2_OID;\n-    private static ObjectIdentifier pkcs5PBES2_OID;\n-    private static ObjectIdentifier hmacWithSHA1_OID;\n-    private static ObjectIdentifier hmacWithSHA224_OID;\n-    private static ObjectIdentifier hmacWithSHA256_OID;\n-    private static ObjectIdentifier hmacWithSHA384_OID;\n-    private static ObjectIdentifier hmacWithSHA512_OID;\n-    private static ObjectIdentifier aes128CBC_OID;\n-    private static ObjectIdentifier aes192CBC_OID;\n-    private static ObjectIdentifier aes256CBC_OID;\n-\n-    static {\n-        try {\n-            pkcs5PBKDF2_OID = new ObjectIdentifier(pkcs5PBKDF2);\n-            pkcs5PBES2_OID = new ObjectIdentifier(pkcs5PBES2);\n-            hmacWithSHA1_OID = new ObjectIdentifier(hmacWithSHA1);\n-            hmacWithSHA224_OID = new ObjectIdentifier(hmacWithSHA224);\n-            hmacWithSHA256_OID = new ObjectIdentifier(hmacWithSHA256);\n-            hmacWithSHA384_OID = new ObjectIdentifier(hmacWithSHA384);\n-            hmacWithSHA512_OID = new ObjectIdentifier(hmacWithSHA512);\n-            aes128CBC_OID = new ObjectIdentifier(aes128CBC);\n-            aes192CBC_OID = new ObjectIdentifier(aes192CBC);\n-            aes256CBC_OID = new ObjectIdentifier(aes256CBC);\n-        } catch (IOException ioe) {\n-            \/\/ should not happen\n-        }\n-    }\n+    private static ObjectIdentifier pkcs5PBKDF2_OID =\n+            ObjectIdentifier.of(KnownOIDs.PBKDF2WithHmacSHA1);\n+    private static ObjectIdentifier pkcs5PBES2_OID =\n+            ObjectIdentifier.of(KnownOIDs.PBES2);\n+    private static ObjectIdentifier aes128CBC_OID =\n+            ObjectIdentifier.of(KnownOIDs.AES_128$CBC$NoPadding);\n+    private static ObjectIdentifier aes192CBC_OID =\n+            ObjectIdentifier.of(KnownOIDs.AES_192$CBC$NoPadding);\n+    private static ObjectIdentifier aes256CBC_OID =\n+            ObjectIdentifier.of(KnownOIDs.AES_256$CBC$NoPadding);\n@@ -158,1 +119,2 @@\n-    private ObjectIdentifier kdfAlgo_OID = hmacWithSHA1_OID;\n+    private ObjectIdentifier kdfAlgo_OID =\n+            ObjectIdentifier.of(KnownOIDs.HmacSHA1);\n@@ -203,2 +165,0 @@\n-            kdfAlgo_OID = hmacWithSHA1_OID;\n-            break;\n@@ -206,2 +166,0 @@\n-            kdfAlgo_OID = hmacWithSHA224_OID;\n-            break;\n@@ -209,2 +167,0 @@\n-            kdfAlgo_OID = hmacWithSHA256_OID;\n-            break;\n@@ -212,2 +168,0 @@\n-            kdfAlgo_OID = hmacWithSHA384_OID;\n-            break;\n@@ -215,1 +169,1 @@\n-            kdfAlgo_OID = hmacWithSHA512_OID;\n+            kdfAlgo_OID = ObjectIdentifier.of(KnownOIDs.findMatch(kdfAlgo));\n@@ -287,1 +241,1 @@\n-        pbes2AlgorithmName = new StringBuilder().append(\"PBEWith\")\n+        this.pbes2AlgorithmName = new StringBuilder().append(\"PBEWith\")\n@@ -338,11 +292,6 @@\n-            if (hmacWithSHA1_OID.equals(kdfAlgo_OID)) {\n-                kdfAlgo = \"HmacSHA1\";\n-            } else if (hmacWithSHA224_OID.equals(kdfAlgo_OID)) {\n-                kdfAlgo = \"HmacSHA224\";\n-            } else if (hmacWithSHA256_OID.equals(kdfAlgo_OID)) {\n-                kdfAlgo = \"HmacSHA256\";\n-            } else if (hmacWithSHA384_OID.equals(kdfAlgo_OID)) {\n-                kdfAlgo = \"HmacSHA384\";\n-            } else if (hmacWithSHA512_OID.equals(kdfAlgo_OID)) {\n-                kdfAlgo = \"HmacSHA512\";\n-            } else {\n+            KnownOIDs o = KnownOIDs.findMatch(kdfAlgo_OID.toString());\n+            if (o == null || (!o.stdName().equals(\"HmacSHA1\") &&\n+                !o.stdName().equals(\"HmacSHA224\") &&\n+                !o.stdName().equals(\"HmacSHA256\") &&\n+                !o.stdName().equals(\"HmacSHA384\") &&\n+                !o.stdName().equals(\"HmacSHA512\"))) {\n@@ -353,0 +302,2 @@\n+            kdfAlgo = o.stdName();\n+\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBES2Parameters.java","additions":23,"deletions":72,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -35,2 +35,1 @@\n-import static sun.security.provider.SunEntries.createAliases;\n-import static sun.security.provider.SunEntries.createAliasesWithOid;\n+import static sun.security.util.SecurityProviderConstants.*;\n@@ -102,3 +101,16 @@\n-    private void ps(String type, String algo, String cn,\n-            List<String> aliases, HashMap<String, String> attrs) {\n-        putService(new Provider.Service(this, type, algo, cn, aliases, attrs));\n+    \/\/ ps: putService\n+    private void ps(String type, String algo, String cn) {\n+        putService(new Provider.Service(this, type, algo, cn, null, null));\n+    }\n+\n+    private void ps(String type, String algo, String cn, List<String> als,\n+            HashMap<String, String> attrs) {\n+        putService(new Provider.Service(this, type, algo, cn, als,\n+                   attrs));\n+    }\n+\n+    \/\/ psA: putService with default aliases\n+    private void psA(String type, String algo, String cn,\n+            HashMap<String, String> attrs) {\n+        putService(new Provider.Service(this, type, algo, cn, getAliases(algo),\n+                   attrs));\n@@ -130,51 +142,0 @@\n-        \/\/ common aliases and oids\n-        List<String> aesAliases = createAliases(\"Rijndael\");\n-        List<String> desEdeAliases = createAliases(\"TripleDES\");\n-        List<String> arcFourAliases = createAliases(\"RC4\");\n-        List<String> sunTlsMSAliases = createAliases(\n-            \"SunTls12MasterSecret\", \"SunTlsExtendedMasterSecret\"\n-        );\n-        List<String> sunTlsKMAliases = createAliases(\"SunTls12KeyMaterial\");\n-        List<String> sunTlsRsaPMSAliases = createAliases(\"SunTls12RsaPremasterSecret\");\n-\n-        String aes128Oid = \"2.16.840.1.101.3.4.1.\";\n-        String aes192Oid = \"2.16.840.1.101.3.4.1.2\";\n-        String aes256Oid = \"2.16.840.1.101.3.4.1.4\";\n-\n-        List<String> pkcs12RC4_128Aliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.12.1.1\");\n-\n-        List<String> pkcs12RC4_40Aliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.12.1.2\");\n-\n-        List<String> pkcs12DESedeAliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.12.1.3\");\n-\n-        List<String> pkcs12RC2_128Aliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.12.1.5\");\n-\n-        List<String> pkcs12RC2_40Aliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.12.1.6\");\n-\n-        List<String> pkcs5MD5_DESAliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.5.3\", \"PBE\");\n-\n-        List<String> pkcs5PBKDF2Aliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.5.12\");\n-\n-        List<String> pkcs5PBES2Aliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.5.13\");\n-\n-        List<String> diffieHellmanAliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.3.1\", \"DH\");\n-\n-        List<String> chachaPolyAliases =\n-            createAliasesWithOid(\"1.2.840.113549.1.9.16.3.18\");\n-\n-        String macOidBase = \"1.2.840.113549.2.\";\n-        List<String> macSHA1Aliases = createAliasesWithOid(macOidBase + \"7\");\n-        List<String> macSHA224Aliases = createAliasesWithOid(macOidBase + \"8\");\n-        List<String> macSHA256Aliases = createAliasesWithOid(macOidBase + \"9\");\n-        List<String> macSHA384Aliases = createAliasesWithOid(macOidBase + \"10\");\n-        List<String> macSHA512Aliases = createAliasesWithOid(macOidBase + \"11\");\n-\n@@ -215,2 +176,2 @@\n-        ps(\"Cipher\", \"DESede\", \"com.sun.crypto.provider.DESedeCipher\",\n-                desEdeAliases, attrs);\n+        psA(\"Cipher\", \"DESede\", \"com.sun.crypto.provider.DESedeCipher\",\n+                attrs);\n@@ -227,2 +188,2 @@\n-        ps(\"Cipher\", \"AES\", \"com.sun.crypto.provider.AESCipher$General\",\n-                aesAliases, attrs);\n+        psA(\"Cipher\", \"AES\",\n+                \"com.sun.crypto.provider.AESCipher$General\", attrs);\n@@ -232,1 +193,1 @@\n-        ps(\"Cipher\", \"AES_128\/ECB\/NoPadding\",\n+        psA(\"Cipher\", \"AES_128\/ECB\/NoPadding\",\n@@ -234,2 +195,2 @@\n-                createAliasesWithOid(aes128Oid+\"1\"), attrs);\n-        ps(\"Cipher\", \"AES_128\/CBC\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_128\/CBC\/NoPadding\",\n@@ -237,2 +198,2 @@\n-                createAliasesWithOid(aes128Oid+\"2\"), attrs);\n-        ps(\"Cipher\", \"AES_128\/OFB\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_128\/OFB\/NoPadding\",\n@@ -240,2 +201,2 @@\n-                createAliasesWithOid(aes128Oid+\"3\"), attrs);\n-        ps(\"Cipher\", \"AES_128\/CFB\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_128\/CFB\/NoPadding\",\n@@ -243,2 +204,2 @@\n-                createAliasesWithOid(aes128Oid+\"4\"), attrs);\n-        ps(\"Cipher\", \"AES_128\/GCM\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_128\/GCM\/NoPadding\",\n@@ -246,1 +207,1 @@\n-                createAliasesWithOid(aes128Oid+\"6\"), attrs);\n+                attrs);\n@@ -248,1 +209,1 @@\n-        ps(\"Cipher\", \"AES_192\/ECB\/NoPadding\",\n+        psA(\"Cipher\", \"AES_192\/ECB\/NoPadding\",\n@@ -250,2 +211,2 @@\n-                createAliasesWithOid(aes192Oid+\"1\"), attrs);\n-        ps(\"Cipher\", \"AES_192\/CBC\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_192\/CBC\/NoPadding\",\n@@ -253,2 +214,2 @@\n-                createAliasesWithOid(aes192Oid+\"2\"), attrs);\n-        ps(\"Cipher\", \"AES_192\/OFB\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_192\/OFB\/NoPadding\",\n@@ -256,2 +217,2 @@\n-                createAliasesWithOid(aes192Oid+\"3\"), attrs);\n-        ps(\"Cipher\", \"AES_192\/CFB\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_192\/CFB\/NoPadding\",\n@@ -259,2 +220,2 @@\n-                createAliasesWithOid(aes192Oid+\"4\"), attrs);\n-        ps(\"Cipher\", \"AES_192\/GCM\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_192\/GCM\/NoPadding\",\n@@ -262,1 +223,1 @@\n-                createAliasesWithOid(aes192Oid+\"6\"), attrs);\n+                attrs);\n@@ -264,1 +225,1 @@\n-        ps(\"Cipher\", \"AES_256\/ECB\/NoPadding\",\n+        psA(\"Cipher\", \"AES_256\/ECB\/NoPadding\",\n@@ -266,2 +227,2 @@\n-                createAliasesWithOid(aes256Oid+\"1\"), attrs);\n-        ps(\"Cipher\", \"AES_256\/CBC\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_256\/CBC\/NoPadding\",\n@@ -269,2 +230,2 @@\n-                createAliasesWithOid(aes256Oid+\"2\"), attrs);\n-        ps(\"Cipher\", \"AES_256\/OFB\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_256\/OFB\/NoPadding\",\n@@ -272,2 +233,2 @@\n-                createAliasesWithOid(aes256Oid+\"3\"), attrs);\n-        ps(\"Cipher\", \"AES_256\/CFB\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_256\/CFB\/NoPadding\",\n@@ -275,2 +236,2 @@\n-                createAliasesWithOid(aes256Oid+\"4\"), attrs);\n-        ps(\"Cipher\", \"AES_256\/GCM\/NoPadding\",\n+                attrs);\n+        psA(\"Cipher\", \"AES_256\/GCM\/NoPadding\",\n@@ -278,1 +239,1 @@\n-                createAliasesWithOid(aes256Oid+\"6\"), attrs);\n+                attrs);\n@@ -291,2 +252,2 @@\n-        ps(\"Cipher\", \"ARCFOUR\", \"com.sun.crypto.provider.ARCFOURCipher\",\n-                arcFourAliases, attrs);\n+        psA(\"Cipher\", \"ARCFOUR\",\n+                \"com.sun.crypto.provider.ARCFOURCipher\", attrs);\n@@ -295,1 +256,1 @@\n-        ps(\"Cipher\", \"AESWrap_128\",\n+        psA(\"Cipher\", \"AESWrap_128\",\n@@ -297,2 +258,2 @@\n-                createAliasesWithOid(aes128Oid+\"5\"), attrs);\n-        ps(\"Cipher\", \"AESWrap_192\",\n+                attrs);\n+        psA(\"Cipher\", \"AESWrap_192\",\n@@ -300,2 +261,2 @@\n-                createAliasesWithOid(aes192Oid+\"5\"), attrs);\n-        ps(\"Cipher\", \"AESWrap_256\",\n+                attrs);\n+        psA(\"Cipher\", \"AESWrap_256\",\n@@ -303,1 +264,1 @@\n-                createAliasesWithOid(aes256Oid+\"5\"), attrs);\n+                attrs);\n@@ -310,1 +271,1 @@\n-        ps(\"Cipher\",  \"ChaCha20-Poly1305\",\n+        psA(\"Cipher\",  \"ChaCha20-Poly1305\",\n@@ -312,1 +273,1 @@\n-                chachaPolyAliases, attrs);\n+                attrs);\n@@ -315,1 +276,1 @@\n-        ps(\"Cipher\", \"PBEWithMD5AndDES\",\n+        psA(\"Cipher\", \"PBEWithMD5AndDES\",\n@@ -317,1 +278,1 @@\n-                pkcs5MD5_DESAliases, null);\n+                null);\n@@ -319,3 +280,2 @@\n-                \"com.sun.crypto.provider.PBEWithMD5AndTripleDESCipher\",\n-                null, null);\n-        ps(\"Cipher\", \"PBEWithSHA1AndDESede\",\n+                \"com.sun.crypto.provider.PBEWithMD5AndTripleDESCipher\");\n+        psA(\"Cipher\", \"PBEWithSHA1AndDESede\",\n@@ -323,2 +283,2 @@\n-                pkcs12DESedeAliases, null);\n-        ps(\"Cipher\", \"PBEWithSHA1AndRC2_40\",\n+                null);\n+        psA(\"Cipher\", \"PBEWithSHA1AndRC2_40\",\n@@ -326,2 +286,2 @@\n-                pkcs12RC2_40Aliases, null);\n-        ps(\"Cipher\", \"PBEWithSHA1AndRC2_128\",\n+                null);\n+        psA(\"Cipher\", \"PBEWithSHA1AndRC2_128\",\n@@ -329,2 +289,2 @@\n-                pkcs12RC2_128Aliases, null);\n-        ps(\"Cipher\", \"PBEWithSHA1AndRC4_40\",\n+                null);\n+        psA(\"Cipher\", \"PBEWithSHA1AndRC4_40\",\n@@ -332,1 +292,1 @@\n-                pkcs12RC4_40Aliases, null);\n+                null);\n@@ -334,1 +294,1 @@\n-        ps(\"Cipher\", \"PBEWithSHA1AndRC4_128\",\n+        psA(\"Cipher\", \"PBEWithSHA1AndRC4_128\",\n@@ -336,1 +296,1 @@\n-                pkcs12RC4_128Aliases, null);\n+                null);\n@@ -340,2 +300,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA1AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA1AndAES_128\");\n@@ -344,2 +303,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA224AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA224AndAES_128\");\n@@ -348,2 +306,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_128\");\n@@ -352,2 +309,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA384AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA384AndAES_128\");\n@@ -356,2 +312,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA512AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA512AndAES_128\");\n@@ -360,2 +315,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA1AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA1AndAES_256\");\n@@ -364,2 +318,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA224AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA224AndAES_256\");\n@@ -368,2 +321,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_256\");\n@@ -372,2 +324,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA384AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA384AndAES_256\");\n@@ -376,2 +327,1 @@\n-                \"com.sun.crypto.provider.PBES2Core$HmacSHA512AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Core$HmacSHA512AndAES_256\");\n@@ -383,3 +333,2 @@\n-                \"com.sun.crypto.provider.DESKeyGenerator\",\n-                null, null);\n-        ps(\"KeyGenerator\", \"DESede\",\n+                \"com.sun.crypto.provider.DESKeyGenerator\");\n+        psA(\"KeyGenerator\", \"DESede\",\n@@ -387,1 +336,1 @@\n-                desEdeAliases, null);\n+                null);\n@@ -389,3 +338,2 @@\n-                \"com.sun.crypto.provider.BlowfishKeyGenerator\",\n-                null, null);\n-        ps(\"KeyGenerator\", \"AES\",\n+                \"com.sun.crypto.provider.BlowfishKeyGenerator\");\n+        psA(\"KeyGenerator\", \"AES\",\n@@ -393,1 +341,1 @@\n-                aesAliases, null);\n+                null);\n@@ -395,3 +343,2 @@\n-                \"com.sun.crypto.provider.KeyGeneratorCore$RC2KeyGenerator\",\n-                null, null);\n-        ps(\"KeyGenerator\", \"ARCFOUR\",\n+                \"com.sun.crypto.provider.KeyGeneratorCore$RC2KeyGenerator\");\n+        psA(\"KeyGenerator\", \"ARCFOUR\",\n@@ -399,1 +346,1 @@\n-                arcFourAliases, null);\n+                null);\n@@ -401,2 +348,1 @@\n-                \"com.sun.crypto.provider.KeyGeneratorCore$ChaCha20KeyGenerator\",\n-                null, null);\n+                \"com.sun.crypto.provider.KeyGeneratorCore$ChaCha20KeyGenerator\");\n@@ -404,2 +350,1 @@\n-                \"com.sun.crypto.provider.HmacMD5KeyGenerator\",\n-                null, null);\n+                \"com.sun.crypto.provider.HmacMD5KeyGenerator\");\n@@ -407,4 +352,3 @@\n-        ps(\"KeyGenerator\", \"HmacSHA1\",\n-                \"com.sun.crypto.provider.HmacSHA1KeyGenerator\",\n-                macSHA1Aliases, null);\n-        ps(\"KeyGenerator\", \"HmacSHA224\",\n+        psA(\"KeyGenerator\", \"HmacSHA1\",\n+                \"com.sun.crypto.provider.HmacSHA1KeyGenerator\", null);\n+        psA(\"KeyGenerator\", \"HmacSHA224\",\n@@ -412,2 +356,2 @@\n-                macSHA224Aliases, null);\n-        ps(\"KeyGenerator\", \"HmacSHA256\",\n+                null);\n+        psA(\"KeyGenerator\", \"HmacSHA256\",\n@@ -415,2 +359,2 @@\n-                macSHA256Aliases, null);\n-        ps(\"KeyGenerator\", \"HmacSHA384\",\n+                null);\n+        psA(\"KeyGenerator\", \"HmacSHA384\",\n@@ -418,2 +362,2 @@\n-                macSHA384Aliases, null);\n-        ps(\"KeyGenerator\", \"HmacSHA512\",\n+                null);\n+        psA(\"KeyGenerator\", \"HmacSHA512\",\n@@ -421,1 +365,1 @@\n-                macSHA512Aliases, null);\n+                null);\n@@ -423,1 +367,1 @@\n-        ps(\"KeyPairGenerator\", \"DiffieHellman\",\n+        psA(\"KeyPairGenerator\", \"DiffieHellman\",\n@@ -425,1 +369,1 @@\n-                diffieHellmanAliases, null);\n+                null);\n@@ -430,1 +374,1 @@\n-        ps(\"AlgorithmParameterGenerator\",\n+        psA(\"AlgorithmParameterGenerator\",\n@@ -432,1 +376,1 @@\n-                diffieHellmanAliases, null);\n+                null);\n@@ -440,1 +384,1 @@\n-        ps(\"KeyAgreement\", \"DiffieHellman\",\n+        psA(\"KeyAgreement\", \"DiffieHellman\",\n@@ -442,1 +386,1 @@\n-                diffieHellmanAliases, attrs);\n+                attrs);\n@@ -447,3 +391,2 @@\n-        ps(\"AlgorithmParameters\", \"DiffieHellman\",\n-                \"com.sun.crypto.provider.DHParameters\",\n-                diffieHellmanAliases, null);\n+        psA(\"AlgorithmParameters\", \"DiffieHellman\",\n+                \"com.sun.crypto.provider.DHParameters\", null);\n@@ -452,2 +395,1 @@\n-                \"com.sun.crypto.provider.DESParameters\",\n-                null, null);\n+                \"com.sun.crypto.provider.DESParameters\");\n@@ -455,3 +397,2 @@\n-        ps(\"AlgorithmParameters\", \"DESede\",\n-                \"com.sun.crypto.provider.DESedeParameters\",\n-                desEdeAliases, null);\n+        psA(\"AlgorithmParameters\", \"DESede\",\n+                \"com.sun.crypto.provider.DESedeParameters\", null);\n@@ -459,1 +400,1 @@\n-        ps(\"AlgorithmParameters\", \"PBEWithMD5AndDES\",\n+        psA(\"AlgorithmParameters\", \"PBEWithMD5AndDES\",\n@@ -461,1 +402,1 @@\n-                pkcs5MD5_DESAliases, null);\n+                null);\n@@ -464,2 +405,1 @@\n-                \"com.sun.crypto.provider.PBEParameters\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEParameters\");\n@@ -467,1 +407,1 @@\n-        ps(\"AlgorithmParameters\", \"PBEWithSHA1AndDESede\",\n+        psA(\"AlgorithmParameters\", \"PBEWithSHA1AndDESede\",\n@@ -469,1 +409,1 @@\n-                pkcs12DESedeAliases, null);\n+                null);\n@@ -471,1 +411,1 @@\n-        ps(\"AlgorithmParameters\", \"PBEWithSHA1AndRC2_40\",\n+        psA(\"AlgorithmParameters\", \"PBEWithSHA1AndRC2_40\",\n@@ -473,1 +413,1 @@\n-                pkcs12RC2_40Aliases, null);\n+                null);\n@@ -475,1 +415,1 @@\n-        ps(\"AlgorithmParameters\", \"PBEWithSHA1AndRC2_128\",\n+        psA(\"AlgorithmParameters\", \"PBEWithSHA1AndRC2_128\",\n@@ -477,1 +417,1 @@\n-                pkcs12RC2_128Aliases, null);\n+                null);\n@@ -479,1 +419,1 @@\n-        ps(\"AlgorithmParameters\", \"PBEWithSHA1AndRC4_40\",\n+        psA(\"AlgorithmParameters\", \"PBEWithSHA1AndRC4_40\",\n@@ -481,1 +421,1 @@\n-                pkcs12RC4_40Aliases, null);\n+                null);\n@@ -483,1 +423,1 @@\n-        ps(\"AlgorithmParameters\", \"PBEWithSHA1AndRC4_128\",\n+        psA(\"AlgorithmParameters\", \"PBEWithSHA1AndRC4_128\",\n@@ -485,1 +425,1 @@\n-                pkcs12RC4_128Aliases, null);\n+                null);\n@@ -487,1 +427,1 @@\n-        ps(\"AlgorithmParameters\", \"PBES2\",\n+        psA(\"AlgorithmParameters\", \"PBES2\",\n@@ -489,1 +429,1 @@\n-                pkcs5PBES2Aliases, null);\n+                null);\n@@ -492,2 +432,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA1AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA1AndAES_128\");\n@@ -496,2 +435,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA224AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA224AndAES_128\");\n@@ -500,2 +438,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA256AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA256AndAES_128\");\n@@ -504,2 +441,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA384AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA384AndAES_128\");\n@@ -508,2 +444,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA512AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA512AndAES_128\");\n@@ -512,2 +447,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA1AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA1AndAES_256\");\n@@ -516,2 +450,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA224AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA224AndAES_256\");\n@@ -520,2 +453,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA256AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA256AndAES_256\");\n@@ -524,2 +456,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA384AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA384AndAES_256\");\n@@ -528,2 +459,1 @@\n-                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA512AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBES2Parameters$HmacSHA512AndAES_256\");\n@@ -532,2 +462,1 @@\n-                \"com.sun.crypto.provider.BlowfishParameters\",\n-                null, null);\n+                \"com.sun.crypto.provider.BlowfishParameters\");\n@@ -535,3 +464,2 @@\n-        ps(\"AlgorithmParameters\", \"AES\",\n-                \"com.sun.crypto.provider.AESParameters\",\n-                aesAliases, null);\n+        psA(\"AlgorithmParameters\", \"AES\",\n+                \"com.sun.crypto.provider.AESParameters\", null);\n@@ -540,2 +468,1 @@\n-                \"com.sun.crypto.provider.GCMParameters\",\n-                null, null);\n+                \"com.sun.crypto.provider.GCMParameters\");\n@@ -544,2 +471,1 @@\n-                \"com.sun.crypto.provider.RC2Parameters\",\n-                null, null);\n+                \"com.sun.crypto.provider.RC2Parameters\");\n@@ -548,2 +474,1 @@\n-                \"com.sun.crypto.provider.OAEPParameters\",\n-                null, null);\n+                \"com.sun.crypto.provider.OAEPParameters\");\n@@ -551,3 +476,2 @@\n-        ps(\"AlgorithmParameters\", \"ChaCha20-Poly1305\",\n-                \"com.sun.crypto.provider.ChaCha20Poly1305Parameters\",\n-                chachaPolyAliases, null);\n+        psA(\"AlgorithmParameters\", \"ChaCha20-Poly1305\",\n+                \"com.sun.crypto.provider.ChaCha20Poly1305Parameters\", null);\n@@ -558,1 +482,1 @@\n-        ps(\"KeyFactory\", \"DiffieHellman\",\n+        psA(\"KeyFactory\", \"DiffieHellman\",\n@@ -560,1 +484,1 @@\n-                diffieHellmanAliases, null);\n+                null);\n@@ -566,2 +490,1 @@\n-                \"com.sun.crypto.provider.DESKeyFactory\",\n-                null, null);\n+                \"com.sun.crypto.provider.DESKeyFactory\");\n@@ -569,3 +492,2 @@\n-        ps(\"SecretKeyFactory\", \"DESede\",\n-                \"com.sun.crypto.provider.DESedeKeyFactory\",\n-                desEdeAliases, null);\n+        psA(\"SecretKeyFactory\", \"DESede\",\n+                \"com.sun.crypto.provider.DESedeKeyFactory\", null);\n@@ -573,1 +495,1 @@\n-        ps(\"SecretKeyFactory\", \"PBEWithMD5AndDES\",\n+        psA(\"SecretKeyFactory\", \"PBEWithMD5AndDES\",\n@@ -575,1 +497,1 @@\n-                pkcs5MD5_DESAliases, null);\n+                null);\n@@ -584,2 +506,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndTripleDES\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndTripleDES\");\n@@ -587,1 +508,1 @@\n-        ps(\"SecretKeyFactory\", \"PBEWithSHA1AndDESede\",\n+        psA(\"SecretKeyFactory\", \"PBEWithSHA1AndDESede\",\n@@ -589,1 +510,1 @@\n-                pkcs12DESedeAliases, null);\n+                null);\n@@ -591,1 +512,1 @@\n-        ps(\"SecretKeyFactory\", \"PBEWithSHA1AndRC2_40\",\n+        psA(\"SecretKeyFactory\", \"PBEWithSHA1AndRC2_40\",\n@@ -593,1 +514,1 @@\n-                pkcs12RC2_40Aliases, null);\n+                null);\n@@ -595,1 +516,1 @@\n-        ps(\"SecretKeyFactory\", \"PBEWithSHA1AndRC2_128\",\n+        psA(\"SecretKeyFactory\", \"PBEWithSHA1AndRC2_128\",\n@@ -597,1 +518,1 @@\n-                pkcs12RC2_128Aliases, null);\n+                null);\n@@ -599,1 +520,1 @@\n-        ps(\"SecretKeyFactory\", \"PBEWithSHA1AndRC4_40\",\n+        psA(\"SecretKeyFactory\", \"PBEWithSHA1AndRC4_40\",\n@@ -601,1 +522,1 @@\n-                pkcs12RC4_40Aliases,null);\n+                null);\n@@ -603,1 +524,1 @@\n-        ps(\"SecretKeyFactory\", \"PBEWithSHA1AndRC4_128\",\n+        psA(\"SecretKeyFactory\", \"PBEWithSHA1AndRC4_128\",\n@@ -605,1 +526,1 @@\n-                pkcs12RC4_128Aliases, null);\n+                null);\n@@ -608,2 +529,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA1AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA1AndAES_128\");\n@@ -612,2 +532,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA224AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA224AndAES_128\");\n@@ -616,2 +535,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA256AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA256AndAES_128\");\n@@ -620,2 +538,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA384AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA384AndAES_128\");\n@@ -624,2 +541,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA512AndAES_128\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA512AndAES_128\");\n@@ -628,2 +544,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA1AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA1AndAES_256\");\n@@ -632,2 +547,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA224AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA224AndAES_256\");\n@@ -636,2 +550,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA256AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA256AndAES_256\");\n@@ -640,2 +553,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA384AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA384AndAES_256\");\n@@ -644,2 +556,1 @@\n-                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA512AndAES_256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBEKeyFactory$PBEWithHmacSHA512AndAES_256\");\n@@ -648,1 +559,1 @@\n-        ps(\"SecretKeyFactory\", \"PBKDF2WithHmacSHA1\",\n+        psA(\"SecretKeyFactory\", \"PBKDF2WithHmacSHA1\",\n@@ -650,1 +561,1 @@\n-                pkcs5PBKDF2Aliases, null);\n+                null);\n@@ -652,2 +563,1 @@\n-                \"com.sun.crypto.provider.PBKDF2Core$HmacSHA224\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBKDF2Core$HmacSHA224\");\n@@ -655,2 +565,1 @@\n-                \"com.sun.crypto.provider.PBKDF2Core$HmacSHA256\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBKDF2Core$HmacSHA256\");\n@@ -658,2 +567,1 @@\n-                \"com.sun.crypto.provider.PBKDF2Core$HmacSHA384\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBKDF2Core$HmacSHA384\");\n@@ -661,2 +569,1 @@\n-                \"com.sun.crypto.provider.PBKDF2Core$HmacSHA512\",\n-                null, null);\n+                \"com.sun.crypto.provider.PBKDF2Core$HmacSHA512\");\n@@ -670,17 +577,14 @@\n-        ps(\"Mac\", \"HmacSHA1\", \"com.sun.crypto.provider.HmacSHA1\",\n-                macSHA1Aliases, attrs);\n-        ps(\"Mac\", \"HmacSHA224\", \"com.sun.crypto.provider.HmacCore$HmacSHA224\",\n-                macSHA224Aliases, attrs);\n-        ps(\"Mac\", \"HmacSHA256\", \"com.sun.crypto.provider.HmacCore$HmacSHA256\",\n-                macSHA256Aliases, attrs);\n-        ps(\"Mac\", \"HmacSHA384\", \"com.sun.crypto.provider.HmacCore$HmacSHA384\",\n-                macSHA384Aliases, attrs);\n-        ps(\"Mac\", \"HmacSHA512\", \"com.sun.crypto.provider.HmacCore$HmacSHA512\",\n-                macSHA512Aliases, attrs);\n-        \/\/ TODO: aliases with OIDs\n-        ps(\"Mac\", \"HmacSHA512\/224\",\n-                \"com.sun.crypto.provider.HmacCore$HmacSHA512_224\",\n-                null, attrs);\n-        ps(\"Mac\", \"HmacSHA512\/256\",\n-                \"com.sun.crypto.provider.HmacCore$HmacSHA512_256\",\n-                null, attrs);\n+        psA(\"Mac\", \"HmacSHA1\", \"com.sun.crypto.provider.HmacSHA1\",\n+                attrs);\n+        psA(\"Mac\", \"HmacSHA224\",\n+                \"com.sun.crypto.provider.HmacCore$HmacSHA224\", attrs);\n+        psA(\"Mac\", \"HmacSHA256\",\n+                \"com.sun.crypto.provider.HmacCore$HmacSHA256\", attrs);\n+        psA(\"Mac\", \"HmacSHA384\",\n+                \"com.sun.crypto.provider.HmacCore$HmacSHA384\", attrs);\n+        psA(\"Mac\", \"HmacSHA512\",\n+                \"com.sun.crypto.provider.HmacCore$HmacSHA512\", attrs);\n+        psA(\"Mac\", \"HmacSHA512\/224\",\n+                \"com.sun.crypto.provider.HmacCore$HmacSHA512_224\", attrs);\n+        psA(\"Mac\", \"HmacSHA512\/256\",\n+                \"com.sun.crypto.provider.HmacCore$HmacSHA512_256\", attrs);\n@@ -730,2 +634,1 @@\n-                \"com.sun.crypto.provider.JceKeyStore\",\n-                null, null);\n+                \"com.sun.crypto.provider.JceKeyStore\");\n@@ -742,2 +645,1 @@\n-                \"com.sun.crypto.provider.TlsPrfGenerator$V10\",\n-                null, null);\n+                \"com.sun.crypto.provider.TlsPrfGenerator$V10\");\n@@ -745,2 +647,1 @@\n-                \"com.sun.crypto.provider.TlsPrfGenerator$V12\",\n-                null, null);\n+                \"com.sun.crypto.provider.TlsPrfGenerator$V12\");\n@@ -750,2 +651,2 @@\n-                createAliases(\"SunTls12MasterSecret\",\n-                    \"SunTlsExtendedMasterSecret\"), null);\n+                List.of(\"SunTls12MasterSecret\", \"SunTlsExtendedMasterSecret\"),\n+                null);\n@@ -755,1 +656,1 @@\n-                createAliases(\"SunTls12KeyMaterial\"), null);\n+                List.of(\"SunTls12KeyMaterial\"), null);\n@@ -759,1 +660,1 @@\n-                createAliases(\"SunTls12RsaPremasterSecret\"), null);\n+                List.of(\"SunTls12RsaPremasterSecret\"), null);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/SunJCE.java","additions":204,"deletions":303,"binary":false,"changes":507,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-            type = new ObjectIdentifier(name);\n+            type = ObjectIdentifier.of(name);\n","filename":"src\/java.base\/share\/classes\/java\/security\/PKCS12Attribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -246,1 +246,1 @@\n-                (new ObjectIdentifier(oid), critical, extVal);\n+                (ObjectIdentifier.of(oid), critical, extVal);\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertificateRevokedException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,5 +34,1 @@\n-import sun.security.util.HexDumpEncoder;\n-import sun.security.util.Debug;\n-import sun.security.util.DerInputStream;\n-import sun.security.util.DerValue;\n-import sun.security.util.ObjectIdentifier;\n+import sun.security.util.*;\n@@ -91,1 +87,1 @@\n-        ObjectIdentifier.newInternal(new int[] {2, 5, 29, 37, 0});\n+        ObjectIdentifier.of(KnownOIDs.anyExtendedKeyUsage);\n@@ -509,1 +505,1 @@\n-            subjectPublicKeyAlgID = new ObjectIdentifier(oid);\n+            subjectPublicKeyAlgID = ObjectIdentifier.of(oid);\n@@ -625,1 +621,1 @@\n-                keyPurposeOIDSet.add(new ObjectIdentifier(s));\n+                keyPurposeOIDSet.add(ObjectIdentifier.of(s));\n@@ -1108,2 +1104,2 @@\n-                polIdVector.add(new CertificatePolicyId(new ObjectIdentifier(\n-                  (String)o)));\n+                polIdVector.add(new CertificatePolicyId\n+                        (ObjectIdentifier.of((String)o)));\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509CertSelector.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -41,10 +41,15 @@\n-    private static int[]  pkcs7 = {1, 2, 840, 113549, 1, 7};\n-    private static int[]   data = {1, 2, 840, 113549, 1, 7, 1};\n-    private static int[]  sdata = {1, 2, 840, 113549, 1, 7, 2};\n-    private static int[]  edata = {1, 2, 840, 113549, 1, 7, 3};\n-    private static int[] sedata = {1, 2, 840, 113549, 1, 7, 4};\n-    private static int[]  ddata = {1, 2, 840, 113549, 1, 7, 5};\n-    private static int[] crdata = {1, 2, 840, 113549, 1, 7, 6};\n-    private static int[] nsdata = {2, 16, 840, 1, 113730, 2, 5};\n-    \/\/ timestamp token (id-ct-TSTInfo) from RFC 3161\n-    private static int[] tstInfo = {1, 2, 840, 113549, 1, 9, 16, 1, 4};\n+    public static ObjectIdentifier PKCS7_OID =\n+            ObjectIdentifier.of(KnownOIDs.PKCS7);\n+    public static ObjectIdentifier DATA_OID =\n+            ObjectIdentifier.of(KnownOIDs.Data);\n+    public static ObjectIdentifier SIGNED_DATA_OID =\n+            ObjectIdentifier.of(KnownOIDs.SignedData);\n+    public static ObjectIdentifier ENVELOPED_DATA_OID =\n+            ObjectIdentifier.of(KnownOIDs.EnvelopedData);\n+    public static ObjectIdentifier SIGNED_AND_ENVELOPED_DATA_OID =\n+            ObjectIdentifier.of(KnownOIDs.SignedAndEnvelopedData);\n+    public static ObjectIdentifier DIGESTED_DATA_OID =\n+            ObjectIdentifier.of(KnownOIDs.DigestedData);\n+    public static ObjectIdentifier ENCRYPTED_DATA_OID =\n+            ObjectIdentifier.of(KnownOIDs.EncryptedData);\n+\n@@ -52,13 +57,4 @@\n-    private static final int[] OLD_SDATA = {1, 2, 840, 1113549, 1, 7, 2};\n-    private static final int[] OLD_DATA = {1, 2, 840, 1113549, 1, 7, 1};\n-    public static ObjectIdentifier PKCS7_OID;\n-    public static ObjectIdentifier DATA_OID;\n-    public static ObjectIdentifier SIGNED_DATA_OID;\n-    public static ObjectIdentifier ENVELOPED_DATA_OID;\n-    public static ObjectIdentifier SIGNED_AND_ENVELOPED_DATA_OID;\n-    public static ObjectIdentifier DIGESTED_DATA_OID;\n-    public static ObjectIdentifier ENCRYPTED_DATA_OID;\n-    public static ObjectIdentifier OLD_SIGNED_DATA_OID;\n-    public static ObjectIdentifier OLD_DATA_OID;\n-    public static ObjectIdentifier NETSCAPE_CERT_SEQUENCE_OID;\n-    public static ObjectIdentifier TIMESTAMP_TOKEN_INFO_OID;\n+    public static ObjectIdentifier OLD_SIGNED_DATA_OID =\n+            ObjectIdentifier.of(KnownOIDs.JDK_OLD_SignedData);\n+    public static ObjectIdentifier OLD_DATA_OID =\n+            ObjectIdentifier.of(KnownOIDs.JDK_OLD_Data);\n@@ -66,19 +62,9 @@\n-    static {\n-        PKCS7_OID =  ObjectIdentifier.newInternal(pkcs7);\n-        DATA_OID = ObjectIdentifier.newInternal(data);\n-        SIGNED_DATA_OID = ObjectIdentifier.newInternal(sdata);\n-        ENVELOPED_DATA_OID = ObjectIdentifier.newInternal(edata);\n-        SIGNED_AND_ENVELOPED_DATA_OID = ObjectIdentifier.newInternal(sedata);\n-        DIGESTED_DATA_OID = ObjectIdentifier.newInternal(ddata);\n-        ENCRYPTED_DATA_OID = ObjectIdentifier.newInternal(crdata);\n-        OLD_SIGNED_DATA_OID = ObjectIdentifier.newInternal(OLD_SDATA);\n-        OLD_DATA_OID = ObjectIdentifier.newInternal(OLD_DATA);\n-        \/**\n-         * The ASN.1 systax for the Netscape Certificate Sequence\n-         * data type is defined\n-         * <a href=http:\/\/wp.netscape.com\/eng\/security\/comm4-cert-download.html>\n-         * here.<\/a>\n-         *\/\n-        NETSCAPE_CERT_SEQUENCE_OID = ObjectIdentifier.newInternal(nsdata);\n-        TIMESTAMP_TOKEN_INFO_OID = ObjectIdentifier.newInternal(tstInfo);\n-    }\n+    \/\/ The ASN.1 systax for the Netscape Certificate Sequence data type is\n+    \/\/ defined at:\n+    \/\/      http:\/\/wp.netscape.com\/eng\/security\/comm4-cert-download.html\n+    public static ObjectIdentifier NETSCAPE_CERT_SEQUENCE_OID =\n+            ObjectIdentifier.of(KnownOIDs.NETSCAPE_CertSequence);\n+\n+    \/\/ timestamp token (id-ct-TSTInfo) from RFC 3161\n+    public static ObjectIdentifier TIMESTAMP_TOKEN_INFO_OID =\n+            ObjectIdentifier.of(KnownOIDs.TimeStampTokenInfo);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/ContentInfo.java","additions":28,"deletions":42,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,5 +67,1 @@\n-import sun.security.util.Debug;\n-import sun.security.util.DerInputStream;\n-import sun.security.util.DerOutputStream;\n-import sun.security.util.DerValue;\n-import sun.security.util.ObjectIdentifier;\n+import sun.security.util.*;\n@@ -73,1 +69,0 @@\n-import sun.security.util.SecurityProperties;\n@@ -77,1 +72,0 @@\n-import sun.security.util.KeyStoreDelegator;\n@@ -136,5 +130,4 @@\n-    \/\/ friendlyName, localKeyId, trustedKeyUsage\n-    private static final String[] CORE_ATTRIBUTES = {\n-        \"1.2.840.113549.1.9.20\",\n-        \"1.2.840.113549.1.9.21\",\n-        \"2.16.840.1.113894.746875.1.1\"\n+    private static final KnownOIDs[] CORE_ATTRIBUTES = {\n+        KnownOIDs.FriendlyName,\n+        KnownOIDs.LocalKeyID,\n+        KnownOIDs.ORACLE_TrustedKeyUsage\n@@ -145,3 +138,15 @@\n-    private static final int[] keyBag  = {1, 2, 840, 113549, 1, 12, 10, 1, 2};\n-    private static final int[] certBag = {1, 2, 840, 113549, 1, 12, 10, 1, 3};\n-    private static final int[] secretBag = {1, 2, 840, 113549, 1, 12, 10, 1, 5};\n+    private static final ObjectIdentifier PKCS8ShroudedKeyBag_OID =\n+            ObjectIdentifier.of(KnownOIDs.PKCS8ShroudedKeyBag);\n+    private static final ObjectIdentifier CertBag_OID =\n+            ObjectIdentifier.of(KnownOIDs.CertBag);\n+    private static final ObjectIdentifier SecretBag_OID =\n+            ObjectIdentifier.of(KnownOIDs.SecretBag);\n+\n+    private static final ObjectIdentifier PKCS9FriendlyName_OID =\n+            ObjectIdentifier.of(KnownOIDs.FriendlyName);\n+    private static final ObjectIdentifier PKCS9LocalKeyId_OID =\n+            ObjectIdentifier.of(KnownOIDs.LocalKeyID);\n+    private static final ObjectIdentifier PKCS9CertType_OID =\n+            ObjectIdentifier.of(KnownOIDs.CertTypeX509);\n+    private static final ObjectIdentifier pbes2_OID =\n+            ObjectIdentifier.of(KnownOIDs.PBES2);\n@@ -149,7 +154,0 @@\n-    private static final int[] pkcs9Name  = {1, 2, 840, 113549, 1, 9, 20};\n-    private static final int[] pkcs9KeyId = {1, 2, 840, 113549, 1, 9, 21};\n-\n-    private static final int[] pkcs9certType = {1, 2, 840, 113549, 1, 9, 22, 1};\n-\n-    private static final int[] pbes2 = {1, 2, 840, 113549, 1, 5, 13};\n-    \/\/ TODO: temporary Oracle OID\n@@ -157,2 +155,4 @@\n-     * { joint-iso-itu-t(2) country(16) us(840) organization(1) oracle(113894)\n-     *   jdk(746875) crypto(1) id-at-trustedKeyUsage(1) }\n+     * Temporary Oracle OID\n+     *\n+     * {joint-iso-itu-t(2) country(16) us(840) organization(1)\n+     *  oracle(113894) jdk(746875) crypto(1) id-at-trustedKeyUsage(1)}\n@@ -160,13 +160,6 @@\n-    private static final int[] TrustedKeyUsage =\n-                                        {2, 16, 840, 1, 113894, 746875, 1, 1};\n-    private static final int[] AnyExtendedKeyUsage = {2, 5, 29, 37, 0};\n-\n-    private static final ObjectIdentifier PKCS8ShroudedKeyBag_OID;\n-    private static final ObjectIdentifier CertBag_OID;\n-    private static final ObjectIdentifier SecretBag_OID;\n-    private static final ObjectIdentifier PKCS9FriendlyName_OID;\n-    private static final ObjectIdentifier PKCS9LocalKeyId_OID;\n-    private static final ObjectIdentifier PKCS9CertType_OID;\n-    private static final ObjectIdentifier pbes2_OID;\n-    private static final ObjectIdentifier TrustedKeyUsage_OID;\n-    private static final ObjectIdentifier[] AnyUsage;\n+    private static final ObjectIdentifier TrustedKeyUsage_OID =\n+            ObjectIdentifier.of(KnownOIDs.ORACLE_TrustedKeyUsage);\n+\n+    private static final ObjectIdentifier[] AnyUsage = new ObjectIdentifier[] {\n+                ObjectIdentifier.of(KnownOIDs.anyExtendedKeyUsage)\n+            };\n@@ -201,17 +194,0 @@\n-    static {\n-        try {\n-            PKCS8ShroudedKeyBag_OID = new ObjectIdentifier(keyBag);\n-            CertBag_OID = new ObjectIdentifier(certBag);\n-            SecretBag_OID = new ObjectIdentifier(secretBag);\n-            PKCS9FriendlyName_OID = new ObjectIdentifier(pkcs9Name);\n-            PKCS9LocalKeyId_OID = new ObjectIdentifier(pkcs9KeyId);\n-            PKCS9CertType_OID = new ObjectIdentifier(pkcs9certType);\n-            pbes2_OID = new ObjectIdentifier(pbes2);\n-            TrustedKeyUsage_OID = new ObjectIdentifier(TrustedKeyUsage);\n-            AnyUsage = new ObjectIdentifier[]{\n-                new ObjectIdentifier(AnyExtendedKeyUsage)};\n-        } catch (IOException ioe) {\n-            throw new AssertionError(\"OID not initialized\", ioe);\n-        }\n-    }\n-\n@@ -1658,3 +1634,3 @@\n-                if (CORE_ATTRIBUTES[0].equals(attributeName) ||\n-                    CORE_ATTRIBUTES[1].equals(attributeName) ||\n-                    CORE_ATTRIBUTES[2].equals(attributeName)) {\n+                if (CORE_ATTRIBUTES[0].value().equals(attributeName) ||\n+                    CORE_ATTRIBUTES[1].value().equals(attributeName) ||\n+                    CORE_ATTRIBUTES[2].value().equals(attributeName)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":33,"deletions":57,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -109,3 +110,0 @@\n-    \/\/ defined by JavaSoft\n-    private static final String KEY_PROTECTOR_OID = \"1.3.6.1.4.1.42.2.17.1.1\";\n-\n@@ -217,1 +215,2 @@\n-            encrAlg = new AlgorithmId(new ObjectIdentifier(KEY_PROTECTOR_OID));\n+            encrAlg = new AlgorithmId(ObjectIdentifier.of\n+                    (KnownOIDs.JAVASOFT_JDKKeyProtector));\n@@ -239,1 +238,2 @@\n-        if (!(encrAlg.getOID().toString().equals(KEY_PROTECTOR_OID))) {\n+        if (!(encrAlg.getOID().toString().equals\n+                (KnownOIDs.JAVASOFT_JDKKeyProtector.value()))) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/KeyProtector.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+import sun.security.util.SecurityProviderConstants;\n+import static sun.security.util.SecurityProviderConstants.getAliases;\n@@ -83,12 +85,0 @@\n-    \/\/ create an aliases List from the specified aliases\n-    public static List<String> createAliases(String ... aliases) {\n-        return Arrays.asList(aliases);\n-    }\n-\n-    \/\/ create an aliases List from the specified oid followed by other aliases\n-    public static List<String> createAliasesWithOid(String ... oids) {\n-        String[] result = Arrays.copyOf(oids, oids.length + 1);\n-        result[result.length - 1] = \"OID.\" + oids[0];\n-        return Arrays.asList(result);\n-    }\n-\n@@ -109,2 +99,1 @@\n-                    \"sun.security.provider.NativePRNG\",\n-                    null, attrs);\n+                    \"sun.security.provider.NativePRNG\", attrs);\n@@ -114,1 +103,1 @@\n-                    \"sun.security.provider.NativePRNG$Blocking\", null, attrs);\n+                    \"sun.security.provider.NativePRNG$Blocking\", attrs);\n@@ -118,1 +107,1 @@\n-                    \"sun.security.provider.NativePRNG$NonBlocking\", null, attrs);\n+                    \"sun.security.provider.NativePRNG$NonBlocking\", attrs);\n@@ -121,2 +110,1 @@\n-        add(p, \"SecureRandom\", \"DRBG\", \"sun.security.provider.DRBG\",\n-               null, attrs);\n+        add(p, \"SecureRandom\", \"DRBG\", \"sun.security.provider.DRBG\", attrs);\n@@ -124,1 +112,1 @@\n-                \"sun.security.provider.SecureRandom\", null, attrs);\n+                \"sun.security.provider.SecureRandom\", attrs);\n@@ -137,7 +125,4 @@\n-        add(p, \"Signature\", \"SHA1withDSA\",\n-                \"sun.security.provider.DSA$SHA1withDSA\",\n-                createAliasesWithOid(\"1.2.840.10040.4.3\", \"DSA\", \"DSS\",\n-                    \"SHA\/DSA\", \"SHA-1\/DSA\", \"SHA1\/DSA\", \"SHAwithDSA\",\n-                    \"DSAWithSHA1\", \"1.3.14.3.2.13\", \"1.3.14.3.2.27\"), attrs);\n-        add(p, \"Signature\", \"NONEwithDSA\", \"sun.security.provider.DSA$RawDSA\",\n-                createAliases(\"RawDSA\"), attrs);\n+        addWithAlias(p, \"Signature\", \"SHA1withDSA\",\n+                \"sun.security.provider.DSA$SHA1withDSA\", attrs);\n+        addWithAlias(p, \"Signature\", \"NONEwithDSA\",\n+                \"sun.security.provider.DSA$RawDSA\", attrs);\n@@ -147,6 +132,4 @@\n-        add(p, \"Signature\", \"SHA224withDSA\",\n-                \"sun.security.provider.DSA$SHA224withDSA\",\n-                createAliasesWithOid(\"2.16.840.1.101.3.4.3.1\"), attrs);\n-        add(p, \"Signature\", \"SHA256withDSA\",\n-                \"sun.security.provider.DSA$SHA256withDSA\",\n-                createAliasesWithOid(\"2.16.840.1.101.3.4.3.2\"), attrs);\n+        addWithAlias(p, \"Signature\", \"SHA224withDSA\",\n+                \"sun.security.provider.DSA$SHA224withDSA\", attrs);\n+        addWithAlias(p, \"Signature\", \"SHA256withDSA\",\n+                \"sun.security.provider.DSA$SHA256withDSA\", attrs);\n@@ -157,2 +140,1 @@\n-                \"sun.security.provider.DSA$SHA1withDSAinP1363Format\",\n-                null, null);\n+                \"sun.security.provider.DSA$SHA1withDSAinP1363Format\");\n@@ -160,2 +142,1 @@\n-                \"sun.security.provider.DSA$RawDSAinP1363Format\",\n-                null, null);\n+                \"sun.security.provider.DSA$RawDSAinP1363Format\");\n@@ -163,2 +144,1 @@\n-                \"sun.security.provider.DSA$SHA224withDSAinP1363Format\",\n-                null, null);\n+                \"sun.security.provider.DSA$SHA224withDSAinP1363Format\");\n@@ -166,2 +146,1 @@\n-                \"sun.security.provider.DSA$SHA256withDSAinP1363Format\",\n-                null, null);\n+                \"sun.security.provider.DSA$SHA256withDSAinP1363Format\");\n@@ -176,2 +155,0 @@\n-        String dsaOid = \"1.2.840.10040.4.1\";\n-        List<String> dsaAliases = createAliasesWithOid(dsaOid, \"1.3.14.3.2.12\");\n@@ -180,1 +157,1 @@\n-        add(p, \"KeyPairGenerator\", \"DSA\", dsaKPGImplClass, dsaAliases, attrs);\n+        addWithAlias(p, \"KeyPairGenerator\", \"DSA\", dsaKPGImplClass, attrs);\n@@ -185,3 +162,2 @@\n-        add(p, \"AlgorithmParameterGenerator\", \"DSA\",\n-                \"sun.security.provider.DSAParameterGenerator\", dsaAliases,\n-                attrs);\n+        addWithAlias(p, \"AlgorithmParameterGenerator\", \"DSA\",\n+                \"sun.security.provider.DSAParameterGenerator\", attrs);\n@@ -193,2 +169,2 @@\n-        add(p, \"AlgorithmParameters\", \"DSA\",\n-                \"sun.security.provider.DSAParameters\", dsaAliases, attrs);\n+        addWithAlias(p, \"AlgorithmParameters\", \"DSA\",\n+                \"sun.security.provider.DSAParameters\", attrs);\n@@ -199,2 +175,2 @@\n-        add(p, \"KeyFactory\", \"DSA\", \"sun.security.provider.DSAKeyFactory\",\n-                dsaAliases, attrs);\n+        addWithAlias(p, \"KeyFactory\", \"DSA\",\n+                \"sun.security.provider.DSAKeyFactory\", attrs);\n@@ -205,28 +181,25 @@\n-        add(p, \"MessageDigest\", \"MD2\", \"sun.security.provider.MD2\", null, attrs);\n-        add(p, \"MessageDigest\", \"MD5\", \"sun.security.provider.MD5\", null, attrs);\n-        add(p, \"MessageDigest\", \"SHA\", \"sun.security.provider.SHA\",\n-                createAliasesWithOid(\"1.3.14.3.2.26\", \"SHA-1\", \"SHA1\"), attrs);\n-\n-        String sha2BaseOid = \"2.16.840.1.101.3.4.2\";\n-        add(p, \"MessageDigest\", \"SHA-224\", \"sun.security.provider.SHA2$SHA224\",\n-                createAliasesWithOid(sha2BaseOid + \".4\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA-256\", \"sun.security.provider.SHA2$SHA256\",\n-                createAliasesWithOid(sha2BaseOid + \".1\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA-384\", \"sun.security.provider.SHA5$SHA384\",\n-                createAliasesWithOid(sha2BaseOid + \".2\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA-512\", \"sun.security.provider.SHA5$SHA512\",\n-                createAliasesWithOid(sha2BaseOid + \".3\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA-512\/224\",\n-                \"sun.security.provider.SHA5$SHA512_224\",\n-                createAliasesWithOid(sha2BaseOid + \".5\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA-512\/256\",\n-                \"sun.security.provider.SHA5$SHA512_256\",\n-                createAliasesWithOid(sha2BaseOid + \".6\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA3-224\", \"sun.security.provider.SHA3$SHA224\",\n-                createAliasesWithOid(sha2BaseOid + \".7\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA3-256\", \"sun.security.provider.SHA3$SHA256\",\n-                createAliasesWithOid(sha2BaseOid + \".8\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA3-384\", \"sun.security.provider.SHA3$SHA384\",\n-                createAliasesWithOid(sha2BaseOid + \".9\"), attrs);\n-        add(p, \"MessageDigest\", \"SHA3-512\", \"sun.security.provider.SHA3$SHA512\",\n-                createAliasesWithOid(sha2BaseOid + \".10\"), attrs);\n+        add(p, \"MessageDigest\", \"MD2\", \"sun.security.provider.MD2\", attrs);\n+        add(p, \"MessageDigest\", \"MD5\", \"sun.security.provider.MD5\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA-1\", \"sun.security.provider.SHA\",\n+                attrs);\n+\n+        addWithAlias(p, \"MessageDigest\", \"SHA-224\",\n+                \"sun.security.provider.SHA2$SHA224\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA-256\",\n+                \"sun.security.provider.SHA2$SHA256\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA-384\",\n+                \"sun.security.provider.SHA5$SHA384\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA-512\",\n+                \"sun.security.provider.SHA5$SHA512\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA-512\/224\",\n+                \"sun.security.provider.SHA5$SHA512_224\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA-512\/256\",\n+                \"sun.security.provider.SHA5$SHA512_256\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA3-224\",\n+                \"sun.security.provider.SHA3$SHA224\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA3-256\",\n+                \"sun.security.provider.SHA3$SHA256\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA3-384\",\n+                \"sun.security.provider.SHA3$SHA384\", attrs);\n+        addWithAlias(p, \"MessageDigest\", \"SHA3-512\",\n+                \"sun.security.provider.SHA3$SHA512\", attrs);\n@@ -237,3 +210,2 @@\n-        add(p, \"CertificateFactory\", \"X.509\",\n-                \"sun.security.provider.X509Factory\",\n-                createAliases(\"X509\"), attrs);\n+        addWithAlias(p, \"CertificateFactory\", \"X.509\",\n+                \"sun.security.provider.X509Factory\", attrs);\n@@ -245,2 +217,1 @@\n-                \"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12\",\n-                null, null);\n+                \"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12\");\n@@ -248,2 +219,1 @@\n-                \"sun.security.provider.JavaKeyStore$DualFormatJKS\",\n-                null, attrs);\n+                \"sun.security.provider.JavaKeyStore$DualFormatJKS\", attrs);\n@@ -251,2 +221,1 @@\n-                \"sun.security.provider.JavaKeyStore$CaseExactJKS\",\n-                null, attrs);\n+                \"sun.security.provider.JavaKeyStore$CaseExactJKS\", attrs);\n@@ -254,1 +223,1 @@\n-                null, attrs);\n+                attrs);\n@@ -262,1 +231,1 @@\n-                null, attrs);\n+                attrs);\n@@ -265,1 +234,1 @@\n-                null, attrs);\n+                attrs);\n@@ -270,2 +239,1 @@\n-        add(p, \"Policy\", \"JavaPolicy\", \"sun.security.provider.PolicySpiFile\",\n-                null, null);\n+        add(p, \"Policy\", \"JavaPolicy\", \"sun.security.provider.PolicySpiFile\");\n@@ -277,1 +245,1 @@\n-                \"sun.security.provider.ConfigFile$Spi\", null, null);\n+                \"sun.security.provider.ConfigFile$Spi\");\n@@ -288,1 +256,1 @@\n-                null, attrs);\n+                attrs);\n@@ -291,1 +259,1 @@\n-                null, attrs);\n+                attrs);\n@@ -298,0 +266,4 @@\n+    private void add(Provider p, String type, String algo, String cn) {\n+        services.add(new Provider.Service(p, type, algo, cn, null, null));\n+    }\n+\n@@ -299,2 +271,8 @@\n-            List<String> aliases, HashMap<String, String> attrs) {\n-        services.add(new Provider.Service(p, type, algo, cn, aliases, attrs));\n+            HashMap<String, String> attrs) {\n+        services.add(new Provider.Service(p, type, algo, cn, null, attrs));\n+    }\n+\n+    private void addWithAlias(Provider p, String type, String algo, String cn,\n+            HashMap<String, String> attrs) {\n+        services.add(new Provider.Service(p, type, algo, cn,\n+            getAliases(algo), attrs));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SunEntries.java","additions":75,"deletions":97,"binary":false,"changes":172,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-        ObjectIdentifier.newInternal(new int[] { 1, 3, 6, 1, 5, 5, 7, 48, 1, 1});\n+        ObjectIdentifier.of(KnownOIDs.OCSPBasicResponse);\n@@ -147,3 +147,0 @@\n-    \/\/ Object identifier for the OCSPSigning key purpose\n-    private static final String KP_OCSP_SIGNING_OID = \"1.3.6.1.5.5.7.3.9\";\n-\n@@ -498,1 +495,1 @@\n-                        !keyPurposes.contains(KP_OCSP_SIGNING_OID)) {\n+                        !keyPurposes.contains(KnownOIDs.OCSPSigning.value())) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSPResponse.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -726,1 +727,1 @@\n-                    if (ext.getId().equals(\"1.3.6.1.5.5.7.48.1.2\")) {\n+                    if (ext.getId().equals(KnownOIDs.OCSPNonceExt.value())) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/RevocationChecker.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-                if (!val.getOID().equals(AlgorithmId.mgf1_oid)) {\n+                if (!val.getOID().equals(AlgorithmId.MGF1_oid)) {\n@@ -250,1 +250,1 @@\n-            tmp2.putOID(AlgorithmId.mgf1_oid);\n+            tmp2.putOID(AlgorithmId.MGF1_oid);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/PSSParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-import static sun.security.provider.SunEntries.createAliasesWithOid;\n+import static sun.security.util.SecurityProviderConstants.getAliases;\n@@ -41,1 +41,8 @@\n-         services.add(new Provider.Service(p, type, algo, cn, aliases, attrs));\n+         services.add(new Provider.Service(p, type, algo, cn,\n+             aliases, attrs));\n+    }\n+\n+    private void addA(Provider p, String type, String algo, String cn,\n+             HashMap<String, String> attrs) {\n+         services.add(new Provider.Service(p, type, algo, cn,\n+             getAliases(algo), attrs));\n@@ -50,7 +57,0 @@\n-\n-        \/\/ common oids\n-        String rsaOid = \"1.2.840.113549.1.1\";\n-        List<String> rsaAliases = createAliasesWithOid(rsaOid);\n-        List<String> rsapssAliases = createAliasesWithOid(rsaOid + \".10\");\n-        String sha1withRSAOid2 = \"1.3.14.3.2.29\";\n-\n@@ -65,1 +65,1 @@\n-                rsaAliases, null);\n+                getAliases(\"PKCS1\"), null);\n@@ -68,28 +68,19 @@\n-                rsaAliases, null);\n-        add(p, \"Signature\", \"MD2withRSA\",\n-                \"sun.security.rsa.RSASignature$MD2withRSA\",\n-                createAliasesWithOid(rsaOid + \".2\"), attrs);\n-        add(p, \"Signature\", \"MD5withRSA\",\n-                \"sun.security.rsa.RSASignature$MD5withRSA\",\n-                createAliasesWithOid(rsaOid + \".4\"), attrs);\n-        add(p, \"Signature\", \"SHA1withRSA\",\n-                \"sun.security.rsa.RSASignature$SHA1withRSA\",\n-                createAliasesWithOid(rsaOid + \".5\", sha1withRSAOid2), attrs);\n-        add(p, \"Signature\", \"SHA224withRSA\",\n-                \"sun.security.rsa.RSASignature$SHA224withRSA\",\n-                createAliasesWithOid(rsaOid + \".14\"), attrs);\n-        add(p, \"Signature\", \"SHA256withRSA\",\n-                \"sun.security.rsa.RSASignature$SHA256withRSA\",\n-                createAliasesWithOid(rsaOid + \".11\"), attrs);\n-        add(p, \"Signature\", \"SHA384withRSA\",\n-                \"sun.security.rsa.RSASignature$SHA384withRSA\",\n-                createAliasesWithOid(rsaOid + \".12\"), attrs);\n-        add(p, \"Signature\", \"SHA512withRSA\",\n-                \"sun.security.rsa.RSASignature$SHA512withRSA\",\n-                createAliasesWithOid(rsaOid + \".13\"), attrs);\n-        add(p, \"Signature\", \"SHA512\/224withRSA\",\n-                \"sun.security.rsa.RSASignature$SHA512_224withRSA\",\n-                createAliasesWithOid(rsaOid + \".15\"), attrs);\n-        add(p, \"Signature\", \"SHA512\/256withRSA\",\n-                \"sun.security.rsa.RSASignature$SHA512_256withRSA\",\n-                createAliasesWithOid(rsaOid + \".16\"), attrs);\n+                getAliases(\"PKCS1\"), null);\n+        addA(p, \"Signature\", \"MD2withRSA\",\n+                \"sun.security.rsa.RSASignature$MD2withRSA\", attrs);\n+        addA(p, \"Signature\", \"MD5withRSA\",\n+                \"sun.security.rsa.RSASignature$MD5withRSA\", attrs);\n+        addA(p, \"Signature\", \"SHA1withRSA\",\n+                \"sun.security.rsa.RSASignature$SHA1withRSA\", attrs);\n+        addA(p, \"Signature\", \"SHA224withRSA\",\n+                \"sun.security.rsa.RSASignature$SHA224withRSA\", attrs);\n+        addA(p, \"Signature\", \"SHA256withRSA\",\n+                \"sun.security.rsa.RSASignature$SHA256withRSA\", attrs);\n+        addA(p, \"Signature\", \"SHA384withRSA\",\n+                \"sun.security.rsa.RSASignature$SHA384withRSA\", attrs);\n+        addA(p, \"Signature\", \"SHA512withRSA\",\n+                \"sun.security.rsa.RSASignature$SHA512withRSA\", attrs);\n+        addA(p, \"Signature\", \"SHA512\/224withRSA\",\n+                \"sun.security.rsa.RSASignature$SHA512_224withRSA\", attrs);\n+        addA(p, \"Signature\", \"SHA512\/256withRSA\",\n+                \"sun.security.rsa.RSASignature$SHA512_256withRSA\", attrs);\n@@ -97,12 +88,8 @@\n-        add(p, \"KeyFactory\", \"RSASSA-PSS\",\n-                \"sun.security.rsa.RSAKeyFactory$PSS\",\n-                rsapssAliases, null);\n-        add(p, \"KeyPairGenerator\", \"RSASSA-PSS\",\n-                \"sun.security.rsa.RSAKeyPairGenerator$PSS\",\n-                rsapssAliases, null);\n-        add(p, \"Signature\", \"RSASSA-PSS\",\n-                \"sun.security.rsa.RSAPSSSignature\",\n-                rsapssAliases, attrs);\n-        add(p, \"AlgorithmParameters\", \"RSASSA-PSS\",\n-                \"sun.security.rsa.PSSParameters\",\n-                rsapssAliases, null);\n+        addA(p, \"KeyFactory\", \"RSASSA-PSS\",\n+                \"sun.security.rsa.RSAKeyFactory$PSS\", attrs);\n+        addA(p, \"KeyPairGenerator\", \"RSASSA-PSS\",\n+                \"sun.security.rsa.RSAKeyPairGenerator$PSS\", attrs);\n+        addA(p, \"Signature\", \"RSASSA-PSS\",\n+                \"sun.security.rsa.RSAPSSSignature\", attrs);\n+        addA(p, \"AlgorithmParameters\", \"RSASSA-PSS\",\n+                \"sun.security.rsa.PSSParameters\", attrs);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/SunRsaSignEntries.java","additions":38,"deletions":51,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-import static sun.security.provider.SunEntries.createAliases;\n+import static sun.security.util.SecurityProviderConstants.*;\n@@ -164,2 +164,2 @@\n-            List<String> aliases, HashMap<String, String> attrs) {\n-        putService(new Provider.Service(this, type, algo, cn, aliases, attrs));\n+            List<String> a, HashMap<String, String> attrs) {\n+        putService(new Provider.Service(this, type, algo, cn, a, attrs));\n@@ -183,1 +183,1 @@\n-            createAliases(\"PKIX\"), null);\n+            List.of(\"PKIX\"), null);\n@@ -189,1 +189,1 @@\n-            createAliases(\"SunPKIX\", \"X509\", \"X.509\"), null);\n+           List.of(\"SunPKIX\", \"X509\", \"X.509\"), null);\n@@ -193,1 +193,1 @@\n-            (isfips? null : createAliases(\"SSLv3\")), null);\n+            (isfips? null : List.of(\"SSLv3\")), null);\n@@ -202,1 +202,1 @@\n-            (isfips? null : createAliases(\"SSL\")), null);\n+            (isfips? null : List.of(\"SSL\")), null);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SunJSSE.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -524,2 +525,4 @@\n-        CLIENT(new HashSet<String>(Arrays.asList(new String[] {\n-            \"2.5.29.37.0\", \"1.3.6.1.5.5.7.3.2\" }))),\n+        CLIENT(new HashSet<String>(List.of(\n+            KnownOIDs.anyExtendedKeyUsage.value(),\n+            KnownOIDs.clientAuth.value()\n+        ))),\n@@ -529,3 +532,6 @@\n-        SERVER(new HashSet<String>(Arrays.asList(new String[] {\n-            \"2.5.29.37.0\", \"1.3.6.1.5.5.7.3.1\", \"2.16.840.1.113730.4.1\",\n-            \"1.3.6.1.4.1.311.10.3.3\" })));\n+        SERVER(new HashSet<String>(List.of(\n+            KnownOIDs.anyExtendedKeyUsage.value(),\n+            KnownOIDs.serverAuth.value(),\n+            KnownOIDs.NETSCAPE_ExportApproved.value(),\n+            KnownOIDs.MICROSOFT_ExportApproved.value()\n+        )));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509KeyManagerImpl.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,1 +166,1 @@\n-            request.putOID(new ObjectIdentifier(policyId));\n+            request.putOID(ObjectIdentifier.of(policyId));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/timestamp\/TSRequest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4280,0 +4280,17 @@\n+    \/**\n+     * Match a command with a command set. The match can be exact, or\n+     * partial, or case-insensitive.\n+     *\n+     * @param s the command provided by user\n+     * @param list the legal command set represented by KnownOIDs enums.\n+     * @return the position of a single match, or -1 if none matched\n+     * @throws Exception if s is ambiguous\n+     *\/\n+    private static int oneOf(String s, KnownOIDs... list) throws Exception {\n+        String[] convertedList = new String[list.length];\n+        for (int i = 0; i < list.length; i++) {\n+            convertedList[i] = list[i].stdName();\n+        }\n+        return oneOf(s, convertedList);\n+    }\n+\n@@ -4398,1 +4415,1 @@\n-            default: return new ObjectIdentifier(type);\n+            default: return ObjectIdentifier.of(type);\n@@ -4619,0 +4636,9 @@\n+                            KnownOIDs[] choices = {\n+                                    KnownOIDs.anyExtendedKeyUsage,\n+                                    KnownOIDs.serverAuth,\n+                                    KnownOIDs.clientAuth,\n+                                    KnownOIDs.codeSigning,\n+                                    KnownOIDs.emailProtection,\n+                                    KnownOIDs.KP_TimeStamping,\n+                                    KnownOIDs.OCSPSigning\n+                            };\n@@ -4620,23 +4646,10 @@\n-                                int p = oneOf(s,\n-                                        \"anyExtendedKeyUsage\",\n-                                        \"serverAuth\",       \/\/1\n-                                        \"clientAuth\",       \/\/2\n-                                        \"codeSigning\",      \/\/3\n-                                        \"emailProtection\",  \/\/4\n-                                        \"\",                 \/\/5\n-                                        \"\",                 \/\/6\n-                                        \"\",                 \/\/7\n-                                        \"timeStamping\",     \/\/8\n-                                        \"OCSPSigning\"       \/\/9\n-                                       );\n-                                if (p < 0) {\n-                                    try {\n-                                        v.add(new ObjectIdentifier(s));\n-                                    } catch (Exception e) {\n-                                        throw new Exception(rb.getString(\n-                                                \"Unknown.extendedkeyUsage.type.\") + s);\n-                                    }\n-                                } else if (p == 0) {\n-                                    v.add(new ObjectIdentifier(\"2.5.29.37.0\"));\n-                                } else {\n-                                    v.add(new ObjectIdentifier(\"1.3.6.1.5.5.7.3.\" + p));\n+                                int p = oneOf(s, choices);\n+                                String o = s;\n+                                if (p >= 0) {\n+                                    o = choices[p].value();\n+                                }\n+                                try {\n+                                    v.add(ObjectIdentifier.of(o));\n+                                } catch (Exception e) {\n+                                    throw new Exception(rb.getString(\n+                                            \"Unknown.extendedkeyUsage.type.\") + s);\n@@ -4697,8 +4710,7 @@\n-                                int p = oneOf(m,\n-                                        \"\",\n-                                        \"ocsp\",         \/\/1\n-                                        \"caIssuers\",    \/\/2\n-                                        \"timeStamping\", \/\/3\n-                                        \"\",\n-                                        \"caRepository\"  \/\/5\n-                                        );\n+                                KnownOIDs[] choices = {\n+                                    KnownOIDs.OCSP,\n+                                    KnownOIDs.caIssuers,\n+                                    KnownOIDs.AD_TimeStamping,\n+                                    KnownOIDs.caRepository\n+                                };\n+                                int p = oneOf(m, choices);\n@@ -4706,1 +4718,3 @@\n-                                if (p < 0) {\n+                                if (p >= 0) {\n+                                    oid = ObjectIdentifier.of(choices[p]);\n+                                } else {\n@@ -4708,1 +4722,1 @@\n-                                        oid = new ObjectIdentifier(m);\n+                                        oid = ObjectIdentifier.of(m);\n@@ -4713,2 +4727,0 @@\n-                                } else {\n-                                    oid = new ObjectIdentifier(\"1.3.6.1.5.5.7.48.\" + p);\n@@ -4751,1 +4763,1 @@\n-                        ObjectIdentifier oid = new ObjectIdentifier(name);\n+                        ObjectIdentifier oid = ObjectIdentifier.of(name);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":49,"deletions":37,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ConstraintsParameters.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.util.regex.Pattern;\n@@ -57,2 +56,0 @@\n-    public static final String SPLIT_PATTERN = \",|\\\\[|\\\\]\";\n-\n@@ -120,3 +117,2 @@\n-    private static void add(String name, String soid, int type, String sfield,\n-            String a, String b, String x, String y, String n, int h,\n-            Pattern nameSplitPattern) {\n+    private static void add(KnownOIDs o, int type, String sfield,\n+            String a, String b, String x, String y, String n, int h) {\n@@ -136,3 +132,4 @@\n-        NamedCurve params = new NamedCurve(name, soid, curve, g, bi(n), h);\n-        if (oidMap.put(soid, params) != null) {\n-            throw new RuntimeException(\"Duplication oid: \" + soid);\n+        String oid = o.value();\n+        NamedCurve params = new NamedCurve(o, curve, g, bi(n), h);\n+        if (oidMap.put(oid, params) != null) {\n+            throw new RuntimeException(\"Duplication oid: \" + oid);\n@@ -141,4 +138,4 @@\n-        String[] commonNames = nameSplitPattern.split(name);\n-        for (String commonName : commonNames) {\n-            if (nameMap.put(commonName.trim(), params) != null) {\n-                throw new RuntimeException(\"Duplication name: \" + commonName);\n+        for (String cn : params.getNameAndAliases()) {\n+            if (nameMap.put(cn.trim(),\n+                        params) != null) {\n+                throw new RuntimeException(\"Duplication name: \" + cn);\n@@ -156,19 +153,0 @@\n-    private static class Holder {\n-        private static final Pattern nameSplitPattern = Pattern.compile(\n-                SPLIT_PATTERN);\n-    }\n-\n-    \/\/ Return all the names the EC curve could be using.\n-    static String[] getNamesByOID(String oid) {\n-        NamedCurve nc = oidMap.get(oid);\n-        if (nc == null) {\n-            return new String[0];\n-        }\n-        String[] list = Holder.nameSplitPattern.split(nc.getName());\n-        int i = 0;\n-        do {\n-            list[i] = list[i].trim();\n-        } while (++i < list.length);\n-        return list;\n-    }\n-\n@@ -176,2 +154,0 @@\n-        Pattern nameSplitPattern = Holder.nameSplitPattern;\n-\n@@ -179,1 +155,1 @@\n-        add(\"secp112r1\", \"1.3.132.0.6\", P,\n+        add(KnownOIDs.secp112r1, P,\n@@ -186,1 +162,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -188,1 +164,1 @@\n-        add(\"secp112r2\", \"1.3.132.0.7\", P,\n+        add(KnownOIDs.secp112r2, P,\n@@ -195,1 +171,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -197,1 +173,1 @@\n-        add(\"secp128r1\", \"1.3.132.0.28\", P,\n+        add(KnownOIDs.secp128r1, P,\n@@ -204,1 +180,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -206,1 +182,1 @@\n-        add(\"secp128r2\", \"1.3.132.0.29\", P,\n+        add(KnownOIDs.secp128r2, P,\n@@ -213,1 +189,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -215,1 +191,1 @@\n-        add(\"secp160k1\", \"1.3.132.0.9\", P,\n+        add(KnownOIDs.secp160k1, P,\n@@ -222,1 +198,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -224,1 +200,1 @@\n-        add(\"secp160r1\", \"1.3.132.0.8\", P,\n+        add(KnownOIDs.secp160r1, P,\n@@ -231,1 +207,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -233,1 +209,1 @@\n-        add(\"secp160r2\", \"1.3.132.0.30\", P,\n+        add(KnownOIDs.secp160r2, P,\n@@ -240,1 +216,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -242,1 +218,1 @@\n-        add(\"secp192k1\", \"1.3.132.0.31\", P,\n+        add(KnownOIDs.secp192k1, P,\n@@ -249,1 +225,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -251,1 +227,1 @@\n-        add(\"secp192r1 [NIST P-192, X9.62 prime192v1]\", \"1.2.840.10045.3.1.1\", PD,\n+        add(KnownOIDs.secp192r1, PD,\n@@ -258,1 +234,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -260,1 +236,1 @@\n-        add(\"secp224k1\", \"1.3.132.0.32\", P,\n+        add(KnownOIDs.secp224k1, P,\n@@ -267,1 +243,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -269,1 +245,1 @@\n-        add(\"secp224r1 [NIST P-224]\", \"1.3.132.0.33\", PD,\n+        add(KnownOIDs.secp224r1, PD,\n@@ -276,1 +252,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -278,1 +254,1 @@\n-        add(\"secp256k1\", \"1.3.132.0.10\", P,\n+        add(KnownOIDs.secp256k1, P,\n@@ -285,1 +261,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -287,1 +263,1 @@\n-        add(\"secp256r1 [NIST P-256, X9.62 prime256v1]\", \"1.2.840.10045.3.1.7\", PD,\n+        add(KnownOIDs.secp256r1, PD,\n@@ -294,1 +270,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -296,1 +272,1 @@\n-        add(\"secp384r1 [NIST P-384]\", \"1.3.132.0.34\", PD,\n+        add(KnownOIDs.secp384r1, PD,\n@@ -303,1 +279,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -305,1 +281,1 @@\n-        add(\"secp521r1 [NIST P-521]\", \"1.3.132.0.35\", PD,\n+        add(KnownOIDs.secp521r1, PD,\n@@ -312,1 +288,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -315,1 +291,1 @@\n-        add(\"X9.62 prime192v2\", \"1.2.840.10045.3.1.2\", P,\n+        add(KnownOIDs.prime192v2, P,\n@@ -322,1 +298,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -324,1 +300,1 @@\n-        add(\"X9.62 prime192v3\", \"1.2.840.10045.3.1.3\", P,\n+        add(KnownOIDs.prime192v3, P,\n@@ -331,1 +307,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -333,1 +309,1 @@\n-        add(\"X9.62 prime239v1\", \"1.2.840.10045.3.1.4\", P,\n+        add(KnownOIDs.prime239v1, P,\n@@ -340,1 +316,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -342,1 +318,1 @@\n-        add(\"X9.62 prime239v2\", \"1.2.840.10045.3.1.5\", P,\n+        add(KnownOIDs.prime239v2, P,\n@@ -349,1 +325,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -351,1 +327,1 @@\n-        add(\"X9.62 prime239v3\", \"1.2.840.10045.3.1.6\", P,\n+        add(KnownOIDs.prime239v3, P,\n@@ -358,1 +334,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -361,1 +337,1 @@\n-        add(\"sect113r1\", \"1.3.132.0.4\", B,\n+        add(KnownOIDs.sect113r1, B,\n@@ -368,1 +344,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -370,1 +346,1 @@\n-        add(\"sect113r2\", \"1.3.132.0.5\", B,\n+        add(KnownOIDs.sect113r2, B,\n@@ -377,1 +353,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -379,1 +355,1 @@\n-        add(\"sect131r1\", \"1.3.132.0.22\", B,\n+        add(KnownOIDs.sect131r1, B,\n@@ -386,1 +362,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -388,1 +364,1 @@\n-        add(\"sect131r2\", \"1.3.132.0.23\", B,\n+        add(KnownOIDs.sect131r2, B,\n@@ -395,1 +371,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -397,1 +373,1 @@\n-        add(\"sect163k1 [NIST K-163]\", \"1.3.132.0.1\", BD,\n+        add(KnownOIDs.sect163k1, BD,\n@@ -404,1 +380,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -406,1 +382,1 @@\n-        add(\"sect163r1\", \"1.3.132.0.2\", B,\n+        add(KnownOIDs.sect163r1, B,\n@@ -413,1 +389,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -415,1 +391,1 @@\n-        add(\"sect163r2 [NIST B-163]\", \"1.3.132.0.15\", BD,\n+        add(KnownOIDs.sect163r2, BD,\n@@ -422,1 +398,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -424,1 +400,1 @@\n-        add(\"sect193r1\", \"1.3.132.0.24\", B,\n+        add(KnownOIDs.sect193r1, B,\n@@ -431,1 +407,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -433,1 +409,1 @@\n-        add(\"sect193r2\", \"1.3.132.0.25\", B,\n+        add(KnownOIDs.sect193r2, B,\n@@ -440,1 +416,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -442,1 +418,1 @@\n-        add(\"sect233k1 [NIST K-233]\", \"1.3.132.0.26\", BD,\n+        add(KnownOIDs.sect233k1, BD,\n@@ -449,1 +425,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -451,1 +427,1 @@\n-        add(\"sect233r1 [NIST B-233]\", \"1.3.132.0.27\", B,\n+        add(KnownOIDs.sect233r1, B,\n@@ -458,1 +434,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -460,1 +436,1 @@\n-        add(\"sect239k1\", \"1.3.132.0.3\", B,\n+        add(KnownOIDs.sect239k1, B,\n@@ -467,1 +443,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -469,1 +445,1 @@\n-        add(\"sect283k1 [NIST K-283]\", \"1.3.132.0.16\", BD,\n+        add(KnownOIDs.sect283k1, BD,\n@@ -476,1 +452,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -478,1 +454,1 @@\n-        add(\"sect283r1 [NIST B-283]\", \"1.3.132.0.17\", B,\n+        add(KnownOIDs.sect283r1, B,\n@@ -485,1 +461,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -487,1 +463,1 @@\n-        add(\"sect409k1 [NIST K-409]\", \"1.3.132.0.36\", BD,\n+        add(KnownOIDs.sect409k1, BD,\n@@ -494,1 +470,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -496,1 +472,1 @@\n-        add(\"sect409r1 [NIST B-409]\", \"1.3.132.0.37\", B,\n+        add(KnownOIDs.sect409r1, B,\n@@ -503,1 +479,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -505,1 +481,1 @@\n-        add(\"sect571k1 [NIST K-571]\", \"1.3.132.0.38\", BD,\n+        add(KnownOIDs.sect571k1, BD,\n@@ -512,1 +488,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -514,1 +490,1 @@\n-        add(\"sect571r1 [NIST B-571]\", \"1.3.132.0.39\", B,\n+        add(KnownOIDs.sect571r1, B,\n@@ -521,1 +497,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -524,1 +500,1 @@\n-        add(\"X9.62 c2tnb191v1\", \"1.2.840.10045.3.0.5\", B,\n+        add(KnownOIDs.c2tnb191v1, B,\n@@ -531,1 +507,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -533,1 +509,1 @@\n-        add(\"X9.62 c2tnb191v2\", \"1.2.840.10045.3.0.6\", B,\n+        add(KnownOIDs.c2tnb191v2, B,\n@@ -540,1 +516,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -542,1 +518,1 @@\n-        add(\"X9.62 c2tnb191v3\", \"1.2.840.10045.3.0.7\", B,\n+        add(KnownOIDs.c2tnb191v3, B,\n@@ -549,1 +525,1 @@\n-            6, nameSplitPattern);\n+            6);\n@@ -551,1 +527,1 @@\n-        add(\"X9.62 c2tnb239v1\", \"1.2.840.10045.3.0.11\", B,\n+        add(KnownOIDs.c2tnb239v1, B,\n@@ -558,1 +534,1 @@\n-            4, nameSplitPattern);\n+            4);\n@@ -560,1 +536,1 @@\n-        add(\"X9.62 c2tnb239v2\", \"1.2.840.10045.3.0.12\", B,\n+        add(KnownOIDs.c2tnb239v2, B,\n@@ -567,1 +543,1 @@\n-            6, nameSplitPattern);\n+            6);\n@@ -569,1 +545,1 @@\n-        add(\"X9.62 c2tnb239v3\", \"1.2.840.10045.3.0.13\", B,\n+        add(KnownOIDs.c2tnb239v3, B,\n@@ -576,1 +552,1 @@\n-            0xA, nameSplitPattern);\n+            0xA);\n@@ -578,1 +554,1 @@\n-        add(\"X9.62 c2tnb359v1\", \"1.2.840.10045.3.0.18\", B,\n+        add(KnownOIDs.c2tnb359v1, B,\n@@ -585,1 +561,1 @@\n-            0x4C, nameSplitPattern);\n+            0x4C);\n@@ -587,1 +563,1 @@\n-        add(\"X9.62 c2tnb431r1\", \"1.2.840.10045.3.0.20\", B,\n+        add(KnownOIDs.c2tnb431r1, B,\n@@ -594,1 +570,1 @@\n-            0x2760, nameSplitPattern);\n+            0x2760);\n@@ -602,1 +578,1 @@\n-        add(\"X9.62 c2pnb163v1\", \"1.2.840.10045.3.0.1\", B,\n+        add(KnownOIDs.c2pnb163v1, B,\n@@ -609,1 +585,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -611,1 +587,1 @@\n-        add(\"X9.62 c2pnb163v2\", \"1.2.840.10045.3.0.2\", B,\n+        add(KnownOIDs.c2pnb163v2, B,\n@@ -618,1 +594,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -620,1 +596,1 @@\n-        add(\"X9.62 c2pnb163v3\", \"1.2.840.10045.3.0.3\", B,\n+        add(KnownOIDs.c2pnb163v3, B,\n@@ -627,1 +603,1 @@\n-            2, nameSplitPattern);\n+            2);\n@@ -629,1 +605,1 @@\n-        add(\"X9.62 c2pnb176w1\", \"1.2.840.10045.3.0.4\", B,\n+        add(KnownOIDs.c2pnb176w1, B,\n@@ -636,1 +612,1 @@\n-            0xFF6E, nameSplitPattern);\n+            0xFF6E);\n@@ -638,1 +614,1 @@\n-        add(\"X9.62 c2pnb208w1\", \"1.2.840.10045.3.0.10\", B,\n+        add(KnownOIDs.c2pnb208w1, B,\n@@ -645,1 +621,1 @@\n-            0xFE48, nameSplitPattern);\n+            0xFE48);\n@@ -647,1 +623,1 @@\n-        add(\"X9.62 c2pnb272w1\", \"1.2.840.10045.3.0.16\", B,\n+        add(KnownOIDs.c2pnb272w1, B,\n@@ -654,1 +630,1 @@\n-            0xFF06, nameSplitPattern);\n+            0xFF06);\n@@ -656,1 +632,1 @@\n-        add(\"X9.62 c2pnb304w1\", \"1.2.840.10045.3.0.17\", B,\n+        add(KnownOIDs.c2pnb304w1, B,\n@@ -663,1 +639,1 @@\n-            0xFE2E, nameSplitPattern);\n+            0xFE2E);\n@@ -665,1 +641,1 @@\n-        add(\"X9.62 c2pnb368w1\", \"1.2.840.10045.3.0.19\", B,\n+        add(KnownOIDs.c2pnb368w1, B,\n@@ -672,1 +648,1 @@\n-            0xFF70, nameSplitPattern);\n+            0xFF70);\n@@ -680,1 +656,1 @@\n-        add(\"brainpoolP160r1\", \"1.3.36.3.3.2.8.1.1.1\", P,\n+        add(KnownOIDs.brainpoolP160r1, P,\n@@ -687,1 +663,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -689,1 +665,1 @@\n-        add(\"brainpoolP192r1\", \"1.3.36.3.3.2.8.1.1.3\", P,\n+        add(KnownOIDs.brainpoolP192r1, P,\n@@ -696,1 +672,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -698,1 +674,1 @@\n-        add(\"brainpoolP224r1\", \"1.3.36.3.3.2.8.1.1.5\", P,\n+        add(KnownOIDs.brainpoolP224r1, P,\n@@ -705,1 +681,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -707,1 +683,1 @@\n-        add(\"brainpoolP256r1\", \"1.3.36.3.3.2.8.1.1.7\", P,\n+        add(KnownOIDs.brainpoolP256r1, P,\n@@ -714,1 +690,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -716,1 +692,1 @@\n-        add(\"brainpoolP320r1\", \"1.3.36.3.3.2.8.1.1.9\", P,\n+        add(KnownOIDs.brainpoolP320r1, P,\n@@ -723,1 +699,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -725,1 +701,1 @@\n-        add(\"brainpoolP384r1\", \"1.3.36.3.3.2.8.1.1.11\", P,\n+        add(KnownOIDs.brainpoolP384r1, P,\n@@ -732,1 +708,1 @@\n-            1, nameSplitPattern);\n+            1);\n@@ -734,1 +710,1 @@\n-        add(\"brainpoolP512r1\", \"1.3.36.3.3.2.8.1.1.13\", P,\n+        add(KnownOIDs.brainpoolP512r1, P,\n@@ -741,1 +717,1 @@\n-            1, nameSplitPattern);\n+            1);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/CurveDB.java","additions":133,"deletions":157,"binary":false,"changes":290,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-                               : Arrays.asList(CurveDB.getNamesByOID(nc.getObjectId())));\n+                               : Arrays.asList(nc.getNameAndAliases()));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DisabledAlgorithmConstraints.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-\n+import java.util.Arrays;\n@@ -42,2 +42,2 @@\n-    \/\/ friendly name for toString() output\n-    private final String name;\n+    \/\/ friendly names with stdName followed by aliases\n+    private final String[] nameAndAliases;\n@@ -51,1 +51,1 @@\n-    NamedCurve(String name, String oid, EllipticCurve curve,\n+    NamedCurve(KnownOIDs ko, EllipticCurve curve,\n@@ -54,2 +54,4 @@\n-        this.name = name;\n-        this.oid = oid;\n+        String[] aliases = ko.aliases();\n+        this.nameAndAliases = new String[aliases.length + 1];\n+        nameAndAliases[0] = ko.stdName();\n+        System.arraycopy(aliases, 0, nameAndAliases, 1, aliases.length);\n@@ -57,1 +59,1 @@\n-        DerOutputStream out = new DerOutputStream();\n+        this.oid = ko.value();\n@@ -59,0 +61,1 @@\n+        DerOutputStream out = new DerOutputStream();\n@@ -60,1 +63,1 @@\n-            out.putOID(new ObjectIdentifier(oid));\n+            out.putOID(ObjectIdentifier.of(ko));\n@@ -64,1 +67,0 @@\n-\n@@ -68,2 +70,3 @@\n-    public String getName() {\n-        return name;\n+    \/\/ returns the curve's standard name followed by its aliases\n+    public String[] getNameAndAliases() {\n+        return nameAndAliases;\n@@ -81,1 +84,12 @@\n-        return name + \" (\" + oid + \")\";\n+        StringBuilder sb = new StringBuilder(nameAndAliases[0]);\n+        if (nameAndAliases.length > 1) {\n+            sb.append(\" [\");\n+            int j = 1;\n+            while (j < nameAndAliases.length - 1) {\n+                sb.append(nameAndAliases[j++]);\n+                sb.append(',');\n+            }\n+            sb.append(nameAndAliases[j] + \"]\");\n+        }\n+        sb.append(\" (\" + oid + \")\");\n+        return sb.toString();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/NamedCurve.java","additions":27,"deletions":13,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -54,3 +54,1 @@\n-public final\n-class ObjectIdentifier implements Serializable\n-{\n+public final class ObjectIdentifier implements Serializable {\n@@ -76,1 +74,0 @@\n-\n@@ -122,0 +119,1 @@\n+\n@@ -166,1 +164,2 @@\n-        static HugeOidNotSupportedByOldJDK theOne = new HugeOidNotSupportedByOldJDK();\n+        static HugeOidNotSupportedByOldJDK theOne =\n+                new HugeOidNotSupportedByOldJDK();\n@@ -173,2 +172,1 @@\n-    public ObjectIdentifier (String oid) throws IOException\n-    {\n+    private ObjectIdentifier(String oid) throws IOException {\n@@ -270,2 +268,1 @@\n-    public ObjectIdentifier (DerInputStream in) throws IOException\n-    {\n+    public ObjectIdentifier(DerInputStream in) throws IOException {\n@@ -284,1 +281,1 @@\n-        type_id = (byte) in.getByte ();\n+        type_id = (byte)in.getByte();\n@@ -309,2 +306,1 @@\n-    ObjectIdentifier (DerInputBuffer buf) throws IOException\n-    {\n+    ObjectIdentifier(DerInputBuffer buf) throws IOException {\n@@ -364,0 +360,5 @@\n+    \/**\n+     * Returns an ObjectIdentifier instance for the specific String.\n+     *\n+     * If the String is not a valid OID string, an IOException is thrown.\n+     *\/\n@@ -396,2 +397,1 @@\n-    void encode (DerOutputStream out) throws IOException\n-    {\n+    void encode(DerOutputStream out) throws IOException {\n@@ -438,1 +438,2 @@\n-                    BigInteger big = new BigInteger(1, pack(encoding, fromPos, i-fromPos+1, 7, 8));\n+                    BigInteger big = new BigInteger(1, pack(encoding,\n+                            fromPos, i-fromPos+1, 7, 8));\n@@ -441,2 +442,4 @@\n-                        BigInteger second = big.subtract(BigInteger.valueOf(80));\n-                        if (second.compareTo(BigInteger.valueOf(Integer.MAX_VALUE)) == 1) {\n+                        BigInteger second =\n+                                big.subtract(BigInteger.valueOf(80));\n+                        if (second.compareTo(\n+                                BigInteger.valueOf(Integer.MAX_VALUE)) == 1) {\n@@ -448,1 +451,2 @@\n-                        if (big.compareTo(BigInteger.valueOf(Integer.MAX_VALUE)) == 1) {\n+                        if (big.compareTo(\n+                                BigInteger.valueOf(Integer.MAX_VALUE)) == 1) {\n@@ -503,1 +507,2 @@\n-                        BigInteger big = new BigInteger(1, pack(encoding, fromPos, i-fromPos+1, 7, 8));\n+                        BigInteger big = new BigInteger(\n+                                1, pack(encoding, fromPos, i-fromPos+1, 7, 8));\n@@ -544,1 +549,1 @@\n-     * number is defined as the number of useful bits (NUB) for the array. All the\n+     * number is defined as the number of useful bits (NUB) for the array. All\n@@ -566,1 +571,2 @@\n-    private static byte[] pack(byte[] in, int ioffset, int ilength, int iw, int ow) {\n+    private static byte[] pack(byte[] in,\n+            int ioffset, int ilength, int iw, int ow) {\n@@ -588,0 +594,1 @@\n+\n@@ -589,5 +596,5 @@\n-            out[opos\/ow] |=                         \/\/ paste!\n-                (((in[ioffset+ipos\/iw]+256)         \/\/ locate the byte (+256 so that it's never negative)\n-                    >> (iw-ipos%iw-count))          \/\/ move to the end of a byte\n-                        & ((1 << (count))-1))       \/\/ zero out all other bits\n-                            << (ow-opos%ow-count);  \/\/ move to the output position\n+            out[opos\/ow] |=                     \/\/ paste!\n+                (((in[ioffset+ipos\/iw]+256)     \/\/ locate the byte (+256 so that it's never negative)\n+                    >> (iw-ipos%iw-count)) &    \/\/ move to the end of a byte\n+                  ((1 << (count))-1))           \/\/ zero out all other bits\n+                        << (ow-opos%ow-count);  \/\/ move to the output position\n@@ -609,1 +616,2 @@\n-    private static int pack7Oid(byte[] in, int ioffset, int ilength, byte[] out, int ooffset) {\n+    private static int pack7Oid(byte[] in,\n+            int ioffset, int ilength, byte[] out, int ooffset) {\n@@ -618,1 +626,2 @@\n-        System.arraycopy(pack, firstNonZero, out, ooffset, pack.length-firstNonZero);\n+        System.arraycopy(pack, firstNonZero,\n+                out, ooffset, pack.length-firstNonZero);\n@@ -629,1 +638,2 @@\n-    private static int pack8(byte[] in, int ioffset, int ilength, byte[] out, int ooffset) {\n+    private static int pack8(byte[] in,\n+            int ioffset, int ilength, byte[] out, int ooffset) {\n@@ -637,1 +647,2 @@\n-        System.arraycopy(pack, firstNonZero, out, ooffset, pack.length-firstNonZero);\n+        System.arraycopy(pack, firstNonZero,\n+                out, ooffset, pack.length-firstNonZero);\n@@ -689,0 +700,1 @@\n+\n@@ -695,0 +707,1 @@\n+\n@@ -701,1 +714,3 @@\n-    private static void checkFirstComponent(BigInteger first) throws IOException {\n+\n+    private static void checkFirstComponent(\n+            BigInteger first) throws IOException {\n@@ -707,1 +722,3 @@\n-    private static void checkSecondComponent(int first, int second) throws IOException {\n+\n+    private static void checkSecondComponent(\n+            int first, int second) throws IOException {\n@@ -713,1 +730,3 @@\n-    private static void checkSecondComponent(int first, BigInteger second) throws IOException {\n+\n+    private static void checkSecondComponent(\n+            int first, BigInteger second) throws IOException {\n@@ -721,0 +740,1 @@\n+\n@@ -727,1 +747,3 @@\n-    private static void checkOtherComponent(int i, BigInteger num) throws IOException {\n+\n+    private static void checkOtherComponent(\n+            int i, BigInteger num) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ObjectIdentifier.java","additions":56,"deletions":34,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.util.*;\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -30,0 +32,1 @@\n+import java.security.ProviderException;\n@@ -38,0 +41,3 @@\n+    \/\/ Cannot create one of these\n+    private SecurityProviderConstants () {}\n+\n@@ -41,2 +47,47 @@\n-    \/\/ Cannot create one of these\n-    private SecurityProviderConstants () {\n+    \/\/ cache for provider aliases; key is the standard algorithm name\n+    \/\/ value is the associated aliases List\n+    private static final ConcurrentHashMap<String, List<String>> aliasesMap;\n+\n+    \/\/ utility method for generating aliases list using the supplied\n+    \/\/ 'oid' and 'extraAliases', then store into \"aliasesMap\" cache under the\n+    \/\/ key 'stdName'\n+    private static List<String> store(String stdName, KnownOIDs oid,\n+            String ... extraAliases) {\n+        List<String> value;\n+        if (oid == null && extraAliases.length != 0) {\n+            value = List.of(extraAliases);\n+        } else {\n+            value = new ArrayList<>();\n+            if (oid != null) {\n+                value.add(\"OID.\" + oid.value());\n+                value.add(oid.value());\n+                String[] knownAliases = oid.aliases();\n+                if (knownAliases != null) {\n+                    for (String ka : knownAliases) {\n+                        value.add(ka);\n+                    }\n+                }\n+            }\n+            for (String ea : extraAliases) {\n+                value.add(ea);\n+            }\n+        }\n+        aliasesMap.put(stdName, value);\n+        return value;\n+    }\n+\n+    \/\/ returns an aliases List for the specified algorithm name o\n+    \/\/ NOTE: exception is thrown if no aliases nor oid found, so\n+    \/\/ only call this method if aliases are expected\n+    public static List<String> getAliases(String o) {\n+        List<String> res = aliasesMap.get(o);\n+        if (res == null) {\n+            KnownOIDs e = KnownOIDs.findMatch(o);\n+            if (e != null) {\n+                return store(o, e);\n+            }\n+            ProviderException pe =\n+                    new ProviderException(\"Cannot find aliases for \" + o);\n+            throw pe;\n+        }\n+        return res;\n@@ -102,0 +153,1 @@\n+\n@@ -172,0 +224,34 @@\n+\n+        \/\/ Set up aliases with default mappings\n+        \/\/ This is needed when the mapping contains non-oid\n+        \/\/ aliases\n+        aliasesMap = new ConcurrentHashMap<>();\n+\n+        store(\"SHA1withDSA\", KnownOIDs.SHA1withDSA,\n+                KnownOIDs.OIW_JDK_SHA1withDSA.value(),\n+                KnownOIDs.OIW_SHA1withDSA.value(),\n+                \"DSA\", \"SHA\/DSA\", \"SHA-1\/DSA\",\n+                \"SHA1\/DSA\", \"SHAwithDSA\", \"DSAWithSHA1\");\n+\n+        store(\"DSA\", KnownOIDs.DSA, KnownOIDs.OIW_DSA.value());\n+\n+        store(\"SHA1withRSA\", KnownOIDs.SHA1withRSA,\n+                KnownOIDs.OIW_SHA1withRSA.value());\n+\n+        store(\"SHA-1\", KnownOIDs.SHA_1);\n+\n+        store(\"PBEWithMD5AndDES\", KnownOIDs.PBEWithMD5AndDES, \"PBE\");\n+\n+        store(\"DiffieHellman\", KnownOIDs.DiffieHellman);\n+\n+        store(\"AES\", KnownOIDs.AES, \"Rijndael\");\n+\n+        store(\"EC\", KnownOIDs.EC, \"EllipticCurve\");\n+\n+        store(\"X.509\", null, \"X509\");\n+        store(\"NONEwithDSA\", null, \"RawDSA\");\n+        store(\"DESede\", null, \"TripleDES\");\n+        store(\"ARCFOUR\", KnownOIDs.ARCFOUR);\n+        \/\/ For backward compatility, refer to PKCS1 mapping for RSA\n+        \/\/ KeyPairGenerator and KeyFactory\n+        store(\"PKCS1\", KnownOIDs.PKCS1, KnownOIDs.RSA.value());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SecurityProviderConstants.java","additions":88,"deletions":2,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-\n+import sun.security.util.KnownOIDs;\n@@ -74,1 +74,2 @@\n-    private static final String OID_EKU_TLS_SERVER = \"1.3.6.1.5.5.7.3.1\";\n+    private static final String OID_EKU_TLS_SERVER =\n+            KnownOIDs.serverAuth.value();\n@@ -76,1 +77,2 @@\n-    private static final String OID_EKU_TLS_CLIENT = \"1.3.6.1.5.5.7.3.2\";\n+    private static final String OID_EKU_TLS_CLIENT =\n+            KnownOIDs.clientAuth.value();\n@@ -78,1 +80,2 @@\n-    private static final String OID_EKU_CODE_SIGNING = \"1.3.6.1.5.5.7.3.3\";\n+    private static final String OID_EKU_CODE_SIGNING =\n+            KnownOIDs.codeSigning.value();\n@@ -80,1 +83,2 @@\n-    private static final String OID_EKU_TIME_STAMPING = \"1.3.6.1.5.5.7.3.8\";\n+    private static final String OID_EKU_TIME_STAMPING =\n+            KnownOIDs.KP_TimeStamping.value();\n@@ -82,1 +86,2 @@\n-    private static final String OID_EKU_ANY_USAGE = \"2.5.29.37.0\";\n+    private static final String OID_EKU_ANY_USAGE =\n+            KnownOIDs.anyExtendedKeyUsage.value();\n@@ -85,1 +90,2 @@\n-    private static final String OID_EKU_NS_SGC = \"2.16.840.1.113730.4.1\";\n+    private static final String OID_EKU_NS_SGC =\n+            KnownOIDs.NETSCAPE_ExportApproved.value();\n@@ -88,1 +94,2 @@\n-    private static final String OID_EKU_MS_SGC = \"1.3.6.1.4.1.311.10.3.3\";\n+    private static final String OID_EKU_MS_SGC =\n+            KnownOIDs.MICROSOFT_ExportApproved.value();\n@@ -91,1 +98,2 @@\n-    private static final String OID_SUBJECT_ALT_NAME = \"2.5.29.17\";\n+    private static final String OID_SUBJECT_ALT_NAME =\n+            KnownOIDs.SubjectAlternativeName.value();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/EndEntityChecker.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -63,1 +64,2 @@\n-    static final String OID_BASIC_CONSTRAINTS = \"2.5.29.19\";\n+    static final String OID_BASIC_CONSTRAINTS =\n+            KnownOIDs.BasicConstraints.value();\n@@ -65,1 +67,2 @@\n-    static final String OID_NETSCAPE_CERT_TYPE = \"2.16.840.1.113730.1.1\";\n+    static final String OID_NETSCAPE_CERT_TYPE =\n+            KnownOIDs.NETSCAPE_CertType.value();\n@@ -67,1 +70,1 @@\n-    static final String OID_KEY_USAGE = \"2.5.29.15\";\n+    static final String OID_KEY_USAGE = KnownOIDs.KeyUsage.value();\n@@ -69,1 +72,2 @@\n-    static final String OID_EXTENDED_KEY_USAGE = \"2.5.29.37\";\n+    static final String OID_EXTENDED_KEY_USAGE =\n+            KnownOIDs.extendedKeyUsage.value();\n@@ -71,1 +75,2 @@\n-    static final String OID_EKU_ANY_USAGE = \"2.5.29.37.0\";\n+    static final String OID_EKU_ANY_USAGE =\n+            KnownOIDs.anyExtendedKeyUsage.value();\n@@ -74,1 +79,1 @@\n-        NetscapeCertTypeExtension.NetscapeCertType_Id;\n+            NetscapeCertTypeExtension.NetscapeCertType_Id;\n@@ -77,1 +82,1 @@\n-                                NetscapeCertTypeExtension.SSL_CA;\n+            NetscapeCertTypeExtension.SSL_CA;\n@@ -80,1 +85,1 @@\n-                                NetscapeCertTypeExtension.OBJECT_SIGNING_CA;\n+            NetscapeCertTypeExtension.OBJECT_SIGNING_CA;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/SimpleValidator.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -1240,1 +1240,1 @@\n-            return new ObjectIdentifier(oidString);\n+            return ObjectIdentifier.of(oidString);\n@@ -1258,1 +1258,1 @@\n-        return new ObjectIdentifier(keyword);\n+        return ObjectIdentifier.of(keyword);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ObjectIdentifier.newInternal(new int[] {1, 3, 6, 1, 5, 5, 7, 48, 1});\n+        ObjectIdentifier.of(KnownOIDs.OCSP);\n@@ -48,1 +48,1 @@\n-        ObjectIdentifier.newInternal(new int[] {1, 3, 6, 1, 5, 5, 7, 48, 2});\n+        ObjectIdentifier.of(KnownOIDs.caIssuers);\n@@ -51,1 +51,1 @@\n-        ObjectIdentifier.newInternal(new int[] {1, 3, 6, 1, 5, 5, 7, 48, 3});\n+        ObjectIdentifier.of(KnownOIDs.AD_TimeStamping);\n@@ -54,1 +54,1 @@\n-        ObjectIdentifier.newInternal(new int[] {1, 3, 6, 1, 5, 5, 7, 48, 5});\n+        ObjectIdentifier.of(KnownOIDs.caRepository);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AccessDescription.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -259,7 +260,7 @@\n-        String algName = nameTable.get(algid);\n-        if (algName != null) {\n-            return algName;\n-        }\n-        if ((params != null) && algid.equals((Object)specifiedWithECDSA_oid)) {\n-            try {\n-                AlgorithmId paramsId =\n+        String oidStr = algid.toString();\n+        \/\/ first check the list of support oids\n+        KnownOIDs o = KnownOIDs.findMatch(oidStr);\n+        if (o == KnownOIDs.SpecifiedSHA2withECDSA) {\n+            if (params != null) {\n+                try {\n+                    AlgorithmId paramsId =\n@@ -267,4 +268,15 @@\n-                String paramsName = paramsId.getName();\n-                algName = makeSigAlg(paramsName, \"EC\");\n-            } catch (IOException e) {\n-                \/\/ ignore\n+                    String paramsName = paramsId.getName();\n+                    return makeSigAlg(paramsName, \"EC\");\n+                } catch (IOException e) {\n+                    \/\/ ignore\n+                }\n+            }\n+        }\n+        if (o != null) {\n+            return o.stdName();\n+        } else {\n+            String n = aliasOidsTable().get(oidStr);\n+            if (n != null) {\n+                return n;\n+            } else {\n+                return algid.toString();\n@@ -273,1 +285,0 @@\n-        return (algName == null) ? algid.toString() : algName;\n@@ -295,1 +306,2 @@\n-        return (encodedParams == null || algid.equals(specifiedWithECDSA_oid))\n+        return (encodedParams == null ||\n+            algid.toString().equals(KnownOIDs.SpecifiedSHA2withECDSA.value()))\n@@ -491,7 +503,2 @@\n-        \/\/ See if algname is in printable OID (\"dot-dot\") notation\n-        if (name.indexOf('.') != -1) {\n-            if (name.startsWith(\"OID.\")) {\n-                return new ObjectIdentifier(name.substring(\"OID.\".length()));\n-            } else {\n-                return new ObjectIdentifier(name);\n-            }\n+        if (name.startsWith(\"OID.\")) {\n+            name = name.substring(\"OID.\".length());\n@@ -500,57 +507,3 @@\n-        \/\/ Digesting algorithms\n-        if (name.equalsIgnoreCase(\"MD5\")) {\n-            return AlgorithmId.MD5_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"MD2\")) {\n-            return AlgorithmId.MD2_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA\") || name.equalsIgnoreCase(\"SHA1\")\n-            || name.equalsIgnoreCase(\"SHA-1\")) {\n-            return AlgorithmId.SHA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA-256\") ||\n-            name.equalsIgnoreCase(\"SHA256\")) {\n-            return AlgorithmId.SHA256_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA-384\") ||\n-            name.equalsIgnoreCase(\"SHA384\")) {\n-            return AlgorithmId.SHA384_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA-512\") ||\n-            name.equalsIgnoreCase(\"SHA512\")) {\n-            return AlgorithmId.SHA512_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA-224\") ||\n-            name.equalsIgnoreCase(\"SHA224\")) {\n-            return AlgorithmId.SHA224_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA-512\/224\") ||\n-            name.equalsIgnoreCase(\"SHA512\/224\")) {\n-            return AlgorithmId.SHA512_224_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA-512\/256\") ||\n-            name.equalsIgnoreCase(\"SHA512\/256\")) {\n-            return AlgorithmId.SHA512_256_oid;\n-        }\n-        \/\/ Various public key algorithms\n-        if (name.equalsIgnoreCase(\"RSA\")) {\n-            return AlgorithmId.RSAEncryption_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"RSASSA-PSS\")) {\n-            return AlgorithmId.RSASSA_PSS_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"RSAES-OAEP\")) {\n-            return AlgorithmId.RSAES_OAEP_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"Diffie-Hellman\")\n-            || name.equalsIgnoreCase(\"DH\")) {\n-            return AlgorithmId.DH_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"DSA\")) {\n-            return AlgorithmId.DSA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"EC\")) {\n-            return EC_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"ECDH\")) {\n-            return AlgorithmId.ECDH_oid;\n+        KnownOIDs k = KnownOIDs.findMatch(name);\n+        if (k != null) {\n+            return ObjectIdentifier.of(k);\n@@ -559,57 +512,11 @@\n-        \/\/ Secret key algorithms\n-        if (name.equalsIgnoreCase(\"AES\")) {\n-            return AlgorithmId.AES_oid;\n-        }\n-\n-        \/\/ Common signature types\n-        if (name.equalsIgnoreCase(\"MD5withRSA\")\n-            || name.equalsIgnoreCase(\"MD5\/RSA\")) {\n-            return AlgorithmId.md5WithRSAEncryption_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"MD2withRSA\")\n-            || name.equalsIgnoreCase(\"MD2\/RSA\")) {\n-            return AlgorithmId.md2WithRSAEncryption_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHAwithDSA\")\n-            || name.equalsIgnoreCase(\"SHA1withDSA\")\n-            || name.equalsIgnoreCase(\"SHA\/DSA\")\n-            || name.equalsIgnoreCase(\"SHA1\/DSA\")\n-            || name.equalsIgnoreCase(\"DSAWithSHA1\")\n-            || name.equalsIgnoreCase(\"DSS\")\n-            || name.equalsIgnoreCase(\"SHA-1\/DSA\")) {\n-            return AlgorithmId.sha1WithDSA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA224WithDSA\")) {\n-            return AlgorithmId.sha224WithDSA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA256WithDSA\")) {\n-            return AlgorithmId.sha256WithDSA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA1WithRSA\")\n-            || name.equalsIgnoreCase(\"SHA1\/RSA\")) {\n-            return AlgorithmId.sha1WithRSAEncryption_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA256WithRSA\")) {\n-            return AlgorithmId.sha256WithRSAEncryption_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA384WithRSA\")) {\n-            return AlgorithmId.sha384WithRSAEncryption_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA512WithRSA\")) {\n-            return AlgorithmId.sha512WithRSAEncryption_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA1withECDSA\")\n-                || name.equalsIgnoreCase(\"ECDSA\")) {\n-            return AlgorithmId.sha1WithECDSA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA224withECDSA\")) {\n-            return AlgorithmId.sha224WithECDSA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA256withECDSA\")) {\n-            return AlgorithmId.sha256WithECDSA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA384withECDSA\")) {\n-            return AlgorithmId.sha384WithECDSA_oid;\n-        }\n-        if (name.equalsIgnoreCase(\"SHA512withECDSA\")) {\n-            return AlgorithmId.sha512WithECDSA_oid;\n+        \/\/ unknown algorithm oids\n+        if (name.indexOf(\".\") == -1) {\n+            \/\/ see if there is a matching oid string alias mapping from\n+            \/\/ 3rd party providers\n+            name = name.toUpperCase(Locale.ENGLISH);\n+            String oidStr = aliasOidsTable().get(name);\n+            if (oidStr != null) {\n+                return ObjectIdentifier.of(oidStr);\n+            } return null;\n+        } else {\n+            return ObjectIdentifier.of(name);\n@@ -617,6 +524,0 @@\n-\n-        return oidTable().get(name.toUpperCase(Locale.ENGLISH));\n-    }\n-\n-    private static ObjectIdentifier oid(int ... values) {\n-        return ObjectIdentifier.newInternal(values);\n@@ -625,2 +526,2 @@\n-    private static volatile Map<String,ObjectIdentifier> oidTable;\n-    private static final Map<ObjectIdentifier,String> nameTable;\n+    \/\/ oid string cache index'ed by algorithm name and oid strings\n+    private static volatile Map<String,String> aliasOidsTable;\n@@ -628,6 +529,5 @@\n-    \/** Returns the oidTable, lazily initializing it on first access. *\/\n-    private static Map<String,ObjectIdentifier> oidTable()\n-        throws IOException {\n-        \/\/ Double checked locking; safe because oidTable is volatile\n-        Map<String,ObjectIdentifier> tab;\n-        if ((tab = oidTable) == null) {\n+    \/\/ returns the aliasOidsTable, lazily initializing it on first access.\n+    private static Map<String,String> aliasOidsTable() {\n+        \/\/ Double checked locking; safe because aliasOidsTable is volatile\n+        Map<String,String> tab = aliasOidsTable;\n+        if (tab == null) {\n@@ -635,2 +535,3 @@\n-                if ((tab = oidTable) == null)\n-                    oidTable = tab = computeOidTable();\n+                if ((tab = aliasOidsTable) == null) {\n+                    aliasOidsTable = tab = collectOIDAliases();\n+                }\n@@ -642,4 +543,18 @@\n-    \/** Collects the algorithm names from the installed providers. *\/\n-    private static HashMap<String,ObjectIdentifier> computeOidTable()\n-        throws IOException {\n-        HashMap<String,ObjectIdentifier> tab = new HashMap<>();\n+    private static boolean isKnownProvider(Provider p) {\n+        String pn = p.getName();\n+        String mn = p.getClass().getModule().getName();\n+        if (pn != null && mn != null) {\n+            return ((mn.equals(\"java.base\") &&\n+                    (pn.equals(\"SUN\") || pn.equals(\"SunRsaSign\") ||\n+                    pn.equals(\"SunJCE\") || pn.equals(\"SunJSSE\"))) ||\n+                (mn.equals(\"jdk.crypto.ec\") && pn.equals(\"SunEC\")) ||\n+                (mn.equals(\"jdk.crypto.mscapi\") && pn.equals(\"SunMSCAPI\")) ||\n+                (mn.equals(\"jdk.crypto.cryptoki\") &&\n+                    pn.startsWith(\"SunPKCS11\")));\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    private static ConcurrentHashMap<String, String> collectOIDAliases() {\n+        ConcurrentHashMap<String, String> t = new ConcurrentHashMap<>();\n@@ -647,0 +562,5 @@\n+            \/\/ skip providers which are already using SecurityProviderConstants\n+            \/\/ and KnownOIDs\n+            if (isKnownProvider(provider)) {\n+                continue;\n+            }\n@@ -652,1 +572,1 @@\n-                    (index=upperCaseAlias.indexOf(\"OID.\", 0)) != -1) {\n+                    (index = upperCaseAlias.indexOf(\"OID.\", 0)) != -1) {\n@@ -658,1 +578,1 @@\n-                    String oidString = alias.substring(index);\n+                    String ostr = alias.substring(index);\n@@ -663,3 +583,8 @@\n-                    if (stdAlgName != null &&\n-                        tab.get(stdAlgName) == null) {\n-                        tab.put(stdAlgName, new ObjectIdentifier(oidString));\n+                    \/\/ add the name->oid and oid->name mappings if none exists\n+                    if (KnownOIDs.findMatch(stdAlgName) == null) {\n+                        \/\/ not override earlier entries if it exists\n+                        t.putIfAbsent(stdAlgName, ostr);\n+                    }\n+                    if (KnownOIDs.findMatch(ostr) == null) {\n+                        \/\/ not override earlier entries if it exists\n+                        t.putIfAbsent(ostr, stdAlgName);\n@@ -670,1 +595,1 @@\n-        return tab;\n+        return t;\n@@ -673,10 +598,0 @@\n-    \/*****************************************************************\/\n-\n-    \/*\n-     * HASHING ALGORITHMS\n-     *\/\n-\n-    \/**\n-     * Algorithm ID for the MD2 Message Digest Algorthm, from RFC 1319.\n-     * OID = 1.2.840.113549.2.2\n-     *\/\n@@ -684,1 +599,1 @@\n-    ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 2, 2});\n+            ObjectIdentifier.of(KnownOIDs.MD2);\n@@ -686,4 +601,0 @@\n-    \/**\n-     * Algorithm ID for the MD5 Message Digest Algorthm, from RFC 1321.\n-     * OID = 1.2.840.113549.2.5\n-     *\/\n@@ -691,1 +602,1 @@\n-    ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 2, 5});\n+            ObjectIdentifier.of(KnownOIDs.MD5);\n@@ -693,6 +604,0 @@\n-    \/**\n-     * Algorithm ID for the SHA1 Message Digest Algorithm, from FIPS 180-1.\n-     * This is sometimes called \"SHA\", though that is often confusing since\n-     * many people refer to FIPS 180 (which has an error) as defining SHA.\n-     * OID = 1.3.14.3.2.26. Old SHA-0 OID: 1.3.14.3.2.18.\n-     *\/\n@@ -700,1 +605,1 @@\n-    ObjectIdentifier.newInternal(new int[] {1, 3, 14, 3, 2, 26});\n+            ObjectIdentifier.of(KnownOIDs.SHA_1);\n@@ -703,1 +608,1 @@\n-    ObjectIdentifier.newInternal(new int[] {2, 16, 840, 1, 101, 3, 4, 2, 4});\n+            ObjectIdentifier.of(KnownOIDs.SHA_224);\n@@ -706,1 +611,1 @@\n-    ObjectIdentifier.newInternal(new int[] {2, 16, 840, 1, 101, 3, 4, 2, 1});\n+            ObjectIdentifier.of(KnownOIDs.SHA_256);\n@@ -709,1 +614,1 @@\n-    ObjectIdentifier.newInternal(new int[] {2, 16, 840, 1, 101, 3, 4, 2, 2});\n+            ObjectIdentifier.of(KnownOIDs.SHA_384);\n@@ -712,1 +617,1 @@\n-    ObjectIdentifier.newInternal(new int[] {2, 16, 840, 1, 101, 3, 4, 2, 3});\n+            ObjectIdentifier.of(KnownOIDs.SHA_512);\n@@ -715,1 +620,1 @@\n-    ObjectIdentifier.newInternal(new int[] {2, 16, 840, 1, 101, 3, 4, 2, 5});\n+            ObjectIdentifier.of(KnownOIDs.SHA_512$224);\n@@ -718,26 +623,1 @@\n-    ObjectIdentifier.newInternal(new int[] {2, 16, 840, 1, 101, 3, 4, 2, 6});\n-\n-    \/*\n-     * COMMON PUBLIC KEY TYPES\n-     *\/\n-    private static final int[] DH_data = { 1, 2, 840, 113549, 1, 3, 1 };\n-    private static final int[] DH_PKIX_data = { 1, 2, 840, 10046, 2, 1 };\n-    private static final int[] DSA_OIW_data = { 1, 3, 14, 3, 2, 12 };\n-    private static final int[] DSA_PKIX_data = { 1, 2, 840, 10040, 4, 1 };\n-    private static final int[] RSA_data = { 2, 5, 8, 1, 1 };\n-\n-    public static final ObjectIdentifier DH_oid;\n-    public static final ObjectIdentifier DH_PKIX_oid;\n-    public static final ObjectIdentifier DSA_oid;\n-    public static final ObjectIdentifier DSA_OIW_oid;\n-    public static final ObjectIdentifier EC_oid = oid(1, 2, 840, 10045, 2, 1);\n-    public static final ObjectIdentifier ECDH_oid = oid(1, 3, 132, 1, 12);\n-    public static final ObjectIdentifier RSA_oid;\n-    public static final ObjectIdentifier RSAEncryption_oid =\n-                                            oid(1, 2, 840, 113549, 1, 1, 1);\n-    public static final ObjectIdentifier RSAES_OAEP_oid =\n-                                            oid(1, 2, 840, 113549, 1, 1, 7);\n-    public static final ObjectIdentifier mgf1_oid =\n-                                            oid(1, 2, 840, 113549, 1, 1, 8);\n-    public static final ObjectIdentifier RSASSA_PSS_oid =\n-                                            oid(1, 2, 840, 113549, 1, 1, 10);\n+            ObjectIdentifier.of(KnownOIDs.SHA_512$256);\n@@ -745,5 +625,2 @@\n-    \/*\n-     * COMMON SECRET KEY TYPES\n-     *\/\n-    public static final ObjectIdentifier AES_oid =\n-                                            oid(2, 16, 840, 1, 101, 3, 4, 1);\n+    public static final ObjectIdentifier DSA_oid =\n+            ObjectIdentifier.of(KnownOIDs.DSA);\n@@ -751,60 +628,2 @@\n-    \/*\n-     * COMMON SIGNATURE ALGORITHMS\n-     *\/\n-    private static final int[] md2WithRSAEncryption_data =\n-                                       { 1, 2, 840, 113549, 1, 1, 2 };\n-    private static final int[] md5WithRSAEncryption_data =\n-                                       { 1, 2, 840, 113549, 1, 1, 4 };\n-    private static final int[] sha1WithRSAEncryption_data =\n-                                       { 1, 2, 840, 113549, 1, 1, 5 };\n-    private static final int[] sha1WithRSAEncryption_OIW_data =\n-                                       { 1, 3, 14, 3, 2, 29 };\n-    private static final int[] sha224WithRSAEncryption_data =\n-                                       { 1, 2, 840, 113549, 1, 1, 14 };\n-    private static final int[] sha256WithRSAEncryption_data =\n-                                       { 1, 2, 840, 113549, 1, 1, 11 };\n-    private static final int[] sha384WithRSAEncryption_data =\n-                                       { 1, 2, 840, 113549, 1, 1, 12 };\n-    private static final int[] sha512WithRSAEncryption_data =\n-                                       { 1, 2, 840, 113549, 1, 1, 13 };\n-\n-    private static final int[] shaWithDSA_OIW_data =\n-                                       { 1, 3, 14, 3, 2, 13 };\n-    private static final int[] sha1WithDSA_OIW_data =\n-                                       { 1, 3, 14, 3, 2, 27 };\n-    private static final int[] dsaWithSHA1_PKIX_data =\n-                                       { 1, 2, 840, 10040, 4, 3 };\n-\n-    public static final ObjectIdentifier md2WithRSAEncryption_oid;\n-    public static final ObjectIdentifier md5WithRSAEncryption_oid;\n-    public static final ObjectIdentifier sha1WithRSAEncryption_oid;\n-    public static final ObjectIdentifier sha1WithRSAEncryption_OIW_oid;\n-    public static final ObjectIdentifier sha224WithRSAEncryption_oid;\n-    public static final ObjectIdentifier sha256WithRSAEncryption_oid;\n-    public static final ObjectIdentifier sha384WithRSAEncryption_oid;\n-    public static final ObjectIdentifier sha512WithRSAEncryption_oid;\n-    public static final ObjectIdentifier sha512_224WithRSAEncryption_oid =\n-                                            oid(1, 2, 840, 113549, 1, 1, 15);\n-    public static final ObjectIdentifier sha512_256WithRSAEncryption_oid =\n-                                            oid(1, 2, 840, 113549, 1, 1, 16);;\n-\n-    public static final ObjectIdentifier shaWithDSA_OIW_oid;\n-    public static final ObjectIdentifier sha1WithDSA_OIW_oid;\n-    public static final ObjectIdentifier sha1WithDSA_oid;\n-    public static final ObjectIdentifier sha224WithDSA_oid =\n-                                            oid(2, 16, 840, 1, 101, 3, 4, 3, 1);\n-    public static final ObjectIdentifier sha256WithDSA_oid =\n-                                            oid(2, 16, 840, 1, 101, 3, 4, 3, 2);\n-\n-    public static final ObjectIdentifier sha1WithECDSA_oid =\n-                                            oid(1, 2, 840, 10045, 4, 1);\n-    public static final ObjectIdentifier sha224WithECDSA_oid =\n-                                            oid(1, 2, 840, 10045, 4, 3, 1);\n-    public static final ObjectIdentifier sha256WithECDSA_oid =\n-                                            oid(1, 2, 840, 10045, 4, 3, 2);\n-    public static final ObjectIdentifier sha384WithECDSA_oid =\n-                                            oid(1, 2, 840, 10045, 4, 3, 3);\n-    public static final ObjectIdentifier sha512WithECDSA_oid =\n-                                            oid(1, 2, 840, 10045, 4, 3, 4);\n-    public static final ObjectIdentifier specifiedWithECDSA_oid =\n-                                            oid(1, 2, 840, 10045, 4, 3);\n+    public static final ObjectIdentifier EC_oid =\n+            ObjectIdentifier.of(KnownOIDs.EC);\n@@ -812,137 +631,2 @@\n-    \/**\n-     * Algorithm ID for the PBE encryption algorithms from PKCS#5 and\n-     * PKCS#12.\n-     *\/\n-    public static final ObjectIdentifier pbeWithMD5AndDES_oid =\n-        ObjectIdentifier.newInternal(new int[]{1, 2, 840, 113549, 1, 5, 3});\n-    public static final ObjectIdentifier pbeWithMD5AndRC2_oid =\n-        ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 1, 5, 6});\n-    public static final ObjectIdentifier pbeWithSHA1AndDES_oid =\n-        ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 1, 5, 10});\n-    public static final ObjectIdentifier pbeWithSHA1AndRC2_oid =\n-        ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 1, 5, 11});\n-    public static ObjectIdentifier pbeWithSHA1AndRC4_128_oid =\n-        ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 1, 12, 1, 1});\n-    public static ObjectIdentifier pbeWithSHA1AndRC4_40_oid =\n-        ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 1, 12, 1, 2});\n-    public static ObjectIdentifier pbeWithSHA1AndDESede_oid =\n-        ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 1, 12, 1, 3});\n-    public static ObjectIdentifier pbeWithSHA1AndRC2_128_oid =\n-        ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 1, 12, 1, 5});\n-    public static ObjectIdentifier pbeWithSHA1AndRC2_40_oid =\n-        ObjectIdentifier.newInternal(new int[] {1, 2, 840, 113549, 1, 12, 1, 6});\n-\n-    static {\n-    \/*\n-     * Note the preferred OIDs are named simply with no \"OIW\" or\n-     * \"PKIX\" in them, even though they may point to data from these\n-     * specs; e.g. SHA_oid, DH_oid, DSA_oid, SHA1WithDSA_oid...\n-     *\/\n-    \/**\n-     * Algorithm ID for Diffie Hellman Key agreement, from PKCS #3.\n-     * Parameters include public values P and G, and may optionally specify\n-     * the length of the private key X.  Alternatively, algorithm parameters\n-     * may be derived from another source such as a Certificate Authority's\n-     * certificate.\n-     * OID = 1.2.840.113549.1.3.1\n-     *\/\n-        DH_oid = ObjectIdentifier.newInternal(DH_data);\n-\n-    \/**\n-     * Algorithm ID for the Diffie Hellman Key Agreement (DH), from RFC 3279.\n-     * Parameters may include public values P and G.\n-     * OID = 1.2.840.10046.2.1\n-     *\/\n-        DH_PKIX_oid = ObjectIdentifier.newInternal(DH_PKIX_data);\n-\n-    \/**\n-     * Algorithm ID for the Digital Signing Algorithm (DSA), from the\n-     * NIST OIW Stable Agreements part 12.\n-     * Parameters may include public values P, Q, and G; or these may be\n-     * derived from\n-     * another source such as a Certificate Authority's certificate.\n-     * OID = 1.3.14.3.2.12\n-     *\/\n-        DSA_OIW_oid = ObjectIdentifier.newInternal(DSA_OIW_data);\n-\n-    \/**\n-     * Algorithm ID for the Digital Signing Algorithm (DSA), from RFC 3279.\n-     * Parameters may include public values P, Q, and G; or these may be\n-     * derived from another source such as a Certificate Authority's\n-     * certificate.\n-     * OID = 1.2.840.10040.4.1\n-     *\/\n-        DSA_oid = ObjectIdentifier.newInternal(DSA_PKIX_data);\n-\n-    \/**\n-     * Algorithm ID for RSA keys used for any purpose, as defined in X.509.\n-     * The algorithm parameter is a single value, the number of bits in the\n-     * public modulus.\n-     * OID = 2.5.8.1.1\n-     *\/\n-        RSA_oid = ObjectIdentifier.newInternal(RSA_data);\n-\n-    \/**\n-     * Identifies a signing algorithm where an MD2 digest is encrypted\n-     * using an RSA private key; defined in PKCS #1.  Use of this\n-     * signing algorithm is discouraged due to MD2 vulnerabilities.\n-     * OID = 1.2.840.113549.1.1.2\n-     *\/\n-        md2WithRSAEncryption_oid =\n-            ObjectIdentifier.newInternal(md2WithRSAEncryption_data);\n-\n-    \/**\n-     * Identifies a signing algorithm where an MD5 digest is\n-     * encrypted using an RSA private key; defined in PKCS #1.\n-     * OID = 1.2.840.113549.1.1.4\n-     *\/\n-        md5WithRSAEncryption_oid =\n-            ObjectIdentifier.newInternal(md5WithRSAEncryption_data);\n-\n-    \/**\n-     * Identifies a signing algorithm where a SHA1 digest is\n-     * encrypted using an RSA private key; defined by RSA DSI.\n-     * OID = 1.2.840.113549.1.1.5\n-     *\/\n-        sha1WithRSAEncryption_oid =\n-            ObjectIdentifier.newInternal(sha1WithRSAEncryption_data);\n-\n-    \/**\n-     * Identifies a signing algorithm where a SHA1 digest is\n-     * encrypted using an RSA private key; defined in NIST OIW.\n-     * OID = 1.3.14.3.2.29\n-     *\/\n-        sha1WithRSAEncryption_OIW_oid =\n-            ObjectIdentifier.newInternal(sha1WithRSAEncryption_OIW_data);\n-\n-    \/**\n-     * Identifies a signing algorithm where a SHA224 digest is\n-     * encrypted using an RSA private key; defined by PKCS #1.\n-     * OID = 1.2.840.113549.1.1.14\n-     *\/\n-        sha224WithRSAEncryption_oid =\n-            ObjectIdentifier.newInternal(sha224WithRSAEncryption_data);\n-\n-    \/**\n-     * Identifies a signing algorithm where a SHA256 digest is\n-     * encrypted using an RSA private key; defined by PKCS #1.\n-     * OID = 1.2.840.113549.1.1.11\n-     *\/\n-        sha256WithRSAEncryption_oid =\n-            ObjectIdentifier.newInternal(sha256WithRSAEncryption_data);\n-\n-    \/**\n-     * Identifies a signing algorithm where a SHA384 digest is\n-     * encrypted using an RSA private key; defined by PKCS #1.\n-     * OID = 1.2.840.113549.1.1.12\n-     *\/\n-        sha384WithRSAEncryption_oid =\n-            ObjectIdentifier.newInternal(sha384WithRSAEncryption_data);\n-\n-    \/**\n-     * Identifies a signing algorithm where a SHA512 digest is\n-     * encrypted using an RSA private key; defined by PKCS #1.\n-     * OID = 1.2.840.113549.1.1.13\n-     *\/\n-        sha512WithRSAEncryption_oid =\n-            ObjectIdentifier.newInternal(sha512WithRSAEncryption_data);\n+    public static final ObjectIdentifier RSAEncryption_oid =\n+            ObjectIdentifier.of(KnownOIDs.RSA);\n@@ -950,7 +634,2 @@\n-    \/**\n-     * Identifies the FIPS 186 \"Digital Signature Standard\" (DSS), where a\n-     * SHA digest is signed using the Digital Signing Algorithm (DSA).\n-     * This should not be used.\n-     * OID = 1.3.14.3.2.13\n-     *\/\n-        shaWithDSA_OIW_oid = ObjectIdentifier.newInternal(shaWithDSA_OIW_data);\n+    public static final ObjectIdentifier RSASSA_PSS_oid =\n+            ObjectIdentifier.of(KnownOIDs.RSASSA_PSS);\n@@ -958,6 +637,2 @@\n-    \/**\n-     * Identifies the FIPS 186 \"Digital Signature Standard\" (DSS), where a\n-     * SHA1 digest is signed using the Digital Signing Algorithm (DSA).\n-     * OID = 1.3.14.3.2.27\n-     *\/\n-        sha1WithDSA_OIW_oid = ObjectIdentifier.newInternal(sha1WithDSA_OIW_data);\n+    public static final ObjectIdentifier MGF1_oid =\n+            ObjectIdentifier.of(KnownOIDs.MGF1);\n@@ -965,61 +640,4 @@\n-    \/**\n-     * Identifies the FIPS 186 \"Digital Signature Standard\" (DSS), where a\n-     * SHA1 digest is signed using the Digital Signing Algorithm (DSA).\n-     * OID = 1.2.840.10040.4.3\n-     *\/\n-        sha1WithDSA_oid = ObjectIdentifier.newInternal(dsaWithSHA1_PKIX_data);\n-\n-        nameTable = new HashMap<>();\n-        nameTable.put(MD5_oid, \"MD5\");\n-        nameTable.put(MD2_oid, \"MD2\");\n-        nameTable.put(SHA_oid, \"SHA-1\");\n-        nameTable.put(SHA224_oid, \"SHA-224\");\n-        nameTable.put(SHA256_oid, \"SHA-256\");\n-        nameTable.put(SHA384_oid, \"SHA-384\");\n-        nameTable.put(SHA512_oid, \"SHA-512\");\n-        nameTable.put(SHA512_224_oid, \"SHA-512\/224\");\n-        nameTable.put(SHA512_256_oid, \"SHA-512\/256\");\n-        nameTable.put(RSAEncryption_oid, \"RSA\");\n-        nameTable.put(RSA_oid, \"RSA\");\n-        nameTable.put(DH_oid, \"Diffie-Hellman\");\n-        nameTable.put(DH_PKIX_oid, \"Diffie-Hellman\");\n-        nameTable.put(DSA_oid, \"DSA\");\n-        nameTable.put(DSA_OIW_oid, \"DSA\");\n-        nameTable.put(EC_oid, \"EC\");\n-        nameTable.put(ECDH_oid, \"ECDH\");\n-\n-        nameTable.put(AES_oid, \"AES\");\n-\n-        nameTable.put(sha1WithECDSA_oid, \"SHA1withECDSA\");\n-        nameTable.put(sha224WithECDSA_oid, \"SHA224withECDSA\");\n-        nameTable.put(sha256WithECDSA_oid, \"SHA256withECDSA\");\n-        nameTable.put(sha384WithECDSA_oid, \"SHA384withECDSA\");\n-        nameTable.put(sha512WithECDSA_oid, \"SHA512withECDSA\");\n-        nameTable.put(md5WithRSAEncryption_oid, \"MD5withRSA\");\n-        nameTable.put(md2WithRSAEncryption_oid, \"MD2withRSA\");\n-        nameTable.put(sha1WithDSA_oid, \"SHA1withDSA\");\n-        nameTable.put(sha1WithDSA_OIW_oid, \"SHA1withDSA\");\n-        nameTable.put(shaWithDSA_OIW_oid, \"SHA1withDSA\");\n-        nameTable.put(sha224WithDSA_oid, \"SHA224withDSA\");\n-        nameTable.put(sha256WithDSA_oid, \"SHA256withDSA\");\n-        nameTable.put(sha1WithRSAEncryption_oid, \"SHA1withRSA\");\n-        nameTable.put(sha1WithRSAEncryption_OIW_oid, \"SHA1withRSA\");\n-        nameTable.put(sha224WithRSAEncryption_oid, \"SHA224withRSA\");\n-        nameTable.put(sha256WithRSAEncryption_oid, \"SHA256withRSA\");\n-        nameTable.put(sha384WithRSAEncryption_oid, \"SHA384withRSA\");\n-        nameTable.put(sha512WithRSAEncryption_oid, \"SHA512withRSA\");\n-        nameTable.put(sha512_224WithRSAEncryption_oid, \"SHA512\/224withRSA\");\n-        nameTable.put(sha512_256WithRSAEncryption_oid, \"SHA512\/256withRSA\");\n-        nameTable.put(RSASSA_PSS_oid, \"RSASSA-PSS\");\n-        nameTable.put(RSAES_OAEP_oid, \"RSAES-OAEP\");\n-\n-        nameTable.put(pbeWithMD5AndDES_oid, \"PBEWithMD5AndDES\");\n-        nameTable.put(pbeWithMD5AndRC2_oid, \"PBEWithMD5AndRC2\");\n-        nameTable.put(pbeWithSHA1AndDES_oid, \"PBEWithSHA1AndDES\");\n-        nameTable.put(pbeWithSHA1AndRC2_oid, \"PBEWithSHA1AndRC2\");\n-        nameTable.put(pbeWithSHA1AndRC4_128_oid, \"PBEWithSHA1AndRC4_128\");\n-        nameTable.put(pbeWithSHA1AndRC4_40_oid, \"PBEWithSHA1AndRC4_40\");\n-        nameTable.put(pbeWithSHA1AndDESede_oid, \"PBEWithSHA1AndDESede\");\n-        nameTable.put(pbeWithSHA1AndRC2_128_oid, \"PBEWithSHA1AndRC2_128\");\n-        nameTable.put(pbeWithSHA1AndRC2_40_oid, \"PBEWithSHA1AndRC2_40\");\n-    }\n+    public static final ObjectIdentifier ed25519_oid =\n+            ObjectIdentifier.of(KnownOIDs.Ed25519);\n+    public static final ObjectIdentifier ed448_oid =\n+            ObjectIdentifier.of(KnownOIDs.Ed448);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":108,"deletions":490,"binary":false,"changes":598,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,3 +37,1 @@\n-import sun.security.util.DerValue;\n-import sun.security.util.DerOutputStream;\n-import sun.security.util.ObjectIdentifier;\n+import sun.security.util.*;\n@@ -97,29 +95,0 @@\n-    \/\/ OID defined in RFC 5280 Sections 4.2.1.12\n-    \/\/ more from http:\/\/www.alvestrand.no\/objectid\/1.3.6.1.5.5.7.3.html\n-    private static final Map <ObjectIdentifier, String> map =\n-            new HashMap <ObjectIdentifier, String> ();\n-\n-    private static final int[] anyExtendedKeyUsageOidData = {2, 5, 29, 37, 0};\n-    private static final int[] serverAuthOidData = {1, 3, 6, 1, 5, 5, 7, 3, 1};\n-    private static final int[] clientAuthOidData = {1, 3, 6, 1, 5, 5, 7, 3, 2};\n-    private static final int[] codeSigningOidData = {1, 3, 6, 1, 5, 5, 7, 3, 3};\n-    private static final int[] emailProtectionOidData = {1, 3, 6, 1, 5, 5, 7, 3, 4};\n-    private static final int[] ipsecEndSystemOidData = {1, 3, 6, 1, 5, 5, 7, 3, 5};\n-    private static final int[] ipsecTunnelOidData = {1, 3, 6, 1, 5, 5, 7, 3, 6};\n-    private static final int[] ipsecUserOidData = {1, 3, 6, 1, 5, 5, 7, 3, 7};\n-    private static final int[] timeStampingOidData = {1, 3, 6, 1, 5, 5, 7, 3, 8};\n-    private static final int[] OCSPSigningOidData = {1, 3, 6, 1, 5, 5, 7, 3, 9};\n-\n-    static {\n-        map.put(ObjectIdentifier.newInternal(anyExtendedKeyUsageOidData), \"anyExtendedKeyUsage\");\n-        map.put(ObjectIdentifier.newInternal(serverAuthOidData), \"serverAuth\");\n-        map.put(ObjectIdentifier.newInternal(clientAuthOidData), \"clientAuth\");\n-        map.put(ObjectIdentifier.newInternal(codeSigningOidData), \"codeSigning\");\n-        map.put(ObjectIdentifier.newInternal(emailProtectionOidData), \"emailProtection\");\n-        map.put(ObjectIdentifier.newInternal(ipsecEndSystemOidData), \"ipsecEndSystem\");\n-        map.put(ObjectIdentifier.newInternal(ipsecTunnelOidData), \"ipsecTunnel\");\n-        map.put(ObjectIdentifier.newInternal(ipsecUserOidData), \"ipsecUser\");\n-        map.put(ObjectIdentifier.newInternal(timeStampingOidData), \"timeStamping\");\n-        map.put(ObjectIdentifier.newInternal(OCSPSigningOidData), \"OCSPSigning\");\n-    };\n-\n@@ -212,3 +181,4 @@\n-            String result = map.get(oid);\n-            if (result != null) {\n-                usage += result;\n+            String res = oid.toString();\n+            KnownOIDs os = KnownOIDs.findMatch(res);\n+            if (os != null) {\n+                usage += os.stdName();\n@@ -216,1 +186,1 @@\n-                usage += oid.toString();\n+                usage += res;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/ExtendedKeyUsageExtension.java","additions":7,"deletions":37,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -273,2 +273,1 @@\n-                newName = new GeneralName\n-                    (new OIDName(new ObjectIdentifier((int[])null)));\n+                newName = new GeneralName(new OIDName(\"\"));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtrees.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,4 +32,1 @@\n-import sun.security.util.Debug;\n-import sun.security.util.DerOutputStream;\n-import sun.security.util.DerValue;\n-import sun.security.util.ObjectIdentifier;\n+import sun.security.util.*;\n@@ -78,8 +75,2 @@\n-    public static ObjectIdentifier AnyPolicy_Id;\n-    static {\n-        try {\n-            AnyPolicy_Id = new ObjectIdentifier(\"2.5.29.32.0\");\n-        } catch (IOException ioe) {\n-            \/\/ Should not happen\n-        }\n-    }\n+    public static ObjectIdentifier AnyPolicy_Id =\n+            ObjectIdentifier.of(KnownOIDs.CE_CERT_POLICIES_ANY);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InhibitAnyPolicyExtension.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,2 +72,0 @@\n-    private static final int[] CertType_data = { 2, 16, 840, 1, 113730, 1, 1 };\n-\n@@ -77,9 +75,2 @@\n-    public static ObjectIdentifier NetscapeCertType_Id;\n-\n-    static {\n-        try {\n-            NetscapeCertType_Id = new ObjectIdentifier(CertType_data);\n-        } catch (IOException ioe) {\n-            \/\/ should not happen\n-        }\n-    }\n+    public static ObjectIdentifier NetscapeCertType_Id =\n+            ObjectIdentifier.of(KnownOIDs.NETSCAPE_CertType);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NetscapeCertTypeExtension.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,3 +105,0 @@\n-    private static final int[] NetscapeCertType_data =\n-        { 2, 16, 840, 1, 113730, 1, 1 };\n-\n@@ -141,2 +138,2 @@\n-        addInternal(NETSCAPE_CERT, ObjectIdentifier.newInternal\n-                    (new int[] {2,16,840,1,113730,1,1}),\n+        addInternal(NETSCAPE_CERT,\n+                    ObjectIdentifier.of(KnownOIDs.NETSCAPE_CertType),\n@@ -233,1 +230,1 @@\n-            objId = new ObjectIdentifier(oid);\n+            objId = ObjectIdentifier.of(oid);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OIDMap.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-            oid = new ObjectIdentifier(name);\n+            oid = ObjectIdentifier.of(name);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OIDName.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.*;\n@@ -51,34 +50,0 @@\n-    \/\/ The object identifiers\n-    private static final int[] AuthorityKey_data = { 2, 5, 29, 35 };\n-    private static final int[] SubjectKey_data = { 2, 5, 29, 14 };\n-    private static final int[] KeyUsage_data = { 2, 5, 29, 15 };\n-    private static final int[] PrivateKeyUsage_data = { 2, 5, 29, 16 };\n-    private static final int[] CertificatePolicies_data = { 2, 5, 29, 32 };\n-    private static final int[] PolicyMappings_data = { 2, 5, 29, 33 };\n-    private static final int[] SubjectAlternativeName_data = { 2, 5, 29, 17 };\n-    private static final int[] IssuerAlternativeName_data = { 2, 5, 29, 18 };\n-    private static final int[] SubjectDirectoryAttributes_data = { 2, 5, 29, 9 };\n-    private static final int[] BasicConstraints_data = { 2, 5, 29, 19 };\n-    private static final int[] NameConstraints_data = { 2, 5, 29, 30 };\n-    private static final int[] PolicyConstraints_data = { 2, 5, 29, 36 };\n-    private static final int[] CRLDistributionPoints_data = { 2, 5, 29, 31 };\n-    private static final int[] CRLNumber_data = { 2, 5, 29, 20 };\n-    private static final int[] IssuingDistributionPoint_data = { 2, 5, 29, 28 };\n-    private static final int[] DeltaCRLIndicator_data = { 2, 5, 29, 27 };\n-    private static final int[] ReasonCode_data = { 2, 5, 29, 21 };\n-    private static final int[] HoldInstructionCode_data = { 2, 5, 29, 23 };\n-    private static final int[] InvalidityDate_data = { 2, 5, 29, 24 };\n-    private static final int[] ExtendedKeyUsage_data = { 2, 5, 29, 37 };\n-    private static final int[] InhibitAnyPolicy_data = { 2, 5, 29, 54 };\n-    private static final int[] CertificateIssuer_data = { 2, 5, 29, 29 };\n-    private static final int[] AuthInfoAccess_data = { 1, 3, 6, 1, 5, 5, 7, 1, 1};\n-    private static final int[] SubjectInfoAccess_data = { 1, 3, 6, 1, 5, 5, 7, 1, 11};\n-    private static final int[] FreshestCRL_data = { 2, 5, 29, 46 };\n-    private static final int[] OCSPNoCheck_data = { 1, 3, 6, 1, 5, 5, 7,\n-                                                    48, 1, 5};\n-\n-    \/\/ Additional extensions under the PKIX arc that are not necessarily\n-    \/\/ used in X.509 Certificates or CRLs.\n-    private static final int OCSPNonce_data [] = { 1, 3, 6, 1, 5, 5, 7,\n-                                                  48, 1, 2};\n-\n@@ -88,1 +53,2 @@\n-    public static final ObjectIdentifier AuthorityKey_Id;\n+    public static final ObjectIdentifier AuthorityKey_Id =\n+            ObjectIdentifier.of(KnownOIDs.AuthorityKeyID);\n@@ -93,1 +59,2 @@\n-    public static final ObjectIdentifier SubjectKey_Id;\n+    public static final ObjectIdentifier SubjectKey_Id =\n+            ObjectIdentifier.of(KnownOIDs.SubjectKeyID);\n@@ -98,1 +65,2 @@\n-    public static final ObjectIdentifier KeyUsage_Id;\n+    public static final ObjectIdentifier KeyUsage_Id =\n+            ObjectIdentifier.of(KnownOIDs.KeyUsage);\n@@ -104,1 +72,2 @@\n-    public static final ObjectIdentifier PrivateKeyUsage_Id;\n+    public static final ObjectIdentifier PrivateKeyUsage_Id =\n+            ObjectIdentifier.of(KnownOIDs.PrivateKeyUsage);\n@@ -109,1 +78,2 @@\n-    public static final ObjectIdentifier CertificatePolicies_Id;\n+    public static final ObjectIdentifier CertificatePolicies_Id =\n+            ObjectIdentifier.of(KnownOIDs.CertificatePolicies);\n@@ -115,1 +85,2 @@\n-    public static final ObjectIdentifier PolicyMappings_Id;\n+    public static final ObjectIdentifier PolicyMappings_Id =\n+            ObjectIdentifier.of(KnownOIDs.PolicyMappings);\n@@ -121,1 +92,2 @@\n-    public static final ObjectIdentifier SubjectAlternativeName_Id;\n+    public static final ObjectIdentifier SubjectAlternativeName_Id =\n+            ObjectIdentifier.of(KnownOIDs.SubjectAlternativeName);\n@@ -127,1 +99,2 @@\n-    public static final ObjectIdentifier IssuerAlternativeName_Id;\n+    public static final ObjectIdentifier IssuerAlternativeName_Id =\n+            ObjectIdentifier.of(KnownOIDs.IssuerAlternativeName);\n@@ -133,1 +106,2 @@\n-    public static final ObjectIdentifier SubjectDirectoryAttributes_Id;\n+    public static final ObjectIdentifier SubjectDirectoryAttributes_Id =\n+            ObjectIdentifier.of(KnownOIDs.SubjectDirectoryAttributes);\n@@ -139,1 +113,2 @@\n-    public static final ObjectIdentifier BasicConstraints_Id;\n+    public static final ObjectIdentifier BasicConstraints_Id =\n+            ObjectIdentifier.of(KnownOIDs.BasicConstraints);\n@@ -145,1 +120,2 @@\n-    public static final ObjectIdentifier NameConstraints_Id;\n+    public static final ObjectIdentifier NameConstraints_Id =\n+            ObjectIdentifier.of(KnownOIDs.NameConstraints);\n@@ -151,1 +127,2 @@\n-    public static final ObjectIdentifier PolicyConstraints_Id;\n+    public static final ObjectIdentifier PolicyConstraints_Id =\n+            ObjectIdentifier.of(KnownOIDs.PolicyConstraints);\n@@ -156,1 +133,2 @@\n-    public static final ObjectIdentifier CRLDistributionPoints_Id;\n+    public static final ObjectIdentifier CRLDistributionPoints_Id =\n+            ObjectIdentifier.of(KnownOIDs.CRLDistributionPoints);\n@@ -162,1 +140,2 @@\n-    public static final ObjectIdentifier CRLNumber_Id;\n+    public static final ObjectIdentifier CRLNumber_Id =\n+            ObjectIdentifier.of(KnownOIDs.CRLNumber);\n@@ -167,1 +146,2 @@\n-    public static final ObjectIdentifier IssuingDistributionPoint_Id;\n+    public static final ObjectIdentifier IssuingDistributionPoint_Id =\n+            ObjectIdentifier.of(KnownOIDs.IssuingDistributionPoint);\n@@ -172,1 +152,2 @@\n-    public static final ObjectIdentifier DeltaCRLIndicator_Id;\n+    public static final ObjectIdentifier DeltaCRLIndicator_Id =\n+            ObjectIdentifier.of(KnownOIDs.DeltaCRLIndicator);\n@@ -177,1 +158,2 @@\n-    public static final ObjectIdentifier ReasonCode_Id;\n+    public static final ObjectIdentifier ReasonCode_Id =\n+            ObjectIdentifier.of(KnownOIDs.ReasonCode);\n@@ -184,1 +166,2 @@\n-    public static final ObjectIdentifier HoldInstructionCode_Id;\n+    public static final ObjectIdentifier HoldInstructionCode_Id =\n+            ObjectIdentifier.of(KnownOIDs.HoldInstructionCode);\n@@ -190,1 +173,2 @@\n-    public static final ObjectIdentifier InvalidityDate_Id;\n+    public static final ObjectIdentifier InvalidityDate_Id =\n+            ObjectIdentifier.of(KnownOIDs.InvalidityDate);\n@@ -196,1 +180,2 @@\n-    public static final ObjectIdentifier ExtendedKeyUsage_Id;\n+    public static final ObjectIdentifier ExtendedKeyUsage_Id =\n+            ObjectIdentifier.of(KnownOIDs.extendedKeyUsage);\n@@ -201,1 +186,2 @@\n-    public static final ObjectIdentifier InhibitAnyPolicy_Id;\n+    public static final ObjectIdentifier InhibitAnyPolicy_Id =\n+            ObjectIdentifier.of(KnownOIDs.InhibitAnyPolicy);\n@@ -207,1 +193,2 @@\n-    public static final ObjectIdentifier CertificateIssuer_Id;\n+    public static final ObjectIdentifier CertificateIssuer_Id =\n+            ObjectIdentifier.of(KnownOIDs.CertificateIssuer);\n@@ -215,1 +202,2 @@\n-    public static final ObjectIdentifier AuthInfoAccess_Id;\n+    public static final ObjectIdentifier AuthInfoAccess_Id =\n+            ObjectIdentifier.of(KnownOIDs.AuthInfoAccess);\n@@ -221,1 +209,2 @@\n-    public static final ObjectIdentifier SubjectInfoAccess_Id;\n+    public static final ObjectIdentifier SubjectInfoAccess_Id =\n+            ObjectIdentifier.of(KnownOIDs.SubjectInfoAccess);\n@@ -226,1 +215,2 @@\n-    public static final ObjectIdentifier FreshestCRL_Id;\n+    public static final ObjectIdentifier FreshestCRL_Id =\n+            ObjectIdentifier.of(KnownOIDs.FreshestCRL);\n@@ -232,1 +222,2 @@\n-    public static final ObjectIdentifier OCSPNoCheck_Id;\n+    public static final ObjectIdentifier OCSPNoCheck_Id =\n+            ObjectIdentifier.of(KnownOIDs.OCSPNoCheck);\n@@ -238,46 +229,2 @@\n-    public static final ObjectIdentifier OCSPNonce_Id;\n-\n-    static {\n-        AuthorityKey_Id = ObjectIdentifier.newInternal(AuthorityKey_data);\n-        SubjectKey_Id   = ObjectIdentifier.newInternal(SubjectKey_data);\n-        KeyUsage_Id     = ObjectIdentifier.newInternal(KeyUsage_data);\n-        PrivateKeyUsage_Id = ObjectIdentifier.newInternal(PrivateKeyUsage_data);\n-        CertificatePolicies_Id =\n-            ObjectIdentifier.newInternal(CertificatePolicies_data);\n-        PolicyMappings_Id = ObjectIdentifier.newInternal(PolicyMappings_data);\n-        SubjectAlternativeName_Id =\n-            ObjectIdentifier.newInternal(SubjectAlternativeName_data);\n-        IssuerAlternativeName_Id =\n-            ObjectIdentifier.newInternal(IssuerAlternativeName_data);\n-        ExtendedKeyUsage_Id = ObjectIdentifier.newInternal(ExtendedKeyUsage_data);\n-        InhibitAnyPolicy_Id = ObjectIdentifier.newInternal(InhibitAnyPolicy_data);\n-        SubjectDirectoryAttributes_Id =\n-            ObjectIdentifier.newInternal(SubjectDirectoryAttributes_data);\n-        BasicConstraints_Id =\n-            ObjectIdentifier.newInternal(BasicConstraints_data);\n-        ReasonCode_Id = ObjectIdentifier.newInternal(ReasonCode_data);\n-        HoldInstructionCode_Id  =\n-            ObjectIdentifier.newInternal(HoldInstructionCode_data);\n-        InvalidityDate_Id = ObjectIdentifier.newInternal(InvalidityDate_data);\n-\n-        NameConstraints_Id = ObjectIdentifier.newInternal(NameConstraints_data);\n-        PolicyConstraints_Id =\n-            ObjectIdentifier.newInternal(PolicyConstraints_data);\n-        CRLDistributionPoints_Id =\n-            ObjectIdentifier.newInternal(CRLDistributionPoints_data);\n-        CRLNumber_Id =\n-            ObjectIdentifier.newInternal(CRLNumber_data);\n-        IssuingDistributionPoint_Id =\n-            ObjectIdentifier.newInternal(IssuingDistributionPoint_data);\n-        DeltaCRLIndicator_Id =\n-            ObjectIdentifier.newInternal(DeltaCRLIndicator_data);\n-        CertificateIssuer_Id =\n-            ObjectIdentifier.newInternal(CertificateIssuer_data);\n-        AuthInfoAccess_Id =\n-            ObjectIdentifier.newInternal(AuthInfoAccess_data);\n-        SubjectInfoAccess_Id =\n-            ObjectIdentifier.newInternal(SubjectInfoAccess_data);\n-        FreshestCRL_Id = ObjectIdentifier.newInternal(FreshestCRL_data);\n-        OCSPNoCheck_Id = ObjectIdentifier.newInternal(OCSPNoCheck_data);\n-        OCSPNonce_Id = ObjectIdentifier.newInternal(OCSPNonce_data);\n-    }\n+    public static final ObjectIdentifier OCSPNonce_Id =\n+            ObjectIdentifier.of(KnownOIDs.OCSPNonceExt);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PKIXExtensions.java","additions":55,"deletions":108,"binary":false,"changes":163,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -1105,21 +1105,0 @@\n-    private static final int[] commonName_data = { 2, 5, 4, 3 };\n-    private static final int[] SURNAME_DATA = { 2, 5, 4, 4 };\n-    private static final int[] SERIALNUMBER_DATA = { 2, 5, 4, 5 };\n-    private static final int[] countryName_data = { 2, 5, 4, 6 };\n-    private static final int[] localityName_data = { 2, 5, 4, 7 };\n-    private static final int[] stateName_data = { 2, 5, 4, 8 };\n-    private static final int[] streetAddress_data = { 2, 5, 4, 9 };\n-    private static final int[] orgName_data = { 2, 5, 4, 10 };\n-    private static final int[] orgUnitName_data = { 2, 5, 4, 11 };\n-    private static final int[] title_data = { 2, 5, 4, 12 };\n-    private static final int[] GIVENNAME_DATA = { 2, 5, 4, 42 };\n-    private static final int[] INITIALS_DATA = { 2, 5, 4, 43 };\n-    private static final int[] GENERATIONQUALIFIER_DATA = { 2, 5, 4, 44 };\n-    private static final int[] DNQUALIFIER_DATA = { 2, 5, 4, 46 };\n-\n-    private static final int[] ipAddress_data = { 1, 3, 6, 1, 4, 1, 42, 2, 11, 2, 1 };\n-    private static final int[] DOMAIN_COMPONENT_DATA =\n-        { 0, 9, 2342, 19200300, 100, 1, 25 };\n-    private static final int[] userid_data =\n-        { 0, 9, 2342, 19200300, 100, 1, 1 };\n-\n@@ -1129,1 +1108,5 @@\n-            ObjectIdentifier.newInternal(commonName_data);\n+            ObjectIdentifier.of(KnownOIDs.CommonName);\n+\n+    \/\/ OID for the \"SURNAME=\" attribute, denoting a person's surname.\n+    public static final ObjectIdentifier SURNAME_OID =\n+            ObjectIdentifier.of(KnownOIDs.Surname);\n@@ -1135,1 +1118,1 @@\n-            ObjectIdentifier.newInternal(SERIALNUMBER_DATA);\n+            ObjectIdentifier.of(KnownOIDs.SerialNumber);\n@@ -1139,1 +1122,1 @@\n-            ObjectIdentifier.newInternal(countryName_data);\n+            ObjectIdentifier.of(KnownOIDs.CountryName);\n@@ -1143,9 +1126,1 @@\n-            ObjectIdentifier.newInternal(localityName_data);\n-\n-    \/\/ OID for the \"O=\" attribute, denoting an organization name.\n-    public static final ObjectIdentifier orgName_oid =\n-            ObjectIdentifier.newInternal(orgName_data);\n-\n-    \/\/ OID for the \"OU=\" attribute, denoting an organizational unit name.\n-    public static final ObjectIdentifier orgUnitName_oid =\n-            ObjectIdentifier.newInternal(orgUnitName_data);\n+            ObjectIdentifier.of(KnownOIDs.LocalityName);\n@@ -1155,1 +1130,1 @@\n-            ObjectIdentifier.newInternal(stateName_data);\n+            ObjectIdentifier.of(KnownOIDs.StateName);\n@@ -1159,1 +1134,1 @@\n-            ObjectIdentifier.newInternal(streetAddress_data);\n+            ObjectIdentifier.of(KnownOIDs.StreetAddress);\n@@ -1161,3 +1136,3 @@\n-    \/\/ OID for the \"T=\" attribute, denoting a person's title.\n-    public static final ObjectIdentifier title_oid =\n-            ObjectIdentifier.newInternal(title_data);\n+    \/\/ OID for the \"O=\" attribute, denoting an organization name.\n+    public static final ObjectIdentifier orgName_oid =\n+            ObjectIdentifier.of(KnownOIDs.OrgName);\n@@ -1165,4 +1140,3 @@\n-    \/\/ OID for the \"DNQUALIFIER=\" or \"DNQ=\" attribute, denoting DN\n-    \/\/ disambiguating information.\n-    public static final ObjectIdentifier DNQUALIFIER_OID =\n-            ObjectIdentifier.newInternal(DNQUALIFIER_DATA);\n+    \/\/ OID for the \"OU=\" attribute, denoting an organizational unit name.\n+    public static final ObjectIdentifier orgUnitName_oid =\n+            ObjectIdentifier.of(KnownOIDs.OrgUnitName);\n@@ -1170,3 +1144,3 @@\n-    \/\/ OID for the \"SURNAME=\" attribute, denoting a person's surname.\n-    public static final ObjectIdentifier SURNAME_OID =\n-            ObjectIdentifier.newInternal(SURNAME_DATA);\n+    \/\/ OID for the \"T=\" attribute, denoting a person's title.\n+    public static final ObjectIdentifier title_oid =\n+            ObjectIdentifier.of(KnownOIDs.Title);\n@@ -1176,1 +1150,1 @@\n-            ObjectIdentifier.newInternal(GIVENNAME_DATA);\n+            ObjectIdentifier.of(KnownOIDs.GivenName);\n@@ -1180,1 +1154,1 @@\n-            ObjectIdentifier.newInternal(INITIALS_DATA);\n+            ObjectIdentifier.of(KnownOIDs.Initials);\n@@ -1184,1 +1158,6 @@\n-            ObjectIdentifier.newInternal(GENERATIONQUALIFIER_DATA);\n+            ObjectIdentifier.of(KnownOIDs.GenerationQualifier);\n+\n+    \/\/ OID for the \"DNQUALIFIER=\" or \"DNQ=\" attribute, denoting DN\n+    \/\/ disambiguating information.\n+    public static final ObjectIdentifier DNQUALIFIER_OID =\n+            ObjectIdentifier.of(KnownOIDs.DNQualifier);\n@@ -1191,1 +1170,1 @@\n-            ObjectIdentifier.newInternal(ipAddress_data);\n+            ObjectIdentifier.of(KnownOIDs.SkipIPAddress);\n@@ -1195,1 +1174,1 @@\n-    \/\/ OID for \"DC=\" domain component attributes, used with DNSNames in DN\n+    \/\/ OID for \"DC=\" domain component attributes.used with DNSNames in DN\n@@ -1198,1 +1177,1 @@\n-            ObjectIdentifier.newInternal(DOMAIN_COMPONENT_DATA);\n+            ObjectIdentifier.of(KnownOIDs.UCL_DomainComponent);\n@@ -1202,1 +1181,1 @@\n-            ObjectIdentifier.newInternal(userid_data);\n+            ObjectIdentifier.of(KnownOIDs.UCL_UserID);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X500Name.java","additions":32,"deletions":53,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -255,1 +255,2 @@\n-            byte[] ext = crlEntry.getExtensionValue(\"2.5.29.21\");\n+            byte[] ext = crlEntry.getExtensionValue\n+                    (KnownOIDs.ReasonCode.value());\n@@ -405,1 +406,1 @@\n-            String extAlias = OIDMap.getName(new ObjectIdentifier(oid));\n+            String extAlias = OIDMap.getName(ObjectIdentifier.of(oid));\n@@ -409,1 +410,1 @@\n-                ObjectIdentifier findOID = new ObjectIdentifier(oid);\n+                ObjectIdentifier findOID = ObjectIdentifier.of(oid);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLEntryImpl.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1039,1 +1039,1 @@\n-            String extAlias = OIDMap.getName(new ObjectIdentifier(oid));\n+            String extAlias = OIDMap.getName(ObjectIdentifier.of(oid));\n@@ -1043,1 +1043,1 @@\n-                ObjectIdentifier findOID = new ObjectIdentifier(oid);\n+                ObjectIdentifier findOID = ObjectIdentifier.of(oid);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -133,8 +133,0 @@\n-    \/\/ recognized extension OIDS\n-    private static final String KEY_USAGE_OID = \"2.5.29.15\";\n-    private static final String EXTENDED_KEY_USAGE_OID = \"2.5.29.37\";\n-    private static final String BASIC_CONSTRAINT_OID = \"2.5.29.19\";\n-    private static final String SUBJECT_ALT_NAME_OID = \"2.5.29.17\";\n-    private static final String ISSUER_ALT_NAME_OID = \"2.5.29.18\";\n-    private static final String AUTH_INFO_ACCESS_OID = \"1.3.6.1.5.5.7.1.1\";\n-\n@@ -1428,1 +1420,1 @@\n-            ObjectIdentifier findOID = new ObjectIdentifier(oid);\n+            ObjectIdentifier findOID = ObjectIdentifier.of(oid);\n@@ -1531,1 +1523,2 @@\n-            byte[] ext = cert.getExtensionValue(EXTENDED_KEY_USAGE_OID);\n+            byte[] ext = cert.getExtensionValue\n+                    (KnownOIDs.extendedKeyUsage.value());\n@@ -1701,1 +1694,2 @@\n-            byte[] ext = cert.getExtensionValue(SUBJECT_ALT_NAME_OID);\n+            byte[] ext = cert.getExtensionValue\n+                    (KnownOIDs.SubjectAlternativeName.value());\n@@ -1764,1 +1758,2 @@\n-            byte[] ext = cert.getExtensionValue(ISSUER_ALT_NAME_OID);\n+            byte[] ext = cert.getExtensionValue\n+                    (KnownOIDs.IssuerAlternativeName.value());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-            oid = new ObjectIdentifier(strOid);\n+            oid = ObjectIdentifier.of(strOid);\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/Oid.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,1 +244,1 @@\n-                objId = new ObjectIdentifier(mechOid.toString());\n+                objId = ObjectIdentifier.of(mechOid.toString());\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSContextImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -415,1 +415,1 @@\n-            oid = new ObjectIdentifier\n+            oid = ObjectIdentifier.of\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSNameImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-            OID = new ObjectIdentifier(Krb5MechFactory.\n+            OID = ObjectIdentifier.of(Krb5MechFactory.\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/krb5\/Krb5Token.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-            OID = new ObjectIdentifier(SpNegoMechFactory.\n+            OID = ObjectIdentifier.of(SpNegoMechFactory.\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/spnego\/SpNegoToken.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-                    dout.putOID(new ObjectIdentifier(mech.toString()));\n+                    dout.putOID(ObjectIdentifier.of(mech.toString()));\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/GSSNameElement.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-                    (new ObjectIdentifier(cStub.getMech().toString()),\n+                    (ObjectIdentifier.of(cStub.getMech().toString()),\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/NativeGSSContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+import static sun.security.util.SecurityProviderConstants.getAliases;\n@@ -411,4 +412,0 @@\n-    private static String[] s(String ...aliases) {\n-        return aliases;\n-    }\n-\n@@ -419,1 +416,1 @@\n-        final String[] aliases;\n+        final List<String> aliases;\n@@ -423,1 +420,1 @@\n-                String[] aliases, int[] mechanisms) {\n+                List<String> aliases, int[] mechanisms) {\n@@ -466,1 +463,1 @@\n-            String[] aliases, int[] m) {\n+            List<String> aliases, int[] m) {\n@@ -470,0 +467,6 @@\n+    private static void dA(String type, String algorithm, String className,\n+            int[] m) {\n+        register(new Descriptor(type, algorithm, className,\n+                getAliases(algorithm), m));\n+    }\n+\n@@ -531,2 +534,1 @@\n-        d(MD, \"SHA1\",           P11Digest,\n-                s(\"SHA\", \"SHA-1\", \"1.3.14.3.2.26\", \"OID.1.3.14.3.2.26\"),\n+        dA(MD, \"SHA-1\",           P11Digest,\n@@ -535,2 +537,1 @@\n-        d(MD, \"SHA-224\",        P11Digest,\n-                s(\"2.16.840.1.101.3.4.2.4\", \"OID.2.16.840.1.101.3.4.2.4\"),\n+        dA(MD, \"SHA-224\",        P11Digest,\n@@ -538,2 +539,1 @@\n-        d(MD, \"SHA-256\",        P11Digest,\n-                s(\"2.16.840.1.101.3.4.2.1\", \"OID.2.16.840.1.101.3.4.2.1\"),\n+        dA(MD, \"SHA-256\",        P11Digest,\n@@ -541,2 +541,1 @@\n-        d(MD, \"SHA-384\",        P11Digest,\n-                s(\"2.16.840.1.101.3.4.2.2\", \"OID.2.16.840.1.101.3.4.2.2\"),\n+        dA(MD, \"SHA-384\",        P11Digest,\n@@ -544,2 +543,1 @@\n-        d(MD, \"SHA-512\",        P11Digest,\n-                s(\"2.16.840.1.101.3.4.2.3\", \"OID.2.16.840.1.101.3.4.2.3\"),\n+        dA(MD, \"SHA-512\",        P11Digest,\n@@ -547,2 +545,1 @@\n-        d(MD, \"SHA-512\/224\",        P11Digest,\n-                s(\"2.16.840.1.101.3.4.2.5\", \"OID.2.16.840.1.101.3.4.2.5\"),\n+        dA(MD, \"SHA-512\/224\",        P11Digest,\n@@ -550,2 +547,1 @@\n-        d(MD, \"SHA-512\/256\",        P11Digest,\n-                s(\"2.16.840.1.101.3.4.2.6\", \"OID.2.16.840.1.101.3.4.2.6\"),\n+        dA(MD, \"SHA-512\/256\",        P11Digest,\n@@ -556,2 +552,1 @@\n-        d(MAC, \"HmacSHA1\",      P11MAC,\n-                s(\"1.2.840.113549.2.7\", \"OID.1.2.840.113549.2.7\"),\n+        dA(MAC, \"HmacSHA1\",      P11MAC,\n@@ -559,2 +554,1 @@\n-        d(MAC, \"HmacSHA224\",    P11MAC,\n-                s(\"1.2.840.113549.2.8\", \"OID.1.2.840.113549.2.8\"),\n+        dA(MAC, \"HmacSHA224\",    P11MAC,\n@@ -562,2 +556,1 @@\n-        d(MAC, \"HmacSHA256\",    P11MAC,\n-                s(\"1.2.840.113549.2.9\", \"OID.1.2.840.113549.2.9\"),\n+        dA(MAC, \"HmacSHA256\",    P11MAC,\n@@ -565,2 +558,1 @@\n-        d(MAC, \"HmacSHA384\",    P11MAC,\n-                s(\"1.2.840.113549.2.10\", \"OID.1.2.840.113549.2.10\"),\n+        dA(MAC, \"HmacSHA384\",    P11MAC,\n@@ -568,2 +560,1 @@\n-        d(MAC, \"HmacSHA512\",    P11MAC,\n-                s(\"1.2.840.113549.2.11\", \"OID.1.2.840.113549.2.11\"),\n+        dA(MAC, \"HmacSHA512\",    P11MAC,\n@@ -571,2 +562,1 @@\n-        d(MAC, \"HmacSHA512\/224\",    P11MAC,\n-                s(\"1.2.840.113549.2.12\", \"OID.1.2.840.113549.2.12\"),\n+        dA(MAC, \"HmacSHA512\/224\",    P11MAC,\n@@ -574,2 +564,1 @@\n-        d(MAC, \"HmacSHA512\/256\",    P11MAC,\n-                s(\"1.2.840.113549.2.13\", \"OID.1.2.840.113549.2.13\"),\n+        dA(MAC, \"HmacSHA512\/256\",    P11MAC,\n@@ -584,1 +573,1 @@\n-                s(\"1.2.840.113549.1.1\", \"OID.1.2.840.113549.1.1\"),\n+                getAliases(\"PKCS1\"),\n@@ -587,2 +576,3 @@\n-        d(KPG, \"DSA\",           P11KeyPairGenerator,\n-                s(\"1.3.14.3.2.12\", \"1.2.840.10040.4.1\", \"OID.1.2.840.10040.4.1\"),\n+        List<String> dhAlias = List.of(\"DiffieHellman\");\n+\n+        dA(KPG, \"DSA\",           P11KeyPairGenerator,\n@@ -590,1 +580,2 @@\n-        d(KPG, \"DH\",            P11KeyPairGenerator,    s(\"DiffieHellman\"),\n+        d(KPG, \"DH\",            P11KeyPairGenerator,\n+                dhAlias,\n@@ -595,1 +586,1 @@\n-        d(KG,  \"ARCFOUR\",       P11KeyGenerator,        s(\"RC4\"),\n+        dA(KG,  \"ARCFOUR\",       P11KeyGenerator,\n@@ -611,1 +602,1 @@\n-                s(\"1.2.840.113549.1.1\", \"OID.1.2.840.113549.1.1\"),\n+                getAliases(\"PKCS1\"),\n@@ -613,2 +604,1 @@\n-        d(KF, \"DSA\",            P11DSAKeyFactory,\n-                s(\"1.3.14.3.2.12\", \"1.2.840.10040.4.1\", \"OID.1.2.840.10040.4.1\"),\n+        dA(KF, \"DSA\",            P11DSAKeyFactory,\n@@ -616,1 +606,2 @@\n-        d(KF, \"DH\",             P11DHKeyFactory,        s(\"DiffieHellman\"),\n+        d(KF, \"DH\",             P11DHKeyFactory,\n+                dhAlias,\n@@ -624,2 +615,1 @@\n-        d(AGP, \"EC\",            \"sun.security.util.ECParameters\",\n-                s(\"1.2.840.10045.2.1\"),\n+        dA(AGP, \"EC\",            \"sun.security.util.ECParameters\",\n@@ -633,1 +623,1 @@\n-        d(AGP, \"ChaCha20-Poly1305\",\n+        dA(AGP, \"ChaCha20-Poly1305\",\n@@ -635,1 +625,0 @@\n-                s(\"1.2.840.113549.1.9.16.3.18\", \"OID.1.2.840.113549.1.9.16.3.18\"),\n@@ -638,1 +627,2 @@\n-        d(KA, \"DH\",             P11KeyAgreement,        s(\"DiffieHellman\"),\n+        d(KA, \"DH\",             P11KeyAgreement,\n+                dhAlias,\n@@ -643,1 +633,1 @@\n-        d(SKF, \"ARCFOUR\",       P11SecretKeyFactory,    s(\"RC4\"),\n+        dA(SKF, \"ARCFOUR\",      P11SecretKeyFactory,\n@@ -649,2 +639,1 @@\n-        d(SKF, \"AES\",           P11SecretKeyFactory,\n-                s(\"2.16.840.1.101.3.4.1\", \"OID.2.16.840.1.101.3.4.1\"),\n+        dA(SKF, \"AES\",          P11SecretKeyFactory,\n@@ -658,1 +647,1 @@\n-        d(CIP, \"ARCFOUR\",                       P11Cipher,      s(\"RC4\"),\n+        dA(CIP, \"ARCFOUR\",                      P11Cipher,\n@@ -666,1 +655,2 @@\n-        d(CIP, \"DES\/ECB\/PKCS5Padding\",          P11Cipher,      s(\"DES\"),\n+        d(CIP, \"DES\/ECB\/PKCS5Padding\",          P11Cipher,\n+                List.of(\"DES\"),\n@@ -675,1 +665,2 @@\n-        d(CIP, \"DESede\/ECB\/PKCS5Padding\",       P11Cipher,      s(\"DESede\"),\n+        d(CIP, \"DESede\/ECB\/PKCS5Padding\",       P11Cipher,\n+                List.of(\"DESede\"),\n@@ -679,2 +670,1 @@\n-        d(CIP, \"AES_128\/CBC\/NoPadding\",          P11Cipher,\n-                s(\"2.16.840.1.101.3.4.1.2\", \"OID.2.16.840.1.101.3.4.1.2\"),\n+        dA(CIP, \"AES_128\/CBC\/NoPadding\",        P11Cipher,\n@@ -682,2 +672,1 @@\n-        d(CIP, \"AES_192\/CBC\/NoPadding\",          P11Cipher,\n-                s(\"2.16.840.1.101.3.4.1.22\", \"OID.2.16.840.1.101.3.4.1.22\"),\n+        dA(CIP, \"AES_192\/CBC\/NoPadding\",        P11Cipher,\n@@ -685,2 +674,1 @@\n-        d(CIP, \"AES_256\/CBC\/NoPadding\",          P11Cipher,\n-                s(\"2.16.840.1.101.3.4.1.42\", \"OID.2.16.840.1.101.3.4.1.42\"),\n+        dA(CIP, \"AES_256\/CBC\/NoPadding\",        P11Cipher,\n@@ -692,2 +680,1 @@\n-        d(CIP, \"AES_128\/ECB\/NoPadding\",          P11Cipher,\n-                s(\"2.16.840.1.101.3.4.1.1\", \"OID.2.16.840.1.101.3.4.1.1\"),\n+        dA(CIP, \"AES_128\/ECB\/NoPadding\",        P11Cipher,\n@@ -695,2 +682,1 @@\n-        d(CIP, \"AES_192\/ECB\/NoPadding\",          P11Cipher,\n-                s(\"2.16.840.1.101.3.4.1.21\", \"OID.2.16.840.1.101.3.4.1.21\"),\n+        dA(CIP, \"AES_192\/ECB\/NoPadding\",        P11Cipher,\n@@ -698,2 +684,1 @@\n-        d(CIP, \"AES_256\/ECB\/NoPadding\",          P11Cipher,\n-                s(\"2.16.840.1.101.3.4.1.41\", \"OID.2.16.840.1.101.3.4.1.41\"),\n+        dA(CIP, \"AES_256\/ECB\/NoPadding\",        P11Cipher,\n@@ -701,1 +686,2 @@\n-        d(CIP, \"AES\/ECB\/PKCS5Padding\",          P11Cipher,      s(\"AES\"),\n+        d(CIP, \"AES\/ECB\/PKCS5Padding\",          P11Cipher,\n+                List.of(\"AES\"),\n@@ -708,2 +694,1 @@\n-        d(CIP, \"AES_128\/GCM\/NoPadding\",          P11AEADCipher,\n-                s(\"2.16.840.1.101.3.4.1.6\", \"OID.2.16.840.1.101.3.4.1.6\"),\n+        dA(CIP, \"AES_128\/GCM\/NoPadding\",        P11AEADCipher,\n@@ -711,2 +696,1 @@\n-        d(CIP, \"AES_192\/GCM\/NoPadding\",          P11AEADCipher,\n-                s(\"2.16.840.1.101.3.4.1.26\", \"OID.2.16.840.1.101.3.4.1.26\"),\n+        dA(CIP, \"AES_192\/GCM\/NoPadding\",        P11AEADCipher,\n@@ -714,2 +698,1 @@\n-        d(CIP, \"AES_256\/GCM\/NoPadding\",          P11AEADCipher,\n-                s(\"2.16.840.1.101.3.4.1.46\", \"OID.2.16.840.1.101.3.4.1.46\"),\n+        dA(CIP, \"AES_256\/GCM\/NoPadding\",        P11AEADCipher,\n@@ -723,2 +706,1 @@\n-        d(CIP, \"ChaCha20-Poly1305\",             P11AEADCipher,\n-                s(\"1.2.840.113549.1.9.16.3.18\", \"OID.1.2.840.113549.1.9.16.3.18\"),\n+        dA(CIP, \"ChaCha20-Poly1305\",            P11AEADCipher,\n@@ -727,1 +709,2 @@\n-        d(CIP, \"RSA\/ECB\/PKCS1Padding\",          P11RSACipher,   s(\"RSA\"),\n+        d(CIP, \"RSA\/ECB\/PKCS1Padding\",          P11RSACipher,\n+                List.of(\"RSA\"),\n@@ -732,1 +715,2 @@\n-        d(SIG, \"RawDSA\",        P11Signature,   s(\"NONEwithDSA\"),\n+        d(SIG, \"RawDSA\",        P11Signature,\n+                List.of(\"NONEwithDSA\"),\n@@ -734,3 +718,1 @@\n-        d(SIG, \"DSA\",           P11Signature,\n-                s(\"SHA1withDSA\", \"1.3.14.3.2.13\", \"1.3.14.3.2.27\",\n-                  \"1.2.840.10040.4.3\", \"OID.1.2.840.10040.4.3\"),\n+        dA(SIG, \"SHA1withDSA\",           P11Signature,\n@@ -738,2 +720,1 @@\n-        d(SIG, \"SHA224withDSA\", P11Signature,\n-                s(\"2.16.840.1.101.3.4.3.1\", \"OID.2.16.840.1.101.3.4.3.1\"),\n+        dA(SIG, \"SHA224withDSA\", P11Signature,\n@@ -741,2 +722,1 @@\n-        d(SIG, \"SHA256withDSA\", P11Signature,\n-                s(\"2.16.840.1.101.3.4.3.2\", \"OID.2.16.840.1.101.3.4.3.2\"),\n+        dA(SIG, \"SHA256withDSA\", P11Signature,\n@@ -744,2 +724,1 @@\n-        d(SIG, \"SHA384withDSA\", P11Signature,\n-                s(\"2.16.840.1.101.3.4.3.3\", \"OID.2.16.840.1.101.3.4.3.3\"),\n+        dA(SIG, \"SHA384withDSA\", P11Signature,\n@@ -747,2 +726,1 @@\n-        d(SIG, \"SHA512withDSA\", P11Signature,\n-                s(\"2.16.840.1.101.3.4.3.4\", \"OID.2.16.840.1.101.3.4.3.4\"),\n+        dA(SIG, \"SHA512withDSA\", P11Signature,\n@@ -751,1 +729,1 @@\n-                s(\"NONEwithDSAinP1363Format\"),\n+                List.of(\"NONEwithDSAinP1363Format\"),\n@@ -754,1 +732,1 @@\n-                s(\"SHA1withDSAinP1363Format\"),\n+                List.of(\"SHA1withDSAinP1363Format\"),\n@@ -759,2 +737,1 @@\n-        d(SIG, \"SHA1withECDSA\", P11Signature,\n-                s(\"ECDSA\", \"1.2.840.10045.4.1\", \"OID.1.2.840.10045.4.1\"),\n+        dA(SIG, \"SHA1withECDSA\", P11Signature,\n@@ -762,2 +739,1 @@\n-        d(SIG, \"SHA224withECDSA\",       P11Signature,\n-                s(\"1.2.840.10045.4.3.1\", \"OID.1.2.840.10045.4.3.1\"),\n+        dA(SIG, \"SHA224withECDSA\",       P11Signature,\n@@ -765,2 +741,1 @@\n-        d(SIG, \"SHA256withECDSA\",       P11Signature,\n-                s(\"1.2.840.10045.4.3.2\", \"OID.1.2.840.10045.4.3.2\"),\n+        dA(SIG, \"SHA256withECDSA\",       P11Signature,\n@@ -768,2 +743,1 @@\n-        d(SIG, \"SHA384withECDSA\",       P11Signature,\n-                s(\"1.2.840.10045.4.3.3\", \"OID.1.2.840.10045.4.3.3\"),\n+        dA(SIG, \"SHA384withECDSA\",       P11Signature,\n@@ -771,2 +745,1 @@\n-        d(SIG, \"SHA512withECDSA\",       P11Signature,\n-                s(\"1.2.840.10045.4.3.4\", \"OID.1.2.840.10045.4.3.4\"),\n+        dA(SIG, \"SHA512withECDSA\",       P11Signature,\n@@ -786,2 +759,1 @@\n-        d(SIG, \"MD2withRSA\",    P11Signature,\n-                s(\"1.2.840.113549.1.1.2\", \"OID.1.2.840.113549.1.1.2\"),\n+        dA(SIG, \"MD2withRSA\",    P11Signature,\n@@ -789,2 +761,1 @@\n-        d(SIG, \"MD5withRSA\",    P11Signature,\n-                s(\"1.2.840.113549.1.1.4\", \"OID.1.2.840.113549.1.1.4\"),\n+        dA(SIG, \"MD5withRSA\",    P11Signature,\n@@ -792,3 +763,1 @@\n-        d(SIG, \"SHA1withRSA\",   P11Signature,\n-                s(\"1.2.840.113549.1.1.5\", \"OID.1.2.840.113549.1.1.5\",\n-                  \"1.3.14.3.2.29\"),\n+        dA(SIG, \"SHA1withRSA\",   P11Signature,\n@@ -796,2 +765,1 @@\n-        d(SIG, \"SHA224withRSA\", P11Signature,\n-                s(\"1.2.840.113549.1.1.14\", \"OID.1.2.840.113549.1.1.14\"),\n+        dA(SIG, \"SHA224withRSA\", P11Signature,\n@@ -799,2 +767,1 @@\n-        d(SIG, \"SHA256withRSA\", P11Signature,\n-                s(\"1.2.840.113549.1.1.11\", \"OID.1.2.840.113549.1.1.11\"),\n+        dA(SIG, \"SHA256withRSA\", P11Signature,\n@@ -802,2 +769,1 @@\n-        d(SIG, \"SHA384withRSA\", P11Signature,\n-                s(\"1.2.840.113549.1.1.12\", \"OID.1.2.840.113549.1.1.12\"),\n+        dA(SIG, \"SHA384withRSA\", P11Signature,\n@@ -805,2 +771,1 @@\n-        d(SIG, \"SHA512withRSA\", P11Signature,\n-                s(\"1.2.840.113549.1.1.13\", \"OID.1.2.840.113549.1.1.13\"),\n+        dA(SIG, \"SHA512withRSA\", P11Signature,\n@@ -808,2 +773,1 @@\n-        d(SIG, \"RSASSA-PSS\", P11PSSSignature,\n-                s(\"1.2.840.113549.1.1.10\", \"OID.1.2.840.113549.1.1.10\"),\n+        dA(SIG, \"RSASSA-PSS\", P11PSSSignature,\n@@ -824,1 +788,1 @@\n-                    s(\"SunTls12RsaPremasterSecret\"),\n+                List.of(\"SunTls12RsaPremasterSecret\"),\n@@ -1131,1 +1095,1 @@\n-                        s(\"PKCS11-\" + config.getName()),\n+                        List.of(\"PKCS11-\" + config.getName()),\n@@ -1151,2 +1115,2 @@\n-                String className, String[] al, long mechanism) {\n-            super(token.provider, type, algorithm, className, toList(al),\n+                String className, List<String> al, long mechanism) {\n+            super(token.provider, type, algorithm, className, al,\n@@ -1158,4 +1122,0 @@\n-        private static List<String> toList(String[] aliases) {\n-            return (aliases == null) ? null : Arrays.asList(aliases);\n-        }\n-\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SunPKCS11.java","additions":86,"deletions":126,"binary":false,"changes":212,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import static sun.security.util.SecurityProviderConstants.*;\n@@ -72,0 +73,7 @@\n+    private static class ProviderServiceA extends ProviderService {\n+        ProviderServiceA(Provider p, String type, String algo, String cn,\n+            HashMap<String, String> attrs) {\n+            super(p, type, algo, cn, getAliases(algo), attrs);\n+        }\n+    }\n+\n@@ -79,3 +87,2 @@\n-            String[] aliases, HashMap<String, String> attrs) {\n-            super(p, type, algo, cn,\n-                  (aliases == null? null : Arrays.asList(aliases)), attrs);\n+            List<String> aliases, HashMap<String, String> attrs) {\n+            super(p, type, algo, cn, aliases, attrs);\n@@ -187,1 +194,1 @@\n-            new String[] { \"EllipticCurve\" }, ATTRS));\n+            List.of(\"EllipticCurve\"), ATTRS));\n@@ -195,1 +202,0 @@\n-        Pattern nameSplitPattern = Pattern.compile(CurveDB.SPLIT_PATTERN);\n@@ -207,2 +213,1 @@\n-\n-            String[] commonNames = nameSplitPattern.split(namedCurve.getName());\n+            String[] commonNames = namedCurve.getNameAndAliases();\n@@ -210,1 +215,1 @@\n-                names.append(commonName.trim());\n+                names.append(commonName);\n@@ -221,4 +226,2 @@\n-        putService(new ProviderService(this, \"AlgorithmParameters\",\n-            \"EC\", \"sun.security.util.ECParameters\",\n-            new String[] { \"EllipticCurve\", \"1.2.840.10045.2.1\", \"OID.1.2.840.10045.2.1\" },\n-            apAttrs));\n+        putService(new ProviderServiceA(this, \"AlgorithmParameters\",\n+            \"EC\", \"sun.security.util.ECParameters\", apAttrs));\n@@ -242,1 +245,1 @@\n-        putService(new ProviderService(this, \"Signature\",\n+        putService(new ProviderServiceA(this, \"Signature\",\n@@ -244,1 +247,0 @@\n-            new String[] { \"1.2.840.10045.4.1\", \"OID.1.2.840.10045.4.1\" },\n@@ -246,1 +248,1 @@\n-        putService(new ProviderService(this, \"Signature\",\n+        putService(new ProviderServiceA(this, \"Signature\",\n@@ -248,1 +250,0 @@\n-            new String[] { \"1.2.840.10045.4.3.1\", \"OID.1.2.840.10045.4.3.1\"},\n@@ -250,1 +251,1 @@\n-        putService(new ProviderService(this, \"Signature\",\n+        putService(new ProviderServiceA(this, \"Signature\",\n@@ -252,1 +253,0 @@\n-            new String[] { \"1.2.840.10045.4.3.2\", \"OID.1.2.840.10045.4.3.2\"},\n@@ -254,1 +254,1 @@\n-        putService(new ProviderService(this, \"Signature\",\n+        putService(new ProviderServiceA(this, \"Signature\",\n@@ -256,1 +256,0 @@\n-            new String[] { \"1.2.840.10045.4.3.3\", \"OID.1.2.840.10045.4.3.3\" },\n@@ -258,1 +257,1 @@\n-        putService(new ProviderService(this, \"Signature\",\n+        putService(new ProviderServiceA(this, \"Signature\",\n@@ -260,1 +259,0 @@\n-            new String[] { \"1.2.840.10045.4.3.4\", \"OID.1.2.840.10045.4.3.4\" },\n@@ -287,1 +285,1 @@\n-            new String[] { \"EllipticCurve\" }, ATTRS));\n+            List.of(\"EllipticCurve\"), ATTRS));\n@@ -304,1 +302,1 @@\n-        putService(new ProviderService(this, \"KeyFactory\",\n+        putService(new ProviderServiceA(this, \"KeyFactory\",\n@@ -306,2 +304,2 @@\n-            new String[]{\"1.3.101.110\", \"OID.1.3.101.110\"}, ATTRS));\n-        putService(new ProviderService(this, \"KeyFactory\",\n+            ATTRS));\n+        putService(new ProviderServiceA(this, \"KeyFactory\",\n@@ -309,1 +307,1 @@\n-            new String[]{\"1.3.101.111\", \"OID.1.3.101.111\"}, ATTRS));\n+            ATTRS));\n@@ -313,1 +311,1 @@\n-        putService(new ProviderService(this, \"KeyPairGenerator\",\n+        putService(new ProviderServiceA(this, \"KeyPairGenerator\",\n@@ -315,2 +313,2 @@\n-            new String[]{\"1.3.101.110\", \"OID.1.3.101.110\"}, ATTRS));\n-        putService(new ProviderService(this, \"KeyPairGenerator\",\n+            ATTRS));\n+        putService(new ProviderServiceA(this, \"KeyPairGenerator\",\n@@ -318,1 +316,1 @@\n-            new String[]{\"1.3.101.111\", \"OID.1.3.101.111\"}, ATTRS));\n+            ATTRS));\n@@ -322,1 +320,1 @@\n-        putService(new ProviderService(this, \"KeyAgreement\",\n+        putService(new ProviderServiceA(this, \"KeyAgreement\",\n@@ -324,2 +322,2 @@\n-            new String[]{\"1.3.101.110\", \"OID.1.3.101.110\"}, ATTRS));\n-        putService(new ProviderService(this, \"KeyAgreement\",\n+            ATTRS));\n+        putService(new ProviderServiceA(this, \"KeyAgreement\",\n@@ -327,2 +325,1 @@\n-            new String[]{\"1.3.101.111\", \"OID.1.3.101.111\"}, ATTRS));\n-\n+            ATTRS));\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/SunEC.java","additions":33,"deletions":36,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,2 +123,2 @@\n-            addParameters(255, p, 121665, (byte) 0x09, 3,\n-                new int[]{1, 3, 101, 110}, NamedParameterSpec.X25519.getName(),\n+            addParameters(255, p, 121665, (byte)0x09, 3,\n+                \"1.3.101.110\", NamedParameterSpec.X25519.getName(),\n@@ -135,2 +135,2 @@\n-            addParameters(448, p, 39081, (byte) 0x05, 2,\n-                new int[]{1, 3, 101, 111}, NamedParameterSpec.X448.getName(),\n+            addParameters(448, p, 39081, (byte)0x05, 2,\n+                \"1.3.101.111\", NamedParameterSpec.X448.getName(),\n@@ -149,1 +149,1 @@\n-        byte basePoint, int logCofactor, int[] oidBytes, String name,\n+        byte basePoint, int logCofactor, String objectId, String name,\n@@ -154,1 +154,1 @@\n-        ObjectIdentifier oid = new ObjectIdentifier(oidBytes);\n+        ObjectIdentifier oid = ObjectIdentifier.of(objectId);\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XECParameters.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-import java.util.Arrays;\n+import java.util.List;\n@@ -38,0 +38,1 @@\n+import static sun.security.util.SecurityProviderConstants.getAliases;\n@@ -59,0 +60,6 @@\n+    private static class ProviderServiceA extends ProviderService {\n+        ProviderServiceA(Provider p, String type, String algo, String cn,\n+                HashMap<String, String> attrs) {\n+            super(p, type, algo, cn, getAliases(algo), attrs);\n+        }\n+    }\n@@ -60,1 +67,1 @@\n-    private static final class ProviderService extends Provider.Service {\n+    private static class ProviderService extends Provider.Service {\n@@ -66,3 +73,2 @@\n-            String[] aliases, HashMap<String, String> attrs) {\n-            super(p, type, algo, cn,\n-                  (aliases == null? null : Arrays.asList(aliases)), attrs);\n+            List<String> aliases, HashMap<String, String> attrs) {\n+            super(p, type, algo, cn, aliases, attrs);\n@@ -191,3 +197,3 @@\n-                putService(new ProviderService(p, \"Signature\",\n-                           \"SHA256withRSA\", \"sun.security.mscapi.CSignature$SHA256withRSA\",\n-                           new String[] { \"1.2.840.113549.1.1.11\", \"OID.1.2.840.113549.1.1.11\" },\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"SHA256withRSA\",\n+                           \"sun.security.mscapi.CSignature$SHA256withRSA\",\n@@ -195,3 +201,3 @@\n-                putService(new ProviderService(p, \"Signature\",\n-                           \"SHA384withRSA\", \"sun.security.mscapi.CSignature$SHA384withRSA\",\n-                           new String[] { \"1.2.840.113549.1.1.12\", \"OID.1.2.840.113549.1.1.12\" },\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"SHA384withRSA\",\n+                           \"sun.security.mscapi.CSignature$SHA384withRSA\",\n@@ -199,3 +205,6 @@\n-                putService(new ProviderService(p, \"Signature\",\n-                           \"SHA512withRSA\", \"sun.security.mscapi.CSignature$SHA512withRSA\",\n-                           new String[] { \"1.2.840.113549.1.1.13\", \"OID.1.2.840.113549.1.1.13\" },\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"SHA512withRSA\",\n+                           \"sun.security.mscapi.CSignature$SHA512withRSA\",\n+                           attrs));\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"RSASSA-PSS\", \"sun.security.mscapi.CSignature$PSS\",\n@@ -203,4 +212,0 @@\n-                putService(new ProviderService(p, \"Signature\",\n-                        \"RSASSA-PSS\", \"sun.security.mscapi.CSignature$PSS\",\n-                        new String[] { \"1.2.840.113549.1.1.10\", \"OID.1.2.840.113549.1.1.10\" },\n-                        attrs));\n@@ -213,20 +218,20 @@\n-                putService(new ProviderService(p, \"Signature\",\n-                        \"SHA1withECDSA\", \"sun.security.mscapi.CSignature$SHA1withECDSA\",\n-                        new String[] { \"1.2.840.10045.4.1\", \"OID.1.2.840.10045.4.1\" },\n-                        attrs));\n-                putService(new ProviderService(p, \"Signature\",\n-                        \"SHA224withECDSA\", \"sun.security.mscapi.CSignature$SHA224withECDSA\",\n-                        new String[] { \"1.2.840.10045.4.3.1\", \"OID.1.2.840.10045.4.3.1\"},\n-                        attrs));\n-                putService(new ProviderService(p, \"Signature\",\n-                        \"SHA256withECDSA\", \"sun.security.mscapi.CSignature$SHA256withECDSA\",\n-                        new String[] { \"1.2.840.10045.4.3.2\", \"OID.1.2.840.10045.4.3.2\"},\n-                        attrs));\n-                putService(new ProviderService(p, \"Signature\",\n-                        \"SHA384withECDSA\", \"sun.security.mscapi.CSignature$SHA384withECDSA\",\n-                        new String[] { \"1.2.840.10045.4.3.3\", \"OID.1.2.840.10045.4.3.3\"},\n-                        attrs));\n-                putService(new ProviderService(p, \"Signature\",\n-                        \"SHA512withECDSA\", \"sun.security.mscapi.CSignature$SHA512withECDSA\",\n-                        new String[] { \"1.2.840.10045.4.3.4\", \"OID.1.2.840.10045.4.3.4\"},\n-                        attrs));\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"SHA1withECDSA\",\n+                           \"sun.security.mscapi.CSignature$SHA1withECDSA\",\n+                           attrs));\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"SHA224withECDSA\",\n+                           \"sun.security.mscapi.CSignature$SHA224withECDSA\",\n+                           attrs));\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"SHA256withECDSA\",\n+                           \"sun.security.mscapi.CSignature$SHA256withECDSA\",\n+                           attrs));\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"SHA384withECDSA\",\n+                           \"sun.security.mscapi.CSignature$SHA384withECDSA\",\n+                           attrs));\n+                putService(new ProviderServiceA(p, \"Signature\",\n+                           \"SHA512withECDSA\",\n+                           \"sun.security.mscapi.CSignature$SHA512withECDSA\",\n+                           attrs));\n","filename":"src\/jdk.crypto.mscapi\/windows\/classes\/sun\/security\/mscapi\/SunMSCAPI.java","additions":44,"deletions":39,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,3 @@\n+import java.util.List;\n+import static sun.security.util.SecurityProviderConstants.getAliases;\n+\n@@ -39,2 +42,2 @@\n-        { sd(\"MessageDigest\", \"SHA\", \"com.oracle.security.ucrypto.NativeDigestMD$SHA1\",\n-             \"SHA-1\", \"SHA1\")\n+        { sd(\"MessageDigest\", \"SHA-1\", \"com.oracle.security.ucrypto.NativeDigestMD$SHA1\",\n+             getAliases(\"SHA-1\"))\n@@ -44,1 +47,1 @@\n-             \"2.16.840.1.101.3.4.2.1\", \"OID.2.16.840.1.101.3.4.2.1\")\n+             getAliases(\"SHA-256\"))\n@@ -48,1 +51,1 @@\n-             \"2.16.840.1.101.3.4.2.2\", \"OID.2.16.840.1.101.3.4.2.2\")\n+             getAliases(\"SHA-384\"))\n@@ -52,1 +55,1 @@\n-             \"2.16.840.1.101.3.4.2.3\", \"OID.2.16.840.1.101.3.4.2.3\")\n+             getAliases(\"SHA-512\"))\n@@ -57,1 +60,6 @@\n-    private static ServiceDesc sd(String type, String algo, String cn, String... aliases) {\n+    private static ServiceDesc sd(String type, String algo, String cn) {\n+        return new ServiceDesc(type, algo, cn, null);\n+    }\n+\n+    private static ServiceDesc sd(String type, String algo, String cn,\n+            List<String> aliases) {\n","filename":"src\/jdk.crypto.ucrypto\/solaris\/classes\/com\/oracle\/security\/ucrypto\/LibMDMech.java","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    ServiceDesc(String type, String algo, String cn, String[] aliases) {\n+    ServiceDesc(String type, String algo, String cn, List<String> aliases) {\n@@ -49,5 +49,1 @@\n-        if (aliases != null) {\n-            this.aliases = Arrays.asList(aliases);\n-        } else {\n-            this.aliases = null;\n-        }\n+        this.aliases = aliases;\n","filename":"src\/jdk.crypto.ucrypto\/solaris\/classes\/com\/oracle\/security\/ucrypto\/ServiceDesc.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,3 @@\n+import java.util.List;\n+import static sun.security.util.SecurityProviderConstants.getAliases;\n+\n@@ -39,7 +42,7 @@\n-             \"AES\"),\n-          sd(\"Cipher\", \"AES_128\/ECB\/NoPadding\", \"com.oracle.security.ucrypto.NativeCipher$AesEcbNoPadding\",\n-             \"2.16.840.1.101.3.4.1.1\", \"OID.2.16.840.1.101.3.4.1.1\"),\n-          sd(\"Cipher\", \"AES_192\/ECB\/NoPadding\", \"com.oracle.security.ucrypto.NativeCipher$AesEcbNoPadding\",\n-             \"2.16.840.1.101.3.4.1.21\", \"OID.2.16.840.1.101.3.4.1.21\"),\n-          sd(\"Cipher\", \"AES_256\/ECB\/NoPadding\", \"com.oracle.security.ucrypto.NativeCipher$AesEcbNoPadding\",\n-             \"2.16.840.1.101.3.4.1.41\", \"OID.2.16.840.1.101.3.4.1.41\")\n+             List.of(\"AES\")),\n+          sdA(\"Cipher\", \"AES_128\/ECB\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeCipher$AesEcbNoPadding\"),\n+          sdA(\"Cipher\", \"AES_192\/ECB\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeCipher$AesEcbNoPadding\"),\n+          sdA(\"Cipher\", \"AES_256\/ECB\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeCipher$AesEcbNoPadding\")\n@@ -50,6 +53,6 @@\n-          sd(\"Cipher\", \"AES_128\/CBC\/NoPadding\", \"com.oracle.security.ucrypto.NativeCipher$AesCbcNoPadding\",\n-             \"2.16.840.1.101.3.4.1.2\", \"OID.2.16.840.1.101.3.4.1.2\"),\n-          sd(\"Cipher\", \"AES_192\/CBC\/NoPadding\", \"com.oracle.security.ucrypto.NativeCipher$AesCbcNoPadding\",\n-             \"2.16.840.1.101.3.4.1.22\", \"OID.2.16.840.1.101.3.4.1.22\"),\n-          sd(\"Cipher\", \"AES_256\/CBC\/NoPadding\", \"com.oracle.security.ucrypto.NativeCipher$AesCbcNoPadding\",\n-             \"2.16.840.1.101.3.4.1.42\", \"OID.2.16.840.1.101.3.4.1.42\")\n+          sdA(\"Cipher\", \"AES_128\/CBC\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeCipher$AesCbcNoPadding\"),\n+          sdA(\"Cipher\", \"AES_192\/CBC\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeCipher$AesCbcNoPadding\"),\n+          sdA(\"Cipher\", \"AES_256\/CBC\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeCipher$AesCbcNoPadding\")\n@@ -63,6 +66,6 @@\n-          sd(\"Cipher\", \"AES_128\/GCM\/NoPadding\", \"com.oracle.security.ucrypto.NativeGCMCipher$AesGcmNoPadding\",\n-             \"2.16.840.1.101.3.4.1.6\", \"OID.2.16.840.1.101.3.4.1.6\"),\n-          sd(\"Cipher\", \"AES_192\/GCM\/NoPadding\", \"com.oracle.security.ucrypto.NativeGCMCipher$AesGcmNoPadding\",\n-             \"2.16.840.1.101.3.4.1.26\", \"OID.2.16.840.1.101.3.4.1.26\"),\n-          sd(\"Cipher\", \"AES_256\/GCM\/NoPadding\", \"com.oracle.security.ucrypto.NativeGCMCipher$AesGcmNoPadding\",\n-             \"2.16.840.1.101.3.4.1.46\", \"OID.2.16.840.1.101.3.4.1.46\")\n+          sdA(\"Cipher\", \"AES_128\/GCM\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeGCMCipher$AesGcmNoPadding\"),\n+          sdA(\"Cipher\", \"AES_192\/GCM\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeGCMCipher$AesGcmNoPadding\"),\n+          sdA(\"Cipher\", \"AES_256\/GCM\/NoPadding\",\n+              \"com.oracle.security.ucrypto.NativeGCMCipher$AesGcmNoPadding\")\n@@ -78,1 +81,1 @@\n-             \"RSA\")\n+             List.of(\"RSA\"))\n@@ -83,2 +86,2 @@\n-        { sd(\"Signature\", \"MD5withRSA\", \"com.oracle.security.ucrypto.NativeRSASignature$MD5\",\n-             \"1.2.840.113549.1.1.4\", \"OID.1.2.840.113549.1.1.4\")\n+        { sdA(\"Signature\", \"MD5withRSA\",\n+              \"com.oracle.security.ucrypto.NativeRSASignature$MD5\")\n@@ -87,3 +90,2 @@\n-        { sd(\"Signature\", \"SHA1withRSA\", \"com.oracle.security.ucrypto.NativeRSASignature$SHA1\",\n-             \"1.2.840.113549.1.1.5\", \"OID.1.2.840.113549.1.1.5\",\n-             \"1.3.14.3.2.29\")\n+        { sdA(\"Signature\", \"SHA1withRSA\",\n+              \"com.oracle.security.ucrypto.NativeRSASignature$SHA1\")\n@@ -92,2 +94,2 @@\n-        { sd(\"Signature\", \"SHA256withRSA\", \"com.oracle.security.ucrypto.NativeRSASignature$SHA256\",\n-             \"1.2.840.113549.1.1.11\", \"OID.1.2.840.113549.1.1.11\")\n+        { sdA(\"Signature\", \"SHA256withRSA\",\n+              \"com.oracle.security.ucrypto.NativeRSASignature$SHA256\")\n@@ -96,2 +98,2 @@\n-        { sd(\"Signature\", \"SHA384withRSA\", \"com.oracle.security.ucrypto.NativeRSASignature$SHA384\",\n-             \"1.2.840.113549.1.1.12\", \"OID.1.2.840.113549.1.1.12\")\n+        { sdA(\"Signature\", \"SHA384withRSA\",\n+              \"com.oracle.security.ucrypto.NativeRSASignature$SHA384\")\n@@ -100,2 +102,2 @@\n-        { sd(\"Signature\", \"SHA512withRSA\", \"com.oracle.security.ucrypto.NativeRSASignature$SHA512\",\n-             \"1.2.840.113549.1.1.13\", \"OID.1.2.840.113549.1.1.13\")\n+        { sdA(\"Signature\", \"SHA512withRSA\",\n+             \"com.oracle.security.ucrypto.NativeRSASignature$SHA512\")\n@@ -105,1 +107,2 @@\n-        { sd(\"MessageDigest\", \"MD5\", \"com.oracle.security.ucrypto.NativeDigest$MD5\") }),\n+        { sd(\"MessageDigest\", \"MD5\", \"com.oracle.security.ucrypto.NativeDigest$MD5\")\n+        }),\n@@ -107,1 +110,3 @@\n-        { sd(\"MessageDigest\", \"SHA\", \"com.oracle.security.ucrypto.NativeDigest$SHA1\", \"SHA-1\", \"SHA1\") }),\n+        { sdA(\"MessageDigest\", \"SHA-1\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA1\")\n+        }),\n@@ -109,3 +114,3 @@\n-        { sd(\"MessageDigest\", \"SHA-224\", \"com.oracle.security.ucrypto.NativeDigest$SHA224\",\n-             \"2.16.840.1.101.3.4.2.4\", \"OID.2.16.840.1.101.3.4.2.4\")\n-    }),\n+        { sdA(\"MessageDigest\", \"SHA-224\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA224\")\n+        }),\n@@ -113,3 +118,3 @@\n-        { sd(\"MessageDigest\", \"SHA-256\", \"com.oracle.security.ucrypto.NativeDigest$SHA256\",\n-             \"2.16.840.1.101.3.4.2.1\", \"OID.2.16.840.1.101.3.4.2.1\")\n-    }),\n+        { sdA(\"MessageDigest\", \"SHA-256\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA256\")\n+        }),\n@@ -117,3 +122,3 @@\n-        { sd(\"MessageDigest\", \"SHA-384\", \"com.oracle.security.ucrypto.NativeDigest$SHA384\",\n-             \"2.16.840.1.101.3.4.2.2\", \"OID.2.16.840.1.101.3.4.2.2\")\n-    }),\n+        { sdA(\"MessageDigest\", \"SHA-384\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA384\")\n+        }),\n@@ -121,3 +126,3 @@\n-        { sd(\"MessageDigest\", \"SHA-512\", \"com.oracle.security.ucrypto.NativeDigest$SHA512\",\n-             \"2.16.840.1.101.3.4.2.3\", \"OID.2.16.840.1.101.3.4.2.3\")\n-    }),\n+        { sdA(\"MessageDigest\", \"SHA-512\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA512\")\n+        }),\n@@ -125,3 +130,3 @@\n-        { sd(\"MessageDigest\", \"SHA3-224\", \"com.oracle.security.ucrypto.NativeDigest$SHA3_224\",\n-             \"2.16.840.1.101.3.4.2.7\", \"OID.2.16.840.1.101.3.4.2.7\")\n-    }),\n+        { sdA(\"MessageDigest\", \"SHA3-224\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA3_224\")\n+        }),\n@@ -129,3 +134,3 @@\n-        { sd(\"MessageDigest\", \"SHA3-256\", \"com.oracle.security.ucrypto.NativeDigest$SHA3_256\",\n-             \"2.16.840.1.101.3.4.2.8\", \"OID.2.16.840.1.101.3.4.2.8\")\n-    }),\n+        { sdA(\"MessageDigest\", \"SHA3-256\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA3_256\")\n+        }),\n@@ -133,3 +138,3 @@\n-        { sd(\"MessageDigest\", \"SHA3-384\", \"com.oracle.security.ucrypto.NativeDigest$SHA3_384\",\n-             \"2.16.840.1.101.3.4.2.9\", \"OID.2.16.840.1.101.3.4.2.9\")\n-    }),\n+        { sdA(\"MessageDigest\", \"SHA3-384\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA3_384\")\n+        }),\n@@ -137,3 +142,3 @@\n-        { sd(\"MessageDigest\", \"SHA3-512\", \"com.oracle.security.ucrypto.NativeDigest$SHA3_512\",\n-             \"2.16.840.1.101.3.4.2.10\", \"OID.2.16.840.1.101.3.4.2.10\")\n-    });\n+        { sdA(\"MessageDigest\", \"SHA3-512\",\n+              \"com.oracle.security.ucrypto.NativeDigest$SHA3_512\")\n+        });\n@@ -144,1 +149,6 @@\n-    private static ServiceDesc sd(String type, String algo, String cn, String... aliases) {\n+    private static ServiceDesc sd(String type, String algo, String cn) {\n+        return new ServiceDesc(type, algo, cn, null);\n+    }\n+\n+    private static ServiceDesc sd(String type, String algo, String cn,\n+            List<String> aliases) {\n@@ -148,0 +158,4 @@\n+    private static ServiceDesc sdA(String type, String algo, String cn) {\n+        return new ServiceDesc(type, algo, cn, getAliases(algo));\n+    }\n+\n","filename":"src\/jdk.crypto.ucrypto\/solaris\/classes\/com\/oracle\/security\/ucrypto\/UcryptoMech.java","additions":73,"deletions":59,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-\n@@ -137,3 +136,2 @@\n-    private static ServiceDesc sd(String type, String algo, String cn,\n-        String... aliases) {\n-        return new ServiceDesc(type, algo, cn, aliases);\n+    private static ServiceDesc sd(String type, String algo, String cn) {\n+        return new ServiceDesc(type, algo, cn, null);\n","filename":"src\/jdk.crypto.ucrypto\/solaris\/classes\/com\/oracle\/security\/ucrypto\/UcryptoProvider.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,6 +51,0 @@\n-    \/*\n-     * Object identifier for the subject information access X.509 certificate\n-     * extension.\n-     *\/\n-    private static final String SUBJECT_INFO_ACCESS_OID = \"1.3.6.1.5.5.7.1.11\";\n-\n@@ -60,10 +54,2 @@\n-    private static final ObjectIdentifier AD_TIMESTAMPING_Id;\n-    static {\n-        ObjectIdentifier tmp = null;\n-        try {\n-            tmp = new ObjectIdentifier(\"1.3.6.1.5.5.7.48.3\");\n-        } catch (IOException e) {\n-            \/\/ ignore\n-        }\n-        AD_TIMESTAMPING_Id = tmp;\n-    }\n+    private static final ObjectIdentifier AD_TIMESTAMPING_Id =\n+            ObjectIdentifier.of(KnownOIDs.AD_TimeStamping);\n@@ -158,2 +144,2 @@\n-            byte[] extensionValue =\n-                tsaCertificate.getExtensionValue(SUBJECT_INFO_ACCESS_OID);\n+            byte[] extensionValue = tsaCertificate.getExtensionValue\n+                    (KnownOIDs.SubjectInfoAccess.value());\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/TimestampedSigner.java","additions":4,"deletions":18,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -325,1 +325,1 @@\n-                oidVector.add(new ObjectIdentifier(oid));\n+                oidVector.add(ObjectIdentifier.of(oid));\n","filename":"test\/jdk\/java\/security\/testlibrary\/CertificateBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,5 +48,1 @@\n-import sun.security.util.Debug;\n-import sun.security.util.DerInputStream;\n-import sun.security.util.DerOutputStream;\n-import sun.security.util.DerValue;\n-import sun.security.util.ObjectIdentifier;\n+import sun.security.util.*;\n@@ -62,2 +58,2 @@\n-            ObjectIdentifier.newInternal(\n-                    new int[] { 1, 3, 6, 1, 5, 5, 7, 48, 1, 1});\n+            ObjectIdentifier.of(KnownOIDs.OCSPBasicResponse);\n+\n","filename":"test\/jdk\/java\/security\/testlibrary\/SimpleOCSPServer.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8048194\n+ * @bug 8048194 8242151\n@@ -60,1 +60,1 @@\n-        GSSHeader h1 = new GSSHeader(new ObjectIdentifier(\"1.2.3.4\"), 1);\n+        GSSHeader h1 = new GSSHeader(ObjectIdentifier.of(\"1.2.3.4\"), 1);\n@@ -81,1 +81,1 @@\n-                new ObjectIdentifier(GSSUtil.GSS_SPNEGO_MECH_OID.toString()),\n+                ObjectIdentifier.of(GSSUtil.GSS_SPNEGO_MECH_OID.toString()),\n","filename":"test\/jdk\/sun\/security\/jgss\/spnego\/NotPreferredMech.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8048357\n+ * @bug 8048357 8242151\n@@ -65,1 +65,1 @@\n-            new ObjectIdentifier(\"1.2.3.4\"),\n+            ObjectIdentifier.of(\"1.2.3.4\"),\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs10\/PKCS10AttrEncoding.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8048357\n+ * @bug 8048357 8242151\n@@ -89,1 +89,1 @@\n-                        new ObjectIdentifier(\"1.9.50.51.52\"));\n+                        ObjectIdentifier.of(\"1.9.50.51.52\"));\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs10\/PKCS10AttributeReader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6958026\n+ * @bug 6958026 8242151\n@@ -78,1 +78,1 @@\n-                new ObjectIdentifier(\"1.2.840.113549.1.12.1.3\"), algParams);\n+                ObjectIdentifier.of(\"1.2.840.113549.1.12.1.3\"), algParams);\n","filename":"test\/jdk\/sun\/security\/pkcs12\/PKCS12SameKeyId.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/sun\/security\/pkcs12\/ParamsPreferences.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1602,1 +1602,1 @@\n-                        .getExtension(new ObjectIdentifier(oid));\n+                        .getExtension(ObjectIdentifier.of(oid));\n@@ -1611,1 +1611,1 @@\n-                .getExtension(new ObjectIdentifier(\"1.2.3\")).isCritical());\n+                .getExtension(ObjectIdentifier.of(\"1.2.3\")).isCritical());\n@@ -1613,1 +1613,1 @@\n-                .getExtension(new ObjectIdentifier(\"1.2.3\")).isCritical());\n+                .getExtension(ObjectIdentifier.of(\"1.2.3\")).isCritical());\n@@ -1643,3 +1643,3 @@\n-        assertTrue(a.getExtension(new ObjectIdentifier(\"1.2.3\")).isCritical());\n-        assertTrue(!a.getExtension(new ObjectIdentifier(\"1.2.4\")).isCritical());\n-        assertTrue(!a.getExtension(new ObjectIdentifier(\"1.2.5\")).isCritical());\n+        assertTrue(a.getExtension(ObjectIdentifier.of(\"1.2.3\")).isCritical());\n+        assertTrue(!a.getExtension(ObjectIdentifier.of(\"1.2.4\")).isCritical());\n+        assertTrue(!a.getExtension(ObjectIdentifier.of(\"1.2.5\")).isCritical());\n@@ -1650,1 +1650,1 @@\n-        assertTrue(!a.getExtension(new ObjectIdentifier(\"2.3.4\")).isCritical());\n+        assertTrue(!a.getExtension(ObjectIdentifier.of(\"2.3.4\")).isCritical());\n@@ -1660,2 +1660,2 @@\n-        assertTrue(!b.getExtension(new ObjectIdentifier(\"1.2.3\")).isCritical());\n-        assertTrue(b.getExtension(new ObjectIdentifier(\"1.2.4\")).isCritical());\n+        assertTrue(!b.getExtension(ObjectIdentifier.of(\"1.2.3\")).isCritical());\n+        assertTrue(b.getExtension(ObjectIdentifier.of(\"1.2.4\")).isCritical());\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/KeyToolTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8022444\n+ * @bug 8022444 8242151\n@@ -35,4 +35,2 @@\n-        ObjectIdentifier oid1 = new ObjectIdentifier(\"1.3.6.1.4.1.42.2.17\");\n-        ObjectIdentifier oid2 =\n-                new ObjectIdentifier(new int[]{1, 3, 6, 1, 4, 1, 42, 2, 17});\n-        ObjectIdentifier oid3 = new ObjectIdentifier(\"1.2.3.4\");\n+        ObjectIdentifier oid1 = ObjectIdentifier.of(\"1.3.6.1.4.1.42.2.17\");\n+        ObjectIdentifier oid2 = ObjectIdentifier.of(\"1.2.3.4\");\n@@ -41,2 +39,1 @@\n-        assertEquals(oid1, oid2);\n-        assertNotEquals(oid1, oid3);\n+        assertNotEquals(oid1, oid2);\n","filename":"test\/jdk\/sun\/security\/util\/Oid\/OidEquals.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,1 @@\n- * @bug 6418422\n- * @bug 6418425\n- * @bug 6418433\n+ * @bug 6418422 6418425 6418433 8242151\n@@ -89,46 +87,0 @@\n-\n-        int[][] goodInts = {\n-            {0,0}, {0,1}, {1,0}, {1,2},\n-            {0,39}, {1,39}, {2,47}, {2,40,3,6}, {2,100,3}, {2,123456,3},\n-            {1,2,3}, {1,2,3445},\n-            {1,3,6,1,4,1,42,2,17},\n-        };\n-\n-        for (int[] is: goodInts) {\n-            testGood(is);\n-        }\n-\n-        int[][] badInts = new int[][] {\n-            {0}, {1}, {2},\n-            {3,1,1}, {3}, {4},\n-            {1,40}, {1,111,1},\n-            {-1,2}, {0,-2}, {1,-2}, {2,-2},\n-            {1,2,-3,4}, {1,2,3,-4},\n-        };\n-\n-        for (int[] is: badInts) {\n-            testBad(is);\n-        }\n-\n-    }\n-\n-    static void testBad(int[] ints) throws Exception {\n-        System.err.println(\"Trying \" + Arrays.toString(ints));\n-        try {\n-            new ObjectIdentifier(ints);\n-            throw new Exception(\"should be invalid ObjectIdentifier\");\n-        } catch (IOException ioe) {\n-            System.err.println(ioe);\n-        }\n-    }\n-\n-    static void testGood(int[] ints) throws Exception {\n-        System.err.println(\"Trying \" + Arrays.toString(ints));\n-        ObjectIdentifier oid = new ObjectIdentifier(ints);\n-        DerOutputStream os = new DerOutputStream();\n-        os.putOID(oid);\n-        DerInputStream is = new DerInputStream(os.toByteArray());\n-        ObjectIdentifier oid2 = is.getOID();\n-        if (!oid.equals(oid2)) {\n-            throw new Exception(\"Test DER I\/O fails: \" + oid + \" and \" + oid2);\n-        }\n@@ -139,1 +91,1 @@\n-        ObjectIdentifier oid = new ObjectIdentifier(s);\n+        ObjectIdentifier oid = ObjectIdentifier.of(s);\n@@ -155,1 +107,1 @@\n-            new ObjectIdentifier(s);\n+            ObjectIdentifier.of(s);\n","filename":"test\/jdk\/sun\/security\/util\/Oid\/OidFormat.java","additions":4,"deletions":52,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4811968 6908628 8006564 8130696\n+ * @bug 4811968 6908628 8006564 8130696 8242151\n@@ -121,1 +121,1 @@\n-        new ObjectOutputStream(bout).writeObject(new ObjectIdentifier(oid));\n+        new ObjectOutputStream(bout).writeObject(ObjectIdentifier.of(oid));\n","filename":"test\/jdk\/sun\/security\/util\/Oid\/S11N.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 4170635\n+ * @bug 4170635 8242151\n@@ -43,2 +43,0 @@\n-        int data[] = { 1, 2, 840, 113549, 2, 5 };\n-\n@@ -49,1 +47,1 @@\n-        ObjectIdentifier oid = new ObjectIdentifier(data);\n+        ObjectIdentifier oid = ObjectIdentifier.of(\"1.2.840.113549.2.5\");\n","filename":"test\/jdk\/sun\/security\/x509\/AVA\/AVAEqualsHashCode.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4162868 8130181\n+ * @bug 4162868 8130181 8242151\n@@ -28,0 +28,1 @@\n+ * @modules java.base\/sun.security.util\n@@ -42,2 +43,10 @@\n-        AlgorithmId algid = AlgorithmId.getAlgorithmId(\"XYZ\");\n-        String alias = \"Alg.Alias.Signature.OID.\" + algid.toString();\n+        AlgorithmId algid = AlgorithmId.getAlgorithmId(TestProvider.ALG_NAME);\n+        String oid = algid.getOID().toString();\n+        if (!oid.equals(TestProvider.ALG_OID)) {\n+            throw new Exception(\"Provider alias oid not used, found \" + oid);\n+        }\n+        String name = algid.getName();\n+        if (!name.equalsIgnoreCase(TestProvider.ALG_NAME)) {\n+            throw new Exception(\"provider alias name not used, found \" + name);\n+        }\n+        String alias = \"Alg.Alias.Signature.OID.\" + oid;\n@@ -45,1 +54,2 @@\n-        if (stdAlgName == null || !stdAlgName.equalsIgnoreCase(\"XYZ\")) {\n+        if (stdAlgName == null ||\n+                !stdAlgName.equalsIgnoreCase(TestProvider.ALG_NAME)) {\n@@ -49,1 +59,0 @@\n-}\n@@ -51,1 +60,1 @@\n-class TestProvider extends Provider {\n+    static class TestProvider extends Provider {\n@@ -53,1 +62,4 @@\n-    public TestProvider() {\n+        static String ALG_OID = \"1.2.3.4.5.6.7.8.9.0\";\n+        static String ALG_NAME = \"XYZ\";\n+\n+        public TestProvider() {\n@@ -56,2 +68,2 @@\n-        AccessController.doPrivileged(new PrivilegedAction() {\n-            public Object run() {\n+            AccessController.doPrivileged(new PrivilegedAction() {\n+                public Object run() {\n@@ -59,9 +71,10 @@\n-                put(\"Signature.XYZ\", \"test.xyz\");\n-                \/\/ preferred OID\n-                put(\"Alg.Alias.Signature.OID.1.2.3.4.5.6.7.8.9.0\",\n-                    \"XYZ\");\n-                put(\"Alg.Alias.Signature.9.8.7.6.5.4.3.2.1.0\",\n-                    \"XYZ\");\n-                return null;\n-            }\n-        });\n+                    put(\"Signature.\" + ALG_NAME, \"test.xyz\");\n+                    \/\/ preferred OID\n+                    put(\"Alg.Alias.Signature.OID.\" + ALG_OID,\n+                        ALG_NAME);\n+                    put(\"Alg.Alias.Signature.9.8.7.6.5.4.3.2.1.0\",\n+                        ALG_NAME);\n+                    return null;\n+                }\n+            });\n+        }\n","filename":"test\/jdk\/sun\/security\/x509\/AlgorithmId\/ExtensibleAlgorithmId.java","additions":32,"deletions":19,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8049237\n+ * @bug 8049237 8242151\n@@ -156,1 +156,0 @@\n-        int[] oidData = new int[]{1, 2, 3, 4};\n@@ -158,1 +157,2 @@\n-        GeneralNameInterface oidInf = new OIDName(new ObjectIdentifier(oidData));\n+        GeneralNameInterface oidInf =\n+                new OIDName(ObjectIdentifier.of(\"1.2.3.4\"));\n","filename":"test\/jdk\/sun\/security\/x509\/X509CertImpl\/V3Certificate.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 4273559\n+ * @bug 4273559 8242151\n@@ -117,1 +117,1 @@\n-        ObjectIdentifier oid = new ObjectIdentifier(name);\n+        ObjectIdentifier oid = ObjectIdentifier.of(name);\n","filename":"test\/jdk\/sun\/security\/x509\/equalNames\/AltNamesEqualsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-            oid = new ObjectIdentifier(((KnownOIDs) expected).value());\n+            oid = ObjectIdentifier.of(((KnownOIDs) expected).value());\n@@ -106,1 +106,1 @@\n-            oid = new ObjectIdentifier(KnownOIDs.findMatch((String)expected).value());\n+            oid = ObjectIdentifier.of(KnownOIDs.findMatch((String)expected).value());\n","filename":"test\/lib\/jdk\/test\/lib\/security\/DerUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-            tstInfoOut.putOID(new ObjectIdentifier(policyId));\n+            tstInfoOut.putOID(ObjectIdentifier.of(policyId));\n@@ -207,1 +207,1 @@\n-                    new ObjectIdentifier(\"1.2.840.113549.1.9.16.1.4\"),\n+                    ObjectIdentifier.of(\"1.2.840.113549.1.9.16.1.4\"),\n","filename":"test\/lib\/jdk\/test\/lib\/security\/timestamp\/TsaSigner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}