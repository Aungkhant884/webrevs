{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,2 @@\n- * @key headful\n- * @bug 6996867\n+ * @bug 6996867 8223543\n+ * @requires (os.family == \"windows\")\n@@ -31,3 +31,5 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.awt.image.*;\n+import java.awt.AlphaComposite;\n+import java.awt.Color;\n+import java.awt.Graphics2D;\n+import java.awt.RenderingHints;\n+import java.awt.image.BufferedImage;\n@@ -35,25 +37,1 @@\n-public class LCDTextSrcEa extends Component {\n-\n-    static int SZ=150;\n-    BufferedImage target =\n-        new BufferedImage(SZ, SZ, BufferedImage.TYPE_INT_RGB);\n-\n-    public static void main(String args[]) {\n-        Frame f = new Frame(\"LCD Text SrcEa Test\");\n-        f.addWindowListener(new WindowAdapter() {\n-            @Override\n-            public void windowClosing(WindowEvent e) {\n-                System.exit(0);\n-            }\n-        });\n-        LCDTextSrcEa td = new LCDTextSrcEa();\n-        f.add(\"Center\", td);\n-        f.pack();\n-        f.setVisible(true);\n-    }\n-\n-    public Dimension getPreferredSize() {\n-        return new Dimension(SZ,SZ);\n-    }\n-\n-    public void paint(Graphics gx) {\n+public class LCDTextSrcEa {\n@@ -61,0 +39,16 @@\n+    public static void main(String[] args) {\n+        String os = System.getProperty(\"os.name\");\n+        if (os.toLowerCase().startsWith(\"mac\")) {\n+            System.out.println(\"macOS doesn't support LCD any more. Skipping\");\n+            return;\n+        }\n+        \/* Sometimes freetype on Linux is built without LCD support, so\n+         * it can't be relied upon to test there.\n+         *\/\n+        if (os.toLowerCase().startsWith(\"linux\")) {\n+            System.out.println(\"Linux freetype may not do LCD. Skipping\");\n+            return;\n+        }\n+        int SZ=200;\n+        BufferedImage target =\n+            new BufferedImage(SZ, SZ, BufferedImage.TYPE_INT_RGB);\n@@ -63,1 +57,1 @@\n-        g2d.fillRect(0, 0, getWidth(), getHeight());\n+        g2d.fillRect(0, 0, SZ, SZ);\n@@ -75,1 +69,0 @@\n-        gx.drawImage(target, 0, 0, null);\n","filename":"test\/jdk\/java\/awt\/Graphics2D\/DrawString\/LCDTextSrcEa.java","additions":26,"deletions":33,"binary":false,"changes":59,"status":"modified"}]}