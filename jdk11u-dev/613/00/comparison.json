{"files":[{"patch":"@@ -11,1 +11,0 @@\n-global.dest.screen=disabled\n@@ -13,0 +12,4 @@\n+global.dest.frame.defaultframe=disabled\n+global.dest.frame.transframe=disabled\n+global.dest.frame.shapedframe=disabled\n+global.dest.frame.shapedtransframe=disabled\n","filename":"src\/demo\/share\/java2d\/J2DBench\/options\/default.opt","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-import java.awt.Image;\n@@ -45,0 +44,1 @@\n+import java.awt.Frame;\n@@ -46,0 +46,2 @@\n+import java.awt.Image;\n+import java.awt.Polygon;\n@@ -53,0 +55,2 @@\n+import javax.swing.SwingUtilities;\n+\n@@ -58,0 +62,1 @@\n+    public static Group frameroot;\n@@ -66,1 +71,0 @@\n-        new Screen();\n@@ -69,0 +73,14 @@\n+        frameroot = new Group.EnableSet(destroot, \"frame\", \"Output to Frame\");\n+        frameroot.setHorizontal();\n+\n+        new Screen(false, false);\n+        if (ImageTests.hasOpacityWindow) {\n+            new Screen(true, false);\n+        }\n+        if (ImageTests.hasShapedWindow) {\n+            new Screen(false, true);\n+        }\n+        if (ImageTests.hasShapedWindow && ImageTests.hasOpacityWindow) {\n+            new Screen(true, true);\n+        }\n+\n@@ -132,2 +150,35 @@\n-        public Screen() {\n-            super(destroot, \"screen\", \"Output to Screen\", false);\n+\n+        private boolean opacity;\n+        private boolean shaped;\n+\n+        public Screen(boolean opacity, boolean shaped) {\n+            super(frameroot, getDescription(opacity,shaped),\n+                  getLongDescription(opacity,shaped), false);\n+            this.opacity = opacity;\n+            this.shaped = shaped;\n+        }\n+\n+        private static String getDescription(boolean opacity, boolean shaped){\n+            if (opacity && shaped) {\n+                return \"shapedtransframe\";\n+            }\n+            if (shaped) {\n+                return \"shapedframe\";\n+            }\n+            if (opacity) {\n+                return \"transframe\";\n+            }\n+            return \"defaultframe\";\n+        }\n+\n+        private static String getLongDescription(boolean opacity, boolean shaped){\n+            if (opacity && shaped) {\n+                return \"Translucent and Shaped\";\n+            }\n+            if (shaped) {\n+                return \"Shaped\";\n+            }\n+            if (opacity) {\n+                return \"Translucent\";\n+            }\n+            return \"Default\";\n@@ -137,1 +188,10 @@\n-            return \"Screen\";\n+            if (opacity && shaped) {\n+                return \"Translucent and Shaped Frame\";\n+            }\n+            if (shaped) {\n+                return \"Shaped Frame\";\n+            }\n+            if (opacity) {\n+                return \"Translucent Frame\";\n+            }\n+            return \"Default Frame\";\n@@ -143,0 +203,36 @@\n+\n+        public void modifyTest(TestEnvironment env) {\n+            setDestination(env);\n+            Frame frame = (Frame) SwingUtilities.getWindowAncestor(env.comp);\n+            if (frame != null && (opacity || shaped)) {\n+                frame.dispose();\n+                frame.setUndecorated(true);\n+                int w = frame.getWidth();\n+                int h = frame.getHeight();\n+                if (shaped) {\n+                    Polygon p = new Polygon();\n+                    p.addPoint(0, 0);\n+                    p.addPoint(w, 0);\n+                    p.addPoint(0, h);\n+                    p.addPoint(w, h);\n+                    p.addPoint(0, 0);\n+                    frame.setShape(p);\n+                }\n+                if (opacity) {\n+                    frame.setOpacity(0.5f);\n+                }\n+                frame.setVisible(true);\n+            }\n+        }\n+\n+        public void restoreTest(TestEnvironment env) {\n+            env.setTestImage(null);\n+            Frame frame = (Frame) SwingUtilities.getWindowAncestor(env.comp);\n+            if (frame != null && (opacity || shaped)) {\n+                frame.dispose();\n+                frame.setShape(null);\n+                frame.setOpacity(1);\n+                frame.setUndecorated(false);\n+                frame.setVisible(true);\n+            }\n+        }\n","filename":"src\/demo\/share\/java2d\/J2DBench\/src\/j2dbench\/Destinations.java","additions":102,"deletions":6,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,2 @@\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Rectangle;\n@@ -783,1 +785,4 @@\n-        f.show();\n+        Rectangle usable = GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                .getMaximumWindowBounds().intersection(f.getBounds());\n+        f.setBounds(usable);\n+        f.setVisible(true);\n","filename":"src\/demo\/share\/java2d\/J2DBench\/src\/j2dbench\/J2DBench.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,1 @@\n+import java.awt.Rectangle;\n@@ -57,0 +58,1 @@\n+import java.awt.Window;\n@@ -82,0 +84,2 @@\n+    public static boolean hasShapedWindow;\n+    public static boolean hasOpacityWindow;\n@@ -99,0 +103,10 @@\n+        try {\n+            new Window(null).setShape(new Rectangle());\n+            hasShapedWindow = true;\n+        } catch (Exception e) {\n+        }\n+        try {\n+            new Window(null).setOpacity(0.5f);\n+            hasOpacityWindow = true;\n+        } catch (Exception e) {\n+        }\n","filename":"src\/demo\/share\/java2d\/J2DBench\/src\/j2dbench\/tests\/ImageTests.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"}]}