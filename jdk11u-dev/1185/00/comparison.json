{"files":[{"patch":"@@ -1691,0 +1691,8 @@\n+          } else {\n+            \/\/ There is no space reserved for a memory edge before the inputs for\n+            \/\/ instructions which have \"stackSlotX\" parameter instead of \"memory\".\n+            \/\/ For example, \"MoveF2I_stack_reg\". We always need a memory edge from\n+            \/\/ src to cisc, else we might schedule cisc before src, loading from a\n+            \/\/ spill location before storing the spill.\n+            assert(cisc->memory_operand() == NULL, \"no memory operand, only stack\");\n+            cisc->add_prec(src);\n","filename":"src\/hotspot\/share\/opto\/chaitin.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -38,0 +38,15 @@\n+\/**\n+ * @test\n+ * @bug 8282555\n+ * @summary intermittent, check that spilling MoveF2I etc produce memory edge\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ *\n+ * @run main\/othervm -Djdk.test.lib.random.seed=42\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:+OptoScheduling\n+ *      HeapByteBufferTest\n+ * @run main\/othervm\n+ *      -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:+OptoScheduling\n+ *      HeapByteBufferTest\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/unsafe\/HeapByteBufferTest.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}