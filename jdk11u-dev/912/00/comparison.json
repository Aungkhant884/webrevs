{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * @run main\/othervm ClhsdbFindPC\n+ * @run main\/othervm\/timeout=480 ClhsdbFindPC\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbFindPC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- * @run main\/othervm ClhsdbJstack\n+ * @run main\/othervm\/timeout=480 ClhsdbJstack\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbJstack.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.Arrays;\n@@ -34,0 +35,2 @@\n+import jdk.test.lib.SA.SATestUtils;\n+\n@@ -44,0 +47,1 @@\n+    private boolean needPrivileges;\n@@ -47,0 +51,1 @@\n+        needPrivileges = false;\n@@ -56,1 +61,0 @@\n-\n@@ -64,1 +68,5 @@\n-        ProcessBuilder processBuilder = new ProcessBuilder(launcher.getCommand());\n+        List<String> cmdStringList = Arrays.asList(launcher.getCommand());\n+        if (needPrivileges) {\n+            cmdStringList = SATestUtils.addPrivileges(cmdStringList);\n+        }\n+        ProcessBuilder processBuilder = new ProcessBuilder(cmdStringList);\n@@ -66,1 +74,0 @@\n-\n@@ -176,3 +183,13 @@\n-            \/\/ Silently skip the test if we don't have enough permissions to attach\n-            System.out.println(\"SA attach not expected to work - test skipped.\");\n-            return null;\n+            if (Platform.isOSX()) {\n+                if (!SATestUtils.canAddPrivileges()) {\n+                   \/\/ Skip the test if we don't have enough permissions to attach\n+                   \/\/ and cannot add privileges.\n+                   System.out.println(\"SA attach not expected to work - test skipped.\");\n+                   return null;\n+               } else {\n+                   needPrivileges = true;\n+               }\n+            } else {\n+                System.out.println(\"SA attach not expected to work. Insufficient privileges.\");\n+                throw new Error(\"Cannot attach.\");\n+            }\n@@ -203,6 +220,0 @@\n-        if (!Platform.shouldSAAttach()) {\n-            \/\/ Silently skip the test if we don't have enough permissions to attach\n-            System.out.println(\"SA attach not expected to work - test skipped.\");\n-            return null;\n-        }\n-\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbLauncher.java","additions":24,"deletions":13,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.test.lib.SA;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.ArrayList;\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.Platform;\n+import java.util.concurrent.TimeUnit;\n+\n+public class SATestUtils {\n+\n+    public static boolean canAddPrivileges()\n+       throws IOException, InterruptedException {\n+       List<String> echoList = new ArrayList<String>();\n+       echoList.add(\"sudo\");\n+       echoList.add(\"-E\");\n+       echoList.add(\"\/bin\/echo\");\n+       echoList.add(\"'Checking for sudo'\");\n+       ProcessBuilder pb = new ProcessBuilder(echoList);\n+       Process echoProcess = pb.start();\n+       if (echoProcess.waitFor(60, TimeUnit.SECONDS) == false) {\n+           \/\/ 'sudo' has been added but we don't have a no-password\n+           \/\/ entry for the user in the \/etc\/sudoers list. Could\n+           \/\/ have timed out waiting for the password. Skip the\n+           \/\/ test if there is a timeout here.\n+           System.out.println(\"Timed out waiting for the password to be entered.\");\n+           echoProcess.destroyForcibly();\n+           return false;\n+       }\n+       if (echoProcess.exitValue() == 0) {\n+           return true;\n+       }\n+       java.io.InputStream is = echoProcess.getErrorStream();\n+       String err = new String(is.readAllBytes());\n+       System.out.println(err);\n+       \/\/ 'sudo' has been added but we don't have a no-password\n+       \/\/ entry for the user in the \/etc\/sudoers list. Check for\n+       \/\/ the sudo error message and skip the test.\n+       if (err.contains(\"no tty present\") ||\n+           err.contains(\"a password is required\")) {\n+           return false;\n+       } else {\n+           throw new Error(\"Unknown Error from 'sudo'\");\n+       }\n+    }\n+\n+    public static List<String> addPrivileges(List<String> cmdStringList)\n+        throws IOException {\n+        Asserts.assertTrue(Platform.isOSX());\n+\n+        System.out.println(\"Adding 'sudo -E' to the command.\");\n+        List<String> outStringList = new ArrayList<String>();\n+        outStringList.add(\"sudo\");\n+        outStringList.add(\"-E\");\n+        outStringList.addAll(cmdStringList);\n+        return outStringList;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/SA\/SATestUtils.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"}]}