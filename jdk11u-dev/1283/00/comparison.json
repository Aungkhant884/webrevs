{"files":[{"patch":"@@ -59,0 +59,1 @@\n+        var className = gc.getClass().getSimpleName();\n@@ -97,3 +98,3 @@\n-        validate(gold, snapshotVI2VI);\n-        validate(gold, snapshotBI2VI);\n-        validate(gold, dstVI2BI);\n+        validate(gold, snapshotVI2VI, className);\n+        validate(gold, snapshotBI2VI, className);\n+        validate(gold, dstVI2BI, className);\n@@ -102,13 +103,27 @@\n-    private static void validate(BufferedImage gold, BufferedImage img)\n-            throws IOException {\n-        for (int x = 0; x < gold.getWidth(); ++x) {\n-            for (int y = 0; y < gold.getHeight(); ++y) {\n-                Color goldColor = new Color(gold.getRGB(x, y));\n-                Color actualColor = new Color(img.getRGB(x, y));\n-                if ((Math.abs(goldColor.getRed() - actualColor.getRed()) > 1) ||\n-                    (Math.abs(goldColor.getGreen() - actualColor.getGreen()) > 1) ||\n-                    (Math.abs(goldColor.getBlue() - actualColor.getBlue()) > 1)) {\n-                     ImageIO.write(gold, \"png\", new File(\"gold.png\"));\n-                     ImageIO.write(img, \"png\", new File(\"snapshot.png\"));\n-                     throw new RuntimeException(\"Test failed for pixel :\"\n-                        + x + \"\/\" + y);\n+    private static void validate(BufferedImage gold, BufferedImage img,\n+                                 String className) throws IOException {\n+        if (!(className.equals(\"XRGraphicsConfig\"))) {\n+            for (int x = 0; x < gold.getWidth(); ++x) {\n+                for (int y = 0; y < gold.getHeight(); ++y) {\n+                    if (gold.getRGB(x, y) != img.getRGB(x, y)) {\n+                        ImageIO.write(gold, \"png\", new File(\"gold.png\"));\n+                        ImageIO.write(img, \"png\", new File(\"snapshot.png\"));\n+                        throw new RuntimeException(\"Test failed.\");\n+                    }\n+                }\n+            }\n+        } else {\n+            \/\/ In Linux where we use XRender pipeline there is\n+            \/\/ little deviation because of less arithmetic precision\n+            for (int x = 0; x < gold.getWidth(); ++x) {\n+                for (int y = 0; y < gold.getHeight(); ++y) {\n+                    Color goldColor = new Color(gold.getRGB(x, y));\n+                    Color actualColor = new Color(img.getRGB(x, y));\n+                    if ((Math.abs(goldColor.getRed() - actualColor.getRed()) > 1) ||\n+                        (Math.abs(goldColor.getGreen() - actualColor.getGreen()) > 1) ||\n+                        (Math.abs(goldColor.getBlue() - actualColor.getBlue()) > 1)) {\n+                        ImageIO.write(gold, \"png\", new File(\"gold.png\"));\n+                        ImageIO.write(img, \"png\", new File(\"snapshot.png\"));\n+                        throw new RuntimeException(\"Test failed for pixel :\"\n+                            + x + \"\/\" + y);\n+                    }\n@@ -147,1 +162,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/image\/DrawImage\/BlitRotateClippedArea.java","additions":31,"deletions":17,"binary":false,"changes":48,"status":"modified"}]}