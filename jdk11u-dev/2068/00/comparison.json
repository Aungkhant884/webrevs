{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,0 @@\n-import java.net.ServerSocket;\n-import java.util.regex.Matcher;\n@@ -130,6 +128,0 @@\n-        \/\/ find a free port\n-        ServerSocket ss = new ServerSocket(0);\n-        int port = ss.getLocalPort();\n-        ss.close();\n-        String address = String.valueOf(port);\n-\n@@ -141,1 +133,1 @@\n-                              \",address=\" + address +\n+                              \",address=0\" +\n","filename":"test\/jdk\/com\/sun\/jdi\/OptionTest.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.net.ServerSocket;\n@@ -44,0 +43,2 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -53,0 +54,3 @@\n+    \/* port the debuggee is listening on *\/\n+    private static String address;\n+\n@@ -69,1 +73,1 @@\n-     * Launch a server debuggee with the given address\n+     * Launch a server debuggee, detect debuggee listening port\n@@ -71,1 +75,1 @@\n-    private static Process launch(String address, String class_name) throws Exception {\n+    private static Process launch(String class_name) throws Exception {\n@@ -73,2 +77,1 @@\n-            \"-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=\"\n-                + address,\n+            \"-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=0\",\n@@ -95,0 +98,3 @@\n+    \/* warm-up predicate for debuggee *\/\n+    private static Pattern listenRegexp = Pattern.compile(\"Listening for transport \\\\b(.+)\\\\b at address: \\\\b(.+)\\\\b\");\n+\n@@ -96,1 +102,7 @@\n-        return line.startsWith(\"Listening for transport dt_socket\");\n+        Matcher m = listenRegexp.matcher(line);\n+        if (!m.matches()) {\n+            return false;\n+        }\n+        \/\/ address is 2nd group\n+        address = m.group(2);\n+        return true;\n@@ -106,2 +118,2 @@\n-     * - pick a TCP port\n-     * - Launch a server debuggee: server=y,suspend=y,address=${port}\n+     * - Launch a server debuggee: server=y,suspend=y,address=0\n+     * - detect the port debuggee is listening on\n@@ -112,7 +124,0 @@\n-        \/\/ find a free port\n-        ServerSocket ss = new ServerSocket(0);\n-        int port = ss.getLocalPort();\n-        ss.close();\n-\n-        String address = String.valueOf(port);\n-\n@@ -120,1 +125,1 @@\n-        Process process = launch(address, \"Exit0\");\n+        Process process = launch(\"Exit0\");\n@@ -127,1 +132,1 @@\n-        port_arg.setValue(port);\n+        port_arg.setValue(address);\n","filename":"test\/jdk\/com\/sun\/jdi\/RunToExit.java","additions":23,"deletions":18,"binary":false,"changes":41,"status":"modified"}]}