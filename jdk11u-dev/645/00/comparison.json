{"files":[{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -198,2 +185,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -260,1 +246,0 @@\n-#ifdef __cplusplus\n@@ -262,1 +247,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe001\/popframe001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -214,2 +201,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -271,1 +257,0 @@\n-#ifdef __cplusplus\n@@ -273,1 +258,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe002\/popframe002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -199,2 +186,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -261,1 +247,0 @@\n-#ifdef __cplusplus\n@@ -263,1 +248,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe003\/popframe003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -223,2 +210,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -292,2 +278,1 @@\n-    jclass cls =\n-        JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, frameThr));\n+    jclass cls = env->GetObjectClass(frameThr);\n@@ -296,2 +281,1 @@\n-    if ((mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"activeMethod\", \"()V\")) == NULL) {\n+    if ((mid = env->GetMethodID(cls, \"activeMethod\", \"()V\")) == NULL) {\n@@ -306,1 +290,1 @@\n-    JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG(env, frameThr), mid);\n+    env->CallVoidMethod(frameThr, mid);\n@@ -319,1 +303,0 @@\n-#ifdef __cplusplus\n@@ -321,1 +304,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe004\/popframe004.cpp","additions":4,"deletions":22,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -367,2 +354,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -438,1 +424,1 @@\n-    clazz = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, thr));\n+    clazz = env->GetObjectClass(thr);\n@@ -445,2 +431,1 @@\n-    mid_run = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-        \"run\", \"()V\");\n+    mid_run = env->GetMethodID(clazz, \"run\", \"()V\");\n@@ -453,2 +438,1 @@\n-    mid_A = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clazz),\n-        \"A\", \"()V\");\n+    mid_A = env->GetStaticMethodID(clazz, \"A\", \"()V\");\n@@ -461,2 +445,1 @@\n-    mid_B = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clazz),\n-        \"B\", \"()V\");\n+    mid_B = env->GetStaticMethodID(clazz, \"B\", \"()V\");\n@@ -469,2 +452,1 @@\n-    mid_C = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clazz),\n-        \"C\", \"()V\");\n+    mid_C = env->GetStaticMethodID(clazz, \"C\", \"()V\");\n@@ -532,1 +514,0 @@\n-#ifdef __cplusplus\n@@ -534,1 +515,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe006\/popframe006.cpp","additions":6,"deletions":26,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -106,2 +93,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -169,1 +155,1 @@\n-    clazz = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, thr));\n+    clazz = env->GetObjectClass(thr);\n@@ -176,2 +162,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, clazz),\n-        \"C\", \"()V\");\n+    mid = env->GetStaticMethodID(clazz, \"C\", \"()V\");\n@@ -209,1 +194,1 @@\n-        JNI_ENV_PTR(env)->CallStaticVoidMethod(JNI_ENV_ARG(env, cls), mid);\n+        env->CallStaticVoidMethod(cls, mid);\n@@ -213,1 +198,0 @@\n-#ifdef __cplusplus\n@@ -215,1 +199,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe007\/popframe007.cpp","additions":4,"deletions":21,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -215,2 +202,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -282,1 +268,1 @@\n-    clazz = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, thr));\n+    clazz = env->GetObjectClass(thr);\n@@ -289,1 +275,1 @@\n-    midD = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz), \"D\", \"()V\");\n+    midD = env->GetMethodID(clazz, \"D\", \"()V\");\n@@ -296,2 +282,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-        \"run\", \"()V\");\n+    midRun = env->GetMethodID(clazz, \"run\", \"()V\");\n@@ -331,1 +316,0 @@\n-#ifdef __cplusplus\n@@ -333,1 +317,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe008\/popframe008.cpp","additions":4,"deletions":21,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -185,2 +172,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -254,2 +240,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetStaticMethodID(cls, \"checkPoint\", \"()V\");\n@@ -429,2 +414,1 @@\n-    midFibonacci = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-        \"fibonacci\", \"(I)I\");\n+    midFibonacci = env->GetStaticMethodID(cls, \"fibonacci\", \"(I)I\");\n@@ -436,1 +420,1 @@\n-    clazz = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, thr));\n+    clazz = env->GetObjectClass(thr);\n@@ -442,2 +426,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-        \"run\", \"()V\");\n+    midRun = env->GetMethodID(clazz, \"run\", \"()V\");\n@@ -611,1 +594,0 @@\n-#ifdef __cplusplus\n@@ -613,1 +595,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe009\/popframe009.cpp","additions":5,"deletions":24,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -252,2 +239,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -317,2 +303,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(cls, \"run\", \"()V\");\n@@ -325,2 +310,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(cls, \"checkPoint\", \"()V\");\n@@ -362,1 +346,0 @@\n-#ifdef __cplusplus\n@@ -364,1 +347,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe010\/popframe010.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -260,2 +247,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -317,1 +303,0 @@\n-#ifdef __cplusplus\n@@ -319,1 +304,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe011\/popframe011.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -122,2 +109,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -197,1 +183,0 @@\n-#ifdef __cplusplus\n@@ -199,1 +184,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter001\/rawmonenter001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -108,1 +94,0 @@\n-#ifdef __cplusplus\n@@ -110,1 +95,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter002\/rawmonenter002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -110,1 +96,0 @@\n-#ifdef __cplusplus\n@@ -112,1 +97,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter003\/rawmonenter003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -77,2 +64,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -140,1 +126,1 @@\n-    threads_limit = JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, threads));\n+    threads_limit = env->GetArrayLength(threads);\n@@ -147,2 +133,1 @@\n-        thr = JNI_ENV_PTR(env)->GetObjectArrayElement(JNI_ENV_ARG(env,\n-            threads), i);\n+        thr = env->GetObjectArrayElement(threads, i);\n@@ -195,1 +180,0 @@\n-#ifdef __cplusplus\n@@ -197,1 +181,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorEnter\/rawmonenter004\/rawmonenter004.cpp","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -135,2 +122,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -223,1 +209,0 @@\n-#ifdef __cplusplus\n@@ -225,1 +210,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit001\/rawmonexit001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -108,1 +94,0 @@\n-#ifdef __cplusplus\n@@ -110,1 +95,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit002\/rawmonexit002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -110,1 +96,0 @@\n-#ifdef __cplusplus\n@@ -112,1 +97,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit003\/rawmonexit003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -117,1 +103,0 @@\n-#ifdef __cplusplus\n@@ -119,1 +104,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorExit\/rawmonexit005\/rawmonexit005.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -148,2 +135,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -249,1 +235,0 @@\n-#ifdef __cplusplus\n@@ -251,1 +236,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy001\/rawmnntfy001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -108,1 +94,0 @@\n-#ifdef __cplusplus\n@@ -110,1 +95,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy002\/rawmnntfy002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -110,1 +96,0 @@\n-#ifdef __cplusplus\n@@ -112,1 +97,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy003\/rawmnntfy003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -116,1 +102,0 @@\n-#ifdef __cplusplus\n@@ -118,1 +103,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotify\/rawmnntfy004\/rawmnntfy004.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -148,2 +135,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -249,1 +235,0 @@\n-#ifdef __cplusplus\n@@ -251,1 +236,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall001\/rawmnntfyall001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -108,1 +94,0 @@\n-#ifdef __cplusplus\n@@ -110,1 +95,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall002\/rawmnntfyall002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -110,1 +96,0 @@\n-#ifdef __cplusplus\n@@ -112,1 +97,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall003\/rawmnntfyall003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -116,1 +102,0 @@\n-#ifdef __cplusplus\n@@ -118,1 +103,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorNotifyAll\/rawmnntfyall004\/rawmnntfyall004.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -149,2 +136,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -250,1 +236,0 @@\n-#ifdef __cplusplus\n@@ -252,1 +237,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait001\/rawmnwait001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -72,2 +59,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -109,1 +95,0 @@\n-#ifdef __cplusplus\n@@ -111,1 +96,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait002\/rawmnwait002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -74,2 +61,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -111,1 +97,0 @@\n-#ifdef __cplusplus\n@@ -113,1 +98,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait003\/rawmnwait003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -72,2 +59,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -117,1 +103,0 @@\n-#ifdef __cplusplus\n@@ -119,1 +104,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait004\/rawmnwait004.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -77,2 +64,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -303,1 +289,0 @@\n-#ifdef __cplusplus\n@@ -305,1 +290,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RawMonitorWait\/rawmnwait005\/rawmnwait005.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,1 +31,0 @@\n-#endif\n@@ -34,11 +32,0 @@\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -56,2 +43,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -107,5 +93,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes),\n-            NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -131,1 +114,0 @@\n-#ifdef __cplusplus\n@@ -133,1 +115,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/StressRedefine\/stressRedefine.cpp","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -67,2 +54,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -118,5 +104,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes),\n-            NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -142,1 +125,0 @@\n-#ifdef __cplusplus\n@@ -144,1 +126,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass001\/redefclass001.cpp","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -67,2 +54,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -158,4 +144,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -178,1 +162,0 @@\n-#ifdef __cplusplus\n@@ -180,1 +163,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass002\/redefclass002.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -69,2 +56,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -121,4 +107,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -156,2 +140,1 @@\n-    if ((fid = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, redefCls),\n-        \"intComplNewFld\", \"I\")) == NULL) {\n+    if ((fid = env->GetStaticFieldID(redefCls, \"intComplNewFld\", \"I\")) == NULL) {\n@@ -162,2 +145,1 @@\n-    intFld = JNI_ENV_PTR(env)->GetStaticIntField(JNI_ENV_ARG(env, redefCls),\n-        fid);\n+    intFld = env->GetStaticIntField(redefCls, fid);\n@@ -165,2 +147,1 @@\n-    if ((fid = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, redefCls),\n-        \"longComplNewFld\", \"J\")) == NULL) {\n+    if ((fid = env->GetStaticFieldID(redefCls, \"longComplNewFld\", \"J\")) == NULL) {\n@@ -171,2 +152,1 @@\n-    longFld = JNI_ENV_PTR(env)->GetStaticLongField(JNI_ENV_ARG(env, redefCls),\n-        fid);\n+    longFld = env->GetStaticLongField(redefCls, fid);\n@@ -187,1 +167,0 @@\n-#ifdef __cplusplus\n@@ -189,1 +168,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass003\/redefclass003.cpp","additions":7,"deletions":29,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -74,2 +61,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -126,4 +112,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -157,2 +141,1 @@\n-    jclass redefCls =\n-        JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, redefObj));\n+    jclass redefCls = env->GetObjectClass(redefObj);\n@@ -166,2 +149,1 @@\n-    if ((fid = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, redefCls),\n-        \"intComplNewFld\", \"I\")) == NULL) {\n+    if ((fid = env->GetFieldID(redefCls, \"intComplNewFld\", \"I\")) == NULL) {\n@@ -172,1 +154,1 @@\n-    intFld = JNI_ENV_PTR(env)->GetIntField(JNI_ENV_ARG(env, redefObj), fid);\n+    intFld = env->GetIntField(redefObj, fid);\n@@ -175,2 +157,1 @@\n-    if ((fid = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, redefCls),\n-        \"longComplNewFld\", \"J\")) == NULL) {\n+    if ((fid = env->GetFieldID(redefCls, \"longComplNewFld\", \"J\")) == NULL) {\n@@ -181,1 +162,1 @@\n-    longFld = JNI_ENV_PTR(env)->GetLongField(JNI_ENV_ARG(env, redefObj), fid);\n+    longFld = env->GetLongField(redefObj, fid);\n@@ -184,2 +165,1 @@\n-    if ((fid = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, redefCls),\n-        \"stringComplNewFld\", \"Ljava\/lang\/String;\")) == NULL) {\n+    if ((fid = env->GetFieldID(redefCls, \"stringComplNewFld\", \"Ljava\/lang\/String;\")) == NULL) {\n@@ -190,4 +170,2 @@\n-    stringObj = (jstring) JNI_ENV_PTR(env)->GetObjectField(JNI_ENV_ARG(env,\n-        redefObj), fid);\n-    strFld = JNI_ENV_PTR(env)->GetStringUTFChars(JNI_ENV_ARG(env,\n-        stringObj), 0);\n+    stringObj = (jstring) env->GetObjectField(redefObj, fid);\n+    strFld = env->GetStringUTFChars(stringObj, 0);\n@@ -204,2 +182,1 @@\n-        JNI_ENV_PTR(env)->ReleaseStringUTFChars(JNI_ENV_ARG(env,\n-            stringObj), strFld);\n+        env->ReleaseStringUTFChars(stringObj, strFld);\n@@ -213,2 +190,1 @@\n-        JNI_ENV_PTR(env)->ReleaseStringUTFChars(JNI_ENV_ARG(env,\n-            stringObj), strFld);\n+        env->ReleaseStringUTFChars(stringObj, strFld);\n@@ -219,1 +195,0 @@\n-#ifdef __cplusplus\n@@ -221,1 +196,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass004\/redefclass004.cpp","additions":13,"deletions":39,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -122,2 +109,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -216,4 +202,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -253,1 +237,0 @@\n-#ifdef __cplusplus\n@@ -255,1 +238,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass005\/redefclass005.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -67,2 +54,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -135,2 +121,1 @@\n-            classDef.class_byte_count =\n-                JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n+            classDef.class_byte_count = env->GetArrayLength(classBytes);\n@@ -153,1 +138,0 @@\n-#ifdef __cplusplus\n@@ -155,1 +139,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass006\/redefclass006.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -93,2 +80,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -149,2 +135,1 @@\n-    redefCls =\n-        JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, redefObj));\n+    redefCls = env->GetObjectClass(redefObj);\n@@ -156,3 +141,3 @@\n-            if ((breakpoints[i].mid =\n-                    JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, redefCls),\n-                    breakpoints[i].m_name, breakpoints[i].m_sign)) == NULL) {\n+            breakpoints[i].mid = env->GetMethodID(\n+                redefCls, breakpoints[i].m_name, breakpoints[i].m_sign);\n+            if (breakpoints[i].mid == NULL) {\n@@ -165,3 +150,3 @@\n-            if ((breakpoints[i].mid =\n-                    JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, redefCls),\n-                    breakpoints[i].m_name, breakpoints[i].m_sign)) == NULL) {\n+            breakpoints[i].mid = env->GetStaticMethodID(\n+                redefCls, breakpoints[i].m_name, breakpoints[i].m_sign);\n+            if (breakpoints[i].mid == NULL) {\n@@ -218,4 +203,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -249,2 +232,1 @@\n-    redefCls =\n-        JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, redefObj));\n+    redefCls = env->GetObjectClass(redefObj);\n@@ -257,3 +239,3 @@\n-            if ((breakpoints[i].mid =\n-                    JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, redefCls),\n-                    breakpoints[i].m_name, breakpoints[i].m_sign)) == NULL) {\n+            breakpoints[i].mid = env->GetMethodID(\n+                redefCls, breakpoints[i].m_name, breakpoints[i].m_sign);\n+            if (breakpoints[i].mid == NULL) {\n@@ -266,3 +248,3 @@\n-            if ((breakpoints[i].mid =\n-                    JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, redefCls),\n-                    breakpoints[i].m_name, breakpoints[i].m_sign)) == NULL) {\n+            breakpoints[i].mid = env->GetStaticMethodID(\n+                redefCls, breakpoints[i].m_name, breakpoints[i].m_sign);\n+            if (breakpoints[i].mid == NULL) {\n@@ -306,1 +288,0 @@\n-#ifdef __cplusplus\n@@ -308,1 +289,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass008\/redefclass008.cpp","additions":17,"deletions":37,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -130,2 +117,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -181,5 +167,4 @@\n-\/* get the JNI method ID for a method with name m_name and\n-   signature m_sign *\/\n-        if (methodsInfo[i].inst) \/* an instance method *\/\n-            methodsInfo[i].mid =\n-                JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, redefCls),\n+      \/* get the JNI method ID for a method with name m_name and\n+         signature m_sign *\/\n+        if (methodsInfo[i].inst) { \/* an instance method *\/\n+            methodsInfo[i].mid = env->GetMethodID(redefCls,\n@@ -187,3 +172,2 @@\n-        else                     \/* a static method *\/\n-            methodsInfo[i].mid =\n-                JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, redefCls),\n+        } else {                    \/* a static method *\/\n+            methodsInfo[i].mid = env->GetStaticMethodID(redefCls,\n@@ -191,0 +175,1 @@\n+        }\n@@ -199,1 +184,1 @@\n-\/* get the LocalVariableTable attribute *\/\n+        \/* get the LocalVariableTable attribute *\/\n@@ -253,3 +238,2 @@\n-    jclass redefCls =\n-        JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, redefObj));\n-\/* check only the number of local variables *\/\n+    jclass redefCls = env->GetObjectClass(redefObj);\n+    \/* check only the number of local variables *\/\n@@ -274,1 +258,1 @@\n-\/* fill the structure jvmtiClassDefinition *\/\n+    \/* fill the structure jvmtiClassDefinition *\/\n@@ -276,4 +260,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -299,3 +281,1 @@\n-    jclass redefCls =\n-        JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, redefObj));\n-\n+    jclass redefCls = env->GetObjectClass(redefObj);\n@@ -305,1 +285,0 @@\n-#ifdef __cplusplus\n@@ -307,1 +286,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass009\/redefclass009.cpp","additions":15,"deletions":37,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,3 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n@@ -36,9 +32,0 @@\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -109,2 +96,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -159,5 +145,4 @@\n-\/* get the JNI method ID for a method with name m_name and\n-   signature m_sign *\/\n-        if (methodsInfo[i].inst) \/* an instance method *\/\n-            methodsInfo[i].mid =\n-                JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, redefCls),\n+        \/* get the JNI method ID for a method with name m_name and\n+           signature m_sign *\/\n+        if (methodsInfo[i].inst) { \/* an instance method *\/\n+            methodsInfo[i].mid = env->GetMethodID(redefCls,\n@@ -165,3 +150,2 @@\n-        else                     \/* a static method *\/\n-            methodsInfo[i].mid =\n-                JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, redefCls),\n+        } else {                   \/* a static method *\/\n+            methodsInfo[i].mid = env->GetStaticMethodID(redefCls,\n@@ -169,0 +153,1 @@\n+        }\n@@ -177,1 +162,1 @@\n-\/* get the LineNumberTable attribute *\/\n+        \/* get the LineNumberTable attribute *\/\n@@ -231,3 +216,1 @@\n-    jclass redefCls =\n-        JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, redefObj));\n-\n+    jclass redefCls = env->GetObjectClass(redefObj);\n@@ -252,1 +235,1 @@\n-\/* fill the structure jvmtiClassDefinition *\/\n+    \/* fill the structure jvmtiClassDefinition *\/\n@@ -254,4 +237,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -277,3 +258,1 @@\n-    jclass redefCls =\n-        JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, redefObj));\n-\n+    jclass redefCls = env->GetObjectClass(redefObj);\n@@ -283,1 +262,0 @@\n-#ifdef __cplusplus\n@@ -285,1 +263,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass010\/redefclass010.cpp","additions":14,"deletions":37,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -145,1 +129,0 @@\n-#ifdef __cplusplus\n@@ -147,1 +130,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass011\/redefclass011.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -121,4 +107,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, jbytes));\n-    bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, jbytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(jbytes);\n+    bytes = (unsigned char *) env->GetByteArrayElements(jbytes, NULL);\n@@ -154,1 +138,0 @@\n-#ifdef __cplusplus\n@@ -156,1 +139,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass012\/redefclass012.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -121,4 +107,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, jbytes));\n-    bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, jbytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(jbytes);\n+    bytes = (unsigned char *) env->GetByteArrayElements(jbytes, NULL);\n@@ -154,1 +138,0 @@\n-#ifdef __cplusplus\n@@ -156,1 +139,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass013\/redefclass013.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -126,4 +112,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -153,1 +137,0 @@\n-#ifdef __cplusplus\n@@ -155,1 +138,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass014\/redefclass014.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -145,1 +129,0 @@\n-#ifdef __cplusplus\n@@ -147,1 +130,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass015\/redefclass015.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -160,5 +147,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG((JNIEnv *)env, classBytes));\n-    bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG((JNIEnv *)env,\n-            classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -222,2 +206,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -295,1 +278,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz), \"run\", \"()V\");\n+    mid = env->GetMethodID(clazz, \"run\", \"()V\");\n@@ -302,1 +285,1 @@\n-    classBytes = (jbyteArray) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, bytes));\n+    classBytes = (jbyteArray) env->NewGlobalRef(bytes);\n@@ -356,1 +339,0 @@\n-#ifdef __cplusplus\n@@ -358,1 +340,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass016\/redefclass016.cpp","additions":5,"deletions":24,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -78,2 +65,1 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG((JNIEnv *)env, classBytes));\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n@@ -81,2 +67,1 @@\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG((JNIEnv *)env,\n-            classBytes), NULL);\n+        env->GetByteArrayElements(classBytes, NULL);\n@@ -115,2 +100,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -176,2 +160,1 @@\n-    mid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-        \"checkPoint\", \"()V\");\n+    mid = env->GetMethodID(clazz, \"checkPoint\", \"()V\");\n@@ -184,1 +167,1 @@\n-    classBytes = (jbyteArray) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, bytes));\n+    classBytes = (jbyteArray) env->NewGlobalRef(bytes);\n@@ -208,1 +191,0 @@\n-#ifdef __cplusplus\n@@ -210,1 +192,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass017\/redefclass017.cpp","additions":5,"deletions":24,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -81,5 +68,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG((JNIEnv *)env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG((JNIEnv *)env,\n-            classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -118,2 +102,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -180,1 +163,1 @@\n-    classBytes = (jbyteArray) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, bytes));\n+    classBytes = (jbyteArray) env->NewGlobalRef(bytes);\n@@ -202,1 +185,0 @@\n-#ifdef __cplusplus\n@@ -204,1 +186,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass018\/redefclass018.cpp","additions":4,"deletions":23,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -319,2 +306,1 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG((JNIEnv *)env, classBytes));\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n@@ -322,2 +308,1 @@\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG((JNIEnv *)env,\n-            classBytes), NULL);\n+        env->GetByteArrayElements(classBytes, NULL);\n@@ -384,2 +369,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -458,1 +442,1 @@\n-    classBytes = (jbyteArray) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, bytes));\n+    classBytes = (jbyteArray) env->NewGlobalRef(bytes);\n@@ -460,2 +444,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(clazz, \"run\", \"()V\");\n@@ -468,2 +451,1 @@\n-    midCheckPoint = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-         \"checkPoint\", \"()V\");\n+    midCheckPoint = env->GetMethodID(clazz, \"checkPoint\", \"()V\");\n@@ -514,1 +496,0 @@\n-#ifdef __cplusplus\n@@ -516,1 +497,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass019\/redefclass019.cpp","additions":6,"deletions":26,"binary":false,"changes":32,"status":"modified"}]}