{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import jdk.test.lib.thread.ProcessThread;\n@@ -32,1 +33,0 @@\n-import jdk.testlibrary.ProcessThread;\n@@ -48,0 +48,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/BasicTests.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import jdk.test.lib.thread.ProcessThread;\n@@ -29,1 +30,0 @@\n-import jdk.testlibrary.ProcessThread;\n@@ -38,0 +38,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/PermissionTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/ProviderTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import jdk.test.lib.thread.ProcessThread;\n@@ -31,1 +32,0 @@\n-import jdk.testlibrary.ProcessThread;\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/RunnerUtil.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-import jdk.testlibrary.ProcessThread;\n+import jdk.test.lib.thread.ProcessThread;\n@@ -44,0 +44,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/StartManagementAgent.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import jdk.test.lib.thread.ProcessThread;\n@@ -34,1 +35,0 @@\n-import jdk.testlibrary.ProcessThread;\n@@ -42,0 +42,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/TempDirTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,204 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.testlibrary;\n-\n-import java.util.concurrent.TimeoutException;\n-\n-\/**\n- * Thread which catches exceptions thrown during the execution\n- * and stores them for later analysis.\n- *\n- * <pre>\n- * {@code\n- * TestThread thread = new TestThread(new XRun() {\n- *      public void run() {\n- *      \/\/ do something\n- *      }\n- * });\n- * thread.start();\n- * \/\/ do something\n- * Throwable uncaught = thread.getUncaught();\n- * }\n- * <\/pre>\n- *\/\n-public class TestThread extends Thread {\n-\n-    private final Runnable runnable;\n-    private volatile Throwable uncaught;\n-\n-    \/**\n-     * Returns {@link Runnable} the thread has been created with.\n-     *\n-     * @return The object whose {@code run} method is called\n-     *\/\n-    public Runnable getRunnable() {\n-        return runnable;\n-    }\n-\n-    \/**\n-     * Creates a new {@code TestThread} object.\n-     *\n-     * @param target The object whose {@code run} method is called\n-     * @param name The thread name\n-     *\/\n-    public TestThread(Runnable target, String name) {\n-        super(target, name);\n-        this.runnable = target;\n-    }\n-\n-    \/**\n-     * Creates a new {@code TestThread} object.\n-     *\n-     * @param target The object whose {@code run} method is called\n-     *\/\n-    public TestThread(Runnable target) {\n-        super(target);\n-        this.runnable = target;\n-    }\n-\n-    \/**\n-     * Creates a new {@code TestThread} object.\n-     *\n-     * @param group The thread group\n-     * @param target The object whose {@code run} method is called\n-     * @param name The thread name\n-     * @param stackSize Stack size\n-     *\/\n-    public TestThread(ThreadGroup group, Runnable target, String name,\n-            long stackSize) {\n-        super(group, target, name, stackSize);\n-        this.runnable = target;\n-    }\n-\n-    \/**\n-     * Creates a new {@code TestThread} object.\n-     *\n-     * @param group The thread group\n-     * @param target The object whose {@code run} method is called\n-     * @param name The thread name\n-     *\/\n-    public TestThread(ThreadGroup group, Runnable target, String name) {\n-        super(group, target, name);\n-        this.runnable = target;\n-    }\n-\n-    \/**\n-     * Creates a new {@code TestThread} object.\n-     *\n-     * @param group The thread group\n-     * @param target The object whose {@code run} method is called\n-     *\/\n-    public TestThread(ThreadGroup group, Runnable target) {\n-        super(group, target);\n-        this.runnable = target;\n-    }\n-\n-    \/**\n-     * The thread executor.\n-     *\/\n-    @Override\n-    public void run() {\n-        try {\n-            super.run();\n-        } catch (Throwable t) {\n-            uncaught = t;\n-        }\n-    }\n-\n-    \/**\n-     * Returns exception caught during the execution.\n-     *\n-     * @return {@link Throwable}\n-     *\/\n-    public Throwable getUncaught() {\n-        return uncaught;\n-    }\n-\n-    \/**\n-     * Waits for {@link TestThread} to die\n-     * and throws exception caught during the execution.\n-     *\n-     * @throws InterruptedException\n-     * @throws Throwable\n-     *\/\n-    public void joinAndThrow() throws InterruptedException, Throwable {\n-        join();\n-        if (uncaught != null) {\n-            throw uncaught;\n-        }\n-    }\n-\n-    \/**\n-     * Waits during {@code timeout} for {@link TestThread} to die\n-     * and throws exception caught during the execution.\n-     *\n-     * @param timeout The time to wait in milliseconds\n-     * @throws InterruptedException\n-     * @throws Throwable\n-     *\/\n-    public void joinAndThrow(long timeout) throws InterruptedException,\n-            Throwable {\n-        join(timeout);\n-        if (isAlive()) {\n-            throw new TimeoutException();\n-        }\n-        if (uncaught != null) {\n-            throw uncaught;\n-        }\n-    }\n-\n-    \/**\n-     * Waits for {@link TestThread} to die\n-     * and returns exception caught during the execution.\n-     *\n-     * @return Exception caught during the execution\n-     * @throws InterruptedException\n-     *\/\n-    public Throwable joinAndReturn() throws InterruptedException {\n-        join();\n-        if (uncaught != null) {\n-            return uncaught;\n-        }\n-        return null;\n-    }\n-\n-    \/**\n-     * Waits during {@code timeout} for {@link TestThread} to die\n-     * and returns exception caught during the execution.\n-     *\n-     * @param timeout The time to wait in milliseconds\n-     * @return Exception caught during the execution\n-     * @throws InterruptedException\n-     *\/\n-    public Throwable joinAndReturn(long timeout) throws InterruptedException {\n-        join(timeout);\n-        if (isAlive()) {\n-            return new TimeoutException();\n-        }\n-        if (uncaught != null) {\n-            return uncaught;\n-        }\n-        return null;\n-    }\n-}\n","filename":"test\/jdk\/lib\/testlibrary\/jdk\/testlibrary\/TestThread.java","additions":0,"deletions":204,"binary":false,"changes":204,"status":"deleted"},{"patch":"@@ -1,56 +0,0 @@\n-\/*\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.testlibrary;\n-\n-\/**\n- * This type serves no other purpose than to simply allow automatically running\n- * something in a thread, and have all exceptions propagated to\n- * RuntimeExceptions, which are thrown up to thread, which in turn should\n- * probably be a {@link TestThread} to they are stored.\n- *\/\n-public abstract class XRun implements Runnable {\n-\n-    \/**\n-     * Invokes {@code xrun()} and throws all exceptions caught in it\n-     * up to the thread.\n-     *\/\n-    public final void run() {\n-        try {\n-            xrun();\n-        } catch (Error e) {\n-            throw e;\n-        } catch (RuntimeException e) {\n-            throw e;\n-        } catch (Throwable e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    \/**\n-     * Override this method to implement what to run in the thread.\n-     *\n-     * @throws Throwable\n-     *\/\n-    protected abstract void xrun() throws Throwable;\n-}\n","filename":"test\/jdk\/lib\/testlibrary\/jdk\/testlibrary\/XRun.java","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -32,1 +32,1 @@\n-import jdk.testlibrary.ProcessThread;\n+import jdk.test.lib.thread.ProcessThread;\n@@ -52,0 +52,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/JMXInterfaceBindingTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.thread.ProcessThread;\n@@ -33,2 +35,0 @@\n-import jdk.testlibrary.OutputAnalyzer;\n-import jdk.testlibrary.ProcessThread;\n","filename":"test\/jdk\/sun\/tools\/jstatd\/JstatdTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/sun\/tools\/jstatd\/TestJstatdDefaults.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/sun\/tools\/jstatd\/TestJstatdExternalRegistry.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/sun\/tools\/jstatd\/TestJstatdPort.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/sun\/tools\/jstatd\/TestJstatdPortAndServer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/sun\/tools\/jstatd\/TestJstatdServer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ * @library \/test\/lib\n","filename":"test\/jdk\/sun\/tools\/jstatd\/TestJstatdUsage.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,4 @@\n-package jdk.testlibrary;\n+package jdk.test.lib.thread;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n","filename":"test\/lib\/jdk\/test\/lib\/thread\/ProcessThread.java","additions":5,"deletions":2,"binary":false,"changes":7,"previous_filename":"test\/jdk\/lib\/testlibrary\/jdk\/testlibrary\/ProcessThread.java","status":"renamed"}]}