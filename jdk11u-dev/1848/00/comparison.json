{"files":[{"patch":"@@ -34,1 +34,1 @@\n-ifeq ($(call isTargetOs, windows aix), true)\n+ifeq ($(call isTargetOs, aix), true)\n","filename":"make\/copy\/Copy-java.base.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,3 +40,11 @@\n-$(CLDR_BASEMETAINFO_FILE): $(wildcard $(CLDRSRCDIR)\/common\/dtd\/*.dtd) \\\n-    $(wildcard $(CLDRSRCDIR)\/common\/main\/en*.xml) \\\n-    $(wildcard $(CLDRSRCDIR)\/common\/supplemental\/*.xml) \\\n+# tzmappings generation for Windows.\n+# Since the rule is shared with CLDR_BASEMETAINFO_FILE target, note that\n+# just removing the target tzmappings will not recreate the tzmappings file.\n+ifeq ($(OPENJDK_TARGET_OS), windows)\n+  CLDR_WINTZMAPPINGS := $(GENSRC_BASEDIR)\/windows\/conf\/tzmappings\n+  $(CLDR_WINTZMAPPINGS): $(CLDR_BASEMETAINFO_FILE)\n+endif\n+\n+$(CLDR_BASEMETAINFO_FILE): $(wildcard $(CLDRSRCDIR)\/dtd\/*.dtd) \\\n+    $(wildcard $(CLDRSRCDIR)\/main\/en*.xml) \\\n+    $(wildcard $(CLDRSRCDIR)\/supplemental\/*.xml) \\\n@@ -53,3 +61,3 @@\n-$(CLDR_METAINFO_FILE): $(wildcard $(CLDRSRCDIR)\/common\/dtd\/*.dtd) \\\n-    $(wildcard $(CLDRSRCDIR)\/common\/main\/*.xml) \\\n-    $(wildcard $(CLDRSRCDIR)\/common\/supplemental\/*.xml) \\\n+$(CLDR_METAINFO_FILE): $(wildcard $(CLDRSRCDIR)\/dtd\/*.dtd) \\\n+    $(wildcard $(CLDRSRCDIR)\/main\/*.xml) \\\n+    $(wildcard $(CLDRSRCDIR)\/supplemental\/*.xml) \\\n@@ -62,1 +70,1 @@\n-GENSRC_JAVA_BASE += $(CLDR_BASEMETAINFO_FILE)\n+GENSRC_JAVA_BASE += $(CLDR_BASEMETAINFO_FILE) $(CLDR_WINTZMAPPINGS)\n","filename":"make\/gensrc\/GensrcCLDR.gmk","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+    private static String WINZONES_SOURCE_FILE;\n@@ -95,0 +96,1 @@\n+    private static WinZonesParseHandler handlerWinZones;\n@@ -245,0 +247,1 @@\n+        WINZONES_SOURCE_FILE = CLDR_BASE + \"\/supplemental\/windowsZones.xml\";\n@@ -259,1 +262,0 @@\n-        \/\/ Generate java.time.format.ZoneName.java\n@@ -261,0 +263,1 @@\n+            \/\/ Generate java.time.format.ZoneName.java\n@@ -262,0 +265,3 @@\n+\n+            \/\/ Generate Windows tzmappings\n+            generateWindowsTZMappings();\n@@ -445,0 +451,4 @@\n+\n+        \/\/ Parse windowsZones\n+        handlerWinZones = new WinZonesParseHandler();\n+        parseLDMLFile(new File(WINZONES_SOURCE_FILE), handlerWinZones);\n@@ -1065,0 +1075,38 @@\n+\n+    \/\/ Generate tzmappings for Windows. The format is:\n+    \/\/\n+    \/\/ (Windows Zone Name):(REGION):(Java TZID)\n+    \/\/\n+    \/\/ where:\n+    \/\/   Windows Zone Name: arbitrary time zone name string used in Windows\n+    \/\/   REGION: ISO3166 or UN M.49 code\n+    \/\/   Java TZID: Java's time zone ID\n+    \/\/\n+    \/\/ Note: the entries are alphabetically sorted, *except* the \"world\" region\n+    \/\/ code, i.e., \"001\". It should be the last entry for the same windows time\n+    \/\/ zone name entries. (cf. TimeZone_md.c)\n+    private static void generateWindowsTZMappings() throws Exception {\n+        Files.createDirectories(Paths.get(DESTINATION_DIR, \"windows\", \"conf\"));\n+        Files.write(Paths.get(DESTINATION_DIR, \"windows\", \"conf\", \"tzmappings\"),\n+            handlerWinZones.keySet().stream()\n+                .map(k -> k + \":\" + handlerWinZones.get(k) + \":\")\n+                .sorted(new Comparator<String>() {\n+                    public int compare(String t1, String t2) {\n+                        String[] s1 = t1.split(\":\");\n+                        String[] s2 = t2.split(\":\");\n+                        if (s1[0].equals(s2[0])) {\n+                            if (s1[1].equals(\"001\")) {\n+                                return 1;\n+                            } else if (s2[1].equals(\"001\")) {\n+                                return -1;\n+                            } else {\n+                                return s1[1].compareTo(s2[1]);\n+                            }\n+                        } else {\n+                            return s1[0].compareTo(s2[0]);\n+                        }\n+                    }\n+                })\n+                .collect(Collectors.toList()),\n+            StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);\n+    }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/CLDRConverter.java","additions":49,"deletions":1,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package build.tools.cldrconverter;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.Stream;\n+import org.xml.sax.Attributes;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+\/**\n+ * Handles parsing of files in Locale Data Markup Language for\n+ * windowsZones.xml\n+ *\/\n+\n+class WinZonesParseHandler extends AbstractLDMLHandler<Object> {\n+    @Override\n+    public InputSource resolveEntity(String publicID, String systemID) throws IOException, SAXException {\n+        \/\/ avoid HTTP traffic to unicode.org\n+        if (systemID.startsWith(CLDRConverter.SPPL_LDML_DTD_SYSTEM_ID)) {\n+            return new InputSource((new File(CLDRConverter.LOCAL_SPPL_LDML_DTD)).toURI().toString());\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {\n+        switch (qName) {\n+        case \"mapZone\":\n+            String zoneName = attributes.getValue(\"other\");\n+            String territory = attributes.getValue(\"territory\");\n+            String javatz = attributes.getValue(\"type\").replaceFirst(\"\\\\s.*\", \"\");\n+            put(zoneName + \":\" + territory, javatz);\n+            pushIgnoredContainer(qName);\n+            break;\n+        default:\n+            \/\/ treat anything else as a container\n+            pushContainer(qName, attributes);\n+            break;\n+        }\n+    }\n+}\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/WinZonesParseHandler.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -209,0 +209,11 @@\n+\n+################################################################################\n+# Copy tzmappings file for Windows\n+\n+ifeq ($(OPENJDK_TARGET_OS), windows)\n+  $(eval $(call SetupCopyFiles, COPY_TZMAPPINGS, \\\n+      FILES := $(SUPPORT_OUTPUTDIR)\/gensrc\/java.base\/windows\/conf\/tzmappings, \\\n+      DEST := $(call FindLibDirForModule, $(MODULE)), \\\n+  ))\n+  TARGETS += $(COPY_TZMAPPINGS)\n+endif \n","filename":"make\/lib\/Lib-java.base.gmk","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,226 +0,0 @@\n-#\n-# This file describes mapping information between Windows and Java\n-# time zones.\n-# Format: Each line should include a colon separated fields of Windows\n-# time zone registry key, time zone mapID, locale (which is most\n-# likely used in the time zone), and Java time zone ID. Blank lines\n-# and lines that start with '#' are ignored. Data lines must be sorted\n-# by mapID (ASCII order).\n-#\n-#                            NOTE\n-# This table format is not a public interface of any Java\n-# platforms. No applications should depend on this file in any form.\n-#\n-# This table has been generated by a program and should not be edited\n-# manually.\n-#\n-Romance:-1,64::Europe\/Paris:\n-Romance Standard Time:-1,64::Europe\/Paris:\n-Warsaw:-1,65::Europe\/Warsaw:\n-Central Europe:-1,66::Europe\/Prague:\n-Central Europe Standard Time:-1,66::Europe\/Prague:\n-Prague Bratislava:-1,66::Europe\/Prague:\n-W. Central Africa Standard Time:-1,66:AO:Africa\/Luanda:\n-FLE:-1,67:FI:Europe\/Helsinki:\n-FLE Standard Time:-1,67:FI:Europe\/Helsinki:\n-GFT:-1,67::Europe\/Athens:\n-GFT Standard Time:-1,67::Europe\/Athens:\n-GTB:-1,67::Europe\/Athens:\n-GTB Standard Time:-1,67::Europe\/Athens:\n-Israel:-1,70::Asia\/Jerusalem:\n-Israel Standard Time:-1,70::Asia\/Jerusalem:\n-Arab:-1,71::Asia\/Riyadh:\n-Arab Standard Time:-1,71::Asia\/Riyadh:\n-Arabic Standard Time:-1,71:IQ:Asia\/Baghdad:\n-E. Africa:-1,71:KE:Africa\/Nairobi:\n-E. Africa Standard Time:-1,71:KE:Africa\/Nairobi:\n-Saudi Arabia:-1,71::Asia\/Riyadh:\n-Saudi Arabia Standard Time:-1,71::Asia\/Riyadh:\n-Iran:-1,72::Asia\/Tehran:\n-Iran Standard Time:-1,72::Asia\/Tehran:\n-Afghanistan:-1,73::Asia\/Kabul:\n-Afghanistan Standard Time:-1,73::Asia\/Kabul:\n-India:-1,74::Asia\/Calcutta:\n-India Standard Time:-1,74::Asia\/Calcutta:\n-Myanmar Standard Time:-1,74::Asia\/Rangoon:\n-Nepal Standard Time:-1,74::Asia\/Katmandu:\n-Sri Lanka:-1,74:LK:Asia\/Colombo:\n-Sri Lanka Standard Time:-1,74:LK:Asia\/Colombo:\n-Beijing:-1,75::Asia\/Shanghai:\n-China:-1,75::Asia\/Shanghai:\n-China Standard Time:-1,75::Asia\/Shanghai:\n-AUS Central:-1,76::Australia\/Darwin:\n-AUS Central Standard Time:-1,76::Australia\/Darwin:\n-Cen. Australia:-1,76::Australia\/Adelaide:\n-Cen. Australia Standard Time:-1,76::Australia\/Adelaide:\n-Vladivostok:-1,77::Asia\/Vladivostok:\n-Vladivostok Standard Time:-1,77::Asia\/Vladivostok:\n-West Pacific:-1,77:GU:Pacific\/Guam:\n-West Pacific Standard Time:-1,77:GU:Pacific\/Guam:\n-E. South America:-1,80::America\/Sao_Paulo:\n-E. South America Standard Time:-1,80::America\/Sao_Paulo:\n-Greenland Standard Time:-1,80:GL:America\/Godthab:\n-Newfoundland:-1,81::America\/St_Johns:\n-Newfoundland Standard Time:-1,81::America\/St_Johns:\n-Pacific SA:-1,82::America\/Santiago:\n-Pacific SA Standard Time:-1,82::America\/Santiago:\n-SA Western:-1,82:BO:America\/La_Paz:\n-SA Western Standard Time:-1,82:BO:America\/La_Paz:\n-SA Pacific:-1,83::America\/Bogota:\n-SA Pacific Standard Time:-1,83::America\/Bogota:\n-US Eastern:-1,84::America\/Indianapolis:\n-US Eastern Standard Time:-1,84::America\/Indianapolis:\n-Central America Standard Time:-1,85::America\/Regina:\n-Mexico:-1,85::America\/Mexico_City:\n-Mexico Standard Time:-1,85::America\/Mexico_City:\n-Canada Central:-1,86::America\/Regina:\n-Canada Central Standard Time:-1,86::America\/Regina:\n-US Mountain:-1,87::America\/Phoenix:\n-US Mountain Standard Time:-1,87::America\/Phoenix:\n-GMT:0,1::Europe\/London:\n-GMT Standard Time:0,1::Europe\/London:\n-Ekaterinburg:10,11::Asia\/Yekaterinburg:\n-Ekaterinburg Standard Time:10,11::Asia\/Yekaterinburg:\n-West Asia:10,11:UZ:Asia\/Tashkent:\n-West Asia Standard Time:10,11:UZ:Asia\/Tashkent:\n-Central Asia:12,13::Asia\/Almaty:\n-Central Asia Standard Time:12,13::Asia\/Almaty:\n-N. Central Asia Standard Time:12,13::Asia\/Novosibirsk:\n-Bangkok:14,15::Asia\/Bangkok:\n-Bangkok Standard Time:14,15::Asia\/Bangkok:\n-North Asia Standard Time:14,15::Asia\/Krasnoyarsk:\n-SE Asia:14,15::Asia\/Bangkok:\n-SE Asia Standard Time:14,15::Asia\/Bangkok:\n-North Asia East Standard Time:16,17:RU:Asia\/Irkutsk:\n-Singapore:16,17:SG:Asia\/Singapore:\n-Singapore Standard Time:16,17:SG:Asia\/Singapore:\n-Taipei:16,17::Asia\/Taipei:\n-Taipei Standard Time:16,17::Asia\/Taipei:\n-W. Australia:16,17:AU:Australia\/Perth:\n-W. Australia Standard Time:16,17:AU:Australia\/Perth:\n-Korea:18,19:KR:Asia\/Seoul:\n-Korea Standard Time:18,19:KR:Asia\/Seoul:\n-Tokyo:18,19::Asia\/Tokyo:\n-Tokyo Standard Time:18,19::Asia\/Tokyo:\n-Yakutsk:18,19:RU:Asia\/Yakutsk:\n-Yakutsk Standard Time:18,19:RU:Asia\/Yakutsk:\n-Central European:2,3:CS:Europe\/Belgrade:\n-Central European Standard Time:2,3:CS:Europe\/Belgrade:\n-W. Europe:2,3::Europe\/Berlin:\n-W. Europe Standard Time:2,3::Europe\/Berlin:\n-Tasmania:20,-1::Australia\/Hobart:\n-Tasmania Standard Time:20,-1::Australia\/Hobart:\n-AUS Eastern:20,21::Australia\/Sydney:\n-AUS Eastern Standard Time:20,21::Australia\/Sydney:\n-E. Australia:20,21::Australia\/Brisbane:\n-E. Australia Standard Time:20,21::Australia\/Brisbane:\n-Sydney Standard Time:20,21::Australia\/Sydney:\n-Tasmania Standard Time:20,65::Australia\/Hobart:\n-Central Pacific:22,23::Pacific\/Guadalcanal:\n-Central Pacific Standard Time:22,23::Pacific\/Guadalcanal:\n-Dateline:24,25::GMT-1200:\n-Dateline Standard Time:24,25::GMT-1200:\n-Fiji:24,25::Pacific\/Fiji:\n-Fiji Standard Time:24,25::Pacific\/Fiji:\n-Samoa:26,27::Pacific\/Apia:\n-Samoa Standard Time:26,27::Pacific\/Apia:\n-Hawaiian:28,29::Pacific\/Honolulu:\n-Hawaiian Standard Time:28,29::Pacific\/Honolulu:\n-Alaskan:30,31::America\/Anchorage:\n-Alaskan Standard Time:30,31::America\/Anchorage:\n-Pacific:32,33::America\/Los_Angeles:\n-Pacific Standard Time:32,33::America\/Los_Angeles:\n-Mexico Standard Time 2:34,35:MX:America\/Chihuahua:\n-Mountain:34,35::America\/Denver:\n-Mountain Standard Time:34,35::America\/Denver:\n-Central:36,37::America\/Chicago:\n-Central Standard Time:36,37::America\/Chicago:\n-Eastern:38,39::America\/New_York:\n-Eastern Standard Time:38,39::America\/New_York:\n-E. Europe:4,5::EET:\n-E. Europe Standard Time:4,5::EET:\n-Egypt:4,68::Africa\/Cairo:\n-Egypt Standard Time:4,68::Africa\/Cairo:\n-South Africa:4,69::Africa\/Harare:\n-South Africa Standard Time:4,69::Africa\/Harare:\n-Atlantic:40,41::America\/Halifax:\n-Atlantic Standard Time:40,41::America\/Halifax:\n-SA Eastern:42,43:GF:America\/Cayenne:\n-SA Eastern Standard Time:42,43:GF:America\/Cayenne:\n-Mid-Atlantic:44,45::Atlantic\/South_Georgia:\n-Mid-Atlantic Standard Time:44,45::Atlantic\/South_Georgia:\n-Azores:46,47::Atlantic\/Azores:\n-Azores Standard Time:46,47::Atlantic\/Azores:\n-Cape Verde Standard Time:46,47::Atlantic\/Cape_Verde:\n-Russian:6,7::Europe\/Moscow:\n-Russian Standard Time:6,7::Europe\/Moscow:\n-New Zealand:78,79::Pacific\/Auckland:\n-New Zealand Standard Time:78,79::Pacific\/Auckland:\n-Tonga Standard Time:78,79::Pacific\/Tongatapu:\n-Arabian:8,9::Asia\/Muscat:\n-Arabian Standard Time:8,9::Asia\/Muscat:\n-Caucasus:8,9:AM:Asia\/Yerevan:\n-Caucasus Standard Time:8,9:AM:Asia\/Yerevan:\n-GMT Standard Time:88,89::GMT:\n-Greenwich:88,89::GMT:\n-Greenwich Standard Time:88,89::GMT:\n-Aleutian Standard Time:900,900:US:America\/Adak:\n-Altai Standard Time:901,901::Asia\/Barnaul:\n-Argentina Standard Time:902,902::America\/Buenos_Aires:\n-Armenian Standard Time:903,903:AM:Asia\/Yerevan:\n-Astrakhan Standard Time:904,904::Europe\/Astrakhan:\n-Aus Central W. Standard Time:905,905::Australia\/Eucla:\n-Azerbaijan Standard Time:906,906:AZ:Asia\/Baku:\n-Bahia Standard Time:907,907::America\/Bahia:\n-Bangladesh Standard Time:908,908::Asia\/Dhaka:\n-Belarus Standard Time:909,909:BY:Europe\/Minsk:\n-Bougainville Standard Time:910,910::Pacific\/Bougainville:\n-Central Brazilian Standard Time:911,911:BR:America\/Cuiaba:\n-Central Standard Time (Mexico):912,912::America\/Mexico_City:\n-Chatham Islands Standard Time:913,913::Pacific\/Chatham:\n-Cuba Standard Time:914,914:CU:America\/Havana:\n-Easter Island Standard Time:915,915:CL:Pacific\/Easter:\n-Eastern Standard Time (Mexico):916,916::America\/Cancun:\n-Georgian Standard Time:917,917:GE:Asia\/Tbilisi:\n-Haiti Standard Time:918,918:HT:America\/Port-au-Prince:\n-Jordan Standard Time:919,919:JO:Asia\/Amman:\n-Kaliningrad Standard Time:920,920:RU:Europe\/Kaliningrad:\n-Kamchatka Standard Time:921,921:RU:Asia\/Kamchatka:\n-Libya Standard Time:922,922:LY:Africa\/Tripoli:\n-Line Islands Standard Time:923,923::Pacific\/Kiritimati:\n-Lord Howe Standard Time:924,924::Australia\/Lord_Howe:\n-Magadan Standard Time:925,925::Asia\/Magadan:\n-Marquesas Standard Time:926,926::Pacific\/Marquesas:\n-Mauritius Standard Time:927,927:MU:Indian\/Mauritius:\n-Middle East Standard Time:928,928:LB:Asia\/Beirut:\n-Montevideo Standard Time:929,929:UY:America\/Montevideo:\n-Morocco Standard Time:930,930:MA:Africa\/Casablanca:\n-Mountain Standard Time (Mexico):931,931:MX:America\/Chihuahua:\n-Namibia Standard Time:932,932:NA:Africa\/Windhoek:\n-Norfolk Standard Time:933,933::Pacific\/Norfolk:\n-North Korea Standard Time:934,934:KP:Asia\/Pyongyang:\n-Pacific Standard Time (Mexico):935,935:MX:America\/Tijuana:\n-Pakistan Standard Time:936,936::Asia\/Karachi:\n-Paraguay Standard Time:937,937:PY:America\/Asuncion:\n-Russia Time Zone 10:938,938::Asia\/Srednekolymsk:\n-Russia Time Zone 11:939,939::Asia\/Anadyr:\n-Russia Time Zone 3:940,940::Europe\/Samara:\n-Saint Pierre Standard Time:941,941:PM:America\/Miquelon:\n-Sakhalin Standard Time:942,942::Asia\/Sakhalin:\n-Syria Standard Time:943,943:SY:Asia\/Damascus:\n-Tocantins Standard Time:944,944::America\/Araguaina:\n-Tomsk Standard Time:945,945::Asia\/Tomsk:\n-Transbaikal Standard Time:946,946::Asia\/Chita:\n-Turkey Standard Time:947,947::Asia\/Istanbul:\n-Turks And Caicos Standard Time:948,948:TC:America\/Grand_Turk:\n-UTC+12:949,949::GMT+1200:\n-UTC-02:950,950::GMT-0200:\n-UTC-08:951,951::GMT-0800:\n-UTC-09:952,952::GMT-0900:\n-UTC-11:953,953::GMT-1100:\n-UTC:954,954::UTC:\n-Ulaanbaatar Standard Time:955,955::Asia\/Ulaanbaatar:\n-Venezuela Standard Time:956,956::America\/Caracas:\n-W. Mongolia Standard Time:957,957::Asia\/Hovd:\n-West Bank Standard Time:958,958::Asia\/Gaza:\n-Western Brazilian Standard Time:959,959:BR:America\/Rio_Branco:\n","filename":"src\/java.base\/windows\/conf\/tzmappings","additions":0,"deletions":226,"binary":false,"changes":226,"status":"deleted"},{"patch":"@@ -39,0 +39,1 @@\n+#define MAX_REGION_LENGTH       4\n@@ -148,1 +149,1 @@\n-static int getWinTimeZone(char *winZoneName, char *winMapID)\n+static int getWinTimeZone(char *winZoneName)\n@@ -234,1 +235,0 @@\n-        DWORD valueSize;\n@@ -375,7 +375,0 @@\n-        \/*\n-         * Get the \"MapID\" value of the registry to be able to eliminate\n-         * duplicated key names later.\n-         *\/\n-        valueSize = MAX_MAPID_LENGTH;\n-        ret = RegQueryValueExA(hSubKey, \"MapID\", NULL, &valueType, winMapID, &valueSize);\n-        (void) RegCloseKey(hSubKey);\n@@ -383,10 +376,0 @@\n-\n-        if (ret != ERROR_SUCCESS) {\n-            \/*\n-             * Vista doesn't have mapID. VALUE_UNKNOWN should be returned\n-             * only for Windows NT.\n-             *\/\n-            if (onlyMapID == 1) {\n-                return VALUE_UNKNOWN;\n-            }\n-        }\n@@ -413,3 +396,2 @@\n-#define TZ_MAPID        1\n-#define TZ_REGION       2\n-#define TZ_JAVA_NAME    3\n+#define TZ_REGION       1\n+#define TZ_JAVA_NAME    2\n@@ -417,1 +399,1 @@\n-#define TZ_NITEMS       4       \/* number of items (fields) *\/\n+#define TZ_NITEMS       3       \/* number of items (fields) *\/\n@@ -423,5 +405,0 @@\n- *\n- * value_type is one of the following values:\n- *      VALUE_KEY for exact key matching\n- *      VALUE_MAPID for MapID (this is\n- *      required for the old Windows, such as NT 4.0 SP3).\n@@ -429,2 +406,1 @@\n-static char *matchJavaTZ(const char *java_home_dir, int value_type, char *tzName,\n-                         char *mapID)\n+static char *matchJavaTZ(const char *java_home_dir, char *tzName)\n@@ -439,1 +415,0 @@\n-    int noMapID = *mapID == '\\0';       \/* no mapID on Vista and later *\/\n@@ -442,0 +417,14 @@\n+    char region[MAX_REGION_LENGTH];\n+\n+    \/\/ Get the user's location\n+    if (GetGeoInfo(GetUserGeoID(GEOCLASS_NATION),\n+            GEO_ISO2, region, MAX_REGION_LENGTH, 0) == 0) {\n+        \/\/ If GetGeoInfo fails, fallback to LCID's country\n+        LCID lcid = GetUserDefaultLCID();\n+        if (GetLocaleInfo(lcid,\n+                          LOCALE_SISO3166CTRYNAME, region, MAX_REGION_LENGTH) == 0 &&\n+            GetLocaleInfo(lcid,\n+                          LOCALE_SISO3166CTRYNAME2, region, MAX_REGION_LENGTH) == 0) {\n+            region[0] = '\\0';\n+        }\n+    }\n@@ -497,1 +486,5 @@\n-        if (noMapID || strcmp(mapID, items[TZ_MAPID]) == 0) {\n+        \/*\n+         * We need to scan items until the\n+         * exact match is found or the end of data is detected.\n+         *\/\n+        if (strcmp(items[TZ_WIN_NAME], tzName) == 0) {\n@@ -499,2 +492,2 @@\n-             * When there's no mapID, we need to scan items until the\n-             * exact match is found or the end of data is detected.\n+             * Found the time zone in the mapping table.\n+             * Check the region code and select the appropriate entry\n@@ -502,7 +495,2 @@\n-            if (!noMapID) {\n-                IDmatched = 1;\n-            }\n-            if (strcmp(items[TZ_WIN_NAME], tzName) == 0) {\n-                \/*\n-                 * Found the time zone in the mapping table.\n-                 *\/\n+            if (strcmp(items[TZ_REGION], region) == 0 ||\n+                strcmp(items[TZ_REGION], \"001\") == 0) {\n@@ -512,7 +500,0 @@\n-        } else {\n-            if (IDmatched == 1) {\n-                \/*\n-                 * No need to look up the mapping table further.\n-                 *\/\n-                break;\n-            }\n@@ -538,1 +519,0 @@\n-    char winMapID[MAX_MAPID_LENGTH];\n@@ -542,2 +522,1 @@\n-    winMapID[0] = 0;\n-    result = getWinTimeZone(winZoneName, winMapID);\n+    result = getWinTimeZone(winZoneName);\n@@ -549,2 +528,1 @@\n-            std_timezone = matchJavaTZ(java_home_dir, result,\n-                                       winZoneName, winMapID);\n+            std_timezone = matchJavaTZ(java_home_dir, winZoneName);\n","filename":"src\/java.base\/windows\/native\/libjava\/TimeZone_md.c","additions":31,"deletions":53,"binary":false,"changes":84,"status":"modified"}]}