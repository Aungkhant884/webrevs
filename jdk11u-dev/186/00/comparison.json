{"files":[{"patch":"@@ -1086,0 +1086,1 @@\n+      return;\n@@ -1116,0 +1117,1 @@\n+      return;\n@@ -1146,0 +1148,1 @@\n+      return;\n","filename":"src\/hotspot\/cpu\/arm\/assembler_arm_32.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  : _throw_index_out_of_bounds_exception(false), _index(index), _array(array) {\n+  : _index(index), _array(array), _throw_index_out_of_bounds_exception(false) {\n@@ -61,1 +61,1 @@\n-  : _throw_index_out_of_bounds_exception(true), _index(index), _array(NULL) {\n+  : _index(index), _array(NULL), _throw_index_out_of_bounds_exception(true) {\n","filename":"src\/hotspot\/cpu\/arm\/c1_CodeStubs_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3100,1 +3100,1 @@\n-    AsmCondition acond;\n+    AsmCondition acond = al;\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRAssembler_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -736,0 +736,1 @@\n+      return;\n@@ -760,0 +761,1 @@\n+        return;\n@@ -827,1 +829,1 @@\n-      } else if (x->op() == Bytecodes::_idiv) {\n+      } else { \/\/ (x->op() == Bytecodes::_idiv)\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRGenerator_arm.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}