{"files":[{"patch":"@@ -1310,0 +1310,8 @@\n+  \/\/ Determine if a method is too big for a\/another round of split-if, based on\n+  \/\/ a magic (approximate) ratio derived from the equally magic constant 35000,\n+  \/\/ previously used for this purpose (but without relating to the node limit).\n+  bool must_throttle_split_if() {\n+    uint threshold = C->max_node_limit() * 2 \/ 5;\n+    return C->live_nodes() > threshold;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1012,2 +1012,1 @@\n-  \/\/ Use same limit as split_if_with_blocks_post\n-  if( C->live_nodes() > 35000 ) return n; \/\/ Method too big\n+  if (must_throttle_split_if()) return n;\n@@ -1121,3 +1120,4 @@\n-bool PhaseIdealLoop::can_split_if(Node *n_ctrl) {\n-  if (C->live_nodes() > 35000) {\n-    return false; \/\/ Method too big\n+\n+bool PhaseIdealLoop::can_split_if(Node* n_ctrl) {\n+  if (must_throttle_split_if()) {\n+    return false;\n@@ -1486,2 +1486,2 @@\n-  Node *n = C->root();\n-  visited.set(n->_idx); \/\/ first, mark node as visited\n+  Node* root = C->root();\n+  visited.set(root->_idx); \/\/ first, mark root as visited\n@@ -1489,3 +1489,4 @@\n-  n = split_if_with_blocks_pre( n );\n-  uint cnt = n->outcnt();\n-  uint i   = 0;\n+  Node* n   = split_if_with_blocks_pre(root);\n+  uint  cnt = n->outcnt();\n+  uint  i   = 0;\n+\n@@ -1499,1 +1500,1 @@\n-        use = split_if_with_blocks_pre( use );\n+        use = split_if_with_blocks_pre(use);\n@@ -1510,1 +1511,4 @@\n-        split_if_with_blocks_post( n, last_round );\n+        split_if_with_blocks_post(n, last_round);\n+      }\n+      if (must_throttle_split_if()) {\n+        nstack.clear();\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":16,"deletions":12,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8210392\n+ * @summary C2 Assert failure: Live node limit exceeded\n+ *\n+ * @run main\/othervm compiler.loopopts.Test8210392\n+ *\/\n+\n+package compiler.loopopts;\n+\n+public class Test8210392 {\n+    public static int ival = 17;\n+\n+    public static int intFn() {\n+        int v = 0, k = 0;\n+        for (int i = 17; i < 311; i += 3) {\n+            v = Test8210392.ival;\n+            int j = 1;\n+            do {\n+                v *= i;\n+                v += j * v;\n+                while (++k < 1)\n+                    ;\n+            } while (++j < 13);\n+        }\n+        return v;\n+    }\n+\n+    public void mainTest() {\n+        for (int i = 0; i < 30000; i++) {\n+            Test8210392.ival = intFn();\n+        }\n+    }\n+\n+    public static void main(String[] _args) {\n+        Test8210392 tc = new Test8210392();\n+        for (int i = 0; i < 10; i++) {\n+            tc.mainTest();\n+        }\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/Test8210392.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}