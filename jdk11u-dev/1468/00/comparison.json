{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"utilities\/stringUtils.hpp\"\n@@ -408,0 +409,9 @@\n+        \/\/ Print estimated execution frequency, normalized within a [0,1] range.\n+        buffer[0] = 0;\n+        stringStream freq(buffer, sizeof(buffer) - 1);\n+        \/\/ Higher precision has no practical effect in visualizations.\n+        freq.print(\"%.8f\", block->_freq \/ _max_freq);\n+        assert(freq.size() < sizeof(buffer), \"size in range\");\n+        \/\/ Enforce dots as decimal separators, as required by IGV.\n+        StringUtils::replace_no_expand(buffer, \",\", \".\");\n+        print_prop(\"frequency\", buffer);\n@@ -411,0 +421,21 @@\n+    switch (t->category()) {\n+      case Type::CatData:\n+        print_prop(\"category\", \"data\");\n+        break;\n+      case Type::CatMemory:\n+        print_prop(\"category\", \"memory\");\n+        break;\n+      case Type::CatMixed:\n+        print_prop(\"category\", \"mixed\");\n+        break;\n+      case Type::CatControl:\n+        print_prop(\"category\", \"control\");\n+        break;\n+      case Type::CatOther:\n+        print_prop(\"category\", \"other\");\n+        break;\n+      case Type::CatUndef:\n+        print_prop(\"category\", \"undef\");\n+        break;\n+    }\n+\n@@ -681,0 +712,10 @@\n+  if (C->cfg() != NULL) {\n+    \/\/ Compute the maximum estimated frequency in the current graph.\n+    _max_freq = 1.0e-6;\n+    for (uint i = 0; i < C->cfg()->number_of_blocks(); i++) {\n+      Block* block = C->cfg()->get_block(i);\n+      if (block->_freq > _max_freq) {\n+        _max_freq = block->_freq;\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/idealGraphPrinter.cpp","additions":42,"deletions":1,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,0 +99,1 @@\n+  double _max_freq;\n","filename":"src\/hotspot\/share\/opto\/idealGraphPrinter.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1106,0 +1106,67 @@\n+\/\/------------------------------category---------------------------------------\n+#ifndef PRODUCT\n+Type::Category Type::category() const {\n+  const TypeTuple* tuple;\n+  switch (base()) {\n+    case Type::Int:\n+    case Type::Long:\n+    case Type::Half:\n+    case Type::NarrowOop:\n+    case Type::NarrowKlass:\n+    case Type::Array:\n+      \/\/case Type::VectorA:\n+    case Type::VectorS:\n+    case Type::VectorD:\n+    case Type::VectorX:\n+    case Type::VectorY:\n+    case Type::VectorZ:\n+    case Type::AnyPtr:\n+    case Type::RawPtr:\n+    case Type::OopPtr:\n+    case Type::InstPtr:\n+    case Type::AryPtr:\n+    case Type::MetadataPtr:\n+    case Type::KlassPtr:\n+    case Type::Function:\n+    case Type::Return_Address:\n+    case Type::FloatTop:\n+    case Type::FloatCon:\n+    case Type::FloatBot:\n+    case Type::DoubleTop:\n+    case Type::DoubleCon:\n+    case Type::DoubleBot:\n+      return CatData;\n+    case Type::Memory:\n+      return CatMemory;\n+    case Type::Control:\n+      return CatControl;\n+    case Type::Top:\n+    case Type::Abio:\n+    case Type::Bottom:\n+      return CatOther;\n+    case Type::Bad:\n+    case Type::lastype:\n+      return CatUndef;\n+    case Type::Tuple:\n+      \/\/ Recursive case. Return CatMixed if the tuple contains types of\n+      \/\/ different categories (e.g. CallStaticJavaNode's type), or the specific\n+      \/\/ category if all types are of the same category (e.g. IfNode's type).\n+      tuple = is_tuple();\n+      if (tuple->cnt() == 0) {\n+        return CatUndef;\n+      } else {\n+        Category first = tuple->field_at(0)->category();\n+        for (uint i = 1; i < tuple->cnt(); i++) {\n+          if (tuple->field_at(i)->category() != first) {\n+            return CatMixed;\n+          }\n+        }\n+        return first;\n+      }\n+    default:\n+      assert(false, \"unmatched base type: all base types must be categorized\");\n+  }\n+  return CatUndef;\n+}\n+#endif\n+\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":68,"deletions":1,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -363,0 +363,11 @@\n+  \/\/ Groups of types, for debugging and visualization only.\n+  enum Category {\n+    CatData,\n+    CatMemory,\n+    CatMixed,   \/\/ Tuples with types of different categories.\n+    CatControl,\n+    CatOther,   \/\/ {Type::Top, Type::Abio, Type::Bottom}.\n+    CatUndef    \/\/ {Type::Bad, Type::lastype}, for completeness.\n+  };\n+  \/\/ Return the category of this type.\n+  Category category() const;\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,4 +66,2 @@\n-                        if (figures.contains(c.getInputSlot().getFigure())) {\n-                            c.setStyle(rule.getLineStyle());\n-                            c.setColor(rule.getLineColor());\n-                        }\n+                        c.setStyle(rule.getLineStyle());\n+                        c.setColor(rule.getLineColor());\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/com\/sun\/hotspot\/igv\/filter\/ConnectionFilter.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -5,28 +5,0 @@\n-        <file name=\"Coloring\" url=\"filters\/color.filter\">\n-            <attr name=\"enabled\" boolvalue=\"true\"\/>\n-        <\/file>\n-        \n-        \n-        <file name=\"Stamp Coloring\" url=\"filters\/stampColor.filter\">\n-            <attr name=\"enabled\" boolvalue=\"false\"\/>\n-        <\/file>\n-      \n-        <file name=\"Probability Coloring\" url=\"filters\/probability.filter\">\n-            <attr name=\"enabled\" boolvalue=\"false\"\/>\n-        <\/file>\n-        \n-        <file name=\"Call Graph Coloring\" url=\"filters\/callgraph.filter\">\n-            <attr name=\"enabled\" boolvalue=\"false\"\/>\n-        <\/file>\n-        \n-        <file name=\"Reduce Edges\" url=\"filters\/reduceEdges.filter\">\n-            <attr name=\"enabled\" boolvalue=\"true\"\/>\n-        <\/file>\n-        \n-        <file name=\"Remove State\" url=\"filters\/removeState.filter\">\n-            <attr name=\"enabled\" boolvalue=\"false\"\/>\n-        <\/file>\n-        \n-        <file name=\"Remove Floating\" url=\"filters\/removeFloating.filter\">\n-            <attr name=\"enabled\" boolvalue=\"false\"\/>\n-        <\/file>\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/com\/sun\/hotspot\/igv\/graal\/layer.xml","additions":0,"deletions":28,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,2 @@\n-        BOLD\n+        BOLD,\n+        INVISIBLE\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/com\/sun\/hotspot\/igv\/graph\/Connection.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,6 +1,5 @@\n-colorize(\"name\", \".*\", yellow);\n-colorize(\"name\", \"Catch.*\", blue);\n-colorize(\"name\", \"Region|Loop|CountedLoop|Root\", red);\n-colorize(\"name\", \"CProj|IfFalse|IfTrue|JProj|CatchProj\", magenta);\n-colorize(\"name\", \"Con.*\", orange);\n-colorize(\"name\", \"Parm|Proj\", lightGray);\n+var mixedNodeColor   = java.awt.Color.decode(\"#ffaabb\");\n+var controlNodeColor = java.awt.Color.decode(\"#ee8866\");\n+var otherNodeColor   = java.awt.Color.decode(\"#eedd88\");\n+var dataNodeColor    = java.awt.Color.decode(\"#adcbea\");\n+var memoryNodeColor  = java.awt.Color.decode(\"#babb00\");\n@@ -8,2 +7,11 @@\n-\/\/ Nodes with bci\n-colorize(\"bci\", \"..*\", magenta);\n+var mixedEdgeColor   = java.awt.Color.decode(\"#ff7f99\");\n+var controlEdgeColor = java.awt.Color.decode(\"#e75828\");\n+var otherEdgeColor   = java.awt.Color.decode(\"#dfc025\");\n+var dataEdgeColor    = java.awt.Color.decode(\"#3178c2\");\n+var memoryEdgeColor  = java.awt.Color.decode(\"#828200\");\n+\n+colorize(\"category\", \"data\", dataNodeColor);\n+colorize(\"category\", \"memory\", memoryNodeColor);\n+colorize(\"category\", \"mixed\", mixedNodeColor);\n+colorize(\"category\", \"control\", controlNodeColor);\n+colorize(\"category\", \"other\", otherNodeColor);\n@@ -11,1 +19,0 @@\n-\/\/ Line style\n@@ -13,5 +20,5 @@\n-f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"type\", \"int:\")), null, Color.BLUE, null));\n-f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"type\", \"control\")), null, Color.RED, null));\n-f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"type\", \"memory\")), null, Color.GREEN, null));\n-f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"type\", \"tuple:\")), null, Color.MAGENTA, null));\n-f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"type\", \"bottom\")), null, Color.LIGHT_GRAY, null));\n+f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"data\")), null, dataEdgeColor, null));\n+f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"memory\")), null, memoryEdgeColor, null));\n+f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"mixed\")), null, mixedEdgeColor, null));\n+f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"control\")), null, controlEdgeColor, null));\n+f.addRule(new ColorFilter.ColorRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"other\")), null, otherEdgeColor, null));\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/color.filter","additions":21,"deletions":14,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,23 @@\n+\/\/ Color nodes by estimated execution frequency. Applies only when control-flow\n+\/\/ graph information is available (from \"Global Code Motion\" on).\n+\n+\/\/ These colors are generated by running:\n+\/\/ $ python3 extract-colors.py --steps 10 --colormap coolwarm\n+var step0Color = java.awt.Color.decode(\"#3b4cc0\");\n+var step1Color = java.awt.Color.decode(\"#5977e3\");\n+var step2Color = java.awt.Color.decode(\"#7b9ff9\");\n+var step3Color = java.awt.Color.decode(\"#9ebeff\");\n+var step4Color = java.awt.Color.decode(\"#c0d4f5\");\n+var step5Color = java.awt.Color.decode(\"#dddcdc\");\n+var step6Color = java.awt.Color.decode(\"#f2cbb7\");\n+var step7Color = java.awt.Color.decode(\"#f7ac8e\");\n+var step8Color = java.awt.Color.decode(\"#ee8468\");\n+var step9Color = java.awt.Color.decode(\"#d65244\");\n+var step10Color = java.awt.Color.decode(\"#b40426\");\n+\n+var colors = [step0Color, step1Color, step2Color, step3Color, step4Color, step5Color, step6Color, step7Color, step8Color, step9Color, step10Color]\n+var fractions = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n+\n+\/\/ The max value is set to 1.01 instead of 1.0 to workaround a (numerical?)\n+\/\/ issue where nodes with frequencies close (but not equal to) 1.0 are not colored.\n+colorizeGradientCustom(\"frequency\", 0.0, 1.01, \"logarithmic\", colors, fractions, 1024);\n\\ No newline at end of file\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/colorFrequency.filter","additions":23,"deletions":0,"binary":false,"changes":23,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+#!\/usr\/bin\/python3\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+\n+import matplotlib.cm\n+import argparse\n+import sys\n+\n+parser = argparse.ArgumentParser()\n+parser.add_argument('--steps', type=int, default=10)\n+parser.add_argument('--colormap', default='coolwarm')\n+args = parser.parse_args()\n+\n+cmap = matplotlib.cm.get_cmap(args.colormap)\n+n    = args.steps\n+\n+for step in range(n + 1):\n+    point = step \/ float(n)\n+    rgb   = tuple([int(round(c * 255)) for c in cmap(point)[0:3]])\n+    hex   = '#%02x%02x%02x' % rgb\n+    print(\"var step\" + str(step) + \"Color\" + \" = java.awt.Color.decode(\\\"\" + \\\n+          hex + \"\\\");\")\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/extract-colors.py","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+var f = new RemoveFilter(\"Hide control subgraph\");\n+f.addRule(new RemoveFilter.RemoveRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"control\"))));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideControl.filter","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+var f = new ConnectionFilter(\"Hide control edges\");\n+f.addRule(new ConnectionFilter.ConnectionStyleRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"control\")),\n+                                                   white,\n+                                                   Connection.ConnectionStyle.INVISIBLE));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideControlEdges.filter","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+var f = new RemoveFilter(\"Hide data subgraph\");\n+f.addRule(new RemoveFilter.RemoveRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"data\"))));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideData.filter","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+var f = new ConnectionFilter(\"Hide data edges\");\n+f.addRule(new ConnectionFilter.ConnectionStyleRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"data\")),\n+                                                   white,\n+                                                   Connection.ConnectionStyle.INVISIBLE));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideDataEdges.filter","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+var f = new RemoveFilter(\"Hide memory subgraph\");\n+f.addRule(new RemoveFilter.RemoveRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"memory\"))));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideMemory.filter","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+var f = new ConnectionFilter(\"Hide memory edges\");\n+f.addRule(new ConnectionFilter.ConnectionStyleRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"memory\")),\n+                                                   white,\n+                                                   Connection.ConnectionStyle.INVISIBLE));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideMemoryEdges.filter","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+var f = new RemoveFilter(\"Hide mixed subgraph\");\n+f.addRule(new RemoveFilter.RemoveRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"mixed\"))));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideMixed.filter","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+var f = new ConnectionFilter(\"Hide mixed edges\");\n+f.addRule(new ConnectionFilter.ConnectionStyleRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"mixed\")),\n+                                                   white,\n+                                                   Connection.ConnectionStyle.INVISIBLE));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideMixedEdges.filter","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+var f = new RemoveFilter(\"Hide other subgraph\");\n+f.addRule(new RemoveFilter.RemoveRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"other\"))));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideOther.filter","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+var f = new ConnectionFilter(\"Hide other edges\");\n+f.addRule(new ConnectionFilter.ConnectionStyleRule(new MatcherSelector(new Properties.StringPropertyMatcher(\"category\", \"other\")),\n+                                                   white,\n+                                                   Connection.ConnectionStyle.INVISIBLE));\n+f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/hideOtherEdges.filter","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+\/\/ Remove all nodes except control, mixed, and nodes of 'bottom' type that are\n+\/\/ successors of control nodes (typically 'Halt', 'Return', etc.).\n+\n@@ -6,1 +9,4 @@\n-        new OrSelector(\n+        new MatcherSelector(\n+          new Properties.RegexpPropertyMatcher(\"category\", \"control|mixed\")\n+        ),\n+        new AndSelector(\n@@ -9,1 +15,1 @@\n-              new Properties.StringPropertyMatcher(\"type\", \"control\")\n+              new Properties.RegexpPropertyMatcher(\"type\", \"control\")\n@@ -12,2 +18,2 @@\n-\t  new MatcherSelector(\n-            new Properties.StringPropertyMatcher(\"type\", \"control\")\n+          new MatcherSelector(\n+            new Properties.RegexpPropertyMatcher(\"type\", \"bottom\")\n@@ -15,3 +21,0 @@\n-        ),\n-\tnew MatcherSelector(\n-          new Properties.StringPropertyMatcher(\"name\", \"Start\")\n@@ -20,1 +23,2 @@\n-    ), false\n+    ),\n+    false\n@@ -23,1 +27,0 @@\n-f.addRule(new RemoveFilter.RemoveRule(new MatcherSelector(new Properties.RegexpPropertyMatcher(\"name\", \"Phi|Store.\"))));\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/onlyControlFlow.filter","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1,8 +0,0 @@\n-remove(\"dump_spec\", \"FramePtr|ReturnAdr|I_O\"); \n-removeInputs(\"name\", \"Root\");\n-var f = new RemoveSelfLoopsFilter(\"Remove Self-Loops\");\n-f.apply(graph);\n-removeInputs(\"name\", \"SafePoint|CallStaticJava|CallDynamicJava|CallJava|CallLeaf|CallRuntime|AbstractLock|CallLeafNoFP|Call|CallStaticJavaDirect\", 5);\n-removeInputs(\"name\", \"Unlock|Lock\", 7);\n-removeInputs(\"name\", \"Allocate\", 7);\n-removeInputs(\"name\", \"AllocateArray\", 9);\n\\ No newline at end of file\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/remove.filter","additions":0,"deletions":8,"binary":false,"changes":8,"status":"deleted"},{"patch":"@@ -0,0 +1,11 @@\n+\/\/ Hide secondary edges.\n+remove(\"dump_spec\", \"FramePtr|ReturnAdr|I_O\");\n+removeInputs(\"name\", \"Root\");\n+var f = new RemoveSelfLoopsFilter(\"Remove Self-Loops\");\n+f.apply(graph);\n+removeInputs(\"name\", \"SafePoint|CallStaticJava|CallDynamicJava|CallJava|CallLeaf|CallRuntime|AbstractLock|CallLeafNoFP|Call|CallStaticJavaDirect\", 5);\n+removeInputs(\"name\", \"Unlock|Lock\", 7);\n+removeInputs(\"name\", \"Allocate\", 7);\n+removeInputs(\"name\", \"AllocateArray\", 9);\n+\n+\/\/ Combine projection nodes.\n@@ -5,0 +16,2 @@\n+\n+\/\/ Inline (split) constant nodes.\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/structural.filter","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -5,1 +5,32 @@\n-        <file name=\"C2 Basic Coloring\" url=\"filters\/color.filter\">\n+        <file name=\"Color by category\" url=\"filters\/color.filter\">\n+            <attr name=\"enabled\" boolvalue=\"true\"\/>\n+        <\/file>\n+        <file name=\"Color by execution frequency\" url=\"filters\/colorFrequency.filter\">\n+            <attr name=\"enabled\" boolvalue=\"false\"\/>\n+            <attr name=\"after\" stringvalue=\"Color by category\"\/>\n+        <\/file>\n+        <file name=\"Simplify graph\" url=\"filters\/structural.filter\">\n+            <attr name=\"enabled\" boolvalue=\"false\"\/>\n+            <attr name=\"after\" stringvalue=\"Color by execution frequency\"\/>\n+        <\/file>\n+        <file name=\"Hide data subgraph\" url=\"filters\/hideData.filter\">\n+            <attr name=\"enabled\" boolvalue=\"false\"\/>\n+            <attr name=\"after\" stringvalue=\"Simplify graph\"\/>\n+        <\/file>\n+        <file name=\"Hide memory subgraph\" url=\"filters\/hideMemory.filter\">\n+            <attr name=\"enabled\" boolvalue=\"false\"\/>\n+            <attr name=\"after\" stringvalue=\"Hide data subgraph\"\/>\n+        <\/file>\n+        <file name=\"Hide control subgraph\" url=\"filters\/hideControl.filter\">\n+            <attr name=\"enabled\" boolvalue=\"false\"\/>\n+            <attr name=\"after\" stringvalue=\"Hide memory subgraph\"\/>\n+        <\/file>\n+        <file name=\"Hide mixed subgraph\" url=\"filters\/hideMixed.filter\">\n+            <attr name=\"enabled\" boolvalue=\"false\"\/>\n+            <attr name=\"after\" stringvalue=\"Hide control subgraph\"\/>\n+        <\/file>\n+        <file name=\"Hide other subgraph\" url=\"filters\/hideOther.filter\">\n+            <attr name=\"enabled\" boolvalue=\"false\"\/>\n+            <attr name=\"after\" stringvalue=\"Hide mixed subgraph\"\/>\n+        <\/file>\n+        <file name=\"Show control flow only\" url=\"filters\/onlyControlFlow.filter\">\n@@ -7,0 +38,1 @@\n+            <attr name=\"after\" stringvalue=\"Hide other subgraph\"\/>\n@@ -8,1 +40,1 @@\n-        <file name=\"C2 Matcher Flags Coloring\" url=\"filters\/matchingFlags.filter\">\n+        <file name=\"Hide data edges\" url=\"filters\/hideDataEdges.filter\">\n@@ -10,1 +42,1 @@\n-            <attr name=\"after\" stringvalue=\"C2 Basic Coloring\"\/>\n+            <attr name=\"after\" stringvalue=\"Show control flow only\"\/>\n@@ -12,1 +44,1 @@\n-        <file name=\"C2 Register Coloring\" url=\"filters\/register.filter\">\n+        <file name=\"Hide memory edges\" url=\"filters\/hideMemoryEdges.filter\">\n@@ -14,1 +46,1 @@\n-            <attr name=\"after\" stringvalue=\"C2 Matcher Flags Coloring\"\/>\n+            <attr name=\"after\" stringvalue=\"Hide data edges\"\/>\n@@ -16,1 +48,1 @@\n-        <file name=\"C2 Only Control Flow\" url=\"filters\/onlyControlFlow.filter\">\n+        <file name=\"Hide control edges\" url=\"filters\/hideControlEdges.filter\">\n@@ -18,1 +50,1 @@\n-            <attr name=\"after\" stringvalue=\"C2 Register Coloring\"\/>\n+            <attr name=\"after\" stringvalue=\"Hide memory edges\"\/>\n@@ -20,1 +52,1 @@\n-        <file name=\"C2 Remove Filter\" url=\"filters\/remove.filter\">\n+        <file name=\"Hide mixed edges\" url=\"filters\/hideMixedEdges.filter\">\n@@ -22,1 +54,1 @@\n-            <attr name=\"after\" stringvalue=\"C2 Only Control Flow\"\/>\n+            <attr name=\"after\" stringvalue=\"Hide control edges\"\/>\n@@ -24,1 +56,1 @@\n-        <file name=\"C2 Structural\" url=\"filters\/structural.filter\">\n+        <file name=\"Hide other edges\" url=\"filters\/hideOtherEdges.filter\">\n@@ -26,1 +58,1 @@\n-            <attr name=\"after\" stringvalue=\"C2 Remove Filter\"\/>\n+            <attr name=\"after\" stringvalue=\"Hide mixed edges\"\/>\n@@ -28,1 +60,1 @@\n-    <\/folder>\t\n+    <\/folder>\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/layer.xml","additions":44,"deletions":12,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -782,0 +782,1 @@\n+            boolean isVisible = true;\n@@ -792,0 +793,4 @@\n+\n+                if (c.getStyle() == Connection.ConnectionStyle.INVISIBLE) {\n+                    isVisible = false;\n+                }\n@@ -807,0 +812,1 @@\n+                w.setVisible(isVisible);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}