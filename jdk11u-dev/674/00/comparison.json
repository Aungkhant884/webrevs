{"files":[{"patch":"@@ -471,1 +471,3 @@\n-    set_boot_path('\/', ':');\n+    if (!set_boot_path('\/', ':')) {\n+        vm_exit_during_initialization(\"Failed setting boot class path.\", NULL);\n+    }\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @bug 8272345\n@@ -29,1 +30,2 @@\n- * @requires os.family == \"linux\"\n+ * @comment This test doesn't work on Windows because it depends on symlinks\n+ * @requires os.family != \"windows\"\n@@ -38,5 +40,0 @@\n-\/\/ This test works only on Linux because it depends on symlinks and the name of the hotspot DLL (libjvm.so).\n-\/\/ It probably doesn't work on Windows.\n-\/\/ TODO: change libjvm.so to libjvm.dylib on MacOS, before adding \"@requires os.family == mac\"\n-\/\/ TODO: test on solaris, before adding \"@requires os.family == solaris\"\n-\n@@ -125,0 +122,1 @@\n+        final String jvmLib = System.mapLibraryName(\"jvm\");\n@@ -136,1 +134,1 @@\n-                if (child.equals(\"libjvm.so\") || child.equals(\"java\")) {\n+                if (child.equals(jvmLib) || child.equals(\"java\")) {\n","filename":"test\/hotspot\/jtreg\/runtime\/appcds\/MoveJDKTest.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"}]}