{"files":[{"patch":"@@ -291,0 +291,5 @@\n+        @Override @DefinedBy(Api.COMPILER)\n+        public String getShortName() {\n+            return userPath.getFileName().toString();\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/PathFileObject.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2019, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8193277\n+ * @summary SimpleFileObject inconsistency between getName and getShortName\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.jdeps\/com.sun.tools.classfile\n+ * @build toolbox.JavacTask toolbox.TestRunner toolbox.ToolBox\n+ * @run main SymLinkShortNameTest\n+ *\/\n+\n+import java.nio.file.FileSystemException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import toolbox.JavacTask;\n+import toolbox.Task.Expect;\n+import toolbox.Task.OutputKind;\n+import toolbox.Task.Result;\n+import toolbox.TestRunner;\n+import toolbox.TestRunner.Test;\n+import toolbox.ToolBox;\n+\n+public class SymLinkShortNameTest extends TestRunner {\n+    public static void main(String... args) throws Exception {\n+        new SymLinkShortNameTest().runTests(m -> new Object[] {Paths.get(m.getName())});\n+    }\n+\n+    private final ToolBox tb = new ToolBox();\n+\n+    public SymLinkShortNameTest() {\n+        super(System.err);\n+    }\n+\n+    @Test\n+    public void testJarSymlink(Path base) throws Exception {\n+        Files.createDirectories(base);\n+        Path b = base.resolve(\"B.java\");\n+        tb.writeFile(b, \"class B { int f() {} }\");\n+\n+        Path a = base.resolve(\"A.java\");\n+        try {\n+            Files.createSymbolicLink(a, b.getFileName());\n+        } catch (FileSystemException fse) {\n+            System.err.println(\"warning: test passes vacuously, sym-link could not be created\");\n+            System.err.println(fse.getMessage());\n+            return;\n+        }\n+\n+        {\n+            Result result =\n+                    new JavacTask(tb).options(\"-XDrawDiagnostics\").files(a).run(Expect.FAIL);\n+            String output = result.getOutput(OutputKind.DIRECT);\n+\n+            String expected = \"A.java:1:20: compiler.err.missing.ret.stmt\";\n+            if (!output.contains(expected)) {\n+                throw new AssertionError(\n+                        \"expected output to contain: \" + expected + \"\\nwas:\\n\" + output);\n+            }\n+        }\n+        {\n+            Result result = new JavacTask(tb).files(a).run(Expect.FAIL);\n+            String output = result.getOutput(OutputKind.DIRECT);\n+\n+            String expected = \"A.java:1: error: missing return statement\";\n+            if (!output.contains(expected)) {\n+                throw new AssertionError(\n+                        \"expected output to contain: \" + expected + \"\\nwas:\\n\" + output);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/file\/SymLinkShortNameTest.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"}]}