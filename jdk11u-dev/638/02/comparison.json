{"files":[{"patch":"@@ -34,12 +34,0 @@\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x, y) x , y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n-\n@@ -49,1 +37,0 @@\n-#ifdef __cplusplus\n@@ -51,1 +38,0 @@\n-#endif\n@@ -61,4 +47,4 @@\n-  const char * classNameChar = JNI_ENV_PTR(env)->GetStringUTFChars(JNI_ENV_ARG(env, className), NULL);\n-  jbyte * arrayContent = JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytecode), NULL);\n-  jsize bytecodeLength = JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytecode));\n-  jclass returnValue = JNI_ENV_PTR(env)->DefineClass(JNI_ENV_ARG(env, classNameChar), classLoader, arrayContent, bytecodeLength);\n+  const char * classNameChar = env->GetStringUTFChars(className, NULL);\n+  jbyte * arrayContent = env->GetByteArrayElements(bytecode, NULL);\n+  jsize bytecodeLength = env->GetArrayLength(bytecode);\n+  jclass returnValue = env->DefineClass(classNameChar, classLoader, arrayContent, bytecodeLength);\n@@ -84,1 +70,1 @@\n-    jint jint_err = JNI_ENV_PTR(env)->GetJavaVM(JNI_ENV_ARG(env, &jvm));\n+    jint jint_err = env->GetJavaVM(&jvm);\n@@ -90,1 +76,1 @@\n-    jint_err = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **)&jvmti), JVMTI_VERSION_1_0);\n+    jint_err = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_0);\n@@ -96,1 +82,1 @@\n-    err = JNI_ENV_PTR(jvmti)->GetPotentialCapabilities(JNI_ENV_ARG(jvmti, &caps));\n+    err = jvmti->GetPotentialCapabilities(&caps);\n@@ -102,1 +88,1 @@\n-    err = JNI_ENV_PTR(jvmti)->AddCapabilities(JNI_ENV_ARG(jvmti, &caps));\n+    err = jvmti->AddCapabilities(&caps);\n@@ -115,1 +101,1 @@\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n+        env->GetArrayLength(classBytes);\n@@ -117,1 +103,1 @@\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes),\n+        env->GetByteArrayElements(classBytes,\n@@ -124,1 +110,1 @@\n-    err = JNI_ENV_PTR(jvmti)->RedefineClasses(JNI_ENV_ARG(jvmti, 1), &classDef);\n+    err = jvmti->RedefineClasses(1, &classDef);\n@@ -148,1 +134,1 @@\n-    referencesArray[firstFreeIndex] = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, obj));\n+    referencesArray[firstFreeIndex] = env->NewGlobalRef(obj);\n@@ -162,1 +148,1 @@\n-    JNI_ENV_PTR(env)->DeleteGlobalRef(JNI_ENV_ARG(env, referencesArray[index]));\n+    env->DeleteGlobalRef(referencesArray[index]);\n@@ -188,4 +174,0 @@\n-  }\n-\n-\n-#ifdef __cplusplus\n@@ -193,1 +175,1 @@\n-#endif\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/g1\/unloading\/libdefine.cpp","additions":14,"deletions":32,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#ifdef __cplusplus\n@@ -28,1 +27,0 @@\n-#endif\n@@ -30,15 +28,0 @@\n-#ifndef JNI_ENV_PTR\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG_2(x, y) y\n-#define JNI_ENV_ARG_3(x, y, z) y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) y, z, a\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG_2(x,y) x, y\n-#define JNI_ENV_ARG_3(x, y, z) x, y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) x, y, z, a\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -53,3 +36,3 @@\n-    jclass klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, object));\n-    jfieldID field = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG_4(env, klass, \"threadInNative\", \"Z\"));\n-    JNI_ENV_PTR(env)->SetBooleanField(JNI_ENV_ARG_4(env, object, field, 1));\n+    jclass klass = env->GetObjectClass(object);\n+    jfieldID field = env->GetFieldID(klass, \"threadInNative\", \"Z\");\n+    env->SetBooleanField(object, field, 1);\n@@ -69,1 +52,0 @@\n-#ifdef __cplusplus\n@@ -71,1 +53,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/forceEarlyReturn\/forceEarlyReturn004\/libforceEarlyReturn004a.cpp","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#ifdef __cplusplus\n@@ -29,1 +28,0 @@\n-#endif\n@@ -31,13 +29,0 @@\n-#ifndef JNI_ENV_PTR\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG_2(x, y) y\n-#define JNI_ENV_ARG_3(x,y,z) y, z\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG_2(x,y) x, y\n-#define JNI_ENV_ARG_3(x,y,z) x, y, z\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -48,1 +33,1 @@\n-        jint success  = JNI_ENV_PTR(env)->MonitorEnter(JNI_ENV_ARG_2(env, object));\n+        jint success  = env->MonitorEnter(object);\n@@ -54,1 +39,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorEnter return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorEnter return non-zero\");\n@@ -58,1 +45,0 @@\n-#ifdef __cplusplus\n@@ -60,1 +46,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/forceEarlyReturn\/forceEarlyReturn005\/libforceEarlyReturn005a.cpp","additions":4,"deletions":19,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#ifdef __cplusplus\n@@ -28,1 +27,0 @@\n-#endif\n@@ -30,15 +28,0 @@\n-#ifndef JNI_ENV_PTR\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG_2(x, y) y\n-#define JNI_ENV_ARG_3(x, y, z) y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) y, z, a\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG_2(x,y) x, y\n-#define JNI_ENV_ARG_3(x, y, z) x, y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) x, y, z, a\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -53,3 +36,3 @@\n-    jclass klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, object));\n-    jfieldID field = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG_4(env, klass, \"threadInNative\", \"Z\"));\n-    JNI_ENV_PTR(env)->SetBooleanField(JNI_ENV_ARG_4(env, object, field, 1));\n+    jclass klass = env->GetObjectClass(object);\n+    jfieldID field = env->GetFieldID(klass, \"threadInNative\", \"Z\");\n+    env->SetBooleanField(object, field, 1);\n@@ -69,1 +52,0 @@\n-#ifdef __cplusplus\n@@ -71,1 +53,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdwp\/ThreadReference\/ForceEarlyReturn\/forceEarlyReturn002\/libforceEarlyReturn002a.cpp","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#ifdef __cplusplus\n@@ -28,1 +27,0 @@\n-#endif\n@@ -30,13 +28,0 @@\n-#ifndef JNI_ENV_PTR\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG_2(x, y) y\n-#define JNI_ENV_ARG_3(x,y, z) y, z\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG_2(x,y) x, y\n-#define JNI_ENV_ARG_3(x,y, z) x, y, z\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -49,1 +34,1 @@\n-        success  = JNI_ENV_PTR(env)->MonitorEnter(JNI_ENV_ARG_2(env, thisObject));\n+        success  = env->MonitorEnter(thisObject);\n@@ -55,1 +40,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorEnter return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorEnter return non-zero\");\n@@ -58,1 +45,1 @@\n-        success  = JNI_ENV_PTR(env)->MonitorExit(JNI_ENV_ARG_2(env, thisObject));\n+        success  = env->MonitorExit(thisObject);\n@@ -64,1 +51,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorExit return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorExit return non-zero\");\n@@ -73,1 +62,1 @@\n-        success  = JNI_ENV_PTR(env)->MonitorEnter(JNI_ENV_ARG_2(env, thisObject));\n+        success  = env->MonitorEnter(thisObject);\n@@ -79,1 +68,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorEnter return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorEnter return non-zero\");\n@@ -82,1 +73,1 @@\n-        success  = JNI_ENV_PTR(env)->MonitorExit(JNI_ENV_ARG_2(env, thisObject));\n+        success  = env->MonitorExit(thisObject);\n@@ -88,1 +79,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorExit return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorExit return non-zero\");\n@@ -97,1 +90,1 @@\n-        success  = JNI_ENV_PTR(env)->MonitorEnter(JNI_ENV_ARG_2(env, thisObject));\n+        success  = env->MonitorEnter(thisObject);\n@@ -103,1 +96,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorEnter return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorEnter return non-zero\");\n@@ -106,1 +101,1 @@\n-        success  = JNI_ENV_PTR(env)->MonitorExit(JNI_ENV_ARG_2(env, thisObject));\n+        success  = env->MonitorExit(thisObject);\n@@ -112,1 +107,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorExit return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorExit return non-zero\");\n@@ -116,1 +113,0 @@\n-#ifdef __cplusplus\n@@ -118,1 +114,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/MonitorEnterExecutor.cpp","additions":24,"deletions":29,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#ifdef __cplusplus\n@@ -29,1 +28,0 @@\n-#endif\n@@ -31,15 +29,0 @@\n-#ifndef JNI_ENV_PTR\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG_2(x, y) y\n-#define JNI_ENV_ARG_3(x, y, z) y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) y, z, a\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG_2(x,y) x, y\n-#define JNI_ENV_ARG_3(x, y, z) x, y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) x, y, z, a\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -79,1 +62,1 @@\n-                        reference = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG_2(env, object));\n+                        reference = env->NewGlobalRef(object);\n@@ -85,1 +68,3 @@\n-                                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"NewGlobalRef return NULL\"));\n+                                env->ThrowNew(\n+                                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                                    \"NewGlobalRef return NULL\");\n@@ -109,1 +94,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestBug\")), \"Requested globalReferences[] element is NULL, possible wrong index is passed\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestBug\"),\n+                    \"Requested globalReferences[] element is NULL, possible wrong index is passed\");\n@@ -112,1 +99,1 @@\n-        JNI_ENV_PTR(env)->DeleteGlobalRef(JNI_ENV_ARG_2(env, reference));\n+        env->DeleteGlobalRef(reference);\n@@ -122,1 +109,1 @@\n-        jobject reference = JNI_ENV_PTR(env)->NewLocalRef(JNI_ENV_ARG_2(env, object));\n+        jobject reference = env->NewLocalRef(object);\n@@ -129,1 +116,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"NewLocalRef return NULL\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"NewLocalRef return NULL\");\n@@ -132,1 +121,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, createWicket));\n+        klass = env->GetObjectClass(createWicket);\n@@ -135,1 +124,2 @@\n-        JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG_3(env, createWicket, JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG_4(env, klass, \"unlock\", \"()V\"))));\n+        env->CallVoidMethod(createWicket,\n+                            env->GetMethodID(klass, \"unlock\", \"()V\"));\n@@ -138,1 +128,2 @@\n-        JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG_3(env, deleteWicket, JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG_4(env, klass, \"waitFor\", \"()V\"))));\n+        env->CallVoidMethod(deleteWicket,\n+                            env->GetMethodID(klass, \"waitFor\", \"()V\"));\n@@ -171,1 +162,1 @@\n-                        reference = JNI_ENV_PTR(env)->NewWeakGlobalRef(JNI_ENV_ARG_2(env, object));\n+                        reference = env->NewWeakGlobalRef(object);\n@@ -177,1 +168,3 @@\n-                                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"NewWeakGlobalRef return NULL\"));\n+                                env->ThrowNew(\n+                                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                                    \"NewWeakGlobalRef return NULL\");\n@@ -201,1 +194,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestBug\")), \"Requested weakReferences[] element is NULL, possible wrong index is passed\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestBug\"),\n+                    \"Requested weakReferences[] element is NULL, possible wrong index is passed\");\n@@ -204,1 +199,1 @@\n-        if(JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG_3(env, reference, NULL)) == JNI_TRUE)\n+        if(env->IsSameObject(reference, NULL) == JNI_TRUE)\n@@ -208,1 +203,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestBug\")), \"TEST BUG: Weak reference was collected\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestBug\"),\n+                    \"TEST BUG: Weak reference was collected\");\n@@ -211,1 +208,1 @@\n-        JNI_ENV_PTR(env)->DeleteWeakGlobalRef(JNI_ENV_ARG_2(env, reference));\n+        env->DeleteWeakGlobalRef(reference);\n@@ -216,1 +213,0 @@\n-#ifdef __cplusplus\n@@ -218,1 +214,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/JNIreferences.cpp","additions":29,"deletions":34,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#ifdef __cplusplus\n@@ -28,1 +27,0 @@\n-#endif\n@@ -30,15 +28,0 @@\n-#ifndef JNI_ENV_PTR\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG_2(x, y) y\n-#define JNI_ENV_ARG_3(x, y, z) y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) y, z, a\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG_2(x,y) x, y\n-#define JNI_ENV_ARG_3(x, y, z) x, y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) x, y, z, a\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -49,7 +32,4 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n-        JNI_ENV_PTR(env)->CallVoidMethod(\n-        JNI_ENV_ARG_4(\n-                env,\n-                thisObject,\n-                JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG_4(env, klass, \"log\", \"(Ljava\/lang\/String;)V\")),\n-                message));\n+        klass = env->GetObjectClass(thisObject);\n+        env->CallVoidMethod(thisObject,\n+                            env->GetMethodID(klass, \"log\", \"(Ljava\/lang\/String;)V\"),\n+                            message);\n@@ -74,1 +54,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -76,5 +56,1 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedBooleanValue\",\n-                \"Z\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedBooleanValue\", \"Z\");\n@@ -82,1 +58,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticBooleanField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticBooleanField(klass, valueField);\n@@ -94,1 +70,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -96,5 +72,1 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedByteValue\",\n-                \"B\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedByteValue\", \"B\");\n@@ -102,1 +74,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticByteField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticByteField(klass, valueField);\n@@ -114,1 +86,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -116,5 +88,1 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedShortValue\",\n-                \"S\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedShortValue\", \"S\");\n@@ -122,1 +90,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticShortField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticShortField(klass, valueField);\n@@ -134,1 +102,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -136,5 +104,1 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedCharValue\",\n-                \"C\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedCharValue\", \"C\");\n@@ -142,1 +106,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticCharField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticCharField(klass, valueField);\n@@ -154,1 +118,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -156,5 +120,1 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedIntValue\",\n-                \"I\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedIntValue\", \"I\");\n@@ -162,1 +122,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticIntField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticIntField(klass, valueField);\n@@ -174,1 +134,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -176,5 +136,1 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedLongValue\",\n-                \"J\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedLongValue\", \"J\");\n@@ -182,1 +138,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticLongField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticLongField(klass, valueField);\n@@ -194,1 +150,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -196,5 +152,1 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedFloatValue\",\n-                \"F\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedFloatValue\", \"F\");\n@@ -202,1 +154,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticFloatField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticFloatField(klass, valueField);\n@@ -214,1 +166,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -216,5 +168,1 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedDoubleValue\",\n-                \"D\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedDoubleValue\", \"D\");\n@@ -222,1 +170,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticDoubleField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticDoubleField(klass, valueField);\n@@ -234,1 +182,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -236,5 +184,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedObjectArrayValue\",\n-                \"[Ljava\/lang\/Object;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedObjectArrayValue\",\n+                                           \"[Ljava\/lang\/Object;\");\n@@ -242,1 +187,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -254,1 +199,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -256,5 +201,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedStringValue\",\n-                \"Ljava\/lang\/String;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedStringValue\",\n+                                           \"Ljava\/lang\/String;\");\n@@ -262,1 +204,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -274,1 +216,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -276,5 +218,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedThreadValue\",\n-                \"Ljava\/lang\/Thread;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedThreadValue\",\n+                                           \"Ljava\/lang\/Thread;\");\n@@ -282,1 +221,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -294,1 +233,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -296,5 +235,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedThreadGroupValue\",\n-                \"Ljava\/lang\/ThreadGroup;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedThreadGroupValue\",\n+                                           \"Ljava\/lang\/ThreadGroup;\");\n@@ -302,1 +238,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -314,1 +250,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -316,5 +252,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedClassObjectValue\",\n-                \"Ljava\/lang\/Class;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedClassObjectValue\",\n+                                           \"Ljava\/lang\/Class;\");\n@@ -322,1 +255,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -334,1 +267,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -336,5 +269,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedClassLoaderValue\",\n-                \"Ljava\/lang\/ClassLoader;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedClassLoaderValue\",\n+                                           \"Ljava\/lang\/ClassLoader;\");\n@@ -342,1 +272,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -354,1 +284,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -356,5 +286,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedObjectValue\",\n-                \"Ljava\/lang\/Object;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedObjectValue\",\n+                                           \"Ljava\/lang\/Object;\");\n@@ -362,1 +289,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -374,1 +301,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -376,5 +303,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedBooleanWrapperValue\",\n-                \"Ljava\/lang\/Boolean;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedBooleanWrapperValue\",\n+                                           \"Ljava\/lang\/Boolean;\");\n@@ -382,1 +306,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -394,1 +318,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -396,5 +320,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedByteWrapperValue\",\n-                \"Ljava\/lang\/Byte;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedByteWrapperValue\",\n+                                           \"Ljava\/lang\/Byte;\");\n@@ -402,1 +323,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -414,1 +335,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -416,5 +337,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedShortWrapperValue\",\n-                \"Ljava\/lang\/Short;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedShortWrapperValue\",\n+                                           \"Ljava\/lang\/Short;\");\n@@ -422,1 +340,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -434,1 +352,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -436,5 +354,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedCharWrapperValue\",\n-                \"Ljava\/lang\/Character;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedCharWrapperValue\",\n+                                           \"Ljava\/lang\/Character;\");\n@@ -442,1 +357,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -454,1 +369,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -456,5 +371,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedIntWrapperValue\",\n-                \"Ljava\/lang\/Integer;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedIntWrapperValue\",\n+                                           \"Ljava\/lang\/Integer;\");\n@@ -462,1 +374,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -474,1 +386,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -476,5 +388,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedLongWrapperValue\",\n-                \"Ljava\/lang\/Long;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedLongWrapperValue\",\n+                                           \"Ljava\/lang\/Long;\");\n@@ -482,1 +391,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -494,1 +403,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -496,5 +405,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedFloatWrapperValue\",\n-                \"Ljava\/lang\/Float;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedFloatWrapperValue\",\n+                                           \"Ljava\/lang\/Float;\");\n@@ -502,1 +408,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -514,1 +420,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -516,5 +422,2 @@\n-        valueField = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG_4(\n-                env,\n-                klass,\n-                \"expectedDoubleWrapperValue\",\n-                \"Ljava\/lang\/Double;\"));\n+        valueField = env->GetStaticFieldID(klass, \"expectedDoubleWrapperValue\",\n+                                           \"Ljava\/lang\/Double;\");\n@@ -522,1 +425,1 @@\n-        return JNI_ENV_PTR(env)->GetStaticObjectField(JNI_ENV_ARG_3(env, klass, valueField));\n+        return env->GetStaticObjectField(klass, valueField);\n@@ -525,1 +428,0 @@\n-#ifdef __cplusplus\n@@ -527,1 +429,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/libNativeMethodsTestThread.cpp","additions":88,"deletions":187,"binary":false,"changes":275,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#ifdef __cplusplus\n@@ -28,1 +27,0 @@\n-#endif\n@@ -30,15 +28,0 @@\n-#ifndef JNI_ENV_PTR\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG_2(x, y) y\n-#define JNI_ENV_ARG_3(x, y, z) y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) y, z, a\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG_2(x,y) x, y\n-#define JNI_ENV_ARG_3(x, y, z) x, y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) x, y, z, a\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -77,1 +60,1 @@\n-        success = JNI_ENV_PTR(env)->MonitorEnter(JNI_ENV_ARG_2(env, thisObject));\n+        success = env->MonitorEnter(thisObject);\n@@ -83,1 +66,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorEnter return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorEnter return non-zero\");\n@@ -86,1 +71,1 @@\n-        thisObjectClass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        thisObjectClass = env->GetObjectClass(thisObject);\n@@ -89,1 +74,1 @@\n-        field = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG_4(env, thisObjectClass, \"step1\", \"Lnsk\/share\/Wicket;\"));\n+        field = env->GetFieldID(thisObjectClass, \"step1\", \"Lnsk\/share\/Wicket;\");\n@@ -91,2 +76,2 @@\n-        wicketObject = JNI_ENV_PTR(env)->GetObjectField(JNI_ENV_ARG_3(env, thisObject, field));\n-        wicketClass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, wicketObject));\n+        wicketObject = env->GetObjectField(thisObject, field);\n+        wicketClass = env->GetObjectClass(wicketObject);\n@@ -94,1 +79,2 @@\n-        JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG_3(env, wicketObject, JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG_4(env, wicketClass, \"unlockAll\", \"()V\"))));\n+        env->CallVoidMethod(wicketObject,\n+                            env->GetMethodID(wicketClass, \"unlockAll\", \"()V\"));\n@@ -97,2 +83,2 @@\n-        field = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG_4(env, thisObjectClass, \"step2\", \"Lnsk\/share\/Wicket;\"));\n-        wicketObject = JNI_ENV_PTR(env)->GetObjectField(JNI_ENV_ARG_3(env, thisObject, field));\n+        field = env->GetFieldID(thisObjectClass, \"step2\", \"Lnsk\/share\/Wicket;\");\n+        wicketObject = env->GetObjectField(thisObject, field);\n@@ -100,1 +86,2 @@\n-        JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG_3(env, wicketObject, JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG_4(env, wicketClass, \"waitFor\", \"()V\"))));\n+        env->CallVoidMethod(wicketObject,\n+                            env->GetMethodID(wicketClass, \"waitFor\", \"()V\"));\n@@ -103,2 +90,2 @@\n-        field = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG_4(env, thisObjectClass, \"readyWicket\", \"Lnsk\/share\/Wicket;\"));\n-        wicketObject = JNI_ENV_PTR(env)->GetObjectField(JNI_ENV_ARG_3(env, thisObject, field));\n+        field = env->GetFieldID(thisObjectClass, \"readyWicket\", \"Lnsk\/share\/Wicket;\");\n+        wicketObject = env->GetObjectField(thisObject, field);\n@@ -106,1 +93,2 @@\n-        JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG_3(env, wicketObject, JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG_4(env, wicketClass, \"unlock\", \"()V\"))));\n+        env->CallVoidMethod(wicketObject,\n+                            env->GetMethodID(wicketClass, \"unlock\", \"()V\"));\n@@ -109,3 +97,3 @@\n-        field = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG_4(env, thisObjectClass, \"inner\", \"Lnsk\/share\/locks\/DeadlockLocker;\"));\n-        innerObject = JNI_ENV_PTR(env)->GetObjectField(JNI_ENV_ARG_3(env, thisObject, field));\n-        deadlockLockerClass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, innerObject));\n+        field = env->GetFieldID(thisObjectClass, \"inner\", \"Lnsk\/share\/locks\/DeadlockLocker;\");\n+        innerObject = env->GetObjectField(thisObject, field);\n+        deadlockLockerClass = env->GetObjectClass(innerObject);\n@@ -113,1 +101,2 @@\n-        JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG_3(env, innerObject, JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG_4(env, deadlockLockerClass, \"lock\", \"()V\"))));\n+        env->CallVoidMethod(innerObject,\n+                            env->GetMethodID(deadlockLockerClass, \"lock\", \"()V\"));\n@@ -115,1 +104,1 @@\n-        success = JNI_ENV_PTR(env)->MonitorExit(JNI_ENV_ARG_2(env, thisObject));\n+        success = env->MonitorExit(thisObject);\n@@ -121,1 +110,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorExit return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorExit return non-zero\");\n@@ -125,1 +116,0 @@\n-#ifdef __cplusplus\n@@ -127,1 +117,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/locks\/JNIMonitorLocker.cpp","additions":27,"deletions":38,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#ifdef __cplusplus\n@@ -28,1 +27,0 @@\n-#endif\n@@ -30,15 +28,0 @@\n-#ifndef JNI_ENV_PTR\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG_2(x, y) y\n-#define JNI_ENV_ARG_3(x, y, z) y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) y, z, a\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG_2(x,y) x, y\n-#define JNI_ENV_ARG_3(x, y, z) x, y, z\n-#define JNI_ENV_ARG_4(x, y, z, a) x, y, z, a\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -52,1 +35,1 @@\n-        success  = JNI_ENV_PTR(env)->MonitorEnter(JNI_ENV_ARG_2(env, object));\n+        success  = env->MonitorEnter(object);\n@@ -58,1 +41,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorEnter return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorEnter return non-zero\");\n@@ -61,1 +46,1 @@\n-        klass = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG_2(env, thisObject));\n+        klass = env->GetObjectClass(thisObject);\n@@ -63,1 +48,2 @@\n-        JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG_3(env, thisObject, JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG_4(env, klass, \"createStackFrame\", \"()V\"))));\n+        env->CallVoidMethod(thisObject,\n+                            env->GetMethodID(klass, \"createStackFrame\", \"()V\"));\n@@ -65,1 +51,1 @@\n-        success  = JNI_ENV_PTR(env)->MonitorExit(JNI_ENV_ARG_2(env, object));\n+        success  = env->MonitorExit(object);\n@@ -71,1 +57,3 @@\n-                JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG_3(env, JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG_2(env, \"nsk\/share\/TestJNIError\")), \"MonitorExit return non-zero\"));\n+                env->ThrowNew(\n+                    env->FindClass(\"nsk\/share\/TestJNIError\"),\n+                    \"MonitorExit return non-zero\");\n@@ -75,1 +63,0 @@\n-#ifdef __cplusplus\n@@ -77,1 +64,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/locks\/LockingThread.cpp","additions":11,"deletions":25,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#ifdef __cplusplus\n@@ -35,1 +34,0 @@\n-#endif\n@@ -37,11 +35,0 @@\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -129,1 +116,0 @@\n-#ifdef __cplusplus\n@@ -131,1 +117,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/runtime\/defmeth\/shared\/redefineClasses.cpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"}]}