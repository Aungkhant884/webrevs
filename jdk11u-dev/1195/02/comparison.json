{"files":[{"patch":"@@ -107,2 +107,0 @@\n-  assert(!lpt->has_reduction_nodes() || cl->is_reduction_loop(),\n-         \"non-reduction loop contains reduction nodes\");\n@@ -2302,0 +2300,5 @@\n+  \/\/ Check that the loop to be vectorized does not have inconsistent reduction\n+  \/\/ information, which would likely lead to a miscompilation.\n+  assert(!lpt()->has_reduction_nodes() || cl->is_reduction_loop(),\n+         \"non-reduction loop contains reduction nodes\");\n+\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8286177\n+ * @summary Test that inconsistent reduction node-loop state does not trigger\n+ *          assertion failures when the inconsistency does not lead to a\n+ *          miscompilation.\n+ * @run main\/othervm -Xbatch compiler.loopopts.superword.TestHoistedReductionNode\n+ *\/\n+package compiler.loopopts.superword;\n+\n+public class TestHoistedReductionNode {\n+\n+    static boolean b = true;\n+\n+    static int test() {\n+        int acc = 0;\n+        int i = 0;\n+        do {\n+            int j = 0;\n+            do {\n+                if (b) {\n+                    acc += j;\n+                }\n+                j++;\n+            } while (j < 5);\n+            i++;\n+        } while (i < 100);\n+        return acc;\n+\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 10_000; i++) {\n+            test();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestHoistedReductionNode.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}