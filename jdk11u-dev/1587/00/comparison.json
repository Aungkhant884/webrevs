{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -881,0 +881,2 @@\n+    BUILD_HOTSPOT_JTREG_EXECUTABLES_LIBS_exejvm-test-launcher := jvm.lib\n+\n@@ -882,0 +884,1 @@\n+    BUILD_HOTSPOT_JTREG_EXECUTABLES_LIBS_exejvm-test-launcher := -ljvm\n","filename":"make\/test\/JtregNativeHotspot.gmk","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-  vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestDescription.java \\\n+  vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestMaxMetaspaceSize.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,63 +0,0 @@\n-#\n-#  Copyright (c) 2012, 2014, Oracle and\/or its affiliates. All rights reserved.\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-#  This code is free software; you can redistribute it and\/or modify it\n-#  under the terms of the GNU General Public License version 2 only, as\n-#  published by the Free Software Foundation.\n-#\n-#  This code is distributed in the hope that it will be useful, but WITHOUT\n-#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-#  version 2 for more details (a copy is included in the LICENSE file that\n-#  accompanied this code).\n-#\n-#  You should have received a copy of the GNU General Public License version\n-#  2 along with this work; if not, write to the Free Software Foundation,\n-#  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-#  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-#  or visit www.oracle.com if you need additional information or have any\n-#  questions.\n-#\n-\n-\n-# @test Test7162488.sh\n-# @bug 7162488\n-# @summary VM not printing unknown -XX options\n-# @run shell Test7162488.sh\n-#\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  TESTSRC=${PWD}\n-  echo \"TESTSRC not set.  Using \"${TESTSRC}\" as default\"\n-fi\n-echo \"TESTSRC=${TESTSRC}\"\n-## Adding common setup Variables for running shell tests.\n-. ${TESTSRC}\/..\/..\/test_env.sh\n-\n-JAVA=${TESTJAVA}${FS}bin${FS}java\n-\n-#\n-# Just run with an option we are confident will not be recognized,\n-# and check for the message:\n-#\n-OPTION=this_is_not_an_option\n-\n-${JAVA} -showversion -XX:${OPTION} 2>&1 | grep \"Unrecognized VM option\" \n-if [ \"$?\" != \"0\" ]\n-then\n-  printf \"FAILED: option not flagged as unrecognized.\\n\"\n-  exit 1\n-fi\n-\n-${JAVA} -showversion -XX:${OPTION} 2>&1 | grep ${OPTION}\n-if [ \"$?\" != \"0\" ]\n-then\n-  printf \"FAILED: bad option not named as being bad.\\n\"\n-  exit 1\n-fi\n-\n-printf \"Passed.\\n\"\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/7162488\/Test7162488.sh","additions":0,"deletions":63,"binary":false,"changes":63,"status":"deleted"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7162488\n+ * @summary VM should print unrecognized -XX option\n+ * @library \/test\/lib\n+ * @run driver TestUnrecognizedVmOption\n+ *\/\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestUnrecognizedVmOption {\n+    static final String OPTION=\"this_is_not_an_option\";\n+\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb =\n+            ProcessTools.createJavaProcessBuilder(\"-showversion\", \"-XX:\" + OPTION);\n+        new OutputAnalyzer(pb.start())\n+            .shouldNotHaveExitValue(0)\n+            .shouldContain(\"Unrecognized VM option\")\n+            .shouldContain(OPTION);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/7162488\/TestUnrecognizedVmOption.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Linux kernel stack guard should not cause segfaults on x86-32\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @requires os.family == \"linux\"\n+ * @compile T.java\n+ * @run main\/native TestStackGap\n+ *\/\n+\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestStackGap {\n+    public static void main(String args[]) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createNativeTestProcessBuilder(\"stack-gap\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+\n+        pb = ProcessTools.createNativeTestProcessBuilder(\"stack-gap\",\n+                                                         \"-XX:+DisablePrimordialThreadGuardPages\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/StackGap\/TestStackGap.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -1,49 +0,0 @@\n-# Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#!\/bin\/sh\n-\n-#\n-# @test testme.sh\n-# @summary Linux kernel stack guard should not cause segfaults on x86-32\n-# @compile T.java\n-# @run shell testme.sh\n-#\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  TESTSRC=${PWD}\n-  echo \"TESTSRC not set.  Using \"${TESTSRC}\" as default\"\n-fi\n-echo \"TESTSRC=${TESTSRC}\"\n-## Adding common setup Variables for running shell tests.\n-. ${TESTSRC}\/..\/..\/test_env.sh\n-\n-if [ \"${VM_OS}\" != \"linux\" ]\n-then\n-  echo \"Test only valid for Linux\"\n-  exit 0\n-fi\n-\n-LD_LIBRARY_PATH=.:${TESTJAVA}\/lib\/${VM_TYPE}:\/usr\/lib:$LD_LIBRARY_PATH\n-export LD_LIBRARY_PATH\n-\n-${TESTNATIVEPATH}\/stack-gap || exit $?\n-${TESTNATIVEPATH}\/stack-gap -XX:+DisablePrimordialThreadGuardPages || exit $?\n","filename":"test\/hotspot\/jtreg\/runtime\/StackGap\/testme.sh","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Stack guard pages should be installed correctly and removed when thread is detached\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @requires os.family == \"linux\"\n+ * @compile DoOverflow.java\n+ * @run main\/native TestStackGuardPages\n+ *\/\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\n+public class TestStackGuardPages {\n+    public static void main(String args[]) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createNativeTestProcessBuilder(\"invoke\",\n+                                                                        \"test_java_overflow\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+\n+        pb = ProcessTools.createNativeTestProcessBuilder(\"invoke\", \"test_native_overflow\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/StackGuardPages\/TestStackGuardPages.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -1,51 +0,0 @@\n-# Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#!\/bin\/sh\n-\n-#\n-# @test testme.sh\n-# @summary Stack guard pages should be installed correctly and removed when thread is detached\n-# @compile DoOverflow.java\n-# @run shell testme.sh\n-#\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  TESTSRC=${PWD}\n-  echo \"TESTSRC not set.  Using \"${TESTSRC}\" as default\"\n-fi\n-echo \"TESTSRC=${TESTSRC}\"\n-## Adding common setup Variables for running shell tests.\n-. ${TESTSRC}\/..\/..\/test_env.sh\n-\n-if [ \"${VM_OS}\" != \"linux\" ]\n-then\n-  echo \"Test only valid for Linux\"\n-  exit 0\n-fi\n-\n-LD_LIBRARY_PATH=.:${TESTJAVA}\/lib\/${VM_TYPE}:\/usr\/lib:$LD_LIBRARY_PATH\n-export LD_LIBRARY_PATH\n-\n-# Run the test for a java and native overflow\n-${TESTNATIVEPATH}\/invoke test_java_overflow\n-${TESTNATIVEPATH}\/invoke test_native_overflow\n-exit $?\n","filename":"test\/hotspot\/jtreg\/runtime\/StackGuardPages\/testme.sh","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-                pb.environment().merge(envVar, jvmLibDir().toString(),\n+                pb.environment().merge(envVar, Platform.jvmLibDir().toString(),\n@@ -146,1 +146,1 @@\n-        return jvmLibDir().resolve((Platform.isWindows() ? \"\" : \"lib\")\n+        return Platform.jvmLibDir().resolve((Platform.isWindows() ? \"\" : \"lib\")\n@@ -149,25 +149,0 @@\n-\n-    private static Path jvmLibDir() {\n-        Path dir = Paths.get(Utils.TEST_JDK);\n-        if (Platform.isWindows()) {\n-            return dir.resolve(\"bin\")\n-                      .resolve(variant())\n-                      .toAbsolutePath();\n-        } else {\n-            return dir.resolve(\"lib\")\n-                      .resolve(variant())\n-                      .toAbsolutePath();\n-        }\n-    }\n-\n-    private static String variant() {\n-        if (Platform.isServer()) {\n-            return \"server\";\n-        } else if (Platform.isClient()) {\n-            return \"client\";\n-        } else if (Platform.isMinimal()) {\n-            return \"minimal\";\n-        } else {\n-            throw new Error(\"TESTBUG: unsupported vm variant\");\n-        }\n-    }\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/SigTestDriver.java","additions":3,"deletions":28,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+public class Test {\n+    public static void test() {\n+        System.out.println (\"Hello Test\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/process\/Test.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test the native process builder API.\n+ * @library \/test\/lib\n+ * @build Test\n+ * @run main\/native TestNativeProcessBuilder\n+ *\/\n+\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestNativeProcessBuilder {\n+    public static void main(String args[]) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createNativeTestProcessBuilder(\"jvm-test-launcher\");\n+        pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+        new OutputAnalyzer(pb.start())\n+            .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/process\/TestNativeProcessBuilder.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <jni.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+JNIEnv* create_vm(JavaVM **jvm)\n+{\n+    JNIEnv* env;\n+    JavaVMInitArgs args;\n+    JavaVMOption options[1];\n+\n+    char classpath[4096];\n+    snprintf(classpath, sizeof classpath,\n+             \"-Djava.class.path=%s\", getenv(\"CLASSPATH\"));\n+    options[0].optionString = classpath;\n+\n+    args.version = JNI_VERSION_1_8;\n+    args.nOptions = 1;\n+    args.options = &options[0];\n+    args.ignoreUnrecognized = 0;\n+\n+    int ret = JNI_CreateJavaVM(jvm, (void**)&env, &args);\n+    if (ret < 0)\n+      exit(10);\n+\n+    return env;\n+}\n+\n+\n+void run(JNIEnv *env) {\n+  jclass test_class;\n+  jmethodID test_method;\n+\n+  test_class = (*env)->FindClass(env, \"Test\");\n+  if (test_class == NULL)\n+    exit(11);\n+\n+  test_method = (*env)->GetStaticMethodID(env, test_class, \"test\", \"()V\");\n+  if (test_method == NULL)\n+    exit(12);\n+\n+  (*env)->CallStaticVoidMethod(env, test_class, test_method);\n+}\n+\n+\n+int main(int argc, char **argv)\n+{\n+  JavaVM *jvm;\n+  JNIEnv *env = create_vm(&jvm);\n+\n+  run(env);\n+\n+  return 0;\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/process\/exejvm-test-launcher.c","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- *\n- * @summary converted from VM Testbase metaspace\/flags\/maxMetaspaceSize.\n- *\n- * @library \/vmTestbase \/test\/lib\n- * @run driver jdk.test.lib.FileInstaller . .\n- * @build metaspace.flags.maxMetaspaceSize.maxMetaspaceSize\n- * @run shell maxMetaspaceSize.sh\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestDescription.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ *\n+ * @summary converted from VM Testbase metaspace\/flags\/maxMetaspaceSize.\n+ *\n+ * @library \/vmTestbase \/test\/lib\n+ * @build metaspace.flags.maxMetaspaceSize.maxMetaspaceSize\n+ * @run driver metaspace.flags.maxMetaspaceSize.TestMaxMetaspaceSize\n+ *\/\n+package metaspace.flags.maxMetaspaceSize;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestMaxMetaspaceSize {\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb =\n+            ProcessTools.createJavaProcessBuilder(true, \"-XX:MaxMetaspaceSize=100m\",\n+                                                  maxMetaspaceSize.class.getName());\n+        OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+\n+        if (out.getExitValue() == 0) {\n+            \/\/ test passed\n+            return;\n+        } else {\n+            System.out.println(\"Non-zero exit value from child process. Could be OOM, which is OK\");\n+            out.shouldContain(\"Out of Memory Error\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/TestMaxMetaspaceSize.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -1,45 +0,0 @@\n-# Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-JAVA=\"$TESTJAVA\/bin\/java\"\n-JAVA_OPTS=\"$TESTJAVAOPTS $TESTVMOPTS -cp $TESTCLASSPATH\"\n-\n-TST=\"metaspace.flags.maxMetaspaceSize.maxMetaspaceSize\"\n-echo \"\"\n-echo \"$JAVA $JAVA_OPTS -XX:MaxMetaspaceSize=100m $TST\"\n-echo \"\"\n-$JAVA $JAVA_OPTS -XX:MaxMetaspaceSize=100m $TST\n-res=$?\n-\n-printf \"\\n\\n\"\n-if [ $res -eq 0 ]; then\n-        echo Test passed\n-else\n-        grep -s \"Out of Memory Error\" hs_err_pid*.log\n-        res2=$?\n-        if [ $res2 -eq 0 ]; then\n-            echo JAVA crashed with expected Out of Memory Error error.\n-            echo Test passed\n-        else\n-            echo Test failed\n-            exit 1\n-        fi\n-fi\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/flags\/maxMetaspaceSize\/maxMetaspaceSize.sh","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+    private static final String testJdk     = privilegedGetProperty(\"test.jdk\");\n@@ -343,0 +344,28 @@\n+    \/**\n+     * Returns absolute path to directory containing JVM shared library.\n+     *\/\n+    public static Path jvmLibDir() {\n+        Path dir = Paths.get(testJdk);\n+        if (Platform.isWindows()) {\n+            return dir.resolve(\"bin\")\n+                .resolve(variant())\n+                .toAbsolutePath();\n+        } else {\n+            return dir.resolve(\"lib\")\n+                .resolve(variant())\n+                .toAbsolutePath();\n+        }\n+    }\n+\n+    private static String variant() {\n+        if (Platform.isServer()) {\n+            return \"server\";\n+        } else if (Platform.isClient()) {\n+            return \"client\";\n+        } else if (Platform.isMinimal()) {\n+            return \"minimal\";\n+        } else {\n+            throw new Error(\"TESTBUG: unsupported vm variant\");\n+        }\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":30,"deletions":1,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.io.File;\n@@ -30,0 +31,1 @@\n+import java.nio.file.Paths;\n@@ -48,0 +50,1 @@\n+import jdk.test.lib.Platform;\n@@ -516,0 +519,42 @@\n+    \/**\n+     * Helper method to create a process builder for launching native executable\n+     * test that uses\/loads JVM.\n+     *\n+     * @param executableName The name of an executable to be launched.\n+     * @param args Arguments for the executable.\n+     * @return New ProcessBuilder instance representing the command.\n+     *\/\n+    public static ProcessBuilder createNativeTestProcessBuilder(String executableName,\n+                                                                String... args) throws Exception {\n+        executableName = Platform.isWindows() ? executableName + \".exe\" : executableName;\n+        String executable = Paths.get(System.getProperty(\"test.nativepath\"), executableName)\n+            .toAbsolutePath()\n+            .toString();\n+\n+        ProcessBuilder pb = new ProcessBuilder(executable);\n+        pb.command().addAll(Arrays.asList(args));\n+        addJvmLib(pb);\n+        return pb;\n+    }\n+\n+    \/**\n+     * Adds JVM library path to the native library path.\n+     *\n+     * @param pb ProcessBuilder to be updated with JVM library path.\n+     * @return pb Update ProcessBuilder instance.\n+     *\/\n+    public static ProcessBuilder addJvmLib(ProcessBuilder pb) throws Exception {\n+        String jvmLibDir = Platform.jvmLibDir().toString();\n+        String libPathVar = Platform.sharedLibraryPathVariableName();\n+        String currentLibPath = pb.environment().get(libPathVar);\n+\n+        String newLibPath = jvmLibDir;\n+        if ( (currentLibPath != null) && !currentLibPath.isEmpty() ) {\n+            newLibPath = currentLibPath + File.pathSeparator + jvmLibDir;\n+        }\n+\n+        pb.environment().put(libPathVar, newLibPath);\n+\n+        return pb;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"}]}