{"files":[{"patch":"@@ -0,0 +1,82 @@\n+\/* Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8285835\n+ * @summary EA does not propagate NSR (not scalar replaceable) state.\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement TestBrokenEA\n+ *\/\n+\n+public class TestBrokenEA {\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test1(true);\n+            test1(false);\n+            test2(true);\n+            test2(false);\n+        }\n+    }\n+\n+    private static void test1(boolean flag) {\n+        A[] array = new A[1];\n+        if (flag) {\n+            C c = new C();\n+            B b = new B();\n+            b.c = c;\n+            A a = new A();\n+            a.b = b;\n+            array[0] = a;\n+        }\n+        A a = array[0];\n+        if (a != null) {\n+            a.b.c.f = 0x42;\n+        }\n+    }\n+\n+    private static void test2(boolean flag) {\n+        A a = null;\n+        if (flag) {\n+            C c = new C();\n+            B b = new B();\n+            b.c = c;\n+            a = new A();\n+            a.b = b;\n+        }\n+        if (a != null) {\n+            a.b.c.f = 0x42;\n+        }\n+    }\n+\n+    private static class A {\n+        public B b;\n+    }\n+\n+    private static class B {\n+        public C c;\n+    }\n+\n+    private static class C {\n+        public int f;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/TestBrokenEA.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"}]}