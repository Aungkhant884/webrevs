{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.util.Arrays;\n@@ -44,2 +45,2 @@\n-                return new ServerSocket(); }\n-            catch(IOException x) {\n+                return new ServerSocket();\n+            } catch(IOException x) {\n@@ -89,1 +90,1 @@\n-    static void test(ServerSocketProducer ssp, String... sysProps) throws Exception {\n+    static void test(ServerSocketProducer ssp, String... jvmArgs) throws Exception {\n@@ -94,2 +95,2 @@\n-        for (String prop : sysProps)\n-            commands.add(prop);\n+        for (String arg : jvmArgs)\n+            commands.add(arg);\n@@ -110,1 +111,8 @@\n-        Socket socket = new Socket(\"localhost\", port);\n+        String address;\n+        if (Arrays.stream(jvmArgs).anyMatch(\"-Djava.net.preferIPv4Stack=true\"::equals)) {\n+            address = \"127.0.0.1\";\n+        } else {\n+            InetAddress loopback = InetAddress.getLoopbackAddress();\n+            address = loopback.getHostAddress();\n+        }\n+        Socket socket = new Socket(address, port);\n@@ -131,1 +139,2 @@\n-            ss.bind(new InetSocketAddress(0));\n+            InetAddress loopback = InetAddress.getLoopbackAddress();\n+            ss.bind(new InetSocketAddress(loopback, 0));\n","filename":"test\/jdk\/java\/net\/ServerSocket\/AcceptInheritHandle.java","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,3 @@\n-                ss = new ServerSocket(0);\n+                InetAddress loopback = InetAddress.getLoopbackAddress();\n+                ss = new ServerSocket();\n+                ss.bind(new InetSocketAddress(loopback, 0));\n@@ -73,0 +75,10 @@\n+        public String authority() {\n+            InetAddress address = ss.getInetAddress();\n+            String hostaddr = address.isAnyLocalAddress()\n+                ? \"localhost\" : address.getHostAddress();\n+            if (hostaddr.indexOf(':') > -1) {\n+                hostaddr = \"[\" + hostaddr + \"]\";\n+            }\n+            return hostaddr + \":\" + port();\n+        }\n+\n@@ -119,1 +131,2 @@\n-        int port = svr.port();\n+        String authority = svr.authority();\n+        System.out.println(\"Server listening on: \" + authority);\n@@ -132,1 +145,1 @@\n-            URL url = new URL(\"http:\/\/localhost:\" + port + \"\/\" + i);\n+            URL url = new URL(\"http:\/\/\" + authority + \"\/\" + i);\n","filename":"test\/jdk\/java\/net\/URLConnection\/Responses.java","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -28,1 +28,3 @@\n- * @summary IPv6 support for Windows XP and 2003 server\n+ * @summary IPv6 support for Windows XP and 2003 server. This test requires\n+ *          binding to the wildcard address, and as such is susceptible\n+ *          of intermittent failures caused by port reuse policy.\n@@ -243,1 +245,0 @@\n-\n","filename":"test\/jdk\/java\/net\/ipv6tests\/TcpTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n-        private ServerSocket    server;\n-        private int port;\n+        private final ServerSocket server;\n+        private final int port;\n@@ -256,2 +256,6 @@\n-                                if (pasv == null)\n-                                    pasv = new ServerSocket(0);\n+                                if (pasv == null) {\n+                                    \/\/ Not sure how to support PASV mode over\n+                                    \/\/ IPv6\n+                                    pasv = new ServerSocket();\n+                                    pasv.bind(new InetSocketAddress(\"127.0.0.1\", 0));\n+                                }\n@@ -372,0 +376,4 @@\n+            this(InetAddress.getLoopbackAddress(), port);\n+        }\n+\n+        public FtpServer(InetAddress address, int port) {\n@@ -374,1 +382,6 @@\n-              server = new ServerSocket(port);\n+                if (address == null) {\n+                    server = new ServerSocket(port);\n+                } else {\n+                    server = new ServerSocket();\n+                    server.bind(new InetSocketAddress(address, port));\n+                }\n@@ -376,0 +389,1 @@\n+                throw new UncheckedIOException(e);\n@@ -380,1 +394,1 @@\n-            this(21);\n+            this(null, 21);\n@@ -384,3 +398,11 @@\n-            if (server != null)\n-                return server.getLocalPort();\n-            return 0;\n+             return server.getLocalPort();\n+        }\n+\n+        public String getAuthority() {\n+            InetAddress address = server.getInetAddress();\n+            String hostaddr = address.isAnyLocalAddress()\n+                ? \"localhost\" : address.getHostAddress();\n+            if (hostaddr.indexOf(':') > -1) {\n+                hostaddr = \"[\" + hostaddr +\"]\";\n+            }\n+            return hostaddr + \":\" + getPort();\n@@ -452,1 +474,1 @@\n-        FtpServer server = new FtpServer(0);\n+        FtpServer server = new FtpServer(InetAddress.getLoopbackAddress(), 0);\n@@ -456,1 +478,3 @@\n-            int port = server.getPort();\n+            String authority = server.getAuthority();\n+            System.out.println(\"FTP server waiting for connections at: \" + authority);\n+            assert authority != null;\n@@ -460,1 +484,1 @@\n-            URL url = new URL(\"ftp:\/\/user:password@localhost:\" + port + \"\/%2Fetc\/motd;type=a\");\n+            URL url = new URL(\"ftp:\/\/user:password@\" + authority + \"\/%2Fetc\/motd;type=a\");\n@@ -482,1 +506,0 @@\n-            port = server.getPort();\n@@ -486,1 +509,1 @@\n-            url = new URL(\"ftp:\/\/user2@localhost:\" + port + \"\/%2Fusr\/bin;type=d\");\n+            url = new URL(\"ftp:\/\/user2@\" + authority + \"\/%2Fusr\/bin;type=d\");\n","filename":"test\/jdk\/sun\/net\/ftp\/FtpURL.java","additions":38,"deletions":15,"binary":false,"changes":53,"status":"modified"}]}