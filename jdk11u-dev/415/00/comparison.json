{"files":[{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5094028 6219522\n+ * @summary test new jarsigner -sigalg and -digestalg options\n+ * @author Sean Mullan\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class AlgOptions {\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/ copy jar file into writeable location\n+        Files.copy(Path.of(System.getProperty(\"test.src\"), \"AlgOptions.jar\"),\n+                Path.of(\"AlgOptionsTmp.jar\"));\n+\n+        \/\/ test missing signature algorithm arg\n+        sign(\"-sigalg\").shouldNotHaveExitValue(0);\n+\n+        \/\/ test missing digest algorithm arg\n+        sign(\"-digestalg\").shouldNotHaveExitValue(0);\n+\n+        \/\/ test BOGUS signature algorithm\n+        sign(\"-sigalg\", \"BOGUS\").shouldNotHaveExitValue(0);\n+\n+        \/\/ test BOGUS digest algorithm\n+        sign(\"-digestalg\", \"BOGUS\").shouldNotHaveExitValue(0);\n+\n+        \/\/ test incompatible signature algorithm\n+        sign(\"-sigalg\", \"SHA1withDSA\").shouldNotHaveExitValue(0);\n+\n+        \/\/ test compatible signature algorithm\n+        sign(\"-sigalg\", \"SHA512withRSA\").shouldHaveExitValue(0);\n+        verify();\n+\n+        \/\/ test non-default digest algorithm\n+        sign(\"-digestalg\", \"SHA-1\").shouldHaveExitValue(0);\n+        verify();\n+\n+        \/\/ test SHA-512 digest algorithm (creates long lines)\n+        sign(\"-digestalg\", \"SHA-512\", \"-sigalg\", \"SHA512withRSA\")\n+                .shouldHaveExitValue(0);\n+        verify();\n+    }\n+\n+    static OutputAnalyzer sign(String... options) throws Exception {\n+        List<String> args = new ArrayList<>();\n+        args.add(\"-keystore\");\n+        args.add(Path.of(System.getProperty(\"test.src\"), \"JarSigning.keystore\")\n+                .toString());\n+        args.add(\"-storepass\");\n+        args.add(\"bbbbbb\");\n+        for (String option : options) {\n+            args.add(option);\n+        }\n+        args.add(\"AlgOptionsTmp.jar\");\n+        args.add(\"c\");\n+        return SecurityTools.jarsigner(args);\n+    }\n+\n+    static void verify() throws Exception {\n+        SecurityTools.jarsigner(\n+                \"-verify\", \"AlgOptionsTmp.jar\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/AlgOptions.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"},{"patch":"@@ -1,224 +0,0 @@\n-#\n-# Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 5094028 6219522\n-# @summary test new jarsigner -sigalg and -digestalg options\n-# @author Sean Mullan\n-#\n-# @run shell AlgOptions.sh\n-#\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-  TESTCLASSES=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    CP=\"${FS}bin${FS}cp -f\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    CP=\"cp -f\"\n-    ;;\n-  Windows_* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    CP=\"cp -f\"\n-    ;;\n-  * )\n-    echo \"Unrecognized operating system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-# copy jar file into writeable location\n-${CP} ${TESTSRC}${FS}AlgOptions.jar ${TESTCLASSES}${FS}AlgOptionsTmp.jar\n-\n-failed=0\n-# test missing signature algorithm arg\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -sigalg \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar c\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 1 failed\"\n-    failed=1\n-else\n-    echo \"test 1 passed\"\n-fi\n-\n-# test missing digest algorithm arg\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -digestalg \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar c\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 2 failed\"\n-    failed=1\n-else\n-    echo \"test 2 passed\"\n-fi\n-\n-# test BOGUS signature algorithm\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -sigalg BOGUS \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar c\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 3 failed\"\n-    failed=1\n-else\n-    echo \"test 3 passed\"\n-fi\n-\n-# test BOGUS digest algorithm\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -digestalg BOGUS \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar c\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 4 failed\"\n-    failed=1\n-else\n-    echo \"test 4 passed\"\n-fi\n-\n-# test incompatible signature algorithm\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -sigalg SHA1withDSA \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar c\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 5 failed\"\n-    failed=1\n-else\n-    echo \"test 5 passed\"\n-fi\n-\n-# test compatible signature algorithm\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -sigalg SHA512withRSA \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar c\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 6 passed\"\n-else\n-    echo \"test 6 failed\"\n-    failed=1\n-fi\n-\n-# verify it\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -verify ${TESTCLASSES}${FS}AlgOptionsTmp.jar\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 7 passed\"\n-else\n-    echo \"test 7 failed\"\n-    failed=1\n-fi\n-\n-# test non-default digest algorithm\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -digestalg SHA-256 \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar c\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 8 passed\"\n-else\n-    echo \"test 8 failed\"\n-    failed=1\n-fi\n-\n-# verify it\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -verify ${TESTCLASSES}${FS}AlgOptionsTmp.jar\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 9 passed\"\n-else\n-    echo \"test 9 failed\"\n-    failed=1\n-fi\n-\n-# test SHA-512 digest algorithm (creates long lines)\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -digestalg SHA-512 \\\n-    -sigalg SHA512withRSA \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar c\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 10 passed\"\n-else\n-    echo \"test 10 failed\"\n-    failed=1\n-fi\n-\n-# verify it\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -verify ${TESTCLASSES}${FS}AlgOptionsTmp.jar\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    echo \"test 11 passed\"\n-else\n-    echo \"test 11 failed\"\n-    failed=1\n-fi\n-\n-if [ $failed -eq 1 ]; then\n-    exit 1\n-else\n-    exit 0\n-fi\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/AlgOptions.sh","additions":0,"deletions":224,"binary":false,"changes":224,"status":"deleted"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8036709\n+ * @summary Java 7 jarsigner displays warning about cert policy tree\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.io.FileOutputStream;\n+import java.io.PrintStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class CertPolicy {\n+    static OutputAnalyzer keytool(String cmd) throws Exception {\n+        return SecurityTools.keytool(\"-keypass changeit -storepass changeit \"\n+                + \"-keystore ks -keyalg rsa \" + cmd);\n+    }\n+\n+    static OutputAnalyzer jarsigner(String cmd) throws Exception {\n+        return SecurityTools.jarsigner(\"-storepass changeit -keystore ks \" + cmd);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        keytool(\"-genkeypair -alias ca -dname CN=CA -ext bc\");\n+        keytool(\"-genkeypair -alias int -dname CN=Int\");\n+        keytool(\"-genkeypair -alias ee -dname CN=EE\");\n+\n+        \/\/ CertificatePolicies [[PolicyId: [1.2.3]], [PolicyId: [1.2.4]]]\n+        \/\/ PolicyConstraints: [Require: 0; Inhibit: unspecified]\n+        keytool(\"-certreq -alias int -file int.req\");\n+        keytool(\"-gencert -rfc -alias ca \"\n+                + \"-ext 2.5.29.32=300C300406022A03300406022A04 \"\n+                + \"-ext 2.5.29.36=3003800100 \"\n+                + \"-ext bc -infile int.req -outfile int.cert\");\n+        keytool(\"-import -alias int -file int.cert\");\n+\n+        \/\/ CertificatePolicies [[PolicyId: [1.2.3]]]\n+        keytool(\"-certreq -alias ee -file ee.req\");\n+        keytool(\"-gencert -rfc -alias int -ext 2.5.29.32=3006300406022A03 \"\n+                + \"-infile ee.req -outfile ee.cert\");\n+        keytool(\"-import -alias ee -file ee.cert\");\n+\n+        Files.write(Path.of(\"cc\"), List.of(\n+                keytool(\"-export -alias ee -rfc\").getOutput(),\n+                keytool(\"-export -alias int -rfc\").getOutput(),\n+                keytool(\"-export -alias ca -rfc\").getOutput()));\n+\n+        keytool(\"-delete -alias int\");\n+\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"cc\"));\n+\n+        \/\/ Make sure the certchain in the signed jar contains all 3 certs\n+        jarsigner(\"-strict -certchain cc a.jar ee -debug\")\n+                .shouldHaveExitValue(0);\n+\n+        jarsigner(\"-strict -verify a.jar -debug\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/CertPolicy.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7004168\n+ * @summary jarsigner -verify checks for KeyUsage codesigning ext on all certs\n+ *  instead of just signing cert\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class CheckUsage {\n+\n+    static OutputAnalyzer keytool(String cmd) throws Exception {\n+        return SecurityTools.keytool(\"-keypass changeit -storepass changeit \"\n+                + \"-keyalg rsa \" + cmd);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        Files.write(Path.of(\"x\"), List.of(\"x\"));\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"x\"));\n+\n+        \/\/ ################### 3 Keystores #######################\n+\n+        \/\/ Keystore js.jks: including CA and Publisher\n+        \/\/ CA contains a non-empty KeyUsage\n+        keytool(\"-keystore js.jks -genkeypair -alias ca -dname CN=CA \"\n+                + \"-ext KU=kCS -ext bc -validity 365\");\n+        keytool(\"-keystore js.jks -genkeypair -alias pub -dname CN=Publisher\");\n+\n+        \/\/ Publisher contains the correct KeyUsage\n+        keytool(\"-keystore js.jks -certreq -alias pub -file pub.req\");\n+        keytool(\"-keystore js.jks -gencert -alias ca -ext KU=dig -validity 365 \"\n+                + \"-infile pub.req -outfile pub.cert\");\n+        keytool(\"-keystore js.jks -importcert -alias pub -file pub.cert\");\n+\n+        \/\/ Keystore trust.jks: including CA only\n+        keytool(\"-keystore js.jks -exportcert -alias ca -file ca.cert\");\n+        keytool(\"-keystore trust.jks -importcert -alias ca -noprompt -file ca.cert\");\n+\n+        \/\/ Keystore unrelated.jks: unrelated\n+        keytool(\"-keystore unrelated.jks -genkeypair -alias nothing \"\n+                + \"-dname CN=Nothing -validity 365\");\n+\n+        \/\/ ################### 4 Tests #######################\n+\n+        \/\/ Test 1: Sign should be OK\n+\n+        SecurityTools.jarsigner(\"-keystore js.jks -storepass changeit a.jar pub\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ Test 2: Verify should be OK\n+\n+        SecurityTools.jarsigner(\"-keystore trust.jks -storepass changeit \"\n+                + \"-strict -verify a.jar\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ Test 3: When no keystore is specified, the error is only\n+        \/\/ \"chain invalid\"\n+\n+        SecurityTools.jarsigner(\"-strict -verify a.jar\")\n+                .shouldHaveExitValue(4);\n+\n+        \/\/ Test 4: When unrelated keystore is specified, the error is\n+        \/\/ \"chain invalid\" and \"not alias in keystore\"\n+\n+        SecurityTools.jarsigner(\"-keystore unrelated.jks -storepass changeit \"\n+                + \"-strict -verify a.jar\")\n+                .shouldHaveExitValue(36);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/CheckUsage.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8021789\n+ * @summary jarsigner parses alias as command line option (depending on locale)\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class Collator {\n+    public static void main(String[] args) throws Exception {\n+\n+        Files.write(Path.of(\"collator\"), List.of(\"12345\"));\n+        JarUtils.createJarFile(\n+                Path.of(\"collator.jar\"), Path.of(\".\"), Path.of(\"collator\"));\n+\n+        SecurityTools.keytool(\"-storepass changeit -keypass changeit \"\n+                + \"-keyalg rsa -keystore collator.jks -alias debug \"\n+                + \"-dname CN=debug -genkey -validity 300\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ use \"debug\" as alias name\n+        SecurityTools.jarsigner(\"-keystore collator.jks \"\n+                + \"-storepass changeit collator.jar debug\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ use \"\" as alias name (although there will be a warning)\n+        SecurityTools.jarsigner(\"-keystore\", \"collator.jks\",\n+                \"-storepass\", \"changeit\", \"-verify\", \"collator.jar\", \"\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/Collator.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,273 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6802846 8172529\n+ * @summary jarsigner needs enhanced cert validation(options)\n+ * @library \/test\/lib\n+ * @run main\/timeout=240 ConciseJarsigner\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Calendar;\n+import java.util.List;\n+\n+public class ConciseJarsigner {\n+\n+    static OutputAnalyzer kt(String cmd) throws Exception {\n+        \/\/ Choose 1024-bit RSA to make sure it runs fine and fast. In\n+        \/\/ fact, every keyalg\/keysize combination is OK for this test.\n+        return SecurityTools.keytool(\"-storepass changeit -keypass changeit \"\n+                + \"-keystore ks -keyalg rsa -keysize 1024 \" + cmd);\n+    }\n+\n+    static void gencert(String owner, String cmd) throws Exception {\n+        kt(\"-certreq -alias \" + owner + \" -file tmp.req\");\n+        kt(\"-gencert -infile tmp.req -outfile tmp.cert \" + cmd);\n+        kt(\"-import -alias \" + owner + \" -file tmp.cert\");\n+    }\n+\n+    static OutputAnalyzer js(String cmd) throws Exception {\n+        return SecurityTools.jarsigner(\"-debug \" + cmd);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        Files.write(Path.of(\"A1\"), List.of(\"a1\"));\n+        Files.write(Path.of(\"A2\"), List.of(\"a2\"));\n+        Files.write(Path.of(\"A3\"), List.of(\"a3\"));\n+        Files.write(Path.of(\"A4\"), List.of(\"a4\"));\n+        Files.write(Path.of(\"A5\"), List.of(\"a5\"));\n+        Files.write(Path.of(\"A6\"), List.of(\"a6\"));\n+\n+        String year = \"\" + Calendar.getInstance().get(Calendar.YEAR);\n+\n+        \/\/ ==========================================================\n+        \/\/ First part: output format\n+        \/\/ ==========================================================\n+\n+        kt(\"-genkeypair -alias a1 -dname CN=a1 -validity 366\");\n+        kt(\"-genkeypair -alias a2 -dname CN=a2 -validity 366\");\n+\n+        \/\/ a.jar includes 8 unsigned, 2 signed by a1 and a2, 2 signed by a3\n+        SecurityTools.jar(\"cvf a.jar A1 A2\");\n+        js(\"-keystore ks -storepass changeit a.jar a1\");\n+        SecurityTools.jar(\"uvf a.jar A3 A4\");\n+        js(\"-keystore ks -storepass changeit a.jar a2\");\n+        SecurityTools.jar(\"uvf a.jar A5 A6\");\n+\n+        \/\/ Verify OK\n+        js(\"-verify a.jar\").shouldHaveExitValue(0);\n+\n+        \/\/ 4(chainNotValidated)+16(hasUnsignedEntry)\n+        js(\"-verify a.jar -strict\").shouldHaveExitValue(20);\n+\n+        \/\/ 16(hasUnsignedEntry)\n+        js(\"-verify a.jar -strict -keystore ks -storepass changeit\")\n+                .shouldHaveExitValue(16);\n+\n+        \/\/ 16(hasUnsignedEntry)+32(notSignedByAlias)\n+        js(\"-verify a.jar a1 -strict -keystore ks -storepass changeit\")\n+                .shouldHaveExitValue(48);\n+\n+        \/\/ 16(hasUnsignedEntry)\n+        js(\"-verify a.jar a1 a2 -strict -keystore ks -storepass changeit\")\n+                .shouldHaveExitValue(16);\n+\n+        \/\/ 12 entries all together\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(year))\n+                .count() == 12);\n+\n+        \/\/ 12 entries all listed\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose:grouped\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(year))\n+                .count() == 12);\n+\n+        \/\/ 4 groups: MANIFST, unrelated, signed, unsigned\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose:summary\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(year))\n+                .count() == 4);\n+\n+        \/\/ still 4 groups, but MANIFEST group has no other file\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose:summary\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(\"more)\"))\n+                .count() == 3);\n+\n+        \/\/ 5 groups: MANIFEST, unrelated, signed by a1\/a2, signed by a2, unsigned\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose:summary -certs\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(year))\n+                .count() == 5);\n+\n+        \/\/ 2 for MANIFEST, 2*2 for A1\/A2, 2 for A3\/A4\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose -certs\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(\"[certificate\"))\n+                .count() == 8);\n+\n+        \/\/ a1,a2 for MANIFEST, a1,a2 for A1\/A2, a2 for A3\/A4\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose:grouped -certs\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(\"[certificate\"))\n+                .count() == 5);\n+\n+        \/\/ a1,a2 for MANIFEST, a1,a2 for A1\/A2, a2 for A3\/A4\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose:summary -certs\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(\"[certificate\"))\n+                .count() == 5);\n+\n+        \/\/ still 5 groups, but MANIFEST group has no other file\n+        Asserts.assertTrue(js(\"-verify a.jar -verbose:summary -certs\")\n+                .asLines().stream()\n+                .filter(s -> s.contains(\"more)\"))\n+                .count() == 4);\n+\n+        \/\/ ==========================================================\n+        \/\/ Second part: exit code 2, 4, 8.\n+        \/\/ 16 and 32 already covered in the first part\n+        \/\/ ==========================================================\n+\n+        kt(\"-genkeypair -alias ca -dname CN=ca -ext bc -validity 365\");\n+        kt(\"-genkeypair -alias expired -dname CN=expired\");\n+        gencert(\"expired\", \"-alias ca -startdate -10m\");\n+        kt(\"-genkeypair -alias notyetvalid -dname CN=notyetvalid\");\n+        gencert(\"notyetvalid\", \"-alias ca -startdate +1m\");\n+        kt(\"-genkeypair -alias badku -dname CN=badku\");\n+        gencert(\"badku\", \"-alias ca -ext KU=cRLSign -validity 365\");\n+        kt(\"-genkeypair -alias badeku -dname CN=badeku\");\n+        gencert(\"badeku\", \"-alias ca -ext EKU=sa -validity 365\");\n+        kt(\"-genkeypair -alias goodku -dname CN=goodku\");\n+        gencert(\"goodku\", \"-alias ca -ext KU=dig -validity 365\");\n+        kt(\"-genkeypair -alias goodeku -dname CN=goodeku\");\n+        gencert(\"goodeku\", \"-alias ca -ext EKU=codesign -validity 365\");\n+\n+        js(\"-strict -keystore ks -storepass changeit a.jar expired\")\n+                .shouldHaveExitValue(4);\n+\n+        js(\"-strict -keystore ks -storepass changeit a.jar notyetvalid\")\n+                .shouldHaveExitValue(4);\n+\n+        js(\"-strict -keystore ks -storepass changeit a.jar badku\")\n+                .shouldHaveExitValue(8);\n+\n+        js(\"-strict -keystore ks -storepass changeit a.jar badeku\")\n+                .shouldHaveExitValue(8);\n+\n+        js(\"-strict -keystore ks -storepass changeit a.jar goodku\")\n+                .shouldHaveExitValue(0);\n+\n+        js(\"-strict -keystore ks -storepass changeit a.jar goodeku\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ badchain signed by ca1, but ca1 is removed later\n+        kt(\"-genkeypair -alias badchain -dname CN=badchain -validity 365\");\n+        kt(\"-genkeypair -alias ca1 -dname CN=ca1 -ext bc -validity 365\");\n+        gencert(\"badchain\", \"-alias ca1 -validity 365\");\n+\n+        \/\/ save ca1.cert for easy replay\n+        kt(\"-exportcert -file ca1.cert -alias ca1\");\n+        kt(\"-delete -alias ca1\");\n+\n+        js(\"-strict -keystore ks -storepass changeit a.jar badchain\")\n+                .shouldHaveExitValue(4);\n+\n+        js(\"-verify a.jar\").shouldHaveExitValue(0);\n+\n+        \/\/ ==========================================================\n+        \/\/ Third part: -certchain test\n+        \/\/ ==========================================================\n+\n+        \/\/ altchain signed by ca2\n+        kt(\"-genkeypair -alias altchain -dname CN=altchain -validity 365\");\n+        kt(\"-genkeypair -alias ca2 -dname CN=ca2 -ext bc -validity 365\");\n+        kt(\"-certreq -alias altchain -file altchain.req\");\n+        Files.write(Path.of(\"certchain\"), List.of(\n+                kt(\"-gencert -alias ca2 -validity 365 -rfc -infile altchain.req\")\n+                        .getOutput(),\n+                kt(\"-exportcert -alias ca2 -rfc\").getOutput()));\n+\n+        \/\/ Self-signed cert does not work\n+        js(\"-strict -keystore ks -storepass changeit a.jar altchain\")\n+                .shouldHaveExitValue(4);\n+\n+        \/\/ -certchain works\n+        js(\"-strict -keystore ks -storepass changeit -certchain certchain \"\n+                + \"a.jar altchain\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ if ca2 is removed, -certchain still work because altchain is a\n+        \/\/ self-signed entry and it is trusted by jarsigner\n+        \/\/ save ca2.cert for easy replay\n+        kt(\"-exportcert -file ca2.cert -alias ca2\");\n+        kt(\"-delete -alias ca2\");\n+        js(\"-strict -keystore ks -storepass changeit \"\n+                + \"-certchain certchain a.jar altchain\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ if cert is imported, -certchain won't work because this\n+        \/\/ certificate entry is not trusted\n+        kt(\"-importcert -file certchain -alias altchain -noprompt\");\n+        js(\"-strict -keystore ks -storepass changeit \"\n+                + \"-certchain certchain a.jar altchain\")\n+                .shouldHaveExitValue(4);\n+\n+        js(\"-verify a.jar\").shouldHaveExitValue(0);\n+\n+        \/\/ ==========================================================\n+        \/\/ 8172529\n+        \/\/ ==========================================================\n+\n+        kt(\"-genkeypair -alias ee -dname CN=ee\");\n+        kt(\"-genkeypair -alias caone -dname CN=caone\");\n+        kt(\"-genkeypair -alias catwo -dname CN=catwo\");\n+\n+        kt(\"-certreq -alias ee -file ee.req\");\n+        kt(\"-certreq -alias catwo -file catwo.req\");\n+\n+        \/\/ This certchain contains a cross-signed weak catwo.cert\n+        Files.write(Path.of(\"ee2\"), List.of(\n+                kt(\"-gencert -alias catwo -rfc -infile ee.req\").getOutput(),\n+                kt(\"-gencert -alias caone -sigalg MD5withRSA -rfc \"\n+                        + \"-infile catwo.req\").getOutput()));\n+\n+        kt(\"-importcert -alias ee -file ee2\");\n+\n+        SecurityTools.jar(\"cvf a.jar A1\");\n+        js(\"-strict -keystore ks -storepass changeit a.jar ee\")\n+                .shouldHaveExitValue(0);\n+        js(\"-strict -keystore ks -storepass changeit -verify a.jar\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/ConciseJarsigner.java","additions":273,"deletions":0,"binary":false,"changes":273,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6890876 6950931\n+ * @summary jarsigner can add CRL info into signed jar (updated)\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class Crl {\n+    static OutputAnalyzer kt(String cmd) throws Exception {\n+        return SecurityTools.keytool(\"-storepass changeit -keypass changeit \"\n+                + \"-keystore ks -keyalg rsa \" + cmd);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        kt(\"-alias a -dname CN=a -keyalg rsa -genkey -validity 300\");\n+        kt(\"-alias a -gencrl -id 1:1 -id 2:2 -file crl1\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-alias a -gencrl -id 3:3 -id 4:4 -file crl2\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-alias a -gencrl -id 5:1 -id 6:2 -file crl3\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ Test keytool -printcrl\n+\n+        kt(\"-printcrl -file crl1\").shouldHaveExitValue(0);\n+        kt(\"-printcrl -file crl2\").shouldHaveExitValue(0);\n+        kt(\"-printcrl -file crl3\").shouldHaveExitValue(0);\n+\n+        \/\/ Test keytool -ext crl\n+\n+        kt(\"-alias b -dname CN=c -keyalg rsa -genkey -validity 300 \"\n+                + \"-ext crl=uri:http:\/\/www.example.com\/crl\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/Crl.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8049834\n+ * @summary Two security tools tests do not run with only JRE\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.jar.JarFile;\n+\n+public class DefaultOptions {\n+\n+    static OutputAnalyzer jarsigner(String cmd) throws Throwable {\n+        ProcessBuilder pb = SecurityTools.getProcessBuilder(\n+                \"jarsigner\", List.of(cmd.trim().split(\"\\\\s+\")));\n+        pb.environment().put(\"PASS\", \"changeit\");\n+        return ProcessTools.executeCommand(pb);\n+    }\n+\n+    static OutputAnalyzer keytool(String cmd) throws Throwable {\n+        cmd = \"-storepass:env PASS -keypass:env PASS -keystore ks \" + cmd;\n+        ProcessBuilder pb = SecurityTools.getProcessBuilder(\n+                \"keytool\", List.of(cmd.trim().split(\"\\\\s+\")));\n+        pb.environment().put(\"PASS\", \"changeit\");\n+        return ProcessTools.executeCommand(pb);\n+    }\n+\n+    public static void main(String[] args) throws Throwable {\n+        keytool(\"-genkeypair -dname CN=A -alias a -keyalg rsa\")\n+                .shouldHaveExitValue(0);\n+        keytool(\"-genkeypair -dname CN=CA -alias ca -keyalg rsa\")\n+                .shouldHaveExitValue(0);\n+        keytool(\"-alias a -certreq -file a.req\");\n+        keytool(\"-alias ca -gencert -infile a.req -outfile a.cert\");\n+        keytool(\"-alias a -import -file a.cert\").shouldHaveExitValue(0);\n+\n+        Files.write(Path.of(\"js.conf\"), List.of(\n+                \"jarsigner.all = -keystore ${user.dir}\/ks -storepass:env PASS \"\n+                        + \"-debug -strict\",\n+                \"jarsigner.sign = -digestalg SHA1\",\n+                \"jarsigner.verify = -verbose:summary\"));\n+\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"),\n+                Path.of(\"ks\"), Path.of(\"js.conf\"));\n+\n+        jarsigner(\"-conf js.conf a.jar a\").shouldHaveExitValue(0);\n+        jarsigner(\"-conf js.conf -verify a.jar\").shouldHaveExitValue(0)\n+                .shouldContain(\"and 1 more\");\n+\n+        try (JarFile jf = new JarFile(\"a.jar\")) {\n+            Asserts.assertTrue(jf.getManifest().getAttributes(\"ks\").keySet()\n+                    .stream()\n+                    .anyMatch(s -> s.toString().contains(\"SHA1-Digest\")));\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/DefaultOptions.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6948909\n+ * @summary Jarsigner removes MANIFEST.MF info for badly packages jar's\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.io.FileOutputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.jar.Attributes;\n+import java.util.jar.JarFile;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipOutputStream;\n+\n+public class DiffEnd {\n+\n+    static void check() throws Exception {\n+        SecurityTools.jarsigner(\"-keystore \"\n+                + Path.of(System.getProperty(\"test.src\"), \"JarSigning.keystore\")\n+                .toString()\n+                + \" -storepass bbbbbb -digestalg SHA1\"\n+                + \" -signedjar diffend.new.jar diffend.jar c\");\n+\n+        try (JarFile jf = new JarFile(\"diffend.new.jar\")) {\n+            Asserts.assertTrue(jf.getManifest().getMainAttributes()\n+                    .containsKey(new Attributes.Name(\"Today\")));\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/ A MANIFEST.MF using \\n as newlines and no double newlines at the end\n+        byte[] manifest =\n+                (\"Manifest-Version: 1.0\\n\"\n+                        + \"Created-By: 1.7.0-internal (Sun Microsystems Inc.)\\n\"\n+                        + \"Today: Monday\\n\").getBytes(StandardCharsets.UTF_8);\n+\n+        \/\/ With the fake .RSA file, to trigger the if (wasSigned) block\n+        try (FileOutputStream fos = new FileOutputStream(\"diffend.jar\");\n+             ZipOutputStream zos = new ZipOutputStream(fos)) {\n+            zos.putNextEntry(new ZipEntry(\"META-INF\/MANIFEST.MF\"));\n+            zos.write(manifest);\n+            zos.putNextEntry(new ZipEntry(\"META-INF\/x.RSA\"));\n+            zos.putNextEntry(new ZipEntry(\"1\"));\n+            zos.write(new byte[10]);\n+        }\n+\n+        check();\n+\n+        \/\/ Without the fake .RSA file, to trigger the else block\n+        try (FileOutputStream fos = new FileOutputStream(\"diffend.jar\");\n+             ZipOutputStream zos = new ZipOutputStream(fos)) {\n+            zos.putNextEntry(new ZipEntry(\"META-INF\/MANIFEST.MF\"));\n+            zos.write(manifest);\n+            zos.putNextEntry(new ZipEntry(\"1\"));\n+            zos.write(new byte[10]);\n+        }\n+\n+        check();\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/DiffEnd.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6870812\n+ * @summary enhance security tools to use ECC algorithm\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class EC {\n+    static OutputAnalyzer kt(String cmd) throws Exception {\n+        return SecurityTools.keytool(\"-storepass changeit \"\n+                + \"-keypass changeit -keystore ks \" + cmd);\n+    }\n+\n+    static void gencert(String owner, String cmd) throws Exception {\n+        kt(\"-certreq -alias \" + owner + \" -file tmp.req\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-gencert -infile tmp.req -outfile tmp.cert \" + cmd)\n+                .shouldHaveExitValue(0);\n+        kt(\"-import -alias \" + owner + \" -file tmp.cert\")\n+                .shouldHaveExitValue(0);\n+    }\n+\n+    static OutputAnalyzer js(String cmd) throws Exception {\n+        return SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" + cmd);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        Files.write(Path.of(\"A\"), List.of(\"A\"));\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"A\"));\n+\n+        kt(\"-alias ca -dname CN=ca -keyalg ec -genkey -validity 300\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-alias a -dname CN=a -keyalg ec -genkey\")\n+                .shouldHaveExitValue(0);\n+        gencert(\"a\", \"-alias ca -validity 300\");\n+\n+        kt(\"-alias b -dname CN=b -keyalg ec -genkey\")\n+                .shouldHaveExitValue(0);\n+        gencert(\"b\", \"-alias ca -validity 300\");\n+\n+        \/\/ Ensure key length sufficient for intended hash (SHA512withECDSA)\n+        kt(\"-alias c -dname CN=c -keyalg ec -genkey -keysize 521\")\n+                .shouldHaveExitValue(0);\n+        gencert(\"c\", \"-alias ca -validity 300\");\n+\n+        kt(\"-alias x -dname CN=x -keyalg ec -genkey -validity 300\")\n+                .shouldHaveExitValue(0);\n+        gencert(\"x\", \"-alias ca -validity 300\");\n+\n+        js(\"a.jar a -debug -strict\").shouldHaveExitValue(0);\n+        js(\"a.jar b -debug -strict -sigalg SHA1withECDSA\").shouldHaveExitValue(0);\n+        js(\"a.jar c -debug -strict -sigalg SHA512withECDSA\").shouldHaveExitValue(0);\n+\n+        js(\"-verify a.jar a -debug -strict\").shouldHaveExitValue(0);\n+        js(\"-verify a.jar b -debug -strict\").shouldHaveExitValue(0);\n+        js(\"-verify a.jar c -debug -strict\").shouldHaveExitValue(0);\n+\n+        \/\/ Not signed by x, should exit with non-zero\n+        js(\"-verify a.jar x -debug -strict\").shouldNotHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/EC.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6712755\n+ * @summary jarsigner fails to sign itextasian.jar since 1.5.0_b14,\n+ *          it works with 1.5.0_13\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+import java.io.FileOutputStream;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipOutputStream;\n+\n+public class EmptyManifest {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        try (FileOutputStream fos = new FileOutputStream(\"em.jar\");\n+             ZipOutputStream zos = new ZipOutputStream(fos)) {\n+            zos.putNextEntry(new ZipEntry(\"META-INF\/MANIFEST.MF\"));\n+            zos.write(new byte[]{'\\r', '\\n'});\n+            zos.putNextEntry(new ZipEntry(\"A\"));\n+            zos.write(new byte[10]);\n+            zos.putNextEntry(new ZipEntry(\"B\"));\n+            zos.write(new byte[0]);\n+        }\n+\n+        SecurityTools.keytool(\"-keystore ks -storepass changeit \"\n+                + \"-keypass changeit -alias a -dname CN=a -keyalg rsa \"\n+                + \"-genkey -validity 300\");\n+\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit em.jar a\")\n+                .shouldHaveExitValue(0);\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit -verify \"\n+                + \"-debug -strict em.jar\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/EmptyManifest.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -67,1 +67,1 @@\n-        Files.write(Paths.get(\"a\"), \"a\".getBytes());\n+        Files.write(Paths.get(\"a\"), List.of(\"a\"));\n@@ -69,1 +69,1 @@\n-        Files.write(Paths.get(\"META-INF\/inf\"), \"inf\".getBytes());\n+        Files.write(Paths.get(\"META-INF\/inf\"), List.of(\"inf\"));\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/EntriesOrder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8022761\n+ * @summary regression: SecurityException is NOT thrown while trying\n+ *          to pack a wrongly signed Indexed Jar file\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class JvIndex {\n+    public static void main(String[] args) throws Exception {\n+\n+        Files.write(Path.of(\"abcde\"), List.of(\"12345\"));\n+        JarUtils.createJarFile(Path.of(\"jvindex.jar\"), Path.of(\".\"),\n+                Path.of(\"abcde\"));\n+        SecurityTools.keytool(\"-storepass changeit -keypass changeit \"\n+                + \"-keystore ks -keyalg rsa -alias a -dname CN=a \"\n+                + \"-genkey -validity 300\")\n+                .shouldHaveExitValue(0);\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit jvindex.jar a\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.jar(\"i jvindex.jar\");\n+\n+        \/\/ Make sure the $F line has \"sm\" (signed and in manifest)\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit -verify \"\n+                + \"-verbose jvindex.jar\")\n+                .shouldHaveExitValue(0)\n+                .shouldMatch(\"sm.*abcde\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/JvIndex.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6876328\n+ * @summary different names for the same digest algorithms breaks jarsigner\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class NameClash {\n+    public static void main(String[] args) throws Exception {\n+        String common = \"-storepass changeit -keypass changeit -keystore ks \";\n+\n+        SecurityTools.keytool(common + \"-alias a -dname CN=a -keyalg rsa \"\n+                + \"-genkey -validity 300\");\n+        SecurityTools.keytool(common + \"-alias b -dname CN=b -keyalg rsa \"\n+                + \"-genkey -validity 300\");\n+\n+        Files.write(Path.of(\"A\"), List.of(\"A\"));\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"A\"));\n+\n+        SecurityTools.jarsigner(common + \"a.jar a -digestalg SHA1\")\n+                .shouldHaveExitValue(0);\n+        SecurityTools.jarsigner(common + \"a.jar b -digestalg SHA-1\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.jarsigner(common + \"-verify -debug -strict a.jar\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/NameClash.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6561126\n+ * @summary keytool should use larger default keysize for keypairs\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.jar.JarFile;\n+import java.util.jar.Manifest;\n+\n+public class NewSize7 {\n+    public static void main(String[] args) throws Exception {\n+        String common = \"-storepass changeit -keypass changeit -keystore ks \";\n+        SecurityTools.keytool(common\n+                + \"-keyalg rsa -genkeypair -alias me -dname CN=Me\");\n+        Files.write(Path.of(\"ns7.txt\"), new byte[0]);\n+        JarUtils.createJarFile(Path.of(\"ns7.jar\"), Path.of(\".\"),\n+                Path.of(\"ns7.txt\"));\n+        SecurityTools.jarsigner(common + \"ns7.jar me\");\n+\n+        try (JarFile jf = new JarFile(\"ns7.jar\")) {\n+            try (InputStream is = jf.getInputStream(\n+                    jf.getEntry(\"META-INF\/MANIFEST.MF\"))) {\n+                Asserts.assertTrue(new Manifest(is).getAttributes(\"ns7.txt\")\n+                        .keySet().stream()\n+                        .anyMatch(s -> s.toString().contains(\"SHA-256\")));\n+            }\n+            try (InputStream is = jf.getInputStream(\n+                    jf.getEntry(\"META-INF\/ME.SF\"))) {\n+                Asserts.assertTrue(new Manifest(is).getAttributes(\"ns7.txt\")\n+                        .keySet().stream()\n+                        .anyMatch(s -> s.toString().contains(\"SHA-256\")));\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/NewSize7.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6543940 6868865\n+ * @summary Exception thrown when signing a jarfile in java 1.5\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+public class OldSig {\n+    public static void main(String[] args) throws Exception {\n+        Path src = Path.of(System.getProperty(\"test.src\"));\n+        \/\/ copy jar file into writeable location\n+        Files.copy(src.resolve(\"oldsig\/A.jar\"), Path.of(\"B.jar\"));\n+        Files.copy(src.resolve(\"oldsig\/A.class\"), Path.of(\"B.class\"));\n+\n+        JarUtils.updateJarFile(Path.of(\"B.jar\"), Path.of(\".\"),\n+                Path.of(\"B.class\"));\n+\n+        SecurityTools.jarsigner(\"-keystore \" + src.resolve(\"JarSigning.keystore\")\n+                + \" -storepass bbbbbb -digestalg SHA1 B.jar c\");\n+        SecurityTools.jarsigner(\"-verify B.jar\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/OldSig.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7004035\n+ * @summary signed jar with only META-INF\/* inside is not verifiable\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class OnlyManifest {\n+    static OutputAnalyzer kt(String cmd) throws Exception {\n+        return SecurityTools.keytool(\"-storepass changeit -keypass changeit \"\n+                + \"-keystore ks -keyalg rsa \" + cmd);\n+    }\n+\n+    static void gencert(String owner, String cmd) throws Exception {\n+        kt(\"-certreq -alias \" + owner + \" -file tmp.req\");\n+        kt(\"-gencert -infile tmp.req -outfile tmp.cert \" + cmd);\n+        kt(\"-import -alias \" + owner + \" -file tmp.cert\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Create an empty jar file with only MANIFEST.MF\n+        Files.write(Path.of(\"manifest\"), List.of(\"Key: Value\"));\n+        SecurityTools.jar(\"cvfm a.jar manifest\");\n+\n+        kt(\"-alias ca -dname CN=ca -genkey -validity 300\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-alias a -dname CN=a -genkey -validity 300\")\n+                .shouldHaveExitValue(0);\n+        gencert(\"a\", \"-alias ca -validity 300\");\n+\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit\"\n+                + \" a.jar a -debug -strict\")\n+                .shouldHaveExitValue(0);\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit\"\n+                + \" -verify a.jar a -debug -strict\")\n+                .shouldHaveExitValue(0)\n+                .shouldNotContain(\"unsigned\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/OnlyManifest.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -61,1 +61,1 @@\n-        Files.write(Paths.get(\"a\"), \"a\".getBytes());\n+        Files.write(Paths.get(\"a\"), List.of(\"a\"));\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/Options.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6868579\n+ * @summary RFE: jarsigner to support reading password from environment variable\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class PassType {\n+\n+    static OutputAnalyzer jarsignerWithEnv(String cmd) throws Throwable {\n+        ProcessBuilder pb = SecurityTools.getProcessBuilder(\n+                \"jarsigner\", List.of(cmd.trim().split(\"\\\\s+\")));\n+        pb.environment().put(\"PASSENV\", \"test12\");\n+        return ProcessTools.executeCommand(pb);\n+    }\n+\n+    static OutputAnalyzer keytoolWithEnv(String cmd) throws Throwable {\n+        ProcessBuilder pb = SecurityTools.getProcessBuilder(\n+                \"keytool\", List.of(cmd.trim().split(\"\\\\s+\")));\n+        pb.environment().put(\"PASSENV\", \"test12\");\n+        return ProcessTools.executeCommand(pb);\n+    }\n+\n+    public static void main(String[] args) throws Throwable {\n+\n+        SecurityTools.keytool(\"-keystore ks -validity 300 -keyalg rsa \"\n+                + \"-alias a -dname CN=a -keyalg rsa -genkey \"\n+                + \"-storepass test12 -keypass test12\")\n+                .shouldHaveExitValue(0);\n+        keytoolWithEnv(\"-keystore ks -validity 300 -keyalg rsa \"\n+                + \"-alias b -dname CN=b -keyalg rsa -genkey \"\n+                + \"-storepass:env PASSENV -keypass:env PASSENV\")\n+                .shouldHaveExitValue(0);\n+        Files.write(Path.of(\"passfile\"), List.of(\"test12\"));\n+        SecurityTools.keytool(\"-keystore ks -validity 300 -keyalg rsa \"\n+                + \"-alias c -dname CN=c -keyalg rsa -genkey \"\n+                + \"-storepass:file passfile -keypass:file passfile\")\n+                .shouldHaveExitValue(0);\n+\n+        Files.write(Path.of(\"A\"), List.of(\"A\"));\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"A\"));\n+\n+        \/\/ Sign\n+        SecurityTools.jarsigner(\"-keystore ks -storepass test12 a.jar a\")\n+                .shouldHaveExitValue(0);\n+        jarsignerWithEnv(\"-keystore ks -storepass:env PASSENV a.jar b\")\n+                .shouldHaveExitValue(0);\n+        SecurityTools.jarsigner(\"-keystore ks -storepass:file passfile a.jar c\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ Verify\n+        SecurityTools.jarsigner(\"-keystore ks -storepass test12 \"\n+                + \"-verify -debug -strict a.jar\")\n+                .shouldHaveExitValue(0);\n+        jarsignerWithEnv(\"-keystore ks -storepass:env PASSENV \"\n+                + \"-verify -debug -strict a.jar\")\n+                .shouldHaveExitValue(0);\n+        SecurityTools.jarsigner(\"-keystore ks -storepass:file passfile \"\n+                + \"-verify -debug -strict a.jar\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/PassType.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6522933\n+ * @summary jarsigner fails in a directory with a path containing a % sign\n+ * @author Wang Weijun\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+public class PercentSign {\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/  copy jar file into writeable location\n+        Files.copy(Path.of(System.getProperty(\"test.src\"), \"AlgOptions.jar\"),\n+                Path.of(\"AlgOptionsTmp.jar\"));\n+\n+        SecurityTools.jarsigner(\"-keystore \"\n+                + Path.of(System.getProperty(\"test.src\"), \"a%b\", \"percent.keystore\")\n+                + \" -storepass changeit AlgOptionsTmp.jar ok\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/PercentSign.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -1,79 +0,0 @@\n-#\n-# Copyright (c) 2007, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6522933\n-# @summary jarsigner fails in a directory with a path contianing a % sign\n-# @author Wang Weijun\n-#\n-# @run shell PercentSign.sh\n-#\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-  TESTCLASSES=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    CP=\"${FS}bin${FS}cp -f\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    CP=\"cp -f\"\n-    ;;\n-  Windows_* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    CP=\"cp -f\"\n-    ;;\n-  * )\n-    echo \"Unrecognized operating system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-# copy jar file into writeable location\n-${CP} ${TESTSRC}${FS}AlgOptions.jar ${TESTCLASSES}${FS}AlgOptionsTmp.jar\n-\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}a%b${FS}percent.keystore \\\n-    -storepass changeit \\\n-    ${TESTCLASSES}${FS}AlgOptionsTmp.jar ok\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/PercentSign.sh","additions":0,"deletions":79,"binary":false,"changes":79,"status":"deleted"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6866479\n+ * @summary libzip.so caused JVM to crash when running jarsigner\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class SameName {\n+    public static void main(String[] args) throws Exception {\n+\n+        String signedJar = Platform.isWindows() ? \"EM.jar\" : \"em.jar\";\n+\n+        Files.write(Path.of(\"A\"), List.of(\"A\"));\n+        JarUtils.createJarFile(Path.of(\"em.jar\"), Path.of(\".\"), Path.of(\"A\"));\n+\n+        SecurityTools.keytool(\"-storepass changeit -keypass changeit \"\n+                + \"-keystore ks -keyalg rsa  -alias a -dname CN=a \"\n+                + \"-keyalg rsa -genkey -validity 300\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \"\n+                + \"-signedjar \" + signedJar + \" em.jar a\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/SameName.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8044755\n+ * @summary Add a test for algorithm constraints check in jarsigner\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Path;\n+\n+public class WeakSize {\n+\n+    static OutputAnalyzer kt(String cmd) throws Exception {\n+        \/\/ The sigalg used is MD2withRSA, which is obsolete.\n+        return SecurityTools.keytool(\"-storepass changeit -keypass changeit \"\n+                + \"-keystore ks -keyalg rsa -sigalg MD2withRSA \" + cmd);\n+    }\n+\n+    static void gencert(String owner, String cmd) throws Exception {\n+        kt(\"-certreq -alias \" + owner + \" -file tmp.req\");\n+        kt(\"-gencert -infile tmp.req -outfile tmp.cert \" + cmd);\n+        kt(\"-import -alias \" + owner + \" -file tmp.cert\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        kt(\"-genkeypair -alias ca -dname CN=CA -ext bc\");\n+        kt(\"-genkeypair -alias signer -dname CN=Signer\");\n+        gencert(\"signer\", \"-alias ca -ext ku=dS -rfc\");\n+\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"ks\"));\n+\n+        \/\/ We always trust a TrustedCertificateEntry\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \"\n+                + \"-strict -debug a.jar ca\")\n+                .shouldNotContain(\"chain is invalid\");\n+\n+        \/\/ An end-entity cert must follow algorithm constraints\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \"\n+                + \"-strict -debug a.jar signer\")\n+                .shouldContain(\"chain is invalid\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/WeakSize.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -1,80 +0,0 @@\n-#\n-# Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8036709\n-# @summary Java 7 jarsigner displays warning about cert policy tree\n-#\n-# @run shell certpolicy.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-KT=\"$TESTJAVA\/bin\/keytool $TESTTOOLVMOPTS \\\n-        -keypass changeit -storepass changeit -keystore ks -keyalg rsa\"\n-JS=\"$TESTJAVA\/bin\/jarsigner $TESTTOOLVMOPTS -storepass changeit -keystore ks\"\n-JAR=\"$TESTJAVA\/bin\/jar $TESTTOOLVMOPTS\"\n-\n-rm ks 2> \/dev\/null\n-$KT -genkeypair -alias ca -dname CN=CA -ext bc\n-$KT -genkeypair -alias int -dname CN=Int\n-$KT -genkeypair -alias ee -dname CN=EE\n-\n-# CertificatePolicies [[PolicyId: [1.2.3]], [PolicyId: [1.2.4]]]\n-# PolicyConstraints: [Require: 0; Inhibit: unspecified]\n-$KT -certreq -alias int | \\\n-        $KT -gencert -rfc -alias ca \\\n-                -ext 2.5.29.32=\"30 0C 30 04 06 02 2A 03 30 04 06 02 2A 04\" \\\n-                -ext \"2.5.29.36=30 03 80 01 00\" -ext bc | \\\n-        $KT -import -alias int\n-\n-# CertificatePolicies [[PolicyId: [1.2.3]]]\n-$KT -certreq -alias ee | \\\n-        $KT -gencert -rfc -alias int \\\n-                -ext 2.5.29.32=\"30 06 30 04 06 02 2A 03\" | \\\n-        $KT -import -alias ee\n-\n-$KT -export -alias ee -rfc > cc\n-$KT -export -alias int -rfc >> cc\n-$KT -export -alias ca -rfc >> cc\n-\n-$KT -delete -alias int\n-\n-ERR=''\n-$JAR cvf a.jar cc\n-\n-# Make sure the certchain in the signed jar contains all 3 certs\n-$JS -strict -certchain cc a.jar ee -debug || ERR=\"sign\"\n-$JS -strict -verify a.jar -debug || ERR=\"$ERR verify\"\n-\n-if [ \"$ERR\" = \"\" ]; then\n-    echo \"Success\"\n-    exit 0\n-else\n-    echo \"Failed: $ERR\"\n-    exit 1\n-fi\n-\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/certpolicy.sh","additions":0,"deletions":80,"binary":false,"changes":80,"status":"deleted"},{"patch":"@@ -1,109 +0,0 @@\n-#\n-# Copyright (c) 2010, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 7004168\n-# @summary jarsigner -verify checks for KeyUsage codesigning ext on all certs\n-#  instead of just signing cert\n-#\n-# @run shell checkusage.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keyalg rsa\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS}\"\n-\n-rm js.jks trust.jks unrelated.jks 2> \/dev\/null\n-\n-echo x > x\n-$JAR cvf a.jar x\n-\n-################### 3 Keystores #######################\n-\n-# Keystore js.jks: including CA and Publisher\n-# CA contains a non-empty KeyUsage\n-$KT -keystore js.jks -genkeypair -alias ca -dname CN=CA -ext KU=kCS -ext bc -validity 365\n-$KT -keystore js.jks -genkeypair -alias pub -dname CN=Publisher\n-\n-# Publisher contains the correct KeyUsage\n-$KT -keystore js.jks -certreq -alias pub | \\\n-        $KT -keystore js.jks -gencert -alias ca -ext KU=dig -validity 365 | \\\n-        $KT -keystore js.jks -importcert -alias pub\n-\n-# Keystore trust.jks: including CA only\n-$KT -keystore js.jks -exportcert -alias ca | \\\n-        $KT -keystore trust.jks -importcert -alias ca -noprompt\n-\n-# Keystore unrelated.jks: unrelated\n-$KT -keystore unrelated.jks -genkeypair -alias nothing -dname CN=Nothing -validity 365\n-\n-\n-################### 4 Tests #######################\n-\n-# Test 1: Sign should be OK\n-\n-$JARSIGNER -keystore js.jks -storepass changeit a.jar pub\n-RESULT=$?\n-echo $RESULT\n-#[ $RESULT = 0 ] || exit 1\n-\n-# Test 2: Verify should be OK\n-\n-$JARSIGNER -keystore trust.jks -strict -verify a.jar\n-RESULT=$?\n-echo $RESULT\n-#[ $RESULT = 0 ] || exit 2\n-\n-# Test 3: When no keystore is specified, the error is only\n-# \"chain invalid\"\n-\n-$JARSIGNER -strict -verify a.jar\n-RESULT=$?\n-echo $RESULT\n-#[ $RESULT = 4 ] || exit 3\n-\n-# Test 4: When unrelated keystore is specified, the error is\n-# \"chain invalid\" and \"not alias in keystore\"\n-\n-$JARSIGNER -keystore unrelated.jks -strict -verify a.jar\n-RESULT=$?\n-echo $RESULT\n-#[ $RESULT = 36 ] || exit 4\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/checkusage.sh","additions":0,"deletions":109,"binary":false,"changes":109,"status":"deleted"},{"patch":"@@ -1,74 +0,0 @@\n-#\n-# Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8021789\n-# @summary jarsigner parses alias as command line option (depending on locale)\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-F=collator\n-KS=collator.jks\n-JFILE=collator.jar\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit \\\n-        -keyalg rsa -keystore $KS\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -keystore $KS -storepass changeit\"\n-\n-rm $F $KS $JFILE 2> \/dev\/null\n-\n-echo 12345 > $F\n-$JAR cvf $JFILE $F\n-\n-ERR=\"\"\n-\n-$KT -alias debug -dname CN=debug -genkey -validity 300 || ERR=\"$ERR 1\"\n-\n-# use \"debug\" as alias name\n-$JARSIGNER $JFILE debug || ERR=\"$ERR 2\"\n-\n-# use \"\" as alias name (although there will be a warning)\n-$JARSIGNER -verify $JFILE \"\" || ERR=\"$ERR 3\"\n-\n-if [ \"$ERR\" = \"\" ]; then\n-    exit 0\n-else\n-    echo \"ERR is $ERR\"\n-    exit 1\n-fi\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/collator.sh","additions":0,"deletions":74,"binary":false,"changes":74,"status":"deleted"},{"patch":"@@ -1,247 +0,0 @@\n-#\n-# Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6802846 8172529 8227758 8260960\n-# @summary jarsigner needs enhanced cert validation(options)\n-#\n-# @run shell\/timeout=240 concise_jarsigner.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-# Choose 2048-bit RSA to make sure it runs fine and fast on all platforms. In\n-# fact, every keyalg\/keysize combination is OK for this test.\n-\n-TESTTOOLVMOPTS=\"$TESTTOOLVMOPTS -J-Duser.language=en -J-Duser.country=US\"\n-\n-KS=js.ks\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keystore $KS -keyalg rsa -keysize 2048\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -debug\"\n-JAVAC=\"$TESTJAVA${FS}bin${FS}javac ${TESTTOOLVMOPTS} ${TESTJAVACOPTS}\"\n-\n-rm $KS\n-\n-echo class A1 {} > A1.java\n-echo class A2 {} > A2.java\n-echo class A3 {} > A3.java\n-echo class A4 {} > A4.java\n-echo class A5 {} > A5.java\n-echo class A6 {} > A6.java\n-\n-$JAVAC A1.java A2.java A3.java A4.java A5.java A6.java\n-YEAR=`date +%Y`\n-\n-# ==========================================================\n-# First part: output format\n-# ==========================================================\n-\n-$KT -genkeypair -alias a1 -dname CN=a1 -validity 366\n-$KT -genkeypair -alias a2 -dname CN=a2 -validity 366\n-\n-# a.jar includes 8 unsigned, 2 signed by a1 and a2, 2 signed by a3\n-$JAR cvf a.jar A1.class A2.class\n-$JARSIGNER -keystore $KS -storepass changeit a.jar a1\n-$JAR uvf a.jar A3.class A4.class\n-$JARSIGNER -keystore $KS -storepass changeit a.jar a2\n-$JAR uvf a.jar A5.class A6.class\n-\n-# Verify OK\n-$JARSIGNER -verify a.jar\n-[ $? = 0 ] || exit $LINENO\n-\n-# 4(chainNotValidated)+16(hasUnsignedEntry)\n-$JARSIGNER -verify a.jar -strict\n-[ $? = 20 ] || exit $LINENO\n-\n-# 16(hasUnsignedEntry)\n-$JARSIGNER -verify a.jar -strict -keystore $KS -storepass changeit\n-[ $? = 16 ] || exit $LINENO\n-\n-# 16(hasUnsignedEntry)+32(notSignedByAlias)\n-$JARSIGNER -verify a.jar a1 -strict -keystore $KS -storepass changeit\n-[ $? = 48 ] || exit $LINENO\n-\n-# 16(hasUnsignedEntry)\n-$JARSIGNER -verify a.jar a1 a2 -strict -keystore $KS -storepass changeit\n-[ $? = 16 ] || exit $LINENO\n-\n-# 12 entries all together\n-LINES=`$JARSIGNER -verify a.jar -verbose | grep $YEAR | wc -l`\n-[ $LINES = 12 ] || exit $LINENO\n-\n-# 12 entries all listed\n-LINES=`$JARSIGNER -verify a.jar -verbose:grouped | grep $YEAR | wc -l`\n-[ $LINES = 12 ] || exit $LINENO\n-\n-# 5 groups: MANIFEST, signature related entries, directory entries,\n-# signed entries, and unsigned entries.\n-LINES=`$JARSIGNER -verify a.jar -verbose:summary | grep $YEAR | wc -l`\n-[ $LINES = 5 ] || exit $LINENO\n-\n-# still 5 groups, but MANIFEST group and directory entry group\n-# have no other file\n-LINES=`$JARSIGNER -verify a.jar -verbose:summary | grep \"more)\" | wc -l`\n-[ $LINES = 3 ] || exit $LINENO\n-\n-# 6 groups: MANIFEST, signature related entries, directory entries,\n-# signed entries by a1\/a2, signed entries by a2, and unsigned entries.\n-LINES=`$JARSIGNER -verify a.jar -verbose:summary -certs | grep $YEAR | wc -l`\n-[ $LINES = 6 ] || exit $LINENO\n-\n-# 2 for MANIFEST, 2*2 for A1\/A2, 2 for A3\/A4\n-LINES=`$JARSIGNER -verify a.jar -verbose -certs | grep \"\\[certificate\" | wc -l`\n-[ $LINES = 8 ] || exit $LINENO\n-\n-# a1,a2 for MANIFEST, a1,a2 for A1\/A2, a2 for A3\/A4\n-LINES=`$JARSIGNER -verify a.jar -verbose:grouped -certs | grep \"\\[certificate\" | wc -l`\n-[ $LINES = 5 ] || exit $LINENO\n-\n-# a1,a2 for MANIFEST, a1,a2 for A1\/A2, a2 for A3\/A4\n-LINES=`$JARSIGNER -verify a.jar -verbose:summary -certs | grep \"\\[certificate\" | wc -l`\n-[ $LINES = 5 ] || exit $LINENO\n-\n-# still 6 groups, but MANIFEST group and directory entry group\n-# have no other file\n-LINES=`$JARSIGNER -verify a.jar -verbose:summary -certs | grep \"more)\" | wc -l`\n-[ $LINES = 4 ] || exit $LINENO\n-\n-# ==========================================================\n-# Second part: exit code 2, 4, 8.\n-# 16 and 32 already covered in the first part\n-# ==========================================================\n-\n-$KT -genkeypair -alias ca -dname CN=ca -ext bc -validity 365\n-$KT -genkeypair -alias expired -dname CN=expired\n-$KT -certreq -alias expired | $KT -gencert -alias ca -startdate -10m | $KT -import -alias expired\n-$KT -genkeypair -alias notyetvalid -dname CN=notyetvalid\n-$KT -certreq -alias notyetvalid | $KT -gencert -alias ca -startdate +1m | $KT -import -alias notyetvalid\n-$KT -genkeypair -alias badku -dname CN=badku\n-$KT -certreq -alias badku | $KT -gencert -alias ca -ext KU=cRLSign -validity 365 | $KT -import -alias badku\n-$KT -genkeypair -alias badeku -dname CN=badeku\n-$KT -certreq -alias badeku | $KT -gencert -alias ca -ext EKU=sa -validity 365 | $KT -import -alias badeku\n-$KT -genkeypair -alias goodku -dname CN=goodku\n-$KT -certreq -alias goodku | $KT -gencert -alias ca -ext KU=dig -validity 365 | $KT -import -alias goodku\n-$KT -genkeypair -alias goodeku -dname CN=goodeku\n-$KT -certreq -alias goodeku | $KT -gencert -alias ca -ext EKU=codesign -validity 365 | $KT -import -alias goodeku\n-\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar expired\n-[ $? = 4 ] || exit $LINENO\n-\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar notyetvalid\n-[ $? = 4 ] || exit $LINENO\n-\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar badku\n-[ $? = 8 ] || exit $LINENO\n-\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar badeku\n-[ $? = 8 ] || exit $LINENO\n-\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar goodku\n-[ $? = 0 ] || exit $LINENO\n-\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar goodeku\n-[ $? = 0 ] || exit $LINENO\n-\n-# badchain signed by ca1, but ca1 is removed later\n-$KT -genkeypair -alias badchain -dname CN=badchain -validity 365\n-$KT -genkeypair -alias ca1 -dname CN=ca1 -ext bc -validity 365\n-$KT -certreq -alias badchain | $KT -gencert -alias ca1 -validity 365 | \\\n-        $KT -importcert -alias badchain\n-# save ca1.cert for easy replay\n-$KT -exportcert -file ca1.cert -alias ca1\n-$KT -delete -alias ca1\n-\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar badchain\n-[ $? = 4 ] || exit $LINENO\n-\n-$JARSIGNER -verify a.jar\n-[ $? = 0 ] || exit $LINENO\n-\n-# ==========================================================\n-# Third part: -certchain test\n-# ==========================================================\n-\n-# altchain signed by ca2\n-$KT -genkeypair -alias altchain -dname CN=altchain -validity 365\n-$KT -genkeypair -alias ca2 -dname CN=ca2 -ext bc -validity 365\n-$KT -certreq -alias altchain | $KT -gencert -alias ca2 -validity 365 -rfc > certchain\n-$KT -exportcert -alias ca2 -rfc >> certchain\n-\n-# Self-signed cert does not work\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar altchain\n-[ $? = 4 ] || exit $LINENO\n-\n-# -certchain works\n-$JARSIGNER -strict -keystore $KS -storepass changeit -certchain certchain a.jar altchain\n-[ $? = 0 ] || exit $LINENO\n-\n-# if ca2 is removed and cert is imported, -certchain won't work because this certificate\n-# entry is not trusted\n-# save ca2.cert for easy replay\n-$KT -exportcert -file ca2.cert -alias ca2\n-$KT -delete -alias ca2\n-$KT -importcert -file certchain -alias altchain -noprompt\n-$JARSIGNER -strict -keystore $KS -storepass changeit -certchain certchain a.jar altchain\n-[ $? = 4 ] || exit $LINENO\n-\n-$JARSIGNER -verify a.jar\n-[ $? = 0 ] || exit $LINENO\n-\n-# ==========================================================\n-# 8172529\n-# ==========================================================\n-\n-$KT -genkeypair -alias ee -dname CN=ee\n-$KT -genkeypair -alias caone -dname CN=caone -ext bc:c\n-$KT -genkeypair -alias catwo -dname CN=catwo -ext bc:c\n-\n-$KT -certreq -alias ee | $KT -gencert -alias catwo -rfc > ee.cert\n-$KT -certreq -alias catwo | $KT -gencert -alias caone -sigalg MD5withRSA -rfc > catwo.cert\n-\n-# This certchain contains a cross-signed weak catwo.cert\n-cat ee.cert catwo.cert | $KT -importcert -alias ee\n-\n-$JAR cvf a.jar A1.class\n-$JARSIGNER -strict -keystore $KS -storepass changeit a.jar ee\n-[ $? = 0 ] || exit $LINENO\n-$JARSIGNER -strict -keystore $KS -storepass changeit -verify a.jar\n-[ $? = 0 ] || exit $LINENO\n-\n-echo OK\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/concise_jarsigner.sh","additions":0,"deletions":247,"binary":false,"changes":247,"status":"deleted"},{"patch":"@@ -1,71 +0,0 @@\n-#\n-# Copyright (c) 2010, 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6890876 6950931\n-# @summary jarsigner can add CRL info into signed jar (updated)\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=crl.jks\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keystore $KS -keyalg rsa\"\n-\n-rm $KS 2> \/dev\/null\n-\n-# Test keytool -gencrl\n-\n-$KT -alias a -dname CN=a -keyalg rsa -genkey -validity 300\n-$KT -alias a -gencrl -id 1:1 -id 2:2 -file crl1 || exit 1\n-$KT -alias a -gencrl -id 3:3 -id 4:4 -file crl2 || exit 2\n-$KT -alias a -gencrl -id 5:1 -id 6:2 -file crl3 || exit 4\n-\n-# Test keytool -printcrl\n-\n-$KT -printcrl -file crl1 || exit 5\n-$KT -printcrl -file crl2 || exit 6\n-$KT -printcrl -file crl3 || exit 7\n-\n-\n-# Test keytool -ext crl\n-\n-$KT -alias b -dname CN=c -keyalg rsa -genkey -validity 300 \\\n-    -ext crl=uri:http:\/\/www.example.com\/crl || exit 10\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/crl.sh","additions":0,"deletions":71,"binary":false,"changes":71,"status":"deleted"},{"patch":"@@ -1,68 +0,0 @@\n-#\n-# Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8049834\n-# @summary Two security tools tests do not run with only JRE\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-PASS=changeit\n-export PASS\n-\n-TESTTOOLVMOPTS=\"$TESTTOOLVMOPTS -J-Duser.language=en -J-Duser.country=US\"\n-\n-KS=ks\n-KEYTOOL=\"$TESTJAVA\/bin\/keytool ${TESTTOOLVMOPTS} -storepass:env PASS -keypass:env PASS -keystore $KS\"\n-JAR=\"$TESTJAVA\/bin\/jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA\/bin\/jarsigner ${TESTTOOLVMOPTS}\"\n-\n-rm $KS 2> \/dev\/null\n-\n-$KEYTOOL -genkeypair -dname CN=A -alias a -keyalg rsa || exit 1\n-$KEYTOOL -genkeypair -dname CN=CA -alias ca -keyalg rsa -ext bc:c || exit 2\n-$KEYTOOL -alias a -certreq |\n-    $KEYTOOL -alias ca -gencert |\n-    $KEYTOOL -alias a -import || exit 3\n-\n-cat <<EOF > js.conf\n-jarsigner.all = -keystore \\${user.dir}\/$KS -storepass:env PASS -debug -strict\n-jarsigner.sign = -digestalg SHA-512\n-jarsigner.verify = -verbose:summary\n-\n-EOF\n-\n-$JAR cvf a.jar ks js.conf\n-\n-$JARSIGNER -conf js.conf a.jar a || exit 21\n-$JARSIGNER -conf js.conf -verify a.jar > jarsigner.out || exit 22\n-grep \"and 1 more\" jarsigner.out || exit 23\n-$JAR xvf a.jar META-INF\/MANIFEST.MF\n-grep \"SHA-512-Digest\" META-INF\/MANIFEST.MF || exit 24\n-\n-echo Done\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/default_options.sh","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -1,110 +0,0 @@\n-#\n-# Copyright (c) 2010, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6948909\n-# @summary Jarsigner removes MANIFEST.MF info for badly packages jar's\n-#\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-  TESTCLASSES=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    CP=\"${FS}bin${FS}cp -f\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    CP=\"cp -f\"\n-    ;;\n-  Windows_* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    CP=\"cp -f\"\n-    ;;\n-  * )\n-    echo \"Unrecognized operating system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-echo 1 > 1\n-mkdir META-INF\n-\n-# Create a fake .RSA file so that jarsigner believes it's signed\n-\n-touch META-INF\/x.RSA\n-\n-# A MANIFEST.MF using \\n as newlines and no double newlines at the end\n-\n-cat > META-INF\/MANIFEST.MF <<EOF\n-Manifest-Version: 1.0\n-Created-By: 1.7.0-internal (Sun Microsystems Inc.)\n-Today: Monday\n-EOF\n-\n-# With the fake .RSA file, to trigger the if (wasSigned) block\n-\n-rm diffend.jar\n-zip diffend.jar META-INF\/MANIFEST.MF META-INF\/x.RSA 1\n-\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -digestalg SHA1 \\\n-    -signedjar diffend.new.jar \\\n-    diffend.jar c\n-\n-unzip -p diffend.new.jar META-INF\/MANIFEST.MF | grep Today || exit 1\n-\n-# Without the fake .RSA file, to trigger the else block\n-\n-rm diffend.jar\n-zip diffend.jar META-INF\/MANIFEST.MF 1\n-\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -digestalg SHA1 \\\n-    -signedjar diffend.new.jar \\\n-    diffend.jar c\n-\n-unzip -p diffend.new.jar META-INF\/MANIFEST.MF | grep Today || exit 2\n-\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/diffend.sh","additions":0,"deletions":110,"binary":false,"changes":110,"status":"deleted"},{"patch":"@@ -1,83 +0,0 @@\n-#\n-# Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6870812\n-# @summary enhance security tools to use ECC algorithm\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=ec.jks\n-JFILE=ec.jar\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keystore $KS\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS}\"\n-\n-rm $KS $JFILE\n-echo A > A\n-$JAR cvf $JFILE A\n-\n-$KT -alias ca -dname CN=ca -keyalg ec -genkey -validity 300 -ext bc:c || exit 11\n-\n-$KT -alias a -dname CN=a -keyalg ec -genkey || exit 11\n-$KT -alias a -certreq | $KT -gencert -alias ca -validity 300 | $KT -import -alias a || exit 111\n-\n-$KT -alias b -dname CN=b -keyalg ec -genkey || exit 12\n-$KT -alias b -certreq | $KT -gencert -alias ca -validity 300 | $KT -import -alias b || exit 121\n-\n-# Ensure that key length is sufficient for the intended hash (SHA512withECDSA)\n-$KT -alias c -dname CN=c -keyalg ec -genkey -keysize 521 || exit 13\n-$KT -alias c -certreq | $KT -gencert -alias ca -validity 300 | $KT -import -alias c || exit 131\n-\n-$KT -alias x -dname CN=x -keyalg ec -genkey -validity 300 || exit 14\n-$KT -alias x -certreq | $KT -gencert -alias ca -validity 300 | $KT -import -alias x || exit 141\n-\n-$JARSIGNER -keystore $KS -storepass changeit $JFILE a -debug -strict || exit 21\n-$JARSIGNER -keystore $KS -storepass changeit $JFILE b -debug -strict -sigalg SHA256withECDSA || exit 22\n-$JARSIGNER -keystore $KS -storepass changeit $JFILE c -debug -strict -sigalg SHA512withECDSA || exit 23\n-\n-$JARSIGNER -keystore $KS -storepass changeit -verify $JFILE a -debug -strict || exit 31\n-$JARSIGNER -keystore $KS -storepass changeit -verify $JFILE b -debug -strict || exit 32\n-$JARSIGNER -keystore $KS -storepass changeit -verify $JFILE c -debug -strict || exit 33\n-\n-# Not signed by x, should exit with non-zero\n-$JARSIGNER -keystore $KS -storepass changeit -verify $JFILE x -debug -strict && exit 34\n-\n-exit 0\n-\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/ec.sh","additions":0,"deletions":83,"binary":false,"changes":83,"status":"deleted"},{"patch":"@@ -1,76 +0,0 @@\n-#\n-# Copyright (c) 2009, 2014, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6712755\n-# @summary jarsigner fails to sign itextasian.jar since 1.5.0_b14, it works with 1.5.0_13\n-#\n-# @run shell emptymanifest.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=emptymanifest.ks\n-JFILE=em.jar\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keystore $KS\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JAVA=\"$TESTJAVA${FS}bin${FS}java ${TESTVMOPTS}\"\n-JAVAC=\"$TESTJAVA${FS}bin${FS}javac ${TESTTOOLVMOPTS} ${TESTJAVACOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -keystore $KS -storepass changeit\"\n-\n-rm $KS $JFILE\n-echo A > A\n-echo B > B\n-mkdir META-INF\n-cat <<EOF > CrLf.java\n-class CrLf {\n-  public static void main(String[] args) throws Exception {\n-    System.out.write(new byte[] {'\\r', '\\n'});\n-  }\n-}\n-EOF\n-$JAVAC CrLf.java\n-$JAVA CrLf > META-INF${FS}MANIFEST.MF\n-zip $JFILE META-INF${FS}MANIFEST.MF A B\n-\n-$KT -alias a -dname CN=a -keyalg rsa -genkey -validity 300\n-\n-$JARSIGNER $JFILE a || exit 1\n-$JARSIGNER -verify -debug -strict $JFILE || exit 2\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/emptymanifest.sh","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -1,74 +0,0 @@\n-#\n-# Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8022761\n-# @summary regression: SecurityException is NOT thrown while trying to pack a wrongly signed Indexed Jar file\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-F=abcde\n-KS=jvindex.jks\n-JFILE=jvindex.jar\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit \\\n-        -keystore $KS -keyalg rsa\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -keystore $KS -storepass changeit\"\n-\n-rm $F $KS $JFILE 2> \/dev\/null\n-\n-echo 12345 > $F\n-$JAR cvf $JFILE $F\n-\n-ERR=\"\"\n-\n-$KT -alias a -dname CN=a -genkey -validity 300 || ERR=\"$ERR 1\"\n-\n-$JARSIGNER $JFILE a || ERR=\"$ERR 2\"\n-$JAR i $JFILE\n-\n-# Make sure the $F line has \"sm\" (signed and in manifest)\n-$JARSIGNER -verify -verbose $JFILE | grep $F | grep sm || ERR=\"$ERR 3\"\n-\n-if [ \"$ERR\" = \"\" ]; then\n-    exit 0\n-else\n-    echo \"ERR is $ERR\"\n-    exit 1\n-fi\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/jvindex.sh","additions":0,"deletions":74,"binary":false,"changes":74,"status":"deleted"},{"patch":"@@ -1,65 +0,0 @@\n-#\n-# Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6876328\n-# @summary different names for the same digest algorithms breaks jarsigner\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=nc.ks\n-JFILE=nc.jar\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keystore $KS\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -keystore $KS -storepass changeit\"\n-\n-rm $KS $JFILE\n-\n-$KT -alias a -dname CN=a -keyalg rsa -genkey -validity 300\n-$KT -alias b -dname CN=b -keyalg rsa -genkey -validity 300\n-\n-echo A > A\n-$JAR cvf $JFILE A\n-\n-$JARSIGNER $JFILE a -digestalg SHA-256 || exit 1\n-$JARSIGNER $JFILE b -digestalg SHA-256 || exit 2\n-\n-$JARSIGNER -verify -debug -strict $JFILE || exit 3\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/nameclash.sh","additions":0,"deletions":65,"binary":false,"changes":65,"status":"deleted"},{"patch":"@@ -1,73 +0,0 @@\n-#\n-# Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6561126\n-# @summary keytool should use larger default keysize for keypairs\n-#\n-# @run shell newsize7.sh\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-   TESTSRC=\".\"\n-fi\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVA_CMD=`which java`\n-  TESTJAVA=`dirname $JAVA_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KSFILE=ns7.jks\n-\n-KT=\"${TESTJAVA}${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -keystore ns7.jks -storepass changeit -keypass changeit -keyalg rsa\"\n-JAR=\"${TESTJAVA}${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JS=\"${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -keystore ns7.jks -storepass changeit\"\n-\n-rm ns7.*\n-\n-$KT -genkeypair -alias me -dname CN=Me\n-\n-touch ns7.txt\n-$JAR cvf ns7.jar ns7.txt\n-\n-$JS ns7.jar me\n-$JAR xvf ns7.jar\n-\n-grep SHA-256 META-INF\/MANIFEST.MF || exit 1\n-grep SHA-256 META-INF\/ME.SF || exit 2\n-\n-#rm -rf META-INF\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/newsize7.sh","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -1,79 +0,0 @@\n-#\n-# Copyright (c) 2007, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6543940 6868865\n-# @summary Exception thrown when signing a jarfile in java 1.5\n-#\n-# @run shell oldsig.sh\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-  TESTCLASSES=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    CP=\"${FS}bin${FS}cp -f\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    CP=\"cp -f\"\n-    ;;\n-  Windows_* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    CP=\"cp -f\"\n-    ;;\n-  * )\n-    echo \"Unrecognized operating system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-# copy jar file into writeable location\n-${CP} ${TESTSRC}${FS}oldsig${FS}A.jar B.jar\n-${CP} ${TESTSRC}${FS}oldsig${FS}A.class B.class\n-\n-${TESTJAVA}${FS}bin${FS}jar ${TESTTOOLVMOPTS} uvf B.jar B.class\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} \\\n-    -keystore ${TESTSRC}${FS}JarSigning.keystore \\\n-    -storepass bbbbbb \\\n-    -digestalg SHA1 \\\n-    B.jar c\n-${TESTJAVA}${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS} -verify B.jar\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/oldsig.sh","additions":0,"deletions":79,"binary":false,"changes":79,"status":"deleted"},{"patch":"@@ -1,70 +0,0 @@\n-#\n-# Copyright (c) 2010, 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 7004035\n-# @summary signed jar with only META-INF\/* inside is not verifiable\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=onlymanifest.jks\n-JFILE=onlymanifest.jar\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit \\\n-        -keystore $KS -keyalg rsa\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS}\"\n-\n-rm $KS $JFILE 2> \/dev\/null\n-\n-# Create an empty jar file with only MANIFEST.MF\n-\n-echo \"Key: Value\" > manifest\n-$JAR cvfm $JFILE manifest\n-\n-$KT -alias ca -dname CN=ca -genkey -validity 300 -ext bc:c || exit 1\n-$KT -alias a -dname CN=a -genkey -validity 300 || exit 2\n-$KT -alias a -certreq | $KT -gencert -alias ca -validity 300 | $KT -import -alias a || exit 3\n-$JARSIGNER -keystore $KS -storepass changeit $JFILE a -debug -strict || exit 4\n-$JARSIGNER -keystore $KS -storepass changeit -verify $JFILE a -debug -strict \\\n-        > onlymanifest.out || exit 5\n-\n-grep unsigned onlymanifest.out && exit 6\n-\n-exit 0\n-\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/onlymanifest.sh","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -1,76 +0,0 @@\n-#\n-# Copyright (c) 2009, 2014, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6868579\n-# @summary RFE: jarsigner to support reading password from environment variable\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=pt.ks\n-JFILE=pt.jar\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -keystore $KS -validity 300 -keyalg rsa\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS}\"\n-\n-rm $KS $JFILE\n-\n-$KT -alias a -dname CN=a -keyalg rsa -genkey \\\n-        -storepass test12 -keypass test12 || exit 1\n-PASSENV=test12 $KT -alias b -dname CN=b -keyalg rsa -genkey \\\n-        -storepass:env PASSENV -keypass:env PASSENV || exit 2\n-echo test12 > passfile\n-$KT -alias c -dname CN=c -keyalg rsa -genkey \\\n-        -storepass:file passfile -keypass:file passfile || exit 3\n-\n-echo A > A\n-$JAR cvf $JFILE A\n-\n-# Sign\n-$JARSIGNER -keystore $KS -storepass test12 $JFILE a || exit 4\n-PASSENV=test12 $JARSIGNER -keystore $KS -storepass:env PASSENV $JFILE b || exit 5\n-$JARSIGNER -keystore $KS -storepass:file passfile $JFILE b || exit 6\n-\n-# Verify\n-$JARSIGNER -keystore $KS -storepass test12 -verify -debug -strict $JFILE || exit 7\n-PASSENV=test12 $JARSIGNER -keystore $KS -storepass:env PASSENV -verify -debug -strict $JFILE || exit 8\n-$JARSIGNER -keystore $KS -storepass:file passfile -verify -debug -strict $JFILE || exit 9\n-\n-exit 0\n-\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/passtype.sh","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -1,61 +0,0 @@\n-#\n-# Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6866479\n-# @summary libzip.so caused JVM to crash when running jarsigner\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* | CYGWIN* )\n-    SIGNEDJAR=EM.jar\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    SIGNEDJAR=em.jar\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=samename.jks\n-JFILE=em.jar\n-\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keystore $KS -keyalg rsa\"\n-JAR=\"$TESTJAVA${FS}bin${FS}jar ${TESTTOOLVMOPTS}\"\n-JARSIGNER=\"$TESTJAVA${FS}bin${FS}jarsigner ${TESTTOOLVMOPTS}\"\n-\n-rm $KS $JFILE $SIGNEDJAR\n-echo A > A\n-$JAR cvf $JFILE A\n-\n-$KT -alias a -dname CN=a -keyalg rsa -genkey -validity 300\n-\n-$JARSIGNER -keystore $KS -storepass changeit -signedjar $SIGNEDJAR $JFILE a\n-\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/samename.sh","additions":0,"deletions":61,"binary":false,"changes":61,"status":"deleted"},{"patch":"@@ -1,62 +0,0 @@\n-#\n-# Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8044755\n-# @summary Add a test for algorithm constraints check in jarsigner\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-TESTTOOLVMOPTS=\"$TESTTOOLVMOPTS -J-Duser.language=en -J-Duser.country=US\"\n-\n-# The sigalg used is MD2withRSA, which is obsolete.\n-\n-KT=\"$TESTJAVA\/bin\/keytool ${TESTTOOLVMOPTS} -keystore ks\n-    -storepass changeit -keypass changeit\n-    -keyalg rsa -sigalg MD2withRSA -debug\"\n-JS=\"$TESTJAVA\/bin\/jarsigner ${TESTTOOLVMOPTS} -keystore ks\n-    -storepass changeit -strict -debug\"\n-JAR=\"$TESTJAVA\/bin\/jar ${TESTTOOLVMOPTS}\"\n-\n-rm ks 2> \/dev\/null\n-\n-$KT -genkeypair -alias ca -dname CN=CA -ext bc\n-$KT -genkeypair -alias signer -dname CN=Signer\n-\n-$KT -certreq -alias signer | \\\n-        $KT -gencert -alias ca -ext ku=dS -rfc | \\\n-        $KT -importcert -alias signer\n-\n-$JAR cvf a.jar ks\n-\n-# We always trust a TrustedCertificateEntry\n-$JS a.jar ca | grep \"chain is invalid\" && exit 1\n-\n-# An end-entity cert must follow algorithm constraints\n-$JS a.jar signer | grep \"chain is invalid\" || exit 2\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/weaksize.sh","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6178366\n+ * @library \/test\/lib\n+ * @summary confirm that keytool correctly finds (and clones) a private key\n+ *          when the user is prompted for the key's password.\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.SecurityTools;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStore;\n+\n+public class CloneKeyAskPassword {\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/ Different storepass and keypass\n+        Files.copy(Path.of(\n+                    System.getProperty(\"test.src\"), \"CloneKeyAskPassword.jks\"),\n+                Path.of(\"CloneKeyAskPassword.jks\"));\n+\n+        \/\/ Clone with original keypass\n+        SecurityTools.setResponse(\"test456\", \"\");\n+        SecurityTools.keytool(\n+                \"-keyclone\",\n+                \"-alias\", \"mykey\",\n+                \"-dest\", \"myclone1\",\n+                \"-keystore\", \"CloneKeyAskPassword.jks\",\n+                \"-storepass\", \"test123\").shouldHaveExitValue(0);\n+\n+        \/\/ Clone with new keypass\n+        SecurityTools.setResponse(\"test456\", \"test789\", \"test789\");\n+        SecurityTools.keytool(\n+                \"-keyclone\",\n+                \"-alias\", \"mykey\",\n+                \"-dest\", \"myclone2\",\n+                \"-keystore\", \"CloneKeyAskPassword.jks\",\n+                \"-storepass\", \"test123\").shouldHaveExitValue(0);\n+\n+        KeyStore ks = KeyStore.getInstance(\n+                new File(\"CloneKeyAskPassword.jks\"), \"test123\".toCharArray());\n+        Asserts.assertNotNull(ks.getKey(\"myclone1\", \"test456\".toCharArray()));\n+        Asserts.assertNotNull(ks.getKey(\"myclone2\", \"test789\".toCharArray()));\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/CloneKeyAskPassword.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -1,94 +0,0 @@\n-#\n-# Copyright (c) 2004, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6178366\n-# @summary confirm that keytool correctly finds (and clones) a private key\n-#          when the user is prompted for the key's password.\n-#\n-# @run shell CloneKeyAskPassword.sh\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-   TESTSRC=\".\"\n-fi\n-\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-   TESTCLASSES=\".\"\n-fi\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-   echo \"TESTJAVA not set.  Test cannot execute.\"\n-   echo \"FAILED!!!\"\n-   exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS )\n-    PATHSEP=\":\"\n-    FILESEP=\"\/\"\n-    ;;\n-  Linux )\n-    PATHSEP=\":\"\n-    FILESEP=\"\/\"\n-    ;;\n-  Darwin )\n-    PATHSEP=\":\"\n-    FILESEP=\"\/\"\n-    ;;\n-  AIX )\n-    PATHSEP=\":\"\n-    FILESEP=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    PATHSEP=\";\"\n-    FILESEP=\"\/\"\n-    ;;\n-  Windows* )\n-    PATHSEP=\";\"\n-    FILESEP=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-# get a writeable keystore\n-cp ${TESTSRC}${FILESEP}CloneKeyAskPassword.jks .\n-chmod 644 CloneKeyAskPassword.jks\n-\n-# run the test: attempt to clone the private key\n-${TESTJAVA}${FILESEP}bin${FILESEP}keytool ${TESTTOOLVMOPTS} \\\n-        -keyclone \\\n-        -alias mykey \\\n-        -dest myclone \\\n-        -keystore CloneKeyAskPassword.jks \\\n-        -storepass test123 <<EOF\n-test456\n-EOF\n-\n-exit $?\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/CloneKeyAskPassword.sh","additions":0,"deletions":94,"binary":false,"changes":94,"status":"deleted"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8023197\n+ * @summary Pre-configured command line options for keytool and jarsigner\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+\n+public class DefaultOptions {\n+\n+    public static void main(String[] args) throws Throwable {\n+\n+        Files.write(Path.of(\"kt.conf\"), List.of(\n+                \"# A Pre-configured options file\",\n+                \"keytool.all = -storepass:env PASS -keypass:env PASS \"\n+                        + \"-keystore ${user.dir}\/ks -debug\",\n+                \"keytool.genkey = -keyalg ec -ext bc\",\n+                \"keytool.delete = -keystore nothing\"));\n+\n+        \/\/ kt.conf is read\n+        keytool(\"-conf kt.conf -genkeypair -dname CN=A -alias a\")\n+                .shouldHaveExitValue(0);\n+        keytool(\"-conf kt.conf -list -alias a -v\")\n+                .shouldHaveExitValue(0)\n+                .shouldMatch(\"Signature algorithm name.*ECDSA\")\n+                .shouldContain(\"BasicConstraints\");\n+\n+        \/\/ kt.conf is read, and dup multi-valued options processed as expected\n+        keytool(\"-conf kt.conf -genkeypair -dname CN=B -alias b -ext ku=ds\")\n+                .shouldHaveExitValue(0);\n+        keytool(\"-conf kt.conf -list -alias b -v\")\n+                .shouldHaveExitValue(0)\n+                .shouldContain(\"BasicConstraints\")\n+                .shouldContain(\"DigitalSignature\");\n+\n+        \/\/ Single-valued option in command section override all\n+        keytool(\"-conf kt.conf -delete -alias a\")\n+                .shouldNotHaveExitValue(0);\n+\n+        \/\/ Single-valued option on command line overrides again\n+        keytool(\"-conf kt.conf -delete -alias b -keystore ks\")\n+                .shouldHaveExitValue(0);\n+\n+        \/\/ Error cases\n+\n+        \/\/ File does not exist\n+        keytool(\"-conf no-such-file -help -list\")\n+                .shouldNotHaveExitValue(0);\n+\n+        \/\/ Cannot have both standard name (-genkeypair) and legacy name (-genkey)\n+        Files.write(Path.of(\"bad.conf\"), List.of(\n+                \"keytool.all = -storepass:env PASS -keypass:env PASS -keystore ks\",\n+                \"keytool.genkeypair = -keyalg rsa\",\n+                \"keytool.genkey = -keyalg ec\"));\n+\n+        keytool(\"-conf bad.conf -genkeypair -alias me -dname cn=me\")\n+                .shouldNotHaveExitValue(0);\n+\n+        \/\/ Unknown options are rejected by tool\n+        Files.write(Path.of(\"bad.conf\"), List.of(\n+                \"keytool.all=-unknown\"));\n+\n+        keytool(\"-conf bad.conf -help -list\").shouldNotHaveExitValue(0);\n+\n+        \/\/ System property must be present\n+        Files.write(Path.of(\"bad.conf\"), List.of(\n+                \"keytool.all = -keystore ${no.such.prop}\"));\n+\n+        keytool(\"-conf bad.conf -help -list\").shouldNotHaveExitValue(0);\n+    }\n+\n+    \/\/ Run keytool with one environment variable PASS=changeit\n+    static OutputAnalyzer keytool(String cmd) throws Throwable {\n+        ProcessBuilder pb = SecurityTools.getProcessBuilder(\n+                \"keytool\", List.of(cmd.trim().split(\"\\\\s+\")));\n+        pb.environment().put(\"PASS\", \"changeit\");\n+        return ProcessTools.executeCommand(pb);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/DefaultOptions.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6847026\n+ * @summary keytool should be able to generate certreq and cert without subject name\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class EmptySubject{\n+    static final String KS = \"emptysubject.jks\";\n+    public static void main(String[] args) throws Exception {\n+        kt(\"-alias\", \"ca\", \"-dname\", \"CN=CA\", \"-genkeypair\");\n+        kt(\"-alias\", \"me\", \"-dname\", \"CN=Me\", \"-genkeypair\");\n+\n+        \/\/ When -dname is recognized, SAN must be specified, otherwise,\n+        \/\/ -printcert fails.\n+        kt(\"-alias\", \"me\", \"-certreq\", \"-dname\", \"\", \"-file\", \"me1.req\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-alias\", \"ca\", \"-gencert\",\n+                \"-infile\", \"me1.req\", \"-outfile\", \"me1.crt\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-printcert\", \"-file\", \"me1.crt\").shouldNotHaveExitValue(0);\n+\n+        kt(\"-alias\", \"me\", \"-certreq\", \"-file\", \"me2.req\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-alias\", \"ca\", \"-gencert\", \"-dname\", \"\",\n+                \"-infile\", \"me2.req\", \"-outfile\", \"me2.crt\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-printcert\", \"-file\", \"me2.crt\").shouldNotHaveExitValue(0);\n+\n+        kt(\"-alias\", \"me\", \"-certreq\", \"-dname\", \"\", \"-file\", \"me3.req\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-alias\", \"ca\", \"-gencert\", \"-ext\", \"san:c=email:me@me.com\",\n+                \"-infile\", \"me3.req\", \"-outfile\", \"me3.crt\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-printcert\", \"-file\", \"me3.crt\").shouldHaveExitValue(0);\n+\n+        kt(\"-alias\", \"me\", \"-certreq\", \"-file\", \"me4.req\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-alias\", \"ca\", \"-gencert\", \"-dname\", \"\",\n+                \"-ext\", \"san:c=email:me@me.com\",\n+                \"-infile\", \"me4.req\", \"-outfile\", \"me4.crt\")\n+                .shouldHaveExitValue(0);\n+        kt(\"-printcert\", \"-file\", \"me4.crt\").shouldHaveExitValue(0);\n+    }\n+\n+    static OutputAnalyzer kt(String... s) throws Exception {\n+        List<String> cmd = new ArrayList<>();\n+        cmd.addAll(Arrays.asList(\n+                \"-storepass\", \"changeit\",\n+                \"-keypass\", \"changeit\",\n+                \"-keystore\", KS,\n+                \"-keyalg\", \"rsa\"));\n+        cmd.addAll(Arrays.asList(s));\n+        return SecurityTools.keytool(cmd);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/EmptySubject.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6922482\n+ * @summary keytool's help on -file always shows 'output file'\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+public class FileInHelp {\n+    public static void main(String[] args) throws Exception {\n+        SecurityTools.keytool(\"-printcertreq -help\")\n+                .shouldHaveExitValue(0)\n+                .shouldContain(\"input file\");\n+        SecurityTools.keytool(\"-exportcert -help\")\n+                .shouldHaveExitValue(0)\n+                .shouldContain(\"output file\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/FileInHelp.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6819272\n+ * @summary keytool -importcert should read the whole input\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class ImportReadAll {\n+    public static void main(String[] args) throws Exception {\n+        keytool(\"-genkeypair -alias a -dname CN=a\").shouldHaveExitValue(0);\n+        keytool(\"-genkeypair -alias ca -dname CN=ca\").shouldHaveExitValue(0);\n+\n+        keytool(\"-certreq -alias a -file a.req\").shouldHaveExitValue(0);\n+        keytool(\"-gencert -alias ca -infile a.req -outfile a.crt\")\n+                .shouldHaveExitValue(0);\n+        keytool(\"-importcert -alias a -file a.crt\").shouldHaveExitValue(0);\n+    }\n+\n+    static OutputAnalyzer keytool(String s) throws Exception {\n+        return SecurityTools.keytool(\n+                \"-keystore importreadall.jks \"\n+                + \"-storepass changeit -keypass changeit -keyalg rsa \" + s);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/ImportReadAll.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8029659\n+ * @summary Keytool, print key algorithm of certificate or key entry\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class KeyAlg {\n+    public static void main(String[] args) throws Exception {\n+        keytool(\"-genkeypair -alias ca -dname CN=CA -keyalg EC\")\n+                .shouldHaveExitValue(0);\n+        keytool(\"-genkeypair -alias user -dname CN=User -keyalg RSA -keysize 1024\")\n+                .shouldHaveExitValue(0);\n+        keytool(\"-certreq -alias user -file user.req\").shouldHaveExitValue(0);\n+        keytool(\"-gencert -alias ca -rfc -sigalg SHA1withECDSA\"\n+                + \" -infile user.req -outfile user.crt\")\n+                .shouldHaveExitValue(0);\n+        keytool(\"-printcert -file user.crt\")\n+                .shouldHaveExitValue(0)\n+                .shouldMatch(\"Signature algorithm name:.*SHA1withECDSA\")\n+                .shouldMatch(\"Subject Public Key Algorithm:.*1024.*RSA\");\n+    }\n+\n+    static OutputAnalyzer keytool(String s) throws Exception {\n+        return SecurityTools.keytool(\n+                \"-keystore ks -storepass changeit -keypass changeit \" + s);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/KeyAlg.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6324292\n+ * @summary keytool -help is unhelpful\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+public class NewHelp {\n+    public static void main(String[] args) throws Exception {\n+        SecurityTools.keytool(\"-help\")\n+                .shouldHaveExitValue(0)\n+                .shouldContain(\"Commands:\");\n+        SecurityTools.keytool(\"-help -list\")\n+                .shouldHaveExitValue(0)\n+                .shouldContain(\"Options:\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/NewHelp.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6813402\n+ * @summary keytool cannot -printcert entries without extensions\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+import java.nio.file.Path;\n+\n+public class NoExtNPE {\n+    public static void main(String[] args) throws Exception {\n+        SecurityTools.keytool(\"-list -v -keystore \" +\n+                Path.of(System.getProperty(\"test.src\"), \"CloneKeyAskPassword.jks\")\n+                + \" -storepass test123\").shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/NoExtNPE.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -1,75 +0,0 @@\n-#\n-# Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6813402\n-# @summary keytool cannot -printcert entries without extensions\n-#\n-# @run shell NoExtNPE.sh\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-   TESTSRC=\".\"\n-fi\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-   echo \"TESTJAVA not set.  Test cannot execute.\"\n-   echo \"FAILED!!!\"\n-   exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS )\n-    FILESEP=\"\/\"\n-    ;;\n-  Linux )\n-    FILESEP=\"\/\"\n-    ;;\n-  Darwin )\n-    FILESEP=\"\/\"\n-    ;;\n-  AIX )\n-    PATHSEP=\":\"\n-    FILESEP=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    FILESEP=\"\/\"\n-    ;;\n-  Windows* )\n-    FILESEP=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-${TESTJAVA}${FILESEP}bin${FILESEP}keytool ${TESTTOOLVMOPTS} \\\n-        -list -v \\\n-        -keystore ${TESTSRC}${FILESEP}CloneKeyAskPassword.jks \\\n-        -storepass test123\n-\n-exit $?\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/NoExtNPE.sh","additions":0,"deletions":75,"binary":false,"changes":75,"status":"deleted"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6239297\n+ * @summary keytool usage is broken after changing Resources.java\n+ * @author Max Wang\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+public class Resource {\n+    public static void main(String[] args) throws Exception {\n+        SecurityTools.keytool()\n+                .shouldNotContain(\"MissingResourceException\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/Resource.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4694076\n+ * @summary KeyTool throws ArrayIndexOutOfBoundsException for listing\n+ *          SecretKey entries in non-verbose mode.\n+ * @author Valerie Peng\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+import java.nio.file.Path;\n+\n+public class SecretKeyKS {\n+    public static void main(String[] args) throws Exception {\n+        SecurityTools.keytool(\"-list -keystore \" +\n+                Path.of(System.getProperty(\"test.src\"), \"SecretKeyKS.jks\") +\n+                \" -storepass password\").shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/SecretKeyKS.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -1,73 +0,0 @@\n-#\n-# Copyright (c) 2002, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 4694076\n-# @summary KeyTool throws ArrayIndexOutOfBoundsException for listing\n-#          SecretKey entries in non-verbose mode.\n-# @author Valerie Peng\n-#\n-# @run shell SecretKeyKS.sh\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-  TESTCLASSES=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    ;;\n-  Windows_* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized operating system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-# the test code\n-\n-${TESTJAVA}${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -list -keystore ${TESTSRC}${FS}SecretKeyKS.jks -storepass password\n-\n-exit $?\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/SecretKeyKS.sh","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8180573\n+ * @summary Enhance SecurityTools input line parsing\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.SecurityTools;\n+\n+import java.util.List;\n+\n+public class SecurityToolsTest {\n+    public static void main(String[] args) {\n+        Asserts.assertEQ(SecurityTools.makeList(\"a b c\"),\n+                List.of(\"a\", \"b\", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"  a b c  \"),\n+                List.of(\"a\", \"b\", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"a\\tb\\nc\"),\n+                List.of(\"a\", \"b\", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"a `b` c\"),\n+                List.of(\"a\", \"b\", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"`a` b c\"),\n+                List.of(\"a\", \"b\", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"a b `c`\"),\n+                List.of(\"a\", \"b\", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"`a b` b c\"),\n+                List.of(\"a b\", \"b\", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"`a b c`\"),\n+                List.of(\"a b c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"a ` b ` c\"),\n+                List.of(\"a\", \" b \", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"a`b c\"),\n+                List.of(\"a`b\", \"c\"));\n+        Asserts.assertEQ(SecurityTools.makeList(\"a `\\\"b\\\"` c\"),\n+                List.of(\"a\", \"\\\"b\\\"\", \"c\"));\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/SecurityToolsTest.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6825352 6937978\n+ * @summary support self-issued certificate in keytool and let -gencert generate the chain\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class SelfIssued {\n+    public static void main(String[] args) throws Exception {\n+        keytool(\"-alias ca -dname CN=CA -genkeypair\");\n+        keytool(\"-alias ca1 -dname CN=CA1 -genkeypair\");\n+        keytool(\"-alias ca2 -dname CN=CA2 -genkeypair\");\n+        keytool(\"-alias e1 -dname CN=E1 -genkeypair\");\n+\n+        \/\/ ca signs ca1, ca1 signs ca2, all self-issued\n+        keytool(\"-alias ca1 -certreq -file ca1.req\");\n+        keytool(\"-alias ca -gencert -ext san=dns:ca1 \"\n+                + \"-infile ca1.req -outfile ca1.crt\");\n+        keytool(\"-alias ca1 -importcert -file ca1.crt\");\n+\n+        keytool(\"-alias ca2 -certreq -file ca2.req\");\n+        keytool(\"-alias ca1 -gencert -ext san=dns:ca2 \"\n+                + \"-infile ca2.req -outfile ca2.crt\");\n+        keytool(\"-alias ca2 -importcert -file ca2.crt\");\n+\n+        \/\/ Import e1 signed by ca2, should add ca2 and ca1, at least 3 certs in the chain\n+        keytool(\"-alias e1 -certreq -file e1.req\");\n+        keytool(\"-alias ca2 -gencert -infile e1.req -outfile e1.crt\");\n+\n+        keytool(\"-alias ca1 -delete\");\n+        keytool(\"-alias ca2 -delete\");\n+        keytool(\"-alias e1 -importcert -file e1.crt\");\n+        keytool(\"-alias e1 -list -v\")\n+                .shouldContain(\"[3]\");\n+    }\n+\n+    static OutputAnalyzer keytool(String s) throws Exception {\n+        return SecurityTools.keytool(\"-storepass changeit -keypass changeit \"\n+                + \"-keystore ks -keyalg rsa \" + s);\n+    }\n+}\n+\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/SelfIssued.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4909889\n+ * @summary KeyTool accepts any input that user make as long as we can make some\n+ *          sense out of it, but when comes to present the info the user, it\n+ *          promotes a standard look.\n+ * @author Andrew Fan\n+ * @library \/test\/lib\n+ * @run main\/timeout=240 StandardAlgName\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+public class StandardAlgName {\n+    public static void main(String[] args) throws Exception {\n+        \/\/ CA\n+        SecurityTools.keytool(\"-genkey\", \"-v\", \"-alias\", \"pkcs12testCA\",\n+                \"-keyalg\", \"RsA\", \"-keysize\", \"2048\",\n+                \"-sigalg\", \"ShA1wItHRSA\",\n+                \"-dname\", \"cn=PKCS12 Test CA, ou = Security SQE, o = JavaSoft, c = US\",\n+                \"-validity\", \"3650\",\n+                \"-keypass\", \"storepass\", \"-keystore\", \"keystoreCA.jceks.data\",\n+                \"-storepass\", \"storepass\", \"-storetype\", \"jceKS\")\n+                .shouldHaveExitValue(0)\n+                .shouldNotContain(\"RsA\")\n+                .shouldNotContain(\"ShA1wItHRSA\")\n+                .shouldContain(\"RSA\")\n+                .shouldContain(\"SHA1withRSA\");\n+\n+        \/\/ Lead\n+        SecurityTools.keytool(\"-genkey\", \"-v\", \"-alias\", \"pkcs12testLead\",\n+                \"-keyalg\", \"rSA\", \"-keysize\", \"1024\",\n+                \"-sigalg\", \"mD5withRSA\",\n+                \"-dname\", \"cn=PKCS12 Test Lead, ou=Security SQE, o=JavaSoft, c=US\",\n+                \"-validity\", \"3650\",\n+                \"-keypass\", \"storepass\", \"-keystore\", \"keystoreLead.jceks.data\",\n+                \"-storepass\", \"storepass\", \"-storetype\", \"jCeks\")\n+                .shouldHaveExitValue(0)\n+                .shouldNotContain(\"rSA\")\n+                .shouldNotContain(\"mD5withRSA\")\n+                .shouldContain(\"RSA\")\n+                .shouldContain(\"MD5withRSA\");\n+\n+        \/\/ End User 1\n+        SecurityTools.keytool(\"-genkey\", \"-v\", \"-alias\", \"pkcs12testEndUser1\",\n+                \"-keyalg\", \"RSa\", \"-keysize\", \"1024\",\n+                \"-sigalg\", \"sHa1wIThRSA\",\n+                \"-dname\", \"cn=PKCS12 Test End User 1, ou=Security SQE, o=JavaSoft, c=US\",\n+                \"-validity\", \"3650\",\n+                \"-keypass\", \"storepass\", \"-keystore\", \"keystoreEndUser1.jceks.data\",\n+                \"-storepass\", \"storepass\", \"-storetype\", \"Jceks\")\n+                .shouldHaveExitValue(0)\n+                .shouldNotContain(\"RSa\")\n+                .shouldNotContain(\"sHa1wIThRSA\")\n+                .shouldContain(\"RSA\")\n+                .shouldContain(\"SHA1withRSA\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/StandardAlgName.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -1,94 +0,0 @@\n-#\n-# Copyright (c) 2004, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test 1.1 04\/11\/12\n-# @bug 4909889\n-# @summary KeyTool accepts any input that user make as long as we can make some\n-#          sense out of it, but when comes to present the info the user, it\n-#          promotes a standard look.\n-# @author Andrew Fan\n-#\n-# @run shell\/timeout=240 StandardAlgName.sh\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-  TESTCLASSES=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    ;;\n-  Windows_* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized operating system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-# the test code\n-#CA\n-${TESTJAVA}${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -genkey -v -alias pkcs12testCA -keyalg \"RsA\" -keysize 2048 -sigalg \"ShA1wItHRSA\" -dname \"cn=PKCS12 Test CA, ou=Security SQE, o=JavaSoft, c=US\" -validity 3650 -keypass storepass -keystore keystoreCA.jceks.data -storepass storepass -storetype jceKS 2>&1 | egrep 'RsA|ShA1wItHRSA'\n-\n-RESULT=$?\n-if [ $RESULT -eq 0 ]; then\n-    exit 1\n-else\n-    #Lead\n-    ${TESTJAVA}${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -genkey -v -alias pkcs12testLead -keyalg \"rSA\" -keysize 1024 -sigalg \"mD5withRSA\" -dname \"cn=PKCS12 Test Lead, ou=Security SQE, o=JavaSoft, c=US\" -validity 3650 -keypass storepass -keystore keystoreLead.jceks.data -storepass storepass -storetype jCeks 2>&1 | egrep 'rSA|mD5withRSA'\n-    RESULT=$?\n-    if [ $RESULT -eq 0 ]; then\n-        exit 1\n-    else\n-        #End User 1\n-        ${TESTJAVA}${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -genkey -v -alias pkcs12testEndUser1 -keyalg \"RSa\" -keysize 1024 -sigalg \"sHa1wIThRSA\" -dname \"cn=PKCS12 Test End User 1, ou=Security SQE, o=JavaSoft, c=US\" -validity 3650 -keypass storepass -keystore keystoreEndUser1.jceks.data -storepass storepass -storetype Jceks 2>&1 | egrep 'RSa|sHa1wIThRSA'\n-        RESULT=$?\n-        if [ $RESULT -eq 0 ]; then\n-            exit 1\n-        else\n-            exit 0\n-        fi\n-    fi\n-fi\n-\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/StandardAlgName.sh","additions":0,"deletions":94,"binary":false,"changes":94,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @library \/test\/lib\n@@ -30,0 +31,3 @@\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n@@ -82,0 +86,12 @@\n+\n+        storeCount = storeByShell();\n+        recoverCount = recoverByShell();\n+\n+        if (recoverCount != storeCount || storeCount < 11) {\n+            throw new Exception(\"Stored \" + storeCount + \" user passwords, \" +\n+                    \"recovered \" + recoverCount + \" user passwords\");\n+        }\n+        System.out.println(\"\\nStored \" + storeCount + \" user passwords, \" +\n+                \"recovered \" + recoverCount + \" user passwords\");\n+\n+        new File(KEYSTORE).delete();\n@@ -192,0 +208,31 @@\n+\n+    private static int storeByShell() throws Exception {\n+        int count = 0;\n+        for (String algorithm : PBE_ALGORITHMS) {\n+            System.out.println(\"Storing user password (protected by \" + algorithm + \" )\");\n+            String importCmd = count < 5 ? \"-importpassword\" : \"-importpass\";\n+            String keyAlg = algorithm.equals(\"default PBE algorithm\")\n+                    ? \"\" : (\" -keyalg \" + algorithm);\n+            SecurityTools.setResponse(\"hello1\");\n+            OutputAnalyzer oa = SecurityTools.keytool(importCmd\n+                    + \" -storetype pkcs12 -keystore mykeystore.p12\"\n+                    + \" -storepass changeit -alias `this entry is protected by \"\n+                    + algorithm + \"`\" + keyAlg);\n+            if (oa.getExitValue() == 0) {\n+                System.out.println(\"OK\");\n+                count++;\n+            } else {\n+                System.out.println(\"ERROR\");\n+            }\n+        }\n+        return count;\n+    }\n+\n+    private static int recoverByShell() throws Exception {\n+        return (int)SecurityTools.keytool(\"-list -storetype pkcs12\"\n+                + \" -keystore mykeystore.p12 -storepass changeit\")\n+                .shouldHaveExitValue(0)\n+                .asLines().stream()\n+                .filter(s -> s.contains(\"this entry is protected by\"))\n+                .count();\n+    }\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/StorePasswords.java","additions":48,"deletions":1,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -1,132 +0,0 @@\n-#\n-# Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8008296\n-# @summary confirm that keytool correctly imports user passwords\n-#\n-# @run shell StorePasswordsByShell.sh\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-   TESTSRC=\".\"\n-fi \n-  \n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-   TESTCLASSES=\".\" \n-fi\n-  \n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-   echo \"TESTJAVA not set.  Test cannot execute.\"\n-   echo \"FAILED!!!\"\n-   exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX)\n-    PATHSEP=\":\"\n-    FILESEP=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    PATHSEP=\";\"\n-    FILESEP=\"\/\"\n-    ;;\n-  Windows* )\n-    PATHSEP=\";\"\n-    FILESEP=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-PBE_ALGORITHMS=\"\\\n- default-PBE-algorithm \\\n- PBEWithMD5AndDES \\\n- PBEWithSHA1AndDESede \\\n- PBEWithSHA1AndRC2_40 \\\n- PBEWithSHA1AndRC2_128 \n- PBEWithSHA1AndRC4_40 \\\n- PBEWithSHA1AndRC4_128 \\\n- PBEWithHmacSHA1AndAES_128 \\\n- PBEWithHmacSHA224AndAES_128 \\\n- PBEWithHmacSHA256AndAES_128 \\\n- PBEWithHmacSHA384AndAES_128 \\\n- PBEWithHmacSHA512AndAES_128 \\\n- PBEWithHmacSHA1AndAES_256 \\\n- PBEWithHmacSHA224AndAES_256 \\\n- PBEWithHmacSHA256AndAES_256 \\\n- PBEWithHmacSHA384AndAES_256 \\\n- PBEWithHmacSHA512AndAES_256\"\n-\n-USER_PWD=\"hello1\\n\"\n-ALIAS_PREFIX=\"this entry is protected by \"\n-COUNTER=0\n-\n-# cleanup\n-rm mykeystore.p12 > \/dev\/null 2>&1\n-\n-echo\n-for i in $PBE_ALGORITHMS; do\n-\n-    if [ $i = \"default-PBE-algorithm\" ]; then\n-        KEYALG=\"\"\n-    else\n-        KEYALG=\"-keyalg ${i}\"\n-    fi\n-\n-    if [ $COUNTER -lt 5 ]; then\n-        IMPORTPASSWORD=\"-importpassword\"\n-    else\n-        IMPORTPASSWORD=\"-importpass\"\n-    fi\n-\n-    echo \"Storing user password (protected by ${i})\"\n-    echo \"${USER_PWD}\" | \\\n-        ${TESTJAVA}${FILESEP}bin${FILESEP}keytool ${TESTTOOLVMOPTS} ${IMPORTPASSWORD} \\\n-            -storetype pkcs12 -keystore mykeystore.p12 -storepass changeit \\\n-            -alias \"${ALIAS_PREFIX}${i}\" ${KEYALG} > \/dev\/null 2>&1\n-    if [ $? -ne 0 ]; then\n-        echo Error\n-    else\n-        echo OK\n-        COUNTER=`expr ${COUNTER} + 1`\n-    fi\n-done\n-echo\n-\n-COUNTER2=`${TESTJAVA}${FILESEP}bin${FILESEP}keytool ${TESTTOOLVMOPTS} -list -storetype pkcs12 \\\n-  -keystore mykeystore.p12 -storepass changeit | grep -c \"${ALIAS_PREFIX}\"`\n-\n-RESULT=\"stored ${COUNTER} user passwords, detected ${COUNTER2} user passwords\"\n-if [ $COUNTER -ne $COUNTER2 -o $COUNTER -lt 11 ]; then\n-    echo \"ERROR: $RESULT\"\n-    exit 1\n-else\n-    echo \"OK: $RESULT\"\n-    exit 0\n-fi\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/StorePasswordsByShell.sh","additions":0,"deletions":132,"binary":false,"changes":132,"status":"deleted"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7047200\n+ * @summary keytool can try save to a byte array before overwrite the file\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TryStore {\n+    public static void main(String[] args) throws Exception {\n+        keytool(\"-genkeypair -alias a -dname CN=A -storepass changeit -keypass changeit\");\n+        keytool(\"-genkeypair -alias b -dname CN=B -storepass changeit -keypass changeit\");\n+\n+        \/\/ We use -protected for JKS keystore. This is illegal so the command should\n+        \/\/ fail. Then we can check if the keystore is damaged.\n+\n+        keytool(\"-genkeypair -protected -alias b -delete -debug\")\n+                .shouldNotHaveExitValue(0);\n+\n+        keytool(\"-list -storepass changeit\")\n+                .shouldHaveExitValue(0);\n+    }\n+\n+    static OutputAnalyzer keytool(String s) throws Exception {\n+        return SecurityTools.keytool(\n+                \"-storetype jks -keystore trystore.jks -keyalg rsa \" + s);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/TryStore.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -1,99 +0,0 @@\n-#\n-# Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8023197\n-# @summary Pre-configured command line options for keytool and jarsigner\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-TESTTOOLVMOPTS=\"$TESTTOOLVMOPTS -J-Duser.language=en -J-Duser.country=US\"\n-\n-KS=ks\n-KEYTOOL=\"$TESTJAVA\/bin\/keytool ${TESTTOOLVMOPTS}\"\n-\n-rm $KS 2> \/dev\/null\n-\n-PASS=changeit\n-export PASS\n-\n-cat <<EOF > kt.conf\n-# A Pre-configured options file\n-keytool.all = -storepass:env PASS -keypass:env PASS -keystore \\${user.dir}\/$KS -debug\n-keytool.genkey = -keyalg ec -ext bc\n-keytool.delete = -keystore nothing\n-EOF\n-\n-# kt.conf is read\n-$KEYTOOL -conf kt.conf -genkeypair -dname CN=A -alias a || exit 1\n-$KEYTOOL -conf kt.conf -list -alias a -v > a_certinfo || exit 2\n-grep \"Signature algorithm name\" a_certinfo | grep ECDSA || exit 3\n-grep \"BasicConstraints\" a_certinfo || exit 4\n-\n-# kt.conf is read, and dup multi-valued options processed as expected\n-$KEYTOOL -conf kt.conf -genkeypair -dname CN=B -alias b -ext ku=ds \\\n-        || exit 11\n-$KEYTOOL -conf kt.conf -list -alias b -v > b_certinfo || exit 12\n-grep \"BasicConstraints\" b_certinfo || exit 14\n-grep \"DigitalSignature\" b_certinfo || exit 15\n-\n-# Single-valued option in command section override all\n-$KEYTOOL -conf kt.conf -delete -alias a && exit 16\n-\n-# Single-valued option on command line overrides again\n-$KEYTOOL -conf kt.conf -delete -alias b -keystore $KS || exit 17\n-\n-# Error cases\n-\n-# File does not exist\n-$KEYTOOL -conf no-such-file -help -list && exit 31\n-\n-# Cannot have both standard name (-genkeypair) and legacy name (-genkey)\n-cat <<EOF > bad.conf\n-keytool.all = -storepass:env PASS -keypass:env PASS -keystore ks\n-keytool.genkeypair = -keyalg rsa\n-keytool.genkey = -keyalg ec\n-EOF\n-\n-$KEYTOOL -conf bad.conf -genkeypair -alias me -dname \"cn=me\" && exit 32\n-\n-# Unknown options are rejected by tool\n-cat <<EOF > bad.conf\n-keytool.all=-unknown\n-EOF\n-\n-$KEYTOOL -conf bad.conf -help -list && exit 33\n-\n-# System property must be present\n-cat <<EOF > bad.conf\n-keytool.all = -keystore \\${no.such.prop}\n-EOF\n-\n-$KEYTOOL -conf bad.conf -help -list && exit 34\n-\n-echo Done\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/default_options.sh","additions":0,"deletions":99,"binary":false,"changes":99,"status":"deleted"},{"patch":"@@ -1,68 +0,0 @@\n-#\n-# Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6847026\n-# @summary keytool should be able to generate certreq and cert without subject name\n-#\n-# @run shell emptysubject.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=emptysubject.jks\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keystore $KS -keyalg rsa\"\n-\n-rm $KS\n-\n-$KT -alias ca -dname CN=CA -genkeypair\n-$KT -alias me -dname CN=Me -genkeypair\n-\n-# When -dname is recognized, SAN must be specfied, otherwise, -printcert fails.\n-$KT -alias me -certreq -dname \"\" | \\\n-        $KT -alias ca -gencert | $KT -printcert && exit 1\n-$KT -alias me -certreq | \\\n-        $KT -alias ca -gencert -dname \"\" | $KT -printcert && exit 2\n-$KT -alias me -certreq -dname \"\" | \\\n-        $KT -alias ca -gencert -ext san:c=email:me@me.com | \\\n-        $KT -printcert || exit 3\n-$KT -alias me -certreq | \\\n-        $KT -alias ca -gencert -dname \"\" -ext san:c=email:me@me.com | \\\n-        $KT -printcert || exit 4\n-\n-exit 0\n-\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/emptysubject.sh","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -1,54 +0,0 @@\n-#\n-# Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6922482\n-# @summary keytool's help on -file always shows 'output file'\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-TESTTOOLVMOPTS=\"$TESTTOOLVMOPTS -J-Duser.language=en -J-Duser.country=US\"\n-\n-$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -printcertreq -help 2> h1 || exit 1\n-$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -exportcert -help 2> h2 || exit 2\n-\n-grep \"input file\" h1 || exit 3\n-grep \"output file\" h2 || exit 4\n-\n-exit 0\n-\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/file-in-help.sh","additions":0,"deletions":54,"binary":false,"changes":54,"status":"deleted"},{"patch":"@@ -4,5 +4,1 @@\n-<applet width=100 height=100 code=i18n.class>\n-<\/applet>\n-\n-This is a multi-stage test.  Click on \"done\" when you have completed\n-reading these instructions.  For each instruction, make sure the output\n+This is a multi-stage test.  For each instruction, make sure the output\n@@ -118,2 +114,0 @@\n-Press \"Pass\" if ... press \"Fail\" otherwise.\n-\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/i18n.html","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,4 +24,15 @@\n-\/\/ This trivial file is only necessary to display instructions and \"pass\/fail\"\n-\/\/ buttons for a manual test.\n-public class i18n extends java.applet.Applet\n-{\n+\/*\n+ * @test\n+ * @bug 4348369 8076069\n+ * @summary keytool not i18n compliant\n+ * @author charlie lai\n+ * @run main\/manual i18n\n+ *\/\n+\n+import java.nio.file.Path;\n+\n+public class i18n{\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"see i18n.html\");\n+        System.out.println(Path.of(System.getProperty(\"test.jdk\"), \"bin\", \"keytool\"));\n+    }\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/i18n.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1,73 +0,0 @@\n-#\n-# Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 4348369 8076069\n-# @summary keytool not i18n compliant\n-# @author charlie lai\n-# @run shell\/manual i18n.sh\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-  TESTCLASSES=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  AIX | Darwin | Linux | SunOS )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    ;;\n-  Windows* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized system!\"\n-    exit 1;\n-    ;;\n-esac\n-KEYTOOL=${TESTJAVA}${FS}bin${FS}keytool\n-\n-# the test code\n-\n-# see i18n.html\n-\n-exit $?\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/i18n.sh","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -1,62 +0,0 @@\n-#\n-# Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6819272\n-# @summary keytool -importcert should read the whole input\n-#\n-# @run shell importreadall.sh\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-   TESTSRC=\".\"\n-fi\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVA_CMD=`which java`\n-  TESTJAVA=`dirname $JAVA_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KEYTOOL=\"${TESTJAVA}${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -keystore importreadall.jks -storepass changeit -keypass changeit -keyalg rsa\"\n-\n-# In case the test is run twice in the same directory\n-\n-$KEYTOOL -delete -alias a\n-$KEYTOOL -delete -alias ca\n-$KEYTOOL -genkeypair -alias a -dname CN=a || exit 1\n-$KEYTOOL -genkeypair -alias ca -dname CN=ca || exit 2\n-$KEYTOOL -certreq -alias a | $KEYTOOL -gencert -alias ca | $KEYTOOL -importcert -alias a\n-\n-exit $?\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/importreadall.sh","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -1,49 +0,0 @@\n-#\n-# Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8029659\n-# @summary Keytool, print key algorithm of certificate or key entry\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-TESTTOOLVMOPTS=\"$TESTTOOLVMOPTS -J-Duser.language=en -J-Duser.country=US\"\n-\n-KS=ks\n-KEYTOOL=\"$TESTJAVA\/bin\/keytool ${TESTTOOLVMOPTS} -keystore ks -storepass changeit -keypass changeit\"\n-\n-rm $KS 2> \/dev\/null\n-\n-$KEYTOOL -genkeypair -alias ca -dname CN=CA -keyalg EC || exit 1\n-$KEYTOOL -genkeypair -alias user -dname CN=User -keyalg RSA -keysize 1024 || exit 2\n-$KEYTOOL -certreq -alias user |\n-        $KEYTOOL -gencert -alias ca -rfc -sigalg SHA1withECDSA |\n-        $KEYTOOL -printcert > user.dump || exit 3\n-\n-cat user.dump | grep \"Signature algorithm name:\" | grep SHA1withECDSA || exit 4\n-cat user.dump | grep \"Subject Public Key Algorithm:\" | grep RSA | grep 1024 || exit 5\n-\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/keyalg.sh","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -1,54 +0,0 @@\n-#\n-# Copyright (c) 2009, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6324292\n-# @summary keytool -help is unhelpful\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-TESTTOOLVMOPTS=\"$TESTTOOLVMOPTS -J-Duser.language=en -J-Duser.country=US\"\n-\n-$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -help 2> h1 || exit 1\n-$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -help -list 2> h2 || exit 2\n-\n-grep Commands: h1 || exit 3\n-grep Options: h2 || exit 4\n-\n-exit 0\n-\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/newhelp.sh","additions":0,"deletions":54,"binary":false,"changes":54,"status":"deleted"},{"patch":"@@ -1,72 +0,0 @@\n-#\n-# Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6239297\n-# @summary keytool usage is broken after changing Resources.java\n-# @author Max Wang\n-#\n-# @run shell resource.sh\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-  TESTSRC=\".\"\n-fi\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-  TESTCLASSES=\".\"\n-fi\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  echo \"TESTJAVA not set.  Test cannot execute.\"\n-  echo \"FAILED!!!\"\n-  exit 1\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  SunOS | Linux | Darwin | AIX )\n-    NULL=\/dev\/null\n-    FS=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    NULL=\/dev\/null\n-    FS=\"\/\"\n-    ;;\n-  Windows_* )\n-    NULL=NUL\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized operating system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-# the test code\n-${TESTJAVA}${FS}bin${FS}keytool ${TESTTOOLVMOPTS} > temp_file_40875602475 2> ${NULL}\n-grep MissingResourceException temp_file_40875602475\n-\n-if [ $? -eq 0 ]; then\n-    exit 1\n-fi\n-\n-exit 0\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/resource.sh","additions":0,"deletions":72,"binary":false,"changes":72,"status":"deleted"},{"patch":"@@ -1,71 +0,0 @@\n-#\n-# Copyright (c) 2009, 2014, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6825352 6937978\n-# @summary support self-issued certificate in keytool and let -gencert generate the chain\n-#\n-# @run shell selfissued.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-KS=selfsigned.ks\n-KT=\"$TESTJAVA${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storepass changeit -keypass changeit -keystore $KS -keyalg rsa\"\n-\n-rm $KS\n-\n-$KT -alias ca -dname CN=CA -genkeypair\n-$KT -alias ca1 -dname CN=CA1 -genkeypair\n-$KT -alias ca2 -dname CN=CA2 -genkeypair\n-$KT -alias e1 -dname CN=E1 -genkeypair\n-\n-# ca signs ca1, ca1 signs ca2, all self-issued\n-$KT -alias ca1 -certreq | $KT -alias ca -gencert -ext san=dns:ca1 \\\n-        | $KT -alias ca1 -importcert\n-$KT -alias ca2 -certreq | $KT -alias ca1 -gencert -ext san=dns:ca2 \\\n-        | $KT -alias ca2 -importcert\n-\n-# Import e1 signed by ca2, should add ca2 and ca1, at least 3 certs in the chain\n-$KT -alias e1 -certreq | $KT -alias ca2 -gencert > e1.cert\n-$KT -alias ca1 -delete\n-$KT -alias ca2 -delete\n-cat e1.cert | $KT -alias e1 -importcert\n-$KT -alias e1 -list -v | grep '\\[3\\]' || { echo Bad E1; exit 1; }\n-\n-echo Good\n-\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/selfissued.sh","additions":0,"deletions":71,"binary":false,"changes":71,"status":"deleted"},{"patch":"@@ -1,65 +0,0 @@\n-#\n-# Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 7047200\n-# @summary keytool can try save to a byte array before overwrite the file\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-  JAVAC_CMD=`which javac`\n-  TESTJAVA=`dirname $JAVAC_CMD`\/..\n-fi\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows_* )\n-    FS=\"\\\\\"\n-    ;;\n-  * )\n-    FS=\"\/\"\n-    ;;\n-esac\n-\n-rm trystore.jks 2> \/dev\/null\n-\n-KEYTOOL=\"${TESTJAVA}${FS}bin${FS}keytool ${TESTTOOLVMOPTS} -storetype jks -keystore trystore.jks -keyalg rsa\"\n-$KEYTOOL -genkeypair -alias a -dname CN=A -storepass changeit -keypass changeit\n-$KEYTOOL -genkeypair -alias b -dname CN=B -storepass changeit -keypass changeit\n-\n-# We use -protected for JKS keystore. This is illegal so the command should\n-# fail. Then we can check if the keystore is damaged.\n-\n-$KEYTOOL -genkeypair -protected -alias b -delete -debug\n-\n-if [ $? = 0 ]; then\n-    echo \"What? -protected works for JKS?\"\n-    exit 1\n-fi\n-\n-$KEYTOOL -list -storepass changeit\n-\n-if [ $? != 0 ]; then\n-    echo \"Keystore file damaged\"\n-    exit 2\n-fi\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/trystore.sh","additions":0,"deletions":65,"binary":false,"changes":65,"status":"deleted"},{"patch":"@@ -56,1 +56,1 @@\n-    private static ProcessBuilder getProcessBuilder(String tool, List<String> args) {\n+    public static ProcessBuilder getProcessBuilder(String tool, List<String> args) {\n@@ -66,0 +66,3 @@\n+            } else if (Platform.isWindows() && arg.isEmpty()) {\n+                \/\/ JDK-6518827: special handling for empty argument on Windows\n+                launcher.addToolArg(\"\\\"\\\"\");\n@@ -101,3 +104,2 @@\n-     * @param args arguments to keytool in a single string. Only call this if\n-     *             there is no white space inside an argument. This string will\n-     *             be split with {@code \\s+}.\n+     * @param args arguments to keytool in a single string. The string is\n+     *             converted to be List with makeList.\n@@ -108,1 +110,1 @@\n-        return keytool(args.split(\"\\\\s+\"));\n+        return keytool(makeList(args));\n@@ -178,3 +180,2 @@\n-     * @param args arguments to jarsigner in a single string. Only call this if\n-     *             there is no white space inside an argument. This string will\n-     *             be split with {@code \\s+}.\n+     * @param args arguments to jarsigner in a single string. The string is\n+     *             converted to be List with makeList.\n@@ -186,1 +187,1 @@\n-        return jarsigner(args.split(\"\\\\s+\"));\n+        return jarsigner(makeList(args));\n@@ -257,3 +258,2 @@\n-     * @param args arguments to ktab in a single string. Only call this if\n-     *             there is no white space inside an argument. This string will\n-     *             be split with {@code \\s+}.\n+     * @param args arguments to ktab in a single string. The string is\n+     *             converted to be List with makeList.\n@@ -264,2 +264,1 @@\n-        return execute(getProcessBuilder(\n-                \"ktab\", List.of(args.trim().split(\"\\\\s+\"))));\n+        return execute(getProcessBuilder(\"ktab\", makeList(args)));\n@@ -271,3 +270,2 @@\n-     * @param args arguments to klist in a single string. Only call this if\n-     *             there is no white space inside an argument. This string will\n-     *             be split with {@code \\s+}.\n+     * @param args arguments to klist in a single string. The string is\n+     *             converted to be List with makeList.\n@@ -278,2 +276,55 @@\n-        return execute(getProcessBuilder(\n-                \"klist\", List.of(args.trim().split(\"\\\\s+\"))));\n+        return execute(getProcessBuilder(\"klist\", makeList(args)));\n+    }\n+\n+    \/**\n+     * Runs jar.\n+     *\n+     * @param args arguments to jar in a single string. The string is\n+     *             converted to be List with makeList.\n+     * @return an {@link OutputAnalyzer} object\n+     * @throws Exception if there is an error\n+     *\/\n+    public static OutputAnalyzer jar(String args) throws Exception {\n+        return execute(getProcessBuilder(\"jar\", makeList(args)));\n+    }\n+\n+    \/**\n+     * Split a line to a list of string. All whitespaces are treated as\n+     * delimiters unless quoted between ` and `.\n+     *\n+     * @param line the input\n+     * @return the list\n+     *\/\n+    public static List<String> makeList(String line) {\n+        List<String> result = new ArrayList<>();\n+        StringBuilder sb = new StringBuilder();\n+        boolean inBackTick = false;\n+        for (char c : line.toCharArray()) {\n+            if (inBackTick) {\n+                if (c == '`') {\n+                    result.add(sb.toString());\n+                    sb.setLength(0);\n+                    inBackTick = false;\n+                } else {\n+                    sb.append(c);\n+                }\n+            } else {\n+                if (sb.length() == 0 && c == '`') {\n+                    \/\/ Allow ` inside a string\n+                    inBackTick = true;\n+                } else {\n+                    if (Character.isWhitespace(c)) {\n+                        if (sb.length() != 0) {\n+                            result.add(sb.toString());\n+                            sb.setLength(0);\n+                        }\n+                    } else {\n+                        sb.append(c);\n+                    }\n+                }\n+            }\n+        }\n+        if (sb.length() != 0) {\n+            result.add(sb.toString());\n+        }\n+        return result;\n","filename":"test\/lib\/jdk\/test\/lib\/SecurityTools.java","additions":70,"deletions":19,"binary":false,"changes":89,"status":"modified"}]}