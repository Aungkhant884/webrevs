{"files":[{"patch":"@@ -30,1 +30,0 @@\n-import java.awt.Robot;\n@@ -52,1 +51,1 @@\n-    public CRobot(Robot r, CGraphicsDevice d) {\n+    CRobot(CGraphicsDevice d) {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CRobot.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.awt.AWTException;\n@@ -52,1 +53,0 @@\n-import java.awt.Robot;\n@@ -502,2 +502,5 @@\n-    public RobotPeer createRobot(Robot target, GraphicsDevice screen) {\n-        return new CRobot(target, (CGraphicsDevice)screen);\n+    public RobotPeer createRobot(GraphicsDevice screen) throws AWTException {\n+        if (screen instanceof CGraphicsDevice) {\n+            return new CRobot((CGraphicsDevice) screen);\n+        }\n+        return super.createRobot(screen);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/LWCToolkit.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-            peer = ((ComponentFactory)toolkit).createRobot(this, screen);\n+            peer = ((ComponentFactory)toolkit).createRobot(screen);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Robot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,25 @@\n-import java.awt.peer.TaskbarPeer;\n-import java.awt.*;\n+import java.awt.AWTException;\n+import java.awt.Button;\n+import java.awt.Canvas;\n+import java.awt.Checkbox;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Choice;\n+import java.awt.Component;\n+import java.awt.Desktop;\n+import java.awt.Dialog;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+import java.awt.GraphicsDevice;\n+import java.awt.HeadlessException;\n+import java.awt.Label;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.Panel;\n+import java.awt.PopupMenu;\n+import java.awt.ScrollPane;\n+import java.awt.Scrollbar;\n+import java.awt.Taskbar;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+import java.awt.Window;\n@@ -33,1 +56,26 @@\n-import java.awt.peer.*;\n+import java.awt.peer.ButtonPeer;\n+import java.awt.peer.CanvasPeer;\n+import java.awt.peer.CheckboxMenuItemPeer;\n+import java.awt.peer.CheckboxPeer;\n+import java.awt.peer.ChoicePeer;\n+import java.awt.peer.DesktopPeer;\n+import java.awt.peer.DialogPeer;\n+import java.awt.peer.FileDialogPeer;\n+import java.awt.peer.FontPeer;\n+import java.awt.peer.FramePeer;\n+import java.awt.peer.LabelPeer;\n+import java.awt.peer.LightweightPeer;\n+import java.awt.peer.ListPeer;\n+import java.awt.peer.MenuBarPeer;\n+import java.awt.peer.MenuItemPeer;\n+import java.awt.peer.MenuPeer;\n+import java.awt.peer.MouseInfoPeer;\n+import java.awt.peer.PanelPeer;\n+import java.awt.peer.PopupMenuPeer;\n+import java.awt.peer.RobotPeer;\n+import java.awt.peer.ScrollPanePeer;\n+import java.awt.peer.ScrollbarPeer;\n+import java.awt.peer.TaskbarPeer;\n+import java.awt.peer.TextAreaPeer;\n+import java.awt.peer.TextFieldPeer;\n+import java.awt.peer.WindowPeer;\n@@ -440,3 +488,11 @@\n-    default RobotPeer createRobot(Robot target, GraphicsDevice screen)\n-            throws AWTException {\n-        throw new HeadlessException();\n+    \/**\n+     * Creates the peer for a Robot.\n+     *\n+     * @param  screen the GraphicsDevice indicating the coordinate system the\n+     *         Robot will operate in\n+     * @return the peer created\n+     * @throws AWTException if the platform configuration does not allow\n+     *         low-level input control\n+     *\/\n+    default RobotPeer createRobot(GraphicsDevice screen) throws AWTException {\n+        throw new AWTException(String.format(\"Unsupported device: %s\", screen));\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/ComponentFactory.java","additions":63,"deletions":7,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.awt.GraphicsConfiguration;\n@@ -38,0 +37,1 @@\n+import sun.awt.X11GraphicsDevice;\n@@ -42,1 +42,1 @@\n-    static final boolean tryGtk;\n+    private static final boolean tryGtk;\n@@ -51,1 +51,1 @@\n-    private X11GraphicsConfig   xgc = null;\n+    private final X11GraphicsConfig  xgc;\n@@ -53,8 +53,2 @@\n-    \/*\n-     * native implementation uses some static shared data (pipes, processes)\n-     * so use a class lock to synchronize native method calls\n-     *\/\n-    static Object robotLock = new Object();\n-\n-    XRobotPeer(GraphicsConfiguration gc) {\n-        this.xgc = (X11GraphicsConfig)gc;\n+    XRobotPeer(X11GraphicsDevice gd) {\n+        xgc = (X11GraphicsConfig) gd.getDefaultConfiguration();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XRobotPeer.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,0 @@\n-import java.awt.Robot;\n@@ -1072,2 +1071,5 @@\n-    public RobotPeer createRobot(Robot target, GraphicsDevice screen) {\n-        return new XRobotPeer(screen.getDefaultConfiguration());\n+    public RobotPeer createRobot(GraphicsDevice screen) throws AWTException {\n+        if (screen instanceof X11GraphicsDevice) {\n+            return new XRobotPeer((X11GraphicsDevice) screen);\n+        }\n+        return super.createRobot(screen);\n@@ -1076,1 +1078,0 @@\n-\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XToolkit.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.awt.GraphicsDevice;\n@@ -37,3 +36,0 @@\n-    WRobotPeer(GraphicsDevice screen) {\n-    }\n-\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WRobotPeer.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,6 +28,53 @@\n-import java.awt.peer.TaskbarPeer;\n-import java.awt.*;\n-import java.awt.im.InputMethodHighlight;\n-import java.awt.im.spi.InputMethodDescriptor;\n-import java.awt.image.*;\n-import java.awt.peer.*;\n+import java.awt.AWTEvent;\n+import java.awt.AWTException;\n+import java.awt.Button;\n+import java.awt.Canvas;\n+import java.awt.Checkbox;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Choice;\n+import java.awt.Component;\n+import java.awt.Cursor;\n+import java.awt.Desktop;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FileDialog;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Frame;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.HeadlessException;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.JobAttributes;\n+import java.awt.Label;\n+import java.awt.List;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.PageAttributes;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.PopupMenu;\n+import java.awt.PrintJob;\n+import java.awt.RenderingHints;\n+import java.awt.ScrollPane;\n+import java.awt.Scrollbar;\n+import java.awt.SystemTray;\n+import java.awt.Taskbar;\n+import java.awt.TextArea;\n+import java.awt.TextComponent;\n+import java.awt.TextField;\n+import java.awt.Toolkit;\n+import java.awt.TrayIcon;\n+import java.awt.Window;\n+import java.awt.datatransfer.Clipboard;\n+import java.awt.dnd.DragGestureEvent;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragGestureRecognizer;\n+import java.awt.dnd.DragSource;\n+import java.awt.dnd.InvalidDnDOperationException;\n+import java.awt.dnd.MouseDragGestureRecognizer;\n+import java.awt.dnd.peer.DragSourceContextPeer;\n@@ -37,3 +84,31 @@\n-import java.awt.datatransfer.Clipboard;\n-import java.awt.TextComponent;\n-import java.awt.TrayIcon;\n+import java.awt.im.InputMethodHighlight;\n+import java.awt.im.spi.InputMethodDescriptor;\n+import java.awt.image.ColorModel;\n+import java.awt.peer.ButtonPeer;\n+import java.awt.peer.CanvasPeer;\n+import java.awt.peer.CheckboxMenuItemPeer;\n+import java.awt.peer.CheckboxPeer;\n+import java.awt.peer.ChoicePeer;\n+import java.awt.peer.DesktopPeer;\n+import java.awt.peer.DialogPeer;\n+import java.awt.peer.FileDialogPeer;\n+import java.awt.peer.FontPeer;\n+import java.awt.peer.FramePeer;\n+import java.awt.peer.KeyboardFocusManagerPeer;\n+import java.awt.peer.LabelPeer;\n+import java.awt.peer.ListPeer;\n+import java.awt.peer.MenuBarPeer;\n+import java.awt.peer.MenuItemPeer;\n+import java.awt.peer.MenuPeer;\n+import java.awt.peer.MouseInfoPeer;\n+import java.awt.peer.PanelPeer;\n+import java.awt.peer.PopupMenuPeer;\n+import java.awt.peer.RobotPeer;\n+import java.awt.peer.ScrollPanePeer;\n+import java.awt.peer.ScrollbarPeer;\n+import java.awt.peer.SystemTrayPeer;\n+import java.awt.peer.TaskbarPeer;\n+import java.awt.peer.TextAreaPeer;\n+import java.awt.peer.TextFieldPeer;\n+import java.awt.peer.TrayIconPeer;\n+import java.awt.peer.WindowPeer;\n@@ -44,0 +119,7 @@\n+import java.util.Hashtable;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n@@ -47,1 +129,0 @@\n-import sun.awt.AppContext;\n@@ -54,1 +135,0 @@\n-import sun.awt.util.ThreadGroupUtils;\n@@ -58,20 +138,0 @@\n-import sun.java2d.d3d.D3DRenderQueue;\n-import sun.java2d.opengl.OGLRenderQueue;\n-\n-import sun.print.PrintJob2D;\n-\n-import java.awt.dnd.DragSource;\n-import java.awt.dnd.DragGestureListener;\n-import java.awt.dnd.DragGestureEvent;\n-import java.awt.dnd.DragGestureRecognizer;\n-import java.awt.dnd.MouseDragGestureRecognizer;\n-import java.awt.dnd.InvalidDnDOperationException;\n-import java.awt.dnd.peer.DragSourceContextPeer;\n-\n-import java.util.Hashtable;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Properties;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-\n@@ -79,0 +139,1 @@\n+import sun.awt.util.ThreadGroupUtils;\n@@ -82,0 +143,3 @@\n+import sun.java2d.d3d.D3DRenderQueue;\n+import sun.java2d.opengl.OGLRenderQueue;\n+import sun.print.PrintJob2D;\n@@ -499,5 +563,5 @@\n-    public RobotPeer createRobot(Robot target, GraphicsDevice screen) {\n-        \/\/ (target is unused for now)\n-        \/\/ Robot's don't need to go in the peer map since\n-        \/\/ they're not Component's\n-        return new WRobotPeer(screen);\n+    public RobotPeer createRobot(GraphicsDevice screen) throws AWTException {\n+        if (screen instanceof Win32GraphicsDevice) {\n+            return new WRobotPeer();\n+        }\n+        return super.createRobot(screen);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WToolkit.java","additions":100,"deletions":36,"binary":false,"changes":136,"status":"modified"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n+import java.awt.Robot;\n+\n+\/**\n+ * @test\n+ * @key headful\n+ * @bug 8238936\n+ * @summary Check that Robot(GraphicsDevice) constructor throw AWTException if\n+ *          device is unsupported\n+ *\/\n+public final class CreateRobotCustomGC {\n+\n+    public static void main(String[] args) {\n+        try {\n+            new Robot(new GraphicsDevice() {\n+                @Override\n+                public int getType() {\n+                    return TYPE_RASTER_SCREEN;\n+                }\n+\n+                @Override\n+                public String getIDstring() {\n+                    return \"Custom screen device\";\n+                }\n+\n+                @Override\n+                public GraphicsConfiguration[] getConfigurations() {\n+                    return new GraphicsConfiguration[0];\n+                }\n+\n+                @Override\n+                public GraphicsConfiguration getDefaultConfiguration() {\n+                    return null;\n+                }\n+            });\n+            throw new RuntimeException(\"Expected AWTException did not occur\");\n+        } catch (AWTException ignored) {\n+            \/\/ expected AWTException\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/awt\/Robot\/CreateRobotCustomGC\/CreateRobotCustomGC.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"}]}