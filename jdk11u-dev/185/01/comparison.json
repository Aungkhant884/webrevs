{"files":[{"patch":"@@ -358,1 +358,1 @@\n-<p>The minimum accepted version of Visual Studio is 2010. Older versions will not be accepted by <code>configure<\/code>. The maximum accepted version of Visual Studio is 2017. Versions older than 2017 are unlikely to continue working for long.<\/p>\n+<p>The minimum accepted version of Visual Studio is 2010. Older versions will not be accepted by <code>configure<\/code>. The maximum accepted version of Visual Studio is 2019. Versions older than 2017 are unlikely to continue working for long.<\/p>\n","filename":"doc\/building.html","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-2017. Versions older than 2017 are unlikely to continue working for long.\n+2019. Versions older than 2017 are unlikely to continue working for long.\n","filename":"doc\/building.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,0 +176,10 @@\n+        if test \"x$FOUND_FREETYPE\" != \"xyes\" ; then\n+          LIB_CHECK_POTENTIAL_FREETYPE([$FREETYPE_BASE_DIR\/include],\n+              [$FREETYPE_BASE_DIR\/lib\/$OPENJDK_TARGET_CPU-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI], [well-known location])\n+        fi\n+\n+        if test \"x$FOUND_FREETYPE\" != \"xyes\" ; then\n+          LIB_CHECK_POTENTIAL_FREETYPE([$FREETYPE_BASE_DIR\/include],\n+              [$FREETYPE_BASE_DIR\/lib\/$OPENJDK_TARGET_CPU_AUTOCONF-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI], [well-known location])\n+        fi\n+\n","filename":"make\/autoconf\/lib-freetype.m4","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -71,0 +71,4 @@\n+          elif test -f \"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\/libX11.so\"; then\n+            x_libraries=\"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\/libX11.so\"\n+          elif test -f \"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU_AUTOCONF-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\/libX11.so\"; then\n+            x_libraries=\"$SYSROOT\/usr\/lib\/$OPENJDK_TARGET_CPU_AUTOCONF-$OPENJDK_TARGET_OS-$OPENJDK_TARGET_ABI\/libX11.so\"\n","filename":"make\/autoconf\/lib-x11.m4","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -199,0 +199,27 @@\n+# Support macro for PLATFORM_EXTRACT_TARGET_AND_BUILD.\n+# Converts autoconf style OS name to OpenJDK style, into\n+# VAR_ABI.\n+AC_DEFUN([PLATFORM_EXTRACT_VARS_FROM_ABI],\n+[\n+  case \"$1\" in\n+    *linux*-musl)\n+      VAR_ABI=musl\n+      ;;\n+    *linux*-gnu)\n+      VAR_ABI=gnu\n+      ;;\n+    *linux*-gnueabi)\n+      VAR_ABI=gnueabi\n+      ;;\n+    *linux*-gnueabihf)\n+      VAR_ABI=gnueabihf\n+      ;;\n+    *linux*-gnuabi64)\n+      VAR_ABI=gnuabi64\n+      ;;\n+    *)\n+      VAR_ABI=default\n+      ;;\n+  esac\n+])\n+\n@@ -219,0 +246,1 @@\n+  PLATFORM_EXTRACT_VARS_FROM_ABI($build_os)\n@@ -235,0 +263,2 @@\n+  OPENJDK_BUILD_CPU_AUTOCONF=\"$build_cpu\"\n+  OPENJDK_BUILD_ABI=\"$VAR_ABI\"\n@@ -242,0 +272,2 @@\n+  AC_SUBST(OPENJDK_BUILD_CPU_AUTOCONF)\n+  AC_SUBST(OPENJDK_BUILD_ABI)\n@@ -249,0 +281,1 @@\n+  PLATFORM_EXTRACT_VARS_FROM_ABI($host_os)\n@@ -265,0 +298,1 @@\n+  OPENJDK_TARGET_CPU_AUTOCONF=\"$host_cpu\"\n@@ -266,0 +300,1 @@\n+  OPENJDK_TARGET_ABI=\"$VAR_ABI\"\n@@ -275,0 +310,2 @@\n+  AC_SUBST(OPENJDK_TARGET_CPU_AUTOCONF)\n+  AC_SUBST(OPENJDK_TARGET_ABI)\n","filename":"make\/autoconf\/platform.m4","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2012, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-VALID_VS_VERSIONS=\"2017 2013 2015 2012 2010\"\n+VALID_VS_VERSIONS=\"2017 2019 2013 2015 2012 2010\"\n@@ -90,0 +90,15 @@\n+VS_TOOLSET_SUPPORTED_2017=true\n+\n+VS_DESCRIPTION_2019=\"Microsoft Visual Studio 2019\"\n+VS_VERSION_INTERNAL_2019=141\n+VS_MSVCR_2019=vcruntime140.dll\n+VS_MSVCP_2019=msvcp140.dll\n+VS_ENVVAR_2019=\"VS160COMNTOOLS\"\n+VS_USE_UCRT_2019=\"true\"\n+VS_VS_INSTALLDIR_2019=\"Microsoft Visual Studio\/2019\"\n+VS_EDITIONS_2019=\"BuildTools Community Professional Enterprise\"\n+VS_SDK_INSTALLDIR_2019=\n+VS_VS_PLATFORM_NAME_2019=\"v142\"\n+VS_SDK_PLATFORM_NAME_2019=\n+VS_SUPPORTED_2019=false\n+VS_TOOLSET_SUPPORTED_2019=false\n@@ -101,1 +116,1 @@\n-    # In VS 2017, the default installation is in a subdir named after the edition.\n+    # In VS 2017 and VS 2019, the default installation is in a subdir named after the edition.\n@@ -180,0 +195,9 @@\n+  # VS2017 provides the option to install previous minor versions of the MSVC\n+  # toolsets. It is not possible to directly download earlier minor versions of\n+  # VS2017 and in order to build with a previous minor compiler toolset version,\n+  # it is now possible to compile with earlier minor versions by passing\n+  # -vcvars_ver=<toolset_version> argument to vcvarsall.bat.\n+  AC_ARG_WITH(msvc-toolset-version, [AS_HELP_STRING([--with-msvc-toolset-version],\n+      [specific MSVC toolset version to use, passed as -vcvars_ver argument to\n+       pass to vcvarsall.bat (Windows only)])])\n+\n@@ -187,0 +211,1 @@\n+  eval VS_TOOLSET_SUPPORTED=\"\\${VS_TOOLSET_SUPPORTED_${VS_VERSION}}\"\n@@ -244,0 +269,6 @@\n+\n+  if test \"x$VS_TOOLSET_SUPPORTED\" != x; then\n+    if test \"x$with_msvc_toolset_version\" != x; then\n+      VS_ENV_ARGS=\"$VS_ENV_ARGS -vcvars_ver=$with_msvc_toolset_version\"\n+    fi\n+  fi\n@@ -400,0 +431,2 @@\n+      $ECHO \"$WINPATH_BASH -c 'echo VCToolsRedistDir=\"'\\\"$VCToolsRedistDir \\\" >> set-vs-env.sh' \\\n+          >> $EXTRACT_VC_ENV_BAT_FILE\n@@ -445,0 +478,1 @@\n+      VCToolsRedistDir=`$ECHO \"$VCToolsRedistDir\" | $SED 's\/\\\\\\\\* *$\/\/'`\n@@ -564,1 +598,3 @@\n-        # Probe: Using well-known location from VS 2017\n+        CYGWIN_VC_TOOLS_REDIST_DIR=\"$VCToolsRedistDir\"\n+        BASIC_FIXUP_PATH(CYGWIN_VC_TOOLS_REDIST_DIR)\n+        # Probe: Using well-known location from VS 2017 and VS 2019\n@@ -566,1 +602,1 @@\n-          POSSIBLE_MSVC_DLL=\"`ls $CYGWIN_VC_INSTALL_DIR\/Redist\/MSVC\/*\/x64\/Microsoft.VC${VS_VERSION_INTERNAL}.CRT\/$DLL_NAME`\"\n+          POSSIBLE_MSVC_DLL=\"`ls $CYGWIN_VC_TOOLS_REDIST_DIR\/x64\/Microsoft.VC${VS_VERSION_INTERNAL}.CRT\/$DLL_NAME`\"\n@@ -568,1 +604,1 @@\n-          POSSIBLE_MSVC_DLL=\"`ls $CYGWIN_VC_INSTALL_DIR\/Redist\/MSVC\/*\/x86\/Microsoft.VC${VS_VERSION_INTERNAL}.CRT\/$DLL_NAME`\"\n+          POSSIBLE_MSVC_DLL=\"`ls $CYGWIN_VC_TOOLS_REDIST_DIR\/x86\/Microsoft.VC${VS_VERSION_INTERNAL}.CRT\/$DLL_NAME`\"\n","filename":"make\/autoconf\/toolchain_windows.m4","additions":42,"deletions":6,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -0,0 +1,209 @@\n+#!\/bin\/bash\n+#\n+# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# This script copies parts of a Visual Studio installation into a devkit\n+# suitable for building OpenJDK and OracleJDK. Needs to run in Cygwin or WSL.\n+# erik.joelsson@oracle.com\n+\n+VS_VERSION=\"2019\"\n+VS_VERSION_NUM_NODOT=\"160\"\n+VS_DLL_VERSION=\"140\"\n+SDK_VERSION=\"10\"\n+SDK_FULL_VERSION=\"10.0.17763.0\"\n+MSVC_DIR=\"Microsoft.VC141.CRT\"\n+MSVC_FULL_VERSION=\"14.12.27508\"\n+REDIST_FULL_VERSION=\"14.20.27508\"\n+\n+SCRIPT_DIR=\"$(cd \"$(dirname $0)\" > \/dev\/null && pwd)\"\n+BUILD_DIR=\"${SCRIPT_DIR}\/..\/..\/build\/devkit\"\n+\n+################################################################################\n+# Prepare settings\n+\n+UNAME_SYSTEM=`uname -s`\n+UNAME_RELEASE=`uname -r`\n+\n+# Detect cygwin or WSL\n+IS_CYGWIN=`echo $UNAME_SYSTEM | grep -i CYGWIN`\n+IS_WSL=`echo $UNAME_RELEASE | grep Microsoft`\n+if test \"x$IS_CYGWIN\" != \"x\"; then\n+    BUILD_ENV=\"cygwin\"\n+elif test \"x$IS_WSL\" != \"x\"; then\n+    BUILD_ENV=\"wsl\"\n+else\n+    echo \"Unknown environment; only Cygwin and WSL are supported.\"\n+    exit 1\n+fi\n+\n+if test \"x$BUILD_ENV\" = \"xcygwin\"; then\n+    WINDOWS_PATH_TO_UNIX_PATH=\"cygpath -u\"\n+elif test \"x$BUILD_ENV\" = \"xwsl\"; then\n+    WINDOWS_PATH_TO_UNIX_PATH=\"wslpath -u\"\n+fi\n+\n+# Work around the insanely named ProgramFiles(x86) env variable\n+PROGRAMFILES_X86=\"$($WINDOWS_PATH_TO_UNIX_PATH \"$(cmd.exe \/c set | sed -n 's\/^ProgramFiles(x86)=\/\/p' | tr -d '\\r')\")\"\n+\n+# Find Visual Studio installation dir\n+VSNNNCOMNTOOLS=`cmd.exe \/c echo %VS${VS_VERSION_NUM_NODOT}COMNTOOLS% | tr -d '\\r'`\n+if [ -d \"$VSNNNCOMNTOOLS\" ]; then\n+    VS_INSTALL_DIR=\"$($WINDOWS_PATH_TO_UNIX_PATH \"$VSNNNCOMNTOOLS\/..\/..\")\"\n+else\n+    VS_INSTALL_DIR=\"${PROGRAMFILES_X86}\/Microsoft Visual Studio\/2019\"\n+    VS_INSTALL_DIR=\"$(ls -d \"${VS_INSTALL_DIR}\/\"{Community,Professional,Enterprise} 2>\/dev\/null | head -n1)\"\n+fi\n+echo \"VS_INSTALL_DIR: $VS_INSTALL_DIR\"\n+\n+# Extract semantic version\n+POTENTIAL_INI_FILES=\"Common7\/IDE\/wdexpress.isolation.ini Common7\/IDE\/devenv.isolation.ini\"\n+for f in $POTENTIAL_INI_FILES; do\n+    if [ -f \"$VS_INSTALL_DIR\/$f\" ]; then\n+        VS_VERSION_SP=\"$(grep ^SemanticVersion= \"$VS_INSTALL_DIR\/$f\")\"\n+        # Remove SemnaticVersion=\n+        VS_VERSION_SP=\"${VS_VERSION_SP#*=}\"\n+        # Remove suffix of too detailed numbering starting with +\n+        VS_VERSION_SP=\"${VS_VERSION_SP%+*}\"\n+        break\n+    fi\n+done\n+if [ -z \"$VS_VERSION_SP\" ]; then\n+    echo \"Failed to find SP version\"\n+    exit 1\n+fi\n+echo \"Found Version SP: $VS_VERSION_SP\"\n+\n+# Setup output dirs\n+DEVKIT_ROOT=\"${BUILD_DIR}\/VS${VS_VERSION}-${VS_VERSION_SP}-devkit\"\n+DEVKIT_BUNDLE=\"${DEVKIT_ROOT}.tar.gz\"\n+\n+echo \"Creating devkit in $DEVKIT_ROOT\"\n+\n+MSVCR_DLL=${MSVC_DIR}\/vcruntime${VS_DLL_VERSION}.dll\n+MSVCP_DLL=${MSVC_DIR}\/msvcp${VS_DLL_VERSION}.dll\n+\n+################################################################################\n+# Copy Visual Studio files\n+\n+TOOLS_VERSION=\"$(ls \"$VS_INSTALL_DIR\/VC\/Tools\/MSVC\" | sort -r -n | head -n1)\"\n+echo \"Found Tools version: $TOOLS_VERSION\"\n+VC_SUBDIR=\"VC\/Tools\/MSVC\/$TOOLS_VERSION\"\n+REDIST_VERSION=\"$(ls \"$VS_INSTALL_DIR\/VC\/Redist\/MSVC\" | sort -r -n | head -n1)\"\n+echo \"Found Redist version: $REDIST_VERSION\"\n+REDIST_SUBDIR=\"VC\/Redist\/MSVC\/$REDIST_VERSION\"\n+echo \"Copying VC...\"\n+rm -rf $DEVKIT_ROOT\/VC\n+mkdir -p $DEVKIT_ROOT\/VC\/bin\n+cp -r \"$VS_INSTALL_DIR\/${VC_SUBDIR}\/bin\/Hostx64\/x64\" $DEVKIT_ROOT\/VC\/bin\/\n+cp -r \"$VS_INSTALL_DIR\/${VC_SUBDIR}\/bin\/Hostx86\/x86\" $DEVKIT_ROOT\/VC\/bin\/\n+mkdir -p $DEVKIT_ROOT\/VC\/lib\n+cp -r \"$VS_INSTALL_DIR\/${VC_SUBDIR}\/lib\/x64\" $DEVKIT_ROOT\/VC\/lib\/\n+cp -r \"$VS_INSTALL_DIR\/${VC_SUBDIR}\/lib\/x86\" $DEVKIT_ROOT\/VC\/lib\/\n+cp -r \"$VS_INSTALL_DIR\/${VC_SUBDIR}\/include\" $DEVKIT_ROOT\/VC\/\n+mkdir -p $DEVKIT_ROOT\/VC\/atlmfc\/lib\n+cp -r \"$VS_INSTALL_DIR\/${VC_SUBDIR}\/atlmfc\/lib\/x64\" $DEVKIT_ROOT\/VC\/atlmfc\/lib\/\n+cp -r \"$VS_INSTALL_DIR\/${VC_SUBDIR}\/atlmfc\/lib\/x86\" $DEVKIT_ROOT\/VC\/atlmfc\/lib\/\n+cp -r \"$VS_INSTALL_DIR\/${VC_SUBDIR}\/atlmfc\/include\" $DEVKIT_ROOT\/VC\/atlmfc\/\n+mkdir -p $DEVKIT_ROOT\/VC\/Auxiliary\n+cp -r \"$VS_INSTALL_DIR\/VC\/Auxiliary\/Build\" $DEVKIT_ROOT\/VC\/Auxiliary\/\n+mkdir -p $DEVKIT_ROOT\/VC\/redist\n+cp -r \"$VS_INSTALL_DIR\/$REDIST_SUBDIR\/x64\" $DEVKIT_ROOT\/VC\/redist\/\n+cp -r \"$VS_INSTALL_DIR\/$REDIST_SUBDIR\/x86\" $DEVKIT_ROOT\/VC\/redist\/\n+\n+# The redist runtime libs are needed to run the compiler but may not be\n+# installed on the machine where the devkit will be used.\n+cp $DEVKIT_ROOT\/VC\/redist\/x86\/$MSVCR_DLL $DEVKIT_ROOT\/VC\/bin\/x86\n+cp $DEVKIT_ROOT\/VC\/redist\/x86\/$MSVCP_DLL $DEVKIT_ROOT\/VC\/bin\/x86\n+cp $DEVKIT_ROOT\/VC\/redist\/x64\/$MSVCR_DLL $DEVKIT_ROOT\/VC\/bin\/x64\n+cp $DEVKIT_ROOT\/VC\/redist\/x64\/$MSVCP_DLL $DEVKIT_ROOT\/VC\/bin\/x64\n+\n+################################################################################\n+# Copy SDK files\n+\n+SDK_INSTALL_DIR=\"$PROGRAMFILES_X86\/Windows Kits\/$SDK_VERSION\"\n+echo \"SDK_INSTALL_DIR: $SDK_INSTALL_DIR\"\n+\n+SDK_FULL_VERSION=\"$(ls \"$SDK_INSTALL_DIR\/bin\" | sort -r -n | head -n1)\"\n+echo \"Found SDK version: $SDK_FULL_VERSION\"\n+UCRT_VERSION=\"$(ls \"$SDK_INSTALL_DIR\/Redist\" | grep $SDK_VERSION | sort -r -n | head -n1)\"\n+echo \"Found UCRT version: $UCRT_VERSION\"\n+echo \"Copying SDK...\"\n+rm -rf $DEVKIT_ROOT\/$SDK_VERSION\n+mkdir -p $DEVKIT_ROOT\/$SDK_VERSION\/bin\n+cp -r \"$SDK_INSTALL_DIR\/bin\/$SDK_FULL_VERSION\/x64\" $DEVKIT_ROOT\/$SDK_VERSION\/bin\/\n+cp -r \"$SDK_INSTALL_DIR\/bin\/$SDK_FULL_VERSION\/x86\" $DEVKIT_ROOT\/$SDK_VERSION\/bin\/\n+mkdir -p $DEVKIT_ROOT\/$SDK_VERSION\/lib\n+cp -r \"$SDK_INSTALL_DIR\/lib\/$SDK_FULL_VERSION\/um\/x64\" $DEVKIT_ROOT\/$SDK_VERSION\/lib\/\n+cp -r \"$SDK_INSTALL_DIR\/lib\/$SDK_FULL_VERSION\/um\/x86\" $DEVKIT_ROOT\/$SDK_VERSION\/lib\/\n+cp -r \"$SDK_INSTALL_DIR\/lib\/$SDK_FULL_VERSION\/ucrt\/x64\" $DEVKIT_ROOT\/$SDK_VERSION\/lib\/\n+cp -r \"$SDK_INSTALL_DIR\/lib\/$SDK_FULL_VERSION\/ucrt\/x86\" $DEVKIT_ROOT\/$SDK_VERSION\/lib\/\n+mkdir -p $DEVKIT_ROOT\/$SDK_VERSION\/Redist\n+cp -r \"$SDK_INSTALL_DIR\/Redist\/$UCRT_VERSION\/ucrt\" $DEVKIT_ROOT\/$SDK_VERSION\/Redist\/\n+mkdir -p $DEVKIT_ROOT\/$SDK_VERSION\/include\n+cp -r \"$SDK_INSTALL_DIR\/include\/$SDK_FULL_VERSION\/\"* $DEVKIT_ROOT\/$SDK_VERSION\/include\/\n+\n+################################################################################\n+# Generate devkit.info\n+\n+echo-info() {\n+    echo \"$1\" >> $DEVKIT_ROOT\/devkit.info\n+}\n+\n+echo \"Generating devkit.info...\"\n+rm -f $DEVKIT_ROOT\/devkit.info\n+echo-info \"# This file describes to configure how to interpret the contents of this devkit\"\n+echo-info \"DEVKIT_NAME=\\\"Microsoft Visual Studio $VS_VERSION $VS_VERSION_SP (devkit)\\\"\"\n+echo-info \"DEVKIT_VS_VERSION=\\\"$VS_VERSION\\\"\"\n+echo-info \"\"\n+echo-info \"DEVKIT_TOOLCHAIN_PATH_x86=\\\"\\$DEVKIT_ROOT\/VC\/bin\/x86:\\$DEVKIT_ROOT\/$SDK_VERSION\/bin\/x86\\\"\"\n+echo-info \"DEVKIT_VS_INCLUDE_x86=\\\"\\$DEVKIT_ROOT\/VC\/include;\\$DEVKIT_ROOT\/VC\/atlmfc\/include;\\$DEVKIT_ROOT\/$SDK_VERSION\/include\/shared;\\$DEVKIT_ROOT\/$SDK_VERSION\/include\/ucrt;\\$DEVKIT_ROOT\/$SDK_VERSION\/include\/um;\\$DEVKIT_ROOT\/$SDK_VERSION\/include\/winrt\\\"\"\n+echo-info \"DEVKIT_VS_LIB_x86=\\\"\\$DEVKIT_ROOT\/VC\/lib\/x86;\\$DEVKIT_ROOT\/VC\/atlmfc\/lib\/x86;\\$DEVKIT_ROOT\/$SDK_VERSION\/lib\/x86\\\"\"\n+echo-info \"DEVKIT_MSVCR_DLL_x86=\\\"\\$DEVKIT_ROOT\/VC\/redist\/x86\/$MSVCR_DLL\\\"\"\n+echo-info \"DEVKIT_MSVCP_DLL_x86=\\\"\\$DEVKIT_ROOT\/VC\/redist\/x86\/$MSVCP_DLL\\\"\"\n+echo-info \"DEVKIT_UCRT_DLL_DIR_x86=\\\"\\$DEVKIT_ROOT\/10\/Redist\/ucrt\/DLLs\/x86\\\"\"\n+echo-info \"\"\n+echo-info \"DEVKIT_TOOLCHAIN_PATH_x86_64=\\\"\\$DEVKIT_ROOT\/VC\/bin\/x64:\\$DEVKIT_ROOT\/$SDK_VERSION\/bin\/x64:\\$DEVKIT_ROOT\/$SDK_VERSION\/bin\/x86\\\"\"\n+echo-info \"DEVKIT_VS_INCLUDE_x86_64=\\\"\\$DEVKIT_ROOT\/VC\/include;\\$DEVKIT_ROOT\/VC\/atlmfc\/include;\\$DEVKIT_ROOT\/$SDK_VERSION\/include\/shared;\\$DEVKIT_ROOT\/$SDK_VERSION\/include\/ucrt;\\$DEVKIT_ROOT\/$SDK_VERSION\/include\/um;\\$DEVKIT_ROOT\/$SDK_VERSION\/include\/winrt\\\"\"\n+echo-info \"DEVKIT_VS_LIB_x86_64=\\\"\\$DEVKIT_ROOT\/VC\/lib\/x64;\\$DEVKIT_ROOT\/VC\/atlmfc\/lib\/x64;\\$DEVKIT_ROOT\/$SDK_VERSION\/lib\/x64\\\"\"\n+echo-info \"DEVKIT_MSVCR_DLL_x86_64=\\\"\\$DEVKIT_ROOT\/VC\/redist\/x64\/$MSVCR_DLL\\\"\"\n+echo-info \"DEVKIT_MSVCP_DLL_x86_64=\\\"\\$DEVKIT_ROOT\/VC\/redist\/x64\/$MSVCP_DLL\\\"\"\n+echo-info \"DEVKIT_UCRT_DLL_DIR_x86_64=\\\"\\$DEVKIT_ROOT\/10\/Redist\/ucrt\/DLLs\/x64\\\"\"\n+echo-info \"\"\n+echo-info \"DEVKIT_TOOLS_VERSION=\\\"$TOOLS_VERSION\\\"\"\n+echo-info \"DEVKIT_REDIST_VERSION=\\\"$REDIST_VERSION\\\"\"\n+echo-info \"DEVKIT_SDK_VERSION=\\\"$SDK_FULL_VERSION\\\"\"\n+echo-info \"DEVKIT_UCRT_VERSION=\\\"$UCRT_VERSION\\\"\"\n+\n+################################################################################\n+# Copy this script\n+\n+echo \"Copying this script...\"\n+cp $0 $DEVKIT_ROOT\/\n+\n+################################################################################\n+# Create bundle\n+\n+echo \"Creating bundle: $DEVKIT_BUNDLE\"\n+(cd \"$DEVKIT_ROOT\" && tar zcf \"$DEVKIT_BUNDLE\" .)\n","filename":"make\/devkit\/createWindowsDevkit2019.sh","additions":209,"deletions":0,"binary":false,"changes":209,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,3 +81,6 @@\n-    (void)snprintf(tbuf, ltbuf,\n-                   \"%s.%.3d %s\", timestamp_date_time,\n-                   (int)(millisecs), timestamp_timezone);\n+\n+    \/\/ Truncate milliseconds in buffer large enough to hold the\n+    \/\/ value which is always < 1000 (and so a maximum of 3 digits for \"%.3d\")\n+    char tmp[20];\n+    snprintf(tmp, sizeof(tmp), \"%.3d\", millisecs);\n+    snprintf(tbuf, ltbuf, \"%s.%.3s %s\", timestamp_date_time, tmp, timestamp_timezone);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/log_messages.c","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}