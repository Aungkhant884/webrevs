{"files":[{"patch":"@@ -54,1 +54,0 @@\n-import java.util.HexFormat;\n@@ -72,0 +71,1 @@\n+import static java.util.stream.Collectors.toList;\n@@ -153,1 +153,5 @@\n-    record bytes(byte[] bytes) {\n+    private static class Bytes {\n+        private final byte[] bytes;\n+        public Bytes(byte[] bytes) {\n+            this.bytes = bytes;\n+        }\n@@ -157,2 +161,5 @@\n-            if (o instanceof bytes other) {\n-                return Arrays.equals(bytes(), other.bytes());\n+            if (o instanceof byte[]) {\n+                return Arrays.equals(bytes, (byte[]) o);\n+            }\n+            if (o instanceof Bytes) {\n+                return Arrays.equals(bytes, ((Bytes) o).getBytes());\n@@ -162,0 +169,3 @@\n+        public byte[] getBytes() {\n+            return bytes;\n+        }\n@@ -163,1 +173,3 @@\n-        public int hashCode() { return Arrays.hashCode(bytes()); }\n+        public int hashCode() {\n+            return Arrays.hashCode(bytes);\n+        }\n@@ -165,3 +177,5 @@\n-            return \"0x\" + HexFormat.of()\n-                    .withUpperCase()\n-                    .formatHex(bytes());\n+            StringBuilder builder = new StringBuilder(\"0x\");\n+            for (byte aByte : bytes) {\n+                builder.append(String.format(\"%X\", aByte).toUpperCase());\n+            }\n+            return builder.toString();\n@@ -171,2 +185,5 @@\n-    static List<bytes> ofBytes(List<byte[]> bytes) {\n-        return bytes.stream().map(bytes::new).toList();\n+    static List<Bytes> ofBytes(List<byte[]> bytes) {\n+        return bytes\n+            .stream()\n+            .map(byteArray -> new Bytes(byteArray))\n+            .collect(Collectors.toList());\n@@ -179,1 +196,1 @@\n-        return \"%s and %s %s\".formatted(actual, expected, message);\n+        return String.format(\"%s and %s %s\", actual, expected, message);\n","filename":"test\/jdk\/java\/net\/httpclient\/websocket\/WebSocketProxyTest.java","additions":28,"deletions":11,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import java.util.HexFormat;\n@@ -61,0 +60,1 @@\n+import static java.util.stream.Collectors.toList;\n@@ -437,1 +437,5 @@\n-    record bytes(byte[] bytes) {\n+    private static class Bytes {\n+        private final byte[] bytes;\n+        public Bytes(byte[] bytes) {\n+            this.bytes = bytes;\n+        }\n@@ -441,2 +445,5 @@\n-            if (o instanceof bytes other) {\n-                return Arrays.equals(bytes(), other.bytes());\n+            if (o instanceof byte[]) {\n+                return Arrays.equals(bytes, (byte[]) o);\n+            }\n+            if (o instanceof Bytes) {\n+                return Arrays.equals(bytes, ((Bytes) o).getBytes());\n@@ -446,0 +453,3 @@\n+        public byte[] getBytes() {\n+            return bytes;\n+        }\n@@ -447,1 +457,3 @@\n-        public int hashCode() { return Arrays.hashCode(bytes()); }\n+        public int hashCode() {\n+            return Arrays.hashCode(bytes);\n+        }\n@@ -449,3 +461,5 @@\n-            return \"0x\" + HexFormat.of()\n-                    .withUpperCase()\n-                    .formatHex(bytes());\n+            StringBuilder builder = new StringBuilder(\"0x\");\n+            for (byte aByte : bytes) {\n+                builder.append(String.format(\"%X\", aByte).toUpperCase());\n+            }\n+            return builder.toString();\n@@ -455,2 +469,5 @@\n-    static List<bytes> ofBytes(List<byte[]> bytes) {\n-        return bytes.stream().map(bytes::new).toList();\n+    static List<Bytes> ofBytes(List<byte[]> bytes) {\n+        return bytes\n+            .stream()\n+            .map(byteArray -> new Bytes(byteArray))\n+            .collect(Collectors.toList());\n@@ -463,1 +480,1 @@\n-        return \"%s and %s %s\".formatted(actual, expected, message);\n+        return String.format(\"%s and %s %s\", actual, expected, message);\n","filename":"test\/jdk\/java\/net\/httpclient\/websocket\/WebSocketTest.java","additions":28,"deletions":11,"binary":false,"changes":39,"status":"modified"}]}