{"files":[{"patch":"@@ -2303,1 +2303,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t size, bool exec) {\n+bool os::pd_uncommit_memory(char* addr, size_t size) {\n@@ -2377,1 +2377,1 @@\n-char* os::pd_reserve_memory(size_t bytes, char* requested_addr, size_t alignment_hint, bool executable) {\n+char* os::pd_reserve_memory(size_t bytes, char* requested_addr, size_t alignment_hint) {\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3389,1 +3389,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t size, bool exec) {\n+bool os::pd_uncommit_memory(char* addr, size_t size) {\n@@ -3577,1 +3577,1 @@\n-  return os::uncommit_memory(addr, size, !ExecMem);\n+  return os::uncommit_memory(addr, size);\n@@ -3652,2 +3652,1 @@\n-                            size_t alignment_hint,\n-                            bool executable) {\n+                            size_t alignment_hint) {\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2533,1 +2533,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t bytes, bool exec) {\n+bool os::pd_uncommit_memory(char* addr, size_t bytes) {\n@@ -2575,1 +2575,1 @@\n-                            size_t alignment_hint, bool executable) {\n+                            size_t alignment_hint) {\n","filename":"src\/hotspot\/os\/solaris\/os_solaris.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3192,1 +3192,1 @@\n-char* os::pd_reserve_memory(size_t bytes, char* addr, size_t alignment_hint, bool executable) {\n+char* os::pd_reserve_memory(size_t bytes, char* addr, size_t alignment_hint) {\n@@ -3398,1 +3398,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t bytes, bool exec) {\n+bool os::pd_uncommit_memory(char* addr, size_t bytes) {\n@@ -3417,1 +3417,1 @@\n-  return os::uncommit_memory(addr, size, !ExecMem);\n+  return os::uncommit_memory(addr, size);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-  os::uncommit_memory(start_addr, pointer_delta(bounded_end_addr(end_page), start_addr, sizeof(char)), !ExecMem);\n+  os::uncommit_memory(start_addr, pointer_delta(bounded_end_addr(end_page), start_addr, sizeof(char)));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1PageBasedVirtualSpace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -560,2 +560,1 @@\n-                               uncommit_region.byte_size(),\n-                               !ExecMem)) {\n+                               uncommit_region.byte_size())) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-  bool result = special() || os::uncommit_memory(base_addr, bytes, !ExecMem);\n+  bool result = special() || os::uncommit_memory(base_addr, bytes);\n@@ -265,1 +265,1 @@\n-  bool result = special() || os::uncommit_memory(base_addr, bytes, !ExecMem);\n+  bool result = special() || os::uncommit_memory(base_addr, bytes);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -276,2 +276,1 @@\n-                                   uncommit_region.byte_size(),\n-                                   !ExecMem)) {\n+                                   uncommit_region.byte_size())) {\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1323,1 +1323,1 @@\n-  if (!_aux_bitmap_region_special && !os::uncommit_memory((char*)_aux_bitmap_region.start(), _aux_bitmap_region.byte_size(), !ExecMem)) {\n+  if (!_aux_bitmap_region_special && !os::uncommit_memory((char*)_aux_bitmap_region.start(), _aux_bitmap_region.byte_size())) {\n@@ -2397,1 +2397,1 @@\n-  if (!os::uncommit_memory((char*)_bitmap_region.start() + off, len, !ExecMem)) {\n+  if (!os::uncommit_memory((char*)_bitmap_region.start() + off, len)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -651,1 +651,1 @@\n-  if (!heap->is_heap_region_special() && !os::uncommit_memory((char *) bottom(), RegionSizeBytes, !ExecMem)) {\n+  if (!heap->is_heap_region_special() && !os::uncommit_memory((char *) bottom(), RegionSizeBytes)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -643,1 +643,1 @@\n-  os::uncommit_memory((char *)(uintptr_t)addr, size, !ExecMem);\n+  os::uncommit_memory((char *)(uintptr_t)addr, size);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1740,1 +1740,2 @@\n-char* os::reserve_memory(size_t bytes, char* addr, size_t alignment_hint, int file_desc, bool executable) {\n+MACOS_ONLY(char* os::reserve_memory(size_t bytes, char* addr, size_t alignment_hint, int file_desc, bool executable))\n+NOT_MACOS(char* os::reserve_memory(size_t bytes, char* addr, size_t alignment_hint, int file_desc)) {\n@@ -1751,1 +1752,2 @@\n-    result = pd_reserve_memory(bytes, addr, alignment_hint, executable);\n+    result = MACOS_ONLY(pd_reserve_memory(bytes, addr, alignment_hint, executable))\n+             NOT_MACOS(pd_reserve_memory(bytes, addr, alignment_hint));\n@@ -1821,1 +1823,2 @@\n-bool os::uncommit_memory(char* addr, size_t bytes, bool exec) {\n+MACOS_ONLY(bool os::uncommit_memory(char* addr, size_t bytes, bool executable))\n+NOT_MACOS(bool os::uncommit_memory(char* addr, size_t bytes)) {\n@@ -1825,1 +1828,2 @@\n-    res = pd_uncommit_memory(addr, bytes, exec);\n+    res = MACOS_ONLY(pd_uncommit_memory(addr, bytes, executable))\n+          NOT_MACOS(pd_uncommit_memory(addr, bytes));\n@@ -1830,1 +1834,2 @@\n-    res = pd_uncommit_memory(addr, bytes, exec);\n+    res = MACOS_ONLY(pd_uncommit_memory(addr, bytes, executable))\n+          NOT_MACOS(pd_uncommit_memory(addr, bytes));\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -114,3 +114,6 @@\n-  static char*  pd_reserve_memory(size_t bytes, char* addr = 0,\n-                                  size_t alignment_hint = 0,\n-                                  bool executable = false);\n+\n+  MACOS_ONLY(static char*  pd_reserve_memory(size_t bytes, char* addr = 0,\n+                                             size_t alignment_hint = 0,\n+                                             bool executable = false);)\n+  NOT_MACOS(static char*  pd_reserve_memory(size_t bytes, char* addr = 0,\n+                                            size_t alignment_hint = 0);)\n@@ -131,1 +134,3 @@\n-  static bool   pd_uncommit_memory(char* addr, size_t bytes, bool exec);\n+  MACOS_ONLY(static bool   pd_uncommit_memory(char* addr, size_t bytes,\n+                                              bool executable = false);)\n+  NOT_MACOS(static bool   pd_uncommit_memory(char* addr, size_t bytes);)\n@@ -329,3 +334,5 @@\n-  static char*  reserve_memory(size_t bytes, char* addr = 0,\n-                               size_t alignment_hint = 0, int file_desc = -1,\n-                               bool executable = false);\n+  MACOS_ONLY(static char*  reserve_memory(size_t bytes, char* addr = 0,\n+                                          size_t alignment_hint = 0, int file_desc = -1,\n+                                          bool executable = false);)\n+  NOT_MACOS(static char*  reserve_memory(size_t bytes, char* addr = 0,\n+                                         size_t alignment_hint = 0, int file_desc = -1);)\n@@ -348,1 +355,2 @@\n-  static bool   uncommit_memory(char* addr, size_t bytes, bool exec);\n+  MACOS_ONLY(static bool   uncommit_memory(char* addr, size_t bytes, bool executable = false);)\n+  NOT_MACOS(static bool   uncommit_memory(char* addr, size_t bytes);)\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2625,1 +2625,1 @@\n-    if (os::uncommit_memory((char *) low_addr, len, !ExecMem)) {\n+    if (os::uncommit_memory((char *) low_addr, len)) {\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}