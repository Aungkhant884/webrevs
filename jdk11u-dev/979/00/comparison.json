{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -305,1 +305,1 @@\n-            Random random = new Random(0);\n+            Random random = new Random(42);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/except\/except012.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,2 +72,0 @@\n-import java.util.Random;\n-\n@@ -284,1 +282,0 @@\n-            Random rand = new Random();\n@@ -287,1 +284,1 @@\n-                array[i] = (char) rand.nextInt();\n+                array[i] = (char) LocalRandom.nextInt();\n@@ -458,1 +455,0 @@\n-            Random rand = new Random();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/gclocker\/gcl001.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -64,0 +64,1 @@\n+import jdk.test.lib.Utils;\n@@ -436,1 +437,1 @@\n-    static Random myRandom = new Random();\n+    Random myRandom = new Random(Utils.getRandomInstance().nextLong());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/jnistress002.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -52,0 +52,1 @@\n+ * @library \/test\/lib\n@@ -58,0 +59,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -85,0 +88,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -291,1 +295,1 @@\n-                    value[line][column] = Math.random() * size;\n+                    value[line][column] = RNG.nextDouble() * size;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric001.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -52,0 +52,1 @@\n+ * @library \/test\/lib\n@@ -58,0 +59,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -85,0 +88,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -309,1 +313,1 @@\n-                    value[line][column] = (float) (Math.random() * size);\n+                    value[line][column] = (float) (RNG.nextDouble() * size);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric002.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -52,0 +52,1 @@\n+ * @library \/test\/lib\n@@ -58,0 +59,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -85,0 +88,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -291,1 +295,1 @@\n-                    value[line][column] = Math.round(Math.random() * size);\n+                    value[line][column] = Math.round(RNG.nextDouble() * size);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric003.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -52,0 +52,1 @@\n+ * @library \/test\/lib\n@@ -58,0 +59,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -85,0 +88,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -291,1 +295,1 @@\n-                    value[line][column] = Math.round((float) (Math.random() * size));\n+                    value[line][column] = Math.round((float) (RNG.nextDouble() * size));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric004.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -64,0 +64,1 @@\n+ * @library \/test\/lib\n@@ -70,0 +71,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -113,0 +116,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -377,1 +381,1 @@\n-                A[line][column] = (1 - 2 * Math.random()) * size;\n+                A[line][column] = (1 - 2 * RNG.nextDouble()) * size;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric005.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -63,0 +63,1 @@\n+ * @library \/test\/lib\n@@ -69,0 +70,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -112,0 +115,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -376,1 +380,1 @@\n-                A[line][column] = (float) ((1 - 2 * Math.random()) * size);\n+                A[line][column] = (float) ((1 - 2 * RNG.nextDouble()) * size);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric006.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -63,0 +63,1 @@\n+ * @library \/test\/lib\n@@ -69,0 +70,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -112,0 +115,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -376,1 +380,1 @@\n-                A[line][column] = Math.round((1 - 2 * Math.random()) * size);\n+                A[line][column] = Math.round((1 - 2 * RNG.nextDouble()) * size);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric007.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -63,0 +63,1 @@\n+ * @library \/test\/lib\n@@ -69,0 +70,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -112,0 +115,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -376,1 +380,1 @@\n-                A[line][column] = Math.round((float) ((1 - 2 * Math.random()) * size));\n+                A[line][column] = Math.round((float) ((1 - 2 * RNG.nextDouble()) * size));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric008.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -65,0 +65,1 @@\n+ * @library \/test\/lib\n@@ -71,0 +72,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -118,0 +121,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -503,1 +507,1 @@\n-                        Math.round((float) ((1 - 2 * Math.random()) * size));\n+                        Math.round((float) ((1 - 2 * RNG.nextDouble()) * size));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric009.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @key stress\n+ * @key stress randomness\n@@ -71,0 +71,1 @@\n+ * @library \/test\/lib\n@@ -77,0 +78,2 @@\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n@@ -128,0 +131,1 @@\n+    private static final Random RNG = Utils.getRandomInstance();\n@@ -435,1 +439,1 @@\n-                            Math.round((float) ((1 - 2 * Math.random()) * size));\n+                            Math.round((float) ((1 - 2 * RNG.nextDouble()) * size));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/numeric\/numeric010.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}