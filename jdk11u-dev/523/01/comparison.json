{"files":[{"patch":"@@ -782,3 +782,0 @@\n-javax\/swing\/JTree\/4927934\/bug4927934.java 8233550 macosx-all\n-javax\/swing\/JTree\/4908142\/bug4908142.java 8233550 macosx-all\n-javax\/swing\/JTree\/4330357\/bug4330357.java 8233550 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,4 +34,24 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.*;\n-import javax.swing.tree.*;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.AbstractCellEditor;\n+import javax.swing.JButton;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextField;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.tree.DefaultTreeCellEditor;\n+import javax.swing.tree.DefaultTreeCellRenderer;\n+import javax.swing.tree.TreeCellEditor;\n@@ -41,0 +61,1 @@\n+    private static JFrame frame;\n@@ -51,1 +72,2 @@\n-        javax.swing.SwingUtilities.invokeAndWait(new Runnable() {\n+        try {\n+            javax.swing.SwingUtilities.invokeAndWait(new Runnable() {\n@@ -53,4 +75,4 @@\n-            public void run() {\n-                createAndShowGUI();\n-            }\n-        });\n+                public void run() {\n+                    createAndShowGUI();\n+                }\n+            });\n@@ -58,1 +80,1 @@\n-        robot.waitForIdle();\n+            robot.waitForIdle();\n@@ -60,4 +82,4 @@\n-        clickMouse(getTreeRowClickPoint(1));\n-        Util.hitKeys(robot, KeyEvent.VK_F2);\n-        Util.hitKeys(robot, KeyEvent.VK_A, KeyEvent.VK_B, KeyEvent.VK_C);\n-        robot.waitForIdle();\n+            clickMouse(getTreeRowClickPoint(1));\n+            Util.hitKeys(robot, KeyEvent.VK_F2);\n+            Util.hitKeys(robot, KeyEvent.VK_A, KeyEvent.VK_B, KeyEvent.VK_C);\n+            robot.waitForIdle();\n@@ -65,3 +87,3 @@\n-        if (!hasComponent(JTextField.class)) {\n-            throw new RuntimeException(\"Cell editor is missed for path: color\");\n-        }\n+            if (!hasComponent(JTextField.class)) {\n+                throw new RuntimeException(\"Cell editor is missed for path: color\");\n+            }\n@@ -70,2 +92,2 @@\n-        clickMouse(getButtonClickPoint());\n-        robot.waitForIdle();\n+            clickMouse(getButtonClickPoint());\n+            robot.waitForIdle();\n@@ -73,3 +95,3 @@\n-        clickMouse(getTreeRowClickPoint(2));\n-        Util.hitKeys(robot, KeyEvent.VK_F2);\n-        robot.waitForIdle();\n+            clickMouse(getTreeRowClickPoint(2));\n+            Util.hitKeys(robot, KeyEvent.VK_F2);\n+            robot.waitForIdle();\n@@ -77,3 +99,3 @@\n-        if (!hasComponent(JComboBox.class)) {\n-            throw new RuntimeException(\"Cell editor is missed for path: sports\");\n-        }\n+            if (!hasComponent(JComboBox.class)) {\n+                throw new RuntimeException(\"Cell editor is missed for path: sports\");\n+            }\n@@ -81,2 +103,7 @@\n-        if (hasComponent(JTextField.class)) {\n-            throw new RuntimeException(\"Cell editor is wrongly shown for path: color\");\n+            if (hasComponent(JTextField.class)) {\n+                throw new RuntimeException(\"Cell editor is wrongly shown for path: color\");\n+            }\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(frame::dispose);\n+            }\n@@ -140,1 +167,1 @@\n-        JFrame frame = new JFrame(\"Test\");\n+        frame = new JFrame(\"Test\");\n","filename":"test\/jdk\/javax\/swing\/JTree\/4330357\/bug4330357.java","additions":55,"deletions":28,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -35,4 +35,7 @@\n-import javax.swing.*;\n-import javax.swing.tree.*;\n-import java.awt.*;\n-import java.awt.event.*;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n@@ -43,1 +46,2 @@\n-    private static JTree tree;\n+    private static JFrame fr = null;\n+    private static JTree tree = null;\n@@ -50,1 +54,2 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n@@ -52,4 +57,4 @@\n-            public void run() {\n-                createAndShowGUI();\n-            }\n-        });\n+                public void run() {\n+                    createAndShowGUI();\n+                }\n+            });\n@@ -57,1 +62,1 @@\n-        robot.waitForIdle();\n+            robot.waitForIdle();\n@@ -59,1 +64,1 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n@@ -61,5 +66,5 @@\n-            public void run() {\n-                tree.requestFocus();\n-                tree.setSelectionRow(0);\n-            }\n-        });\n+                public void run() {\n+                    tree.requestFocus();\n+                    tree.setSelectionRow(0);\n+                }\n+            });\n@@ -67,1 +72,1 @@\n-        robot.waitForIdle();\n+            robot.waitForIdle();\n@@ -70,7 +75,7 @@\n-        robot.keyPress(KeyEvent.VK_A);\n-        robot.keyRelease(KeyEvent.VK_A);\n-        robot.keyPress(KeyEvent.VK_A);\n-        robot.keyRelease(KeyEvent.VK_A);\n-        robot.keyPress(KeyEvent.VK_D);\n-        robot.keyRelease(KeyEvent.VK_D);\n-        robot.waitForIdle();\n+            robot.keyPress(KeyEvent.VK_A);\n+            robot.keyRelease(KeyEvent.VK_A);\n+            robot.keyPress(KeyEvent.VK_A);\n+            robot.keyRelease(KeyEvent.VK_A);\n+            robot.keyPress(KeyEvent.VK_D);\n+            robot.keyRelease(KeyEvent.VK_D);\n+            robot.waitForIdle();\n@@ -79,1 +84,1 @@\n-        String sel = Util.invokeOnEDT(new Callable<String>() {\n+            String sel = Util.invokeOnEDT(new Callable<String>() {\n@@ -81,5 +86,5 @@\n-            @Override\n-            public String call() throws Exception {\n-                return tree.getLastSelectedPathComponent().toString();\n-            }\n-        });\n+                @Override\n+                public String call() throws Exception {\n+                    return tree.getLastSelectedPathComponent().toString();\n+                }\n+            });\n@@ -87,2 +92,7 @@\n-        if (!\"aad\".equals(sel)) {\n-            throw new Error(\"The selected index should be \\\"aad\\\", but not \" + sel);\n+            if (!\"aad\".equals(sel)) {\n+                throw new Error(\"The selected index should be \\\"aad\\\", but not \" + sel);\n+            }\n+        } finally {\n+            if (fr != null) {\n+                SwingUtilities.invokeAndWait(fr::dispose);\n+            }\n@@ -93,1 +103,1 @@\n-        JFrame fr = new JFrame(\"Test\");\n+        fr = new JFrame(\"Test\");\n","filename":"test\/jdk\/javax\/swing\/JTree\/4908142\/bug4908142.java","additions":44,"deletions":34,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-  @key headful\n+   @key headful\n@@ -32,6 +32,15 @@\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.tree.*;\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.lang.reflect.InvocationTargetException;\n+import java.awt.Robot;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.JScrollPane;\n+import javax.swing.event.TreeSelectionListener;\n+import javax.swing.event.TreeExpansionListener;\n+import javax.swing.event.TreeSelectionEvent;\n+import javax.swing.event.TreeExpansionEvent;\n+import javax.swing.tree.DefaultMutableTreeNode;\n@@ -58,3 +67,4 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                frame = new JFrame();\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                public void run() {\n+                    frame = new JFrame();\n@@ -62,5 +72,5 @@\n-                DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"root\");\n-                createNodes(root);\n-                tree = new JTree(root);\n-                JScrollPane scrollPane = new JScrollPane(tree);\n-                frame.getContentPane().add(scrollPane);\n+                    DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"root\");\n+                    createNodes(root);\n+                    tree = new JTree(root);\n+                    JScrollPane scrollPane = new JScrollPane(tree);\n+                    frame.getContentPane().add(scrollPane);\n@@ -68,3 +78,3 @@\n-                tree.addFocusListener((FocusListener)listener);\n-                tree.addTreeSelectionListener((TreeSelectionListener)listener);\n-                tree.addTreeExpansionListener((TreeExpansionListener)listener);\n+                    tree.addFocusListener((FocusListener) listener);\n+                    tree.addTreeSelectionListener((TreeSelectionListener) listener);\n+                    tree.addTreeExpansionListener((TreeExpansionListener) listener);\n@@ -72,4 +82,4 @@\n-                frame.setSize(300, 300);\n-                frame.setVisible(true);\n-            }\n-        });\n+                    frame.setSize(300, 300);\n+                    frame.setVisible(true);\n+                }\n+            });\n@@ -77,2 +87,2 @@\n-        robot.waitForIdle();\n-        Thread.sleep(1000);\n+            robot.waitForIdle();\n+            Thread.sleep(1000);\n@@ -80,13 +90,14 @@\n-        SwingUtilities.invokeLater(new Runnable() {\n-            public void run() {\n-                tree.requestFocus();\n-            }\n-        });\n-\n-        synchronized(listener) {\n-            if (!focusGained) {\n-                System.out.println(\"waiting focusGained...\");\n-                try {\n-                    listener.wait(10000);\n-                } catch (InterruptedException e) {\n-                    e.printStackTrace();\n+            SwingUtilities.invokeLater(new Runnable() {\n+                public void run() {\n+                    tree.requestFocus();\n+                }\n+            });\n+\n+            synchronized (listener) {\n+                if (!focusGained) {\n+                    System.out.println(\"waiting focusGained...\");\n+                    try {\n+                        listener.wait(10000);\n+                    } catch (InterruptedException e) {\n+                        e.printStackTrace();\n+                    }\n@@ -95,1 +106,0 @@\n-        }\n@@ -97,7 +107,7 @@\n-        \/\/ GO TO RIGHT\n-        selectionChanged = false;\n-        hitKey(KeyEvent.VK_RIGHT);\n-        robot.waitForIdle();\n-        if (!checkSelectionChanged(tree, 0)) {\n-            throw new RuntimeException(\"Root should be selected\");\n-        }\n+            \/\/ GO TO RIGHT\n+            selectionChanged = false;\n+            hitKey(KeyEvent.VK_RIGHT);\n+            robot.waitForIdle();\n+            if (!checkSelectionChanged(tree, 0)) {\n+                throw new RuntimeException(\"Root should be selected\");\n+            }\n@@ -105,6 +115,6 @@\n-        selectionChanged = false;\n-        hitKey(KeyEvent.VK_RIGHT);\n-        robot.waitForIdle();\n-        if (!checkSelectionChanged(tree, 1)) {\n-            throw new RuntimeException(\"Node should be selected\");\n-        }\n+            selectionChanged = false;\n+            hitKey(KeyEvent.VK_RIGHT);\n+            robot.waitForIdle();\n+            if (!checkSelectionChanged(tree, 1)) {\n+                throw new RuntimeException(\"Node should be selected\");\n+            }\n@@ -112,6 +122,6 @@\n-        treeExpanded = false;\n-        hitKey(KeyEvent.VK_RIGHT);\n-        robot.waitForIdle();\n-        if (!isTreeExpanded()) {\n-            throw new RuntimeException(\"Node should be expanded\");\n-        }\n+            treeExpanded = false;\n+            hitKey(KeyEvent.VK_RIGHT);\n+            robot.waitForIdle();\n+            if (!isTreeExpanded()) {\n+                throw new RuntimeException(\"Node should be expanded\");\n+            }\n@@ -119,6 +129,6 @@\n-        selectionChanged = false;\n-        hitKey(KeyEvent.VK_RIGHT);\n-        robot.waitForIdle();\n-        if (!checkSelectionChanged(tree, 2)) {\n-            throw new RuntimeException(\"Leaf1 should be selected\");\n-        }\n+            selectionChanged = false;\n+            hitKey(KeyEvent.VK_RIGHT);\n+            robot.waitForIdle();\n+            if (!checkSelectionChanged(tree, 2)) {\n+                throw new RuntimeException(\"Leaf1 should be selected\");\n+            }\n@@ -126,6 +136,6 @@\n-        selectionChanged = false;\n-        hitKey(KeyEvent.VK_RIGHT);\n-        robot.waitForIdle();\n-        if (!checkSelectionChanged(tree, 2)) {\n-            throw new RuntimeException(\"Leaf1 should be selected\");\n-        }\n+            selectionChanged = false;\n+            hitKey(KeyEvent.VK_RIGHT);\n+            robot.waitForIdle();\n+            if (!checkSelectionChanged(tree, 2)) {\n+                throw new RuntimeException(\"Leaf1 should be selected\");\n+            }\n@@ -133,7 +143,7 @@\n-        \/\/ GO TO LEFT\n-        selectionChanged = false;\n-        hitKey(KeyEvent.VK_LEFT);\n-        robot.waitForIdle();\n-        if (!checkSelectionChanged(tree, 1)) {\n-            throw new RuntimeException(\"Node should be selected\");\n-        }\n+            \/\/ GO TO LEFT\n+            selectionChanged = false;\n+            hitKey(KeyEvent.VK_LEFT);\n+            robot.waitForIdle();\n+            if (!checkSelectionChanged(tree, 1)) {\n+                throw new RuntimeException(\"Node should be selected\");\n+            }\n@@ -141,5 +151,5 @@\n-        treeCollapsed = false;\n-        hitKey(KeyEvent.VK_LEFT);\n-        if (!isTreeCollapsed()) {\n-            throw new RuntimeException(\"Node should be collapsed\");\n-        }\n+            treeCollapsed = false;\n+            hitKey(KeyEvent.VK_LEFT);\n+            if (!isTreeCollapsed()) {\n+                throw new RuntimeException(\"Node should be collapsed\");\n+            }\n@@ -147,6 +157,6 @@\n-        selectionChanged = false;\n-        hitKey(KeyEvent.VK_LEFT);\n-        robot.waitForIdle();\n-        if (!checkSelectionChanged(tree, 0)) {\n-            throw new RuntimeException(\"Root should be selected\");\n-        }\n+            selectionChanged = false;\n+            hitKey(KeyEvent.VK_LEFT);\n+            robot.waitForIdle();\n+            if (!checkSelectionChanged(tree, 0)) {\n+                throw new RuntimeException(\"Root should be selected\");\n+            }\n@@ -154,5 +164,10 @@\n-        treeCollapsed = false;\n-        hitKey(KeyEvent.VK_LEFT);\n-        robot.waitForIdle();\n-        if (!isTreeCollapsed()) {\n-            throw new RuntimeException(\"Root should be collapsed\");\n+            treeCollapsed = false;\n+            hitKey(KeyEvent.VK_LEFT);\n+            robot.waitForIdle();\n+            if (!isTreeCollapsed()) {\n+                throw new RuntimeException(\"Root should be collapsed\");\n+            }\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(frame::dispose);\n+            }\n","filename":"test\/jdk\/javax\/swing\/JTree\/4927934\/bug4927934.java","additions":107,"deletions":92,"binary":false,"changes":199,"status":"modified"}]}