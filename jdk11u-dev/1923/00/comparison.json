{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import java.util.Arrays;\n@@ -41,1 +42,0 @@\n-import java.util.Random;\n@@ -48,1 +48,1 @@\n- * @bug 8190753 8011146\n+ * @bug 8190753 8011146 8279536\n@@ -93,1 +93,3 @@\n-        new Random().nextBytes(chunk);\n+        \/\/ fill it with some fixed content (the fixed content will later on help ease\n+        \/\/ the verification of the content written out)\n+        Arrays.fill(chunk, (byte) 42);\n@@ -101,0 +103,1 @@\n+                long start = System.currentTimeMillis();\n@@ -104,0 +107,2 @@\n+                System.out.println(\"Wrote entry \" + entryPath + \" of bytes \" + entry.getValue()\n+                        + \" in \" + (System.currentTimeMillis() - start) + \" milli seconds\");\n@@ -114,0 +119,1 @@\n+                    long start = System.currentTimeMillis();\n@@ -117,5 +123,2 @@\n-                        for (int i = 0, chunkoffset = (int) ((totalRead - numRead) % chunk.length);\n-                             i < numRead; i++, chunkoffset++) {\n-                            Assert.assertEquals(buf[i], chunk[chunkoffset % chunk.length],\n-                                    \"Unexpected content in \" + entryPath);\n-                        }\n+                        Assert.assertEquals(Arrays.mismatch(buf, chunk), -1,\n+                                \"Unexpected content in \" + entryPath);\n@@ -123,0 +126,2 @@\n+                    System.out.println(\"Read entry \" + entryPath + \" of bytes \" + totalRead\n+                            + \" in \" + (System.currentTimeMillis() - start) + \" milli seconds\");\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/ZipFSOutputStreamTest.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"}]}