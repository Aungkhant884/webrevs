{"files":[{"patch":"@@ -1395,1 +1395,0 @@\n-    _nodes_required += MAX2(100u, require); \/\/ Keep requests at minimum 100.\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8291713\n+ * @summary assert(!phase->exceeding_node_budget()) failed: sanity after JDK-8223389\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation TestBadNodeBudgetAfterBackport\n+ *\/\n+\n+public class TestBadNodeBudgetAfterBackport {\n+\n+    public static long instanceCount=7400137408519306837L;\n+    public static int iFld=-5840;\n+\n+    public static int iMeth(long l) {\n+\n+        float f1=42.67F;\n+        double d2=2.45690;\n+        int i14=-47, i16=5;\n+\n+        for (i14 = 8; 168 > i14; ++i14) {\n+            TestBadNodeBudgetAfterBackport.iFld = (int)f1;\n+            i16 = 1;\n+            while (++i16 < 10) {\n+                int i17=7;\n+                f1 *= 4350;\n+                try {\n+                    TestBadNodeBudgetAfterBackport.iFld = (TestBadNodeBudgetAfterBackport.iFld \/ i17);\n+                } catch (ArithmeticException a_e) {}\n+                d2 = TestBadNodeBudgetAfterBackport.iFld;\n+            }\n+        }\n+        return (int)Double.doubleToLongBits(d2);\n+    }\n+\n+    public static void main(String[] strArr) {\n+        TestBadNodeBudgetAfterBackport _instance = new TestBadNodeBudgetAfterBackport();\n+        for (int i = 0; i < 10; i++ ) {\n+            _instance.iMeth(TestBadNodeBudgetAfterBackport.instanceCount);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestBadNodeBudgetAfterBackport.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}