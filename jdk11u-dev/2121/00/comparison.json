{"files":[{"patch":"@@ -559,1 +559,2 @@\n-  _sample_threads(\"samplethreads\", \"Activate Thread sampling\", \"BOOLEAN\", false, \"true\") {\n+  _sample_threads(\"samplethreads\", \"Activate Thread sampling\", \"BOOLEAN\", false, \"true\"),\n+  _verbose(true) {\n@@ -646,1 +647,1 @@\n-  static const char signature[] = \"(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Integer;\"\n+  static const char signature[] = \"(ZLjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Integer;\"\n@@ -654,0 +655,1 @@\n+  execute_args.push_int(_verbose ? 1 : 0);\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -153,0 +153,1 @@\n+  bool _verbose;\n@@ -156,0 +157,3 @@\n+  void set_verbose(bool verbose) {\n+    _verbose = verbose;\n+  }\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -369,0 +369,1 @@\n+  configure.set_verbose(false);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrOptionSet.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+            boolean verbose,\n@@ -95,1 +96,3 @@\n-            printRepositoryPath();\n+            if (verbose) {\n+                printRepositoryPath();\n+            }\n@@ -102,1 +105,3 @@\n-            printDumpPath();\n+           if (verbose) {\n+               printDumpPath();\n+           }\n@@ -109,1 +114,3 @@\n-            printStackDepth();\n+            if (verbose) {\n+                printStackDepth();\n+            }\n@@ -116,1 +123,3 @@\n-            printGlobalBufferCount();\n+            if (verbose) {\n+                printGlobalBufferCount();\n+            }\n@@ -123,1 +132,3 @@\n-            printGlobalBufferSize();\n+            if (verbose) {\n+                printGlobalBufferSize();\n+            }\n@@ -130,1 +141,3 @@\n-            printThreadBufferSize();\n+            if (verbose) {\n+                printThreadBufferSize();\n+            }\n@@ -137,1 +150,3 @@\n-            printMemorySize();\n+            if (verbose) {\n+                printMemorySize();\n+            }\n@@ -144,1 +159,3 @@\n-            printMaxChunkSize();\n+            if (verbose) {\n+                printMaxChunkSize();\n+            }\n@@ -151,1 +168,3 @@\n-            printSampleThreads();\n+            if (verbose) {\n+                printSampleThreads();\n+            }\n@@ -154,1 +173,3 @@\n-\n+        if (!verbose) {\n+            return \"\";\n+        }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdConfigure.java","additions":31,"deletions":10,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -0,0 +1,40 @@\n+package jdk.jfr.startupargs;\n+\n+import java.io.IOException;\n+import java.text.DateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+\/**\n+ * @test\n+ * @summary Checks that locale is respected when using -XX:FlightRecorderOptions\n+ *          See JDK-8244508\n+ * @key jfr\n+ * @requires vm.hasJFR\n+ * @modules jdk.jfr\n+ * @library \/test\/lib\n+ * @run main jdk.jfr.startupargs.TestOptionsWithLocale\n+ *\/\n+public class TestOptionsWithLocale {\n+\n+    public static class PrintDate {\n+        public static void main(String... args) {\n+            GregorianCalendar date = new GregorianCalendar(2020, Calendar.JANUARY, 1);\n+            DateFormat formatter = DateFormat.getDateTimeInstance();\n+            System.out.println(formatter.format(date.getTime()));\n+        }\n+    }\n+\n+    public static void main(String... args) throws IOException {\n+        ProcessBuilder pb = ProcessTools.createTestJvm(\n+                \"-Duser.country=DE\",\n+                \"-Duser.language=de\",\n+                \"-XX:FlightRecorderOptions:stackdepth=128\",\n+                PrintDate.class.getName());\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldContain(\"01.01.2020, 00:00:00\");\n+    }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestOptionsWithLocale.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"}]}