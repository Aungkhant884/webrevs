{"files":[{"patch":"@@ -153,0 +153,18 @@\n+\n+\/\/ In order to use a new NSAccessibility API and since our components\n+\/\/ are represented as a custom UI elements we need to implement a set\n+\/\/ of custom protocols. Definitions of these protocols will start here.\n+\n+\/\/ This is a root interface in the NSAccessibility* protocols hierarchy\n+\/\/ and all the component-specific protocols should be derived from it.\n+\/\/ It is also a place for the functions that might be exposed by all the\n+\/\/ component accessibility peers.\n+\/\/ Please see https:\/\/developer.apple.com\/documentation\/appkit\/nsaccessibilityprotocol\n+\/\/ for more details.\n+@interface CommonComponentAccessibility : JavaComponentAccessibility <NSAccessibilityElement> {\n+\n+}\n+- (NSRect)accessibilityFrame;\n+- (nullable id)accessibilityParent;\n+@end\n+\n@@ -2066,0 +2084,26 @@\n+@implementation CommonComponentAccessibility\n+\/\/ NSAccessibilityElement protocol implementation\n+- (NSRect)accessibilityFrame\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    jobject axComponent = JNFCallStaticObjectMethod(env, sjm_getAccessibleComponent,\n+                                                    fAccessible, fComponent);\n+\n+    NSSize size = getAxComponentSize(env, axComponent, fComponent);\n+    NSPoint point = getAxComponentLocationOnScreen(env, axComponent, fComponent);\n+    (*env)->DeleteLocalRef(env, axComponent);\n+    point.y += size.height;\n+\n+    point.y = [[[[self view] window] screen] frame].size.height - point.y;\n+\n+    NSRect retval = NSMakeRect(point.x, point.y, size.width, size.height);\n+    return retval;\n+}\n+\n+- (nullable id)accessibilityParent\n+{\n+    return [self accessibilityParentAttribute];\n+}\n+\n+@end\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":44,"deletions":0,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -27,4 +27,0 @@\n-#import \"JNIUtilities.h\"\n-#import \"ThreadUtilities.h\"\n-\n-static jclass sjc_CAccessibility = NULL;\n@@ -43,11 +39,1 @@\n-    AWT_ASSERT_APPKIT_THREAD;\n-    JNIEnv* env = [ThreadUtilities getJNIEnv];\n-\n-    GET_CACCESSIBILITY_CLASS_RETURN(FALSE);\n-    DECLARE_STATIC_METHOD_RETURN(jm_doAccessibleAction, sjc_CAccessibility, \"doAccessibleAction\",\n-                     \"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\", FALSE);\n-    (*env)->CallStaticVoidMethod(env, sjc_CAccessibility, jm_doAccessibleAction,\n-                                 [self axContextWithEnv:(env)], 0, fComponent);\n-    CHECK_EXCEPTION();\n-\n-    return TRUE;\n+    return [self performAccessibleAction:0];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ButtonAccessibility.m","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+- (BOOL)performAccessibleAction:(int)index;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,1 +49,2 @@\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:1];\n+\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:4];\n@@ -52,0 +53,4 @@\n+    [rolesMap setObject:@\"ImageAccessibility\" forKey:@\"icon\"];\n+    [rolesMap setObject:@\"ImageAccessibility\" forKey:@\"desktopicon\"];\n+    [rolesMap setObject:@\"SpinboxAccessibility\" forKey:@\"spinbox\"];\n+\n@@ -61,1 +66,0 @@\n-\n@@ -98,0 +102,16 @@\n+\/\/ AccessibleAction support\n+- (BOOL)performAccessibleAction:(int)index\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+\n+    GET_CACCESSIBILITY_CLASS_RETURN(FALSE);\n+    DECLARE_STATIC_METHOD_RETURN(jm_doAccessibleAction, sjc_CAccessibility, \"doAccessibleAction\",\n+                                 \"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\", FALSE);\n+    (*env)->CallStaticVoidMethod(env, sjc_CAccessibility, jm_doAccessibleAction,\n+                                 [self axContextWithEnv:(env)], index, fComponent);\n+    CHECK_EXCEPTION();\n+\n+    return TRUE;\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"JavaComponentAccessibility.h\"\n+#import \"CommonComponentAccessibility.h\"\n+\n+#import <AppKit\/AppKit.h>\n+\n+@interface SpinboxAccessibility : CommonComponentAccessibility <NSAccessibilityStepper> {\n+\n+};\n+\n+- (nullable NSString *)accessibilityLabel;\n+- (nullable id)accessibilityValue;\n+- (BOOL)accessibilityPerformDecrement;\n+- (BOOL)accessibilityPerformIncrement;\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/SpinboxAccessibility.h","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"SpinboxAccessibility.h\"\n+\n+#define INCREMENT 0\n+#define DECREMENT 1\n+\n+\/*\n+ * Implementation of the accessibility peer for the spinner role\n+ *\/\n+@implementation SpinboxAccessibility\n+- (nullable NSString *)accessibilityLabel\n+{\n+    return [self accessibilityTitleAttribute];\n+}\n+\n+- (nullable id)accessibilityValue\n+{\n+    return [self accessibilityValueAttribute];\n+}\n+\n+- (BOOL)accessibilityPerformIncrement\n+{\n+    return [self performAccessibleAction:INCREMENT];\n+}\n+\n+\n+- (BOOL)accessibilityPerformDecrement\n+{\n+    return [self performAccessibleAction:DECREMENT];\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/SpinboxAccessibility.m","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}