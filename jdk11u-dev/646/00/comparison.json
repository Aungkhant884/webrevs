{"files":[{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -148,1 +132,0 @@\n-#ifdef __cplusplus\n@@ -150,1 +133,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass020\/redefclass020.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -147,1 +131,0 @@\n-#ifdef __cplusplus\n@@ -149,1 +132,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass021\/redefclass021.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -148,1 +132,0 @@\n-#ifdef __cplusplus\n@@ -150,1 +133,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass022\/redefclass022.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -148,1 +132,0 @@\n-#ifdef __cplusplus\n@@ -150,1 +133,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass023\/redefclass023.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -148,1 +132,0 @@\n-#ifdef __cplusplus\n@@ -150,1 +133,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass024\/redefclass024.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -148,1 +132,0 @@\n-#ifdef __cplusplus\n@@ -150,1 +133,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass025\/redefclass025.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -120,4 +106,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, bytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, bytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(bytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(bytes, NULL);\n@@ -145,1 +129,0 @@\n-#ifdef __cplusplus\n@@ -147,1 +130,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass026\/redefclass026.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -314,4 +301,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -618,2 +603,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -716,1 +700,1 @@\n-    classBytes = (jbyteArray) JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, bytes));\n+    classBytes = (jbyteArray) env->NewGlobalRef(bytes);\n@@ -718,2 +702,1 @@\n-    midRun = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-         \"run\", \"()V\");\n+    midRun = env->GetMethodID(clazz, \"run\", \"()V\");\n@@ -725,2 +708,1 @@\n-    mid1 = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-         \"method1\", \"(I)V\");\n+    mid1 = env->GetMethodID(clazz, \"method1\", \"(I)V\");\n@@ -732,2 +714,1 @@\n-    mid2 = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, clazz),\n-         \"method2\", \"(I)V\");\n+    mid2 = env->GetMethodID(clazz, \"method2\", \"(I)V\");\n@@ -758,2 +739,1 @@\n-    fid1 = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, clazz),\n-        \"staticInt\", \"I\");\n+    fid1 = env->GetStaticFieldID(clazz, \"staticInt\", \"I\");\n@@ -784,2 +764,1 @@\n-    fid2 = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, clazz),\n-        \"instanceInt\", \"I\");\n+    fid2 = env->GetFieldID(clazz, \"instanceInt\", \"I\");\n@@ -851,1 +830,0 @@\n-#ifdef __cplusplus\n@@ -853,1 +831,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass027\/redefclass027.cpp","additions":9,"deletions":32,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -93,2 +80,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti),\n-            JVMTI_VERSION_1_1)) != JNI_OK) {\n+    if ((res = vm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1)) != JNI_OK) {\n@@ -166,4 +152,2 @@\n-    classDef.class_byte_count =\n-        JNI_ENV_PTR(env)->GetArrayLength(JNI_ENV_ARG(env, classBytes));\n-    classDef.class_bytes = (unsigned char *)\n-        JNI_ENV_PTR(env)->GetByteArrayElements(JNI_ENV_ARG(env, classBytes), NULL);\n+    classDef.class_byte_count = env->GetArrayLength(classBytes);\n+    classDef.class_bytes = (unsigned char *) env->GetByteArrayElements(classBytes, NULL);\n@@ -204,1 +188,0 @@\n-#ifdef __cplusplus\n@@ -206,1 +189,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass031\/redefclass031.cpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -64,3 +51,3 @@\n-    thrClass = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, \"java\/lang\/Thread\"));\n-    cid = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, thrClass), \"<init>\", \"()V\");\n-    res = JNI_ENV_PTR(env)->NewObject(JNI_ENV_ARG(env, thrClass), cid);\n+    thrClass = env->FindClass(\"java\/lang\/Thread\");\n+    cid = env->GetMethodID(thrClass, \"<init>\", \"()V\");\n+    res = env->NewObject(thrClass, cid);\n@@ -260,2 +247,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -340,1 +326,0 @@\n-#ifdef __cplusplus\n@@ -342,1 +327,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr001\/agentthr001.cpp","additions":4,"deletions":20,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -72,2 +59,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -175,1 +161,0 @@\n-#ifdef __cplusplus\n@@ -177,1 +162,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr002\/agentthr002.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -71,2 +58,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -148,1 +134,0 @@\n-#ifdef __cplusplus\n@@ -150,1 +135,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RunAgentThread\/agentthr003\/agentthr003.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -123,2 +109,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"run\", \"([Ljava\/lang\/String;Ljava\/io\/PrintStream;)I\");\n+    mid = env->GetStaticMethodID(cls, \"run\", \"([Ljava\/lang\/String;Ljava\/io\/PrintStream;)I\");\n@@ -160,1 +145,0 @@\n-#ifdef __cplusplus\n@@ -162,1 +146,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk002\/setbrk002.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -122,2 +108,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"check\", \"()I\");\n+    mid = env->GetStaticMethodID(cls, \"check\", \"()I\");\n@@ -142,1 +127,0 @@\n-#ifdef __cplusplus\n@@ -144,1 +128,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk003\/setbrk003.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -122,2 +108,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"trial\", \"()I\");\n+    mid = env->GetStaticMethodID(cls, \"trial\", \"()I\");\n@@ -149,1 +134,0 @@\n-#ifdef __cplusplus\n@@ -151,1 +135,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk005\/setbrk005.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -122,2 +108,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    mid = env->GetStaticMethodID(cls, \"checkPoint\", \"()V\");\n@@ -146,1 +131,0 @@\n-#ifdef __cplusplus\n@@ -148,1 +132,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk007\/setbrk007.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -136,2 +123,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -195,2 +181,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         exp_name, exp_sig);\n+    mid = env->GetStaticMethodID(cls, exp_name, exp_sig);\n@@ -237,1 +222,0 @@\n-#ifdef __cplusplus\n@@ -239,1 +223,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetBreakpoint\/setbrk008\/setbrk008.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -135,2 +122,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-        \"meth01\", \"(I)V\");\n+    mid = env->GetStaticMethodID(cls, \"meth01\", \"(I)V\");\n@@ -146,1 +132,1 @@\n-    fid = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls), \"fld\", \"I\");\n+    fid = env->GetStaticFieldID(cls, \"fld\", \"I\");\n@@ -325,2 +311,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -432,1 +417,0 @@\n-#ifdef __cplusplus\n@@ -434,1 +418,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventNotificationMode\/setnotif001\/setnotif001.cpp","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -77,1 +64,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, fld.klass));\n+    cls = env->FindClass(fld.klass);\n@@ -85,2 +72,1 @@\n-            fields[ind].fid = JNI_ENV_PTR(env)->\n-                GetStaticFieldID(JNI_ENV_ARG(env, cls), fld.name, fld.sig);\n+            fields[ind].fid = env->GetStaticFieldID(cls, fld.name, fld.sig);\n@@ -88,2 +74,1 @@\n-            fields[ind].fid = JNI_ENV_PTR(env)->\n-                GetFieldID(JNI_ENV_ARG(env, cls), fld.name, fld.sig);\n+            fields[ind].fid = env->GetFieldID(cls, fld.name, fld.sig);\n@@ -150,2 +135,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -213,1 +197,1 @@\n-    val = JNI_ENV_PTR(env)->GetIntField(JNI_ENV_ARG(env, obj), fields[0].fid);\n+    val = env->GetIntField(obj, fields[0].fid);\n@@ -239,1 +223,0 @@\n-#ifdef __cplusplus\n@@ -241,1 +224,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw001\/setfldw001.cpp","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -74,2 +61,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -130,2 +116,1 @@\n-    fid = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-         \"fld1\", \"I\");\n+    fid = env->GetStaticFieldID(cls, \"fld1\", \"I\");\n@@ -173,1 +158,0 @@\n-#ifdef __cplusplus\n@@ -175,1 +159,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw002\/setfldw002.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -86,2 +73,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -138,6 +124,4 @@\n-    fids[0] = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-        \"fld0\", \"I\");\n-    fids[1] = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-        \"fld1\", \"I\");\n-    fids[2] = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls), \"fld2\", \"I\");\n-    fids[3] = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls), \"fld3\", \"I\");\n+    fids[0] = env->GetStaticFieldID(cls, \"fld0\", \"I\");\n+    fids[1] = env->GetStaticFieldID(cls, \"fld1\", \"I\");\n+    fids[2] = env->GetFieldID(cls, \"fld2\", \"I\");\n+    fids[3] = env->GetFieldID(cls, \"fld3\", \"I\");\n@@ -188,1 +172,0 @@\n-#ifdef __cplusplus\n@@ -190,1 +173,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw003\/setfldw003.cpp","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -86,2 +73,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -144,6 +130,4 @@\n-    fids[0] = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-        \"fld0\", \"I\");\n-    fids[1] = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-        \"fld1\", \"I\");\n-    fids[2] = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls), \"fld2\", \"I\");\n-    fids[3] = JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls), \"fld3\", \"I\");\n+    fids[0] = env->GetStaticFieldID(cls, \"fld0\", \"I\");\n+    fids[1] = env->GetStaticFieldID(cls, \"fld1\", \"I\");\n+    fids[2] = env->GetFieldID(cls, \"fld2\", \"I\");\n+    fids[3] = env->GetFieldID(cls, \"fld3\", \"I\");\n@@ -194,1 +178,0 @@\n-#ifdef __cplusplus\n@@ -196,1 +179,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw004\/setfldw004.cpp","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -111,2 +98,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -171,3 +157,2 @@\n-            fields[i].fid = JNI_ENV_PTR(env)->\n-                GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-                                 fields[i].name, fields[i].sig);\n+            fields[i].fid = env-> GetStaticFieldID(\n+                cls, fields[i].name, fields[i].sig);\n@@ -175,3 +160,2 @@\n-            fields[i].fid = JNI_ENV_PTR(env)->\n-                GetFieldID(JNI_ENV_ARG(env, cls),\n-                           fields[i].name, fields[i].sig);\n+            fields[i].fid = env->GetFieldID(\n+                cls, fields[i].name, fields[i].sig);\n@@ -223,1 +207,0 @@\n-#ifdef __cplusplus\n@@ -225,1 +208,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw005\/setfldw005.cpp","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -123,2 +110,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -193,2 +179,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetStaticFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetStaticFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -196,2 +182,2 @@\n-            watches[i].fid = JNI_ENV_PTR(env)->GetFieldID(\n-                JNI_ENV_ARG(env, cls), watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -246,1 +232,0 @@\n-#ifdef __cplusplus\n@@ -248,1 +233,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw006\/setfldw006.cpp","additions":5,"deletions":21,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -76,1 +63,1 @@\n-    cls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, fields[ind].klass));\n+    cls = env->FindClass(fields[ind].klass);\n@@ -79,3 +66,1 @@\n-            fields[ind].fid =\n-                JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-                    fields[ind].name, fields[ind].sig);\n+            fields[ind].fid = env->GetStaticFieldID(cls, fields[ind].name, fields[ind].sig);\n@@ -83,3 +68,1 @@\n-            fields[ind].fid =\n-                JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls),\n-                    fields[ind].name, fields[ind].sig);\n+            fields[ind].fid = env->GetFieldID(cls, fields[ind].name, fields[ind].sig);\n@@ -146,2 +129,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -207,1 +189,1 @@\n-    JNI_ENV_PTR(env)->SetIntField(JNI_ENV_ARG(env, cls), fields[0].fid, (jint)2000);\n+    env->SetIntField(cls, fields[0].fid, (jint)2000);\n@@ -234,1 +216,0 @@\n-#ifdef __cplusplus\n@@ -236,1 +217,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001\/setfmodw001.cpp","additions":5,"deletions":25,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -74,2 +61,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -131,2 +117,1 @@\n-    fid = JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-         \"fld1\", \"I\");\n+    fid = env->GetStaticFieldID(cls, \"fld1\", \"I\");\n@@ -174,1 +159,0 @@\n-#ifdef __cplusplus\n@@ -176,1 +160,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw002\/setfmodw002.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -104,2 +91,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -159,3 +145,1 @@\n-            flds[i].fid =\n-                JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-                    flds[i].name, \"I\");\n+            flds[i].fid = env->GetStaticFieldID(cls, flds[i].name, \"I\");\n@@ -163,3 +147,1 @@\n-            flds[i].fid =\n-                JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls),\n-                    flds[i].name, \"I\");\n+            flds[i].fid = env->GetFieldID(cls, flds[i].name, \"I\");\n@@ -227,1 +209,0 @@\n-#ifdef __cplusplus\n@@ -229,1 +210,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw003\/setfmodw003.cpp","additions":3,"deletions":23,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -104,2 +91,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -157,3 +143,1 @@\n-            flds[i].fid =\n-                JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-                    flds[i].name, \"I\");\n+            flds[i].fid = env->GetStaticFieldID(cls, flds[i].name, \"I\");\n@@ -161,3 +145,1 @@\n-            flds[i].fid =\n-                JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls),\n-                    flds[i].name, \"I\");\n+            flds[i].fid = env->GetFieldID(cls, flds[i].name, \"I\");\n@@ -225,1 +207,0 @@\n-#ifdef __cplusplus\n@@ -227,1 +208,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw004\/setfmodw004.cpp","additions":3,"deletions":23,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,3 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n@@ -37,9 +33,0 @@\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n-\n-#endif\n@@ -93,3 +80,1 @@\n-        actual_val.l =\n-            JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG((JNIEnv *)env,\n-                actual_val.l));\n+        actual_val.l = env->NewGlobalRef(actual_val.l);\n@@ -155,2 +140,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -219,2 +203,2 @@\n-    flds[6].val.l = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, obj1));\n-    flds[7].val.l = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, obj2));\n+    flds[6].val.l = env->NewGlobalRef(obj1);\n+    flds[7].val.l = env->NewGlobalRef(obj2);\n@@ -231,3 +215,1 @@\n-            flds[i].fid =\n-                JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-                    flds[i].name, flds[i].sig);\n+            flds[i].fid = env->GetStaticFieldID(cls, flds[i].name, flds[i].sig);\n@@ -235,3 +217,1 @@\n-            flds[i].fid =\n-                JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls),\n-                    flds[i].name, flds[i].sig);\n+            flds[i].fid = env->GetFieldID(cls, flds[i].name, flds[i].sig);\n@@ -333,2 +313,1 @@\n-        if (JNI_ENV_PTR(env)->IsSameObject(JNI_ENV_ARG(env, actual_val.l),\n-                flds[ind].val.l) != JNI_TRUE) {\n+        if (!env->IsSameObject(actual_val.l, flds[ind].val.l)) {\n@@ -401,1 +380,0 @@\n-#ifdef __cplusplus\n@@ -403,1 +381,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw005\/setfmodw005.cpp","additions":7,"deletions":30,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,11 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -45,1 +33,0 @@\n-#endif\n@@ -123,2 +110,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -187,3 +173,2 @@\n-            watches[i].fid =\n-                JNI_ENV_PTR(env)->GetStaticFieldID(JNI_ENV_ARG(env, cls),\n-                    watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetStaticFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -191,3 +176,2 @@\n-            watches[i].fid =\n-                JNI_ENV_PTR(env)->GetFieldID(JNI_ENV_ARG(env, cls),\n-                    watches[i].f_name, watches[i].f_sig);\n+            watches[i].fid = env->GetFieldID(\n+                cls, watches[i].f_name, watches[i].f_sig);\n@@ -243,1 +227,0 @@\n-#ifdef __cplusplus\n@@ -245,1 +228,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw006\/setfmodw006.cpp","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-#ifdef __cplusplus\n@@ -37,1 +36,0 @@\n-#endif\n@@ -39,17 +37,0 @@\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -143,2 +124,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get original JNI function table\"));\n+        env->FatalError(\"failed to get original JNI function table\");\n@@ -151,2 +131,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get redirected JNI function table\"));\n+        env->FatalError(\"failed to get redirected JNI function table\");\n@@ -166,2 +145,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to set new JNI function table\"));\n+        env->FatalError(\"failed to set new JNI function table\");\n@@ -184,2 +162,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to restore original JNI function table\"));\n+        env->FatalError(\"failed to restore original JNI function table\");\n@@ -194,2 +171,1 @@\n-    if ((res = JNI_ENV_PTR(env)->\n-            MonitorEnter(JNI_ENV_ARG(env, clsObj))) != 0) {\n+    if ((res = env->MonitorEnter(clsObj)) != 0) {\n@@ -200,1 +176,1 @@\n-    if (JNI_ENV_PTR(env)->ExceptionOccurred(JNI_ENV_ARG1(env))) {\n+    if (env->ExceptionOccurred()) {\n@@ -204,2 +180,2 @@\n-        JNI_ENV_PTR(env)->ExceptionDescribe(JNI_ENV_ARG1(env));\n-        JNI_ENV_PTR(env)->ExceptionClear(JNI_ENV_ARG1(env));\n+        env->ExceptionDescribe();\n+        env->ExceptionClear();\n@@ -210,2 +186,1 @@\n-    if ((res = JNI_ENV_PTR(env)->\n-            MonitorExit(JNI_ENV_ARG(env, clsObj))) != 0) {\n+    if ((res = env->MonitorExit(clsObj)) != 0) {\n@@ -249,3 +224,1 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->AttachCurrentThread(\n-                JNI_ENV_ARG(vm, (void **) &env), (void *) 0)) != 0) {\n+    if ((res = vm->AttachCurrentThread((void **) &env, (void *) 0)) != 0) {\n@@ -261,3 +234,1 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->DetachCurrentThread(\n-                JNI_ENV_ARG1(vm))) != 0) {\n+    if ((res = vm->DetachCurrentThread()) != 0) {\n@@ -279,1 +250,1 @@\n-    _objCls = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, obj));\n+    _objCls = env->GetObjectClass(obj);\n@@ -284,2 +255,1 @@\n-    if ((fid = JNI_ENV_PTR(env)->GetFieldID(\n-            JNI_ENV_ARG(env, _objCls), javaField, classSig)) == 0) {\n+    if ((fid = env->GetFieldID(_objCls, javaField, classSig)) == 0) {\n@@ -289,2 +259,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get ID for the java field\"));\n+        env->FatalError(\"failed to get ID for the java field\");\n@@ -293,2 +262,1 @@\n-    return JNI_ENV_PTR(env)->GetObjectField(\n-        JNI_ENV_ARG(env, obj), fid);\n+    return env->GetObjectField(obj, fid);\n@@ -361,2 +329,1 @@\n-    if ((clsObj = JNI_ENV_PTR(env)->NewGlobalRef(\n-            JNI_ENV_ARG(env, getObjectFromField(env, obj)))) == NULL) {\n+    if ((clsObj = env->NewGlobalRef(getObjectFromField(env, obj))) == NULL) {\n@@ -365,2 +332,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to create a new global reference\"));\n+        env->FatalError(\"failed to create a new global reference\");\n@@ -388,3 +354,1 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->DetachCurrentThread(\n-                JNI_ENV_ARG1(vm))) != 0)\n+    if ((res = vm->DetachCurrentThread()) != 0)\n@@ -397,3 +361,1 @@\n-        if ((res =\n-                JNI_ENV_PTR(vm)->AttachCurrentThread(\n-                    JNI_ENV_ARG(vm, (void **) &nextEnv), (void *) 0)) != 0) {\n+        if ((res = vm->AttachCurrentThread((void **) &nextEnv, (void *) 0)) != 0) {\n@@ -425,1 +387,1 @@\n-    JNI_ENV_PTR(env)->DeleteGlobalRef(JNI_ENV_ARG((nextEnv==NULL)? env:nextEnv, clsObj));\n+    env->DeleteGlobalRef(clsObj);\n@@ -451,2 +413,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -470,1 +431,0 @@\n-#ifdef __cplusplus\n@@ -472,1 +432,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetJNIFunctionTable\/setjniftab001\/setjniftab001.cpp","additions":21,"deletions":62,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,19 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -101,3 +81,1 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->DetachCurrentThread(\n-                JNI_ENV_ARG1(vm))) != JNI_OK)\n+    if ((res = vm->DetachCurrentThread()) != JNI_OK)\n@@ -112,3 +90,1 @@\n-        if ((res =\n-                JNI_ENV_PTR(vm)->AttachCurrentThread(\n-                    JNI_ENV_ARG(vm, (void **) &nextEnv), (void *) 0)) != JNI_OK) {\n+        if ((res = vm->AttachCurrentThread((void **) &nextEnv, (void *) 0)) != JNI_OK) {\n@@ -144,2 +120,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -156,1 +131,0 @@\n-#ifdef __cplusplus\n@@ -158,1 +132,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetJNIFunctionTable\/setjniftab002\/setjniftab002.cpp","additions":3,"deletions":30,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -273,2 +260,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -333,10 +319,5 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n-    mid1 = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"meth01\", \"()D\");\n-    mid2 = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, cls),\n-        \"meth02\", \"(I)V\");\n-    mid3 = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-        \"meth03\", \"()V\");\n-    mid4 = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-        \"meth04\", \"(IJSDCFBZ)V\");\n+    mid = env->GetStaticMethodID(cls, \"checkPoint\", \"()V\");\n+    mid1 = env->GetMethodID(cls, \"meth01\", \"()D\");\n+    mid2 = env->GetMethodID(cls, \"meth02\", \"(I)V\");\n+    mid3 = env->GetStaticMethodID(cls, \"meth03\", \"()V\");\n+    mid4 = env->GetStaticMethodID(cls, \"meth04\", \"(IJSDCFBZ)V\");\n@@ -348,2 +329,2 @@\n-    objVal = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, o));\n-    arrVal = JNI_ENV_PTR(env)->NewGlobalRef(JNI_ENV_ARG(env, a));\n+    objVal = env->NewGlobalRef(o);\n+    arrVal = env->NewGlobalRef(a);\n@@ -372,1 +353,0 @@\n-#ifdef __cplusplus\n@@ -374,1 +354,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal001\/setlocal001.cpp","additions":8,"deletions":29,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -125,2 +111,2 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-        \"run\", \"([Ljava\/lang\/String;Ljava\/io\/PrintStream;)I\");\n+    mid = env->GetStaticMethodID(\n+        cls, \"run\", \"([Ljava\/lang\/String;Ljava\/io\/PrintStream;)I\");\n@@ -302,1 +288,0 @@\n-#ifdef __cplusplus\n@@ -304,1 +289,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal002\/setlocal002.cpp","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -159,2 +146,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -218,2 +204,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    mid = env->GetStaticMethodID(cls, \"checkPoint\", \"()V\");\n@@ -247,1 +232,0 @@\n-#ifdef __cplusplus\n@@ -249,1 +233,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal003\/setlocal003.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -164,2 +151,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -223,2 +209,1 @@\n-    mid = JNI_ENV_PTR(env)->GetStaticMethodID(JNI_ENV_ARG(env, cls),\n-         \"checkPoint\", \"()V\");\n+    mid = env->GetStaticMethodID(cls, \"checkPoint\", \"()V\");\n@@ -252,1 +237,0 @@\n-#ifdef __cplusplus\n@@ -254,1 +238,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal004\/setlocal004.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -73,2 +60,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -147,1 +133,0 @@\n-#ifdef __cplusplus\n@@ -149,1 +134,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/StopThread\/stopthrd006\/stopthrd006.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -102,2 +89,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -130,1 +116,1 @@\n-    prefix = JNI_ENV_PTR(env)->GetStringUTFChars(JNI_ENV_ARG(env, name), NULL);\n+    prefix = env->GetStringUTFChars(name, NULL);\n@@ -173,1 +159,0 @@\n-#ifdef __cplusplus\n@@ -175,1 +160,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ThreadEnd\/threadend001\/threadend001.cpp","additions":2,"deletions":18,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -102,2 +89,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -130,1 +116,1 @@\n-    prefix = JNI_ENV_PTR(env)->GetStringUTFChars(JNI_ENV_ARG(env, name), NULL);\n+    prefix = env->GetStringUTFChars(name, NULL);\n@@ -173,1 +159,0 @@\n-#ifdef __cplusplus\n@@ -175,1 +160,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ThreadStart\/threadstart001\/threadstart001.cpp","additions":2,"deletions":18,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -116,2 +103,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -169,2 +155,1 @@\n-    threadName = JNI_ENV_PTR(env)->GetStringUTFChars(JNI_ENV_ARG(env, name),\n-        NULL);\n+    threadName = env->GetStringUTFChars(name, NULL);\n@@ -291,1 +276,0 @@\n-#ifdef __cplusplus\n@@ -293,1 +277,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ThreadStart\/threadstart003\/threadstart003.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-#ifdef __cplusplus\n@@ -38,19 +37,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -124,1 +104,0 @@\n-#ifdef __cplusplus\n@@ -126,1 +105,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/VMDeath\/vmdeath001\/vmdeath001.cpp","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -152,2 +139,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -200,1 +186,0 @@\n-#ifdef __cplusplus\n@@ -202,1 +187,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/VMInit\/vminit001\/vminit001.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#ifdef __cplusplus\n@@ -33,13 +32,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_ARG1(x)\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_ARG1(x) x\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -47,1 +33,0 @@\n-#endif\n@@ -204,2 +189,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti_1), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti_1, JVMTI_VERSION_1_1);\n@@ -257,1 +241,0 @@\n-#ifdef __cplusplus\n@@ -259,1 +242,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF06\/gf06t001\/gf06t001.cpp","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#ifdef __cplusplus\n@@ -35,19 +34,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -73,1 +53,1 @@\n-    if (verbose)\n+    if (verbose) {\n@@ -76,2 +56,2 @@\n-    return\n-        orig_jni_functions->GetVersion(env);\n+    }\n+    return orig_jni_functions->GetVersion(env);\n@@ -90,2 +70,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get original JNI function table\"));\n+        env->FatalError(\"failed to get original JNI function table\");\n@@ -99,2 +78,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get redirected JNI function table\"));\n+        env->FatalError(\"failed to get redirected JNI function table\");\n@@ -112,2 +90,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to set new JNI function table\"));\n+        env->FatalError(\"failed to set new JNI function table\");\n@@ -130,2 +107,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to restore original JNI function table\"));\n+        env->FatalError(\"failed to restore original JNI function table\");\n@@ -151,1 +127,1 @@\n-    ver = JNI_ENV_PTR(env)->GetVersion(JNI_ENV_ARG1(env));\n+    ver = env->GetVersion();\n@@ -161,1 +137,1 @@\n-    ver = JNI_ENV_PTR(env)->GetVersion(JNI_ENV_ARG1(env));\n+    ver = env->GetVersion();\n@@ -180,1 +156,1 @@\n-    ver = JNI_ENV_PTR(env)->GetVersion(JNI_ENV_ARG1(env));\n+    ver = env->GetVersion();\n@@ -216,2 +192,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -226,1 +201,0 @@\n-#ifdef __cplusplus\n@@ -228,1 +202,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t001\/ji03t001.cpp","additions":11,"deletions":38,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#ifdef __cplusplus\n@@ -36,19 +35,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -126,2 +106,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get original JNI function table\"));\n+        env->FatalError(\"failed to get original JNI function table\");\n@@ -134,2 +113,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get redirected JNI function table\"));\n+        env->FatalError(\"failed to get redirected JNI function table\");\n@@ -145,3 +123,2 @@\n-            meth_info[i].mid = JNI_ENV_PTR(env)->GetMethodID(\n-                JNI_ENV_ARG(env, cls),\n-                meth_info[i].m_name, meth_info[i].m_sign);\n+            meth_info[i].mid = env->GetMethodID(\n+                cls, meth_info[i].m_name, meth_info[i].m_sign);\n@@ -150,3 +127,2 @@\n-            meth_info[i].mid = JNI_ENV_PTR(env)->GetStaticMethodID(\n-                JNI_ENV_ARG(env, cls),\n-                meth_info[i].m_name, meth_info[i].m_sign);\n+            meth_info[i].mid = env->GetStaticMethodID(\n+                cls, meth_info[i].m_name, meth_info[i].m_sign);\n@@ -158,2 +134,1 @@\n-           JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-               \"failed to get the ID for a method\"));\n+           env->FatalError(\"failed to get the ID for a method\");\n@@ -165,2 +140,2 @@\n-        if ((meth_info[i].fid = JNI_ENV_PTR(env)->GetStaticFieldID(\n-                JNI_ENV_ARG(env, cls), meth_info[i].f_name, \"I\")) == 0) {\n+        if ((meth_info[i].fid = env->GetStaticFieldID(\n+                cls, meth_info[i].f_name, \"I\")) == 0) {\n@@ -170,2 +145,1 @@\n-            JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-                \"cannot get field ID\"));\n+            env->FatalError(\"cannot get field ID\");\n@@ -193,2 +167,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to set new JNI function table\"));\n+        env->FatalError(\"failed to set new JNI function table\");\n@@ -211,2 +184,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to restore original JNI function table\"));\n+        env->FatalError(\"failed to restore original JNI function table\");\n@@ -219,2 +191,1 @@\n-    return JNI_ENV_PTR(env)->GetStaticIntField(\n-        JNI_ENV_ARG(env, cls), fid);\n+    return env->GetStaticIntField(cls, fid);\n@@ -236,2 +207,1 @@\n-            JNI_ENV_PTR(env)->CallVoidMethod(JNI_ENV_ARG(env, obj),\n-                meth_info[i].mid);\n+            env->CallVoidMethod(obj, meth_info[i].mid);\n@@ -241,1 +211,1 @@\n-        if (JNI_ENV_PTR(env)->ExceptionOccurred(JNI_ENV_ARG1(env))) {\n+        if (env->ExceptionOccurred()) {\n@@ -245,2 +215,2 @@\n-            JNI_ENV_PTR(env)->ExceptionDescribe(JNI_ENV_ARG1(env));\n-            JNI_ENV_PTR(env)->ExceptionClear(JNI_ENV_ARG1(env));\n+            env->ExceptionDescribe();\n+            env->ExceptionClear();\n@@ -251,1 +221,1 @@\n-        if (JNI_ENV_PTR(env)->ExceptionOccurred(JNI_ENV_ARG1(env))) {\n+        if (env->ExceptionOccurred()) {\n@@ -255,2 +225,2 @@\n-            JNI_ENV_PTR(env)->ExceptionDescribe(JNI_ENV_ARG1(env));\n-            JNI_ENV_PTR(env)->ExceptionClear(JNI_ENV_ARG1(env));\n+            env->ExceptionDescribe();\n+            env->ExceptionClear();\n@@ -309,1 +279,1 @@\n-    objCls = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, obj));\n+    objCls = env->GetObjectClass(obj);\n@@ -348,2 +318,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -358,1 +327,0 @@\n-#ifdef __cplusplus\n@@ -360,1 +328,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t002\/ji03t002.cpp","additions":22,"deletions":55,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#ifdef __cplusplus\n@@ -36,19 +35,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -131,2 +111,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get original JNI function table\"));\n+        env->FatalError(\"failed to get original JNI function table\");\n@@ -139,2 +118,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get redirected JNI function table\"));\n+        env->FatalError(\"failed to get redirected JNI function table\");\n@@ -156,2 +134,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to set new JNI function table\"));\n+        env->FatalError(\"failed to set new JNI function table\");\n@@ -174,2 +151,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to restore original JNI function table\"));\n+        env->FatalError(\"failed to restore original JNI function table\");\n@@ -184,1 +160,1 @@\n-    if ((res = JNI_ENV_PTR(env)->ThrowNew(JNI_ENV_ARG(env, thrCls), msg)) != 0) {\n+    if ((res = env->ThrowNew(thrCls, msg)) != 0) {\n@@ -188,2 +164,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to failed to throw new exception\"));\n+        env->FatalError(\"failed to failed to throw new exception\");\n@@ -192,1 +167,1 @@\n-    if (JNI_ENV_PTR(env)->ExceptionOccurred(JNI_ENV_ARG1(env))) {\n+    if (env->ExceptionOccurred()) {\n@@ -196,1 +171,1 @@\n-        JNI_ENV_PTR(env)->ExceptionClear(JNI_ENV_ARG1(env));\n+        env->ExceptionClear();\n@@ -204,1 +179,1 @@\n-    if ((res = JNI_ENV_PTR(env)->Throw(JNI_ENV_ARG(env, thrw))) != 0) {\n+    if ((res = env->Throw(thrw)) != 0) {\n@@ -208,2 +183,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to failed to throw new exception\"));\n+        env->FatalError(\"failed to failed to throw new exception\");\n@@ -212,1 +186,1 @@\n-    if (JNI_ENV_PTR(env)->ExceptionOccurred(JNI_ENV_ARG1(env))) {\n+    if (env->ExceptionOccurred()) {\n@@ -216,1 +190,1 @@\n-        JNI_ENV_PTR(env)->ExceptionClear(JNI_ENV_ARG1(env));\n+        env->ExceptionClear();\n@@ -288,1 +262,1 @@\n-    objCls = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, obj));\n+    objCls = env->GetObjectClass(obj);\n@@ -293,2 +267,1 @@\n-    if ((fid = JNI_ENV_PTR(env)->GetFieldID(\n-            JNI_ENV_ARG(env, objCls), javaField, excClassSig)) == 0) {\n+    if ((fid = env->GetFieldID(objCls, javaField, excClassSig)) == 0) {\n@@ -304,2 +277,1 @@\n-    thrwObj = (jthrowable) JNI_ENV_PTR(env)->GetObjectField(\n-        JNI_ENV_ARG(env, obj), fid);\n+    thrwObj = (jthrowable) env->GetObjectField(obj, fid);\n@@ -310,1 +282,1 @@\n-    thrw = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, thrwObj));\n+    thrw = env->GetObjectClass(thrwObj);\n@@ -326,2 +298,2 @@\n-    JNI_ENV_PTR(env)->DeleteLocalRef(JNI_ENV_ARG(env, thrw));\n-    JNI_ENV_PTR(env)->DeleteLocalRef(JNI_ENV_ARG(env, thrwObj));\n+    env->DeleteLocalRef(thrw);\n+    env->DeleteLocalRef(thrwObj);\n@@ -352,2 +324,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -362,1 +333,0 @@\n-#ifdef __cplusplus\n@@ -364,1 +334,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t003\/ji03t003.cpp","additions":19,"deletions":50,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#ifdef __cplusplus\n@@ -36,19 +35,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -101,2 +81,1 @@\n-    if ((err = jvmti->GetJNIFunctionTable(&orig_jni_functions)) !=\n-            JVMTI_ERROR_NONE) {\n+    if ((err = jvmti->GetJNIFunctionTable(&orig_jni_functions)) != JVMTI_ERROR_NONE) {\n@@ -106,2 +85,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get original JNI function table\"));\n+        env->FatalError(\"failed to get original JNI function table\");\n@@ -109,2 +87,1 @@\n-    if ((err = jvmti->GetJNIFunctionTable(&redir_jni_functions)) !=\n-            JVMTI_ERROR_NONE) {\n+    if ((err = jvmti->GetJNIFunctionTable(&redir_jni_functions)) != JVMTI_ERROR_NONE) {\n@@ -114,2 +91,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get redirected JNI function table\"));\n+        env->FatalError(\"failed to get redirected JNI function table\");\n@@ -130,2 +106,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to set new JNI function table\"));\n+        env->FatalError(\"failed to set new JNI function table\");\n@@ -143,2 +118,1 @@\n-    if ((err = jvmti->SetJNIFunctionTable(orig_jni_functions)) !=\n-            JVMTI_ERROR_NONE) {\n+    if ((err = jvmti->SetJNIFunctionTable(orig_jni_functions)) != JVMTI_ERROR_NONE) {\n@@ -148,2 +122,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to restore original JNI function table\"));\n+        env->FatalError(\"failed to restore original JNI function table\");\n@@ -160,1 +133,1 @@\n-    if ((allObj = JNI_ENV_PTR(env)->AllocObject(JNI_ENV_ARG(env, allCls)))\n+    if ((allObj = env->AllocObject(allCls))\n@@ -165,2 +138,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to failed to call AllocObject()\"));\n+        env->FatalError(\"failed to failed to call AllocObject()\");\n@@ -169,1 +141,1 @@\n-    if (JNI_ENV_PTR(env)->ExceptionOccurred(JNI_ENV_ARG1(env))) {\n+    if (env->ExceptionOccurred()) {\n@@ -173,2 +145,2 @@\n-            JNI_ENV_PTR(env)->ExceptionDescribe(JNI_ENV_ARG1(env));\n-            JNI_ENV_PTR(env)->ExceptionClear(JNI_ENV_ARG1(env));\n+            env->ExceptionDescribe();\n+            env->ExceptionClear();\n@@ -177,1 +149,1 @@\n-    newObj = JNI_ENV_PTR(env)->NewObjectV(JNI_ENV_ARG(env, allCls), ctorId, args);\n+    newObj = env->NewObjectV(allCls, ctorId, args);\n@@ -182,2 +154,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to failed to call NewObjectV()\"));\n+        env->FatalError(\"failed to failed to call NewObjectV()\");\n@@ -186,1 +157,1 @@\n-    if (JNI_ENV_PTR(env)->ExceptionOccurred(JNI_ENV_ARG1(env))) {\n+    if (env->ExceptionOccurred()) {\n@@ -190,2 +161,2 @@\n-        JNI_ENV_PTR(env)->ExceptionDescribe(JNI_ENV_ARG1(env));\n-        JNI_ENV_PTR(env)->ExceptionClear(JNI_ENV_ARG1(env));\n+        env->ExceptionDescribe();\n+        env->ExceptionClear();\n@@ -194,2 +165,2 @@\n-    JNI_ENV_PTR(env)->DeleteLocalRef(JNI_ENV_ARG(env, allObj));\n-    JNI_ENV_PTR(env)->DeleteLocalRef(JNI_ENV_ARG(env, newObj));\n+    env->DeleteLocalRef(allObj);\n+    env->DeleteLocalRef(newObj);\n@@ -243,2 +214,1 @@\n-    if ((objCls = JNI_ENV_PTR(env)->FindClass(JNI_ENV_ARG(env, classSig)))\n-            == NULL) {\n+    if ((objCls = env->FindClass(classSig)) == NULL) {\n@@ -250,2 +220,1 @@\n-    if ((ctorId = JNI_ENV_PTR(env)->GetMethodID(\n-                JNI_ENV_ARG(env, objCls), \"<init>\", \"()V\"))\n+    if ((ctorId = env->GetMethodID(objCls, \"<init>\", \"()V\"))\n@@ -295,2 +264,1 @@\n-    res = JNI_ENV_PTR(jvm)->\n-        GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti), JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -305,1 +273,0 @@\n-#ifdef __cplusplus\n@@ -307,1 +274,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t004\/ji03t004.cpp","additions":22,"deletions":56,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-#ifdef __cplusplus\n@@ -39,19 +38,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -122,2 +102,1 @@\n-    if ((err = jvmti->GetJNIFunctionTable(&orig_jni_functions[indx])) !=\n-            JVMTI_ERROR_NONE) {\n+    if ((err = jvmti->GetJNIFunctionTable(&orig_jni_functions[indx])) != JVMTI_ERROR_NONE) {\n@@ -127,2 +106,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get original JNI function table\"));\n+        env->FatalError(\"failed to get original JNI function table\");\n@@ -130,2 +108,1 @@\n-    if ((err = jvmti->GetJNIFunctionTable(&redir_jni_functions[indx])) !=\n-            JVMTI_ERROR_NONE) {\n+    if ((err = jvmti->GetJNIFunctionTable(&redir_jni_functions[indx])) != JVMTI_ERROR_NONE) {\n@@ -135,2 +112,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get redirected JNI function table\"));\n+        env->FatalError(\"failed to get redirected JNI function table\");\n@@ -145,2 +121,1 @@\n-    if ((err = jvmti->SetJNIFunctionTable(redir_jni_functions[indx])) !=\n-            JVMTI_ERROR_NONE) {\n+    if ((err = jvmti->SetJNIFunctionTable(redir_jni_functions[indx])) != JVMTI_ERROR_NONE) {\n@@ -150,2 +125,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to set new JNI function table\"));\n+        env->FatalError(\"failed to set new JNI function table\");\n@@ -161,2 +135,1 @@\n-    res = JNI_ENV_PTR(env)->\n-        GetVersion(JNI_ENV_ARG1(env));\n+    res = env->GetVersion();\n@@ -201,4 +174,2 @@\n-    NSK_DISPLAY1(\"\\nagent %s initializer: obtaining the JVMTI env ...\\n\",\n-        (indx==0)?\"A\":\"B\");\n-    res = JNI_ENV_PTR(vm)->\n-        GetEnv(JNI_ENV_ARG(vm, (void **) &jvmti[indx]), JVMTI_VERSION_1_1);\n+    NSK_DISPLAY1(\"\\nagent %s initializer: obtaining the JVMTI env ...\\n\", (indx==0)?\"A\":\"B\");\n+    res = vm->GetEnv((void **) &jvmti[indx], JVMTI_VERSION_1_1);\n@@ -233,2 +204,1 @@\n-    if ((err = jvmti[indx]->SetEventNotificationMode(\n-            JVMTI_ENABLE,\n+    if ((err = jvmti[indx]->SetEventNotificationMode(JVMTI_ENABLE,\n@@ -285,5 +255,2 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->AttachCurrentThread(\n-                JNI_ENV_ARG(vm, (void **) &env), (void *) 0)) != 0) {\n-        NSK_COMPLAIN1(\"TEST FAILURE: AttachCurrentThread() returns: %d\\n\",\n-            res);\n+    if ((res = vm->AttachCurrentThread((void **) &env, (void *) 0)) != 0) {\n+        NSK_COMPLAIN1(\"TEST FAILURE: AttachCurrentThread() returns: %d\\n\", res);\n@@ -336,1 +303,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->DetachCurrentThread(JNI_ENV_ARG1(vm))) != 0) {\n+    if ((res = vm->DetachCurrentThread()) != 0) {\n@@ -350,3 +317,1 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->AttachCurrentThread(\n-                JNI_ENV_ARG(vm, (void **) &env), (void *) 0)) != 0) {\n+    if ((res = vm->AttachCurrentThread((void **) &env, (void *) 0)) != 0) {\n@@ -399,1 +364,1 @@\n-    if ((res = JNI_ENV_PTR(vm)->DetachCurrentThread(JNI_ENV_ARG1(vm))) != 0) {\n+    if ((res = vm->DetachCurrentThread()) != 0) {\n@@ -473,1 +438,0 @@\n-#ifdef __cplusplus\n@@ -475,1 +439,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI05\/ji05t001\/ji05t001.cpp","additions":15,"deletions":52,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-#ifdef __cplusplus\n@@ -39,19 +38,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG(x, y) y\n-    #define JNI_ENV_PTR(x) x\n-  #else\n-    #define JNI_ENV_ARG(x, y) x, y\n-    #define JNI_ENV_PTR(x) (*x)\n-  #endif\n-#endif\n-\n-#ifndef JNI_ENV_ARG1\n-  #ifdef __cplusplus\n-    #define JNI_ENV_ARG1(x)\n-  #else\n-    #define JNI_ENV_ARG1(x) x\n-  #endif\n-#endif\n@@ -68,1 +48,1 @@\n-      int res = JNI_ENV_PTR(vm)->DetachCurrentThread(JNI_ENV_ARG1(vm)); \\\n+      int res = vm->DetachCurrentThread(); \\\n@@ -131,2 +111,1 @@\n-    if ((result = JNI_ENV_PTR(env)->\n-            MonitorEnter(JNI_ENV_ARG(env, clsObj))) != 0) {\n+    if ((result = env->MonitorEnter(clsObj)) != 0) {\n@@ -137,1 +116,1 @@\n-    if (JNI_ENV_PTR(env)->ExceptionOccurred(JNI_ENV_ARG1(env))) {\n+    if (env->ExceptionOccurred()) {\n@@ -140,2 +119,2 @@\n-        JNI_ENV_PTR(env)->ExceptionDescribe(JNI_ENV_ARG1(env));\n-        JNI_ENV_PTR(env)->ExceptionClear(JNI_ENV_ARG1(env));\n+        env->ExceptionDescribe();\n+        env->ExceptionClear();\n@@ -151,2 +130,1 @@\n-    if ((result = JNI_ENV_PTR(env)->\n-            MonitorExit(JNI_ENV_ARG(env, clsObj))) != 0) {\n+    if ((result = env->MonitorExit(clsObj)) != 0) {\n@@ -170,2 +148,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get original JNI function table\"));\n+        env->FatalError(\"failed to get original JNI function table\");\n@@ -178,2 +155,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get redirected JNI function table\"));\n+        env->FatalError(\"failed to get redirected JNI function table\");\n@@ -192,2 +168,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to set new JNI function table\"));\n+        env->FatalError(\"failed to set new JNI function table\");\n@@ -225,3 +200,1 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->AttachCurrentThread(\n-                JNI_ENV_ARG(vm, (void **) &env), (void *) 0)) != 0) {\n+    if ((res = vm->AttachCurrentThread((void **) &env, (void *) 0)) != 0) {\n@@ -258,3 +231,1 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->AttachCurrentThread(\n-                JNI_ENV_ARG(vm, (void **) &env), (void *) 0)) != 0) {\n+    if ((res = vm->AttachCurrentThread((void **) &env, (void *) 0)) != 0) {\n@@ -280,2 +251,1 @@\n-            JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-                \"ownerThread: time exceed\"));\n+            env->FatalError(\"ownerThread: time exceed\");\n@@ -301,3 +271,1 @@\n-    if ((res =\n-            JNI_ENV_PTR(vm)->AttachCurrentThread(\n-                JNI_ENV_ARG(vm, (void **) &env), (void *) 0)) != 0) {\n+    if ((res = vm->AttachCurrentThread((void **) &env, (void *) 0)) != 0) {\n@@ -323,1 +291,1 @@\n-    _objCls = JNI_ENV_PTR(env)->GetObjectClass(JNI_ENV_ARG(env, obj));\n+    _objCls = env->GetObjectClass(obj);\n@@ -327,2 +295,1 @@\n-    if ((fid = JNI_ENV_PTR(env)->GetFieldID(\n-            JNI_ENV_ARG(env, _objCls), javaField, classSig)) == 0) {\n+    if ((fid = env->GetFieldID(_objCls, javaField, classSig)) == 0) {\n@@ -332,2 +299,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to get ID for the java field\"));\n+        env->FatalError(\"failed to get ID for the java field\");\n@@ -336,2 +302,1 @@\n-    return JNI_ENV_PTR(env)->GetObjectField(\n-        JNI_ENV_ARG(env, obj), fid);\n+    return env->GetObjectField(obj, fid);\n@@ -358,2 +323,1 @@\n-    if ((clsObj = JNI_ENV_PTR(env)->NewGlobalRef(\n-            JNI_ENV_ARG(env, getObjectFromField(env, obj)))) == NULL) {\n+    if ((clsObj = env->NewGlobalRef(getObjectFromField(env, obj))) == NULL) {\n@@ -362,2 +326,1 @@\n-        JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-            \"failed to create a new global reference\"));\n+        env->FatalError(\"failed to create a new global reference\");\n@@ -380,2 +343,1 @@\n-            JNI_ENV_PTR(env)->FatalError(JNI_ENV_ARG(env,\n-                \" the monitor is still not entered by the owner thread\"));\n+            env->FatalError(\" the monitor is still not entered by the owner thread\");\n@@ -486,1 +448,1 @@\n-    JNI_ENV_PTR(env)->DeleteGlobalRef(JNI_ENV_ARG(env, clsObj));\n+    env->DeleteGlobalRef(clsObj);\n@@ -526,1 +488,0 @@\n-#ifdef __cplusplus\n@@ -528,1 +489,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI06\/ji06t001\/ji06t001.cpp","additions":21,"deletions":61,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#ifdef __cplusplus\n@@ -32,11 +31,0 @@\n-#endif\n-\n-#ifndef JNI_ENV_ARG\n-\n-#ifdef __cplusplus\n-#define JNI_ENV_ARG(x, y) y\n-#define JNI_ENV_PTR(x) x\n-#else\n-#define JNI_ENV_ARG(x,y) x, y\n-#define JNI_ENV_PTR(x) (*x)\n-#endif\n@@ -44,1 +32,0 @@\n-#endif\n@@ -177,2 +164,1 @@\n-    midActiveMethod = JNI_ENV_PTR(env)->GetMethodID(JNI_ENV_ARG(env, targCls),\n-                                                    name_exp, sig_exp);\n+    midActiveMethod = env->GetMethodID(targCls, name_exp, sig_exp);\n@@ -214,2 +200,1 @@\n-    res = JNI_ENV_PTR(jvm)->GetEnv(JNI_ENV_ARG(jvm, (void **) &jvmti),\n-        JVMTI_VERSION_1_1);\n+    res = jvm->GetEnv((void **) &jvmti, JVMTI_VERSION_1_1);\n@@ -291,1 +276,0 @@\n-#ifdef __cplusplus\n@@ -293,1 +277,0 @@\n-#endif\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/ForceEarlyReturn\/earlyretbase\/earlyretbase.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"}]}