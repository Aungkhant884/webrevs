{"files":[{"patch":"@@ -28,1 +28,1 @@\n-#include \"classfile\/javaClasses.hpp\"\n+#include \"classfile\/javaClasses.inline.hpp\"\n@@ -738,1 +738,1 @@\n-    guarantee(oopDesc::is_oop(java_mirror_no_keepalive()), \"should be instance\");\n+    guarantee(java_lang_Class::is_instance(java_mirror_no_keepalive()), \"should be instance\");\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -272,3 +272,2 @@\n-  OopHandle java_mirror_handle() const          {\n-    return _java_mirror;\n-  }\n+  OopHandle java_mirror_handle() const          { return _java_mirror;   }\n+  void swap_java_mirror_handle(OopHandle& mirror) { _java_mirror.swap(mirror); }\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,4 @@\n+  void swap(OopHandle& copy) {\n+    ::swap(_obj, copy._obj);\n+  }\n+\n","filename":"src\/hotspot\/share\/oops\/oopHandle.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -414,2 +414,2 @@\n-    _scratch_mirror = _scratch_class->java_mirror_handle();\n-    _scratch_class->set_java_mirror_handle(the_class->java_mirror_handle());\n+    _scratch_mirror = the_class->java_mirror_handle();  \/\/ this is a copy that is swapped\n+    _scratch_class->swap_java_mirror_handle(_scratch_mirror);\n@@ -421,1 +421,1 @@\n-    _scratch_class->set_java_mirror_handle(_scratch_mirror);\n+    _scratch_class->swap_java_mirror_handle(_scratch_mirror);\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}