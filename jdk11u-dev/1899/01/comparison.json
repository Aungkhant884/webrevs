{"files":[{"patch":"@@ -371,0 +371,22 @@\n+    @Test\n+    public static void upgradeableModule() throws IOException {\n+        Path mpath = Paths.get(System.getProperty(\"java.home\"), \"jmods\");\n+        if (!Files.exists(mpath)) {\n+            return;\n+        }\n+\n+        Path dest = Paths.get(\"test4\");\n+        HashesTest ht = new HashesTest(dest);\n+        ht.makeModule(\"m1\");\n+        ht.makeModule(\"java.compiler\", \"m1\");\n+        ht.makeModule(\"m2\", \"java.compiler\");\n+\n+        ht.makeJmod(\"m1\");\n+        ht.makeJmod(\"m2\");\n+        ht.makeJmod(\"java.compiler\",\n+                    \"--module-path\",\n+                    ht.lib.toString() + File.pathSeparator + mpath,\n+                    \"--hash-modules\", \"java\\\\.(?!se)|^m.*\");\n+\n+        ht.checkHashes(\"java.compiler\",  \"m2\");\n+    }\n","filename":"test\/jdk\/tools\/jmod\/hashes\/HashesTest.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -27,1 +27,2 @@\n- * @modules jdk.compiler\n+ * @modules java.compiler\n+ *          jdk.compiler\n@@ -54,0 +55,1 @@\n+    private static final Path UPGRADE_MODS_DIRS = Paths.get(\"upgrademods\");\n@@ -59,1 +61,3 @@\n-\n+    \/\/ test module m2 uses java.compiler internals\n+    private static final String TEST2_MODULE = \"m2\";\n+    private static final String TEST2_MAIN_CLASS = \"jdk.test2.Main\";\n@@ -77,0 +81,5 @@\n+        \/\/ javac -d upgrademods\/java.compiler src\/java.compiler\/**\n+        compiled = CompilerUtils.compile(\n+                SRC_DIR.resolve(\"java.compiler\"),\n+                UPGRADE_MODS_DIRS.resolve(\"java.compiler\"));\n+        assertTrue(compiled, \"module java.compiler did not compile\");\n@@ -78,0 +87,7 @@\n+        \/\/ javac --upgrade-module-path upgrademods -d mods\/m2 src\/m2\/**\n+        compiled = CompilerUtils.compile(\n+                SRC_DIR.resolve(TEST2_MODULE),\n+                MODS_DIR.resolve(TEST2_MODULE),\n+                \"--upgrade-module-path\", UPGRADE_MODS_DIRS.toString(),\n+                \"--add-exports\", \"java.compiler\/javax.tools.internal=m2\");\n+        assertTrue(compiled, \"module \" + TEST2_MODULE + \" did not compile\");\n@@ -149,0 +165,16 @@\n+    \/**\n+     * Test --add-exports with upgraded module\n+     *\/\n+    public void testWithUpgradedModule() throws Exception {\n+\n+        \/\/ java --add-exports java.compiler\/javax.tools.internal=m2\n+        \/\/      --upgrade-module-path upgrademods --module-path mods -m ...\n+        String mid = TEST2_MODULE + \"\/\" + TEST2_MAIN_CLASS;\n+        int exitValue = executeTestJava(\n+                \"--add-exports\", \"java.compiler\/javax.tools.internal=m2\",\n+                \"--upgrade-module-path\", UPGRADE_MODS_DIRS.toString(),\n+                \"--module-path\", MODS_DIR.toString(),\n+                \"-m\", mid)\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .getExitValue();\n@@ -150,0 +182,2 @@\n+        assertTrue(exitValue == 0);\n+    }\n","filename":"test\/jdk\/tools\/launcher\/modules\/addexports\/AddExportsTest.java","additions":36,"deletions":2,"binary":false,"changes":38,"status":"modified"}]}