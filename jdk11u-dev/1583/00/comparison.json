{"files":[{"patch":"@@ -93,3 +93,0 @@\n-\n-static jobject sAccessibilityClass = NULL;\n-\n@@ -295,33 +292,0 @@\n-\n-    if (sAccessibilityClass == NULL) {\n-        JNIEnv *env = [ThreadUtilities getJNIEnv];\n-\n-        GET_CACCESSIBILITY_CLASS();\n-        DECLARE_STATIC_METHOD(jm_getAccessibility, sjc_CAccessibility, \"getAccessibility\", \"([Ljava\/lang\/String;)Lsun\/lwawt\/macosx\/CAccessibility;\");\n-\n-#ifdef JAVA_AX_NO_IGNORES\n-        NSArray *ignoredKeys = [NSArray array];\n-#else\n-        NSArray *ignoredKeys = [sRoles allKeysForObject:JavaAccessibilityIgnore];\n-#endif\n-        jobjectArray result = NULL;\n-        jsize count = [ignoredKeys count];\n-\n-        DECLARE_CLASS(jc_String, \"java\/lang\/String\");\n-        result = (*env)->NewObjectArray(env, count, jc_String, NULL);\n-        CHECK_EXCEPTION();\n-        if (!result) {\n-            NSLog(@\"In %s, can't create Java array of String objects\", __FUNCTION__);\n-            return;\n-        }\n-\n-        NSInteger i;\n-        for (i = 0; i < count; i++) {\n-            jstring jString = NSStringToJavaString(env, [ignoredKeys objectAtIndex:i]);\n-            (*env)->SetObjectArrayElement(env, result, i, jString);\n-            (*env)->DeleteLocalRef(env, jString);\n-        }\n-\n-        sAccessibilityClass = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getAccessibility, result); \/\/ AWT_THREADING Safe (known object)\n-        CHECK_EXCEPTION();\n-    }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":0,"deletions":36,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+- (BOOL)performAccessibleAction:(int)index;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:1];\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:26];\n@@ -52,0 +52,64 @@\n+    [rolesMap setObject:@\"ImageAccessibility\" forKey:@\"icon\"];\n+    [rolesMap setObject:@\"ImageAccessibility\" forKey:@\"desktopicon\"];\n+    [rolesMap setObject:@\"SpinboxAccessibility\" forKey:@\"spinbox\"];\n+    [rolesMap setObject:@\"StaticTextAccessibility\" forKey:@\"hyperlink\"];\n+    [rolesMap setObject:@\"StaticTextAccessibility\" forKey:@\"label\"];\n+    [rolesMap setObject:@\"RadiobuttonAccessibility\" forKey:@\"radiobutton\"];\n+    [rolesMap setObject:@\"CheckboxAccessibility\" forKey:@\"checkbox\"];\n+\n+    \/*\n+     * All the components below should be ignored by the accessibility subsystem,\n+     * If any of the enclosed component asks for a parent the first ancestor\n+     * participating in accessibility exchange should be returned.\n+     *\/\n+    [rolesMap setObject:IgnoreClassName forKey:@\"alert\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"colorchooser\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"desktoppane\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"dialog\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"directorypane\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"filechooser\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"filler\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"fontchooser\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"frame\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"glasspane\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"layeredpane\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"optionpane\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"panel\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"rootpane\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"separator\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"tooltip\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"viewport\"];\n+    [rolesMap setObject:IgnoreClassName forKey:@\"window\"];\n+\n+    \/*\n+     * Initialize CAccessibility instance\n+     *\/\n+#ifdef JAVA_AX_NO_IGNORES\n+    NSArray *ignoredKeys = [NSArray array];\n+#else\n+    NSArray *ignoredKeys = [rolesMap allKeysForObject:IgnoreClassName];\n+#endif\n+\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS();\n+    DECLARE_STATIC_METHOD(jm_getAccessibility, sjc_CAccessibility, \"getAccessibility\", \"([Ljava\/lang\/String;)Lsun\/lwawt\/macosx\/CAccessibility;\");\n+    jobjectArray result = NULL;\n+    jsize count = [ignoredKeys count];\n+\n+    DECLARE_CLASS(jc_String, \"java\/lang\/String\");\n+    result = (*env)->NewObjectArray(env, count, jc_String, NULL);\n+    CHECK_EXCEPTION();\n+    if (!result) {\n+        NSLog(@\"In %s, can't create Java array of String objects\", __FUNCTION__);\n+        return;\n+    }\n+\n+    NSInteger i;\n+    for (i = 0; i < count; i++) {\n+        jstring jString = NSStringToJavaString(env, [ignoredKeys objectAtIndex:i]);\n+        (*env)->SetObjectArrayElement(env, result, i, jString);\n+        (*env)->DeleteLocalRef(env, jString);\n+    }\n+\n+    sAccessibilityClass = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getAccessibility, result);\n+    CHECK_EXCEPTION();\n@@ -61,1 +125,0 @@\n-\n@@ -98,0 +161,20 @@\n+\/\/ AccessibleAction support\n+- (BOOL)performAccessibleAction:(int)index\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+\n+    GET_CACCESSIBILITY_CLASS_RETURN(FALSE);\n+    DECLARE_STATIC_METHOD_RETURN(jm_doAccessibleAction, sjc_CAccessibility, \"doAccessibleAction\",\n+                                 \"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\", FALSE);\n+    (*env)->CallStaticVoidMethod(env, sjc_CAccessibility, jm_doAccessibleAction,\n+                                 [self axContextWithEnv:(env)], index, fComponent);\n+    CHECK_EXCEPTION();\n+\n+    return TRUE;\n+}\n+\n+- (BOOL)isAccessibilityElement {\n+    return YES;\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":85,"deletions":2,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"JavaComponentAccessibility.h\"\n+#import \"CommonComponentAccessibility.h\"\n+\n+#import <AppKit\/AppKit.h>\n+\n+@interface IgnoreAccessibility : CommonComponentAccessibility {\n+\n+};\n+- (BOOL)isAccessibilityElement;\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/IgnoreAccessibility.h","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"IgnoreAccessibility.h\"\n+\n+\/*\n+ * Indicates that component does not participate in accessibility exchange\n+ *\/\n+@implementation IgnoreAccessibility\n+- (BOOL)isAccessibilityElement\n+{\n+    return NO;\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/IgnoreAccessibility.m","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"}]}