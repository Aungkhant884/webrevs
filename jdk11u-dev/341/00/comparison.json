{"files":[{"patch":"@@ -1854,1 +1854,1 @@\n-      Node* c = u->in(0) != NULL ? u->in(0) : phase->get_ctrl(u);\n+      Node* c = phase->get_ctrl(u);\n@@ -1857,1 +1857,4 @@\n-      if (outer_loop->is_member(u_loop)) {\n+      if (outer_loop->is_member(u_loop) ||\n+          \/\/ nodes pinned with control in the outer loop but not referenced from the safepoint must be moved out of\n+          \/\/ the outer loop too\n+          (u->in(0) != NULL && outer_loop->is_member(phase->get_loop(u->in(0))))) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8268672\n+ * @summary C2: assert(!loop->is_member(u_loop)) failed: can be in outer loop or out of both loops only\n+ *\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=TestPinnedNodeInInnerLoop TestPinnedNodeInInnerLoop\n+ *\n+ *\/\n+\n+public class TestPinnedNodeInInnerLoop {\n+    boolean b;\n+    double d;\n+    int iArr[];\n+\n+    public static void main(String[] args) {\n+        TestPinnedNodeInInnerLoop t = new TestPinnedNodeInInnerLoop();\n+        for (int i = 0; i < 10; i++) {\n+            t.test();\n+        }\n+    }\n+\n+    void test() {\n+        int e = 4, f = -51874, g = 7, h = 0;\n+\n+        for (; f < 3; ++f) {\n+        }\n+        while (++g < 2) {\n+            if (b) {\n+                d = h;\n+            } else {\n+                iArr[g] = e;\n+            }\n+        }\n+        System.out.println(g);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestPinnedNodeInInnerLoop.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}