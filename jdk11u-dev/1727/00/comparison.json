{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,3 @@\n-        int port;\n-        long delay;\n+        final InetAddress address;\n+        final int port;\n+        final long delay;\n@@ -78,1 +79,2 @@\n-        public Other(int port, long delay) {\n+        public Other(InetAddress address, int port, long delay) {\n+            this.address = address;\n@@ -88,1 +90,1 @@\n-                Socket s = new Socket(\"localhost\", port);\n+                Socket s = new Socket(address, port);\n@@ -106,1 +108,2 @@\n-        ServerSocket ss = new ServerSocket(0);\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        ServerSocket ss = new ServerSocket(0, 50, loopback);\n@@ -108,1 +111,1 @@\n-        Socket s1 = new Socket(\"localhost\", ss.getLocalPort());\n+        Socket s1 = new Socket(loopback, ss.getLocalPort());\n@@ -122,1 +125,1 @@\n-        Other other = new Other(ss.getLocalPort(), 5000);\n+        Other other = new Other(loopback, ss.getLocalPort(), 5000);\n","filename":"test\/jdk\/java\/net\/Socket\/LingerTest.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,2 @@\n-        ServerSocket ss = new ServerSocket(0);\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        ServerSocket ss = new ServerSocket(0, 50, loopback);\n","filename":"test\/jdk\/java\/net\/Socket\/ShutdownBoth.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.io.InputStream;\n@@ -46,1 +45,0 @@\n-import java.net.UnknownHostException;\n@@ -68,1 +66,1 @@\n-        server = HttpServer.create(new InetSocketAddress(0), 0);\n+        server = HttpServer.create(new InetSocketAddress(\"::1\", 0), 0);\n@@ -79,1 +77,1 @@\n-        socks = new SocksServer(0, false);\n+        socks = new SocksServer(InetAddress.getByName(\"::1\"), 0, false);\n@@ -143,2 +141,17 @@\n-        String ipv6Hostname = InetAddress.getByName(\"::1\").getHostName();\n-        String ipv4Hostname = InetAddress.getByName(\"127.0.0.1\").getHostName();\n+        InetAddress ipv6Loopback = InetAddress.getByName(\"::1\");\n+        String ipv6Hostname = ipv6Loopback.getHostName();\n+        String ipv6HostAddress = ipv6Loopback.getHostAddress();\n+        InetAddress ipv4Loopback;\n+        String ipv4Hostname;\n+        String ipv4HostAddress;\n+        try {\n+            ipv4Loopback = InetAddress.getByName(\"127.0.0.1\");\n+            ipv4Hostname = ipv4Loopback == null ? null : ipv4Loopback.getHostName();\n+            ipv4HostAddress = ipv4Loopback == null ? null : ipv4Loopback.getHostAddress();\n+        } catch (IOException io) {\n+            ipv4Hostname = null;\n+            ipv4HostAddress = null;\n+        }\n+\n+        System.out.println(\"ipv6Hostname: \" + ipv6Hostname + \" \/ \" + ipv6HostAddress);\n+        System.out.println(\"ipv4Hostname: \" + ipv4Hostname + \" \/ \" + ipv4HostAddress);\n@@ -146,1 +159,1 @@\n-        if (ipv6Hostname.equals(InetAddress.getByName(\"::1\").getHostAddress())) {\n+        if (ipv6Hostname.equals(ipv6HostAddress)) {\n@@ -152,1 +165,1 @@\n-        if (ipv6Hostname.equals(ipv4Hostname)) {\n+        if (ipv4Hostname != null && ipv6Hostname.equals(ipv4Hostname)) {\n@@ -158,0 +171,9 @@\n+        if (!InetAddress.getByName(ipv6Hostname).getHostAddress()\n+                .equals(ipv6HostAddress)) {\n+            System.out.println(ipv6Hostname + \" resolves to \\\"\"\n+                    + InetAddress.getByName(ipv6Hostname).getHostAddress()\n+                    + \"\\\", not \\\"\" + ipv6HostAddress +\n+                    \"\\\". Skipping test case.\");\n+            return;\n+        }\n+\n","filename":"test\/jdk\/java\/net\/Socks\/SocksIPv6Test.java","additions":31,"deletions":9,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -494,0 +494,19 @@\n+    public SocksServer(InetAddress addr, int port, boolean useV4) throws IOException {\n+        this.port = port;\n+        this.useV4 = useV4;\n+        server = new ServerSocket();\n+        if (port == 0 && addr == null) {\n+            server.bind(null);\n+            this.port = server.getLocalPort();\n+        } else if (port == 0 && addr != null) {\n+            server.bind(new InetSocketAddress(addr, 0));\n+            this.port = server.getLocalPort();\n+        } else if (addr == null) {\n+            assert port != 0;\n+            server.bind(new InetSocketAddress(port));\n+        } else {\n+            assert port != 0;\n+            server.bind(new InetSocketAddress(addr, port));\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/net\/Socks\/SocksServer.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-            URL url = new URL(\"http:\/\/localhost:\" + s.getPort());\n+            URL url = new URL(\"http:\/\/\" + s.getAuthority());\n@@ -73,1 +73,2 @@\n-            InetSocketAddress addr = new InetSocketAddress(0);\n+            InetAddress loopback = InetAddress.getLoopbackAddress();\n+            InetSocketAddress addr = new InetSocketAddress(loopback,0);\n@@ -84,0 +85,6 @@\n+        public String getAuthority() {\n+            String address = server.getAddress().getHostString();\n+            address =  (address.indexOf(':') >= 0) ? (\"[\" + address + \"]\") : address;\n+            return address + \":\" + getPort();\n+        }\n+\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpURLConnection\/PostOnDelete.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"}]}