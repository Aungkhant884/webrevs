{"files":[{"patch":"@@ -2362,1 +2362,2 @@\n-  DWORD exception_code = exceptionInfo->ExceptionRecord->ExceptionCode;\n+  PEXCEPTION_RECORD exception_record = exceptionInfo->ExceptionRecord;\n+  DWORD exception_code = exception_record->ExceptionCode;\n@@ -2381,3 +2382,2 @@\n-    PEXCEPTION_RECORD exceptionRecord = exceptionInfo->ExceptionRecord;\n-    int exception_subcode = (int) exceptionRecord->ExceptionInformation[0];\n-    address addr = (address) exceptionRecord->ExceptionInformation[1];\n+    int exception_subcode = (int) exception_record->ExceptionInformation[0];\n+    address addr = (address) exception_record->ExceptionInformation[1];\n@@ -2447,1 +2447,1 @@\n-      report_error(t, exception_code, addr, exceptionInfo->ExceptionRecord,\n+      report_error(t, exception_code, addr, exception_record,\n@@ -2461,2 +2461,1 @@\n-      PEXCEPTION_RECORD exceptionRecord = exceptionInfo->ExceptionRecord;\n-      address addr = (address) exceptionRecord->ExceptionInformation[1];\n+      address addr = (address) exception_record->ExceptionInformation[1];\n@@ -2469,6 +2468,4 @@\n-  }\n-\n-  if ((exception_code == EXCEPTION_ACCESS_VIOLATION) &&\n-      VM_Version::is_cpuinfo_segv_addr(pc)) {\n-    \/\/ Verify that OS save\/restore AVX registers.\n-    return Handle_Exception(exceptionInfo, VM_Version::cpuinfo_cont_addr());\n+    if (VM_Version::is_cpuinfo_segv_addr(pc)) {\n+      \/\/ Verify that OS save\/restore AVX registers.\n+      return Handle_Exception(exceptionInfo, VM_Version::cpuinfo_cont_addr());\n+    }\n@@ -2480,0 +2477,2 @@\n+    bool in_native = thread->thread_state() == _thread_in_native;\n+    bool in_vm = thread->thread_state() == _thread_in_vm;\n@@ -2486,2 +2485,0 @@\n-          PEXCEPTION_RECORD exceptionRecord = exceptionInfo->ExceptionRecord;\n-          address addr = (address) exceptionRecord->ExceptionInformation[1];\n@@ -2496,1 +2493,1 @@\n-        assert(thread->thread_state() != _thread_in_vm, \"Undersized StackShadowPages\");\n+        assert(!in_vm, \"Undersized StackShadowPages\");\n@@ -2506,2 +2503,2 @@\n-        report_error(t, exception_code, pc, exceptionInfo->ExceptionRecord,\n-                      exceptionInfo->ContextRecord);\n+        report_error(t, exception_code, pc, exception_record,\n+                     exceptionInfo->ContextRecord);\n@@ -2511,1 +2508,0 @@\n-      \/\/ Either stack overflow or null pointer exception.\n@@ -2513,2 +2509,2 @@\n-        PEXCEPTION_RECORD exceptionRecord = exceptionInfo->ExceptionRecord;\n-        address addr = (address) exceptionRecord->ExceptionInformation[1];\n+        \/\/ Either stack overflow or null pointer exception.\n+        address addr = (address) exception_record->ExceptionInformation[1];\n@@ -2533,1 +2529,0 @@\n-        {\n@@ -2535,11 +2530,8 @@\n-          \/\/ If it's a legal stack address map the entire region in\n-          \/\/\n-          PEXCEPTION_RECORD exceptionRecord = exceptionInfo->ExceptionRecord;\n-          address addr = (address) exceptionRecord->ExceptionInformation[1];\n-          if (addr > thread->stack_reserved_zone_base() && addr < thread->stack_base()) {\n-            addr = (address)((uintptr_t)addr &\n-                             (~((uintptr_t)os::vm_page_size() - (uintptr_t)1)));\n-            os::commit_memory((char *)addr, thread->stack_base() - addr,\n-                              !ExecMem);\n-            return EXCEPTION_CONTINUE_EXECUTION;\n-          } else\n+        \/\/ If it's a legal stack address map the entire region in\n+        if (addr > thread->stack_reserved_zone_base() && addr < thread->stack_base()) {\n+          addr = (address)((uintptr_t)addr &\n+                           (~((uintptr_t)os::vm_page_size() - (uintptr_t)1)));\n+          os::commit_memory((char *)addr, thread->stack_base() - addr,\n+                            !ExecMem);\n+          return EXCEPTION_CONTINUE_EXECUTION;\n+        }\n@@ -2547,10 +2539,4 @@\n-          {\n-            \/\/ Null pointer exception.\n-            if (!MacroAssembler::needs_explicit_null_check((intptr_t)addr)) {\n-              address stub = SharedRuntime::continuation_for_implicit_exception(thread, pc, SharedRuntime::IMPLICIT_NULL);\n-              if (stub != NULL) return Handle_Exception(exceptionInfo, stub);\n-            }\n-            report_error(t, exception_code, pc, exceptionInfo->ExceptionRecord,\n-                         exceptionInfo->ContextRecord);\n-            return EXCEPTION_CONTINUE_SEARCH;\n-          }\n+        \/\/ Null pointer exception.\n+        if (!MacroAssembler::needs_explicit_null_check((intptr_t)addr)) {\n+          address stub = SharedRuntime::continuation_for_implicit_exception(thread, pc, SharedRuntime::IMPLICIT_NULL);\n+          if (stub != NULL) return Handle_Exception(exceptionInfo, stub);\n@@ -2558,0 +2544,3 @@\n+        report_error(t, exception_code, pc, exception_record,\n+                     exceptionInfo->ContextRecord);\n+        return EXCEPTION_CONTINUE_SEARCH;\n@@ -2564,5 +2553,3 @@\n-      if (exception_code == EXCEPTION_ACCESS_VIOLATION) {\n-        address addr = JNI_FastGetField::find_slowcase_pc(pc);\n-        if (addr != (address)-1) {\n-          return Handle_Exception(exceptionInfo, addr);\n-        }\n+      address slowcase_pc = JNI_FastGetField::find_slowcase_pc(pc);\n+      if (slowcase_pc != (address)-1) {\n+        return Handle_Exception(exceptionInfo, slowcase_pc);\n@@ -2573,1 +2560,1 @@\n-      report_error(t, exception_code, pc, exceptionInfo->ExceptionRecord,\n+      report_error(t, exception_code, pc, exception_record,\n@@ -2586,2 +2573,1 @@\n-      if ((thread->thread_state() == _thread_in_vm &&\n-          thread->doing_unsafe_access()) ||\n+      if ((in_vm && thread->doing_unsafe_access()) ||\n@@ -2603,3 +2589,1 @@\n-    if (((thread->thread_state() == _thread_in_Java) ||\n-         (thread->thread_state() == _thread_in_native)) &&\n-         exception_code != EXCEPTION_UNCAUGHT_CXX_EXCEPTION) {\n+    if ((in_java || in_native) && exception_code != EXCEPTION_UNCAUGHT_CXX_EXCEPTION) {\n@@ -2612,1 +2596,1 @@\n-    report_error(t, exception_code, pc, exceptionInfo->ExceptionRecord,\n+    report_error(t, exception_code, pc, exception_record,\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":39,"deletions":55,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -66,12 +66,2 @@\n-    CONTEXT* uc = (CONTEXT*)ucontext;\n-\n-#ifdef AMD64\n-    intptr_t* ret_fp = (intptr_t*) uc->Rbp;\n-    intptr_t* ret_sp = (intptr_t*) uc->Rsp;\n-    ExtendedPC addr = ExtendedPC((address)uc->Rip);\n-#else\n-    intptr_t* ret_fp = (intptr_t*) uc->Ebp;\n-    intptr_t* ret_sp = (intptr_t*) uc->Esp;\n-    ExtendedPC addr = ExtendedPC((address)uc->Eip);\n-#endif \/\/ AMD64\n-    if (addr.pc() == NULL || ret_sp == NULL ) {\n+    frame ret_frame = os::fetch_frame_from_context(ucontext);\n+    if (ret_frame.pc() == NULL || ret_frame.sp() == NULL ) {\n@@ -82,1 +72,1 @@\n-    if (MetaspaceShared::is_in_trampoline_frame(addr.pc())) {\n+    if (MetaspaceShared::is_in_trampoline_frame(ret_frame.pc())) {\n@@ -88,1 +78,0 @@\n-    frame ret_frame(ret_sp, ret_fp, addr.pc());\n@@ -92,1 +81,1 @@\n-      frame ret_frame2(ret_sp, NULL, addr.pc());\n+      frame ret_frame2(ret_frame.sp(), NULL, ret_frame.pc());\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/thread_windows_x86.cpp","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"}]}