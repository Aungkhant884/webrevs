{"files":[{"patch":"@@ -35,37 +35,0 @@\n-################################################################################\n-# Setup global test running parameters\n-################################################################################\n-\n-# Each factor variable comes in 3 variants. The first one is reserved for users\n-# to use on command line. The other two are for predifined configurations in JDL\n-# and for machine specific configurations respectively.\n-TEST_JOBS_FACTOR ?= 1\n-TEST_JOBS_FACTOR_JDL ?= 1\n-TEST_JOBS_FACTOR_MACHINE ?= 1\n-\n-ifeq ($(TEST_JOBS), 0)\n-  CORES_DIVIDER := 2\n-  ifeq ($(OPENJDK_TARGET_CPU_ARCH), sparc)\n-    # For smaller SPARC machines we see reasonable scaling of throughput up to\n-    # cpus\/4 without affecting test reliability. On the bigger machines, cpus\/4\n-    # causes intermittent timeouts.\n-    ifeq ($(shell $(EXPR) $(NUM_CORES) \\> 16), 1)\n-      CORES_DIVIDER := 5\n-    else\n-      CORES_DIVIDER := 4\n-    endif\n-  endif\n-  MEMORY_DIVIDER := 2048\n-  TEST_JOBS := $(shell $(AWK) \\\n-    'BEGIN { \\\n-      c = $(NUM_CORES) \/ $(CORES_DIVIDER); \\\n-      m = $(MEMORY_SIZE) \/ $(MEMORY_DIVIDER); \\\n-      if (c > m) c = m; \\\n-      c = c * $(TEST_JOBS_FACTOR); \\\n-      c = c * $(TEST_JOBS_FACTOR_JDL); \\\n-      c = c * $(TEST_JOBS_FACTOR_MACHINE); \\\n-      if (c < 1) c = 1; \\\n-      printf \"%.0f\", c; \\\n-    }')\n-endif\n-\n@@ -244,1 +207,12 @@\n-  # Concurrency based on min(cores \/ 2, 12) * TEST_JOBS_FACTOR\n+  CORES_DIVIDER := 2\n+  ifeq ($(OPENJDK_TARGET_CPU_ARCH), sparc)\n+    # For smaller SPARC machines we see reasonable scaling of throughput up to\n+    # cpus\/4 without affecting test reliability. On the bigger machines, cpus\/4\n+    # causes intermittent timeouts.\n+    ifeq ($(shell $(EXPR) $(NUM_CORES) \\> 16), 1)\n+      CORES_DIVIDER := 5\n+    else\n+      CORES_DIVIDER := 4\n+    endif\n+  endif\n+  MEMORY_DIVIDER := 2048\n@@ -247,2 +221,3 @@\n-      c = $(NUM_CORES) \/ 2; \\\n-      if (c > 12) c = 12; \\\n+      c = $(NUM_CORES) \/ $(CORES_DIVIDER); \\\n+      m = $(MEMORY_SIZE) \/ $(MEMORY_DIVIDER); \\\n+      if (c > m) c = m; \\\n","filename":"make\/RunTests.gmk","additions":15,"deletions":40,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @run driver\/timeout=300 compiler.jsr292.ContinuousCallSiteTargetChange\n+ * @run driver compiler.jsr292.ContinuousCallSiteTargetChange\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/ContinuousCallSiteTargetChange.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}