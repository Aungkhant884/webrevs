{"files":[{"patch":"@@ -1842,2 +1842,2 @@\n-\/* jni_id_for_impl for jfieldIds only *\/\n-JNIid* InstanceKlass::jni_id_for_impl(int offset) {\n+\/* jni_id_for for jfieldIds only *\/\n+JNIid* InstanceKlass::jni_id_for(int offset) {\n@@ -1845,1 +1845,0 @@\n-  \/\/ Retry lookup after we got the lock\n@@ -1848,1 +1847,1 @@\n-    \/\/ Slow case, allocate new static field identifier\n+    \/\/ Allocate new static field identifier\n@@ -1855,10 +1854,0 @@\n-\n-\/* jni_id_for for jfieldIds only *\/\n-JNIid* InstanceKlass::jni_id_for(int offset) {\n-  JNIid* probe = jni_ids() == NULL ? NULL : jni_ids()->find(offset);\n-  if (probe == NULL) {\n-    probe = jni_id_for_impl(offset);\n-  }\n-  return probe;\n-}\n-\n@@ -2383,0 +2372,3 @@\n+    \/\/ To get a consistent list of classes we need MultiArray_lock to ensure\n+    \/\/ array classes aren't observed while they are being restored.\n+    MutexLocker ml(MultiArray_lock);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -538,0 +538,1 @@\n+java\/io\/File\/createTempFile\/SpecialTempFile.java                8274122 windows11\n@@ -701,1 +702,0 @@\n-javax\/swing\/JTable\/4235420\/bug4235420.java     8079127 generic-all\n@@ -777,1 +777,0 @@\n-javax\/swing\/UIDefaults\/6302464\/bug6302464.java 8199079 generic-all\n@@ -893,1 +892,0 @@\n-jdk\/jfr\/event\/io\/TestInstrumentation.java                       8202142    generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}