{"files":[{"patch":"@@ -548,1 +548,1 @@\n-    } else if (!oopDesc::equals(k->loader(), accessor->loader()) &&\n+    } else if (k->loader() != accessor->loader() &&\n@@ -599,1 +599,1 @@\n-      if (oopDesc::equals(obj, Universe::the_null_sentinel())) {\n+      if (obj == Universe::the_null_sentinel()) {\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-  assert(oopDesc::equals(keyHandle(), new_object->get_oop()), \"must be properly recorded\");\n+  assert(keyHandle() == new_object->get_oop(), \"must be properly recorded\");\n@@ -453,2 +453,2 @@\n-        oopDesc::equals(entry->loader(), loader) &&\n-        oopDesc::equals(entry->protection_domain(), domain)) {\n+        entry->loader() == loader &&\n+        entry->protection_domain() == domain) {\n","filename":"src\/hotspot\/share\/ci\/ciObjectFactory.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-    if (p != NULL && oopDesc::equals(RawAccess<>::oop_load(p), _target)) {\n+    if (p != NULL && RawAccess<>::oop_load(p) == _target) {\n@@ -428,1 +428,1 @@\n-    if (oopDesc::equals(from, to) || java_lang_ClassLoader::isAncestor(from, to)) {\n+    if (from == to || java_lang_ClassLoader::isAncestor(from, to)) {\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-  if (oopDesc::equals(protection_domain, instance_klass()->protection_domain())) {\n+  if (protection_domain == instance_klass()->protection_domain()) {\n@@ -169,1 +169,1 @@\n-      if (oopDesc::equals(current->object_no_keepalive(), protection_domain)) {\n+      if (current->object_no_keepalive() == protection_domain) {\n@@ -181,1 +181,1 @@\n-  if (oopDesc::equals(protection_domain, instance_klass()->protection_domain())) {\n+  if (protection_domain == instance_klass()->protection_domain()) {\n@@ -189,1 +189,1 @@\n-    if (oopDesc::equals(current->object_no_keepalive(), protection_domain)) return true;\n+    if (current->object_no_keepalive() == protection_domain) return true;\n","filename":"src\/hotspot\/share\/classfile\/dictionary.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -873,1 +873,1 @@\n-            (oopDesc::equals(module(), ModuleEntryTable::javabase_moduleEntry()->module()))),\n+            (module() == ModuleEntryTable::javabase_moduleEntry()->module())),\n@@ -950,1 +950,1 @@\n-    assert(oopDesc::equals(class_loader(), k->class_loader()), \"should be same\");\n+    assert(class_loader() == k->class_loader(), \"should be same\");\n@@ -1504,1 +1504,1 @@\n-    assert(oopDesc::equals(java_class, Universe::void_mirror()), \"only valid non-array primitive\");\n+    assert(java_class == Universe::void_mirror(), \"only valid non-array primitive\");\n@@ -1506,1 +1506,1 @@\n-  assert(oopDesc::equals(Universe::java_mirror(type), java_class), \"must be consistent\");\n+  assert(Universe::java_mirror(type) == java_class, \"must be consistent\");\n@@ -3868,1 +3868,1 @@\n-  if (oopDesc::equals(mt1, mt2))\n+  if (mt1 == mt2)\n@@ -3870,1 +3870,1 @@\n-  if (!oopDesc::equals(rtype(mt1), rtype(mt2)))\n+  if (rtype(mt1) != rtype(mt2))\n@@ -3875,1 +3875,1 @@\n-    if (!oopDesc::equals(ptype(mt1, i), ptype(mt2, i)))\n+    if (ptype(mt1, i) != ptype(mt2, i))\n@@ -4094,1 +4094,1 @@\n-    if (oopDesc::equals(cl, acl)) {\n+    if (cl == acl) {\n@@ -4124,1 +4124,1 @@\n-    if (oopDesc::equals(cl, loader)) return true;\n+    if (cl == loader) return true;\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-    if (oopDesc::equals(e->object_no_keepalive(), protection_domain())) {\n+    if (e->object_no_keepalive() == protection_domain()) {\n","filename":"src\/hotspot\/share\/classfile\/protectionDomainCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-         oopDesc::equals(class_loader, _java_system_loader));\n+         class_loader == _java_system_loader);\n@@ -387,1 +387,1 @@\n-            (oopDesc::equals(quicksuperk->class_loader(), class_loader())))) {\n+            (quicksuperk->class_loader() == class_loader()))) {\n@@ -521,1 +521,1 @@\n-  assert((!oopDesc::equals(lockObject(), _system_loader_lock_obj) && !is_parallelCapable(lockObject)), \"unexpected double_lock_wait\");\n+  assert((lockObject() != _system_loader_lock_obj && !is_parallelCapable(lockObject)), \"unexpected double_lock_wait\");\n@@ -827,1 +827,1 @@\n-        !oopDesc::equals(k->class_loader(), class_loader())) {\n+        k->class_loader() != class_loader()) {\n@@ -980,1 +980,1 @@\n-    guarantee(oopDesc::equals(host_klass->class_loader(), class_loader()), \"should be the same\");\n+    guarantee(host_klass->class_loader() == class_loader(), \"should be the same\");\n@@ -1753,1 +1753,1 @@\n-    if (oopDesc::equals(loader_lock(), _system_loader_lock_obj)) {\n+    if (loader_lock() == _system_loader_lock_obj) {\n@@ -2189,1 +2189,1 @@\n-      if (oopDesc::equals(k->class_loader(), class_loader())) {\n+      if (k->class_loader() == class_loader()) {\n@@ -2382,1 +2382,1 @@\n-  if (oopDesc::equals(loader1(), loader2())) {\n+  if (loader1() == loader2()) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1948,1 +1948,1 @@\n-    if (!oopDesc::equals(java_lang_invoke_CallSite::target(call_site), method_handle))\n+    if (java_lang_invoke_CallSite::target(call_site) != method_handle)\n@@ -1952,2 +1952,2 @@\n-    if (oopDesc::equals(call_site, changes->call_site()) && !oopDesc::equals(java_lang_invoke_CallSite::target(call_site), changes->method_handle())) {\n-      assert(!oopDesc::equals(method_handle, changes->method_handle()), \"must be\");\n+    if (call_site == changes->call_site() && java_lang_invoke_CallSite::target(call_site) != changes->method_handle()) {\n+      assert(method_handle != changes->method_handle(), \"must be\");\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -336,1 +336,1 @@\n-  if (oopDesc::equals(ct->threadObj(), JNIHandles::resolve_non_null(last_compiler))) {\n+  if (ct->threadObj() == JNIHandles::resolve_non_null(last_compiler)) {\n@@ -1768,1 +1768,1 @@\n-    if (oopDesc::equals(JNIHandles::resolve_non_null(compiler_objects[compiler_number]), compiler_obj)) {\n+    if (JNIHandles::resolve_non_null(compiler_objects[compiler_number]) == compiler_obj) {\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-  return (oopDesc::equals(value1, value2) ||\n+  return (value1 == value2 ||\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2432,1 +2432,1 @@\n-        if (oopDesc::equals(result, Universe::the_null_sentinel()))\n+        if (result == Universe::the_null_sentinel())\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeInterpreter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-      assert(oopDesc::equals(roop, coop), \"expected result for assembly code\");\n+      assert(roop == coop, \"expected result for assembly code\");\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -607,6 +607,6 @@\n-  return ((!oopDesc::equals(throwable(), Universe::_out_of_memory_error_java_heap)) &&\n-          (!oopDesc::equals(throwable(), Universe::_out_of_memory_error_metaspace))  &&\n-          (!oopDesc::equals(throwable(), Universe::_out_of_memory_error_class_metaspace))  &&\n-          (!oopDesc::equals(throwable(), Universe::_out_of_memory_error_array_size)) &&\n-          (!oopDesc::equals(throwable(), Universe::_out_of_memory_error_gc_overhead_limit)) &&\n-          (!oopDesc::equals(throwable(), Universe::_out_of_memory_error_realloc_objects)));\n+  return ((throwable() != Universe::_out_of_memory_error_java_heap) &&\n+          (throwable() != Universe::_out_of_memory_error_metaspace)  &&\n+          (throwable() != Universe::_out_of_memory_error_class_metaspace)  &&\n+          (throwable() != Universe::_out_of_memory_error_array_size) &&\n+          (throwable() != Universe::_out_of_memory_error_gc_overhead_limit) &&\n+          (throwable() != Universe::_out_of_memory_error_realloc_objects));\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -860,1 +860,1 @@\n-      if (oopDesc::equals(result_oop, Universe::the_null_sentinel())) {\n+      if (result_oop == Universe::the_null_sentinel()) {\n@@ -1096,1 +1096,1 @@\n-      if (oopDesc::equals(old_result, Universe::the_null_sentinel()))\n+      if (old_result == Universe::the_null_sentinel())\n@@ -1101,1 +1101,1 @@\n-    assert(!oopDesc::equals(result_oop, Universe::the_null_sentinel()), \"\");\n+    assert(result_oop != Universe::the_null_sentinel(), \"\");\n@@ -1267,1 +1267,1 @@\n-  assert(!oopDesc::equals(str, Universe::the_null_sentinel()), \"\");\n+  assert(str != Universe::the_null_sentinel(), \"\");\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2657,1 +2657,1 @@\n-  if (oopDesc::equals(classloader1, classloader2) && (classpkg1 == classpkg2)) {\n+  if ((classloader1 == classloader2) && (classpkg1 == classpkg2)) {\n@@ -2668,1 +2668,1 @@\n-  if (!oopDesc::equals(class_loader(), other_class_loader)) {\n+  if (class_loader() != other_class_loader) {\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -496,1 +496,1 @@\n-          if (!oopDesc::equals(target_loader(), super_loader())) {\n+          if (target_loader() != super_loader()) {\n@@ -1244,1 +1244,1 @@\n-        if (!oopDesc::equals(method_holder_loader(), interface_loader())) {\n+        if (method_holder_loader() != interface_loader()) {\n","filename":"src\/hotspot\/share\/oops\/klassVtable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -223,1 +223,1 @@\n-  if (oopDesc::equals(s, d)) {\n+  if (s == d) {\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,2 +155,0 @@\n-  inline static bool equals(oop o1, oop o2) { return o1 == o2; }\n-\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -589,1 +589,1 @@\n-    jboolean ret = oopDesc::equals(sub_mirror, super_mirror);\n+    jboolean ret = (sub_mirror == super_mirror);\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1372,1 +1372,1 @@\n-    if ((!oopDesc::equals(previous_protection_domain, protection_domain)) && (protection_domain != NULL)) {\n+    if ((previous_protection_domain != protection_domain) && (protection_domain != NULL)) {\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1002,1 +1002,1 @@\n-        if (!oopDesc::equals(saved, result()))\n+        if (saved != result())\n@@ -1054,1 +1054,1 @@\n-        if (!oopDesc::equals(saved, result()))\n+        if (saved != result())\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  if (oopDesc::equals(m1, _thread->threadObj()) && m2 == address_value())  return true;\n+  if (m1 == _thread->threadObj() && m2 == address_value())  return true;\n@@ -82,1 +82,1 @@\n-  if (!oopDesc::equals(m1, thread->threadObj())) return NULL;\n+  if (m1 != thread->threadObj()) return NULL;\n","filename":"src\/hotspot\/share\/prims\/stackwalk.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -904,1 +904,1 @@\n-  return oopDesc::equals(ret, e);\n+  return ret == e;\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-    if (oopDesc::equals(mon_info->owner(), obj)) {\n+    if (mon_info->owner() == obj) {\n","filename":"src\/hotspot\/share\/runtime\/biasedLocking.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,2 +81,2 @@\n-  bool operator == (oop o) const                 { return oopDesc::equals(obj(), o); }\n-  bool operator == (const Handle& h) const       { return oopDesc::equals(obj(), h.obj()); }\n+  bool operator == (oop o) const                 { return obj() == o; }\n+  bool operator == (const Handle& h) const       { return obj() == h.obj(); }\n","filename":"src\/hotspot\/share\/runtime\/handles.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-  return oopDesc::equals(obj1, obj2);\n+  return obj1 == obj2;\n","filename":"src\/hotspot\/share\/runtime\/jniHandles.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-  assert(oopDesc::equals(result, result2), \"results must be consistent\");\n+  assert(result == result2, \"results must be consistent\");\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-    assert(oopDesc::equals((oop) mon->object(), obj), \"invariant\");\n+    assert(mon->object() == obj, \"invariant\");\n@@ -215,1 +215,1 @@\n-    assert(oopDesc::equals((oop) m->object(), obj), \"invariant\");\n+    assert(m->object() == obj, \"invariant\");\n@@ -1413,1 +1413,1 @@\n-      assert(oopDesc::equals((oop) inf->object(), object), \"invariant\");\n+      assert(inf->object() == object, \"invariant\");\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  bool is_manager(instanceHandle mh)     { return oopDesc::equals(mh(), _memory_mgr_obj); }\n+  bool is_manager(instanceHandle mh)     { return mh() == _memory_mgr_obj; }\n","filename":"src\/hotspot\/share\/services\/memoryManager.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-  bool is_pool(instanceHandle pool) { return oopDesc::equals(pool(), _memory_pool_obj); }\n+  bool is_pool(instanceHandle pool) { return pool() == _memory_pool_obj; }\n","filename":"src\/hotspot\/share\/services\/memoryPool.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -683,1 +683,1 @@\n-      if (oopDesc::equals(monitor, object)) {\n+      if (monitor == object) {\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -439,1 +439,1 @@\n-  if (oopDesc::equals(exception(), Universe::out_of_memory_error_metaspace())) {\n+  if (exception() == Universe::out_of_memory_error_metaspace()) {\n@@ -441,1 +441,1 @@\n-  } else if (oopDesc::equals(exception(), Universe::out_of_memory_error_class_metaspace())) {\n+  } else if (exception() == Universe::out_of_memory_error_class_metaspace()) {\n","filename":"src\/hotspot\/share\/utilities\/exceptions.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -219,9 +219,0 @@\n-  inline static bool safe_equals(oop obj1, oop obj2) {\n-    return oopDesc::equals(obj1, obj2);\n-  }\n-\n-  template <class X>\n-  inline static bool safe_equals(X i1, X i2) {\n-    return i1 == i2;\n-  }\n-\n@@ -312,1 +303,1 @@\n-      if (safe_equals(_data[i], elem)) return true;\n+      if (_data[i] == elem) return true;\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"}]}