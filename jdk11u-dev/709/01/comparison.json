{"files":[{"patch":"@@ -125,1 +125,1 @@\n-        readCipher.dispose();\n+        this.readCipher.dispose();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/InputRecord.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,0 +144,5 @@\n+    \/\/ SSLEngine and SSLSocket\n+    void disposeWriteCipher() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n@@ -193,1 +198,1 @@\n-            writeCipher.dispose();\n+            disposeWriteCipher();\n@@ -222,1 +227,1 @@\n-            writeCipher.dispose();\n+            disposeWriteCipher();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/OutputRecord.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -154,0 +154,9 @@\n+    @Override\n+    void disposeWriteCipher() {\n+        if (fragmenter == null) {\n+            writeCipher.dispose();\n+        } else {\n+            fragmenter.queueUpCipherDispose();\n+        }\n+    }\n+\n@@ -364,0 +373,1 @@\n+        boolean         disposeCipher;\n@@ -424,0 +434,9 @@\n+        void queueUpCipherDispose() {\n+            RecordMemo lastMemo = handshakeMemos.peekLast();\n+            if (lastMemo != null) {\n+                lastMemo.disposeCipher = true;\n+            } else {\n+                writeCipher.dispose();\n+            }\n+        }\n+\n@@ -523,0 +542,3 @@\n+            if (memo.disposeCipher) {\n+                memo.encodeCipher.dispose();\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLEngineOutputRecord.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -246,0 +246,5 @@\n+    @Override\n+    void disposeWriteCipher() {\n+        writeCipher.dispose();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketOutputRecord.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}