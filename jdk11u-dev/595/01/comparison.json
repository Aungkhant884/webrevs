{"files":[{"patch":"@@ -171,1 +171,0 @@\n-java\/awt\/Focus\/6382144\/EndlessLoopTest.java 8198617 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-  @author oleg.sukhodolsky: area=awt.focus\n@@ -60,0 +59,1 @@\n+import javax.swing.SwingUtilities;\n@@ -66,0 +66,3 @@\n+    static JFrame frame;\n+    static JTextField t1;\n+    static JButton button;\n@@ -67,2 +70,1 @@\n-\n-    private static void init()\n+    private static void init() throws Exception\n@@ -72,7 +74,31 @@\n-        JFrame frame = new JFrame();\n-        final JDialog dialog = new JDialog(frame, true);\n-        JButton button = new JButton(\"press me\");\n-        button.addActionListener(new ActionListener() {\n-                public void actionPerformed(ActionEvent ae) {\n-                    dialog.dispose();\n-                }\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                final JDialog dialog = new JDialog(frame, true);\n+                button = new JButton(\"press me\");\n+                button.addActionListener(new ActionListener() {\n+                    public void actionPerformed(ActionEvent ae) {\n+                        dialog.dispose();\n+                    }\n+                });\n+                dialog.getContentPane().add(button);\n+                dialog.setLocationRelativeTo(null);\n+                dialog.pack();\n+\n+                t1 = new JTextField();\n+                t1.setInputVerifier(new InputVerifier() {\n+                    public boolean verify(JComponent input) {\n+                        n_iv_calls++;\n+                        if (n_iv_calls == 1) {\n+                            dialog.setVisible(true);\n+                        }\n+                        return true;\n+                    }\n+                });\n+                JTextField t2 = new JTextField();\n+\n+                frame.getContentPane().add(t1, BorderLayout.NORTH);\n+                frame.getContentPane().add(t2, BorderLayout.SOUTH);\n+                frame.setLocationRelativeTo(null);\n+                frame.setSize(200, 200);\n+                frame.setVisible(true);\n@@ -80,14 +106,0 @@\n-        dialog.getContentPane().add(button);\n-        dialog.pack();\n-\n-        JTextField t1 = new JTextField();\n-        t1.setInputVerifier(new InputVerifier() {\n-            public boolean verify(JComponent input) {\n-                n_iv_calls++;\n-                if (n_iv_calls == 1) {\n-                    dialog.setVisible(true);\n-                }\n-                return true;\n-            }\n-        });\n-        JTextField t2 = new JTextField();\n@@ -95,0 +107,6 @@\n+            Robot r = null;\n+            try {\n+                r = new Robot();\n+            } catch (AWTException e) {\n+                EndlessLoopTest.fail(e);\n+            }\n@@ -96,4 +114,4 @@\n-        frame.getContentPane().add(t1, BorderLayout.NORTH);\n-        frame.getContentPane().add(t2, BorderLayout.SOUTH);\n-        frame.setSize(200, 200);\n-        frame.setVisible(true);\n+            try {\n+                r.setAutoDelay(100);\n+                r.waitForIdle();\n+                r.delay(1000);\n@@ -101,6 +119,2 @@\n-        Robot r = null;\n-        try {\n-            r = new Robot();\n-        } catch (AWTException e) {\n-            EndlessLoopTest.fail(e);\n-        }\n+                mouseClickOnComp(r, t1);\n+                r.waitForIdle();\n@@ -108,5 +122,13 @@\n-        try {\n-            r.waitForIdle();\n-\n-            mouseClickOnComp(r, t1);\n-            r.waitForIdle();\n+                if (!t1.isFocusOwner()) {\n+                    throw new RuntimeException(\"t1 is not a focus owner\");\n+                }\n+                n_iv_calls = 0;\n+                r.keyPress(KeyEvent.VK_TAB);\n+                r.keyRelease(KeyEvent.VK_TAB);\n+                r.waitForIdle();\n+\n+                mouseClickOnComp(r, button);\n+                r.waitForIdle();\n+            } catch (Exception e) {\n+                EndlessLoopTest.fail(e);\n+            }\n@@ -114,2 +136,2 @@\n-            if (!t1.isFocusOwner()) {\n-                throw new RuntimeException(\"t1 is not a focus owner\");\n+            if (n_iv_calls != 1) {\n+                EndlessLoopTest.fail(new RuntimeException(\"InputVerifier was called \" + n_iv_calls + \" times\"));\n@@ -117,11 +139,0 @@\n-            n_iv_calls = 0;\n-            r.keyPress(KeyEvent.VK_TAB);\n-            r.delay(10);\n-            r.keyRelease(KeyEvent.VK_TAB);\n-            r.waitForIdle();\n-\n-            mouseClickOnComp(r, button);\n-            r.waitForIdle();\n-        } catch (Exception e) {\n-            EndlessLoopTest.fail(e);\n-        }\n@@ -129,2 +140,7 @@\n-        if (n_iv_calls != 1) {\n-            EndlessLoopTest.fail(new RuntimeException(\"InputVerifier was called \" + n_iv_calls + \" times\"));\n+            EndlessLoopTest.pass();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -132,3 +148,0 @@\n-\n-        EndlessLoopTest.pass();\n-\n@@ -143,4 +156,3 @@\n-        r.delay(10);\n-        r.mousePress(InputEvent.BUTTON1_MASK);\n-        r.delay(10);\n-        r.mouseRelease(InputEvent.BUTTON1_MASK);\n+        r.waitForIdle();\n+        r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -173,1 +185,1 @@\n-    public static void main( String args[] ) throws InterruptedException\n+    public static void main( String args[] ) throws Exception\n","filename":"test\/jdk\/java\/awt\/Focus\/6382144\/EndlessLoopTest.java","additions":75,"deletions":63,"binary":false,"changes":138,"status":"modified"}]}