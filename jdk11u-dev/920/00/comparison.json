{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import jdk.internal.platform.Metrics;\n@@ -32,0 +33,8 @@\n+        Metrics metrics = jdk.internal.platform.Container.metrics();\n+        System.out.println(\"Metrics instance: \" + (metrics == null ? \"null\" : \"non-null\"));\n+        if (metrics != null) {\n+            System.out.println(\"Metrics.getMemoryAndSwapLimit() == \" + metrics.getMemoryAndSwapLimit());\n+            System.out.println(\"Metrics.getMemoryLimit() == \" + metrics.getMemoryLimit());\n+            System.out.println(\"Metrics.getMemoryAndSwapUsage() == \" + metrics.getMemoryAndSwapUsage());\n+            System.out.println(\"Metrics.getMemoryUsage() == \" + metrics.getMemoryUsage());\n+        }\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/CheckOperatingSystemMXBean.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ *          java.base\/jdk.internal.platform\n@@ -227,1 +228,5 @@\n-            );\n+            )\n+            \/\/ CheckOperatingSystemMXBean uses Metrics (jdk.internal.platform) for\n+            \/\/ diagnostics\n+            .addJavaOpts(\"--add-exports\")\n+            .addJavaOpts(\"java.base\/jdk.internal.platform=ALL-UNNAMED\");\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestCPUAwareness.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ *          java.base\/jdk.internal.platform\n@@ -145,1 +146,5 @@\n-            );\n+            )\n+            \/\/ CheckOperatingSystemMXBean uses Metrics (jdk.internal.platform) for\n+            \/\/ diagnostics\n+            .addJavaOpts(\"--add-exports\")\n+            .addJavaOpts(\"java.base\/jdk.internal.platform=ALL-UNNAMED\");\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryAwareness.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}