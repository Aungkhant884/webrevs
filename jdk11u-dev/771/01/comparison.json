{"files":[{"patch":"@@ -3087,0 +3087,10 @@\n+        Optional<Set<Name>> targets = getApplicableTargets(a, s);\n+        \/* the optional could be emtpy if the annotation is unknown in that case\n+         * we return that it is applicable and if it is erroneous that should imply\n+         * an error at the declaration site\n+         *\/\n+        return !targets.isPresent() || targets.isPresent() && !targets.get().isEmpty();\n+    }\n+\n+    @SuppressWarnings(\"preview\")\n+    Optional<Set<Name>> getApplicableTargets(JCAnnotation a, Symbol s) {\n@@ -3089,0 +3099,1 @@\n+        Set<Name> applicableTargets = new HashSet<>();\n@@ -3098,1 +3109,2 @@\n-                    return true; \/\/ recovery\n+                    \/\/ recovery\n+                    return Optional.empty();\n@@ -3107,1 +3119,1 @@\n-                    return true;\n+                    applicableTargets.add(names.TYPE);\n@@ -3110,1 +3122,1 @@\n-                    return true;\n+                    applicableTargets.add(names.FIELD);\n@@ -3113,1 +3125,1 @@\n-                    return true;\n+                    applicableTargets.add(names.METHOD);\n@@ -3117,1 +3129,1 @@\n-                    return true;\n+                    applicableTargets.add(names.PARAMETER);\n@@ -3121,1 +3133,1 @@\n-                    return true;\n+                    applicableTargets.add(names.CONSTRUCTOR);\n@@ -3125,1 +3137,1 @@\n-                    return true;\n+                    applicableTargets.add(names.LOCAL_VARIABLE);\n@@ -3129,1 +3141,1 @@\n-                    return true;\n+                    applicableTargets.add(names.ANNOTATION_TYPE);\n@@ -3133,1 +3145,1 @@\n-                    return true;\n+                    applicableTargets.add(names.PACKAGE);\n@@ -3136,2 +3148,2 @@\n-                    \/\/cannot type annotate implictly typed locals\n-                    return false;\n+                    \/\/cannot type annotate implicitly typed locals\n+                    continue;\n@@ -3142,1 +3154,1 @@\n-                    return true;\n+                    applicableTargets.add(names.TYPE_USE);\n@@ -3146,1 +3158,1 @@\n-                    return true;\n+                    applicableTargets.add(names.TYPE_PARAMETER);\n@@ -3148,2 +3160,2 @@\n-                return true; \/\/ Unknown ElementType. This should be an error at declaration site,\n-                             \/\/ assume applicable.\n+                return Optional.empty(); \/\/ Unknown ElementType. This should be an error at declaration site,\n+                                         \/\/ assume applicable.\n@@ -3151,1 +3163,1 @@\n-        return false;\n+        return Optional.of(applicableTargets);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":28,"deletions":16,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8236210\n+ * @summary Annotations on var\n+ * @compile\/fail\/ref=T8236210.out -XDrawDiagnostics T8236210.java\n+ *\/\n+\n+import static java.lang.annotation.ElementType.LOCAL_VARIABLE;\n+import static java.lang.annotation.ElementType.TYPE_USE;\n+\n+import java.lang.annotation.Target;\n+\n+@Target({TYPE_USE, LOCAL_VARIABLE})\n+@interface Both {}\n+\n+@Target(LOCAL_VARIABLE)\n+@interface Decl {}\n+\n+@Target(TYPE_USE)\n+@interface Type {}\n+\n+class T8236210 {\n+    {\n+        @Both var a = 1;\n+        @Decl var b = 2;\n+        @Type var c = 3;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lvti\/T8236210.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8236210.java:26:9: compiler.err.annotation.type.not.applicable\n+1 error\n","filename":"test\/langtools\/tools\/javac\/lvti\/T8236210.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"}]}