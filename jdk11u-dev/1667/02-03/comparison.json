{"files":[{"patch":"@@ -34,3 +34,0 @@\n-<<<<<<< HEAD\n-ifeq ($(call isTargetOs, windows aix), true)\n-=======\n@@ -38,1 +35,0 @@\n->>>>>>> master\n","filename":"make\/copy\/Copy-java.base.gmk","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n@@ -26,2 +24,2 @@\n-#import \"JavaComponentAccessibility.h\"\n-#import \"CommonComponentAccessibility.h\"\n+import java.io.File;\n+import java.io.FileOutputStream;\n@@ -29,1 +27,3 @@\n-#import <AppKit\/AppKit.h>\n+public class WaitForFlagFile {\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"WaitForFlagFile: Entering\");\n@@ -31,1 +31,3 @@\n-@interface ToolbarAccessibility : CommonComponentAccessibility {\n+        File started = new File(\"\/tmp\/started\");\n+        FileOutputStream fout = new FileOutputStream(started);\n+        fout.close();\n@@ -33,3 +35,9 @@\n-};\n-- (NSString * _Nonnull)accessibilityRole;\n-@end\n+        File flag = new File(\"\/tmp\/flag\");\n+        while (!flag.exists()) {\n+            System.out.println(\"WaitForFlagFile: Waiting\");\n+            Thread.sleep(500);\n+        }\n+        System.out.println(\"WaitForFlagFile: Exiting\");\n+\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/WaitForFlagFile.java","additions":19,"deletions":11,"binary":false,"changes":30,"status":"modified"}]}