{"files":[{"patch":"@@ -281,2 +281,9 @@\n-    \/* jvm is installing its signal handlers. Install the new\n-     * handlers and save the old ones. *\/\n+    \/* jvm is installing its signal handlers.\n+     * - if this is a modifying sigaction call, we install a new signal handler and store the old one\n+     *   as chained signal handler.\n+     * - if this is a non-modifying sigaction call, we don't change any state; we just return the existing\n+     *   signal handler in the system (not the stored one).\n+     * This works under the assumption that there is only one modifying sigaction call for a specific signal\n+     * within the JVM_begin_signal_setting-JVM_end_signal_setting-window. There can be any number of non-modifying\n+     * calls, but they will only return the expected preexisting handler if executed before the modifying call.\n+     *\/\n@@ -284,3 +291,10 @@\n-    sact[sig] = oldAct;\n-    if (oact != NULL) {\n-      *oact = oldAct;\n+    if (res == 0) {\n+      if (act != NULL) {\n+        \/* store pre-existing handler as chained handler *\/\n+        sact[sig] = oldAct;\n+        \/* Record the signals used by jvm. *\/\n+        sigaddset(&jvmsigs, sig);\n+      }\n+      if (oact != NULL) {\n+        *oact = oldAct;\n+      }\n@@ -289,3 +303,0 @@\n-    \/* Record the signals used by jvm. *\/\n-    sigaddset(&jvmsigs, sig);\n-\n","filename":"src\/java.base\/unix\/native\/libjsig\/jsig.c","additions":19,"deletions":8,"binary":false,"changes":27,"status":"modified"}]}