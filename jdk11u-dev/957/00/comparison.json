{"files":[{"patch":"@@ -39,1 +39,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -45,1 +45,0 @@\n- * @library \/lib\/testlibrary\n@@ -50,1 +49,1 @@\n- * @build jdk.testlibrary.* VMConnection BadHandshakeTest Exit0\n+ * @build VMConnection BadHandshakeTest Exit0\n","filename":"test\/jdk\/com\/sun\/jdi\/BadHandshakeTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @library \/lib\/testlibrary\n","filename":"test\/jdk\/com\/sun\/jdi\/BasicJDWPConnectionTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -32,1 +32,0 @@\n- * @library \/lib\/testlibrary\n@@ -35,1 +34,0 @@\n- * @build jdk.testlibrary.*\n","filename":"test\/jdk\/com\/sun\/jdi\/DoubleAgentTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/RunnerUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -43,1 +43,0 @@\n- * @library \/lib\/testlibrary\n@@ -49,1 +48,1 @@\n- * @run build jdk.testlibrary.* Application SimpleProvider jdk.testlibrary.*\n+ * @run build Application SimpleProvider\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/StartManagementAgent.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-  @library \/lib\/testlibrary\n-  @build jdk.testlibrary.Utils\n+  @library \/test\/lib\n+  @build jdk.test.lib.Utils\n@@ -35,1 +35,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/awt\/datatransfer\/ClipboardInterVMTest\/ClipboardInterVMTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/lang\/Thread\/ThreadStateController.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -32,1 +32,0 @@\n- * @library \/lib\/testlibrary\n@@ -36,1 +35,1 @@\n- * @run build jdk.testlibrary.* DummyMain\n+ * @run build DummyMain\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NoPremainAgentTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -32,1 +32,0 @@\n- * @library \/lib\/testlibrary\n@@ -35,1 +34,1 @@\n- * @run build jdk.testlibrary.* DummyMain\n+ * @run build DummyMain\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/PremainClassTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -32,1 +32,0 @@\n- * @library \/lib\/testlibrary\n@@ -36,1 +35,1 @@\n- * @run build jdk.testlibrary.* DummyMain\n+ * @run build DummyMain\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/ZeroArgPremainAgentTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/lang\/invoke\/LFCaching\/LambdaFormTestCase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandles\/CatchExceptionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandlesAsCollectorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandlesCastFailureTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandlesGeneralTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandlesInsertArgumentsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandlesInvokersTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandlesPermuteArgumentsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandlesSpreadArgumentsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/PermuteArgsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/TestCatchExceptionWithVarargs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * @library \/lib\/testlibrary \/java\/lang\/invoke\/common\n+ * @library \/test\/lib \/java\/lang\/invoke\/common\n","filename":"test\/jdk\/java\/lang\/invoke\/VarargsArrayTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -39,1 +39,1 @@\n-     * {@code jdk.testlibrary.Utils.filterException}.\n+     * {@code jdk.test.lib.Utils.filterException}.\n","filename":"test\/jdk\/java\/lang\/invoke\/common\/test\/java\/lang\/invoke\/lib\/CodeCacheOverflowProcessor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @library \/lib\/testlibrary\/ \/test\/lib\n+ * @library \/test\/lib\n@@ -37,1 +37,1 @@\n- * @build jdk.testlibrary.* LowMemoryTest MemoryUtil RunUtil\n+ * @build LowMemoryTest MemoryUtil RunUtil\n@@ -50,1 +50,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/lang\/management\/MemoryMXBean\/LowMemoryTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/lang\/management\/MemoryMXBean\/RunUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @library \/lib\/testlibrary\n@@ -30,1 +29,0 @@\n- * @build jdk.testlibrary.*\n@@ -41,1 +39,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/net\/MulticastSocket\/MultiDead.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @library \/test\/lib\n@@ -31,1 +32,1 @@\n- * @build jdk.testlibrary.SimpleSSLContext jdk.testlibrary.Utils\n+ * @build jdk.testlibrary.SimpleSSLContext jdk.test.lib.Utils\n@@ -58,1 +59,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/net\/httpclient\/security\/Driver.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.Utils\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.Utils\n@@ -40,1 +40,1 @@\n-import static jdk.testlibrary.Utils.adjustTimeout;\n+import static jdk.test.lib.Utils.adjustTimeout;\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LoopingTruncate.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @library .. \/lib\/testlibrary\/\n+ * @library .. \/test\/lib\n@@ -47,1 +47,1 @@\n-        private static final long TIMEOUT = jdk.testlibrary.Utils.adjustTimeout(20_000);\n+        private static final long TIMEOUT = jdk.test.lib.Utils.adjustTimeout(20_000);\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/Wakeup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -59,1 +59,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/BlockingQueue\/CancelledProducerConsumerLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -44,1 +44,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/BlockingQueue\/Interrupt.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -55,1 +55,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/BlockingQueue\/MultipleProducersSingleConsumerLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -55,1 +55,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/BlockingQueue\/ProducerConsumerLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -54,1 +54,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/BlockingQueue\/SingleProducerMultipleConsumerLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -59,1 +59,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/CompletableFuture\/Basic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -57,1 +57,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ConcurrentHashMap\/MapLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -61,1 +61,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ConcurrentQueues\/ConcurrentQueueLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -42,1 +42,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/CyclicBarrier\/Basic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -47,1 +47,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/Exchanger\/ExchangeLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -47,1 +47,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ExecutorCompletionService\/ExecutorCompletionServiceLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -44,1 +44,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/Executors\/AutoShutdown.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -40,1 +40,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/FutureTask\/BlockingTaskExecutor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -55,1 +55,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/FutureTask\/CancelledFutureLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -55,1 +55,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/FutureTask\/DoneMeansDone.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -48,1 +48,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ScheduledThreadPoolExecutor\/DelayOverflow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -36,1 +36,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ScheduledThreadPoolExecutor\/ZeroCorePoolSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -51,1 +51,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ScheduledThreadPoolExecutor\/ZeroCoreThreads.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -40,1 +40,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPoolExecutor\/CoreThreadTimeOut.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -44,1 +44,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPoolExecutor\/Custom.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -47,1 +47,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPoolExecutor\/FlakyThreadFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -37,1 +37,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPoolExecutor\/SelfInterrupt.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -47,1 +47,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPoolExecutor\/ThreadRestarts.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -37,1 +37,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPoolExecutor\/TimeOutShrink.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -32,1 +32,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n","filename":"test\/jdk\/java\/util\/concurrent\/forkjoin\/SubmissionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -51,1 +51,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/locks\/Lock\/CheckedLockLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -59,1 +59,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/locks\/Lock\/TimedAcquireLeak.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -48,1 +48,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/locks\/ReentrantLock\/LockOncePerThreadLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -48,1 +48,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/locks\/ReentrantLock\/SimpleReentrantLockLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -49,1 +49,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/locks\/ReentrantLock\/TimeoutLockLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -48,1 +48,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock\/Count.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -54,1 +54,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/locks\/ReentrantReadWriteLock\/MapLoops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/lib\/testlibrary\/\n+ * @library \/test\/lib\n@@ -53,1 +53,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/java\/util\/concurrent\/locks\/StampedLock\/Basic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @library \/lib\/testlibrary\n+ * @library \/test\/lib\n@@ -53,1 +53,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/javax\/management\/monitor\/GaugeMonitorDeadlockTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @library \/lib\/testlibrary\n+ * @library \/test\/lib\n@@ -33,1 +33,0 @@\n- * @build jdk.testlibrary.*\n@@ -59,1 +58,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/javax\/management\/monitor\/StartStopTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n- * @library \/lib\/testlibrary\n@@ -124,1 +123,1 @@\n-        opts.addAll(Arrays.asList(jdk.testlibrary.Utils.getTestJavaOpts()));\n+        opts.addAll(Arrays.asList(jdk.test.lib.Utils.getTestJavaOpts()));\n","filename":"test\/jdk\/javax\/management\/mxbean\/MXBeanWeirdParamTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @library \/lib\/testlibrary\n@@ -32,1 +31,1 @@\n- * @build jdk.testlibrary.* DefaultAgentFilterTest\n+ * @build DefaultAgentFilterTest\n@@ -59,1 +58,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/DefaultAgentFilterTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @library \/lib\/testlibrary\n+ * @library \/test\/lib\n@@ -43,1 +43,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/loading\/MethodResultTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @library \/lib\/testlibrary\n@@ -180,1 +179,1 @@\n-        opts.addAll(Arrays.asList(jdk.testlibrary.Utils.getTestJavaOpts()));\n+        opts.addAll(Arrays.asList(jdk.test.lib.Utils.getTestJavaOpts()));\n","filename":"test\/jdk\/javax\/management\/security\/AuthorizationTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @library \/lib\/testlibrary\n@@ -401,1 +400,1 @@\n-        opts.addAll(Arrays.asList(jdk.testlibrary.Utils.getTestJavaOpts()));\n+        opts.addAll(Arrays.asList(jdk.test.lib.Utils.getTestJavaOpts()));\n","filename":"test\/jdk\/javax\/management\/security\/SecurityTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,295 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.testlibrary;\n-\n-import static jdk.testlibrary.Asserts.assertTrue;\n-\n-import java.io.IOException;\n-import java.net.InetAddress;\n-import java.net.ServerSocket;\n-import java.net.UnknownHostException;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.regex.Pattern;\n-import java.util.regex.Matcher;\n-import java.util.concurrent.TimeUnit;\n-import java.util.function.BooleanSupplier;\n-import java.util.function.Function;\n-\n-\/**\n- * Common library for various test helper functions.\n- *\n- * @deprecated This class is deprecated. Use the one from\n- *             {@code <root>\/test\/lib\/jdk\/test\/lib}\n- *\/\n-@Deprecated\n-public final class Utils {\n-\n-    \/**\n-     * Returns the sequence used by operating system to separate lines.\n-     *\/\n-    public static final String NEW_LINE = System.getProperty(\"line.separator\");\n-\n-    \/**\n-     * Returns the value of 'test.vm.opts'system property.\n-     *\/\n-    public static final String VM_OPTIONS = System.getProperty(\"test.vm.opts\", \"\").trim();\n-\n-    \/**\n-     * Returns the value of 'test.java.opts'system property.\n-     *\/\n-    public static final String JAVA_OPTIONS = System.getProperty(\"test.java.opts\", \"\").trim();\n-\n-    \/**\n-    * Returns the value of 'test.timeout.factor' system property\n-    * converted to {@code double}.\n-    *\/\n-    public static final double TIMEOUT_FACTOR;\n-    static {\n-        String toFactor = System.getProperty(\"test.timeout.factor\", \"1.0\");\n-        TIMEOUT_FACTOR = Double.parseDouble(toFactor);\n-    }\n-\n-    \/**\n-    * Returns the value of JTREG default test timeout in milliseconds\n-    * converted to {@code long}.\n-    *\/\n-    public static final long DEFAULT_TEST_TIMEOUT = TimeUnit.SECONDS.toMillis(120);\n-\n-    private Utils() {\n-        \/\/ Private constructor to prevent class instantiation\n-    }\n-\n-    \/**\n-     * Returns the list of VM options.\n-     *\n-     * @return List of VM options\n-     *\/\n-    public static List<String> getVmOptions() {\n-        return Arrays.asList(safeSplitString(VM_OPTIONS));\n-    }\n-\n-    \/**\n-     * Returns the list of VM options with -J prefix.\n-     *\n-     * @return The list of VM options with -J prefix\n-     *\/\n-    public static List<String> getForwardVmOptions() {\n-        String[] opts = safeSplitString(VM_OPTIONS);\n-        for (int i = 0; i < opts.length; i++) {\n-            opts[i] = \"-J\" + opts[i];\n-        }\n-        return Arrays.asList(opts);\n-    }\n-\n-    \/**\n-     * Returns the default JTReg arguments for a jvm running a test.\n-     * This is the combination of JTReg arguments test.vm.opts and test.java.opts.\n-     * @return An array of options, or an empty array if no opptions.\n-     *\/\n-    public static String[] getTestJavaOpts() {\n-        List<String> opts = new ArrayList<String>();\n-        Collections.addAll(opts, safeSplitString(VM_OPTIONS));\n-        Collections.addAll(opts, safeSplitString(JAVA_OPTIONS));\n-        return opts.toArray(new String[0]);\n-    }\n-\n-    \/**\n-     * Combines given arguments with default JTReg arguments for a jvm running a test.\n-     * This is the combination of JTReg arguments test.vm.opts and test.java.opts\n-     * @return The combination of JTReg test java options and user args.\n-     *\/\n-    public static String[] addTestJavaOpts(String... userArgs) {\n-        List<String> opts = new ArrayList<String>();\n-        Collections.addAll(opts, getTestJavaOpts());\n-        Collections.addAll(opts, userArgs);\n-        return opts.toArray(new String[0]);\n-    }\n-\n-    \/**\n-     * Removes any options specifying which GC to use, for example \"-XX:+UseG1GC\".\n-     * Removes any options matching: -XX:(+\/-)Use*GC\n-     * Used when a test need to set its own GC version. Then any\n-     * GC specified by the framework must first be removed.\n-     * @return A copy of given opts with all GC options removed.\n-     *\/\n-    private static final Pattern useGcPattern = Pattern.compile(\n-            \"(?:\\\\-XX\\\\:[\\\\+\\\\-]Use.+GC)\"\n-            + \"|(?:\\\\-Xconcgc)\");\n-    public static List<String> removeGcOpts(List<String> opts) {\n-        List<String> optsWithoutGC = new ArrayList<String>();\n-        for (String opt : opts) {\n-            if (useGcPattern.matcher(opt).matches()) {\n-                System.out.println(\"removeGcOpts: removed \" + opt);\n-            } else {\n-                optsWithoutGC.add(opt);\n-            }\n-        }\n-        return optsWithoutGC;\n-    }\n-\n-    \/**\n-     * Splits a string by white space.\n-     * Works like String.split(), but returns an empty array\n-     * if the string is null or empty.\n-     *\/\n-    private static String[] safeSplitString(String s) {\n-        if (s == null || s.trim().isEmpty()) {\n-            return new String[] {};\n-        }\n-        return s.trim().split(\"\\\\s+\");\n-    }\n-\n-    \/**\n-     * @return The full command line for the ProcessBuilder.\n-     *\/\n-    public static String getCommandLine(ProcessBuilder pb) {\n-        StringBuilder cmd = new StringBuilder();\n-        for (String s : pb.command()) {\n-            cmd.append(s).append(\" \");\n-        }\n-        return cmd.toString();\n-    }\n-\n-    \/**\n-     * Returns the free port on the local host.\n-     *\n-     * @return The port number\n-     * @throws IOException if an I\/O error occurs when opening the socket\n-     *\/\n-    public static int getFreePort() throws IOException {\n-        try (ServerSocket serverSocket =\n-                new ServerSocket(0, 5, InetAddress.getLoopbackAddress());) {\n-            return serverSocket.getLocalPort();\n-        }\n-    }\n-\n-    \/**\n-     * Returns the name of the local host.\n-     *\n-     * @return The host name\n-     * @throws UnknownHostException if IP address of a host could not be determined\n-     *\/\n-    public static String getHostname() throws UnknownHostException {\n-        InetAddress inetAddress = InetAddress.getLocalHost();\n-        String hostName = inetAddress.getHostName();\n-\n-        assertTrue((hostName != null && !hostName.isEmpty()),\n-                \"Cannot get hostname\");\n-\n-        return hostName;\n-    }\n-\n-    \/**\n-     * Adjusts the provided timeout value for the TIMEOUT_FACTOR\n-     * @param tOut the timeout value to be adjusted\n-     * @return The timeout value adjusted for the value of \"test.timeout.factor\"\n-     *         system property\n-     *\/\n-    public static long adjustTimeout(long tOut) {\n-        return Math.round(tOut * Utils.TIMEOUT_FACTOR);\n-    }\n-\n-    \/**\n-     * Wait for condition to be true\n-     *\n-     * @param condition, a condition to wait for\n-     *\/\n-    public static final void waitForCondition(BooleanSupplier condition) {\n-        waitForCondition(condition, -1L, 100L);\n-    }\n-\n-    \/**\n-     * Wait until timeout for condition to be true\n-     *\n-     * @param condition, a condition to wait for\n-     * @param timeout a time in milliseconds to wait for condition to be true\n-     * specifying -1 will wait forever\n-     * @return condition value, to determine if wait was successfull\n-     *\/\n-    public static final boolean waitForCondition(BooleanSupplier condition,\n-            long timeout) {\n-        return waitForCondition(condition, timeout, 100L);\n-    }\n-\n-    \/**\n-     * Wait until timeout for condition to be true for specified time\n-     *\n-     * @param condition, a condition to wait for\n-     * @param timeout a time in milliseconds to wait for condition to be true,\n-     * specifying -1 will wait forever\n-     * @param sleepTime a time to sleep value in milliseconds\n-     * @return condition value, to determine if wait was successfull\n-     *\/\n-    public static final boolean waitForCondition(BooleanSupplier condition,\n-            long timeout, long sleepTime) {\n-        long startTime = System.currentTimeMillis();\n-        while (!(condition.getAsBoolean() || (timeout != -1L\n-                && ((System.currentTimeMillis() - startTime) > timeout)))) {\n-            try {\n-                Thread.sleep(sleepTime);\n-            } catch (InterruptedException e) {\n-                Thread.currentThread().interrupt();\n-                throw new Error(e);\n-            }\n-        }\n-        return condition.getAsBoolean();\n-    }\n-\n-    \/**\n-     * Interface same as java.lang.Runnable but with\n-     * method {@code run()} able to throw any Throwable.\n-     *\/\n-    public static interface ThrowingRunnable {\n-        void run() throws Throwable;\n-    }\n-\n-    \/**\n-     * Filters out an exception that may be thrown by the given\n-     * test according to the given filter.\n-     *\n-     * @param test - method that is invoked and checked for exception.\n-     * @param filter - function that checks if the thrown exception matches\n-     *                 criteria given in the filter's implementation.\n-     * @return - exception that matches the filter if it has been thrown or\n-     *           {@code null} otherwise.\n-     * @throws Throwable - if test has thrown an exception that does not\n-     *                     match the filter.\n-     *\/\n-    public static Throwable filterException(ThrowingRunnable test,\n-            Function<Throwable, Boolean> filter) throws Throwable {\n-        try {\n-            test.run();\n-        } catch (Throwable t) {\n-            if (filter.apply(t)) {\n-                return t;\n-            } else {\n-                throw t;\n-            }\n-        }\n-        return null;\n-    }\n-}\n","filename":"test\/jdk\/lib\/testlibrary\/jdk\/testlibrary\/Utils.java","additions":0,"deletions":295,"binary":false,"changes":295,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/jvmstat\/monitor\/MonitoredVm\/TestPollingInterval.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/management\/jdp\/DynamicLauncher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/management\/jdp\/PortAlreadyInUseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-            final String pp = \"-Dcom.sun.management.jmxremote.port=\" + jdk.testlibrary.Utils.getFreePort();\n+            final String pp = \"-Dcom.sun.management.jmxremote.port=\" + jdk.test.lib.Utils.getFreePort();\n@@ -167,1 +167,1 @@\n-            command.addAll(jdk.testlibrary.Utils.getVmOptions());\n+            command.addAll(jdk.test.lib.Utils.getVmOptions());\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/AbstractFilePermissionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -41,1 +41,0 @@\n- * @library \/lib\/testlibrary\n@@ -47,1 +46,1 @@\n- * @build jdk.testlibrary.* TestManager TestApplication\n+ * @build TestManager TestApplication\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/LocalManagementTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -638,1 +638,1 @@\n-                int port = jdk.testlibrary.Utils.getFreePort();\n+                int port = jdk.test.lib.Utils.getFreePort();\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/RmiBootstrapTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-# @library \/lib\/testlibrary\n+# @library \/test\/lib\n@@ -32,1 +32,1 @@\n-# @build jdk.testlibrary.* TestLogger Utils RmiBootstrapTest\n+# @build TestLogger Utils RmiBootstrapTest\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/RmiBootstrapTest.sh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -46,1 +46,0 @@\n- * @library \/lib\/testlibrary\n@@ -49,1 +48,1 @@\n- * @build jdk.testlibrary.* RmiRegistrySslTestApp\n+ * @build RmiRegistrySslTestApp\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/RmiRegistrySslTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/RmiRegistrySslTestApp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-# @library \/lib\/testlibrary\n+# @library \/test\/lib\n@@ -31,1 +31,1 @@\n-# @build jdk.testlibrary.* TestLogger Utils RmiBootstrapTest\n+# @build TestLogger Utils RmiBootstrapTest\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/RmiSslBootstrapTest.sh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -60,1 +60,0 @@\n- * @library \/lib\/testlibrary\n@@ -66,1 +65,1 @@\n- * @build jdk.testlibrary.* JMXStartStopTest PortAllocator TestApp ManagementAgentJcmd\n+ * @build JMXStartStopTest PortAllocator TestApp ManagementAgentJcmd\n","filename":"test\/jdk\/sun\/management\/jmxremote\/startstop\/JMXStartStopTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @library \/lib\/testlibrary ..\/..\/\n+ * @library ..\/..\/\n@@ -59,1 +59,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/SSLEngineKeyLimit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @library \/lib\/testlibrary ..\/..\/\n+ * @library ..\/..\/\n@@ -61,1 +61,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketKeyLimit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/tools\/jcmd\/TestJcmdDefaults.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/tools\/jcmd\/TestJcmdSanity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @library \/lib\/testlibrary\n@@ -30,1 +29,0 @@\n- * @build jdk.testlibrary.*\n@@ -48,1 +46,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/tools\/jhsdb\/BasicLauncherTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -42,1 +42,0 @@\n- * @library \/lib\/testlibrary\n","filename":"test\/jdk\/sun\/tools\/jhsdb\/heapconfig\/JMapHeapConfigTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/tools\/jhsdb\/heapconfig\/TmtoolTestScenario.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/tools\/jps\/JpsHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n@@ -42,2 +42,0 @@\n- * @library \/lib\/testlibrary\n- * @build jdk.testlibrary.*\n","filename":"test\/jdk\/sun\/tools\/jstack\/DeadlockDetectionTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.testlibrary.Utils;\n+import jdk.test.lib.Utils;\n","filename":"test\/jdk\/sun\/tools\/jstatd\/JstatGCUtilParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import jdk.test.lib.Utils;\n@@ -36,1 +37,0 @@\n-import jdk.testlibrary.Utils;\n","filename":"test\/jdk\/sun\/tools\/jstatd\/JstatdTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}