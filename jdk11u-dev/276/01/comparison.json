{"files":[{"patch":"@@ -595,1 +595,1 @@\n-                                                 mem->in(0)->Opcode() == Op_MemBarCPUOrder)) {\n+                                               mem->in(0)->Opcode() == Op_MemBarCPUOrder)) {\n@@ -1063,1 +1063,0 @@\n-    bool final = !atp->is_rewritable();\n@@ -1071,1 +1070,4 @@\n-    \/\/ a synchronized region.\n+    \/\/ a synchronized region. It is not safe to step over MemBarCPUOrder,\n+    \/\/ because alias info above them may be inaccurate (e.g., due to\n+    \/\/ mixed\/mismatched unsafe accesses).\n+    bool is_final_mem = !atp->is_rewritable();\n@@ -1074,3 +1076,3 @@\n-      if ((final && (opc == Op_MemBarAcquire ||\n-                     opc == Op_MemBarAcquireLock ||\n-                     opc == Op_LoadFence)) ||\n+      if ((is_final_mem && (opc == Op_MemBarAcquire ||\n+                            opc == Op_MemBarAcquireLock ||\n+                            opc == Op_LoadFence)) ||\n@@ -1080,2 +1082,1 @@\n-          opc == Op_MemBarStoreStore ||\n-          opc == Op_MemBarCPUOrder) {\n+          opc == Op_MemBarStoreStore) {\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8223923\n+ * @modules java.base\/jdk.internal.misc\n+ * @run main\/othervm -Xbatch compiler.unsafe.MismatchedUnsafeAccessTest\n+ *\/\n+package compiler.unsafe;\n+\n+import jdk.internal.misc.Unsafe;\n+\n+public class MismatchedUnsafeAccessTest {\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n+\n+    public static class Test {\n+        public int x = 0;\n+        public int y = 0;\n+\n+        public static final long offsetX;\n+        public static final long offsetY;\n+\n+        static {\n+            try {\n+                offsetX = UNSAFE.objectFieldOffset(Test.class.getField(\"x\"));\n+                offsetY = UNSAFE.objectFieldOffset(Test.class.getField(\"y\"));\n+            } catch (NoSuchFieldException e) {\n+                throw new InternalError(e);\n+            }\n+            \/\/ Validate offsets\n+            if (offsetX >= offsetY || offsetY - offsetX != 4) {\n+                throw new InternalError(\"Wrong offsets: \" + offsetX + \" \" + offsetY);\n+            }\n+        }\n+    }\n+\n+    public static int test(long l) {\n+        Test a = new Test();\n+        UNSAFE.putLong(a, Test.offsetX, l); \/\/ mismatched access; interferes with subsequent load\n+        return UNSAFE.getInt(a, Test.offsetY);\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            int res = test(-1L);\n+            if (res != -1) {\n+                throw new AssertionError(\"Wrong result: \" + res);\n+            }\n+        }\n+        System.out.println(\"TEST PASSED\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/MismatchedUnsafeAccessTest.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"}]}