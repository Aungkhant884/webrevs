{"files":[{"patch":"@@ -58,0 +58,3 @@\n+# Disable MSVC warning C4146 \"unary minus operator applied to unsigned type,\n+# result still unsigned\". This operation is well-defined.\n+\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -151,0 +151,2 @@\n+# Disable MSVC warning C4146 \"unary minus operator applied to unsigned type,\n+# result still unsigned\". This operation is well-defined.\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-             > (1UL << log2_intptr(Universe::narrow_klass_range()))));\n+             > (1ULL << log2_intptr(Universe::narrow_klass_range()))));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1336,2 +1336,2 @@\n-  address generate_disjoint_copy(int size, bool aligned, bool is_oop, address *entry,\n-                                  const char *name, bool dest_uninitialized = false) {\n+  address generate_disjoint_copy(size_t size, bool aligned, bool is_oop, address *entry,\n+                                 const char *name, bool dest_uninitialized = false) {\n@@ -1366,1 +1366,1 @@\n-    copy_memory(aligned, s, d, count, rscratch1, size);\n+    copy_memory(aligned, s, d, count, rscratch1, (int)size);\n@@ -1371,1 +1371,1 @@\n-        verify_oop_array(size, d, count, r16);\n+        verify_oop_array((int)size, d, count, r16);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}