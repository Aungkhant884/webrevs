{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-  static bool _shutdown;\n+  static volatile bool _shutdown;\n@@ -72,1 +72,1 @@\n-  static int _listener;\n+  static volatile int _listener;\n@@ -135,1 +135,1 @@\n-int AixAttachListener::_listener = -1;\n+volatile int AixAttachListener::_listener = -1;\n@@ -138,1 +138,1 @@\n-bool AixAttachListener::_shutdown = false;\n+volatile bool AixAttachListener::_shutdown = false;\n@@ -187,1 +187,0 @@\n-      AixAttachListener::set_listener(-1);\n@@ -379,0 +378,2 @@\n+      ::close(listener());\n+      set_listener(-1);\n@@ -381,1 +382,1 @@\n-    s=::accept(listener(), &addr, &len);\n+    s = ::accept(listener(), &addr, &len);\n@@ -383,0 +384,2 @@\n+      ::close(listener());\n+      set_listener(-1);\n@@ -534,3 +537,7 @@\n-    while (AttachListener::transit_state(AL_INITIALIZING,\n-                                         AL_NOT_INITIALIZED) != AL_NOT_INITIALIZED) {\n-      os::naked_yield();\n+    {\n+      \/\/ avoid deadlock if AttachListener thread is blocked at safepoint\n+      ThreadBlockInVM tbivm(JavaThread::current());\n+      while (AttachListener::transit_state(AL_INITIALIZING,\n+                                           AL_NOT_INITIALIZED) != AL_NOT_INITIALIZED) {\n+        os::naked_yield();\n+      }\n","filename":"src\/hotspot\/os\/aix\/attachListener_aix.cpp","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-  static int _listener;\n+  static volatile int _listener;\n@@ -129,1 +129,1 @@\n-int BsdAttachListener::_listener = -1;\n+volatile int BsdAttachListener::_listener = -1;\n@@ -505,5 +505,7 @@\n-\n-    while (AttachListener::transit_state(AL_INITIALIZING,\n-\n-                                         AL_NOT_INITIALIZED) != AL_NOT_INITIALIZED) {\n-      os::naked_yield();\n+    {\n+      \/\/ avoid deadlock if AttachListener thread is blocked at safepoint\n+      ThreadBlockInVM tbivm(JavaThread::current());\n+      while (AttachListener::transit_state(AL_INITIALIZING,\n+                                           AL_NOT_INITIALIZED) != AL_NOT_INITIALIZED) {\n+        os::naked_yield();\n+      }\n","filename":"src\/hotspot\/os\/bsd\/attachListener_bsd.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-  static int _listener;\n+  static volatile int _listener;\n@@ -130,1 +130,1 @@\n-int LinuxAttachListener::_listener = -1;\n+volatile int LinuxAttachListener::_listener = -1;\n@@ -505,3 +505,7 @@\n-    while (AttachListener::transit_state(AL_INITIALIZING,\n-                                         AL_NOT_INITIALIZED) != AL_NOT_INITIALIZED) {\n-      os::naked_yield();\n+    {\n+      \/\/ avoid deadlock if AttachListener thread is blocked at safepoint\n+      ThreadBlockInVM tbivm(JavaThread::current());\n+      while (AttachListener::transit_state(AL_INITIALIZING,\n+                                           AL_NOT_INITIALIZED) != AL_NOT_INITIALIZED) {\n+        os::naked_yield();\n+      }\n","filename":"src\/hotspot\/os\/linux\/attachListener_linux.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.io.File;\n@@ -34,0 +35,1 @@\n+import java.util.concurrent.TimeUnit;\n@@ -35,0 +37,1 @@\n+import jdk.test.lib.Utils;\n@@ -38,0 +41,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -41,0 +45,3 @@\n+    \/\/ timeout (in seconds)\n+    private static final long timeout = Utils.adjustTimeout(60);\n+\n@@ -46,2 +53,1 @@\n-        ProcessBuilder pb = new ProcessBuilder(jcmd.getCommand());\n-        Process jcmdProc = pb.start();\n+        Process jcmdProc = ProcessTools.startProcess(\"jcmd\", new ProcessBuilder(jcmd.getCommand()));\n@@ -51,1 +57,5 @@\n-        jcmdProc.waitFor();\n+        if (!jcmdProc.waitFor(timeout, TimeUnit.SECONDS)) {\n+            log(\"jcmd is still running after \" + timeout + \" seconds, terminating...\");\n+            jcmdProc.destroy();\n+            jcmdProc.waitFor();\n+        }\n@@ -53,2 +63,3 @@\n-        System.out.println(out.getStdout());\n-        System.err.println(out.getStderr());\n+        log(\"jcmd stdout: [\" + out.getStdout() + \"];\\n\" +\n+            \"jcmd  stderr: [\" + out.getStderr() + \"]\\n\" +\n+            \"jcmd  exitValue = \" + out.getExitValue());\n@@ -56,1 +67,2 @@\n-        out.stderrShouldBeEmpty();\n+        out.shouldHaveExitValue(0)\n+           .stderrShouldBeEmptyIgnoreVMWarnings();\n@@ -68,1 +80,1 @@\n-            var sockFile = Path.of(System.getProperty(\"java.io.tmpdir\"),\n+            File sockFile = Path.of(System.getProperty(\"java.io.tmpdir\"),\n@@ -71,1 +83,1 @@\n-            System.out.println(\"Remove \" + sockFile.toString());\n+            log(\"Remove \" + sockFile.toString());\n@@ -81,0 +93,3 @@\n+    static void log(Object s) {\n+        System.out.println(String.valueOf(s));\n+    }\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/RemovingUnixDomainSocketTest.java","additions":23,"deletions":8,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+import java.util.concurrent.TimeUnit;\n@@ -45,0 +46,2 @@\n+\n+import jdk.test.lib.Utils;\n@@ -233,1 +236,5 @@\n-            appProcess.waitFor();\n+            \/\/ If the app hangs, we don't want to wait for the to test timeout.\n+            if (!appProcess.waitFor(Utils.adjustTimeout(appWaitTime), TimeUnit.SECONDS)) {\n+                appProcess.destroy();\n+                appProcess.waitFor();\n+            }\n","filename":"test\/lib\/jdk\/test\/lib\/apps\/LingeredApp.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}