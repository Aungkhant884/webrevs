{"files":[{"patch":"@@ -307,3 +307,2 @@\n-    const size_t hs_bytes = arrayOopDesc::base_offset_in_bytes(elem_type);\n-    \/\/ Align to next 8 bytes to avoid trashing arrays's length.\n-    const size_t aligned_hs_bytes = align_up(hs_bytes, BytesPerLong);\n+    size_t hs_bytes = arrayOopDesc::base_offset_in_bytes(elem_type);\n+    assert(is_aligned(hs_bytes, BytesPerInt), \"must be 4 byte aligned\");\n@@ -311,2 +310,3 @@\n-    if (aligned_hs_bytes > hs_bytes) {\n-      Copy::zero_to_bytes(obj + hs_bytes, aligned_hs_bytes - hs_bytes);\n+    if (!is_aligned(hs_bytes, BytesPerLong)) {\n+      *reinterpret_cast<jint*>(reinterpret_cast<char*>(obj) + hs_bytes) = 0;\n+      hs_bytes += BytesPerInt;\n@@ -314,0 +314,1 @@\n+\n@@ -315,1 +316,2 @@\n-    const size_t aligned_hs = aligned_hs_bytes \/ HeapWordSize;\n+    assert(is_aligned(hs_bytes, BytesPerLong), \"must be 8-byte aligned\");\n+    const size_t aligned_hs = hs_bytes \/ BytesPerLong;\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"}]}