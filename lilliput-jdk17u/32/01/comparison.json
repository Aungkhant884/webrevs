{"files":[{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/g1\/g1FullGCCompactionPoint.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+template <bool ALT_FWD>\n@@ -43,1 +44,1 @@\n-  G1AdjustClosure* _adjust_closure;\n+  G1AdjustClosure<ALT_FWD>* _adjust_closure;\n@@ -45,1 +46,1 @@\n-  G1AdjustLiveClosure(G1AdjustClosure* cl) :\n+  G1AdjustLiveClosure(G1AdjustClosure<ALT_FWD>* cl) :\n@@ -64,1 +65,11 @@\n-    G1AdjustClosure cl(_collector);\n+    if (UseAltGCForwarding) {\n+      return do_heap_region_impl<true>(r);\n+    } else {\n+      return do_heap_region_impl<false>(r);\n+    }\n+  }\n+\n+ private:\n+  template <bool ALT_FWD>\n+  bool do_heap_region_impl(HeapRegion* r) {\n+    G1AdjustClosure<ALT_FWD> cl(_collector);\n@@ -74,1 +85,1 @@\n-      G1AdjustLiveClosure adjust(&cl);\n+      G1AdjustLiveClosure<ALT_FWD> adjust(&cl);\n@@ -86,2 +97,1 @@\n-    _hrclaimer(collector->workers()),\n-    _adjust(collector) {\n+    _hrclaimer(collector->workers()) {\n@@ -92,1 +102,2 @@\n-void G1FullGCAdjustTask::work(uint worker_id) {\n+template <bool ALT_FWD>\n+void G1FullGCAdjustTask::work_impl(uint worker_id) {\n@@ -100,0 +111,1 @@\n+  G1AdjustClosure<ALT_FWD> adjust(collector());\n@@ -102,1 +114,1 @@\n-    G1CollectedHeap::heap()->ref_processor_stw()->weak_oops_do(&_adjust);\n+    G1CollectedHeap::heap()->ref_processor_stw()->weak_oops_do(&adjust);\n@@ -106,1 +118,1 @@\n-  _weak_proc_task.work(worker_id, &always_alive, &_adjust);\n+  _weak_proc_task.work(worker_id, &always_alive, &adjust);\n@@ -108,3 +120,3 @@\n-  CLDToOopClosure adjust_cld(&_adjust, ClassLoaderData::_claim_strong);\n-  CodeBlobToOopClosure adjust_code(&_adjust, CodeBlobToOopClosure::FixRelocations);\n-  _root_processor.process_all_roots(&_adjust, &adjust_cld, &adjust_code);\n+  CLDToOopClosure adjust_cld(&adjust, ClassLoaderData::_claim_strong);\n+  CodeBlobToOopClosure adjust_code(&adjust, CodeBlobToOopClosure::FixRelocations);\n+  _root_processor.process_all_roots(&adjust, &adjust_cld, &adjust_code);\n@@ -117,0 +129,8 @@\n+\n+void G1FullGCAdjustTask::work(uint worker_id) {\n+  if (UseAltGCForwarding) {\n+    work_impl<true>(worker_id);\n+  } else {\n+    work_impl<false>(worker_id);\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.cpp","additions":32,"deletions":12,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-  G1AdjustClosure          _adjust;\n@@ -44,0 +43,2 @@\n+  template <bool ALT_FWD>\n+  void work_impl(uint worker_id);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,1 +62,2 @@\n-size_t G1FullGCCompactTask::G1CompactRegionClosure::apply(oop obj) {\n+template <bool ALT_FWD>\n+size_t G1FullGCCompactTask::G1CompactRegionClosure<ALT_FWD>::apply(oop obj) {\n@@ -69,1 +70,1 @@\n-  HeapWord* destination = cast_from_oop<HeapWord*>(SlidingForwarding::forwardee(obj));\n+  HeapWord* destination = cast_from_oop<HeapWord*>(SlidingForwarding::forwardee<ALT_FWD>(obj));\n@@ -84,2 +85,7 @@\n-  G1CompactRegionClosure compact(collector()->mark_bitmap());\n-  hr->apply_to_marked_objects(collector()->mark_bitmap(), &compact);\n+  if (UseAltGCForwarding) {\n+    G1CompactRegionClosure<true> compact(collector()->mark_bitmap());\n+    hr->apply_to_marked_objects(collector()->mark_bitmap(), &compact);\n+  } else {\n+    G1CompactRegionClosure<false> compact(collector()->mark_bitmap());\n+    hr->apply_to_marked_objects(collector()->mark_bitmap(), &compact);\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+  template <bool ALT_FWD>\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -97,0 +97,1 @@\n+template <bool ALT_FWD>\n@@ -107,1 +108,1 @@\n-    SlidingForwarding::forward_to(object, cast_to_oop(_compaction_top));\n+    SlidingForwarding::forward_to<ALT_FWD>(object, cast_to_oop(_compaction_top));\n@@ -139,0 +140,3 @@\n+template void G1FullGCCompactionPoint::forward<true>(oop object, size_t size);\n+template void G1FullGCCompactionPoint::forward<false>(oop object, size_t size);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+  template <bool ALT_FWD>\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+template <bool ALT_FWD>\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCOopClosures.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,1 +67,2 @@\n-template <class T> inline void G1AdjustClosure::adjust_pointer(T* p) {\n+template <bool ALT_FWD>\n+template <class T> inline void G1AdjustClosure<ALT_FWD>::adjust_pointer(T* p) {\n@@ -94,1 +95,1 @@\n-  oop forwardee = SlidingForwarding::forwardee(obj);\n+  oop forwardee = SlidingForwarding::forwardee<ALT_FWD>(obj);\n@@ -99,2 +100,4 @@\n-inline void G1AdjustClosure::do_oop(oop* p)       { do_oop_work(p); }\n-inline void G1AdjustClosure::do_oop(narrowOop* p) { do_oop_work(p); }\n+template <bool ALT_FWD>\n+inline void G1AdjustClosure<ALT_FWD>::do_oop(oop* p)       { do_oop_work(p); }\n+template <bool ALT_FWD>\n+inline void G1AdjustClosure<ALT_FWD>::do_oop(narrowOop* p) { do_oop_work(p); }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCOopClosures.inline.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -160,1 +160,2 @@\n-G1FullGCPrepareTask::G1PrepareCompactLiveClosure::G1PrepareCompactLiveClosure(G1FullGCCompactionPoint* cp) :\n+template <bool ALT_FWD>\n+G1FullGCPrepareTask::G1PrepareCompactLiveClosure<ALT_FWD>::G1PrepareCompactLiveClosure(G1FullGCCompactionPoint* cp) :\n@@ -163,1 +164,2 @@\n-size_t G1FullGCPrepareTask::G1PrepareCompactLiveClosure::apply(oop object) {\n+template <bool ALT_FWD>\n+size_t G1FullGCPrepareTask::G1PrepareCompactLiveClosure<ALT_FWD>::apply(oop object) {\n@@ -165,1 +167,1 @@\n-  _cp->forward(object, size);\n+  _cp->forward<ALT_FWD>(object, size);\n@@ -169,1 +171,2 @@\n-size_t G1FullGCPrepareTask::G1RePrepareClosure::apply(oop obj) {\n+template <bool ALT_FWD>\n+size_t G1FullGCPrepareTask::G1RePrepareClosure<ALT_FWD>::apply(oop obj) {\n@@ -173,1 +176,1 @@\n-    oop forwarded_to = SlidingForwarding::forwardee(obj);\n+    oop forwarded_to = SlidingForwarding::forwardee<ALT_FWD>(obj);\n@@ -181,1 +184,1 @@\n-  _cp->forward(obj, size);\n+  _cp->forward<ALT_FWD>(obj, size);\n@@ -188,3 +191,9 @@\n-  G1PrepareCompactLiveClosure prepare_compact(cp);\n-  hr->set_compaction_top(hr->bottom());\n-  hr->apply_to_marked_objects(_bitmap, &prepare_compact);\n+  if (UseAltGCForwarding) {\n+    G1PrepareCompactLiveClosure<true> prepare_compact(cp);\n+    hr->set_compaction_top(hr->bottom());\n+    hr->apply_to_marked_objects(_bitmap, &prepare_compact);\n+  } else {\n+    G1PrepareCompactLiveClosure<false> prepare_compact(cp);\n+    hr->set_compaction_top(hr->bottom());\n+    hr->apply_to_marked_objects(_bitmap, &prepare_compact);\n+  }\n@@ -203,1 +212,2 @@\n-void G1FullGCPrepareTask::prepare_serial_compaction() {\n+template <bool ALT_FWD>\n+void G1FullGCPrepareTask::prepare_serial_compaction_impl() {\n@@ -227,1 +237,1 @@\n-      G1RePrepareClosure re_prepare(cp, current);\n+      G1RePrepareClosure<ALT_FWD> re_prepare(cp, current);\n@@ -235,0 +245,8 @@\n+void G1FullGCPrepareTask::prepare_serial_compaction() {\n+  if (UseAltGCForwarding) {\n+    prepare_serial_compaction_impl<true>();\n+  } else {\n+    prepare_serial_compaction_impl<false>();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp","additions":29,"deletions":11,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -45,0 +45,4 @@\n+private:\n+  template <bool ALT_FWD>\n+  void prepare_serial_compaction_impl();\n+\n@@ -54,1 +58,1 @@\n-    template<bool is_humongous>\n+    template <bool is_humongous>\n@@ -77,0 +81,1 @@\n+  template <bool ALT_FWD>\n@@ -85,0 +90,1 @@\n+  template <bool ALT_FWD>\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -279,8 +279,24 @@\n-  {\n-    StrongRootsScope srs(0);\n-\n-    gch->full_process_roots(true,  \/\/ this is the adjust phase\n-                            GenCollectedHeap::SO_AllCodeCache,\n-                            false, \/\/ all roots\n-                            &adjust_pointer_closure,\n-                            &adjust_cld_closure);\n+  if (UseAltGCForwarding) {\n+    AdjustPointerClosure<true> adjust_pointer_closure;\n+    CLDToOopClosure adjust_cld_closure(&adjust_pointer_closure, ClassLoaderData::_claim_strong);\n+    {\n+      StrongRootsScope srs(0);\n+      gch->full_process_roots(true,  \/\/ this is the adjust phase\n+                              GenCollectedHeap::SO_AllCodeCache,\n+                              false, \/\/ all roots\n+                              &adjust_pointer_closure,\n+                              &adjust_cld_closure);\n+    }\n+    gch->gen_process_weak_roots(&adjust_pointer_closure);\n+  } else {\n+    AdjustPointerClosure<false> adjust_pointer_closure;\n+    CLDToOopClosure adjust_cld_closure(&adjust_pointer_closure, ClassLoaderData::_claim_strong);\n+    {\n+      StrongRootsScope srs(0);\n+      gch->full_process_roots(true,  \/\/ this is the adjust phase\n+                              GenCollectedHeap::SO_AllCodeCache,\n+                              false, \/\/ all roots\n+                              &adjust_pointer_closure,\n+                              &adjust_cld_closure);\n+    }\n+    gch->gen_process_weak_roots(&adjust_pointer_closure);\n@@ -288,3 +304,0 @@\n-\n-  gch->gen_process_weak_roots(&adjust_pointer_closure);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp","additions":24,"deletions":11,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-CLDToOopClosure    MarkSweep::adjust_cld_closure(&adjust_pointer_closure, ClassLoaderData::_claim_strong);\n@@ -147,0 +146,1 @@\n+template <bool ALT_FWD>\n@@ -148,1 +148,1 @@\n-  MarkSweep::adjust_pointer(&_obj);\n+  MarkSweep::adjust_pointer<ALT_FWD>(&_obj);\n@@ -176,2 +176,1 @@\n-AdjustPointerClosure MarkSweep::adjust_pointer_closure;\n-\n+template <bool ALT_FWD>\n@@ -184,1 +183,1 @@\n-    _preserved_marks[i].adjust_pointer();\n+    _preserved_marks[i].adjust_pointer<ALT_FWD>();\n@@ -191,1 +190,9 @@\n-    adjust_pointer(p);\n+    adjust_pointer<ALT_FWD>(p);\n+  }\n+}\n+\n+void MarkSweep::adjust_marks() {\n+  if (UseAltGCForwarding) {\n+    adjust_marks<true>();\n+  } else {\n+    adjust_marks<false>();\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.cpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -53,1 +53,0 @@\n-class AdjustPointerClosure;\n@@ -87,1 +86,0 @@\n-  friend class AdjustPointerClosure;\n@@ -127,2 +125,0 @@\n-  static AdjustPointerClosure adjust_pointer_closure;\n-  static CLDToOopClosure      adjust_cld_closure;\n@@ -142,0 +138,2 @@\n+  template <bool ALT_FWD>\n+  static void adjust_marks();   \/\/ Adjust the pointers in the preserved marks table\n@@ -145,0 +143,1 @@\n+  template <bool ALT_FWD>\n@@ -153,1 +152,2 @@\n-  template <class T> static inline void adjust_pointer(T* p);\n+  template <bool ALT_FWD, class T>\n+  static inline void adjust_pointer(T* p);\n@@ -188,0 +188,1 @@\n+template <bool ALT_FWD>\n@@ -207,0 +208,1 @@\n+  template <bool ALT_FWD>\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -90,1 +90,2 @@\n-template <class T> inline void MarkSweep::adjust_pointer(T* p) {\n+template <bool ALT_FWD, class T>\n+inline void MarkSweep::adjust_pointer(T* p) {\n@@ -97,1 +98,1 @@\n-      oop new_obj = SlidingForwarding::forwardee(obj);\n+      oop new_obj = SlidingForwarding::forwardee<ALT_FWD>(obj);\n@@ -105,0 +106,1 @@\n+template <bool ALT_FWD>\n@@ -106,3 +108,1 @@\n-void AdjustPointerClosure::do_oop_work(T* p)           { MarkSweep::adjust_pointer(p); }\n-inline void AdjustPointerClosure::do_oop(oop* p)       { do_oop_work(p); }\n-inline void AdjustPointerClosure::do_oop(narrowOop* p) { do_oop_work(p); }\n+void AdjustPointerClosure<ALT_FWD>::do_oop_work(T* p)           { MarkSweep::adjust_pointer<ALT_FWD>(p); }\n@@ -110,0 +110,2 @@\n+template <bool ALT_FWD>\n+inline void AdjustPointerClosure<ALT_FWD>::do_oop(oop* p)       { do_oop_work(p); }\n@@ -111,0 +113,4 @@\n+template <bool ALT_FWD>\n+inline void AdjustPointerClosure<ALT_FWD>::do_oop(narrowOop* p) { do_oop_work(p); }\n+\n+template <bool ALT_FWD>\n@@ -112,1 +118,2 @@\n-  return obj->oop_iterate_size(&MarkSweep::adjust_pointer_closure);\n+  AdjustPointerClosure<ALT_FWD> adjust_pointer_closure;\n+  return obj->oop_iterate_size(&adjust_pointer_closure);\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.inline.hpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -43,1 +43,2 @@\n-void PreservedMarks::adjust_during_full_gc() {\n+template <bool ALT_FWD>\n+void PreservedMarks::adjust_during_full_gc_impl() {\n@@ -50,1 +51,1 @@\n-      elem->set_oop(SlidingForwarding::forwardee(obj));\n+      elem->set_oop(SlidingForwarding::forwardee<ALT_FWD>(obj));\n@@ -55,0 +56,8 @@\n+void PreservedMarks::adjust_during_full_gc() {\n+  if (UseAltGCForwarding) {\n+    adjust_during_full_gc_impl<true>();\n+  } else {\n+    adjust_during_full_gc_impl<false>();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.cpp","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -57,0 +57,3 @@\n+  template <bool ALT_FWD>\n+  void adjust_during_full_gc_impl();\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -182,0 +182,1 @@\n+  template <bool ALT_FWD>\n@@ -183,0 +184,1 @@\n+  template <bool ALT_FWD>\n","filename":"src\/hotspot\/share\/gc\/shared\/slidingForwarding.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,0 +130,1 @@\n+template <bool ALT_FWD>\n@@ -132,1 +133,1 @@\n-  if (UseAltGCForwarding) {\n+  if (ALT_FWD) {\n@@ -135,1 +136,1 @@\n-    assert(forwardee(obj) == fwd, \"must be forwarded to correct forwardee\");\n+    assert(forwardee<ALT_FWD>(obj) == fwd, \"must be forwarded to correct forwardee\");\n@@ -157,0 +158,1 @@\n+template <bool ALT_FWD>\n@@ -159,1 +161,1 @@\n-  if (UseAltGCForwarding) {\n+  if (ALT_FWD) {\n","filename":"src\/hotspot\/share\/gc\/shared\/slidingForwarding.inline.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -350,0 +350,1 @@\n+template <bool ALT_FWD>\n@@ -374,1 +375,1 @@\n-    SlidingForwarding::forward_to(q, cast_to_oop(compact_top));\n+    SlidingForwarding::forward_to<ALT_FWD>(q, cast_to_oop(compact_top));\n@@ -397,1 +398,5 @@\n-  scan_and_forward(this, cp);\n+  if (UseAltGCForwarding) {\n+    scan_and_forward<true>(this, cp);\n+  } else {\n+    scan_and_forward<false>(this, cp);\n+  }\n@@ -406,1 +411,5 @@\n-  scan_and_adjust_pointers(this);\n+  if (UseAltGCForwarding) {\n+    scan_and_adjust_pointers<true>(this);\n+  } else {\n+    scan_and_adjust_pointers<false>(this);\n+  }\n@@ -410,1 +419,5 @@\n-  scan_and_compact(this);\n+  if (UseAltGCForwarding) {\n+    scan_and_compact<true>(this);\n+  } else {\n+    scan_and_compact<false>(this);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -434,1 +434,2 @@\n-  virtual HeapWord* forward(oop q, size_t size, CompactPoint* cp,\n+  template <bool ALT_FWD>\n+  HeapWord* forward(oop q, size_t size, CompactPoint* cp,\n@@ -463,1 +464,1 @@\n-  template <class SpaceType>\n+  template <bool ALT_FWD, class SpaceType>\n@@ -468,1 +469,1 @@\n-  template <class SpaceType>\n+  template <bool ALT_FWD, class SpaceType>\n@@ -473,1 +474,1 @@\n-  template <class SpaceType>\n+  template <bool ALT_FWD, class SpaceType>\n@@ -484,1 +485,1 @@\n-  template <typename SpaceType>\n+  template <bool ALT_FWD, typename SpaceType>\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-template <class SpaceType>\n+template <bool ALT_FWD, class SpaceType>\n@@ -171,1 +171,1 @@\n-      compact_top = cp->space->forward(cast_to_oop(cur_obj), size, cp, compact_top);\n+      compact_top = cp->space->forward<ALT_FWD>(cast_to_oop(cur_obj), size, cp, compact_top);\n@@ -187,1 +187,1 @@\n-        compact_top = cp->space->forward(obj, obj->size(), cp, compact_top);\n+        compact_top = cp->space->forward<ALT_FWD>(obj, obj->size(), cp, compact_top);\n@@ -218,1 +218,1 @@\n-template <class SpaceType>\n+template <bool ALT_FWD, class SpaceType>\n@@ -237,1 +237,1 @@\n-      size_t size = MarkSweep::adjust_pointers(cast_to_oop(cur_obj));\n+      size_t size = MarkSweep::adjust_pointers<ALT_FWD>(cast_to_oop(cur_obj));\n@@ -291,1 +291,1 @@\n-template <class SpaceType>\n+template <bool ALT_FWD, class SpaceType>\n@@ -332,1 +332,1 @@\n-      HeapWord* compaction_top = cast_from_oop<HeapWord*>(SlidingForwarding::forwardee(cast_to_oop(cur_obj)));\n+      HeapWord* compaction_top = cast_from_oop<HeapWord*>(SlidingForwarding::forwardee<ALT_FWD>(cast_to_oop(cur_obj)));\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -304,0 +304,1 @@\n+template <bool ALT_FWD>\n@@ -372,1 +373,1 @@\n-    SlidingForwarding::forward_to(p, cast_to_oop(_compact_point));\n+    SlidingForwarding::forward_to<ALT_FWD>(p, cast_to_oop(_compact_point));\n@@ -403,0 +404,10 @@\n+    if (UseAltGCForwarding) {\n+      work_impl<true>(worker_id);\n+    } else {\n+      work_impl<false>(worker_id);\n+    }\n+  }\n+\n+private:\n+  template <bool ALT_FWD>\n+  void work_impl(uint worker_id) {\n@@ -418,1 +429,1 @@\n-    ShenandoahPrepareForCompactionObjectClosure cl(_preserved_marks->get(worker_id), empty_regions, from_region);\n+    ShenandoahPrepareForCompactionObjectClosure<ALT_FWD> cl(_preserved_marks->get(worker_id), empty_regions, from_region);\n@@ -444,1 +455,2 @@\n-void ShenandoahFullGC::calculate_target_humongous_objects() {\n+template <bool ALT_FWD>\n+void ShenandoahFullGC::calculate_target_humongous_objects_impl() {\n@@ -480,1 +492,1 @@\n-        SlidingForwarding::forward_to(old_obj, cast_to_oop(heap->get_region(start)->bottom()));\n+        SlidingForwarding::forward_to<ALT_FWD>(old_obj, cast_to_oop(heap->get_region(start)->bottom()));\n@@ -492,0 +504,8 @@\n+void ShenandoahFullGC::calculate_target_humongous_objects() {\n+  if (UseAltGCForwarding) {\n+    calculate_target_humongous_objects_impl<true>();\n+  } else {\n+    calculate_target_humongous_objects_impl<false>();\n+  }\n+}\n+\n@@ -729,0 +749,1 @@\n+template <bool ALT_FWD>\n@@ -741,1 +762,1 @@\n-        oop forw = SlidingForwarding::forwardee(obj);\n+        oop forw = SlidingForwarding::forwardee<ALT_FWD>(obj);\n@@ -756,0 +777,1 @@\n+template <bool ALT_FWD>\n@@ -759,1 +781,1 @@\n-  ShenandoahAdjustPointersClosure _cl;\n+  ShenandoahAdjustPointersClosure<ALT_FWD> _cl;\n@@ -783,0 +805,10 @@\n+    if (UseAltGCForwarding) {\n+      work_impl<true>(worker_id);\n+    } else {\n+      work_impl<false>(worker_id);\n+    }\n+  }\n+\n+private:\n+  template <bool ALT_FWD>\n+  void work_impl(uint worker_id) {\n@@ -784,1 +816,1 @@\n-    ShenandoahAdjustPointersObjectClosure obj_cl;\n+    ShenandoahAdjustPointersObjectClosure<ALT_FWD> obj_cl;\n@@ -799,0 +831,8 @@\n+\n+  template <bool ALT_FWD>\n+  void work_impl(uint worker_id) {\n+    ShenandoahParallelWorkerSession worker_session(worker_id);\n+    ShenandoahAdjustPointersClosure<ALT_FWD> cl;\n+    _rp->roots_do(worker_id, &cl);\n+    _preserved_marks->get(worker_id)->adjust_during_full_gc();\n+  }\n@@ -806,4 +846,5 @@\n-    ShenandoahParallelWorkerSession worker_session(worker_id);\n-    ShenandoahAdjustPointersClosure cl;\n-    _rp->roots_do(worker_id, &cl);\n-    _preserved_marks->get(worker_id)->adjust_during_full_gc();\n+    if (UseAltGCForwarding) {\n+      work_impl<true>(worker_id);\n+    } else {\n+      work_impl<false>(worker_id);\n+    }\n@@ -837,0 +878,1 @@\n+template <bool ALT_FWD>\n@@ -851,1 +893,1 @@\n-      HeapWord* compact_to = cast_from_oop<HeapWord*>(SlidingForwarding::forwardee(p));\n+      HeapWord* compact_to = cast_from_oop<HeapWord*>(SlidingForwarding::forwardee<ALT_FWD>(p));\n@@ -864,8 +906,2 @@\n-public:\n-  ShenandoahCompactObjectsTask(ShenandoahHeapRegionSet** worker_slices) :\n-    AbstractGangTask(\"Shenandoah Compact Objects\"),\n-    _heap(ShenandoahHeap::heap()),\n-    _worker_slices(worker_slices) {\n-  }\n-\n-  void work(uint worker_id) {\n+  template <bool ALT_FWD>\n+  void work_impl(uint worker_id) {\n@@ -875,1 +911,1 @@\n-    ShenandoahCompactObjectsClosure cl(worker_id);\n+    ShenandoahCompactObjectsClosure<ALT_FWD> cl(worker_id);\n@@ -886,0 +922,14 @@\n+public:\n+  ShenandoahCompactObjectsTask(ShenandoahHeapRegionSet** worker_slices) :\n+    AbstractGangTask(\"Shenandoah Compact Objects\"),\n+    _heap(ShenandoahHeap::heap()),\n+    _worker_slices(worker_slices) {\n+  }\n+\n+  void work(uint worker_id) {\n+    if (UseAltGCForwarding) {\n+      work_impl<true>(worker_id);\n+    } else {\n+      work_impl<false>(worker_id);\n+    }\n+  }\n@@ -938,1 +988,2 @@\n-void ShenandoahFullGC::compact_humongous_objects() {\n+template <bool ALT_FWD>\n+void ShenandoahFullGC::compact_humongous_objects_impl() {\n@@ -960,1 +1011,1 @@\n-      size_t new_start = heap->heap_region_index_containing(SlidingForwarding::forwardee(old_obj));\n+      size_t new_start = heap->heap_region_index_containing(SlidingForwarding::forwardee<ALT_FWD>(old_obj));\n@@ -1002,0 +1053,8 @@\n+void ShenandoahFullGC::compact_humongous_objects() {\n+  if (UseAltGCForwarding) {\n+    compact_humongous_objects_impl<true>();\n+  } else {\n+    compact_humongous_objects_impl<false>();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":82,"deletions":23,"binary":false,"changes":105,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+  template <bool ALT_FWD>\n@@ -86,0 +87,2 @@\n+  template <bool ALT_FWD>\n+  void calculate_target_humongous_objects_impl();\n@@ -87,0 +90,2 @@\n+  template <bool ALT_FWD>\n+  void compact_humongous_objects_impl();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-  SlidingForwarding::forward_to(obj1, obj2);\n+  SlidingForwarding::forward_to<true>(obj1, obj2);\n@@ -56,1 +56,1 @@\n-  ASSERT_EQ(SlidingForwarding::forwardee(obj1), obj2);\n+  ASSERT_EQ(SlidingForwarding::forwardee<true>(obj1), obj2);\n@@ -73,1 +73,1 @@\n-  SlidingForwarding::forward_to(obj1, obj2);\n+  SlidingForwarding::forward_to<true>(obj1, obj2);\n@@ -75,1 +75,1 @@\n-  ASSERT_EQ(SlidingForwarding::forwardee(obj1), obj2);\n+  ASSERT_EQ(SlidingForwarding::forwardee<true>(obj1), obj2);\n@@ -77,1 +77,1 @@\n-  SlidingForwarding::forward_to(obj1, obj3);\n+  SlidingForwarding::forward_to<true>(obj1, obj3);\n@@ -79,1 +79,1 @@\n-  ASSERT_EQ(SlidingForwarding::forwardee(obj1), obj3);\n+  ASSERT_EQ(SlidingForwarding::forwardee<true>(obj1), obj3);\n@@ -104,1 +104,1 @@\n-  SlidingForwarding::forward_to(s_obj1, t_obj1);\n+  SlidingForwarding::forward_to<true>(s_obj1, t_obj1);\n@@ -106,1 +106,1 @@\n-  ASSERT_EQ(SlidingForwarding::forwardee(s_obj1), t_obj1);\n+  ASSERT_EQ(SlidingForwarding::forwardee<true>(s_obj1), t_obj1);\n@@ -108,1 +108,1 @@\n-  SlidingForwarding::forward_to(s_obj2, t_obj2);\n+  SlidingForwarding::forward_to<true>(s_obj2, t_obj2);\n@@ -110,1 +110,1 @@\n-  ASSERT_EQ(SlidingForwarding::forwardee(s_obj2), t_obj2);\n+  ASSERT_EQ(SlidingForwarding::forwardee<true>(s_obj2), t_obj2);\n@@ -112,1 +112,1 @@\n-  SlidingForwarding::forward_to(s_obj3, t_obj3);\n+  SlidingForwarding::forward_to<true>(s_obj3, t_obj3);\n@@ -114,1 +114,1 @@\n-  ASSERT_EQ(SlidingForwarding::forwardee(s_obj3), t_obj3);\n+  ASSERT_EQ(SlidingForwarding::forwardee<true>(s_obj3), t_obj3);\n@@ -116,1 +116,1 @@\n-  SlidingForwarding::forward_to(s_obj4, t_obj4);\n+  SlidingForwarding::forward_to<true>(s_obj4, t_obj4);\n@@ -118,1 +118,1 @@\n-  ASSERT_EQ(SlidingForwarding::forwardee(s_obj4), t_obj4);\n+  ASSERT_EQ(SlidingForwarding::forwardee<true>(s_obj4), t_obj4);\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_slidingForwarding.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}