{"files":[{"patch":"@@ -60,1 +60,1 @@\n-Solution is to export required packages by adding following options to the command line:\n+Solution is to permit access to private packages by adding following option to the command line:\n@@ -62,6 +62,1 @@\n-\t$ java --add-exports=jdk.compiler\/com.sun.tools.javac.main=ALL-UNNAMED \\\n-\t--add-exports=jdk.compiler\/com.sun.tools.javac.file=ALL-UNNAMED \\\n-\t--add-exports=jdk.compiler\/com.sun.tools.javac.util=ALL-UNNAMED \\\n-\t--add-exports=jdk.compiler\/com.sun.tools.javac.comp=ALL-UNNAMED \\\n-\t--add-exports=jdk.compiler\/com.sun.tools.javac.tree=ALL-UNNAMED \\\n-\t-jar target\/jmh-jdk-microbenchmarks-1.0-SNAPSHOT.jar [optional jmh parameters]\n+\t$ java --illegal-access=permit -jar target\/jmh-jdk-microbenchmarks-1.0-SNAPSHOT.jar [optional jmh parameters]\n@@ -72,1 +67,1 @@\n- * `SingleJavacBenchmark` (which is parametrized) measures each single javac compilation stage in an isolated run. This benchmark is designed for exact automated performance regression testing and it takes several ours to execute completely. \n+ * `SingleJavacBenchmark` (which is parametrized) measures each single javac compilation stage in an isolated run. This benchmark is designed for exact automated performance regression testing and it takes several hours to execute completely. \n","filename":"README.md","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"}]}