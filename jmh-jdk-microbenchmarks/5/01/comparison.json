{"files":[{"patch":"@@ -37,0 +37,36 @@\n+\n+## Troubleshooting\n+\n+### Build of micros-javac module got stuck\n+\n+If you build got stuck on `[get] Getting: https:\/\/download.java.net\/openjdk\/jdk11\/ri\/openjdk-11+28_windows-x64_bin.zip` then you are probably experiencing some networking or web proxy obstacles. \n+\n+Solution is to download required reference JDK from [https:\/\/download.java.net\/openjdk\/jdk11\/ri\/openjdk-11+28_windows-x64_bin.zip](https:\/\/download.java.net\/openjdk\/jdk11\/ri\/openjdk-11+28_windows-x64_bin.zip) manually and then build the project with property pointing to the local copy:\n+\n+    $ mvn clean install -Djavac.benchmark.openjdk.zip.download.url=file:\/\/\/<your download location>\/openjdk-11+28_windows-x64_bin.zip\n+\n+Note: Please use `openjdk-11+28_windows-x64_bin.zip` to build the project no matter what target platform is.\n+\n+### Execution of micros-javac benchmarks fail with java.lang.IllegalAccessError\n+\n+If you experience following exception during benchmarks execution:\n+\n+\tjava.lang.IllegalAccessError: superclass access check failed: class\n+\torg.openjdk.bench.langtools.javac.JavacBenchmark$2 (in unnamed module) cannot access class\n+\tcom.sun.tools.javac.main.JavaCompiler\n+\n+It is caused by recently enabled Jigsaw enforcement and micros-javac benchmarks requirement to access several jdk.compiler module private packages. \n+\n+Solution is to permit access to private packages by adding following option to the command line:\n+\n+\t$ java --illegal-access=permit -jar target\/jmh-jdk-microbenchmarks-1.0-SNAPSHOT.jar [optional jmh parameters]\n+\n+### Execution of micros-javac benchmarks takes several hours\n+\n+micros-javac benchmarks consist of two sets of benchmarks: \n+ * `SingleJavacBenchmark` (which is parametrized) measures each single javac compilation stage in an isolated run. This benchmark is designed for exact automated performance regression testing and it takes several hours to execute completely. \n+ * `GroupJavacBenchmark` is grouping the measurements of all javac compilation stages into one run and its execution should take less than 30 minutes on a regular developers computer.\n+\n+Solution to speed up javac benchmarking is to select only `GroupJavacBenchmark` for execution using following command line:\n+\n+\t  $ java -jar target\/jmh-jdk-microbenchmarks-1.0-SNAPSHOT.jar .*GroupJavacBenchmark.*\n","filename":"README.md","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"}]}