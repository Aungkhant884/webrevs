{"files":[{"patch":"@@ -311,1 +311,0 @@\n-  OopMapValue omv;\n@@ -313,2 +312,6 @@\n-    OopMapStream oms(map);\n-    if (!oms.is_done()) {\n+    for (OopMapStream oms(map); !oms.is_done(); oms.next()) {\n+      OopMapValue omv = oms.current();\n+      if (omv.type() != OopMapValue::derived_oop_value) {\n+        continue;\n+      }\n+\n@@ -323,18 +326,13 @@\n-      do {\n-        omv = oms.current();\n-        if (omv.type() == OopMapValue::derived_oop_value) {\n-          oop* loc = fr->oopmapreg_to_location(omv.reg(),reg_map);\n-          guarantee(loc != NULL, \"missing saved register\");\n-          oop *derived_loc = loc;\n-          oop *base_loc    = fr->oopmapreg_to_location(omv.content_reg(), reg_map);\n-          \/\/ Ignore NULL oops and decoded NULL narrow oops which\n-          \/\/ equal to CompressedOops::base() when a narrow oop\n-          \/\/ implicit null check is used in compiled code.\n-          \/\/ The narrow_oop_base could be NULL or be the address\n-          \/\/ of the page below heap depending on compressed oops mode.\n-          if (base_loc != NULL && *base_loc != NULL && !CompressedOops::is_base(*base_loc)) {\n-            derived_oop_fn(base_loc, derived_loc);\n-          }\n-        }\n-        oms.next();\n-      }  while (!oms.is_done());\n+      oop* loc = fr->oopmapreg_to_location(omv.reg(),reg_map);\n+      guarantee(loc != NULL, \"missing saved register\");\n+      oop *derived_loc = loc;\n+      oop *base_loc    = fr->oopmapreg_to_location(omv.content_reg(), reg_map);\n+      \/\/ Ignore NULL oops and decoded NULL narrow oops which\n+      \/\/ equal to CompressedOops::base() when a narrow oop\n+      \/\/ implicit null check is used in compiled code.\n+      \/\/ The narrow_oop_base could be NULL or be the address\n+      \/\/ of the page below heap depending on compressed oops mode.\n+      if (base_loc != NULL && *base_loc != NULL && !CompressedOops::is_base(*base_loc)) {\n+        derived_oop_fn(base_loc, derived_loc);\n+      }\n+      oms.next();\n@@ -347,1 +345,1 @@\n-      omv = oms.current();\n+      OopMapValue omv = oms.current();\n","filename":"src\/hotspot\/share\/compiler\/oopMap.cpp","additions":20,"deletions":22,"binary":false,"changes":42,"status":"modified"}]}