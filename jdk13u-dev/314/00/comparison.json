{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -449,6 +449,3 @@\n-    __ call_Unimplemented();\n-#if 0\n-    __ movptr(Address(rsp, 0), rax);\n-    __ mov_metadata(Address(rsp, sizeof(void*)), method()->constant_encoding());\n-    __ call(RuntimeAddress(CAST_FROM_FN_PTR(address, SharedRuntime::dtrace_method_exit)));\n-#endif\n+    __ mov(c_rarg0, rthread);\n+    __ mov_metadata(c_rarg1, method()->constant_encoding());\n+    __ call_VM_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::dtrace_method_exit), c_rarg0, c_rarg1);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -1127,0 +1127,10 @@\n+    case dtrace_object_alloc_id:\n+      { \/\/ c_rarg0: object\n+        StubFrame f(sasm, \"dtrace_object_alloc\", dont_gc_arguments);\n+        save_live_registers(sasm);\n+\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::dtrace_object_alloc), c_rarg0);\n+\n+        restore_live_registers(sasm);\n+      }\n+      break;\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}