{"files":[{"patch":"@@ -75,0 +75,6 @@\n+            long deltaLimit = memSwapLimit - memLimit;\n+            \/\/ Return 0 when memSwapLimit == memLimit, which means no swap space is allowed.\n+            \/\/ And the same for memSwapLimit < memLimit.\n+            if (deltaLimit <= 0) {\n+                return 0;\n+            }\n@@ -83,2 +89,6 @@\n-                        if ((memSwapUsage - memUsage) >= 0) {\n-                            return memSwapLimit - memLimit - (memSwapUsage - memUsage);\n+                        long deltaUsage = memSwapUsage - memUsage;\n+                        if (deltaUsage >= 0) {\n+                            long freeSwap = deltaLimit - deltaUsage;\n+                            if (freeSwap >= 0) {\n+                                return freeSwap;\n+                            }\n","filename":"src\/jdk.management\/unix\/classes\/com\/sun\/management\/internal\/OperatingSystemImpl.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (C) 2020 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import com.sun.management.OperatingSystemMXBean;\n+import java.lang.management.ManagementFactory;\n+\n+public class GetFreeSwapSpaceSize {\n+    public static void main(String[] args) {\n+        System.out.println(\"TestGetFreeSwapSpaceSize\");\n+        OperatingSystemMXBean osBean = (OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();\n+        for (int i = 0; i < 100; i++) {\n+            long size = osBean.getFreeSwapSpaceSize();\n+            if (size < 0) {\n+                System.out.println(\"Error: getFreeSwapSpaceSize returns \" + size);\n+                System.exit(-1);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/GetFreeSwapSpaceSize.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (C) 2020 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8242480\n+ * @requires docker.support\n+ * @library \/test\/lib\n+ * @build GetFreeSwapSpaceSize\n+ * @run driver TestGetFreeSwapSpaceSize\n+ *\/\n+import jdk.test.lib.containers.docker.Common;\n+import jdk.test.lib.containers.docker.DockerRunOptions;\n+import jdk.test.lib.containers.docker.DockerTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestGetFreeSwapSpaceSize {\n+    private static final String imageName = Common.imageName(\"memory\");\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!DockerTestUtils.canTestDocker()) {\n+            return;\n+        }\n+\n+        DockerTestUtils.buildJdkDockerImage(imageName, \"Dockerfile-BasicTest\", \"jdk-docker\");\n+\n+        try {\n+            testGetFreeSwapSpaceSize(\n+                \"150M\", Integer.toString(((int) Math.pow(2, 20)) * 150),\n+                \"150M\", Integer.toString(0)\n+            );\n+        } finally {\n+            if (!DockerTestUtils.RETAIN_IMAGE_AFTER_TEST) {\n+                DockerTestUtils.removeDockerImage(imageName);\n+            }\n+        }\n+    }\n+\n+    private static void testGetFreeSwapSpaceSize(String memoryAllocation, String expectedMemory,\n+            String swapAllocation, String expectedSwap) throws Exception {\n+        Common.logNewTestCase(\"TestGetFreeSwapSpaceSize\");\n+\n+        DockerRunOptions opts = Common.newOpts(imageName, \"GetFreeSwapSpaceSize\")\n+            .addDockerOpts(\n+                \"--memory\", memoryAllocation,\n+                \"--memory-swap\", swapAllocation\n+            );\n+\n+        OutputAnalyzer out = DockerTestUtils.dockerRunJava(opts);\n+        out.shouldHaveExitValue(0)\n+           .shouldContain(\"TestGetFreeSwapSpaceSize\");\n+    }\n+}\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/TestGetFreeSwapSpaceSize.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"}]}