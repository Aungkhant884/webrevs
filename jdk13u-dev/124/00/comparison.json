{"files":[{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/keymap\/BindingReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/keymap\/KeyMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Binding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Buffer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Candidate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Completer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/CompletingParsedLine.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/EndOfFileException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Expander.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Highlighter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -12,0 +12,1 @@\n+import java.nio.file.Path;\n@@ -44,0 +45,20 @@\n+    \/**\n+     * Write history to the file. If incremental only the events that are new since the last incremental operation to\n+     * the file are added.\n+     * @throws IOException if a problem occurs\n+     *\/\n+    void write(Path file, boolean incremental) throws IOException;\n+\n+    \/**\n+     * Append history to the file. If incremental only the events that are new since the last incremental operation to\n+     * the file are added.\n+     * @throws IOException if a problem occurs\n+     *\/\n+    void append(Path file, boolean incremental) throws IOException;\n+\n+    \/**\n+     * Read history from the file. If incremental only the events that are not contained within the internal list are added.\n+     * @throws IOException if a problem occurs\n+     *\/\n+    void read(Path file, boolean incremental) throws IOException;\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/History.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -98,0 +98,2 @@\n+    String ACCEPT_AND_INFER_NEXT_HISTORY = \"accept-and-infer-next-history\";\n+    String ACCEPT_AND_HOLD = \"accept-and-hold\";\n@@ -99,0 +101,1 @@\n+    String ACCEPT_LINE_AND_DOWN_HISTORY = \"accept-line-and-down-history\";\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/LineReader.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -88,1 +88,1 @@\n-                if (!Boolean.parseBoolean(LineReader.PROP_SUPPORT_PARSEDLINE)\n+                if (!Boolean.getBoolean(LineReader.PROP_SUPPORT_PARSEDLINE)\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/LineReaderBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Macro.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/MaskingCallback.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/ParsedLine.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -19,0 +19,4 @@\n+    default boolean isEscapeChar(char ch) {\n+        return ch == '\\\\';\n+    }\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Parser.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Reference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/UserInterruptException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/Widget.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/BufferImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/DefaultExpander.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/DefaultHighlighter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -21,0 +21,7 @@\n+    public enum Bracket {\n+        ROUND,   \/\/ ()\n+        CURLY,   \/\/ {}\n+        SQUARE,  \/\/ []\n+        ANGLE;   \/\/ <>\n+    }\n+\n@@ -29,0 +36,4 @@\n+    private char[] openingBrackets = null;\n+\n+    private char[] closingBrackets = null;\n+\n@@ -48,0 +59,5 @@\n+    public DefaultParser eofOnUnclosedBracket(Bracket... brackets){\n+        setEofOnUnclosedBracket(brackets);\n+        return this;\n+    }\n+\n@@ -89,0 +105,33 @@\n+    public void setEofOnUnclosedBracket(Bracket... brackets){\n+        if (brackets == null) {\n+            openingBrackets = null;\n+            closingBrackets = null;\n+        } else {\n+            Set<Bracket> bs = new HashSet<>(Arrays.asList(brackets));\n+            openingBrackets = new char[bs.size()];\n+            closingBrackets = new char[bs.size()];\n+            int i = 0;\n+            for (Bracket b : bs) {\n+                switch (b) {\n+                case ROUND:\n+                    openingBrackets[i] = '(';\n+                    closingBrackets[i] = ')';\n+                    break;\n+                case CURLY:\n+                    openingBrackets[i] = '{';\n+                    closingBrackets[i] = '}';\n+                    break;\n+                case SQUARE:\n+                    openingBrackets[i] = '[';\n+                    closingBrackets[i] = ']';\n+                    break;\n+                case ANGLE:\n+                    openingBrackets[i] = '<';\n+                    closingBrackets[i] = '>';\n+                    break;\n+                }\n+                i++;\n+            }\n+        }\n+    }\n+\n@@ -98,0 +147,2 @@\n+        BracketChecker bracketChecker = new BracketChecker();\n+        boolean quotedWord = false;\n@@ -113,4 +164,17 @@\n-            } else if (quoteStart >= 0) {\n-                \/\/ In a quote block\n-                if (line.charAt(quoteStart) == line.charAt(i) && !isEscaped(line, i)) {\n-                    \/\/ End the block; arg could be empty, but that's fine\n+                if (current.length()==0) {\n+                    quotedWord = true;\n+                } else {\n+                    current.append(line.charAt(i));\n+                }\n+            } else if (quoteStart >= 0 && line.charAt(quoteStart) == line.charAt(i) && !isEscaped(line, i)) {\n+                \/\/ End quote block\n+                if (!quotedWord) {\n+                    current.append(line.charAt(i));\n+                } else if (rawWordCursor >= 0 && rawWordLength < 0) {\n+                    rawWordLength = i - rawWordStart + 1;\n+                }\n+                quoteStart = -1;\n+                quotedWord = false;\n+            } else if (quoteStart < 0 && isDelimiter(line, i)) {\n+                \/\/ Delimiter\n+                if (current.length() > 0) {\n@@ -118,2 +182,1 @@\n-                    current.setLength(0);\n-                    quoteStart = -1;\n+                    current.setLength(0); \/\/ reset the arg\n@@ -121,6 +184,1 @@\n-                        rawWordLength = i - rawWordStart + 1;\n-                    }\n-                } else {\n-                    if (!isEscapeChar(line, i)) {\n-                        \/\/ Take the next character\n-                        current.append(line.charAt(i));\n+                        rawWordLength = i - rawWordStart;\n@@ -129,0 +187,1 @@\n+                rawWordStart = i + 1;\n@@ -130,13 +189,4 @@\n-                \/\/ Not in a quote block\n-                if (isDelimiter(line, i)) {\n-                    if (current.length() > 0) {\n-                        words.add(current.toString());\n-                        current.setLength(0); \/\/ reset the arg\n-                        if (rawWordCursor >= 0 && rawWordLength < 0) {\n-                            rawWordLength = i - rawWordStart;\n-                        }\n-                    }\n-                    rawWordStart = i + 1;\n-                } else {\n-                    if (!isEscapeChar(line, i)) {\n-                        current.append(line.charAt(i));\n+                if (!isEscapeChar(line, i)) {\n+                    current.append(line.charAt(i));\n+                    if (quoteStart < 0) {\n+                        bracketChecker.check(line, i);\n@@ -162,6 +212,14 @@\n-        if (eofOnEscapedNewLine && isEscapeChar(line, line.length() - 1)) {\n-            throw new EOFError(-1, -1, \"Escaped new line\", \"newline\");\n-        }\n-        if (eofOnUnclosedQuote && quoteStart >= 0 && context != ParseContext.COMPLETE) {\n-            throw new EOFError(-1, -1, \"Missing closing quote\", line.charAt(quoteStart) == '\\''\n-                    ? \"quote\" : \"dquote\");\n+        if (context != ParseContext.COMPLETE) {\n+            if (eofOnEscapedNewLine && isEscapeChar(line, line.length() - 1)) {\n+                throw new EOFError(-1, -1, \"Escaped new line\", \"newline\");\n+            }\n+            if (eofOnUnclosedQuote && quoteStart >= 0) {\n+                throw new EOFError(-1, -1, \"Missing closing quote\", line.charAt(quoteStart) == '\\''\n+                        ? \"quote\" : \"dquote\");\n+            }\n+            if (bracketChecker.isOpeningBracketMissing()) {\n+                throw new EOFError(-1, -1, \"Missing opening bracket\", \"missing: \" + bracketChecker.getMissingOpeningBracket());\n+            }\n+            if (bracketChecker.isClosingBracketMissing()) {\n+                throw new EOFError(-1, -1, \"Missing closing brackets\", \"add: \" + bracketChecker.getMissingClosingBrackets());\n+            }\n@@ -170,1 +228,1 @@\n-        String openingQuote = quoteStart >= 0 ? line.substring(quoteStart, quoteStart + 1) : null;\n+        String openingQuote = quotedWord ? line.substring(quoteStart, quoteStart + 1) : null;\n@@ -176,1 +234,1 @@\n-     * escaped by any of {@link #getQuoteChars}, and is not escaped by ant of the {@link #getEscapeChars}, and\n+     * escaped by any of {@link #getQuoteChars}, and is not escaped by any of the {@link #getEscapeChars}, and\n@@ -205,0 +263,12 @@\n+    @Override\n+    public boolean isEscapeChar(char ch) {\n+        if (escapeChars != null) {\n+            for (char e : escapeChars) {\n+                if (e == ch) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n@@ -219,8 +289,2 @@\n-        if (escapeChars != null) {\n-            for (char e : escapeChars) {\n-                if (e == buffer.charAt(pos)) {\n-                    return !isEscaped(buffer, pos);\n-                }\n-            }\n-        }\n-        return false;\n+        char ch = buffer.charAt(pos);\n+        return isEscapeChar(ch) && !isEscaped(buffer, pos);\n@@ -248,1 +312,1 @@\n-     * the character is not enclosed in any of the {@link #getQuoteChars}, and is not escaped by ant of the\n+     * the character is not enclosed in any of the {@link #getQuoteChars}, and is not escaped by any of the\n@@ -283,0 +347,61 @@\n+    private class BracketChecker {\n+        private int missingOpeningBracket = -1;\n+        private List<Integer> nested = new ArrayList<>();\n+\n+        public BracketChecker(){}\n+\n+        public void check(final CharSequence buffer, final int pos){\n+            if (openingBrackets == null || pos < 0) {\n+                return;\n+            }\n+            int bid = bracketId(openingBrackets, buffer, pos);\n+            if (bid >= 0) {\n+                nested.add(bid);\n+            } else {\n+                bid = bracketId(closingBrackets, buffer, pos);\n+                if (bid >= 0) {\n+                    if (!nested.isEmpty() && bid == nested.get(nested.size()-1)) {\n+                        nested.remove(nested.size()-1);\n+                    } else {\n+                        missingOpeningBracket = bid;\n+                    }\n+                }\n+            }\n+        }\n+\n+        public boolean isOpeningBracketMissing(){\n+            return missingOpeningBracket != -1;\n+        }\n+\n+        public String getMissingOpeningBracket(){\n+            if (!isOpeningBracketMissing()) {\n+                return null;\n+            }\n+            return Character.toString(openingBrackets[missingOpeningBracket]);\n+        }\n+\n+        public boolean isClosingBracketMissing(){\n+            return !nested.isEmpty();\n+        }\n+\n+        public String getMissingClosingBrackets(){\n+            if (!isClosingBracketMissing()) {\n+                return null;\n+            }\n+            StringBuilder out = new StringBuilder();\n+            for (int i = nested.size() - 1; i > -1; i--) {\n+                out.append(closingBrackets[nested.get(i)]);\n+            }\n+            return out.toString();\n+        }\n+\n+        private int bracketId(final char[] brackets, final CharSequence buffer, final int pos){\n+            for (int i=0; i < brackets.length; i++) {\n+                if (buffer.charAt(pos) == brackets[i]) {\n+                    return i;\n+                }\n+            }\n+            return -1;\n+        }\n+    }\n+\n@@ -370,10 +495,9 @@\n-            \/\/ Completion is protected by an opening quote:\n-            \/\/ Delimiters (spaces) don't need to be escaped, nor do other quotes, but everything else does.\n-            \/\/ Also, close the quote at the end\n-            if (openingQuote != null) {\n-                needToBeEscaped = i -> isRawEscapeChar(sb.charAt(i)) || String.valueOf(sb.charAt(i)).equals(openingQuote);\n-            }\n-            \/\/ No quote protection, need to escape everything: delimiter chars (spaces), quote chars\n-            \/\/ and escapes themselves\n-            else {\n-                needToBeEscaped = i -> isDelimiterChar(sb, i) || isRawEscapeChar(sb.charAt(i)) || isRawQuoteChar(sb.charAt(i));\n+            String quote = openingQuote;\n+            boolean middleQuotes = false;\n+            if (openingQuote==null) {\n+                for (int i=0; i < sb.length(); i++) {\n+                    if (isQuoteChar(sb, i)) {\n+                        middleQuotes = true;\n+                        break;\n+                    }\n+                }\n@@ -381,3 +505,28 @@\n-            for (int i = 0; i < sb.length(); i++) {\n-                if (needToBeEscaped.test(i)) {\n-                    sb.insert(i++, escapeChars[0]);\n+            if (escapeChars != null) {\n+                \/\/ Completion is protected by an opening quote:\n+                \/\/ Delimiters (spaces) don't need to be escaped, nor do other quotes, but everything else does.\n+                \/\/ Also, close the quote at the end\n+                if (openingQuote != null) {\n+                    needToBeEscaped = i -> isRawEscapeChar(sb.charAt(i)) || String.valueOf(sb.charAt(i)).equals(openingQuote);\n+                }\n+                \/\/ Completion is protected by middle quotes:\n+                \/\/ Delimiters (spaces) don't need to be escaped, nor do quotes, but everything else does.\n+                else if (middleQuotes) {\n+                    needToBeEscaped = i -> isRawEscapeChar(sb.charAt(i));\n+                }\n+                \/\/ No quote protection, need to escape everything: delimiter chars (spaces), quote chars\n+                \/\/ and escapes themselves\n+                else {\n+                    needToBeEscaped = i -> isDelimiterChar(sb, i) || isRawEscapeChar(sb.charAt(i)) || isRawQuoteChar(sb.charAt(i));\n+                }\n+                for (int i = 0; i < sb.length(); i++) {\n+                    if (needToBeEscaped.test(i)) {\n+                        sb.insert(i++, escapeChars[0]);\n+                    }\n+                }\n+            } else if (openingQuote == null && !middleQuotes) {\n+                for (int i = 0; i < sb.length(); i++) {\n+                    if (isDelimiterChar(sb, i)) {\n+                        quote = \"'\";\n+                        break;\n+                    }\n@@ -386,2 +535,2 @@\n-            if (openingQuote != null) {\n-                sb.insert(0, openingQuote);\n+            if (quote != null) {\n+                sb.insert(0, quote);\n@@ -389,1 +538,1 @@\n-                    sb.append(openingQuote);\n+                    sb.append(quote);\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/DefaultParser.java","additions":208,"deletions":59,"binary":false,"changes":267,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/KillRing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author or authors.\n@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -20,0 +20,2 @@\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n@@ -24,0 +26,1 @@\n+import java.util.stream.Stream;\n@@ -35,0 +38,1 @@\n+import jdk.internal.org.jline.terminal.impl.AbstractWindowsTerminal;\n@@ -162,2 +166,2 @@\n-    protected AttributedString prompt;\n-    protected AttributedString rightPrompt;\n+    protected AttributedString prompt = AttributedString.EMPTY;\n+    protected AttributedString rightPrompt = AttributedString.EMPTY;\n@@ -213,0 +217,4 @@\n+    \/**\n+     * State lock\n+     *\/\n+    protected final ReentrantLock lock = new ReentrantLock();\n@@ -242,0 +250,5 @@\n+    \/*\n+     * accept-and-infer-next-history, accept-and-hold & accept-line-and-down-history\n+     *\/\n+    protected boolean nextCommandFromHistory = false;\n+    protected int nextHistoryId = -1;\n@@ -269,0 +282,1 @@\n+        doDisplay();\n@@ -470,2 +484,1 @@\n-        boolean dumb = Terminal.TYPE_DUMB.equals(terminal.getType())\n-                    || Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+        boolean dumb = isTerminalDumb();\n@@ -498,0 +511,11 @@\n+            if (nextCommandFromHistory && nextHistoryId > 0) {\n+                if (history.size() > nextHistoryId) {\n+                    history.moveTo(nextHistoryId);\n+                } else {\n+                    history.moveTo(history.last());\n+                }\n+                buf.write(history.current());\n+            } else {\n+                nextHistoryId = -1;\n+            }\n+            nextCommandFromHistory = false;\n@@ -506,1 +530,3 @@\n-            synchronized (this) {\n+            try {\n+                lock.lock();\n+\n@@ -514,12 +540,1 @@\n-                \/\/ Cache terminal size for the duration of the call to readLine()\n-                \/\/ It will eventually be updated with WINCH signals\n-                size.copy(terminal.getSize());\n-\n-                display = new Display(terminal, false);\n-                if (size.getRows() == 0 || size.getColumns() == 0) {\n-                    display.resize(1, Integer.MAX_VALUE);\n-                } else {\n-                    display.resize(size.getRows(), size.getColumns());\n-                }\n-                if (isSet(Option.DELAY_LINE_WRAP))\n-                    display.setDelayLineWrap(true);\n+                doDisplay();\n@@ -550,0 +565,2 @@\n+            } finally {\n+                lock.unlock();\n@@ -581,1 +598,2 @@\n-                synchronized (this) {\n+                try {\n+                    lock.lock();\n@@ -613,0 +631,2 @@\n+                } finally {\n+                    lock.unlock();\n@@ -623,1 +643,3 @@\n-            synchronized (this) {\n+            try {\n+                lock.lock();\n+\n@@ -639,0 +661,2 @@\n+            } finally {\n+                lock.unlock();\n@@ -644,8 +668,13 @@\n-    @Override\n-    public synchronized void printAbove(String str) {\n-        boolean reading = this.reading;\n-        if (reading) {\n-            display.update(Collections.emptyList(), 0);\n-        }\n-        if (str.endsWith(\"\\n\")) {\n-            terminal.writer().print(str);\n+    private boolean isTerminalDumb(){\n+        return Terminal.TYPE_DUMB.equals(terminal.getType())\n+                || Terminal.TYPE_DUMB_COLOR.equals(terminal.getType());\n+    }\n+\n+    private void doDisplay(){\n+        \/\/ Cache terminal size for the duration of the call to readLine()\n+        \/\/ It will eventually be updated with WINCH signals\n+        size.copy(terminal.getBufferSize());\n+\n+        display = new Display(terminal, false);\n+        if (size.getRows() == 0 || size.getColumns() == 0) {\n+            display.resize(1, Integer.MAX_VALUE);\n@@ -653,1 +682,1 @@\n-            terminal.writer().println(str);\n+            display.resize(size.getRows(), size.getColumns());\n@@ -655,2 +684,24 @@\n-        if (reading) {\n-            redisplay(false);\n+        if (isSet(Option.DELAY_LINE_WRAP))\n+            display.setDelayLineWrap(true);\n+    }\n+\n+    @Override\n+    public void printAbove(String str) {\n+        try {\n+            lock.lock();\n+\n+            boolean reading = this.reading;\n+            if (reading) {\n+                display.update(Collections.emptyList(), 0);\n+            }\n+            if (str.endsWith(\"\\n\") || str.endsWith(\"\\n\\033[m\") || str.endsWith(\"\\n\\033[0m\")) {\n+                terminal.writer().print(str);\n+            } else {\n+                terminal.writer().println(str);\n+            }\n+            if (reading) {\n+                redisplay(false);\n+            }\n+            terminal.flush();\n+        } finally {\n+            lock.unlock();\n@@ -658,1 +709,0 @@\n-        terminal.flush();\n@@ -667,2 +717,7 @@\n-    public synchronized boolean isReading() {\n-        return reading;\n+    public boolean isReading() {\n+        try {\n+            lock.lock();\n+            return reading;\n+        } finally {\n+            lock.unlock();\n+        }\n@@ -703,1 +758,1 @@\n-        print(sb.toAnsi(terminal));\n+        sb.print(terminal);\n@@ -708,4 +763,1 @@\n-    public synchronized void callWidget(String name) {\n-        if (!reading) {\n-            throw new IllegalStateException(\"Widgets can only be called during a `readLine` call\");\n-        }\n+    public void callWidget(String name) {\n@@ -713,5 +765,3 @@\n-            Widget w;\n-            if (name.startsWith(\".\")) {\n-                w = builtinWidgets.get(name.substring(1));\n-            } else {\n-                w = widgets.get(name);\n+            lock.lock();\n+            if (!reading) {\n+                throw new IllegalStateException(\"Widgets can only be called during a `readLine` call\");\n@@ -719,2 +769,12 @@\n-            if (w != null) {\n-                w.apply();\n+            try {\n+                Widget w;\n+                if (name.startsWith(\".\")) {\n+                    w = builtinWidgets.get(name.substring(1));\n+                } else {\n+                    w = widgets.get(name);\n+                }\n+                if (w != null) {\n+                    w.apply();\n+                }\n+            } catch (Throwable t) {\n+                Log.debug(\"Error executing widget '\", name, \"'\", t);\n@@ -722,2 +782,2 @@\n-        } catch (Throwable t) {\n-            Log.debug(\"Error executing widget '\", name, \"'\", t);\n+        } finally {\n+            lock.unlock();\n@@ -763,1 +823,10 @@\n-        return bindingReader.readCharacter();\n+        if (lock.isHeldByCurrentThread()) {\n+            try {\n+                lock.unlock();\n+                return bindingReader.readCharacter();\n+            } finally {\n+                lock.lock();\n+            }\n+        } else {\n+            return bindingReader.readCharacter();\n+        }\n@@ -770,0 +839,13 @@\n+    protected <T> T doReadBinding(KeyMap<T> keys, KeyMap<T> local) {\n+        if (lock.isHeldByCurrentThread()) {\n+            try {\n+                lock.unlock();\n+                return bindingReader.readBinding(keys, local);\n+            } finally {\n+                lock.lock();\n+            }\n+        } else {\n+            return bindingReader.readBinding(keys, local);\n+        }\n+    }\n+\n@@ -786,1 +868,1 @@\n-        Binding o = bindingReader.readBinding(keys, local);\n+        Binding o = doReadBinding(keys, local);\n@@ -929,1 +1011,1 @@\n-                } else if (ch == '\\\\') {\n+                } else if (parser.isEscapeChar(ch)) {\n@@ -951,1 +1033,5 @@\n-            size.copy(terminal.getSize());\n+            Status status = Status.getStatus(terminal, false);\n+            if (status != null) {\n+                status.hardReset();\n+            }\n+            size.copy(terminal.getBufferSize());\n@@ -953,0 +1039,1 @@\n+            redrawLine();\n@@ -957,1 +1044,1 @@\n-            size.copy(terminal.getSize());\n+            size.copy(terminal.getBufferSize());\n@@ -1906,1 +1993,1 @@\n-            Binding b = bindingReader.readBinding(keyMap);\n+            Binding b = doReadBinding(keyMap, null);\n@@ -2303,1 +2390,1 @@\n-            Binding b = bindingReader.readBinding(getKeys(), keyMaps.get(VIOPP));\n+            Binding b = doReadBinding(getKeys(), keyMaps.get(VIOPP));\n@@ -2713,0 +2800,36 @@\n+    protected boolean acceptAndHold() {\n+        nextCommandFromHistory = false;\n+        acceptLine();\n+        if (!buf.toString().isEmpty()) {\n+            nextHistoryId = Integer.MAX_VALUE;\n+            nextCommandFromHistory = true;\n+        }\n+        return nextCommandFromHistory;\n+    }\n+\n+    protected boolean acceptLineAndDownHistory() {\n+        nextCommandFromHistory = false;\n+        acceptLine();\n+        if (nextHistoryId < 0) {\n+            nextHistoryId = history.index();\n+        }\n+        if (history.size() > nextHistoryId + 1) {\n+            nextHistoryId++;\n+            nextCommandFromHistory = true;\n+        }\n+        return nextCommandFromHistory;\n+    }\n+\n+    protected boolean acceptAndInferNextHistory() {\n+        nextCommandFromHistory = false;\n+        acceptLine();\n+        if (!buf.toString().isEmpty()) {\n+            nextHistoryId = searchBackwards(buf.toString(), history.last());\n+            if (nextHistoryId >= 0 && history.size() > nextHistoryId + 1) {\n+                nextHistoryId++;\n+                nextCommandFromHistory = true;\n+            }\n+        }\n+        return nextCommandFromHistory;\n+    }\n+\n@@ -3346,143 +3469,146 @@\n-        widgets.put(ACCEPT_LINE, this::acceptLine);\n-        widgets.put(ARGUMENT_BASE, this::argumentBase);\n-        widgets.put(BACKWARD_CHAR, this::backwardChar);\n-        widgets.put(BACKWARD_DELETE_CHAR, this::backwardDeleteChar);\n-        widgets.put(BACKWARD_DELETE_WORD, this::backwardDeleteWord);\n-        widgets.put(BACKWARD_KILL_LINE, this::backwardKillLine);\n-        widgets.put(BACKWARD_KILL_WORD, this::backwardKillWord);\n-        widgets.put(BACKWARD_WORD, this::backwardWord);\n-        widgets.put(BEEP, this::beep);\n-        widgets.put(BEGINNING_OF_BUFFER_OR_HISTORY, this::beginningOfBufferOrHistory);\n-        widgets.put(BEGINNING_OF_HISTORY, this::beginningOfHistory);\n-        widgets.put(BEGINNING_OF_LINE, this::beginningOfLine);\n-        widgets.put(BEGINNING_OF_LINE_HIST, this::beginningOfLineHist);\n-        widgets.put(CAPITALIZE_WORD, this::capitalizeWord);\n-        widgets.put(CLEAR, this::clear);\n-        widgets.put(CLEAR_SCREEN, this::clearScreen);\n-        widgets.put(COMPLETE_PREFIX, this::completePrefix);\n-        widgets.put(COMPLETE_WORD, this::completeWord);\n-        widgets.put(COPY_PREV_WORD, this::copyPrevWord);\n-        widgets.put(COPY_REGION_AS_KILL, this::copyRegionAsKill);\n-        widgets.put(DELETE_CHAR, this::deleteChar);\n-        widgets.put(DELETE_CHAR_OR_LIST, this::deleteCharOrList);\n-        widgets.put(DELETE_WORD, this::deleteWord);\n-        widgets.put(DIGIT_ARGUMENT, this::digitArgument);\n-        widgets.put(DO_LOWERCASE_VERSION, this::doLowercaseVersion);\n-        widgets.put(DOWN_CASE_WORD, this::downCaseWord);\n-        widgets.put(DOWN_LINE, this::downLine);\n-        widgets.put(DOWN_LINE_OR_HISTORY, this::downLineOrHistory);\n-        widgets.put(DOWN_LINE_OR_SEARCH, this::downLineOrSearch);\n-        widgets.put(DOWN_HISTORY, this::downHistory);\n-        widgets.put(EMACS_EDITING_MODE, this::emacsEditingMode);\n-        widgets.put(EMACS_BACKWARD_WORD, this::emacsBackwardWord);\n-        widgets.put(EMACS_FORWARD_WORD, this::emacsForwardWord);\n-        widgets.put(END_OF_BUFFER_OR_HISTORY, this::endOfBufferOrHistory);\n-        widgets.put(END_OF_HISTORY, this::endOfHistory);\n-        widgets.put(END_OF_LINE, this::endOfLine);\n-        widgets.put(END_OF_LINE_HIST, this::endOfLineHist);\n-        widgets.put(EXCHANGE_POINT_AND_MARK, this::exchangePointAndMark);\n-        widgets.put(EXPAND_HISTORY, this::expandHistory);\n-        widgets.put(EXPAND_OR_COMPLETE, this::expandOrComplete);\n-        widgets.put(EXPAND_OR_COMPLETE_PREFIX, this::expandOrCompletePrefix);\n-        widgets.put(EXPAND_WORD, this::expandWord);\n-        widgets.put(FRESH_LINE, this::freshLine);\n-        widgets.put(FORWARD_CHAR, this::forwardChar);\n-        widgets.put(FORWARD_WORD, this::forwardWord);\n-        widgets.put(HISTORY_INCREMENTAL_SEARCH_BACKWARD, this::historyIncrementalSearchBackward);\n-        widgets.put(HISTORY_INCREMENTAL_SEARCH_FORWARD, this::historyIncrementalSearchForward);\n-        widgets.put(HISTORY_SEARCH_BACKWARD, this::historySearchBackward);\n-        widgets.put(HISTORY_SEARCH_FORWARD, this::historySearchForward);\n-        widgets.put(INSERT_CLOSE_CURLY, this::insertCloseCurly);\n-        widgets.put(INSERT_CLOSE_PAREN, this::insertCloseParen);\n-        widgets.put(INSERT_CLOSE_SQUARE, this::insertCloseSquare);\n-        widgets.put(INSERT_COMMENT, this::insertComment);\n-        widgets.put(KILL_BUFFER, this::killBuffer);\n-        widgets.put(KILL_LINE, this::killLine);\n-        widgets.put(KILL_REGION, this::killRegion);\n-        widgets.put(KILL_WHOLE_LINE, this::killWholeLine);\n-        widgets.put(KILL_WORD, this::killWord);\n-        widgets.put(LIST_CHOICES, this::listChoices);\n-        widgets.put(MENU_COMPLETE, this::menuComplete);\n-        widgets.put(MENU_EXPAND_OR_COMPLETE, this::menuExpandOrComplete);\n-        widgets.put(NEG_ARGUMENT, this::negArgument);\n-        widgets.put(OVERWRITE_MODE, this::overwriteMode);\n-\/\/        widgets.put(QUIT, this::quit);\n-        widgets.put(QUOTED_INSERT, this::quotedInsert);\n-        widgets.put(REDISPLAY, this::redisplay);\n-        widgets.put(REDRAW_LINE, this::redrawLine);\n-        widgets.put(REDO, this::redo);\n-        widgets.put(SELF_INSERT, this::selfInsert);\n-        widgets.put(SELF_INSERT_UNMETA, this::selfInsertUnmeta);\n-        widgets.put(SEND_BREAK, this::sendBreak);\n-        widgets.put(SET_MARK_COMMAND, this::setMarkCommand);\n-        widgets.put(TRANSPOSE_CHARS, this::transposeChars);\n-        widgets.put(TRANSPOSE_WORDS, this::transposeWords);\n-        widgets.put(UNDEFINED_KEY, this::undefinedKey);\n-        widgets.put(UNIVERSAL_ARGUMENT, this::universalArgument);\n-        widgets.put(UNDO, this::undo);\n-        widgets.put(UP_CASE_WORD, this::upCaseWord);\n-        widgets.put(UP_HISTORY, this::upHistory);\n-        widgets.put(UP_LINE, this::upLine);\n-        widgets.put(UP_LINE_OR_HISTORY, this::upLineOrHistory);\n-        widgets.put(UP_LINE_OR_SEARCH, this::upLineOrSearch);\n-        widgets.put(VI_ADD_EOL, this::viAddEol);\n-        widgets.put(VI_ADD_NEXT, this::viAddNext);\n-        widgets.put(VI_BACKWARD_CHAR, this::viBackwardChar);\n-        widgets.put(VI_BACKWARD_DELETE_CHAR, this::viBackwardDeleteChar);\n-        widgets.put(VI_BACKWARD_BLANK_WORD, this::viBackwardBlankWord);\n-        widgets.put(VI_BACKWARD_BLANK_WORD_END, this::viBackwardBlankWordEnd);\n-        widgets.put(VI_BACKWARD_KILL_WORD, this::viBackwardKillWord);\n-        widgets.put(VI_BACKWARD_WORD, this::viBackwardWord);\n-        widgets.put(VI_BACKWARD_WORD_END, this::viBackwardWordEnd);\n-        widgets.put(VI_BEGINNING_OF_LINE, this::viBeginningOfLine);\n-        widgets.put(VI_CMD_MODE, this::viCmdMode);\n-        widgets.put(VI_DIGIT_OR_BEGINNING_OF_LINE, this::viDigitOrBeginningOfLine);\n-        widgets.put(VI_DOWN_LINE_OR_HISTORY, this::viDownLineOrHistory);\n-        widgets.put(VI_CHANGE, this::viChange);\n-        widgets.put(VI_CHANGE_EOL, this::viChangeEol);\n-        widgets.put(VI_CHANGE_WHOLE_LINE, this::viChangeWholeLine);\n-        widgets.put(VI_DELETE_CHAR, this::viDeleteChar);\n-        widgets.put(VI_DELETE, this::viDelete);\n-        widgets.put(VI_END_OF_LINE, this::viEndOfLine);\n-        widgets.put(VI_KILL_EOL, this::viKillEol);\n-        widgets.put(VI_FIRST_NON_BLANK, this::viFirstNonBlank);\n-        widgets.put(VI_FIND_NEXT_CHAR, this::viFindNextChar);\n-        widgets.put(VI_FIND_NEXT_CHAR_SKIP, this::viFindNextCharSkip);\n-        widgets.put(VI_FIND_PREV_CHAR, this::viFindPrevChar);\n-        widgets.put(VI_FIND_PREV_CHAR_SKIP, this::viFindPrevCharSkip);\n-        widgets.put(VI_FORWARD_BLANK_WORD, this::viForwardBlankWord);\n-        widgets.put(VI_FORWARD_BLANK_WORD_END, this::viForwardBlankWordEnd);\n-        widgets.put(VI_FORWARD_CHAR, this::viForwardChar);\n-        widgets.put(VI_FORWARD_WORD, this::viForwardWord);\n-        widgets.put(VI_FORWARD_WORD, this::viForwardWord);\n-        widgets.put(VI_FORWARD_WORD_END, this::viForwardWordEnd);\n-        widgets.put(VI_HISTORY_SEARCH_BACKWARD, this::viHistorySearchBackward);\n-        widgets.put(VI_HISTORY_SEARCH_FORWARD, this::viHistorySearchForward);\n-        widgets.put(VI_INSERT, this::viInsert);\n-        widgets.put(VI_INSERT_BOL, this::viInsertBol);\n-        widgets.put(VI_INSERT_COMMENT, this::viInsertComment);\n-        widgets.put(VI_JOIN, this::viJoin);\n-        widgets.put(VI_KILL_LINE, this::viKillWholeLine);\n-        widgets.put(VI_MATCH_BRACKET, this::viMatchBracket);\n-        widgets.put(VI_OPEN_LINE_ABOVE, this::viOpenLineAbove);\n-        widgets.put(VI_OPEN_LINE_BELOW, this::viOpenLineBelow);\n-        widgets.put(VI_PUT_AFTER, this::viPutAfter);\n-        widgets.put(VI_PUT_BEFORE, this::viPutBefore);\n-        widgets.put(VI_REPEAT_FIND, this::viRepeatFind);\n-        widgets.put(VI_REPEAT_SEARCH, this::viRepeatSearch);\n-        widgets.put(VI_REPLACE_CHARS, this::viReplaceChars);\n-        widgets.put(VI_REV_REPEAT_FIND, this::viRevRepeatFind);\n-        widgets.put(VI_REV_REPEAT_SEARCH, this::viRevRepeatSearch);\n-        widgets.put(VI_SWAP_CASE, this::viSwapCase);\n-        widgets.put(VI_UP_LINE_OR_HISTORY, this::viUpLineOrHistory);\n-        widgets.put(VI_YANK, this::viYankTo);\n-        widgets.put(VI_YANK_WHOLE_LINE, this::viYankWholeLine);\n-        widgets.put(VISUAL_LINE_MODE, this::visualLineMode);\n-        widgets.put(VISUAL_MODE, this::visualMode);\n-        widgets.put(WHAT_CURSOR_POSITION, this::whatCursorPosition);\n-        widgets.put(YANK, this::yank);\n-        widgets.put(YANK_POP, this::yankPop);\n-        widgets.put(MOUSE, this::mouse);\n-        widgets.put(BEGIN_PASTE, this::beginPaste);\n-        widgets.put(FOCUS_IN, this::focusIn);\n-        widgets.put(FOCUS_OUT, this::focusOut);\n+        addBuiltinWidget(widgets, ACCEPT_AND_INFER_NEXT_HISTORY, this::acceptAndInferNextHistory);\n+        addBuiltinWidget(widgets, ACCEPT_AND_HOLD, this::acceptAndHold);\n+        addBuiltinWidget(widgets, ACCEPT_LINE, this::acceptLine);\n+        addBuiltinWidget(widgets, ACCEPT_LINE_AND_DOWN_HISTORY, this::acceptLineAndDownHistory);\n+        addBuiltinWidget(widgets, ARGUMENT_BASE, this::argumentBase);\n+        addBuiltinWidget(widgets, BACKWARD_CHAR, this::backwardChar);\n+        addBuiltinWidget(widgets, BACKWARD_DELETE_CHAR, this::backwardDeleteChar);\n+        addBuiltinWidget(widgets, BACKWARD_DELETE_WORD, this::backwardDeleteWord);\n+        addBuiltinWidget(widgets, BACKWARD_KILL_LINE, this::backwardKillLine);\n+        addBuiltinWidget(widgets, BACKWARD_KILL_WORD, this::backwardKillWord);\n+        addBuiltinWidget(widgets, BACKWARD_WORD, this::backwardWord);\n+        addBuiltinWidget(widgets, BEEP, this::beep);\n+        addBuiltinWidget(widgets, BEGINNING_OF_BUFFER_OR_HISTORY, this::beginningOfBufferOrHistory);\n+        addBuiltinWidget(widgets, BEGINNING_OF_HISTORY, this::beginningOfHistory);\n+        addBuiltinWidget(widgets, BEGINNING_OF_LINE, this::beginningOfLine);\n+        addBuiltinWidget(widgets, BEGINNING_OF_LINE_HIST, this::beginningOfLineHist);\n+        addBuiltinWidget(widgets, CAPITALIZE_WORD, this::capitalizeWord);\n+        addBuiltinWidget(widgets, CLEAR, this::clear);\n+        addBuiltinWidget(widgets, CLEAR_SCREEN, this::clearScreen);\n+        addBuiltinWidget(widgets, COMPLETE_PREFIX, this::completePrefix);\n+        addBuiltinWidget(widgets, COMPLETE_WORD, this::completeWord);\n+        addBuiltinWidget(widgets, COPY_PREV_WORD, this::copyPrevWord);\n+        addBuiltinWidget(widgets, COPY_REGION_AS_KILL, this::copyRegionAsKill);\n+        addBuiltinWidget(widgets, DELETE_CHAR, this::deleteChar);\n+        addBuiltinWidget(widgets, DELETE_CHAR_OR_LIST, this::deleteCharOrList);\n+        addBuiltinWidget(widgets, DELETE_WORD, this::deleteWord);\n+        addBuiltinWidget(widgets, DIGIT_ARGUMENT, this::digitArgument);\n+        addBuiltinWidget(widgets, DO_LOWERCASE_VERSION, this::doLowercaseVersion);\n+        addBuiltinWidget(widgets, DOWN_CASE_WORD, this::downCaseWord);\n+        addBuiltinWidget(widgets, DOWN_LINE, this::downLine);\n+        addBuiltinWidget(widgets, DOWN_LINE_OR_HISTORY, this::downLineOrHistory);\n+        addBuiltinWidget(widgets, DOWN_LINE_OR_SEARCH, this::downLineOrSearch);\n+        addBuiltinWidget(widgets, DOWN_HISTORY, this::downHistory);\n+        addBuiltinWidget(widgets, EMACS_EDITING_MODE, this::emacsEditingMode);\n+        addBuiltinWidget(widgets, EMACS_BACKWARD_WORD, this::emacsBackwardWord);\n+        addBuiltinWidget(widgets, EMACS_FORWARD_WORD, this::emacsForwardWord);\n+        addBuiltinWidget(widgets, END_OF_BUFFER_OR_HISTORY, this::endOfBufferOrHistory);\n+        addBuiltinWidget(widgets, END_OF_HISTORY, this::endOfHistory);\n+        addBuiltinWidget(widgets, END_OF_LINE, this::endOfLine);\n+        addBuiltinWidget(widgets, END_OF_LINE_HIST, this::endOfLineHist);\n+        addBuiltinWidget(widgets, EXCHANGE_POINT_AND_MARK, this::exchangePointAndMark);\n+        addBuiltinWidget(widgets, EXPAND_HISTORY, this::expandHistory);\n+        addBuiltinWidget(widgets, EXPAND_OR_COMPLETE, this::expandOrComplete);\n+        addBuiltinWidget(widgets, EXPAND_OR_COMPLETE_PREFIX, this::expandOrCompletePrefix);\n+        addBuiltinWidget(widgets, EXPAND_WORD, this::expandWord);\n+        addBuiltinWidget(widgets, FRESH_LINE, this::freshLine);\n+        addBuiltinWidget(widgets, FORWARD_CHAR, this::forwardChar);\n+        addBuiltinWidget(widgets, FORWARD_WORD, this::forwardWord);\n+        addBuiltinWidget(widgets, HISTORY_INCREMENTAL_SEARCH_BACKWARD, this::historyIncrementalSearchBackward);\n+        addBuiltinWidget(widgets, HISTORY_INCREMENTAL_SEARCH_FORWARD, this::historyIncrementalSearchForward);\n+        addBuiltinWidget(widgets, HISTORY_SEARCH_BACKWARD, this::historySearchBackward);\n+        addBuiltinWidget(widgets, HISTORY_SEARCH_FORWARD, this::historySearchForward);\n+        addBuiltinWidget(widgets, INSERT_CLOSE_CURLY, this::insertCloseCurly);\n+        addBuiltinWidget(widgets, INSERT_CLOSE_PAREN, this::insertCloseParen);\n+        addBuiltinWidget(widgets, INSERT_CLOSE_SQUARE, this::insertCloseSquare);\n+        addBuiltinWidget(widgets, INSERT_COMMENT, this::insertComment);\n+        addBuiltinWidget(widgets, KILL_BUFFER, this::killBuffer);\n+        addBuiltinWidget(widgets, KILL_LINE, this::killLine);\n+        addBuiltinWidget(widgets, KILL_REGION, this::killRegion);\n+        addBuiltinWidget(widgets, KILL_WHOLE_LINE, this::killWholeLine);\n+        addBuiltinWidget(widgets, KILL_WORD, this::killWord);\n+        addBuiltinWidget(widgets, LIST_CHOICES, this::listChoices);\n+        addBuiltinWidget(widgets, MENU_COMPLETE, this::menuComplete);\n+        addBuiltinWidget(widgets, MENU_EXPAND_OR_COMPLETE, this::menuExpandOrComplete);\n+        addBuiltinWidget(widgets, NEG_ARGUMENT, this::negArgument);\n+        addBuiltinWidget(widgets, OVERWRITE_MODE, this::overwriteMode);\n+\/\/        addBuiltinWidget(widgets, QUIT, this::quit);\n+        addBuiltinWidget(widgets, QUOTED_INSERT, this::quotedInsert);\n+        addBuiltinWidget(widgets, REDISPLAY, this::redisplay);\n+        addBuiltinWidget(widgets, REDRAW_LINE, this::redrawLine);\n+        addBuiltinWidget(widgets, REDO, this::redo);\n+        addBuiltinWidget(widgets, SELF_INSERT, this::selfInsert);\n+        addBuiltinWidget(widgets, SELF_INSERT_UNMETA, this::selfInsertUnmeta);\n+        addBuiltinWidget(widgets, SEND_BREAK, this::sendBreak);\n+        addBuiltinWidget(widgets, SET_MARK_COMMAND, this::setMarkCommand);\n+        addBuiltinWidget(widgets, TRANSPOSE_CHARS, this::transposeChars);\n+        addBuiltinWidget(widgets, TRANSPOSE_WORDS, this::transposeWords);\n+        addBuiltinWidget(widgets, UNDEFINED_KEY, this::undefinedKey);\n+        addBuiltinWidget(widgets, UNIVERSAL_ARGUMENT, this::universalArgument);\n+        addBuiltinWidget(widgets, UNDO, this::undo);\n+        addBuiltinWidget(widgets, UP_CASE_WORD, this::upCaseWord);\n+        addBuiltinWidget(widgets, UP_HISTORY, this::upHistory);\n+        addBuiltinWidget(widgets, UP_LINE, this::upLine);\n+        addBuiltinWidget(widgets, UP_LINE_OR_HISTORY, this::upLineOrHistory);\n+        addBuiltinWidget(widgets, UP_LINE_OR_SEARCH, this::upLineOrSearch);\n+        addBuiltinWidget(widgets, VI_ADD_EOL, this::viAddEol);\n+        addBuiltinWidget(widgets, VI_ADD_NEXT, this::viAddNext);\n+        addBuiltinWidget(widgets, VI_BACKWARD_CHAR, this::viBackwardChar);\n+        addBuiltinWidget(widgets, VI_BACKWARD_DELETE_CHAR, this::viBackwardDeleteChar);\n+        addBuiltinWidget(widgets, VI_BACKWARD_BLANK_WORD, this::viBackwardBlankWord);\n+        addBuiltinWidget(widgets, VI_BACKWARD_BLANK_WORD_END, this::viBackwardBlankWordEnd);\n+        addBuiltinWidget(widgets, VI_BACKWARD_KILL_WORD, this::viBackwardKillWord);\n+        addBuiltinWidget(widgets, VI_BACKWARD_WORD, this::viBackwardWord);\n+        addBuiltinWidget(widgets, VI_BACKWARD_WORD_END, this::viBackwardWordEnd);\n+        addBuiltinWidget(widgets, VI_BEGINNING_OF_LINE, this::viBeginningOfLine);\n+        addBuiltinWidget(widgets, VI_CMD_MODE, this::viCmdMode);\n+        addBuiltinWidget(widgets, VI_DIGIT_OR_BEGINNING_OF_LINE, this::viDigitOrBeginningOfLine);\n+        addBuiltinWidget(widgets, VI_DOWN_LINE_OR_HISTORY, this::viDownLineOrHistory);\n+        addBuiltinWidget(widgets, VI_CHANGE, this::viChange);\n+        addBuiltinWidget(widgets, VI_CHANGE_EOL, this::viChangeEol);\n+        addBuiltinWidget(widgets, VI_CHANGE_WHOLE_LINE, this::viChangeWholeLine);\n+        addBuiltinWidget(widgets, VI_DELETE_CHAR, this::viDeleteChar);\n+        addBuiltinWidget(widgets, VI_DELETE, this::viDelete);\n+        addBuiltinWidget(widgets, VI_END_OF_LINE, this::viEndOfLine);\n+        addBuiltinWidget(widgets, VI_KILL_EOL, this::viKillEol);\n+        addBuiltinWidget(widgets, VI_FIRST_NON_BLANK, this::viFirstNonBlank);\n+        addBuiltinWidget(widgets, VI_FIND_NEXT_CHAR, this::viFindNextChar);\n+        addBuiltinWidget(widgets, VI_FIND_NEXT_CHAR_SKIP, this::viFindNextCharSkip);\n+        addBuiltinWidget(widgets, VI_FIND_PREV_CHAR, this::viFindPrevChar);\n+        addBuiltinWidget(widgets, VI_FIND_PREV_CHAR_SKIP, this::viFindPrevCharSkip);\n+        addBuiltinWidget(widgets, VI_FORWARD_BLANK_WORD, this::viForwardBlankWord);\n+        addBuiltinWidget(widgets, VI_FORWARD_BLANK_WORD_END, this::viForwardBlankWordEnd);\n+        addBuiltinWidget(widgets, VI_FORWARD_CHAR, this::viForwardChar);\n+        addBuiltinWidget(widgets, VI_FORWARD_WORD, this::viForwardWord);\n+        addBuiltinWidget(widgets, VI_FORWARD_WORD, this::viForwardWord);\n+        addBuiltinWidget(widgets, VI_FORWARD_WORD_END, this::viForwardWordEnd);\n+        addBuiltinWidget(widgets, VI_HISTORY_SEARCH_BACKWARD, this::viHistorySearchBackward);\n+        addBuiltinWidget(widgets, VI_HISTORY_SEARCH_FORWARD, this::viHistorySearchForward);\n+        addBuiltinWidget(widgets, VI_INSERT, this::viInsert);\n+        addBuiltinWidget(widgets, VI_INSERT_BOL, this::viInsertBol);\n+        addBuiltinWidget(widgets, VI_INSERT_COMMENT, this::viInsertComment);\n+        addBuiltinWidget(widgets, VI_JOIN, this::viJoin);\n+        addBuiltinWidget(widgets, VI_KILL_LINE, this::viKillWholeLine);\n+        addBuiltinWidget(widgets, VI_MATCH_BRACKET, this::viMatchBracket);\n+        addBuiltinWidget(widgets, VI_OPEN_LINE_ABOVE, this::viOpenLineAbove);\n+        addBuiltinWidget(widgets, VI_OPEN_LINE_BELOW, this::viOpenLineBelow);\n+        addBuiltinWidget(widgets, VI_PUT_AFTER, this::viPutAfter);\n+        addBuiltinWidget(widgets, VI_PUT_BEFORE, this::viPutBefore);\n+        addBuiltinWidget(widgets, VI_REPEAT_FIND, this::viRepeatFind);\n+        addBuiltinWidget(widgets, VI_REPEAT_SEARCH, this::viRepeatSearch);\n+        addBuiltinWidget(widgets, VI_REPLACE_CHARS, this::viReplaceChars);\n+        addBuiltinWidget(widgets, VI_REV_REPEAT_FIND, this::viRevRepeatFind);\n+        addBuiltinWidget(widgets, VI_REV_REPEAT_SEARCH, this::viRevRepeatSearch);\n+        addBuiltinWidget(widgets, VI_SWAP_CASE, this::viSwapCase);\n+        addBuiltinWidget(widgets, VI_UP_LINE_OR_HISTORY, this::viUpLineOrHistory);\n+        addBuiltinWidget(widgets, VI_YANK, this::viYankTo);\n+        addBuiltinWidget(widgets, VI_YANK_WHOLE_LINE, this::viYankWholeLine);\n+        addBuiltinWidget(widgets, VISUAL_LINE_MODE, this::visualLineMode);\n+        addBuiltinWidget(widgets, VISUAL_MODE, this::visualMode);\n+        addBuiltinWidget(widgets, WHAT_CURSOR_POSITION, this::whatCursorPosition);\n+        addBuiltinWidget(widgets, YANK, this::yank);\n+        addBuiltinWidget(widgets, YANK_POP, this::yankPop);\n+        addBuiltinWidget(widgets, MOUSE, this::mouse);\n+        addBuiltinWidget(widgets, BEGIN_PASTE, this::beginPaste);\n+        addBuiltinWidget(widgets, FOCUS_IN, this::focusIn);\n+        addBuiltinWidget(widgets, FOCUS_OUT, this::focusOut);\n@@ -3492,0 +3618,17 @@\n+    private void addBuiltinWidget(Map<String, Widget> widgets, String name, Widget widget) {\n+        widgets.put(name, namedWidget(name, widget));\n+    }\n+\n+    private Widget namedWidget(String name, Widget widget) {\n+        return new Widget() {\n+            @Override\n+            public String toString() {\n+                return name;\n+            }\n+            @Override\n+            public boolean apply() {\n+                return widget.apply();\n+            }\n+        };\n+    }\n+\n@@ -3497,5 +3640,3 @@\n-    protected synchronized void redisplay(boolean flush) {\n-        if (skipRedisplay) {\n-            skipRedisplay = false;\n-            return;\n-        }\n+    protected void redisplay(boolean flush) {\n+        try {\n+            lock.lock();\n@@ -3503,4 +3644,4 @@\n-        Status status = Status.getStatus(terminal, false);\n-        if (status != null) {\n-            status.redraw();\n-        }\n+            if (skipRedisplay) {\n+                skipRedisplay = false;\n+                return;\n+            }\n@@ -3508,2 +3649,4 @@\n-        if (size.getRows() > 0 && size.getRows() < MIN_ROWS) {\n-            AttributedStringBuilder sb = new AttributedStringBuilder().tabs(TAB_WIDTH);\n+            Status status = Status.getStatus(terminal, false);\n+            if (status != null) {\n+                status.redraw();\n+            }\n@@ -3511,3 +3654,2 @@\n-            sb.append(prompt);\n-            concat(getHighlightedBuffer(buf.toString()).columnSplitLength(Integer.MAX_VALUE), sb);\n-            AttributedString full = sb.toAttributedString();\n+            if (size.getRows() > 0 && size.getRows() < MIN_ROWS) {\n+                AttributedStringBuilder sb = new AttributedStringBuilder().tabs(TAB_WIDTH);\n@@ -3515,5 +3657,40 @@\n-            sb.setLength(0);\n-            sb.append(prompt);\n-            String line = buf.upToCursor();\n-            if(maskingCallback != null) {\n-                line = maskingCallback.display(line);\n+                sb.append(prompt);\n+                concat(getHighlightedBuffer(buf.toString()).columnSplitLength(Integer.MAX_VALUE), sb);\n+                AttributedString full = sb.toAttributedString();\n+\n+                sb.setLength(0);\n+                sb.append(prompt);\n+                String line = buf.upToCursor();\n+                if (maskingCallback != null) {\n+                    line = maskingCallback.display(line);\n+                }\n+\n+                concat(new AttributedString(line).columnSplitLength(Integer.MAX_VALUE), sb);\n+                AttributedString toCursor = sb.toAttributedString();\n+\n+                int w = WCWidth.wcwidth('\\u2026');\n+                int width = size.getColumns();\n+                int cursor = toCursor.columnLength();\n+                int inc = width \/ 2 + 1;\n+                while (cursor <= smallTerminalOffset + w) {\n+                    smallTerminalOffset -= inc;\n+                }\n+                while (cursor >= smallTerminalOffset + width - w) {\n+                    smallTerminalOffset += inc;\n+                }\n+                if (smallTerminalOffset > 0) {\n+                    sb.setLength(0);\n+                    sb.append(\"\\u2026\");\n+                    sb.append(full.columnSubSequence(smallTerminalOffset + w, Integer.MAX_VALUE));\n+                    full = sb.toAttributedString();\n+                }\n+                int length = full.columnLength();\n+                if (length >= smallTerminalOffset + width) {\n+                    sb.setLength(0);\n+                    sb.append(full.columnSubSequence(0, width - w));\n+                    sb.append(\"\\u2026\");\n+                    full = sb.toAttributedString();\n+                }\n+\n+                display.update(Collections.singletonList(full), cursor - smallTerminalOffset, flush);\n+                return;\n@@ -3522,2 +3699,2 @@\n-            concat(new AttributedString(line).columnSplitLength(Integer.MAX_VALUE), sb);\n-            AttributedString toCursor = sb.toAttributedString();\n+            List<AttributedString> secondaryPrompts = new ArrayList<>();\n+            AttributedString full = getDisplayedBufferWithPrompts(secondaryPrompts);\n@@ -3525,6 +3702,6 @@\n-            int w = WCWidth.wcwidth('\\u2026');\n-            int width = size.getColumns();\n-            int cursor = toCursor.columnLength();\n-            int inc = width \/2 + 1;\n-            while (cursor <= smallTerminalOffset + w) {\n-                smallTerminalOffset -= inc;\n+            List<AttributedString> newLines;\n+            if (size.getColumns() <= 0) {\n+                newLines = new ArrayList<>();\n+                newLines.add(full);\n+            } else {\n+                newLines = full.columnSplitLength(size.getColumns(), true, display.delayLineWrap());\n@@ -3532,2 +3709,6 @@\n-            while (cursor >= smallTerminalOffset + width - w) {\n-                smallTerminalOffset += inc;\n+\n+            List<AttributedString> rightPromptLines;\n+            if (rightPrompt.length() == 0 || size.getColumns() <= 0) {\n+                rightPromptLines = new ArrayList<>();\n+            } else {\n+                rightPromptLines = rightPrompt.columnSplitLength(size.getColumns());\n@@ -3535,5 +3716,2 @@\n-            if (smallTerminalOffset > 0) {\n-                sb.setLength(0);\n-                sb.append(\"\\u2026\");\n-                sb.append(full.columnSubSequence(smallTerminalOffset + w, Integer.MAX_VALUE));\n-                full = sb.toAttributedString();\n+            while (newLines.size() < rightPromptLines.size()) {\n+                newLines.add(new AttributedString(\"\"));\n@@ -3541,6 +3719,3 @@\n-            int length = full.columnLength();\n-            if (length >= smallTerminalOffset + width) {\n-                sb.setLength(0);\n-                sb.append(full.columnSubSequence(0, width - w));\n-                sb.append(\"\\u2026\");\n-                full = sb.toAttributedString();\n+            for (int i = 0; i < rightPromptLines.size(); i++) {\n+                AttributedString line = rightPromptLines.get(i);\n+                newLines.set(i, addRightPrompt(line, newLines.get(i)));\n@@ -3549,36 +3724,17 @@\n-            display.update(Collections.singletonList(full), cursor - smallTerminalOffset, flush);\n-            return;\n-        }\n-\n-        List<AttributedString> secondaryPrompts = new ArrayList<>();\n-        AttributedString full = getDisplayedBufferWithPrompts(secondaryPrompts);\n-\n-        List<AttributedString> newLines;\n-        if (size.getColumns() <= 0) {\n-            newLines = new ArrayList<>();\n-            newLines.add(full);\n-        } else {\n-            newLines = full.columnSplitLength(size.getColumns(), true, display.delayLineWrap());\n-        }\n-\n-        List<AttributedString> rightPromptLines;\n-        if (rightPrompt.length() == 0 || size.getColumns() <= 0) {\n-            rightPromptLines = new ArrayList<>();\n-        } else {\n-            rightPromptLines = rightPrompt.columnSplitLength(size.getColumns());\n-        }\n-        while (newLines.size() < rightPromptLines.size()) {\n-            newLines.add(new AttributedString(\"\"));\n-        }\n-        for (int i = 0; i < rightPromptLines.size(); i++) {\n-            AttributedString line = rightPromptLines.get(i);\n-            newLines.set(i, addRightPrompt(line, newLines.get(i)));\n-        }\n-\n-        int cursorPos = -1;\n-        if (size.getColumns() > 0) {\n-            AttributedStringBuilder sb = new AttributedStringBuilder().tabs(TAB_WIDTH);\n-            sb.append(prompt);\n-            String buffer = buf.upToCursor();\n-            if (maskingCallback != null) {\n-                buffer = maskingCallback.display(buffer);\n+            int cursorPos = -1;\n+            int cursorNewLinesId = -1;\n+            int cursorColPos = -1;\n+            if (size.getColumns() > 0) {\n+                AttributedStringBuilder sb = new AttributedStringBuilder().tabs(TAB_WIDTH);\n+                sb.append(prompt);\n+                String buffer = buf.upToCursor();\n+                if (maskingCallback != null) {\n+                    buffer = maskingCallback.display(buffer);\n+                }\n+                sb.append(insertSecondaryPrompts(new AttributedString(buffer), secondaryPrompts, false));\n+                List<AttributedString> promptLines = sb.columnSplitLength(size.getColumns(), false, display.delayLineWrap());\n+                if (!promptLines.isEmpty()) {\n+                    cursorNewLinesId = promptLines.size() - 1;\n+                    cursorColPos = promptLines.get(promptLines.size() - 1).columnLength();\n+                    cursorPos = size.cursorPos(cursorNewLinesId, cursorColPos);\n+                }\n@@ -3586,5 +3742,33 @@\n-            sb.append(insertSecondaryPrompts(new AttributedString(buffer), secondaryPrompts, false));\n-            List<AttributedString> promptLines = sb.columnSplitLength(size.getColumns(), false, display.delayLineWrap());\n-            if (!promptLines.isEmpty()) {\n-                cursorPos = size.cursorPos(promptLines.size() - 1,\n-                                           promptLines.get(promptLines.size() - 1).columnLength());\n+\n+            List<AttributedString> newLinesToDisplay = new ArrayList<>();\n+            int displaySize = size.getRows() - (status != null ? status.size() : 0);\n+            if (newLines.size() > displaySize && !isTerminalDumb()) {\n+                StringBuilder sb = new StringBuilder(\">....\");\n+                \/\/ blanks are needed when displaying command completion candidate list\n+                for (int i = sb.toString().length(); i < size.getColumns(); i++) {\n+                    sb.append(\" \");\n+                }\n+                AttributedString partialCommandInfo = new AttributedString(sb.toString());\n+                int lineId = newLines.size() - displaySize + 1;\n+                int endId = displaySize;\n+                int startId = 1;\n+                if (lineId  > cursorNewLinesId) {\n+                    lineId = cursorNewLinesId;\n+                    endId = displaySize - 1;\n+                    startId = 0;\n+                } else {\n+                    newLinesToDisplay.add(partialCommandInfo);\n+                }\n+                int cursorRowPos = 0;\n+                for (int i = startId; i < endId; i++) {\n+                    if (cursorNewLinesId == lineId) {\n+                        cursorRowPos = i;\n+                    }\n+                    newLinesToDisplay.add(newLines.get(lineId++));\n+                }\n+                if (startId == 0) {\n+                    newLinesToDisplay.add(partialCommandInfo);\n+                }\n+                cursorPos = size.cursorPos(cursorRowPos, cursorColPos);\n+            } else {\n+                newLinesToDisplay = newLines;\n@@ -3592,0 +3776,3 @@\n+            display.update(newLinesToDisplay, cursorPos, flush);\n+        } finally {\n+            lock.unlock();\n@@ -3593,2 +3780,0 @@\n-\n-        display.update(newLines, cursorPos, flush);\n@@ -3659,20 +3844,20 @@\n-                       case '{':\n-                       case '}':\n-                           String str = sb.toString();\n-                           AttributedString astr;\n-                           if (!isHidden) {\n-                               astr = AttributedString.fromAnsi(str);\n-                               cols += astr.columnLength();\n-                           } else {\n-                               astr = new AttributedString(str, AttributedStyle.HIDDEN);\n-                           }\n-                           if (padPartIndex == parts.size()) {\n-                               padPartString = sb;\n-                               if (i < plen) {\n-                                   sb = new StringBuilder();\n-                               }\n-                           } else {\n-                               sb.setLength(0);\n-                           }\n-                           parts.add(astr);\n-                           isHidden = ch == '{';\n+                        case '{':\n+                        case '}':\n+                            String str = sb.toString();\n+                            AttributedString astr;\n+                            if (!isHidden) {\n+                                astr = AttributedString.fromAnsi(str);\n+                                cols += astr.columnLength();\n+                            } else {\n+                                astr = new AttributedString(str, AttributedStyle.HIDDEN);\n+                            }\n+                            if (padPartIndex == parts.size()) {\n+                                padPartString = sb;\n+                                if (i < plen) {\n+                                    sb = new StringBuilder();\n+                                }\n+                            } else {\n+                                sb.setLength(0);\n+                            }\n+                            parts.add(astr);\n+                            isHidden = ch == '{';\n@@ -4051,0 +4236,59 @@\n+        size.copy(terminal.getSize());\n+        try {\n+            \/\/ If we only need to display the list, do it now\n+            if (lst == CompletionType.List) {\n+                List<Candidate> possible = matching.entrySet().stream()\n+                        .flatMap(e -> e.getValue().stream())\n+                        .collect(Collectors.toList());\n+                doList(possible, line.word(), false, line::escape);\n+                return !possible.isEmpty();\n+            }\n+\n+            \/\/ Check if there's a single possible match\n+            Candidate completion = null;\n+            \/\/ If there's a single possible completion\n+            if (matching.size() == 1) {\n+                completion = matching.values().stream().flatMap(Collection::stream)\n+                        .findFirst().orElse(null);\n+            }\n+            \/\/ Or if RECOGNIZE_EXACT is set, try to find an exact match\n+            else if (isSet(Option.RECOGNIZE_EXACT)) {\n+                completion = matching.values().stream().flatMap(Collection::stream)\n+                        .filter(Candidate::complete)\n+                        .filter(c -> exact.test(c.value()))\n+                        .findFirst().orElse(null);\n+            }\n+            \/\/ Complete and exit\n+            if (completion != null && !completion.value().isEmpty()) {\n+                if (prefix) {\n+                    buf.backspace(line.rawWordCursor());\n+                } else {\n+                    buf.move(line.rawWordLength() - line.rawWordCursor());\n+                    buf.backspace(line.rawWordLength());\n+                }\n+                buf.write(line.escape(completion.value(), completion.complete()));\n+                if (completion.complete()) {\n+                    if (buf.currChar() != ' ') {\n+                        buf.write(\" \");\n+                    } else {\n+                        buf.move(1);\n+                    }\n+                }\n+                if (completion.suffix() != null) {\n+                    redisplay();\n+                    Binding op = readBinding(getKeys());\n+                    if (op != null) {\n+                        String chars = getString(REMOVE_SUFFIX_CHARS, DEFAULT_REMOVE_SUFFIX_CHARS);\n+                        String ref = op instanceof Reference ? ((Reference) op).name() : null;\n+                        if (SELF_INSERT.equals(ref) && chars.indexOf(getLastBinding().charAt(0)) >= 0\n+                                || ACCEPT_LINE.equals(ref)) {\n+                            buf.backspace(completion.suffix().length());\n+                            if (getLastBinding().charAt(0) != ' ') {\n+                                buf.write(' ');\n+                            }\n+                        }\n+                        pushBackBinding(true);\n+                    }\n+                }\n+                return true;\n+            }\n@@ -4052,2 +4296,0 @@\n-        \/\/ If we only need to display the list, do it now\n-        if (lst == CompletionType.List) {\n@@ -4057,20 +4299,10 @@\n-            doList(possible, line.word(), false, line::escape);\n-            return !possible.isEmpty();\n-        }\n-\n-        \/\/ Check if there's a single possible match\n-        Candidate completion = null;\n-        \/\/ If there's a single possible completion\n-        if (matching.size() == 1) {\n-            completion = matching.values().stream().flatMap(Collection::stream)\n-                    .findFirst().orElse(null);\n-        }\n-        \/\/ Or if RECOGNIZE_EXACT is set, try to find an exact match\n-        else if (isSet(Option.RECOGNIZE_EXACT)) {\n-            completion = matching.values().stream().flatMap(Collection::stream)\n-                    .filter(Candidate::complete)\n-                    .filter(c -> exact.test(c.value()))\n-                    .findFirst().orElse(null);\n-        }\n-        \/\/ Complete and exit\n-        if (completion != null && !completion.value().isEmpty()) {\n+\n+            if (useMenu) {\n+                buf.move(line.word().length() - line.wordCursor());\n+                buf.backspace(line.word().length());\n+                doMenu(possible, line.word(), line::escape);\n+                return true;\n+            }\n+\n+            \/\/ Find current word and move to end\n+            String current;\n@@ -4078,1 +4310,1 @@\n-                buf.backspace(line.rawWordCursor());\n+                current = line.word().substring(0, line.wordCursor());\n@@ -4080,0 +4312,1 @@\n+                current = line.word();\n@@ -4081,1 +4314,0 @@\n-                buf.backspace(line.rawWordLength());\n@@ -4083,7 +4315,5 @@\n-            buf.write(line.escape(completion.value(), completion.complete()));\n-            if (completion.complete()) {\n-                if (buf.currChar() != ' ') {\n-                    buf.write(\" \");\n-                } else {\n-                    buf.move(1);\n-                }\n+            \/\/ Now, we need to find the unambiguous completion\n+            \/\/ TODO: need to find common suffix\n+            String commonPrefix = null;\n+            for (String key : matching.keySet()) {\n+                commonPrefix = commonPrefix == null ? key : getCommonStart(commonPrefix, key, caseInsensitive);\n@@ -4091,12 +4321,10 @@\n-            if (completion.suffix() != null) {\n-                redisplay();\n-                Binding op = readBinding(getKeys());\n-                if (op != null) {\n-                    String chars = getString(REMOVE_SUFFIX_CHARS, DEFAULT_REMOVE_SUFFIX_CHARS);\n-                    String ref = op instanceof Reference ? ((Reference) op).name() : null;\n-                    if (SELF_INSERT.equals(ref) && chars.indexOf(getLastBinding().charAt(0)) >= 0\n-                            || ACCEPT_LINE.equals(ref)) {\n-                        buf.backspace(completion.suffix().length());\n-                        if (getLastBinding().charAt(0) != ' ') {\n-                            buf.write(' ');\n-                        }\n+            boolean hasUnambiguous = commonPrefix.startsWith(current) && !commonPrefix.equals(current);\n+\n+            if (hasUnambiguous) {\n+                buf.backspace(line.rawWordLength());\n+                buf.write(line.escape(commonPrefix, false));\n+                current = commonPrefix;\n+                if ((!isSet(Option.AUTO_LIST) && isSet(Option.AUTO_MENU))\n+                        || (isSet(Option.AUTO_LIST) && isSet(Option.LIST_AMBIGUOUS))) {\n+                    if (!nextBindingIsComplete()) {\n+                        return true;\n@@ -4104,1 +4332,0 @@\n-                    pushBackBinding(true);\n@@ -4107,37 +4334,2 @@\n-            return true;\n-        }\n-\n-        List<Candidate> possible = matching.entrySet().stream()\n-                .flatMap(e -> e.getValue().stream())\n-                .collect(Collectors.toList());\n-\n-        if (useMenu) {\n-            buf.move(line.word().length() - line.wordCursor());\n-            buf.backspace(line.word().length());\n-            doMenu(possible, line.word(), line::escape);\n-            return true;\n-        }\n-\n-        \/\/ Find current word and move to end\n-        String current;\n-        if (prefix) {\n-            current = line.word().substring(0, line.wordCursor());\n-        } else {\n-            current = line.word();\n-            buf.move(line.rawWordLength() - line.rawWordCursor());\n-        }\n-        \/\/ Now, we need to find the unambiguous completion\n-        \/\/ TODO: need to find common suffix\n-        String commonPrefix = null;\n-        for (String key : matching.keySet()) {\n-            commonPrefix = commonPrefix == null ? key : getCommonStart(commonPrefix, key, caseInsensitive);\n-        }\n-        boolean hasUnambiguous = commonPrefix.startsWith(current) && !commonPrefix.equals(current);\n-\n-        if (hasUnambiguous) {\n-            buf.backspace(line.rawWordLength());\n-            buf.write(line.escape(commonPrefix, false));\n-            current = commonPrefix;\n-            if ((!isSet(Option.AUTO_LIST) && isSet(Option.AUTO_MENU))\n-                    || (isSet(Option.AUTO_LIST) && isSet(Option.LIST_AMBIGUOUS))) {\n-                if (!nextBindingIsComplete()) {\n+            if (isSet(Option.AUTO_LIST)) {\n+                if (!doList(possible, current, true, line::escape)) {\n@@ -4147,4 +4339,3 @@\n-        }\n-        if (isSet(Option.AUTO_LIST)) {\n-            if (!doList(possible, current, true, line::escape)) {\n-                return true;\n+            if (isSet(Option.AUTO_MENU)) {\n+                buf.backspace(current.length());\n+                doMenu(possible, line.word(), line::escape);\n@@ -4152,0 +4343,3 @@\n+            return true;\n+        } finally {\n+            size.copy(terminal.getBufferSize());\n@@ -4153,5 +4347,0 @@\n-        if (isSet(Option.AUTO_MENU)) {\n-            buf.backspace(current.length());\n-            doMenu(possible, line.word(), line::escape);\n-        }\n-        return true;\n@@ -4537,1 +4726,1 @@\n-            post = () -> new AttributedString(getAppName() + \": do you wish to see to see all \" + possible.size()\n+            post = () -> new AttributedString(getAppName() + \": do you wish to see all \" + possible.size()\n@@ -4589,1 +4778,1 @@\n-            Binding b = bindingReader.readBinding(getKeys());\n+            Binding b = doReadBinding(getKeys(), null);\n@@ -4734,1 +4923,1 @@\n-        if (maxWidth <= 0) {\n+        if (maxWidth <= 0 || width <= 0) {\n@@ -4988,1 +5177,3 @@\n-                end++;\n+                if (end < buf.length()) {\n+                    end++;\n+                }\n@@ -5191,1 +5382,1 @@\n-            Object b = bindingReader.readBinding(keyMap);\n+            Object b = doReadBinding(keyMap, null);\n@@ -5230,0 +5421,5 @@\n+            \/\/ ConEMU extended fonts support\n+            if (AbstractWindowsTerminal.TYPE_WINDOWS_CONEMU.equals(terminal.getType())\n+                    && !Boolean.getBoolean(\"org.jline.terminal.conemu.disable-activate\")) {\n+                terminal.writer().write(\"\\u001b[9999E\");\n+            }\n@@ -5361,0 +5557,1 @@\n+        bindKeys(emacs);\n@@ -5375,0 +5572,1 @@\n+        bind(emacs, ACCEPT_LINE_AND_DOWN_HISTORY,           ctrl('O'));\n@@ -5418,0 +5616,1 @@\n+        bind(emacs, ACCEPT_AND_HOLD,                        alt('a'));\n@@ -5442,0 +5641,1 @@\n+        bindKeys(viins);\n@@ -5641,0 +5841,8 @@\n+    private void bindKeys(KeyMap<Binding> emacs) {\n+        Widget beep = namedWidget(\"beep\", this::beep);\n+        Stream.of(Capability.values())\n+                .filter(c -> c.name().startsWith(\"key_\"))\n+                .map(this::key)\n+                .forEach(k -> bind(emacs, beep, k));\n+    }\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/LineReaderImpl.java","additions":605,"deletions":397,"binary":false,"changes":1002,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/ReaderUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/SimpleMaskingCallback.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/UndoTree.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/AggregateCompleter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/ArgumentCompleter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/EnumCompleter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/FileNameCompleter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/NullCompleter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -46,0 +46,5 @@\n+    public StringsCompleter(Candidate ... candidates) {\n+        assert candidates != null;\n+        this.candidates.addAll(Arrays.asList(candidates));\n+    }\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/StringsCompleter.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/completer\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -13,0 +13,1 @@\n+import java.time.DateTimeException;\n@@ -39,2 +40,1 @@\n-    private int lastLoaded = 0;\n-    private int nbEntriesInFile = 0;\n+    private Map<String, HistoryFileData> historyFiles = new HashMap<>();\n@@ -71,1 +71,1 @@\n-            catch (IOException e) {\n+            catch (IllegalArgumentException | IOException e) {\n@@ -87,2 +87,1 @@\n-                        lastLoaded = items.size();\n-                        nbEntriesInFile = lastLoaded;\n+                        setHistoryFileData(path, new HistoryFileData(items.size(), items.size()));\n@@ -92,1 +91,1 @@\n-            } catch (IOException e) {\n+            } catch (IllegalArgumentException | IOException e) {\n@@ -100,0 +99,69 @@\n+    @Override\n+    public void read(Path file, boolean incremental) throws IOException {\n+        Path path = file != null ? file : getPath();\n+        if (path != null) {\n+            try {\n+                if (Files.exists(path)) {\n+                    Log.trace(\"Reading history from: \", path);\n+                    try (BufferedReader reader = Files.newBufferedReader(path)) {\n+                        reader.lines().forEach(line -> addHistoryLine(path, line, incremental));\n+                        setHistoryFileData(path, new HistoryFileData(items.size(), items.size()));\n+                        maybeResize();\n+                    }\n+                }\n+            } catch (IllegalArgumentException | IOException e) {\n+                Log.debug(\"Failed to read history; clearing\", e);\n+                internalClear();\n+                throw e;\n+            }\n+        }\n+    }\n+\n+    private String doHistoryFileDataKey (Path path){\n+        return path != null ? path.toAbsolutePath().toString() : null;\n+    }\n+\n+    private HistoryFileData getHistoryFileData(Path path) {\n+        String key = doHistoryFileDataKey(path);\n+        if (!historyFiles.containsKey(key)){\n+            historyFiles.put(key, new HistoryFileData());\n+        }\n+        return historyFiles.get(key);\n+    }\n+\n+    private void setHistoryFileData(Path path, HistoryFileData historyFileData) {\n+        historyFiles.put(doHistoryFileDataKey(path), historyFileData);\n+    }\n+\n+    private boolean isLineReaderHistory (Path path) throws IOException {\n+        Path lrp = getPath();\n+        if (lrp == null) {\n+            if (path != null) {\n+                return false;\n+            } else {\n+                return true;\n+            }\n+        }\n+        return Files.isSameFile(lrp, path);\n+    }\n+\n+    private void setLastLoaded(Path path, int lastloaded){\n+        getHistoryFileData(path).setLastLoaded(lastloaded);\n+    }\n+\n+    private void setEntriesInFile(Path path, int entriesInFile){\n+        getHistoryFileData(path).setEntriesInFile(entriesInFile);\n+    }\n+\n+    private void incEntriesInFile(Path path, int amount){\n+        getHistoryFileData(path).incEntriesInFile(amount);\n+    }\n+\n+    private int getLastLoaded(Path path){\n+        return getHistoryFileData(path).getLastLoaded();\n+    }\n+\n+    private int getEntriesInFile(Path path){\n+        return getHistoryFileData(path).getEntriesInFile();\n+    }\n+\n@@ -101,0 +169,4 @@\n+        addHistoryLine(path, line, false);\n+    }\n+\n+    protected void addHistoryLine(Path path, String line, boolean checkDuplicates) {\n@@ -103,0 +175,3 @@\n+            final String badHistoryFileSyntax = \"Bad history file syntax! \" +\n+                \"The history file `\" + path + \"` may be an older history: \" +\n+                \"please remove it or use a different history file.\";\n@@ -104,3 +179,7 @@\n-                throw new IllegalArgumentException(\"Bad history file syntax! \" +\n-                        \"The history file `\" + path + \"` may be an older history: \" +\n-                        \"please remove it or use a different history file.\");\n+                throw new IllegalArgumentException(badHistoryFileSyntax);\n+            }\n+            Instant time;\n+            try {\n+                time = Instant.ofEpochMilli(Long.parseLong(line.substring(0, idx)));\n+            } catch (DateTimeException | NumberFormatException e) {\n+                throw new IllegalArgumentException(badHistoryFileSyntax);\n@@ -108,1 +187,1 @@\n-            Instant time = Instant.ofEpochMilli(Long.parseLong(line.substring(0, idx)));\n+\n@@ -110,1 +189,1 @@\n-            internalAdd(time, unescaped);\n+            internalAdd(time, unescaped, checkDuplicates);\n@@ -113,1 +192,1 @@\n-            internalAdd(Instant.now(), unescape(line));\n+            internalAdd(Instant.now(), unescape(line), checkDuplicates);\n@@ -127,0 +206,15 @@\n+    @Override\n+    public void write(Path file, boolean incremental) throws IOException {\n+        Path path = file != null ? file : getPath();\n+        if (path != null && Files.exists(path)) {\n+            path.toFile().delete();\n+        }\n+        internalWrite(path, incremental ? getLastLoaded(path) : 0);\n+    }\n+\n+    @Override\n+    public void append(Path file, boolean incremental) throws IOException {\n+        internalWrite(file != null ? file : getPath(),\n+                      incremental ? getLastLoaded(file) : 0);\n+    }\n+\n@@ -129,1 +223,4 @@\n-        Path path = getPath();\n+        internalWrite(getPath(), getLastLoaded(getPath()));\n+    }\n+\n+    private void internalWrite(Path path, int from) throws IOException {\n@@ -136,1 +233,1 @@\n-                for (Entry entry : items.subList(lastLoaded, items.size())) {\n+                for (Entry entry : items.subList(from, items.size())) {\n@@ -142,2 +239,1 @@\n-            nbEntriesInFile += items.size() - lastLoaded;\n-            \/\/ If we are over 25% max size, trim history file\n+            incEntriesInFile(path, items.size() - from);\n@@ -145,1 +241,1 @@\n-            if (nbEntriesInFile > max + max \/ 4) {\n+            if (getEntriesInFile(path) > max + max \/ 4) {\n@@ -149,1 +245,1 @@\n-        lastLoaded = items.size();\n+        setLastLoaded(path, items.size());\n@@ -175,5 +271,8 @@\n-        internalClear();\n-        offset = allItems.get(0).index();\n-        items.addAll(allItems);\n-        lastLoaded = items.size();\n-        nbEntriesInFile = items.size();\n+        if (isLineReaderHistory(path)) {\n+            internalClear();\n+            offset = allItems.get(0).index();\n+            items.addAll(allItems);\n+            setHistoryFileData(path, new HistoryFileData(items.size(), items.size()));\n+        } else {\n+            setEntriesInFile(path, allItems.size());\n+        }\n@@ -197,2 +296,1 @@\n-        lastLoaded = 0;\n-        nbEntriesInFile = 0;\n+        historyFiles = new HashMap<>();\n@@ -305,0 +403,4 @@\n+        internalAdd(time, line, false);\n+    }\n+\n+    protected void internalAdd(Instant time, String line, boolean checkDuplicates) {\n@@ -306,0 +408,7 @@\n+        if (checkDuplicates) {\n+            for (Entry e: items) {\n+                if (e.line().trim().equals(line.trim())) {\n+                    return;\n+                }\n+            }\n+        }\n@@ -313,1 +422,3 @@\n-            lastLoaded--;\n+            for (HistoryFileData hfd: historyFiles.values()) {\n+                hfd.decLastLoaded();\n+            }\n@@ -506,0 +617,41 @@\n+    private class HistoryFileData {\n+        private int lastLoaded = 0;\n+        private int entriesInFile = 0;\n+\n+        public HistoryFileData() {\n+        }\n+\n+        public HistoryFileData(int lastLoaded, int entriesInFile) {\n+            this.lastLoaded = lastLoaded;\n+            this.entriesInFile = entriesInFile;\n+        }\n+\n+        public int getLastLoaded() {\n+            return lastLoaded;\n+        }\n+\n+        public void setLastLoaded(int lastLoaded) {\n+            this.lastLoaded = lastLoaded;\n+        }\n+\n+        public void decLastLoaded() {\n+            lastLoaded = lastLoaded - 1;\n+            if (lastLoaded < 0) {\n+                lastLoaded = 0;\n+            }\n+        }\n+\n+        public int getEntriesInFile() {\n+            return entriesInFile;\n+        }\n+\n+        public void setEntriesInFile(int entriesInFile) {\n+            this.entriesInFile = entriesInFile;\n+        }\n+\n+        public void incEntriesInFile(int amount) {\n+            entriesInFile = entriesInFile + amount;\n+        }\n+\n+    }\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/history\/DefaultHistory.java","additions":179,"deletions":27,"binary":false,"changes":206,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/history\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/Attributes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/Cursor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/MouseEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/Size.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -114,1 +114,1 @@\n-     * @see #writer();\n+     * @see #writer()\n@@ -186,0 +186,5 @@\n+    \/**\n+     * Retrieve the size of the visible window\n+     * @return the visible terminal size\n+     * @see #getBufferSize()\n+     *\/\n@@ -198,0 +203,16 @@\n+    \/**\n+     * Retrieve the size of the window buffer.\n+     * Some terminals can be configured to have a buffer size\n+     * larger than the visible window size and provide scroll bars.\n+     * In such cases, this method should attempt to return the size\n+     * of the whole buffer.  The <code>getBufferSize()<\/code> method\n+     * can be used to avoid wrapping when using the terminal in a line\n+     * editing mode, while the {@link #getSize()} method should be\n+     * used when using full screen mode.\n+     * @return the terminal buffer size\n+     * @see #getSize()\n+     *\/\n+    default Size getBufferSize() {\n+        return getSize();\n+    }\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/Terminal.java","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author or authors.\n@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -36,3 +36,0 @@\n-import static jdk.internal.org.jline.terminal.impl.AbstractWindowsTerminal.TYPE_WINDOWS;\n-import static jdk.internal.org.jline.terminal.impl.AbstractWindowsTerminal.TYPE_WINDOWS_256_COLOR;\n-\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/TerminalBuilder.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractPosixTerminal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,8 @@\n+\/*\n+ * Copyright (c) 2002-2019, the original author or authors.\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractPty.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractTerminal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractWindowsConsoleWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author or authors.\n@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -24,1 +24,0 @@\n-import java.io.IOError;\n@@ -29,1 +28,0 @@\n-import java.io.StringWriter;\n@@ -53,0 +51,1 @@\n+    public static final String TYPE_WINDOWS_CONEMU = \"windows-conemu\";\n@@ -113,1 +112,1 @@\n-        if (TYPE_WINDOWS_256_COLOR.equals(getType())\n+        if (TYPE_WINDOWS_CONEMU.equals(getType())\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractWindowsTerminal.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/CursorSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/DumbTerminal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2019, the original author or authors.\n+ * Copyright (c) 2002-2016, the original author or authors.\n@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -140,1 +140,2 @@\n-            if (attr.getControlChar(cchar) != current.getControlChar(cchar)) {\n+            int v = attr.getControlChar(cchar);\n+            if (v >= 0 && v != current.getControlChar(cchar)) {\n@@ -142,4 +143,0 @@\n-                int v = attr.getControlChar(cchar);\n-                if (v == -1) { \/\/ Skip if ControlChar is <UNDEF>\n-                    continue;\n-                }\n@@ -148,1 +145,1 @@\n-                    commands.add(Integer.toBinaryString(v));\n+                    commands.add(Integer.toString(v));\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ExecPty.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/ExternalTerminal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/LineDisciplineTerminal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/MouseSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/NativeSignalHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/PosixPtyTerminal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/PosixSysTerminal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,8 @@\n+\/*\n+ * Copyright (c) 2002-2019, the original author or authors.\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/spi\/JansiSupport.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,8 @@\n+\/*\n+ * Copyright (c) 2002-2019, the original author or authors.\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/spi\/JnaSupport.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/spi\/Pty.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author or authors.\n@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -41,0 +41,8 @@\n+    public void print(Terminal terminal) {\n+        terminal.writer().print(toAnsi(terminal));\n+    }\n+\n+    public void println(Terminal terminal) {\n+        terminal.writer().println(toAnsi(terminal));\n+    }\n+\n@@ -57,1 +65,2 @@\n-            force256colors = AbstractWindowsTerminal.TYPE_WINDOWS_256_COLOR.equals(terminal.getType());\n+            force256colors = AbstractWindowsTerminal.TYPE_WINDOWS_256_COLOR.equals(terminal.getType())\n+                || AbstractWindowsTerminal.TYPE_WINDOWS_CONEMU.equals(terminal.getType());\n@@ -296,1 +305,1 @@\n-            begin++;\n+            begin += Character.charCount(cp);\n@@ -308,1 +317,1 @@\n-            end++;\n+            end += Character.charCount(cp);\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AttributedCharSequence.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -13,0 +13,1 @@\n+import java.util.List;\n@@ -101,0 +102,4 @@\n+        return fromAnsi(ansi, Arrays.asList(tabs));\n+    }\n+\n+    public static AttributedString fromAnsi(String ansi, List<Integer> tabs) {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AttributedString.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -11,0 +11,1 @@\n+import java.util.ArrayList;\n@@ -12,0 +13,1 @@\n+import java.util.List;\n@@ -27,1 +29,1 @@\n-    private int tabs = 0;\n+    private TabStops tabs = new TabStops(0);\n@@ -154,1 +156,1 @@\n-            if (tabs > 0 && c == '\\t') {\n+            if (tabs.defined() && c == '\\t') {\n@@ -335,1 +337,1 @@\n-            } else if (c == '\\t' && tabs > 0) {\n+            } else if (c == '\\t' && tabs.defined()) {\n@@ -353,1 +355,1 @@\n-        int nb = tabs - lastLineLength % tabs;\n+        int nb = tabs.spaces(lastLineLength);\n@@ -376,3 +378,0 @@\n-        if (length > 0) {\n-            throw new IllegalStateException(\"Cannot change tab size after appending text\");\n-        }\n@@ -382,1 +381,8 @@\n-        this.tabs = tabsize;\n+        return tabs(Arrays.asList(tabsize));\n+    }\n+\n+    public AttributedStringBuilder tabs(List<Integer> tabs) {\n+        if (length > 0) {\n+            throw new IllegalStateException(\"Cannot change tab size after appending text\");\n+        }\n+        this.tabs = new TabStops(tabs);\n@@ -396,0 +402,56 @@\n+    public AttributedStringBuilder styleMatches(Pattern pattern, List<AttributedStyle> styles) {\n+        Matcher matcher = pattern.matcher(this);\n+        while (matcher.find()) {\n+            for (int group = 0; group < matcher.groupCount(); group++) {\n+                AttributedStyle s = styles.get(group);\n+                for (int i = matcher.start(group + 1); i < matcher.end(group + 1); i++) {\n+                    style[i] = (style[i] & ~s.getMask()) | s.getStyle();\n+                }\n+            }\n+        }\n+        return this;\n+    }\n+\n+    private class TabStops {\n+        private List<Integer> tabs = new ArrayList<>();\n+        private int lastStop = 0;\n+        private int lastSize = 0;\n+\n+        public TabStops(int tabs) {\n+            this.lastSize = tabs;\n+        }\n+\n+        public TabStops(List<Integer> tabs) {\n+            this.tabs = tabs;\n+            int p = 0;\n+            for (int s: tabs) {\n+                if (s <= p) {\n+                    continue;\n+                }\n+                lastStop = s;\n+                lastSize = s - p;\n+                p = s;\n+            }\n+        }\n+\n+        boolean defined() {\n+            return lastSize > 0;\n+        }\n+\n+        int spaces(int lastLineLength) {\n+            int out = 0;\n+            if (lastLineLength >= lastStop) {\n+                out = lastSize - (lastLineLength - lastStop) % lastSize;\n+            } else {\n+                for (int s: tabs) {\n+                    if (s > lastLineLength) {\n+                        out = s - lastLineLength;\n+                        break;\n+                    }\n+                }\n+            }\n+            return out;\n+        }\n+\n+    }\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AttributedStringBuilder.java","additions":71,"deletions":9,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/AttributedStyle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/ClosedException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Colors.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -77,2 +77,10 @@\n-                    if (ch >= '0' && ch <= '9') {\n-                        throw new UnsupportedOperationException(); \/\/ todo\n+                    if (ch >= '0' && ch <= '7') {\n+                        int val = ch - '0';\n+                        for (int i = 0; i < 2; i++) {\n+                            ch = str.charAt(index++);\n+                            if (ch < '0' || ch > '7') {\n+                                throw new IllegalStateException();\n+                            }\n+                            val = val * 8 + (ch - '0');\n+                        }\n+                        out.append((char) val);\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Curses.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/DiffHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -495,1 +495,1 @@\n-        terminal.writer().write(str.toAnsi(terminal));\n+        str.print(terminal);\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Display.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/ExecHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2016, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author or authors.\n@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -581,0 +581,2 @@\n+                    } else if (val.startsWith(\"0\")) {\n+                        iVal = Integer.parseInt(val.substring(1), 8);\n@@ -617,1 +619,1 @@\n-                                      \"windows\", \"windows-256color\", \"windows-vtp\",\n+                                      \"windows\", \"windows-256color\", \"windows-conemu\", \"windows-vtp\",\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/InfoCmp.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/InputStreamReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Levenshtein.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Log.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlocking.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingInputStreamImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingPumpInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingPumpReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlockingReaderImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/OSUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/PumpReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/ShutdownHooks.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -11,0 +11,1 @@\n+import java.lang.reflect.Constructor;\n@@ -88,1 +89,6 @@\n-        if (\"QUIT\".equals(name) || \"INFO\".equals(name) && \"9\".equals(System.getProperty(\"java.specification.version\"))) {\n+        Class<?> signalClass = Class.forName(\"sun.misc.Signal\");\n+        Constructor<?> constructor = signalClass.getConstructor(String.class);\n+        Object signal;\n+        try {\n+            signal = constructor.newInstance(name);\n+        } catch (IllegalArgumentException e) {\n@@ -92,1 +98,0 @@\n-        Class<?> signalClass = Class.forName(\"sun.misc.Signal\");\n@@ -94,1 +99,0 @@\n-        Object signal = signalClass.getConstructor(String.class).newInstance(name);\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Signals.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -27,0 +27,1 @@\n+    protected List<AttributedString> linesToRestore = Collections.emptyList();\n@@ -30,0 +31,1 @@\n+    protected boolean suspended = false;\n@@ -64,0 +66,9 @@\n+    public void hardReset() {\n+        if (suspended) {\n+            return;\n+        }\n+        List<AttributedString> lines = new ArrayList<>(oldLines);\n+        update(null);\n+        update(lines);\n+    }\n+\n@@ -65,0 +76,3 @@\n+        if (suspended) {\n+            return;\n+        }\n@@ -69,0 +83,3 @@\n+        if (!supported) {\n+            return;\n+        }\n@@ -72,1 +89,5 @@\n-        if (!supported || (oldLines.equals(lines) && !force)) {\n+        if (suspended) {\n+            linesToRestore = new ArrayList<>(lines);\n+            return;\n+        }\n+        if (oldLines.equals(lines) && !force) {\n@@ -85,0 +106,1 @@\n+        terminal.puts(Capability.cursor_address, rows - lines.size(), 0);\n@@ -88,1 +110,1 @@\n-            terminal.writer().write(lines.get(i).columnSubSequence(0, columns).toAnsi(terminal));\n+            lines.get(i).columnSubSequence(0, columns).print(terminal);\n@@ -96,0 +118,23 @@\n+\n+    public void suspend() {\n+        if (suspended) {\n+            return;\n+        }\n+        linesToRestore = new ArrayList<>(oldLines);\n+        update(null);\n+        suspended = true;\n+    }\n+\n+    public void restore() {\n+        if (!suspended) {\n+            return;\n+        }\n+        suspended = false;\n+        update(linesToRestore);\n+        linesToRestore = Collections.emptyList();\n+    }\n+\n+    public int size() {\n+        return oldLines.size();\n+    }\n+\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/Status.java","additions":48,"deletions":3,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/StyleResolver.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/WCWidth.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/WriterOutputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-# http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+# https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/capabilities.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-# http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+# https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/colors.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,4 @@\n+dumb-color|80-column dumb tty with 256 coors,\n+        am,\n+        colors#256, cols#80,\n+        bel=^G, cr=^M, cud1=^J, ind=^J,\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/dumb-colors.caps","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-windows-256color|windows with 256 colors terminal compatibility,\n+windows-conemu|conemu windows terminal,\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/windows-conemu.caps","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/windows-256color.caps","status":"copied"},{"patch":"@@ -1,1 +1,1 @@\n-## JLine v3.9.0\n+## JLine v3.12.1\n","filename":"src\/jdk.internal.le\/share\/legal\/jline.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,8 @@\n+\/*\n+ * Copyright (c) 2002-2018, the original author or authors.\n+ *\n+ * This software is distributable under the BSD license. See the terms of the\n+ * BSD license in the documentation provided with this software.\n+ *\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n+ *\/\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/JnaSupportImpl.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/JnaWinConsoleWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002-2018, the original author or authors.\n+ * Copyright (c) 2002-2019, the original author or authors.\n@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -39,1 +39,1 @@\n-                type = OSUtils.IS_CONEMU ? TYPE_WINDOWS_256_COLOR : TYPE_WINDOWS;\n+                type = OSUtils.IS_CONEMU ? TYPE_WINDOWS_CONEMU : TYPE_WINDOWS;\n@@ -54,1 +54,1 @@\n-                        type = TYPE_WINDOWS_256_COLOR;\n+                        type = TYPE_WINDOWS_CONEMU;\n@@ -96,0 +96,6 @@\n+        Kernel32.CONSOLE_SCREEN_BUFFER_INFO info = new Kernel32.CONSOLE_SCREEN_BUFFER_INFO();\n+        Kernel32.INSTANCE.GetConsoleScreenBufferInfo(consoleOut, info);\n+        return new Size(info.windowWidth(), info.windowHeight());\n+    }\n+\n+    public Size getBufferSize() {\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/JnaWinSysTerminal.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n@@ -29,1 +29,1 @@\n-\/\/    Kernel32 INSTANCE = (Kernel32) Native.loadLibrary(\"kernel32\", Kernel32.class, W32APIOptions.UNICODE_OPTIONS);\n+\/\/    Kernel32 INSTANCE = Native.load(\"kernel32\", Kernel32.class, W32APIOptions.UNICODE_OPTIONS);\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/Kernel32.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * http:\/\/www.opensource.org\/licenses\/bsd-license.php\n+ * https:\/\/opensource.org\/licenses\/BSD-3-Clause\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/WindowsAnsiWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}