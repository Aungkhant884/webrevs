{"files":[{"patch":"@@ -774,1 +774,1 @@\n-        If* canon = new If(cmp->x(), cond, nan_sux == tsux, cmp->y(), tsux, fsux, cmp->state_before(), x->is_safepoint());\n+        If* canon = new If(cmp->x(), cond, nan_sux == tsux, cmp->y(), tsux, fsux, x->state_before(), x->is_safepoint());\n","filename":"src\/hotspot\/share\/c1\/c1_Canonicalizer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+super public class BadStateAtLongCmp\n+\tversion 52:0\n+{\n+  public static Field field:I;\n+\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+  }\n+\n+  \/* Same as:\n+     public static void test() {\n+        long l = 0;\n+        do {\n+            l++;\n+            field++;\n+        } while (l < 1000);\n+     }\n+     but with field++ between the lcmp and iflt bytecodes.\n+   *\/\n+  public static Method test:\"()V\"\n+\tstack 4 locals 2\n+  {\n+\t\tlconst_0;\n+\t\tlstore_0;\n+\tL2:\tstack_frame_type append;\n+\t\tlocals_map long;\n+\t\tlload_0;\n+\t\tlconst_1;\n+\t\tladd;\n+\t\tlstore_0;\n+\t\tlload_0;\n+\t\tldc2_w\tlong 1000l;\n+\t\tlcmp;\n+\t\tgetstatic\tField field:\"I\";\n+\t\ticonst_1;\n+\t\tiadd;\n+\t\tputstatic\tField field:\"I\";\n+\t\tiflt\tL2;\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class BadStateAtLongCmp\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/BadStateAtLongCmp.jasm","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8290451\n+ * @summary Incorrect result when switching to C2 OSR compilation from C1\n+ * @compile BadStateAtLongCmp.jasm\n+ * @run main\/othervm -Xbatch TestBadStateAtLongCmp\n+ *\/\n+\n+public class TestBadStateAtLongCmp {\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            BadStateAtLongCmp.test();\n+        }\n+        int expected = 20_000 * 1000;\n+        if (BadStateAtLongCmp.field != expected) {\n+            throw new RuntimeException(\"test failed: \" + BadStateAtLongCmp.field + \" != \" + expected);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestBadStateAtLongCmp.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}