{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -474,1 +474,2 @@\n-static void check_and_push(context_type *context, const void *ptr, int kind);\n+static void check_and_push_malloc_block(context_type *context, void *ptr);\n+static void check_and_push_string_utf(context_type *context, const char *ptr);\n@@ -610,1 +611,1 @@\n-    check_and_push(context, name, VM_STRING_UTF);\n+    check_and_push_string_utf(context, name);\n@@ -959,1 +960,1 @@\n-    check_and_push(context, lengths, VM_MALLOC_BLK);\n+    check_and_push_malloc_block(context, lengths);\n@@ -962,1 +963,1 @@\n-    check_and_push(context, code, VM_MALLOC_BLK);\n+    check_and_push_malloc_block(context, code);\n@@ -971,1 +972,1 @@\n-            check_and_push(context, code[i], VM_MALLOC_BLK);\n+            check_and_push_malloc_block(context, code[i]);\n@@ -1325,1 +1326,1 @@\n-        check_and_push(context, methodname, VM_STRING_UTF);\n+        check_and_push_string_utf(context, methodname);\n@@ -1374,1 +1375,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -1672,1 +1673,1 @@\n-            check_and_push(context, classname, VM_STRING_UTF);\n+            check_and_push_string_utf(context, classname);\n@@ -1827,1 +1828,1 @@\n-    check_and_push(context, signature, VM_STRING_UTF);\n+    check_and_push_string_utf(context, signature);\n@@ -2070,1 +2071,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2096,1 +2097,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2396,1 +2397,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2778,1 +2779,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2800,1 +2801,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -3640,1 +3641,1 @@\n-    check_and_push(context, classname, VM_STRING_UTF);\n+    check_and_push_string_utf(context, classname);\n@@ -3842,1 +3843,1 @@\n-                    check_and_push(context, buffer, VM_MALLOC_BLK);\n+                    check_and_push_malloc_block(context, buffer);\n@@ -4161,1 +4162,1 @@\n-static void check_and_push(context_type *context, const void *ptr, int kind)\n+static void check_and_push_common(context_type *context, void *ptr, int kind)\n@@ -4173,1 +4174,1 @@\n-            free_block((void *)ptr, kind);\n+            free_block(ptr, kind);\n@@ -4178,1 +4179,1 @@\n-    p->ptr = (void *)ptr;\n+    p->ptr = ptr;\n@@ -4183,0 +4184,8 @@\n+static void check_and_push_malloc_block(context_type *context, void *ptr) {\n+  check_and_push_common(context, ptr, VM_MALLOC_BLK);\n+}\n+\n+static void check_and_push_string_utf(context_type *context, const char *ptr) {\n+  check_and_push_common(context, (void *)ptr, VM_STRING_UTF);\n+}\n+\n","filename":"src\/java.base\/share\/native\/libverify\/check_code.c","additions":29,"deletions":20,"binary":false,"changes":49,"status":"modified"}]}