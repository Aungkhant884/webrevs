{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,2 @@\n-                return limit - memLimit;\n+                \/\/ we see a limit == 0 on some machines where \"kernel does not support swap limit capabilities\"\n+                return (limit < memLimit) ? 0 : limit - memLimit;\n","filename":"src\/jdk.management\/unix\/classes\/com\/sun\/management\/internal\/OperatingSystemImpl.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,8 +147,13 @@\n-        DockerTestUtils.dockerRunJava(opts)\n-            .shouldHaveExitValue(0)\n-            .shouldContain(\"Checking OperatingSystemMXBean\")\n-            .shouldContain(\"OperatingSystemMXBean.getTotalPhysicalMemorySize: \" + expectedMemory)\n-            .shouldMatch(\"OperatingSystemMXBean\\\\.getFreePhysicalMemorySize: [1-9][0-9]+\")\n-            .shouldContain(\"OperatingSystemMXBean.getTotalSwapSpaceSize: \" + expectedSwap)\n-            .shouldMatch(\"OperatingSystemMXBean\\\\.getFreeSwapSpaceSize: [1-9][0-9]+\")\n-            ;\n+        OutputAnalyzer out = DockerTestUtils.dockerRunJava(opts);\n+        out.shouldHaveExitValue(0)\n+           .shouldContain(\"Checking OperatingSystemMXBean\")\n+           .shouldContain(\"OperatingSystemMXBean.getTotalPhysicalMemorySize: \" + expectedMemory)\n+           .shouldMatch(\"OperatingSystemMXBean\\\\.getFreePhysicalMemorySize: [1-9][0-9]+\")\n+           .shouldMatch(\"OperatingSystemMXBean\\\\.getFreeSwapSpaceSize: [1-9][0-9]+\");\n+        \/\/ in case of warnings like : \"Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.\"\n+        \/\/ the getTotalSwapSpaceSize does not return the expected result, but 0\n+        try {\n+            out.shouldContain(\"OperatingSystemMXBean.getTotalSwapSpaceSize: \" + expectedSwap);\n+        } catch(RuntimeException ex) {\n+            out.shouldContain(\"OperatingSystemMXBean.getTotalSwapSpaceSize: 0\");\n+        }\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryAwareness.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"}]}