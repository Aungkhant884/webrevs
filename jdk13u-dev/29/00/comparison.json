{"files":[{"patch":"@@ -56,0 +56,1 @@\n+int   OSContainer::_active_processor_count = 1;\n@@ -61,0 +62,1 @@\n+\n@@ -62,0 +64,2 @@\n+    volatile jlong _next_check_counter;\n+\n@@ -74,0 +78,1 @@\n+      _next_check_counter = min_jlong;\n@@ -123,0 +128,8 @@\n+\n+    bool cache_has_expired() {\n+      return os::elapsed_counter() > _next_check_counter;\n+    }\n+\n+    void set_cache_expiry_time(jlong timeout) {\n+      _next_check_counter = os::elapsed_counter() + timeout;\n+    }\n@@ -134,1 +147,0 @@\n-    volatile jlong _next_check_counter;\n@@ -140,1 +152,0 @@\n-      _next_check_counter = min_jlong;\n@@ -147,3 +158,0 @@\n-    bool should_check_memory_limit() {\n-      return os::elapsed_counter() > _next_check_counter;\n-    }\n@@ -154,1 +162,1 @@\n-      \/\/ responsive to configuration changes. A very short (20ms) grace time\n+      \/\/ responsive to configuration changes. A very short grace time\n@@ -158,1 +166,1 @@\n-      _next_check_counter = os::elapsed_counter() + (NANOSECS_PER_SEC\/50);\n+      set_cache_expiry_time(OSCONTAINER_CACHE_TIMEOUT);\n@@ -483,1 +491,1 @@\n-  if (!memory->should_check_memory_limit()) {\n+  if (!memory->cache_has_expired()) {\n@@ -619,0 +627,8 @@\n+  \/\/ We use a cache with a timeout to avoid performing expensive\n+  \/\/ computations in the event this function is called frequently.\n+  \/\/ [See 8227006].\n+  if (!cpu->cache_has_expired()) {\n+    log_trace(os, container)(\"OSContainer::active_processor_count (cached): %d\", OSContainer::_active_processor_count);\n+    return OSContainer::_active_processor_count;\n+  }\n+\n@@ -651,0 +667,5 @@\n+\n+  \/\/ Update the value and reset the cache timeout\n+  OSContainer::_active_processor_count = result;\n+  cpu->set_cache_expiry_time(OSCONTAINER_CACHE_TIMEOUT);\n+\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.cpp","additions":29,"deletions":8,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+\/\/ 20ms timeout between re-reads of memory limit and _active_processor_count.\n+#define OSCONTAINER_CACHE_TIMEOUT (NANOSECS_PER_SEC\/50)\n+\n@@ -39,0 +42,2 @@\n+  static int    _active_processor_count;\n+\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}