{"files":[{"patch":"@@ -37,0 +37,1 @@\n+#include \"util.h\"\n@@ -48,0 +49,1 @@\n+    *buffer = '\\0';\n@@ -49,1 +51,2 @@\n-    paths_copy = strdup(paths);\n+    paths_copy = jvmtiAllocate((int)strlen(paths) + 1);\n+    strcpy(paths_copy, paths);\n@@ -58,2 +61,5 @@\n-        snprintf(buffer, buflen, \"%s\/lib%s.\" LIB_SUFFIX, path, fname);\n-        if (access(buffer, F_OK) == 0) {\n+        size_t result_len = (size_t)snprintf(buffer, buflen, \"%s\/lib%s.\" LIB_SUFFIX, path, fname);\n+        if (result_len >= buflen) {\n+            EXIT_ERROR(JVMTI_ERROR_INVALID_LOCATION, \"One or more of the library paths supplied to jdwp, \"\n+                                                     \"likely by sun.boot.library.path, is too long.\");\n+        } else if (access(buffer, F_OK) == 0) {\n@@ -66,1 +72,1 @@\n-    free(paths_copy);\n+    jvmtiDeallocate(paths_copy);\n@@ -92,6 +98,0 @@\n-    *holder = '\\0';\n-    \/\/ Quietly truncate on buffer overflow.  Should be an error.\n-    if (pnamelen + (int)strlen(fname) + 10 > holderlen) {\n-        return;\n-    }\n-\n@@ -99,0 +99,4 @@\n+        if (pnamelen + (int)strlen(fname) + 10 > holderlen) {\n+            EXIT_ERROR(JVMTI_ERROR_INVALID_LOCATION, \"One or more of the library paths supplied to jdwp, \"\n+                                                     \"likely by sun.boot.library.path, is too long.\");\n+        }\n","filename":"src\/jdk.jdwp.agent\/unix\/native\/libjdwp\/linker_md.c","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"util.h\"\n@@ -45,0 +46,1 @@\n+    *buffer = '\\0';\n@@ -46,1 +48,2 @@\n-    paths_copy = strdup(paths);\n+    paths_copy = jvmtiAllocate((int)strlen(paths) + 1);\n+    strcpy(paths_copy, paths);\n@@ -55,2 +58,5 @@\n-        _snprintf(buffer, buflen, \"%s\\\\%s.dll\", path, fname);\n-        if (_access(buffer, 0) == 0) {\n+        size_t result_len = (size_t)_snprintf(buffer, buflen, \"%s\\\\%s.dll\", path, fname);\n+        if (result_len >= buflen) {\n+            EXIT_ERROR(JVMTI_ERROR_INVALID_LOCATION, \"One or more of the library paths supplied to jdwp, \"\n+                                                     \"likely by sun.boot.library.path, is too long.\");\n+        } else if (_access(buffer, 0) == 0) {\n@@ -63,1 +69,1 @@\n-    free(paths_copy);\n+    jvmtiDeallocate(paths_copy);\n@@ -110,6 +116,0 @@\n-    *holder = '\\0';\n-    \/* Quietly truncates on buffer overflow. Should be an error. *\/\n-    if (pnamelen + (int)strlen(fname) + 10 > holderlen) {\n-        return;\n-    }\n-\n@@ -117,0 +117,4 @@\n+        if (pnamelen + (int)strlen(fname) + 10 > holderlen) {\n+                EXIT_ERROR(JVMTI_ERROR_INVALID_LOCATION, \"One or more of the library paths supplied to jdwp, \"\n+                                                         \"likely by sun.boot.library.path, is too long.\");\n+        }\n","filename":"src\/jdk.jdwp.agent\/windows\/native\/libjdwp\/linker_md.c","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"}]}