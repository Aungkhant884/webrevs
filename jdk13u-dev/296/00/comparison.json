{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -307,1 +307,1 @@\n-            int keyLength = getKeyLengthInBits(key) >> 3;\n+            int keyLength = (getKeyLengthInBits(key) + 7) >> 3;\n@@ -311,1 +311,1 @@\n-                    (\"Key is too short, need min \" + minLength);\n+                    (\"Key is too short, need min \" + minLength + \" bytes\");\n@@ -432,1 +432,1 @@\n-            int emLen =(emBits + 7) >> 3;\n+            int emLen = (emBits + 7) >> 3;\n@@ -475,0 +475,1 @@\n+\n@@ -488,2 +489,1 @@\n-     * Decode the signature data. Verify that the object identifier matches\n-     * and return the message digest.\n+     * Decode the signature data as under RFC8017 sec9.1.2 EMSA-PSS-VERIFY\n@@ -495,1 +495,0 @@\n-        int emLen = em.length;\n@@ -497,0 +496,9 @@\n+        int emLen = (emBits + 7) >> 3;\n+\n+        \/\/ When key length is 8N+1 bits (N+1 bytes), emBits = 8N,\n+        \/\/ emLen = N which is one byte shorter than em.length.\n+        \/\/ Otherwise, emLen should be same as em.length\n+        int emOfs = em.length - emLen;\n+        if ((emOfs == 1) && (em[0] != 0)) {\n+            return false;\n+        }\n@@ -504,1 +512,1 @@\n-        if (em[emLen - 1] != (byte) 0xBC) {\n+        if (em[emOfs + emLen - 1] != (byte) 0xBC) {\n@@ -511,0 +519,1 @@\n+\n@@ -513,1 +522,1 @@\n-            if ((em[0] & MASK) != 0) {\n+            if ((em[emOfs] & MASK) != 0) {\n@@ -529,1 +538,2 @@\n-            mgf1.generateAndXor(em, dbLen, hLen, dbLen, em, 0);\n+            mgf1.generateAndXor(em, emOfs + dbLen, hLen, dbLen,\n+                    em, emOfs);\n@@ -538,1 +548,1 @@\n-            em[0] = (byte) (em[0] & MASK);\n+            em[emOfs] = (byte) (em[emOfs] & MASK);\n@@ -542,2 +552,2 @@\n-        int i = 0;\n-        for (; i < dbLen - sLen - 1; i++) {\n+        int i = emOfs;\n+        for (; i < emOfs + (dbLen - sLen - 1); i++) {\n@@ -556,1 +566,1 @@\n-            this.md.update(em, (dbLen - sLen), sLen);\n+            this.md.update(em, emOfs + (dbLen - sLen), sLen);\n@@ -562,1 +572,2 @@\n-        byte[] digestInEM = Arrays.copyOfRange(em, dbLen, emLen - 1);\n+        byte[] digestInEM = Arrays.copyOfRange(em, emOfs + dbLen,\n+                emOfs + emLen - 1);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPSSSignature.java","additions":26,"deletions":15,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,4 +34,4 @@\n- * @bug 8146293\n- * @summary Create a signature for RSA and get its signed data. re-initiate\n- *          the signature with the public key. The signature can be verified\n- *          by acquired signed data.\n+ * @bug 8146293 8238448\n+ * @summary Create a signature for RSASSA-PSS and get its signed data.\n+ *          re-initiate the signature with the public key. The signature\n+ *          can be verified by acquired signed data.\n@@ -40,0 +40,1 @@\n+ * @run main SignatureTest2 1025\n@@ -41,0 +42,1 @@\n+ * @run main SignatureTest2 2049\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/SignatureTest2.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,4 +35,4 @@\n- * @bug 8146293\n- * @summary Create a signature for RSA and get its signed data. re-initiate\n- *          the signature with the public key. The signature can be verified\n- *          by acquired signed data.\n+ * @bug 8146293 8238448\n+ * @summary Create a signature for RSASSA-PSS and get its signed data.\n+ *          re-initiate the signature with the public key. The signature\n+ *          can be verified by acquired signed data.\n@@ -44,0 +44,1 @@\n+ * @run main SignatureTestPSS 1025\n@@ -45,0 +46,1 @@\n+ * @run main SignatureTestPSS 2049\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/SignatureTestPSS.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}