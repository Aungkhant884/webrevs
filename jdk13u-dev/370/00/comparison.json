{"files":[{"patch":"@@ -193,1 +193,2 @@\n-  , _deoptimize_on_exception(deoptimize_on_exception) {\n+  , _deoptimize_on_exception(deoptimize_on_exception)\n+  , _force_reexecute(false) {\n@@ -205,1 +206,2 @@\n-  , _deoptimize_on_exception(info->_deoptimize_on_exception) {\n+  , _deoptimize_on_exception(info->_deoptimize_on_exception)\n+  , _force_reexecute(info->_force_reexecute) {\n@@ -217,1 +219,2 @@\n-  _scope_debug_info->record_debug_info(recorder, pc_offset, true\/*topmost*\/, _is_method_handle_invoke);\n+  bool reexecute = _force_reexecute || _scope_debug_info->should_reexecute();\n+  _scope_debug_info->record_debug_info(recorder, pc_offset, reexecute, _is_method_handle_invoke);\n","filename":"src\/hotspot\/share\/c1\/c1_IR.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-  void record_debug_info(DebugInformationRecorder* recorder, int pc_offset, bool topmost, bool is_method_handle_invoke = false) {\n+  void record_debug_info(DebugInformationRecorder* recorder, int pc_offset, bool reexecute, bool is_method_handle_invoke = false) {\n@@ -238,1 +238,1 @@\n-      caller()->record_debug_info(recorder, pc_offset, false\/*topmost*\/);\n+      caller()->record_debug_info(recorder, pc_offset, false\/*reexecute*\/);\n@@ -244,1 +244,0 @@\n-    bool reexecute = topmost ? should_reexecute() : false;\n@@ -262,0 +261,1 @@\n+  bool              _force_reexecute;            \/\/ force the reexecute flag on, used for patching stub\n@@ -288,0 +288,3 @@\n+  bool     force_reexecute() const         { return _force_reexecute;             }\n+  void     set_force_reexecute()           { _force_reexecute = true;             }\n+\n@@ -289,0 +292,1 @@\n+\n","filename":"src\/hotspot\/share\/c1\/c1_IR.hpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+  info->set_force_reexecute();\n","filename":"src\/hotspot\/share\/c1\/c1_LIRAssembler.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -691,0 +691,1 @@\n+      Bytecodes::Code next_code = Bytecodes::_shouldnotreachhere;\n@@ -699,1 +700,1 @@\n-        Bytecodes::Code next_code = str.next();\n+        next_code = str.next();\n@@ -749,0 +750,4 @@\n+          tty->print_cr(\"  Current code %s\", Bytecodes::name(cur_code));\n+          if (try_next_mask) {\n+            tty->print_cr(\"  Next code %s\", Bytecodes::name(next_code));\n+          }\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @bug 8262134\n@@ -31,0 +32,1 @@\n+ * @run main\/othervm -Xcomp -XX:CompileCommand=compileonly,TestC::* -XX:+DeoptimizeALot -XX:+VerifyStack BSMCalledTwice\n","filename":"test\/hotspot\/jtreg\/runtime\/BootstrapMethod\/BSMCalledTwice.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}