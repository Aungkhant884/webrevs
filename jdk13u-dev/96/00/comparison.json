{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -353,0 +353,4 @@\n+                        if (nbytes == -1) {\n+                            throw new IIOException(\"Invalid block length for \" +\n+                                    \"LZW encoded image data\");\n+                        }\n@@ -933,0 +937,4 @@\n+                if (nbytes == -1) {\n+                    throw new IIOException(\"Invalid block length for \" +\n+                            \"LZW encoded image data\");\n+                }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/gif\/GIFImageReader.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6532025\n+ * @summary Test verifies that we dont throw IOOBE for truncated\n+ *          GIF image\n+ *\/\n+\n+import javax.imageio.ImageIO;\n+import java.awt.image.BufferedImage;\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import javax.imageio.IIOException;\n+\n+public class TruncatedGIFTest {\n+    public static void main(String[] args) throws IOException {\n+        \/\/ GIFF stream with no GCT\/LCT but one truncated LZW\n+        \/\/ image block\n+        byte[] ba = new byte[] { (byte)0x47, (byte) 0x49,\n+                (byte)0x46, (byte)0x38, (byte)0x39, (byte)0x61,\n+                (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00,\n+                (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2c,\n+                (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,\n+                (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00,\n+                (byte)0x00, (byte)0x04, (byte)0x0A, (byte)0x00};\n+\n+        try {\n+            BufferedImage img = ImageIO.read(new ByteArrayInputStream(ba));\n+        } catch (IIOException e) {\n+            \/\/ do nothing we expect IIOException but we should not\n+            \/\/ throw IndexOutOfBoundsException\n+            System.out.println(e.toString());\n+            System.out.println(\"Caught IIOException ignore it\");\n+            System.out.println(\"Test passed\");\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/imageio\/plugins\/gif\/TruncatedGIFTest.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}