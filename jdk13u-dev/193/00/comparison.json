{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,2 @@\n-    private static final int SIZE = 4096;\n+    private static final int BASE_SIZE = 4096;\n+    private static long blockSize;\n@@ -52,1 +53,1 @@\n-    private static void testWrite(Path p) throws Exception {\n+    private static int testWrite(Path p) throws Exception {\n@@ -55,3 +56,4 @@\n-            FileStore fs = Files.getFileStore(p);\n-            int alignment = (int)fs.getBlockSize();\n-            ByteBuffer src = ByteBuffer.allocateDirect(SIZE + alignment - 1)\n+            int bs = (int)blockSize;\n+            int size = Math.max(BASE_SIZE, bs);\n+            int alignment = bs;\n+            ByteBuffer src = ByteBuffer.allocateDirect(size + alignment - 1)\n@@ -59,1 +61,2 @@\n-            for (int j = 0; j < SIZE; j++) {\n+            assert src.capacity() != 0;\n+            for (int j = 0; j < size; j++) {\n@@ -64,0 +67,1 @@\n+            return size;\n@@ -67,1 +71,1 @@\n-    private static void testRead(Path p) throws Exception {\n+    private static int testRead(Path p) throws Exception {\n@@ -69,3 +73,4 @@\n-            FileStore fs = Files.getFileStore(p);\n-            int alignment = (int)fs.getBlockSize();\n-            ByteBuffer dest = ByteBuffer.allocateDirect(SIZE + alignment - 1)\n+            int bs = (int)blockSize;\n+            int size = Math.max(BASE_SIZE, bs);\n+            int alignment = bs;\n+            ByteBuffer dest = ByteBuffer.allocateDirect(size + alignment - 1)\n@@ -73,0 +78,1 @@\n+            assert dest.capacity() != 0;\n@@ -74,0 +80,1 @@\n+            return size;\n@@ -96,1 +103,1 @@\n-    private static boolean isFileInCache(Path p) {\n+    private static boolean isFileInCache(int size, Path p) {\n@@ -98,1 +105,1 @@\n-        return isFileInCache0(SIZE, path);\n+        return isFileInCache0(size, path);\n@@ -105,0 +112,1 @@\n+        blockSize = Files.getFileStore(p).getBlockSize();\n@@ -114,2 +122,2 @@\n-            testWrite(p);\n-            if (isFileInCache(p)) {\n+            int size = testWrite(p);\n+            if (isFileInCache(size, p)) {\n@@ -119,2 +127,2 @@\n-            testRead(p);\n-            if (isFileInCache(p)) {\n+            size = testRead(p);\n+            if (isFileInCache(size, p)) {\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/directio\/DirectIOTest.java","additions":25,"deletions":17,"binary":false,"changes":42,"status":"modified"}]}