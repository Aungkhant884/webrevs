{"files":[{"patch":"@@ -1102,0 +1102,2 @@\n+            case \"RSASSA-PSS\":\n+                return \"RSASSA-PSS\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.security.spec.AlgorithmParameterSpec;\n@@ -498,1 +499,7 @@\n-            sigEngine.initSign(key);\n+            AlgorithmParameterSpec params = AlgorithmId\n+                    .getDefaultAlgorithmParameterSpec(algorithm, key);\n+            try {\n+                SignatureUtil.initSignWithParam(sigEngine, key, params, null);\n+            } catch (InvalidAlgorithmParameterException e) {\n+                throw new SignatureException(e);\n+            }\n@@ -500,2 +507,6 @@\n-            \/\/ in case the name is reset\n-            sigAlgId = AlgorithmId.get(sigEngine.getAlgorithm());\n+            if (params != null) {\n+                sigAlgId = AlgorithmId.get(sigEngine.getParameters());\n+            } else {\n+                \/\/ in case the name is reset\n+                sigAlgId = AlgorithmId.get(sigEngine.getAlgorithm());\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -600,1 +600,0 @@\n-            \/\/ in case the name is reset\n@@ -604,1 +603,2 @@\n-                algId = AlgorithmId.get(algorithm);\n+                \/\/ in case the name is reset\n+                algId = AlgorithmId.get(sigEngine.getAlgorithm());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8242184\n+ * @summary CRL generation error with RSASSA-PSS\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class GenerateAll {\n+\n+    public static void main(String[] args) throws Throwable {\n+\n+        kt(\"-genkeypair -alias ca -dname CN=CA -keyalg ec\");\n+\n+        String[] aliases = {\n+                \"rsa\", \"dsa\", \"rrr\", \"rsassa-pss\", \"ec\"};\n+\n+        for (String alias : aliases) {\n+            \/\/ \"rrr\": keyalg is rsa, sigalg is rsassa-pss\n+            \/\/ otherwise: keyalg is alias, sigalg auto derived\n+            String keyAlg = alias.equals(\"rrr\") ? \"rsa\" : alias;\n+            String extra = alias.equals(\"rrr\") ? \" -sigalg rsassa-pss\" : \"\";\n+\n+            \/\/ gen\n+            kt(\"-genkeypair -alias \" + alias + \" -dname CN=\" + alias\n+                    + \" -keyalg \" + keyAlg + extra);\n+\n+            \/\/ req\n+            kt(\"-certreq -alias \" + alias + \" -file \" + alias + \".req\");\n+            kt(\"-printcertreq -file \" + alias + \".req\");\n+\n+            \/\/ gencert\n+            kt(\"-gencert -alias ca -infile \" + alias\n+                    + \".req -outfile \" + alias + \".crt\");\n+            kt(\"-printcert -file \" + alias + \".crt\");\n+\n+            \/\/ crl\n+            kt(\"-gencrl -alias \" + alias + \" -id 0 -file \" + alias + \".crl\");\n+            kt(\"-printcrl -file \" + alias + \".crl\")\n+                    .shouldContain(\"Verified by \" + alias);\n+        }\n+    }\n+\n+    static OutputAnalyzer kt(String arg) throws Exception {\n+        return SecurityTools.keytool(\"-keystore ks -storepass changeit \" + arg)\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/GenerateAll.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"}]}