{"files":[{"patch":"@@ -237,0 +237,1 @@\n+    NSString *nsVerStr = NULL;\n@@ -249,1 +250,0 @@\n-        NSString *nsVerStr;\n@@ -261,2 +261,0 @@\n-            \/\/ Copy out the char*\n-            osVersionCStr = strdup([nsVerStr UTF8String]);\n@@ -265,1 +263,2 @@\n-            \/\/ AKA 11.x; compute the version number from the letter in the ProductBuildVersion\n+            \/\/ AKA 11+ Read the *real* ProductVersion from the hidden link to avoid SYSTEM_VERSION_COMPAT\n+            \/\/ If not found, fallback below to the SystemVersion.plist\n@@ -267,1 +266,1 @@\n-                             @\"\/System\/Library\/CoreServices\/SystemVersion.plist\"];\n+                             @\"\/System\/Library\/CoreServices\/.SystemVersionPlatform.plist\"];\n@@ -269,8 +268,1 @@\n-                NSString *nsBuildVerStr = [version objectForKey : @\"ProductBuildVersion\"];\n-                if (nsBuildVerStr != NULL && nsBuildVerStr.length >= 3) {\n-                    int letter = [nsBuildVerStr characterAtIndex:2];\n-                    if (letter >= 'B' && letter <= 'Z') {\n-                        int vers = letter - 'A' - 1;\n-                        asprintf(&osVersionCStr, \"11.%d\", vers);\n-                    }\n-                }\n+                nsVerStr = [version objectForKey : @\"ProductVersion\"];\n@@ -281,1 +273,1 @@\n-    if (osVersionCStr == NULL) {\n+    if (nsVerStr == NULL) {\n@@ -285,4 +277,1 @@\n-            NSString *nsVerStr = [version objectForKey : @\"ProductVersion\"];\n-            if (nsVerStr != NULL) {\n-                osVersionCStr = strdup([nsVerStr UTF8String]);\n-            }\n+            nsVerStr = [version objectForKey : @\"ProductVersion\"];\n@@ -291,0 +280,5 @@\n+\n+    if (nsVerStr != NULL) {\n+        \/\/ Copy out the char*\n+        osVersionCStr = strdup([nsVerStr UTF8String]);\n+    }\n","filename":"src\/java.base\/macosx\/native\/libjava\/java_props_macosx.c","additions":12,"deletions":18,"binary":false,"changes":30,"status":"modified"}]}