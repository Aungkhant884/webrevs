{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,7 +61,0 @@\n-    \/**\n-     * Returns a ClassFileReader instance of a given path.\n-     *\/\n-    public static ClassFileReader newInstance(Path path) throws IOException {\n-        return newInstance(path, null);\n-    }\n-\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/ClassFileReader.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -918,0 +918,5 @@\n+            if (!options.rootModules.isEmpty()) {\n+                reportError(\"err.invalid.options\", \"-m or --module\",\n+                            option);\n+                return false;\n+            }\n@@ -925,1 +930,1 @@\n-                try (ClassFileReader reader = ClassFileReader.newInstance(Paths.get(arg))) {\n+                try (ClassFileReader reader = ClassFileReader.newInstance(Paths.get(arg), config.getVersion())) {\n@@ -928,3 +933,3 @@\n-                             .filter(n -> n.endsWith(\".class\"))\n-                             .filter(cn -> toPackageName(cn).isEmpty())\n-                             .findFirst();\n+                              .filter(n -> n.endsWith(\".class\"))\n+                              .filter(cn -> toPackageName(cn).isEmpty())\n+                              .findFirst();\n@@ -945,3 +950,2 @@\n-            boolean ok = builder.run();\n-\n-            if (!ok && !options.nowarning) {\n+            boolean ok = builder.run(options.ignoreMissingDeps, log, options.nowarning);\n+            if (!ok) {\n@@ -949,0 +953,1 @@\n+                log.println();\n@@ -1044,1 +1049,1 @@\n-                reportError(\"err.cant.list.module.deps\");\n+                reportError(\"err.missing.dependences\");\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/JdepsTask.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-    public boolean run() throws IOException {\n+    public boolean run(boolean ignoreMissingDeps, PrintWriter log, boolean quiet) throws IOException {\n@@ -111,1 +111,0 @@\n-            boolean missingDeps = false;\n@@ -117,1 +116,8 @@\n-                Path file = outputdir.resolve(m.name()).resolve(\"module-info.java\");\n+                \/\/ if this is a multi-release JAR, write to versions\/$VERSION\/module-info.java\n+                Runtime.Version version = configuration.getVersion();\n+                Path dir = version != null\n+                            ? outputdir.resolve(m.name())\n+                                       .resolve(\"versions\")\n+                                       .resolve(String.valueOf(version.feature()))\n+                            : outputdir.resolve(m.name());\n+                Path file = dir.resolve(\"module-info.java\");\n@@ -120,1 +126,1 @@\n-                Module normalModule = toNormalModule(m, apiDeps);\n+                Module normalModule = toNormalModule(m, apiDeps, ignoreMissingDeps);\n@@ -125,1 +131,7 @@\n-                    System.out.format(\"writing to %s%n\", file);\n+                    if (!quiet) {\n+                        if (ignoreMissingDeps && analyzer.requires(m).anyMatch(Analyzer::notFound)) {\n+                            log.format(\"Warning: --ignore-missing-deps specified. Missing dependencies from %s are ignored%n\",\n+                                       m.name());\n+                        }\n+                        log.format(\"writing to %s%n\", file);\n+                    }\n@@ -129,2 +141,1 @@\n-                    System.out.format(\"Missing dependence: %s not generated%n\", file);\n-                    missingDeps = true;\n+                    return false;\n@@ -134,1 +145,0 @@\n-            return !missingDeps;\n@@ -138,0 +148,1 @@\n+        return true;\n@@ -140,1 +151,1 @@\n-    private Module toNormalModule(Module module, Set<Archive> requiresTransitive)\n+    private Module toNormalModule(Module module, Set<Archive> requiresTransitive, boolean ignoreMissingDeps)\n@@ -146,1 +157,1 @@\n-        if (analyzer.requires(module).anyMatch(Analyzer::notFound)) {\n+        if (!ignoreMissingDeps && analyzer.requires(module).anyMatch(Analyzer::notFound)) {\n@@ -153,0 +164,1 @@\n+            .filter(a -> !(ignoreMissingDeps && Analyzer.notFound(a)))\n@@ -157,0 +169,1 @@\n+            .filter(a -> !(ignoreMissingDeps && Analyzer.notFound(a)))\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/ModuleInfoBuilder.java","additions":24,"deletions":11,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -232,1 +232,0 @@\n-err.missing.dependences=missing dependencies\n@@ -249,2 +248,2 @@\n-err.cant.list.module.deps=\\\n-Missing dependencies from the module path and classpath.\\n\\\n+err.missing.dependences=\\\n+Missing dependencies: classes not found from the module path and classpath.\\n\\\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps.properties","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,130 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Tests jdeps option on a MR jar with missing dependences\n+ * @library ..\/lib\n+ * @build CompilerUtils JdepsUtil\n+ * @modules jdk.jdeps\/com.sun.tools.jdeps\n+ * @run testng MissingDepsTest\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.spi.ToolProvider;\n+import java.util.stream.Stream;\n+\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.assertEquals;\n+\n+\n+public class MissingDepsTest {\n+    private static final String TEST_SRC = System.getProperty(\"test.src\");\n+    private static final Path SRC_DIR = Paths.get(TEST_SRC, \"src\");\n+\n+    private static final Path MODS_DIR = Paths.get(\"mods\");\n+    private static final Path CLASSES_DIR = Paths.get(\"classes\");\n+\n+    private static final ToolProvider JAR_TOOL = ToolProvider.findFirst(\"jar\").orElseThrow();\n+    private static final String VERSION = \"13\";\n+\n+    private static final Set<String> modules = Set.of(\"m1\", \"m2\");\n+\n+    \/**\n+     * Compiles classes used by the test\n+     *\/\n+    @BeforeTest\n+    public void compileAll() throws Exception {\n+        CompilerUtils.cleanDir(MODS_DIR);\n+        modules.forEach(mn ->\n+                assertTrue(CompilerUtils.compileModule(SRC_DIR, MODS_DIR, mn)));\n+\n+        \/\/ compile a versioned class file\n+        Path versionedFile = Paths.get(TEST_SRC, \"p\/internal\/X.java\");\n+        assertTrue(CompilerUtils.compile(versionedFile, CLASSES_DIR, \"-cp\", MODS_DIR.resolve(\"m2\").toString()));\n+\n+        \/\/ create a modular multi-release m1.jar\n+        JAR_TOOL.run(System.out, System.err, \"cf\", \"m1.jar\",\n+                     \"-C\", MODS_DIR.resolve(\"m1\").toString(), \".\");\n+        JAR_TOOL.run(System.out, System.err, \"uf\", \"m1.jar\",\n+                     \"--release\", VERSION, \"-C\", CLASSES_DIR.toString(), \"p\/internal\/X.class\");\n+        \/\/ create a non-modular multi-release mr.jar\n+        JAR_TOOL.run(System.out, System.err, \"cf\", \"mr.jar\",\n+                     \"-C\", MODS_DIR.resolve(\"m1\").toString(), \"p\/Foo.class\",\n+                     \"--release\", VERSION, \"-C\", CLASSES_DIR.toString(), \"p\/internal\/X.class\");\n+    }\n+\n+    @Test\n+    public void genModuleInfo() {\n+        JdepsTest test = new JdepsTest();\n+        test.options(List.of(\"--generate-module-info\", \".\", \"--multi-release\", VERSION, \"mr.jar\"));\n+        test.checkMissingDeps();\n+        Path file = Paths.get(\"mr\", \"versions\", VERSION, \"module-info.java\");\n+        test.ignoreMissingDeps(file.toString());\n+        assertTrue(Files.exists(file));\n+    }\n+\n+    @Test\n+    public void listModuleDeps() {\n+        JdepsTest test = new JdepsTest();\n+        test.options(List.of(\"--list-deps\", \"--multi-release\", VERSION, \"mr.jar\"));\n+        test.checkMissingDeps();\n+        test.ignoreMissingDeps(\"java.management\");\n+    }\n+\n+    class JdepsTest {\n+        \/\/ set DEBUG to true to show the jdeps output\n+        static final boolean DEBUG = false;\n+        List<String> options;\n+        JdepsTest options(List<String> options) {\n+            this.options = options;\n+            return this;\n+        }\n+\n+        private void checkMissingDeps() {\n+            JdepsRunner jdepsRunner = new JdepsRunner(options.toArray(new String[0]));\n+            int rc = jdepsRunner.run(DEBUG);\n+            assertTrue(rc != 0);\n+            String regex = \"\\\\s+13\/p.internal.X\\\\s+->\\\\s+q.T\\\\s+not found\";\n+            assertTrue(Arrays.stream(jdepsRunner.output()).anyMatch(l -> l.matches(regex)));\n+        }\n+\n+        public void ignoreMissingDeps(String expected) {\n+            JdepsRunner jdepsRunner = new JdepsRunner(Stream.concat(Stream.of(\"--ignore-missing-deps\"), options.stream())\n+                                                            .toArray(String[]::new));\n+            int rc = jdepsRunner.run(DEBUG);\n+            assertTrue(rc == 0);\n+            System.out.println(\"Expected: \" + expected);\n+            assertTrue(Arrays.stream(jdepsRunner.output()).anyMatch(l -> l.contains(expected)));\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/jdeps\/missingDeps\/MissingDepsTest.java","additions":130,"deletions":0,"binary":false,"changes":130,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p.internal;\n+\n+import java.lang.management.*;\n+\n+class X implements q.T {\n+    public void upTime() {\n+        ManagementFactory.getRuntimeMXBean().getUptime();\n+    }\n+}\n","filename":"test\/langtools\/tools\/jdeps\/missingDeps\/p\/internal\/X.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module m1 {\n+    requires static m2;\n+    exports p;\n+}\n","filename":"test\/langtools\/tools\/jdeps\/missingDeps\/src\/m1\/module-info.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p;\n+\n+public class Foo implements Runnable {\n+   public void run() {\n+   }\n+}\n","filename":"test\/langtools\/tools\/jdeps\/missingDeps\/src\/m1\/p\/Foo.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -0,0 +1,26 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module m2 {\n+    exports q;\n+}\n","filename":"test\/langtools\/tools\/jdeps\/missingDeps\/src\/m2\/module-info.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"added"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package q;\n+\n+public interface Bar {\n+   default String name() {\n+       return \"\";\n+   }\n+}\n","filename":"test\/langtools\/tools\/jdeps\/missingDeps\/src\/m2\/q\/Bar.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package q;\n+\n+public interface T {\n+}\n","filename":"test\/langtools\/tools\/jdeps\/missingDeps\/src\/m2\/q\/T.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"}]}