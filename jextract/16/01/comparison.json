{"files":[{"patch":"@@ -1,3 +0,0 @@\n-# Test libraries\n-lib.dirs = .\/lib\n-\n@@ -7,3 +4,0 @@\n-# To help out with foreign memory access Spliterator tests\n-modules = jdk.incubator.foreign\n-\n","filename":"test\/TEST.ROOT","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,6 +30,0 @@\n-\/*\n- * @test\n- * @bug 8241650\n- * @summary jextract module should be mapped to application class loader\n- * @run testng Test8241650\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/api\/Test8241650.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,8 +38,0 @@\n-\/*\n- * @test\n- * @bug 8240300\n- * @summary jextract produces non compilable code with repeated declarations\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED RepeatedDeclsTest\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/RepeatedDeclsTest.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,7 +31,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8240181\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED -Duser.language=en Test8240181\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8240181.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8240657\n- * @summary when Java keywords are used as identifiers in C header, jextract generates non-compilable java code\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8240657\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8240657.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,8 +36,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8240752\n- * @summary jextract generates non-compilable code for special floating point values\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8240752\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8240752.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,8 +36,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8240811\n- * @summary jextract generates non-compilable code for name collision between a struct and a global variable\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8240811\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8240811.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8244412\n- * @summary jextract should generate static utils class for primitive typedefs\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8244412\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8244412.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,8 +35,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8245767\n- * @summary jextract crashes with typedef on a opaque struct or union\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8245767\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8245767.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8248415\n- * @summary jextract does not generate getter and setter for pointer typed fields in structs\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8248415\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8248415.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8248474\n- * @summary jextract uses header file name as part of identifier\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8248474\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8248474.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8249290\n- * @summary jextract does not handle void typedef in function pointer argument\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8249290\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8249290.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8249300\n- * @summary jextract does not handle empty parameter list of a function pointer parameters\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8249300\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8249300.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,8 +34,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8251943\n- * @summary jextract should not generate MemorySegment typed fields for variables, struct fields if layout size info is not available\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8251943\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8251943.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8258223\n- * @summary jextract throws exception when unsupport type is used in anonymous struct\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8258223\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8258223.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8258405\n- * @summary functional interfaces are not generated for struct fields\/global variables with function pointers\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8258405\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8258405.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,8 +31,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8260344\n- * @summary jextract crashes with exception for log.h from libdebian-installer4-dev\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED -Duser.language=en Test8260344\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8260344.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,8 +35,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8260705\n- * @summary jextract crash with libbart's types.h\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8260705\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8260705.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8260717\n- * @summary jextract crashes with 'Crossing storage unit boundaries' for libcoap's block.h\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8260717\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8260717.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,8 +33,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8260929\n- * @summary jextract crashes with libdnet's rabdef.h\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8260929\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8260929.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,8 +32,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8261893\n- * @summary jextract generates class names that are restricted type names\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED -Duser.language=en Test8261893\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8261893.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,8 +35,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8262117\n- * @summary jextract crashes with javac compilation error \"class u is already defined\"\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8262117\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8262117.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,8 +31,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8262733\n- * @summary jextract generates clashing names which results in compilation error with javac\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8262733\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8262733.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,8 +31,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8262825\n- * @summary jextract crashes when Java type names like String are used as identifiers in C header\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8262825\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8262825.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,8 +31,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8262851\n- * @summary jextract crashes with \"Cannot compute size of a layout which is, or depends on a sequence layout with unspecified size\"\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test8262851\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/Test8262851.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,6 +25,0 @@\n-\/*\n- * @test\n- * @build JextractToolRunner\n- * @run testng\/othervm --enable-native-access=org.openjdk.jextract TestAttributedPointerTypedef\n- *\/\n-\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/TestAttributedPointerTypedef.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-\/\/@Ignore \/\/ FIXME needs native lib\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/TestClassGeneration.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,7 +26,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED -Duser.language=en TestFilters\n- *\/\n-\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/TestFilters.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -42,8 +42,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @bug 8244512 8252759\n- * @summary test nested structs and unions\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestNested\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/TestNested.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,0 +32,3 @@\n+\/\/ This test is ignored because we cannot set the \"-Djextract.decls.per.header\" here (as all testng tests are\n+\/\/ executed in the same VM). Moving the test in a non-testng folder is possible, but this test depends on\n+\/\/ JextractToolRunner and TestUtils which makes it hard.\n@@ -38,1 +41,0 @@\n-        \/\/System.setProperty(\"-Djextract.decls.per.header\", \"1\");\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/TestSplit.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,6 +35,0 @@\n-\/*\n- * @test\n- * @library \/test\/lib\n- * @build JextractToolRunner\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED UniondeclTest\n- *\/\n","filename":"test\/java\/org\/openjdk\/jextract\/test\/toolprovider\/UniondeclTest.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}