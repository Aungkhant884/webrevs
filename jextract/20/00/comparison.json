{"files":[{"patch":"@@ -101,1 +101,1 @@\n-            return t.kind() == Type.Delegated.Kind.TYPEDEF ?\n+            return t.kind() != Type.Delegated.Kind.POINTER ?\n@@ -106,2 +106,3 @@\n-            \/\/ but if we do that, we might end up with infinite recursion. Old code did not have that issue\n-            \/\/ as it was layout-based, but doing so it also missed unsupported pointer types (e.g. *long double)\n+            \/\/ but if we do that, we might end up with infinite recursion (because of pointer types).\n+            \/\/ Unsupported pointer types (e.g. *long double) are not detected, but they are not problematic layout-wise\n+            \/\/ (e.g. they are always 32- or 64-bits, depending on the platform).\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/UnsupportedLayouts.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}