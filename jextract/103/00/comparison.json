{"files":[{"patch":"@@ -56,1 +56,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/cblas\/TestBlas.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,2 +42,2 @@\n-    private static Function<String, Optional<MemorySegment>> lookup(String libraryName, SegmentScope scope) {\n-        try (Arena libArena = Arena.openConfined()) {\n+    private static Function<String, Optional<MemorySegment>> lookup(String libraryName, Arena arena) {\n+        try (Arena libArena = Arena.ofConfined()) {\n@@ -48,1 +48,1 @@\n-            var handle = MemorySegment.ofAddress(handleAddr.address(), 0, scope,\n+            var handle = MemorySegment.ofAddress(handleAddr.address(), 0, arena,\n@@ -51,2 +51,2 @@\n-                try (var arena = Arena.openConfined()) {\n-                    var addr = dlsym(handle, arena.allocateUtf8String(name));\n+                try (var newArena = Arena.ofConfined()) {\n+                    var addr = dlsym(handle, newArena.allocateUtf8String(name));\n@@ -63,2 +63,2 @@\n-        try (var arena = Arena.openConfined()) {\n-            var symLookup = lookup(libName, arena.scope());\n+        try (var arena = Arena.ofConfined()) {\n+            var symLookup = lookup(libName, arena);\n","filename":"samples\/dlopen\/Dlopen.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/lapack\/TestLapack.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n@@ -78,1 +78,1 @@\n-            }, arena.scope());\n+            }, arena);\n","filename":"samples\/libclang\/ASTPrinter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-           try (var arena = Arena.openConfined()) {\n+           try (var arena = Arena.ofConfined()) {\n","filename":"samples\/libcurl\/CurlMain.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        private Arena arena = Arena.openConfined();\n+        private Arena arena = Arena.ofConfined();\n@@ -235,1 +235,1 @@\n-                                saveFrame(pFrameRGB, arena.scope(), width, height, i);\n+                                saveFrame(pFrameRGB, arena, width, height, i);\n@@ -277,1 +277,1 @@\n-    private static void saveFrame(MemorySegment frameRGB, SegmentScope scope,\n+    private static void saveFrame(MemorySegment frameRGB, Arena arena,\n@@ -293,1 +293,1 @@\n-                var pixelArray = MemorySegment.ofAddress(pdata.address() + y*linesize, 3*width, scope);\n+                var pixelArray = MemorySegment.ofAddress(pdata.address() + y*linesize, 3*width, arena);\n","filename":"samples\/libffmpeg\/LibffmpegMain.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-          try (var arena = Arena.openConfined()) {\n+          try (var arena = Arena.ofConfined()) {\n","filename":"samples\/libgit2\/GitClone.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n@@ -71,1 +71,1 @@\n-                }, arena.scope());\n+                }, arena);\n","filename":"samples\/libjimage\/JImageFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-    static final OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64).asUnbounded();\n+    static final OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64).withTargetLayout(MemoryLayout.sequenceLayout(Constants$root.C_CHAR$LAYOUT));\n","filename":"samples\/libjimage\/org\/openjdk\/Constants$root.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-    static MemorySegment allocate(JImageClose_t fi, SegmentScope scope) {\n+    static MemorySegment allocate(JImageClose_t fi, Arena scope) {\n@@ -21,1 +21,1 @@\n-    static JImageClose_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+    static JImageClose_t ofAddress(MemorySegment addr, Arena scope) {\n","filename":"samples\/libjimage\/org\/openjdk\/JImageClose_t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-    static MemorySegment allocate(JImageFindResource_t fi, SegmentScope scope) {\n+    static MemorySegment allocate(JImageFindResource_t fi, Arena scope) {\n@@ -21,1 +21,1 @@\n-    static JImageFindResource_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+    static JImageFindResource_t ofAddress(MemorySegment addr, Arena scope) {\n","filename":"samples\/libjimage\/org\/openjdk\/JImageFindResource_t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-    static MemorySegment allocate(JImageGetResource_t fi, SegmentScope scope) {\n+    static MemorySegment allocate(JImageGetResource_t fi, Arena scope) {\n@@ -21,1 +21,1 @@\n-    static JImageGetResource_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+    static JImageGetResource_t ofAddress(MemorySegment addr, Arena scope) {\n","filename":"samples\/libjimage\/org\/openjdk\/JImageGetResource_t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-    static MemorySegment allocate(JImageOpen_t fi, SegmentScope scope) {\n+    static MemorySegment allocate(JImageOpen_t fi, Arena scope) {\n@@ -21,1 +21,1 @@\n-    static JImageOpen_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+    static JImageOpen_t ofAddress(MemorySegment addr, Arena scope) {\n","filename":"samples\/libjimage\/org\/openjdk\/JImageOpen_t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-    static MemorySegment allocate(JImagePackageToModule_t fi, SegmentScope scope) {\n+    static MemorySegment allocate(JImagePackageToModule_t fi, Arena scope) {\n@@ -21,1 +21,1 @@\n-    static JImagePackageToModule_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+    static JImagePackageToModule_t ofAddress(MemorySegment addr, Arena scope) {\n","filename":"samples\/libjimage\/org\/openjdk\/JImagePackageToModule_t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-    static MemorySegment allocate(JImageResourceIterator_t fi, SegmentScope scope) {\n+    static MemorySegment allocate(JImageResourceIterator_t fi, Arena scope) {\n@@ -21,1 +21,1 @@\n-    static JImageResourceIterator_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+    static JImageResourceIterator_t ofAddress(MemorySegment addr, Arena scope) {\n","filename":"samples\/libjimage\/org\/openjdk\/JImageResourceIterator_t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -18,1 +18,1 @@\n-    static MemorySegment allocate(JImageResourceVisitor_t fi, SegmentScope scope) {\n+    static MemorySegment allocate(JImageResourceVisitor_t fi, Arena scope) {\n@@ -21,1 +21,1 @@\n-    static JImageResourceVisitor_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+    static JImageResourceVisitor_t ofAddress(MemorySegment addr, Arena scope) {\n","filename":"samples\/libjimage\/org\/openjdk\/JImageResourceVisitor_t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-import java.lang.foreign.SegmentScope;\n+import java.lang.foreign.Arena;\n@@ -35,1 +35,1 @@\n-            (size, align) -> MemorySegment.allocateNative(size, align, SegmentScope.auto());\n+            (size, align) -> Arena.ofAuto().allocate(size, align);\n@@ -48,1 +48,2 @@\n-        SymbolLookup loaderLookup = SymbolLookup.libraryLookup(libPath, SegmentScope.global());\n+        SymbolLookup loaderLookup = SymbolLookup.libraryLookup(libPath, Arena.global());\n+\n@@ -63,1 +64,3 @@\n-        return SYMBOL_LOOKUP.find(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), symbol.scope())).orElse(null);\n+        return SYMBOL_LOOKUP.find(name)\n+                .map(s -> s.asUnbounded().asSlice(0, layout))\n+                .orElse(null);\n@@ -82,1 +85,1 @@\n-    static <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, SegmentScope scope) {\n+    static <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, Arena scope) {\n@@ -92,1 +95,1 @@\n-    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, SegmentScope scope) {\n+    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, Arena scope) {\n","filename":"samples\/libjimage\/org\/openjdk\/RuntimeHelper.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/libproc\/LibprocMain.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/libzstd\/LibzstdMain.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/lp_solve\/LpSolveDemo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    try (var arena = Arena.openConfined()) {\n+    try (var arena = Arena.ofConfined()) {\n","filename":"samples\/pcre2\/PcreCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/python3\/PythonMain.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-       try (var arena = Arena.openConfined()) {\n+       try (var arena = Arena.ofConfined()) {\n","filename":"samples\/readline\/Readline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n@@ -98,2 +98,2 @@\n-                var argv_seg = MemorySegment.ofAddress(argv.address(), C_POINTER.byteSize() * argc, arena.scope());\n-                var columnNames_seg = MemorySegment.ofAddress(columnNames.address(), C_POINTER.byteSize() * argc, arena.scope());\n+                var argv_seg = MemorySegment.ofAddress(argv.address(), C_POINTER.byteSize() * argc, arena);\n+                var columnNames_seg = MemorySegment.ofAddress(columnNames.address(), C_POINTER.byteSize() * argc, arena);\n@@ -107,1 +107,1 @@\n-            }, arena.scope());\n+            }, arena);\n","filename":"samples\/sqlite\/SqliteMain.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/tcl\/TCLMain.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/tensorflow\/TensorflowLoadSavedModel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-        try (var arena = Arena.openConfined()) {\n+        try (var arena = Arena.ofConfined()) {\n","filename":"samples\/time\/PanamaTime.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}