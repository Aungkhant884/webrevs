{"files":[{"patch":"@@ -141,0 +141,3 @@\n+            if(fiType.returnType().equals(MemorySegment.class)) {\n+                append(\", (SegmentAllocator)session\");\n+            }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/FunctionalInterfaceBuilder.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.jextract.test.toolprovider;\n+\n+import testlib.TestUtils;\n+import org.testng.annotations.Test;\n+import testlib.JextractToolRunner;\n+\n+import java.nio.file.Path;\n+\n+public class Test7903239 extends JextractToolRunner {\n+    @Test\n+    public void testFunctionPointerReturningStruct() {\n+        Path outputPath = getOutputFilePath(\"7903239_gen\");\n+        Path headerFile = getInputFilePath(\"test7903239.h\");\n+        run(\"--output\", outputPath.toString(), headerFile.toString()).checkSuccess();\n+        \/\/ nothing is generated that we can check, so we just check that jextract ran successfully\n+        TestUtils.deleteDir(outputPath);\n+    }\n+}\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/Test7903239.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -24,3 +24,1 @@\n-struct Foo {\n-    int (*Foo)();\n-};\n+typedef struct { int x; } (*CB)(void);\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/test7903239.h","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/test7903237.h","status":"copied"}]}