{"files":[{"patch":"@@ -141,0 +141,3 @@\n+            if(fiType.returnType().equals(MemorySegment.class)) {\n+                append(\", (SegmentAllocator)session\");\n+            }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/FunctionalInterfaceBuilder.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.foreign.MemorySession;\n+import org.testng.annotations.Test;\n+import test.jextract.test7903239.*;\n+import static org.testng.Assert.assertEquals;\n+\n+\/*\n+ * @test id=classes\n+ * @bug 7903239\n+ * @summary ofAddress factory of function pointer type is wrong for struct returns\n+ * @library \/lib\n+ * @run main\/othervm JtregJextract -l Test7903239 -t test.jextract.test7903239 test7903239.h\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test7903239\n+ *\/\n+\/*\n+ * @test id=sources\n+ * @bug 7903239\n+ * @summary ofAddress factory of function pointer type is wrong for struct returns\n+ * @library \/lib\n+ * @run main\/othervm JtregJextractSources -l Test7903239 -t test.jextract.test7903239 test7903239.h\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED Test7903239\n+ *\/\n+public class Test7903239 {\n+    @Test\n+    public void testOfAddress() {\n+        try (MemorySession session = MemorySession.openConfined()) {\n+            var foo = test7903239_h.foo$SEGMENT();\n+\n+            var barA = Foo.a(foo, session).apply();\n+            var barB = Foo.b(foo, session).apply(100);\n+\n+            assertEquals(Bar.a$get(barA), 5);\n+            assertEquals(Bar.a$get(barB), 100);\n+        }\n+    }\n+}\n","filename":"test\/jtreg\/generator\/test7903239\/Test7903239.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"test7903239.h\"\n+\n+struct Bar a() {\n+    return (struct Bar) { 5 };\n+};\n+\n+struct Bar b(int v) {\n+    return (struct Bar) { v };\n+};\n+\n+struct Foo foo = { a, b };\n\\ No newline at end of file\n","filename":"test\/jtreg\/generator\/test7903239\/libTest7903239.c","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif \/\/ __cplusplus\n+\n+#ifdef _WIN64\n+#define EXPORT __declspec(dllexport)\n+#else\n+#define EXPORT\n+#endif\n+\n+struct Bar { int a; };\n+\n+struct Foo {\n+    struct Bar (*a)(void);\n+    struct Bar (*b)(int);\n+};\n+\n+struct Foo foo;\n+\n+#ifdef __cplusplus\n+}\n+#endif \/\/ __cplusplus\n","filename":"test\/jtreg\/generator\/test7903239\/test7903239.h","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"}]}