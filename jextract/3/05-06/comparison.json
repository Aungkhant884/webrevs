{"files":[{"patch":"@@ -7,1 +7,1 @@\n-`jextract` depends on the [C libclang API](https:\/\/clang.llvm.org\/doxygen\/group__CINDEX.html). To build the jextract sources, the easiest option is to download LLVM binaries for your platform, which can be found [here](https:\/\/releases.llvm.org\/download.html) (a version <= 9 is required). Both the `jextract` tool and the bindings it generates depend heavily on the [Foreign Function & Memory API](https:\/\/openjdk.java.net\/jeps\/419), so a suitable [jdk 18 distribution](https:\/\/jdk.java.net\/18\/) is also required.\n+`jextract` depends on the [C libclang API](https:\/\/clang.llvm.org\/doxygen\/group__CINDEX.html). To build the jextract sources, the easiest option is to download LLVM binaries for your platform, which can be found [here](https:\/\/releases.llvm.org\/download.html) (a version >= 9 is required). Both the `jextract` tool and the bindings it generates depend heavily on the [Foreign Function & Memory API](https:\/\/openjdk.java.net\/jeps\/419), so a suitable [jdk 18 distribution](https:\/\/jdk.java.net\/18\/) is also required.\n@@ -118,6 +118,6 @@\n-| ------------------------------------------------------------ | ------------------------------------------------------------ |\n-| `--header-class-name` <String>                               | specify the name the main header class                       |\n-| `-t, --target-package` <String>                              | specify target package for the generated bindings            |\n-| `-I` <String>                                                | specify include files path for the clang parser              |\n-| `-l` <String>                                                | specify a library that will be loaded by the generated bindings |\n-| `-d` <String>                                                | specify where to place generated files                       |\n+| :----------------------------------------------------------- | ------------------------------------------------------------ |\n+| `--header-class-name <String>`                               | specify the name the main header class                       |\n+| `-t, --target-package <String>`                              | specify target package for the generated bindings            |\n+| `-I <String>`                                                | specify include files path for the clang parser              |\n+| `-l <String>`                                                | specify a library that will be loaded by the generated bindings |\n+| `-d <String>`                                                | specify where to place generated files                       |\n@@ -125,2 +125,2 @@\n-| `--dump-includes` <String>                                   | dump included symbols into specified file (see below)        |\n-| `--include-function` <String><br \/>`--include-macro` <String><br \/>`--include-struct` <String><br \/>`--include-union` <String><br \/>`--include-typedef` <String><br \/>`--include-var` <String> | Include a symbol of the given name and kind in the generated bindings (see below).<br \/>When one of these options is specified, any symbols that is not matched by any specified filters is omitted from the generated bindings. |\n+| `--dump-includes <String>`                                   | dump included symbols into specified file (see below)        |\n+| `--include-[function,macro,struct,union,typedef,var]<String>` | Include a symbol of the given name and kind in the generated bindings (see below). When one of these options is specified, any symbols that is not matched by any specified filters is omitted from the generated bindings. |\n","filename":"README.md","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}