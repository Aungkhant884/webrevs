{"files":[{"patch":"@@ -48,1 +48,0 @@\n-    private static final boolean CRASH_RECOVERY = Boolean.getBoolean(\"libclang.crash_recovery\");\n@@ -50,0 +49,2 @@\n+    \/\/ crash recovery is not an issue on Windows, so enable it there by default to work around a libclang issue with reparseTranslationUnit\n+    private static final boolean CRASH_RECOVERY = IS_WINDOWS || Boolean.getBoolean(\"libclang.crash_recovery\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/LibClang.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+    private static final int MAX_RETRIES = 10;\n@@ -105,1 +106,4 @@\n-            ErrorCode code = ErrorCode.valueOf(Index_h.clang_reparseTranslationUnit(\n+            ErrorCode code;\n+            int tries = 0;\n+            do {\n+                code = ErrorCode.valueOf(Index_h.clang_reparseTranslationUnit(\n@@ -110,0 +114,1 @@\n+            } while(code == ErrorCode.Crashed && (++tries) < MAX_RETRIES); \/\/ this call can crash on Windows. Retry in that case.\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/TranslationUnit.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}