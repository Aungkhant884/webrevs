{"files":[{"patch":"@@ -39,1 +39,1 @@\n-        return RuntimeHelper.upcallStub(CXCursorVisitor.class, fi, constants$13.CXCursorVisitor$FUNC, \"(Ljava\/lang\/foreign\/MemorySegment;Ljava\/lang\/foreign\/MemorySegment;Ljava\/lang\/foreign\/MemoryAddress;)I\", session);\n+        return RuntimeHelper.upcallStub(CXCursorVisitor.class, fi, constants$13.CXCursorVisitor$FUNC, session);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXCursorVisitor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$0.clang_getCString$MH, \"clang_getCString\");\n+        var mh$ = clang_getCString$MH();\n@@ -76,1 +76,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$0.clang_disposeString$MH, \"clang_disposeString\");\n+        var mh$ = clang_disposeString$MH();\n@@ -119,1 +119,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$0.clang_createIndex$MH, \"clang_createIndex\");\n+        var mh$ = clang_createIndex$MH();\n@@ -130,1 +130,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$0.clang_disposeIndex$MH, \"clang_disposeIndex\");\n+        var mh$ = clang_disposeIndex$MH();\n@@ -141,1 +141,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$0.clang_getFileName$MH, \"clang_getFileName\");\n+        var mh$ = clang_getFileName$MH();\n@@ -152,1 +152,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$0.clang_getNullLocation$MH, \"clang_getNullLocation\");\n+        var mh$ = clang_getNullLocation$MH();\n@@ -163,1 +163,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$1.clang_equalLocations$MH, \"clang_equalLocations\");\n+        var mh$ = clang_equalLocations$MH();\n@@ -174,1 +174,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$1.clang_getLocation$MH, \"clang_getLocation\");\n+        var mh$ = clang_getLocation$MH();\n@@ -185,1 +185,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$1.clang_getLocationForOffset$MH, \"clang_getLocationForOffset\");\n+        var mh$ = clang_getLocationForOffset$MH();\n@@ -196,1 +196,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$1.clang_Location_isInSystemHeader$MH, \"clang_Location_isInSystemHeader\");\n+        var mh$ = clang_Location_isInSystemHeader$MH();\n@@ -207,1 +207,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$1.clang_Location_isFromMainFile$MH, \"clang_Location_isFromMainFile\");\n+        var mh$ = clang_Location_isFromMainFile$MH();\n@@ -218,1 +218,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$1.clang_Range_isNull$MH, \"clang_Range_isNull\");\n+        var mh$ = clang_Range_isNull$MH();\n@@ -229,1 +229,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$2.clang_getExpansionLocation$MH, \"clang_getExpansionLocation\");\n+        var mh$ = clang_getExpansionLocation$MH();\n@@ -240,1 +240,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$2.clang_getSpellingLocation$MH, \"clang_getSpellingLocation\");\n+        var mh$ = clang_getSpellingLocation$MH();\n@@ -251,1 +251,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$2.clang_getFileLocation$MH, \"clang_getFileLocation\");\n+        var mh$ = clang_getFileLocation$MH();\n@@ -262,1 +262,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$2.clang_getRangeStart$MH, \"clang_getRangeStart\");\n+        var mh$ = clang_getRangeStart$MH();\n@@ -273,1 +273,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$2.clang_getRangeEnd$MH, \"clang_getRangeEnd\");\n+        var mh$ = clang_getRangeEnd$MH();\n@@ -299,1 +299,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$2.clang_getChildDiagnostics$MH, \"clang_getChildDiagnostics\");\n+        var mh$ = clang_getChildDiagnostics$MH();\n@@ -310,1 +310,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$3.clang_getNumDiagnostics$MH, \"clang_getNumDiagnostics\");\n+        var mh$ = clang_getNumDiagnostics$MH();\n@@ -321,1 +321,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$3.clang_getDiagnostic$MH, \"clang_getDiagnostic\");\n+        var mh$ = clang_getDiagnostic$MH();\n@@ -332,1 +332,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$3.clang_disposeDiagnostic$MH, \"clang_disposeDiagnostic\");\n+        var mh$ = clang_disposeDiagnostic$MH();\n@@ -361,1 +361,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$3.clang_formatDiagnostic$MH, \"clang_formatDiagnostic\");\n+        var mh$ = clang_formatDiagnostic$MH();\n@@ -372,1 +372,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$3.clang_defaultDiagnosticDisplayOptions$MH, \"clang_defaultDiagnosticDisplayOptions\");\n+        var mh$ = clang_defaultDiagnosticDisplayOptions$MH();\n@@ -383,1 +383,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$3.clang_getDiagnosticSeverity$MH, \"clang_getDiagnosticSeverity\");\n+        var mh$ = clang_getDiagnosticSeverity$MH();\n@@ -394,1 +394,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$4.clang_getDiagnosticLocation$MH, \"clang_getDiagnosticLocation\");\n+        var mh$ = clang_getDiagnosticLocation$MH();\n@@ -405,1 +405,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$4.clang_getDiagnosticSpelling$MH, \"clang_getDiagnosticSpelling\");\n+        var mh$ = clang_getDiagnosticSpelling$MH();\n@@ -467,1 +467,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$4.clang_parseTranslationUnit$MH, \"clang_parseTranslationUnit\");\n+        var mh$ = clang_parseTranslationUnit$MH();\n@@ -478,1 +478,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$4.clang_parseTranslationUnit2$MH, \"clang_parseTranslationUnit2\");\n+        var mh$ = clang_parseTranslationUnit2$MH();\n@@ -504,1 +504,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$4.clang_saveTranslationUnit$MH, \"clang_saveTranslationUnit\");\n+        var mh$ = clang_saveTranslationUnit$MH();\n@@ -515,1 +515,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$4.clang_disposeTranslationUnit$MH, \"clang_disposeTranslationUnit\");\n+        var mh$ = clang_disposeTranslationUnit$MH();\n@@ -529,1 +529,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$5.clang_defaultReparseOptions$MH, \"clang_defaultReparseOptions\");\n+        var mh$ = clang_defaultReparseOptions$MH();\n@@ -540,1 +540,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$5.clang_reparseTranslationUnit$MH, \"clang_reparseTranslationUnit\");\n+        var mh$ = clang_reparseTranslationUnit$MH();\n@@ -881,1 +881,1 @@\n-        return (int)149L;\n+        return (int)152L;\n@@ -1145,1 +1145,1 @@\n-        return (int)285L;\n+        return (int)293L;\n@@ -1328,1 +1328,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$5.clang_getNullCursor$MH, \"clang_getNullCursor\");\n+        var mh$ = clang_getNullCursor$MH();\n@@ -1339,1 +1339,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$5.clang_getTranslationUnitCursor$MH, \"clang_getTranslationUnitCursor\");\n+        var mh$ = clang_getTranslationUnitCursor$MH();\n@@ -1350,1 +1350,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$5.clang_equalCursors$MH, \"clang_equalCursors\");\n+        var mh$ = clang_equalCursors$MH();\n@@ -1361,1 +1361,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$5.clang_Cursor_isNull$MH, \"clang_Cursor_isNull\");\n+        var mh$ = clang_Cursor_isNull$MH();\n@@ -1372,1 +1372,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$6.clang_getCursorKind$MH, \"clang_getCursorKind\");\n+        var mh$ = clang_getCursorKind$MH();\n@@ -1383,1 +1383,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$6.clang_isDeclaration$MH, \"clang_isDeclaration\");\n+        var mh$ = clang_isDeclaration$MH();\n@@ -1394,1 +1394,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$6.clang_isAttribute$MH, \"clang_isAttribute\");\n+        var mh$ = clang_isAttribute$MH();\n@@ -1405,1 +1405,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$6.clang_isInvalid$MH, \"clang_isInvalid\");\n+        var mh$ = clang_isInvalid$MH();\n@@ -1416,1 +1416,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$6.clang_isPreprocessing$MH, \"clang_isPreprocessing\");\n+        var mh$ = clang_isPreprocessing$MH();\n@@ -1439,1 +1439,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$6.clang_getCursorLanguage$MH, \"clang_getCursorLanguage\");\n+        var mh$ = clang_getCursorLanguage$MH();\n@@ -1450,1 +1450,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$7.clang_Cursor_getTranslationUnit$MH, \"clang_Cursor_getTranslationUnit\");\n+        var mh$ = clang_Cursor_getTranslationUnit$MH();\n@@ -1461,1 +1461,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$7.clang_getCursorLocation$MH, \"clang_getCursorLocation\");\n+        var mh$ = clang_getCursorLocation$MH();\n@@ -1472,1 +1472,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$7.clang_getCursorExtent$MH, \"clang_getCursorExtent\");\n+        var mh$ = clang_getCursorExtent$MH();\n@@ -1600,1 +1600,1 @@\n-        return (int)38L;\n+        return (int)39L;\n@@ -1897,1 +1897,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$7.clang_getCursorType$MH, \"clang_getCursorType\");\n+        var mh$ = clang_getCursorType$MH();\n@@ -1908,1 +1908,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$7.clang_getTypeSpelling$MH, \"clang_getTypeSpelling\");\n+        var mh$ = clang_getTypeSpelling$MH();\n@@ -1919,1 +1919,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$7.clang_getTypedefDeclUnderlyingType$MH, \"clang_getTypedefDeclUnderlyingType\");\n+        var mh$ = clang_getTypedefDeclUnderlyingType$MH();\n@@ -1930,1 +1930,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$8.clang_getEnumDeclIntegerType$MH, \"clang_getEnumDeclIntegerType\");\n+        var mh$ = clang_getEnumDeclIntegerType$MH();\n@@ -1941,1 +1941,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$8.clang_getEnumConstantDeclValue$MH, \"clang_getEnumConstantDeclValue\");\n+        var mh$ = clang_getEnumConstantDeclValue$MH();\n@@ -1952,1 +1952,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$8.clang_getEnumConstantDeclUnsignedValue$MH, \"clang_getEnumConstantDeclUnsignedValue\");\n+        var mh$ = clang_getEnumConstantDeclUnsignedValue$MH();\n@@ -1963,1 +1963,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$8.clang_getFieldDeclBitWidth$MH, \"clang_getFieldDeclBitWidth\");\n+        var mh$ = clang_getFieldDeclBitWidth$MH();\n@@ -1974,1 +1974,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$8.clang_Cursor_getNumArguments$MH, \"clang_Cursor_getNumArguments\");\n+        var mh$ = clang_Cursor_getNumArguments$MH();\n@@ -1985,1 +1985,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$8.clang_Cursor_getArgument$MH, \"clang_Cursor_getArgument\");\n+        var mh$ = clang_Cursor_getArgument$MH();\n@@ -1996,1 +1996,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$9.clang_equalTypes$MH, \"clang_equalTypes\");\n+        var mh$ = clang_equalTypes$MH();\n@@ -2007,1 +2007,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$9.clang_getCanonicalType$MH, \"clang_getCanonicalType\");\n+        var mh$ = clang_getCanonicalType$MH();\n@@ -2018,1 +2018,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$9.clang_isConstQualifiedType$MH, \"clang_isConstQualifiedType\");\n+        var mh$ = clang_isConstQualifiedType$MH();\n@@ -2029,1 +2029,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$9.clang_Cursor_isMacroFunctionLike$MH, \"clang_Cursor_isMacroFunctionLike\");\n+        var mh$ = clang_Cursor_isMacroFunctionLike$MH();\n@@ -2040,1 +2040,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$9.clang_isVolatileQualifiedType$MH, \"clang_isVolatileQualifiedType\");\n+        var mh$ = clang_isVolatileQualifiedType$MH();\n@@ -2051,1 +2051,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$9.clang_getTypedefName$MH, \"clang_getTypedefName\");\n+        var mh$ = clang_getTypedefName$MH();\n@@ -2062,1 +2062,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$10.clang_getPointeeType$MH, \"clang_getPointeeType\");\n+        var mh$ = clang_getPointeeType$MH();\n@@ -2073,1 +2073,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$10.clang_getTypeDeclaration$MH, \"clang_getTypeDeclaration\");\n+        var mh$ = clang_getTypeDeclaration$MH();\n@@ -2084,1 +2084,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$10.clang_getTypeKindSpelling$MH, \"clang_getTypeKindSpelling\");\n+        var mh$ = clang_getTypeKindSpelling$MH();\n@@ -2095,1 +2095,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$10.clang_getFunctionTypeCallingConv$MH, \"clang_getFunctionTypeCallingConv\");\n+        var mh$ = clang_getFunctionTypeCallingConv$MH();\n@@ -2106,1 +2106,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$10.clang_getResultType$MH, \"clang_getResultType\");\n+        var mh$ = clang_getResultType$MH();\n@@ -2117,1 +2117,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$10.clang_getNumArgTypes$MH, \"clang_getNumArgTypes\");\n+        var mh$ = clang_getNumArgTypes$MH();\n@@ -2128,1 +2128,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$11.clang_getArgType$MH, \"clang_getArgType\");\n+        var mh$ = clang_getArgType$MH();\n@@ -2139,1 +2139,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$11.clang_isFunctionTypeVariadic$MH, \"clang_isFunctionTypeVariadic\");\n+        var mh$ = clang_isFunctionTypeVariadic$MH();\n@@ -2150,1 +2150,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$11.clang_getCursorResultType$MH, \"clang_getCursorResultType\");\n+        var mh$ = clang_getCursorResultType$MH();\n@@ -2161,1 +2161,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$11.clang_getElementType$MH, \"clang_getElementType\");\n+        var mh$ = clang_getElementType$MH();\n@@ -2172,1 +2172,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$11.clang_getNumElements$MH, \"clang_getNumElements\");\n+        var mh$ = clang_getNumElements$MH();\n@@ -2183,1 +2183,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$11.clang_getArrayElementType$MH, \"clang_getArrayElementType\");\n+        var mh$ = clang_getArrayElementType$MH();\n@@ -2194,1 +2194,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$12.clang_getArraySize$MH, \"clang_getArraySize\");\n+        var mh$ = clang_getArraySize$MH();\n@@ -2235,1 +2235,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$12.clang_Type_getSizeOf$MH, \"clang_Type_getSizeOf\");\n+        var mh$ = clang_Type_getSizeOf$MH();\n@@ -2246,1 +2246,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$12.clang_Type_getOffsetOf$MH, \"clang_Type_getOffsetOf\");\n+        var mh$ = clang_Type_getOffsetOf$MH();\n@@ -2257,1 +2257,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$12.clang_Cursor_isAnonymous$MH, \"clang_Cursor_isAnonymous\");\n+        var mh$ = clang_Cursor_isAnonymous$MH();\n@@ -2268,1 +2268,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$12.clang_Cursor_isAnonymousRecordDecl$MH, \"clang_Cursor_isAnonymousRecordDecl\");\n+        var mh$ = clang_Cursor_isAnonymousRecordDecl$MH();\n@@ -2279,1 +2279,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$12.clang_Cursor_isBitField$MH, \"clang_Cursor_isBitField\");\n+        var mh$ = clang_Cursor_isBitField$MH();\n@@ -2299,1 +2299,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$13.clang_visitChildren$MH, \"clang_visitChildren\");\n+        var mh$ = clang_visitChildren$MH();\n@@ -2310,1 +2310,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$13.clang_getCursorUSR$MH, \"clang_getCursorUSR\");\n+        var mh$ = clang_getCursorUSR$MH();\n@@ -2321,1 +2321,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$13.clang_getCursorSpelling$MH, \"clang_getCursorSpelling\");\n+        var mh$ = clang_getCursorSpelling$MH();\n@@ -2413,1 +2413,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$13.clang_PrintingPolicy_getProperty$MH, \"clang_PrintingPolicy_getProperty\");\n+        var mh$ = clang_PrintingPolicy_getProperty$MH();\n@@ -2424,1 +2424,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$14.clang_PrintingPolicy_setProperty$MH, \"clang_PrintingPolicy_setProperty\");\n+        var mh$ = clang_PrintingPolicy_setProperty$MH();\n@@ -2435,1 +2435,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$14.clang_getCursorPrintingPolicy$MH, \"clang_getCursorPrintingPolicy\");\n+        var mh$ = clang_getCursorPrintingPolicy$MH();\n@@ -2446,1 +2446,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$14.clang_PrintingPolicy_dispose$MH, \"clang_PrintingPolicy_dispose\");\n+        var mh$ = clang_PrintingPolicy_dispose$MH();\n@@ -2457,1 +2457,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$14.clang_getCursorPrettyPrinted$MH, \"clang_getCursorPrettyPrinted\");\n+        var mh$ = clang_getCursorPrettyPrinted$MH();\n@@ -2468,1 +2468,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$14.clang_getCursorDisplayName$MH, \"clang_getCursorDisplayName\");\n+        var mh$ = clang_getCursorDisplayName$MH();\n@@ -2479,1 +2479,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$14.clang_getCursorReferenced$MH, \"clang_getCursorReferenced\");\n+        var mh$ = clang_getCursorReferenced$MH();\n@@ -2490,1 +2490,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$15.clang_getCursorDefinition$MH, \"clang_getCursorDefinition\");\n+        var mh$ = clang_getCursorDefinition$MH();\n@@ -2501,1 +2501,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$15.clang_isCursorDefinition$MH, \"clang_isCursorDefinition\");\n+        var mh$ = clang_isCursorDefinition$MH();\n@@ -2512,1 +2512,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$15.clang_Cursor_isVariadic$MH, \"clang_Cursor_isVariadic\");\n+        var mh$ = clang_Cursor_isVariadic$MH();\n@@ -2523,1 +2523,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$15.clang_Cursor_getMangling$MH, \"clang_Cursor_getMangling\");\n+        var mh$ = clang_Cursor_getMangling$MH();\n@@ -2549,1 +2549,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$15.clang_getTokenKind$MH, \"clang_getTokenKind\");\n+        var mh$ = clang_getTokenKind$MH();\n@@ -2560,1 +2560,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$15.clang_getTokenSpelling$MH, \"clang_getTokenSpelling\");\n+        var mh$ = clang_getTokenSpelling$MH();\n@@ -2571,1 +2571,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$16.clang_getTokenLocation$MH, \"clang_getTokenLocation\");\n+        var mh$ = clang_getTokenLocation$MH();\n@@ -2582,1 +2582,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$16.clang_getTokenExtent$MH, \"clang_getTokenExtent\");\n+        var mh$ = clang_getTokenExtent$MH();\n@@ -2593,1 +2593,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$16.clang_tokenize$MH, \"clang_tokenize\");\n+        var mh$ = clang_tokenize$MH();\n@@ -2604,1 +2604,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$16.clang_disposeTokens$MH, \"clang_disposeTokens\");\n+        var mh$ = clang_disposeTokens$MH();\n@@ -2615,1 +2615,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$16.clang_getCursorKindSpelling$MH, \"clang_getCursorKindSpelling\");\n+        var mh$ = clang_getCursorKindSpelling$MH();\n@@ -2626,1 +2626,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$16.clang_getClangVersion$MH, \"clang_getClangVersion\");\n+        var mh$ = clang_getClangVersion$MH();\n@@ -2637,1 +2637,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$17.clang_toggleCrashRecovery$MH, \"clang_toggleCrashRecovery\");\n+        var mh$ = clang_toggleCrashRecovery$MH();\n@@ -2648,1 +2648,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$17.clang_Cursor_Evaluate$MH, \"clang_Cursor_Evaluate\");\n+        var mh$ = clang_Cursor_Evaluate$MH();\n@@ -2659,1 +2659,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$17.clang_EvalResult_getKind$MH, \"clang_EvalResult_getKind\");\n+        var mh$ = clang_EvalResult_getKind$MH();\n@@ -2670,1 +2670,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$17.clang_EvalResult_getAsInt$MH, \"clang_EvalResult_getAsInt\");\n+        var mh$ = clang_EvalResult_getAsInt$MH();\n@@ -2681,1 +2681,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$17.clang_EvalResult_getAsLongLong$MH, \"clang_EvalResult_getAsLongLong\");\n+        var mh$ = clang_EvalResult_getAsLongLong$MH();\n@@ -2692,1 +2692,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$17.clang_EvalResult_isUnsignedInt$MH, \"clang_EvalResult_isUnsignedInt\");\n+        var mh$ = clang_EvalResult_isUnsignedInt$MH();\n@@ -2703,1 +2703,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$18.clang_EvalResult_getAsUnsigned$MH, \"clang_EvalResult_getAsUnsigned\");\n+        var mh$ = clang_EvalResult_getAsUnsigned$MH();\n@@ -2714,1 +2714,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$18.clang_EvalResult_getAsDouble$MH, \"clang_EvalResult_getAsDouble\");\n+        var mh$ = clang_EvalResult_getAsDouble$MH();\n@@ -2725,1 +2725,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$18.clang_EvalResult_getAsStr$MH, \"clang_EvalResult_getAsStr\");\n+        var mh$ = clang_EvalResult_getAsStr$MH();\n@@ -2736,1 +2736,1 @@\n-        var mh$ = RuntimeHelper.requireNonNull(constants$18.clang_EvalResult_dispose$MH, \"clang_EvalResult_dispose\");\n+        var mh$ = clang_EvalResult_dispose$MH();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/Index_h.java","additions":113,"deletions":113,"binary":false,"changes":226,"status":"modified"},{"patch":"@@ -69,1 +69,2 @@\n-        SYMBOL_LOOKUP = name -> SymbolLookup.loaderLookup().lookup(name).or(() -> LINKER.defaultLookup().lookup(name));\n+        SymbolLookup loaderLookup = SymbolLookup.loaderLookup();\n+        SYMBOL_LOOKUP = name -> loaderLookup.lookup(name).or(() -> LINKER.defaultLookup().lookup(name));\n@@ -85,7 +86,4 @@\n-    static final MethodHandle downcallHandle(String name, FunctionDescriptor fdesc, boolean variadic) {\n-        return SYMBOL_LOOKUP.lookup(name).map(\n-                addr -> {\n-                    return variadic ?\n-                        VarargsInvoker.make(addr, fdesc) :\n-                        LINKER.downcallHandle(addr, fdesc);\n-                }).orElse(null);\n+    static final MethodHandle downcallHandle(String name, FunctionDescriptor fdesc) {\n+        return SYMBOL_LOOKUP.lookup(name).\n+                map(addr -> LINKER.downcallHandle(addr, fdesc)).\n+                orElse(null);\n@@ -94,4 +92,1 @@\n-    static final MethodHandle downcallHandle(FunctionDescriptor fdesc, boolean variadic) {\n-        if (variadic) {\n-            throw new AssertionError(\"Cannot get here!\");\n-        }\n+    static final MethodHandle downcallHandle(FunctionDescriptor fdesc) {\n@@ -101,1 +96,7 @@\n-    static final <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, String mtypeDesc, MemorySession session) {\n+    static final MethodHandle downcallHandleVariadic(String name, FunctionDescriptor fdesc) {\n+        return SYMBOL_LOOKUP.lookup(name).\n+                map(addr -> VarargsInvoker.make(addr, fdesc)).\n+                orElse(null);\n+    }\n+\n+    static final <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, MemorySession session) {\n@@ -103,2 +104,1 @@\n-            MethodHandle handle = MH_LOOKUP.findVirtual(fi, \"apply\",\n-                    MethodType.fromMethodDescriptorString(mtypeDesc, LOADER));\n+            MethodHandle handle = MH_LOOKUP.findVirtual(fi, \"apply\", Linker.upcallType(fdesc));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/RuntimeHelper.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        constants$0.clang_getCString$FUNC, false\n+        constants$0.clang_getCString$FUNC\n@@ -57,1 +57,1 @@\n-        constants$0.clang_disposeString$FUNC, false\n+        constants$0.clang_disposeString$FUNC\n@@ -65,1 +65,1 @@\n-        constants$0.clang_createIndex$FUNC, false\n+        constants$0.clang_createIndex$FUNC\n@@ -72,1 +72,1 @@\n-        constants$0.clang_disposeIndex$FUNC, false\n+        constants$0.clang_disposeIndex$FUNC\n@@ -83,1 +83,1 @@\n-        constants$0.clang_getFileName$FUNC, false\n+        constants$0.clang_getFileName$FUNC\n@@ -92,1 +92,1 @@\n-        constants$0.clang_getNullLocation$FUNC, false\n+        constants$0.clang_getNullLocation$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$0.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        constants$1.clang_equalLocations$FUNC, false\n+        constants$1.clang_equalLocations$FUNC\n@@ -65,1 +65,1 @@\n-        constants$1.clang_getLocation$FUNC, false\n+        constants$1.clang_getLocation$FUNC\n@@ -78,1 +78,1 @@\n-        constants$1.clang_getLocationForOffset$FUNC, false\n+        constants$1.clang_getLocationForOffset$FUNC\n@@ -89,1 +89,1 @@\n-        constants$1.clang_Location_isInSystemHeader$FUNC, false\n+        constants$1.clang_Location_isInSystemHeader$FUNC\n@@ -100,1 +100,1 @@\n-        constants$1.clang_Location_isFromMainFile$FUNC, false\n+        constants$1.clang_Location_isFromMainFile$FUNC\n@@ -111,1 +111,1 @@\n-        constants$1.clang_Range_isNull$FUNC, false\n+        constants$1.clang_Range_isNull$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$1.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        constants$10.clang_getPointeeType$FUNC, false\n+        constants$10.clang_getPointeeType$FUNC\n@@ -65,1 +65,1 @@\n-        constants$10.clang_getTypeDeclaration$FUNC, false\n+        constants$10.clang_getTypeDeclaration$FUNC\n@@ -76,1 +76,1 @@\n-        constants$10.clang_getTypeKindSpelling$FUNC, false\n+        constants$10.clang_getTypeKindSpelling$FUNC\n@@ -87,1 +87,1 @@\n-        constants$10.clang_getFunctionTypeCallingConv$FUNC, false\n+        constants$10.clang_getFunctionTypeCallingConv$FUNC\n@@ -102,1 +102,1 @@\n-        constants$10.clang_getResultType$FUNC, false\n+        constants$10.clang_getResultType$FUNC\n@@ -113,1 +113,1 @@\n-        constants$10.clang_getNumArgTypes$FUNC, false\n+        constants$10.clang_getNumArgTypes$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$10.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        constants$11.clang_getArgType$FUNC, false\n+        constants$11.clang_getArgType$FUNC\n@@ -62,1 +62,1 @@\n-        constants$11.clang_isFunctionTypeVariadic$FUNC, false\n+        constants$11.clang_isFunctionTypeVariadic$FUNC\n@@ -77,1 +77,1 @@\n-        constants$11.clang_getCursorResultType$FUNC, false\n+        constants$11.clang_getCursorResultType$FUNC\n@@ -92,1 +92,1 @@\n-        constants$11.clang_getElementType$FUNC, false\n+        constants$11.clang_getElementType$FUNC\n@@ -103,1 +103,1 @@\n-        constants$11.clang_getNumElements$FUNC, false\n+        constants$11.clang_getNumElements$FUNC\n@@ -118,1 +118,1 @@\n-        constants$11.clang_getArrayElementType$FUNC, false\n+        constants$11.clang_getArrayElementType$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$11.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        constants$12.clang_getArraySize$FUNC, false\n+        constants$12.clang_getArraySize$FUNC\n@@ -57,1 +57,1 @@\n-        constants$12.clang_Type_getSizeOf$FUNC, false\n+        constants$12.clang_Type_getSizeOf$FUNC\n@@ -69,1 +69,1 @@\n-        constants$12.clang_Type_getOffsetOf$FUNC, false\n+        constants$12.clang_Type_getOffsetOf$FUNC\n@@ -80,1 +80,1 @@\n-        constants$12.clang_Cursor_isAnonymous$FUNC, false\n+        constants$12.clang_Cursor_isAnonymous$FUNC\n@@ -91,1 +91,1 @@\n-        constants$12.clang_Cursor_isAnonymousRecordDecl$FUNC, false\n+        constants$12.clang_Cursor_isAnonymousRecordDecl$FUNC\n@@ -102,1 +102,1 @@\n-        constants$12.clang_Cursor_isBitField$FUNC, false\n+        constants$12.clang_Cursor_isBitField$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$12.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        constants$13.CXCursorVisitor$FUNC, false\n+        constants$13.CXCursorVisitor$FUNC\n@@ -64,1 +64,1 @@\n-        constants$13.clang_visitChildren$FUNC, false\n+        constants$13.clang_visitChildren$FUNC\n@@ -79,1 +79,1 @@\n-        constants$13.clang_getCursorUSR$FUNC, false\n+        constants$13.clang_getCursorUSR$FUNC\n@@ -94,1 +94,1 @@\n-        constants$13.clang_getCursorSpelling$FUNC, false\n+        constants$13.clang_getCursorSpelling$FUNC\n@@ -102,1 +102,1 @@\n-        constants$13.clang_PrintingPolicy_getProperty$FUNC, false\n+        constants$13.clang_PrintingPolicy_getProperty$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$13.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        constants$14.clang_PrintingPolicy_setProperty$FUNC, false\n+        constants$14.clang_PrintingPolicy_setProperty$FUNC\n@@ -55,1 +55,1 @@\n-        constants$14.clang_getCursorPrintingPolicy$FUNC, false\n+        constants$14.clang_getCursorPrintingPolicy$FUNC\n@@ -62,1 +62,1 @@\n-        constants$14.clang_PrintingPolicy_dispose$FUNC, false\n+        constants$14.clang_PrintingPolicy_dispose$FUNC\n@@ -78,1 +78,1 @@\n-        constants$14.clang_getCursorPrettyPrinted$FUNC, false\n+        constants$14.clang_getCursorPrettyPrinted$FUNC\n@@ -93,1 +93,1 @@\n-        constants$14.clang_getCursorDisplayName$FUNC, false\n+        constants$14.clang_getCursorDisplayName$FUNC\n@@ -108,1 +108,1 @@\n-        constants$14.clang_getCursorReferenced$FUNC, false\n+        constants$14.clang_getCursorReferenced$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$14.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        constants$15.clang_getCursorDefinition$FUNC, false\n+        constants$15.clang_getCursorDefinition$FUNC\n@@ -61,1 +61,1 @@\n-        constants$15.clang_isCursorDefinition$FUNC, false\n+        constants$15.clang_isCursorDefinition$FUNC\n@@ -72,1 +72,1 @@\n-        constants$15.clang_Cursor_isVariadic$FUNC, false\n+        constants$15.clang_Cursor_isVariadic$FUNC\n@@ -87,1 +87,1 @@\n-        constants$15.clang_Cursor_getMangling$FUNC, false\n+        constants$15.clang_Cursor_getMangling$FUNC\n@@ -97,1 +97,1 @@\n-        constants$15.clang_getTokenKind$FUNC, false\n+        constants$15.clang_getTokenKind$FUNC\n@@ -112,1 +112,1 @@\n-        constants$15.clang_getTokenSpelling$FUNC, false\n+        constants$15.clang_getTokenSpelling$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$15.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        constants$16.clang_getTokenLocation$FUNC, false\n+        constants$16.clang_getTokenLocation$FUNC\n@@ -65,1 +65,1 @@\n-        constants$16.clang_getTokenExtent$FUNC, false\n+        constants$16.clang_getTokenExtent$FUNC\n@@ -79,1 +79,1 @@\n-        constants$16.clang_tokenize$FUNC, false\n+        constants$16.clang_tokenize$FUNC\n@@ -88,1 +88,1 @@\n-        constants$16.clang_disposeTokens$FUNC, false\n+        constants$16.clang_disposeTokens$FUNC\n@@ -99,1 +99,1 @@\n-        constants$16.clang_getCursorKindSpelling$FUNC, false\n+        constants$16.clang_getCursorKindSpelling$FUNC\n@@ -108,1 +108,1 @@\n-        constants$16.clang_getClangVersion$FUNC, false\n+        constants$16.clang_getClangVersion$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$16.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        constants$17.clang_toggleCrashRecovery$FUNC, false\n+        constants$17.clang_toggleCrashRecovery$FUNC\n@@ -53,1 +53,1 @@\n-        constants$17.clang_Cursor_Evaluate$FUNC, false\n+        constants$17.clang_Cursor_Evaluate$FUNC\n@@ -60,1 +60,1 @@\n-        constants$17.clang_EvalResult_getKind$FUNC, false\n+        constants$17.clang_EvalResult_getKind$FUNC\n@@ -67,1 +67,1 @@\n-        constants$17.clang_EvalResult_getAsInt$FUNC, false\n+        constants$17.clang_EvalResult_getAsInt$FUNC\n@@ -74,1 +74,1 @@\n-        constants$17.clang_EvalResult_getAsLongLong$FUNC, false\n+        constants$17.clang_EvalResult_getAsLongLong$FUNC\n@@ -81,1 +81,1 @@\n-        constants$17.clang_EvalResult_isUnsignedInt$FUNC, false\n+        constants$17.clang_EvalResult_isUnsignedInt$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$17.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        constants$18.clang_EvalResult_getAsUnsigned$FUNC, false\n+        constants$18.clang_EvalResult_getAsUnsigned$FUNC\n@@ -49,1 +49,1 @@\n-        constants$18.clang_EvalResult_getAsDouble$FUNC, false\n+        constants$18.clang_EvalResult_getAsDouble$FUNC\n@@ -56,1 +56,1 @@\n-        constants$18.clang_EvalResult_getAsStr$FUNC, false\n+        constants$18.clang_EvalResult_getAsStr$FUNC\n@@ -63,1 +63,1 @@\n-        constants$18.clang_EvalResult_dispose$FUNC, false\n+        constants$18.clang_EvalResult_dispose$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$18.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        constants$2.clang_getExpansionLocation$FUNC, false\n+        constants$2.clang_getExpansionLocation$FUNC\n@@ -65,1 +65,1 @@\n-        constants$2.clang_getSpellingLocation$FUNC, false\n+        constants$2.clang_getSpellingLocation$FUNC\n@@ -80,1 +80,1 @@\n-        constants$2.clang_getFileLocation$FUNC, false\n+        constants$2.clang_getFileLocation$FUNC\n@@ -95,1 +95,1 @@\n-        constants$2.clang_getRangeStart$FUNC, false\n+        constants$2.clang_getRangeStart$FUNC\n@@ -110,1 +110,1 @@\n-        constants$2.clang_getRangeEnd$FUNC, false\n+        constants$2.clang_getRangeEnd$FUNC\n@@ -117,1 +117,1 @@\n-        constants$2.clang_getChildDiagnostics$FUNC, false\n+        constants$2.clang_getChildDiagnostics$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$2.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        constants$3.clang_getNumDiagnostics$FUNC, false\n+        constants$3.clang_getNumDiagnostics$FUNC\n@@ -50,1 +50,1 @@\n-        constants$3.clang_getDiagnostic$FUNC, false\n+        constants$3.clang_getDiagnostic$FUNC\n@@ -57,1 +57,1 @@\n-        constants$3.clang_disposeDiagnostic$FUNC, false\n+        constants$3.clang_disposeDiagnostic$FUNC\n@@ -69,1 +69,1 @@\n-        constants$3.clang_formatDiagnostic$FUNC, false\n+        constants$3.clang_formatDiagnostic$FUNC\n@@ -74,1 +74,1 @@\n-        constants$3.clang_defaultDiagnosticDisplayOptions$FUNC, false\n+        constants$3.clang_defaultDiagnosticDisplayOptions$FUNC\n@@ -81,1 +81,1 @@\n-        constants$3.clang_getDiagnosticSeverity$FUNC, false\n+        constants$3.clang_getDiagnosticSeverity$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$3.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        constants$4.clang_getDiagnosticLocation$FUNC, false\n+        constants$4.clang_getDiagnosticLocation$FUNC\n@@ -57,1 +57,1 @@\n-        constants$4.clang_getDiagnosticSpelling$FUNC, false\n+        constants$4.clang_getDiagnosticSpelling$FUNC\n@@ -70,1 +70,1 @@\n-        constants$4.clang_parseTranslationUnit$FUNC, false\n+        constants$4.clang_parseTranslationUnit$FUNC\n@@ -84,1 +84,1 @@\n-        constants$4.clang_parseTranslationUnit2$FUNC, false\n+        constants$4.clang_parseTranslationUnit2$FUNC\n@@ -93,1 +93,1 @@\n-        constants$4.clang_saveTranslationUnit$FUNC, false\n+        constants$4.clang_saveTranslationUnit$FUNC\n@@ -100,1 +100,1 @@\n-        constants$4.clang_disposeTranslationUnit$FUNC, false\n+        constants$4.clang_disposeTranslationUnit$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$4.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        constants$5.clang_defaultReparseOptions$FUNC, false\n+        constants$5.clang_defaultReparseOptions$FUNC\n@@ -52,1 +52,1 @@\n-        constants$5.clang_reparseTranslationUnit$FUNC, false\n+        constants$5.clang_reparseTranslationUnit$FUNC\n@@ -61,1 +61,1 @@\n-        constants$5.clang_getNullCursor$FUNC, false\n+        constants$5.clang_getNullCursor$FUNC\n@@ -72,1 +72,1 @@\n-        constants$5.clang_getTranslationUnitCursor$FUNC, false\n+        constants$5.clang_getTranslationUnitCursor$FUNC\n@@ -88,1 +88,1 @@\n-        constants$5.clang_equalCursors$FUNC, false\n+        constants$5.clang_equalCursors$FUNC\n@@ -99,1 +99,1 @@\n-        constants$5.clang_Cursor_isNull$FUNC, false\n+        constants$5.clang_Cursor_isNull$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$5.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        constants$6.clang_getCursorKind$FUNC, false\n+        constants$6.clang_getCursorKind$FUNC\n@@ -53,1 +53,1 @@\n-        constants$6.clang_isDeclaration$FUNC, false\n+        constants$6.clang_isDeclaration$FUNC\n@@ -60,1 +60,1 @@\n-        constants$6.clang_isAttribute$FUNC, false\n+        constants$6.clang_isAttribute$FUNC\n@@ -67,1 +67,1 @@\n-        constants$6.clang_isInvalid$FUNC, false\n+        constants$6.clang_isInvalid$FUNC\n@@ -74,1 +74,1 @@\n-        constants$6.clang_isPreprocessing$FUNC, false\n+        constants$6.clang_isPreprocessing$FUNC\n@@ -85,1 +85,1 @@\n-        constants$6.clang_getCursorLanguage$FUNC, false\n+        constants$6.clang_getCursorLanguage$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$6.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        constants$7.clang_Cursor_getTranslationUnit$FUNC, false\n+        constants$7.clang_Cursor_getTranslationUnit$FUNC\n@@ -61,1 +61,1 @@\n-        constants$7.clang_getCursorLocation$FUNC, false\n+        constants$7.clang_getCursorLocation$FUNC\n@@ -76,1 +76,1 @@\n-        constants$7.clang_getCursorExtent$FUNC, false\n+        constants$7.clang_getCursorExtent$FUNC\n@@ -91,1 +91,1 @@\n-        constants$7.clang_getCursorType$FUNC, false\n+        constants$7.clang_getCursorType$FUNC\n@@ -106,1 +106,1 @@\n-        constants$7.clang_getTypeSpelling$FUNC, false\n+        constants$7.clang_getTypeSpelling$FUNC\n@@ -121,1 +121,1 @@\n-        constants$7.clang_getTypedefDeclUnderlyingType$FUNC, false\n+        constants$7.clang_getTypedefDeclUnderlyingType$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$7.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        constants$8.clang_getEnumDeclIntegerType$FUNC, false\n+        constants$8.clang_getEnumDeclIntegerType$FUNC\n@@ -61,1 +61,1 @@\n-        constants$8.clang_getEnumConstantDeclValue$FUNC, false\n+        constants$8.clang_getEnumConstantDeclValue$FUNC\n@@ -72,1 +72,1 @@\n-        constants$8.clang_getEnumConstantDeclUnsignedValue$FUNC, false\n+        constants$8.clang_getEnumConstantDeclUnsignedValue$FUNC\n@@ -83,1 +83,1 @@\n-        constants$8.clang_getFieldDeclBitWidth$FUNC, false\n+        constants$8.clang_getFieldDeclBitWidth$FUNC\n@@ -94,1 +94,1 @@\n-        constants$8.clang_Cursor_getNumArguments$FUNC, false\n+        constants$8.clang_Cursor_getNumArguments$FUNC\n@@ -110,1 +110,1 @@\n-        constants$8.clang_Cursor_getArgument$FUNC, false\n+        constants$8.clang_Cursor_getArgument$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$8.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        constants$9.clang_equalTypes$FUNC, false\n+        constants$9.clang_equalTypes$FUNC\n@@ -66,1 +66,1 @@\n-        constants$9.clang_getCanonicalType$FUNC, false\n+        constants$9.clang_getCanonicalType$FUNC\n@@ -77,1 +77,1 @@\n-        constants$9.clang_isConstQualifiedType$FUNC, false\n+        constants$9.clang_isConstQualifiedType$FUNC\n@@ -88,1 +88,1 @@\n-        constants$9.clang_Cursor_isMacroFunctionLike$FUNC, false\n+        constants$9.clang_Cursor_isMacroFunctionLike$FUNC\n@@ -99,1 +99,1 @@\n-        constants$9.clang_isVolatileQualifiedType$FUNC, false\n+        constants$9.clang_isVolatileQualifiedType$FUNC\n@@ -114,1 +114,1 @@\n-        constants$9.clang_getTypedefName$FUNC, false\n+        constants$9.clang_getTypedefName$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$9.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}