{"files":[{"patch":"@@ -15,1 +15,15 @@\n-After building, there should be a new `jextract` folder under `build` (the contents and the name of this folder might vary slightly depending on the platform):\n+\n+> <details><summary><strong>Using a local installation of LLVM<\/strong><\/summary>\n+> \n+> While the recommended way is to use a [release from the LLVM project](https:\/\/releases.llvm.org\/download.html),\n+> extract it then make `llvm_home` point to this directory, it may be possible to use a local installation instead.\n+>\n+> E.g. on macOs the `llvm_home` can also be set as one of these locations :\n+> \n+> * `\/Library\/Developer\/CommandLineTools\/usr\/` if using Command Line Tools\n+> * `\/Applications\/Xcode.app\/Contents\/Developer\/Toolchains\/XcodeDefault.xctoolchain\/usr\/` if using XCode\n+> * `$(brew --prefix llvm)` if using the [LLVM install from Homebrew](https:\/\/formulae.brew.sh\/formula\/llvm#default)\n+> \n+> <\/details>\n+\n+After building, there should be a new `jextract` folder under `build` (the contents and the name of this folder might vary slightly depending on the platform, e.g. on macOs the folder is `jextract.app`) :\n@@ -30,1 +44,1 @@\n-To run the `jextract` tool, simply run the `jextract` command in the `bin` folder (again, the exact location of the binary might vary slightly depending on the platform):\n+To run the `jextract` tool, simply run the `jextract` command in the `bin` folder (again, the exact location of the binary might vary slightly depending on the platform, e.g. on macOs `build\/jextract.app\/Contents\/MacOS\/jextract` ):\n@@ -41,1 +55,1 @@\n-$ sh .\/gradlew -Pjdk18_home=<jdk18_home_dir> -Pllvm_home=<libclang_dir> jtreg\n+$ sh .\/gradlew -Pjdk18_home=<jdk18_home_dir> -Pllvm_home=<libclang_dir> -Pjtreg_home=<jtreg_home> jtreg\n@@ -44,0 +58,2 @@\n+Note however that running `jtreg` task requires `cmake` to be available on the `PATH`.\n+\n","filename":"README.md","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"}]}