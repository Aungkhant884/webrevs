{"files":[{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    int apply(jdk.incubator.foreign.MemorySegment x0, jdk.incubator.foreign.MemorySegment x1, jdk.incubator.foreign.MemoryAddress x2);\n+    int apply(jdk.incubator.foreign.MemorySegment cursor, jdk.incubator.foreign.MemorySegment parent, jdk.incubator.foreign.MemoryAddress client_data);\n@@ -42,1 +42,2 @@\n-        NativeSymbol symbol = NativeSymbol.ofAddress(\"CXCursorVisitor::\" + Long.toHexString(addr.toRawLongValue()), addr, scope);return (jdk.incubator.foreign.MemorySegment x0, jdk.incubator.foreign.MemorySegment x1, jdk.incubator.foreign.MemoryAddress x2) -> {\n+        NativeSymbol symbol = NativeSymbol.ofAddress(\"CXCursorVisitor::\" + Long.toHexString(addr.toRawLongValue()), addr, scope);\n+return (jdk.incubator.foreign.MemorySegment _cursor, jdk.incubator.foreign.MemorySegment _parent, jdk.incubator.foreign.MemoryAddress _client_data) -> {\n@@ -44,1 +45,1 @@\n-                return (int)constants$13.CXCursorVisitor$MH.invokeExact(symbol, x0, x1, x2);\n+                return (int)constants$13.CXCursorVisitor$MH.invokeExact(symbol, _cursor, _parent, (jdk.incubator.foreign.Addressable)_client_data);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXCursorVisitor.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,3 +37,3 @@\n-    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXString.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,3 +37,3 @@\n-    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(\n-        MemoryLayout.sequenceLayout(4, JAVA_INT).withName(\"int_data\"),\n-        ADDRESS.withName(\"ptr_data\")\n+    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(\n+        MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName(\"int_data\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"ptr_data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXToken.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(\n-        JAVA_INT.withName(\"kind\"),\n+    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -40,1 +40,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXType.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,4 +37,4 @@\n-    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(\n-        ADDRESS.withName(\"Filename\"),\n-        ADDRESS.withName(\"Contents\"),\n-        JAVA_LONG.withName(\"Length\")\n+    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(\n+        Constants$root.C_POINTER$LAYOUT.withName(\"Filename\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"Contents\"),\n+        Constants$root.C_LONG_LONG$LAYOUT.withName(\"Length\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXUnsavedFile.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.  Oracle designates this\n+ *  particular file as subject to the \"Classpath\" exception as provided\n+ *  by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\/\n+\n+\/\/ Generated by jextract\n+\n+package org.openjdk.jextract.clang.libclang;\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.VarHandle;\n+import java.nio.ByteOrder;\n+import jdk.incubator.foreign.*;\n+import static jdk.incubator.foreign.ValueLayout.*;\n+public class Constants$root {\n+\n+    static final  OfBoolean C_BOOL$LAYOUT = JAVA_BOOLEAN;\n+    static final  OfByte C_CHAR$LAYOUT = JAVA_BYTE;\n+    static final  OfShort C_SHORT$LAYOUT = JAVA_SHORT.withBitAlignment(16);\n+    static final  OfInt C_INT$LAYOUT = JAVA_INT.withBitAlignment(32);\n+    static final  OfLong C_LONG$LAYOUT = JAVA_LONG.withBitAlignment(64);\n+    static final  OfLong C_LONG_LONG$LAYOUT = JAVA_LONG.withBitAlignment(64);\n+    static final  OfFloat C_FLOAT$LAYOUT = JAVA_FLOAT.withBitAlignment(32);\n+    static final  OfDouble C_DOUBLE$LAYOUT = JAVA_DOUBLE.withBitAlignment(64);\n+    static final  OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64);\n+}\n+\n+\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/Constants$root.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,8 +38,8 @@\n-    public static ValueLayout.OfByte C_CHAR = JAVA_BYTE;\n-    public static ValueLayout.OfShort C_SHORT = JAVA_SHORT;\n-    public static ValueLayout.OfInt C_INT = JAVA_INT;\n-    public static ValueLayout.OfLong C_LONG = JAVA_LONG;\n-    public static ValueLayout.OfLong C_LONG_LONG = JAVA_LONG;\n-    public static ValueLayout.OfFloat C_FLOAT = JAVA_FLOAT;\n-    public static ValueLayout.OfDouble C_DOUBLE = JAVA_DOUBLE;\n-    public static ValueLayout.OfAddress C_POINTER = ValueLayout.ADDRESS;\n+    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;\n+    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;\n+    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;\n+    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n+    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n+    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;\n+    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;\n+    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;\n@@ -83,2 +83,2 @@\n-    public static ValueLayout.OfAddress CXIndex = ValueLayout.ADDRESS;\n-    public static ValueLayout.OfAddress CXTranslationUnit = ValueLayout.ADDRESS;\n+    public static OfAddress CXIndex = Constants$root.C_POINTER$LAYOUT;\n+    public static OfAddress CXTranslationUnit = Constants$root.C_POINTER$LAYOUT;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/Index_h.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/RuntimeHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    static final FunctionDescriptor clang_getCString$FUNC = FunctionDescriptor.of(ADDRESS,\n+    static final FunctionDescriptor clang_getCString$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n@@ -39,2 +39,2 @@\n-            ADDRESS.withName(\"data\"),\n-            JAVA_INT.withName(\"private_flags\"),\n+            Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -50,2 +50,2 @@\n-            ADDRESS.withName(\"data\"),\n-            JAVA_INT.withName(\"private_flags\"),\n+            Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -59,3 +59,3 @@\n-    static final FunctionDescriptor clang_createIndex$FUNC = FunctionDescriptor.of(ADDRESS,\n-        JAVA_INT,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_createIndex$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -68,1 +68,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -75,2 +75,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -79,1 +79,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -86,2 +86,2 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"int_data\"),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$0.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    static final FunctionDescriptor clang_equalLocations$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_equalLocations$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -39,2 +39,2 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"int_data\"),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -44,2 +44,2 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"int_data\"),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -54,2 +54,2 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"int_data\"),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -58,4 +58,4 @@\n-        ADDRESS,\n-        ADDRESS,\n-        JAVA_INT,\n-        JAVA_INT\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -68,2 +68,2 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"int_data\"),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -72,3 +72,3 @@\n-        ADDRESS,\n-        ADDRESS,\n-        JAVA_INT\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -80,1 +80,1 @@\n-    static final FunctionDescriptor clang_Location_isInSystemHeader$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Location_isInSystemHeader$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -82,2 +82,2 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"int_data\"),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -91,1 +91,1 @@\n-    static final FunctionDescriptor clang_Location_isFromMainFile$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Location_isFromMainFile$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -93,2 +93,2 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"int_data\"),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -102,1 +102,1 @@\n-    static final FunctionDescriptor clang_Range_isNull$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Range_isNull$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -104,3 +104,3 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"begin_int_data\"),\n-            JAVA_INT.withName(\"end_int_data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"begin_int_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"end_int_data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$1.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -40,1 +40,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -43,1 +43,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -45,1 +45,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -53,3 +53,3 @@\n-        JAVA_INT.withName(\"kind\"),\n-        JAVA_INT.withName(\"xdata\"),\n-        MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+        MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -58,1 +58,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -60,1 +60,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -68,2 +68,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -72,1 +72,1 @@\n-        JAVA_INT\n+        Constants$root.C_INT$LAYOUT\n@@ -78,1 +78,1 @@\n-    static final FunctionDescriptor clang_getFunctionTypeCallingConv$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_getFunctionTypeCallingConv$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -80,1 +80,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -82,1 +82,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -90,1 +90,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -92,1 +92,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -95,1 +95,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -97,1 +97,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -104,1 +104,1 @@\n-    static final FunctionDescriptor clang_getNumArgTypes$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_getNumArgTypes$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -106,1 +106,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -108,1 +108,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$10.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -40,1 +40,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -43,1 +43,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -45,1 +45,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -47,1 +47,1 @@\n-        JAVA_INT\n+        Constants$root.C_INT$LAYOUT\n@@ -53,1 +53,1 @@\n-    static final FunctionDescriptor clang_isFunctionTypeVariadic$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_isFunctionTypeVariadic$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -55,1 +55,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -57,1 +57,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -65,1 +65,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -67,1 +67,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -70,3 +70,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -80,1 +80,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -82,1 +82,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -85,1 +85,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -87,1 +87,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -94,1 +94,1 @@\n-    static final FunctionDescriptor clang_getNumElements$FUNC = FunctionDescriptor.of(JAVA_LONG,\n+    static final FunctionDescriptor clang_getNumElements$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n@@ -96,1 +96,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -98,1 +98,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -106,1 +106,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -108,1 +108,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -111,1 +111,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -113,1 +113,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$11.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    static final FunctionDescriptor clang_getArraySize$FUNC = FunctionDescriptor.of(JAVA_LONG,\n+    static final FunctionDescriptor clang_getArraySize$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n@@ -39,1 +39,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -41,1 +41,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -48,1 +48,1 @@\n-    static final FunctionDescriptor clang_Type_getSizeOf$FUNC = FunctionDescriptor.of(JAVA_LONG,\n+    static final FunctionDescriptor clang_Type_getSizeOf$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n@@ -50,1 +50,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -52,1 +52,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -59,1 +59,1 @@\n-    static final FunctionDescriptor clang_Type_getOffsetOf$FUNC = FunctionDescriptor.of(JAVA_LONG,\n+    static final FunctionDescriptor clang_Type_getOffsetOf$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n@@ -61,1 +61,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -63,1 +63,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -65,1 +65,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -71,1 +71,1 @@\n-    static final FunctionDescriptor clang_Cursor_isAnonymous$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Cursor_isAnonymous$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -73,3 +73,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -82,1 +82,1 @@\n-    static final FunctionDescriptor clang_Cursor_isAnonymousRecordDecl$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Cursor_isAnonymousRecordDecl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -84,3 +84,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -93,1 +93,1 @@\n-    static final FunctionDescriptor clang_Cursor_isBitField$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Cursor_isBitField$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -95,3 +95,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$12.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    static final FunctionDescriptor CXCursorVisitor$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor CXCursorVisitor$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -39,3 +39,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -44,3 +44,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -48,1 +48,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -53,1 +53,1 @@\n-    static final FunctionDescriptor clang_visitChildren$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_visitChildren$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -55,3 +55,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -59,2 +59,2 @@\n-        ADDRESS,\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -67,2 +67,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -72,3 +72,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -82,2 +82,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -87,3 +87,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -96,3 +96,3 @@\n-    static final FunctionDescriptor clang_PrintingPolicy_getProperty$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_PrintingPolicy_getProperty$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$13.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-        ADDRESS,\n-        JAVA_INT,\n-        JAVA_INT\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -46,1 +46,1 @@\n-    static final FunctionDescriptor clang_getCursorPrintingPolicy$FUNC = FunctionDescriptor.of(ADDRESS,\n+    static final FunctionDescriptor clang_getCursorPrintingPolicy$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n@@ -48,3 +48,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -58,1 +58,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -65,2 +65,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -70,3 +70,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -74,1 +74,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -81,2 +81,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -86,3 +86,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -96,3 +96,3 @@\n-        JAVA_INT.withName(\"kind\"),\n-        JAVA_INT.withName(\"xdata\"),\n-        MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+        MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -101,3 +101,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$14.java","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-        JAVA_INT.withName(\"kind\"),\n-        JAVA_INT.withName(\"xdata\"),\n-        MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+        MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -43,3 +43,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -52,1 +52,1 @@\n-    static final FunctionDescriptor clang_isCursorDefinition$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_isCursorDefinition$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -54,3 +54,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -63,1 +63,1 @@\n-    static final FunctionDescriptor clang_Cursor_isVariadic$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Cursor_isVariadic$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -65,3 +65,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -75,2 +75,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -80,3 +80,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -89,1 +89,1 @@\n-    static final FunctionDescriptor clang_getTokenKind$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_getTokenKind$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -91,2 +91,2 @@\n-            MemoryLayout.sequenceLayout(4, JAVA_INT).withName(\"int_data\"),\n-            ADDRESS.withName(\"ptr_data\")\n+            MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName(\"int_data\"),\n+            Constants$root.C_POINTER$LAYOUT.withName(\"ptr_data\")\n@@ -100,2 +100,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -104,1 +104,1 @@\n-        ADDRESS,\n+        Constants$root.C_POINTER$LAYOUT,\n@@ -106,2 +106,2 @@\n-            MemoryLayout.sequenceLayout(4, JAVA_INT).withName(\"int_data\"),\n-            ADDRESS.withName(\"ptr_data\")\n+            MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName(\"int_data\"),\n+            Constants$root.C_POINTER$LAYOUT.withName(\"ptr_data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$15.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"int_data\"),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -42,1 +42,1 @@\n-        ADDRESS,\n+        Constants$root.C_POINTER$LAYOUT,\n@@ -44,2 +44,2 @@\n-            MemoryLayout.sequenceLayout(4, JAVA_INT).withName(\"int_data\"),\n-            ADDRESS.withName(\"ptr_data\")\n+            MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName(\"int_data\"),\n+            Constants$root.C_POINTER$LAYOUT.withName(\"ptr_data\")\n@@ -53,3 +53,3 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"begin_int_data\"),\n-        JAVA_INT.withName(\"end_int_data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"begin_int_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"end_int_data\")\n@@ -57,1 +57,1 @@\n-        ADDRESS,\n+        Constants$root.C_POINTER$LAYOUT,\n@@ -59,2 +59,2 @@\n-            MemoryLayout.sequenceLayout(4, JAVA_INT).withName(\"int_data\"),\n-            ADDRESS.withName(\"ptr_data\")\n+            MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName(\"int_data\"),\n+            Constants$root.C_POINTER$LAYOUT.withName(\"ptr_data\")\n@@ -68,1 +68,1 @@\n-        ADDRESS,\n+        Constants$root.C_POINTER$LAYOUT,\n@@ -70,3 +70,3 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"begin_int_data\"),\n-            JAVA_INT.withName(\"end_int_data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"begin_int_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"end_int_data\")\n@@ -74,2 +74,2 @@\n-        ADDRESS,\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -82,3 +82,3 @@\n-        ADDRESS,\n-        ADDRESS,\n-        JAVA_INT\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -91,2 +91,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -95,1 +95,1 @@\n-        JAVA_INT\n+        Constants$root.C_INT$LAYOUT\n@@ -102,2 +102,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$16.java","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        JAVA_INT\n+        Constants$root.C_INT$LAYOUT\n@@ -44,1 +44,1 @@\n-    static final FunctionDescriptor clang_Cursor_Evaluate$FUNC = FunctionDescriptor.of(ADDRESS,\n+    static final FunctionDescriptor clang_Cursor_Evaluate$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n@@ -46,3 +46,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -55,2 +55,2 @@\n-    static final FunctionDescriptor clang_EvalResult_getKind$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS\n+    static final FunctionDescriptor clang_EvalResult_getKind$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -62,2 +62,2 @@\n-    static final FunctionDescriptor clang_EvalResult_getAsInt$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS\n+    static final FunctionDescriptor clang_EvalResult_getAsInt$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -69,2 +69,2 @@\n-    static final FunctionDescriptor clang_EvalResult_getAsLongLong$FUNC = FunctionDescriptor.of(JAVA_LONG,\n-        ADDRESS\n+    static final FunctionDescriptor clang_EvalResult_getAsLongLong$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -76,2 +76,2 @@\n-    static final FunctionDescriptor clang_EvalResult_isUnsignedInt$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS\n+    static final FunctionDescriptor clang_EvalResult_isUnsignedInt$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$17.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-    static final FunctionDescriptor clang_EvalResult_getAsUnsigned$FUNC = FunctionDescriptor.of(JAVA_LONG,\n-        ADDRESS\n+    static final FunctionDescriptor clang_EvalResult_getAsUnsigned$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -44,2 +44,2 @@\n-    static final FunctionDescriptor clang_EvalResult_getAsDouble$FUNC = FunctionDescriptor.of(JAVA_DOUBLE,\n-        ADDRESS\n+    static final FunctionDescriptor clang_EvalResult_getAsDouble$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -51,2 +51,2 @@\n-    static final FunctionDescriptor clang_EvalResult_getAsStr$FUNC = FunctionDescriptor.of(ADDRESS,\n-        ADDRESS\n+    static final FunctionDescriptor clang_EvalResult_getAsStr$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -59,1 +59,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$18.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"int_data\"),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -43,4 +43,4 @@\n-        ADDRESS,\n-        ADDRESS,\n-        ADDRESS,\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -54,2 +54,2 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"int_data\"),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -58,4 +58,4 @@\n-        ADDRESS,\n-        ADDRESS,\n-        ADDRESS,\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -69,2 +69,2 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"int_data\"),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -73,4 +73,4 @@\n-        ADDRESS,\n-        ADDRESS,\n-        ADDRESS,\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -83,2 +83,2 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"int_data\"),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -88,3 +88,3 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"begin_int_data\"),\n-            JAVA_INT.withName(\"end_int_data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"begin_int_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"end_int_data\")\n@@ -98,2 +98,2 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"int_data\"),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -103,3 +103,3 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-            JAVA_INT.withName(\"begin_int_data\"),\n-            JAVA_INT.withName(\"end_int_data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"begin_int_data\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"end_int_data\")\n@@ -112,2 +112,2 @@\n-    static final FunctionDescriptor clang_getChildDiagnostics$FUNC = FunctionDescriptor.of(ADDRESS,\n-        ADDRESS\n+    static final FunctionDescriptor clang_getChildDiagnostics$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$2.java","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-    static final FunctionDescriptor clang_getNumDiagnostics$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS\n+    static final FunctionDescriptor clang_getNumDiagnostics$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -44,3 +44,3 @@\n-    static final FunctionDescriptor clang_getDiagnostic$FUNC = FunctionDescriptor.of(ADDRESS,\n-        ADDRESS,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_getDiagnostic$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -53,1 +53,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -60,2 +60,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -64,2 +64,2 @@\n-        ADDRESS,\n-        JAVA_INT\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -71,1 +71,1 @@\n-    static final FunctionDescriptor clang_defaultDiagnosticDisplayOptions$FUNC = FunctionDescriptor.of(JAVA_INT);\n+    static final FunctionDescriptor clang_defaultDiagnosticDisplayOptions$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);\n@@ -76,2 +76,2 @@\n-    static final FunctionDescriptor clang_getDiagnosticSeverity$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS\n+    static final FunctionDescriptor clang_getDiagnosticSeverity$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$3.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"int_data\"),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -42,1 +42,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -49,2 +49,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -53,1 +53,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -59,8 +59,8 @@\n-    static final FunctionDescriptor clang_parseTranslationUnit$FUNC = FunctionDescriptor.of(ADDRESS,\n-        ADDRESS,\n-        ADDRESS,\n-        ADDRESS,\n-        JAVA_INT,\n-        ADDRESS,\n-        JAVA_INT,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_parseTranslationUnit$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -72,9 +72,9 @@\n-    static final FunctionDescriptor clang_parseTranslationUnit2$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS,\n-        ADDRESS,\n-        ADDRESS,\n-        JAVA_INT,\n-        ADDRESS,\n-        JAVA_INT,\n-        JAVA_INT,\n-        ADDRESS\n+    static final FunctionDescriptor clang_parseTranslationUnit2$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -86,4 +86,4 @@\n-    static final FunctionDescriptor clang_saveTranslationUnit$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS,\n-        ADDRESS,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_saveTranslationUnit$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -96,1 +96,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$4.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-    static final FunctionDescriptor clang_defaultReparseOptions$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS\n+    static final FunctionDescriptor clang_defaultReparseOptions$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n@@ -44,5 +44,5 @@\n-    static final FunctionDescriptor clang_reparseTranslationUnit$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        ADDRESS,\n-        JAVA_INT,\n-        ADDRESS,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_reparseTranslationUnit$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -55,3 +55,3 @@\n-        JAVA_INT.withName(\"kind\"),\n-        JAVA_INT.withName(\"xdata\"),\n-        MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+        MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -64,3 +64,3 @@\n-        JAVA_INT.withName(\"kind\"),\n-        JAVA_INT.withName(\"xdata\"),\n-        MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+        MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -68,1 +68,1 @@\n-        ADDRESS\n+        Constants$root.C_POINTER$LAYOUT\n@@ -74,1 +74,1 @@\n-    static final FunctionDescriptor clang_equalCursors$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_equalCursors$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -76,3 +76,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -81,3 +81,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -90,1 +90,1 @@\n-    static final FunctionDescriptor clang_Cursor_isNull$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Cursor_isNull$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -92,3 +92,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$5.java","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    static final FunctionDescriptor clang_getCursorKind$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_getCursorKind$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -39,3 +39,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -48,2 +48,2 @@\n-    static final FunctionDescriptor clang_isDeclaration$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_isDeclaration$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -55,2 +55,2 @@\n-    static final FunctionDescriptor clang_isAttribute$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_isAttribute$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -62,2 +62,2 @@\n-    static final FunctionDescriptor clang_isInvalid$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_isInvalid$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -69,2 +69,2 @@\n-    static final FunctionDescriptor clang_isPreprocessing$FUNC = FunctionDescriptor.of(JAVA_INT,\n-        JAVA_INT\n+    static final FunctionDescriptor clang_isPreprocessing$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        Constants$root.C_INT$LAYOUT\n@@ -76,1 +76,1 @@\n-    static final FunctionDescriptor clang_getCursorLanguage$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_getCursorLanguage$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -78,3 +78,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$6.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    static final FunctionDescriptor clang_Cursor_getTranslationUnit$FUNC = FunctionDescriptor.of(ADDRESS,\n+    static final FunctionDescriptor clang_Cursor_getTranslationUnit$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,\n@@ -39,3 +39,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -49,2 +49,2 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"int_data\"),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"int_data\"),\n@@ -54,3 +54,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -64,3 +64,3 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"ptr_data\"),\n-        JAVA_INT.withName(\"begin_int_data\"),\n-        JAVA_INT.withName(\"end_int_data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"ptr_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"begin_int_data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"end_int_data\")\n@@ -69,3 +69,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -79,1 +79,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -81,1 +81,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -84,3 +84,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -94,2 +94,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -99,1 +99,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -101,1 +101,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -109,1 +109,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -111,1 +111,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -114,3 +114,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$7.java","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -40,1 +40,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -43,3 +43,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -52,1 +52,1 @@\n-    static final FunctionDescriptor clang_getEnumConstantDeclValue$FUNC = FunctionDescriptor.of(JAVA_LONG,\n+    static final FunctionDescriptor clang_getEnumConstantDeclValue$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n@@ -54,3 +54,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -63,1 +63,1 @@\n-    static final FunctionDescriptor clang_getEnumConstantDeclUnsignedValue$FUNC = FunctionDescriptor.of(JAVA_LONG,\n+    static final FunctionDescriptor clang_getEnumConstantDeclUnsignedValue$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n@@ -65,3 +65,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -74,1 +74,1 @@\n-    static final FunctionDescriptor clang_getFieldDeclBitWidth$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_getFieldDeclBitWidth$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -76,3 +76,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -85,1 +85,1 @@\n-    static final FunctionDescriptor clang_Cursor_getNumArguments$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Cursor_getNumArguments$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -87,3 +87,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -97,3 +97,3 @@\n-        JAVA_INT.withName(\"kind\"),\n-        JAVA_INT.withName(\"xdata\"),\n-        MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+        MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -102,3 +102,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -106,1 +106,1 @@\n-        JAVA_INT\n+        Constants$root.C_INT$LAYOUT\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$8.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    static final FunctionDescriptor clang_equalTypes$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_equalTypes$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -39,1 +39,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -41,1 +41,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -44,1 +44,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -46,1 +46,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -54,1 +54,1 @@\n-        JAVA_INT.withName(\"kind\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -56,1 +56,1 @@\n-        MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -59,1 +59,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -61,1 +61,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -68,1 +68,1 @@\n-    static final FunctionDescriptor clang_isConstQualifiedType$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_isConstQualifiedType$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -70,1 +70,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -72,1 +72,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -79,1 +79,1 @@\n-    static final FunctionDescriptor clang_Cursor_isMacroFunctionLike$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_Cursor_isMacroFunctionLike$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -81,3 +81,3 @@\n-            JAVA_INT.withName(\"kind\"),\n-            JAVA_INT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, ADDRESS).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -90,1 +90,1 @@\n-    static final FunctionDescriptor clang_isVolatileQualifiedType$FUNC = FunctionDescriptor.of(JAVA_INT,\n+    static final FunctionDescriptor clang_isVolatileQualifiedType$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -92,1 +92,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -94,1 +94,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -102,2 +102,2 @@\n-        ADDRESS.withName(\"data\"),\n-        JAVA_INT.withName(\"private_flags\"),\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n@@ -107,1 +107,1 @@\n-            JAVA_INT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n@@ -109,1 +109,1 @@\n-            MemoryLayout.sequenceLayout(2, ADDRESS).withName(\"data\")\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$9.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -20,0 +20,1 @@\n+--include-typedef CXString\n","filename":"updateclang\/clang.symbols","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"updateclang\/cp_header.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-jextract -d ..\/src\/main\/java \\\n+jextract --output ..\/src\/main\/java \\\n","filename":"updateclang\/extract.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}