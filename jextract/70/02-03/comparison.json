{"files":[{"patch":"@@ -116,0 +116,4 @@\n+    public boolean isFunctionInlined() {\n+        return Index_h.clang_Cursor_isFunctionInlined(segment) != 0;\n+    }\n+\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/Cursor.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2062,0 +2062,11 @@\n+    public static MethodHandle clang_Cursor_isFunctionInlined$MH() {\n+        return RuntimeHelper.requireNonNull(constants$9.clang_Cursor_isFunctionInlined$MH,\"clang_Cursor_isFunctionInlined\");\n+    }\n+    public static int clang_Cursor_isFunctionInlined ( MemorySegment C) {\n+        var mh$ = clang_Cursor_isFunctionInlined$MH();\n+        try {\n+            return (int)mh$.invokeExact(C);\n+        } catch (Throwable ex$) {\n+            throw new AssertionError(\"should not reach here\", ex$);\n+        }\n+    }\n@@ -2063,1 +2074,1 @@\n-        return RuntimeHelper.requireNonNull(constants$9.clang_isVolatileQualifiedType$MH,\"clang_isVolatileQualifiedType\");\n+        return RuntimeHelper.requireNonNull(constants$10.clang_isVolatileQualifiedType$MH,\"clang_isVolatileQualifiedType\");\n@@ -2129,1 +2140,1 @@\n-        return RuntimeHelper.requireNonNull(constants$10.clang_getResultType$MH,\"clang_getResultType\");\n+        return RuntimeHelper.requireNonNull(constants$11.clang_getResultType$MH,\"clang_getResultType\");\n@@ -2195,1 +2206,1 @@\n-        return RuntimeHelper.requireNonNull(constants$11.clang_getNumElements$MH,\"clang_getNumElements\");\n+        return RuntimeHelper.requireNonNull(constants$12.clang_getNumElements$MH,\"clang_getNumElements\");\n@@ -2291,1 +2302,1 @@\n-        return RuntimeHelper.requireNonNull(constants$12.clang_Cursor_isAnonymousRecordDecl$MH,\"clang_Cursor_isAnonymousRecordDecl\");\n+        return RuntimeHelper.requireNonNull(constants$13.clang_Cursor_isAnonymousRecordDecl$MH,\"clang_Cursor_isAnonymousRecordDecl\");\n@@ -2344,1 +2355,1 @@\n-        return RuntimeHelper.requireNonNull(constants$13.clang_getCursorSpelling$MH,\"clang_getCursorSpelling\");\n+        return RuntimeHelper.requireNonNull(constants$14.clang_getCursorSpelling$MH,\"clang_getCursorSpelling\");\n@@ -2491,1 +2502,1 @@\n-        return RuntimeHelper.requireNonNull(constants$14.clang_getCursorDisplayName$MH,\"clang_getCursorDisplayName\");\n+        return RuntimeHelper.requireNonNull(constants$15.clang_getCursorDisplayName$MH,\"clang_getCursorDisplayName\");\n@@ -2572,1 +2583,1 @@\n-        return RuntimeHelper.requireNonNull(constants$15.clang_getTokenKind$MH,\"clang_getTokenKind\");\n+        return RuntimeHelper.requireNonNull(constants$16.clang_getTokenKind$MH,\"clang_getTokenKind\");\n@@ -2638,1 +2649,1 @@\n-        return RuntimeHelper.requireNonNull(constants$16.clang_getCursorKindSpelling$MH,\"clang_getCursorKindSpelling\");\n+        return RuntimeHelper.requireNonNull(constants$17.clang_getCursorKindSpelling$MH,\"clang_getCursorKindSpelling\");\n@@ -2704,1 +2715,1 @@\n-        return RuntimeHelper.requireNonNull(constants$17.clang_EvalResult_getAsLongLong$MH,\"clang_EvalResult_getAsLongLong\");\n+        return RuntimeHelper.requireNonNull(constants$18.clang_EvalResult_getAsLongLong$MH,\"clang_EvalResult_getAsLongLong\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/Index_h.java","additions":20,"deletions":9,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -37,0 +37,11 @@\n+    static final FunctionDescriptor clang_isVolatileQualifiedType$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        MemoryLayout.structLayout(\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n+        )\n+    );\n+    static final MethodHandle clang_isVolatileQualifiedType$MH = RuntimeHelper.downcallHandle(\n+        \"clang_isVolatileQualifiedType\",\n+        constants$10.clang_isVolatileQualifiedType$FUNC\n+    );\n@@ -104,15 +115,0 @@\n-    static final FunctionDescriptor clang_getResultType$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(\n-        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n-        MemoryLayout.paddingLayout(32),\n-        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n-    ),\n-        MemoryLayout.structLayout(\n-            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n-            MemoryLayout.paddingLayout(32),\n-            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n-        )\n-    );\n-    static final MethodHandle clang_getResultType$MH = RuntimeHelper.downcallHandle(\n-        \"clang_getResultType\",\n-        constants$10.clang_getResultType$FUNC\n-    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$10.java","additions":11,"deletions":15,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -37,0 +37,15 @@\n+    static final FunctionDescriptor clang_getResultType$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(\n+        Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n+    ),\n+        MemoryLayout.structLayout(\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n+        )\n+    );\n+    static final MethodHandle clang_getResultType$MH = RuntimeHelper.downcallHandle(\n+        \"clang_getResultType\",\n+        constants$11.clang_getResultType$FUNC\n+    );\n@@ -105,11 +120,0 @@\n-    static final FunctionDescriptor clang_getNumElements$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n-        MemoryLayout.structLayout(\n-            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n-            MemoryLayout.paddingLayout(32),\n-            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n-        )\n-    );\n-    static final MethodHandle clang_getNumElements$MH = RuntimeHelper.downcallHandle(\n-        \"clang_getNumElements\",\n-        constants$11.clang_getNumElements$FUNC\n-    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$11.java","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -37,0 +37,11 @@\n+    static final FunctionDescriptor clang_getNumElements$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n+        MemoryLayout.structLayout(\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n+        )\n+    );\n+    static final MethodHandle clang_getNumElements$MH = RuntimeHelper.downcallHandle(\n+        \"clang_getNumElements\",\n+        constants$12.clang_getNumElements$FUNC\n+    );\n@@ -97,11 +108,0 @@\n-    static final FunctionDescriptor clang_Cursor_isAnonymousRecordDecl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n-        MemoryLayout.structLayout(\n-            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n-            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n-        )\n-    );\n-    static final MethodHandle clang_Cursor_isAnonymousRecordDecl$MH = RuntimeHelper.downcallHandle(\n-        \"clang_Cursor_isAnonymousRecordDecl\",\n-        constants$12.clang_Cursor_isAnonymousRecordDecl$FUNC\n-    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$12.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -37,0 +37,11 @@\n+    static final FunctionDescriptor clang_Cursor_isAnonymousRecordDecl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        MemoryLayout.structLayout(\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n+        )\n+    );\n+    static final MethodHandle clang_Cursor_isAnonymousRecordDecl$MH = RuntimeHelper.downcallHandle(\n+        \"clang_Cursor_isAnonymousRecordDecl\",\n+        constants$13.clang_Cursor_isAnonymousRecordDecl$FUNC\n+    );\n@@ -92,15 +103,0 @@\n-    static final FunctionDescriptor clang_getCursorSpelling$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(\n-        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n-        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n-        MemoryLayout.paddingLayout(32)\n-    ),\n-        MemoryLayout.structLayout(\n-            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n-            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n-        )\n-    );\n-    static final MethodHandle clang_getCursorSpelling$MH = RuntimeHelper.downcallHandle(\n-        \"clang_getCursorSpelling\",\n-        constants$13.clang_getCursorSpelling$FUNC\n-    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$13.java","additions":11,"deletions":15,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -37,0 +37,15 @@\n+    static final FunctionDescriptor clang_getCursorSpelling$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n+        MemoryLayout.paddingLayout(32)\n+    ),\n+        MemoryLayout.structLayout(\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n+        )\n+    );\n+    static final MethodHandle clang_getCursorSpelling$MH = RuntimeHelper.downcallHandle(\n+        \"clang_getCursorSpelling\",\n+        constants$14.clang_getCursorSpelling$FUNC\n+    );\n@@ -88,15 +103,0 @@\n-    static final FunctionDescriptor clang_getCursorDisplayName$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(\n-        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n-        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n-        MemoryLayout.paddingLayout(32)\n-    ),\n-        MemoryLayout.structLayout(\n-            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n-            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n-            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n-        )\n-    );\n-    static final MethodHandle clang_getCursorDisplayName$MH = RuntimeHelper.downcallHandle(\n-        \"clang_getCursorDisplayName\",\n-        constants$14.clang_getCursorDisplayName$FUNC\n-    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$14.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -37,0 +37,15 @@\n+    static final FunctionDescriptor clang_getCursorDisplayName$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n+        MemoryLayout.paddingLayout(32)\n+    ),\n+        MemoryLayout.structLayout(\n+            Constants$root.C_INT$LAYOUT.withName(\"kind\"),\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n+        )\n+    );\n+    static final MethodHandle clang_getCursorDisplayName$MH = RuntimeHelper.downcallHandle(\n+        \"clang_getCursorDisplayName\",\n+        constants$15.clang_getCursorDisplayName$FUNC\n+    );\n@@ -104,10 +119,0 @@\n-    static final FunctionDescriptor clang_getTokenKind$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n-        MemoryLayout.structLayout(\n-            MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName(\"int_data\"),\n-            Constants$root.C_POINTER$LAYOUT.withName(\"ptr_data\")\n-        )\n-    );\n-    static final MethodHandle clang_getTokenKind$MH = RuntimeHelper.downcallHandle(\n-        \"clang_getTokenKind\",\n-        constants$15.clang_getTokenKind$FUNC\n-    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$15.java","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -37,0 +37,10 @@\n+    static final FunctionDescriptor clang_getTokenKind$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+        MemoryLayout.structLayout(\n+            MemoryLayout.sequenceLayout(4, Constants$root.C_INT$LAYOUT).withName(\"int_data\"),\n+            Constants$root.C_POINTER$LAYOUT.withName(\"ptr_data\")\n+        )\n+    );\n+    static final MethodHandle clang_getTokenKind$MH = RuntimeHelper.downcallHandle(\n+        \"clang_getTokenKind\",\n+        constants$16.clang_getTokenKind$FUNC\n+    );\n@@ -105,11 +115,0 @@\n-    static final FunctionDescriptor clang_getCursorKindSpelling$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(\n-        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n-        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n-        MemoryLayout.paddingLayout(32)\n-    ),\n-        Constants$root.C_INT$LAYOUT\n-    );\n-    static final MethodHandle clang_getCursorKindSpelling$MH = RuntimeHelper.downcallHandle(\n-        \"clang_getCursorKindSpelling\",\n-        constants$16.clang_getCursorKindSpelling$FUNC\n-    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$16.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -37,0 +37,11 @@\n+    static final FunctionDescriptor clang_getCursorKindSpelling$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(\n+        Constants$root.C_POINTER$LAYOUT.withName(\"data\"),\n+        Constants$root.C_INT$LAYOUT.withName(\"private_flags\"),\n+        MemoryLayout.paddingLayout(32)\n+    ),\n+        Constants$root.C_INT$LAYOUT\n+    );\n+    static final MethodHandle clang_getCursorKindSpelling$MH = RuntimeHelper.downcallHandle(\n+        \"clang_getCursorKindSpelling\",\n+        constants$17.clang_getCursorKindSpelling$FUNC\n+    );\n@@ -78,7 +89,0 @@\n-    static final FunctionDescriptor clang_EvalResult_getAsLongLong$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n-        Constants$root.C_POINTER$LAYOUT\n-    );\n-    static final MethodHandle clang_EvalResult_getAsLongLong$MH = RuntimeHelper.downcallHandle(\n-        \"clang_EvalResult_getAsLongLong\",\n-        constants$17.clang_EvalResult_getAsLongLong$FUNC\n-    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$17.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -37,0 +37,7 @@\n+    static final FunctionDescriptor clang_EvalResult_getAsLongLong$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,\n+        Constants$root.C_POINTER$LAYOUT\n+    );\n+    static final MethodHandle clang_EvalResult_getAsLongLong$MH = RuntimeHelper.downcallHandle(\n+        \"clang_EvalResult_getAsLongLong\",\n+        constants$18.clang_EvalResult_getAsLongLong$FUNC\n+    );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$18.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-    static final FunctionDescriptor clang_isVolatileQualifiedType$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n+    static final FunctionDescriptor clang_Cursor_isFunctionInlined$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,\n@@ -109,2 +109,2 @@\n-            MemoryLayout.paddingLayout(32),\n-            MemoryLayout.sequenceLayout(2, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n+            Constants$root.C_INT$LAYOUT.withName(\"xdata\"),\n+            MemoryLayout.sequenceLayout(3, Constants$root.C_POINTER$LAYOUT).withName(\"data\")\n@@ -113,3 +113,3 @@\n-    static final MethodHandle clang_isVolatileQualifiedType$MH = RuntimeHelper.downcallHandle(\n-        \"clang_isVolatileQualifiedType\",\n-        constants$9.clang_isVolatileQualifiedType$FUNC\n+    static final MethodHandle clang_Cursor_isFunctionInlined$MH = RuntimeHelper.downcallHandle(\n+        \"clang_Cursor_isFunctionInlined\",\n+        constants$9.clang_Cursor_isFunctionInlined$FUNC\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$9.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -88,0 +88,5 @@\n+\n+        \/\/ filter inline functions\n+        if (c.isFunctionInlined()) {\n+            return null;\n+        }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TreeMaker.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -44,1 +44,2 @@\n-            assertNull(findMethod(cls, \"mul\"));\n+            assertNull(findMethod(cls, \"mul\", int.class, int.class));\n+            assertNull(findMethod(cls, \"mul2\", int.class, int.class));\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/Test7903285.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+inline int mul2(int x, int y) { return x*y; }\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/test7903285.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -529,0 +529,1 @@\n+--include-function clang_Cursor_isFunctionInlined\n","filename":"updateclang\/clang.symbols","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}