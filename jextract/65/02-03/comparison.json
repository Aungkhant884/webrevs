{"files":[{"patch":"@@ -31,2 +31,0 @@\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n@@ -39,0 +37,2 @@\n+    private static final boolean SHOW_GENERATING_CLASS = Boolean.getBoolean(\"jextract.showGeneratingClass\");\n+\n@@ -201,1 +201,7 @@\n-            append(\"\/\/ Generated by jextract\\n\\n\");\n+            append(\"\/\/ Generated by jextract\");\n+            if (SHOW_GENERATING_CLASS) {\n+                append(\" (via \");\n+                append(getClass().getName());\n+                append(\")\");\n+            }\n+            append(\"\\n\\n\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ClassSourceBuilder.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -311,6 +311,1 @@\n-            constantBuilder = new ConstantBuilder(this, \"constants$\" + constant_class_index++) {\n-                @Override\n-                String mods() {\n-                    return \"final \"; \/\/ constants package-private!\n-                }\n-            };\n+            constantBuilder = new ConstantsSequelBuilder(this, \"constants$\" + constant_class_index++);\n@@ -323,0 +318,13 @@\n+\n+    static final class ConstantsSequelBuilder extends ConstantBuilder {\n+\n+        ConstantsSequelBuilder(JavaSourceBuilder enclosing, String className) {\n+            super(enclosing, className);\n+        }\n+\n+        @Override\n+        String mods() {\n+            return \"final \"; \/\/ constants package-private!\n+        }\n+    }\n+\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ToplevelBuilder.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"}]}