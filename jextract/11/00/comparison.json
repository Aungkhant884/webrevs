{"files":[{"patch":"@@ -7,1 +7,1 @@\n-    \/\/ moditect for module-info.class injection and jlink\n+    \/\/ moditect for module-info.class injection\n@@ -9,2 +9,0 @@\n-    \/\/ jpackage plugin for packging jextract native app\n-    id \"org.panteleyev.jpackageplugin\" version \"1.3.1\"\n@@ -31,9 +29,1 @@\n-def jextract_path\n-if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n-    jextract_path = \"$buildDir\/jextract\/jextract.exe\"\n-} else if (Os.isFamily(Os.FAMILY_MAC)) {\n-    jextract_path = \"$buildDir\/jextract.app\/Contents\/MacOS\/jextract\"\n-} else {\n-    jextract_path = \"$buildDir\/jextract\/bin\/jextract\"\n-}\n-\n+def jextract_app_dir = \"$buildDir\/jextract\"\n@@ -109,0 +99,1 @@\n+}\n@@ -110,7 +101,14 @@\n-    \/\/ jlink a JDK image with org.openjdk.jextract & dependent modules only\n-    createRuntimeImage {\n-        onlyIf { !new File(\"$buildDir\/jextract-jdk-image\").exists() }\n-        outputDirectory = file(\"$buildDir\/jextract-jdk-image\")\n-        modulePath = [file(\"$buildDir\/modules\")]\n-        modules = ['org.openjdk.jextract', 'jdk.compiler']\n-    }\n+task createJextractImage(type: Exec) {\n+    dependsOn addMainModuleInfo, addDependenciesModuleInfo\n+\n+    onlyIf { !new File(\"$buildDir\/jextract-jdk-image\").exists() }\n+\n+    executable = \"${jdk18_home}\/bin\/jlink\"\n+    args = [\n+         \"--module-path=$buildDir\/modules\",\n+         \"--add-modules=org.openjdk.jextract,jdk.compiler\",\n+         \"--output=${jextract_app_dir}\",\n+         \"--launcher=jextract=org.openjdk.jextract\/org.openjdk.jextract.JextractTool\",\n+         \"--add-options\",\n+         \"\\\"--enable-native-access=org.openjdk.jextract\\\"\"\n+    ]\n@@ -120,1 +118,1 @@\n-    dependsOn createRuntimeImage\n+    dependsOn createJextractImage\n@@ -127,1 +125,1 @@\n-        into(\"jextract-jdk-image\/${os_lib_dir}\")\n+        into(\"jextract\/${os_lib_dir}\")\n@@ -132,1 +130,1 @@\n-        into(\"jextract-jdk-image\/conf\/jextract\")\n+        into(\"jextract\/conf\/jextract\")\n@@ -136,2 +134,2 @@\n-\/\/ jpackage jextract jdk image as a platform dependent native app\n-jpackage {\n+\/\/ jextract jdk image\n+task jextractapp() {\n@@ -139,13 +137,0 @@\n-    onlyIf { !new File(jextract_path).exists() }\n-\n-    appName = \"jextract\"\n-    runtimeImage = \"$buildDir\/jextract-jdk-image\/\"\n-    module = \"org.openjdk.jextract\/org.openjdk.jextract.JextractTool\"\n-    type = \"APP_IMAGE\"\n-    appVersion = \"1.0\"\n-    destination =  \"$buildDir\"\n-    javaOptions = [\n-        \"--add-modules=jdk.incubator.foreign\",\n-        \"--enable-native-access=org.openjdk.jextract\"\n-    ]\n-    winConsole = true\n@@ -154,1 +139,1 @@\n-\/\/ very simple integration test for generated jpackage'd jextract\n+\/\/ very simple integration test for generated jextract\n@@ -156,1 +141,1 @@\n-    dependsOn jpackage\n+    dependsOn jextractapp\n@@ -158,1 +143,1 @@\n-    executable = \"${jextract_path}\"\n+    executable = \"${jextract_app_dir}\/bin\/jextract\"\n@@ -163,1 +148,1 @@\n-task createRuntimeImageForTest(type: org.moditect.gradleplugin.image.CreateRuntimeImageTask) {\n+task createRuntimeImageForTest(type: Exec) {\n@@ -167,3 +152,6 @@\n-    outputDirectory = file(\"$buildDir\/jextract-jdk-test-image\")\n-    modulePath = [file(\"$buildDir\/modules\"),file(\"$jdk18_home\/jmods\")]\n-    modules = ['ALL-MODULE-PATH']\n+    executable = \"${jdk18_home}\/bin\/jlink\"\n+    args = [\n+         \"--module-path=$buildDir\/modules\" + File.pathSeparator + \"$jdk18_home\/jmods\",\n+         \"--add-modules=ALL-MODULE-PATH\",\n+         \"--output=$buildDir\/jextract-jdk-test-image\",\n+    ]\n","filename":"build.gradle","additions":32,"deletions":44,"binary":false,"changes":76,"status":"modified"}]}