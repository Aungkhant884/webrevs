{"files":[{"patch":"@@ -43,1 +43,1 @@\n-            map(nameMangler::transform).\n+            map(nameMangler::scan).\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/CodeGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n- * NOTE: Unlike other transforming tree visitors, this one is just identify\n- * transformer. This visitor collects name mappings as it visits tree nodes.\n- * Subsequent code generation steps can check the collected names using getters.\n+ * NOTE: Unlike other transforming tree visitors, this visitor collects name\n+ * mappings as it visits tree nodes. Subsequent code generation steps can check\n+ * the collected names using getters.\n@@ -47,1 +47,1 @@\n-final class NameMangler implements TreeTransformer, Declaration.Visitor<Void, Declaration> {\n+final class NameMangler implements Declaration.Visitor<Void, Declaration> {\n@@ -183,2 +183,2 @@\n-    @Override\n-    public Declaration.Scoped transform(Declaration.Scoped header) {\n+    \/\/ entry point for this visitor\n+    Declaration.Scoped scan(Declaration.Scoped header) {\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/NameMangler.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}