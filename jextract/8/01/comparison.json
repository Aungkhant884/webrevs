{"files":[{"patch":"@@ -3,0 +3,1 @@\n+.idea\n","filename":".gitignore","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-$ sh .\/gradlew -Pjdk18_home=<jdk18_home_dir> -Plibclang_home=<libclang_dir> clean verify\n+$ sh .\/gradlew -Pjdk18_home=<jdk18_home_dir> -Pllvm_home=<libclang_dir> clean verify\n@@ -41,1 +41,1 @@\n-$ sh .\/gradlew -Pjdk18_home=<jdk18_home_dir> -Plibclang_home=<libclang_dir> jtreg\n+$ sh .\/gradlew -Pjdk18_home=<jdk18_home_dir> -Pllvm_home=<libclang_dir> jtreg\n","filename":"README.md","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,0 +2,2 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -13,2 +15,15 @@\n-def libclang_home = project.property(\"libclang_home\")\n-def clang_version = new File(\"${libclang_home}\/lib\/clang\/\").list()[0]\n+def static checkPath(String p) {\n+    if (!Files.exists(Path.of(p))) {\n+        throw new IllegalArgumentException(\"Error: the path ${p} does not exist\");\n+    }\n+}\n+\n+def llvm_home = project.property(\"llvm_home\")\n+checkPath(llvm_home)\n+checkPath(\"${llvm_home}\/lib\/clang\")\n+def clang_versions = new File(\"${llvm_home}\/lib\/clang\/\").list();\n+if (clang_versions.length == 0) {\n+    throw new IllegalArgumentException(\"Could not detect clang version.\" +\n+            \" Make sure a ${llvm_home}\/lib\/clang\/<VERSION> directory exists\")\n+}\n+def clang_version = clang_versions[0]\n@@ -25,1 +40,2 @@\n-def clang_include_dir = \"${libclang_home}\/lib\/clang\/${clang_version}\/include\"\n+def clang_include_dir = \"${llvm_home}\/lib\/clang\/${clang_version}\/include\"\n+checkPath(clang_include_dir)\n@@ -27,1 +43,2 @@\n-def libclang_dir = \"${libclang_home}\/${os_lib_dir}\"\n+def libclang_dir = \"${llvm_home}\/${os_lib_dir}\"\n+checkPath(libclang_dir)\n","filename":"build.gradle","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"}]}