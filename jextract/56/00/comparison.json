{"files":[{"patch":"@@ -86,1 +86,1 @@\n-        var notEnclosed = !isEnclosedBySameName(name.toLowerCase());\n+        var notEnclosed = !isEnclosedBySameName(name);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/JavaSourceBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.jextract.test.toolprovider;\n+\n+import java.nio.file.Path;\n+\n+import testlib.TestUtils;\n+import org.testng.annotations.Test;\n+import testlib.JextractToolRunner;\n+\n+import static org.testng.Assert.assertNotNull;\n+\n+public class Test7903237 extends JextractToolRunner {\n+    @Test\n+    public void testNameClash() {\n+        Path test7903237Output = getOutputFilePath(\"test7903237_gen\");\n+        Path test7903237H = getInputFilePath(\"test7903237.h\");\n+        run(\"--output\", test7903237Output.toString(), test7903237H.toString()).checkSuccess();\n+        try(TestUtils.Loader loader = TestUtils.classLoader(test7903237Output)) {\n+            Class<?> cls = loader.loadClass(\"test7903237_h\");\n+            assertNotNull(cls);\n+            assertNotNull(loader.loadClass(\"Foo$Foo$0\"));\n+        } finally {\n+            TestUtils.deleteDir(test7903237Output);\n+        }\n+    }\n+}\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/Test7903237.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -24,3 +24,3 @@\n-_Static_assert(1 == 1, \"what??\");\n-\n-int func(int x);\n+struct Foo {\n+    int (*Foo)();\n+};\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/test7903237.h","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/test7903148.h","status":"copied"}]}