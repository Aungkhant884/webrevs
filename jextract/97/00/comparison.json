{"files":[{"patch":"@@ -25,1 +25,1 @@\n-def jextract_version = \"20\"\n+def jextract_version = \"21\"\n@@ -43,1 +43,1 @@\n-    options.release = 20\n+    options.release = 21\n@@ -46,1 +46,1 @@\n-    options.forkOptions.executable = \"${jdk20_home}\/bin\/javac\"\n+    options.forkOptions.executable = \"${jdk21_home}\/bin\/javac\"\n@@ -86,1 +86,1 @@\n-    executable = \"${jdk20_home}\/bin\/jmod\"\n+    executable = \"${jdk21_home}\/bin\/jmod\"\n@@ -112,1 +112,1 @@\n-    executable = \"${jdk20_home}\/bin\/jlink\"\n+    executable = \"${jdk21_home}\/bin\/jlink\"\n@@ -148,1 +148,1 @@\n-    executable = \"${jdk20_home}\/bin\/jlink\"\n+    executable = \"${jdk21_home}\/bin\/jlink\"\n@@ -150,1 +150,1 @@\n-         \"--module-path=$jmods_dir\" + File.pathSeparator + \"$jdk20_home\/jmods\",\n+         \"--module-path=$jmods_dir\" + File.pathSeparator + \"$jdk21_home\/jmods\",\n","filename":"build.gradle","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-javac --enable-preview --source=20 blas\/*.java\n+javac --enable-preview --source=21 blas\/*.java\n","filename":"samples\/cblas\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-time java --enable-native-access=ALL-UNNAMED --enable-preview --source=20 \\\n+time java --enable-native-access=ALL-UNNAMED --enable-preview --source=21 \\\n","filename":"samples\/cblas\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    private static Function<String, Optional<MemorySegment>> lookup(String libraryName, MemorySession session) {\n+    private static Function<String, Optional<MemorySegment>> lookup(String libraryName, SegmentScope scope) {\n@@ -48,1 +48,1 @@\n-            var handle = MemorySegment.ofAddress(handleAddr.address(), 0, session,\n+            var handle = MemorySegment.ofAddress(handleAddr.address(), 0, scope,\n@@ -64,1 +64,1 @@\n-            var symLookup = lookup(libName, arena.session());\n+            var symLookup = lookup(libName, arena.scope());\n","filename":"samples\/dlopen\/Dlopen.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-javac --enable-preview --source=20 org\/unix\/*.java\n+javac --enable-preview --source=21 org\/unix\/*.java\n","filename":"samples\/dlopen\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-   --enable-preview --source=20 \\\n+   --enable-preview --source=21 \\\n","filename":"samples\/dlopen\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-javac --enable-preview --source=20 org\/golang\/*.java\n+javac --enable-preview --source=21 org\/golang\/*.java\n","filename":"samples\/go\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-java --enable-preview --source=20 --enable-native-access=ALL-UNNAMED Main.java\n+java --enable-preview --source=21 --enable-native-access=ALL-UNNAMED Main.java\n","filename":"samples\/go\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-javac --enable-preview --source=20 org\/hello\/*.java\n+javac --enable-preview --source=21 org\/hello\/*.java\n","filename":"samples\/helloworld\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-java --enable-native-access=ALL-UNNAMED --enable-preview --source=20 HelloWorld.java\n+java --enable-native-access=ALL-UNNAMED --enable-preview --source=21 HelloWorld.java\n","filename":"samples\/helloworld\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-javac --enable-preview --source=20 lapack\/*.java\n+javac --enable-preview --source=21 lapack\/*.java\n","filename":"samples\/lapack\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-java --enable-native-access=ALL-UNNAMED --enable-preview --source=20 \\\n+java --enable-native-access=ALL-UNNAMED --enable-preview --source=21 \\\n","filename":"samples\/lapack\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-            }, arena.session());\n+            }, arena.scope());\n","filename":"samples\/libclang\/ASTPrinter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-javac --enable-preview --source=20 org\/llvm\/clang\/*.java\n+javac --enable-preview --source=21 org\/llvm\/clang\/*.java\n","filename":"samples\/libclang\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/libclang\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-javac --enable-preview --source=20 org\/jextract\/*.java\n+javac --enable-preview --source=21 org\/jextract\/*.java\n","filename":"samples\/libcurl\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/libcurl\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -54,5 +56,25 @@\n-    static class ExitException extends RuntimeException {\n-        final int exitCode;\n-        ExitException(int exitCode, String msg) {\n-            super(msg);\n-            this.exitCode = exitCode;\n+    record Exit(String message, int exitCode) {}\n+\n+    public static void main(String[] args) {\n+        var exit = run(args);\n+        System.err.println(exit.message());\n+        System.exit(exit.exitCode());\n+    }\n+\n+    private static class ArenaCleanup implements AutoCloseable {\n+        private Arena arena = Arena.openConfined();\n+        private final List<Runnable> preCloseActions = new ArrayList<>();\n+\n+        void addCleanup(Runnable runnable) {\n+            preCloseActions.add(runnable);\n+        }\n+\n+        Arena arena() {\n+            return arena;\n+        }\n+\n+        @Override\n+        public void close() {\n+            preCloseActions.forEach(Runnable::run);\n+            System.out.println(\"cleanup done\");\n+            arena.close();\n@@ -62,1 +84,1 @@\n-    public static void main(String[] args) {\n+    private static Exit run(String[] args) {\n@@ -64,2 +86,1 @@\n-            System.err.println(\"please pass a .mp4 file\");\n-            System.exit(1);\n+            return new Exit(\"please pass a .mp4 file\", 1);\n@@ -70,1 +91,0 @@\n-        int exitCode = 0;\n@@ -77,1 +97,2 @@\n-        try (var session = MemorySession.openConfined()) {\n+        try (var arenaCleanup = new ArenaCleanup()) {\n+            var arena = arenaCleanup.arena();\n@@ -79,1 +100,1 @@\n-            var ppFormatCtx = session.allocate(C_POINTER);\n+            var ppFormatCtx = arena.allocate(C_POINTER);\n@@ -85,1 +106,1 @@\n-                throw new ExitException(1, \"Cannot open \" + args[0]);\n+                return new Exit(\"Cannot open \" + args[0], 1);\n@@ -93,1 +114,2 @@\n-                throw new ExitException(1, \"Could not find stream information\");\n+                return new Exit(\"Could not find stream information\", 1);\n+\n@@ -96,1 +118,1 @@\n-            arena.addCloseAction(()-> {\n+            arenaCleanup.addCleanup(() -> {\n@@ -132,1 +154,1 @@\n-                throw new ExitException(1, \"Didn't find a video stream\");\n+                return new Exit(\"Didn't find a video stream\", 1);\n@@ -138,1 +160,1 @@\n-                throw new ExitException(1, \"Unsupported codec\");\n+                return new Exit(\"Unsupported codec\", 1);\n@@ -147,1 +169,1 @@\n-                throw new ExitException(1, \"Cannot copy context\");\n+                return new Exit(\"Cannot copy context\", 1);\n@@ -152,1 +174,1 @@\n-                throw new ExitException(1, \"Cannot open codec\");\n+                return new Exit(\"Cannot open codec\", 1);\n@@ -170,1 +192,1 @@\n-                throw new ExitException(1, \"Cannot allocate frame\");\n+                return new Exit(\"Cannot allocate frame\", 1);\n@@ -173,1 +195,1 @@\n-                throw new ExitException(1, \"Cannot allocate RGB frame\");\n+                return new Exit(\"Cannot allocate RGB frame\", 1);\n@@ -176,1 +198,1 @@\n-                throw new ExitException(1, \"cannot allocate buffer\");\n+                return new Exit(\"cannot allocate buffer\", 1);\n@@ -191,1 +213,1 @@\n-            var packet = AVPacket.allocate(session);\n+            var packet = AVPacket.allocate(arena);\n@@ -193,1 +215,1 @@\n-            var pFrameFinished = session.allocate(C_INT);\n+            var pFrameFinished = arena.allocate(C_INT);\n@@ -213,1 +235,1 @@\n-                                saveFrame(pFrameRGB, session, width, height, i);\n+                                saveFrame(pFrameRGB, arena.scope(), width, height, i);\n@@ -216,1 +238,1 @@\n-                                throw new ExitException(1, \"save frame failed for frame \" + i);\n+                                return new Exit(\"save frame failed for frame \" + i, 1);\n@@ -225,5 +247,0 @@\n-\n-            throw new ExitException(0, \"Goodbye!\");\n-        } catch (ExitException ee) {\n-            System.err.println(ee.getMessage());\n-            exitCode = ee.exitCode;\n@@ -257,1 +274,1 @@\n-        System.exit(exitCode);\n+        return new Exit(\"Goodbye!\", 0);\n@@ -260,1 +277,1 @@\n-    private static void saveFrame(MemorySegment frameRGB, MemorySession session,\n+    private static void saveFrame(MemorySegment frameRGB, SegmentScope scope,\n@@ -276,1 +293,1 @@\n-                var pixelArray = MemorySegment.ofAddress(pdata.address() + y*linesize, 3*width, session);\n+                var pixelArray = MemorySegment.ofAddress(pdata.address() + y*linesize, 3*width, scope);\n","filename":"samples\/libffmpeg\/LibffmpegMain.java","additions":50,"deletions":33,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-javac --enable-preview --source=20 libffmpeg\/*.java\n+javac --enable-preview --source=21 libffmpeg\/*.java\n","filename":"samples\/libffmpeg\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-   --enable-preview --source=20 \\\n+   --enable-preview --source=21 \\\n","filename":"samples\/libffmpeg\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-javac --enable-preview --source=20 com\/github\/*.java\n+javac --enable-preview --source=21 com\/github\/*.java\n","filename":"samples\/libgit2\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/libgit2\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-                }, arena.session());\n+                }, arena.scope());\n","filename":"samples\/libjimage\/JImageFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-javac -d build --enable-preview --source=20 org\/openjdk\/*.java\n+javac -d build --enable-preview --source=21 org\/openjdk\/*.java\n","filename":"samples\/libjimage\/compile.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-javac -d build --enable-preview --source=20 org\/openjdk\/*.java\n+javac -d build --enable-preview --source=21 org\/openjdk\/*.java\n","filename":"samples\/libjimage\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-public class Constants$root {\n+final class Constants$root {\n@@ -12,9 +12,11 @@\n-    static final  OfBoolean C_BOOL$LAYOUT = JAVA_BOOLEAN;\n-    static final  OfByte C_CHAR$LAYOUT = JAVA_BYTE;\n-    static final  OfShort C_SHORT$LAYOUT = JAVA_SHORT.withBitAlignment(16);\n-    static final  OfInt C_INT$LAYOUT = JAVA_INT.withBitAlignment(32);\n-    static final  OfLong C_LONG$LAYOUT = JAVA_LONG.withBitAlignment(64);\n-    static final  OfLong C_LONG_LONG$LAYOUT = JAVA_LONG.withBitAlignment(64);\n-    static final  OfFloat C_FLOAT$LAYOUT = JAVA_FLOAT.withBitAlignment(32);\n-    static final  OfDouble C_DOUBLE$LAYOUT = JAVA_DOUBLE.withBitAlignment(64);\n-    static final  OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64).asUnbounded();\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private Constants$root() {}\n+    static final OfBoolean C_BOOL$LAYOUT = JAVA_BOOLEAN;\n+    static final OfByte C_CHAR$LAYOUT = JAVA_BYTE;\n+    static final OfShort C_SHORT$LAYOUT = JAVA_SHORT;\n+    static final OfInt C_INT$LAYOUT = JAVA_INT;\n+    static final OfLong C_LONG$LAYOUT = JAVA_LONG;\n+    static final OfLong C_LONG_LONG$LAYOUT = JAVA_LONG;\n+    static final OfFloat C_FLOAT$LAYOUT = JAVA_FLOAT;\n+    static final OfDouble C_DOUBLE$LAYOUT = JAVA_DOUBLE;\n+    static final OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64).asUnbounded();\n","filename":"samples\/libjimage\/org\/openjdk\/Constants$root.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -10,0 +10,5 @@\n+\/**\n+ * {@snippet :\n+ * void (*JImageClose_t)(struct JImageFile* jimage);\n+ * }\n+ *\/\n@@ -13,2 +18,2 @@\n-    static MemorySegment allocate(JImageClose_t fi, MemorySession session) {\n-        return RuntimeHelper.upcallStub(JImageClose_t.class, fi, constants$0.JImageClose_t$FUNC, session);\n+    static MemorySegment allocate(JImageClose_t fi, SegmentScope scope) {\n+        return RuntimeHelper.upcallStub(JImageClose_t.class, fi, constants$0.JImageClose_t$FUNC, scope);\n@@ -16,2 +21,2 @@\n-    static JImageClose_t ofAddress(MemorySegment addr, MemorySession session) {\n-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);\n+    static JImageClose_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);\n@@ -20,1 +25,1 @@\n-                constants$0.JImageClose_t$MH.invokeExact((MemorySegment)symbol, _jimage);\n+                constants$0.JImageClose_t$MH.invokeExact(symbol, _jimage);\n","filename":"samples\/libjimage\/org\/openjdk\/JImageClose_t.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -10,0 +10,5 @@\n+\/**\n+ * {@snippet :\n+ * long long (*JImageFindResource_t)(struct JImageFile* jimage,char* module_name,char* version,char* name,long long* size);\n+ * }\n+ *\/\n@@ -13,2 +18,2 @@\n-    static MemorySegment allocate(JImageFindResource_t fi, MemorySession session) {\n-        return RuntimeHelper.upcallStub(JImageFindResource_t.class, fi, constants$1.JImageFindResource_t$FUNC, session);\n+    static MemorySegment allocate(JImageFindResource_t fi, SegmentScope scope) {\n+        return RuntimeHelper.upcallStub(JImageFindResource_t.class, fi, constants$1.JImageFindResource_t$FUNC, scope);\n@@ -16,2 +21,2 @@\n-    static JImageFindResource_t ofAddress(MemorySegment addr, MemorySession session) {\n-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);\n+    static JImageFindResource_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);\n@@ -20,1 +25,1 @@\n-                return (long)constants$1.JImageFindResource_t$MH.invokeExact((MemorySegment)symbol, _jimage, _module_name, _version, _name, _size);\n+                return (long)constants$1.JImageFindResource_t$MH.invokeExact(symbol, _jimage, _module_name, _version, _name, _size);\n","filename":"samples\/libjimage\/org\/openjdk\/JImageFindResource_t.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -10,0 +10,5 @@\n+\/**\n+ * {@snippet :\n+ * long long (*JImageGetResource_t)(struct JImageFile* jimage,long long location,char* buffer,long long size);\n+ * }\n+ *\/\n@@ -13,2 +18,2 @@\n-    static MemorySegment allocate(JImageGetResource_t fi, MemorySession session) {\n-        return RuntimeHelper.upcallStub(JImageGetResource_t.class, fi, constants$2.JImageGetResource_t$FUNC, session);\n+    static MemorySegment allocate(JImageGetResource_t fi, SegmentScope scope) {\n+        return RuntimeHelper.upcallStub(JImageGetResource_t.class, fi, constants$2.JImageGetResource_t$FUNC, scope);\n@@ -16,2 +21,2 @@\n-    static JImageGetResource_t ofAddress(MemorySegment addr, MemorySession session) {\n-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);\n+    static JImageGetResource_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);\n@@ -20,1 +25,1 @@\n-                return (long)constants$2.JImageGetResource_t$MH.invokeExact((MemorySegment)symbol, _jimage, _location, _buffer, _size);\n+                return (long)constants$2.JImageGetResource_t$MH.invokeExact(symbol, _jimage, _location, _buffer, _size);\n","filename":"samples\/libjimage\/org\/openjdk\/JImageGetResource_t.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -10,0 +10,5 @@\n+\/**\n+ * {@snippet :\n+ * struct JImageFile* (*JImageOpen_t)(char* name,int* error);\n+ * }\n+ *\/\n@@ -12,3 +17,3 @@\n-    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment name, java.lang.foreign.MemorySegment error);\n-    static MemorySegment allocate(JImageOpen_t fi, MemorySession session) {\n-        return RuntimeHelper.upcallStub(JImageOpen_t.class, fi, constants$0.JImageOpen_t$FUNC, session);\n+    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment jimage, java.lang.foreign.MemorySegment package_name);\n+    static MemorySegment allocate(JImageOpen_t fi, SegmentScope scope) {\n+        return RuntimeHelper.upcallStub(JImageOpen_t.class, fi, constants$0.JImageOpen_t$FUNC, scope);\n@@ -16,3 +21,3 @@\n-    static JImageOpen_t ofAddress(MemorySegment addr, MemorySession session) {\n-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);\n-        return (java.lang.foreign.MemorySegment _name, java.lang.foreign.MemorySegment _error) -> {\n+    static JImageOpen_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);\n+        return (java.lang.foreign.MemorySegment _jimage, java.lang.foreign.MemorySegment _package_name) -> {\n@@ -20,1 +25,1 @@\n-                return (java.lang.foreign.MemorySegment)constants$0.JImageOpen_t$MH.invokeExact((MemorySegment)symbol, _name, _error);\n+                return (java.lang.foreign.MemorySegment)constants$0.JImageOpen_t$MH.invokeExact(symbol, _jimage, _package_name);\n","filename":"samples\/libjimage\/org\/openjdk\/JImageOpen_t.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -10,0 +10,5 @@\n+\/**\n+ * {@snippet :\n+ * char* (*JImagePackageToModule_t)(struct JImageFile* jimage,char* package_name);\n+ * }\n+ *\/\n@@ -13,2 +18,2 @@\n-    static MemorySegment allocate(JImagePackageToModule_t fi, MemorySession session) {\n-        return RuntimeHelper.upcallStub(JImagePackageToModule_t.class, fi, constants$1.JImagePackageToModule_t$FUNC, session);\n+    static MemorySegment allocate(JImagePackageToModule_t fi, SegmentScope scope) {\n+        return RuntimeHelper.upcallStub(JImagePackageToModule_t.class, fi, constants$1.JImagePackageToModule_t$FUNC, scope);\n@@ -16,2 +21,2 @@\n-    static JImagePackageToModule_t ofAddress(MemorySegment addr, MemorySession session) {\n-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);\n+    static JImagePackageToModule_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);\n@@ -20,1 +25,1 @@\n-                return (java.lang.foreign.MemorySegment)constants$1.JImagePackageToModule_t$MH.invokeExact((MemorySegment)symbol, _jimage, _package_name);\n+                return (java.lang.foreign.MemorySegment)constants$1.JImagePackageToModule_t$MH.invokeExact(symbol, _jimage, _package_name);\n","filename":"samples\/libjimage\/org\/openjdk\/JImagePackageToModule_t.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -10,0 +10,5 @@\n+\/**\n+ * {@snippet :\n+ * void (*JImageResourceIterator_t)(struct JImageFile* jimage,int (*visitor)(struct JImageFile*,char*,char*,char*,char*,char*,void*),void* arg);\n+ * }\n+ *\/\n@@ -13,2 +18,2 @@\n-    static MemorySegment allocate(JImageResourceIterator_t fi, MemorySession session) {\n-        return RuntimeHelper.upcallStub(JImageResourceIterator_t.class, fi, constants$3.JImageResourceIterator_t$FUNC, session);\n+    static MemorySegment allocate(JImageResourceIterator_t fi, SegmentScope scope) {\n+        return RuntimeHelper.upcallStub(JImageResourceIterator_t.class, fi, constants$3.JImageResourceIterator_t$FUNC, scope);\n@@ -16,2 +21,2 @@\n-    static JImageResourceIterator_t ofAddress(MemorySegment addr, MemorySession session) {\n-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);\n+    static JImageResourceIterator_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);\n@@ -20,1 +25,1 @@\n-                constants$3.JImageResourceIterator_t$MH.invokeExact((MemorySegment)symbol, _jimage, _visitor, _arg);\n+                constants$3.JImageResourceIterator_t$MH.invokeExact(symbol, _jimage, _visitor, _arg);\n","filename":"samples\/libjimage\/org\/openjdk\/JImageResourceIterator_t.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -10,0 +10,5 @@\n+\/**\n+ * {@snippet :\n+ * int (*JImageResourceVisitor_t)(struct JImageFile* jimage,char* module_name,char* version,char* package,char* name,char* extension,void* arg);\n+ * }\n+ *\/\n@@ -13,2 +18,2 @@\n-    static MemorySegment allocate(JImageResourceVisitor_t fi, MemorySession session) {\n-        return RuntimeHelper.upcallStub(JImageResourceVisitor_t.class, fi, constants$2.JImageResourceVisitor_t$FUNC, session);\n+    static MemorySegment allocate(JImageResourceVisitor_t fi, SegmentScope scope) {\n+        return RuntimeHelper.upcallStub(JImageResourceVisitor_t.class, fi, constants$2.JImageResourceVisitor_t$FUNC, scope);\n@@ -16,2 +21,2 @@\n-    static JImageResourceVisitor_t ofAddress(MemorySegment addr, MemorySession session) {\n-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);\n+    static JImageResourceVisitor_t ofAddress(MemorySegment addr, SegmentScope scope) {\n+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);\n@@ -20,1 +25,1 @@\n-                return (int)constants$2.JImageResourceVisitor_t$MH.invokeExact((MemorySegment)symbol, _jimage, _module_name, _version, _package_, _name, _extension, _arg);\n+                return (int)constants$2.JImageResourceVisitor_t$MH.invokeExact(symbol, _jimage, _module_name, _version, _package_, _name, _extension, _arg);\n","filename":"samples\/libjimage\/org\/openjdk\/JImageResourceVisitor_t.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-import java.lang.foreign.MemorySession;\n+import java.lang.foreign.SegmentScope;\n@@ -28,5 +28,5 @@\n-    private RuntimeHelper() {}\n-    private final static Linker LINKER = Linker.nativeLinker();\n-    private final static ClassLoader LOADER = RuntimeHelper.class.getClassLoader();\n-    private final static MethodHandles.Lookup MH_LOOKUP = MethodHandles.lookup();\n-    private final static SymbolLookup SYMBOL_LOOKUP;\n+    private static final Linker LINKER = Linker.nativeLinker();\n+    private static final ClassLoader LOADER = RuntimeHelper.class.getClassLoader();\n+    private static final MethodHandles.Lookup MH_LOOKUP = MethodHandles.lookup();\n+    private static final SymbolLookup SYMBOL_LOOKUP;\n+    private static final SegmentAllocator THROWING_ALLOCATOR = (x, y) -> { throw new AssertionError(\"should not reach here\"); };\n@@ -35,1 +35,1 @@\n-            (size, align) -> MemorySegment.allocateNative(size, align, MemorySession.implicit());\n+            (size, align) -> MemorySegment.allocateNative(size, align, SegmentScope.auto());\n@@ -48,1 +48,1 @@\n-        SymbolLookup loaderLookup = SymbolLookup.libraryLookup(libPath, MemorySession.global());\n+        SymbolLookup loaderLookup = SymbolLookup.libraryLookup(libPath, SegmentScope.global());\n@@ -52,0 +52,3 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private RuntimeHelper() {}\n+\n@@ -59,4 +62,2 @@\n-    private final static SegmentAllocator THROWING_ALLOCATOR = (x, y) -> { throw new AssertionError(\"should not reach here\"); };\n-\n-    static final MemorySegment lookupGlobalVariable(String name, MemoryLayout layout) {\n-        return SYMBOL_LOOKUP.find(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), symbol.session())).orElse(null);\n+    static MemorySegment lookupGlobalVariable(String name, MemoryLayout layout) {\n+        return SYMBOL_LOOKUP.find(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), symbol.scope())).orElse(null);\n@@ -65,1 +66,1 @@\n-    static final MethodHandle downcallHandle(String name, FunctionDescriptor fdesc) {\n+    static MethodHandle downcallHandle(String name, FunctionDescriptor fdesc) {\n@@ -71,1 +72,1 @@\n-    static final MethodHandle downcallHandle(FunctionDescriptor fdesc) {\n+    static MethodHandle downcallHandle(FunctionDescriptor fdesc) {\n@@ -75,1 +76,1 @@\n-    static final MethodHandle downcallHandleVariadic(String name, FunctionDescriptor fdesc) {\n+    static MethodHandle downcallHandleVariadic(String name, FunctionDescriptor fdesc) {\n@@ -81,1 +82,1 @@\n-    static final <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, MemorySession session) {\n+    static <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, SegmentScope scope) {\n@@ -85,1 +86,1 @@\n-            return LINKER.upcallStub(handle, fdesc, session);\n+            return LINKER.upcallStub(handle, fdesc, scope);\n@@ -91,2 +92,2 @@\n-    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, MemorySession session) {\n-         return MemorySegment.ofAddress(addr.address(), numElements * layout.byteSize(), session);\n+    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, SegmentScope scope) {\n+         return MemorySegment.ofAddress(addr.address(), numElements * layout.byteSize(), scope);\n@@ -97,1 +98,1 @@\n-    private static class VarargsInvoker {\n+    private static final class VarargsInvoker {\n","filename":"samples\/libjimage\/org\/openjdk\/RuntimeHelper.java","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-class constants$0 {\n+final class constants$0 {\n@@ -12,0 +12,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$0() {}\n","filename":"samples\/libjimage\/org\/openjdk\/constants$0.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-class constants$1 {\n+final class constants$1 {\n@@ -12,0 +12,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$1() {}\n","filename":"samples\/libjimage\/org\/openjdk\/constants$1.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-class constants$2 {\n+final class constants$2 {\n@@ -12,0 +12,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$2() {}\n","filename":"samples\/libjimage\/org\/openjdk\/constants$2.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-class constants$3 {\n+final class constants$3 {\n@@ -12,0 +12,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$3() {}\n","filename":"samples\/libjimage\/org\/openjdk\/constants$3.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -12,9 +12,13 @@\n-    \/* package-private *\/ jimage_h() {}\n-    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;\n-    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;\n-    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;\n-    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n-    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n-    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;\n-    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;\n-    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;\n+    public static final OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;\n+    public static final OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;\n+    public static final OfInt C_INT = Constants$root.C_INT$LAYOUT;\n+    public static final OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n+    public static final OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n+    public static final OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;\n+    public static final OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;\n+    public static final OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;\n+    \/**\n+     * {@snippet :\n+     * #define JIMAGE_MAX_PATH 4096\n+     * }\n+     *\/\n@@ -24,3 +28,18 @@\n-    public static OfLong jlong = Constants$root.C_LONG_LONG$LAYOUT;\n-    public static OfInt jint = Constants$root.C_INT$LAYOUT;\n-    public static OfLong JImageLocationRef = Constants$root.C_LONG_LONG$LAYOUT;\n+    \/**\n+     * {@snippet :\n+     * typedef long long jlong;\n+     * }\n+     *\/\n+    public static final OfLong jlong = Constants$root.C_LONG_LONG$LAYOUT;\n+    \/**\n+     * {@snippet :\n+     * typedef int jint;\n+     * }\n+     *\/\n+    public static final OfInt jint = Constants$root.C_INT$LAYOUT;\n+    \/**\n+     * {@snippet :\n+     * typedef long long JImageLocationRef;\n+     * }\n+     *\/\n+    public static final OfLong JImageLocationRef = Constants$root.C_LONG_LONG$LAYOUT;\n@@ -30,1 +49,6 @@\n-    public static MemorySegment JIMAGE_Open ( MemorySegment name,  MemorySegment error) {\n+    \/**\n+     * {@snippet :\n+     * JImageFile* JIMAGE_Open(char* name, jint* error);\n+     * }\n+     *\/\n+    public static MemorySegment JIMAGE_Open(MemorySegment name, MemorySegment error) {\n@@ -41,1 +65,6 @@\n-    public static void JIMAGE_Close ( MemorySegment jimage) {\n+    \/**\n+     * {@snippet :\n+     * void JIMAGE_Close(JImageFile* jimage);\n+     * }\n+     *\/\n+    public static void JIMAGE_Close(MemorySegment jimage) {\n@@ -52,1 +81,6 @@\n-    public static MemorySegment JIMAGE_PackageToModule ( MemorySegment jimage,  MemorySegment package_name) {\n+    \/**\n+     * {@snippet :\n+     * char* JIMAGE_PackageToModule(JImageFile* jimage, char* package_name);\n+     * }\n+     *\/\n+    public static MemorySegment JIMAGE_PackageToModule(MemorySegment jimage, MemorySegment package_name) {\n@@ -63,1 +97,6 @@\n-    public static long JIMAGE_FindResource ( MemorySegment jimage,  MemorySegment module_name,  MemorySegment version,  MemorySegment name,  MemorySegment size) {\n+    \/**\n+     * {@snippet :\n+     * JImageLocationRef JIMAGE_FindResource(JImageFile* jimage, char* module_name, char* version, char* name, jlong* size);\n+     * }\n+     *\/\n+    public static long JIMAGE_FindResource(MemorySegment jimage, MemorySegment module_name, MemorySegment version, MemorySegment name, MemorySegment size) {\n@@ -74,1 +113,6 @@\n-    public static long JIMAGE_GetResource ( MemorySegment jimage,  long location,  MemorySegment buffer,  long size) {\n+    \/**\n+     * {@snippet :\n+     * jlong JIMAGE_GetResource(JImageFile* jimage, JImageLocationRef location, char* buffer, jlong size);\n+     * }\n+     *\/\n+    public static long JIMAGE_GetResource(MemorySegment jimage, long location, MemorySegment buffer, long size) {\n@@ -85,1 +129,6 @@\n-    public static void JIMAGE_ResourceIterator ( MemorySegment jimage,  MemorySegment visitor,  MemorySegment arg) {\n+    \/**\n+     * {@snippet :\n+     * void JIMAGE_ResourceIterator(JImageFile* jimage, JImageResourceVisitor_t visitor, void* arg);\n+     * }\n+     *\/\n+    public static void JIMAGE_ResourceIterator(MemorySegment jimage, MemorySegment visitor, MemorySegment arg) {\n@@ -93,0 +142,5 @@\n+    \/**\n+     * {@snippet :\n+     * #define JIMAGE_NOT_FOUND 0\n+     * }\n+     *\/\n@@ -96,0 +150,5 @@\n+    \/**\n+     * {@snippet :\n+     * #define JIMAGE_BAD_MAGIC -1\n+     * }\n+     *\/\n@@ -99,0 +158,5 @@\n+    \/**\n+     * {@snippet :\n+     * #define JIMAGE_BAD_VERSION -2\n+     * }\n+     *\/\n@@ -102,0 +166,5 @@\n+    \/**\n+     * {@snippet :\n+     * #define JIMAGE_CORRUPTED -3\n+     * }\n+     *\/\n","filename":"samples\/libjimage\/org\/openjdk\/jimage_h.java","additions":87,"deletions":18,"binary":false,"changes":105,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-   --enable-preview --source=20 \\\n+   --enable-preview --source=21 \\\n","filename":"samples\/libjimage\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-javac --enable-preview --source=20 org\/unix\/*.java\n+javac --enable-preview --source=21 org\/unix\/*.java\n","filename":"samples\/libproc\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-   --enable-preview --source=20 \\\n+   --enable-preview --source=21 \\\n","filename":"samples\/libproc\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-* Install libffmpeg on Mac using homebrew\n+* Install zstd on Mac using homebrew\n","filename":"samples\/libzstd\/README","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-javac --enable-preview --source=20 libzstd\/*.java\n+javac --enable-preview --source=21 libzstd\/*.java\n","filename":"samples\/libzstd\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-   --enable-preview --source=20 \\\n+   --enable-preview --source=21 \\\n","filename":"samples\/libzstd\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-javac --enable-preview --source=20 net\/sourceforge\/lpsolve\/*.java\n+javac --enable-preview --source=21 net\/sourceforge\/lpsolve\/*.java\n","filename":"samples\/lp_solve\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-   --source=20 --enable-preview \\\n+   --source=21 --enable-preview \\\n","filename":"samples\/lp_solve\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-javac --enable-preview --source=20 opengl\/*.java\n+javac --enable-preview --source=21 opengl\/*.java\n","filename":"samples\/opengl\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/opengl\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    try (var session = Arena.openConfined()) {\n+    try (var arena = Arena.openConfined()) {\n@@ -45,1 +45,1 @@\n-      var pattern = session.allocateUtf8String(args[0]);\n+      var pattern = arena.allocateUtf8String(args[0]);\n@@ -49,2 +49,2 @@\n-      var errcodePtr = session.allocate(C_INT);\n-      var erroffPtr = session.allocate(C_LONG);\n+      var errcodePtr = arena.allocate(C_INT);\n+      var erroffPtr = arena.allocate(C_LONG);\n@@ -58,1 +58,1 @@\n-        var buffer = session.allocateArray(C_CHAR, 128L);\n+        var buffer = arena.allocateArray(C_CHAR, 128L);\n@@ -69,1 +69,1 @@\n-      var subject = session.allocateUtf8String(args[1]);\n+      var subject = arena.allocateUtf8String(args[1]);\n","filename":"samples\/pcre2\/PcreCheck.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n-javac --enable-preview --source=20 org\/pcre\/*.java\n+javac --enable-preview --source=21 org\/pcre\/*.java\n","filename":"samples\/pcre2\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/pcre2\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n-javac --enable-preview --source=20 org\/python\/*.java\n+javac --enable-preview --source=21 org\/python\/*.java\n","filename":"samples\/python3\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/python3\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n-javac --enable-preview --source=20 org\/unix\/*.java\n+javac --enable-preview --source=21 org\/unix\/*.java\n","filename":"samples\/readline\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/readline\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,2 +98,2 @@\n-                var argv_seg = MemorySegment.ofAddress(argv.address(), C_POINTER.byteSize() * argc, arena.session());\n-                var columnNames_seg = MemorySegment.ofAddress(columnNames.address(), C_POINTER.byteSize() * argc, arena.session());\n+                var argv_seg = MemorySegment.ofAddress(argv.address(), C_POINTER.byteSize() * argc, arena.scope());\n+                var columnNames_seg = MemorySegment.ofAddress(columnNames.address(), C_POINTER.byteSize() * argc, arena.scope());\n@@ -107,1 +107,1 @@\n-            }, arena.session());\n+            }, arena.scope());\n","filename":"samples\/sqlite\/SqliteMain.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-javac --enable-preview --source=20 org\/sqlite\/*.java\n+javac --enable-preview --source=21 org\/sqlite\/*.java\n","filename":"samples\/sqlite\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-   --enable-preview --source=20 \\\n+   --enable-preview --source=21 \\\n","filename":"samples\/sqlite\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-javac --enable-preview --source=20 org\/tcl\/*.java\n+javac --enable-preview --source=21 org\/tcl\/*.java\n","filename":"samples\/tcl\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/tcl\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n-javac --enable-preview --source=20 org\/tensorflow\/*.java\n+javac --enable-preview --source=21 org\/tensorflow\/*.java\n","filename":"samples\/tensorflow\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-   --enable-preview --source=20 \\\n+   --enable-preview --source=21 \\\n","filename":"samples\/tensorflow\/loadsavedmodel.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-javac --enable-preview --source=20 org\/unix\/*.java\n+javac --enable-preview --source=21 org\/unix\/*.java\n","filename":"samples\/time\/compilesource.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-    --enable-preview --source=20 \\\n+    --enable-preview --source=21 \\\n","filename":"samples\/time\/run.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.lang.foreign.MemorySession;\n@@ -46,1 +45,1 @@\n-        this.ptr = MemorySegment.ofAddress(ptr.address(), size, arena.session(), cleanup).asReadOnly();\n+        this.ptr = MemorySegment.ofAddress(ptr.address(), size, arena.scope(), cleanup).asReadOnly();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/ClangDisposable.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-import java.lang.foreign.MemorySession;\n+import java.lang.foreign.SegmentScope;\n@@ -244,1 +244,1 @@\n-        }, MemorySession.global());\n+        }, SegmentScope.global());\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/Cursor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/Index.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.lang.foreign.MemorySession;\n@@ -33,0 +32,1 @@\n+import java.lang.foreign.SegmentScope;\n@@ -47,1 +47,1 @@\n-    private static final SegmentAllocator IMPLICIT_ALLOCATOR = (size, align) -> MemorySegment.allocateNative(size, align, MemorySession.implicit());\n+    private static final SegmentAllocator IMPLICIT_ALLOCATOR = (size, align) -> MemorySegment.allocateNative(size, align, SegmentScope.auto());\n@@ -90,1 +90,1 @@\n-            MemorySegment.allocateNative(CXString.sizeof(), 8, MemorySession.implicit()));\n+            MemorySegment.allocateNative(CXString.sizeof(), 8, SegmentScope.auto()));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/LibClang.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/SourceLocation.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/TranslationUnit.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/Type.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,5 @@\n+\/**\n+ * {@snippet :\n+ * enum CXChildVisitResult (*CXCursorVisitor)(struct  cursor,struct  parent,void* client_data);\n+ * }\n+ *\/\n@@ -38,2 +43,2 @@\n-    static MemorySegment allocate(CXCursorVisitor fi, MemorySession session) {\n-        return RuntimeHelper.upcallStub(CXCursorVisitor.class, fi, constants$13.CXCursorVisitor$FUNC, session);\n+    static MemorySegment allocate(CXCursorVisitor fi, SegmentScope scope) {\n+        return RuntimeHelper.upcallStub(CXCursorVisitor.class, fi, constants$13.CXCursorVisitor$FUNC, scope);\n@@ -41,2 +46,2 @@\n-    static CXCursorVisitor ofAddress(MemorySegment addr, MemorySession session) {\n-        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, session);\n+    static CXCursorVisitor ofAddress(MemorySegment addr, SegmentScope scope) {\n+        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);\n@@ -45,1 +50,1 @@\n-                return (int)constants$13.CXCursorVisitor$MH.invokeExact((MemorySegment)symbol, _cursor, _parent, _client_data);\n+                return (int)constants$13.CXCursorVisitor$MH.invokeExact(symbol, _cursor, _parent, _client_data);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXCursorVisitor.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -35,0 +35,8 @@\n+\/**\n+ * {@snippet :\n+ * struct {\n+ *     void* data;\n+ *     unsigned int private_flags;\n+ * };\n+ * }\n+ *\/\n@@ -37,1 +45,1 @@\n-    static final  StructLayout $struct$LAYOUT = MemoryLayout.structLayout(\n+    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(\n@@ -49,0 +57,6 @@\n+    \/**\n+     * Getter for field:\n+     * {@snippet :\n+     * void* data;\n+     * }\n+     *\/\n@@ -52,1 +66,7 @@\n-    public static void data$set( MemorySegment seg, MemorySegment x) {\n+    \/**\n+     * Setter for field:\n+     * {@snippet :\n+     * void* data;\n+     * }\n+     *\/\n+    public static void data$set(MemorySegment seg, MemorySegment x) {\n@@ -65,0 +85,6 @@\n+    \/**\n+     * Getter for field:\n+     * {@snippet :\n+     * unsigned int private_flags;\n+     * }\n+     *\/\n@@ -68,1 +94,7 @@\n-    public static void private_flags$set( MemorySegment seg, int x) {\n+    \/**\n+     * Setter for field:\n+     * {@snippet :\n+     * unsigned int private_flags;\n+     * }\n+     *\/\n+    public static void private_flags$set(MemorySegment seg, int x) {\n@@ -79,1 +111,1 @@\n-    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {\n+    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {\n@@ -82,1 +114,1 @@\n-    public static MemorySegment ofAddress(MemorySegment addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }\n+    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXString.java","additions":37,"deletions":5,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -35,0 +35,8 @@\n+\/**\n+ * {@snippet :\n+ * struct {\n+ *     unsigned int int_data[4];\n+ *     void* ptr_data;\n+ * };\n+ * }\n+ *\/\n@@ -37,1 +45,1 @@\n-    static final  StructLayout $struct$LAYOUT = MemoryLayout.structLayout(\n+    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(\n@@ -51,0 +59,6 @@\n+    \/**\n+     * Getter for field:\n+     * {@snippet :\n+     * void* ptr_data;\n+     * }\n+     *\/\n@@ -54,1 +68,7 @@\n-    public static void ptr_data$set( MemorySegment seg, MemorySegment x) {\n+    \/**\n+     * Setter for field:\n+     * {@snippet :\n+     * void* ptr_data;\n+     * }\n+     *\/\n+    public static void ptr_data$set(MemorySegment seg, MemorySegment x) {\n@@ -65,1 +85,1 @@\n-    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {\n+    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {\n@@ -68,1 +88,1 @@\n-    public static MemorySegment ofAddress(MemorySegment addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }\n+    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXToken.java","additions":24,"deletions":4,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -35,0 +35,8 @@\n+\/**\n+ * {@snippet :\n+ * struct {\n+ *     enum CXTypeKind kind;\n+ *     void* data[2];\n+ * };\n+ * }\n+ *\/\n@@ -37,1 +45,1 @@\n-    static final  StructLayout $struct$LAYOUT = MemoryLayout.structLayout(\n+    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(\n@@ -49,0 +57,6 @@\n+    \/**\n+     * Getter for field:\n+     * {@snippet :\n+     * enum CXTypeKind kind;\n+     * }\n+     *\/\n@@ -52,1 +66,7 @@\n-    public static void kind$set( MemorySegment seg, int x) {\n+    \/**\n+     * Setter for field:\n+     * {@snippet :\n+     * enum CXTypeKind kind;\n+     * }\n+     *\/\n+    public static void kind$set(MemorySegment seg, int x) {\n@@ -66,1 +86,1 @@\n-    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {\n+    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {\n@@ -69,1 +89,1 @@\n-    public static MemorySegment ofAddress(MemorySegment addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }\n+    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXType.java","additions":24,"deletions":4,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -35,0 +35,9 @@\n+\/**\n+ * {@snippet :\n+ * struct CXUnsavedFile {\n+ *     char* Filename;\n+ *     char* Contents;\n+ *     unsigned long Length;\n+ * };\n+ * }\n+ *\/\n@@ -37,1 +46,1 @@\n-    static final  StructLayout $struct$LAYOUT = MemoryLayout.structLayout(\n+    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(\n@@ -49,0 +58,6 @@\n+    \/**\n+     * Getter for field:\n+     * {@snippet :\n+     * char* Filename;\n+     * }\n+     *\/\n@@ -52,1 +67,7 @@\n-    public static void Filename$set( MemorySegment seg, MemorySegment x) {\n+    \/**\n+     * Setter for field:\n+     * {@snippet :\n+     * char* Filename;\n+     * }\n+     *\/\n+    public static void Filename$set(MemorySegment seg, MemorySegment x) {\n@@ -65,0 +86,6 @@\n+    \/**\n+     * Getter for field:\n+     * {@snippet :\n+     * char* Contents;\n+     * }\n+     *\/\n@@ -68,1 +95,7 @@\n-    public static void Contents$set( MemorySegment seg, MemorySegment x) {\n+    \/**\n+     * Setter for field:\n+     * {@snippet :\n+     * char* Contents;\n+     * }\n+     *\/\n+    public static void Contents$set(MemorySegment seg, MemorySegment x) {\n@@ -81,0 +114,6 @@\n+    \/**\n+     * Getter for field:\n+     * {@snippet :\n+     * unsigned long Length;\n+     * }\n+     *\/\n@@ -84,1 +123,7 @@\n-    public static void Length$set( MemorySegment seg, long x) {\n+    \/**\n+     * Setter for field:\n+     * {@snippet :\n+     * unsigned long Length;\n+     * }\n+     *\/\n+    public static void Length$set(MemorySegment seg, long x) {\n@@ -95,1 +140,1 @@\n-    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {\n+    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {\n@@ -98,1 +143,1 @@\n-    public static MemorySegment ofAddress(MemorySegment addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }\n+    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXUnsavedFile.java","additions":51,"deletions":6,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class Constants$root {\n+final class Constants$root {\n@@ -37,9 +37,11 @@\n-    static final  OfBoolean C_BOOL$LAYOUT = JAVA_BOOLEAN;\n-    static final  OfByte C_CHAR$LAYOUT = JAVA_BYTE;\n-    static final  OfShort C_SHORT$LAYOUT = JAVA_SHORT.withBitAlignment(16);\n-    static final  OfInt C_INT$LAYOUT = JAVA_INT.withBitAlignment(32);\n-    static final  OfLong C_LONG$LAYOUT = JAVA_LONG.withBitAlignment(64);\n-    static final  OfLong C_LONG_LONG$LAYOUT = JAVA_LONG.withBitAlignment(64);\n-    static final  OfFloat C_FLOAT$LAYOUT = JAVA_FLOAT.withBitAlignment(32);\n-    static final  OfDouble C_DOUBLE$LAYOUT = JAVA_DOUBLE.withBitAlignment(64);\n-    static final  OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64).asUnbounded();\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private Constants$root() {}\n+    static final OfBoolean C_BOOL$LAYOUT = JAVA_BOOLEAN;\n+    static final OfByte C_CHAR$LAYOUT = JAVA_BYTE;\n+    static final OfShort C_SHORT$LAYOUT = JAVA_SHORT;\n+    static final OfInt C_INT$LAYOUT = JAVA_INT;\n+    static final OfLong C_LONG$LAYOUT = JAVA_LONG;\n+    static final OfLong C_LONG_LONG$LAYOUT = JAVA_LONG;\n+    static final OfFloat C_FLOAT$LAYOUT = JAVA_FLOAT;\n+    static final OfDouble C_DOUBLE$LAYOUT = JAVA_DOUBLE;\n+    static final OfAddress C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64).asUnbounded();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/Constants$root.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -37,9 +37,13 @@\n-    \/* package-private *\/ Index_h() {}\n-    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;\n-    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;\n-    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;\n-    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n-    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n-    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;\n-    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;\n-    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;\n+    public static final OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;\n+    public static final OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;\n+    public static final OfInt C_INT = Constants$root.C_INT$LAYOUT;\n+    public static final OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n+    public static final OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;\n+    public static final OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;\n+    public static final OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;\n+    public static final OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;\n+    \/**\n+     * {@snippet :\n+     * enum CXErrorCode.CXError_Success = 0;\n+     * }\n+     *\/\n@@ -49,0 +53,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXErrorCode.CXError_Failure = 1;\n+     * }\n+     *\/\n@@ -52,0 +61,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXErrorCode.CXError_Crashed = 2;\n+     * }\n+     *\/\n@@ -55,0 +69,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXErrorCode.CXError_InvalidArguments = 3;\n+     * }\n+     *\/\n@@ -58,0 +77,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXErrorCode.CXError_ASTReadError = 4;\n+     * }\n+     *\/\n@@ -64,1 +88,6 @@\n-    public static MemorySegment clang_getCString ( MemorySegment string) {\n+    \/**\n+     * {@snippet :\n+     * char* clang_getCString(CXString string);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCString(MemorySegment string) {\n@@ -75,1 +104,6 @@\n-    public static void clang_disposeString ( MemorySegment string) {\n+    \/**\n+     * {@snippet :\n+     * void clang_disposeString(CXString string);\n+     * }\n+     *\/\n+    public static void clang_disposeString(MemorySegment string) {\n@@ -83,2 +117,17 @@\n-    public static OfAddress CXIndex = Constants$root.C_POINTER$LAYOUT;\n-    public static OfAddress CXTranslationUnit = Constants$root.C_POINTER$LAYOUT;\n+    \/**\n+     * {@snippet :\n+     * typedef void* CXIndex;\n+     * }\n+     *\/\n+    public static final OfAddress CXIndex = Constants$root.C_POINTER$LAYOUT;\n+    \/**\n+     * {@snippet :\n+     * typedef struct CXTranslationUnitImpl* CXTranslationUnit;\n+     * }\n+     *\/\n+    public static final OfAddress CXTranslationUnit = Constants$root.C_POINTER$LAYOUT;\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_None = 0;\n+     * }\n+     *\/\n@@ -88,0 +137,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_DynamicNone = 1;\n+     * }\n+     *\/\n@@ -91,0 +145,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_Dynamic = 2;\n+     * }\n+     *\/\n@@ -94,0 +153,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_MSAny = 3;\n+     * }\n+     *\/\n@@ -97,0 +161,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_BasicNoexcept = 4;\n+     * }\n+     *\/\n@@ -100,0 +169,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_ComputedNoexcept = 5;\n+     * }\n+     *\/\n@@ -103,0 +177,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_Unevaluated = 6;\n+     * }\n+     *\/\n@@ -106,0 +185,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_Uninstantiated = 7;\n+     * }\n+     *\/\n@@ -109,0 +193,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_Unparsed = 8;\n+     * }\n+     *\/\n@@ -112,0 +201,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursor_ExceptionSpecificationKind.CXCursor_ExceptionSpecificationKind_NoThrow = 9;\n+     * }\n+     *\/\n@@ -118,1 +212,6 @@\n-    public static MemorySegment clang_createIndex ( int excludeDeclarationsFromPCH,  int displayDiagnostics) {\n+    \/**\n+     * {@snippet :\n+     * CXIndex clang_createIndex(int excludeDeclarationsFromPCH, int displayDiagnostics);\n+     * }\n+     *\/\n+    public static MemorySegment clang_createIndex(int excludeDeclarationsFromPCH, int displayDiagnostics) {\n@@ -129,1 +228,6 @@\n-    public static void clang_disposeIndex ( MemorySegment index) {\n+    \/**\n+     * {@snippet :\n+     * void clang_disposeIndex(CXIndex index);\n+     * }\n+     *\/\n+    public static void clang_disposeIndex(MemorySegment index) {\n@@ -140,1 +244,6 @@\n-    public static MemorySegment clang_getFileName ( SegmentAllocator allocator,  MemorySegment SFile) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getFileName(CXFile SFile);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getFileName(SegmentAllocator allocator, MemorySegment SFile) {\n@@ -151,1 +260,6 @@\n-    public static MemorySegment clang_getNullLocation ( SegmentAllocator allocator) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceLocation clang_getNullLocation();\n+     * }\n+     *\/\n+    public static MemorySegment clang_getNullLocation(SegmentAllocator allocator) {\n@@ -162,1 +276,6 @@\n-    public static int clang_equalLocations ( MemorySegment loc1,  MemorySegment loc2) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_equalLocations(CXSourceLocation loc1, CXSourceLocation loc2);\n+     * }\n+     *\/\n+    public static int clang_equalLocations(MemorySegment loc1, MemorySegment loc2) {\n@@ -173,1 +292,6 @@\n-    public static MemorySegment clang_getLocation ( SegmentAllocator allocator,  MemorySegment tu,  MemorySegment file,  int line,  int column) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceLocation clang_getLocation(CXTranslationUnit tu, CXFile file, unsigned int line, unsigned int column);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getLocation(SegmentAllocator allocator, MemorySegment tu, MemorySegment file, int line, int column) {\n@@ -184,1 +308,6 @@\n-    public static MemorySegment clang_getLocationForOffset ( SegmentAllocator allocator,  MemorySegment tu,  MemorySegment file,  int offset) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceLocation clang_getLocationForOffset(CXTranslationUnit tu, CXFile file, unsigned int offset);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getLocationForOffset(SegmentAllocator allocator, MemorySegment tu, MemorySegment file, int offset) {\n@@ -195,1 +324,6 @@\n-    public static int clang_Location_isInSystemHeader ( MemorySegment location) {\n+    \/**\n+     * {@snippet :\n+     * int clang_Location_isInSystemHeader(CXSourceLocation location);\n+     * }\n+     *\/\n+    public static int clang_Location_isInSystemHeader(MemorySegment location) {\n@@ -206,1 +340,6 @@\n-    public static int clang_Location_isFromMainFile ( MemorySegment location) {\n+    \/**\n+     * {@snippet :\n+     * int clang_Location_isFromMainFile(CXSourceLocation location);\n+     * }\n+     *\/\n+    public static int clang_Location_isFromMainFile(MemorySegment location) {\n@@ -217,1 +356,6 @@\n-    public static int clang_Range_isNull ( MemorySegment range) {\n+    \/**\n+     * {@snippet :\n+     * int clang_Range_isNull(CXSourceRange range);\n+     * }\n+     *\/\n+    public static int clang_Range_isNull(MemorySegment range) {\n@@ -228,1 +372,6 @@\n-    public static void clang_getExpansionLocation ( MemorySegment location,  MemorySegment file,  MemorySegment line,  MemorySegment column,  MemorySegment offset) {\n+    \/**\n+     * {@snippet :\n+     * void clang_getExpansionLocation(CXSourceLocation location, CXFile* file, unsigned int* line, unsigned int* column, unsigned int* offset);\n+     * }\n+     *\/\n+    public static void clang_getExpansionLocation(MemorySegment location, MemorySegment file, MemorySegment line, MemorySegment column, MemorySegment offset) {\n@@ -239,1 +388,6 @@\n-    public static void clang_getSpellingLocation ( MemorySegment location,  MemorySegment file,  MemorySegment line,  MemorySegment column,  MemorySegment offset) {\n+    \/**\n+     * {@snippet :\n+     * void clang_getSpellingLocation(CXSourceLocation location, CXFile* file, unsigned int* line, unsigned int* column, unsigned int* offset);\n+     * }\n+     *\/\n+    public static void clang_getSpellingLocation(MemorySegment location, MemorySegment file, MemorySegment line, MemorySegment column, MemorySegment offset) {\n@@ -250,1 +404,6 @@\n-    public static void clang_getFileLocation ( MemorySegment location,  MemorySegment file,  MemorySegment line,  MemorySegment column,  MemorySegment offset) {\n+    \/**\n+     * {@snippet :\n+     * void clang_getFileLocation(CXSourceLocation location, CXFile* file, unsigned int* line, unsigned int* column, unsigned int* offset);\n+     * }\n+     *\/\n+    public static void clang_getFileLocation(MemorySegment location, MemorySegment file, MemorySegment line, MemorySegment column, MemorySegment offset) {\n@@ -261,1 +420,6 @@\n-    public static MemorySegment clang_getRangeStart ( SegmentAllocator allocator,  MemorySegment range) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceLocation clang_getRangeStart(CXSourceRange range);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getRangeStart(SegmentAllocator allocator, MemorySegment range) {\n@@ -272,1 +436,6 @@\n-    public static MemorySegment clang_getRangeEnd ( SegmentAllocator allocator,  MemorySegment range) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceLocation clang_getRangeEnd(CXSourceRange range);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getRangeEnd(SegmentAllocator allocator, MemorySegment range) {\n@@ -280,0 +449,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticSeverity.CXDiagnostic_Ignored = 0;\n+     * }\n+     *\/\n@@ -283,0 +457,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticSeverity.CXDiagnostic_Note = 1;\n+     * }\n+     *\/\n@@ -286,0 +465,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticSeverity.CXDiagnostic_Warning = 2;\n+     * }\n+     *\/\n@@ -289,0 +473,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticSeverity.CXDiagnostic_Error = 3;\n+     * }\n+     *\/\n@@ -292,0 +481,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticSeverity.CXDiagnostic_Fatal = 4;\n+     * }\n+     *\/\n@@ -298,1 +492,6 @@\n-    public static MemorySegment clang_getChildDiagnostics ( MemorySegment D) {\n+    \/**\n+     * {@snippet :\n+     * CXDiagnosticSet clang_getChildDiagnostics(CXDiagnostic D);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getChildDiagnostics(MemorySegment D) {\n@@ -309,1 +508,6 @@\n-    public static int clang_getNumDiagnostics ( MemorySegment Unit) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_getNumDiagnostics(CXTranslationUnit Unit);\n+     * }\n+     *\/\n+    public static int clang_getNumDiagnostics(MemorySegment Unit) {\n@@ -320,1 +524,6 @@\n-    public static MemorySegment clang_getDiagnostic ( MemorySegment Unit,  int Index) {\n+    \/**\n+     * {@snippet :\n+     * CXDiagnostic clang_getDiagnostic(CXTranslationUnit Unit, unsigned int Index);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getDiagnostic(MemorySegment Unit, int Index) {\n@@ -331,1 +540,6 @@\n-    public static void clang_disposeDiagnostic ( MemorySegment Diagnostic) {\n+    \/**\n+     * {@snippet :\n+     * void clang_disposeDiagnostic(CXDiagnostic Diagnostic);\n+     * }\n+     *\/\n+    public static void clang_disposeDiagnostic(MemorySegment Diagnostic) {\n@@ -339,0 +553,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticDisplayOptions.CXDiagnostic_DisplaySourceLocation = 1;\n+     * }\n+     *\/\n@@ -342,0 +561,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticDisplayOptions.CXDiagnostic_DisplayColumn = 2;\n+     * }\n+     *\/\n@@ -345,0 +569,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticDisplayOptions.CXDiagnostic_DisplaySourceRanges = 4;\n+     * }\n+     *\/\n@@ -348,0 +577,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticDisplayOptions.CXDiagnostic_DisplayOption = 8;\n+     * }\n+     *\/\n@@ -351,0 +585,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticDisplayOptions.CXDiagnostic_DisplayCategoryId = 16;\n+     * }\n+     *\/\n@@ -354,0 +593,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticDisplayOptions.CXDiagnostic_DisplayCategoryName = 32;\n+     * }\n+     *\/\n@@ -360,1 +604,6 @@\n-    public static MemorySegment clang_formatDiagnostic ( SegmentAllocator allocator,  MemorySegment Diagnostic,  int Options) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_formatDiagnostic(CXDiagnostic Diagnostic, unsigned int Options);\n+     * }\n+     *\/\n+    public static MemorySegment clang_formatDiagnostic(SegmentAllocator allocator, MemorySegment Diagnostic, int Options) {\n@@ -371,1 +620,6 @@\n-    public static int clang_defaultDiagnosticDisplayOptions () {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_defaultDiagnosticDisplayOptions();\n+     * }\n+     *\/\n+    public static int clang_defaultDiagnosticDisplayOptions() {\n@@ -382,1 +636,6 @@\n-    public static int clang_getDiagnosticSeverity ( MemorySegment x0) {\n+    \/**\n+     * {@snippet :\n+     * enum CXDiagnosticSeverity clang_getDiagnosticSeverity(CXDiagnostic);\n+     * }\n+     *\/\n+    public static int clang_getDiagnosticSeverity(MemorySegment x0) {\n@@ -393,1 +652,6 @@\n-    public static MemorySegment clang_getDiagnosticLocation ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceLocation clang_getDiagnosticLocation(CXDiagnostic);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getDiagnosticLocation(SegmentAllocator allocator, MemorySegment x1) {\n@@ -404,1 +668,6 @@\n-    public static MemorySegment clang_getDiagnosticSpelling ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getDiagnosticSpelling(CXDiagnostic);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getDiagnosticSpelling(SegmentAllocator allocator, MemorySegment x1) {\n@@ -412,0 +681,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_None = 0;\n+     * }\n+     *\/\n@@ -415,0 +689,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_DetailedPreprocessingRecord = 1;\n+     * }\n+     *\/\n@@ -418,0 +697,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_Incomplete = 2;\n+     * }\n+     *\/\n@@ -421,0 +705,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_PrecompiledPreamble = 4;\n+     * }\n+     *\/\n@@ -424,0 +713,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_CacheCompletionResults = 8;\n+     * }\n+     *\/\n@@ -427,0 +721,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_ForSerialization = 16;\n+     * }\n+     *\/\n@@ -430,0 +729,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_CXXChainedPCH = 32;\n+     * }\n+     *\/\n@@ -433,0 +737,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_SkipFunctionBodies = 64;\n+     * }\n+     *\/\n@@ -436,0 +745,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_IncludeBriefCommentsInCodeCompletion = 128;\n+     * }\n+     *\/\n@@ -439,0 +753,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_CreatePreambleOnFirstParse = 256;\n+     * }\n+     *\/\n@@ -442,0 +761,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_KeepGoing = 512;\n+     * }\n+     *\/\n@@ -445,0 +769,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_SingleFileParse = 1024;\n+     * }\n+     *\/\n@@ -448,0 +777,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_LimitSkipFunctionBodiesToPreamble = 2048;\n+     * }\n+     *\/\n@@ -451,0 +785,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_IncludeAttributedTypes = 4096;\n+     * }\n+     *\/\n@@ -454,0 +793,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_VisitImplicitAttributes = 8192;\n+     * }\n+     *\/\n@@ -457,0 +801,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_IgnoreNonErrorsFromIncludedFiles = 16384;\n+     * }\n+     *\/\n@@ -460,0 +809,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTranslationUnit_Flags.CXTranslationUnit_RetainExcludedConditionalBlocks = 32768;\n+     * }\n+     *\/\n@@ -466,1 +820,6 @@\n-    public static MemorySegment clang_parseTranslationUnit ( MemorySegment CIdx,  MemorySegment source_filename,  MemorySegment command_line_args,  int num_command_line_args,  MemorySegment unsaved_files,  int num_unsaved_files,  int options) {\n+    \/**\n+     * {@snippet :\n+     * CXTranslationUnit clang_parseTranslationUnit(CXIndex CIdx, char* source_filename, char** command_line_args, int num_command_line_args, struct CXUnsavedFile* unsaved_files, unsigned int num_unsaved_files, unsigned int options);\n+     * }\n+     *\/\n+    public static MemorySegment clang_parseTranslationUnit(MemorySegment CIdx, MemorySegment source_filename, MemorySegment command_line_args, int num_command_line_args, MemorySegment unsaved_files, int num_unsaved_files, int options) {\n@@ -477,1 +836,6 @@\n-    public static int clang_parseTranslationUnit2 ( MemorySegment CIdx,  MemorySegment source_filename,  MemorySegment command_line_args,  int num_command_line_args,  MemorySegment unsaved_files,  int num_unsaved_files,  int options,  MemorySegment out_TU) {\n+    \/**\n+     * {@snippet :\n+     * enum CXErrorCode clang_parseTranslationUnit2(CXIndex CIdx, char* source_filename, char** command_line_args, int num_command_line_args, struct CXUnsavedFile* unsaved_files, unsigned int num_unsaved_files, unsigned int options, CXTranslationUnit* out_TU);\n+     * }\n+     *\/\n+    public static int clang_parseTranslationUnit2(MemorySegment CIdx, MemorySegment source_filename, MemorySegment command_line_args, int num_command_line_args, MemorySegment unsaved_files, int num_unsaved_files, int options, MemorySegment out_TU) {\n@@ -485,0 +849,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXSaveTranslationUnit_Flags.CXSaveTranslationUnit_None = 0;\n+     * }\n+     *\/\n@@ -488,0 +857,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXSaveError.CXSaveError_None = 0;\n+     * }\n+     *\/\n@@ -491,0 +865,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXSaveError.CXSaveError_Unknown = 1;\n+     * }\n+     *\/\n@@ -494,0 +873,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXSaveError.CXSaveError_TranslationErrors = 2;\n+     * }\n+     *\/\n@@ -497,0 +881,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXSaveError.CXSaveError_InvalidTU = 3;\n+     * }\n+     *\/\n@@ -503,1 +892,6 @@\n-    public static int clang_saveTranslationUnit ( MemorySegment TU,  MemorySegment FileName,  int options) {\n+    \/**\n+     * {@snippet :\n+     * int clang_saveTranslationUnit(CXTranslationUnit TU, char* FileName, unsigned int options);\n+     * }\n+     *\/\n+    public static int clang_saveTranslationUnit(MemorySegment TU, MemorySegment FileName, int options) {\n@@ -514,1 +908,6 @@\n-    public static void clang_disposeTranslationUnit ( MemorySegment x0) {\n+    \/**\n+     * {@snippet :\n+     * void clang_disposeTranslationUnit(CXTranslationUnit);\n+     * }\n+     *\/\n+    public static void clang_disposeTranslationUnit(MemorySegment x0) {\n@@ -522,0 +921,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXReparse_Flags.CXReparse_None = 0;\n+     * }\n+     *\/\n@@ -528,1 +932,6 @@\n-    public static int clang_defaultReparseOptions ( MemorySegment TU) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_defaultReparseOptions(CXTranslationUnit TU);\n+     * }\n+     *\/\n+    public static int clang_defaultReparseOptions(MemorySegment TU) {\n@@ -539,1 +948,6 @@\n-    public static int clang_reparseTranslationUnit ( MemorySegment TU,  int num_unsaved_files,  MemorySegment unsaved_files,  int options) {\n+    \/**\n+     * {@snippet :\n+     * int clang_reparseTranslationUnit(CXTranslationUnit TU, unsigned int num_unsaved_files, struct CXUnsavedFile* unsaved_files, unsigned int options);\n+     * }\n+     *\/\n+    public static int clang_reparseTranslationUnit(MemorySegment TU, int num_unsaved_files, MemorySegment unsaved_files, int options) {\n@@ -547,0 +961,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UnexposedDecl = 1;\n+     * }\n+     *\/\n@@ -550,0 +969,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_StructDecl = 2;\n+     * }\n+     *\/\n@@ -553,0 +977,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UnionDecl = 3;\n+     * }\n+     *\/\n@@ -556,0 +985,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ClassDecl = 4;\n+     * }\n+     *\/\n@@ -559,0 +993,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_EnumDecl = 5;\n+     * }\n+     *\/\n@@ -562,0 +1001,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FieldDecl = 6;\n+     * }\n+     *\/\n@@ -565,0 +1009,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_EnumConstantDecl = 7;\n+     * }\n+     *\/\n@@ -568,0 +1017,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FunctionDecl = 8;\n+     * }\n+     *\/\n@@ -571,0 +1025,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_VarDecl = 9;\n+     * }\n+     *\/\n@@ -574,0 +1033,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ParmDecl = 10;\n+     * }\n+     *\/\n@@ -577,0 +1041,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCInterfaceDecl = 11;\n+     * }\n+     *\/\n@@ -580,0 +1049,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCCategoryDecl = 12;\n+     * }\n+     *\/\n@@ -583,0 +1057,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCProtocolDecl = 13;\n+     * }\n+     *\/\n@@ -586,0 +1065,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCPropertyDecl = 14;\n+     * }\n+     *\/\n@@ -589,0 +1073,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCIvarDecl = 15;\n+     * }\n+     *\/\n@@ -592,0 +1081,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCInstanceMethodDecl = 16;\n+     * }\n+     *\/\n@@ -595,0 +1089,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCClassMethodDecl = 17;\n+     * }\n+     *\/\n@@ -598,0 +1097,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCImplementationDecl = 18;\n+     * }\n+     *\/\n@@ -601,0 +1105,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCCategoryImplDecl = 19;\n+     * }\n+     *\/\n@@ -604,0 +1113,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_TypedefDecl = 20;\n+     * }\n+     *\/\n@@ -607,0 +1121,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXMethod = 21;\n+     * }\n+     *\/\n@@ -610,0 +1129,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_Namespace = 22;\n+     * }\n+     *\/\n@@ -613,0 +1137,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LinkageSpec = 23;\n+     * }\n+     *\/\n@@ -616,0 +1145,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_Constructor = 24;\n+     * }\n+     *\/\n@@ -619,0 +1153,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_Destructor = 25;\n+     * }\n+     *\/\n@@ -622,0 +1161,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ConversionFunction = 26;\n+     * }\n+     *\/\n@@ -625,0 +1169,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_TemplateTypeParameter = 27;\n+     * }\n+     *\/\n@@ -628,0 +1177,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NonTypeTemplateParameter = 28;\n+     * }\n+     *\/\n@@ -631,0 +1185,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_TemplateTemplateParameter = 29;\n+     * }\n+     *\/\n@@ -634,0 +1193,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FunctionTemplate = 30;\n+     * }\n+     *\/\n@@ -637,0 +1201,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ClassTemplate = 31;\n+     * }\n+     *\/\n@@ -640,0 +1209,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ClassTemplatePartialSpecialization = 32;\n+     * }\n+     *\/\n@@ -643,0 +1217,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NamespaceAlias = 33;\n+     * }\n+     *\/\n@@ -646,0 +1225,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UsingDirective = 34;\n+     * }\n+     *\/\n@@ -649,0 +1233,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UsingDeclaration = 35;\n+     * }\n+     *\/\n@@ -652,0 +1241,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_TypeAliasDecl = 36;\n+     * }\n+     *\/\n@@ -655,0 +1249,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCSynthesizeDecl = 37;\n+     * }\n+     *\/\n@@ -658,0 +1257,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCDynamicDecl = 38;\n+     * }\n+     *\/\n@@ -661,0 +1265,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXAccessSpecifier = 39;\n+     * }\n+     *\/\n@@ -664,0 +1273,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FirstDecl = 1;\n+     * }\n+     *\/\n@@ -667,0 +1281,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LastDecl = 39;\n+     * }\n+     *\/\n@@ -670,0 +1289,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FirstRef = 40;\n+     * }\n+     *\/\n@@ -673,0 +1297,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCSuperClassRef = 40;\n+     * }\n+     *\/\n@@ -676,0 +1305,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCProtocolRef = 41;\n+     * }\n+     *\/\n@@ -679,0 +1313,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCClassRef = 42;\n+     * }\n+     *\/\n@@ -682,0 +1321,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_TypeRef = 43;\n+     * }\n+     *\/\n@@ -685,0 +1329,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXBaseSpecifier = 44;\n+     * }\n+     *\/\n@@ -688,0 +1337,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_TemplateRef = 45;\n+     * }\n+     *\/\n@@ -691,0 +1345,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NamespaceRef = 46;\n+     * }\n+     *\/\n@@ -694,0 +1353,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_MemberRef = 47;\n+     * }\n+     *\/\n@@ -697,0 +1361,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LabelRef = 48;\n+     * }\n+     *\/\n@@ -700,0 +1369,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OverloadedDeclRef = 49;\n+     * }\n+     *\/\n@@ -703,0 +1377,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_VariableRef = 50;\n+     * }\n+     *\/\n@@ -706,0 +1385,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LastRef = 50;\n+     * }\n+     *\/\n@@ -709,0 +1393,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FirstInvalid = 70;\n+     * }\n+     *\/\n@@ -712,0 +1401,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_InvalidFile = 70;\n+     * }\n+     *\/\n@@ -715,0 +1409,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NoDeclFound = 71;\n+     * }\n+     *\/\n@@ -718,0 +1417,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NotImplemented = 72;\n+     * }\n+     *\/\n@@ -721,0 +1425,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_InvalidCode = 73;\n+     * }\n+     *\/\n@@ -724,0 +1433,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LastInvalid = 73;\n+     * }\n+     *\/\n@@ -727,0 +1441,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FirstExpr = 100;\n+     * }\n+     *\/\n@@ -730,0 +1449,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UnexposedExpr = 100;\n+     * }\n+     *\/\n@@ -733,0 +1457,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_DeclRefExpr = 101;\n+     * }\n+     *\/\n@@ -736,0 +1465,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_MemberRefExpr = 102;\n+     * }\n+     *\/\n@@ -739,0 +1473,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CallExpr = 103;\n+     * }\n+     *\/\n@@ -742,0 +1481,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCMessageExpr = 104;\n+     * }\n+     *\/\n@@ -745,0 +1489,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_BlockExpr = 105;\n+     * }\n+     *\/\n@@ -748,0 +1497,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_IntegerLiteral = 106;\n+     * }\n+     *\/\n@@ -751,0 +1505,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FloatingLiteral = 107;\n+     * }\n+     *\/\n@@ -754,0 +1513,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ImaginaryLiteral = 108;\n+     * }\n+     *\/\n@@ -757,0 +1521,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_StringLiteral = 109;\n+     * }\n+     *\/\n@@ -760,0 +1529,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CharacterLiteral = 110;\n+     * }\n+     *\/\n@@ -763,0 +1537,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ParenExpr = 111;\n+     * }\n+     *\/\n@@ -766,0 +1545,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UnaryOperator = 112;\n+     * }\n+     *\/\n@@ -769,0 +1553,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ArraySubscriptExpr = 113;\n+     * }\n+     *\/\n@@ -772,0 +1561,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_BinaryOperator = 114;\n+     * }\n+     *\/\n@@ -775,0 +1569,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CompoundAssignOperator = 115;\n+     * }\n+     *\/\n@@ -778,0 +1577,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ConditionalOperator = 116;\n+     * }\n+     *\/\n@@ -781,0 +1585,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CStyleCastExpr = 117;\n+     * }\n+     *\/\n@@ -784,0 +1593,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CompoundLiteralExpr = 118;\n+     * }\n+     *\/\n@@ -787,0 +1601,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_InitListExpr = 119;\n+     * }\n+     *\/\n@@ -790,0 +1609,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_AddrLabelExpr = 120;\n+     * }\n+     *\/\n@@ -793,0 +1617,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_StmtExpr = 121;\n+     * }\n+     *\/\n@@ -796,0 +1625,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_GenericSelectionExpr = 122;\n+     * }\n+     *\/\n@@ -799,0 +1633,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_GNUNullExpr = 123;\n+     * }\n+     *\/\n@@ -802,0 +1641,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXStaticCastExpr = 124;\n+     * }\n+     *\/\n@@ -805,0 +1649,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXDynamicCastExpr = 125;\n+     * }\n+     *\/\n@@ -808,0 +1657,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXReinterpretCastExpr = 126;\n+     * }\n+     *\/\n@@ -811,0 +1665,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXConstCastExpr = 127;\n+     * }\n+     *\/\n@@ -814,0 +1673,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXFunctionalCastExpr = 128;\n+     * }\n+     *\/\n@@ -817,0 +1681,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXTypeidExpr = 129;\n+     * }\n+     *\/\n@@ -820,0 +1689,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXBoolLiteralExpr = 130;\n+     * }\n+     *\/\n@@ -823,0 +1697,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXNullPtrLiteralExpr = 131;\n+     * }\n+     *\/\n@@ -826,0 +1705,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXThisExpr = 132;\n+     * }\n+     *\/\n@@ -829,0 +1713,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXThrowExpr = 133;\n+     * }\n+     *\/\n@@ -832,0 +1721,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXNewExpr = 134;\n+     * }\n+     *\/\n@@ -835,0 +1729,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXDeleteExpr = 135;\n+     * }\n+     *\/\n@@ -838,0 +1737,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UnaryExpr = 136;\n+     * }\n+     *\/\n@@ -841,0 +1745,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCStringLiteral = 137;\n+     * }\n+     *\/\n@@ -844,0 +1753,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCEncodeExpr = 138;\n+     * }\n+     *\/\n@@ -847,0 +1761,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCSelectorExpr = 139;\n+     * }\n+     *\/\n@@ -850,0 +1769,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCProtocolExpr = 140;\n+     * }\n+     *\/\n@@ -853,0 +1777,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCBridgedCastExpr = 141;\n+     * }\n+     *\/\n@@ -856,0 +1785,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_PackExpansionExpr = 142;\n+     * }\n+     *\/\n@@ -859,0 +1793,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_SizeOfPackExpr = 143;\n+     * }\n+     *\/\n@@ -862,0 +1801,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LambdaExpr = 144;\n+     * }\n+     *\/\n@@ -865,0 +1809,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCBoolLiteralExpr = 145;\n+     * }\n+     *\/\n@@ -868,0 +1817,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCSelfExpr = 146;\n+     * }\n+     *\/\n@@ -871,0 +1825,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPArraySectionExpr = 147;\n+     * }\n+     *\/\n@@ -874,0 +1833,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCAvailabilityCheckExpr = 148;\n+     * }\n+     *\/\n@@ -877,0 +1841,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FixedPointLiteral = 149;\n+     * }\n+     *\/\n@@ -880,0 +1849,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LastExpr = 152;\n+     * }\n+     *\/\n@@ -883,0 +1857,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FirstStmt = 200;\n+     * }\n+     *\/\n@@ -886,0 +1865,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UnexposedStmt = 200;\n+     * }\n+     *\/\n@@ -889,0 +1873,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LabelStmt = 201;\n+     * }\n+     *\/\n@@ -892,0 +1881,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CompoundStmt = 202;\n+     * }\n+     *\/\n@@ -895,0 +1889,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CaseStmt = 203;\n+     * }\n+     *\/\n@@ -898,0 +1897,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_DefaultStmt = 204;\n+     * }\n+     *\/\n@@ -901,0 +1905,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_IfStmt = 205;\n+     * }\n+     *\/\n@@ -904,0 +1913,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_SwitchStmt = 206;\n+     * }\n+     *\/\n@@ -907,0 +1921,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_WhileStmt = 207;\n+     * }\n+     *\/\n@@ -910,0 +1929,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_DoStmt = 208;\n+     * }\n+     *\/\n@@ -913,0 +1937,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ForStmt = 209;\n+     * }\n+     *\/\n@@ -916,0 +1945,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_GotoStmt = 210;\n+     * }\n+     *\/\n@@ -919,0 +1953,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_IndirectGotoStmt = 211;\n+     * }\n+     *\/\n@@ -922,0 +1961,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ContinueStmt = 212;\n+     * }\n+     *\/\n@@ -925,0 +1969,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_BreakStmt = 213;\n+     * }\n+     *\/\n@@ -928,0 +1977,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ReturnStmt = 214;\n+     * }\n+     *\/\n@@ -931,0 +1985,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_GCCAsmStmt = 215;\n+     * }\n+     *\/\n@@ -934,0 +1993,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_AsmStmt = 215;\n+     * }\n+     *\/\n@@ -937,0 +2001,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCAtTryStmt = 216;\n+     * }\n+     *\/\n@@ -940,0 +2009,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCAtCatchStmt = 217;\n+     * }\n+     *\/\n@@ -943,0 +2017,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCAtFinallyStmt = 218;\n+     * }\n+     *\/\n@@ -946,0 +2025,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCAtThrowStmt = 219;\n+     * }\n+     *\/\n@@ -949,0 +2033,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCAtSynchronizedStmt = 220;\n+     * }\n+     *\/\n@@ -952,0 +2041,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCAutoreleasePoolStmt = 221;\n+     * }\n+     *\/\n@@ -955,0 +2049,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCForCollectionStmt = 222;\n+     * }\n+     *\/\n@@ -958,0 +2057,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXCatchStmt = 223;\n+     * }\n+     *\/\n@@ -961,0 +2065,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXTryStmt = 224;\n+     * }\n+     *\/\n@@ -964,0 +2073,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXForRangeStmt = 225;\n+     * }\n+     *\/\n@@ -967,0 +2081,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_SEHTryStmt = 226;\n+     * }\n+     *\/\n@@ -970,0 +2089,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_SEHExceptStmt = 227;\n+     * }\n+     *\/\n@@ -973,0 +2097,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_SEHFinallyStmt = 228;\n+     * }\n+     *\/\n@@ -976,0 +2105,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_MSAsmStmt = 229;\n+     * }\n+     *\/\n@@ -979,0 +2113,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NullStmt = 230;\n+     * }\n+     *\/\n@@ -982,0 +2121,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_DeclStmt = 231;\n+     * }\n+     *\/\n@@ -985,0 +2129,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPParallelDirective = 232;\n+     * }\n+     *\/\n@@ -988,0 +2137,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPSimdDirective = 233;\n+     * }\n+     *\/\n@@ -991,0 +2145,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPForDirective = 234;\n+     * }\n+     *\/\n@@ -994,0 +2153,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPSectionsDirective = 235;\n+     * }\n+     *\/\n@@ -997,0 +2161,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPSectionDirective = 236;\n+     * }\n+     *\/\n@@ -1000,0 +2169,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPSingleDirective = 237;\n+     * }\n+     *\/\n@@ -1003,0 +2177,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPParallelForDirective = 238;\n+     * }\n+     *\/\n@@ -1006,0 +2185,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPParallelSectionsDirective = 239;\n+     * }\n+     *\/\n@@ -1009,0 +2193,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTaskDirective = 240;\n+     * }\n+     *\/\n@@ -1012,0 +2201,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPMasterDirective = 241;\n+     * }\n+     *\/\n@@ -1015,0 +2209,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPCriticalDirective = 242;\n+     * }\n+     *\/\n@@ -1018,0 +2217,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTaskyieldDirective = 243;\n+     * }\n+     *\/\n@@ -1021,0 +2225,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPBarrierDirective = 244;\n+     * }\n+     *\/\n@@ -1024,0 +2233,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTaskwaitDirective = 245;\n+     * }\n+     *\/\n@@ -1027,0 +2241,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPFlushDirective = 246;\n+     * }\n+     *\/\n@@ -1030,0 +2249,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_SEHLeaveStmt = 247;\n+     * }\n+     *\/\n@@ -1033,0 +2257,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPOrderedDirective = 248;\n+     * }\n+     *\/\n@@ -1036,0 +2265,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPAtomicDirective = 249;\n+     * }\n+     *\/\n@@ -1039,0 +2273,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPForSimdDirective = 250;\n+     * }\n+     *\/\n@@ -1042,0 +2281,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPParallelForSimdDirective = 251;\n+     * }\n+     *\/\n@@ -1045,0 +2289,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetDirective = 252;\n+     * }\n+     *\/\n@@ -1048,0 +2297,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTeamsDirective = 253;\n+     * }\n+     *\/\n@@ -1051,0 +2305,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTaskgroupDirective = 254;\n+     * }\n+     *\/\n@@ -1054,0 +2313,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPCancellationPointDirective = 255;\n+     * }\n+     *\/\n@@ -1057,0 +2321,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPCancelDirective = 256;\n+     * }\n+     *\/\n@@ -1060,0 +2329,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetDataDirective = 257;\n+     * }\n+     *\/\n@@ -1063,0 +2337,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTaskLoopDirective = 258;\n+     * }\n+     *\/\n@@ -1066,0 +2345,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTaskLoopSimdDirective = 259;\n+     * }\n+     *\/\n@@ -1069,0 +2353,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPDistributeDirective = 260;\n+     * }\n+     *\/\n@@ -1072,0 +2361,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetEnterDataDirective = 261;\n+     * }\n+     *\/\n@@ -1075,0 +2369,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetExitDataDirective = 262;\n+     * }\n+     *\/\n@@ -1078,0 +2377,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetParallelDirective = 263;\n+     * }\n+     *\/\n@@ -1081,0 +2385,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetParallelForDirective = 264;\n+     * }\n+     *\/\n@@ -1084,0 +2393,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetUpdateDirective = 265;\n+     * }\n+     *\/\n@@ -1087,0 +2401,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPDistributeParallelForDirective = 266;\n+     * }\n+     *\/\n@@ -1090,0 +2409,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPDistributeParallelForSimdDirective = 267;\n+     * }\n+     *\/\n@@ -1093,0 +2417,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPDistributeSimdDirective = 268;\n+     * }\n+     *\/\n@@ -1096,0 +2425,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetParallelForSimdDirective = 269;\n+     * }\n+     *\/\n@@ -1099,0 +2433,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetSimdDirective = 270;\n+     * }\n+     *\/\n@@ -1102,0 +2441,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTeamsDistributeDirective = 271;\n+     * }\n+     *\/\n@@ -1105,0 +2449,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTeamsDistributeSimdDirective = 272;\n+     * }\n+     *\/\n@@ -1108,0 +2457,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTeamsDistributeParallelForSimdDirective = 273;\n+     * }\n+     *\/\n@@ -1111,0 +2465,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTeamsDistributeParallelForDirective = 274;\n+     * }\n+     *\/\n@@ -1114,0 +2473,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetTeamsDirective = 275;\n+     * }\n+     *\/\n@@ -1117,0 +2481,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetTeamsDistributeDirective = 276;\n+     * }\n+     *\/\n@@ -1120,0 +2489,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetTeamsDistributeParallelForDirective = 277;\n+     * }\n+     *\/\n@@ -1123,0 +2497,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetTeamsDistributeParallelForSimdDirective = 278;\n+     * }\n+     *\/\n@@ -1126,0 +2505,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPTargetTeamsDistributeSimdDirective = 279;\n+     * }\n+     *\/\n@@ -1129,0 +2513,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_BuiltinBitCastExpr = 280;\n+     * }\n+     *\/\n@@ -1132,0 +2521,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPMasterTaskLoopDirective = 281;\n+     * }\n+     *\/\n@@ -1135,0 +2529,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPParallelMasterTaskLoopDirective = 282;\n+     * }\n+     *\/\n@@ -1138,0 +2537,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPMasterTaskLoopSimdDirective = 283;\n+     * }\n+     *\/\n@@ -1141,0 +2545,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OMPParallelMasterTaskLoopSimdDirective = 284;\n+     * }\n+     *\/\n@@ -1144,0 +2553,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LastStmt = 293;\n+     * }\n+     *\/\n@@ -1147,0 +2561,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_TranslationUnit = 300;\n+     * }\n+     *\/\n@@ -1150,0 +2569,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FirstAttr = 400;\n+     * }\n+     *\/\n@@ -1153,0 +2577,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_UnexposedAttr = 400;\n+     * }\n+     *\/\n@@ -1156,0 +2585,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_IBActionAttr = 401;\n+     * }\n+     *\/\n@@ -1159,0 +2593,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_IBOutletAttr = 402;\n+     * }\n+     *\/\n@@ -1162,0 +2601,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_IBOutletCollectionAttr = 403;\n+     * }\n+     *\/\n@@ -1165,0 +2609,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXFinalAttr = 404;\n+     * }\n+     *\/\n@@ -1168,0 +2617,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CXXOverrideAttr = 405;\n+     * }\n+     *\/\n@@ -1171,0 +2625,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_AnnotateAttr = 406;\n+     * }\n+     *\/\n@@ -1174,0 +2633,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_AsmLabelAttr = 407;\n+     * }\n+     *\/\n@@ -1177,0 +2641,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_PackedAttr = 408;\n+     * }\n+     *\/\n@@ -1180,0 +2649,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_PureAttr = 409;\n+     * }\n+     *\/\n@@ -1183,0 +2657,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ConstAttr = 410;\n+     * }\n+     *\/\n@@ -1186,0 +2665,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NoDuplicateAttr = 411;\n+     * }\n+     *\/\n@@ -1189,0 +2673,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CUDAConstantAttr = 412;\n+     * }\n+     *\/\n@@ -1192,0 +2681,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CUDADeviceAttr = 413;\n+     * }\n+     *\/\n@@ -1195,0 +2689,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CUDAGlobalAttr = 414;\n+     * }\n+     *\/\n@@ -1198,0 +2697,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CUDAHostAttr = 415;\n+     * }\n+     *\/\n@@ -1201,0 +2705,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_CUDASharedAttr = 416;\n+     * }\n+     *\/\n@@ -1204,0 +2713,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_VisibilityAttr = 417;\n+     * }\n+     *\/\n@@ -1207,0 +2721,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_DLLExport = 418;\n+     * }\n+     *\/\n@@ -1210,0 +2729,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_DLLImport = 419;\n+     * }\n+     *\/\n@@ -1213,0 +2737,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NSReturnsRetained = 420;\n+     * }\n+     *\/\n@@ -1216,0 +2745,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NSReturnsNotRetained = 421;\n+     * }\n+     *\/\n@@ -1219,0 +2753,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NSReturnsAutoreleased = 422;\n+     * }\n+     *\/\n@@ -1222,0 +2761,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NSConsumesSelf = 423;\n+     * }\n+     *\/\n@@ -1225,0 +2769,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_NSConsumed = 424;\n+     * }\n+     *\/\n@@ -1228,0 +2777,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCException = 425;\n+     * }\n+     *\/\n@@ -1231,0 +2785,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCNSObject = 426;\n+     * }\n+     *\/\n@@ -1234,0 +2793,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCIndependentClass = 427;\n+     * }\n+     *\/\n@@ -1237,0 +2801,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCPreciseLifetime = 428;\n+     * }\n+     *\/\n@@ -1240,0 +2809,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCReturnsInnerPointer = 429;\n+     * }\n+     *\/\n@@ -1243,0 +2817,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCRequiresSuper = 430;\n+     * }\n+     *\/\n@@ -1246,0 +2825,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCRootClass = 431;\n+     * }\n+     *\/\n@@ -1249,0 +2833,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCSubclassingRestricted = 432;\n+     * }\n+     *\/\n@@ -1252,0 +2841,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCExplicitProtocolImpl = 433;\n+     * }\n+     *\/\n@@ -1255,0 +2849,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCDesignatedInitializer = 434;\n+     * }\n+     *\/\n@@ -1258,0 +2857,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCRuntimeVisible = 435;\n+     * }\n+     *\/\n@@ -1261,0 +2865,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ObjCBoxable = 436;\n+     * }\n+     *\/\n@@ -1264,0 +2873,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FlagEnum = 437;\n+     * }\n+     *\/\n@@ -1267,0 +2881,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ConvergentAttr = 438;\n+     * }\n+     *\/\n@@ -1270,0 +2889,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_WarnUnusedAttr = 439;\n+     * }\n+     *\/\n@@ -1273,0 +2897,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_WarnUnusedResultAttr = 440;\n+     * }\n+     *\/\n@@ -1276,0 +2905,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_AlignedAttr = 441;\n+     * }\n+     *\/\n@@ -1279,0 +2913,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LastAttr = 441;\n+     * }\n+     *\/\n@@ -1282,0 +2921,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_PreprocessingDirective = 500;\n+     * }\n+     *\/\n@@ -1285,0 +2929,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_MacroDefinition = 501;\n+     * }\n+     *\/\n@@ -1288,0 +2937,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_MacroExpansion = 502;\n+     * }\n+     *\/\n@@ -1291,0 +2945,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_MacroInstantiation = 502;\n+     * }\n+     *\/\n@@ -1294,0 +2953,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_InclusionDirective = 503;\n+     * }\n+     *\/\n@@ -1297,0 +2961,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FirstPreprocessing = 500;\n+     * }\n+     *\/\n@@ -1300,0 +2969,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LastPreprocessing = 503;\n+     * }\n+     *\/\n@@ -1303,0 +2977,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_ModuleImportDecl = 600;\n+     * }\n+     *\/\n@@ -1306,0 +2985,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_TypeAliasTemplateDecl = 601;\n+     * }\n+     *\/\n@@ -1309,0 +2993,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_StaticAssert = 602;\n+     * }\n+     *\/\n@@ -1312,0 +3001,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FriendDecl = 603;\n+     * }\n+     *\/\n@@ -1315,0 +3009,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_FirstExtraDecl = 600;\n+     * }\n+     *\/\n@@ -1318,0 +3017,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_LastExtraDecl = 603;\n+     * }\n+     *\/\n@@ -1321,0 +3025,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind.CXCursor_OverloadCandidate = 700;\n+     * }\n+     *\/\n@@ -1327,1 +3036,6 @@\n-    public static MemorySegment clang_getNullCursor ( SegmentAllocator allocator) {\n+    \/**\n+     * {@snippet :\n+     * CXCursor clang_getNullCursor();\n+     * }\n+     *\/\n+    public static MemorySegment clang_getNullCursor(SegmentAllocator allocator) {\n@@ -1338,1 +3052,6 @@\n-    public static MemorySegment clang_getTranslationUnitCursor ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXCursor clang_getTranslationUnitCursor(CXTranslationUnit);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTranslationUnitCursor(SegmentAllocator allocator, MemorySegment x1) {\n@@ -1349,1 +3068,6 @@\n-    public static int clang_equalCursors ( MemorySegment x0,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_equalCursors(CXCursor, CXCursor);\n+     * }\n+     *\/\n+    public static int clang_equalCursors(MemorySegment x0, MemorySegment x1) {\n@@ -1360,1 +3084,6 @@\n-    public static int clang_Cursor_isNull ( MemorySegment cursor) {\n+    \/**\n+     * {@snippet :\n+     * int clang_Cursor_isNull(CXCursor cursor);\n+     * }\n+     *\/\n+    public static int clang_Cursor_isNull(MemorySegment cursor) {\n@@ -1371,1 +3100,6 @@\n-    public static int clang_getCursorKind ( MemorySegment x0) {\n+    \/**\n+     * {@snippet :\n+     * enum CXCursorKind clang_getCursorKind(CXCursor);\n+     * }\n+     *\/\n+    public static int clang_getCursorKind(MemorySegment x0) {\n@@ -1382,1 +3116,6 @@\n-    public static int clang_isDeclaration ( int x0) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_isDeclaration(enum CXCursorKind);\n+     * }\n+     *\/\n+    public static int clang_isDeclaration(int x0) {\n@@ -1393,1 +3132,6 @@\n-    public static int clang_isAttribute ( int x0) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_isAttribute(enum CXCursorKind);\n+     * }\n+     *\/\n+    public static int clang_isAttribute(int x0) {\n@@ -1404,1 +3148,6 @@\n-    public static int clang_isInvalid ( int x0) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_isInvalid(enum CXCursorKind);\n+     * }\n+     *\/\n+    public static int clang_isInvalid(int x0) {\n@@ -1415,1 +3164,6 @@\n-    public static int clang_isPreprocessing ( int x0) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_isPreprocessing(enum CXCursorKind);\n+     * }\n+     *\/\n+    public static int clang_isPreprocessing(int x0) {\n@@ -1423,0 +3177,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLinkageKind.CXLinkage_Invalid = 0;\n+     * }\n+     *\/\n@@ -1426,0 +3185,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLinkageKind.CXLinkage_NoLinkage = 1;\n+     * }\n+     *\/\n@@ -1429,0 +3193,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLinkageKind.CXLinkage_Internal = 2;\n+     * }\n+     *\/\n@@ -1432,0 +3201,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLinkageKind.CXLinkage_UniqueExternal = 3;\n+     * }\n+     *\/\n@@ -1435,0 +3209,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLinkageKind.CXLinkage_External = 4;\n+     * }\n+     *\/\n@@ -1441,1 +3220,6 @@\n-    public static int clang_getCursorLinkage ( MemorySegment cursor) {\n+    \/**\n+     * {@snippet :\n+     * enum CXLinkageKind clang_getCursorLinkage(CXCursor cursor);\n+     * }\n+     *\/\n+    public static int clang_getCursorLinkage(MemorySegment cursor) {\n@@ -1449,0 +3233,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLanguageKind.CXLanguage_Invalid = 0;\n+     * }\n+     *\/\n@@ -1452,0 +3241,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLanguageKind.CXLanguage_C = 1;\n+     * }\n+     *\/\n@@ -1455,0 +3249,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLanguageKind.CXLanguage_ObjC = 2;\n+     * }\n+     *\/\n@@ -1458,0 +3257,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXLanguageKind.CXLanguage_CPlusPlus = 3;\n+     * }\n+     *\/\n@@ -1464,1 +3268,6 @@\n-    public static int clang_getCursorLanguage ( MemorySegment cursor) {\n+    \/**\n+     * {@snippet :\n+     * enum CXLanguageKind clang_getCursorLanguage(CXCursor cursor);\n+     * }\n+     *\/\n+    public static int clang_getCursorLanguage(MemorySegment cursor) {\n@@ -1475,1 +3284,6 @@\n-    public static MemorySegment clang_Cursor_getTranslationUnit ( MemorySegment x0) {\n+    \/**\n+     * {@snippet :\n+     * CXTranslationUnit clang_Cursor_getTranslationUnit(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_Cursor_getTranslationUnit(MemorySegment x0) {\n@@ -1486,1 +3300,6 @@\n-    public static MemorySegment clang_getCursorLocation ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceLocation clang_getCursorLocation(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorLocation(SegmentAllocator allocator, MemorySegment x1) {\n@@ -1497,1 +3316,6 @@\n-    public static MemorySegment clang_getCursorExtent ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceRange clang_getCursorExtent(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorExtent(SegmentAllocator allocator, MemorySegment x1) {\n@@ -1505,0 +3329,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Invalid = 0;\n+     * }\n+     *\/\n@@ -1508,0 +3337,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Unexposed = 1;\n+     * }\n+     *\/\n@@ -1511,0 +3345,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Void = 2;\n+     * }\n+     *\/\n@@ -1514,0 +3353,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Bool = 3;\n+     * }\n+     *\/\n@@ -1517,0 +3361,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Char_U = 4;\n+     * }\n+     *\/\n@@ -1520,0 +3369,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_UChar = 5;\n+     * }\n+     *\/\n@@ -1523,0 +3377,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Char16 = 6;\n+     * }\n+     *\/\n@@ -1526,0 +3385,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Char32 = 7;\n+     * }\n+     *\/\n@@ -1529,0 +3393,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_UShort = 8;\n+     * }\n+     *\/\n@@ -1532,0 +3401,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_UInt = 9;\n+     * }\n+     *\/\n@@ -1535,0 +3409,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ULong = 10;\n+     * }\n+     *\/\n@@ -1538,0 +3417,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ULongLong = 11;\n+     * }\n+     *\/\n@@ -1541,0 +3425,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_UInt128 = 12;\n+     * }\n+     *\/\n@@ -1544,0 +3433,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Char_S = 13;\n+     * }\n+     *\/\n@@ -1547,0 +3441,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_SChar = 14;\n+     * }\n+     *\/\n@@ -1550,0 +3449,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_WChar = 15;\n+     * }\n+     *\/\n@@ -1553,0 +3457,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Short = 16;\n+     * }\n+     *\/\n@@ -1556,0 +3465,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Int = 17;\n+     * }\n+     *\/\n@@ -1559,0 +3473,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Long = 18;\n+     * }\n+     *\/\n@@ -1562,0 +3481,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_LongLong = 19;\n+     * }\n+     *\/\n@@ -1565,0 +3489,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Int128 = 20;\n+     * }\n+     *\/\n@@ -1568,0 +3497,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Float = 21;\n+     * }\n+     *\/\n@@ -1571,0 +3505,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Double = 22;\n+     * }\n+     *\/\n@@ -1574,0 +3513,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_LongDouble = 23;\n+     * }\n+     *\/\n@@ -1577,0 +3521,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_NullPtr = 24;\n+     * }\n+     *\/\n@@ -1580,0 +3529,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Overload = 25;\n+     * }\n+     *\/\n@@ -1583,0 +3537,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Dependent = 26;\n+     * }\n+     *\/\n@@ -1586,0 +3545,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ObjCId = 27;\n+     * }\n+     *\/\n@@ -1589,0 +3553,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ObjCClass = 28;\n+     * }\n+     *\/\n@@ -1592,0 +3561,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ObjCSel = 29;\n+     * }\n+     *\/\n@@ -1595,0 +3569,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Float128 = 30;\n+     * }\n+     *\/\n@@ -1598,0 +3577,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Half = 31;\n+     * }\n+     *\/\n@@ -1601,0 +3585,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Float16 = 32;\n+     * }\n+     *\/\n@@ -1604,0 +3593,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ShortAccum = 33;\n+     * }\n+     *\/\n@@ -1607,0 +3601,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Accum = 34;\n+     * }\n+     *\/\n@@ -1610,0 +3609,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_LongAccum = 35;\n+     * }\n+     *\/\n@@ -1613,0 +3617,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_UShortAccum = 36;\n+     * }\n+     *\/\n@@ -1616,0 +3625,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_UAccum = 37;\n+     * }\n+     *\/\n@@ -1619,0 +3633,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ULongAccum = 38;\n+     * }\n+     *\/\n@@ -1622,0 +3641,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_FirstBuiltin = 2;\n+     * }\n+     *\/\n@@ -1625,0 +3649,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_LastBuiltin = 39;\n+     * }\n+     *\/\n@@ -1628,0 +3657,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Complex = 100;\n+     * }\n+     *\/\n@@ -1631,0 +3665,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Pointer = 101;\n+     * }\n+     *\/\n@@ -1634,0 +3673,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_BlockPointer = 102;\n+     * }\n+     *\/\n@@ -1637,0 +3681,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_LValueReference = 103;\n+     * }\n+     *\/\n@@ -1640,0 +3689,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_RValueReference = 104;\n+     * }\n+     *\/\n@@ -1643,0 +3697,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Record = 105;\n+     * }\n+     *\/\n@@ -1646,0 +3705,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Enum = 106;\n+     * }\n+     *\/\n@@ -1649,0 +3713,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Typedef = 107;\n+     * }\n+     *\/\n@@ -1652,0 +3721,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ObjCInterface = 108;\n+     * }\n+     *\/\n@@ -1655,0 +3729,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ObjCObjectPointer = 109;\n+     * }\n+     *\/\n@@ -1658,0 +3737,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_FunctionNoProto = 110;\n+     * }\n+     *\/\n@@ -1661,0 +3745,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_FunctionProto = 111;\n+     * }\n+     *\/\n@@ -1664,0 +3753,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ConstantArray = 112;\n+     * }\n+     *\/\n@@ -1667,0 +3761,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Vector = 113;\n+     * }\n+     *\/\n@@ -1670,0 +3769,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_IncompleteArray = 114;\n+     * }\n+     *\/\n@@ -1673,0 +3777,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_VariableArray = 115;\n+     * }\n+     *\/\n@@ -1676,0 +3785,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_DependentSizedArray = 116;\n+     * }\n+     *\/\n@@ -1679,0 +3793,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_MemberPointer = 117;\n+     * }\n+     *\/\n@@ -1682,0 +3801,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Auto = 118;\n+     * }\n+     *\/\n@@ -1685,0 +3809,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Elaborated = 119;\n+     * }\n+     *\/\n@@ -1688,0 +3817,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Pipe = 120;\n+     * }\n+     *\/\n@@ -1691,0 +3825,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dRO = 121;\n+     * }\n+     *\/\n@@ -1694,0 +3833,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dArrayRO = 122;\n+     * }\n+     *\/\n@@ -1697,0 +3841,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dBufferRO = 123;\n+     * }\n+     *\/\n@@ -1700,0 +3849,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dRO = 124;\n+     * }\n+     *\/\n@@ -1703,0 +3857,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayRO = 125;\n+     * }\n+     *\/\n@@ -1706,0 +3865,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dDepthRO = 126;\n+     * }\n+     *\/\n@@ -1709,0 +3873,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayDepthRO = 127;\n+     * }\n+     *\/\n@@ -1712,0 +3881,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dMSAARO = 128;\n+     * }\n+     *\/\n@@ -1715,0 +3889,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayMSAARO = 129;\n+     * }\n+     *\/\n@@ -1718,0 +3897,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dMSAADepthRO = 130;\n+     * }\n+     *\/\n@@ -1721,0 +3905,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayMSAADepthRO = 131;\n+     * }\n+     *\/\n@@ -1724,0 +3913,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage3dRO = 132;\n+     * }\n+     *\/\n@@ -1727,0 +3921,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dWO = 133;\n+     * }\n+     *\/\n@@ -1730,0 +3929,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dArrayWO = 134;\n+     * }\n+     *\/\n@@ -1733,0 +3937,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dBufferWO = 135;\n+     * }\n+     *\/\n@@ -1736,0 +3945,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dWO = 136;\n+     * }\n+     *\/\n@@ -1739,0 +3953,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayWO = 137;\n+     * }\n+     *\/\n@@ -1742,0 +3961,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dDepthWO = 138;\n+     * }\n+     *\/\n@@ -1745,0 +3969,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayDepthWO = 139;\n+     * }\n+     *\/\n@@ -1748,0 +3977,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dMSAAWO = 140;\n+     * }\n+     *\/\n@@ -1751,0 +3985,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayMSAAWO = 141;\n+     * }\n+     *\/\n@@ -1754,0 +3993,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dMSAADepthWO = 142;\n+     * }\n+     *\/\n@@ -1757,0 +4001,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayMSAADepthWO = 143;\n+     * }\n+     *\/\n@@ -1760,0 +4009,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage3dWO = 144;\n+     * }\n+     *\/\n@@ -1763,0 +4017,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dRW = 145;\n+     * }\n+     *\/\n@@ -1766,0 +4025,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dArrayRW = 146;\n+     * }\n+     *\/\n@@ -1769,0 +4033,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage1dBufferRW = 147;\n+     * }\n+     *\/\n@@ -1772,0 +4041,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dRW = 148;\n+     * }\n+     *\/\n@@ -1775,0 +4049,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayRW = 149;\n+     * }\n+     *\/\n@@ -1778,0 +4057,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dDepthRW = 150;\n+     * }\n+     *\/\n@@ -1781,0 +4065,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayDepthRW = 151;\n+     * }\n+     *\/\n@@ -1784,0 +4073,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dMSAARW = 152;\n+     * }\n+     *\/\n@@ -1787,0 +4081,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayMSAARW = 153;\n+     * }\n+     *\/\n@@ -1790,0 +4089,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dMSAADepthRW = 154;\n+     * }\n+     *\/\n@@ -1793,0 +4097,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage2dArrayMSAADepthRW = 155;\n+     * }\n+     *\/\n@@ -1796,0 +4105,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLImage3dRW = 156;\n+     * }\n+     *\/\n@@ -1799,0 +4113,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLSampler = 157;\n+     * }\n+     *\/\n@@ -1802,0 +4121,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLEvent = 158;\n+     * }\n+     *\/\n@@ -1805,0 +4129,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLQueue = 159;\n+     * }\n+     *\/\n@@ -1808,0 +4137,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLReserveID = 160;\n+     * }\n+     *\/\n@@ -1811,0 +4145,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ObjCObject = 161;\n+     * }\n+     *\/\n@@ -1814,0 +4153,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ObjCTypeParam = 162;\n+     * }\n+     *\/\n@@ -1817,0 +4161,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_Attributed = 163;\n+     * }\n+     *\/\n@@ -1820,0 +4169,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCMcePayload = 164;\n+     * }\n+     *\/\n@@ -1823,0 +4177,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCImePayload = 165;\n+     * }\n+     *\/\n@@ -1826,0 +4185,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCRefPayload = 166;\n+     * }\n+     *\/\n@@ -1829,0 +4193,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCSicPayload = 167;\n+     * }\n+     *\/\n@@ -1832,0 +4201,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCMceResult = 168;\n+     * }\n+     *\/\n@@ -1835,0 +4209,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCImeResult = 169;\n+     * }\n+     *\/\n@@ -1838,0 +4217,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCRefResult = 170;\n+     * }\n+     *\/\n@@ -1841,0 +4225,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCSicResult = 171;\n+     * }\n+     *\/\n@@ -1844,0 +4233,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCImeResultSingleRefStreamout = 172;\n+     * }\n+     *\/\n@@ -1847,0 +4241,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCImeResultDualRefStreamout = 173;\n+     * }\n+     *\/\n@@ -1850,0 +4249,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCImeSingleRefStreamin = 174;\n+     * }\n+     *\/\n@@ -1853,0 +4257,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_OCLIntelSubgroupAVCImeDualRefStreamin = 175;\n+     * }\n+     *\/\n@@ -1856,0 +4265,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeKind.CXType_ExtVector = 176;\n+     * }\n+     *\/\n@@ -1859,0 +4273,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_Default = 0;\n+     * }\n+     *\/\n@@ -1862,0 +4281,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_C = 1;\n+     * }\n+     *\/\n@@ -1865,0 +4289,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_X86StdCall = 2;\n+     * }\n+     *\/\n@@ -1868,0 +4297,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_X86FastCall = 3;\n+     * }\n+     *\/\n@@ -1871,0 +4305,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_X86ThisCall = 4;\n+     * }\n+     *\/\n@@ -1874,0 +4313,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_X86Pascal = 5;\n+     * }\n+     *\/\n@@ -1877,0 +4321,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_AAPCS = 6;\n+     * }\n+     *\/\n@@ -1880,0 +4329,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_AAPCS_VFP = 7;\n+     * }\n+     *\/\n@@ -1883,0 +4337,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_X86RegCall = 8;\n+     * }\n+     *\/\n@@ -1886,0 +4345,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_IntelOclBicc = 9;\n+     * }\n+     *\/\n@@ -1889,0 +4353,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_Win64 = 10;\n+     * }\n+     *\/\n@@ -1892,0 +4361,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_X86_64Win64 = 10;\n+     * }\n+     *\/\n@@ -1895,0 +4369,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_X86_64SysV = 11;\n+     * }\n+     *\/\n@@ -1898,0 +4377,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_X86VectorCall = 12;\n+     * }\n+     *\/\n@@ -1901,0 +4385,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_Swift = 13;\n+     * }\n+     *\/\n@@ -1904,0 +4393,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_PreserveMost = 14;\n+     * }\n+     *\/\n@@ -1907,0 +4401,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_PreserveAll = 15;\n+     * }\n+     *\/\n@@ -1910,0 +4409,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_AArch64VectorCall = 16;\n+     * }\n+     *\/\n@@ -1913,0 +4417,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_Invalid = 100;\n+     * }\n+     *\/\n@@ -1916,0 +4425,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv.CXCallingConv_Unexposed = 200;\n+     * }\n+     *\/\n@@ -1922,1 +4436,6 @@\n-    public static MemorySegment clang_getCursorType ( SegmentAllocator allocator,  MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getCursorType(CXCursor C);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorType(SegmentAllocator allocator, MemorySegment C) {\n@@ -1933,1 +4452,6 @@\n-    public static MemorySegment clang_getTypeSpelling ( SegmentAllocator allocator,  MemorySegment CT) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getTypeSpelling(CXType CT);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTypeSpelling(SegmentAllocator allocator, MemorySegment CT) {\n@@ -1944,1 +4468,6 @@\n-    public static MemorySegment clang_getTypedefDeclUnderlyingType ( SegmentAllocator allocator,  MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getTypedefDeclUnderlyingType(CXCursor C);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTypedefDeclUnderlyingType(SegmentAllocator allocator, MemorySegment C) {\n@@ -1955,1 +4484,6 @@\n-    public static MemorySegment clang_getEnumDeclIntegerType ( SegmentAllocator allocator,  MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getEnumDeclIntegerType(CXCursor C);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getEnumDeclIntegerType(SegmentAllocator allocator, MemorySegment C) {\n@@ -1966,1 +4500,6 @@\n-    public static long clang_getEnumConstantDeclValue ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * long long clang_getEnumConstantDeclValue(CXCursor C);\n+     * }\n+     *\/\n+    public static long clang_getEnumConstantDeclValue(MemorySegment C) {\n@@ -1977,1 +4516,6 @@\n-    public static long clang_getEnumConstantDeclUnsignedValue ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * unsigned long long clang_getEnumConstantDeclUnsignedValue(CXCursor C);\n+     * }\n+     *\/\n+    public static long clang_getEnumConstantDeclUnsignedValue(MemorySegment C) {\n@@ -1988,1 +4532,6 @@\n-    public static int clang_getFieldDeclBitWidth ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * int clang_getFieldDeclBitWidth(CXCursor C);\n+     * }\n+     *\/\n+    public static int clang_getFieldDeclBitWidth(MemorySegment C) {\n@@ -1999,1 +4548,6 @@\n-    public static int clang_Cursor_getNumArguments ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * int clang_Cursor_getNumArguments(CXCursor C);\n+     * }\n+     *\/\n+    public static int clang_Cursor_getNumArguments(MemorySegment C) {\n@@ -2010,1 +4564,6 @@\n-    public static MemorySegment clang_Cursor_getArgument ( SegmentAllocator allocator,  MemorySegment C,  int i) {\n+    \/**\n+     * {@snippet :\n+     * CXCursor clang_Cursor_getArgument(CXCursor C, unsigned int i);\n+     * }\n+     *\/\n+    public static MemorySegment clang_Cursor_getArgument(SegmentAllocator allocator, MemorySegment C, int i) {\n@@ -2021,1 +4580,6 @@\n-    public static int clang_equalTypes ( MemorySegment A,  MemorySegment B) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_equalTypes(CXType A, CXType B);\n+     * }\n+     *\/\n+    public static int clang_equalTypes(MemorySegment A, MemorySegment B) {\n@@ -2032,1 +4596,6 @@\n-    public static MemorySegment clang_getCanonicalType ( SegmentAllocator allocator,  MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getCanonicalType(CXType T);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCanonicalType(SegmentAllocator allocator, MemorySegment T) {\n@@ -2043,1 +4612,6 @@\n-    public static int clang_isConstQualifiedType ( MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_isConstQualifiedType(CXType T);\n+     * }\n+     *\/\n+    public static int clang_isConstQualifiedType(MemorySegment T) {\n@@ -2054,1 +4628,6 @@\n-    public static int clang_Cursor_isMacroFunctionLike ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_Cursor_isMacroFunctionLike(CXCursor C);\n+     * }\n+     *\/\n+    public static int clang_Cursor_isMacroFunctionLike(MemorySegment C) {\n@@ -2065,1 +4644,6 @@\n-    public static int clang_Cursor_isFunctionInlined ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_Cursor_isFunctionInlined(CXCursor C);\n+     * }\n+     *\/\n+    public static int clang_Cursor_isFunctionInlined(MemorySegment C) {\n@@ -2076,1 +4660,6 @@\n-    public static int clang_isVolatileQualifiedType ( MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_isVolatileQualifiedType(CXType T);\n+     * }\n+     *\/\n+    public static int clang_isVolatileQualifiedType(MemorySegment T) {\n@@ -2087,1 +4676,6 @@\n-    public static MemorySegment clang_getTypedefName ( SegmentAllocator allocator,  MemorySegment CT) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getTypedefName(CXType CT);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTypedefName(SegmentAllocator allocator, MemorySegment CT) {\n@@ -2098,1 +4692,6 @@\n-    public static MemorySegment clang_getPointeeType ( SegmentAllocator allocator,  MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getPointeeType(CXType T);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getPointeeType(SegmentAllocator allocator, MemorySegment T) {\n@@ -2109,1 +4708,6 @@\n-    public static MemorySegment clang_getTypeDeclaration ( SegmentAllocator allocator,  MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * CXCursor clang_getTypeDeclaration(CXType T);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTypeDeclaration(SegmentAllocator allocator, MemorySegment T) {\n@@ -2120,1 +4724,6 @@\n-    public static MemorySegment clang_getTypeKindSpelling ( SegmentAllocator allocator,  int K) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getTypeKindSpelling(enum CXTypeKind K);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTypeKindSpelling(SegmentAllocator allocator, int K) {\n@@ -2131,1 +4740,6 @@\n-    public static int clang_getFunctionTypeCallingConv ( MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * enum CXCallingConv clang_getFunctionTypeCallingConv(CXType T);\n+     * }\n+     *\/\n+    public static int clang_getFunctionTypeCallingConv(MemorySegment T) {\n@@ -2142,1 +4756,6 @@\n-    public static MemorySegment clang_getResultType ( SegmentAllocator allocator,  MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getResultType(CXType T);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getResultType(SegmentAllocator allocator, MemorySegment T) {\n@@ -2153,1 +4772,6 @@\n-    public static int clang_getNumArgTypes ( MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * int clang_getNumArgTypes(CXType T);\n+     * }\n+     *\/\n+    public static int clang_getNumArgTypes(MemorySegment T) {\n@@ -2164,1 +4788,6 @@\n-    public static MemorySegment clang_getArgType ( SegmentAllocator allocator,  MemorySegment T,  int i) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getArgType(CXType T, unsigned int i);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getArgType(SegmentAllocator allocator, MemorySegment T, int i) {\n@@ -2175,1 +4804,6 @@\n-    public static int clang_isFunctionTypeVariadic ( MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_isFunctionTypeVariadic(CXType T);\n+     * }\n+     *\/\n+    public static int clang_isFunctionTypeVariadic(MemorySegment T) {\n@@ -2186,1 +4820,6 @@\n-    public static MemorySegment clang_getCursorResultType ( SegmentAllocator allocator,  MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getCursorResultType(CXCursor C);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorResultType(SegmentAllocator allocator, MemorySegment C) {\n@@ -2197,1 +4836,6 @@\n-    public static MemorySegment clang_getElementType ( SegmentAllocator allocator,  MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getElementType(CXType T);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getElementType(SegmentAllocator allocator, MemorySegment T) {\n@@ -2208,1 +4852,6 @@\n-    public static long clang_getNumElements ( MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * long long clang_getNumElements(CXType T);\n+     * }\n+     *\/\n+    public static long clang_getNumElements(MemorySegment T) {\n@@ -2219,1 +4868,6 @@\n-    public static MemorySegment clang_getArrayElementType ( SegmentAllocator allocator,  MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * CXType clang_getArrayElementType(CXType T);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getArrayElementType(SegmentAllocator allocator, MemorySegment T) {\n@@ -2230,1 +4884,6 @@\n-    public static long clang_getArraySize ( MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * long long clang_getArraySize(CXType T);\n+     * }\n+     *\/\n+    public static long clang_getArraySize(MemorySegment T) {\n@@ -2238,0 +4897,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeNullabilityKind.CXTypeNullability_NonNull = 0;\n+     * }\n+     *\/\n@@ -2241,0 +4905,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeNullabilityKind.CXTypeNullability_Nullable = 1;\n+     * }\n+     *\/\n@@ -2244,0 +4913,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeNullabilityKind.CXTypeNullability_Unspecified = 2;\n+     * }\n+     *\/\n@@ -2247,0 +4921,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeNullabilityKind.CXTypeNullability_Invalid = 3;\n+     * }\n+     *\/\n@@ -2250,0 +4929,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeLayoutError.CXTypeLayoutError_Invalid = -1;\n+     * }\n+     *\/\n@@ -2253,0 +4937,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeLayoutError.CXTypeLayoutError_Incomplete = -2;\n+     * }\n+     *\/\n@@ -2256,0 +4945,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeLayoutError.CXTypeLayoutError_Dependent = -3;\n+     * }\n+     *\/\n@@ -2259,0 +4953,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeLayoutError.CXTypeLayoutError_NotConstantSize = -4;\n+     * }\n+     *\/\n@@ -2262,0 +4961,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeLayoutError.CXTypeLayoutError_InvalidFieldName = -5;\n+     * }\n+     *\/\n@@ -2265,0 +4969,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTypeLayoutError.CXTypeLayoutError_Undeduced = -6;\n+     * }\n+     *\/\n@@ -2271,1 +4980,6 @@\n-    public static long clang_Type_getSizeOf ( MemorySegment T) {\n+    \/**\n+     * {@snippet :\n+     * long long clang_Type_getSizeOf(CXType T);\n+     * }\n+     *\/\n+    public static long clang_Type_getSizeOf(MemorySegment T) {\n@@ -2282,1 +4996,6 @@\n-    public static long clang_Type_getOffsetOf ( MemorySegment T,  MemorySegment S) {\n+    \/**\n+     * {@snippet :\n+     * long long clang_Type_getOffsetOf(CXType T, char* S);\n+     * }\n+     *\/\n+    public static long clang_Type_getOffsetOf(MemorySegment T, MemorySegment S) {\n@@ -2293,1 +5012,6 @@\n-    public static int clang_Cursor_isAnonymous ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_Cursor_isAnonymous(CXCursor C);\n+     * }\n+     *\/\n+    public static int clang_Cursor_isAnonymous(MemorySegment C) {\n@@ -2304,1 +5028,6 @@\n-    public static int clang_Cursor_isAnonymousRecordDecl ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_Cursor_isAnonymousRecordDecl(CXCursor C);\n+     * }\n+     *\/\n+    public static int clang_Cursor_isAnonymousRecordDecl(MemorySegment C) {\n@@ -2315,1 +5044,6 @@\n-    public static int clang_Cursor_isBitField ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_Cursor_isBitField(CXCursor C);\n+     * }\n+     *\/\n+    public static int clang_Cursor_isBitField(MemorySegment C) {\n@@ -2323,0 +5057,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXChildVisitResult.CXChildVisit_Break = 0;\n+     * }\n+     *\/\n@@ -2326,0 +5065,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXChildVisitResult.CXChildVisit_Continue = 1;\n+     * }\n+     *\/\n@@ -2329,0 +5073,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXChildVisitResult.CXChildVisit_Recurse = 2;\n+     * }\n+     *\/\n@@ -2335,1 +5084,6 @@\n-    public static int clang_visitChildren ( MemorySegment parent,  MemorySegment visitor,  MemorySegment client_data) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_visitChildren(CXCursor parent, CXCursorVisitor visitor, CXClientData client_data);\n+     * }\n+     *\/\n+    public static int clang_visitChildren(MemorySegment parent, MemorySegment visitor, MemorySegment client_data) {\n@@ -2346,1 +5100,6 @@\n-    public static MemorySegment clang_getCursorUSR ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getCursorUSR(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorUSR(SegmentAllocator allocator, MemorySegment x1) {\n@@ -2357,1 +5116,6 @@\n-    public static MemorySegment clang_getCursorSpelling ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getCursorSpelling(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorSpelling(SegmentAllocator allocator, MemorySegment x1) {\n@@ -2365,0 +5129,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_Indentation = 0;\n+     * }\n+     *\/\n@@ -2368,0 +5137,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressSpecifiers = 1;\n+     * }\n+     *\/\n@@ -2371,0 +5145,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressTagKeyword = 2;\n+     * }\n+     *\/\n@@ -2374,0 +5153,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_IncludeTagDefinition = 3;\n+     * }\n+     *\/\n@@ -2377,0 +5161,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressScope = 4;\n+     * }\n+     *\/\n@@ -2380,0 +5169,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressUnwrittenScope = 5;\n+     * }\n+     *\/\n@@ -2383,0 +5177,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressInitializers = 6;\n+     * }\n+     *\/\n@@ -2386,0 +5185,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_ConstantArraySizeAsWritten = 7;\n+     * }\n+     *\/\n@@ -2389,0 +5193,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_AnonymousTagLocations = 8;\n+     * }\n+     *\/\n@@ -2392,0 +5201,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressStrongLifetime = 9;\n+     * }\n+     *\/\n@@ -2395,0 +5209,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressLifetimeQualifiers = 10;\n+     * }\n+     *\/\n@@ -2398,0 +5217,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressTemplateArgsInCXXConstructors = 11;\n+     * }\n+     *\/\n@@ -2401,0 +5225,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_Bool = 12;\n+     * }\n+     *\/\n@@ -2404,0 +5233,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_Restrict = 13;\n+     * }\n+     *\/\n@@ -2407,0 +5241,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_Alignof = 14;\n+     * }\n+     *\/\n@@ -2410,0 +5249,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_UnderscoreAlignof = 15;\n+     * }\n+     *\/\n@@ -2413,0 +5257,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_UseVoidForZeroParams = 16;\n+     * }\n+     *\/\n@@ -2416,0 +5265,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_TerseOutput = 17;\n+     * }\n+     *\/\n@@ -2419,0 +5273,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_PolishForDeclaration = 18;\n+     * }\n+     *\/\n@@ -2422,0 +5281,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_Half = 19;\n+     * }\n+     *\/\n@@ -2425,0 +5289,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_MSWChar = 20;\n+     * }\n+     *\/\n@@ -2428,0 +5297,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_IncludeNewlines = 21;\n+     * }\n+     *\/\n@@ -2431,0 +5305,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_MSVCFormatting = 22;\n+     * }\n+     *\/\n@@ -2434,0 +5313,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_ConstantsAsWritten = 23;\n+     * }\n+     *\/\n@@ -2437,0 +5321,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_SuppressImplicitBase = 24;\n+     * }\n+     *\/\n@@ -2440,0 +5329,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_FullyQualifiedName = 25;\n+     * }\n+     *\/\n@@ -2443,0 +5337,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXPrintingPolicyProperty.CXPrintingPolicy_LastProperty = 25;\n+     * }\n+     *\/\n@@ -2449,1 +5348,6 @@\n-    public static int clang_PrintingPolicy_getProperty ( MemorySegment Policy,  int Property) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_PrintingPolicy_getProperty(CXPrintingPolicy Policy, enum CXPrintingPolicyProperty Property);\n+     * }\n+     *\/\n+    public static int clang_PrintingPolicy_getProperty(MemorySegment Policy, int Property) {\n@@ -2460,1 +5364,6 @@\n-    public static void clang_PrintingPolicy_setProperty ( MemorySegment Policy,  int Property,  int Value) {\n+    \/**\n+     * {@snippet :\n+     * void clang_PrintingPolicy_setProperty(CXPrintingPolicy Policy, enum CXPrintingPolicyProperty Property, unsigned int Value);\n+     * }\n+     *\/\n+    public static void clang_PrintingPolicy_setProperty(MemorySegment Policy, int Property, int Value) {\n@@ -2471,1 +5380,6 @@\n-    public static MemorySegment clang_getCursorPrintingPolicy ( MemorySegment x0) {\n+    \/**\n+     * {@snippet :\n+     * CXPrintingPolicy clang_getCursorPrintingPolicy(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorPrintingPolicy(MemorySegment x0) {\n@@ -2482,1 +5396,6 @@\n-    public static void clang_PrintingPolicy_dispose ( MemorySegment Policy) {\n+    \/**\n+     * {@snippet :\n+     * void clang_PrintingPolicy_dispose(CXPrintingPolicy Policy);\n+     * }\n+     *\/\n+    public static void clang_PrintingPolicy_dispose(MemorySegment Policy) {\n@@ -2493,1 +5412,6 @@\n-    public static MemorySegment clang_getCursorPrettyPrinted ( SegmentAllocator allocator,  MemorySegment Cursor,  MemorySegment Policy) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getCursorPrettyPrinted(CXCursor Cursor, CXPrintingPolicy Policy);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorPrettyPrinted(SegmentAllocator allocator, MemorySegment Cursor, MemorySegment Policy) {\n@@ -2504,1 +5428,6 @@\n-    public static MemorySegment clang_getCursorDisplayName ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getCursorDisplayName(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorDisplayName(SegmentAllocator allocator, MemorySegment x1) {\n@@ -2515,1 +5444,6 @@\n-    public static MemorySegment clang_getCursorReferenced ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXCursor clang_getCursorReferenced(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorReferenced(SegmentAllocator allocator, MemorySegment x1) {\n@@ -2526,1 +5460,6 @@\n-    public static MemorySegment clang_getCursorDefinition ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXCursor clang_getCursorDefinition(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorDefinition(SegmentAllocator allocator, MemorySegment x1) {\n@@ -2537,1 +5476,6 @@\n-    public static int clang_isCursorDefinition ( MemorySegment x0) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_isCursorDefinition(CXCursor);\n+     * }\n+     *\/\n+    public static int clang_isCursorDefinition(MemorySegment x0) {\n@@ -2548,1 +5492,6 @@\n-    public static int clang_Cursor_isVariadic ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_Cursor_isVariadic(CXCursor C);\n+     * }\n+     *\/\n+    public static int clang_Cursor_isVariadic(MemorySegment C) {\n@@ -2559,1 +5508,6 @@\n-    public static MemorySegment clang_Cursor_getMangling ( SegmentAllocator allocator,  MemorySegment x1) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_Cursor_getMangling(CXCursor);\n+     * }\n+     *\/\n+    public static MemorySegment clang_Cursor_getMangling(SegmentAllocator allocator, MemorySegment x1) {\n@@ -2567,0 +5521,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTokenKind.CXToken_Punctuation = 0;\n+     * }\n+     *\/\n@@ -2570,0 +5529,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTokenKind.CXToken_Keyword = 1;\n+     * }\n+     *\/\n@@ -2573,0 +5537,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTokenKind.CXToken_Identifier = 2;\n+     * }\n+     *\/\n@@ -2576,0 +5545,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTokenKind.CXToken_Literal = 3;\n+     * }\n+     *\/\n@@ -2579,0 +5553,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum CXTokenKind.CXToken_Comment = 4;\n+     * }\n+     *\/\n@@ -2585,1 +5564,6 @@\n-    public static int clang_getTokenKind ( MemorySegment x0) {\n+    \/**\n+     * {@snippet :\n+     * CXTokenKind clang_getTokenKind(CXToken);\n+     * }\n+     *\/\n+    public static int clang_getTokenKind(MemorySegment x0) {\n@@ -2596,1 +5580,6 @@\n-    public static MemorySegment clang_getTokenSpelling ( SegmentAllocator allocator,  MemorySegment x1,  MemorySegment x2) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getTokenSpelling(CXTranslationUnit, CXToken);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTokenSpelling(SegmentAllocator allocator, MemorySegment x1, MemorySegment x2) {\n@@ -2607,1 +5596,6 @@\n-    public static MemorySegment clang_getTokenLocation ( SegmentAllocator allocator,  MemorySegment x1,  MemorySegment x2) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceLocation clang_getTokenLocation(CXTranslationUnit, CXToken);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTokenLocation(SegmentAllocator allocator, MemorySegment x1, MemorySegment x2) {\n@@ -2618,1 +5612,6 @@\n-    public static MemorySegment clang_getTokenExtent ( SegmentAllocator allocator,  MemorySegment x1,  MemorySegment x2) {\n+    \/**\n+     * {@snippet :\n+     * CXSourceRange clang_getTokenExtent(CXTranslationUnit, CXToken);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getTokenExtent(SegmentAllocator allocator, MemorySegment x1, MemorySegment x2) {\n@@ -2629,1 +5628,6 @@\n-    public static void clang_tokenize ( MemorySegment TU,  MemorySegment Range,  MemorySegment Tokens,  MemorySegment NumTokens) {\n+    \/**\n+     * {@snippet :\n+     * void clang_tokenize(CXTranslationUnit TU, CXSourceRange Range, CXToken** Tokens, unsigned int* NumTokens);\n+     * }\n+     *\/\n+    public static void clang_tokenize(MemorySegment TU, MemorySegment Range, MemorySegment Tokens, MemorySegment NumTokens) {\n@@ -2640,1 +5644,6 @@\n-    public static void clang_disposeTokens ( MemorySegment TU,  MemorySegment Tokens,  int NumTokens) {\n+    \/**\n+     * {@snippet :\n+     * void clang_disposeTokens(CXTranslationUnit TU, CXToken* Tokens, unsigned int NumTokens);\n+     * }\n+     *\/\n+    public static void clang_disposeTokens(MemorySegment TU, MemorySegment Tokens, int NumTokens) {\n@@ -2651,1 +5660,6 @@\n-    public static MemorySegment clang_getCursorKindSpelling ( SegmentAllocator allocator,  int Kind) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getCursorKindSpelling(enum CXCursorKind Kind);\n+     * }\n+     *\/\n+    public static MemorySegment clang_getCursorKindSpelling(SegmentAllocator allocator, int Kind) {\n@@ -2662,1 +5676,6 @@\n-    public static MemorySegment clang_getClangVersion ( SegmentAllocator allocator) {\n+    \/**\n+     * {@snippet :\n+     * CXString clang_getClangVersion();\n+     * }\n+     *\/\n+    public static MemorySegment clang_getClangVersion(SegmentAllocator allocator) {\n@@ -2673,1 +5692,6 @@\n-    public static void clang_toggleCrashRecovery ( int isEnabled) {\n+    \/**\n+     * {@snippet :\n+     * void clang_toggleCrashRecovery(unsigned int isEnabled);\n+     * }\n+     *\/\n+    public static void clang_toggleCrashRecovery(int isEnabled) {\n@@ -2684,1 +5708,6 @@\n-    public static MemorySegment clang_Cursor_Evaluate ( MemorySegment C) {\n+    \/**\n+     * {@snippet :\n+     * CXEvalResult clang_Cursor_Evaluate(CXCursor C);\n+     * }\n+     *\/\n+    public static MemorySegment clang_Cursor_Evaluate(MemorySegment C) {\n@@ -2695,1 +5724,6 @@\n-    public static int clang_EvalResult_getKind ( MemorySegment E) {\n+    \/**\n+     * {@snippet :\n+     * CXEvalResultKind clang_EvalResult_getKind(CXEvalResult E);\n+     * }\n+     *\/\n+    public static int clang_EvalResult_getKind(MemorySegment E) {\n@@ -2706,1 +5740,6 @@\n-    public static int clang_EvalResult_getAsInt ( MemorySegment E) {\n+    \/**\n+     * {@snippet :\n+     * int clang_EvalResult_getAsInt(CXEvalResult E);\n+     * }\n+     *\/\n+    public static int clang_EvalResult_getAsInt(MemorySegment E) {\n@@ -2717,1 +5756,6 @@\n-    public static long clang_EvalResult_getAsLongLong ( MemorySegment E) {\n+    \/**\n+     * {@snippet :\n+     * long long clang_EvalResult_getAsLongLong(CXEvalResult E);\n+     * }\n+     *\/\n+    public static long clang_EvalResult_getAsLongLong(MemorySegment E) {\n@@ -2728,1 +5772,6 @@\n-    public static int clang_EvalResult_isUnsignedInt ( MemorySegment E) {\n+    \/**\n+     * {@snippet :\n+     * unsigned int clang_EvalResult_isUnsignedInt(CXEvalResult E);\n+     * }\n+     *\/\n+    public static int clang_EvalResult_isUnsignedInt(MemorySegment E) {\n@@ -2739,1 +5788,6 @@\n-    public static long clang_EvalResult_getAsUnsigned ( MemorySegment E) {\n+    \/**\n+     * {@snippet :\n+     * unsigned long long clang_EvalResult_getAsUnsigned(CXEvalResult E);\n+     * }\n+     *\/\n+    public static long clang_EvalResult_getAsUnsigned(MemorySegment E) {\n@@ -2750,1 +5804,6 @@\n-    public static double clang_EvalResult_getAsDouble ( MemorySegment E) {\n+    \/**\n+     * {@snippet :\n+     * double clang_EvalResult_getAsDouble(CXEvalResult E);\n+     * }\n+     *\/\n+    public static double clang_EvalResult_getAsDouble(MemorySegment E) {\n@@ -2761,1 +5820,6 @@\n-    public static MemorySegment clang_EvalResult_getAsStr ( MemorySegment E) {\n+    \/**\n+     * {@snippet :\n+     * char* clang_EvalResult_getAsStr(CXEvalResult E);\n+     * }\n+     *\/\n+    public static MemorySegment clang_EvalResult_getAsStr(MemorySegment E) {\n@@ -2772,1 +5836,6 @@\n-    public static void clang_EvalResult_dispose ( MemorySegment E) {\n+    \/**\n+     * {@snippet :\n+     * void clang_EvalResult_dispose(CXEvalResult E);\n+     * }\n+     *\/\n+    public static void clang_EvalResult_dispose(MemorySegment E) {\n@@ -2780,0 +5849,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum .CXResult_Success = 0;\n+     * }\n+     *\/\n@@ -2783,0 +5857,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum .CXResult_Invalid = 1;\n+     * }\n+     *\/\n@@ -2786,0 +5865,5 @@\n+    \/**\n+     * {@snippet :\n+     * enum .CXResult_VisitBreak = 2;\n+     * }\n+     *\/\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/Index_h.java","additions":3207,"deletions":123,"binary":false,"changes":3330,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import java.lang.foreign.MemorySession;\n+import java.lang.foreign.SegmentScope;\n@@ -53,4 +53,5 @@\n-    private final static Linker LINKER = Linker.nativeLinker();\n-    private final static ClassLoader LOADER = RuntimeHelper.class.getClassLoader();\n-    private final static MethodHandles.Lookup MH_LOOKUP = MethodHandles.lookup();\n-    private final static SymbolLookup SYMBOL_LOOKUP;\n+    private static final Linker LINKER = Linker.nativeLinker();\n+    private static final ClassLoader LOADER = RuntimeHelper.class.getClassLoader();\n+    private static final MethodHandles.Lookup MH_LOOKUP = MethodHandles.lookup();\n+    private static final SymbolLookup SYMBOL_LOOKUP;\n+    private static final SegmentAllocator THROWING_ALLOCATOR = (x, y) -> { throw new AssertionError(\"should not reach here\"); };\n@@ -59,1 +60,1 @@\n-            (size, align) -> MemorySegment.allocateNative(size, align, MemorySession.implicit());\n+            (size, align) -> MemorySegment.allocateNative(size, align, SegmentScope.auto());\n@@ -80,2 +81,0 @@\n-    private final static SegmentAllocator THROWING_ALLOCATOR = (x, y) -> { throw new AssertionError(\"should not reach here\"); };\n-\n@@ -83,1 +82,1 @@\n-        return SYMBOL_LOOKUP.find(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), symbol.session())).orElse(null);\n+        return SYMBOL_LOOKUP.find(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), symbol.scope())).orElse(null);\n@@ -102,1 +101,1 @@\n-    static <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, MemorySession session) {\n+    static <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, SegmentScope scope) {\n@@ -106,1 +105,1 @@\n-            return LINKER.upcallStub(handle, fdesc, session);\n+            return LINKER.upcallStub(handle, fdesc, scope);\n@@ -112,2 +111,2 @@\n-    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, MemorySession session) {\n-         return MemorySegment.ofAddress(addr.address(), numElements * layout.byteSize(), session);\n+    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, SegmentScope scope) {\n+         return MemorySegment.ofAddress(addr.address(), numElements * layout.byteSize(), scope);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/RuntimeHelper.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$0 {\n+final class constants$0 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$0() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$0.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$1 {\n+final class constants$1 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$1() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$1.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$10 {\n+final class constants$10 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$10() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$10.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$11 {\n+final class constants$11 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$11() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$11.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$12 {\n+final class constants$12 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$12() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$12.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$13 {\n+final class constants$13 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$13() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$13.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$14 {\n+final class constants$14 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$14() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$14.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$15 {\n+final class constants$15 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$15() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$15.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$16 {\n+final class constants$16 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$16() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$16.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$17 {\n+final class constants$17 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$17() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$17.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$18 {\n+final class constants$18 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$18() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$18.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$2 {\n+final class constants$2 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$2() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$2.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$3 {\n+final class constants$3 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$3() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$3.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$4 {\n+final class constants$4 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$4() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$4.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$5 {\n+final class constants$5 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$5() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$5.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$6 {\n+final class constants$6 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$6() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$6.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$7 {\n+final class constants$7 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$7() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$7.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$8 {\n+final class constants$8 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$8() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$8.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class constants$9 {\n+final class constants$9 {\n@@ -37,0 +37,2 @@\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private constants$9() {}\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$9.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -224,3 +224,0 @@\n-                case default:\n-                    \/\/ defensive. If no name is present, we don't want to crash\n-                    return new TypeVisitorResult(false, t.name().orElse(defaultName(t)));\n@@ -228,0 +225,2 @@\n+            \/\/ defensive. If no name is present, we don't want to crash\n+            return new TypeVisitorResult(false, t.name().orElse(defaultName(t)));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/CDeclarationPrinter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-            append(MEMBER_MODS + \" MemorySegment allocate(\" + className() + \" fi, MemorySession session) {\\n\");\n+            append(MEMBER_MODS + \" MemorySegment allocate(\" + className() + \" fi, SegmentScope scope) {\\n\");\n@@ -106,1 +106,1 @@\n-                functionDesc.accessExpression() + \", session);\\n\");\n+                functionDesc.accessExpression() + \", scope);\\n\");\n@@ -120,1 +120,1 @@\n-            append(MEMBER_MODS + \" \" + className() + \" ofAddress(MemorySegment addr, MemorySession session) {\\n\");\n+            append(MEMBER_MODS + \" \" + className() + \" ofAddress(MemorySegment addr, SegmentScope scope) {\\n\");\n@@ -124,1 +124,1 @@\n-            append(\"addr.address(), 0, session);\\n\");\n+            append(\"addr.address(), 0, scope);\\n\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/FunctionalInterfaceBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n-        append(\"return \" + fiName + \".ofAddress(\" + javaName + \"$get(), MemorySession.global());\\n\");\n+        append(\"return \" + fiName + \".ofAddress(\" + javaName + \"$get(), SegmentScope.global());\\n\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-        append(fiName + \" \" + javaName + \"(MemorySegment segment, MemorySession session) {\\n\");\n+        append(fiName + \" \" + javaName + \"(MemorySegment segment, SegmentScope scope) {\\n\");\n@@ -182,1 +182,1 @@\n-        append(\"return \" + fiName + \".ofAddress(\" + javaName + \"$get(segment), session);\\n\");\n+        append(\"return \" + fiName + \".ofAddress(\" + javaName + \"$get(segment), scope);\\n\");\n@@ -283,1 +283,1 @@\n-        append(\" MemorySegment ofAddress(MemorySegment addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }\\n\");\n+        append(\" MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }\\n\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructBuilder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-                \"--source\", \"20\",\n+                \"--source\", \"21\",\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/Writer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n-import java.lang.foreign.MemorySession;\n+import java.lang.foreign.SegmentScope;\n@@ -34,1 +34,1 @@\n-            (size, align) -> MemorySegment.allocateNative(size, align, MemorySession.implicit());\n+            (size, align) -> MemorySegment.allocateNative(size, align, SegmentScope.auto());\n@@ -53,1 +53,1 @@\n-        return SYMBOL_LOOKUP.find(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), symbol.session())).orElse(null);\n+        return SYMBOL_LOOKUP.find(name).map(symbol -> MemorySegment.ofAddress(symbol.address(), layout.byteSize(), symbol.scope())).orElse(null);\n@@ -72,1 +72,1 @@\n-    static <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, MemorySession session) {\n+    static <Z> MemorySegment upcallStub(Class<Z> fi, Z z, FunctionDescriptor fdesc, SegmentScope scope) {\n@@ -76,1 +76,1 @@\n-            return LINKER.upcallStub(handle, fdesc, session);\n+            return LINKER.upcallStub(handle, fdesc, scope);\n@@ -82,2 +82,2 @@\n-    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, MemorySession session) {\n-         return MemorySegment.ofAddress(addr.address(), numElements * layout.byteSize(), session);\n+    static MemorySegment asArray(MemorySegment addr, MemoryLayout layout, int numElements, SegmentScope scope) {\n+         return MemorySegment.ofAddress(addr.address(), numElements * layout.byteSize(), scope);\n","filename":"src\/main\/resources\/org\/openjdk\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -26,2 +26,0 @@\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.MemorySession;\n@@ -55,2 +53,2 @@\n-            Bar.foo$set(bar, Foo.allocate((i) -> val.set(i), arena.session()));\n-            Bar.foo(bar, arena.session()).apply(42);\n+            Bar.foo$set(bar, Foo.allocate((i) -> val.set(i), arena.scope()));\n+            Bar.foo(bar, arena.scope()).apply(42);\n@@ -66,2 +64,2 @@\n-            Bar.foo$set(bar, Foo.allocate((i) -> val.set(i), arena.session()));\n-            Foo.ofAddress(Bar.foo$get(bar), arena.session()).apply(42);\n+            Bar.foo$set(bar, Foo.allocate((i) -> val.set(i), arena.scope()));\n+            Foo.ofAddress(Bar.foo$get(bar), arena.scope()).apply(42);\n@@ -76,1 +74,1 @@\n-            f$set(Foo.allocate((i) -> val.set(i), arena.session()));\n+            f$set(Foo.allocate((i) -> val.set(i), arena.scope()));\n@@ -86,2 +84,2 @@\n-            f$set(Foo.allocate((i) -> val.set(i), arena.session()));\n-            Foo.ofAddress(f$get(), arena.session()).apply(42);\n+            f$set(Foo.allocate((i) -> val.set(i), arena.scope()));\n+            Foo.ofAddress(f$get(), arena.scope()).apply(42);\n@@ -97,2 +95,2 @@\n-            Baz.fp$set(baz, Baz.fp.allocate((i) -> val.set(i), arena.session()));\n-            Baz.fp(baz, arena.session()).apply(42);\n+            Baz.fp$set(baz, Baz.fp.allocate((i) -> val.set(i), arena.scope()));\n+            Baz.fp(baz, arena.scope()).apply(42);\n@@ -108,2 +106,2 @@\n-            Baz.fp$set(baz, Baz.fp.allocate((i) -> val.set(i), arena.session()));\n-            Baz.fp.ofAddress(Baz.fp$get(baz), arena.session()).apply(42);\n+            Baz.fp$set(baz, Baz.fp.allocate((i) -> val.set(i), arena.scope()));\n+            Baz.fp.ofAddress(Baz.fp$get(baz), arena.scope()).apply(42);\n@@ -118,1 +116,1 @@\n-            fp$set(fp.allocate((i) -> val.set(i), arena.session()));\n+            fp$set(fp.allocate((i) -> val.set(i), arena.scope()));\n@@ -128,2 +126,2 @@\n-            fp$set(fp.allocate((i) -> val.set(i), arena.session()));\n-            fp.ofAddress(fp$get(), arena.session()).apply(42);\n+            fp$set(fp.allocate((i) -> val.set(i), arena.scope()));\n+            fp.ofAddress(fp$get(), arena.scope()).apply(42);\n@@ -137,2 +135,2 @@\n-            fp_addr$set(fp_addr.allocate((addr) -> MemorySegment.ofAddress(addr.address() + 1), arena.session()));\n-            assertEquals(fp_addr.ofAddress(fp_addr$get(), arena.session()).apply(MemorySegment.ofAddress(42)), MemorySegment.ofAddress(43));\n+            fp_addr$set(fp_addr.allocate((addr) -> MemorySegment.ofAddress(addr.address() + 1), arena.scope()));\n+            assertEquals(fp_addr.ofAddress(fp_addr$get(), arena.scope()).apply(MemorySegment.ofAddress(42)), MemorySegment.ofAddress(43));\n","filename":"test\/jtreg\/generator\/funcPointerInvokers\/TestFuncPointerInvokers.java","additions":16,"deletions":18,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"test\/jtreg\/generator\/test8244938\/Test8244938.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"test\/jtreg\/generator\/test8244959\/Test8244959.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,3 +26,0 @@\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.MemorySession;\n-import java.lang.foreign.SegmentAllocator;\n@@ -63,1 +60,1 @@\n-            }, arena.session());\n+            }, arena.scope());\n","filename":"test\/jtreg\/generator\/test8246341\/LibTest8246341Test.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import java.lang.foreign.MemorySession;\n@@ -70,1 +69,1 @@\n-            }, arena.session());\n+            }, arena.scope());\n@@ -78,1 +77,1 @@\n-        assertTrue(!sum.session().isAlive());\n+        assertTrue(!sum.scope().isAlive());\n","filename":"test\/jtreg\/generator\/test8246400\/LibTest8246400Test.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,2 +25,0 @@\n-import java.lang.foreign.MemorySession;\n-import java.lang.foreign.SegmentAllocator;\n@@ -61,1 +59,1 @@\n-            }, arena.session());\n+            }, arena.scope());\n","filename":"test\/jtreg\/generator\/test8252016\/Test8252016.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import java.lang.foreign.MemorySession;\n-import java.lang.foreign.SegmentAllocator;\n","filename":"test\/jtreg\/generator\/test8252121\/Test8252121.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"test\/jtreg\/generator\/test8252465\/LibTest8252465Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.MemorySession;\n@@ -56,1 +54,1 @@\n-            MemorySegment seg = Point.ofAddress(addr, arena.session());\n+            MemorySegment seg = Point.ofAddress(addr, arena.scope());\n","filename":"test\/jtreg\/generator\/test8253102\/LibTest8253102Test.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"test\/jtreg\/generator\/test8254983\/LibTest8254983Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.lang.foreign.MemorySession;\n@@ -69,1 +68,1 @@\n-            var seg = MemorySegment.ofAddress(getFoo().address(), Foo.sizeof(), arena.session());\n+            var seg = MemorySegment.ofAddress(getFoo().address(), Foo.sizeof(), arena.scope());\n","filename":"test\/jtreg\/generator\/test8257892\/LibUnsupportedTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.lang.foreign.MemorySession;\n@@ -57,1 +56,1 @@\n-             }, arena.session()));\n+             }, arena.scope()));\n@@ -75,1 +74,1 @@\n-             }, arena.session()));\n+             }, arena.scope()));\n","filename":"test\/jtreg\/generator\/test8258605\/LibTest8258605Test.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.lang.foreign.MemorySession;\n@@ -53,1 +52,1 @@\n-            var sumIface = Foo.sum.ofAddress(funcPtr, arena.session());\n+            var sumIface = Foo.sum.ofAddress(funcPtr, arena.scope());\n","filename":"test\/jtreg\/generator\/test8261511\/Test8261511.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.lang.foreign.MemorySession;\n@@ -48,1 +47,1 @@\n-            var handle = func$f.allocate(x -> x * x, arena.session());\n+            var handle = func$f.allocate(x -> x * x, arena.scope());\n","filename":"test\/jtreg\/generator\/testFunctionPointer\/LibFuncPtrTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.lang.foreign.MemorySession;\n","filename":"test\/jtreg\/generator\/testStruct\/LibStructTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-            commands.add(\"--source=20\");\n+            commands.add(\"--source=21\");\n","filename":"test\/lib\/JtregJextractSources.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n-import java.lang.foreign.MemorySegment;\n-import java.lang.foreign.MemorySession;\n+import java.lang.foreign.SegmentScope;\n@@ -34,1 +33,0 @@\n-import java.lang.foreign.MemorySession;\n@@ -208,1 +206,1 @@\n-        checkMethod(fiClass, \"allocate\", MemorySegment.class, fiClass, MemorySession.class);\n+        checkMethod(fiClass, \"allocate\", MemorySegment.class, fiClass, SegmentScope.class);\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/TestClassGeneration.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n---include-macro __API_TO_BE_DEPRECATED\n+--include-constant __API_TO_BE_DEPRECATED\n@@ -7,3 +7,3 @@\n---include-macro __ENABLE_LEGACY_MAC_AVAILABILITY\n---include-macro __MAC_OS_X_VERSION_MAX_ALLOWED\n---include-macro __MAC_OS_X_VERSION_MIN_REQUIRED\n+--include-constant __ENABLE_LEGACY_MAC_AVAILABILITY\n+--include-constant __MAC_OS_X_VERSION_MAX_ALLOWED\n+--include-constant __MAC_OS_X_VERSION_MIN_REQUIRED\n@@ -13,168 +13,168 @@\n---include-macro MAC_OS_VERSION_11_0\n---include-macro MAC_OS_X_VERSION_10_0\n---include-macro MAC_OS_X_VERSION_10_1\n---include-macro MAC_OS_X_VERSION_10_10\n---include-macro MAC_OS_X_VERSION_10_10_2\n---include-macro MAC_OS_X_VERSION_10_10_3\n---include-macro MAC_OS_X_VERSION_10_11\n---include-macro MAC_OS_X_VERSION_10_11_2\n---include-macro MAC_OS_X_VERSION_10_11_3\n---include-macro MAC_OS_X_VERSION_10_11_4\n---include-macro MAC_OS_X_VERSION_10_12\n---include-macro MAC_OS_X_VERSION_10_12_1\n---include-macro MAC_OS_X_VERSION_10_12_2\n---include-macro MAC_OS_X_VERSION_10_12_4\n---include-macro MAC_OS_X_VERSION_10_13\n---include-macro MAC_OS_X_VERSION_10_13_1\n---include-macro MAC_OS_X_VERSION_10_13_2\n---include-macro MAC_OS_X_VERSION_10_13_4\n---include-macro MAC_OS_X_VERSION_10_14\n---include-macro MAC_OS_X_VERSION_10_14_1\n---include-macro MAC_OS_X_VERSION_10_14_4\n---include-macro MAC_OS_X_VERSION_10_14_6\n---include-macro MAC_OS_X_VERSION_10_15\n---include-macro MAC_OS_X_VERSION_10_15_1\n---include-macro MAC_OS_X_VERSION_10_16\n---include-macro MAC_OS_X_VERSION_10_2\n---include-macro MAC_OS_X_VERSION_10_3\n---include-macro MAC_OS_X_VERSION_10_4\n---include-macro MAC_OS_X_VERSION_10_5\n---include-macro MAC_OS_X_VERSION_10_6\n---include-macro MAC_OS_X_VERSION_10_7\n---include-macro MAC_OS_X_VERSION_10_8\n---include-macro MAC_OS_X_VERSION_10_9\n---include-macro __DRIVERKIT_19_0\n---include-macro __DRIVERKIT_20_0\n---include-macro __IPHONE_10_0\n---include-macro __IPHONE_10_1\n---include-macro __IPHONE_10_2\n---include-macro __IPHONE_10_3\n---include-macro __IPHONE_11_0\n---include-macro __IPHONE_11_1\n---include-macro __IPHONE_11_2\n---include-macro __IPHONE_11_3\n---include-macro __IPHONE_11_4\n---include-macro __IPHONE_12_0\n---include-macro __IPHONE_12_1\n---include-macro __IPHONE_12_2\n---include-macro __IPHONE_12_3\n---include-macro __IPHONE_12_4\n---include-macro __IPHONE_13_0\n---include-macro __IPHONE_13_1\n---include-macro __IPHONE_13_2\n---include-macro __IPHONE_13_3\n---include-macro __IPHONE_13_4\n---include-macro __IPHONE_13_5\n---include-macro __IPHONE_13_6\n---include-macro __IPHONE_13_7\n---include-macro __IPHONE_14_0\n---include-macro __IPHONE_14_1\n---include-macro __IPHONE_14_2\n---include-macro __IPHONE_14_3\n---include-macro __IPHONE_2_0\n---include-macro __IPHONE_2_1\n---include-macro __IPHONE_2_2\n---include-macro __IPHONE_3_0\n---include-macro __IPHONE_3_1\n---include-macro __IPHONE_3_2\n---include-macro __IPHONE_4_0\n---include-macro __IPHONE_4_1\n---include-macro __IPHONE_4_2\n---include-macro __IPHONE_4_3\n---include-macro __IPHONE_5_0\n---include-macro __IPHONE_5_1\n---include-macro __IPHONE_6_0\n---include-macro __IPHONE_6_1\n---include-macro __IPHONE_7_0\n---include-macro __IPHONE_7_1\n---include-macro __IPHONE_8_0\n---include-macro __IPHONE_8_1\n---include-macro __IPHONE_8_2\n---include-macro __IPHONE_8_3\n---include-macro __IPHONE_8_4\n---include-macro __IPHONE_9_0\n---include-macro __IPHONE_9_1\n---include-macro __IPHONE_9_2\n---include-macro __IPHONE_9_3\n---include-macro __MAC_10_0\n---include-macro __MAC_10_1\n---include-macro __MAC_10_10\n---include-macro __MAC_10_10_2\n---include-macro __MAC_10_10_3\n---include-macro __MAC_10_11\n---include-macro __MAC_10_11_2\n---include-macro __MAC_10_11_3\n---include-macro __MAC_10_11_4\n---include-macro __MAC_10_12\n---include-macro __MAC_10_12_1\n---include-macro __MAC_10_12_2\n---include-macro __MAC_10_12_4\n---include-macro __MAC_10_13\n---include-macro __MAC_10_13_1\n---include-macro __MAC_10_13_2\n---include-macro __MAC_10_13_4\n---include-macro __MAC_10_14\n---include-macro __MAC_10_14_1\n---include-macro __MAC_10_14_4\n---include-macro __MAC_10_14_6\n---include-macro __MAC_10_15\n---include-macro __MAC_10_15_1\n---include-macro __MAC_10_15_4\n---include-macro __MAC_10_16\n---include-macro __MAC_10_2\n---include-macro __MAC_10_3\n---include-macro __MAC_10_4\n---include-macro __MAC_10_5\n---include-macro __MAC_10_6\n---include-macro __MAC_10_7\n---include-macro __MAC_10_8\n---include-macro __MAC_10_9\n---include-macro __MAC_11_0\n---include-macro __MAC_11_1\n---include-macro __TVOS_10_0\n---include-macro __TVOS_10_0_1\n---include-macro __TVOS_10_1\n---include-macro __TVOS_10_2\n---include-macro __TVOS_11_0\n---include-macro __TVOS_11_1\n---include-macro __TVOS_11_2\n---include-macro __TVOS_11_3\n---include-macro __TVOS_11_4\n---include-macro __TVOS_12_0\n---include-macro __TVOS_12_1\n---include-macro __TVOS_12_2\n---include-macro __TVOS_12_3\n---include-macro __TVOS_12_4\n---include-macro __TVOS_13_0\n---include-macro __TVOS_13_2\n---include-macro __TVOS_13_3\n---include-macro __TVOS_13_4\n---include-macro __TVOS_14_0\n---include-macro __TVOS_14_1\n---include-macro __TVOS_14_2\n---include-macro __TVOS_14_3\n---include-macro __TVOS_9_0\n---include-macro __TVOS_9_1\n---include-macro __TVOS_9_2\n---include-macro __WATCHOS_1_0\n---include-macro __WATCHOS_2_0\n---include-macro __WATCHOS_2_1\n---include-macro __WATCHOS_2_2\n---include-macro __WATCHOS_3_0\n---include-macro __WATCHOS_3_1\n---include-macro __WATCHOS_3_1_1\n---include-macro __WATCHOS_3_2\n---include-macro __WATCHOS_4_0\n---include-macro __WATCHOS_4_1\n---include-macro __WATCHOS_4_2\n---include-macro __WATCHOS_4_3\n---include-macro __WATCHOS_5_0\n---include-macro __WATCHOS_5_1\n---include-macro __WATCHOS_5_2\n---include-macro __WATCHOS_5_3\n---include-macro __WATCHOS_6_0\n---include-macro __WATCHOS_6_1\n---include-macro __WATCHOS_6_2\n---include-macro __WATCHOS_7_0\n---include-macro __WATCHOS_7_1\n---include-macro __WATCHOS_7_2\n+--include-constant MAC_OS_VERSION_11_0\n+--include-constant MAC_OS_X_VERSION_10_0\n+--include-constant MAC_OS_X_VERSION_10_1\n+--include-constant MAC_OS_X_VERSION_10_10\n+--include-constant MAC_OS_X_VERSION_10_10_2\n+--include-constant MAC_OS_X_VERSION_10_10_3\n+--include-constant MAC_OS_X_VERSION_10_11\n+--include-constant MAC_OS_X_VERSION_10_11_2\n+--include-constant MAC_OS_X_VERSION_10_11_3\n+--include-constant MAC_OS_X_VERSION_10_11_4\n+--include-constant MAC_OS_X_VERSION_10_12\n+--include-constant MAC_OS_X_VERSION_10_12_1\n+--include-constant MAC_OS_X_VERSION_10_12_2\n+--include-constant MAC_OS_X_VERSION_10_12_4\n+--include-constant MAC_OS_X_VERSION_10_13\n+--include-constant MAC_OS_X_VERSION_10_13_1\n+--include-constant MAC_OS_X_VERSION_10_13_2\n+--include-constant MAC_OS_X_VERSION_10_13_4\n+--include-constant MAC_OS_X_VERSION_10_14\n+--include-constant MAC_OS_X_VERSION_10_14_1\n+--include-constant MAC_OS_X_VERSION_10_14_4\n+--include-constant MAC_OS_X_VERSION_10_14_6\n+--include-constant MAC_OS_X_VERSION_10_15\n+--include-constant MAC_OS_X_VERSION_10_15_1\n+--include-constant MAC_OS_X_VERSION_10_16\n+--include-constant MAC_OS_X_VERSION_10_2\n+--include-constant MAC_OS_X_VERSION_10_3\n+--include-constant MAC_OS_X_VERSION_10_4\n+--include-constant MAC_OS_X_VERSION_10_5\n+--include-constant MAC_OS_X_VERSION_10_6\n+--include-constant MAC_OS_X_VERSION_10_7\n+--include-constant MAC_OS_X_VERSION_10_8\n+--include-constant MAC_OS_X_VERSION_10_9\n+--include-constant __DRIVERKIT_19_0\n+--include-constant __DRIVERKIT_20_0\n+--include-constant __IPHONE_10_0\n+--include-constant __IPHONE_10_1\n+--include-constant __IPHONE_10_2\n+--include-constant __IPHONE_10_3\n+--include-constant __IPHONE_11_0\n+--include-constant __IPHONE_11_1\n+--include-constant __IPHONE_11_2\n+--include-constant __IPHONE_11_3\n+--include-constant __IPHONE_11_4\n+--include-constant __IPHONE_12_0\n+--include-constant __IPHONE_12_1\n+--include-constant __IPHONE_12_2\n+--include-constant __IPHONE_12_3\n+--include-constant __IPHONE_12_4\n+--include-constant __IPHONE_13_0\n+--include-constant __IPHONE_13_1\n+--include-constant __IPHONE_13_2\n+--include-constant __IPHONE_13_3\n+--include-constant __IPHONE_13_4\n+--include-constant __IPHONE_13_5\n+--include-constant __IPHONE_13_6\n+--include-constant __IPHONE_13_7\n+--include-constant __IPHONE_14_0\n+--include-constant __IPHONE_14_1\n+--include-constant __IPHONE_14_2\n+--include-constant __IPHONE_14_3\n+--include-constant __IPHONE_2_0\n+--include-constant __IPHONE_2_1\n+--include-constant __IPHONE_2_2\n+--include-constant __IPHONE_3_0\n+--include-constant __IPHONE_3_1\n+--include-constant __IPHONE_3_2\n+--include-constant __IPHONE_4_0\n+--include-constant __IPHONE_4_1\n+--include-constant __IPHONE_4_2\n+--include-constant __IPHONE_4_3\n+--include-constant __IPHONE_5_0\n+--include-constant __IPHONE_5_1\n+--include-constant __IPHONE_6_0\n+--include-constant __IPHONE_6_1\n+--include-constant __IPHONE_7_0\n+--include-constant __IPHONE_7_1\n+--include-constant __IPHONE_8_0\n+--include-constant __IPHONE_8_1\n+--include-constant __IPHONE_8_2\n+--include-constant __IPHONE_8_3\n+--include-constant __IPHONE_8_4\n+--include-constant __IPHONE_9_0\n+--include-constant __IPHONE_9_1\n+--include-constant __IPHONE_9_2\n+--include-constant __IPHONE_9_3\n+--include-constant __MAC_10_0\n+--include-constant __MAC_10_1\n+--include-constant __MAC_10_10\n+--include-constant __MAC_10_10_2\n+--include-constant __MAC_10_10_3\n+--include-constant __MAC_10_11\n+--include-constant __MAC_10_11_2\n+--include-constant __MAC_10_11_3\n+--include-constant __MAC_10_11_4\n+--include-constant __MAC_10_12\n+--include-constant __MAC_10_12_1\n+--include-constant __MAC_10_12_2\n+--include-constant __MAC_10_12_4\n+--include-constant __MAC_10_13\n+--include-constant __MAC_10_13_1\n+--include-constant __MAC_10_13_2\n+--include-constant __MAC_10_13_4\n+--include-constant __MAC_10_14\n+--include-constant __MAC_10_14_1\n+--include-constant __MAC_10_14_4\n+--include-constant __MAC_10_14_6\n+--include-constant __MAC_10_15\n+--include-constant __MAC_10_15_1\n+--include-constant __MAC_10_15_4\n+--include-constant __MAC_10_16\n+--include-constant __MAC_10_2\n+--include-constant __MAC_10_3\n+--include-constant __MAC_10_4\n+--include-constant __MAC_10_5\n+--include-constant __MAC_10_6\n+--include-constant __MAC_10_7\n+--include-constant __MAC_10_8\n+--include-constant __MAC_10_9\n+--include-constant __MAC_11_0\n+--include-constant __MAC_11_1\n+--include-constant __TVOS_10_0\n+--include-constant __TVOS_10_0_1\n+--include-constant __TVOS_10_1\n+--include-constant __TVOS_10_2\n+--include-constant __TVOS_11_0\n+--include-constant __TVOS_11_1\n+--include-constant __TVOS_11_2\n+--include-constant __TVOS_11_3\n+--include-constant __TVOS_11_4\n+--include-constant __TVOS_12_0\n+--include-constant __TVOS_12_1\n+--include-constant __TVOS_12_2\n+--include-constant __TVOS_12_3\n+--include-constant __TVOS_12_4\n+--include-constant __TVOS_13_0\n+--include-constant __TVOS_13_2\n+--include-constant __TVOS_13_3\n+--include-constant __TVOS_13_4\n+--include-constant __TVOS_14_0\n+--include-constant __TVOS_14_1\n+--include-constant __TVOS_14_2\n+--include-constant __TVOS_14_3\n+--include-constant __TVOS_9_0\n+--include-constant __TVOS_9_1\n+--include-constant __TVOS_9_2\n+--include-constant __WATCHOS_1_0\n+--include-constant __WATCHOS_2_0\n+--include-constant __WATCHOS_2_1\n+--include-constant __WATCHOS_2_2\n+--include-constant __WATCHOS_3_0\n+--include-constant __WATCHOS_3_1\n+--include-constant __WATCHOS_3_1_1\n+--include-constant __WATCHOS_3_2\n+--include-constant __WATCHOS_4_0\n+--include-constant __WATCHOS_4_1\n+--include-constant __WATCHOS_4_2\n+--include-constant __WATCHOS_4_3\n+--include-constant __WATCHOS_5_0\n+--include-constant __WATCHOS_5_1\n+--include-constant __WATCHOS_5_2\n+--include-constant __WATCHOS_5_3\n+--include-constant __WATCHOS_6_0\n+--include-constant __WATCHOS_6_1\n+--include-constant __WATCHOS_6_2\n+--include-constant __WATCHOS_7_0\n+--include-constant __WATCHOS_7_1\n+--include-constant __WATCHOS_7_2\n@@ -187,4 +187,4 @@\n---include-macro _FORTIFY_SOURCE\n---include-macro __DARWIN_WCHAR_MAX\n---include-macro __DARWIN_WCHAR_MIN\n---include-macro __DARWIN_WEOF\n+--include-constant _FORTIFY_SOURCE\n+--include-constant __DARWIN_WCHAR_MAX\n+--include-constant __DARWIN_WCHAR_MIN\n+--include-constant __DARWIN_WEOF\n@@ -229,1 +229,1 @@\n---include-macro USER_ADDR_NULL\n+--include-constant USER_ADDR_NULL\n@@ -243,9 +243,9 @@\n---include-macro __PTHREAD_ATTR_SIZE__\n---include-macro __PTHREAD_CONDATTR_SIZE__\n---include-macro __PTHREAD_COND_SIZE__\n---include-macro __PTHREAD_MUTEXATTR_SIZE__\n---include-macro __PTHREAD_MUTEX_SIZE__\n---include-macro __PTHREAD_ONCE_SIZE__\n---include-macro __PTHREAD_RWLOCKATTR_SIZE__\n---include-macro __PTHREAD_RWLOCK_SIZE__\n---include-macro __PTHREAD_SIZE__\n+--include-constant __PTHREAD_ATTR_SIZE__\n+--include-constant __PTHREAD_CONDATTR_SIZE__\n+--include-constant __PTHREAD_COND_SIZE__\n+--include-constant __PTHREAD_MUTEXATTR_SIZE__\n+--include-constant __PTHREAD_MUTEX_SIZE__\n+--include-constant __PTHREAD_ONCE_SIZE__\n+--include-constant __PTHREAD_RWLOCKATTR_SIZE__\n+--include-constant __PTHREAD_RWLOCK_SIZE__\n+--include-constant __PTHREAD_SIZE__\n@@ -285,1 +285,1 @@\n---include-macro __DARWIN_NULL\n+--include-constant __DARWIN_NULL\n@@ -313,1 +313,1 @@\n---include-macro NULL\n+--include-constant NULL\n@@ -349,18 +349,18 @@\n---include-macro _DARWIN_FEATURE_64_BIT_INODE\n---include-macro _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE\n---include-macro _DARWIN_FEATURE_UNIX_CONFORMANCE\n---include-macro __DARWIN_64_BIT_INO_T\n---include-macro __DARWIN_C_ANSI\n---include-macro __DARWIN_C_FULL\n---include-macro __DARWIN_C_LEVEL\n---include-macro __DARWIN_NON_CANCELABLE\n---include-macro __DARWIN_NO_LONG_LONG\n---include-macro __DARWIN_ONLY_64_BIT_INO_T\n---include-macro __DARWIN_ONLY_UNIX_CONFORMANCE\n---include-macro __DARWIN_ONLY_VERS_1050\n---include-macro __DARWIN_SUF_1050\n---include-macro __DARWIN_SUF_64_BIT_INO_T\n---include-macro __DARWIN_SUF_EXTSN\n---include-macro __DARWIN_UNIX03\n---include-macro __DARWIN_VERS_1050\n---include-macro __STDC_WANT_LIB_EXT1__\n+--include-constant _DARWIN_FEATURE_64_BIT_INODE\n+--include-constant _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE\n+--include-constant _DARWIN_FEATURE_UNIX_CONFORMANCE\n+--include-constant __DARWIN_64_BIT_INO_T\n+--include-constant __DARWIN_C_ANSI\n+--include-constant __DARWIN_C_FULL\n+--include-constant __DARWIN_C_LEVEL\n+--include-constant __DARWIN_NON_CANCELABLE\n+--include-constant __DARWIN_NO_LONG_LONG\n+--include-constant __DARWIN_ONLY_64_BIT_INO_T\n+--include-constant __DARWIN_ONLY_UNIX_CONFORMANCE\n+--include-constant __DARWIN_ONLY_VERS_1050\n+--include-constant __DARWIN_SUF_1050\n+--include-constant __DARWIN_SUF_64_BIT_INO_T\n+--include-constant __DARWIN_SUF_EXTSN\n+--include-constant __DARWIN_UNIX03\n+--include-constant __DARWIN_VERS_1050\n+--include-constant __STDC_WANT_LIB_EXT1__\n@@ -398,18 +398,18 @@\n---include-macro CLOCKS_PER_SEC\n---include-macro CLOCK_MONOTONIC\n---include-macro CLOCK_MONOTONIC_RAW\n---include-macro CLOCK_MONOTONIC_RAW_APPROX\n---include-macro CLOCK_PROCESS_CPUTIME_ID\n---include-macro CLOCK_REALTIME\n---include-macro CLOCK_THREAD_CPUTIME_ID\n---include-macro CLOCK_UPTIME_RAW\n---include-macro CLOCK_UPTIME_RAW_APPROX\n---include-macro TIME_UTC\n---include-macro _CLOCK_MONOTONIC\n---include-macro _CLOCK_MONOTONIC_RAW\n---include-macro _CLOCK_MONOTONIC_RAW_APPROX\n---include-macro _CLOCK_PROCESS_CPUTIME_ID\n---include-macro _CLOCK_REALTIME\n---include-macro _CLOCK_THREAD_CPUTIME_ID\n---include-macro _CLOCK_UPTIME_RAW\n---include-macro _CLOCK_UPTIME_RAW_APPROX\n+--include-constant CLOCKS_PER_SEC\n+--include-constant CLOCK_MONOTONIC\n+--include-constant CLOCK_MONOTONIC_RAW\n+--include-constant CLOCK_MONOTONIC_RAW_APPROX\n+--include-constant CLOCK_PROCESS_CPUTIME_ID\n+--include-constant CLOCK_REALTIME\n+--include-constant CLOCK_THREAD_CPUTIME_ID\n+--include-constant CLOCK_UPTIME_RAW\n+--include-constant CLOCK_UPTIME_RAW_APPROX\n+--include-constant TIME_UTC\n+--include-constant _CLOCK_MONOTONIC\n+--include-constant _CLOCK_MONOTONIC_RAW\n+--include-constant _CLOCK_MONOTONIC_RAW_APPROX\n+--include-constant _CLOCK_PROCESS_CPUTIME_ID\n+--include-constant _CLOCK_REALTIME\n+--include-constant _CLOCK_THREAD_CPUTIME_ID\n+--include-constant _CLOCK_UPTIME_RAW\n+--include-constant _CLOCK_UPTIME_RAW_APPROX\n@@ -441,5 +441,5 @@\n---include-macro CXError_ASTReadError\n---include-macro CXError_Crashed\n---include-macro CXError_Failure\n---include-macro CXError_InvalidArguments\n---include-macro CXError_Success\n+--include-constant CXError_ASTReadError\n+--include-constant CXError_Crashed\n+--include-constant CXError_Failure\n+--include-constant CXError_InvalidArguments\n+--include-constant CXError_Success\n@@ -840,711 +840,711 @@\n---include-macro CINDEX_VERSION\n---include-macro CINDEX_VERSION_MAJOR\n---include-macro CINDEX_VERSION_MINOR\n---include-macro CINDEX_VERSION_STRING\n---include-macro CXAvailability_Available\n---include-macro CXAvailability_Deprecated\n---include-macro CXAvailability_NotAccessible\n---include-macro CXAvailability_NotAvailable\n---include-macro CXCallingConv_AAPCS\n---include-macro CXCallingConv_AAPCS_VFP\n---include-macro CXCallingConv_AArch64VectorCall\n---include-macro CXCallingConv_C\n---include-macro CXCallingConv_Default\n---include-macro CXCallingConv_IntelOclBicc\n---include-macro CXCallingConv_Invalid\n---include-macro CXCallingConv_PreserveAll\n---include-macro CXCallingConv_PreserveMost\n---include-macro CXCallingConv_Swift\n---include-macro CXCallingConv_Unexposed\n---include-macro CXCallingConv_Win64\n---include-macro CXCallingConv_X86FastCall\n---include-macro CXCallingConv_X86Pascal\n---include-macro CXCallingConv_X86RegCall\n---include-macro CXCallingConv_X86StdCall\n---include-macro CXCallingConv_X86ThisCall\n---include-macro CXCallingConv_X86VectorCall\n---include-macro CXCallingConv_X86_64SysV\n---include-macro CXCallingConv_X86_64Win64\n---include-macro CXChildVisit_Break\n---include-macro CXChildVisit_Continue\n---include-macro CXChildVisit_Recurse\n---include-macro CXCodeComplete_IncludeBriefComments\n---include-macro CXCodeComplete_IncludeCodePatterns\n---include-macro CXCodeComplete_IncludeCompletionsWithFixIts\n---include-macro CXCodeComplete_IncludeMacros\n---include-macro CXCodeComplete_SkipPreamble\n---include-macro CXCompletionChunk_Colon\n---include-macro CXCompletionChunk_Comma\n---include-macro CXCompletionChunk_CurrentParameter\n---include-macro CXCompletionChunk_Equal\n---include-macro CXCompletionChunk_HorizontalSpace\n---include-macro CXCompletionChunk_Informative\n---include-macro CXCompletionChunk_LeftAngle\n---include-macro CXCompletionChunk_LeftBrace\n---include-macro CXCompletionChunk_LeftBracket\n---include-macro CXCompletionChunk_LeftParen\n---include-macro CXCompletionChunk_Optional\n---include-macro CXCompletionChunk_Placeholder\n---include-macro CXCompletionChunk_ResultType\n---include-macro CXCompletionChunk_RightAngle\n---include-macro CXCompletionChunk_RightBrace\n---include-macro CXCompletionChunk_RightBracket\n---include-macro CXCompletionChunk_RightParen\n---include-macro CXCompletionChunk_SemiColon\n---include-macro CXCompletionChunk_Text\n---include-macro CXCompletionChunk_TypedText\n---include-macro CXCompletionChunk_VerticalSpace\n---include-macro CXCompletionContext_AnyType\n---include-macro CXCompletionContext_AnyValue\n---include-macro CXCompletionContext_ArrowMemberAccess\n---include-macro CXCompletionContext_CXXClassTypeValue\n---include-macro CXCompletionContext_ClassTag\n---include-macro CXCompletionContext_DotMemberAccess\n---include-macro CXCompletionContext_EnumTag\n---include-macro CXCompletionContext_IncludedFile\n---include-macro CXCompletionContext_MacroName\n---include-macro CXCompletionContext_Namespace\n---include-macro CXCompletionContext_NaturalLanguage\n---include-macro CXCompletionContext_NestedNameSpecifier\n---include-macro CXCompletionContext_ObjCCategory\n---include-macro CXCompletionContext_ObjCClassMessage\n---include-macro CXCompletionContext_ObjCInstanceMessage\n---include-macro CXCompletionContext_ObjCInterface\n---include-macro CXCompletionContext_ObjCObjectValue\n---include-macro CXCompletionContext_ObjCPropertyAccess\n---include-macro CXCompletionContext_ObjCProtocol\n---include-macro CXCompletionContext_ObjCSelectorName\n---include-macro CXCompletionContext_ObjCSelectorValue\n---include-macro CXCompletionContext_StructTag\n---include-macro CXCompletionContext_Unexposed\n---include-macro CXCompletionContext_UnionTag\n---include-macro CXCompletionContext_Unknown\n---include-macro CXCursor_AddrLabelExpr\n---include-macro CXCursor_AlignedAttr\n---include-macro CXCursor_AnnotateAttr\n---include-macro CXCursor_ArraySubscriptExpr\n---include-macro CXCursor_AsmLabelAttr\n---include-macro CXCursor_AsmStmt\n---include-macro CXCursor_BinaryOperator\n---include-macro CXCursor_BlockExpr\n---include-macro CXCursor_BreakStmt\n---include-macro CXCursor_BuiltinBitCastExpr\n---include-macro CXCursor_CStyleCastExpr\n---include-macro CXCursor_CUDAConstantAttr\n---include-macro CXCursor_CUDADeviceAttr\n---include-macro CXCursor_CUDAGlobalAttr\n---include-macro CXCursor_CUDAHostAttr\n---include-macro CXCursor_CUDASharedAttr\n---include-macro CXCursor_CXXAccessSpecifier\n---include-macro CXCursor_CXXBaseSpecifier\n---include-macro CXCursor_CXXBoolLiteralExpr\n---include-macro CXCursor_CXXCatchStmt\n---include-macro CXCursor_CXXConstCastExpr\n---include-macro CXCursor_CXXDeleteExpr\n---include-macro CXCursor_CXXDynamicCastExpr\n---include-macro CXCursor_CXXFinalAttr\n---include-macro CXCursor_CXXForRangeStmt\n---include-macro CXCursor_CXXFunctionalCastExpr\n---include-macro CXCursor_CXXMethod\n---include-macro CXCursor_CXXNewExpr\n---include-macro CXCursor_CXXNullPtrLiteralExpr\n---include-macro CXCursor_CXXOverrideAttr\n---include-macro CXCursor_CXXReinterpretCastExpr\n---include-macro CXCursor_CXXStaticCastExpr\n---include-macro CXCursor_CXXThisExpr\n---include-macro CXCursor_CXXThrowExpr\n---include-macro CXCursor_CXXTryStmt\n---include-macro CXCursor_CXXTypeidExpr\n---include-macro CXCursor_CallExpr\n---include-macro CXCursor_CaseStmt\n---include-macro CXCursor_CharacterLiteral\n---include-macro CXCursor_ClassDecl\n---include-macro CXCursor_ClassTemplate\n---include-macro CXCursor_ClassTemplatePartialSpecialization\n---include-macro CXCursor_CompoundAssignOperator\n---include-macro CXCursor_CompoundLiteralExpr\n---include-macro CXCursor_CompoundStmt\n---include-macro CXCursor_ConditionalOperator\n---include-macro CXCursor_ConstAttr\n---include-macro CXCursor_Constructor\n---include-macro CXCursor_ContinueStmt\n---include-macro CXCursor_ConvergentAttr\n---include-macro CXCursor_ConversionFunction\n---include-macro CXCursor_DLLExport\n---include-macro CXCursor_DLLImport\n---include-macro CXCursor_DeclRefExpr\n---include-macro CXCursor_DeclStmt\n---include-macro CXCursor_DefaultStmt\n---include-macro CXCursor_Destructor\n---include-macro CXCursor_DoStmt\n---include-macro CXCursor_EnumConstantDecl\n---include-macro CXCursor_EnumDecl\n---include-macro CXCursor_ExceptionSpecificationKind_BasicNoexcept\n---include-macro CXCursor_ExceptionSpecificationKind_ComputedNoexcept\n---include-macro CXCursor_ExceptionSpecificationKind_Dynamic\n---include-macro CXCursor_ExceptionSpecificationKind_DynamicNone\n---include-macro CXCursor_ExceptionSpecificationKind_MSAny\n---include-macro CXCursor_ExceptionSpecificationKind_NoThrow\n---include-macro CXCursor_ExceptionSpecificationKind_None\n---include-macro CXCursor_ExceptionSpecificationKind_Unevaluated\n---include-macro CXCursor_ExceptionSpecificationKind_Uninstantiated\n---include-macro CXCursor_ExceptionSpecificationKind_Unparsed\n---include-macro CXCursor_FieldDecl\n---include-macro CXCursor_FirstAttr\n---include-macro CXCursor_FirstDecl\n---include-macro CXCursor_FirstExpr\n---include-macro CXCursor_FirstExtraDecl\n---include-macro CXCursor_FirstInvalid\n---include-macro CXCursor_FirstPreprocessing\n---include-macro CXCursor_FirstRef\n---include-macro CXCursor_FirstStmt\n---include-macro CXCursor_FixedPointLiteral\n---include-macro CXCursor_FlagEnum\n---include-macro CXCursor_FloatingLiteral\n---include-macro CXCursor_ForStmt\n---include-macro CXCursor_FriendDecl\n---include-macro CXCursor_FunctionDecl\n---include-macro CXCursor_FunctionTemplate\n---include-macro CXCursor_GCCAsmStmt\n---include-macro CXCursor_GNUNullExpr\n---include-macro CXCursor_GenericSelectionExpr\n---include-macro CXCursor_GotoStmt\n---include-macro CXCursor_IBActionAttr\n---include-macro CXCursor_IBOutletAttr\n---include-macro CXCursor_IBOutletCollectionAttr\n---include-macro CXCursor_IfStmt\n---include-macro CXCursor_ImaginaryLiteral\n---include-macro CXCursor_InclusionDirective\n---include-macro CXCursor_IndirectGotoStmt\n---include-macro CXCursor_InitListExpr\n---include-macro CXCursor_IntegerLiteral\n---include-macro CXCursor_InvalidCode\n---include-macro CXCursor_InvalidFile\n---include-macro CXCursor_LabelRef\n---include-macro CXCursor_LabelStmt\n---include-macro CXCursor_LambdaExpr\n---include-macro CXCursor_LastAttr\n---include-macro CXCursor_LastDecl\n---include-macro CXCursor_LastExpr\n---include-macro CXCursor_LastExtraDecl\n---include-macro CXCursor_LastInvalid\n---include-macro CXCursor_LastPreprocessing\n---include-macro CXCursor_LastRef\n---include-macro CXCursor_LastStmt\n---include-macro CXCursor_LinkageSpec\n---include-macro CXCursor_MSAsmStmt\n---include-macro CXCursor_MacroDefinition\n---include-macro CXCursor_MacroExpansion\n---include-macro CXCursor_MacroInstantiation\n---include-macro CXCursor_MemberRef\n---include-macro CXCursor_MemberRefExpr\n---include-macro CXCursor_ModuleImportDecl\n---include-macro CXCursor_NSConsumed\n---include-macro CXCursor_NSConsumesSelf\n---include-macro CXCursor_NSReturnsAutoreleased\n---include-macro CXCursor_NSReturnsNotRetained\n---include-macro CXCursor_NSReturnsRetained\n---include-macro CXCursor_Namespace\n---include-macro CXCursor_NamespaceAlias\n---include-macro CXCursor_NamespaceRef\n---include-macro CXCursor_NoDeclFound\n---include-macro CXCursor_NoDuplicateAttr\n---include-macro CXCursor_NonTypeTemplateParameter\n---include-macro CXCursor_NotImplemented\n---include-macro CXCursor_NullStmt\n---include-macro CXCursor_OMPArraySectionExpr\n---include-macro CXCursor_OMPAtomicDirective\n---include-macro CXCursor_OMPBarrierDirective\n---include-macro CXCursor_OMPCancelDirective\n---include-macro CXCursor_OMPCancellationPointDirective\n---include-macro CXCursor_OMPCriticalDirective\n---include-macro CXCursor_OMPDistributeDirective\n---include-macro CXCursor_OMPDistributeParallelForDirective\n---include-macro CXCursor_OMPDistributeParallelForSimdDirective\n---include-macro CXCursor_OMPDistributeSimdDirective\n---include-macro CXCursor_OMPFlushDirective\n---include-macro CXCursor_OMPForDirective\n---include-macro CXCursor_OMPForSimdDirective\n---include-macro CXCursor_OMPMasterDirective\n---include-macro CXCursor_OMPMasterTaskLoopDirective\n---include-macro CXCursor_OMPMasterTaskLoopSimdDirective\n---include-macro CXCursor_OMPOrderedDirective\n---include-macro CXCursor_OMPParallelDirective\n---include-macro CXCursor_OMPParallelForDirective\n---include-macro CXCursor_OMPParallelForSimdDirective\n---include-macro CXCursor_OMPParallelMasterDirective\n---include-macro CXCursor_OMPParallelMasterTaskLoopDirective\n---include-macro CXCursor_OMPParallelMasterTaskLoopSimdDirective\n---include-macro CXCursor_OMPParallelSectionsDirective\n---include-macro CXCursor_OMPSectionDirective\n---include-macro CXCursor_OMPSectionsDirective\n---include-macro CXCursor_OMPSimdDirective\n---include-macro CXCursor_OMPSingleDirective\n---include-macro CXCursor_OMPTargetDataDirective\n---include-macro CXCursor_OMPTargetDirective\n---include-macro CXCursor_OMPTargetEnterDataDirective\n---include-macro CXCursor_OMPTargetExitDataDirective\n---include-macro CXCursor_OMPTargetParallelDirective\n---include-macro CXCursor_OMPTargetParallelForDirective\n---include-macro CXCursor_OMPTargetParallelForSimdDirective\n---include-macro CXCursor_OMPTargetSimdDirective\n---include-macro CXCursor_OMPTargetTeamsDirective\n---include-macro CXCursor_OMPTargetTeamsDistributeDirective\n---include-macro CXCursor_OMPTargetTeamsDistributeParallelForDirective\n---include-macro CXCursor_OMPTargetTeamsDistributeParallelForSimdDirective\n---include-macro CXCursor_OMPTargetTeamsDistributeSimdDirective\n---include-macro CXCursor_OMPTargetUpdateDirective\n---include-macro CXCursor_OMPTaskDirective\n---include-macro CXCursor_OMPTaskLoopDirective\n---include-macro CXCursor_OMPTaskLoopSimdDirective\n---include-macro CXCursor_OMPTaskgroupDirective\n---include-macro CXCursor_OMPTaskwaitDirective\n---include-macro CXCursor_OMPTaskyieldDirective\n---include-macro CXCursor_OMPTeamsDirective\n---include-macro CXCursor_OMPTeamsDistributeDirective\n---include-macro CXCursor_OMPTeamsDistributeParallelForDirective\n---include-macro CXCursor_OMPTeamsDistributeParallelForSimdDirective\n---include-macro CXCursor_OMPTeamsDistributeSimdDirective\n---include-macro CXCursor_ObjCAtCatchStmt\n---include-macro CXCursor_ObjCAtFinallyStmt\n---include-macro CXCursor_ObjCAtSynchronizedStmt\n---include-macro CXCursor_ObjCAtThrowStmt\n---include-macro CXCursor_ObjCAtTryStmt\n---include-macro CXCursor_ObjCAutoreleasePoolStmt\n---include-macro CXCursor_ObjCAvailabilityCheckExpr\n---include-macro CXCursor_ObjCBoolLiteralExpr\n---include-macro CXCursor_ObjCBoxable\n---include-macro CXCursor_ObjCBridgedCastExpr\n---include-macro CXCursor_ObjCCategoryDecl\n---include-macro CXCursor_ObjCCategoryImplDecl\n---include-macro CXCursor_ObjCClassMethodDecl\n---include-macro CXCursor_ObjCClassRef\n---include-macro CXCursor_ObjCDesignatedInitializer\n---include-macro CXCursor_ObjCDynamicDecl\n---include-macro CXCursor_ObjCEncodeExpr\n---include-macro CXCursor_ObjCException\n---include-macro CXCursor_ObjCExplicitProtocolImpl\n---include-macro CXCursor_ObjCForCollectionStmt\n---include-macro CXCursor_ObjCImplementationDecl\n---include-macro CXCursor_ObjCIndependentClass\n---include-macro CXCursor_ObjCInstanceMethodDecl\n---include-macro CXCursor_ObjCInterfaceDecl\n---include-macro CXCursor_ObjCIvarDecl\n---include-macro CXCursor_ObjCMessageExpr\n---include-macro CXCursor_ObjCNSObject\n---include-macro CXCursor_ObjCPreciseLifetime\n---include-macro CXCursor_ObjCPropertyDecl\n---include-macro CXCursor_ObjCProtocolDecl\n---include-macro CXCursor_ObjCProtocolExpr\n---include-macro CXCursor_ObjCProtocolRef\n---include-macro CXCursor_ObjCRequiresSuper\n---include-macro CXCursor_ObjCReturnsInnerPointer\n---include-macro CXCursor_ObjCRootClass\n---include-macro CXCursor_ObjCRuntimeVisible\n---include-macro CXCursor_ObjCSelectorExpr\n---include-macro CXCursor_ObjCSelfExpr\n---include-macro CXCursor_ObjCStringLiteral\n---include-macro CXCursor_ObjCSubclassingRestricted\n---include-macro CXCursor_ObjCSuperClassRef\n---include-macro CXCursor_ObjCSynthesizeDecl\n---include-macro CXCursor_OverloadCandidate\n---include-macro CXCursor_OverloadedDeclRef\n---include-macro CXCursor_PackExpansionExpr\n---include-macro CXCursor_PackedAttr\n---include-macro CXCursor_ParenExpr\n---include-macro CXCursor_ParmDecl\n---include-macro CXCursor_PreprocessingDirective\n---include-macro CXCursor_PureAttr\n---include-macro CXCursor_ReturnStmt\n---include-macro CXCursor_SEHExceptStmt\n---include-macro CXCursor_SEHFinallyStmt\n---include-macro CXCursor_SEHLeaveStmt\n---include-macro CXCursor_SEHTryStmt\n---include-macro CXCursor_SizeOfPackExpr\n---include-macro CXCursor_StaticAssert\n---include-macro CXCursor_StmtExpr\n---include-macro CXCursor_StringLiteral\n---include-macro CXCursor_StructDecl\n---include-macro CXCursor_SwitchStmt\n---include-macro CXCursor_TemplateRef\n---include-macro CXCursor_TemplateTemplateParameter\n---include-macro CXCursor_TemplateTypeParameter\n---include-macro CXCursor_TranslationUnit\n---include-macro CXCursor_TypeAliasDecl\n---include-macro CXCursor_TypeAliasTemplateDecl\n---include-macro CXCursor_TypeRef\n---include-macro CXCursor_TypedefDecl\n---include-macro CXCursor_UnaryExpr\n---include-macro CXCursor_UnaryOperator\n---include-macro CXCursor_UnexposedAttr\n---include-macro CXCursor_UnexposedDecl\n---include-macro CXCursor_UnexposedExpr\n---include-macro CXCursor_UnexposedStmt\n---include-macro CXCursor_UnionDecl\n---include-macro CXCursor_UsingDeclaration\n---include-macro CXCursor_UsingDirective\n---include-macro CXCursor_VarDecl\n---include-macro CXCursor_VariableRef\n---include-macro CXCursor_VisibilityAttr\n---include-macro CXCursor_WarnUnusedAttr\n---include-macro CXCursor_WarnUnusedResultAttr\n---include-macro CXCursor_WhileStmt\n---include-macro CXDiagnostic_DisplayCategoryId\n---include-macro CXDiagnostic_DisplayCategoryName\n---include-macro CXDiagnostic_DisplayColumn\n---include-macro CXDiagnostic_DisplayOption\n---include-macro CXDiagnostic_DisplaySourceLocation\n---include-macro CXDiagnostic_DisplaySourceRanges\n---include-macro CXDiagnostic_Error\n---include-macro CXDiagnostic_Fatal\n---include-macro CXDiagnostic_Ignored\n---include-macro CXDiagnostic_Note\n---include-macro CXDiagnostic_Warning\n---include-macro CXEval_CFStr\n---include-macro CXEval_Float\n---include-macro CXEval_Int\n---include-macro CXEval_ObjCStrLiteral\n---include-macro CXEval_Other\n---include-macro CXEval_StrLiteral\n---include-macro CXEval_UnExposed\n---include-macro CXGlobalOpt_None\n---include-macro CXGlobalOpt_ThreadBackgroundPriorityForAll\n---include-macro CXGlobalOpt_ThreadBackgroundPriorityForEditing\n---include-macro CXGlobalOpt_ThreadBackgroundPriorityForIndexing\n---include-macro CXIdxAttr_IBAction\n---include-macro CXIdxAttr_IBOutlet\n---include-macro CXIdxAttr_IBOutletCollection\n---include-macro CXIdxAttr_Unexposed\n---include-macro CXIdxDeclFlag_Skipped\n---include-macro CXIdxEntityLang_C\n---include-macro CXIdxEntityLang_CXX\n---include-macro CXIdxEntityLang_None\n---include-macro CXIdxEntityLang_ObjC\n---include-macro CXIdxEntityLang_Swift\n---include-macro CXIdxEntityRef_Direct\n---include-macro CXIdxEntityRef_Implicit\n---include-macro CXIdxEntity_CXXClass\n---include-macro CXIdxEntity_CXXConstructor\n---include-macro CXIdxEntity_CXXConversionFunction\n---include-macro CXIdxEntity_CXXDestructor\n---include-macro CXIdxEntity_CXXInstanceMethod\n---include-macro CXIdxEntity_CXXInterface\n---include-macro CXIdxEntity_CXXNamespace\n---include-macro CXIdxEntity_CXXNamespaceAlias\n---include-macro CXIdxEntity_CXXStaticMethod\n---include-macro CXIdxEntity_CXXStaticVariable\n---include-macro CXIdxEntity_CXXTypeAlias\n---include-macro CXIdxEntity_Enum\n---include-macro CXIdxEntity_EnumConstant\n---include-macro CXIdxEntity_Field\n---include-macro CXIdxEntity_Function\n---include-macro CXIdxEntity_NonTemplate\n---include-macro CXIdxEntity_ObjCCategory\n---include-macro CXIdxEntity_ObjCClass\n---include-macro CXIdxEntity_ObjCClassMethod\n---include-macro CXIdxEntity_ObjCInstanceMethod\n---include-macro CXIdxEntity_ObjCIvar\n---include-macro CXIdxEntity_ObjCProperty\n---include-macro CXIdxEntity_ObjCProtocol\n---include-macro CXIdxEntity_Struct\n---include-macro CXIdxEntity_Template\n---include-macro CXIdxEntity_TemplatePartialSpecialization\n---include-macro CXIdxEntity_TemplateSpecialization\n---include-macro CXIdxEntity_Typedef\n---include-macro CXIdxEntity_Unexposed\n---include-macro CXIdxEntity_Union\n---include-macro CXIdxEntity_Variable\n---include-macro CXIdxObjCContainer_ForwardRef\n---include-macro CXIdxObjCContainer_Implementation\n---include-macro CXIdxObjCContainer_Interface\n---include-macro CXIndexOpt_IndexFunctionLocalSymbols\n---include-macro CXIndexOpt_IndexImplicitTemplateInstantiations\n---include-macro CXIndexOpt_None\n---include-macro CXIndexOpt_SkipParsedBodiesInSession\n---include-macro CXIndexOpt_SuppressRedundantRefs\n---include-macro CXIndexOpt_SuppressWarnings\n---include-macro CXLanguage_C\n---include-macro CXLanguage_CPlusPlus\n---include-macro CXLanguage_Invalid\n---include-macro CXLanguage_ObjC\n---include-macro CXLinkage_External\n---include-macro CXLinkage_Internal\n---include-macro CXLinkage_Invalid\n---include-macro CXLinkage_NoLinkage\n---include-macro CXLinkage_UniqueExternal\n---include-macro CXLoadDiag_CannotLoad\n---include-macro CXLoadDiag_InvalidFile\n---include-macro CXLoadDiag_None\n---include-macro CXLoadDiag_Unknown\n---include-macro CXNameRange_WantQualifier\n---include-macro CXNameRange_WantSinglePiece\n---include-macro CXNameRange_WantTemplateArgs\n---include-macro CXObjCDeclQualifier_Bycopy\n---include-macro CXObjCDeclQualifier_Byref\n---include-macro CXObjCDeclQualifier_In\n---include-macro CXObjCDeclQualifier_Inout\n---include-macro CXObjCDeclQualifier_None\n---include-macro CXObjCDeclQualifier_Oneway\n---include-macro CXObjCDeclQualifier_Out\n---include-macro CXObjCPropertyAttr_assign\n---include-macro CXObjCPropertyAttr_atomic\n---include-macro CXObjCPropertyAttr_class\n---include-macro CXObjCPropertyAttr_copy\n---include-macro CXObjCPropertyAttr_getter\n---include-macro CXObjCPropertyAttr_noattr\n---include-macro CXObjCPropertyAttr_nonatomic\n---include-macro CXObjCPropertyAttr_readonly\n---include-macro CXObjCPropertyAttr_readwrite\n---include-macro CXObjCPropertyAttr_retain\n---include-macro CXObjCPropertyAttr_setter\n---include-macro CXObjCPropertyAttr_strong\n---include-macro CXObjCPropertyAttr_unsafe_unretained\n---include-macro CXObjCPropertyAttr_weak\n---include-macro CXPrintingPolicy_Alignof\n---include-macro CXPrintingPolicy_AnonymousTagLocations\n---include-macro CXPrintingPolicy_Bool\n---include-macro CXPrintingPolicy_ConstantArraySizeAsWritten\n---include-macro CXPrintingPolicy_ConstantsAsWritten\n---include-macro CXPrintingPolicy_FullyQualifiedName\n---include-macro CXPrintingPolicy_Half\n---include-macro CXPrintingPolicy_IncludeNewlines\n---include-macro CXPrintingPolicy_IncludeTagDefinition\n---include-macro CXPrintingPolicy_Indentation\n---include-macro CXPrintingPolicy_LastProperty\n---include-macro CXPrintingPolicy_MSVCFormatting\n---include-macro CXPrintingPolicy_MSWChar\n---include-macro CXPrintingPolicy_PolishForDeclaration\n---include-macro CXPrintingPolicy_Restrict\n---include-macro CXPrintingPolicy_SuppressImplicitBase\n---include-macro CXPrintingPolicy_SuppressInitializers\n---include-macro CXPrintingPolicy_SuppressLifetimeQualifiers\n---include-macro CXPrintingPolicy_SuppressScope\n---include-macro CXPrintingPolicy_SuppressSpecifiers\n---include-macro CXPrintingPolicy_SuppressStrongLifetime\n---include-macro CXPrintingPolicy_SuppressTagKeyword\n---include-macro CXPrintingPolicy_SuppressTemplateArgsInCXXConstructors\n---include-macro CXPrintingPolicy_SuppressUnwrittenScope\n---include-macro CXPrintingPolicy_TerseOutput\n---include-macro CXPrintingPolicy_UnderscoreAlignof\n---include-macro CXPrintingPolicy_UseVoidForZeroParams\n---include-macro CXRefQualifier_LValue\n---include-macro CXRefQualifier_None\n---include-macro CXRefQualifier_RValue\n---include-macro CXReparse_None\n---include-macro CXResult_Invalid\n---include-macro CXResult_Success\n---include-macro CXResult_VisitBreak\n---include-macro CXSaveError_InvalidTU\n---include-macro CXSaveError_None\n---include-macro CXSaveError_TranslationErrors\n---include-macro CXSaveError_Unknown\n---include-macro CXSaveTranslationUnit_None\n---include-macro CXSymbolRole_AddressOf\n---include-macro CXSymbolRole_Call\n---include-macro CXSymbolRole_Declaration\n---include-macro CXSymbolRole_Definition\n---include-macro CXSymbolRole_Dynamic\n---include-macro CXSymbolRole_Implicit\n---include-macro CXSymbolRole_None\n---include-macro CXSymbolRole_Read\n---include-macro CXSymbolRole_Reference\n---include-macro CXSymbolRole_Write\n---include-macro CXTLS_Dynamic\n---include-macro CXTLS_None\n---include-macro CXTLS_Static\n---include-macro CXTUResourceUsage_AST\n---include-macro CXTUResourceUsage_AST_SideTables\n---include-macro CXTUResourceUsage_ExternalASTSource_Membuffer_MMap\n---include-macro CXTUResourceUsage_ExternalASTSource_Membuffer_Malloc\n---include-macro CXTUResourceUsage_First\n---include-macro CXTUResourceUsage_GlobalCompletionResults\n---include-macro CXTUResourceUsage_Identifiers\n---include-macro CXTUResourceUsage_Last\n---include-macro CXTUResourceUsage_MEMORY_IN_BYTES_BEGIN\n---include-macro CXTUResourceUsage_MEMORY_IN_BYTES_END\n---include-macro CXTUResourceUsage_PreprocessingRecord\n---include-macro CXTUResourceUsage_Preprocessor\n---include-macro CXTUResourceUsage_Preprocessor_HeaderSearch\n---include-macro CXTUResourceUsage_Selectors\n---include-macro CXTUResourceUsage_SourceManagerContentCache\n---include-macro CXTUResourceUsage_SourceManager_DataStructures\n---include-macro CXTUResourceUsage_SourceManager_Membuffer_MMap\n---include-macro CXTUResourceUsage_SourceManager_Membuffer_Malloc\n---include-macro CXTemplateArgumentKind_Declaration\n---include-macro CXTemplateArgumentKind_Expression\n---include-macro CXTemplateArgumentKind_Integral\n---include-macro CXTemplateArgumentKind_Invalid\n---include-macro CXTemplateArgumentKind_Null\n---include-macro CXTemplateArgumentKind_NullPtr\n---include-macro CXTemplateArgumentKind_Pack\n---include-macro CXTemplateArgumentKind_Template\n---include-macro CXTemplateArgumentKind_TemplateExpansion\n---include-macro CXTemplateArgumentKind_Type\n---include-macro CXToken_Comment\n---include-macro CXToken_Identifier\n---include-macro CXToken_Keyword\n---include-macro CXToken_Literal\n---include-macro CXToken_Punctuation\n---include-macro CXTranslationUnit_CXXChainedPCH\n---include-macro CXTranslationUnit_CacheCompletionResults\n---include-macro CXTranslationUnit_CreatePreambleOnFirstParse\n---include-macro CXTranslationUnit_DetailedPreprocessingRecord\n---include-macro CXTranslationUnit_ForSerialization\n---include-macro CXTranslationUnit_IgnoreNonErrorsFromIncludedFiles\n---include-macro CXTranslationUnit_IncludeAttributedTypes\n---include-macro CXTranslationUnit_IncludeBriefCommentsInCodeCompletion\n---include-macro CXTranslationUnit_Incomplete\n---include-macro CXTranslationUnit_KeepGoing\n---include-macro CXTranslationUnit_LimitSkipFunctionBodiesToPreamble\n---include-macro CXTranslationUnit_None\n---include-macro CXTranslationUnit_PrecompiledPreamble\n---include-macro CXTranslationUnit_RetainExcludedConditionalBlocks\n---include-macro CXTranslationUnit_SingleFileParse\n---include-macro CXTranslationUnit_SkipFunctionBodies\n---include-macro CXTranslationUnit_VisitImplicitAttributes\n---include-macro CXTypeLayoutError_Dependent\n---include-macro CXTypeLayoutError_Incomplete\n---include-macro CXTypeLayoutError_Invalid\n---include-macro CXTypeLayoutError_InvalidFieldName\n---include-macro CXTypeLayoutError_NotConstantSize\n---include-macro CXTypeLayoutError_Undeduced\n---include-macro CXTypeNullability_Invalid\n---include-macro CXTypeNullability_NonNull\n---include-macro CXTypeNullability_Nullable\n---include-macro CXTypeNullability_Unspecified\n---include-macro CXType_Accum\n---include-macro CXType_Attributed\n---include-macro CXType_Auto\n---include-macro CXType_BlockPointer\n---include-macro CXType_Bool\n---include-macro CXType_Char16\n---include-macro CXType_Char32\n---include-macro CXType_Char_S\n---include-macro CXType_Char_U\n---include-macro CXType_Complex\n---include-macro CXType_ConstantArray\n---include-macro CXType_Dependent\n---include-macro CXType_DependentSizedArray\n---include-macro CXType_Double\n---include-macro CXType_Elaborated\n---include-macro CXType_Enum\n---include-macro CXType_ExtVector\n---include-macro CXType_FirstBuiltin\n---include-macro CXType_Float\n---include-macro CXType_Float128\n---include-macro CXType_Float16\n---include-macro CXType_FunctionNoProto\n---include-macro CXType_FunctionProto\n---include-macro CXType_Half\n---include-macro CXType_IncompleteArray\n---include-macro CXType_Int\n---include-macro CXType_Int128\n---include-macro CXType_Invalid\n---include-macro CXType_LValueReference\n---include-macro CXType_LastBuiltin\n---include-macro CXType_Long\n---include-macro CXType_LongAccum\n---include-macro CXType_LongDouble\n---include-macro CXType_LongLong\n---include-macro CXType_MemberPointer\n---include-macro CXType_NullPtr\n---include-macro CXType_OCLEvent\n---include-macro CXType_OCLImage1dArrayRO\n---include-macro CXType_OCLImage1dArrayRW\n---include-macro CXType_OCLImage1dArrayWO\n---include-macro CXType_OCLImage1dBufferRO\n---include-macro CXType_OCLImage1dBufferRW\n---include-macro CXType_OCLImage1dBufferWO\n---include-macro CXType_OCLImage1dRO\n---include-macro CXType_OCLImage1dRW\n---include-macro CXType_OCLImage1dWO\n---include-macro CXType_OCLImage2dArrayDepthRO\n---include-macro CXType_OCLImage2dArrayDepthRW\n---include-macro CXType_OCLImage2dArrayDepthWO\n---include-macro CXType_OCLImage2dArrayMSAADepthRO\n---include-macro CXType_OCLImage2dArrayMSAADepthRW\n---include-macro CXType_OCLImage2dArrayMSAADepthWO\n---include-macro CXType_OCLImage2dArrayMSAARO\n---include-macro CXType_OCLImage2dArrayMSAARW\n---include-macro CXType_OCLImage2dArrayMSAAWO\n---include-macro CXType_OCLImage2dArrayRO\n---include-macro CXType_OCLImage2dArrayRW\n---include-macro CXType_OCLImage2dArrayWO\n---include-macro CXType_OCLImage2dDepthRO\n---include-macro CXType_OCLImage2dDepthRW\n---include-macro CXType_OCLImage2dDepthWO\n---include-macro CXType_OCLImage2dMSAADepthRO\n---include-macro CXType_OCLImage2dMSAADepthRW\n---include-macro CXType_OCLImage2dMSAADepthWO\n---include-macro CXType_OCLImage2dMSAARO\n---include-macro CXType_OCLImage2dMSAARW\n---include-macro CXType_OCLImage2dMSAAWO\n---include-macro CXType_OCLImage2dRO\n---include-macro CXType_OCLImage2dRW\n---include-macro CXType_OCLImage2dWO\n---include-macro CXType_OCLImage3dRO\n---include-macro CXType_OCLImage3dRW\n---include-macro CXType_OCLImage3dWO\n---include-macro CXType_OCLIntelSubgroupAVCImeDualRefStreamin\n---include-macro CXType_OCLIntelSubgroupAVCImePayload\n---include-macro CXType_OCLIntelSubgroupAVCImeResult\n---include-macro CXType_OCLIntelSubgroupAVCImeResultDualRefStreamout\n---include-macro CXType_OCLIntelSubgroupAVCImeResultSingleRefStreamout\n---include-macro CXType_OCLIntelSubgroupAVCImeSingleRefStreamin\n---include-macro CXType_OCLIntelSubgroupAVCMcePayload\n---include-macro CXType_OCLIntelSubgroupAVCMceResult\n---include-macro CXType_OCLIntelSubgroupAVCRefPayload\n---include-macro CXType_OCLIntelSubgroupAVCRefResult\n---include-macro CXType_OCLIntelSubgroupAVCSicPayload\n---include-macro CXType_OCLIntelSubgroupAVCSicResult\n---include-macro CXType_OCLQueue\n---include-macro CXType_OCLReserveID\n---include-macro CXType_OCLSampler\n---include-macro CXType_ObjCClass\n---include-macro CXType_ObjCId\n---include-macro CXType_ObjCInterface\n---include-macro CXType_ObjCObject\n---include-macro CXType_ObjCObjectPointer\n---include-macro CXType_ObjCSel\n---include-macro CXType_ObjCTypeParam\n---include-macro CXType_Overload\n---include-macro CXType_Pipe\n---include-macro CXType_Pointer\n---include-macro CXType_RValueReference\n---include-macro CXType_Record\n---include-macro CXType_SChar\n---include-macro CXType_Short\n---include-macro CXType_ShortAccum\n---include-macro CXType_Typedef\n---include-macro CXType_UAccum\n---include-macro CXType_UChar\n---include-macro CXType_UInt\n---include-macro CXType_UInt128\n---include-macro CXType_ULong\n---include-macro CXType_ULongAccum\n---include-macro CXType_ULongLong\n---include-macro CXType_UShort\n---include-macro CXType_UShortAccum\n---include-macro CXType_Unexposed\n---include-macro CXType_VariableArray\n---include-macro CXType_Vector\n---include-macro CXType_Void\n---include-macro CXType_WChar\n---include-macro CXVisibility_Default\n---include-macro CXVisibility_Hidden\n---include-macro CXVisibility_Invalid\n---include-macro CXVisibility_Protected\n---include-macro CXVisit_Break\n---include-macro CXVisit_Continue\n---include-macro CX_CXXInvalidAccessSpecifier\n---include-macro CX_CXXPrivate\n---include-macro CX_CXXProtected\n---include-macro CX_CXXPublic\n---include-macro CX_SC_Auto\n---include-macro CX_SC_Extern\n---include-macro CX_SC_Invalid\n---include-macro CX_SC_None\n---include-macro CX_SC_OpenCLWorkGroupLocal\n---include-macro CX_SC_PrivateExtern\n---include-macro CX_SC_Register\n---include-macro CX_SC_Static\n+--include-constant CINDEX_VERSION\n+--include-constant CINDEX_VERSION_MAJOR\n+--include-constant CINDEX_VERSION_MINOR\n+--include-constant CINDEX_VERSION_STRING\n+--include-constant CXAvailability_Available\n+--include-constant CXAvailability_Deprecated\n+--include-constant CXAvailability_NotAccessible\n+--include-constant CXAvailability_NotAvailable\n+--include-constant CXCallingConv_AAPCS\n+--include-constant CXCallingConv_AAPCS_VFP\n+--include-constant CXCallingConv_AArch64VectorCall\n+--include-constant CXCallingConv_C\n+--include-constant CXCallingConv_Default\n+--include-constant CXCallingConv_IntelOclBicc\n+--include-constant CXCallingConv_Invalid\n+--include-constant CXCallingConv_PreserveAll\n+--include-constant CXCallingConv_PreserveMost\n+--include-constant CXCallingConv_Swift\n+--include-constant CXCallingConv_Unexposed\n+--include-constant CXCallingConv_Win64\n+--include-constant CXCallingConv_X86FastCall\n+--include-constant CXCallingConv_X86Pascal\n+--include-constant CXCallingConv_X86RegCall\n+--include-constant CXCallingConv_X86StdCall\n+--include-constant CXCallingConv_X86ThisCall\n+--include-constant CXCallingConv_X86VectorCall\n+--include-constant CXCallingConv_X86_64SysV\n+--include-constant CXCallingConv_X86_64Win64\n+--include-constant CXChildVisit_Break\n+--include-constant CXChildVisit_Continue\n+--include-constant CXChildVisit_Recurse\n+--include-constant CXCodeComplete_IncludeBriefComments\n+--include-constant CXCodeComplete_IncludeCodePatterns\n+--include-constant CXCodeComplete_IncludeCompletionsWithFixIts\n+--include-constant CXCodeComplete_IncludeMacros\n+--include-constant CXCodeComplete_SkipPreamble\n+--include-constant CXCompletionChunk_Colon\n+--include-constant CXCompletionChunk_Comma\n+--include-constant CXCompletionChunk_CurrentParameter\n+--include-constant CXCompletionChunk_Equal\n+--include-constant CXCompletionChunk_HorizontalSpace\n+--include-constant CXCompletionChunk_Informative\n+--include-constant CXCompletionChunk_LeftAngle\n+--include-constant CXCompletionChunk_LeftBrace\n+--include-constant CXCompletionChunk_LeftBracket\n+--include-constant CXCompletionChunk_LeftParen\n+--include-constant CXCompletionChunk_Optional\n+--include-constant CXCompletionChunk_Placeholder\n+--include-constant CXCompletionChunk_ResultType\n+--include-constant CXCompletionChunk_RightAngle\n+--include-constant CXCompletionChunk_RightBrace\n+--include-constant CXCompletionChunk_RightBracket\n+--include-constant CXCompletionChunk_RightParen\n+--include-constant CXCompletionChunk_SemiColon\n+--include-constant CXCompletionChunk_Text\n+--include-constant CXCompletionChunk_TypedText\n+--include-constant CXCompletionChunk_VerticalSpace\n+--include-constant CXCompletionContext_AnyType\n+--include-constant CXCompletionContext_AnyValue\n+--include-constant CXCompletionContext_ArrowMemberAccess\n+--include-constant CXCompletionContext_CXXClassTypeValue\n+--include-constant CXCompletionContext_ClassTag\n+--include-constant CXCompletionContext_DotMemberAccess\n+--include-constant CXCompletionContext_EnumTag\n+--include-constant CXCompletionContext_IncludedFile\n+--include-constant CXCompletionContext_MacroName\n+--include-constant CXCompletionContext_Namespace\n+--include-constant CXCompletionContext_NaturalLanguage\n+--include-constant CXCompletionContext_NestedNameSpecifier\n+--include-constant CXCompletionContext_ObjCCategory\n+--include-constant CXCompletionContext_ObjCClassMessage\n+--include-constant CXCompletionContext_ObjCInstanceMessage\n+--include-constant CXCompletionContext_ObjCInterface\n+--include-constant CXCompletionContext_ObjCObjectValue\n+--include-constant CXCompletionContext_ObjCPropertyAccess\n+--include-constant CXCompletionContext_ObjCProtocol\n+--include-constant CXCompletionContext_ObjCSelectorName\n+--include-constant CXCompletionContext_ObjCSelectorValue\n+--include-constant CXCompletionContext_StructTag\n+--include-constant CXCompletionContext_Unexposed\n+--include-constant CXCompletionContext_UnionTag\n+--include-constant CXCompletionContext_Unknown\n+--include-constant CXCursor_AddrLabelExpr\n+--include-constant CXCursor_AlignedAttr\n+--include-constant CXCursor_AnnotateAttr\n+--include-constant CXCursor_ArraySubscriptExpr\n+--include-constant CXCursor_AsmLabelAttr\n+--include-constant CXCursor_AsmStmt\n+--include-constant CXCursor_BinaryOperator\n+--include-constant CXCursor_BlockExpr\n+--include-constant CXCursor_BreakStmt\n+--include-constant CXCursor_BuiltinBitCastExpr\n+--include-constant CXCursor_CStyleCastExpr\n+--include-constant CXCursor_CUDAConstantAttr\n+--include-constant CXCursor_CUDADeviceAttr\n+--include-constant CXCursor_CUDAGlobalAttr\n+--include-constant CXCursor_CUDAHostAttr\n+--include-constant CXCursor_CUDASharedAttr\n+--include-constant CXCursor_CXXAccessSpecifier\n+--include-constant CXCursor_CXXBaseSpecifier\n+--include-constant CXCursor_CXXBoolLiteralExpr\n+--include-constant CXCursor_CXXCatchStmt\n+--include-constant CXCursor_CXXConstCastExpr\n+--include-constant CXCursor_CXXDeleteExpr\n+--include-constant CXCursor_CXXDynamicCastExpr\n+--include-constant CXCursor_CXXFinalAttr\n+--include-constant CXCursor_CXXForRangeStmt\n+--include-constant CXCursor_CXXFunctionalCastExpr\n+--include-constant CXCursor_CXXMethod\n+--include-constant CXCursor_CXXNewExpr\n+--include-constant CXCursor_CXXNullPtrLiteralExpr\n+--include-constant CXCursor_CXXOverrideAttr\n+--include-constant CXCursor_CXXReinterpretCastExpr\n+--include-constant CXCursor_CXXStaticCastExpr\n+--include-constant CXCursor_CXXThisExpr\n+--include-constant CXCursor_CXXThrowExpr\n+--include-constant CXCursor_CXXTryStmt\n+--include-constant CXCursor_CXXTypeidExpr\n+--include-constant CXCursor_CallExpr\n+--include-constant CXCursor_CaseStmt\n+--include-constant CXCursor_CharacterLiteral\n+--include-constant CXCursor_ClassDecl\n+--include-constant CXCursor_ClassTemplate\n+--include-constant CXCursor_ClassTemplatePartialSpecialization\n+--include-constant CXCursor_CompoundAssignOperator\n+--include-constant CXCursor_CompoundLiteralExpr\n+--include-constant CXCursor_CompoundStmt\n+--include-constant CXCursor_ConditionalOperator\n+--include-constant CXCursor_ConstAttr\n+--include-constant CXCursor_Constructor\n+--include-constant CXCursor_ContinueStmt\n+--include-constant CXCursor_ConvergentAttr\n+--include-constant CXCursor_ConversionFunction\n+--include-constant CXCursor_DLLExport\n+--include-constant CXCursor_DLLImport\n+--include-constant CXCursor_DeclRefExpr\n+--include-constant CXCursor_DeclStmt\n+--include-constant CXCursor_DefaultStmt\n+--include-constant CXCursor_Destructor\n+--include-constant CXCursor_DoStmt\n+--include-constant CXCursor_EnumConstantDecl\n+--include-constant CXCursor_EnumDecl\n+--include-constant CXCursor_ExceptionSpecificationKind_BasicNoexcept\n+--include-constant CXCursor_ExceptionSpecificationKind_ComputedNoexcept\n+--include-constant CXCursor_ExceptionSpecificationKind_Dynamic\n+--include-constant CXCursor_ExceptionSpecificationKind_DynamicNone\n+--include-constant CXCursor_ExceptionSpecificationKind_MSAny\n+--include-constant CXCursor_ExceptionSpecificationKind_NoThrow\n+--include-constant CXCursor_ExceptionSpecificationKind_None\n+--include-constant CXCursor_ExceptionSpecificationKind_Unevaluated\n+--include-constant CXCursor_ExceptionSpecificationKind_Uninstantiated\n+--include-constant CXCursor_ExceptionSpecificationKind_Unparsed\n+--include-constant CXCursor_FieldDecl\n+--include-constant CXCursor_FirstAttr\n+--include-constant CXCursor_FirstDecl\n+--include-constant CXCursor_FirstExpr\n+--include-constant CXCursor_FirstExtraDecl\n+--include-constant CXCursor_FirstInvalid\n+--include-constant CXCursor_FirstPreprocessing\n+--include-constant CXCursor_FirstRef\n+--include-constant CXCursor_FirstStmt\n+--include-constant CXCursor_FixedPointLiteral\n+--include-constant CXCursor_FlagEnum\n+--include-constant CXCursor_FloatingLiteral\n+--include-constant CXCursor_ForStmt\n+--include-constant CXCursor_FriendDecl\n+--include-constant CXCursor_FunctionDecl\n+--include-constant CXCursor_FunctionTemplate\n+--include-constant CXCursor_GCCAsmStmt\n+--include-constant CXCursor_GNUNullExpr\n+--include-constant CXCursor_GenericSelectionExpr\n+--include-constant CXCursor_GotoStmt\n+--include-constant CXCursor_IBActionAttr\n+--include-constant CXCursor_IBOutletAttr\n+--include-constant CXCursor_IBOutletCollectionAttr\n+--include-constant CXCursor_IfStmt\n+--include-constant CXCursor_ImaginaryLiteral\n+--include-constant CXCursor_InclusionDirective\n+--include-constant CXCursor_IndirectGotoStmt\n+--include-constant CXCursor_InitListExpr\n+--include-constant CXCursor_IntegerLiteral\n+--include-constant CXCursor_InvalidCode\n+--include-constant CXCursor_InvalidFile\n+--include-constant CXCursor_LabelRef\n+--include-constant CXCursor_LabelStmt\n+--include-constant CXCursor_LambdaExpr\n+--include-constant CXCursor_LastAttr\n+--include-constant CXCursor_LastDecl\n+--include-constant CXCursor_LastExpr\n+--include-constant CXCursor_LastExtraDecl\n+--include-constant CXCursor_LastInvalid\n+--include-constant CXCursor_LastPreprocessing\n+--include-constant CXCursor_LastRef\n+--include-constant CXCursor_LastStmt\n+--include-constant CXCursor_LinkageSpec\n+--include-constant CXCursor_MSAsmStmt\n+--include-constant CXCursor_MacroDefinition\n+--include-constant CXCursor_MacroExpansion\n+--include-constant CXCursor_MacroInstantiation\n+--include-constant CXCursor_MemberRef\n+--include-constant CXCursor_MemberRefExpr\n+--include-constant CXCursor_ModuleImportDecl\n+--include-constant CXCursor_NSConsumed\n+--include-constant CXCursor_NSConsumesSelf\n+--include-constant CXCursor_NSReturnsAutoreleased\n+--include-constant CXCursor_NSReturnsNotRetained\n+--include-constant CXCursor_NSReturnsRetained\n+--include-constant CXCursor_Namespace\n+--include-constant CXCursor_NamespaceAlias\n+--include-constant CXCursor_NamespaceRef\n+--include-constant CXCursor_NoDeclFound\n+--include-constant CXCursor_NoDuplicateAttr\n+--include-constant CXCursor_NonTypeTemplateParameter\n+--include-constant CXCursor_NotImplemented\n+--include-constant CXCursor_NullStmt\n+--include-constant CXCursor_OMPArraySectionExpr\n+--include-constant CXCursor_OMPAtomicDirective\n+--include-constant CXCursor_OMPBarrierDirective\n+--include-constant CXCursor_OMPCancelDirective\n+--include-constant CXCursor_OMPCancellationPointDirective\n+--include-constant CXCursor_OMPCriticalDirective\n+--include-constant CXCursor_OMPDistributeDirective\n+--include-constant CXCursor_OMPDistributeParallelForDirective\n+--include-constant CXCursor_OMPDistributeParallelForSimdDirective\n+--include-constant CXCursor_OMPDistributeSimdDirective\n+--include-constant CXCursor_OMPFlushDirective\n+--include-constant CXCursor_OMPForDirective\n+--include-constant CXCursor_OMPForSimdDirective\n+--include-constant CXCursor_OMPMasterDirective\n+--include-constant CXCursor_OMPMasterTaskLoopDirective\n+--include-constant CXCursor_OMPMasterTaskLoopSimdDirective\n+--include-constant CXCursor_OMPOrderedDirective\n+--include-constant CXCursor_OMPParallelDirective\n+--include-constant CXCursor_OMPParallelForDirective\n+--include-constant CXCursor_OMPParallelForSimdDirective\n+--include-constant CXCursor_OMPParallelMasterDirective\n+--include-constant CXCursor_OMPParallelMasterTaskLoopDirective\n+--include-constant CXCursor_OMPParallelMasterTaskLoopSimdDirective\n+--include-constant CXCursor_OMPParallelSectionsDirective\n+--include-constant CXCursor_OMPSectionDirective\n+--include-constant CXCursor_OMPSectionsDirective\n+--include-constant CXCursor_OMPSimdDirective\n+--include-constant CXCursor_OMPSingleDirective\n+--include-constant CXCursor_OMPTargetDataDirective\n+--include-constant CXCursor_OMPTargetDirective\n+--include-constant CXCursor_OMPTargetEnterDataDirective\n+--include-constant CXCursor_OMPTargetExitDataDirective\n+--include-constant CXCursor_OMPTargetParallelDirective\n+--include-constant CXCursor_OMPTargetParallelForDirective\n+--include-constant CXCursor_OMPTargetParallelForSimdDirective\n+--include-constant CXCursor_OMPTargetSimdDirective\n+--include-constant CXCursor_OMPTargetTeamsDirective\n+--include-constant CXCursor_OMPTargetTeamsDistributeDirective\n+--include-constant CXCursor_OMPTargetTeamsDistributeParallelForDirective\n+--include-constant CXCursor_OMPTargetTeamsDistributeParallelForSimdDirective\n+--include-constant CXCursor_OMPTargetTeamsDistributeSimdDirective\n+--include-constant CXCursor_OMPTargetUpdateDirective\n+--include-constant CXCursor_OMPTaskDirective\n+--include-constant CXCursor_OMPTaskLoopDirective\n+--include-constant CXCursor_OMPTaskLoopSimdDirective\n+--include-constant CXCursor_OMPTaskgroupDirective\n+--include-constant CXCursor_OMPTaskwaitDirective\n+--include-constant CXCursor_OMPTaskyieldDirective\n+--include-constant CXCursor_OMPTeamsDirective\n+--include-constant CXCursor_OMPTeamsDistributeDirective\n+--include-constant CXCursor_OMPTeamsDistributeParallelForDirective\n+--include-constant CXCursor_OMPTeamsDistributeParallelForSimdDirective\n+--include-constant CXCursor_OMPTeamsDistributeSimdDirective\n+--include-constant CXCursor_ObjCAtCatchStmt\n+--include-constant CXCursor_ObjCAtFinallyStmt\n+--include-constant CXCursor_ObjCAtSynchronizedStmt\n+--include-constant CXCursor_ObjCAtThrowStmt\n+--include-constant CXCursor_ObjCAtTryStmt\n+--include-constant CXCursor_ObjCAutoreleasePoolStmt\n+--include-constant CXCursor_ObjCAvailabilityCheckExpr\n+--include-constant CXCursor_ObjCBoolLiteralExpr\n+--include-constant CXCursor_ObjCBoxable\n+--include-constant CXCursor_ObjCBridgedCastExpr\n+--include-constant CXCursor_ObjCCategoryDecl\n+--include-constant CXCursor_ObjCCategoryImplDecl\n+--include-constant CXCursor_ObjCClassMethodDecl\n+--include-constant CXCursor_ObjCClassRef\n+--include-constant CXCursor_ObjCDesignatedInitializer\n+--include-constant CXCursor_ObjCDynamicDecl\n+--include-constant CXCursor_ObjCEncodeExpr\n+--include-constant CXCursor_ObjCException\n+--include-constant CXCursor_ObjCExplicitProtocolImpl\n+--include-constant CXCursor_ObjCForCollectionStmt\n+--include-constant CXCursor_ObjCImplementationDecl\n+--include-constant CXCursor_ObjCIndependentClass\n+--include-constant CXCursor_ObjCInstanceMethodDecl\n+--include-constant CXCursor_ObjCInterfaceDecl\n+--include-constant CXCursor_ObjCIvarDecl\n+--include-constant CXCursor_ObjCMessageExpr\n+--include-constant CXCursor_ObjCNSObject\n+--include-constant CXCursor_ObjCPreciseLifetime\n+--include-constant CXCursor_ObjCPropertyDecl\n+--include-constant CXCursor_ObjCProtocolDecl\n+--include-constant CXCursor_ObjCProtocolExpr\n+--include-constant CXCursor_ObjCProtocolRef\n+--include-constant CXCursor_ObjCRequiresSuper\n+--include-constant CXCursor_ObjCReturnsInnerPointer\n+--include-constant CXCursor_ObjCRootClass\n+--include-constant CXCursor_ObjCRuntimeVisible\n+--include-constant CXCursor_ObjCSelectorExpr\n+--include-constant CXCursor_ObjCSelfExpr\n+--include-constant CXCursor_ObjCStringLiteral\n+--include-constant CXCursor_ObjCSubclassingRestricted\n+--include-constant CXCursor_ObjCSuperClassRef\n+--include-constant CXCursor_ObjCSynthesizeDecl\n+--include-constant CXCursor_OverloadCandidate\n+--include-constant CXCursor_OverloadedDeclRef\n+--include-constant CXCursor_PackExpansionExpr\n+--include-constant CXCursor_PackedAttr\n+--include-constant CXCursor_ParenExpr\n+--include-constant CXCursor_ParmDecl\n+--include-constant CXCursor_PreprocessingDirective\n+--include-constant CXCursor_PureAttr\n+--include-constant CXCursor_ReturnStmt\n+--include-constant CXCursor_SEHExceptStmt\n+--include-constant CXCursor_SEHFinallyStmt\n+--include-constant CXCursor_SEHLeaveStmt\n+--include-constant CXCursor_SEHTryStmt\n+--include-constant CXCursor_SizeOfPackExpr\n+--include-constant CXCursor_StaticAssert\n+--include-constant CXCursor_StmtExpr\n+--include-constant CXCursor_StringLiteral\n+--include-constant CXCursor_StructDecl\n+--include-constant CXCursor_SwitchStmt\n+--include-constant CXCursor_TemplateRef\n+--include-constant CXCursor_TemplateTemplateParameter\n+--include-constant CXCursor_TemplateTypeParameter\n+--include-constant CXCursor_TranslationUnit\n+--include-constant CXCursor_TypeAliasDecl\n+--include-constant CXCursor_TypeAliasTemplateDecl\n+--include-constant CXCursor_TypeRef\n+--include-constant CXCursor_TypedefDecl\n+--include-constant CXCursor_UnaryExpr\n+--include-constant CXCursor_UnaryOperator\n+--include-constant CXCursor_UnexposedAttr\n+--include-constant CXCursor_UnexposedDecl\n+--include-constant CXCursor_UnexposedExpr\n+--include-constant CXCursor_UnexposedStmt\n+--include-constant CXCursor_UnionDecl\n+--include-constant CXCursor_UsingDeclaration\n+--include-constant CXCursor_UsingDirective\n+--include-constant CXCursor_VarDecl\n+--include-constant CXCursor_VariableRef\n+--include-constant CXCursor_VisibilityAttr\n+--include-constant CXCursor_WarnUnusedAttr\n+--include-constant CXCursor_WarnUnusedResultAttr\n+--include-constant CXCursor_WhileStmt\n+--include-constant CXDiagnostic_DisplayCategoryId\n+--include-constant CXDiagnostic_DisplayCategoryName\n+--include-constant CXDiagnostic_DisplayColumn\n+--include-constant CXDiagnostic_DisplayOption\n+--include-constant CXDiagnostic_DisplaySourceLocation\n+--include-constant CXDiagnostic_DisplaySourceRanges\n+--include-constant CXDiagnostic_Error\n+--include-constant CXDiagnostic_Fatal\n+--include-constant CXDiagnostic_Ignored\n+--include-constant CXDiagnostic_Note\n+--include-constant CXDiagnostic_Warning\n+--include-constant CXEval_CFStr\n+--include-constant CXEval_Float\n+--include-constant CXEval_Int\n+--include-constant CXEval_ObjCStrLiteral\n+--include-constant CXEval_Other\n+--include-constant CXEval_StrLiteral\n+--include-constant CXEval_UnExposed\n+--include-constant CXGlobalOpt_None\n+--include-constant CXGlobalOpt_ThreadBackgroundPriorityForAll\n+--include-constant CXGlobalOpt_ThreadBackgroundPriorityForEditing\n+--include-constant CXGlobalOpt_ThreadBackgroundPriorityForIndexing\n+--include-constant CXIdxAttr_IBAction\n+--include-constant CXIdxAttr_IBOutlet\n+--include-constant CXIdxAttr_IBOutletCollection\n+--include-constant CXIdxAttr_Unexposed\n+--include-constant CXIdxDeclFlag_Skipped\n+--include-constant CXIdxEntityLang_C\n+--include-constant CXIdxEntityLang_CXX\n+--include-constant CXIdxEntityLang_None\n+--include-constant CXIdxEntityLang_ObjC\n+--include-constant CXIdxEntityLang_Swift\n+--include-constant CXIdxEntityRef_Direct\n+--include-constant CXIdxEntityRef_Implicit\n+--include-constant CXIdxEntity_CXXClass\n+--include-constant CXIdxEntity_CXXConstructor\n+--include-constant CXIdxEntity_CXXConversionFunction\n+--include-constant CXIdxEntity_CXXDestructor\n+--include-constant CXIdxEntity_CXXInstanceMethod\n+--include-constant CXIdxEntity_CXXInterface\n+--include-constant CXIdxEntity_CXXNamespace\n+--include-constant CXIdxEntity_CXXNamespaceAlias\n+--include-constant CXIdxEntity_CXXStaticMethod\n+--include-constant CXIdxEntity_CXXStaticVariable\n+--include-constant CXIdxEntity_CXXTypeAlias\n+--include-constant CXIdxEntity_Enum\n+--include-constant CXIdxEntity_EnumConstant\n+--include-constant CXIdxEntity_Field\n+--include-constant CXIdxEntity_Function\n+--include-constant CXIdxEntity_NonTemplate\n+--include-constant CXIdxEntity_ObjCCategory\n+--include-constant CXIdxEntity_ObjCClass\n+--include-constant CXIdxEntity_ObjCClassMethod\n+--include-constant CXIdxEntity_ObjCInstanceMethod\n+--include-constant CXIdxEntity_ObjCIvar\n+--include-constant CXIdxEntity_ObjCProperty\n+--include-constant CXIdxEntity_ObjCProtocol\n+--include-constant CXIdxEntity_Struct\n+--include-constant CXIdxEntity_Template\n+--include-constant CXIdxEntity_TemplatePartialSpecialization\n+--include-constant CXIdxEntity_TemplateSpecialization\n+--include-constant CXIdxEntity_Typedef\n+--include-constant CXIdxEntity_Unexposed\n+--include-constant CXIdxEntity_Union\n+--include-constant CXIdxEntity_Variable\n+--include-constant CXIdxObjCContainer_ForwardRef\n+--include-constant CXIdxObjCContainer_Implementation\n+--include-constant CXIdxObjCContainer_Interface\n+--include-constant CXIndexOpt_IndexFunctionLocalSymbols\n+--include-constant CXIndexOpt_IndexImplicitTemplateInstantiations\n+--include-constant CXIndexOpt_None\n+--include-constant CXIndexOpt_SkipParsedBodiesInSession\n+--include-constant CXIndexOpt_SuppressRedundantRefs\n+--include-constant CXIndexOpt_SuppressWarnings\n+--include-constant CXLanguage_C\n+--include-constant CXLanguage_CPlusPlus\n+--include-constant CXLanguage_Invalid\n+--include-constant CXLanguage_ObjC\n+--include-constant CXLinkage_External\n+--include-constant CXLinkage_Internal\n+--include-constant CXLinkage_Invalid\n+--include-constant CXLinkage_NoLinkage\n+--include-constant CXLinkage_UniqueExternal\n+--include-constant CXLoadDiag_CannotLoad\n+--include-constant CXLoadDiag_InvalidFile\n+--include-constant CXLoadDiag_None\n+--include-constant CXLoadDiag_Unknown\n+--include-constant CXNameRange_WantQualifier\n+--include-constant CXNameRange_WantSinglePiece\n+--include-constant CXNameRange_WantTemplateArgs\n+--include-constant CXObjCDeclQualifier_Bycopy\n+--include-constant CXObjCDeclQualifier_Byref\n+--include-constant CXObjCDeclQualifier_In\n+--include-constant CXObjCDeclQualifier_Inout\n+--include-constant CXObjCDeclQualifier_None\n+--include-constant CXObjCDeclQualifier_Oneway\n+--include-constant CXObjCDeclQualifier_Out\n+--include-constant CXObjCPropertyAttr_assign\n+--include-constant CXObjCPropertyAttr_atomic\n+--include-constant CXObjCPropertyAttr_class\n+--include-constant CXObjCPropertyAttr_copy\n+--include-constant CXObjCPropertyAttr_getter\n+--include-constant CXObjCPropertyAttr_noattr\n+--include-constant CXObjCPropertyAttr_nonatomic\n+--include-constant CXObjCPropertyAttr_readonly\n+--include-constant CXObjCPropertyAttr_readwrite\n+--include-constant CXObjCPropertyAttr_retain\n+--include-constant CXObjCPropertyAttr_setter\n+--include-constant CXObjCPropertyAttr_strong\n+--include-constant CXObjCPropertyAttr_unsafe_unretained\n+--include-constant CXObjCPropertyAttr_weak\n+--include-constant CXPrintingPolicy_Alignof\n+--include-constant CXPrintingPolicy_AnonymousTagLocations\n+--include-constant CXPrintingPolicy_Bool\n+--include-constant CXPrintingPolicy_ConstantArraySizeAsWritten\n+--include-constant CXPrintingPolicy_ConstantsAsWritten\n+--include-constant CXPrintingPolicy_FullyQualifiedName\n+--include-constant CXPrintingPolicy_Half\n+--include-constant CXPrintingPolicy_IncludeNewlines\n+--include-constant CXPrintingPolicy_IncludeTagDefinition\n+--include-constant CXPrintingPolicy_Indentation\n+--include-constant CXPrintingPolicy_LastProperty\n+--include-constant CXPrintingPolicy_MSVCFormatting\n+--include-constant CXPrintingPolicy_MSWChar\n+--include-constant CXPrintingPolicy_PolishForDeclaration\n+--include-constant CXPrintingPolicy_Restrict\n+--include-constant CXPrintingPolicy_SuppressImplicitBase\n+--include-constant CXPrintingPolicy_SuppressInitializers\n+--include-constant CXPrintingPolicy_SuppressLifetimeQualifiers\n+--include-constant CXPrintingPolicy_SuppressScope\n+--include-constant CXPrintingPolicy_SuppressSpecifiers\n+--include-constant CXPrintingPolicy_SuppressStrongLifetime\n+--include-constant CXPrintingPolicy_SuppressTagKeyword\n+--include-constant CXPrintingPolicy_SuppressTemplateArgsInCXXConstructors\n+--include-constant CXPrintingPolicy_SuppressUnwrittenScope\n+--include-constant CXPrintingPolicy_TerseOutput\n+--include-constant CXPrintingPolicy_UnderscoreAlignof\n+--include-constant CXPrintingPolicy_UseVoidForZeroParams\n+--include-constant CXRefQualifier_LValue\n+--include-constant CXRefQualifier_None\n+--include-constant CXRefQualifier_RValue\n+--include-constant CXReparse_None\n+--include-constant CXResult_Invalid\n+--include-constant CXResult_Success\n+--include-constant CXResult_VisitBreak\n+--include-constant CXSaveError_InvalidTU\n+--include-constant CXSaveError_None\n+--include-constant CXSaveError_TranslationErrors\n+--include-constant CXSaveError_Unknown\n+--include-constant CXSaveTranslationUnit_None\n+--include-constant CXSymbolRole_AddressOf\n+--include-constant CXSymbolRole_Call\n+--include-constant CXSymbolRole_Declaration\n+--include-constant CXSymbolRole_Definition\n+--include-constant CXSymbolRole_Dynamic\n+--include-constant CXSymbolRole_Implicit\n+--include-constant CXSymbolRole_None\n+--include-constant CXSymbolRole_Read\n+--include-constant CXSymbolRole_Reference\n+--include-constant CXSymbolRole_Write\n+--include-constant CXTLS_Dynamic\n+--include-constant CXTLS_None\n+--include-constant CXTLS_Static\n+--include-constant CXTUResourceUsage_AST\n+--include-constant CXTUResourceUsage_AST_SideTables\n+--include-constant CXTUResourceUsage_ExternalASTSource_Membuffer_MMap\n+--include-constant CXTUResourceUsage_ExternalASTSource_Membuffer_Malloc\n+--include-constant CXTUResourceUsage_First\n+--include-constant CXTUResourceUsage_GlobalCompletionResults\n+--include-constant CXTUResourceUsage_Identifiers\n+--include-constant CXTUResourceUsage_Last\n+--include-constant CXTUResourceUsage_MEMORY_IN_BYTES_BEGIN\n+--include-constant CXTUResourceUsage_MEMORY_IN_BYTES_END\n+--include-constant CXTUResourceUsage_PreprocessingRecord\n+--include-constant CXTUResourceUsage_Preprocessor\n+--include-constant CXTUResourceUsage_Preprocessor_HeaderSearch\n+--include-constant CXTUResourceUsage_Selectors\n+--include-constant CXTUResourceUsage_SourceManagerContentCache\n+--include-constant CXTUResourceUsage_SourceManager_DataStructures\n+--include-constant CXTUResourceUsage_SourceManager_Membuffer_MMap\n+--include-constant CXTUResourceUsage_SourceManager_Membuffer_Malloc\n+--include-constant CXTemplateArgumentKind_Declaration\n+--include-constant CXTemplateArgumentKind_Expression\n+--include-constant CXTemplateArgumentKind_Integral\n+--include-constant CXTemplateArgumentKind_Invalid\n+--include-constant CXTemplateArgumentKind_Null\n+--include-constant CXTemplateArgumentKind_NullPtr\n+--include-constant CXTemplateArgumentKind_Pack\n+--include-constant CXTemplateArgumentKind_Template\n+--include-constant CXTemplateArgumentKind_TemplateExpansion\n+--include-constant CXTemplateArgumentKind_Type\n+--include-constant CXToken_Comment\n+--include-constant CXToken_Identifier\n+--include-constant CXToken_Keyword\n+--include-constant CXToken_Literal\n+--include-constant CXToken_Punctuation\n+--include-constant CXTranslationUnit_CXXChainedPCH\n+--include-constant CXTranslationUnit_CacheCompletionResults\n+--include-constant CXTranslationUnit_CreatePreambleOnFirstParse\n+--include-constant CXTranslationUnit_DetailedPreprocessingRecord\n+--include-constant CXTranslationUnit_ForSerialization\n+--include-constant CXTranslationUnit_IgnoreNonErrorsFromIncludedFiles\n+--include-constant CXTranslationUnit_IncludeAttributedTypes\n+--include-constant CXTranslationUnit_IncludeBriefCommentsInCodeCompletion\n+--include-constant CXTranslationUnit_Incomplete\n+--include-constant CXTranslationUnit_KeepGoing\n+--include-constant CXTranslationUnit_LimitSkipFunctionBodiesToPreamble\n+--include-constant CXTranslationUnit_None\n+--include-constant CXTranslationUnit_PrecompiledPreamble\n+--include-constant CXTranslationUnit_RetainExcludedConditionalBlocks\n+--include-constant CXTranslationUnit_SingleFileParse\n+--include-constant CXTranslationUnit_SkipFunctionBodies\n+--include-constant CXTranslationUnit_VisitImplicitAttributes\n+--include-constant CXTypeLayoutError_Dependent\n+--include-constant CXTypeLayoutError_Incomplete\n+--include-constant CXTypeLayoutError_Invalid\n+--include-constant CXTypeLayoutError_InvalidFieldName\n+--include-constant CXTypeLayoutError_NotConstantSize\n+--include-constant CXTypeLayoutError_Undeduced\n+--include-constant CXTypeNullability_Invalid\n+--include-constant CXTypeNullability_NonNull\n+--include-constant CXTypeNullability_Nullable\n+--include-constant CXTypeNullability_Unspecified\n+--include-constant CXType_Accum\n+--include-constant CXType_Attributed\n+--include-constant CXType_Auto\n+--include-constant CXType_BlockPointer\n+--include-constant CXType_Bool\n+--include-constant CXType_Char16\n+--include-constant CXType_Char32\n+--include-constant CXType_Char_S\n+--include-constant CXType_Char_U\n+--include-constant CXType_Complex\n+--include-constant CXType_ConstantArray\n+--include-constant CXType_Dependent\n+--include-constant CXType_DependentSizedArray\n+--include-constant CXType_Double\n+--include-constant CXType_Elaborated\n+--include-constant CXType_Enum\n+--include-constant CXType_ExtVector\n+--include-constant CXType_FirstBuiltin\n+--include-constant CXType_Float\n+--include-constant CXType_Float128\n+--include-constant CXType_Float16\n+--include-constant CXType_FunctionNoProto\n+--include-constant CXType_FunctionProto\n+--include-constant CXType_Half\n+--include-constant CXType_IncompleteArray\n+--include-constant CXType_Int\n+--include-constant CXType_Int128\n+--include-constant CXType_Invalid\n+--include-constant CXType_LValueReference\n+--include-constant CXType_LastBuiltin\n+--include-constant CXType_Long\n+--include-constant CXType_LongAccum\n+--include-constant CXType_LongDouble\n+--include-constant CXType_LongLong\n+--include-constant CXType_MemberPointer\n+--include-constant CXType_NullPtr\n+--include-constant CXType_OCLEvent\n+--include-constant CXType_OCLImage1dArrayRO\n+--include-constant CXType_OCLImage1dArrayRW\n+--include-constant CXType_OCLImage1dArrayWO\n+--include-constant CXType_OCLImage1dBufferRO\n+--include-constant CXType_OCLImage1dBufferRW\n+--include-constant CXType_OCLImage1dBufferWO\n+--include-constant CXType_OCLImage1dRO\n+--include-constant CXType_OCLImage1dRW\n+--include-constant CXType_OCLImage1dWO\n+--include-constant CXType_OCLImage2dArrayDepthRO\n+--include-constant CXType_OCLImage2dArrayDepthRW\n+--include-constant CXType_OCLImage2dArrayDepthWO\n+--include-constant CXType_OCLImage2dArrayMSAADepthRO\n+--include-constant CXType_OCLImage2dArrayMSAADepthRW\n+--include-constant CXType_OCLImage2dArrayMSAADepthWO\n+--include-constant CXType_OCLImage2dArrayMSAARO\n+--include-constant CXType_OCLImage2dArrayMSAARW\n+--include-constant CXType_OCLImage2dArrayMSAAWO\n+--include-constant CXType_OCLImage2dArrayRO\n+--include-constant CXType_OCLImage2dArrayRW\n+--include-constant CXType_OCLImage2dArrayWO\n+--include-constant CXType_OCLImage2dDepthRO\n+--include-constant CXType_OCLImage2dDepthRW\n+--include-constant CXType_OCLImage2dDepthWO\n+--include-constant CXType_OCLImage2dMSAADepthRO\n+--include-constant CXType_OCLImage2dMSAADepthRW\n+--include-constant CXType_OCLImage2dMSAADepthWO\n+--include-constant CXType_OCLImage2dMSAARO\n+--include-constant CXType_OCLImage2dMSAARW\n+--include-constant CXType_OCLImage2dMSAAWO\n+--include-constant CXType_OCLImage2dRO\n+--include-constant CXType_OCLImage2dRW\n+--include-constant CXType_OCLImage2dWO\n+--include-constant CXType_OCLImage3dRO\n+--include-constant CXType_OCLImage3dRW\n+--include-constant CXType_OCLImage3dWO\n+--include-constant CXType_OCLIntelSubgroupAVCImeDualRefStreamin\n+--include-constant CXType_OCLIntelSubgroupAVCImePayload\n+--include-constant CXType_OCLIntelSubgroupAVCImeResult\n+--include-constant CXType_OCLIntelSubgroupAVCImeResultDualRefStreamout\n+--include-constant CXType_OCLIntelSubgroupAVCImeResultSingleRefStreamout\n+--include-constant CXType_OCLIntelSubgroupAVCImeSingleRefStreamin\n+--include-constant CXType_OCLIntelSubgroupAVCMcePayload\n+--include-constant CXType_OCLIntelSubgroupAVCMceResult\n+--include-constant CXType_OCLIntelSubgroupAVCRefPayload\n+--include-constant CXType_OCLIntelSubgroupAVCRefResult\n+--include-constant CXType_OCLIntelSubgroupAVCSicPayload\n+--include-constant CXType_OCLIntelSubgroupAVCSicResult\n+--include-constant CXType_OCLQueue\n+--include-constant CXType_OCLReserveID\n+--include-constant CXType_OCLSampler\n+--include-constant CXType_ObjCClass\n+--include-constant CXType_ObjCId\n+--include-constant CXType_ObjCInterface\n+--include-constant CXType_ObjCObject\n+--include-constant CXType_ObjCObjectPointer\n+--include-constant CXType_ObjCSel\n+--include-constant CXType_ObjCTypeParam\n+--include-constant CXType_Overload\n+--include-constant CXType_Pipe\n+--include-constant CXType_Pointer\n+--include-constant CXType_RValueReference\n+--include-constant CXType_Record\n+--include-constant CXType_SChar\n+--include-constant CXType_Short\n+--include-constant CXType_ShortAccum\n+--include-constant CXType_Typedef\n+--include-constant CXType_UAccum\n+--include-constant CXType_UChar\n+--include-constant CXType_UInt\n+--include-constant CXType_UInt128\n+--include-constant CXType_ULong\n+--include-constant CXType_ULongAccum\n+--include-constant CXType_ULongLong\n+--include-constant CXType_UShort\n+--include-constant CXType_UShortAccum\n+--include-constant CXType_Unexposed\n+--include-constant CXType_VariableArray\n+--include-constant CXType_Vector\n+--include-constant CXType_Void\n+--include-constant CXType_WChar\n+--include-constant CXVisibility_Default\n+--include-constant CXVisibility_Hidden\n+--include-constant CXVisibility_Invalid\n+--include-constant CXVisibility_Protected\n+--include-constant CXVisit_Break\n+--include-constant CXVisit_Continue\n+--include-constant CX_CXXInvalidAccessSpecifier\n+--include-constant CX_CXXPrivate\n+--include-constant CX_CXXProtected\n+--include-constant CX_CXXPublic\n+--include-constant CX_SC_Auto\n+--include-constant CX_SC_Extern\n+--include-constant CX_SC_Invalid\n+--include-constant CX_SC_None\n+--include-constant CX_SC_OpenCLWorkGroupLocal\n+--include-constant CX_SC_PrivateExtern\n+--include-constant CX_SC_Register\n+--include-constant CX_SC_Static\n","filename":"updateclang\/clang.full.symbols","additions":940,"deletions":940,"binary":false,"changes":1880,"status":"modified"},{"patch":"@@ -3,5 +3,5 @@\n---include-macro CXError_ASTReadError\n---include-macro CXError_Crashed\n---include-macro CXError_Failure\n---include-macro CXError_InvalidArguments\n---include-macro CXError_Success\n+--include-constant CXError_ASTReadError\n+--include-constant CXError_Crashed\n+--include-constant CXError_Failure\n+--include-constant CXError_InvalidArguments\n+--include-constant CXError_Success\n@@ -23,498 +23,498 @@\n---include-macro CXCallingConv_AAPCS\n---include-macro CXCallingConv_AAPCS_VFP\n---include-macro CXCallingConv_AArch64VectorCall\n---include-macro CXCallingConv_C\n---include-macro CXCallingConv_Default\n---include-macro CXCallingConv_IntelOclBicc\n---include-macro CXCallingConv_Invalid\n---include-macro CXCallingConv_PreserveAll\n---include-macro CXCallingConv_PreserveMost\n---include-macro CXCallingConv_Swift\n---include-macro CXCallingConv_Unexposed\n---include-macro CXCallingConv_Win64\n---include-macro CXCallingConv_X86FastCall\n---include-macro CXCallingConv_X86Pascal\n---include-macro CXCallingConv_X86RegCall\n---include-macro CXCallingConv_X86StdCall\n---include-macro CXCallingConv_X86ThisCall\n---include-macro CXCallingConv_X86VectorCall\n---include-macro CXCallingConv_X86_64SysV\n---include-macro CXCallingConv_X86_64Win64\n---include-macro CXChildVisit_Break\n---include-macro CXChildVisit_Continue\n---include-macro CXChildVisit_Recurse\n---include-macro CXCursor_AddrLabelExpr\n---include-macro CXCursor_AlignedAttr\n---include-macro CXCursor_AnnotateAttr\n---include-macro CXCursor_ArraySubscriptExpr\n---include-macro CXCursor_AsmLabelAttr\n---include-macro CXCursor_AsmStmt\n---include-macro CXCursor_BinaryOperator\n---include-macro CXCursor_BlockExpr\n---include-macro CXCursor_BreakStmt\n---include-macro CXCursor_BuiltinBitCastExpr\n---include-macro CXCursor_CStyleCastExpr\n---include-macro CXCursor_CUDAConstantAttr\n---include-macro CXCursor_CUDADeviceAttr\n---include-macro CXCursor_CUDAGlobalAttr\n---include-macro CXCursor_CUDAHostAttr\n---include-macro CXCursor_CUDASharedAttr\n---include-macro CXCursor_CXXAccessSpecifier\n---include-macro CXCursor_CXXBaseSpecifier\n---include-macro CXCursor_CXXBoolLiteralExpr\n---include-macro CXCursor_CXXCatchStmt\n---include-macro CXCursor_CXXConstCastExpr\n---include-macro CXCursor_CXXDeleteExpr\n---include-macro CXCursor_CXXDynamicCastExpr\n---include-macro CXCursor_CXXFinalAttr\n---include-macro CXCursor_CXXForRangeStmt\n---include-macro CXCursor_CXXFunctionalCastExpr\n---include-macro CXCursor_CXXMethod\n---include-macro CXCursor_CXXNewExpr\n---include-macro CXCursor_CXXNullPtrLiteralExpr\n---include-macro CXCursor_CXXOverrideAttr\n---include-macro CXCursor_CXXReinterpretCastExpr\n---include-macro CXCursor_CXXStaticCastExpr\n---include-macro CXCursor_CXXThisExpr\n---include-macro CXCursor_CXXThrowExpr\n---include-macro CXCursor_CXXTryStmt\n---include-macro CXCursor_CXXTypeidExpr\n---include-macro CXCursor_CallExpr\n---include-macro CXCursor_CaseStmt\n---include-macro CXCursor_CharacterLiteral\n---include-macro CXCursor_ClassDecl\n---include-macro CXCursor_ClassTemplate\n---include-macro CXCursor_ClassTemplatePartialSpecialization\n---include-macro CXCursor_CompoundAssignOperator\n---include-macro CXCursor_CompoundLiteralExpr\n---include-macro CXCursor_CompoundStmt\n---include-macro CXCursor_ConditionalOperator\n---include-macro CXCursor_ConstAttr\n---include-macro CXCursor_Constructor\n---include-macro CXCursor_ContinueStmt\n---include-macro CXCursor_ConvergentAttr\n---include-macro CXCursor_ConversionFunction\n---include-macro CXCursor_DLLExport\n---include-macro CXCursor_DLLImport\n---include-macro CXCursor_DeclRefExpr\n---include-macro CXCursor_DeclStmt\n---include-macro CXCursor_DefaultStmt\n---include-macro CXCursor_Destructor\n---include-macro CXCursor_DoStmt\n---include-macro CXCursor_EnumConstantDecl\n---include-macro CXCursor_EnumDecl\n---include-macro CXCursor_ExceptionSpecificationKind_BasicNoexcept\n---include-macro CXCursor_ExceptionSpecificationKind_ComputedNoexcept\n---include-macro CXCursor_ExceptionSpecificationKind_Dynamic\n---include-macro CXCursor_ExceptionSpecificationKind_DynamicNone\n---include-macro CXCursor_ExceptionSpecificationKind_MSAny\n---include-macro CXCursor_ExceptionSpecificationKind_NoThrow\n---include-macro CXCursor_ExceptionSpecificationKind_None\n---include-macro CXCursor_ExceptionSpecificationKind_Unevaluated\n---include-macro CXCursor_ExceptionSpecificationKind_Uninstantiated\n---include-macro CXCursor_ExceptionSpecificationKind_Unparsed\n---include-macro CXCursor_FieldDecl\n---include-macro CXCursor_FirstAttr\n---include-macro CXCursor_FirstDecl\n---include-macro CXCursor_FirstExpr\n---include-macro CXCursor_FirstExtraDecl\n---include-macro CXCursor_FirstInvalid\n---include-macro CXCursor_FirstPreprocessing\n---include-macro CXCursor_FirstRef\n---include-macro CXCursor_FirstStmt\n---include-macro CXCursor_FixedPointLiteral\n---include-macro CXCursor_FlagEnum\n---include-macro CXCursor_FloatingLiteral\n---include-macro CXCursor_ForStmt\n---include-macro CXCursor_FriendDecl\n---include-macro CXCursor_FunctionDecl\n---include-macro CXCursor_FunctionTemplate\n---include-macro CXCursor_GCCAsmStmt\n---include-macro CXCursor_GNUNullExpr\n---include-macro CXCursor_GenericSelectionExpr\n---include-macro CXCursor_GotoStmt\n---include-macro CXCursor_IBActionAttr\n---include-macro CXCursor_IBOutletAttr\n---include-macro CXCursor_IBOutletCollectionAttr\n---include-macro CXCursor_IfStmt\n---include-macro CXCursor_ImaginaryLiteral\n---include-macro CXCursor_InclusionDirective\n---include-macro CXCursor_IndirectGotoStmt\n---include-macro CXCursor_InitListExpr\n---include-macro CXCursor_IntegerLiteral\n---include-macro CXCursor_InvalidCode\n---include-macro CXCursor_InvalidFile\n---include-macro CXCursor_LabelRef\n---include-macro CXCursor_LabelStmt\n---include-macro CXCursor_LambdaExpr\n---include-macro CXCursor_LastAttr\n---include-macro CXCursor_LastDecl\n---include-macro CXCursor_LastExpr\n---include-macro CXCursor_LastExtraDecl\n---include-macro CXCursor_LastInvalid\n---include-macro CXCursor_LastPreprocessing\n---include-macro CXCursor_LastRef\n---include-macro CXCursor_LastStmt\n---include-macro CXCursor_LinkageSpec\n---include-macro CXCursor_MSAsmStmt\n---include-macro CXCursor_MacroDefinition\n---include-macro CXCursor_MacroExpansion\n---include-macro CXCursor_MacroInstantiation\n---include-macro CXCursor_MemberRef\n---include-macro CXCursor_MemberRefExpr\n---include-macro CXCursor_ModuleImportDecl\n---include-macro CXCursor_NSConsumed\n---include-macro CXCursor_NSConsumesSelf\n---include-macro CXCursor_NSReturnsAutoreleased\n---include-macro CXCursor_NSReturnsNotRetained\n---include-macro CXCursor_NSReturnsRetained\n---include-macro CXCursor_Namespace\n---include-macro CXCursor_NamespaceAlias\n---include-macro CXCursor_NamespaceRef\n---include-macro CXCursor_NoDeclFound\n---include-macro CXCursor_NoDuplicateAttr\n---include-macro CXCursor_NonTypeTemplateParameter\n---include-macro CXCursor_NotImplemented\n---include-macro CXCursor_NullStmt\n---include-macro CXCursor_OMPArraySectionExpr\n---include-macro CXCursor_OMPAtomicDirective\n---include-macro CXCursor_OMPBarrierDirective\n---include-macro CXCursor_OMPCancelDirective\n---include-macro CXCursor_OMPCancellationPointDirective\n---include-macro CXCursor_OMPCriticalDirective\n---include-macro CXCursor_OMPDistributeDirective\n---include-macro CXCursor_OMPDistributeParallelForDirective\n---include-macro CXCursor_OMPDistributeParallelForSimdDirective\n---include-macro CXCursor_OMPDistributeSimdDirective\n---include-macro CXCursor_OMPFlushDirective\n---include-macro CXCursor_OMPForDirective\n---include-macro CXCursor_OMPForSimdDirective\n---include-macro CXCursor_OMPMasterDirective\n---include-macro CXCursor_OMPMasterTaskLoopDirective\n---include-macro CXCursor_OMPMasterTaskLoopSimdDirective\n---include-macro CXCursor_OMPOrderedDirective\n---include-macro CXCursor_OMPParallelDirective\n---include-macro CXCursor_OMPParallelForDirective\n---include-macro CXCursor_OMPParallelForSimdDirective\n---include-macro CXCursor_OMPParallelMasterTaskLoopDirective\n---include-macro CXCursor_OMPParallelMasterTaskLoopSimdDirective\n---include-macro CXCursor_OMPParallelSectionsDirective\n---include-macro CXCursor_OMPSectionDirective\n---include-macro CXCursor_OMPSectionsDirective\n---include-macro CXCursor_OMPSimdDirective\n---include-macro CXCursor_OMPSingleDirective\n---include-macro CXCursor_OMPTargetDataDirective\n---include-macro CXCursor_OMPTargetDirective\n---include-macro CXCursor_OMPTargetEnterDataDirective\n---include-macro CXCursor_OMPTargetExitDataDirective\n---include-macro CXCursor_OMPTargetParallelDirective\n---include-macro CXCursor_OMPTargetParallelForDirective\n---include-macro CXCursor_OMPTargetParallelForSimdDirective\n---include-macro CXCursor_OMPTargetSimdDirective\n---include-macro CXCursor_OMPTargetTeamsDirective\n---include-macro CXCursor_OMPTargetTeamsDistributeDirective\n---include-macro CXCursor_OMPTargetTeamsDistributeParallelForDirective\n---include-macro CXCursor_OMPTargetTeamsDistributeParallelForSimdDirective\n---include-macro CXCursor_OMPTargetTeamsDistributeSimdDirective\n---include-macro CXCursor_OMPTargetUpdateDirective\n---include-macro CXCursor_OMPTaskDirective\n---include-macro CXCursor_OMPTaskLoopDirective\n---include-macro CXCursor_OMPTaskLoopSimdDirective\n---include-macro CXCursor_OMPTaskgroupDirective\n---include-macro CXCursor_OMPTaskwaitDirective\n---include-macro CXCursor_OMPTaskyieldDirective\n---include-macro CXCursor_OMPTeamsDirective\n---include-macro CXCursor_OMPTeamsDistributeDirective\n---include-macro CXCursor_OMPTeamsDistributeParallelForDirective\n---include-macro CXCursor_OMPTeamsDistributeParallelForSimdDirective\n---include-macro CXCursor_OMPTeamsDistributeSimdDirective\n---include-macro CXCursor_ObjCAtCatchStmt\n---include-macro CXCursor_ObjCAtFinallyStmt\n---include-macro CXCursor_ObjCAtSynchronizedStmt\n---include-macro CXCursor_ObjCAtThrowStmt\n---include-macro CXCursor_ObjCAtTryStmt\n---include-macro CXCursor_ObjCAutoreleasePoolStmt\n---include-macro CXCursor_ObjCAvailabilityCheckExpr\n---include-macro CXCursor_ObjCBoolLiteralExpr\n---include-macro CXCursor_ObjCBoxable\n---include-macro CXCursor_ObjCBridgedCastExpr\n---include-macro CXCursor_ObjCCategoryDecl\n---include-macro CXCursor_ObjCCategoryImplDecl\n---include-macro CXCursor_ObjCClassMethodDecl\n---include-macro CXCursor_ObjCClassRef\n---include-macro CXCursor_ObjCDesignatedInitializer\n---include-macro CXCursor_ObjCDynamicDecl\n---include-macro CXCursor_ObjCEncodeExpr\n---include-macro CXCursor_ObjCException\n---include-macro CXCursor_ObjCExplicitProtocolImpl\n---include-macro CXCursor_ObjCForCollectionStmt\n---include-macro CXCursor_ObjCImplementationDecl\n---include-macro CXCursor_ObjCIndependentClass\n---include-macro CXCursor_ObjCInstanceMethodDecl\n---include-macro CXCursor_ObjCInterfaceDecl\n---include-macro CXCursor_ObjCIvarDecl\n---include-macro CXCursor_ObjCMessageExpr\n---include-macro CXCursor_ObjCNSObject\n---include-macro CXCursor_ObjCPreciseLifetime\n---include-macro CXCursor_ObjCPropertyDecl\n---include-macro CXCursor_ObjCProtocolDecl\n---include-macro CXCursor_ObjCProtocolExpr\n---include-macro CXCursor_ObjCProtocolRef\n---include-macro CXCursor_ObjCRequiresSuper\n---include-macro CXCursor_ObjCReturnsInnerPointer\n---include-macro CXCursor_ObjCRootClass\n---include-macro CXCursor_ObjCRuntimeVisible\n---include-macro CXCursor_ObjCSelectorExpr\n---include-macro CXCursor_ObjCSelfExpr\n---include-macro CXCursor_ObjCStringLiteral\n---include-macro CXCursor_ObjCSubclassingRestricted\n---include-macro CXCursor_ObjCSuperClassRef\n---include-macro CXCursor_ObjCSynthesizeDecl\n---include-macro CXCursor_OverloadCandidate\n---include-macro CXCursor_OverloadedDeclRef\n---include-macro CXCursor_PackExpansionExpr\n---include-macro CXCursor_PackedAttr\n---include-macro CXCursor_ParenExpr\n---include-macro CXCursor_ParmDecl\n---include-macro CXCursor_PreprocessingDirective\n---include-macro CXCursor_PureAttr\n---include-macro CXCursor_ReturnStmt\n---include-macro CXCursor_SEHExceptStmt\n---include-macro CXCursor_SEHFinallyStmt\n---include-macro CXCursor_SEHLeaveStmt\n---include-macro CXCursor_SEHTryStmt\n---include-macro CXCursor_SizeOfPackExpr\n---include-macro CXCursor_StaticAssert\n---include-macro CXCursor_StmtExpr\n---include-macro CXCursor_StringLiteral\n---include-macro CXCursor_StructDecl\n---include-macro CXCursor_SwitchStmt\n---include-macro CXCursor_TemplateRef\n---include-macro CXCursor_TemplateTemplateParameter\n---include-macro CXCursor_TemplateTypeParameter\n---include-macro CXCursor_TranslationUnit\n---include-macro CXCursor_TypeAliasDecl\n---include-macro CXCursor_TypeAliasTemplateDecl\n---include-macro CXCursor_TypeRef\n---include-macro CXCursor_TypedefDecl\n---include-macro CXCursor_UnaryExpr\n---include-macro CXCursor_UnaryOperator\n---include-macro CXCursor_UnexposedAttr\n---include-macro CXCursor_UnexposedDecl\n---include-macro CXCursor_UnexposedExpr\n---include-macro CXCursor_UnexposedStmt\n---include-macro CXCursor_UnionDecl\n---include-macro CXCursor_UsingDeclaration\n---include-macro CXCursor_UsingDirective\n---include-macro CXCursor_VarDecl\n---include-macro CXCursor_VariableRef\n---include-macro CXCursor_VisibilityAttr\n---include-macro CXCursor_WarnUnusedAttr\n---include-macro CXCursor_WarnUnusedResultAttr\n---include-macro CXCursor_WhileStmt\n---include-macro CXDiagnostic_DisplayCategoryId\n---include-macro CXDiagnostic_DisplayCategoryName\n---include-macro CXDiagnostic_DisplayColumn\n---include-macro CXDiagnostic_DisplayOption\n---include-macro CXDiagnostic_DisplaySourceLocation\n---include-macro CXDiagnostic_DisplaySourceRanges\n---include-macro CXDiagnostic_Error\n---include-macro CXDiagnostic_Fatal\n---include-macro CXDiagnostic_Ignored\n---include-macro CXDiagnostic_Note\n---include-macro CXDiagnostic_Warning\n---include-macro CXLanguage_C\n---include-macro CXLanguage_CPlusPlus\n---include-macro CXLanguage_Invalid\n---include-macro CXLanguage_ObjC\n---include-macro CXLinkage_External\n---include-macro CXLinkage_Internal\n---include-macro CXLinkage_Invalid\n---include-macro CXLinkage_NoLinkage\n---include-macro CXLinkage_UniqueExternal\n---include-macro CXPrintingPolicy_Alignof\n---include-macro CXPrintingPolicy_AnonymousTagLocations\n---include-macro CXPrintingPolicy_Bool\n---include-macro CXPrintingPolicy_ConstantArraySizeAsWritten\n---include-macro CXPrintingPolicy_ConstantsAsWritten\n---include-macro CXPrintingPolicy_FullyQualifiedName\n---include-macro CXPrintingPolicy_Half\n---include-macro CXPrintingPolicy_IncludeNewlines\n---include-macro CXPrintingPolicy_IncludeTagDefinition\n---include-macro CXPrintingPolicy_Indentation\n---include-macro CXPrintingPolicy_LastProperty\n---include-macro CXPrintingPolicy_MSVCFormatting\n---include-macro CXPrintingPolicy_MSWChar\n---include-macro CXPrintingPolicy_PolishForDeclaration\n---include-macro CXPrintingPolicy_Restrict\n---include-macro CXPrintingPolicy_SuppressImplicitBase\n---include-macro CXPrintingPolicy_SuppressInitializers\n---include-macro CXPrintingPolicy_SuppressLifetimeQualifiers\n---include-macro CXPrintingPolicy_SuppressScope\n---include-macro CXPrintingPolicy_SuppressSpecifiers\n---include-macro CXPrintingPolicy_SuppressStrongLifetime\n---include-macro CXPrintingPolicy_SuppressTagKeyword\n---include-macro CXPrintingPolicy_SuppressTemplateArgsInCXXConstructors\n---include-macro CXPrintingPolicy_SuppressUnwrittenScope\n---include-macro CXPrintingPolicy_TerseOutput\n---include-macro CXPrintingPolicy_UnderscoreAlignof\n---include-macro CXPrintingPolicy_UseVoidForZeroParams\n---include-macro CXReparse_None\n---include-macro CXResult_Invalid\n---include-macro CXResult_Success\n---include-macro CXResult_VisitBreak\n---include-macro CXSaveError_InvalidTU\n---include-macro CXSaveError_None\n---include-macro CXSaveError_TranslationErrors\n---include-macro CXSaveError_Unknown\n---include-macro CXSaveTranslationUnit_None\n---include-macro CXToken_Comment\n---include-macro CXToken_Identifier\n---include-macro CXToken_Keyword\n---include-macro CXToken_Literal\n---include-macro CXToken_Punctuation\n---include-macro CXTranslationUnit_CXXChainedPCH\n---include-macro CXTranslationUnit_CacheCompletionResults\n---include-macro CXTranslationUnit_CreatePreambleOnFirstParse\n---include-macro CXTranslationUnit_DetailedPreprocessingRecord\n---include-macro CXTranslationUnit_ForSerialization\n---include-macro CXTranslationUnit_IgnoreNonErrorsFromIncludedFiles\n---include-macro CXTranslationUnit_IncludeAttributedTypes\n---include-macro CXTranslationUnit_IncludeBriefCommentsInCodeCompletion\n---include-macro CXTranslationUnit_Incomplete\n---include-macro CXTranslationUnit_KeepGoing\n---include-macro CXTranslationUnit_LimitSkipFunctionBodiesToPreamble\n---include-macro CXTranslationUnit_None\n---include-macro CXTranslationUnit_PrecompiledPreamble\n---include-macro CXTranslationUnit_RetainExcludedConditionalBlocks\n---include-macro CXTranslationUnit_SingleFileParse\n---include-macro CXTranslationUnit_SkipFunctionBodies\n---include-macro CXTranslationUnit_VisitImplicitAttributes\n---include-macro CXTypeLayoutError_Dependent\n---include-macro CXTypeLayoutError_Incomplete\n---include-macro CXTypeLayoutError_Invalid\n---include-macro CXTypeLayoutError_InvalidFieldName\n---include-macro CXTypeLayoutError_NotConstantSize\n---include-macro CXTypeLayoutError_Undeduced\n---include-macro CXTypeNullability_Invalid\n---include-macro CXTypeNullability_NonNull\n---include-macro CXTypeNullability_Nullable\n---include-macro CXTypeNullability_Unspecified\n---include-macro CXType_Accum\n---include-macro CXType_Attributed\n---include-macro CXType_Auto\n---include-macro CXType_BlockPointer\n---include-macro CXType_Bool\n---include-macro CXType_Char16\n---include-macro CXType_Char32\n---include-macro CXType_Char_S\n---include-macro CXType_Char_U\n---include-macro CXType_Complex\n---include-macro CXType_ConstantArray\n---include-macro CXType_Dependent\n---include-macro CXType_DependentSizedArray\n---include-macro CXType_Double\n---include-macro CXType_Elaborated\n---include-macro CXType_Enum\n---include-macro CXType_ExtVector\n---include-macro CXType_FirstBuiltin\n---include-macro CXType_Float\n---include-macro CXType_Float128\n---include-macro CXType_Float16\n---include-macro CXType_FunctionNoProto\n---include-macro CXType_FunctionProto\n---include-macro CXType_Half\n---include-macro CXType_IncompleteArray\n---include-macro CXType_Int\n---include-macro CXType_Int128\n---include-macro CXType_Invalid\n---include-macro CXType_LValueReference\n---include-macro CXType_LastBuiltin\n---include-macro CXType_Long\n---include-macro CXType_LongAccum\n---include-macro CXType_LongDouble\n---include-macro CXType_LongLong\n---include-macro CXType_MemberPointer\n---include-macro CXType_NullPtr\n---include-macro CXType_OCLEvent\n---include-macro CXType_OCLImage1dArrayRO\n---include-macro CXType_OCLImage1dArrayRW\n---include-macro CXType_OCLImage1dArrayWO\n---include-macro CXType_OCLImage1dBufferRO\n---include-macro CXType_OCLImage1dBufferRW\n---include-macro CXType_OCLImage1dBufferWO\n---include-macro CXType_OCLImage1dRO\n---include-macro CXType_OCLImage1dRW\n---include-macro CXType_OCLImage1dWO\n---include-macro CXType_OCLImage2dArrayDepthRO\n---include-macro CXType_OCLImage2dArrayDepthRW\n---include-macro CXType_OCLImage2dArrayDepthWO\n---include-macro CXType_OCLImage2dArrayMSAADepthRO\n---include-macro CXType_OCLImage2dArrayMSAADepthRW\n---include-macro CXType_OCLImage2dArrayMSAADepthWO\n---include-macro CXType_OCLImage2dArrayMSAARO\n---include-macro CXType_OCLImage2dArrayMSAARW\n---include-macro CXType_OCLImage2dArrayMSAAWO\n---include-macro CXType_OCLImage2dArrayRO\n---include-macro CXType_OCLImage2dArrayRW\n---include-macro CXType_OCLImage2dArrayWO\n---include-macro CXType_OCLImage2dDepthRO\n---include-macro CXType_OCLImage2dDepthRW\n---include-macro CXType_OCLImage2dDepthWO\n---include-macro CXType_OCLImage2dMSAADepthRO\n---include-macro CXType_OCLImage2dMSAADepthRW\n---include-macro CXType_OCLImage2dMSAADepthWO\n---include-macro CXType_OCLImage2dMSAARO\n---include-macro CXType_OCLImage2dMSAARW\n---include-macro CXType_OCLImage2dMSAAWO\n---include-macro CXType_OCLImage2dRO\n---include-macro CXType_OCLImage2dRW\n---include-macro CXType_OCLImage2dWO\n---include-macro CXType_OCLImage3dRO\n---include-macro CXType_OCLImage3dRW\n---include-macro CXType_OCLImage3dWO\n---include-macro CXType_OCLIntelSubgroupAVCImeDualRefStreamin\n---include-macro CXType_OCLIntelSubgroupAVCImePayload\n---include-macro CXType_OCLIntelSubgroupAVCImeResult\n---include-macro CXType_OCLIntelSubgroupAVCImeResultDualRefStreamout\n---include-macro CXType_OCLIntelSubgroupAVCImeResultSingleRefStreamout\n---include-macro CXType_OCLIntelSubgroupAVCImeSingleRefStreamin\n---include-macro CXType_OCLIntelSubgroupAVCMcePayload\n---include-macro CXType_OCLIntelSubgroupAVCMceResult\n---include-macro CXType_OCLIntelSubgroupAVCRefPayload\n---include-macro CXType_OCLIntelSubgroupAVCRefResult\n---include-macro CXType_OCLIntelSubgroupAVCSicPayload\n---include-macro CXType_OCLIntelSubgroupAVCSicResult\n---include-macro CXType_OCLQueue\n---include-macro CXType_OCLReserveID\n---include-macro CXType_OCLSampler\n---include-macro CXType_ObjCClass\n---include-macro CXType_ObjCId\n---include-macro CXType_ObjCInterface\n---include-macro CXType_ObjCObject\n---include-macro CXType_ObjCObjectPointer\n---include-macro CXType_ObjCSel\n---include-macro CXType_ObjCTypeParam\n---include-macro CXType_Overload\n---include-macro CXType_Pipe\n---include-macro CXType_Pointer\n---include-macro CXType_RValueReference\n---include-macro CXType_Record\n---include-macro CXType_SChar\n---include-macro CXType_Short\n---include-macro CXType_ShortAccum\n---include-macro CXType_Typedef\n---include-macro CXType_UAccum\n---include-macro CXType_UChar\n---include-macro CXType_UInt\n---include-macro CXType_UInt128\n---include-macro CXType_ULong\n---include-macro CXType_ULongAccum\n---include-macro CXType_ULongLong\n---include-macro CXType_UShort\n---include-macro CXType_UShortAccum\n---include-macro CXType_Unexposed\n---include-macro CXType_VariableArray\n---include-macro CXType_Vector\n---include-macro CXType_Void\n---include-macro CXType_WChar\n+--include-constant CXCallingConv_AAPCS\n+--include-constant CXCallingConv_AAPCS_VFP\n+--include-constant CXCallingConv_AArch64VectorCall\n+--include-constant CXCallingConv_C\n+--include-constant CXCallingConv_Default\n+--include-constant CXCallingConv_IntelOclBicc\n+--include-constant CXCallingConv_Invalid\n+--include-constant CXCallingConv_PreserveAll\n+--include-constant CXCallingConv_PreserveMost\n+--include-constant CXCallingConv_Swift\n+--include-constant CXCallingConv_Unexposed\n+--include-constant CXCallingConv_Win64\n+--include-constant CXCallingConv_X86FastCall\n+--include-constant CXCallingConv_X86Pascal\n+--include-constant CXCallingConv_X86RegCall\n+--include-constant CXCallingConv_X86StdCall\n+--include-constant CXCallingConv_X86ThisCall\n+--include-constant CXCallingConv_X86VectorCall\n+--include-constant CXCallingConv_X86_64SysV\n+--include-constant CXCallingConv_X86_64Win64\n+--include-constant CXChildVisit_Break\n+--include-constant CXChildVisit_Continue\n+--include-constant CXChildVisit_Recurse\n+--include-constant CXCursor_AddrLabelExpr\n+--include-constant CXCursor_AlignedAttr\n+--include-constant CXCursor_AnnotateAttr\n+--include-constant CXCursor_ArraySubscriptExpr\n+--include-constant CXCursor_AsmLabelAttr\n+--include-constant CXCursor_AsmStmt\n+--include-constant CXCursor_BinaryOperator\n+--include-constant CXCursor_BlockExpr\n+--include-constant CXCursor_BreakStmt\n+--include-constant CXCursor_BuiltinBitCastExpr\n+--include-constant CXCursor_CStyleCastExpr\n+--include-constant CXCursor_CUDAConstantAttr\n+--include-constant CXCursor_CUDADeviceAttr\n+--include-constant CXCursor_CUDAGlobalAttr\n+--include-constant CXCursor_CUDAHostAttr\n+--include-constant CXCursor_CUDASharedAttr\n+--include-constant CXCursor_CXXAccessSpecifier\n+--include-constant CXCursor_CXXBaseSpecifier\n+--include-constant CXCursor_CXXBoolLiteralExpr\n+--include-constant CXCursor_CXXCatchStmt\n+--include-constant CXCursor_CXXConstCastExpr\n+--include-constant CXCursor_CXXDeleteExpr\n+--include-constant CXCursor_CXXDynamicCastExpr\n+--include-constant CXCursor_CXXFinalAttr\n+--include-constant CXCursor_CXXForRangeStmt\n+--include-constant CXCursor_CXXFunctionalCastExpr\n+--include-constant CXCursor_CXXMethod\n+--include-constant CXCursor_CXXNewExpr\n+--include-constant CXCursor_CXXNullPtrLiteralExpr\n+--include-constant CXCursor_CXXOverrideAttr\n+--include-constant CXCursor_CXXReinterpretCastExpr\n+--include-constant CXCursor_CXXStaticCastExpr\n+--include-constant CXCursor_CXXThisExpr\n+--include-constant CXCursor_CXXThrowExpr\n+--include-constant CXCursor_CXXTryStmt\n+--include-constant CXCursor_CXXTypeidExpr\n+--include-constant CXCursor_CallExpr\n+--include-constant CXCursor_CaseStmt\n+--include-constant CXCursor_CharacterLiteral\n+--include-constant CXCursor_ClassDecl\n+--include-constant CXCursor_ClassTemplate\n+--include-constant CXCursor_ClassTemplatePartialSpecialization\n+--include-constant CXCursor_CompoundAssignOperator\n+--include-constant CXCursor_CompoundLiteralExpr\n+--include-constant CXCursor_CompoundStmt\n+--include-constant CXCursor_ConditionalOperator\n+--include-constant CXCursor_ConstAttr\n+--include-constant CXCursor_Constructor\n+--include-constant CXCursor_ContinueStmt\n+--include-constant CXCursor_ConvergentAttr\n+--include-constant CXCursor_ConversionFunction\n+--include-constant CXCursor_DLLExport\n+--include-constant CXCursor_DLLImport\n+--include-constant CXCursor_DeclRefExpr\n+--include-constant CXCursor_DeclStmt\n+--include-constant CXCursor_DefaultStmt\n+--include-constant CXCursor_Destructor\n+--include-constant CXCursor_DoStmt\n+--include-constant CXCursor_EnumConstantDecl\n+--include-constant CXCursor_EnumDecl\n+--include-constant CXCursor_ExceptionSpecificationKind_BasicNoexcept\n+--include-constant CXCursor_ExceptionSpecificationKind_ComputedNoexcept\n+--include-constant CXCursor_ExceptionSpecificationKind_Dynamic\n+--include-constant CXCursor_ExceptionSpecificationKind_DynamicNone\n+--include-constant CXCursor_ExceptionSpecificationKind_MSAny\n+--include-constant CXCursor_ExceptionSpecificationKind_NoThrow\n+--include-constant CXCursor_ExceptionSpecificationKind_None\n+--include-constant CXCursor_ExceptionSpecificationKind_Unevaluated\n+--include-constant CXCursor_ExceptionSpecificationKind_Uninstantiated\n+--include-constant CXCursor_ExceptionSpecificationKind_Unparsed\n+--include-constant CXCursor_FieldDecl\n+--include-constant CXCursor_FirstAttr\n+--include-constant CXCursor_FirstDecl\n+--include-constant CXCursor_FirstExpr\n+--include-constant CXCursor_FirstExtraDecl\n+--include-constant CXCursor_FirstInvalid\n+--include-constant CXCursor_FirstPreprocessing\n+--include-constant CXCursor_FirstRef\n+--include-constant CXCursor_FirstStmt\n+--include-constant CXCursor_FixedPointLiteral\n+--include-constant CXCursor_FlagEnum\n+--include-constant CXCursor_FloatingLiteral\n+--include-constant CXCursor_ForStmt\n+--include-constant CXCursor_FriendDecl\n+--include-constant CXCursor_FunctionDecl\n+--include-constant CXCursor_FunctionTemplate\n+--include-constant CXCursor_GCCAsmStmt\n+--include-constant CXCursor_GNUNullExpr\n+--include-constant CXCursor_GenericSelectionExpr\n+--include-constant CXCursor_GotoStmt\n+--include-constant CXCursor_IBActionAttr\n+--include-constant CXCursor_IBOutletAttr\n+--include-constant CXCursor_IBOutletCollectionAttr\n+--include-constant CXCursor_IfStmt\n+--include-constant CXCursor_ImaginaryLiteral\n+--include-constant CXCursor_InclusionDirective\n+--include-constant CXCursor_IndirectGotoStmt\n+--include-constant CXCursor_InitListExpr\n+--include-constant CXCursor_IntegerLiteral\n+--include-constant CXCursor_InvalidCode\n+--include-constant CXCursor_InvalidFile\n+--include-constant CXCursor_LabelRef\n+--include-constant CXCursor_LabelStmt\n+--include-constant CXCursor_LambdaExpr\n+--include-constant CXCursor_LastAttr\n+--include-constant CXCursor_LastDecl\n+--include-constant CXCursor_LastExpr\n+--include-constant CXCursor_LastExtraDecl\n+--include-constant CXCursor_LastInvalid\n+--include-constant CXCursor_LastPreprocessing\n+--include-constant CXCursor_LastRef\n+--include-constant CXCursor_LastStmt\n+--include-constant CXCursor_LinkageSpec\n+--include-constant CXCursor_MSAsmStmt\n+--include-constant CXCursor_MacroDefinition\n+--include-constant CXCursor_MacroExpansion\n+--include-constant CXCursor_MacroInstantiation\n+--include-constant CXCursor_MemberRef\n+--include-constant CXCursor_MemberRefExpr\n+--include-constant CXCursor_ModuleImportDecl\n+--include-constant CXCursor_NSConsumed\n+--include-constant CXCursor_NSConsumesSelf\n+--include-constant CXCursor_NSReturnsAutoreleased\n+--include-constant CXCursor_NSReturnsNotRetained\n+--include-constant CXCursor_NSReturnsRetained\n+--include-constant CXCursor_Namespace\n+--include-constant CXCursor_NamespaceAlias\n+--include-constant CXCursor_NamespaceRef\n+--include-constant CXCursor_NoDeclFound\n+--include-constant CXCursor_NoDuplicateAttr\n+--include-constant CXCursor_NonTypeTemplateParameter\n+--include-constant CXCursor_NotImplemented\n+--include-constant CXCursor_NullStmt\n+--include-constant CXCursor_OMPArraySectionExpr\n+--include-constant CXCursor_OMPAtomicDirective\n+--include-constant CXCursor_OMPBarrierDirective\n+--include-constant CXCursor_OMPCancelDirective\n+--include-constant CXCursor_OMPCancellationPointDirective\n+--include-constant CXCursor_OMPCriticalDirective\n+--include-constant CXCursor_OMPDistributeDirective\n+--include-constant CXCursor_OMPDistributeParallelForDirective\n+--include-constant CXCursor_OMPDistributeParallelForSimdDirective\n+--include-constant CXCursor_OMPDistributeSimdDirective\n+--include-constant CXCursor_OMPFlushDirective\n+--include-constant CXCursor_OMPForDirective\n+--include-constant CXCursor_OMPForSimdDirective\n+--include-constant CXCursor_OMPMasterDirective\n+--include-constant CXCursor_OMPMasterTaskLoopDirective\n+--include-constant CXCursor_OMPMasterTaskLoopSimdDirective\n+--include-constant CXCursor_OMPOrderedDirective\n+--include-constant CXCursor_OMPParallelDirective\n+--include-constant CXCursor_OMPParallelForDirective\n+--include-constant CXCursor_OMPParallelForSimdDirective\n+--include-constant CXCursor_OMPParallelMasterTaskLoopDirective\n+--include-constant CXCursor_OMPParallelMasterTaskLoopSimdDirective\n+--include-constant CXCursor_OMPParallelSectionsDirective\n+--include-constant CXCursor_OMPSectionDirective\n+--include-constant CXCursor_OMPSectionsDirective\n+--include-constant CXCursor_OMPSimdDirective\n+--include-constant CXCursor_OMPSingleDirective\n+--include-constant CXCursor_OMPTargetDataDirective\n+--include-constant CXCursor_OMPTargetDirective\n+--include-constant CXCursor_OMPTargetEnterDataDirective\n+--include-constant CXCursor_OMPTargetExitDataDirective\n+--include-constant CXCursor_OMPTargetParallelDirective\n+--include-constant CXCursor_OMPTargetParallelForDirective\n+--include-constant CXCursor_OMPTargetParallelForSimdDirective\n+--include-constant CXCursor_OMPTargetSimdDirective\n+--include-constant CXCursor_OMPTargetTeamsDirective\n+--include-constant CXCursor_OMPTargetTeamsDistributeDirective\n+--include-constant CXCursor_OMPTargetTeamsDistributeParallelForDirective\n+--include-constant CXCursor_OMPTargetTeamsDistributeParallelForSimdDirective\n+--include-constant CXCursor_OMPTargetTeamsDistributeSimdDirective\n+--include-constant CXCursor_OMPTargetUpdateDirective\n+--include-constant CXCursor_OMPTaskDirective\n+--include-constant CXCursor_OMPTaskLoopDirective\n+--include-constant CXCursor_OMPTaskLoopSimdDirective\n+--include-constant CXCursor_OMPTaskgroupDirective\n+--include-constant CXCursor_OMPTaskwaitDirective\n+--include-constant CXCursor_OMPTaskyieldDirective\n+--include-constant CXCursor_OMPTeamsDirective\n+--include-constant CXCursor_OMPTeamsDistributeDirective\n+--include-constant CXCursor_OMPTeamsDistributeParallelForDirective\n+--include-constant CXCursor_OMPTeamsDistributeParallelForSimdDirective\n+--include-constant CXCursor_OMPTeamsDistributeSimdDirective\n+--include-constant CXCursor_ObjCAtCatchStmt\n+--include-constant CXCursor_ObjCAtFinallyStmt\n+--include-constant CXCursor_ObjCAtSynchronizedStmt\n+--include-constant CXCursor_ObjCAtThrowStmt\n+--include-constant CXCursor_ObjCAtTryStmt\n+--include-constant CXCursor_ObjCAutoreleasePoolStmt\n+--include-constant CXCursor_ObjCAvailabilityCheckExpr\n+--include-constant CXCursor_ObjCBoolLiteralExpr\n+--include-constant CXCursor_ObjCBoxable\n+--include-constant CXCursor_ObjCBridgedCastExpr\n+--include-constant CXCursor_ObjCCategoryDecl\n+--include-constant CXCursor_ObjCCategoryImplDecl\n+--include-constant CXCursor_ObjCClassMethodDecl\n+--include-constant CXCursor_ObjCClassRef\n+--include-constant CXCursor_ObjCDesignatedInitializer\n+--include-constant CXCursor_ObjCDynamicDecl\n+--include-constant CXCursor_ObjCEncodeExpr\n+--include-constant CXCursor_ObjCException\n+--include-constant CXCursor_ObjCExplicitProtocolImpl\n+--include-constant CXCursor_ObjCForCollectionStmt\n+--include-constant CXCursor_ObjCImplementationDecl\n+--include-constant CXCursor_ObjCIndependentClass\n+--include-constant CXCursor_ObjCInstanceMethodDecl\n+--include-constant CXCursor_ObjCInterfaceDecl\n+--include-constant CXCursor_ObjCIvarDecl\n+--include-constant CXCursor_ObjCMessageExpr\n+--include-constant CXCursor_ObjCNSObject\n+--include-constant CXCursor_ObjCPreciseLifetime\n+--include-constant CXCursor_ObjCPropertyDecl\n+--include-constant CXCursor_ObjCProtocolDecl\n+--include-constant CXCursor_ObjCProtocolExpr\n+--include-constant CXCursor_ObjCProtocolRef\n+--include-constant CXCursor_ObjCRequiresSuper\n+--include-constant CXCursor_ObjCReturnsInnerPointer\n+--include-constant CXCursor_ObjCRootClass\n+--include-constant CXCursor_ObjCRuntimeVisible\n+--include-constant CXCursor_ObjCSelectorExpr\n+--include-constant CXCursor_ObjCSelfExpr\n+--include-constant CXCursor_ObjCStringLiteral\n+--include-constant CXCursor_ObjCSubclassingRestricted\n+--include-constant CXCursor_ObjCSuperClassRef\n+--include-constant CXCursor_ObjCSynthesizeDecl\n+--include-constant CXCursor_OverloadCandidate\n+--include-constant CXCursor_OverloadedDeclRef\n+--include-constant CXCursor_PackExpansionExpr\n+--include-constant CXCursor_PackedAttr\n+--include-constant CXCursor_ParenExpr\n+--include-constant CXCursor_ParmDecl\n+--include-constant CXCursor_PreprocessingDirective\n+--include-constant CXCursor_PureAttr\n+--include-constant CXCursor_ReturnStmt\n+--include-constant CXCursor_SEHExceptStmt\n+--include-constant CXCursor_SEHFinallyStmt\n+--include-constant CXCursor_SEHLeaveStmt\n+--include-constant CXCursor_SEHTryStmt\n+--include-constant CXCursor_SizeOfPackExpr\n+--include-constant CXCursor_StaticAssert\n+--include-constant CXCursor_StmtExpr\n+--include-constant CXCursor_StringLiteral\n+--include-constant CXCursor_StructDecl\n+--include-constant CXCursor_SwitchStmt\n+--include-constant CXCursor_TemplateRef\n+--include-constant CXCursor_TemplateTemplateParameter\n+--include-constant CXCursor_TemplateTypeParameter\n+--include-constant CXCursor_TranslationUnit\n+--include-constant CXCursor_TypeAliasDecl\n+--include-constant CXCursor_TypeAliasTemplateDecl\n+--include-constant CXCursor_TypeRef\n+--include-constant CXCursor_TypedefDecl\n+--include-constant CXCursor_UnaryExpr\n+--include-constant CXCursor_UnaryOperator\n+--include-constant CXCursor_UnexposedAttr\n+--include-constant CXCursor_UnexposedDecl\n+--include-constant CXCursor_UnexposedExpr\n+--include-constant CXCursor_UnexposedStmt\n+--include-constant CXCursor_UnionDecl\n+--include-constant CXCursor_UsingDeclaration\n+--include-constant CXCursor_UsingDirective\n+--include-constant CXCursor_VarDecl\n+--include-constant CXCursor_VariableRef\n+--include-constant CXCursor_VisibilityAttr\n+--include-constant CXCursor_WarnUnusedAttr\n+--include-constant CXCursor_WarnUnusedResultAttr\n+--include-constant CXCursor_WhileStmt\n+--include-constant CXDiagnostic_DisplayCategoryId\n+--include-constant CXDiagnostic_DisplayCategoryName\n+--include-constant CXDiagnostic_DisplayColumn\n+--include-constant CXDiagnostic_DisplayOption\n+--include-constant CXDiagnostic_DisplaySourceLocation\n+--include-constant CXDiagnostic_DisplaySourceRanges\n+--include-constant CXDiagnostic_Error\n+--include-constant CXDiagnostic_Fatal\n+--include-constant CXDiagnostic_Ignored\n+--include-constant CXDiagnostic_Note\n+--include-constant CXDiagnostic_Warning\n+--include-constant CXLanguage_C\n+--include-constant CXLanguage_CPlusPlus\n+--include-constant CXLanguage_Invalid\n+--include-constant CXLanguage_ObjC\n+--include-constant CXLinkage_External\n+--include-constant CXLinkage_Internal\n+--include-constant CXLinkage_Invalid\n+--include-constant CXLinkage_NoLinkage\n+--include-constant CXLinkage_UniqueExternal\n+--include-constant CXPrintingPolicy_Alignof\n+--include-constant CXPrintingPolicy_AnonymousTagLocations\n+--include-constant CXPrintingPolicy_Bool\n+--include-constant CXPrintingPolicy_ConstantArraySizeAsWritten\n+--include-constant CXPrintingPolicy_ConstantsAsWritten\n+--include-constant CXPrintingPolicy_FullyQualifiedName\n+--include-constant CXPrintingPolicy_Half\n+--include-constant CXPrintingPolicy_IncludeNewlines\n+--include-constant CXPrintingPolicy_IncludeTagDefinition\n+--include-constant CXPrintingPolicy_Indentation\n+--include-constant CXPrintingPolicy_LastProperty\n+--include-constant CXPrintingPolicy_MSVCFormatting\n+--include-constant CXPrintingPolicy_MSWChar\n+--include-constant CXPrintingPolicy_PolishForDeclaration\n+--include-constant CXPrintingPolicy_Restrict\n+--include-constant CXPrintingPolicy_SuppressImplicitBase\n+--include-constant CXPrintingPolicy_SuppressInitializers\n+--include-constant CXPrintingPolicy_SuppressLifetimeQualifiers\n+--include-constant CXPrintingPolicy_SuppressScope\n+--include-constant CXPrintingPolicy_SuppressSpecifiers\n+--include-constant CXPrintingPolicy_SuppressStrongLifetime\n+--include-constant CXPrintingPolicy_SuppressTagKeyword\n+--include-constant CXPrintingPolicy_SuppressTemplateArgsInCXXConstructors\n+--include-constant CXPrintingPolicy_SuppressUnwrittenScope\n+--include-constant CXPrintingPolicy_TerseOutput\n+--include-constant CXPrintingPolicy_UnderscoreAlignof\n+--include-constant CXPrintingPolicy_UseVoidForZeroParams\n+--include-constant CXReparse_None\n+--include-constant CXResult_Invalid\n+--include-constant CXResult_Success\n+--include-constant CXResult_VisitBreak\n+--include-constant CXSaveError_InvalidTU\n+--include-constant CXSaveError_None\n+--include-constant CXSaveError_TranslationErrors\n+--include-constant CXSaveError_Unknown\n+--include-constant CXSaveTranslationUnit_None\n+--include-constant CXToken_Comment\n+--include-constant CXToken_Identifier\n+--include-constant CXToken_Keyword\n+--include-constant CXToken_Literal\n+--include-constant CXToken_Punctuation\n+--include-constant CXTranslationUnit_CXXChainedPCH\n+--include-constant CXTranslationUnit_CacheCompletionResults\n+--include-constant CXTranslationUnit_CreatePreambleOnFirstParse\n+--include-constant CXTranslationUnit_DetailedPreprocessingRecord\n+--include-constant CXTranslationUnit_ForSerialization\n+--include-constant CXTranslationUnit_IgnoreNonErrorsFromIncludedFiles\n+--include-constant CXTranslationUnit_IncludeAttributedTypes\n+--include-constant CXTranslationUnit_IncludeBriefCommentsInCodeCompletion\n+--include-constant CXTranslationUnit_Incomplete\n+--include-constant CXTranslationUnit_KeepGoing\n+--include-constant CXTranslationUnit_LimitSkipFunctionBodiesToPreamble\n+--include-constant CXTranslationUnit_None\n+--include-constant CXTranslationUnit_PrecompiledPreamble\n+--include-constant CXTranslationUnit_RetainExcludedConditionalBlocks\n+--include-constant CXTranslationUnit_SingleFileParse\n+--include-constant CXTranslationUnit_SkipFunctionBodies\n+--include-constant CXTranslationUnit_VisitImplicitAttributes\n+--include-constant CXTypeLayoutError_Dependent\n+--include-constant CXTypeLayoutError_Incomplete\n+--include-constant CXTypeLayoutError_Invalid\n+--include-constant CXTypeLayoutError_InvalidFieldName\n+--include-constant CXTypeLayoutError_NotConstantSize\n+--include-constant CXTypeLayoutError_Undeduced\n+--include-constant CXTypeNullability_Invalid\n+--include-constant CXTypeNullability_NonNull\n+--include-constant CXTypeNullability_Nullable\n+--include-constant CXTypeNullability_Unspecified\n+--include-constant CXType_Accum\n+--include-constant CXType_Attributed\n+--include-constant CXType_Auto\n+--include-constant CXType_BlockPointer\n+--include-constant CXType_Bool\n+--include-constant CXType_Char16\n+--include-constant CXType_Char32\n+--include-constant CXType_Char_S\n+--include-constant CXType_Char_U\n+--include-constant CXType_Complex\n+--include-constant CXType_ConstantArray\n+--include-constant CXType_Dependent\n+--include-constant CXType_DependentSizedArray\n+--include-constant CXType_Double\n+--include-constant CXType_Elaborated\n+--include-constant CXType_Enum\n+--include-constant CXType_ExtVector\n+--include-constant CXType_FirstBuiltin\n+--include-constant CXType_Float\n+--include-constant CXType_Float128\n+--include-constant CXType_Float16\n+--include-constant CXType_FunctionNoProto\n+--include-constant CXType_FunctionProto\n+--include-constant CXType_Half\n+--include-constant CXType_IncompleteArray\n+--include-constant CXType_Int\n+--include-constant CXType_Int128\n+--include-constant CXType_Invalid\n+--include-constant CXType_LValueReference\n+--include-constant CXType_LastBuiltin\n+--include-constant CXType_Long\n+--include-constant CXType_LongAccum\n+--include-constant CXType_LongDouble\n+--include-constant CXType_LongLong\n+--include-constant CXType_MemberPointer\n+--include-constant CXType_NullPtr\n+--include-constant CXType_OCLEvent\n+--include-constant CXType_OCLImage1dArrayRO\n+--include-constant CXType_OCLImage1dArrayRW\n+--include-constant CXType_OCLImage1dArrayWO\n+--include-constant CXType_OCLImage1dBufferRO\n+--include-constant CXType_OCLImage1dBufferRW\n+--include-constant CXType_OCLImage1dBufferWO\n+--include-constant CXType_OCLImage1dRO\n+--include-constant CXType_OCLImage1dRW\n+--include-constant CXType_OCLImage1dWO\n+--include-constant CXType_OCLImage2dArrayDepthRO\n+--include-constant CXType_OCLImage2dArrayDepthRW\n+--include-constant CXType_OCLImage2dArrayDepthWO\n+--include-constant CXType_OCLImage2dArrayMSAADepthRO\n+--include-constant CXType_OCLImage2dArrayMSAADepthRW\n+--include-constant CXType_OCLImage2dArrayMSAADepthWO\n+--include-constant CXType_OCLImage2dArrayMSAARO\n+--include-constant CXType_OCLImage2dArrayMSAARW\n+--include-constant CXType_OCLImage2dArrayMSAAWO\n+--include-constant CXType_OCLImage2dArrayRO\n+--include-constant CXType_OCLImage2dArrayRW\n+--include-constant CXType_OCLImage2dArrayWO\n+--include-constant CXType_OCLImage2dDepthRO\n+--include-constant CXType_OCLImage2dDepthRW\n+--include-constant CXType_OCLImage2dDepthWO\n+--include-constant CXType_OCLImage2dMSAADepthRO\n+--include-constant CXType_OCLImage2dMSAADepthRW\n+--include-constant CXType_OCLImage2dMSAADepthWO\n+--include-constant CXType_OCLImage2dMSAARO\n+--include-constant CXType_OCLImage2dMSAARW\n+--include-constant CXType_OCLImage2dMSAAWO\n+--include-constant CXType_OCLImage2dRO\n+--include-constant CXType_OCLImage2dRW\n+--include-constant CXType_OCLImage2dWO\n+--include-constant CXType_OCLImage3dRO\n+--include-constant CXType_OCLImage3dRW\n+--include-constant CXType_OCLImage3dWO\n+--include-constant CXType_OCLIntelSubgroupAVCImeDualRefStreamin\n+--include-constant CXType_OCLIntelSubgroupAVCImePayload\n+--include-constant CXType_OCLIntelSubgroupAVCImeResult\n+--include-constant CXType_OCLIntelSubgroupAVCImeResultDualRefStreamout\n+--include-constant CXType_OCLIntelSubgroupAVCImeResultSingleRefStreamout\n+--include-constant CXType_OCLIntelSubgroupAVCImeSingleRefStreamin\n+--include-constant CXType_OCLIntelSubgroupAVCMcePayload\n+--include-constant CXType_OCLIntelSubgroupAVCMceResult\n+--include-constant CXType_OCLIntelSubgroupAVCRefPayload\n+--include-constant CXType_OCLIntelSubgroupAVCRefResult\n+--include-constant CXType_OCLIntelSubgroupAVCSicPayload\n+--include-constant CXType_OCLIntelSubgroupAVCSicResult\n+--include-constant CXType_OCLQueue\n+--include-constant CXType_OCLReserveID\n+--include-constant CXType_OCLSampler\n+--include-constant CXType_ObjCClass\n+--include-constant CXType_ObjCId\n+--include-constant CXType_ObjCInterface\n+--include-constant CXType_ObjCObject\n+--include-constant CXType_ObjCObjectPointer\n+--include-constant CXType_ObjCSel\n+--include-constant CXType_ObjCTypeParam\n+--include-constant CXType_Overload\n+--include-constant CXType_Pipe\n+--include-constant CXType_Pointer\n+--include-constant CXType_RValueReference\n+--include-constant CXType_Record\n+--include-constant CXType_SChar\n+--include-constant CXType_Short\n+--include-constant CXType_ShortAccum\n+--include-constant CXType_Typedef\n+--include-constant CXType_UAccum\n+--include-constant CXType_UChar\n+--include-constant CXType_UInt\n+--include-constant CXType_UInt128\n+--include-constant CXType_ULong\n+--include-constant CXType_ULongAccum\n+--include-constant CXType_ULongLong\n+--include-constant CXType_UShort\n+--include-constant CXType_UShortAccum\n+--include-constant CXType_Unexposed\n+--include-constant CXType_VariableArray\n+--include-constant CXType_Vector\n+--include-constant CXType_Void\n+--include-constant CXType_WChar\n","filename":"updateclang\/clang.symbols","additions":503,"deletions":503,"binary":false,"changes":1006,"status":"modified"}]}