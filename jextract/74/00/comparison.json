{"files":[{"patch":"@@ -0,0 +1,57 @@\n+FROM ubuntu:22.10 AS builder\n+\n+# Allow configuring JDK version\n+# COMPILE_VERSION will be used with the gradle build task\n+# RUNTIME_VERSION will be passed to the \"-Pjdk19_home\" gradle property\n+ARG SDKMAN_JAVA_COMPILE_VERSION=17-open\n+ARG SDKMAN_JAVA_RUNTIME_VERSION=19-open\n+\n+# Allow configuring LLVM download URL\n+ARG LLVM_DOWNLOAD_URL=https:\/\/github.com\/llvm\/llvm-project\/releases\/download\/llvmorg-14.0.0\/clang+llvm-14.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz\n+\n+SHELL [\"\/bin\/bash\", \"-c\"]\n+\n+# Install dependencies\n+RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \\\n+    git \\\n+    curl \\\n+    wget \\\n+    bash \\\n+    unzip \\\n+    zip \\\n+    xz-utils\n+\n+# Install sdkman\n+RUN curl -s \"https:\/\/get.sdkman.io\" | bash\n+\n+# Use sdkman to install JDK 19\n+RUN source \"$HOME\/.sdkman\/bin\/sdkman-init.sh\" \\\n+    && sdk install java ${SDKMAN_JAVA_COMPILE_VERSION} \\\n+    && sdk install java ${SDKMAN_JAVA_RUNTIME_VERSION} \\\n+    && sdk use java ${SDKMAN_JAVA_COMPILE_VERSION}\n+\n+# Add sdkman to PATH\n+ENV SDKMAN_PATH=\"\/root\/.sdkman\/candidates\"\n+ENV PATH=\"${SDKMAN_PATH}\/java\/${SDKMAN_JAVA_COMPILE_VERSION}\/bin:$PATH\"\n+\n+# Convenience variable\n+ENV LLVM_HOME=\"\/tmp\/llvm\"\n+\n+# Download and extract LLVM\n+RUN wget -q -O llvm.tar.xz $LLVM_DOWNLOAD_URL \\\n+    && mkdir -p ${LLVM_HOME} \\\n+    && tar -xf llvm.tar.xz -C ${LLVM_HOME} --strip-components=1\n+\n+# Download, extract and build jextract\n+RUN git clone https:\/\/github.com\/openjdk\/jextract.git \/tmp\/jextract \\\n+    && cd \/tmp\/jextract \\\n+    && java -version \\\n+    && sh .\/gradlew \\\n+        -Pjdk19_home=\"${SDKMAN_PATH}\/java\/${SDKMAN_JAVA_RUNTIME_VERSION}\" \\\n+        -Pllvm_home=${LLVM_HOME} \\\n+        clean verify\n+\n+# Copy the built jextract sources to a fresh slim OpenJDK 19 image\n+FROM openjdk:19-slim\n+COPY --from=builder \/tmp\/jextract\/build\/jextract \/usr\/local\/jextract\n+ENTRYPOINT [\"\/usr\/local\/jextract\/bin\/jextract\"]\n","filename":"Dockerfile","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -25,0 +25,18 @@\n+`jextract` can also be built using the `Dockerfile` located in this directory, by running:\n+```sh\n+$ docker build -t jextract:latest -f Dockerfile .\n+```\n+\n+It can then be used through the Docker CLI:\n+```sh\n+$ echo \"struct Foo { int a; long b; }; int use_foo(struct Foo foo);\" >> sample.h\n+\n+$ docker run --rm -it -v ${PWD}:\/tmp\/jextract \\\n+    jextract:latest \\\n+    -I \/tmp\/jextract \\\n+    --source \\\n+    -l libfoo \\\n+    --output \/tmp\/jextract\/generated \\\n+    --target-package com.example \\\n+    \/tmp\/jextract\/sample.h\n+```\n","filename":"README.md","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}