{"files":[{"patch":"@@ -53,1 +53,1 @@\n-    dependsOn build\n+    dependsOn jar\n","filename":"build.gradle","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-jextract -C-DFORCE_OPENBLAS_COMPLEX_STRUCT \\\n+jextract -C \"-D FORCE_OPENBLAS_COMPLEX_STRUCT\" \\\n","filename":"samples\/cblas\/compile.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -234,0 +234,25 @@\n+        \/\/ does the string str start like an option?\n+        private boolean isOption(String str) {\n+            return str.length() > 1 && str.charAt(0) == '-';\n+        }\n+\n+        \/\/ does the string str start like single char option?\n+        private boolean isSingleCharOptionWithArg(String str) {\n+            assert isOption(str);\n+            return str.length() > 2 && str.charAt(1) != '-';\n+        }\n+\n+        \/\/ option part of single char option\n+        \/\/ -lclang => -l, -C-xc++ -> -C\n+        private String singleCharOption(String str) {\n+            assert isSingleCharOptionWithArg(str);\n+            return str.substring(0, 2);\n+        }\n+\n+        \/\/ argument part of single char option\n+        \/\/ -lclang => clang, -C-xc++ -> -xc++\n+        private String singleCharOptionArg(String str) {\n+            assert isSingleCharOptionWithArg(str);\n+            return str.substring(2);\n+        }\n+\n@@ -240,1 +265,1 @@\n-               if (arg.charAt(0) == '-') {\n+               if (isOption(arg)) {\n@@ -243,7 +268,9 @@\n-                   if (spec == null) {\n-                       \/\/ check for single char option specifier followed\n-                       \/\/ by option value without whitespace in between.\n-                       \/\/ Examples: -lclang, -C-xc++\n-                       spec = arg.length() > 2 ? optionSpecs.get(arg.substring(0, 2)) : null;\n-                       if (spec != null) {\n-                           argValue = arg.substring(2);\n+                   \/\/ does not match known options directly.\n+                   \/\/ check for single char option followed\n+                   \/\/ by option value without whitespace in between.\n+                   \/\/ Examples: -lclang, -C-xc++\n+                   if (spec == null ) {\n+                       spec = isSingleCharOptionWithArg(arg) ? optionSpecs.get(singleCharOption(arg)) : null;\n+                       \/\/ we have a matching single char option and that requires argument\n+                       if (spec != null && spec.argRequired()) {\n+                           argValue = singleCharOptionArg(arg);\n@@ -251,0 +278,1 @@\n+                           \/\/ single char option special handling also failed. give up.\n@@ -258,1 +286,1 @@\n-                           if (i == args.length - 1 || args[i + 1].charAt(0) == '-') {\n+                           if (i == args.length - 1) {\n@@ -263,1 +291,1 @@\n-                       } \/\/ else -C-xc++ like case. Value already set\n+                       } \/\/ else -C-xc++ like case. argValue already set\n@@ -280,1 +308,1 @@\n-               } else {\n+               } else { \/\/ !isOption(arg)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/JextractTool.java","additions":39,"deletions":11,"binary":false,"changes":50,"status":"modified"},{"patch":"","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/CommandLine.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/options\/CommandLine.java","status":"renamed"}]}