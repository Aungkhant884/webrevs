{"files":[{"patch":"@@ -47,1 +47,1 @@\n-    private static final SegmentAllocator IMPLICIT_ALLOCATOR = (size, align) -> MemorySegment.allocateNative(size, align, MemorySession.openImplicit());\n+    private static final SegmentAllocator IMPLICIT_ALLOCATOR = (size, align) -> MemorySegment.allocateNative(size, align);\n@@ -90,1 +90,1 @@\n-            MemorySegment.allocateNative(CXString.sizeof(), 8, MemorySession.openImplicit()));\n+            MemorySegment.allocateNative(CXString.sizeof(), 8));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/LibClang.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-            (size, align) -> MemorySegment.allocateNative(size, align, MemorySession.openImplicit());\n+            (size, align) -> MemorySegment.allocateNative(size, align);\n@@ -102,1 +102,1 @@\n-            MethodHandle handle = MH_LOOKUP.findVirtual(fi, \"apply\", Linker.methodType(fdesc));\n+            MethodHandle handle = MH_LOOKUP.findVirtual(fi, \"apply\", fdesc.toMethodType());\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/RuntimeHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-        this.fiType = Linker.methodType(descriptor);\n-        this.downcallType = Linker.methodType(descriptor);\n+        this.fiType = descriptor.toMethodType();\n+        this.downcallType = descriptor.toMethodType();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/FunctionalInterfaceBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-            MethodType downcallType = Linker.methodType(descriptor);\n+            MethodType downcallType = descriptor.toMethodType();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-            (size, align) -> MemorySegment.allocateNative(size, align, MemorySession.openImplicit());\n+            (size, align) -> MemorySegment.allocateNative(size, align);\n@@ -73,1 +73,1 @@\n-            MethodHandle handle = MH_LOOKUP.findVirtual(fi, \"apply\", Linker.methodType(fdesc));\n+            MethodHandle handle = MH_LOOKUP.findVirtual(fi, \"apply\", fdesc.toMethodType());\n","filename":"src\/main\/resources\/org\/openjdk\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}