{"files":[{"patch":"@@ -79,1 +79,1 @@\n-            var ppFormatCtx = MemorySegment.allocateNative(C_POINTER, session);\n+            var ppFormatCtx = session.allocate(C_POINTER);\n@@ -193,1 +193,1 @@\n-            var pFrameFinished = MemorySegment.allocateNative(C_INT, session);\n+            var pFrameFinished = session.allocate(C_INT);\n","filename":"samples\/libffmpeg\/LibffmpegMain.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-            (size, align) -> MemorySegment.allocateNative(size, align, MemorySession.openImplicit());\n+            (size, align) -> MemorySegment.allocateNative(size, align);\n@@ -48,1 +48,1 @@\n-        SymbolLookup loaderLookup = SymbolLookup.libraryLookup(libPath, MemorySession.global());\n+        SymbolLookup loaderLookup = SymbolLookup.libraryLookup(libPath, MemorySession.global()); \n@@ -83,1 +83,1 @@\n-            MethodHandle handle = MH_LOOKUP.findVirtual(fi, \"apply\", Linker.methodType(fdesc));\n+            MethodHandle handle = MH_LOOKUP.findVirtual(fi, \"apply\", fdesc.toMethodType());\n","filename":"samples\/libjimage\/org\/openjdk\/RuntimeHelper.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}