{"files":[{"patch":"@@ -132,1 +132,1 @@\n-            Float(\"float\", ValueLayout.JAVA_FLOAT.withBitAlignment(32)),\n+            Float(\"float\", ValueLayout.JAVA_FLOAT),\n@@ -136,1 +136,1 @@\n-            Double(\"double\", ValueLayout.JAVA_DOUBLE.withBitAlignment(64)),\n+            Double(\"double\", ValueLayout.JAVA_DOUBLE),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/Type.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXString.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    static final AddressLayout C_POINTER$LAYOUT = ADDRESS.withBitAlignment(64)\n+    static final AddressLayout C_POINTER$LAYOUT = ADDRESS\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/Constants$root.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n@@ -54,1 +54,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n@@ -79,1 +79,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -90,1 +90,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$0.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n@@ -48,1 +48,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n@@ -58,1 +58,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -72,1 +72,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -86,1 +86,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n@@ -97,1 +97,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$1.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -53,1 +53,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -57,1 +57,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -67,1 +67,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -72,1 +72,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -87,1 +87,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -98,1 +98,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -109,1 +109,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$10.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -46,1 +46,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -57,1 +57,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -67,1 +67,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -72,1 +72,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -84,1 +84,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -94,1 +94,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -109,1 +109,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -114,1 +114,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$11.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -52,1 +52,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -57,1 +57,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -68,1 +68,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -79,1 +79,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -90,1 +90,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$12.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$13.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -92,1 +92,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$14.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -109,1 +109,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$15.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -67,1 +67,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$16.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -53,1 +53,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$17.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n@@ -58,1 +58,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n@@ -73,1 +73,1 @@\n-            MemoryLayout.paddingLayout(32)\n+            MemoryLayout.paddingLayout(4)\n@@ -87,1 +87,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -102,1 +102,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$2.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$3.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -53,1 +53,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$4.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -93,1 +93,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -109,1 +109,1 @@\n-        MemoryLayout.paddingLayout(32)\n+        MemoryLayout.paddingLayout(4)\n@@ -113,1 +113,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$7.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -56,1 +56,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$8.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -63,1 +63,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -73,1 +73,1 @@\n-        MemoryLayout.paddingLayout(32),\n+        MemoryLayout.paddingLayout(4),\n@@ -78,1 +78,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n@@ -89,1 +89,1 @@\n-            MemoryLayout.paddingLayout(32),\n+            MemoryLayout.paddingLayout(4),\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/constants$9.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -349,3 +349,3 @@\n-                if (l.bitAlignment() != l.bitSize()) {\n-                    append(\".withBitAlignment(\");\n-                    append(l.bitAlignment());\n+                if (l.byteAlignment() != l.byteSize()) {\n+                    append(\".withByteAlignment(\");\n+                    append(l.byteAlignment());\n@@ -379,1 +379,1 @@\n-                append(\"MemoryLayout.paddingLayout(\" + l.bitSize() + \")\");\n+                append(\"MemoryLayout.paddingLayout(\" + l.byteSize() + \")\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/Constants.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-            Declaration.struct(TreeMaker.CursorPosition.NO_POSITION, \"\", MemoryLayout.paddingLayout(64)));\n+            Declaration.struct(TreeMaker.CursorPosition.NO_POSITION, \"\", MemoryLayout.paddingLayout(8)));\n@@ -133,2 +133,2 @@\n-            if ((offset % layout.bitAlignment()) != 0) {\n-                long maxAlign = Long.lowestOneBit(offset);\n+            if ((offset % (layout.byteAlignment() * 8) != 0)) {\n+                long maxAlign = Long.lowestOneBit(offset) \/ 8;\n@@ -142,1 +142,1 @@\n-        fieldLayouts.add(MemoryLayout.paddingLayout(bits));\n+        fieldLayouts.add(MemoryLayout.paddingLayout(bits \/ 8));\n@@ -207,2 +207,2 @@\n-            return layout.bitAlignment() > maxAlign ?\n-                    layout.withBitAlignment(maxAlign) : layout;\n+            return layout.byteAlignment() > maxAlign ?\n+                    layout.withByteAlignment(maxAlign) : layout;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/RecordLayoutComputer.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -159,1 +159,4 @@\n-                fieldLayouts.add(MemoryLayout.paddingLayout(prevBitfieldSize));\n+                if (prevBitfieldSize % 8 != 0) {\n+                    throw new IllegalStateException(\"Cannot get here: \" + prevBitfieldSize);\n+                }\n+                fieldLayouts.add(MemoryLayout.paddingLayout(prevBitfieldSize \/ 8));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructLayoutComputer.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-        public static final AddressLayout POINTER_LAYOUT = ADDRESS.withBitAlignment(64)\n+        public static final AddressLayout POINTER_LAYOUT = ADDRESS\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TypeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    public static final MemoryLayout __INT128 = makeUnsupportedLayout(128, \"__int128\");\n+    public static final MemoryLayout __INT128 = makeUnsupportedLayout(16, \"__int128\");\n@@ -42,1 +42,1 @@\n-    public static final MemoryLayout LONG_DOUBLE = makeUnsupportedLayout(128, \"long double\");\n+    public static final MemoryLayout LONG_DOUBLE = makeUnsupportedLayout(16, \"long double\");\n@@ -44,1 +44,1 @@\n-    public static final MemoryLayout _FLOAT128 = makeUnsupportedLayout(128, \"_float128\");\n+    public static final MemoryLayout _FLOAT128 = makeUnsupportedLayout(16, \"_float128\");\n@@ -46,1 +46,1 @@\n-    public static final MemoryLayout __FP16 = makeUnsupportedLayout(16, \"__fp16\");\n+    public static final MemoryLayout __FP16 = makeUnsupportedLayout(2, \"__fp16\");\n@@ -48,1 +48,1 @@\n-    public static final MemoryLayout CHAR16 = makeUnsupportedLayout(16, \"char16\");\n+    public static final MemoryLayout CHAR16 = makeUnsupportedLayout(2, \"char16\");\n@@ -50,1 +50,1 @@\n-    public static final MemoryLayout WCHAR_T = makeUnsupportedLayout(16, \"wchar_t\");\n+    public static final MemoryLayout WCHAR_T = makeUnsupportedLayout(2, \"wchar_t\");\n@@ -57,1 +57,1 @@\n-        return MemoryLayout.paddingLayout(size).withBitAlignment(size).withName(name);\n+        return MemoryLayout.paddingLayout(size).withByteAlignment(size).withName(name);\n@@ -63,1 +63,1 @@\n-            MemoryLayout layout = t.kind().layout().orElse(MemoryLayout.paddingLayout(64));\n+            MemoryLayout layout = t.kind().layout().orElse(MemoryLayout.paddingLayout(8));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/UnsupportedLayouts.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -59,6 +59,6 @@\n-    public static final ValueLayout.OfShort C_SHORT = ValueLayout.JAVA_SHORT.withBitAlignment(16);\n-    public static final ValueLayout.OfInt C_INT = ValueLayout.JAVA_INT.withBitAlignment(32);\n-    public static final ValueLayout C_LONG = IS_WINDOWS ? ValueLayout.JAVA_INT.withBitAlignment(32) : ValueLayout.JAVA_LONG.withBitAlignment(64);\n-    public static final ValueLayout.OfLong C_LONG_LONG = ValueLayout.JAVA_LONG.withBitAlignment(64);\n-    public static final ValueLayout.OfFloat C_FLOAT = ValueLayout.JAVA_FLOAT.withBitAlignment(32);\n-    public static final ValueLayout.OfDouble C_DOUBLE = ValueLayout.JAVA_DOUBLE.withBitAlignment(64);\n+    public static final ValueLayout.OfShort C_SHORT = ValueLayout.JAVA_SHORT;\n+    public static final ValueLayout.OfInt C_INT = ValueLayout.JAVA_INT;\n+    public static final ValueLayout C_LONG = IS_WINDOWS ? ValueLayout.JAVA_INT : ValueLayout.JAVA_LONG;\n+    public static final ValueLayout.OfLong C_LONG_LONG = ValueLayout.JAVA_LONG;\n+    public static final ValueLayout.OfFloat C_FLOAT = ValueLayout.JAVA_FLOAT;\n+    public static final ValueLayout.OfDouble C_DOUBLE = ValueLayout.JAVA_DOUBLE;\n","filename":"test\/lib\/testlib\/JextractToolRunner.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-            assertEquals(groupLayout.memberLayouts().get(1).bitAlignment(), 8);\n+            assertEquals(groupLayout.memberLayouts().get(1).byteAlignment(), 1);\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/api\/TestPackedStructs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-                MemoryLayout.paddingLayout(32),\n+                MemoryLayout.paddingLayout(4),\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/IncompleteArrayTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}