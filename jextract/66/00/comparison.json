{"files":[{"patch":"@@ -62,0 +62,3 @@\n+cd libzstd\n+rm -rf libzstd\n+cd ..\n","filename":"samples\/cleanall.sh","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -78,0 +78,4 @@\n+echo \"compiling libzstd\"\n+cd libzstd\n+sh .\/compile.sh\n+cd ..\n","filename":"samples\/compileall.sh","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,0 +78,4 @@\n+echo \"compiling libzstd\"\n+cd libzstd\n+sh .\/compilesource.sh\n+cd ..\n","filename":"samples\/compilesourceall.sh","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ *   - Redistributions of source code must retain the above copyright\n+ *     notice, this list of conditions and the following disclaimer.\n+ *\n+ *   - Redistributions in binary form must reproduce the above copyright\n+ *     notice, this list of conditions and the following disclaimer in the\n+ *     documentation and\/or other materials provided with the distribution.\n+ *\n+ *   - Neither the name of Oracle nor the names of its\n+ *     contributors may be used to endorse or promote products derived\n+ *     from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n+ * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n+ * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ *\/\n+\n+import java.lang.foreign.*;\n+import java.util.HexFormat;\n+\n+import static libzstd.Libzstd.*;\n+\n+\/*\n+ * This sample compresses text from a memory segment to another memory segment.\n+ *\/\n+public class LibzstdMain {\n+\n+    \/\/ Credit: William Shakespeare (1564-1616 CE).\n+    \/\/ From: \"Hamlet\", Act III, Scene I\n+    private static final String TEXT = \"\"\"\n+            To be, or not to be: that is the question:\n+            Whether 'tis nobler in the mind to suffer\n+            The slings and arrows of outrageous fortune,\n+            Or to take arms against a sea of troubles,\n+            And by opposing end them? To die: to sleep;\n+            No more; and by a sleep to say we end\n+            The heart-ache and the thousand natural shocks\n+            That flesh is heir to, 'tis a consummation\n+            Devoutly to be wish'd. To die, to sleep;\n+            To sleep: perchance to dream: ay, there's the rub;\n+            For in that sleep of death what dreams may come\n+            When we have shuffled off this mortal coil,\n+            Must give us pause: there's the respect\n+            That makes calamity of so long life;\n+            For who would bear the whips and scorns of time,\n+            The oppressor's wrong, the proud man's contumely,\n+            The pangs of despised love, the law's delay,\n+            The insolence of office and the spurns\n+            That patient merit of the unworthy takes,\n+            When he himself might his quietus make\n+            With a bare bodkin? who would fardels bear,\n+            To grunt and sweat under a weary life,\n+            But that the dread of something after death,\n+            The undiscover'd country from whose bourn\n+            No traveller returns, puzzles the will\n+            And makes us rather bear those ills we have\n+            Than fly to others that we know not of?\n+            Thus conscience does make cowards of us all;\n+            And thus the native hue of resolution\n+            Is sicklied o'er with the pale cast of thought,\n+            And enterprises of great pith and moment\n+            With this regard their currents turn awry,\n+            And lose the name of action.â€”Soft you now!\n+            The fair Ophelia! Nymph, in thy orisons\n+            Be all my sins remember'd.\"\"\";\n+\n+    public static void main(String[] args) {\n+        System.out.println(\"Original text:\");\n+        System.out.println(TEXT);\n+        System.out.println();\n+\n+        try (var session = MemorySession.openConfined()) {\n+            \/\/ Compress\n+            var uncompressedText = session.allocateUtf8String(TEXT);\n+            \/\/ At least, the compressed text should not be larger than the uncompressed text.\n+            var compressedText = session.allocate(TEXT.length());\n+            long compressResult = ZSTD_compress(compressedText, compressedText.byteSize(), uncompressedText, uncompressedText.byteSize(), ZSTD_defaultCLevel());\n+            if (ZSTD_isError(compressResult) != 0) {\n+                System.out.println(\"Error compressing: \" + errorMessage(compressResult));\n+                return;\n+            }\n+            System.out.println(TEXT.length() + \" text length was compressed to \" + compressResult + \" bytes of data:\");\n+            var formatter = HexFormat.ofDelimiter(\" \");\n+            System.out.println(formatter.formatHex(compressedText.asSlice(0, compressResult).toArray(ValueLayout.JAVA_BYTE)));\n+            System.out.println();\n+\n+            \/\/ Decompress again\n+            var decompressed = session.allocate(TEXT.length() * 2, 64); \/\/ Needs extra space to decompress\n+            long decompressResult = ZSTD_decompress(decompressed, decompressed.byteSize(), compressedText, compressResult);\n+            if (ZSTD_isError(decompressResult) != 0) {\n+                System.out.println(\"Error decompressing: \" + errorMessage(decompressResult));\n+                return;\n+            }\n+            String decompressedString = decompressed.getUtf8String(0);\n+            System.out.println(compressResult + \" bytes of compressed data was decompressed to \" + decompressedString.length() + \" text length:\");\n+            System.out.println(decompressedString);\n+        }\n+    }\n+\n+    private static String errorMessage(long code) {\n+        return code + \" (\" + ZSTD_getErrorName(code).getUtf8String(0) + \")\";\n+    }\n+\n+}\n","filename":"samples\/libzstd\/LibzstdMain.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"},{"patch":"@@ -0,0 +1,11 @@\n+* Install libffmpeg on Mac using homebrew\n+\n+    brew install zstd\n+\n+* run .\/compile.sh or .\/compilesource.sh to jextract zstd headers\n+\n+* run\n+\n+    sh .\/run.sh\n+\n+\n","filename":"samples\/libzstd\/README","additions":11,"deletions":0,"binary":false,"changes":11,"status":"added"},{"patch":"@@ -0,0 +1,7 @@\n+jextract -t libzstd \\\n+  -I \/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX.sdk\/usr\/include \\\n+  -I \/usr\/local\/Cellar\/zstd\/1.5.2\/include \\\n+  -l zstd \\\n+  --header-class-name Libzstd \\\n+  zstd.h\n+\n","filename":"samples\/libzstd\/compile.sh","additions":7,"deletions":0,"binary":false,"changes":7,"status":"added"},{"patch":"@@ -0,0 +1,8 @@\n+jextract --source -t libzstd \\\n+  -I \/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX.sdk\/usr\/include \\\n+  -I \/usr\/local\/Cellar\/zstd\/1.5.2\/include \\\n+  -l zstd \\\n+  --header-class-name Libzstd \\\n+  \/usr\/local\/Cellar\/zstd\/1.5.2\/include\/zstd.h\n+\n+javac --enable-preview --source=20 libzstd\/*.java\n","filename":"samples\/libzstd\/compilesource.sh","additions":8,"deletions":0,"binary":false,"changes":8,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+java --enable-native-access=ALL-UNNAMED \\\n+   --enable-preview --source=20 \\\n+   -Djava.library.path=\/usr\/local\/Cellar\/zstd\/1.5.2\/lib LibzstdMain.java\n","filename":"samples\/libzstd\/run.sh","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"}]}