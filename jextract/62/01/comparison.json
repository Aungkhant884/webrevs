{"files":[{"patch":"@@ -34,0 +34,1 @@\n+import java.lang.foreign.StructLayout;\n@@ -257,1 +258,1 @@\n-        String layoutClassName = layout.getClass().getSimpleName();\n+        String layoutClassName = Utils.layoutDeclarationType(layout).getSimpleName();\n@@ -278,1 +279,1 @@\n-            if (group.isStruct()) {\n+            if (group instanceof StructLayout) {\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ConstantBuilder.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-            append(\" \" + primType.kind().layout().orElseThrow().getClass().getSimpleName());\n+            append(\" \" + Utils.layoutDeclarationType(primType.kind().layout().orElseThrow()).getSimpleName());\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.lang.foreign.UnionLayout;\n@@ -324,1 +325,1 @@\n-        String suffix = structLayout.isUnion() ? \"union\" : \"struct\";\n+        String suffix = (structLayout instanceof UnionLayout) ? \"union\" : \"struct\";\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructBuilder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.lang.foreign.MemoryLayout;\n@@ -321,0 +322,21 @@\n+    \/**\n+     * Returns the type that should be used in declarations of various\n+     * memory layout implementations.\n+     * <p>\n+     * For example, the concrete layout implementation class {@code OfLongImpl} should be\n+     * declared as {@code OfLong} and not {@code OfLongImpl}.\n+     *\n+     * @param layout to generate a declaring type string for.\n+     * @return the unqualified type\n+     *\/\n+    static Class<?> layoutDeclarationType(MemoryLayout layout) {\n+        if (!layout.getClass().isInterface()) {\n+            Class<?> ifs[] = layout.getClass().getInterfaces();\n+            if (ifs.length != 1) {\n+                throw new IllegalStateException(\"The class\" + layout.getClass() + \" does not implement exactly one interface\");\n+            }\n+            return ifs[0];\n+        }\n+        return layout.getClass();\n+    }\n+\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/Utils.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}