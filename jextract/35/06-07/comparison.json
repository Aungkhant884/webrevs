{"files":[{"patch":"@@ -20,0 +20,5 @@\n+        \n+    - name: 'Prepare'\n+      shell: sh\n+      run: |\n+        mkdir deps\n@@ -21,2 +26,16 @@\n-    - name: 'Setup JDK 18'\n-      uses: oracle-actions\/setup-java@v1\n+    - name: 'Download JDK 19'\n+      id: download_jdk_19\n+      uses: oracle-actions\/setup-java@v1.1.1\n+      with:\n+        website: jdk.java.net\n+        release: 19\n+        install: false\n+        \n+    - name: 'Extract JDK 19'\n+      shell: sh\n+      run: |\n+        tar -xvf ${{ steps.download_jdk_19.outputs.archive }} -C deps\n+        ls .\/deps\/jdk-19\n+        \n+    - name: 'Setup Java 18'\n+      uses: oracle-actions\/setup-java@v1.1.1\n@@ -35,3 +54,2 @@\n-        mkdir deps\n-        wget -O deps\/LLVM.tar.xz https:\/\/github.com\/llvm\/llvm-project\/releases\/download\/llvmorg-13.0.0\/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz\n-        tar -xvf deps\/LLVM.tar.xz -C deps\n+        wget -O deps\/LLVM.tar.gz https:\/\/github.com\/llvm\/llvm-project\/releases\/download\/llvmorg-13.0.0\/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz\n+        tar -xvf deps\/LLVM.tar.gz -C deps\n@@ -43,1 +61,1 @@\n-        sh .\/gradlew -Pjdk18_home=$JAVA_HOME -Pllvm_home=.\/deps\/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04 clean verify        \n+        sh .\/gradlew -Pjdk19_home=$(realpath .\/deps\/jdk-19) -Pllvm_home=.\/deps\/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04 clean verify        \n@@ -63,1 +81,1 @@\n-        sh .\/gradlew -Pjdk18_home=$JAVA_HOME -Pllvm_home=.\/deps\/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04 -Pjtreg_home=.\/deps\/jtreg\/build\/images\/jtreg jtreg\n+        sh .\/gradlew -Pjdk19_home=$(realpath .\/deps\/jdk-19) -Pllvm_home=.\/deps\/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04 -Pjtreg_home=.\/deps\/jtreg\/build\/images\/jtreg jtreg\n","filename":".github\/workflows\/test.yml","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$jextract = find-tool(\"jextract\")\r\n-\r\n-& $jextract `\r\n+jextract `\r\n@@ -14,1 +10,0 @@\n-  -- `\r\n","filename":"samples\/cblas\/compile_windows.ps1","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -8,4 +8,0 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$java = find-tool(\"java\")\r\n-\r\n@@ -15,1 +11,1 @@\n-& $java `\r\n+java `\r\n@@ -17,1 +13,1 @@\n-  --add-modules jdk.incubator.foreign `\r\n+  --enable-preview --source=19 `\r\n","filename":"samples\/cblas\/run_windows.ps1","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$jextract = find-tool(\"jextract\")\r\n-\r\n-& $jextract `\r\n+jextract `\r\n@@ -14,1 +10,0 @@\n-  -- `\r\n","filename":"samples\/lapack\/compile_windows.ps1","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -8,4 +8,0 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$java = find-tool(\"java\")\r\n-\r\n@@ -15,1 +11,1 @@\n-& $java `\r\n+java `\r\n@@ -17,1 +13,1 @@\n-  --add-modules jdk.incubator.foreign `\r\n+  --enable-preview --source=19 `\r\n","filename":"samples\/lapack\/run_windows.ps1","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$jextract = find-tool(\"jextract\")\r\n-\r\n-& $jextract `\r\n+jextract `\r\n@@ -15,1 +11,0 @@\n-  -- `\r\n","filename":"samples\/libclang\/compile_windows.ps1","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$java = find-tool(\"java\")\r\n-\r\n-& $java `\r\n+java `\r\n@@ -12,1 +8,1 @@\n-  --add-modules jdk.incubator.foreign `\r\n+  --enable-preview --source=19 `\r\n","filename":"samples\/libclang\/run_windows.ps1","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$jextract = find-tool(\"jextract\")\r\n-\r\n-& $jextract `\r\n+jextract `\r\n@@ -14,1 +10,0 @@\n-  -- `\r\n@@ -17,1 +12,1 @@\n-filter_file 'includes_all.conf' 'curl' 'includes_filtered.conf'\r\n+Select-String -Path 'includes_all.conf' -Pattern 'curl' | %{ $_.Line } | Out-File -FilePath 'includes_filtered.conf' -Encoding ascii\r\n@@ -19,1 +14,1 @@\n-& $jextract `\r\n+jextract `\r\n@@ -25,1 +20,0 @@\n-  -- `\r\n","filename":"samples\/libcurl\/compile_windows.ps1","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -8,5 +8,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$java = find-tool(\"java\")\r\n-\r\n-& $java `\r\n+java `\r\n@@ -14,1 +10,1 @@\n-  --add-modules jdk.incubator.foreign `\r\n+  --enable-preview --source=19 `\r\n","filename":"samples\/libcurl\/run_windows.ps1","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$jextract = find-tool(\"jextract\")\r\n-\r\n-& $jextract `\r\n+jextract `\r\n@@ -14,1 +10,0 @@\n-  -- `\r\n","filename":"samples\/libgit2\/compile_windows.ps1","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -10,5 +10,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$java = find-tool(\"java\")\r\n-\r\n-& $java `\r\n+java `\r\n@@ -16,1 +12,1 @@\n-  --add-modules jdk.incubator.foreign `\r\n+  --enable-preview --source=19 `\r\n","filename":"samples\/libgit2\/run_windows.ps1","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-import jdk.incubator.foreign.ResourceScope;\n-import jdk.incubator.foreign.SegmentAllocator;\n+import java.lang.foreign.MemorySession;\n+import java.lang.foreign.SegmentAllocator;\n@@ -74,1 +74,1 @@\n-        try (var scope = ResourceScope.newConfinedScope()) {\n+        try (var scope = MemorySession.openConfined()) {\n@@ -82,2 +82,2 @@\n-            var displayStub = glutDisplayFunc$func.allocate(teapot::display, scope);\n-            var idleStub = glutIdleFunc$func.allocate(teapot::onIdle, scope);\n+            var displayStub = glutDisplayFunc$callback.allocate(teapot::display, scope);\n+            var idleStub = glutIdleFunc$callback.allocate(teapot::onIdle, scope);\n","filename":"samples\/opengl\/Teapot.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$jextract = find-tool(\"jextract\")\r\n-\r\n-& $jextract `\r\n+jextract `\r\n@@ -16,1 +12,0 @@\n-  \"--\" `\r\n","filename":"samples\/opengl\/compile_windows.ps1","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$java = find-tool(\"java\")\r\n-\r\n-& $java `\r\n+java `\r\n@@ -12,1 +8,1 @@\n-  --add-modules jdk.incubator.foreign `\r\n+  --enable-preview --source=19 `\r\n","filename":"samples\/opengl\/run_windows.ps1","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,12 @@\n+param(\r\n+  [Parameter(Mandatory=$true, HelpMessage=\"The path python install\")]\r\n+  [string]$pythonPath,\r\n+  [Parameter(Mandatory=$true, HelpMessage=\"The name of the python dll to link against. For instance 'python38', for python38.dll\")]\r\n+  [string]$pythonLibName\r\n+)\r\n+\r\n+jextract `\r\n+  -I \"$pythonPath\\include\" `\r\n+  \"-l\" $pythonLibName `\r\n+  \"-t\" \"org.python\" `\r\n+  \"$pythonPath\\include\\Python.h\"\n\\ No newline at end of file\n","filename":"samples\/python3\/compile_windows.ps1","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"},{"patch":"@@ -0,0 +1,10 @@\n+param(\r\n+  [Parameter(Mandatory=$true, HelpMessage=\"The path python install\")]\r\n+  [string]$pythonPath\r\n+)\r\n+\r\n+java `\r\n+  --enable-native-access=ALL-UNNAMED `\r\n+  --enable-preview --source=19 `\r\n+  -D\"java.library.path=$pythonPath\" `\r\n+  PythonMain.java\n\\ No newline at end of file\n","filename":"samples\/python3\/run_windows.ps1","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -1,22 +0,0 @@\n-$jdk = $Env:JAVA_HOME\r\n-\r\n-function find-tool($tool) {\r\n-  if (Test-Path \"$jdk\\bin\\$tool.exe\") {\r\n-    $func = {\r\n-      & \"$jdk\\bin\\$tool.exe\" $args;\r\n-      if ($LASTEXITCODE -ne 0) {\r\n-        Write-Host \"ERROR: $tool exited with non-zero exit code: $LASTEXITCODE\"\r\n-        exit\r\n-      }\r\n-    }.GetNewClosure()\r\n-    & $func.Module Set-Variable jdk $jdk\r\n-    return $func\r\n-  } else {\r\n-    Write-Host \"ERROR: Could not find $tool executable in %JAVA_HOME%\\bin.\"\r\n-    exit\r\n-  }\r\n-}\r\n-\r\n-function filter_file($includes_all, $pattern, $output_file) {  \r\n-  Select-String -Path $includes_all -Pattern $pattern | %{ $_.Line } | Out-File -FilePath $output_file -Encoding ascii\r\n-}\r\n","filename":"samples\/shared_windows.ps1","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$jextract = find-tool(\"jextract\")\r\n-\r\n-& $jextract `\r\n+jextract `\r\n@@ -14,1 +10,0 @@\n-  -- `\r\n","filename":"samples\/tensorflow\/compile_windows.ps1","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -6,5 +6,1 @@\n-. ..\/shared_windows.ps1\r\n-\r\n-$java = find-tool(\"java\")\r\n-\r\n-& $java `\r\n+java `\r\n@@ -12,1 +8,1 @@\n-  --add-modules jdk.incubator.foreign `\r\n+  --enable-preview --source=19 `\r\n","filename":"samples\/tensorflow\/run_windows.ps1","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}