{"files":[{"patch":"@@ -61,1 +61,1 @@\n-        public static final int MONITORS = 10_000;\n+        private static final int MONITORS = 10_000;\n@@ -63,1 +63,7 @@\n-        public static Object[] monitors;\n+        \/\/ Use a handful of threads to inflate the monitors, to eat the cost of\n+        \/\/ wait(1) calls. This can be larger than available parallelism, since threads\n+        \/\/ would be time-waiting.\n+        private static final int THREADS = 16;\n+\n+        private static Thread[] threads;\n+        private static Object[] monitors;\n@@ -67,6 +73,15 @@\n-            for (int i = 0; i < MONITORS; i++) {\n-                Object o = new Object();\n-                synchronized (o) {\n-                    try {\n-                        o.wait(1); \/\/ Inflate!\n-                    } catch (InterruptedException ie) {\n+            threads = new Thread[THREADS];\n+\n+            for (int t = 0; t < THREADS; t++) {\n+                int monStart = t * MONITORS \/ THREADS;\n+                int monEnd = (t + 1) * MONITORS \/ THREADS;\n+                threads[t] = new Thread(() -> {\n+                    for (int m = monStart; m < monEnd; m++) {\n+                        Object o = new Object();\n+                        synchronized (o) {\n+                            try {\n+                                o.wait(1);\n+                            } catch (InterruptedException e) {\n+                            }\n+                        }\n+                        monitors[m] = o;\n@@ -74,2 +89,6 @@\n-                }\n-                monitors[i] = o;\n+                });\n+                threads[t].start();\n+            }\n+\n+            for (Thread t : threads) {\n+                t.join();\n@@ -173,1 +192,1 @@\n-            \"-XX:MonitorUsedDeflationThreshold=10\",\n+            \"-XX:MonitorUsedDeflationThreshold=1\",\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/GuaranteedAsyncDeflationIntervalTest.java","additions":30,"deletions":11,"binary":false,"changes":41,"status":"modified"}]}