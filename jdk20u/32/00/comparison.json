{"files":[{"patch":"@@ -1364,4 +1364,7 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const Type* dst_type = dst->Value(&_gvn);\n-  BasicType src_elem = src_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType dst_elem = dst_type->isa_aryptr()->elem()->array_element_basic_type();\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* dst_type = dst->Value(&_gvn)->isa_aryptr();\n+  if (src_type == nullptr || dst_type == nullptr) {\n+    return false;\n+  }\n+  BasicType src_elem = src_type->elem()->array_element_basic_type();\n+  BasicType dst_elem = dst_type->elem()->array_element_basic_type();\n@@ -5386,6 +5389,4 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const Type* dst_type = dst->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  const TypeAryPtr* top_dest = dst_type->isa_aryptr();\n-  if (top_src  == NULL || top_src->elem()  == Type::BOTTOM ||\n-      top_dest == NULL || top_dest->elem() == Type::BOTTOM) {\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* dst_type = dst->Value(&_gvn)->isa_aryptr();\n+  if (src_type == nullptr || src_type->elem() == Type::BOTTOM ||\n+      dst_type == nullptr || dst_type->elem() == Type::BOTTOM) {\n@@ -5397,2 +5398,2 @@\n-  BasicType src_elem = src_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType dst_elem = dst_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType src_elem = src_type->elem()->array_element_basic_type();\n+  BasicType dst_elem = dst_type->elem()->array_element_basic_type();\n@@ -5441,6 +5442,4 @@\n-  const Type* x_type = x->Value(&_gvn);\n-  const Type* y_type = y->Value(&_gvn);\n-  const TypeAryPtr* top_x = x_type->isa_aryptr();\n-  const TypeAryPtr* top_y = y_type->isa_aryptr();\n-  if (top_x  == NULL || top_x->elem()  == Type::BOTTOM ||\n-      top_y == NULL || top_y->elem() == Type::BOTTOM) {\n+  const TypeAryPtr* x_type = x->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* y_type = y->Value(&_gvn)->isa_aryptr();\n+  if (x_type == nullptr || x_type->elem() == Type::BOTTOM ||\n+      y_type == nullptr || y_type->elem() == Type::BOTTOM) {\n@@ -5451,2 +5450,2 @@\n-  BasicType x_elem = x_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType y_elem = y_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType x_elem = x_type->elem()->array_element_basic_type();\n+  BasicType y_elem = y_type->elem()->array_element_basic_type();\n@@ -5549,6 +5548,4 @@\n-  const Type* x_type = x->Value(&_gvn);\n-  const Type* z_type = z->Value(&_gvn);\n-  const TypeAryPtr* top_x = x_type->isa_aryptr();\n-  const TypeAryPtr* top_z = z_type->isa_aryptr();\n-  if (top_x  == NULL || top_x->elem()  == Type::BOTTOM ||\n-      top_z  == NULL || top_z->elem()  == Type::BOTTOM) {\n+  const TypeAryPtr* x_type = x->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* z_type = z->Value(&_gvn)->isa_aryptr();\n+  if (x_type == nullptr || x_type->elem() == Type::BOTTOM ||\n+      z_type == nullptr || z_type->elem() == Type::BOTTOM) {\n@@ -5559,2 +5556,2 @@\n-  BasicType x_elem = x_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType z_elem = z_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType x_elem = x_type->elem()->array_element_basic_type();\n+  BasicType z_elem = z_type->elem()->array_element_basic_type();\n@@ -5596,0 +5593,1 @@\n+  in = must_be_not_null(in, true);\n@@ -5598,6 +5596,4 @@\n-  const Type* out_type = out->Value(&_gvn);\n-  const Type* in_type = in->Value(&_gvn);\n-  const TypeAryPtr* top_out = out_type->isa_aryptr();\n-  const TypeAryPtr* top_in = in_type->isa_aryptr();\n-  if (top_out  == NULL || top_out->elem()  == Type::BOTTOM ||\n-      top_in == NULL || top_in->elem() == Type::BOTTOM) {\n+  const TypeAryPtr* out_type = out->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* in_type = in->Value(&_gvn)->isa_aryptr();\n+  if (out_type == nullptr || out_type->elem() == Type::BOTTOM ||\n+       in_type == nullptr ||  in_type->elem() == Type::BOTTOM) {\n@@ -5608,2 +5604,2 @@\n-  BasicType out_elem = out_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType in_elem = in_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType out_elem = out_type->elem()->array_element_basic_type();\n+  BasicType in_elem = in_type->elem()->array_element_basic_type();\n@@ -5647,12 +5643,8 @@\n-  const Type* a_type = a->Value(&_gvn);\n-  const TypeAryPtr* top_a = a_type->isa_aryptr();\n-  const Type* b_type = b->Value(&_gvn);\n-  const TypeAryPtr* top_b = b_type->isa_aryptr();\n-  const Type* n_type = a->Value(&_gvn);\n-  const TypeAryPtr* top_n = n_type->isa_aryptr();\n-  const Type* m_type = a->Value(&_gvn);\n-  const TypeAryPtr* top_m = m_type->isa_aryptr();\n-  if (top_a  == NULL || top_a->elem()  == Type::BOTTOM ||\n-      top_b == NULL || top_b->elem()  == Type::BOTTOM ||\n-      top_n == NULL || top_n->elem()  == Type::BOTTOM ||\n-      top_m == NULL || top_m->elem()  == Type::BOTTOM) {\n+  const TypeAryPtr* a_type = a->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* b_type = b->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* n_type = n->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* m_type = m->Value(&_gvn)->isa_aryptr();\n+  if (a_type == nullptr || a_type->elem() == Type::BOTTOM ||\n+      b_type == nullptr || b_type->elem() == Type::BOTTOM ||\n+      n_type == nullptr || n_type->elem() == Type::BOTTOM ||\n+      m_type == nullptr || m_type->elem() == Type::BOTTOM) {\n@@ -5663,4 +5655,4 @@\n-  BasicType a_elem = a_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType b_elem = b_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType n_elem = n_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType m_elem = m_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType a_elem = a_type->elem()->array_element_basic_type();\n+  BasicType b_elem = b_type->elem()->array_element_basic_type();\n+  BasicType n_elem = n_type->elem()->array_element_basic_type();\n+  BasicType m_elem = m_type->elem()->array_element_basic_type();\n@@ -5706,9 +5698,6 @@\n-  const Type* a_type = a->Value(&_gvn);\n-  const TypeAryPtr* top_a = a_type->isa_aryptr();\n-  const Type* n_type = a->Value(&_gvn);\n-  const TypeAryPtr* top_n = n_type->isa_aryptr();\n-  const Type* m_type = a->Value(&_gvn);\n-  const TypeAryPtr* top_m = m_type->isa_aryptr();\n-  if (top_a  == NULL || top_a->elem()  == Type::BOTTOM ||\n-      top_n == NULL || top_n->elem()  == Type::BOTTOM ||\n-      top_m == NULL || top_m->elem()  == Type::BOTTOM) {\n+  const TypeAryPtr* a_type = a->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* n_type = n->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* m_type = m->Value(&_gvn)->isa_aryptr();\n+  if (a_type == nullptr || a_type->elem() == Type::BOTTOM ||\n+      n_type == nullptr || n_type->elem() == Type::BOTTOM ||\n+      m_type == nullptr || m_type->elem() == Type::BOTTOM) {\n@@ -5719,3 +5708,3 @@\n-  BasicType a_elem = a_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType n_elem = n_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType m_elem = m_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType a_elem = a_type->elem()->array_element_basic_type();\n+  BasicType n_elem = n_type->elem()->array_element_basic_type();\n+  BasicType m_elem = m_type->elem()->array_element_basic_type();\n@@ -5762,6 +5751,4 @@\n-  const Type* newArr_type = newArr->Value(&_gvn);\n-  const TypeAryPtr* top_newArr = newArr_type->isa_aryptr();\n-  const Type* oldArr_type = oldArr->Value(&_gvn);\n-  const TypeAryPtr* top_oldArr = oldArr_type->isa_aryptr();\n-  if (top_newArr == NULL || top_newArr->elem() == Type::BOTTOM || top_oldArr == NULL\n-      || top_oldArr->elem() == Type::BOTTOM) {\n+  const TypeAryPtr* newArr_type = newArr->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* oldArr_type = oldArr->Value(&_gvn)->isa_aryptr();\n+  if (newArr_type == nullptr || newArr_type->elem() == Type::BOTTOM ||\n+      oldArr_type == nullptr || oldArr_type->elem() == Type::BOTTOM) {\n@@ -5771,2 +5758,2 @@\n-  BasicType newArr_elem = newArr_type->isa_aryptr()->elem()->array_element_basic_type();\n-  BasicType oldArr_elem = oldArr_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType newArr_elem = newArr_type->elem()->array_element_basic_type();\n+  BasicType oldArr_elem = oldArr_type->elem()->array_element_basic_type();\n@@ -5977,3 +5964,2 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  if (top_src  == NULL || top_src->elem()  == Type::BOTTOM) {\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  if (src_type == nullptr || src_type->elem() == Type::BOTTOM) {\n@@ -5985,1 +5971,1 @@\n-  BasicType src_elem = src_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType src_elem = src_type->elem()->array_element_basic_type();\n@@ -6066,3 +6052,2 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  if (top_src  == NULL || top_src->elem()  == Type::BOTTOM) {\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  if (src_type == nullptr || src_type->elem() == Type::BOTTOM) {\n@@ -6074,1 +6059,1 @@\n-  BasicType src_elem = src_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType src_elem = src_type->elem()->array_element_basic_type();\n@@ -6159,3 +6144,2 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  if (top_src  == NULL || top_src->elem()  == Type::BOTTOM) {\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  if (src_type == nullptr || src_type->elem() == Type::BOTTOM) {\n@@ -6167,1 +6151,1 @@\n-  BasicType src_elem = src_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType src_elem = src_type->elem()->array_element_basic_type();\n@@ -6401,5 +6385,4 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const Type* dest_type = dest->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  const TypeAryPtr* top_dest = dest_type->isa_aryptr();\n-  assert (top_src  != NULL && top_src->elem()  != Type::BOTTOM &&  top_dest != NULL && top_dest->elem() != Type::BOTTOM, \"args are strange\");\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* dest_type = dest->Value(&_gvn)->isa_aryptr();\n+  assert( src_type != nullptr &&  src_type->elem() != Type::BOTTOM &&\n+         dest_type != nullptr && dest_type->elem() != Type::BOTTOM, \"args are strange\");\n@@ -6462,6 +6445,4 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const Type* dest_type = dest->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  const TypeAryPtr* top_dest = dest_type->isa_aryptr();\n-  assert (top_src  != NULL && top_src->elem()  != Type::BOTTOM\n-          &&  top_dest != NULL && top_dest->elem() != Type::BOTTOM, \"args are strange\");\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* dest_type = dest->Value(&_gvn)->isa_aryptr();\n+  assert( src_type != nullptr &&  src_type->elem() != Type::BOTTOM &&\n+         dest_type != nullptr && dest_type->elem() != Type::BOTTOM, \"args are strange\");\n@@ -6550,6 +6531,4 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const Type* dest_type = dest->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  const TypeAryPtr* top_dest = dest_type->isa_aryptr();\n-  assert(top_src != NULL && top_src->elem() != Type::BOTTOM\n-         &&  top_dest != NULL && top_dest->elem() != Type::BOTTOM, \"args are strange\");\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* dest_type = dest->Value(&_gvn)->isa_aryptr();\n+  assert( src_type != nullptr &&  src_type->elem() != Type::BOTTOM &&\n+         dest_type != nullptr && dest_type->elem() != Type::BOTTOM, \"args are strange\");\n@@ -6624,6 +6603,4 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const Type* dest_type = dest->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  const TypeAryPtr* top_dest = dest_type->isa_aryptr();\n-  assert(top_src != NULL && top_src->elem() != Type::BOTTOM &&\n-         top_dest != NULL && top_dest->elem() != Type::BOTTOM, \"args are strange\");\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* dest_type = dest->Value(&_gvn)->isa_aryptr();\n+  assert( src_type != nullptr &&  src_type->elem() != Type::BOTTOM &&\n+         dest_type != nullptr && dest_type->elem() != Type::BOTTOM, \"args are strange\");\n@@ -7063,3 +7040,2 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  if (top_src  == NULL || top_src->elem()  == Type::BOTTOM) {\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  if (src_type == nullptr || src_type->elem() == Type::BOTTOM) {\n@@ -7070,1 +7046,1 @@\n-  BasicType src_elem = src_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType src_elem = src_type->elem()->array_element_basic_type();\n@@ -7155,3 +7131,2 @@\n-  const Type* src_type = src->Value(&_gvn);\n-  const TypeAryPtr* top_src = src_type->isa_aryptr();\n-  if (top_src  == NULL || top_src->elem()  == Type::BOTTOM) {\n+  const TypeAryPtr* src_type = src->Value(&_gvn)->isa_aryptr();\n+  if (src_type == nullptr || src_type->elem() == Type::BOTTOM) {\n@@ -7162,1 +7137,1 @@\n-  BasicType src_elem = src_type->isa_aryptr()->elem()->array_element_basic_type();\n+  BasicType src_elem = src_type->elem()->array_element_basic_type();\n@@ -7293,9 +7268,6 @@\n-  const Type* in_type = in->Value(&_gvn);\n-  const Type* ct_type = ct->Value(&_gvn);\n-  const Type* out_type = out->Value(&_gvn);\n-  const TypeAryPtr* top_in = in_type->isa_aryptr();\n-  const TypeAryPtr* top_ct = ct_type->isa_aryptr();\n-  const TypeAryPtr* top_out = out_type->isa_aryptr();\n-  assert(top_in != NULL && top_in->elem() != Type::BOTTOM &&\n-         top_ct != NULL && top_ct->elem() != Type::BOTTOM &&\n-         top_out != NULL && top_out->elem() != Type::BOTTOM, \"args are strange\");\n+  const TypeAryPtr* in_type = in->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* ct_type = ct->Value(&_gvn)->isa_aryptr();\n+  const TypeAryPtr* out_type = out->Value(&_gvn)->isa_aryptr();\n+  assert( in_type != nullptr &&  in_type->elem() != Type::BOTTOM &&\n+          ct_type != nullptr &&  ct_type->elem() != Type::BOTTOM &&\n+         out_type != nullptr && out_type->elem() != Type::BOTTOM, \"args are strange\");\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":96,"deletions":124,"binary":false,"changes":220,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8300079\n+ * @summary Verify that String.copyValueOf properly handles null input with intrinsified helper methods.\n+ * @run main\/othervm -XX:-TieredCompilation -Xcomp\n+ *                   -XX:CompileCommand=compileonly,compiler.intrinsics.string.TestCopyValueOf::test\n+ *                   -XX:CompileCommand=dontinline,java.lang.String::rangeCheck\n+ *                   compiler.intrinsics.string.TestCopyValueOf\n+ *\/\n+\n+package compiler.intrinsics.string;\n+\n+public class TestCopyValueOf {\n+\n+    public static boolean test() {\n+        try {\n+            String.copyValueOf(null, 42, 43);\n+        } catch (NullPointerException e) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Warmup\n+        char data[] = {42};\n+        String.copyValueOf(data, 0, 1);\n+\n+        if (!test()) {\n+            throw new RuntimeException(\"Unexpected result\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestCopyValueOf.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}