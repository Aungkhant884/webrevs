{"files":[{"patch":"@@ -37,1 +37,1 @@\n-files=.*\\.java$|.*\\.cpp$|.*\\.hpp$|.*\\.c$|.*\\.h$\n+files=.*\\.cpp|.*\\.hpp|.*\\.c|.*\\.h|.*\\.java\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1084,1 +1084,1 @@\n-                            log.error(tree, Errors.FirstStatementMustBeCallToAnotherConstructor);\n+                            log.error(tree, Errors.FirstStatementMustBeCallToAnotherConstructor(env.enclClass.sym));\n@@ -5078,1 +5078,1 @@\n-                        log.error(TreeInfo.diagnosticPositionFor(subTypeSym, env.tree), Errors.CantInheritFromSealed(c));\n+                        log.error(TreeInfo.diagnosticPositionFor(subTypeSym, env.tree),  Errors.LocalClassesCantExtendSealed(Fragments.Anonymous));\n@@ -5091,1 +5091,3 @@\n-                            log.error(TreeInfo.diagnosticPositionFor(subTypeSym, env.tree), Errors.CantInheritFromSealed(c));\n+                            log.error(TreeInfo.diagnosticPositionFor(subTypeSym, env.tree),\n+                                    Errors.ClassInUnnamedModuleCantExtendSealedInDiffPackage(c)\n+                            );\n@@ -5094,1 +5096,3 @@\n-                        log.error(TreeInfo.diagnosticPositionFor(subTypeSym, env.tree), Errors.CantInheritFromSealed(c));\n+                        log.error(TreeInfo.diagnosticPositionFor(subTypeSym, env.tree),\n+                                Errors.ClassInModuleCantExtendSealedInDiffModule(c, c.packge().modle)\n+                        );\n@@ -5133,1 +5137,1 @@\n-                    log.error(TreeInfo.diagnosticPositionFor(c, env.tree), Errors.LocalClassesCantExtendSealed);\n+                    log.error(TreeInfo.diagnosticPositionFor(c, env.tree), Errors.LocalClassesCantExtendSealed(c.isAnonymous() ? Fragments.Anonymous : Fragments.Local));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -604,3 +604,3 @@\n-\t\t    if (Feature.UNDERSCORE_IDENTIFIER.allowedInSource(source)) {\n-\t\t        log.warning(token.pos, Warnings.UnderscoreAsIdentifier);\n-\t\t    } else {\n+                    if (Feature.UNDERSCORE_IDENTIFIER.allowedInSource(source)) {\n+                        log.warning(token.pos, Warnings.UnderscoreAsIdentifier);\n+                    } else {\n@@ -3856,1 +3856,2 @@\n-                                .VarDef(F.Modifiers(Flags.PARAMETER | param.mods.flags & Flags.VARARGS, param.mods.annotations),\n+                                .VarDef(F.Modifiers(Flags.PARAMETER | Flags.GENERATED_MEMBER | param.mods.flags & Flags.VARARGS,\n+                                        param.mods.annotations),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -3502,1 +3502,10 @@\n-    class is not allowed to extend sealed class: {0}\n+    class is not allowed to extend sealed class: {0} \\\n+    (as it is not listed in its 'permits' clause)\n+\n+# 0: symbol\n+compiler.err.class.in.unnamed.module.cant.extend.sealed.in.diff.package=\\\n+    class {0} in unnamed module cannot extend a sealed class in a different package\n+\n+# 0: symbol, 1: symbol\n+compiler.err.class.in.module.cant.extend.sealed.in.diff.module=\\\n+    class {0} in module {1} cannot extend a sealed class in a different module\n@@ -3518,0 +3527,1 @@\n+# 0: fragment\n@@ -3519,1 +3529,7 @@\n-    local classes must not extend sealed classes\n+    {0} classes must not extend sealed classes\\\n+\n+compiler.misc.anonymous=\\\n+    anonymous\n+\n+compiler.misc.local=\\\n+    local\n@@ -3601,0 +3617,1 @@\n+# 0: symbol\n@@ -3602,1 +3619,1 @@\n-    constructor is not canonical, so its first statement must invoke another constructor\n+    constructor is not canonical, so its first statement must invoke another constructor of class {0}\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"}]}