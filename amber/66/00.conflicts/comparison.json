{"files":[{"patch":"@@ -3896,0 +3896,1 @@\n+<<<<<<< HEAD\n@@ -3908,0 +3909,7 @@\n+=======\n+          } else if (_major_version >= JAVA_15_VERSION) {\n+            \/\/ Check for PermittedSubclasses tag\n+            if (tag == vmSymbols::tag_permitted_subclasses()) {\n+              if (supports_sealed_types()) {\n+                if (parsed_permitted_subclasses_attribute) {\n+>>>>>>> 2919ad2cc20c2c915d2b5a20b3fd83d97b8223dd\n@@ -3909,4 +3917,4 @@\n-                return;\n-              }\n-              \/\/ Classes marked ACC_FINAL cannot have a PermittedSubclasses attribute.\n-              if (_access_flags.is_final()) {\n+                  return;\n+                }\n+                \/\/ Classes marked ACC_FINAL cannot have a PermittedSubclasses attribute.\n+                if (_access_flags.is_final()) {\n@@ -3914,1 +3922,5 @@\n-                return;\n+                  return;\n+                }\n+                parsed_permitted_subclasses_attribute = true;\n+                permitted_subclasses_attribute_start = cfs->current();\n+                permitted_subclasses_attribute_length = attribute_length;\n@@ -3916,0 +3928,1 @@\n+<<<<<<< HEAD\n@@ -3920,0 +3933,18 @@\n+=======\n+              cfs->skip_u1(attribute_length, CHECK);\n+\n+          } else if (_major_version >= JAVA_16_VERSION) {\n+            if (tag == vmSymbols::tag_record()) {\n+              if (parsed_record_attribute) {\n+                classfile_parse_error(\"Multiple Record attributes in class file %s\", THREAD);\n+                return;\n+              }\n+              parsed_record_attribute = true;\n+              record_attribute_start = cfs->current();\n+              record_attribute_length = attribute_length;\n+              }\n+              cfs->skip_u1(attribute_length, CHECK);\n+          } else {\n+            \/\/ Unknown attribute\n+            cfs->skip_u1(attribute_length, CHECK);\n+>>>>>>> 2919ad2cc20c2c915d2b5a20b3fd83d97b8223dd\n@@ -4563,3 +4594,3 @@\n-                                this_klass->external_name(),\n-                                super_m->method_holder()->external_name(),\n-                                name->as_C_string(),\n+                                 this_klass->external_name(),\n+                                 super_m->method_holder()->external_name(),\n+                                 name->as_C_string(),\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":39,"deletions":8,"binary":false,"changes":47,"status":"modified"}]}