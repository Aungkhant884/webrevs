{"files":[{"patch":"@@ -115,1 +115,0 @@\n-    int isSrcPremult;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/common.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -247,4 +247,0 @@\n-    if (uniforms.isSrcPremult) {\n-        pixelColor.rgb \/= srcA;\n-    }\n-\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/shaders.metal","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -652,0 +652,12 @@\n+void copyFromMTLBuffer(void *pDst, id<MTLBuffer> srcBuf, jint offset, jint len, BOOL convertFromArgbPre) {\n+    char *pSrc = (char*)srcBuf.contents + offset;\n+    if (convertFromArgbPre) {\n+        jint pixelLen = len>>2;\n+        for (int i = 0; i < pixelLen; i++) {\n+            LoadIntArgbPreTo1IntArgb((jint*)pSrc, 0, i, ((jint*)pDst)[i]);\n+        }\n+    } else {\n+        memcpy(pDst, pSrc, len);\n+    }\n+}\n+\n@@ -722,1 +734,1 @@\n-            const int srcLength = width * height * 4; \/\/ NOTE: assume that src format is MTLPixelFormatBGRA8Unorm\n+            const int byteLength = width * height * 4; \/\/ NOTE: assume that src format is MTLPixelFormatBGRA8Unorm\n@@ -774,1 +786,1 @@\n-               destinationBytesPerImage:width * height*4];\n+               destinationBytesPerImage:byteLength];\n@@ -782,0 +794,1 @@\n+            BOOL convertFromPre = !RasterFormatInfos[dsttype].isPremult && !srcOps->isOpaque;\n@@ -786,1 +799,1 @@\n-                    memcpy(pDst, mtlbuf.contents, srcLength);\n+                    copyFromMTLBuffer(pDst, mtlbuf, 0, byteLength, convertFromPre);\n@@ -794,1 +807,1 @@\n-                        memcpy(pDst, mtlbuf.contents + (y * rowSize), rowSize);\n+                        copyFromMTLBuffer(pDst, mtlbuf, y * rowSize, rowSize, convertFromPre);\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLBlitLoops.m","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -870,3 +870,1 @@\n-    struct TxtFrameUniforms uf = {\n-      RGBA_TO_V4(color), mode, srcFlags->isOpaque, srcFlags->isPremultiplied,\n-      dstFlags->isOpaque, extraAlpha};\n+    struct TxtFrameUniforms uf = {RGBA_TO_V4(color), mode, srcFlags->isOpaque, dstFlags->isOpaque, extraAlpha};\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLPaints.m","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}