{"files":[{"patch":"@@ -42,0 +42,2 @@\n+\n+    \/\/ Pass the insets to native code to make adjustments in blitTexture\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLLayer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,2 +54,0 @@\n-import static sun.java2d.metal.MTLContext.MTLContextCaps.CAPS_EXT_LCD_SHADER;\n-import static sun.java2d.metal.MTLContext.MTLContextCaps.CAPS_EXT_TEXRECT;\n@@ -58,1 +56,0 @@\n-import static sun.java2d.pipe.BufferedOpCodes.SWAP_BUFFERS;\n@@ -104,8 +101,0 @@\n-    \/** This will be true if the fbobject system property has been enabled. *\/\n-    private static boolean isFBObjectEnabled;\n-    \/** This will be true if the lcdshader system property has been enabled.*\/\n-    private static boolean isLCDShaderEnabled;\n-    \/** This will be true if the biopshader system property has been enabled.*\/\n-    private static boolean isBIOpShaderEnabled;\n-    \/** This will be true if the gradshader system property has been enabled.*\/\n-    private static boolean isGradShaderEnabled;\n@@ -115,24 +104,0 @@\n-            \/\/ fbobject currently enabled by default; use \"false\" to disable\n-            String fbo = java.security.AccessController.doPrivileged(\n-                    new sun.security.action.GetPropertyAction(\n-                            \"java2d.metal.fbobject\"));\n-            isFBObjectEnabled = !\"false\".equals(fbo);\n-\n-            \/\/ lcdshader currently enabled by default; use \"false\" to disable\n-            String lcd = java.security.AccessController.doPrivileged(\n-                    new sun.security.action.GetPropertyAction(\n-                            \"java2d.metal.lcdshader\"));\n-            isLCDShaderEnabled = !\"false\".equals(lcd);\n-\n-            \/\/ biopshader currently enabled by default; use \"false\" to disable\n-            String biop = java.security.AccessController.doPrivileged(\n-                    new sun.security.action.GetPropertyAction(\n-                            \"java2d.metal.biopshader\"));\n-            isBIOpShaderEnabled = !\"false\".equals(biop);\n-\n-            \/\/ gradshader currently enabled by default; use \"false\" to disable\n-            String grad = java.security.AccessController.doPrivileged(\n-                    new sun.security.action.GetPropertyAction(\n-                            \"java2d.metal.gradshader\"));\n-            isGradShaderEnabled = !\"false\".equals(grad);\n-\n@@ -185,14 +150,0 @@\n-    static void swapBuffers(long window) {\n-        MTLRenderQueue rq = MTLRenderQueue.getInstance();\n-        rq.lock();\n-        try {\n-            RenderBuffer buf = rq.getBuffer();\n-            rq.ensureCapacityAndAlignment(12, 4);\n-            buf.putInt(SWAP_BUFFERS);\n-            buf.putLong(window);\n-            rq.flushNow();\n-        } finally {\n-            rq.unlock();\n-        }\n-    }\n-\n@@ -225,1 +176,1 @@\n-    @Override \/\/SurfaceData\n+    @Override\n@@ -241,2 +192,1 @@\n-     * Creates a SurfaceData object representing an off-screen buffer (either a\n-     * FBO or Texture).\n+     * Creates a SurfaceData object representing an off-screen buffer\n@@ -322,1 +272,1 @@\n-                    \/\/ creating the texture or fbobject\n+                    \/\/ creating the texture\n@@ -538,6 +488,0 @@\n-    \/**\n-     * Returns true if the surface is an on-screen window surface or\n-     * a FBO texture attached to an on-screen CALayer.\n-     *\n-     * Needed by Mac OS X port.\n-     *\/\n@@ -545,1 +489,1 @@\n-        return getType() == WINDOW;\n+        return false;\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLSurfaceData.java","additions":4,"deletions":60,"binary":false,"changes":64,"status":"modified"}]}