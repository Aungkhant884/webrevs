[{"commit":{"message":"Merge jdk:master"},"files":[{"filename":".jcheck\/conf"},{"filename":"src\/demo\/share\/java2d\/RenderPerfTest\/Makefile"}],"sha":"f760929783f6d533fe8b5080c74238c5d5866102"},{"commit":{"message":"8255934: JConsole 14 and greater fails to connect to older JVM\n\nReviewed-by: cjplummer, sspitsyn"},"files":[{"filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/SummaryTab.java"}],"sha":"14de791d60c2421d8f36084d1f9435ed88901677"},{"commit":{"message":"8256806: Shenandoah: optimize shenandoah\/jni\/TestPinnedGarbage.java test\n\nReviewed-by: rkennke"},"files":[{"filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/jni\/TestPinnedGarbage.java"}],"sha":"86f36027e40388d61111cd05dce667720f9feeff"},{"commit":{"message":"8256073: Improve vector rematerialization support\n\nReviewed-by: thartmann, kvn"},"files":[{"filename":"src\/hotspot\/share\/prims\/vectorSupport.cpp"},{"filename":"src\/hotspot\/share\/prims\/vectorSupport.hpp"}],"sha":"57025e65e1f6fac7414c1ca34d4d1ad08a790bbf"},{"commit":{"message":"8255367: C2: Deoptimization during vector box construction is broken\n\nReviewed-by: thartmann, kvn"},"files":[{"filename":"src\/hotspot\/share\/opto\/graphKit.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/vector.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"}],"sha":"41c05876bcbc02d19c4d7c784cb117e5080c46e3"},{"commit":{"message":"8256061: RegisterSaver::save_live_registers() omits upper halves of ZMM0-15 registers\n\nReviewed-by: kvn"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"f79e9d4573e2e5cb430ee37609d808e4c4e04b1f"},{"commit":{"message":"8256056: Deoptimization stub doesn't save vector registers on x86\n\nReviewed-by: redestad, kvn"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"503590f6bfc0aca74f4804a373b00afaeafa8385"},{"commit":{"message":"8256058: Improve vector register handling in RegisterMap::pd_location() on x86\n\nReviewed-by: kvn"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/registerMap_x86.cpp"}],"sha":"e6fa85b493ab588417494a427c297ed395b6cc8e"},{"commit":{"message":"8256183: InputStream.skipNBytes is missing @since 12\n\nReviewed-by: dfuchs, lancea, bpb"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/InputStream.java"}],"sha":"be6c89366fcdff99679a56ee83651c2bf1c95636"},{"commit":{"message":"8256507: Add a micro benchmark for JDK-8153005\n\nReviewed-by: shade"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/PKCS12KeyStores.java"}],"sha":"b21b96df2162c72098afcdfd2cf243a55a0f17e1"},{"commit":{"message":"8255908: ExceptionInInitializerError due to UncheckedIOException while initializing cgroupv1 subsystem\n\nReviewed-by: shade, sgehwolf, bobv"},"files":[{"filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemController.java"},{"filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupUtil.java"},{"filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1Subsystem.java"},{"filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv2\/CgroupV2Subsystem.java"}],"sha":"8d9cf48e813dee9567340720978392e04f736e65"},{"commit":{"message":"8256658: Shenandoah: Deadlock between nmethod_entry_barrier and concurrent code root evacuator\n\nReviewed-by: rkennke"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"5ad1e228662afd48c3423b74da1245ee11d214d7"},{"commit":{"message":"8037384: Fix wording in Javadoc of java.io.Serializable\n8231547: Serializable class doc should link to serialization specification\n\nReviewed-by: rriggs, iris, chegar"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/Serializable.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/package-info.java"}],"sha":"cc0ed401ec982565a2b865bd86fb67a0dbef62df"},{"commit":{"message":"8256751: Incremental rebuild with precompiled header fails when touching a header file\n\nReviewed-by: ihse"},"files":[{"filename":"make\/common\/NativeCompilation.gmk"}],"sha":"19b2898691f945f0d6257e88ec74e291d5d7f277"},{"commit":{"message":"8256803: ProblemList runtime\/ReservedStack\/ReservedStackTestCompiler.java on linux-aarch64\n\nReviewed-by: mikael"},"files":[{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"}],"sha":"4dd71ae1c5a3f9f34abffb04a978bdb0d23737bc"},{"commit":{"message":"8211449: Correction to the spec of implicit negative subpattern in DecimalFormat\n\nReviewed-by: bpb"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormat.java"}],"sha":"2c3a2bed6d41fa1be35fe8118c88afa7ddcc1574"},{"commit":{"message":"8235304: JPackage Windows test should be added to set Publisher\n\nReviewed-by: herrick, almatvee"},"files":[{"filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/VendorTest.java"}],"sha":"11bfdc57f90c96bf83bde22736efee999a1c4924"},{"commit":{"message":"8229845: Decrease memory consumption of BigInteger.toString()\n\nReviewed-by: redestad"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"},{"filename":"test\/jdk\/java\/math\/BigInteger\/BigIntegerTest.java"}],"sha":"2ae3e51f596ed0dfa483c9e741db19fd905990b4"},{"commit":{"message":"8256569: Add C2 compiler stress flags to CTW\n\nReviewed-by: kvn, shade, thartmann"},"files":[{"filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/CtwRunner.java"}],"sha":"ff00c591c342bd32efae387e839d1b12551d4c07"},{"commit":{"message":"8246378: [Windows] assert on MethodHandle logging code\n\nReviewed-by: iklam, vlivanov"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/stubRoutines_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/stubRoutines_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/methodHandles_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86_64.cpp"},{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/os_windows_aarch64.cpp"},{"filename":"src\/hotspot\/os_cpu\/windows_x86\/os_windows_x86.cpp"},{"filename":"src\/hotspot\/share\/runtime\/os.cpp"},{"filename":"test\/hotspot\/jtreg\/runtime\/logging\/RedefineClasses.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/logging\/TestMethodHandlesVerbose.java"}],"sha":"e7c7469cf538a8f957b5a381b361c3a33401b36c"},{"commit":{"message":"8256664: Shenandoah: Cleanup after JDK-8212879\n\nReviewed-by: rkennke"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahParallelCleaning.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahParallelCleaning.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"98a5d5a6eecde7050e11020a08a609833bd9e7d4"},{"commit":{"message":"8033441: print line numbers with -XX:+PrintOptoAssembly\n\nReviewed-by: jiefu, thartmann"},"files":[{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestPrintOptoAssemblyLineNumbers.java"}],"sha":"b99fd4c7d6c221cd9b0898fd7bb7951ea9f357e8"},{"commit":{"message":"8256688: Shenandoah: Lock rank inversion after JDK-8212879\n\nReviewed-by: rkennke"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.hpp"}],"sha":"266dea06ec1dffc804f7405e662e35807ad600bb"},{"commit":{"message":"8256416: ZGC: Lower ZMarkCompleteTimeout\n\nReviewed-by: ayang, eosterlund"},"files":[{"filename":"src\/hotspot\/share\/gc\/z\/zGlobals.hpp"}],"sha":"aeba9259b27621c810705fe7bbe3aea5d9b67da9"},{"commit":{"message":"8256727: ZGC: Clean out dead code after JDK-8212879\n\nReviewed-by: pliden"},"files":[{"filename":"src\/hotspot\/share\/gc\/z\/zBarrier.cpp"},{"filename":"src\/hotspot\/share\/gc\/z\/zBarrier.hpp"},{"filename":"src\/hotspot\/share\/gc\/z\/zBarrier.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/z\/zOopClosures.hpp"},{"filename":"src\/hotspot\/share\/gc\/z\/zOopClosures.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp"},{"filename":"src\/hotspot\/share\/gc\/z\/zStackWatermark.hpp"},{"filename":"src\/hotspot\/share\/gc\/z\/zWeakRootsProcessor.cpp"},{"filename":"src\/hotspot\/share\/gc\/z\/zWeakRootsProcessor.hpp"}],"sha":"10ba5418465c5d3280b7113d6b902b6d4b5ca533"},{"commit":{"message":"6232281: -XX:-UseLoopSafepoints causes assert(v_false,\"Parse::remove_useless_nodes missed this node\")\n\nCheck for nodes missed by remove_useless_nodes() only if PhaseRemoveUseless has\nactually been run. This makes it possible to use -XX:-UseLoopSafepoints without\ncrashing trivially, although implicit assumptions in other parts of C2 about the\nexistence of loop safepoints might lead to more subtle failures for more complex\nmethods.\n\nReviewed-by: neliasso, thartmann, kvn"},"files":[{"filename":"src\/hotspot\/share\/opto\/phaseX.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestDisableUseLoopSafepoints.java"}],"sha":"eb35ade9a0c4a9e962c15593116e823e573c6b82"},{"commit":{"message":"8256406: G1 x86 C1\/Interpreter post write barrier always uses 32 bit to access variable sized PtrQueue::_index\n\nReviewed-by: shade"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/ptrQueue.hpp"}],"sha":"a25fb0356a4fd66a4e32ab742d0d015a828dfb03"},{"commit":{"message":"8256633: Fix product build on Windows+Arm64\n\nReviewed-by: shade"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"}],"sha":"f57662874afe03250050b88ced07eb480484802b"},{"commit":{"message":"8255526: Enable jcheck whitespace checking of build system files\n\nReviewed-by: shade, erikj"},"files":[{"filename":".jcheck\/conf"},{"filename":"make\/autoconf\/jvm-features.m4"},{"filename":"make\/modules\/java.base\/gendata\/GendataCryptoPolicy.gmk"}],"sha":"8e7a855ee8f085cee080395058f79c8a75bfef40"},{"commit":{"message":"8256393: Github Actions build on Linux should define OS and GCC versions\n\nReviewed-by: shade, erikj, ihse"},"files":[{"filename":".github\/workflows\/submit.yml"}],"sha":"c45ab1aada9a159b1160396724d91d7dd05e53b6"},{"commit":{"message":"8250888: nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t001\/TestDriver.java fails\n\nReviewed-by: cjplummer, sspitsyn"},"files":[{"filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF08\/gf08t001\/TestDriver.java"}],"sha":"5fedb69e66f55960bc334db951fc8224fea8489e"},{"commit":{"message":"8255885: Metaspace: freelist commit counter is not updated when purging\n\nReviewed-by: coleenp, iklam"},"files":[{"filename":"src\/hotspot\/share\/memory\/metaspace\/chunkManager.cpp"},{"filename":"src\/hotspot\/share\/memory\/metaspace\/chunkManager.hpp"},{"filename":"src\/hotspot\/share\/memory\/metaspace\/freeChunkList.cpp"},{"filename":"src\/hotspot\/share\/memory\/metaspace\/freeChunkList.hpp"},{"filename":"test\/hotspot\/gtest\/metaspace\/test_metachunklist.cpp"},{"filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena.cpp"}],"sha":"02adaa5854d1f75de0d2fb3f414d481bffc49ac1"},{"commit":{"message":"8256594: Unexpected warning: SIGSEGV handler flags expected:SA_RESTART|SA_SIGINFO found:SA_RESTART|SA_SIGINFO\n\nReviewed-by: stuefe, coleenp, dcubed"},"files":[{"filename":"src\/hotspot\/os\/posix\/signals_posix.cpp"}],"sha":"fa240f2261792916885a155d10736dba5db20424"},{"commit":{"message":"8256108: Create implementation for NSAccessibilityElement protocol peer\n\nReviewed-by: serb"},"files":[{"filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m"}],"sha":"4c095252a540ea799d6014fb42e6ebedb3b24196"}]