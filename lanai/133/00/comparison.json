{"files":[{"patch":"@@ -162,0 +162,2 @@\n+    const int sw = srcInfo->bounds.x2 - srcInfo->bounds.x1;\n+    const int sh = srcInfo->bounds.y2 - srcInfo->bounds.y1;\n@@ -166,1 +168,1 @@\n-    raster += srcInfo->bounds.y1*srcInfo->scanStride + srcInfo->bounds.x1*srcInfo->pixelStride;\n+    raster += (NSUInteger)srcInfo->bounds.y1 * (NSUInteger)srcInfo->scanStride + (NSUInteger)srcInfo->bounds.x1 * (NSUInteger)srcInfo->pixelStride;\n@@ -172,1 +174,10 @@\n-        id<MTLBuffer> buff = [mtlc.device newBufferWithBytes:raster length:srcInfo->scanStride * dh options:MTLResourceStorageModeManaged];\n+\n+        id<MTLBuffer> buff = [mtlc.device newBufferWithLength:(sw * sh * srcInfo->pixelStride) options:MTLResourceStorageModeManaged];\n+\n+        \/\/ copy src pixels inside src bounds to buff\n+        for (int row = 0; row < sh; row++) {\n+            memcpy(buff.contents + (row * sw * srcInfo->pixelStride), raster, sw * srcInfo->pixelStride);\n+            raster += (NSUInteger)srcInfo->scanStride;\n+        }\n+        [buff didModifyRange:NSMakeRange(0, buff.length)];\n+\n@@ -174,1 +185,1 @@\n-            id <MTLBuffer> swizzled = [mtlc.device newBufferWithLength:srcInfo->scanStride * dh options:MTLResourceStorageModeManaged];\n+            id <MTLBuffer> swizzled = [mtlc.device newBufferWithLength:(sw * sh * srcInfo->pixelStride) options:MTLResourceStorageModeManaged];\n@@ -201,2 +212,2 @@\n-                       sourceOffset:0 sourceBytesPerRow:srcInfo->scanStride\n-                sourceBytesPerImage:srcInfo->scanStride * dh sourceSize:MTLSizeMake(dw, dh, 1)\n+                       sourceOffset:0 sourceBytesPerRow:(sw * srcInfo->pixelStride)\n+                sourceBytesPerImage:(sw * sh * srcInfo->pixelStride) sourceSize:MTLSizeMake(sw, sh, 1)\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLBlitLoops.m","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"}]}