[{"commit":{"message":"Merge jdk:master"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/autoconf\/toolchain.m4"}],"sha":"0857084726e1187c964c341079f2dea28eb5fcda"},{"commit":{"message":"8253762: JFR: getField(String) should be able to access subfields\n\nReviewed-by: mgronlun"},"files":[{"filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java"},{"filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java"},{"filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Type.java"},{"filename":"test\/jdk\/jdk\/jfr\/api\/metadata\/eventtype\/TestGetField.java"}],"sha":"cef606feca805c614004357ca691418521f207e1"},{"commit":{"message":"8257670: sun\/security\/ssl\/SSLSocketImpl\/SSLSocketLeak.java reports leaks\n\nReviewed-by: jnimeh"},"files":[{"filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketLeak.java"}],"sha":"39b8a2e68219986d533ae9567fdfaaca753141a7"},{"commit":{"message":"8257796: [TESTBUG] TestUseSHA512IntrinsicsOptionOnSupportedCPU.java fails on x86_32\n\nReviewed-by: kvn"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/sha\/cli\/TestUseSHA512IntrinsicsOptionOnSupportedCPU.java"}],"sha":"c43c224ef9ce91a711ca3ddec6df6479e94309d9"},{"commit":{"message":"8257211: C2: Enable call devirtualization during post-parse phase\n\nReviewed-by: kvn, neliasso, thartmann"},"files":[{"filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.cpp"},{"filename":"src\/hotspot\/share\/opto\/c2_globals.hpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.hpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/doCall.cpp"},{"filename":"src\/hotspot\/share\/opto\/multnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/multnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/node.cpp"},{"filename":"src\/hotspot\/share\/opto\/phaseX.cpp"},{"filename":"src\/hotspot\/share\/opto\/phasetype.hpp"},{"filename":"src\/hotspot\/share\/utilities\/growableArray.hpp"}],"sha":"62c7788b296e0bdf17050b512d5a779c7d68522c"},{"commit":{"message":"8257572: Deprecate the archaic signal-chaining interfaces: sigset and signal\n\nReviewed-by: ihse, alanb, dcubed, erikj"},"files":[{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"src\/java.base\/unix\/native\/libjsig\/jsig.c"}],"sha":"149a02f99a10f42431bfa58ad7508f32285c33be"},{"commit":{"message":"8257718: LogCompilation: late_inline doesnt work right for JDK 8 logs\n\nReviewed-by: redestad, kvn"},"files":[{"filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogParser.java"}],"sha":"f92745d73e7f16dc1b946c4d104849a2dfb0b55c"},{"commit":{"message":"8257799: Update JLS cross-references in java.compiler\n\nReviewed-by: jjg"},"files":[{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/SourceVersion.java"},{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/VariableElement.java"}],"sha":"6937d9f9ddb0a8b6dfeebbeb67e33e454ff10b7b"},{"commit":{"message":"8254939: macOS: unused function 'replicate4_imm'\n\nReviewed-by: redestad, thartmann"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"a5297bd0d402d521916e597d7e1671c19f00db92"},{"commit":{"message":"8257805: Add compiler\/blackhole tests to tier1\n\nReviewed-by: kvn"},"files":[{"filename":"test\/hotspot\/jtreg\/TEST.groups"}],"sha":"36c060052358ebe533d79520272627bd7ca50776"},{"commit":{"message":"8257817: Shenandoah: Don't race with conc-weak-in-progress flag in weak-LRB\n\nReviewed-by: rkennke"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"395b6bdeee2d9c21234bc2ef37b290947b644d1d"},{"commit":{"message":"8255619: Localized WinResources.properties have MsiInstallerStrings_en.wxl resource\n\nReviewed-by: herrick, naoto, asemenyuk"},"files":[{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_ja.properties"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_zh_CN.properties"}],"sha":"a265c2013860f1d3f32a451418842d56ee5d2ec7"},{"commit":{"message":"8257514: Fix the issues in jdk.jpackage identified by SpotBugs\n\nReviewed-by: asemenyuk, almatvee, shade"},"files":[{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CfgFile.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/DeployParams.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/IOUtils.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/OverridableResource.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PathGroup.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ToolValidator.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/main\/CommandLine.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/ExecutableRebrander.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinMsiBundler.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsAppImageBuilder.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixPipeline.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixSourcesBuilder.java"}],"sha":"e3793e5a608fd44ff479734182af20a06eb0ec14"},{"commit":{"message":"8257186: Size of heap segments is not computed correctlyFix overflow in size computation for heap segments\n\nReviewed-by: jvernee, chegar"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"bbc44f57c4714a49e72a09f0b9d05765d6b41e9b"},{"commit":{"message":"8254784: javac should reject records with @SafeVarargs applied to varargs record component\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/SafeVarargsNotApplicableToRecordAccessors.java"},{"filename":"test\/langtools\/tools\/javac\/records\/RecordCompilationTests.java"}],"sha":"b4b9828cb0e7e890b244b16fdd44754a616af201"},{"commit":{"message":"8257788: Class fields could be local in the SunJSSE provider\n\nReviewed-by: shade"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertStatusExtension.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/HKDF.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSecretDerivation.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTrafficKeyDerivation.java"}],"sha":"dcf63f857872489a082be970438b5365c7a83b4a"},{"commit":{"message":"8257679: Improved unix compatibility layer in Windows build (winenv)\n\nReviewed-by: erikj, jvernee, burban"},"files":[{"filename":".github\/workflows\/submit.yml"},{"filename":"make\/GenerateLinkOptData.gmk"},{"filename":"make\/InterimImage.gmk"},{"filename":"make\/RunTests.gmk"},{"filename":"make\/RunTestsPrebuilt.gmk"},{"filename":"make\/RunTestsPrebuiltSpec.gmk"},{"filename":"make\/TestImage.gmk"},{"filename":"make\/autoconf\/basic.m4"},{"filename":"make\/autoconf\/basic_tools.m4"},{"filename":"make\/autoconf\/basic_windows.m4"},{"filename":"make\/autoconf\/boot-jdk.m4"},{"filename":"make\/autoconf\/bootcycle-spec.gmk.in"},{"filename":"make\/autoconf\/build-aux\/config.guess"},{"filename":"make\/autoconf\/build-aux\/config.sub"},{"filename":"make\/autoconf\/build-performance.m4"},{"filename":"make\/autoconf\/compare.sh.in"},{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/flags-cflags.m4"},{"filename":"make\/autoconf\/flags-ldflags.m4"},{"filename":"make\/autoconf\/flags.m4"},{"filename":"make\/autoconf\/help.m4"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/platform.m4"},{"filename":"make\/autoconf\/source-dirs.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/autoconf\/toolchain.m4"},{"filename":"make\/autoconf\/toolchain_microsoft.m4"},{"filename":"make\/autoconf\/toolchain_windows.m4"},{"filename":"make\/autoconf\/util.m4"},{"filename":"make\/autoconf\/util_paths.m4"},{"filename":"make\/autoconf\/util_windows.m4"},{"filename":"make\/common\/JavaCompilation.gmk"},{"filename":"make\/common\/MakeBase.gmk"},{"filename":"make\/common\/NativeCompilation.gmk"},{"filename":"make\/common\/Utils.gmk"},{"filename":"make\/common\/modules\/GensrcCommonLangtools.gmk"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/hotspot\/test\/GtestImage.gmk"},{"filename":"make\/ide\/idea\/jdk\/idea.gmk"},{"filename":"make\/ide\/visualstudio\/hotspot\/CreateVSProject.gmk"},{"filename":"make\/ide\/vscode\/hotspot\/CreateVSCodeProject.gmk"},{"filename":"make\/jdk\/src\/classes\/build\/tools\/generatecharacter\/GenerateCharacter.java"},{"filename":"make\/modules\/java.base\/Copy.gmk"},{"filename":"make\/modules\/java.base\/gensrc\/GensrcCharacterData.gmk"},{"filename":"make\/modules\/java.base\/gensrc\/GensrcCharsetCoder.gmk"},{"filename":"make\/scripts\/extract-vs-env.cmd"},{"filename":"make\/scripts\/fixpath.sh"},{"filename":"make\/scripts\/windowsShortName.bat"},{"filename":"make\/src\/native\/fixpath.c"},{"filename":"src\/hotspot\/share\/adlc\/main.cpp"}],"sha":"d29c78da19ba78214efe9e7856cde30fdd9ba8ab"},{"commit":{"message":"8257517: LogCompilation: Add -z to the help messages\n\nReviewed-by: redestad"},"files":[{"filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogCompilation.java"}],"sha":"74be819088e13e244131cfb32d7d498ab213d075"},{"commit":{"message":"8257037: No javac warning when calling deprecated constructor with diamond\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java"},{"filename":"test\/langtools\/tools\/javac\/T8257037\/T8257037.java"},{"filename":"test\/langtools\/tools\/javac\/T8257037\/T8257037.out"}],"sha":"2c04fc02c929a117ce620ac70e3b957c4afc3c40"},{"commit":{"message":"8257798: [PPC64] undefined reference to Klass::vtable_start_offset()\n\nReviewed-by: goetz"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"}],"sha":"46b35acfcbc717891fec4822292628716fb35bac"},{"commit":{"message":"8257793: Shenandoah: SATB barrier should only filter out already strongly marked oops\n\nReviewed-by: shade, rkennke"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"ecd7e476f838d6585d352488905a671bf2e41df3"},{"commit":{"message":"8257820: Remove gc\/ergonomics\/TestMinHeapSize.java as it is too brittle\n\nReviewed-by: jiefu, kbarrett"},"files":[],"sha":"e08b9ed0be09b6553925843467cc9d6f928f08d5"},{"commit":{"message":"8246778: Compiler implementation for Sealed Classes (Second Preview)\n\nCo-authored-by: Vicente Romero <vromero@openjdk.org>\nCo-authored-by: Harold Seigel <hseigel@openjdk.org>\nReviewed-by: lfoltan, mchung, alanb, mcimadamore, chegar"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/native\/libjava\/Class.c"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/GetPermittedSubclasses.jcod"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/GetPermittedSubclassesTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/noSubclass\/BaseC.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/noSubclass\/BaseI.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/noSubclass\/Impl1.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/noSubclass\/Impl2.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/sealed_classes\/SealedClassesReflectionTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/sealed_classes\/TestSecurityManagerChecks.java"},{"filename":"test\/langtools\/tools\/javac\/sealed\/BinaryCompatibilityTests.java"},{"filename":"test\/langtools\/tools\/javac\/sealed\/SealedCompilationTests.java"}],"sha":"637b0c64b0a5d67d31b4b61dee55e8d682790da0"},{"commit":{"message":"8252807: The jdk.jfr.Recording.getStream does not work when toDisk is disabled\n\nReviewed-by: mgronlun"},"files":[{"filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Recording.java"}],"sha":"09707dd4f27b28980bf55030d36b5f3ec4a96831"},{"commit":{"message":"8257184: Upstream 8252504: Add a method to MemoryLayout which returns a offset-computing method handle\n\nReviewed-by: mcimadamore, chegar"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryLayout.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"}],"sha":"04ce8e38405c35aa6433c9b74c3ddd99781e1d27"},{"commit":{"message":"8255560: Class::isRecord should check that the current class is final and not abstract\n\nReviewed-by: mchung, darcy"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/records\/IsRecordTest.java"},{"filename":"test\/lib\/jdk\/test\/lib\/ByteCodeLoader.java"}],"sha":"5a03e47605a75e517230c31ccd9f6870310ec029"},{"commit":{"message":"8257588: Make os::_page_sizes a bitmask\n\nReviewed-by: tschatzl, stefank"},"files":[{"filename":"src\/hotspot\/os\/aix\/os_aix.cpp"},{"filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp"},{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/hotspot\/os\/windows\/os_windows.cpp"},{"filename":"src\/hotspot\/share\/runtime\/os.cpp"},{"filename":"src\/hotspot\/share\/runtime\/os.hpp"},{"filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp"}],"sha":"8e8e58455201b0158b3099c64824987d2e9d42d0"},{"commit":{"message":"8254802: ThrowingPushPromisesAsStringCustom.java fails in \"try throwing in GET_BODY\"\n\nReviewed-by: michaelm"},"files":[{"filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/Http2TestServerConnection.java"}],"sha":"566d77a2ae4ee8830c989ea03f7bc6923df061cd"},{"commit":{"message":"8257575: C2: \"failed: only phis\" assert failure in loop strip mining verification\n\nReviewed-by: thartmann, neliasso"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestEliminatedLoadPinnedOnBackedge.java"}],"sha":"f5a582c2871ef2a64e6860665ae1ce2ae05ae829"},{"commit":{"message":"8256679: Update serialization javadoc once JOSS changes for records are complete\n\nReviewed-by: chegar, rriggs"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/Serializable.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Record.java"}],"sha":"d05401d886125815f2e5704eef79667bd9be8ec0"},{"commit":{"message":"8257230: assert(InitialHeapSize >= MinHeapSize) failed: Ergonomics decided on incompatible initial and minimum heap sizes\n\nReviewed-by: tschatzl, sjohanss"},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"}],"sha":"7620124ee91f5be78356b5817d46eaf78c1e7b04"},{"commit":{"message":"8257803: Add -Xbatch to compiler\/blackhole tests\n\nReviewed-by: dholmes"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeInstanceReturnTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeInstanceTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNonVoidWarning.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNullCheckTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeStaticReturnTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeStaticTest.java"}],"sha":"05dac03f36a593c3e838552639ebf6820fd6c504"},{"commit":{"message":"8257668: SA JMap - skip non-java thread stack dump for heap dump\n\nReviewed-by: cjplummer, sspitsyn, phh"},"files":[{"filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/ThreadStackTrace.java"}],"sha":"29a09c8911f93bc8061382df1ddd9bc63a6a402a"}]