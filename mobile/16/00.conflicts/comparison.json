{"files":[{"patch":"@@ -38,0 +38,18 @@\n+<<<<<<< HEAD\n+=======\n+# Allow msys2\n+if echo $* | grep pc-msys >\/dev\/null ; then\n+    echo $*\n+    exit\n+fi\n+\n+# Filter out everything that doesn't begin with \"aarch64-\"\n+# or that ends with \"-ios\" or \"-android\"\n+if ! echo $* | egrep \"^aarch64-|-ios|-android\" >\/dev\/null ; then\n+    . $DIR\/autoconf-config.sub \"$@\"\n+    # autoconf-config.sub exits, so we never reach here, but just in\n+    # case we do:\n+    exit\n+fi\n+\n+>>>>>>> fc49f94f70baca688f0180986c16b729b0d78a09\n@@ -42,0 +60,15 @@\n+<<<<<<< HEAD\n+=======\n+        *-ios* )\n+            echo $1\n+            exit\n+            ;;\n+        *-android* )\n+            echo $1\n+            exit\n+            ;;\n+        aarch64-* )\n+            config=`echo $1 | sed 's\/^aarch64-\/arm-\/'`\n+            sub_args=\"$sub_args $config\"\n+            shift; ;;\n+>>>>>>> fc49f94f70baca688f0180986c16b729b0d78a09\n","filename":"make\/autoconf\/build-aux\/config.sub","additions":33,"deletions":0,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-    if test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n+    if test \"x$OPENJDK_TARGET_OS\" = xmacosx || test \"x$OPENJDK_TARGET_OS\" = xios ; then\n@@ -234,0 +234,1 @@\n+<<<<<<< HEAD\n@@ -236,0 +237,30 @@\n+=======\n+  if test \"x$OPENJDK_TARGET_OS\" = \"xmacosx\" || test \"x$OPENJDK_TARGET_OS\" = \"xios\" ; then\n+    if test -n \"$XCODEBUILD\"; then\n+      # On Mac OS X, default toolchain to clang after Xcode 5\n+      XCODE_VERSION_OUTPUT=`\"$XCODEBUILD\" -version | $HEAD -n 1`\n+      $ECHO \"$XCODE_VERSION_OUTPUT\" | $GREP \"Xcode \" > \/dev\/null\n+      if test $? -ne 0; then\n+        AC_MSG_NOTICE([xcodebuild output: $XCODE_VERSION_OUTPUT])\n+        AC_MSG_ERROR([Failed to determine Xcode version.])\n+      fi\n+      XCODE_MAJOR_VERSION=`$ECHO $XCODE_VERSION_OUTPUT | \\\n+          $SED -e 's\/^Xcode \\(@<:@1-9@:>@@<:@0-9.@:>@*\\)\/\\1\/' | \\\n+          $CUT -f 1 -d .`\n+      AC_MSG_NOTICE([Xcode major version: $XCODE_MAJOR_VERSION])\n+      if test $XCODE_MAJOR_VERSION -ge 5; then\n+          DEFAULT_TOOLCHAIN=\"clang\"\n+      else\n+          DEFAULT_TOOLCHAIN=\"gcc\"\n+      fi\n+    else\n+      # If Xcode is not installed, but the command line tools are\n+      # then we can't run xcodebuild. On these systems we should\n+      # default to clang\n+      DEFAULT_TOOLCHAIN=\"clang\"\n+    fi\n+  else\n+    # First toolchain type in the list is the default\n+    DEFAULT_TOOLCHAIN=${VALID_TOOLCHAINS%% *}\n+  fi\n+>>>>>>> fc49f94f70baca688f0180986c16b729b0d78a09\n@@ -906,5 +937,7 @@\n-    TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CC, [BuildC])\n-    TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CXX, [BuildC++])\n-    TOOLCHAIN_PREPARE_FOR_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_], [build ])\n-    TOOLCHAIN_EXTRACT_LD_VERSION(BUILD_LD, [build linker])\n-    TOOLCHAIN_PREPARE_FOR_LD_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_])\n+    if test \"x$OPENJDK_TARGET_OS\" != \"xandroid\"; then\n+      TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CC, [BuildC])\n+      TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CXX, [BuildC++])\n+      TOOLCHAIN_PREPARE_FOR_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_], [build ])\n+      TOOLCHAIN_EXTRACT_LD_VERSION(BUILD_LD, [build linker])\n+      TOOLCHAIN_PREPARE_FOR_LD_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_])\n+    fi\n","filename":"make\/autoconf\/toolchain.m4","additions":39,"deletions":6,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-ifeq ($(call isTargetOs, macosx), true)\n+ifeq ($(call isTargetOs, macosx ios), true)\n@@ -176,1 +176,1 @@\n-ifeq ($(call isTargetOs, macosx), true)\n+ifeq ($(call isTargetOs, macosx ios), true)\n@@ -214,0 +214,1 @@\n+<<<<<<< HEAD\n@@ -216,0 +217,5 @@\n+=======\n+    CFLAGS_ios := -I$(TOPDIR)\/src\/java.base\/macosx\/native\/libjli, \\\n+    DISABLED_WARNINGS_gcc := unused-function implicit-fallthrough, \\\n+    DISABLED_WARNINGS_clang := sometimes-uninitialized format-nonliteral, \\\n+>>>>>>> fc49f94f70baca688f0180986c16b729b0d78a09\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}