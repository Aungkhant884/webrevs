{"files":[{"patch":"@@ -1549,1 +1549,4 @@\n-                skip('*');\n+                if (skip('*') != 0 && is('\/')) {\n+                    return ;\n+                }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavaTokenizer.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928 8275097 8293897 8295401 8304671\n+ * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436 8267221 8271928 8275097 8293897 8295401 8304671 8312093\n@@ -2398,0 +2398,28 @@\n+    @Test \/\/JDK-8312093\n+    void testJavadoc() throws IOException {\n+        String code = \"\"\"\n+                      public class Test {\n+                          \/***\/\n+                          void main() {\n+                          }\n+                      }\n+                      \"\"\";\n+        DiagnosticCollector<JavaFileObject> coll =\n+                new DiagnosticCollector<>();\n+        JavacTaskImpl ct = (JavacTaskImpl) tool.getTask(null, fm, coll, null,\n+                null, Arrays.asList(new MyFileObject(code)));\n+        Trees trees = Trees.instance(ct);\n+        CompilationUnitTree cut = ct.parse().iterator().next();\n+        new TreePathScanner<Void, Void>() {\n+            @Override\n+            public Void visitMethod(MethodTree node, Void p) {\n+                if (!node.getName().contentEquals(\"main\")) {\n+                    return null;\n+                }\n+                String comment = trees.getDocComment(getCurrentPath());\n+                assertEquals(\"Expecting empty comment\", \"\", comment);\n+                return null;\n+            }\n+        }.scan(cut, null);\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"}]}