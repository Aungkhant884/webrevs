{"files":[{"patch":"@@ -42,0 +42,1 @@\n+    LOONGARCH64,\n@@ -72,0 +73,8 @@\n+    \/**\n+     * {@return {@code true} if the current architecture is LOONGARCH64}\n+     *\/\n+    @ForceInline\n+    public static boolean isLOONGARCH64() {\n+        return PlatformProps.TARGET_ARCH_IS_LOONGARCH64;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/Architecture.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    static final boolean TARGET_ARCH_IS_LOONGARCH64 = \"@@OPENJDK_TARGET_CPU@@\" == \"loongarch64\";\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/PlatformProps.java.template","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import static jdk.internal.util.Architecture.LOONGARCH64;\n@@ -73,0 +74,1 @@\n+            case \"loongarch64\" -> LOONGARCH64;\n@@ -91,0 +93,1 @@\n+                Arguments.of(LOONGARCH64, Architecture.isLOONGARCH64()),\n","filename":"test\/jdk\/jdk\/internal\/util\/ArchTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}