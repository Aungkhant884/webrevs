{"files":[{"patch":"@@ -2046,6 +2046,0 @@\n-  if (init->Opcode() == Op_CastII) {\n-    \/\/ skip over the cast added by PhaseIdealLoop::cast_incr_before_loop() when pre\/post\/main loops are created because\n-    \/\/ it can get in the way of type propagation\n-    assert(((CastIINode*)init)->carry_dependency() && loop_head->skip_predicates() == init->in(0), \"casted iv phi from pre loop expected\");\n-    init = init->in(1);\n-  }\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8309902\n+ * @summary C2: assert(false) failed: Bad graph detected in build_loop_late after JDK-8305189\n+ * @run main\/othervm  -Xcomp -XX:CompileCommand=compileonly,TestAssertPredicatePeeling::* TestAssertPredicatePeeling\n+ *\/\n+\n+\n+public class TestAssertPredicatePeeling {\n+    static volatile long instanceCount;\n+\n+    public static void main(String[] strArr) {\n+        test();\n+    }\n+\n+    static int test() {\n+        int i2 = 2, i17 = 3, i18 = 2, iArr[] = new int[10];\n+\n+        int i15 = 1;\n+        while (i15 < 100000) {\n+            for (int i16 = i15; i16 < 1; ++i16) {\n+                try {\n+                    iArr[i16] = 5 \/ iArr[6];\n+                    i17 = iArr[5] \/ i2;\n+                    i2 = i15;\n+                } catch (ArithmeticException a_e) {\n+                }\n+                instanceCount -= i15;\n+            }\n+            i15++;\n+        }\n+        return i17;\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestAssertPredicatePeeling.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}