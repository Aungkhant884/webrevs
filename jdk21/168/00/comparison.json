{"files":[{"patch":"@@ -2199,0 +2199,12 @@\n+  if (p0->is_CMove()) {\n+    \/\/ Verify that CMove has a matching Bool pack\n+    BoolNode* bol = p0->in(1)->as_Bool();\n+    if (bol == nullptr || my_pack(bol) == nullptr) {\n+      return false;\n+    }\n+    \/\/ Verify that Bool has a matching Cmp pack\n+    CmpNode* cmp = bol->in(1)->as_Cmp();\n+    if (cmp == nullptr || my_pack(cmp) == nullptr) {\n+      return false;\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8313345\n+ * @summary Test SuperWord with a CMove that does not have a matching bool pack.\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -XX:-TieredCompilation -XX:CompileCommand=compileonly,*TestCMoveWithoutBoolPack*::fill -Xbatch\n+ *                   compiler.vectorization.TestCMoveWithoutBoolPack\n+ * @run main\/othervm -XX:-TieredCompilation -XX:CompileCommand=compileonly,*TestCMoveWithoutBoolPack*::fill -Xbatch\n+ *                   -XX:+UseCMoveUnconditionally\n+ *                   compiler.vectorization.TestCMoveWithoutBoolPack\n+ *\/\n+\n+package compiler.vectorization;\n+\n+public class TestCMoveWithoutBoolPack {\n+\n+    public static void main(String[] args) {\n+        A a = new A();\n+        B b = new B();\n+        double[] c = new double[1000];\n+        for (int i = 0; i < 1000; i++) {\n+            a.fill(c);\n+            b.fill(c);\n+        }\n+    }\n+\n+    public static class A {\n+        void fill(double[] array) {\n+            for (int i = 0; i < array.length; ++i) {\n+                array[i] = this.transform(array[i]);\n+            }\n+        }\n+\n+        public double transform(double value) {\n+            return value * value;\n+        }\n+    }\n+\n+    public static class B extends A {\n+        public double transform(double value) {\n+            return value;\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestCMoveWithoutBoolPack.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}