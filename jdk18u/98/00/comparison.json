{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,0 +129,1 @@\n+  resourcehogs\/compiler \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -709,0 +709,14 @@\n+    static String longLatin1 = \"0123456789A\".repeat(100);\n+    static String longUTF = \"0123456789\\ubeef\".repeat(100);\n+\n+    @Test(role = Role.TEST_HELPER, compileAt = 4, warmup = 1, warmupArgs = { \"0123456789\", \"1\" })\n+    public static boolean indexOf_use_result_immediately(String a, String b) {\n+        char ch = b.charAt(0);\n+        return ch == a.charAt(a.indexOf(ch));\n+    }\n+\n+    @Test(role = Role.TEST_ENTRY)\n+    public static void test_indexOf_use_result_immediately() {\n+        assertTrue(indexOf_use_result_immediately(longLatin1, \"A\"));\n+        assertTrue(indexOf_use_result_immediately(longUTF, \"\\ubeef\"));\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringIntrinsics2.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016 SAP SE. All rights reserved.\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8254790\n+ * @requires vm.bits == \"64\" & os.maxMemory > 8G\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\n+ *\n+ * @build compiler.intrinsics.string.TestStringIntrinsics2\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm\n+ *        -mx8G\n+ *        -Xbootclasspath\/a:.\n+ *        -Xmixed\n+ *        -XX:+UnlockDiagnosticVMOptions\n+ *        -XX:+WhiteBoxAPI\n+ *        -XX:+IgnoreUnrecognizedVMOptions\n+ *        -XX:MaxInlineSize=70\n+ *        -XX:MinInlineFrequencyRatio=0\n+ *        resourcehogs.compiler.intrinsics.string.TestStringIntrinsics2LargeArray\n+ *\/\n+\n+package resourcehogs.compiler.intrinsics.string;\n+\n+import java.lang.ref.Reference;\n+\n+import compiler.intrinsics.string.TestStringIntrinsics2;\n+\n+public final class TestStringIntrinsics2LargeArray {\n+    public static void main(String[] args) throws Exception {\n+        int[] hugeArray = new int[Integer.MAX_VALUE \/ 2];\n+        TestStringIntrinsics2.main(args);\n+        Reference.reachabilityFence(hugeArray);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/resourcehogs\/compiler\/intrinsics\/string\/TestStringIntrinsics2LargeArray.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}