{"files":[{"patch":"@@ -33,0 +33,2 @@\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n@@ -40,2 +42,10 @@\n- * @run main\/othervm -XX:+UseTLAB -XX:TLABSize=100k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=1 jdk.jfr.event.allocation.TestObjectAllocationInNewTLABEvent\n- * @run main\/othervm -XX:+UseTLAB -XX:TLABSize=100k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=1 -Xint jdk.jfr.event.allocation.TestObjectAllocationInNewTLABEvent\n+ * @build sun.hotspot.WhiteBox\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=100k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=1\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationInNewTLABEvent\n+ * @run main\/othervm -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=100k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=1\n+ *                   -Xint\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationInNewTLABEvent\n@@ -49,2 +59,2 @@\n- *      the size of TLAB is set to 100k (-XX:TLABSize=100k);\n- *      the size of allocated objects is set to 100k minus 16 bytes overhead;\n+ *      the initial size of TLAB is set to 100k (-XX:TLABSize=100k);\n+ *      the size of allocated objects is set to 128k;\n@@ -57,3 +67,5 @@\n-    private static final int BYTE_ARRAY_OVERHEAD = 16; \/\/ Extra bytes used by a byte array.\n-    private static final int OBJECT_SIZE  = 100 * 1024;\n-    private static final int OBJECT_SIZE_ALT = OBJECT_SIZE + 8; \/\/ Object size in case of disabled CompressedOops.\n+    private static final Boolean COMPRESSED_CLASS_PTRS = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedClassPointers\");\n+\n+    private static final int BYTE_ARRAY_OVERHEAD = (Platform.is64bit() && !COMPRESSED_CLASS_PTRS) ? 24 : 16;\n+    private static final int OBJECT_SIZE = 128 * 1024;\n+\n@@ -115,1 +127,1 @@\n-        if (className.equals(BYTE_ARRAY_CLASS_NAME) && (allocationSize == OBJECT_SIZE || allocationSize == OBJECT_SIZE_ALT)) {\n+        if (className.equals(BYTE_ARRAY_CLASS_NAME) && (allocationSize == OBJECT_SIZE)) {\n@@ -117,1 +129,1 @@\n-            if (tlabSize == INITIAL_TLAB_SIZE + OBJECT_SIZE || tlabSize == INITIAL_TLAB_SIZE + OBJECT_SIZE_ALT) {\n+            if (tlabSize == INITIAL_TLAB_SIZE + OBJECT_SIZE) {\n","filename":"test\/jdk\/jdk\/jfr\/event\/allocation\/TestObjectAllocationInNewTLABEvent.java","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n@@ -40,2 +42,10 @@\n- * @run main\/othervm -XX:+UseTLAB -XX:TLABSize=90k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=256 jdk.jfr.event.allocation.TestObjectAllocationOutsideTLABEvent\n- * @run main\/othervm -XX:+UseTLAB -XX:TLABSize=90k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=256 -Xint jdk.jfr.event.allocation.TestObjectAllocationOutsideTLABEvent\n+ * @build sun.hotspot.WhiteBox\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=90k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=256\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationOutsideTLABEvent\n+ * @run main\/othervm -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=90k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=256\n+ *                   -Xint\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationOutsideTLABEvent\n@@ -49,2 +59,2 @@\n- *      the size of TLAB is set to 90k (-XX:TLABSize=90k);\n- *      the size of allocated objects is set to 100k.\n+ *      the initial size of TLAB is set to 90k (-XX:TLABSize=90k);\n+ *      the size of allocated objects is set to 128k;\n@@ -57,3 +67,5 @@\n-    private static final int BYTE_ARRAY_OVERHEAD = 16; \/\/ Extra bytes used by a byte array\n-    private static final int OBJECT_SIZE = 100 * 1024;\n-    private static final int OBJECT_SIZE_ALT = OBJECT_SIZE + 8; \/\/ Object size in case of disabled CompressedOops\n+    private static final Boolean COMPRESSED_CLASS_PTRS = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedClassPointers\");\n+\n+    private static final int BYTE_ARRAY_OVERHEAD = (Platform.is64bit() && !COMPRESSED_CLASS_PTRS) ? 24 : 16;\n+    private static final int OBJECT_SIZE = 128 * 1024;\n+\n@@ -97,1 +109,1 @@\n-        if (className.equals(BYTE_ARRAY_CLASS_NAME) && (allocationSize == OBJECT_SIZE || allocationSize == OBJECT_SIZE_ALT)) {\n+        if (className.equals(BYTE_ARRAY_CLASS_NAME) && (allocationSize == OBJECT_SIZE)) {\n","filename":"test\/jdk\/jdk\/jfr\/event\/allocation\/TestObjectAllocationOutsideTLABEvent.java","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n@@ -42,1 +44,6 @@\n-*  @run main\/othervm -XX:+UseTLAB -XX:TLABSize=2k -XX:-ResizeTLAB jdk.jfr.event.allocation.TestObjectAllocationSampleEventThrottling\n+ * @build sun.hotspot.WhiteBox\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=2k -XX:-ResizeTLAB\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationSampleEventThrottling\n@@ -48,3 +55,5 @@\n-    private static final int BYTE_ARRAY_OVERHEAD = 16; \/\/ Extra bytes used by a byte array\n-    private static final int OBJECT_SIZE = 100 * 1024;\n-    private static final int OBJECT_SIZE_ALT = OBJECT_SIZE + 8; \/\/ Object size in case of disabled CompressedOops\n+    private static final Boolean COMPRESSED_CLASS_PTRS = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedClassPointers\");\n+\n+    private static final int BYTE_ARRAY_OVERHEAD = (Platform.is64bit() && !COMPRESSED_CLASS_PTRS) ? 24 : 16;\n+    private static final int OBJECT_SIZE = 128 * 1024;\n+\n","filename":"test\/jdk\/jdk\/jfr\/event\/allocation\/TestObjectAllocationSampleEventThrottling.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"}]}