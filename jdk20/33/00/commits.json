[{"commit":{"message":"8298642: ParallelGC -XX:+UseNUMA eden spaces allocated on wrong node\n\nI noticed this when implementing JDK-8298482.  If UseAdaptiveSizePolicy\nand\/or UseAdaptiveNUMAChunkSizing are enabled and UseLargePages is *not*\nenabled, part of the eden spaces managed by MutableNUMASpace end up\nbound to the wrong node.  This seems to be a regression caused by\nJDK-8283935, specifically the addition of\n\n  set_page_size(alignment());\n\nto MutableNUMASpace::initialize().  Previously the page size would have\nbeen equal to os::vm_page_size() unless UseLargePages was enabled.\n\nIn bias_region() we call os::free_memory() to uncommit a range of pages\nso that they can be later allocated on a different node.  We pass\npage_size() as the alignment_hint argument. However on Linux this does\nnothing if alignment_hint is greater than os::vm_page_size() and THP is\nnot enabled, so the pages always remain bound to their original\nnode (see os::pd_free_memory() in os_linux.cpp).\n\nI think the solution here is to pass os::vm_page_size() as the\nalignment_hint when UseLargePages is disabled.\n\nI tested SPECjbb on a dual-socket AArch64 system with -XX:+UseParallelGC\n-XX:+UseNUMA but otherwise default options and critical-jOPS improved by\nabout 12% (averaged over several runs)."},"files":[{"filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp"}],"sha":"ba4f15b8c3a453f20aedcfb3c14832caf781c361"}]