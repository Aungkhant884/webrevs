{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import java.nio.file.LinkOption;\n@@ -39,0 +38,1 @@\n+import java.nio.file.attribute.FileTime;\n@@ -54,0 +54,1 @@\n+import static java.nio.file.LinkOption.NOFOLLOW_LINKS;\n@@ -225,1 +226,1 @@\n-        private long lastModified;\n+        private FileTime lastModified;\n@@ -228,1 +229,1 @@\n-        CacheEntry(long lastModified, int lastTickCount) {\n+        CacheEntry(FileTime lastModified, int lastTickCount) {\n@@ -237,1 +238,1 @@\n-        long lastModified() {\n+        FileTime lastModified() {\n@@ -241,1 +242,1 @@\n-        void update(long lastModified, int tickCount) {\n+        void update(FileTime lastModified, int tickCount) {\n@@ -283,2 +284,1 @@\n-                    long lastModified =\n-                        Files.getLastModifiedTime(entry, LinkOption.NOFOLLOW_LINKS).toMillis();\n+                    FileTime lastModified = Files.getLastModifiedTime(entry, NOFOLLOW_LINKS);\n@@ -361,1 +361,1 @@\n-                    long lastModified = 0L;\n+                    FileTime lastModified;\n@@ -363,2 +363,1 @@\n-                        lastModified =\n-                            Files.getLastModifiedTime(entry, LinkOption.NOFOLLOW_LINKS).toMillis();\n+                        lastModified = Files.getLastModifiedTime(entry, NOFOLLOW_LINKS);\n@@ -376,2 +375,1 @@\n-                        entries.put(entry.getFileName(),\n-                                     new CacheEntry(lastModified, tickCount));\n+                        entries.put(entry.getFileName(), new CacheEntry(lastModified, tickCount));\n@@ -396,1 +394,1 @@\n-                    if (e.lastModified != lastModified) {\n+                    if (!e.lastModified().equals(lastModified)) {\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/PollingWatchService.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"}]}