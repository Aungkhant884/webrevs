{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -369,0 +369,1 @@\n+    private int savedBlinkRate = 0;\n@@ -382,1 +383,10 @@\n-                setVisible(true);\n+                if (savedBlinkRate != 0) {\n+                    setBlinkRate(savedBlinkRate);\n+                    savedBlinkRate = 0;\n+                }\n+            } else {\n+                if (getBlinkRate() != 0) {\n+                    savedBlinkRate = getBlinkRate();\n+                    setBlinkRate(0);\n+                }\n+\n@@ -384,0 +394,1 @@\n+            setVisible(true);\n@@ -1035,2 +1046,7 @@\n-            if (flasher == null) {\n-                flasher = new Timer(rate, handler);\n+            if (component.isEditable()) {\n+                if (flasher == null) {\n+                    flasher = new Timer(rate, handler);\n+                }\n+                flasher.setDelay(rate);\n+            } else {\n+                savedBlinkRate = rate;\n@@ -1038,1 +1054,0 @@\n-            flasher.setDelay(rate);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/DefaultCaret.java","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,10 @@\n-import javax.swing.*;\n-import java.awt.*;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JTextField;\n+import javax.swing.MenuSelectionManager;\n+import javax.swing.SwingUtilities;\n+import java.awt.FlowLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n@@ -27,1 +35,0 @@\n-import java.awt.image.BufferedImage;\n@@ -42,1 +49,0 @@\n-    private static Rectangle bounds;\n@@ -70,5 +76,0 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            bounds = field2.getBounds();\n-            bounds.setLocation(field2.getLocationOnScreen());\n-        });\n-        BufferedImage nosel = robot.createScreenCapture(bounds);\n@@ -78,3 +79,0 @@\n-        robot.waitForIdle();\n-        robot.delay(200);\n-        BufferedImage sel = robot.createScreenCapture(bounds);\n@@ -92,1 +90,1 @@\n-        if (!biEqual(robot.createScreenCapture(bounds), sel)) {\n+        if (!field2.getCaret().isSelectionVisible()) {\n@@ -101,1 +99,1 @@\n-        if (!biEqual(robot.createScreenCapture(bounds), nosel)) {\n+        if (field2.getCaret().isSelectionVisible()) {\n@@ -122,1 +120,1 @@\n-        if (biEqual(robot.createScreenCapture(bounds), nosel)) {\n+        if (!field2.getCaret().isSelectionVisible()) {\n@@ -127,8 +125,0 @@\n-        SwingUtilities.invokeAndWait(anotherWindow::selectAll);\n-        robot.waitForIdle();\n-        robot.delay(200);\n-        if (biEqual(robot.createScreenCapture(bounds), sel)) {\n-            throw new RuntimeException(\n-                \"Test fails: selection ownership is lost selection is shown\");\n-        }\n-\n@@ -138,15 +128,0 @@\n-\n-    static boolean biEqual(BufferedImage i1, BufferedImage i2) {\n-        if (i1.getWidth() == i2.getWidth() &&\n-                                         i1.getHeight() == i2.getHeight()) {\n-            for (int x = 0; x < i1.getWidth(); x++) {\n-                for (int y = 0; y < i1.getHeight(); y++) {\n-                    if (i1.getRGB(x, y) != i2.getRGB(x, y)) {\n-                        return false;\n-                    }\n-                }\n-            }\n-            return true;\n-        }\n-        return false;\n-    }\n","filename":"test\/jdk\/javax\/swing\/text\/DefaultCaret\/HidingSelection\/HidingSelectionTest.java","additions":14,"deletions":39,"binary":false,"changes":53,"status":"modified"}]}