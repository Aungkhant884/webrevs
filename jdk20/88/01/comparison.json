{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -611,1 +611,7 @@\n-            \/\/ Try loading providers\n+            \/*\n+             * The JdkConsole provider used for Console instantiation can be specified\n+             * with the system property \"jdk.console\", whose value designates the module\n+             * name of the implementation, and which defaults to \"java.base\". If no\n+             * providers are available, or instantiation failed, java.base built-in\n+             * Console implementation is used.\n+             *\/\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,6 +31,0 @@\n- * The provider used for instantiating JdkConsole instance can be\n- * specified with the system property \"jdk.console\", whose value\n- * designates the module name of the implementation, and which defaults\n- * to \"jdk.internal.le\" (jline). If no providers is available,\n- * or instantiation failed, java.base built-in Console implementation\n- * is used.\n@@ -42,1 +36,1 @@\n-    String DEFAULT_PROVIDER_MODULE_NAME = \"jdk.internal.le\";\n+    String DEFAULT_PROVIDER_MODULE_NAME = \"java.base\";\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/io\/JdkConsoleProvider.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8295803\n+ * @bug 8295803 8299689\n@@ -30,1 +30,1 @@\n- * @run main\/othervm ModuleSelectionTest jdk.internal.le\n+ * @run main\/othervm ModuleSelectionTest java.base\n","filename":"test\/jdk\/java\/io\/Console\/ModuleSelectionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @bug 8295803\n+ * @bug 8295803 8299689\n@@ -34,0 +34,2 @@\n+ * @run main RedirectTest\n+ * @run main\/othervm -Djdk.console=jdk.internal.le RedirectTest\n@@ -36,0 +38,2 @@\n+    private static final String SYSPROP = \"jdk.console\";\n+\n@@ -39,1 +43,3 @@\n-            var pb = ProcessTools.createTestJvm(\"RedirectTest\", \"dummy\");\n+            var pb = ProcessTools.createTestJvm(\n+                    \"-D\" + SYSPROP + \"=\" + System.getProperty(SYSPROP, \"\"),\n+                    \"RedirectTest\", \"dummy\");\n@@ -43,4 +49,7 @@\n-            var output = oa.asLines();\n-            var expected = Files.readAllLines(input.toPath());\n-            if (!output.equals(expected)) {\n-                throw new RuntimeException(\"\"\"\n+            if (oa.getExitValue() == 1) {\n+                System.out.println(\"System.console() returns null. Ignoring the test.\");\n+            } else {\n+                var output = oa.asLines();\n+                var expected = Files.readAllLines(input.toPath());\n+                if (!output.equals(expected)) {\n+                    throw new RuntimeException(\"\"\"\n@@ -51,0 +60,4 @@\n+                } else {\n+                    oa.shouldHaveExitValue(0);\n+                    System.out.println(\"Redirect succeeded.\");\n+                }\n@@ -52,1 +65,0 @@\n-            oa.shouldHaveExitValue(0);\n@@ -55,3 +67,8 @@\n-            String line;\n-            while ((line = con.readLine()) != null) {\n-                System.out.println(line);\n+            if (con != null) {\n+                String line;\n+                while ((line = con.readLine()) != null) {\n+                    System.out.println(line);\n+                }\n+            } else {\n+                \/\/ Exit with 1\n+                System.exit(1);\n","filename":"test\/jdk\/java\/io\/Console\/RedirectTest.java","additions":28,"deletions":11,"binary":false,"changes":39,"status":"modified"}]}