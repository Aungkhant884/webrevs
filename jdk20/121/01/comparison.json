{"files":[{"patch":"@@ -190,2 +190,5 @@\n- * It defines a thread-local variable to hold the thread-specific filter, and constructs a filter factory\n- * that composes that filter with the static JVM-wide filter and the stream-specific filter.\n+ * It defines a thread-local variable to hold the thread-specific filter, and construct a filter factory\n+ * that composes that filter with the static JVM-wide filter and the stream-specific filter,\n+ * rejecting any classes not handled by those two filters.\n+ * If a stream specific filter is set and does not accept or reject a class,\n+ * the combined JVM-wide filter and thread filter is applied.\n@@ -210,2 +213,3 @@\n- *                 \/\/ Wrap the filter to reject UNDECIDED results\n- *                 filter = ObjectInputFilter.rejectUndecidedClass(filter);\n+ *                 \/\/ Merge to invoke the thread local filter and then the JVM-wide filter (if any)\n+ *                 filter = ObjectInputFilter.merge(filter, next);\n+ *                 return ObjectInputFilter.rejectUndecidedClass(filter);\n@@ -213,8 +217,1 @@\n- *             if (next != null) {\n- *                 \/\/ Merge the next filter with the thread filter, if any\n- *                 \/\/ Initially this is the static JVM-wide filter passed from the OIS constructor\n- *                 \/\/ Wrap the filter to reject UNDECIDED results\n- *                 filter = ObjectInputFilter.merge(next, filter);\n- *                 filter = ObjectInputFilter.rejectUndecidedClass(filter);\n- *             }\n- *             return filter;\n+ *             return (next == null) ? null : ObjectInputFilter.rejectUndecidedClass(next);\n@@ -225,1 +222,1 @@\n- *             \/\/ If there is a stream-specific filter wrap it and a filter to recheck for undecided\n+ *             \/\/ If there is a stream-specific filter merge to invoke it and then the current filter.\n@@ -227,3 +224,1 @@\n- *                 next = ObjectInputFilter.merge(next, curr);\n- *                 next = ObjectInputFilter.rejectUndecidedClass(next);\n- *                 return next;\n+ *                 return ObjectInputFilter.merge(next, curr);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputFilter.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"}]}