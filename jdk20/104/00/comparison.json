{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- *     x[0] = new Integer(0);\n+ *     x[0] = Integer.valueOf(0);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ArrayStoreException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -236,1 +236,1 @@\n-     * {@code new Byte(Byte.parseByte(s, radix))}\n+     * {@code Byte.valueOf(Byte.parseByte(s, radix))}\n@@ -265,1 +265,1 @@\n-     * {@code new Byte(Byte.parseByte(s))}\n+     * {@code Byte.valueOf(Byte.parseByte(s))}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Byte.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1263,1 +1263,1 @@\n-     *    new Double(d1).compareTo(new Double(d2))\n+     *    Double.valueOf(d1).compareTo(Double.valueOf(d2))\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1221,1 +1221,1 @@\n-     *    new Float(f1).compareTo(new Float(f2))\n+     *    Float.valueOf(f1).compareTo(Float.valueOf(f2))\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Float.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -954,1 +954,1 @@\n-     *  {@code new Integer(Integer.parseInt(s, radix))}\n+     *  {@code Integer.valueOf(Integer.parseInt(s, radix))}\n@@ -982,1 +982,1 @@\n-     *  {@code new Integer(Integer.parseInt(s))}\n+     *  {@code Integer.valueOf(Integer.parseInt(s))}\n@@ -1289,1 +1289,1 @@\n-     *  {@code getInteger(nm, new Integer(val))}\n+     *  {@code getInteger(nm, Integer.valueOf(val))}\n@@ -1296,1 +1296,1 @@\n-     * return (result == null) ? new Integer(val) : result;\n+     * return (result == null) ? Integer.valueOf(val) : result;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1117,1 +1117,1 @@\n-     *  {@code new Long(Long.parseLong(s, radix))}\n+     *  {@code Long.valueOf(Long.parseLong(s, radix))}\n@@ -1145,1 +1145,1 @@\n-     *  {@code new Long(Long.parseLong(s))}\n+     *  {@code Long.valueOf(Long.parseLong(s))}\n@@ -1512,1 +1512,1 @@\n-     *  {@code getLong(nm, new Long(val))}\n+     *  {@code getLong(nm, Long.valueOf(val))}\n@@ -1519,1 +1519,1 @@\n-     * return (result == null) ? new Long(val) : result;\n+     * return (result == null) ? Long.valueOf(val) : result;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-     *  {@code new Short(Short.parseShort(s, radix))}\n+     *  {@code Short.valueOf(Short.parseShort(s, radix))}\n@@ -209,1 +209,1 @@\n-     *  {@code new Short(Short.parseShort(s))}\n+     *  {@code Short.valueOf(Short.parseShort(s))}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Short.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}