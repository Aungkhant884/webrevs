{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+$(if $(filter $(TOPDIR)\/%, $(SUPPORT_OUTPUTDIR)), $(eval SRC_ZIP_BASE := $(TOPDIR)), $(eval SRC_ZIP_BASE := $(SUPPORT_OUTPUTDIR)))\n@@ -48,1 +49,1 @@\n-    $(eval $d_TARGET := $(SRC_ZIP_WORK_DIR)\/$(patsubst $(TOPDIR)\/%,%,$d)\/$m) \\\n+    $(eval $d_TARGET := $(SRC_ZIP_WORK_DIR)\/$(patsubst $(TOPDIR)\/%,%,$(patsubst $(SUPPORT_OUTPUTDIR)\/%,%,$d))\/$m) \\\n@@ -51,1 +52,1 @@\n-          $$(if $(filter $(TOPDIR)\/%, $d), $$(link-file-relative), $$(link-file-absolute)) \\\n+          $$(if $(filter $(SRC_ZIP_BASE)\/%, $d), $$(link-file-relative), $$(link-file-absolute)) \\\n","filename":"make\/ZipSource.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -309,0 +309,3 @@\n+# In msys2 we use mklink \/J because its ln would perform a deep copy of the target.\n+# This inhibits performance and can lead to issues with long paths. With mklink \/J\n+# relative linking does not work, so we handle the link as absolute path.\n@@ -312,0 +315,3 @@\n+  ifeq ($(OPENJDK_BUILD_OS_ENV), windows.msys2)\n+\tcmd \/\/c \"mklink \/J $(call FixPath, $(call DecodeSpace, $@)) $(call FixPath, $(call DecodeSpace, $<))\"\n+  else\n@@ -313,0 +319,1 @@\n+  endif\n@@ -318,0 +325,3 @@\n+  ifeq ($(OPENJDK_BUILD_OS_ENV), windows.msys2)\n+\tcmd \/\/c \"mklink \/J $(call FixPath, $(call DecodeSpace, $@)) $(call FixPath, $(call DecodeSpace, $<))\"\n+  else\n@@ -319,0 +329,1 @@\n+  endif\n","filename":"make\/common\/MakeBase.gmk","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}