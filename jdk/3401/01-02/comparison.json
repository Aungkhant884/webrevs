{"files":[{"patch":"@@ -7781,0 +7781,26 @@\n+     * @apiNote Example:\n+     * The cases each drop the {@code selector} value they are given, and take an additional\n+     * {@code String} argument, which is concatenated (using {@link String#concat(String)})\n+     * to a specific constant label string for each case:\n+     * <blockquote><pre>{@code\n+     * MethodHandles.Lookup lookup = MethodHandles.lookup();\n+     * MethodHandle caseMh = lookup.findVirtual(String.class, \"concat\",\n+     *         MethodType.methodType(String.class, String.class));\n+     * caseMh = MethodHandles.dropArguments(caseMh, 0, int.class);\n+     *\n+     * MethodHandle caseDefault = MethodHandles.insertArguments(caseMh, 1, \"default: \");\n+     * MethodHandle case0 = MethodHandles.insertArguments(caseMh, 1, \"case 0: \");\n+     * MethodHandle case1 = MethodHandles.insertArguments(caseMh, 1, \"case 1: \");\n+     *\n+     * MethodHandle mhSwitch = MethodHandles.tableSwitch(\n+     *     caseDefault,\n+     *     case0,\n+     *     case1\n+     * );\n+     *\n+     * assertEquals(\"default: data\", (String) mhSwitch.invokeExact(-1, \"data\"));\n+     * assertEquals(\"case 0: data\", (String) mhSwitch.invokeExact(0, \"data\"));\n+     * assertEquals(\"case 1: data\", (String) mhSwitch.invokeExact(1, \"data\"));\n+     * assertEquals(\"default: data\", (String) mhSwitch.invokeExact(2, \"data\"));\n+     * }<\/pre><\/blockquote>\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}