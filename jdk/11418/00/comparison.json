{"files":[{"patch":"@@ -39,0 +39,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -44,2 +46,0 @@\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n@@ -48,1 +48,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -53,1 +53,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -59,1 +59,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -65,1 +65,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -71,1 +71,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -76,1 +76,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -82,1 +82,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -87,1 +87,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -92,1 +92,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -98,1 +98,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -104,1 +104,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -109,1 +109,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -115,1 +115,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -121,1 +121,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -126,1 +126,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -132,1 +132,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -138,1 +138,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -143,1 +143,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -148,1 +148,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -40,0 +40,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -45,2 +47,0 @@\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n@@ -49,1 +49,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -54,1 +54,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -60,1 +60,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -66,1 +66,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -72,1 +72,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -78,1 +78,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -84,1 +84,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -90,1 +90,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -96,1 +96,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -102,1 +102,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -107,1 +107,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -113,1 +113,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -119,1 +119,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -125,1 +125,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -130,1 +130,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -135,1 +135,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -45,1 +47,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -50,1 +52,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -56,1 +58,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -62,1 +64,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -68,1 +70,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -74,1 +76,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -79,1 +81,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -85,1 +87,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -90,1 +92,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -95,1 +97,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -100,1 +102,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,14 @@\n+package sun.nio.ch.sctp;\n+\n+public final class Util {\n+\n+    private static final String MESSAGE = \"SCTP not supported on this platform\";\n+\n+    private Util() {\n+    }\n+\n+    static UnsupportedOperationException sctpNotSupported() {\n+        return new UnsupportedOperationException(MESSAGE);\n+    }\n+\n+}\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/Util.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"added"},{"patch":"@@ -39,0 +39,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -42,3 +44,1 @@\n-public class SctpChannelImpl extends SctpChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public class SctpChannelImpl extends SctpChannel {\n@@ -48,1 +48,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -53,1 +53,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -59,1 +59,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -65,1 +65,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -71,1 +71,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -76,1 +76,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -82,1 +82,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -87,1 +87,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -92,1 +92,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -98,1 +98,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -104,1 +104,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -109,1 +109,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -115,1 +115,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -121,1 +121,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -126,1 +126,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -132,1 +132,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -138,1 +138,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -143,1 +143,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -148,1 +148,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -40,0 +40,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -43,3 +45,1 @@\n-public class SctpMultiChannelImpl extends SctpMultiChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public class SctpMultiChannelImpl extends SctpMultiChannel {\n@@ -49,1 +49,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -54,1 +54,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -60,1 +60,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -66,1 +66,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -72,1 +72,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -78,1 +78,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -84,1 +84,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -90,1 +90,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -96,1 +96,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -102,1 +102,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -107,1 +107,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -113,1 +113,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -119,1 +119,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -125,1 +125,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -130,1 +130,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -135,1 +135,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -41,2 +43,0 @@\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n@@ -45,1 +45,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -50,1 +50,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -56,1 +56,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -62,1 +62,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -68,1 +68,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -74,1 +74,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -79,1 +79,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -85,1 +85,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -90,1 +90,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -95,1 +95,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -100,1 +100,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -0,0 +1,14 @@\n+package sun.nio.ch.sctp;\n+\n+public final class Util {\n+\n+    private static final String MESSAGE = \"SCTP not supported on this platform\";\n+\n+    private Util() {\n+    }\n+\n+    static UnsupportedOperationException sctpNotSupported() {\n+        return new UnsupportedOperationException(MESSAGE);\n+    }\n+\n+}\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/Util.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"added"},{"patch":"@@ -39,1 +39,1 @@\n-     * Try to receieve another message or notification.\n+     * Try to receive another message or notification.\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/HandlerResult.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.io.Serial;\n+\n@@ -35,0 +37,1 @@\n+    @Serial\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/IllegalReceiveException.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.io.Serial;\n+\n@@ -35,0 +37,1 @@\n+    @Serial\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/IllegalUnbindException.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.io.Serial;\n+\n@@ -34,0 +36,1 @@\n+    @Serial\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/InvalidStreamException.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public class SctpStandardSocketOptions {\n+public final class SctpStandardSocketOptions {\n@@ -44,1 +44,1 @@\n-     * fragmentation will be performed. Instead if a message being sent\n+     * fragmentation will be performed. Instead, if a message being sent\n@@ -52,1 +52,1 @@\n-        SctpStdSocketOption<Boolean>(\"SCTP_DISABLE_FRAGMENTS\", Boolean.class,\n+        SctpStdSocketOption<>(\"SCTP_DISABLE_FRAGMENTS\", Boolean.class,\n@@ -71,1 +71,1 @@\n-        SctpStdSocketOption<Boolean>(\"SCTP_EXPLICIT_COMPLETE\", Boolean.class,\n+        SctpStdSocketOption<>(\"SCTP_EXPLICIT_COMPLETE\", Boolean.class,\n@@ -121,1 +121,1 @@\n-            new SctpStdSocketOption<Integer>(\"SCTP_FRAGMENT_INTERLEAVE\",\n+            new SctpStdSocketOption<>(\"SCTP_FRAGMENT_INTERLEAVE\",\n@@ -161,1 +161,1 @@\n-        new SctpStdSocketOption<SctpStandardSocketOptions.InitMaxStreams>(\n+        new SctpStdSocketOption<>(\n@@ -173,1 +173,1 @@\n-        new SctpStdSocketOption<Boolean>(\"SCTP_NODELAY\", Boolean.class,\n+        new SctpStdSocketOption<>(\"SCTP_NODELAY\", Boolean.class,\n@@ -194,1 +194,1 @@\n-            new SctpStdSocketOption<SocketAddress>\n+            new SctpStdSocketOption<>\n@@ -219,1 +219,1 @@\n-            new SctpStdSocketOption<SocketAddress>\n+            new SctpStdSocketOption<>\n@@ -248,1 +248,1 @@\n-        new SctpStdSocketOption<Integer>(\"SO_SNDBUF\", Integer.class,\n+        new SctpStdSocketOption<>(\"SO_SNDBUF\", Integer.class,\n@@ -306,1 +306,1 @@\n-        new SctpStdSocketOption<Integer>(\"SO_LINGER\", Integer.class,\n+        new SctpStdSocketOption<>(\"SO_LINGER\", Integer.class,\n@@ -319,2 +319,2 @@\n-        private int maxInStreams;\n-        private int maxOutStreams;\n+        private final int maxInStreams;\n+        private final int maxOutStreams;\n@@ -381,5 +381,3 @@\n-            StringBuilder sb = new StringBuilder();\n-            sb.append(super.toString()).append(\" [\");\n-            sb.append(\"maxInStreams:\").append(maxInStreams);\n-            sb.append(\"maxOutStreams:\").append(maxOutStreams).append(\"]\");\n-            return sb.toString();\n+            return super.toString() + \" [\" +\n+                    \"maxInStreams:\" + maxInStreams +\n+                    \"maxOutStreams:\" + maxOutStreams + \"]\";\n@@ -401,5 +399,3 @@\n-            if (obj != null && obj instanceof InitMaxStreams) {\n-                InitMaxStreams that = (InitMaxStreams) obj;\n-                if (this.maxInStreams == that.maxInStreams &&\n-                    this.maxOutStreams == that.maxOutStreams)\n-                    return true;\n+            if (obj instanceof InitMaxStreams that) {\n+                return this.maxInStreams == that.maxInStreams &&\n+                        this.maxOutStreams == that.maxOutStreams;\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/SctpStandardSocketOptions.java","additions":19,"deletions":23,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * Typically this is because the association has been shutdown with unsent data\n+ * Typically, this is because the association has been shutdown with unsent data\n@@ -84,1 +84,1 @@\n-     * Returns the stream number that the messge was to be sent on.\n+     * Returns the stream number that the message was to be sent on.\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/SendFailedNotification.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -159,10 +159,8 @@\n-        StringBuilder sb = new StringBuilder(super.toString());\n-        sb.append( \"[Address: \").append(address)\n-          .append(\", Association: \").append(association)\n-          .append(\", Assoc ID: \").append(assocId)\n-          .append(\", Bytes: \").append(bytes)\n-          .append(\", Stream Number: \").append(streamNumber)\n-          .append(\", Complete: \").append(complete)\n-          .append(\", isUnordered: \").append(unordered)\n-          .append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \"[Address: \" + address +\n+                \", Association: \" + association +\n+                \", Assoc ID: \" + assocId +\n+                \", Bytes: \" + bytes +\n+                \", Stream Number: \" + streamNumber +\n+                \", Complete: \" + complete +\n+                \", isUnordered: \" + unordered +\n+                \"]\";\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/MessageInfoImpl.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,3 @@\n-public class SctpStdSocketOption<T>\n+public record SctpStdSocketOption<T>(String name,\n+                                     Class<T> type,\n+                                     int constValue)\n@@ -42,6 +44,0 @@\n-    private final String name;\n-    private final Class<T> type;\n-\n-    \/* for native mapping of int options *\/\n-    private int constValue;\n-\n@@ -49,27 +45,1 @@\n-        this.name = name;\n-        this.type = type;\n-    }\n-\n-    public SctpStdSocketOption(String name, Class<T> type, int constValue) {\n-        this.name = name;\n-        this.type = type;\n-        this.constValue = constValue;\n-    }\n-\n-    @Override\n-    public String name() {\n-        return name;\n-    }\n-\n-    @Override\n-    public Class<T> type() {\n-        return type;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return name;\n-    }\n-\n-    int constValue() {\n-        return constValue;\n+        this(name, type, 0);\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/SctpStdSocketOption.java","additions":4,"deletions":34,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    \/* assocId is used to lookup the association before the notification is\n+    \/* assocId is used to look up the association before the notification is\n@@ -48,4 +48,4 @@\n-    private int assocId;\n-    private AssocChangeEvent event;\n-    private int maxOutStreams;\n-    private int maxInStreams;\n+    private final int assocId;\n+    private final AssocChangeEvent event;\n+    private final int maxOutStreams;\n+    private final int maxInStreams;\n@@ -58,20 +58,9 @@\n-        switch (intEvent) {\n-            case SCTP_COMM_UP :\n-                this.event = AssocChangeEvent.COMM_UP;\n-                break;\n-            case SCTP_COMM_LOST :\n-                this.event = AssocChangeEvent.COMM_LOST;\n-                break;\n-            case SCTP_RESTART :\n-                this.event = AssocChangeEvent.RESTART;\n-                break;\n-            case SCTP_SHUTDOWN :\n-                this.event = AssocChangeEvent.SHUTDOWN;\n-                break;\n-            case SCTP_CANT_START :\n-                this.event = AssocChangeEvent.CANT_START;\n-                break;\n-            default :\n-                throw new AssertionError(\n-                      \"Unknown Association Change Event type: \" + intEvent);\n-        }\n+        this.event = switch (intEvent) {\n+            case SCTP_COMM_UP -> AssocChangeEvent.COMM_UP;\n+            case SCTP_COMM_LOST -> AssocChangeEvent.COMM_LOST;\n+            case SCTP_RESTART -> AssocChangeEvent.RESTART;\n+            case SCTP_SHUTDOWN -> AssocChangeEvent.SHUTDOWN;\n+            case SCTP_CANT_START -> AssocChangeEvent.CANT_START;\n+            default -> throw new AssertionError(\n+                    \"Unknown Association Change Event type: \" + intEvent);\n+        };\n@@ -115,5 +104,3 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(\" [\");\n-        sb.append(\"Association:\").append(association);\n-        sb.append(\", Event: \").append(event).append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \" [\" +\n+                \"Association:\" + association +\n+                \", Event: \" + event + \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/AssociationChange.java","additions":17,"deletions":30,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -41,9 +41,7 @@\n-        StringBuffer sb = new StringBuffer(super.toString());\n-        return sb.append(\"[associationID:\")\n-                 .append(associationID())\n-                 .append(\", maxIn:\")\n-                 .append(maxInboundStreams())\n-                 .append(\", maxOut:\")\n-                 .append(maxOutboundStreams())\n-                 .append(\"]\")\n-                 .toString();\n+        return super.toString() + \"[associationID:\" +\n+                associationID() +\n+                \", maxIn:\" +\n+                maxInboundStreams() +\n+                \", maxOut:\" +\n+                maxOutboundStreams() +\n+                \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/AssociationImpl.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    \/* assocId is used to lookup the association before the notification is\n+    \/* assocId is used to look up the association before the notification is\n@@ -50,3 +50,3 @@\n-    private int assocId;\n-    private SocketAddress address;\n-    private AddressChangeEvent event;\n+    private final int assocId;\n+    private final SocketAddress address;\n+    private final AddressChangeEvent event;\n@@ -56,22 +56,9 @@\n-        switch (intEvent) {\n-            case SCTP_ADDR_AVAILABLE :\n-                this.event = AddressChangeEvent.ADDR_AVAILABLE;\n-                break;\n-            case SCTP_ADDR_UNREACHABLE :\n-                this.event = AddressChangeEvent.ADDR_UNREACHABLE;\n-                break;\n-            case SCTP_ADDR_REMOVED :\n-                this.event = AddressChangeEvent.ADDR_REMOVED;\n-                break;\n-            case SCTP_ADDR_ADDED :\n-                this.event = AddressChangeEvent.ADDR_ADDED;\n-                break;\n-            case SCTP_ADDR_MADE_PRIM :\n-                this.event = AddressChangeEvent.ADDR_MADE_PRIMARY;\n-                break;\n-            case SCTP_ADDR_CONFIRMED :\n-                this.event = AddressChangeEvent.ADDR_CONFIRMED;\n-                break;\n-            default:\n-                throw new AssertionError(\"Unknown event type\");\n-        }\n+        this.event = switch (intEvent) {\n+            case SCTP_ADDR_AVAILABLE -> AddressChangeEvent.ADDR_AVAILABLE;\n+            case SCTP_ADDR_UNREACHABLE -> AddressChangeEvent.ADDR_UNREACHABLE;\n+            case SCTP_ADDR_REMOVED -> AddressChangeEvent.ADDR_REMOVED;\n+            case SCTP_ADDR_ADDED -> AddressChangeEvent.ADDR_ADDED;\n+            case SCTP_ADDR_MADE_PRIM -> AddressChangeEvent.ADDR_MADE_PRIMARY;\n+            case SCTP_ADDR_CONFIRMED -> AddressChangeEvent.ADDR_CONFIRMED;\n+            default -> throw new AssertionError(\"Unknown event type\");\n+        };\n@@ -106,1 +93,0 @@\n-        assert event != null;\n@@ -112,6 +98,4 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(\" [\");\n-        sb.append(\"Address: \").append(address);\n-        sb.append(\", Association:\").append(association);\n-        sb.append(\", Event: \").append(event).append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \" [\" +\n+                \"Address: \" + address +\n+                \", Association:\" + association +\n+                \", Event: \" + event + \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/PeerAddrChange.java","additions":17,"deletions":33,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        return type() != MESSAGE && type() != NOTHING ? true : false;\n+        return type() != MESSAGE && type() != NOTHING;\n@@ -71,2 +71,2 @@\n-        if (value instanceof MessageInfoImpl)\n-            return (MessageInfoImpl) value;\n+        if (value instanceof MessageInfoImpl messageInfo)\n+            return messageInfo;\n@@ -80,2 +80,2 @@\n-        if (value instanceof SendFailed)\n-            return (SendFailed) value;\n+        if (value instanceof SendFailed sendFailed)\n+            return sendFailed;\n@@ -89,2 +89,2 @@\n-        if (value instanceof AssociationChange)\n-            return (AssociationChange) value;\n+        if (value instanceof AssociationChange associationChanged)\n+            return associationChanged;\n@@ -98,2 +98,2 @@\n-        if (value instanceof PeerAddrChange)\n-            return (PeerAddrChange) value;\n+        if (value instanceof PeerAddrChange peerAddressChanged)\n+            return peerAddressChanged;\n@@ -107,2 +107,2 @@\n-        if (value instanceof Shutdown)\n-            return (Shutdown) value;\n+        if (value instanceof Shutdown shutdown)\n+            return shutdown;\n@@ -118,7 +118,7 @@\n-            case NOTHING:              sb.append(\"NOTHING\");             break;\n-            case MESSAGE:              sb.append(\"MESSAGE\");             break;\n-            case SEND_FAILED:          sb.append(\"SEND FAILED\");         break;\n-            case ASSOCIATION_CHANGED:  sb.append(\"ASSOCIATION CHANGE\");  break;\n-            case PEER_ADDRESS_CHANGED: sb.append(\"PEER ADDRESS CHANGE\"); break;\n-            case SHUTDOWN:             sb.append(\"SHUTDOWN\");            break;\n-            default :                  sb.append(\"Unknown result type\");\n+            case NOTHING -> sb.append(\"NOTHING\");\n+            case MESSAGE -> sb.append(\"MESSAGE\");\n+            case SEND_FAILED -> sb.append(\"SEND FAILED\");\n+            case ASSOCIATION_CHANGED -> sb.append(\"ASSOCIATION CHANGE\");\n+            case PEER_ADDRESS_CHANGED -> sb.append(\"PEER ADDRESS CHANGE\");\n+            case SHUTDOWN -> sb.append(\"SHUTDOWN\");\n+            default -> sb.append(\"Unknown result type\");\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/ResultContainer.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    \/* IDs of native threads doing send and receivess, for signalling *\/\n+    \/* IDs of native threads doing send and receive, for signalling *\/\n@@ -92,1 +92,1 @@\n-        new ThreadLocal<Boolean>() {\n+        new ThreadLocal<>() {\n@@ -111,1 +111,1 @@\n-    private ChannelState state = ChannelState.UNINITIALIZED;\n+    private ChannelState state;\n@@ -115,1 +115,1 @@\n-    private HashSet<InetSocketAddress> localAddresses = new HashSet<InetSocketAddress>();\n+    private final Set<InetSocketAddress> localAddresses = new HashSet<>();\n@@ -223,1 +223,1 @@\n-    private SctpChannel bindUnbindAddress(InetAddress address, boolean add)\n+    private void bindUnbindAddress(InetAddress address, boolean add)\n@@ -279,1 +279,0 @@\n-        return this;\n@@ -284,1 +283,1 @@\n-            return port == -1 ? false : true;\n+            return port != -1;\n@@ -694,19 +693,0 @@\n-    private static class DefaultOptionsHolder {\n-        static final Set<SctpSocketOption<?>> defaultOptions = defaultOptions();\n-\n-        private static Set<SctpSocketOption<?>> defaultOptions() {\n-            HashSet<SctpSocketOption<?>> set = new HashSet<SctpSocketOption<?>>(10);\n-            set.add(SCTP_DISABLE_FRAGMENTS);\n-            set.add(SCTP_EXPLICIT_COMPLETE);\n-            set.add(SCTP_FRAGMENT_INTERLEAVE);\n-            set.add(SCTP_INIT_MAXSTREAMS);\n-            set.add(SCTP_NODELAY);\n-            set.add(SCTP_PRIMARY_ADDR);\n-            set.add(SCTP_SET_PEER_PRIMARY_ADDR);\n-            set.add(SO_SNDBUF);\n-            set.add(SO_RCVBUF);\n-            set.add(SO_LINGER);\n-            return Collections.unmodifiableSet(set);\n-        }\n-    }\n-\n@@ -715,1 +695,14 @@\n-        return DefaultOptionsHolder.defaultOptions;\n+        final class Holder {\n+            static final Set<SctpSocketOption<?>> DEFAULT_OPTIONS = Set.of(\n+                    SCTP_DISABLE_FRAGMENTS,\n+                    SCTP_EXPLICIT_COMPLETE,\n+                    SCTP_FRAGMENT_INTERLEAVE,\n+                    SCTP_INIT_MAXSTREAMS,\n+                    SCTP_NODELAY,\n+                    SCTP_PRIMARY_ADDR,\n+                    SCTP_SET_PEER_PRIMARY_ADDR,\n+                    SO_SNDBUF,\n+                    SO_RCVBUF,\n+                    SO_LINGER);\n+        }\n+        return Holder.DEFAULT_OPTIONS;\n@@ -849,1 +842,1 @@\n-    private InternalNotificationHandler internalNotificationHandler =\n+    private final InternalNotificationHandler internalNotificationHandler =\n@@ -852,2 +845,1 @@\n-    private void handleNotificationInternal(ResultContainer resultContainer)\n-    {\n+    private void handleNotificationInternal(ResultContainer resultContainer) {\n@@ -858,3 +850,2 @@\n-    private class InternalNotificationHandler\n-            extends AbstractNotificationHandler<Object>\n-    {\n+    private final class InternalNotificationHandler\n+            extends AbstractNotificationHandler<Object> {\n@@ -862,4 +853,3 @@\n-        public HandlerResult handleNotification(\n-                AssociationChangeNotification not, Object unused) {\n-            if (not.event().equals(\n-                    AssociationChangeNotification.AssocChangeEvent.COMM_UP) &&\n+        public HandlerResult handleNotification(AssociationChangeNotification not,\n+                                                Object unused) {\n+            if (not.event().equals(AssociationChangeNotification.AssocChangeEvent.COMM_UP) &&\n@@ -875,4 +865,3 @@\n-    private <T> HandlerResult invokeNotificationHandler\n-                                 (ResultContainer resultContainer,\n-                                  NotificationHandler<T> handler,\n-                                  T attachment) {\n+    private <T> HandlerResult invokeNotificationHandler(ResultContainer resultContainer,\n+                                                        NotificationHandler<T> handler,\n+                                                        T attachment) {\n@@ -884,1 +873,1 @@\n-        if (!(handler instanceof AbstractNotificationHandler)) {\n+        if (!(handler instanceof AbstractNotificationHandler<T> absHandler)) {\n@@ -889,16 +878,10 @@\n-        AbstractNotificationHandler<T> absHandler =\n-                (AbstractNotificationHandler<T>)handler;\n-        switch(resultContainer.type()) {\n-            case ASSOCIATION_CHANGED :\n-                return absHandler.handleNotification(\n-                        resultContainer.getAssociationChanged(), attachment);\n-            case PEER_ADDRESS_CHANGED :\n-                return absHandler.handleNotification(\n-                        resultContainer.getPeerAddressChanged(), attachment);\n-            case SEND_FAILED :\n-                return absHandler.handleNotification(\n-                        resultContainer.getSendFailed(), attachment);\n-            case SHUTDOWN :\n-                return absHandler.handleNotification(\n-                        resultContainer.getShutdown(), attachment);\n-            default :\n+        return switch (resultContainer.type()) {\n+            case ASSOCIATION_CHANGED -> absHandler.handleNotification(\n+                    resultContainer.getAssociationChanged(), attachment);\n+            case PEER_ADDRESS_CHANGED -> absHandler.handleNotification(\n+                    resultContainer.getPeerAddressChanged(), attachment);\n+            case SEND_FAILED -> absHandler.handleNotification(\n+                    resultContainer.getSendFailed(), attachment);\n+            case SHUTDOWN -> absHandler.handleNotification(\n+                    resultContainer.getShutdown(), attachment);\n+            default ->\n@@ -906,3 +889,3 @@\n-                return absHandler.handleNotification(\n-                        resultContainer.notification(), attachment);\n-        }\n+                    absHandler.handleNotification(\n+                            resultContainer.notification(), attachment);\n+        };\n@@ -1102,1 +1085,1 @@\n-            new java.security.PrivilegedAction<Void>() {\n+            new java.security.PrivilegedAction<>() {\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":45,"deletions":62,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import java.util.Collections;\n+import java.util.*;\n@@ -35,4 +35,0 @@\n-import java.util.Iterator;\n-import java.util.Set;\n-import java.util.HashSet;\n-import java.util.HashMap;\n@@ -103,1 +99,1 @@\n-    private HashSet<InetSocketAddress> localAddresses = new HashSet<InetSocketAddress>();\n+    private final Set<InetSocketAddress> localAddresses = new HashSet<>();\n@@ -107,5 +103,5 @@\n-    \/* Keeps a map of addresses to association, and visa versa *\/\n-    private HashMap<SocketAddress, Association> addressMap =\n-                         new HashMap<SocketAddress, Association>();\n-    private HashMap<Association, Set<SocketAddress>> associationMap =\n-                         new HashMap<Association, Set<SocketAddress>>();\n+    \/* Keeps a map of addresses to association, and vice versa *\/\n+    private final Map<SocketAddress, Association> addressMap =\n+                         new HashMap<>();\n+    private final Map<Association, Set<SocketAddress>> associationMap =\n+                         new HashMap<>();\n@@ -117,6 +113,1 @@\n-    private final ThreadLocal<Association> associationToRemove =\n-        new ThreadLocal<Association>() {\n-             @Override protected Association initialValue() {\n-                 return null;\n-            }\n-    };\n+    private final ThreadLocal<Association> associationToRemove = new ThreadLocal<>();\n@@ -126,1 +117,1 @@\n-        new ThreadLocal<Boolean>() {\n+        new ThreadLocal<>() {\n@@ -258,1 +249,1 @@\n-            return port == -1 ? false : true;\n+            return port != -1;\n@@ -439,19 +430,0 @@\n-    private static class DefaultOptionsHolder {\n-        static final Set<SctpSocketOption<?>> defaultOptions = defaultOptions();\n-\n-        private static Set<SctpSocketOption<?>> defaultOptions() {\n-            HashSet<SctpSocketOption<?>> set = new HashSet<SctpSocketOption<?>>(10);\n-            set.add(SCTP_DISABLE_FRAGMENTS);\n-            set.add(SCTP_EXPLICIT_COMPLETE);\n-            set.add(SCTP_FRAGMENT_INTERLEAVE);\n-            set.add(SCTP_INIT_MAXSTREAMS);\n-            set.add(SCTP_NODELAY);\n-            set.add(SCTP_PRIMARY_ADDR);\n-            set.add(SCTP_SET_PEER_PRIMARY_ADDR);\n-            set.add(SO_SNDBUF);\n-            set.add(SO_RCVBUF);\n-            set.add(SO_LINGER);\n-            return Collections.unmodifiableSet(set);\n-        }\n-    }\n-\n@@ -460,1 +432,15 @@\n-        return DefaultOptionsHolder.defaultOptions;\n+        final class Holder {\n+            static final Set<SctpSocketOption<?>> DEFAULT_OPTIONS = Set.of(\n+                    SCTP_DISABLE_FRAGMENTS,\n+                    SCTP_EXPLICIT_COMPLETE,\n+                    SCTP_FRAGMENT_INTERLEAVE,\n+                    SCTP_INIT_MAXSTREAMS,\n+                    SCTP_NODELAY,\n+                    SCTP_PRIMARY_ADDR,\n+                    SCTP_SET_PEER_PRIMARY_ADDR,\n+                    SO_SNDBUF,\n+                    SO_RCVBUF,\n+                    SO_LINGER);\n+\n+        }\n+        return Holder.DEFAULT_OPTIONS;\n@@ -592,1 +578,1 @@\n-    private InternalNotificationHandler internalNotificationHandler =\n+    private final InternalNotificationHandler internalNotificationHandler =\n@@ -601,1 +587,1 @@\n-    private class InternalNotificationHandler\n+    private final class InternalNotificationHandler\n@@ -605,2 +591,2 @@\n-        public HandlerResult handleNotification(\n-                AssociationChangeNotification not, Object unused) {\n+        public HandlerResult handleNotification(AssociationChangeNotification not,\n+                                                Object unused) {\n@@ -611,1 +597,1 @@\n-                case COMM_UP :\n+                case COMM_UP -> {\n@@ -613,1 +599,1 @@\n-                       (sac.assocId(), sac.maxInStreams(), sac.maxOutStreams());\n+                            (sac.assocId(), sac.maxInStreams(), sac.maxOutStreams());\n@@ -615,4 +601,3 @@\n-                    break;\n-                case SHUTDOWN :\n-                case COMM_LOST :\n-                \/\/case RESTART: ???\n+                }\n+                case SHUTDOWN, COMM_LOST ->\n+                    \/\/case RESTART: ???\n@@ -620,1 +605,1 @@\n-                    associationToRemove.set(lookupAssociation(sac.assocId()));\n+                        associationToRemove.set(lookupAssociation(sac.assocId()));\n@@ -626,4 +611,3 @@\n-    private <T> HandlerResult invokeNotificationHandler(\n-                                   ResultContainer resultContainer,\n-                                   NotificationHandler<T> handler,\n-                                   T attachment) {\n+    private <T> HandlerResult invokeNotificationHandler(ResultContainer resultContainer,\n+                                                        NotificationHandler<T> handler,\n+                                                        T attachment) {\n@@ -634,1 +618,1 @@\n-        if (!(handler instanceof AbstractNotificationHandler)) {\n+        if (!(handler instanceof AbstractNotificationHandler<T> absHandler)) {\n@@ -637,20 +621,10 @@\n-            AbstractNotificationHandler<T> absHandler =\n-                    (AbstractNotificationHandler<T>)handler;\n-            switch(resultContainer.type()) {\n-                case ASSOCIATION_CHANGED :\n-                    result = absHandler.handleNotification(\n-                            resultContainer.getAssociationChanged(), attachment);\n-                    break;\n-                case PEER_ADDRESS_CHANGED :\n-                    result = absHandler.handleNotification(\n-                            resultContainer.getPeerAddressChanged(), attachment);\n-                    break;\n-                case SEND_FAILED :\n-                    result = absHandler.handleNotification(\n-                            resultContainer.getSendFailed(), attachment);\n-                    break;\n-                case SHUTDOWN :\n-                    result =  absHandler.handleNotification(\n-                            resultContainer.getShutdown(), attachment);\n-                    break;\n-                default :\n+            result = switch (resultContainer.type()) {\n+                case ASSOCIATION_CHANGED -> absHandler.handleNotification(\n+                        resultContainer.getAssociationChanged(), attachment);\n+                case PEER_ADDRESS_CHANGED -> absHandler.handleNotification(\n+                        resultContainer.getPeerAddressChanged(), attachment);\n+                case SEND_FAILED -> absHandler.handleNotification(\n+                        resultContainer.getSendFailed(), attachment);\n+                case SHUTDOWN -> absHandler.handleNotification(\n+                        resultContainer.getShutdown(), attachment);\n+                default ->\n@@ -658,3 +632,3 @@\n-                    result =  absHandler.handleNotification(\n-                            resultContainer.notification(), attachment);\n-            }\n+                        absHandler.handleNotification(\n+                                resultContainer.notification(), attachment);\n+            };\n@@ -748,5 +722,1 @@\n-     * @throws  IllegalArgumentException\n-     *          If the given association is not controlled by this channel\n-     *\n-     * @return  {@code true} if, and only if, the given association is one\n-     *          of the current associations controlled by this channel\n+     * @throws IllegalArgumentException If the given association is not controlled by this channel\n@@ -754,1 +724,1 @@\n-    private boolean checkAssociation(Association messageAssoc) {\n+    private void checkAssociation(Association messageAssoc) {\n@@ -758,1 +728,1 @@\n-                    return true;\n+                    return;\n@@ -956,2 +926,1 @@\n-                Set<SocketAddress> addrs = associationMap.get(association);\n-                return addrs != null ? addrs : Collections.<SocketAddress>emptySet();\n+                return associationMap.getOrDefault(association, Collections.emptySet());\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":56,"deletions":87,"binary":false,"changes":143,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-        HashSet<SocketAddress> set = null;\n+        Set<SocketAddress> set = null;\n@@ -139,1 +139,1 @@\n-            set = new HashSet<SocketAddress>(saa.length);\n+            set = new HashSet<>(saa.length);\n@@ -163,2 +163,0 @@\n-            if (addr == null)\n-                throw new IllegalArgumentException(\"Invalid option value\");\n@@ -260,1 +258,1 @@\n-        setIntOption0(fd, ((SctpStdSocketOption)name).constValue(), arg);\n+        setIntOption0(fd, ((SctpStdSocketOption<?>)name).constValue(), arg);\n@@ -270,1 +268,1 @@\n-        if (!(name instanceof SctpStdSocketOption))\n+        if (!(name instanceof SctpStdSocketOption<?> option))\n@@ -273,2 +271,1 @@\n-        int value = getIntOption0(fd,\n-                ((SctpStdSocketOption)name).constValue());\n+        int value = getIntOption0(fd, option.constValue());\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpNet.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n- * All Notification implemenations MUST implement this interface to provide\n- * access to the native association identidier.\n+ * All Notification implementations MUST implement this interface to provide\n+ * access to the native association identifier.\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpNotification.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import sun.nio.ch.DirectBuffer;\n@@ -51,1 +50,0 @@\n-import sun.nio.ch.Util;\n@@ -84,1 +82,1 @@\n-    private HashSet<InetSocketAddress> localAddresses = new HashSet<InetSocketAddress>();\n+    private final HashSet<InetSocketAddress> localAddresses = new HashSet<>();\n@@ -203,1 +201,1 @@\n-            return port == -1 ? false : true;\n+            return port != -1;\n@@ -392,10 +390,0 @@\n-    private static class DefaultOptionsHolder {\n-        static final Set<SctpSocketOption<?>> defaultOptions = defaultOptions();\n-\n-        private static Set<SctpSocketOption<?>> defaultOptions() {\n-            HashSet<SctpSocketOption<?>> set = new HashSet<SctpSocketOption<?>>(1);\n-            set.add(SctpStandardSocketOptions.SCTP_INIT_MAXSTREAMS);\n-            return Collections.unmodifiableSet(set);\n-        }\n-    }\n-\n@@ -404,1 +392,5 @@\n-        return DefaultOptionsHolder.defaultOptions;\n+        final class Holder {\n+            static final Set<SctpSocketOption<?>> DEFAULT_OPTIONS =\n+                    Set.of(SctpStandardSocketOptions.SCTP_INIT_MAXSTREAMS);\n+        }\n+        return Holder.DEFAULT_OPTIONS;\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -41,5 +41,5 @@\n-    private int assocId;\n-    private SocketAddress address;\n-    private ByteBuffer buffer;\n-    private int errorCode;\n-    private int streamNumber;\n+    private final int assocId;\n+    private final SocketAddress address;\n+    private final ByteBuffer buffer;\n+    private final int errorCode;\n+    private final int streamNumber;\n@@ -100,9 +100,7 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(\" [\");\n-        sb.append(\"Association:\").append(association);\n-        sb.append(\", Address: \").append(address);\n-        sb.append(\", buffer: \").append(buffer);\n-        sb.append(\", errorCode: \").append(errorCode);\n-        sb.append(\", streamNumber: \").append(streamNumber);\n-        sb.append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \" [\" +\n+                \"Association:\" + association +\n+                \", Address: \" + address +\n+                \", buffer: \" + buffer +\n+                \", errorCode: \" + errorCode +\n+                \", streamNumber: \" + streamNumber +\n+                \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SendFailed.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    \/* assocId is used to lookup the association before the notification is\n+    \/* assocId is used to look up the association before the notification is\n@@ -39,1 +39,1 @@\n-    private int assocId;\n+    private final int assocId;\n@@ -64,4 +64,2 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(\" [\");\n-        sb.append(\"Association:\").append(association).append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \" [\" +\n+                \"Association:\" + association + \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/Shutdown.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -44,1 +46,0 @@\n-    private static final String message = \"SCTP not supported on this platform\";\n@@ -48,1 +49,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -53,1 +54,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -59,1 +60,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -65,1 +66,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -71,1 +72,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -76,1 +77,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -82,1 +83,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -87,1 +88,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -92,1 +93,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -98,1 +99,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -104,1 +105,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -109,1 +110,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -115,1 +116,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -121,1 +122,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -126,1 +127,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -132,1 +133,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -138,1 +139,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -143,1 +144,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -148,1 +149,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -40,0 +40,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -45,1 +47,0 @@\n-    private static final String message = \"SCTP not supported on this platform\";\n@@ -49,1 +50,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -54,1 +55,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -60,1 +61,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -66,1 +67,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -72,1 +73,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -78,1 +79,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -84,1 +85,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -90,1 +91,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -96,1 +97,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -102,1 +103,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -107,1 +108,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -113,1 +114,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -119,1 +120,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -125,1 +126,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -130,1 +131,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -135,1 +136,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import static sun.nio.ch.sctp.Util.sctpNotSupported;\n+\n@@ -41,1 +43,0 @@\n-    private static final String message = \"SCTP not supported on this platform\";\n@@ -45,1 +46,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -50,1 +51,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -56,1 +57,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -62,1 +63,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -68,1 +69,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -74,1 +75,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -79,1 +80,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -85,1 +86,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -90,1 +91,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -95,1 +96,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n@@ -100,1 +101,1 @@\n-        throw new UnsupportedOperationException(message);\n+        throw sctpNotSupported();\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -0,0 +1,14 @@\n+package sun.nio.ch.sctp;\n+\n+public final class Util {\n+\n+    private static final String MESSAGE = \"SCTP not supported on this platform\";\n+\n+    private Util() {\n+    }\n+\n+    static UnsupportedOperationException sctpNotSupported() {\n+        return new UnsupportedOperationException(MESSAGE);\n+    }\n+\n+}\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/Util.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"added"}]}