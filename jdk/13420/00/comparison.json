{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,1 @@\n- * <code>Finalizable<\/code> and invokes standard <code>finalize()<\/code> method\n- * as finalization.\n+ * <code>Finalizable<\/code>.\n@@ -39,2 +38,0 @@\n-     * For <code>FinalizableObject<\/code> this method just invoke\n-     * <code>finalize()<\/code>.\n@@ -44,1 +41,0 @@\n-     * @see Object#finalize()\n@@ -48,1 +44,1 @@\n-        finalize();\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/FinalizableObject.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.lang.ref.Cleaner;\n@@ -195,0 +196,3 @@\n+        \/\/ register the clenup method to be called when this Log instance becomes unreachable.\n+        Cleaner.create().register(this, () -> cleanup());\n+\n@@ -473,1 +477,1 @@\n-        finalize(); \/\/ flush older log stream\n+        cleanup(); \/\/ flush older log stream\n@@ -608,0 +612,4 @@\n+     *\n+     * This is replacement of the finalize() method and is called when this\n+     * Log instance becomes unreachable.\n+     *\n@@ -609,1 +617,1 @@\n-    protected void finalize() {\n+    public void cleanup() {\n@@ -622,1 +630,1 @@\n-        finalize();\n+        cleanup();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/Log.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.lang.ref.Cleaner;\n@@ -98,0 +99,6 @@\n+    public BindServer() {\n+        \/\/ The Cleaner alternative to deprecated finalize() method\n+        \/\/ that is called when the instance becomes unreachable.\n+        Cleaner.create().register(this, () -> cleanup());\n+    }\n+\n@@ -220,1 +227,1 @@\n-            finalize();\n+            cleanup();\n@@ -409,0 +416,3 @@\n+     * This is replacement of the deprecated finalize() and is called\n+     * when this instance becomes unreachable.\n+     *\n@@ -411,1 +421,1 @@\n-    protected void finalize() throws Throwable {\n+    public void cleanup() {\n@@ -413,1 +423,0 @@\n-        super.finalize();\n@@ -418,1 +427,1 @@\n-     * by invoking method <code>finalize()<\/code>.\n+     * by invoking method <code>cleanup()<\/code>.\n@@ -420,1 +429,0 @@\n-     * @see #finalize()\n@@ -423,1 +431,1 @@\n-        finalize();\n+        cleanup();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/BindServer.java","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.lang.ref.Cleaner;\n@@ -123,0 +124,4 @@\n+\n+        \/\/ As an alternative to finalize(), register cleanup() method to\n+        \/\/ be called when this instance becomes unreachable.\n+        Cleaner.create().register(this, () -> cleanup());\n@@ -561,0 +566,4 @@\n+     *\n+     * This is replacement of the finalize() method and is called when this\n+     * instance becomes unreachable.\n+     *\n@@ -562,1 +571,1 @@\n-    protected void finalize() throws Throwable {\n+    public void cleanup() {\n@@ -564,1 +573,0 @@\n-        super.finalize();\n@@ -568,1 +576,1 @@\n-     * Finalize binder at exit by invoking <code>finalize()<\/code>.\n+     * Finalize binder at exit by invoking <code>cleanup()<\/code>.\n@@ -573,1 +581,1 @@\n-        finalize();\n+        cleanup();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeBinder.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.lang.ref.Cleaner;\n@@ -87,0 +88,4 @@\n+\n+        \/\/ As the alternative to finalize(), register the cleanup() method\n+        \/\/ to be called when this instance becomes unreachable.\n+        Cleaner.create().register(this, () -> cleanup());\n@@ -463,1 +468,1 @@\n-    protected void finalize() throws Throwable {\n+    public void cleanup() {\n@@ -465,1 +470,0 @@\n-        super.finalize();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeProcess.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.lang.ref.Cleaner;\n@@ -96,0 +97,4 @@\n+\n+        \/\/ As an alternative to finalize() call, register cleanup() method to be called\n+        \/\/ when this instance becomes unreachable.\n+        Cleaner.create().register(this, () -> cleanup());\n@@ -107,0 +112,4 @@\n+\n+        \/\/ As an alternative to finalize() call, register cleanup() method to be called\n+        \/\/ when this instance becomes unreachable.\n+        Cleaner.create().register(this, () -> cleanup());\n@@ -311,0 +320,4 @@\n+     *\n+     * This is replacement of finalize() method and is called\n+     * when this instance becomes unreachable.\n+     *\n@@ -312,1 +325,1 @@\n-    protected void finalize() throws Throwable {\n+    public void cleanup() {\n@@ -314,1 +327,0 @@\n-        super.finalize();\n@@ -321,1 +333,1 @@\n-        finalize();\n+        cleanup();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/SocketIOPipe.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"}]}