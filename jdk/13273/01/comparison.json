{"files":[{"patch":"@@ -418,1 +418,2 @@\n-        ArrayList<String> cmd = opts.getRuntimePrefix();\n+        ArrayList<String> cmd = new ArrayList<String>();\n+        cmd.addAll(opts.prefix);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -121,29 +121,0 @@\n-    \/\/ Call by CDSTestUtils.runWithArchive() and TestCommon.runWithArchive().\n-    \/\/\n-    \/\/ Example:\n-    \/\/  - The dumping will be done with the default G1GC so we can generate\n-    \/\/    the archived heap.\n-    \/\/  - The runtime execution will be done with the EpsilonGC, to test its\n-    \/\/    ability to load the archived heap.\n-    \/\/\n-    \/\/ jtreg -vmoptions:-Dtest.cds.runtime.options=-XX:+UnlockExperimentalVMOptions,-XX:+UseEpsilonGC \\\n-    \/\/       test\/hotspot\/jtreg\/runtime\/cds\n-    public ArrayList<String> getRuntimePrefix() {\n-        ArrayList<String> cmdline = new ArrayList<>();\n-\n-        String jtropts = System.getProperty(\"test.cds.runtime.options\");\n-        if (jtropts != null) {\n-            for (String s : jtropts.split(\",\")) {\n-                if (!disabledRuntimePrefixes.contains(s)) {\n-                    cmdline.add(s);\n-                }\n-            }\n-        }\n-\n-        for (String p : prefix) {\n-            cmdline.add(p);\n-        }\n-\n-        return cmdline;\n-    }\n-\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSOptions.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.util.List;\n@@ -39,0 +40,3 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import jdk.test.lib.JDKToolFinder;\n@@ -427,1 +431,2 @@\n-        ArrayList<String> cmd = opts.getRuntimePrefix();\n+        ArrayList<String> cmd = new ArrayList<String>();\n+        cmd.addAll(opts.prefix);\n@@ -602,0 +607,49 @@\n+    \/\/ Check commandline for the last instance of Xshare to see if the process can load\n+    \/\/ a CDS archive\n+    public static boolean isRunningWithArchive(List<String> cmd) {\n+        \/\/ -Xshare only works for the java executable\n+        if (!cmd.get(0).equals(JDKToolFinder.getJDKTool(\"java\")) || cmd.size() < 2) {\n+            return false;\n+        }\n+\n+        \/\/ -Xshare options are likely at the end of the args list\n+        for (int i  = cmd.size() - 1; i >= 0; i--) {\n+            String s = cmd.get(i);\n+            if (s.equals(\"-Xshare:dump\") || s.equals(\"-Xshare:off\")) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    public static boolean isGCOption(String s) {\n+      return s.startsWith(\"-XX:+Use\") && s.endsWith(\"GC\");\n+    }\n+\n+    public static boolean hasGCOption(List<String> cmd) {\n+        for (String s : cmd) {\n+            if (isGCOption(s)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    \/\/ Handle and insert test.cds.runtime.options to commandline\n+    public static void handleCDSRuntimeOptions(ProcessBuilder pb) {\n+        List<String> cmd = pb.command();\n+        String jtropts = System.getProperty(\"test.cds.runtime.options\");\n+        if (jtropts != null && isRunningWithArchive(cmd)) {\n+            \/\/ There cannot be multiple GC options in the command line so some\n+            \/\/ options may be ignored\n+            ArrayList<String> cdsRuntimeOpts = new ArrayList<String>();\n+            boolean hasGCOption = hasGCOption(cmd);\n+            for (String s : jtropts.split(\",\")) {\n+                if (!CDSOptions.disabledRuntimePrefixes.contains(s) &&\n+                    !(hasGCOption && isGCOption(s))) {\n+                    cdsRuntimeOpts.add(s);\n+                }\n+            }\n+            pb.command().addAll(1, cdsRuntimeOpts);\n+        }\n+    }\n@@ -606,0 +660,3 @@\n+\n+        handleCDSRuntimeOptions(pb);\n+\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSTestUtils.java","additions":58,"deletions":1,"binary":false,"changes":59,"status":"modified"}]}