{"files":[{"patch":"@@ -609,12 +609,4 @@\n-    public static boolean maybeRunningWithArchive(List<String> cmd) {\n-      \/\/ -Xshare only works for the java executable\n-      if (!cmd.get(0).equals(JDKToolFinder.getJDKTool(\"java\")) || cmd.size() < 2) {\n-        return false;\n-      }\n-\n-      Pattern share = Pattern.compile(\"-Xshare:.*\");\n-      String lastXShare = \"\";\n-      for (String s : cmd) {\n-        Matcher m = share.matcher(s);\n-        if (m.find()) {\n-          lastXShare = s;\n+    public static boolean isRunningWithArchive(List<String> cmd) {\n+        \/\/ -Xshare only works for the java executable\n+        if (!cmd.get(0).equals(JDKToolFinder.getJDKTool(\"java\")) || cmd.size() < 2) {\n+            return false;\n@@ -622,1 +614,0 @@\n-      }\n@@ -624,4 +615,8 @@\n-      if (lastXShare.equals(\"-Xshare:dump\") || lastXShare.equals(\"-Xshare:off\")) {\n-        return false;\n-      }\n-      return true;\n+        \/\/ -Xshare options are likely at the end of the args list\n+        for (int i  = cmd.size() - 1; i >= 0; i--) {\n+            String s = cmd.get(i);\n+            if (s.equals(\"-Xshare:dump\") || s.equals(\"-Xshare:off\")) {\n+                return false;\n+            }\n+        }\n+        return true;\n@@ -630,10 +625,2 @@\n-    static boolean maybeAddOption(String cmd, boolean hasGCOption, ArrayList<String> cmdline) {\n-      Pattern gc = Pattern.compile(\"^-XX:\\\\+.*GC\");\n-      Matcher m = gc.matcher(cmd);\n-      if (m.matches() && !hasGCOption) {\n-        cmdline.add(cmd);\n-        return true;\n-      } else if (!m.matches()) {\n-        cmdline.add(cmd);\n-      }\n-      return hasGCOption;\n+    public static boolean isGCOption(String s) {\n+      return s.startsWith(\"-XX:+Use\") && s.endsWith(\"GC\");\n@@ -643,5 +630,24 @@\n-      Pattern gc = Pattern.compile(\"^-XX:\\\\+.*GC\");\n-      for (String s : cmd) {\n-        Matcher m = gc.matcher(s);\n-        if (m.find()) {\n-          return true;\n+        for (String s : cmd) {\n+            if (isGCOption(s)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    \/\/ Handle and insert test.cds.runtime.options to commandline\n+    public static void handleCDSRuntimeOptions(ProcessBuilder pb) {\n+        List<String> cmd = pb.command();\n+        String jtropts = System.getProperty(\"test.cds.runtime.options\");\n+        if (jtropts != null && isRunningWithArchive(cmd)) {\n+            \/\/ There cannot be multiple GC options in the command line so some\n+            \/\/ options may be ignored\n+            ArrayList<String> cdsRuntimeOpts = new ArrayList<String>();\n+            boolean hasGCOption = hasGCOption(cmd);\n+            for (String s : jtropts.split(\",\")) {\n+                if (!CDSOptions.disabledRuntimePrefixes.contains(s) &&\n+                    !(hasGCOption && isGCOption(s))) {\n+                    cdsRuntimeOpts.add(s);\n+                }\n+            }\n+            pb.command().addAll(1, cdsRuntimeOpts);\n@@ -649,2 +655,0 @@\n-      }\n-      return false;\n@@ -657,15 +661,1 @@\n-        \/\/ Handle and insert test.cds.runtime.options\n-        List<String> cmd = pb.command();\n-        ArrayList<String> cdsRuntimeOpts = new ArrayList<String>();\n-        String jtropts = System.getProperty(\"test.cds.runtime.options\");\n-        if (jtropts != null && maybeRunningWithArchive(cmd)) {\n-          \/\/ There cannot be multiple GC options in the command line so some\n-          \/\/ options may be ignored\n-          boolean hasGCOption = hasGCOption(cmd);\n-          for (String s : jtropts.split(\",\")) {\n-              if (!CDSOptions.disabledRuntimePrefixes.contains(s)) {\n-                hasGCOption = maybeAddOption(s, hasGCOption, cdsRuntimeOpts);\n-              }\n-          }\n-          pb.command().addAll(1, cdsRuntimeOpts);\n-        }\n+        handleCDSRuntimeOptions(pb);\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSTestUtils.java","additions":39,"deletions":49,"binary":false,"changes":88,"status":"modified"}]}