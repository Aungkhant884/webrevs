{"files":[{"patch":"@@ -185,0 +185,8 @@\n+        \/\/ This loop implements a retry mechanism to work around an issue\n+        \/\/ on some systems (observed on Windows 10) that seem to be trying to\n+        \/\/ throttle the number of connections that can be made concurrently by\n+        \/\/ rejecting connection attempts.\n+        \/\/ On the first iteration of this loop, we will attempt 20 concurrent\n+        \/\/ requests. If this fails with ConnectException, we will retry the\n+        \/\/ 20 requests, but limiting the concurrency to 10 (LIMIT <- 10).\n+        \/\/ If this fails again, the test will fail.\n","filename":"test\/jdk\/java\/net\/httpclient\/ManyRequests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -260,0 +260,8 @@\n+        \/\/ This loop implements a retry mechanism to work around an issue\n+        \/\/ on some systems (observed on Windows 10) that seem to be trying to\n+        \/\/ throttle the number of connections that can be made concurrently by\n+        \/\/ rejecting connection attempts.\n+        \/\/ On the first iteration of this loop, we will attempt 20 concurrent\n+        \/\/ requests. If this fails with ConnectException, we will retry the\n+        \/\/ 20 requests, but limiting the concurrency to 10 (LIMIT <- 10).\n+        \/\/ If this fails again, the test will fail.\n","filename":"test\/jdk\/java\/net\/httpclient\/ManyRequestsLegacy.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}