{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,1 +174,1 @@\n-     * Returns an empty iterable of completions.\n+     * {@return an empty iterable of completions}\n@@ -189,5 +189,2 @@\n-     * Returns {@code true} if this object has been {@linkplain #init\n-     * initialized}, {@code false} otherwise.\n-     *\n-     * @return {@code true} if this object has been initialized,\n-     * {@code false} otherwise.\n+     * {@return {@code true} if this object has been {@linkplain #init\n+     * initialized}, {@code false} otherwise}\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/AbstractProcessor.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,1 @@\n-     * Returns the text of the suggested completion.\n-     * @return the text of the suggested completion.\n+     * {@return the text of the suggested completion}\n@@ -47,2 +46,1 @@\n-     * Returns an informative message about the completion.\n-     * @return an informative message about the completion.\n+     * {@return an informative message about the completion}\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/Completion.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-     * Returns a completion of the value and message.\n+     * {@return a completion of the value and message}\n@@ -72,1 +72,0 @@\n-     * @return a completion of the provided value and message\n@@ -79,1 +78,1 @@\n-     * Returns a completion of the value and an empty message\n+     * {@return a completion of the value and an empty message}\n@@ -82,1 +81,0 @@\n-     * @return a completion of the value and an empty message\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/Completions.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,2 +63,2 @@\n-     * Returns the processor-specific options passed to the annotation\n-     * processing tool.  Options are returned in the form of a map from\n+     * {@return the processor-specific options passed to the annotation\n+     * processing tool}  Options are returned in the form of a map from\n@@ -77,2 +77,0 @@\n-     *\n-     * @return the processor-specific options passed to the tool\n@@ -83,4 +81,2 @@\n-     * Returns the messager used to report errors, warnings, and other\n-     * notices.\n-     *\n-     * @return the messager\n+     * {@return the messager used to report errors, warnings, and other\n+     * notices}\n@@ -91,4 +87,2 @@\n-     * Returns the filer used to create new source, class, or auxiliary\n-     * files.\n-     *\n-     * @return the filer\n+     * {@return the filer used to create new source, class, or auxiliary\n+     * files}\n@@ -99,4 +93,2 @@\n-     * Returns an implementation of some utility methods for\n-     * operating on elements\n-     *\n-     * @return element utilities\n+     * {@return an implementation of some utility methods for\n+     * operating on elements}\n@@ -107,4 +99,2 @@\n-     * Returns an implementation of some utility methods for\n-     * operating on types.\n-     *\n-     * @return type utilities\n+     * {@return an implementation of some utility methods for\n+     * operating on types}\n@@ -115,1 +105,1 @@\n-     * Returns the source version that any generated {@linkplain\n+     * {@return the source version that any generated {@linkplain\n@@ -117,1 +107,1 @@\n-     * Filer#createClassFile class} files should conform to.\n+     * Filer#createClassFile class} files should conform to}\n@@ -119,2 +109,0 @@\n-     * @return the source version to which generated source and class\n-     *         files should conform to\n@@ -126,2 +114,2 @@\n-     * Returns the current locale or {@code null} if no locale is in\n-     * effect.  The locale can be be used to provide localized\n+     * {@return the current locale or {@code null} if no locale is in\n+     * effect}  The locale can be be used to provide localized\n@@ -129,3 +117,0 @@\n-     *\n-     * @return the current locale or {@code null} if no locale is in\n-     * effect\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/ProcessingEnvironment.java","additions":15,"deletions":30,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -308,2 +308,2 @@\n-     * Returns the latest source version supported by this annotation\n-     * processor.\n+     * {@return the latest source version supported by this annotation\n+     * processor}\n@@ -311,2 +311,0 @@\n-     * @return the latest source version supported by this annotation\n-     * processor.\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/Processor.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-     * Returns {@code true} if types generated by this round will not\n+     * {@return {@code true} if types generated by this round will not\n@@ -50,5 +50,1 @@\n-     * returns {@code false} otherwise.\n-     *\n-     * @return {@code true} if types generated by this round will not\n-     * be subject to a subsequent round of annotation processing;\n-     * returns {@code false} otherwise\n+     * returns {@code false} otherwise}\n@@ -59,5 +55,2 @@\n-     * Returns {@code true} if an error was raised in the prior round\n-     * of processing; returns {@code false} otherwise.\n-     *\n-     * @return {@code true} if an error was raised in the prior round\n-     * of processing; returns {@code false} otherwise\n+     * {@return {@code true} if an error was raised in the prior round\n+     * of processing; returns {@code false} otherwise}\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/RoundEnvironment.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,1 @@\n-     * Returns the names of the supported annotation types.\n-     * @return the names of the supported annotation types\n+     * {@return the names of the supported annotation types}\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/SupportedAnnotationTypes.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,2 +50,1 @@\n-     * Returns the supported options.\n-     * @return the supported options\n+     * {@return the supported options}\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/SupportedOptions.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,1 @@\n-     * Returns the latest supported source version.\n-     * @return the latest supported source version\n+     * {@return the latest supported source version}\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/SupportedSourceVersion.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -148,2 +148,2 @@\n-     * Returns this construct's annotation of the specified type if\n-     * such an annotation is <em>present<\/em>, else {@code null}.\n+     * {@return this construct's annotation of the specified type if\n+     * such an annotation is <em>present<\/em>, else {@code null}}\n@@ -179,2 +179,0 @@\n-     * @return this construct's annotation for the specified\n-     * annotation type if present, else {@code null}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/AnnotatedConstruct.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -232,3 +232,1 @@\n-     * Returns the latest source version that can be modeled.\n-     *\n-     * @return the latest source version that can be modeled\n+     * {@return the latest source version that can be modeled}\n@@ -257,2 +255,2 @@\n-     * Returns the latest source version fully supported by the\n-     * current execution environment.  {@code RELEASE_9} or later must\n+     * {@return the latest source version fully supported by the\n+     * current execution environment}  {@code RELEASE_9} or later must\n@@ -275,2 +273,0 @@\n-     *\n-     * @return the latest source version that is fully supported\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/SourceVersion.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,3 +47,1 @@\n-     * Returns the type of this annotation.\n-     *\n-     * @return the type of this annotation\n+     * {@return the type of this annotation}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/AnnotationMirror.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,3 +48,1 @@\n-     * Returns the value.\n-     *\n-     * @return the value\n+     * {@return the value}\n@@ -55,1 +53,1 @@\n-     * Returns a string representation of this value.\n+     * {@return a string representation of this value}\n@@ -58,2 +56,0 @@\n-     *\n-     * @return a string representation of this value\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/AnnotationValue.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -64,2 +64,1 @@\n-     * Returns the type defined by this element.\n-     * @return the type defined by this element\n+     * {@return the type defined by this element}\n@@ -78,1 +77,1 @@\n-     * Returns the {@code kind} of this element.\n+     * {@return the {@code kind} of this element}\n@@ -116,2 +115,0 @@\n-     *\n-     * @return the kind of this element\n@@ -131,1 +128,1 @@\n-     * Returns the simple (unqualified) name of this element.  The\n+     * {@return the simple (unqualified) name of this element}  The\n@@ -153,1 +150,0 @@\n-     * @return the simple name of this element\n@@ -242,2 +238,2 @@\n-     * Returns {@code true} if the argument represents the same\n-     * element as {@code this}, or {@code false} otherwise.\n+     * {@return {@code true} if the argument represents the same\n+     * element as {@code this}, or {@code false} otherwise}\n@@ -255,2 +251,0 @@\n-     * @return {@code true} if the specified object represents the same\n-     *          element as this\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/Element.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -44,4 +44,2 @@\n-     * Returns the {@linkplain ExecutableType executable type} defined\n-     * by this executable element.\n-     *\n-     * @return the executable type defined by this executable element\n+     * {@return the {@linkplain ExecutableType executable type} defined\n+     * by this executable element}\n@@ -64,1 +62,1 @@\n-     * Returns the return type of this executable.\n+     * {@return the return type of this executable}\n@@ -68,2 +66,0 @@\n-     *\n-     * @return the return type of this executable\n@@ -106,5 +102,2 @@\n-     * Returns {@code true} if this method or constructor accepts a variable\n-     * number of arguments and returns {@code false} otherwise.\n-     *\n-     * @return {@code true} if this method or constructor accepts a variable\n-     * number of arguments and {@code false} otherwise\n+     * {@return {@code true} if this method or constructor accepts a variable\n+     * number of arguments and returns {@code false} otherwise}\n@@ -115,5 +108,2 @@\n-     * Returns {@code true} if this method is a default method and\n-     * returns {@code false} otherwise.\n-     *\n-     * @return {@code true} if this method is a default method and\n-     * {@code false} otherwise\n+     * {@return {@code true} if this method is a default method and\n+     * returns {@code false} otherwise}\n@@ -145,2 +135,2 @@\n-     * Returns the simple name of a constructor, method, or\n-     * initializer.  For a constructor, the name {@code \"<init>\"} is\n+     * {@return the simple name of a constructor, method, or\n+     * initializer}  For a constructor, the name {@code \"<init>\"} is\n@@ -151,3 +141,0 @@\n-     *\n-     * @return the simple name of a constructor, method, or\n-     * initializer\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/ExecutableElement.java","additions":9,"deletions":22,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -41,3 +41,2 @@\n-     * Returns a {@linkplain javax.lang.model.type.NoType pseudo-type}\n-     * for this module.\n-     * @return a pseudo-type for this module\n+     * {@return a {@linkplain javax.lang.model.type.NoType pseudo-type}\n+     * for this module}\n@@ -90,2 +89,1 @@\n-     * Returns the packages within this module.\n-     * @return the packages within this module\n+     * {@return the packages within this module}\n@@ -97,5 +95,2 @@\n-     * Returns {@code true} if this is an open module and {@code\n-     * false} otherwise.\n-     *\n-     * @return {@code true} if this is an open module and {@code\n-     * false} otherwise\n+     * {@return {@code true} if this is an open module and {@code\n+     * false} otherwise}\n@@ -106,5 +101,2 @@\n-     * Returns {@code true} if this is an unnamed module and {@code\n-     * false} otherwise.\n-     *\n-     * @return {@code true} if this is an unnamed module and {@code\n-     * false} otherwise\n+     * {@return {@code true} if this is an unnamed module and {@code\n+     * false} otherwise}\n@@ -162,1 +154,1 @@\n-         * Returns the {@code kind} of this directive.\n+         * {@return the {@code kind} of this directive}\n@@ -181,2 +173,0 @@\n-         *\n-         * @return the kind of this directive\n@@ -313,2 +303,1 @@\n-         * Returns whether or not this is a static dependency.\n-         * @return whether or not this is a static dependency\n+         * {@return whether or not this is a static dependency}\n@@ -319,2 +308,1 @@\n-         * Returns whether or not this is a transitive dependency.\n-         * @return whether or not this is a transitive dependency\n+         * {@return whether or not this is a transitive dependency}\n@@ -325,2 +313,1 @@\n-         * Returns the module that is required\n-         * @return the module that is required\n+         * {@return the module that is required}\n@@ -338,2 +325,1 @@\n-         * Returns the package being exported.\n-         * @return the package being exported\n+         * {@return the package being exported}\n@@ -359,2 +345,1 @@\n-         * Returns the package being opened.\n-         * @return the package being opened\n+         * {@return the package being opened}\n@@ -379,2 +364,1 @@\n-         * Returns the service being provided.\n-         * @return the service being provided\n+         * {@return the service being provided}\n@@ -385,2 +369,1 @@\n-         * Returns the implementations of the service being provided.\n-         * @return the implementations of the service being provided\n+         * {@return the implementations of the service being provided}\n@@ -397,2 +380,1 @@\n-         * Returns the service that is used.\n-         * @return the service that is used\n+         * {@return the service that is used}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/ModuleElement.java","additions":16,"deletions":34,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -43,3 +43,2 @@\n-     * Returns a {@linkplain javax.lang.model.type.NoType pseudo-type}\n-     * for this package.\n-     * @return a pseudo-type for this package\n+     * {@return a {@linkplain javax.lang.model.type.NoType pseudo-type}\n+     * for this package}\n@@ -84,2 +83,2 @@\n-     * Returns the {@linkplain NestingKind#TOP_LEVEL top-level}\n-     * classes and interfaces within this package.  Note that\n+     * {@return the {@linkplain NestingKind#TOP_LEVEL top-level}\n+     * classes and interfaces within this package}  Note that\n@@ -88,3 +87,0 @@\n-     *\n-     * @return the top-level classes and interfaces within this\n-     * package\n@@ -96,2 +92,2 @@\n-     * Returns {@code true} if this is an unnamed package and {@code\n-     * false} otherwise.\n+     * {@return {@code true} if this is an unnamed package and {@code\n+     * false} otherwise}\n@@ -99,2 +95,0 @@\n-     * @return {@code true} if this is an unnamed package and {@code\n-     * false} otherwise\n@@ -106,2 +100,2 @@\n-     * Returns the enclosing module if such a module exists; otherwise\n-     * returns {@code null}.\n+     * {@return the enclosing module if such a module exists; otherwise\n+     * {@code null}}\n@@ -115,2 +109,0 @@\n-     * @return the enclosing module or {@code null} if no such module exists\n-     *\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/PackageElement.java","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,3 +36,1 @@\n-     * Returns the fully qualified name of an element.\n-     *\n-     * @return the fully qualified name of an element\n+     * {@return the fully qualified name of an element}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/QualifiedNameable.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-     * Returns the enclosing element of this record component.\n+     * {@return the enclosing element of this record component}\n@@ -39,2 +39,0 @@\n-     *\n-     * @return the enclosing element of this record component\n@@ -46,1 +44,1 @@\n-     * Returns the simple name of this record component.\n+     * {@return the simple name of this record component}\n@@ -51,2 +49,0 @@\n-     * @return the simple name of this record component\n-     *\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/RecordComponentElement.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,2 @@\n-     * Returns the {@linkplain TypeVariable type variable} corresponding to this type parameter element.\n+     * {@return the {@linkplain TypeVariable type variable}\n+     * corresponding to this type parameter element}\n@@ -48,2 +49,0 @@\n-     *\n-     * @return the type variable corresponding to this type parameter element\n@@ -55,5 +54,2 @@\n-     * Returns the generic class, interface, method, or constructor that is\n-     * parameterized by this type parameter.\n-     *\n-     * @return the generic class, interface, method, or constructor that is\n-     * parameterized by this type parameter\n+     * {@return the generic class, interface, method, or constructor that is\n+     * parameterized by this type parameter}\n@@ -76,3 +72,2 @@\n-     * Returns the {@linkplain TypeParameterElement#getGenericElement generic element} of this type parameter.\n-     *\n-     * @return the generic element of this type parameter\n+     * {@return the {@linkplain TypeParameterElement#getGenericElement\n+     * generic element} of this type parameter}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/TypeParameterElement.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-     * Returns the type of this variable.\n+     * {@return the type of this variable}\n@@ -50,2 +50,0 @@\n-     * @return the type of this variable\n-     *\n@@ -82,1 +80,1 @@\n-     * Returns the simple name of this variable element.\n+     * {@return the simple name of this variable element}\n@@ -89,2 +87,0 @@\n-     *\n-     * @return the simple name of this variable element\n@@ -96,1 +92,1 @@\n-     * Returns the enclosing element of this variable.\n+     * {@return the enclosing element of this variable}\n@@ -100,2 +96,0 @@\n-     *\n-     * @return the enclosing element of this variable\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/VariableElement.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,3 +42,1 @@\n-     * Returns the component type of this array type.\n-     *\n-     * @return the component type of this array type\n+     * {@return the component type of this array type}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/ArrayType.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,3 +61,1 @@\n-     * Returns the element corresponding to this type.\n-     *\n-     * @return the element corresponding to this type\n+     * {@return the element corresponding to this type}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/DeclaredType.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-     * Returns the return type of this executable.\n+     * {@return the return type of this executable}\n@@ -66,2 +66,0 @@\n-     *\n-     * @return the return type of this executable\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/ExecutableType.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,3 +48,1 @@\n-     * Return the bounds comprising this intersection type.\n-     *\n-     * @return the bounds of this intersection type\n+     * {@return the bounds comprising this intersection type}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/IntersectionType.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -164,3 +164,2 @@\n-     * Returns {@code true} if this kind corresponds to a primitive\n-     * type and {@code false} otherwise.\n-     * @return {@code true} if this kind corresponds to a primitive type\n+     * {@return {@code true} if this kind corresponds to a primitive\n+     * type and {@code false} otherwise}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/TypeKind.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-     * Returns the {@code kind} of this type.\n+     * {@return the {@code kind} of this type}\n@@ -112,2 +112,0 @@\n-     *\n-     * @return the kind of this type\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/TypeMirror.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,3 +54,1 @@\n-     * Returns the element corresponding to this type variable.\n-     *\n-     * @return the element corresponding to this type variable\n+     * {@return the element corresponding to this type variable}\n@@ -61,1 +59,1 @@\n-     * Returns the upper bound of this type variable.\n+     * {@return the upper bound of this type variable}\n@@ -70,1 +68,0 @@\n-     * @return the upper bound of this type variable\n@@ -76,1 +73,1 @@\n-     * Returns the lower bound of this type variable.  While a type\n+     * {@return the lower bound of this type variable}  While a type\n@@ -82,1 +79,0 @@\n-     * @return the lower bound of this type variable\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/TypeVariable.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -42,3 +42,1 @@\n-     * Return the alternatives comprising this union type.\n-     *\n-     * @return the alternatives comprising this union type.\n+     * {@return the alternatives comprising this union type}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/UnionType.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-     * Returns the upper bound of this wildcard.\n+     * {@return the upper bound of this wildcard}\n@@ -53,2 +53,0 @@\n-     *\n-     * @return the upper bound of this wildcard\n@@ -59,1 +57,1 @@\n-     * Returns the lower bound of this wildcard.\n+     * {@return the lower bound of this wildcard}\n@@ -62,2 +60,0 @@\n-     *\n-     * @return the lower bound of this wildcard\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/WildcardType.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,2 +95,1 @@\n-     * Returns a list of fields in {@code elements}.\n-     * @return a list of fields in {@code elements}\n+     * {@return a list of fields in {@code elements}}\n@@ -105,2 +104,1 @@\n-     * Returns a set of fields in {@code elements}.\n-     * @return a set of fields in {@code elements}\n+     * {@return a set of fields in {@code elements}}\n@@ -115,2 +113,1 @@\n-     * Returns a list of record components in {@code elements}.\n-     * @return a list of record components in {@code elements}\n+     * {@return a list of record components in {@code elements}}\n@@ -126,2 +123,1 @@\n-     * Returns a set of record components in {@code elements}.\n-     * @return a set of record components in {@code elements}\n+     * {@return a set of record components in {@code elements}}\n@@ -137,2 +133,1 @@\n-     * Returns a list of constructors in {@code elements}.\n-     * @return a list of constructors in {@code elements}\n+     * {@return a list of constructors in {@code elements}}\n@@ -147,2 +142,1 @@\n-     * Returns a set of constructors in {@code elements}.\n-     * @return a set of constructors in {@code elements}\n+     * {@return a set of constructors in {@code elements}}\n@@ -157,2 +151,1 @@\n-     * Returns a list of methods in {@code elements}.\n-     * @return a list of methods in {@code elements}\n+     * {@return a list of methods in {@code elements}}\n@@ -167,2 +160,1 @@\n-     * Returns a set of methods in {@code elements}.\n-     * @return a set of methods in {@code elements}\n+     * {@return a set of methods in {@code elements}}\n@@ -177,2 +169,1 @@\n-     * Returns a list of types in {@code elements}.\n-     * @return a list of types in {@code elements}\n+     * {@return a list of types in {@code elements}}\n@@ -187,2 +178,1 @@\n-     * Returns a set of types in {@code elements}.\n-     * @return a set of types in {@code elements}\n+     * {@return a set of types in {@code elements}}\n@@ -197,2 +187,1 @@\n-     * Returns a list of packages in {@code elements}.\n-     * @return a list of packages in {@code elements}\n+     * {@return a list of packages in {@code elements}}\n@@ -207,2 +196,1 @@\n-     * Returns a set of packages in {@code elements}.\n-     * @return a set of packages in {@code elements}\n+     * {@return a set of packages in {@code elements}}\n@@ -217,2 +205,1 @@\n-     * Returns a list of modules in {@code elements}.\n-     * @return a list of modules in {@code elements}\n+     * {@return a list of modules in {@code elements}}\n@@ -228,2 +215,1 @@\n-     * Returns a set of modules in {@code elements}.\n-     * @return a set of modules in {@code elements}\n+     * {@return a set of modules in {@code elements}}\n@@ -264,2 +250,1 @@\n-     * Returns a list of {@code exports} directives in {@code directives}.\n-     * @return a list of {@code exports} directives in {@code directives}\n+     * {@return a list of {@code exports} directives in {@code directives}}\n@@ -275,2 +260,1 @@\n-     * Returns a list of {@code opens} directives in {@code directives}.\n-     * @return a list of {@code opens} directives in {@code directives}\n+     * {@return a list of {@code opens} directives in {@code directives}}\n@@ -286,2 +270,1 @@\n-     * Returns a list of {@code provides} directives in {@code directives}.\n-     * @return a list of {@code provides} directives in {@code directives}\n+     * {@return a list of {@code provides} directives in {@code directives}}\n@@ -297,2 +280,1 @@\n-     * Returns a list of {@code requires} directives in {@code directives}.\n-     * @return a list of {@code requires} directives in {@code directives}\n+     * {@return a list of {@code requires} directives in {@code directives}}\n@@ -308,2 +290,1 @@\n-     * Returns a list of {@code uses} directives in {@code directives}.\n-     * @return a list of {@code uses} directives in {@code directives}\n+     * {@return a list of {@code uses} directives in {@code directives}}\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/ElementFilter.java","additions":20,"deletions":39,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-     * Returns the values of an annotation's elements, including defaults.\n+     * {@return the values of an annotation's elements, including defaults}\n@@ -273,1 +273,0 @@\n-     * @return the values of the annotation's elements, including defaults\n@@ -305,1 +304,1 @@\n-     * Returns {@code true} if the element is deprecated, {@code false} otherwise.\n+     * {@return {@code true} if the element is deprecated, {@code false} otherwise}\n@@ -308,1 +307,0 @@\n-     * @return {@code true} if the element is deprecated, {@code false} otherwise\n@@ -313,1 +311,1 @@\n-     * Returns the <em>origin<\/em> of the given element.\n+     * {@return the <em>origin<\/em> of the given element}\n@@ -329,1 +327,0 @@\n-     * @return the origin of the given element\n@@ -337,1 +334,1 @@\n-     * Returns the <em>origin<\/em> of the given annotation mirror.\n+     * {@return the <em>origin<\/em> of the given annotation mirror}\n@@ -359,1 +356,0 @@\n-     * @return the origin of the given annotation mirror\n@@ -370,1 +366,1 @@\n-     * Returns the <em>origin<\/em> of the given module directive.\n+     * {@return the <em>origin<\/em> of the given module directive}\n@@ -393,1 +389,0 @@\n-     * @return the origin of the given directive\n@@ -460,2 +455,2 @@\n-     * Returns {@code true} if the executable element is a bridge\n-     * method, {@code false} otherwise.\n+     * {@return {@code true} if the executable element is a bridge\n+     * method, {@code false} otherwise}\n@@ -466,2 +461,0 @@\n-     * @return {@code true} if the executable element is a bridge\n-     * method, {@code false} otherwise\n@@ -475,1 +468,1 @@\n-     * Returns the <i>binary name<\/i> of a type element.\n+     * {@return the <i>binary name<\/i> of a type element}\n@@ -478,1 +471,0 @@\n-     * @return the binary name\n@@ -487,1 +479,1 @@\n-     * Returns the package of an element.  The package of a package is\n+     * {@return the package of an element}  The package of a package is\n@@ -497,1 +489,0 @@\n-     * @return the package of an element\n@@ -502,1 +493,1 @@\n-     * Returns the module of an element.  The module of a module is\n+     * {@return the module of an element}  The module of a module is\n@@ -525,1 +516,0 @@\n-     * @return the module of an element\n@@ -652,2 +642,2 @@\n-     * Return a name with the same sequence of characters as the\n-     * argument.\n+     * {@return a name with the same sequence of characters as the\n+     * argument}\n@@ -656,1 +646,0 @@\n-     * @return a name with the same sequence of characters as the argument\n@@ -661,1 +650,2 @@\n-     * Returns {@code true} if the type element is a functional interface, {@code false} otherwise.\n+     * {@return {@code true} if the type element is a functional\n+     * interface, {@code false} otherwise}\n@@ -664,1 +654,0 @@\n-     * @return {@code true} if the element is a functional interface, {@code false} otherwise\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":14,"deletions":25,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,1 @@\n-     * Returns the erasure of a type.\n+     * {@return the erasure of a type}\n@@ -151,1 +151,0 @@\n-     * @return the erasure of the given type\n@@ -158,1 +157,1 @@\n-     * Returns the class of a boxed value of a given primitive type.\n+     * {@return the class of a boxed value of the primitive type argument}\n@@ -162,1 +161,0 @@\n-     * @return the class of a boxed value of type {@code p}\n@@ -190,1 +188,1 @@\n-     * Returns a primitive type.\n+     * {@return a primitive type}\n@@ -193,1 +191,0 @@\n-     * @return a primitive type\n@@ -199,3 +196,1 @@\n-     * Returns the null type.  This is the type of {@code null}.\n-     *\n-     * @return the null type\n+     * {@return the null type}  This is the type of {@code null}.\n@@ -225,1 +220,1 @@\n-     * Returns an array type with the specified component type.\n+     * {@return an array type with the specified component type}\n@@ -228,1 +223,0 @@\n-     * @return an array type with the specified component type.\n@@ -235,1 +229,1 @@\n-     * Returns a new wildcard type argument.  Either of the wildcard's\n+     * {@return a new wildcard type}  Either of the wildcard's\n@@ -240,1 +234,0 @@\n-     * @return a new wildcard\n@@ -247,2 +240,2 @@\n-     * Returns the type corresponding to a type element and\n-     * actual type arguments.\n+     * {@return the type corresponding to a type element and\n+     * actual type arguments}\n@@ -268,2 +261,0 @@\n-     * @return the type corresponding to the type element and\n-     *          actual type arguments\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Types.java","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"}]}