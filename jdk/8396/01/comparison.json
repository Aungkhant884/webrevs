{"files":[{"patch":"@@ -991,1 +991,1 @@\n-     * Initializes this signature engine with the specified parameter set.\n+     * Initializes this signature engine with the specified parameter values.\n@@ -993,1 +993,1 @@\n-     * @param params the parameters\n+     * @param params the parameter values\n@@ -995,1 +995,1 @@\n-     * @throws    InvalidAlgorithmParameterException if the given parameters\n+     * @throws InvalidAlgorithmParameterException if the given parameter values\n@@ -1008,9 +1008,8 @@\n-     * <p> If this signature has been initialized with parameters\n-     * (by calling {@link #setParameter(AlgorithmParameterSpec)} or\n-     * {@link #setParameter(String, Object)}) and the underlying signature\n-     * implementation supports returning the parameters as\n-     * {@code AlgorithmParameters}, this method returns the same parameters.\n-     * If the parameters were not set, this method may return a combination\n-     * of default and randomly generated parameter values if the\n-     * underlying signature implementation supports it and can successfully\n-     * generate them. Otherwise, {@code null} is returned.\n+     * <p>The returned parameters may be the same that were used to initialize\n+     * this signature, or may contain additional default or random parameter\n+     * values used by the underlying signature implementation if the underlying\n+     * signature implementation supports returning the parameters as\n+     * {@code AlgorithmParameters}. If the required\n+     * parameters were not supplied and the underlying signature implementation\n+     * can generate the parameter values, it will be returned. Otherwise,\n+     * {@code null} is returned.\n@@ -1019,0 +1018,2 @@\n+     * @throws UnsupportedOperationException if the underlying provider\n+     *         implementation has not overridden this method\n","filename":"src\/java.base\/share\/classes\/java\/security\/Signature.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -395,9 +395,7 @@\n-     * <p> If this signature engine has been initialized with parameters\n-     * (by calling {@link #engineSetParameter(AlgorithmParameterSpec)} or\n-     * {@link #engineSetParameter(String, Object)}) and the underlying signature\n-     * implementation supports returning the parameters as\n-     * {@code AlgorithmParameters}, this method returns the same parameters.\n-     * If the parameters were not set, this method may return a combination\n-     * of default and randomly generated parameter values if the\n-     * underlying signature implementation supports it and can successfully\n-     * generate them. Otherwise, {@code null} is returned.\n+     * <p>The returned parameters may be the same that were used to initialize\n+     * this signature, or may contain additional default or random parameter\n+     * values used by the underlying signature implementation if the underlying\n+     * signature implementation supports returning the parameters as\n+     * {@code AlgorithmParameters}. If the required parameters were not supplied\n+     * and the underlying signature implementation can generate the parameter\n+     * values, it will be returned. Otherwise, {@code null} is returned.\n@@ -407,1 +405,1 @@\n-     * @throws    UnsupportedOperationException if this method is\n+     * @throws UnsupportedOperationException if this method is\n","filename":"src\/java.base\/share\/classes\/java\/security\/SignatureSpi.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"}]}