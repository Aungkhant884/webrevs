{"files":[{"patch":"@@ -191,1 +191,1 @@\n-  assert_at_safepoint();\n+  assert(!Universe::is_fully_initialized() || SafepointSynchronize::is_at_safepoint(), \"must be\");\n@@ -230,1 +230,0 @@\n-\/\/ - a minimum one eden region length.\n@@ -260,0 +259,4 @@\n+  \/\/ The absolute minimum young gen length (as provided by the young gen sizer) ensures\n+  \/\/ that we desire at least one young gen region.\n+  assert(absolute_min_young_length > 0, \"must be\");\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n@@ -40,1 +38,0 @@\n-import jdk.test.whitebox.WhiteBox;\n@@ -43,1 +40,1 @@\n-  private static long YoungGenSize  = 32 * 1024 * 1024;\n+  private static long YoungGenSize = 32 * 1024 * 1024;\n@@ -48,1 +45,0 @@\n-      \"-XX:+UnlockDiagnosticVMOptions\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestOneEdenRegionAfterGC.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}