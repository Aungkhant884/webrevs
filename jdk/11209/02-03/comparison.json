{"files":[{"patch":"@@ -193,0 +193,2 @@\n+  \/\/ Request to get at least one eden region in young gen to ensure progress.\n+  bool need_one_eden_region = true;\n@@ -195,1 +197,1 @@\n-                             true \/* after_gc *\/);\n+                             need_one_eden_region);\n@@ -198,1 +200,1 @@\n-void G1Policy::update_young_length_bounds(size_t pending_cards, size_t rs_length, bool after_gc) {\n+void G1Policy::update_young_length_bounds(size_t pending_cards, size_t rs_length, bool need_one_eden_region) {\n@@ -201,2 +203,2 @@\n-  uint new_young_list_desired_length = calculate_young_desired_length(pending_cards, rs_length);\n-  uint new_young_list_target_length = calculate_young_target_length(new_young_list_desired_length, after_gc);\n+  uint new_young_list_desired_length = calculate_young_desired_length(pending_cards, rs_length, need_one_eden_region);\n+  uint new_young_list_target_length = calculate_young_target_length(new_young_list_desired_length);\n@@ -237,1 +239,1 @@\n-uint G1Policy::calculate_young_desired_length(size_t pending_cards, size_t rs_length) const {\n+uint G1Policy::calculate_young_desired_length(size_t pending_cards, size_t rs_length, bool need_one_eden_region) const {\n@@ -291,1 +293,14 @@\n-  log_trace(gc, ergo, heap)(\"Young desired length %u \"\n+  \/\/ Incorporate the request to make room for at least one eden region. This may\n+  \/\/ make desired regions go over absolute maximum length by the heap sizer, however\n+  \/\/ we would incur immediate full gcs after a young gc (particularly on small heaps)\n+  \/\/ otherwise.\n+  if (need_one_eden_region && (allocated_young_length >= desired_young_length)) {\n+   log_trace(gc, ergo, heap)(\"Young desired length: Desired young region length less than already \"\n+                              \"allocated region length, but requesting one eden region minimum. \"\n+                              \"Expanding desired young length from %u to %u.\",\n+                              desired_young_length,\n+                              allocated_young_length + 1);\n+    desired_young_length = allocated_young_length + 1;\n+  }\n+\n+  log_trace(gc, ergo, heap)(\"Young desired length %u (minimum one eden: %s) \"\n@@ -298,1 +313,2 @@\n-                            desired_young_length, survivor_length,\n+                            desired_young_length, BOOL_TO_STR(need_one_eden_region),\n+                            survivor_length,\n@@ -310,1 +326,1 @@\n-uint G1Policy::calculate_young_target_length(uint desired_young_length, bool after_gc) const {\n+uint G1Policy::calculate_young_target_length(uint desired_young_length) const {\n@@ -313,5 +329,0 @@\n-  if (after_gc && (desired_young_length <= allocated_young_length)) {\n-    log_trace(gc, ergo, heap)(\"Young target length: Desired young length smaller than allocated after GC. Allowing one extra eden region.\");\n-    desired_young_length = allocated_young_length + 1;\n-  }\n-\n@@ -537,1 +548,4 @@\n-  update_young_length_bounds(pending_cards, rs_length, true \/* after_gc *\/);\n+  \/\/ We are only revising young gen length to meet pause time goal, so do not request\n+  \/\/ at least one eden region for progress. At this point we actually want to run into\n+  \/\/ a GC soon if young gen is already (too) large.\n+  update_young_length_bounds(pending_cards, rs_length, false \/* need_one_eden_region *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -213,1 +213,2 @@\n-  \/\/ the prediction model.\n+  \/\/ the prediction model. Request one eden region when not revising young length\n+  \/\/ at mutator time.\n@@ -215,1 +216,1 @@\n-  void update_young_length_bounds(size_t pending_cards, size_t rs_length, bool after_gc);\n+  void update_young_length_bounds(size_t pending_cards, size_t rs_length, bool need_one_eden_region);\n@@ -243,1 +244,1 @@\n-  uint calculate_young_desired_length(size_t pending_cards, size_t rs_length) const;\n+  uint calculate_young_desired_length(size_t pending_cards, size_t rs_length, bool need_one_eden_region) const;\n@@ -245,1 +246,1 @@\n-  uint calculate_young_target_length(uint desired_young_length, bool after_gc) const;\n+  uint calculate_young_target_length(uint desired_young_length) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}