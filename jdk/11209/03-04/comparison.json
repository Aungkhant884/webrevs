{"files":[{"patch":"@@ -193,2 +193,2 @@\n-  \/\/ Request to get at least one eden region in young gen to ensure progress.\n-  bool need_one_eden_region = true;\n+  \/\/ Request at least one eden region to ensure progress.\n+  bool after_gc = true;\n@@ -197,1 +197,1 @@\n-                             need_one_eden_region);\n+                             after_gc);\n@@ -200,1 +200,1 @@\n-void G1Policy::update_young_length_bounds(size_t pending_cards, size_t rs_length, bool need_one_eden_region) {\n+void G1Policy::update_young_length_bounds(size_t pending_cards, size_t rs_length, bool after_gc) {\n@@ -203,1 +203,1 @@\n-  uint new_young_list_desired_length = calculate_young_desired_length(pending_cards, rs_length, need_one_eden_region);\n+  uint new_young_list_desired_length = calculate_young_desired_length(pending_cards, rs_length, after_gc);\n@@ -231,1 +231,2 @@\n-\/\/ - MMU goal influencing eden to make GCs spaced apart.\n+\/\/ - MMU goal influencing eden to make GCs spaced apart\n+\/\/ - if after a GC, request at least one eden region to avoid immediate full gcs\n@@ -233,5 +234,3 @@\n-\/\/ We may enter with already allocated eden and survivor regions, that may be\n-\/\/ higher than the maximum, or the above goals may result in a desired value\n-\/\/ smaller than are already allocated.\n-\/\/ The main reason is revising young length, with or without the GCLocker being\n-\/\/ active.\n+\/\/ We may enter with already allocated eden and survivor regions because there\n+\/\/ are survivor regions (after gc). Young gen revising can call this method at any\n+\/\/ time too.\n@@ -239,1 +238,5 @@\n-uint G1Policy::calculate_young_desired_length(size_t pending_cards, size_t rs_length, bool need_one_eden_region) const {\n+\/\/ For this method it does not matter if the above goals may result in a desired\n+\/\/ value smaller than what is already allocated or what can actually be allocated.\n+\/\/ This return value is only an expectation.\n+\/\/\n+uint G1Policy::calculate_young_desired_length(size_t pending_cards, size_t rs_length, bool after_gc) const {\n@@ -293,5 +296,5 @@\n-  \/\/ Incorporate the request to make room for at least one eden region. This may\n-  \/\/ make desired regions go over absolute maximum length by the heap sizer, however\n-  \/\/ we would incur immediate full gcs after a young gc (particularly on small heaps)\n-  \/\/ otherwise.\n-  if (need_one_eden_region && (allocated_young_length >= desired_young_length)) {\n+  \/\/ After a garbage collection, make room for at least one eden region (i.e. in addition to\n+  \/\/ already allocated survivor regions).\n+  \/\/ This may make desired regions go over absolute maximum length by the heap sizer, however\n+  \/\/ the immediate full gcs after that young gc (particularly on small heaps) are worse.\n+  if (after_gc && (allocated_young_length >= desired_young_length)) {\n@@ -306,1 +309,1 @@\n-  log_trace(gc, ergo, heap)(\"Young desired length %u (minimum one eden: %s) \"\n+  log_trace(gc, ergo, heap)(\"Young desired length %u (after gc: %s) \"\n@@ -313,1 +316,1 @@\n-                            desired_young_length, BOOL_TO_STR(need_one_eden_region),\n+                            desired_young_length, BOOL_TO_STR(after_gc),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":22,"deletions":19,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -213,2 +213,2 @@\n-  \/\/ the prediction model. Request one eden region when not revising young length\n-  \/\/ at mutator time.\n+  \/\/ the prediction model. If after_gc is set, make sure that there is one eden region\n+  \/\/ available (if there is enough space) to guarantee some progress.\n@@ -216,1 +216,1 @@\n-  void update_young_length_bounds(size_t pending_cards, size_t rs_length, bool need_one_eden_region);\n+  void update_young_length_bounds(size_t pending_cards, size_t rs_length, bool after_gc);\n@@ -244,1 +244,1 @@\n-  uint calculate_young_desired_length(size_t pending_cards, size_t rs_length, bool need_one_eden_region) const;\n+  uint calculate_young_desired_length(size_t pending_cards, size_t rs_length, bool after_gc) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}