{"files":[{"patch":"@@ -1417,11 +1417,0 @@\n-void PosixSignals::clear_signal_handlers() {\n-  \/\/ set signal handlers back to their defaults\n-  struct sigaction defaulthandler;\n-  sigemptyset(&defaulthandler.sa_mask);\n-\n-  defaulthandler.sa_handler = SIG_DFL;\n-  for (int i = 0; i < NSIG + 1; i++) {\n-    sigaction(i, &defaulthandler, NULL);\n-  }\n-}\n-\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -51,5 +51,0 @@\n-  \/\/ set signal handlers back to their system defaults (i.e. no handler)\n-  \/\/ to let the process die at the crash site (so that the OS can\n-  \/\/ catch and process it)\n-  static void clear_signal_handlers();\n-\n","filename":"src\/hotspot\/os\/posix\/signals_posix.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-void VMError::rearm_signal_handlers() {\n+void VMError::reset_signal_handlers() {\n@@ -154,4 +154,0 @@\n-void VMError::clear_signal_handlers() {\n-  PosixSignals::clear_signal_handlers();\n-}\n-\n","filename":"src\/hotspot\/os\/posix\/vmError_posix.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-void VMError::rearm_signal_handlers() {\n+void VMError::reset_signal_handlers() {\n@@ -51,3 +51,0 @@\n-void VMError::clear_signal_handlers() {\n-}\n-\n","filename":"src\/hotspot\/os\/windows\/vmError_windows.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1432,3 +1432,3 @@\n-    \/\/ Rearm signal handlers (Linux, macOS) or exception filter (Windows)\n-    \/\/ to make sure that recursive crashes are handled properly.\n-    rearm_signal_handlers();\n+    \/\/ reset signal handlers or exception filter; make sure recursive crashes\n+    \/\/ are handled properly.\n+    reset_signal_handlers();\n@@ -1436,0 +1436,1 @@\n+#if defined(_WINDOWS)\n@@ -1439,6 +1440,2 @@\n-    if (UseOSErrorReporting && log_done) {\n-      \/\/ We already handled the signal once, so reset signal handlers\n-      \/\/ to their defaults and let OS handle it after the process will die\n-      clear_signal_handlers();\n-      return;\n-    }\n+    if (UseOSErrorReporting && log_done) return;\n+#endif\n@@ -1634,0 +1631,1 @@\n+#if defined(_WINDOWS)\n@@ -1635,0 +1633,3 @@\n+#else\n+  if (true) {\n+#endif\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -91,5 +91,3 @@\n-  \/\/ reset signal handlers to the default exception filter\n-  \/\/ to handle recursive crashes\n-  static void rearm_signal_handlers();\n-\n-  static void clear_signal_handlers();\n+  \/\/ set signal handlers on Solaris\/Linux or the default exception filter\n+  \/\/ on Windows, to handle recursive crashes.\n+  static void reset_signal_handlers();\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}