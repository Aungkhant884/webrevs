{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,0 +199,6 @@\n+            case \"EMOJI\" -> EMOJI();\n+            case \"EMOJI_PRESENTATION\" -> EMOJI_PRESENTATION();\n+            case \"EMOJI_MODIFIER\" -> EMOJI_MODIFIER();\n+            case \"EMOJI_MODIFIER_BASE\" -> EMOJI_MODIFIER_BASE();\n+            case \"EMOJI_COMPONENT\" -> EMOJI_COMPONENT();\n+            case \"EXTENDED_PICTOGRAPHIC\" -> EXTENDED_PICTOGRAPHIC();\n@@ -424,0 +430,23 @@\n+    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n+    \/**\n+     * Emoji related binary properties\n+     *\/\n+    static final CharPredicate EMOJI() {\n+        return Character::isEmoji;\n+    }\n+    static final CharPredicate EMOJI_PRESENTATION() {\n+        return Character::isEmojiPresentation;\n+    }\n+    static final CharPredicate EMOJI_MODIFIER() {\n+        return Character::isEmojiModifier;\n+    }\n+    static final CharPredicate EMOJI_MODIFIER_BASE() {\n+        return Character::isEmojiModifierBase;\n+    }\n+    static final CharPredicate EMOJI_COMPONENT() {\n+        return Character::isEmojiComponent;\n+    }\n+    static final CharPredicate EXTENDED_PICTOGRAPHIC() {\n+        return Character::isExtendedPictographic;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/CharPredicates.java","additions":30,"deletions":1,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -641,0 +641,6 @@\n+ *   <li> Emoji\n+ *   <li> Emoji_Presentation\n+ *   <li> Emoji_Modifier\n+ *   <li> Emoji_Modifier_Base\n+ *   <li> Emoji_Component\n+ *   <li> Extended_Pictographic\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/Pattern.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * 8280403 8264160 8281315\n+ * 8280403 8264160 8281315 8305107\n@@ -3720,1 +3720,0 @@\n-        Matcher ASCII  = Pattern.compile(\"\\\\p{ASCII}\").matcher(\"\");\n@@ -3731,1 +3730,0 @@\n-        Matcher bound  = Pattern.compile(\"\\\\b\").matcher(\"\");\n@@ -3736,1 +3734,0 @@\n-        Matcher ASCIIU  = Pattern.compile(\"\\\\p{ASCII}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n@@ -3769,0 +3766,7 @@\n+        \/\/ Emoji properties\n+        Matcher emojiP   = Pattern.compile(\"\\\\p{IsEmoji}\").matcher(\"\");\n+        Matcher emojiPP  = Pattern.compile(\"\\\\p{IsEmoji_Presentation}\").matcher(\"\");\n+        Matcher emojiMP  = Pattern.compile(\"\\\\p{IsEmoji_Modifier}\").matcher(\"\");\n+        Matcher emojiMBP = Pattern.compile(\"\\\\p{IsEmoji_Modifier_Base}\").matcher(\"\");\n+        Matcher emojiCP  = Pattern.compile(\"\\\\p{IsEmoji_Component}\").matcher(\"\");\n+        Matcher extPP    = Pattern.compile(\"\\\\p{IsExtended_Pictographic}\").matcher(\"\");\n@@ -3842,0 +3846,7 @@\n+                \/\/ Emoji properties\n+                Character.isEmoji(cp) != emojiP.reset(str).matches() ||\n+                Character.isEmojiPresentation(cp) != emojiPP.reset(str).matches() ||\n+                Character.isEmojiModifier(cp) != emojiMP.reset(str).matches() ||\n+                Character.isEmojiModifierBase(cp)!= emojiMBP.reset(str).matches() ||\n+                Character.isEmojiComponent(cp) != emojiCP.reset(str).matches() ||\n+                Character.isExtendedPictographic(cp) != extPP.reset(str).matches() ||\n","filename":"test\/jdk\/java\/util\/regex\/RegExTest.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"}]}