{"files":[{"patch":"@@ -3719,15 +3719,13 @@\n-        Matcher lower  = Pattern.compile(\"\\\\p{Lower}\").matcher(\"\");\n-        Matcher upper  = Pattern.compile(\"\\\\p{Upper}\").matcher(\"\");\n-        Matcher ASCII  = Pattern.compile(\"\\\\p{ASCII}\").matcher(\"\");\n-        Matcher alpha  = Pattern.compile(\"\\\\p{Alpha}\").matcher(\"\");\n-        Matcher digit  = Pattern.compile(\"\\\\p{Digit}\").matcher(\"\");\n-        Matcher alnum  = Pattern.compile(\"\\\\p{Alnum}\").matcher(\"\");\n-        Matcher punct  = Pattern.compile(\"\\\\p{Punct}\").matcher(\"\");\n-        Matcher graph  = Pattern.compile(\"\\\\p{Graph}\").matcher(\"\");\n-        Matcher print  = Pattern.compile(\"\\\\p{Print}\").matcher(\"\");\n-        Matcher blank  = Pattern.compile(\"\\\\p{Blank}\").matcher(\"\");\n-        Matcher cntrl  = Pattern.compile(\"\\\\p{Cntrl}\").matcher(\"\");\n-        Matcher xdigit = Pattern.compile(\"\\\\p{XDigit}\").matcher(\"\");\n-        Matcher space  = Pattern.compile(\"\\\\p{Space}\").matcher(\"\");\n-        Matcher bound  = Pattern.compile(\"\\\\b\").matcher(\"\");\n-        Matcher word   = Pattern.compile(\"\\\\w++\").matcher(\"\");\n+        Matcher lower    = Pattern.compile(\"\\\\p{Lower}\").matcher(\"\");\n+        Matcher upper    = Pattern.compile(\"\\\\p{Upper}\").matcher(\"\");\n+        Matcher alpha    = Pattern.compile(\"\\\\p{Alpha}\").matcher(\"\");\n+        Matcher digit    = Pattern.compile(\"\\\\p{Digit}\").matcher(\"\");\n+        Matcher alnum    = Pattern.compile(\"\\\\p{Alnum}\").matcher(\"\");\n+        Matcher punct    = Pattern.compile(\"\\\\p{Punct}\").matcher(\"\");\n+        Matcher graph    = Pattern.compile(\"\\\\p{Graph}\").matcher(\"\");\n+        Matcher print    = Pattern.compile(\"\\\\p{Print}\").matcher(\"\");\n+        Matcher blank    = Pattern.compile(\"\\\\p{Blank}\").matcher(\"\");\n+        Matcher cntrl    = Pattern.compile(\"\\\\p{Cntrl}\").matcher(\"\");\n+        Matcher xdigit   = Pattern.compile(\"\\\\p{XDigit}\").matcher(\"\");\n+        Matcher space    = Pattern.compile(\"\\\\p{Space}\").matcher(\"\");\n+        Matcher word     = Pattern.compile(\"\\\\w++\").matcher(\"\");\n@@ -3735,15 +3733,14 @@\n-        Matcher lowerU  = Pattern.compile(\"\\\\p{Lower}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher upperU  = Pattern.compile(\"\\\\p{Upper}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher ASCIIU  = Pattern.compile(\"\\\\p{ASCII}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher alphaU  = Pattern.compile(\"\\\\p{Alpha}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher digitU  = Pattern.compile(\"\\\\p{Digit}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher alnumU  = Pattern.compile(\"\\\\p{Alnum}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher punctU  = Pattern.compile(\"\\\\p{Punct}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher graphU  = Pattern.compile(\"\\\\p{Graph}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher printU  = Pattern.compile(\"\\\\p{Print}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher blankU  = Pattern.compile(\"\\\\p{Blank}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher cntrlU  = Pattern.compile(\"\\\\p{Cntrl}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher xdigitU = Pattern.compile(\"\\\\p{XDigit}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher spaceU  = Pattern.compile(\"\\\\p{Space}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher boundU  = Pattern.compile(\"\\\\b\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher wordU   = Pattern.compile(\"\\\\w\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher lowerU   = Pattern.compile(\"\\\\p{Lower}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher upperU   = Pattern.compile(\"\\\\p{Upper}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher alphaU   = Pattern.compile(\"\\\\p{Alpha}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher digitU   = Pattern.compile(\"\\\\p{Digit}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher alnumU   = Pattern.compile(\"\\\\p{Alnum}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher punctU   = Pattern.compile(\"\\\\p{Punct}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher graphU   = Pattern.compile(\"\\\\p{Graph}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher printU   = Pattern.compile(\"\\\\p{Print}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher blankU   = Pattern.compile(\"\\\\p{Blank}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher cntrlU   = Pattern.compile(\"\\\\p{Cntrl}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher xdigitU  = Pattern.compile(\"\\\\p{XDigit}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher spaceU   = Pattern.compile(\"\\\\p{Space}\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher boundU   = Pattern.compile(\"\\\\b\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher wordU    = Pattern.compile(\"\\\\w\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n@@ -3755,3 +3752,3 @@\n-        Matcher bwb    = Pattern.compile(\"\\\\b\\\\w\\\\b\").matcher(\"\");\n-        Matcher bwbU   = Pattern.compile(\"\\\\b\\\\w++\\\\b\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n-        Matcher bwbEU  = Pattern.compile(\"(?U)\\\\b\\\\w++\\\\b\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher bwb      = Pattern.compile(\"\\\\b\\\\w\\\\b\").matcher(\"\");\n+        Matcher bwbU     = Pattern.compile(\"\\\\b\\\\w++\\\\b\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n+        Matcher bwbEU    = Pattern.compile(\"(?U)\\\\b\\\\w++\\\\b\", Pattern.UNICODE_CHARACTER_CLASS).matcher(\"\");\n@@ -3759,8 +3756,8 @@\n-        Matcher lowerP  = Pattern.compile(\"\\\\p{IsLowerCase}\").matcher(\"\");\n-        Matcher upperP  = Pattern.compile(\"\\\\p{IsUpperCase}\").matcher(\"\");\n-        Matcher titleP  = Pattern.compile(\"\\\\p{IsTitleCase}\").matcher(\"\");\n-        Matcher letterP = Pattern.compile(\"\\\\p{IsLetter}\").matcher(\"\");\n-        Matcher alphaP  = Pattern.compile(\"\\\\p{IsAlphabetic}\").matcher(\"\");\n-        Matcher ideogP  = Pattern.compile(\"\\\\p{IsIdeographic}\").matcher(\"\");\n-        Matcher cntrlP  = Pattern.compile(\"\\\\p{IsControl}\").matcher(\"\");\n-        Matcher spaceP  = Pattern.compile(\"\\\\p{IsWhiteSpace}\").matcher(\"\");\n+        Matcher lowerP   = Pattern.compile(\"\\\\p{IsLowerCase}\").matcher(\"\");\n+        Matcher upperP   = Pattern.compile(\"\\\\p{IsUpperCase}\").matcher(\"\");\n+        Matcher titleP   = Pattern.compile(\"\\\\p{IsTitleCase}\").matcher(\"\");\n+        Matcher letterP  = Pattern.compile(\"\\\\p{IsLetter}\").matcher(\"\");\n+        Matcher alphaP   = Pattern.compile(\"\\\\p{IsAlphabetic}\").matcher(\"\");\n+        Matcher ideogP   = Pattern.compile(\"\\\\p{IsIdeographic}\").matcher(\"\");\n+        Matcher cntrlP   = Pattern.compile(\"\\\\p{IsControl}\").matcher(\"\");\n+        Matcher spaceP   = Pattern.compile(\"\\\\p{IsWhiteSpace}\").matcher(\"\");\n@@ -3768,1 +3765,1 @@\n-        Matcher nonCCPP = Pattern.compile(\"\\\\p{IsNoncharacterCodePoint}\").matcher(\"\");\n+        Matcher nonCCPP  = Pattern.compile(\"\\\\p{IsNoncharacterCodePoint}\").matcher(\"\");\n@@ -3771,3 +3768,3 @@\n-        Matcher emojiP  = Pattern.compile(\"\\\\p{IsEmoji}\").matcher(\"\");\n-        Matcher emojiPP = Pattern.compile(\"\\\\p{IsEmoji_Presentation}\").matcher(\"\");\n-        Matcher emojiMP = Pattern.compile(\"\\\\p{IsEmoji_Modifier}\").matcher(\"\");\n+        Matcher emojiP   = Pattern.compile(\"\\\\p{IsEmoji}\").matcher(\"\");\n+        Matcher emojiPP  = Pattern.compile(\"\\\\p{IsEmoji_Presentation}\").matcher(\"\");\n+        Matcher emojiMP  = Pattern.compile(\"\\\\p{IsEmoji_Modifier}\").matcher(\"\");\n@@ -3775,2 +3772,2 @@\n-        Matcher emojiCP = Pattern.compile(\"\\\\p{IsEmoji_Component}\").matcher(\"\");\n-        Matcher extPP   = Pattern.compile(\"\\\\p{IsExtended_Pictographic}\").matcher(\"\");\n+        Matcher emojiCP  = Pattern.compile(\"\\\\p{IsEmoji_Component}\").matcher(\"\");\n+        Matcher extPP    = Pattern.compile(\"\\\\p{IsExtended_Pictographic}\").matcher(\"\");\n@@ -3778,4 +3775,4 @@\n-        Matcher lowerJ  = Pattern.compile(\"\\\\p{javaLowerCase}\").matcher(\"\");\n-        Matcher upperJ  = Pattern.compile(\"\\\\p{javaUpperCase}\").matcher(\"\");\n-        Matcher alphaJ  = Pattern.compile(\"\\\\p{javaAlphabetic}\").matcher(\"\");\n-        Matcher ideogJ  = Pattern.compile(\"\\\\p{javaIdeographic}\").matcher(\"\");\n+        Matcher lowerJ   = Pattern.compile(\"\\\\p{javaLowerCase}\").matcher(\"\");\n+        Matcher upperJ   = Pattern.compile(\"\\\\p{javaUpperCase}\").matcher(\"\");\n+        Matcher alphaJ   = Pattern.compile(\"\\\\p{javaAlphabetic}\").matcher(\"\");\n+        Matcher ideogJ   = Pattern.compile(\"\\\\p{javaIdeographic}\").matcher(\"\");\n@@ -3783,1 +3780,1 @@\n-        Matcher gcC  = Pattern.compile(\"\\\\p{C}\").matcher(\"\");\n+        Matcher gcC      = Pattern.compile(\"\\\\p{C}\").matcher(\"\");\n@@ -3789,5 +3786,5 @@\n-                POSIX_ASCII.isLower(cp)   != lower.reset(str).matches()  ||\n-                isLowerCase(cp) != lowerU.reset(str).matches() ||\n-                isLowerCase(cp) != lowerP.reset(str).matches() ||\n-                isLowerCase(cp) != lowerEU.reset(str).matches()||\n-                isLowerCase(cp) != lowerJ.reset(str).matches()||\n+                POSIX_ASCII.isLower(cp)      != lower.reset(str).matches()  ||\n+                isLowerCase(cp)              != lowerU.reset(str).matches() ||\n+                isLowerCase(cp)              != lowerP.reset(str).matches() ||\n+                isLowerCase(cp)              != lowerEU.reset(str).matches()||\n+                isLowerCase(cp)              != lowerJ.reset(str).matches()||\n@@ -3795,4 +3792,4 @@\n-                POSIX_ASCII.isUpper(cp)   != upper.reset(str).matches()  ||\n-                POSIX_Unicode.isUpper(cp) != upperU.reset(str).matches() ||\n-                isUpperCase(cp) != upperP.reset(str).matches() ||\n-                isUpperCase(cp) != upperJ.reset(str).matches() ||\n+                POSIX_ASCII.isUpper(cp)      != upper.reset(str).matches()  ||\n+                POSIX_Unicode.isUpper(cp)    != upperU.reset(str).matches() ||\n+                isUpperCase(cp)              != upperP.reset(str).matches() ||\n+                isUpperCase(cp)              != upperJ.reset(str).matches() ||\n@@ -3800,4 +3797,4 @@\n-                POSIX_ASCII.isAlpha(cp)   != alpha.reset(str).matches()  ||\n-                POSIX_Unicode.isAlpha(cp) != alphaU.reset(str).matches() ||\n-                isAlphabetic(cp)!= alphaP.reset(str).matches() ||\n-                isAlphabetic(cp)!= alphaJ.reset(str).matches() ||\n+                POSIX_ASCII.isAlpha(cp)      != alpha.reset(str).matches()  ||\n+                POSIX_Unicode.isAlpha(cp)    != alphaU.reset(str).matches() ||\n+                isAlphabetic(cp)             != alphaP.reset(str).matches() ||\n+                isAlphabetic(cp)             != alphaJ.reset(str).matches() ||\n@@ -3805,2 +3802,2 @@\n-                POSIX_ASCII.isDigit(cp)   != digit.reset(str).matches()  ||\n-                isDigit(cp)     != digitU.reset(str).matches() ||\n+                POSIX_ASCII.isDigit(cp)      != digit.reset(str).matches()  ||\n+                isDigit(cp)                  != digitU.reset(str).matches() ||\n@@ -3808,2 +3805,2 @@\n-                POSIX_ASCII.isAlnum(cp)   != alnum.reset(str).matches()  ||\n-                POSIX_Unicode.isAlnum(cp) != alnumU.reset(str).matches() ||\n+                POSIX_ASCII.isAlnum(cp)      != alnum.reset(str).matches()  ||\n+                POSIX_Unicode.isAlnum(cp)    != alnumU.reset(str).matches() ||\n@@ -3811,2 +3808,2 @@\n-                POSIX_ASCII.isPunct(cp)   != punct.reset(str).matches()  ||\n-                POSIX_Unicode.isPunct(cp) != punctU.reset(str).matches() ||\n+                POSIX_ASCII.isPunct(cp)      != punct.reset(str).matches()  ||\n+                POSIX_Unicode.isPunct(cp)    != punctU.reset(str).matches() ||\n@@ -3814,3 +3811,3 @@\n-                POSIX_ASCII.isGraph(cp)   != graph.reset(str).matches()  ||\n-                POSIX_Unicode.isGraph(cp) != graphU.reset(str).matches() ||\n-                POSIX_Unicode.isGraph(cp) != graphEU.reset(str).matches()||\n+                POSIX_ASCII.isGraph(cp)      != graph.reset(str).matches()  ||\n+                POSIX_Unicode.isGraph(cp)    != graphU.reset(str).matches() ||\n+                POSIX_Unicode.isGraph(cp)    != graphEU.reset(str).matches()||\n@@ -3819,2 +3816,2 @@\n-                                          != blank.reset(str).matches()  ||\n-                POSIX_Unicode.isBlank(cp) != blankU.reset(str).matches() ||\n+                                             != blank.reset(str).matches()  ||\n+                POSIX_Unicode.isBlank(cp)    != blankU.reset(str).matches() ||\n@@ -3822,2 +3819,2 @@\n-                POSIX_ASCII.isPrint(cp)   != print.reset(str).matches()  ||\n-                POSIX_Unicode.isPrint(cp) != printU.reset(str).matches() ||\n+                POSIX_ASCII.isPrint(cp)      != print.reset(str).matches()  ||\n+                POSIX_Unicode.isPrint(cp)    != printU.reset(str).matches() ||\n@@ -3825,3 +3822,3 @@\n-                POSIX_ASCII.isCntrl(cp)   != cntrl.reset(str).matches()  ||\n-                POSIX_Unicode.isCntrl(cp) != cntrlU.reset(str).matches() ||\n-                (CONTROL == type) != cntrlP.reset(str).matches() ||\n+                POSIX_ASCII.isCntrl(cp)      != cntrl.reset(str).matches()  ||\n+                POSIX_Unicode.isCntrl(cp)    != cntrlU.reset(str).matches() ||\n+                (CONTROL == type)            != cntrlP.reset(str).matches() ||\n@@ -3829,1 +3826,1 @@\n-                POSIX_ASCII.isHexDigit(cp) != xdigit.reset(str).matches()  ||\n+                POSIX_ASCII.isHexDigit(cp)   != xdigit.reset(str).matches()  ||\n@@ -3832,3 +3829,3 @@\n-                POSIX_ASCII.isSpace(cp)   != space.reset(str).matches()  ||\n-                POSIX_Unicode.isSpace(cp) != spaceU.reset(str).matches() ||\n-                POSIX_Unicode.isSpace(cp) != spaceP.reset(str).matches() ||\n+                POSIX_ASCII.isSpace(cp)      != space.reset(str).matches()  ||\n+                POSIX_Unicode.isSpace(cp)    != spaceU.reset(str).matches() ||\n+                POSIX_Unicode.isSpace(cp)    != spaceP.reset(str).matches() ||\n@@ -3836,3 +3833,3 @@\n-                POSIX_ASCII.isWord(cp)    != word.reset(str).matches()  ||\n-                POSIX_Unicode.isWord(cp)  != wordU.reset(str).matches() ||\n-                POSIX_Unicode.isWord(cp)  != wordEU.reset(str).matches()||\n+                POSIX_ASCII.isWord(cp)       != word.reset(str).matches()  ||\n+                POSIX_Unicode.isWord(cp)     != wordU.reset(str).matches() ||\n+                POSIX_Unicode.isWord(cp)     != wordEU.reset(str).matches()||\n@@ -3840,2 +3837,2 @@\n-                POSIX_ASCII.isWord(cp)    != bwb.reset(str).matches() ||\n-                POSIX_Unicode.isWord(cp)  != bwbU.reset(str).matches() ||\n+                POSIX_ASCII.isWord(cp)       != bwb.reset(str).matches() ||\n+                POSIX_Unicode.isWord(cp)     != bwbU.reset(str).matches() ||\n@@ -3843,7 +3840,9 @@\n-                isTitleCase(cp) != titleP.reset(str).matches() ||\n-                isLetter(cp)    != letterP.reset(str).matches()||\n-                isIdeographic(cp) != ideogP.reset(str).matches() ||\n-                isIdeographic(cp) != ideogJ.reset(str).matches() ||\n-                (UNASSIGNED == type) == definedP.reset(str).matches() ||\n-                POSIX_Unicode.isNoncharacterCodePoint(cp) != nonCCPP.reset(str).matches() ||\n-                POSIX_Unicode.isJoinControl(cp) != joinCrtl.reset(str).matches() ||\n+                isTitleCase(cp)              != titleP.reset(str).matches() ||\n+                isLetter(cp)                 != letterP.reset(str).matches()||\n+                isIdeographic(cp)            != ideogP.reset(str).matches() ||\n+                isIdeographic(cp)            != ideogJ.reset(str).matches() ||\n+                (UNASSIGNED == type)         == definedP.reset(str).matches() ||\n+                POSIX_Unicode.isNoncharacterCodePoint(cp)\n+                                             != nonCCPP.reset(str).matches() ||\n+                POSIX_Unicode.isJoinControl(cp)\n+                                             != joinCrtl.reset(str).matches() ||\n@@ -3851,6 +3850,6 @@\n-                isEmoji(cp)     != emojiP.reset(str).matches() ||\n-                isEmojiPresentation(cp) != emojiPP.reset(str).matches() ||\n-                isEmojiModifier(cp) != emojiMP.reset(str).matches() ||\n-                isEmojiModifierBase(cp)!= emojiMBP.reset(str).matches() ||\n-                isEmojiComponent(cp) != emojiCP.reset(str).matches() ||\n-                isExtendedPictographic(cp) != extPP.reset(str).matches() ||\n+                isEmoji(cp)                  != emojiP.reset(str).matches() ||\n+                isEmojiPresentation(cp)      != emojiPP.reset(str).matches() ||\n+                isEmojiModifier(cp)          != emojiMP.reset(str).matches() ||\n+                isEmojiModifierBase(cp)      != emojiMBP.reset(str).matches() ||\n+                isEmojiComponent(cp)         != emojiCP.reset(str).matches() ||\n+                isExtendedPictographic(cp)   != extPP.reset(str).matches() ||\n@@ -3861,1 +3860,1 @@\n-                != gcC.reset(str).matches()) {\n+                                             != gcC.reset(str).matches()) {\n","filename":"test\/jdk\/java\/util\/regex\/RegExTest.java","additions":103,"deletions":104,"binary":false,"changes":207,"status":"modified"}]}