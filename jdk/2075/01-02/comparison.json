{"files":[{"patch":"@@ -393,0 +393,3 @@\n+  if (dead->Opcode() == Op_Opaque4) {\n+    remove_skeleton_predicate_opaq(dead);\n+  }\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -668,1 +668,0 @@\n-  void          remove_skeleton_predicate_opaque4_node(int idx) { _skeleton_predicate_opaqs.remove_at(idx); }\n@@ -700,1 +699,5 @@\n-\n+  void remove_skeleton_predicate_opaq(Node* n) {\n+    if (skeleton_predicate_count() > 0) {\n+      _skeleton_predicate_opaqs.remove_if_existing(n);\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -278,3 +278,2 @@\n-\/\/ Put all skeleton predicate projections on a list, starting at 'predicate' and going up in the tree. If 'get_opaque'\n-\/\/ is set, then the Opaque4 nodes of the skeleton predicates are put on the list instead of the projections.\n-void PhaseIdealLoop::get_skeleton_predicates(Node* predicate, Unique_Node_List& list, bool get_opaque) {\n+\/\/ Put all skeleton predicate projections on a list, starting at 'predicate' and going up in the tree.\n+void PhaseIdealLoop::get_skeleton_predicates(Node* predicate, Unique_Node_List& list) {\n@@ -294,7 +293,1 @@\n-      if (get_opaque) {\n-        \/\/ Collect the predicate Opaque4 node.\n-        list.push(iff->in(1));\n-      } else {\n-        \/\/ Collect the predicate projection.\n-        list.push(predicate);\n-      }\n+      list.push(predicate);\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -3555,1 +3555,1 @@\n-        get_skeleton_predicates(entry, useful_predicates, true);\n+        get_skeleton_predicate_opaque_nodes(entry, useful_predicates);\n@@ -3564,1 +3564,1 @@\n-        get_skeleton_predicates(entry, useful_predicates, true);\n+        get_skeleton_predicate_opaque_nodes(entry, useful_predicates);\n@@ -3574,0 +3574,12 @@\n+\/\/ Get all skeleton predicate Opaque4 nodes and put them on the 'predicates' list.\n+void PhaseIdealLoop::get_skeleton_predicate_opaque_nodes(Node* entry, Unique_Node_List& predicates) {\n+  Unique_Node_List list;\n+  get_skeleton_predicates(entry, list); \/\/ List of projections.\n+  \/\/ Fetch the Opaque4 nodes and put them on the predicates list.\n+  for (uint i = 0; i < list.size(); i++) {\n+    Node* opaq = list.at(i)->in(0)->in(1);\n+    assert(opaq->Opcode() == Op_Opaque4, \"must be Opaque4\");\n+    predicates.push(opaq);\n+  }\n+}\n+\n@@ -3601,1 +3613,0 @@\n-      C->remove_skeleton_predicate_opaque4_node(idx);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -918,1 +918,1 @@\n-  static void get_skeleton_predicates(Node* predicate, Unique_Node_List& list, bool get_opaque = false);\n+  static void get_skeleton_predicates(Node* predicate, Unique_Node_List& list);\n@@ -1317,0 +1317,1 @@\n+  static void get_skeleton_predicate_opaque_nodes(Node* entry, Unique_Node_List& predicates);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -647,0 +647,3 @@\n+  if (Opcode() == Op_Opaque4) {\n+    compile->remove_skeleton_predicate_opaq(this);\n+  }\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}