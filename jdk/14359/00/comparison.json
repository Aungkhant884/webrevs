{"files":[{"patch":"@@ -733,1 +733,1 @@\n-JvmtiEnvBase::get_thread_state_base(oop thread_oop, JavaThread* jt) {\n+JvmtiEnvBase::get_thread_state(oop thread_oop, JavaThread* jt) {\n@@ -759,13 +759,0 @@\n-jint\n-JvmtiEnvBase::get_thread_state(oop thread_oop, JavaThread* jt) {\n-  jint state;\n-\n-  if (is_thread_carrying_vthread(jt, thread_oop)) {\n-    state = JVMTI_THREAD_STATE_ALIVE | JVMTI_THREAD_STATE_WAITING |\n-            JVMTI_THREAD_STATE_WAITING_INDEFINITELY;\n-  } else {\n-    state = get_thread_state_base(thread_oop, jt);\n-  }\n-  return state;\n-}\n-\n@@ -786,1 +773,1 @@\n-    state = get_thread_state_base(ct_oop, java_thread) & ~filtered_bits;\n+    state = get_thread_state(ct_oop, java_thread) & ~filtered_bits;\n@@ -1724,1 +1711,1 @@\n-  bool is_thread_carrying = is_thread_carrying_vthread(java_thread, thread_h());\n+  bool is_passive_cthread = is_passive_carrier_thread(java_thread, thread_h());\n@@ -1730,1 +1717,1 @@\n-        (!is_thread_carrying && java_thread->is_suspended())) {\n+        (!is_passive_cthread && java_thread->is_suspended())) {\n@@ -1744,1 +1731,1 @@\n-  if (!is_thread_carrying) {\n+  if (!is_passive_cthread) {\n@@ -1794,1 +1781,1 @@\n-  bool is_thread_carrying = is_thread_carrying_vthread(java_thread, thread_h());\n+  bool is_passive_cthread = is_passive_carrier_thread(java_thread, thread_h());\n@@ -1799,1 +1786,1 @@\n-        (is_thread_carrying || !java_thread->is_suspended())) {\n+        (is_passive_cthread || !java_thread->is_suspended())) {\n@@ -1806,1 +1793,1 @@\n-  if (!is_thread_carrying) {\n+  if (!is_passive_cthread) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":8,"deletions":21,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-  static bool is_thread_carrying_vthread(JavaThread* java_thread, oop thread_oop) {\n+  static bool is_passive_carrier_thread(JavaThread* java_thread, oop thread_oop) {\n@@ -387,2 +387,1 @@\n-  \/\/ get platform thread state\n-  static jint get_thread_state_base(oop thread_oop, JavaThread* jt);\n+  \/\/ get ordinary thread thread state\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -45,2 +45,0 @@\n-    private static native void testGetThreadState(Thread thread);\n-    private static native void testGetThreadListStackTraces(Thread thread);\n@@ -49,2 +47,0 @@\n-        testGetThreadState(Thread.currentThread());\n-        testGetThreadListStackTraces(Thread.currentThread());\n@@ -66,3 +62,1 @@\n-                Thread vt = factory.newThread(FOO);\n-                vt.setName(\"VT-\" + i);\n-                virtualThreads.add(vt);\n+                virtualThreads.add(factory.newThread(FOO));\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ThreadStateTest\/ThreadStateTest.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,4 +32,0 @@\n-static const jint EXP_VT_STATE = JVMTI_THREAD_STATE_ALIVE | JVMTI_THREAD_STATE_RUNNABLE;\n-static const jint EXP_CT_STATE = JVMTI_THREAD_STATE_ALIVE | JVMTI_THREAD_STATE_WAITING |\n-                                 JVMTI_THREAD_STATE_WAITING_INDEFINITELY;\n-static const jint MAX_FRAME_COUNT = 32;\n@@ -45,1 +41,1 @@\n-MonitorContended(jvmtiEnv* jvmti, JNIEnv* jni, jthread thread,\n+MonitorContended(jvmtiEnv* jvmti, JNIEnv* jni_env, jthread thread,\n@@ -49,13 +45,0 @@\n-static void JNICALL\n-check_thread_state(jvmtiEnv* jvmti, JNIEnv* jni, jthread thread, jint state, jint exp_state, const char* msg) {\n-  if (state != exp_state) {\n-    const char* tname = get_thread_name(jvmti, jni, thread);\n-\n-    LOG(\"FAILED: %p: %s: thread state: %x expected state: %x\\n\",\n-        (void*)thread, tname, state, exp_state);\n-\n-    deallocate(jvmti, jni, (void*)tname);\n-    jni->FatalError(msg);\n-  }\n-}\n-\n@@ -65,1 +48,1 @@\n-  check_jvmti_status(jni, err, \"setSingleSteppingMode: error in JVMTI SetEventNotificationMode for JVMTI_EVENT_SINGLE_STEP\");\n+  check_jvmti_status(jni, err, \"event handler: error in JVMTI SetEventNotificationMode for event JVMTI_EVENT_SINGLE_STEP\");\n@@ -71,28 +54,1 @@\n-  check_jvmti_status(jni, err, \"setMonitorContendedMode: error in JVMTI SetEventNotificationMode for JVMTI_EVENT_MONITOR_CONTENDED_ENTER\");\n-}\n-\n-JNIEXPORT void JNICALL\n-Java_ThreadStateTest_testGetThreadState(JNIEnv* jni, jclass klass, jthread vthread) {\n-  jthread cthread = get_carrier_thread(jvmti, jni, vthread);\n-  jint ct_state = get_thread_state(jvmti, jni, cthread);\n-  jint vt_state = get_thread_state(jvmti, jni, vthread);\n-\n-  check_thread_state(jvmti, jni, cthread, ct_state, EXP_CT_STATE,\n-                     \"Failed: unexpected carrier thread state from JVMTI GetThreadState\");\n-  check_thread_state(jvmti, jni, vthread, vt_state, EXP_VT_STATE,\n-                     \"Failed: unexpected virtual thread state from JVMTI GetThreadState\");\n-}\n-\n-JNIEXPORT void JNICALL\n-Java_ThreadStateTest_testGetThreadListStackTraces(JNIEnv* jni, jclass klass, jthread vthread) {\n-  jthread cthread = get_carrier_thread(jvmti, jni, vthread);\n-  jthread threads[2] = { cthread, vthread };\n-  jvmtiStackInfo* stackInfo = NULL;\n-\n-  jvmtiError err = jvmti->GetThreadListStackTraces(2, threads, MAX_FRAME_COUNT, &stackInfo);\n-  check_jvmti_status(jni, err, \"testGetThreadState: error in JVMTI GetThreadListStackTraces\");\n-\n-  check_thread_state(jvmti, jni, cthread, stackInfo[0].state, EXP_CT_STATE,\n-                     \"Failed: unexpected carrier thread state from JVMTI GetThreadListStackTraces\");\n-  check_thread_state(jvmti, jni, vthread, stackInfo[1].state, EXP_VT_STATE,\n-                     \"Failed: unexpected virtual thread state from JVMTI GetThreadListStackTraces\");\n+  check_jvmti_status(jni, err, \"event handler: error in JVMTI SetEventNotificationMode for event JVMTI_EVENT_MONITOR_CONTENDED_ENTER\");\n@@ -106,1 +62,1 @@\n-  printf(\"Agent_OnLoad: started\\n\");\n+  printf(\"Agent_OnLoad started\\n\");\n@@ -108,1 +64,1 @@\n-    LOG(\"Agent_OnLoad: error in GetEnv\");\n+    LOG(\"error in GetEnv\");\n@@ -119,1 +75,1 @@\n-    LOG(\"Agent_OnLoad: error in JVMTI AddCapabilities: %d\\n\", err);\n+    LOG(\"error in JVMTI AddCapabilities: %d\\n\", err);\n@@ -129,1 +85,0 @@\n-  printf(\"Agent_OnLoad: finished\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ThreadStateTest\/libThreadStateTest.cpp","additions":6,"deletions":51,"binary":false,"changes":57,"status":"modified"}]}