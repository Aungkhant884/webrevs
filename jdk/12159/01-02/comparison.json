{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,4 +48,8 @@\n-     * The type may be a {@link DeclaredType} or {@link TypeVariable},\n-     * or a pseudo-type for a {@linkplain TypeKind#PACKAGE package} or\n-     * {@linkplain TypeKind#MODULE module}.\n-     * Returns {@code null} if the type is not one with a\n+     * The type may be one of:\n+     * <ul>\n+     * <li>a {@link DeclaredType}\n+     * <li>a {@link TypeVariable}\n+     * <li>a pseudo-type for a {@linkplain TypeKind#PACKAGE package} or\n+     * {@linkplain TypeKind#MODULE module}\n+     * <\/ul>\n+     * The method returns {@code null} if the type is not one with a\n@@ -53,2 +57,1 @@\n-     *\n-     * <p>Types <em>without<\/em> corresponding elements include:\n+     * Types <em>without<\/em> corresponding elements include:\n@@ -58,1 +61,1 @@\n-     * <li>{@linkplain TypeKind#NONE \"none\" pseudo-types}\n+     * <li>{@linkplain TypeKind#NONE \"none\"} pseudo-types\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Types.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -77,2 +77,0 @@\n-\n-\n@@ -87,0 +85,1 @@\n+        expectRoundTrip(eltUtils.getTypeElement(\"java.lang.String\"));\n@@ -98,1 +97,0 @@\n-\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestAsElement.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}