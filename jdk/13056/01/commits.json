[{"commit":{"message":"copy node notes with igvn registering"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopopts.cpp"}],"sha":"5a51ac37f001a248fe9a958b9fc0af7cc18a4d21"},{"commit":{"message":"Merge branch 'master' into JDK-8302652"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopopts.cpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"cc9e7e8e773e773af87615fdae037a8f8ea82635"},{"commit":{"message":"small bug fix"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopopts.cpp"}],"sha":"a9dbffe667bc04779b11afbfb1c54281c0d8f869"},{"commit":{"message":"generalized the algorithm to handle a chain of UnorderedReductions"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopopts.cpp"}],"sha":"02546bd2a50f5fb682112776c59d6ea9d2d5fd4e"},{"commit":{"message":"Moved move_unordered_reduction_out_of_loop from SuperWord to PhaseIdealLoop"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopopts.cpp"},{"filename":"src\/hotspot\/share\/opto\/superword.cpp"}],"sha":"3130bf331d3c1e24a28f6677466054b7b1a30fcd"},{"commit":{"message":"neutral -> identity element"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"9b01aea1717ec3bed4168741fd42a0e6d5aa976c"},{"commit":{"message":"Moved code from Ideal to SuperWord"},"files":[{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"ed9e788e4c4a91f05f0b4487bbed4fdaae69f1fc"},{"commit":{"message":"Vladimir's suggestions for ReductionPerf.java"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ReductionPerf.java"}],"sha":"3a9ba971b8de78b05031b1328b4021a3c4abf210"},{"commit":{"message":"pushed updated ReductionPerf.java"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ReductionPerf.java"}],"sha":"9391f99d8dcd4a018b6a9b1b94e1a07387bc1073"},{"commit":{"message":"added IR rules to validate reduced use of Reduce node"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ProdRed_Int.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/RedTest_int.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/RedTest_long.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Int.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Long.java"}],"sha":"e108ae5bf944c88148757c71c3828bf92d9f9b4a"},{"commit":{"message":"fix for and, or, xor, min, max"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"83988de1a4565c75ea9d34d61325b84de006b13d"},{"commit":{"message":"fix typo"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"}],"sha":"7b551b6f0618262206deed0b600b93f04c594f18"},{"commit":{"message":"8302652: [SuperWord] Reduction should happen after loop, when possible"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ReductionPerf.java"}],"sha":"7f9641e382b9c10fd21eba78182cb39690732146"}]