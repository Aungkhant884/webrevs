{"files":[{"patch":"@@ -514,1 +514,1 @@\n-  return MulINode::Value(phase);\n+  return MulNode::Value(phase);\n@@ -653,1 +653,1 @@\n-  return MulLNode::Value(phase);\n+  return MulNode::Value(phase);\n@@ -1717,1 +1717,5 @@\n-bool MulNode::AndIL_shift_and_mask(PhaseGVN* phase, Node* mask, Node* shift, BasicType bt) const {\n+\/\/ Helper method to transform:\n+\/\/ patterns similar to (v << 2) & 3 to 0\n+\/\/ and\n+\/\/ patterns similar to (v1 + (v2 << 2)) & 3 transformed to v1 & 3\n+bool MulNode::AndIL_shift_and_mask(PhaseGVN* phase, Node* mask, Node* shift, BasicType bt) {\n@@ -1753,0 +1757,2 @@\n+\/\/ Helper method to transform:\n+\/\/ patterns similar to (v1 + (v2 << 2)) & 3 to v1 & 3\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-  bool AndIL_shift_and_mask(PhaseGVN* phase, Node* mask, Node* shift, BasicType bt) const;\n+  static bool AndIL_shift_and_mask(PhaseGVN* phase, Node* mask, Node* shift, BasicType bt);\n","filename":"src\/hotspot\/share\/opto\/mulnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @bug JDK-8277850\n+ * @bug 8277850\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestShiftAndMask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}