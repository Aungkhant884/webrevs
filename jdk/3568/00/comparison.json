{"files":[{"patch":"@@ -42,0 +42,11 @@\n+template<bool is_humongous>\n+void G1FullGCPrepareTask::G1CalculatePointersClosure::free_region(HeapRegion* hr) {\n+  _regions_freed = true;\n+  if (is_humongous) {\n+    _g1h->free_humongous_region(hr, nullptr);\n+  } else {\n+    _g1h->free_region(hr, nullptr);\n+  }\n+  prepare_for_compaction(hr);\n+}\n+\n@@ -51,0 +62,1 @@\n+    assert(hr->containing_set() == nullptr, \"already cleared by PrepareRegionsClosure\");\n@@ -54,1 +66,1 @@\n-        free_humongous_region(hr);\n+        free_region<true>(hr);\n@@ -59,1 +71,1 @@\n-        free_open_archive_region(hr);\n+        free_region<false>(hr);\n@@ -128,29 +140,0 @@\n-void G1FullGCPrepareTask::G1CalculatePointersClosure::free_humongous_region(HeapRegion* hr) {\n-  assert(hr->is_humongous(), \"must be but region %u is %s\", hr->hrm_index(), hr->get_short_type_str());\n-\n-  FreeRegionList dummy_free_list(\"Humongous Dummy Free List for G1MarkSweep\");\n-\n-  hr->set_containing_set(NULL);\n-  _regions_freed = true;\n-\n-  _g1h->free_humongous_region(hr, &dummy_free_list);\n-  prepare_for_compaction(hr);\n-  dummy_free_list.remove_all();\n-}\n-\n-void G1FullGCPrepareTask::G1CalculatePointersClosure::free_open_archive_region(HeapRegion* hr) {\n-  assert(hr->is_pinned(), \"must be\");\n-  assert(!hr->is_humongous(), \"handled elsewhere\");\n-  assert(hr->is_open_archive(),\n-         \"Only Open archive regions may be freed here.\");\n-\n-  FreeRegionList dummy_free_list(\"Pinned Dummy Free List for G1MarkSweep\");\n-\n-  hr->set_containing_set(NULL);\n-  _regions_freed = true;\n-\n-  _g1h->free_region(hr, &dummy_free_list);\n-  prepare_for_compaction(hr);\n-  dummy_free_list.remove_all();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp","additions":14,"deletions":31,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -54,0 +54,3 @@\n+  private:\n+    template<bool is_humongous>\n+    void free_region(HeapRegion* hr);\n@@ -62,1 +65,1 @@\n-    virtual void prepare_for_compaction(HeapRegion* hr);\n+    void prepare_for_compaction(HeapRegion* hr);\n@@ -64,2 +67,0 @@\n-    void free_humongous_region(HeapRegion* hr);\n-    void free_open_archive_region(HeapRegion* hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}