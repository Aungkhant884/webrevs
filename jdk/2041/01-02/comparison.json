{"files":[{"patch":"@@ -24,0 +24,2 @@\n+import com.sun.org.apache.xerces.internal.impl.Constants;\n+\n@@ -130,0 +132,7 @@\n+    \/\/ Fully-qualified property name with the JDK Impl prefix\n+    public static final String FQ_IS_STANDALONE =\n+            Constants.ORACLE_JAXP_PROPERTY_PREFIX + S_IS_STANDALONE;\n+\n+    \/\/ The property with namespace as the internal DOMConfiguration format\n+    public static final String NS_IS_STANDALONE = S_JDK_PROPERTIES_NS + S_IS_STANDALONE;\n+\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/dom3\/DOMConstants.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-            Constants.ORACLE_JAXP_PROPERTY_PREFIX + DOMConstants.S_IS_STANDALONE,\n+            DOMConstants.FQ_IS_STANDALONE,\n@@ -360,1 +360,1 @@\n-        \/\/ JDK specific property jdk-is-standalone\n+        \/\/ JDK specific property isStandalone\n@@ -362,1 +362,1 @@\n-        if (p == null || p.equals(\"\")) {\n+        if (p == null || p.isEmpty()) {\n@@ -368,2 +368,2 @@\n-            fDOMConfigProperties.setProperty(DOMConstants.S_JDK_PROPERTIES_NS\n-                    + DOMConstants.S_IS_STANDALONE, DOMConstants.DOM3_EXPLICIT_TRUE);\n+            fDOMConfigProperties.setProperty(DOMConstants.NS_IS_STANDALONE,\n+                    DOMConstants.DOM3_EXPLICIT_TRUE);\n@@ -371,2 +371,2 @@\n-            fDOMConfigProperties.setProperty(DOMConstants.S_JDK_PROPERTIES_NS\n-                    + DOMConstants.S_IS_STANDALONE, DOMConstants.DOM3_DEFAULT_FALSE);\n+            fDOMConfigProperties.setProperty(DOMConstants.NS_IS_STANDALONE,\n+                    DOMConstants.DOM3_DEFAULT_FALSE);\n@@ -402,2 +402,1 @@\n-                    || name.equalsIgnoreCase(Constants.ORACLE_JAXP_PROPERTY_PREFIX\n-                            + DOMConstants.S_IS_STANDALONE)){\n+                    || name.equalsIgnoreCase(DOMConstants.FQ_IS_STANDALONE)){\n@@ -461,2 +460,1 @@\n-        } else if (name.equalsIgnoreCase(Constants.ORACLE_JAXP_PROPERTY_PREFIX\n-                + DOMConstants.S_IS_STANDALONE)) {\n+        } else if (name.equalsIgnoreCase(DOMConstants.FQ_IS_STANDALONE)) {\n@@ -634,2 +632,1 @@\n-            } else if (name.equalsIgnoreCase(Constants.ORACLE_JAXP_PROPERTY_PREFIX\n-                    + DOMConstants.S_IS_STANDALONE)) {\n+            } else if (name.equalsIgnoreCase(DOMConstants.FQ_IS_STANDALONE)) {\n@@ -637,7 +634,2 @@\n-                if (state) {\n-                    fDOMConfigProperties.setProperty(DOMConstants.S_JDK_PROPERTIES_NS\n-                            + DOMConstants.S_IS_STANDALONE, \"yes\");\n-                } else {\n-                    fDOMConfigProperties.setProperty(DOMConstants.S_JDK_PROPERTIES_NS\n-                            + DOMConstants.S_IS_STANDALONE, \"no\");\n-                }\n+                fDOMConfigProperties.setProperty(DOMConstants.NS_IS_STANDALONE, state ? \"yes\" : \"no\");\n+\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/dom3\/LSSerializerImpl.java","additions":12,"deletions":20,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n- *     {@systemProperty jdk.xml.}\n+ *     {@code jdk.xml.}\n@@ -63,2 +63,2 @@\n- * All letters of the first word shall be in lowercase, while the first letter of\n- * each subsequent word capitalized.\n+ * All letters of the first word are in lowercase, while the first letter of\n+ * each subsequent word is capitalized.\n@@ -83,1 +83,1 @@\n- * set the behavior for all invocations of the JDK or JRE. The format is\n+ * set the behavior for all invocations of the JDK. The format is\n@@ -88,0 +88,3 @@\n+ * <p>\n+ * For details about the JAXP configuration file {@code jaxp.properties}, refer to\n+ * {@link javax.xml.parsers.SAXParserFactory#newInstance() SAXParserFactory#newInstance}.\n@@ -91,7 +94,8 @@\n- * (hereafter referred to as FSP) is required for XML processors including DOM,\n- * SAX, Schema Validation, XSLT, and XPath. Any properties flagged as\n- * {@code \"security: yes\"} (hereafter referred to as security properties) in table\n- * <a href=\"#FeaturesAndProperties\">Features And Properties<\/a>\n- * are enforced when FSP is set to true. Such enforcement includes setting security\n- * features to true and limits to the defined values shown in the table.\n- * The property values will not be affected, however, when setting FSP to false.\n+ * (hereafter referred to as secure processing) is required for XML processors\n+ * including DOM, SAX, Schema Validation, XSLT, and XPath. Any properties flagged\n+ * as {@code \"security: yes\"} (hereafter referred to as security properties) in\n+ * table <a href=\"#FeaturesAndProperties\">Features And Properties<\/a>\n+ * are enforced when secure processing is set to true. Such enforcement includes\n+ * setting security features to true and limits to the defined values shown in\n+ * the table. The property values will not be affected, however, when setting\n+ * secure processing to false.\n@@ -99,2 +103,2 @@\n- * When the Java Security Manager is present, FSP is set to true and can not be\n- * turned off. The security properties are therefore enforced.\n+ * When the Java Security Manager is present, secure processing is set to true\n+ * and can not be turned off. The security properties are therefore enforced.\n@@ -103,2 +107,2 @@\n- * the JDK and JRE, and will override their default values, or those that may\n- * have been set by FSP.\n+ * the JDK, and will override their default values, or those that may have been\n+ * set by secure processing.\n@@ -106,3 +110,3 @@\n- * System properties, when set, affect the invocation of the JDK and JRE, and\n- * override the default settings or that set in jaxp.properties, or those that\n- * may have been set by FSP.\n+ * System properties, when set, affect the invocation of the JDK and override\n+ * the default settings or those that may have been set in jaxp.properties or\n+ * by secure processing.\n@@ -111,1 +115,2 @@\n- * take preference over system properties, the jaxp.properties file, as well as FSP.\n+ * take preference over system properties, the jaxp.properties file, as well as\n+ * secure processing.\n@@ -157,1 +162,1 @@\n- * <td>Schema Validator<\/td>\n+ * <td>XML Validation API<\/td>\n@@ -166,1 +171,1 @@\n- * <td>Schema Validator<\/td>\n+ * <td>XML Transform API<\/td>\n@@ -245,2 +250,2 @@\n- * to the <a href=\"#ScopeAndOrder\">Scope and Order<\/a> on how FSP may affect the\n- * value of a Security Property.\n+ * to the <a href=\"#ScopeAndOrder\">Scope and Order<\/a> on how secure processing\n+ * may affect the value of a Security Property.\n","filename":"src\/java.xml\/share\/classes\/module-info.java","additions":28,"deletions":23,"binary":false,"changes":51,"status":"modified"}]}