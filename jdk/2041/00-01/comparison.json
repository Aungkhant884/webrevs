{"files":[{"patch":"@@ -497,5 +497,1 @@\n-                }\n-\n-                break;\n-            case 'j':\n-                if ((DOMConstants.S_JDK_PROPERTIES_NS + DOMConstants.S_IS_STANDALONE)\n+                } else if ((DOMConstants.S_JDK_PROPERTIES_NS + DOMConstants.S_IS_STANDALONE)\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/ToStream.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-    public static final String S_IS_STANDALONE = \"jdk-is-standalone\";\n+    public static final String S_IS_STANDALONE = \"isStandalone\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/dom3\/DOMConstants.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+import com.sun.org.apache.xerces.internal.impl.Constants;\n@@ -189,1 +190,1 @@\n-            DOMConstants.S_IS_STANDALONE,\n+            Constants.ORACLE_JAXP_PROPERTY_PREFIX + DOMConstants.S_IS_STANDALONE,\n@@ -360,1 +361,4 @@\n-        String p = SecuritySupport.getSystemProperty(DOMConstants.SP_IS_STANDALONE, \"false\");\n+        String p = SecuritySupport.getSystemProperty(DOMConstants.SP_IS_STANDALONE);\n+        if (p == null || p.equals(\"\")) {\n+            p = SecuritySupport.readJAXPProperty(DOMConstants.SP_IS_STANDALONE);\n+        }\n@@ -398,1 +402,2 @@\n-                    || name.equalsIgnoreCase(DOMConstants.S_IS_STANDALONE)){\n+                    || name.equalsIgnoreCase(Constants.ORACLE_JAXP_PROPERTY_PREFIX\n+                            + DOMConstants.S_IS_STANDALONE)){\n@@ -456,1 +461,2 @@\n-        } else if (name.equalsIgnoreCase(DOMConstants.S_IS_STANDALONE)) {\n+        } else if (name.equalsIgnoreCase(Constants.ORACLE_JAXP_PROPERTY_PREFIX\n+                + DOMConstants.S_IS_STANDALONE)) {\n@@ -628,1 +634,2 @@\n-            } else if (name.equalsIgnoreCase(DOMConstants.S_IS_STANDALONE)) {\n+            } else if (name.equalsIgnoreCase(Constants.ORACLE_JAXP_PROPERTY_PREFIX\n+                    + DOMConstants.S_IS_STANDALONE)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/dom3\/LSSerializerImpl.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,225 @@\n+ * @implNote\n+ * <h2>Implementation Specific Features and Properties<\/h2>\n+ *\n+ * In addition to the standard features and properties described within the public\n+ * APIs of this module, the JDK implementation supports a further number of\n+ * implementation specific features and properties. This section describes the\n+ * naming convention, System Properties, jaxp.properties, scope and order,\n+ * and processors to which a property applies. A table listing the implementation\n+ * specific features and properties which the implementation currently supports\n+ * can be found at the end of this note.\n+ *\n+ * <h3>Naming Convention<\/h3>\n+ * The names of the features and properties are fully qualified, composed of a\n+ * prefix and name.\n+ * <p>\n+ * <h4>Prefix<\/h4>\n+ * The prefix for JDK properties is defined as:\n+ * <pre>\n+ *     {@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/}\n+ * <\/pre>\n+ *\n+ * The prefix for features:\n+ * <pre>\n+ *     {@code http:\/\/www.oracle.com\/xml\/jaxp\/features\/}\n+ * <\/pre>\n+ *\n+ * The prefix for System Properties:\n+ * <pre>\n+ *     {@systemProperty jdk.xml.}\n+ * <\/pre>\n+ * <p>\n+ * <h4>Name<\/h4>\n+ * A name may consist of one or multiple words that are case-sensitive.\n+ * All letters of the first word shall be in lowercase, while the first letter of\n+ * each subsequent word capitalized.\n+ * <p>\n+ * An example of a property that indicates whether an XML document is standalone\n+ * would thus have a format:\n+ * <pre>\n+ *     {@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/isStandalone}\n+ * <\/pre>\n+ * and a corresponding System Property:\n+ * <pre>\n+ *     {@systemProperty jdk.xml.isStandalone}\n+ * <\/pre>\n+ *\n+ * <h3>System Properties<\/h3>\n+ * A property may have a corresponding System Property that has the same name\n+ * except the prefix as shown above. A System Property should be set prior to\n+ * the creation of a processor and may be cleared afterwards.\n+ *\n+ * <h3>jaxp.properties<\/h3>\n+ * A system property can be specified in the {@code jaxp.properties} file to\n+ * set the behavior for all invocations of the JDK or JRE. The format is\n+ * {@code system-property-name=value}. For example:\n+ * <pre>\n+ *     {@code jdk.xml.isStandalone=true}\n+ * <\/pre>\n+ *\n+ * <h3 id=\"ScopeAndOrder\">Scope and Order<\/h3>\n+ * The {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature\n+ * (hereafter referred to as FSP) is required for XML processors including DOM,\n+ * SAX, Schema Validation, XSLT, and XPath. Any properties flagged as\n+ * {@code \"security: yes\"} (hereafter referred to as security properties) in table\n+ * <a href=\"#FeaturesAndProperties\">Features And Properties<\/a>\n+ * are enforced when FSP is set to true. Such enforcement includes setting security\n+ * features to true and limits to the defined values shown in the table.\n+ * The property values will not be affected, however, when setting FSP to false.\n+ * <p>\n+ * When the Java Security Manager is present, FSP is set to true and can not be\n+ * turned off. The security properties are therefore enforced.\n+ * <p>\n+ * Properties specified in the jaxp.properties file affect all invocations of\n+ * the JDK and JRE, and will override their default values, or those that may\n+ * have been set by FSP.\n+ * <p>\n+ * System properties, when set, affect the invocation of the JDK and JRE, and\n+ * override the default settings or that set in jaxp.properties, or those that\n+ * may have been set by FSP.\n+ * <p>\n+ * JAXP properties specified through JAXP factories or processors (e.g. SAXParser)\n+ * take preference over system properties, the jaxp.properties file, as well as FSP.\n+ * <p>\n+ *\n+ * <h3 id=\"Processor\">Processor Support<\/h3>\n+ * Features and properties may be supported by one or more processors. The\n+ * following table lists the processors by IDs that can be used for reference.\n+ * <p>\n+ *\n+ * <table class=\"plain\" id=\"Processors\">\n+ * <caption>Processors<\/caption>\n+ * <thead>\n+ * <tr>\n+ * <th scope=\"col\">ID<\/th>\n+ * <th scope=\"col\">Name<\/th>\n+ * <th scope=\"col\">How to set the property<\/th>\n+ * <\/tr>\n+ * <\/thead>\n+ *\n+ * <tbody>\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"DOM\">DOM<\/th>\n+ * <td>DOM Parser<\/td>\n+ * <td>\n+ * DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();<br>\n+ * dbf.setAttribute(name, value);\n+ * <\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"SAX\">SAX<\/th>\n+ * <td>SAX Parser<\/td>\n+ * <td>\n+ * SAXParserFactory spf = SAXParserFactory.newInstance();<br>\n+ * SAXParser parser = spf.newSAXParser();<br>\n+ * parser.setProperty(name, value);\n+ * <\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"StAX\">StAX<\/th>\n+ * <td>StAX Parser<\/td>\n+ * <td>\n+ * XMLInputFactory xif = XMLInputFactory.newInstance();<br>\n+ * xif.setProperty(name, value);\n+ * <\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"Validation\">Validation<\/th>\n+ * <td>Schema Validator<\/td>\n+ * <td>\n+ * SchemaFactory schemaFactory = SchemaFactory.newInstance(schemaLanguage);<br>\n+ * schemaFactory.setProperty(name, value);\n+ * <\/td>\n+ * <\/tr>\n+ * <\/tr>\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"Transform\">Transform<\/th>\n+ * <td>Schema Validator<\/td>\n+ * <td>\n+ * TransformerFactory factory = TransformerFactory.newInstance();<br>\n+ * factory.setAttribute(name, value);\n+ * <\/td>\n+ * <\/tr>\n+ * <\/tr>\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"DOMLS\">DOMLS<\/th>\n+ * <td>DOM Load and Save<\/td>\n+ * <td>\n+ * LSSerializer serializer = domImplementation.createLSSerializer(); <br>\n+ * serializer.getDomConfig().setParameter(name, value);\n+ * <\/td>\n+ * <\/tr>\n+ * <\/tbody>\n+ * <\/table>\n+ *\n+ * <p>\n+ * <h3>Implementation Specific Features and Properties<\/h3>\n+ * This section lists features and properties supported by the JDK implementation.\n+ *\n+ * <p>\n+ * <table class=\"plain\" id=\"FeaturesAndProperties\">\n+ * <caption>Features and Properties<\/caption>\n+ * <thead>\n+ * <tr>\n+ * <th scope=\"col\" rowspan=\"2\">Name [1]<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Description<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">System Property [2]<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">jaxp.properties [2]<\/th>\n+ * <th scope=\"col\" colspan=\"3\" style=\"text-align:center\">Value [3]<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Security [4]<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Supported Processor [5]<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Since [6]<\/th>\n+ * <\/tr>\n+ * <tr>\n+ * <th scope=\"col\">Type<\/th>\n+ * <th scope=\"col\">Value<\/th>\n+ * <th scope=\"col\">Default<\/th>\n+ * <\/tr>\n+ * <\/thead>\n+ *\n+ * <tbody>\n+ *\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"ISSTANDALONE\">isStandalone<\/th>\n+ * <td>indicates that the serializer should treat the output as a\n+ * standalone document. The property can be used to ensure a newline is written\n+ * after the XML declaration when the property\n+ * {@link org.w3c.dom.ls.LSSerializer#getDomConfig() format-pretty-print} is set\n+ * to true. Unlike the property\n+ * {@link org.w3c.dom.ls.LSSerializer#getDomConfig() xml-declaration}, this property\n+ * does not have an effect on whether an XML declaration should be written out.\n+ * <\/td>\n+ * <td>yes<\/td>\n+ * <td>yes<\/td>\n+ * <td>boolean<\/td>\n+ * <th id=\"Value\" scope=\"row\" style=\"font-weight:normal\">true\/false<\/th>\n+ * <th id=\"Default\" scope=\"row\" style=\"font-weight:normal\">false<\/th>\n+ * <td>No<\/td>\n+ * <td><a href=\"#DOMLS\">DOMLS<\/a><\/td>\n+ * <td>17<\/td>\n+ * <\/tr>\n+ * <\/tbody>\n+ * <\/table>\n+ * <p>\n+ * <b>[1]<\/b> The name of a property. The fully-qualified name, prefix + name,\n+ * should be used when setting the property.\n+ * <p>\n+ * <b>[2]<\/b> A value \"yes\" indicates there is a corresponding System Property\n+ * for the property, \"no\" otherwise.\n+ *\n+ * <p>\n+ * <b>[3]<\/b> The value must be exactly as listed in this table, case-sensitive.\n+ * The value type for the corresponding System Property is String. For boolean\n+ * type, the system property is true only if it is \"true\" and false otherwise.\n+ * <p>\n+ * <b>[4]<\/b> A value \"yes\" indicates the property is a Security Property. Refer\n+ * to the <a href=\"#ScopeAndOrder\">Scope and Order<\/a> on how FSP may affect the\n+ * value of a Security Property.\n+ * <p>\n+ * <b>[5]<\/b> One or more processors that support the property. The values of the\n+ * field are IDs described in table <a href=\"#Processor\">Processors<\/a>.\n+ * <p>\n+ * <b>[6]<\/b> Indicates the initial release the property is introduced.\n+ *\n+ *\n+ *\n","filename":"src\/java.xml\/share\/classes\/module-info.java","additions":226,"deletions":1,"binary":false,"changes":227,"status":"modified"},{"patch":"@@ -78,1 +78,2 @@\n-    private static final String JDK_IS_STANDALONE = \"jdk-is-standalone\";\n+    private static final String JDK_IS_STANDALONE =\n+            \"http:\/\/www.oracle.com\/xml\/jaxp\/properties\/isStandalone\";\n@@ -102,1 +103,1 @@\n-     * DataProvider: for testing the jdk-is-standalone property\n+     * DataProvider: for testing the isStandalone property\n@@ -134,1 +135,1 @@\n-     * Verifies the use of the new property \"jdk-is-standalone\" and the\n+     * Verifies the use of the new property \"isStandalone\" and the\n@@ -582,1 +583,0 @@\n-\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/common\/prettyprint\/PrettyPrintTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}