{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,2 +90,2 @@\n-                                new ECPublicKeySpec(getW(), getParams()))\n-                            .getEncoded();\n+                            new ECPublicKeySpec(getW(), getParams()))\n+                        .getEncoded();\n@@ -96,1 +96,1 @@\n-            return encoding;\n+            return encoding.clone();\n@@ -182,1 +182,1 @@\n-            return encoding;\n+            return encoding.clone();\n","filename":"src\/jdk.crypto.mscapi\/windows\/classes\/sun\/security\/mscapi\/CPublicKey.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * @test\n+ * @bug 8308808\n+ * @requires os.family == \"windows\"\n+ * @modules jdk.crypto.mscapi\/sun.security.mscapi\n+ * @run main EncodingMutability\n+ *\/\n+\n+import java.security.*;\n+\n+public class EncodingMutability {\n+\n+    public static void main(String[] args) throws Exception {\n+        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\", \"SunMSCAPI\");\n+        PublicKey publicKey = keyGen.generateKeyPair().getPublic();\n+        byte initialByte = publicKey.getEncoded()[0];\n+        publicKey.getEncoded()[0] = 0;\n+        byte mutatedByte = publicKey.getEncoded()[0];\n+\n+        if (initialByte != mutatedByte) {\n+            System.out.println(\"Was able to mutate first byte of pubkey from \" + initialByte + \" to \" + mutatedByte);\n+            throw new RuntimeException(\"Pubkey was mutated via getEncoded\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/sun\/security\/mscapi\/EncodingMutability.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"}]}