{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,0 +114,5 @@\n+    @Override\n+    void close(Throwable cause) {\n+        plainConnection.close(cause);\n+    }\n+\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/AsyncSSLConnection.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,0 +116,5 @@\n+    @Override\n+    void close(Throwable cause) {\n+        plainConnection.close(cause);\n+    }\n+\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/AsyncSSLTunnelConnection.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -145,0 +145,1 @@\n+        private volatile Throwable cause;\n@@ -159,1 +160,1 @@\n-            if (closeRequested) closeConnection(connection);\n+            if (closeRequested) closeConnection(connection, cause);\n@@ -162,1 +163,1 @@\n-        void closeConnection() {\n+        void closeConnection(Throwable error) {\n@@ -164,0 +165,1 @@\n+            Throwable cause;\n@@ -165,0 +167,3 @@\n+                if ((cause = this.cause) == null) {\n+                    cause = this.cause = error;\n+                }\n@@ -170,0 +175,1 @@\n+                    this.cause = null;\n@@ -172,1 +178,1 @@\n-            closeConnection(connection);\n+            closeConnection(connection, cause);\n@@ -181,0 +187,1 @@\n+                this.cause = null;\n@@ -185,1 +192,1 @@\n-        private static void closeConnection(HttpConnection connection) {\n+        private static void closeConnection(HttpConnection connection, Throwable cause) {\n@@ -188,1 +195,1 @@\n-                    connection.close();\n+                    connection.close(cause);\n@@ -267,1 +274,9 @@\n-            failed = cause;\n+            IOException failed = this.failed;\n+            if (failed == null) {\n+                synchronized (this) {\n+                    failed = this.failed;\n+                    if (failed == null) {\n+                        failed = this.failed = cause;\n+                    }\n+                }\n+            }\n@@ -271,1 +286,1 @@\n-            connectionAborter.closeConnection();\n+            connectionAborter.closeConnection(failed);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Exchange.java","additions":22,"deletions":7,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -430,1 +430,1 @@\n-     * Closes this connection, by returning the socket to its connection pool.\n+     * Closes this connection.\n@@ -435,0 +435,8 @@\n+    \/**\n+     * Closes this connection due to the given cause.\n+     * @param cause the cause for which the connection is closed, may be null\n+     *\/\n+    void close(Throwable cause) {\n+        close();\n+    }\n+\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpConnection.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -404,3 +404,0 @@\n-    \/**\n-     * Closes this connection\n-     *\/\n@@ -409,0 +406,5 @@\n+        close(null);\n+    }\n+\n+    @Override\n+    void close(Throwable cause) {\n@@ -426,1 +428,1 @@\n-                tube.signalClosed();\n+                tube.signalClosed(cause);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/PlainHttpConnection.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -160,1 +160,6 @@\n-        delegate.close();\n+        close(null);\n+    }\n+\n+    @Override\n+    void close(Throwable cause) {\n+        delegate.close(cause);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/PlainTunnelingConnection.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-    void signalClosed() {\n+    void signalClosed(Throwable cause) {\n@@ -160,1 +160,1 @@\n-                new IOException(\"connection closed locally\"));\n+                new IOException(\"connection closed locally\", cause));\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/SocketTube.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}