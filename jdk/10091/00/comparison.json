{"files":[{"patch":"@@ -337,3 +337,8 @@\n-                    deferring = isBreakpointSet(clazz, method, start) ||\n-                                threadControl_getInstructionStepMode(thread)\n-                                    == JVMTI_ENABLE;\n+                    if (isBreakpointSet(clazz, method, start)) {\n+                        deferring = JNI_TRUE;\n+                    } else {\n+                        StepRequest* step = threadControl_getStepRequest(thread);\n+                        if (step->pending && step->depth == JDWP_STEP_DEPTH(INTO)) {\n+                            deferring = JNI_TRUE;\n+                        }\n+                    }\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventHandler.c","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -218,4 +218,9 @@\n-                \/\/ For now, we expect these two test cases to fail due to 8292217,\n-                \/\/ so don't fail the overall test run as a result of these failures.\n-                \/\/ testFailed = true;\n-                System.out.println(\"TESTCASE #\" + testcase + \" FAILED (ignoring): too many events in EventSet: \" + set.size());\n+                \/\/ For now, we expect the 2nd test cases to fail due to 8292217,\n+                \/\/ so don't fail the overall test run as a result of this failure.\n+                \/\/ There is a workaround in place that allows the 1st test case to pass.\n+                if (testcase == 1) {\n+                    testFailed = true;\n+                }\n+                System.out.println(\"TESTCASE #\" + testcase + \" FAILED\" +\n+                                   (testcase == 2 ? \"(ignoring)\" : \"\") +\n+                                   \": too many events in EventSet: \" + set.size());\n","filename":"test\/jdk\/com\/sun\/jdi\/CLETest.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"}]}