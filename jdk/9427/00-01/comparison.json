{"files":[{"patch":"@@ -632,1 +632,1 @@\n-            throw LockSupport.interruptedException();\n+            throw new InterruptedException();\n@@ -721,1 +721,1 @@\n-            throw LockSupport.interruptedException();\n+            throw new InterruptedException();\n@@ -754,1 +754,1 @@\n-        throw LockSupport.interruptedException();\n+        throw new InterruptedException();\n@@ -1152,1 +1152,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n@@ -1167,1 +1167,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n@@ -1195,1 +1195,1 @@\n-            throw LockSupport.illegalMonitorStateException();\n+            throw new IllegalMonitorStateException();\n@@ -1249,1 +1249,1 @@\n-                throw LockSupport.staticIllegalMonitorStateException;\n+                throw new IllegalMonitorStateException();\n@@ -1312,1 +1312,1 @@\n-                throw LockSupport.interruptedException();\n+                throw new InterruptedException();\n@@ -1343,1 +1343,1 @@\n-                    throw LockSupport.interruptedException();\n+                    throw new InterruptedException();\n@@ -1365,1 +1365,1 @@\n-                throw LockSupport.interruptedException();\n+                throw new InterruptedException();\n@@ -1386,1 +1386,1 @@\n-                    throw LockSupport.interruptedException();\n+                    throw new InterruptedException();\n@@ -1411,1 +1411,1 @@\n-                throw LockSupport.interruptedException();\n+                throw new InterruptedException();\n@@ -1430,1 +1430,1 @@\n-                    throw LockSupport.interruptedException();\n+                    throw new InterruptedException();\n@@ -1454,1 +1454,1 @@\n-                throw LockSupport.interruptedException();\n+                throw new InterruptedException();\n@@ -1475,1 +1475,1 @@\n-                    throw LockSupport.interruptedException();\n+                    throw new InterruptedException();\n@@ -1503,1 +1503,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n@@ -1522,1 +1522,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n@@ -1542,1 +1542,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedLongSynchronizer.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -438,9 +438,9 @@\n-     * cannot be allocated. Static IllegalMonitorStateException and\n-     * InterruptedException objects (without useful stack traces)\n-     * defined in class LockSupport are thrown when applicable on\n-     * OOM. Condition waits release and reacquire locks upon OOME at a\n-     * slow fixed rate (OOME_COND_WAIT_DELAY) designed with the hope\n-     * that eventually enough memory will be recovered; if not\n-     * performance can be very slow. Effectiveness is also limited by\n-     * the possibility of class loading triggered by first-time\n-     * usages, that may encounter unrecoverable OOMEs.\n+     * cannot be allocated. Condition waits release and reacquire\n+     * locks upon OOME at a slow fixed rate (OOME_COND_WAIT_DELAY)\n+     * designed with the hope that eventually enough memory will be\n+     * recovered; if not performance can be very slow. Effectiveness\n+     * is also limited by the possibility of class loading triggered\n+     * by first-time usages, that may encounter unrecoverable\n+     * OOMEs. Also, it is possible for OutOfMemoryErrors to be thrown\n+     * when attempting to create and throw\n+     * IllegalMonitorStateExceptions and InterruptedExceptions.\n@@ -1011,1 +1011,1 @@\n-            throw LockSupport.interruptedException();\n+            throw new InterruptedException();\n@@ -1045,1 +1045,1 @@\n-        throw LockSupport.interruptedException();\n+        throw new InterruptedException();\n@@ -1100,1 +1100,1 @@\n-            throw LockSupport.interruptedException();\n+            throw new InterruptedException();\n@@ -1133,1 +1133,1 @@\n-        throw LockSupport.interruptedException();\n+        throw new InterruptedException();\n@@ -1531,1 +1531,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n@@ -1546,1 +1546,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n@@ -1574,1 +1574,1 @@\n-            throw LockSupport.illegalMonitorStateException();\n+            throw new IllegalMonitorStateException();\n@@ -1628,1 +1628,1 @@\n-                throw LockSupport.staticIllegalMonitorStateException;\n+                throw new IllegalMonitorStateException();\n@@ -1691,1 +1691,1 @@\n-                throw LockSupport.interruptedException();\n+                throw new InterruptedException();\n@@ -1722,1 +1722,1 @@\n-                    throw LockSupport.interruptedException();\n+                    throw new InterruptedException();\n@@ -1744,1 +1744,1 @@\n-                throw LockSupport.interruptedException();\n+                throw new InterruptedException();\n@@ -1765,1 +1765,1 @@\n-                    throw LockSupport.interruptedException();\n+                    throw new InterruptedException();\n@@ -1790,1 +1790,1 @@\n-                throw LockSupport.interruptedException();\n+                throw new InterruptedException();\n@@ -1809,1 +1809,1 @@\n-                    throw LockSupport.interruptedException();\n+                    throw new InterruptedException();\n@@ -1833,1 +1833,1 @@\n-                throw LockSupport.interruptedException();\n+                throw new InterruptedException();\n@@ -1854,1 +1854,1 @@\n-                    throw LockSupport.interruptedException();\n+                    throw new InterruptedException();\n@@ -1882,1 +1882,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n@@ -1901,1 +1901,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n@@ -1921,1 +1921,1 @@\n-                throw LockSupport.illegalMonitorStateException();\n+                throw new IllegalMonitorStateException();\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedSynchronizer.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -460,40 +460,0 @@\n-    \/**\n-     *  Preallocated exceptions thrown if acquiring or releasing locks\n-     *  when OutOfMemory.\n-     *\/\n-    static final IllegalMonitorStateException staticIllegalMonitorStateException\n-        = new IllegalMonitorStateException() {\n-                @Override public Throwable fillInStackTrace() { return this; }\n-                @Override public void setStackTrace(java.lang.StackTraceElement[] new_stackTrace) {}\n-            };\n-\n-    static final InterruptedException staticInterruptedException\n-        = new InterruptedException() {\n-                @Override public Throwable fillInStackTrace() { return this; }\n-                @Override public void setStackTrace(java.lang.StackTraceElement[] new_stackTrace) {}\n-            };\n-\n-    \/**\n-     * Returns an IllegalMonitorStateException, using preallocated\n-     * exception on OutOfMemoryError\n-     *\/\n-    static final IllegalMonitorStateException illegalMonitorStateException() {\n-        try {\n-            return new IllegalMonitorStateException();\n-        } catch (OutOfMemoryError oome) {\n-            return staticIllegalMonitorStateException;\n-        }\n-    }\n-\n-    \/**\n-     * Returns an InterruptedException, using preallocated\n-     * exception on OutOfMemoryError\n-     *\/\n-    static final InterruptedException interruptedException() {\n-        try {\n-            return new InterruptedException();\n-        } catch (OutOfMemoryError oome) {\n-            return staticInterruptedException;\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/LockSupport.java","additions":0,"deletions":40,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -498,1 +498,0 @@\n-java\/lang\/CompressExpandTest.java                               8287851 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}