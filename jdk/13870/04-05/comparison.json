{"files":[{"patch":"@@ -184,4 +184,5 @@\n- * <blockquote><pre>\n- * b.flip();\n- * b.position(23);\n- * b.limit(42);<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     b.flip();\n+ *     b.position(23);\n+ *     b.limit(42);\n+ * }\n@@ -191,2 +192,3 @@\n- * <blockquote><pre>\n- * b.flip().position(23).limit(42);<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     b.flip().position(23).limit(42);\n+ * }\n@@ -443,3 +445,4 @@\n-     * <blockquote><pre>\n-     * buf.clear();     \/\/ Prepare buffer for reading\n-     * in.read(buf);    \/\/ Read data<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     buf.clear();     \/\/ Prepare buffer for reading\n+     *     in.read(buf);    \/\/ Read data\n+     * }\n@@ -469,5 +472,6 @@\n-     * <blockquote><pre>\n-     * buf.put(magic);    \/\/ Prepend header\n-     * in.read(buf);      \/\/ Read data into rest of buffer\n-     * buf.flip();        \/\/ Flip buffer\n-     * out.write(buf);    \/\/ Write header + data to channel<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     buf.put(magic);    \/\/ Prepend header\n+     *     in.read(buf);      \/\/ Read data into rest of buffer\n+     *     buf.flip();        \/\/ Flip buffer\n+     *     out.write(buf);    \/\/ Write header + data to channel\n+     * }\n@@ -496,4 +500,5 @@\n-     * <blockquote><pre>\n-     * out.write(buf);    \/\/ Write remaining data\n-     * buf.rewind();      \/\/ Rewind buffer\n-     * buf.get(array);    \/\/ Copy data into array<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     out.write(buf);    \/\/ Write remaining data\n+     *     buf.rewind();      \/\/ Rewind buffer\n+     *     buf.get(array);    \/\/ Copy data into array\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java","additions":23,"deletions":18,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -271,4 +271,4 @@\n-     * <pre>\n-     *     ch.{@link #open(Path,Set,ExecutorService,FileAttribute[])\n-     *       open}(file, opts, null, new FileAttribute&lt;?&gt;[0]);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"open\" target=\"#open(Path,Set,ExecutorService,FileAttribute[])\" :\n+     *     ch.open(file, opts, null, new FileAttribute<?>[0]);\n+     * }\n@@ -502,3 +502,4 @@\n-     * <pre>\n-     *     ch.{@link #lock(long,long,boolean,Object,CompletionHandler) lock}(0L, Long.MAX_VALUE, false, att, handler)\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"lock\" target=\"#lock(long,long,boolean,Object,CompletionHandler)\" :\n+     *     ch.lock(0L, Long.MAX_VALUE, false, att, handler)\n+     * }\n@@ -575,3 +576,4 @@\n-     * <pre>\n-     *     ch.{@link #lock(long,long,boolean) lock}(0L, Long.MAX_VALUE, false)\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"lock\" target=\"#lock(long,long,boolean)\" :\n+     *     ch.lock(0L, Long.MAX_VALUE, false)\n+     * }\n@@ -651,2 +653,4 @@\n-     * <pre>\n-     *     ch.{@link #tryLock(long,long,boolean) tryLock}(0L, Long.MAX_VALUE, false) <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"tryLock\" target=\"#tryLock(long,long,boolean)\" :\n+     *     ch.tryLock(0L, Long.MAX_VALUE, false)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/AsynchronousFileChannel.java","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -82,1 +82,1 @@\n- *  listener.accept(null, new CompletionHandler&lt;AsynchronousSocketChannel,Void&gt;() {\n+ *  listener.accept(null, new CompletionHandler<AsynchronousSocketChannel,Void>() {\n@@ -94,1 +94,1 @@\n- * <\/pre>\n+ * }\n@@ -159,3 +159,3 @@\n-     * <blockquote><pre>\n-     * open((AsynchronousChannelGroup)null);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     open((AsynchronousChannelGroup)null);\n+     * }\n@@ -179,3 +179,3 @@\n-     * <blockquote><pre>\n-     * bind(local, 0);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     bind(local, 0);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/AsynchronousServerSocketChannel.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,3 +183,3 @@\n-     * <blockquote><pre>\n-     * open((AsynchronousChannelGroup)null);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     open((AsynchronousChannelGroup)null);\n+     * }\n@@ -452,4 +452,5 @@\n-     * <blockquote><pre>\n-     * dsts[offset].remaining()\n-     *     + dsts[offset+1].remaining()\n-     *     + ... + dsts[offset+length-1].remaining()<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     dsts[offset].remaining()\n+     *         + dsts[offset+1].remaining()\n+     *         + ... + dsts[offset+length-1].remaining()\n+     * }\n@@ -606,4 +607,5 @@\n-     * <blockquote><pre>\n-     * srcs[offset].remaining()\n-     *     + srcs[offset+1].remaining()\n-     *     + ... + srcs[offset+length-1].remaining()<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     srcs[offset].remaining()\n+     *         + srcs[offset+1].remaining()\n+     *         + ... + srcs[offset+length-1].remaining()\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/AsynchronousSocketChannel.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -451,1 +451,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -453,1 +453,1 @@\n-     * } <\/pre>\n+     * }\n@@ -457,1 +457,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -459,1 +459,1 @@\n-     * } <\/pre>\n+     * }\n@@ -486,1 +486,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -488,1 +488,1 @@\n-     * } <\/pre>\n+     * }\n@@ -492,1 +492,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -494,1 +494,1 @@\n-     * } <\/pre>\n+     * }\n@@ -551,1 +551,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -553,1 +553,1 @@\n-     * } <\/pre>\n+     * }\n@@ -557,1 +557,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -559,1 +559,1 @@\n-     * } <\/pre>\n+     * }\n@@ -586,1 +586,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -588,1 +588,1 @@\n-     * } <\/pre>\n+     * }\n@@ -592,1 +592,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -594,1 +594,1 @@\n-     * } <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/Channels.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -319,3 +319,4 @@\n-     * <pre>\n-     *     fc.{@link #open(Path,Set,FileAttribute[]) open}(file, opts, new FileAttribute&lt;?&gt;[0]);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"open\" target=\"#open(Path,Set,FileAttribute[])\" :\n+     *     fc.open(file, opts, new FileAttribute<?>[0]);\n+     * }\n@@ -1203,2 +1204,4 @@\n-     * <pre>\n-     *     fc.{@link #lock(long,long,boolean) lock}(0L, Long.MAX_VALUE, false) <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"lock\" target=\"#lock(long,long,boolean)\" :\n+     *     fc.lock(0L, Long.MAX_VALUE, false)\n+     * }\n@@ -1327,2 +1330,4 @@\n-     * <pre>\n-     *     fc.{@link #tryLock(long,long,boolean) tryLock}(0L, Long.MAX_VALUE, false) <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"tryLock\" target=\"#tryLock(long,long,boolean)\" :\n+     *     fc.tryLock(0L, Long.MAX_VALUE, false)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,4 +61,5 @@\n-     * <blockquote><pre>\n-     * srcs[offset].remaining()\n-     *     + srcs[offset+1].remaining()\n-     *     + ... + srcs[offset+length-1].remaining()<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     srcs[offset].remaining()\n+     *         + srcs[offset+1].remaining()\n+     *         + ... + srcs[offset+length-1].remaining()\n+     * }\n@@ -137,2 +138,3 @@\n-     * <blockquote><pre>\n-     * c.write(srcs, 0, srcs.length);<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     c.write(srcs, 0, srcs.length);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/GatheringByteChannel.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -118,1 +118,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/MulticastChannel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,4 +61,5 @@\n-     * <blockquote><pre>\n-     * dsts[offset].remaining()\n-     *     + dsts[offset+1].remaining()\n-     *     + ... + dsts[offset+length-1].remaining()<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     dsts[offset].remaining()\n+     *         + dsts[offset+1].remaining()\n+     *         + ... + dsts[offset+length-1].remaining()\n+     * }\n@@ -135,2 +136,3 @@\n-     * <blockquote><pre>\n-     * c.read(dsts, 0, dsts.length);<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     c.read(dsts, 0, dsts.length);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/ScatteringByteChannel.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,3 +201,3 @@\n-     * <blockquote><pre>\n-     * bind(local, 0);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     bind(local, 0);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/ServerSocketChannel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * <p> This class encapsulates the low-level machinery required to implement\n+ * <p id=\"be\"> This class encapsulates the low-level machinery required to implement\n@@ -49,9 +49,10 @@\n- * <blockquote><pre id=\"be\">\n- * boolean completed = false;\n- * try {\n- *     begin();\n- *     completed = ...;    \/\/ Perform blocking I\/O operation\n- *     return ...;         \/\/ Return result\n- * } finally {\n- *     end(completed);\n- * }<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     boolean completed = false;\n+ *     try {\n+ *         begin();\n+ *         completed = ...;    \/\/ Perform blocking I\/O operation\n+ *         return ...;         \/\/ Return result\n+ *     } finally {\n+ *         end(completed);\n+ *     }\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/spi\/AbstractInterruptibleChannel.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- * <p> This class encapsulates the low-level machinery required to implement\n+ * <p id=\"be\"> This class encapsulates the low-level machinery required to implement\n@@ -50,8 +50,9 @@\n- * <blockquote><pre id=\"be\">\n- * try {\n- *     begin();\n- *     \/\/ Perform blocking I\/O operation here\n- *     ...\n- * } finally {\n- *     end();\n- * }<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     try {\n+ *         begin();\n+ *         \/\/ Perform blocking I\/O operation here\n+ *         ...\n+ *     } finally {\n+ *         end();\n+ *     }\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/spi\/AbstractSelector.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -843,1 +843,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -847,1 +847,2 @@\n-     *       .decode(bb); <\/pre>\n+     *       .decode(bb);\n+     * }\n@@ -879,1 +880,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -883,1 +884,2 @@\n-     *       .encode(bb); <\/pre>\n+     *       .encode(bb);\n+     * }\n@@ -914,2 +916,3 @@\n-     * <pre>\n-     *     cs.encode(CharBuffer.wrap(s)); <\/pre>\n+     * {@snippet lang=java :\n+     *     cs.encode(CharBuffer.wrap(s));\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -62,1 +62,1 @@\n- * <\/pre>\n+ * }\n@@ -98,4 +98,4 @@\n- * <pre>\n- *   List&lt;Path&gt; listSourceFiles(Path dir) throws IOException {\n- *       List&lt;Path&gt; result = new ArrayList&lt;&gt;();\n- *       try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(dir, \"*.{c,h,cpp,hpp,java}\")) {\n+ * {@snippet lang=java :\n+ *   List<Path> listSourceFiles(Path dir) throws IOException {\n+ *       List<Path> result = new ArrayList<>();\n+ *       try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, \"*.{c,h,cpp,hpp,java}\")) {\n@@ -111,1 +111,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/DirectoryStream.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -234,1 +234,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -236,1 +236,1 @@\n-     * <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileStore.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,1 +215,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -222,1 +222,1 @@\n-     * <\/pre>\n+     * }\n@@ -447,1 +447,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -450,1 +450,1 @@\n-     * <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileSystem.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -258,1 +258,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -261,1 +261,1 @@\n-     * <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileSystems.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -41,2 +41,2 @@\n- *     Files.walkFileTree(start, new SimpleFileVisitor&lt;Path&gt;() {\n- *         &#64;Override\n+ *     Files.walkFileTree(start, new SimpleFileVisitor<Path>() {\n+ *         @Override\n@@ -49,1 +49,1 @@\n- *         &#64;Override\n+ *         @Override\n@@ -62,1 +62,1 @@\n- * <\/pre>\n+ * }\n@@ -66,1 +66,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -71,2 +71,2 @@\n- *         new SimpleFileVisitor&lt;Path&gt;() {\n- *             &#64;Override\n+ *         new SimpleFileVisitor<Path>() {\n+ *             @Override\n@@ -85,1 +85,1 @@\n- *             &#64;Override\n+ *             @Override\n@@ -93,1 +93,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileVisitor.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -270,1 +270,1 @@\n-     * subpath(0, getNameCount()-1);\n+     *     subpath(0, getNameCount()-1);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -63,1 +63,1 @@\n- *         for (WatchEvent&lt;?&gt; event: key.pollEvents()) {\n+ *         for (WatchEvent<?> event: key.pollEvents()) {\n@@ -73,1 +73,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/WatchKey.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,3 +100,4 @@\n-     * <pre>\n-     *     watchable.{@link #register(WatchService,WatchEvent.Kind[],WatchEvent.Modifier[]) register}(watcher, events, new WatchEvent.Modifier[0]);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"register\" target=#register(WatchService,WatchEvent.Kind[],WatchEvent.Modifier[]) :\n+     *     register.watcher, events, new WatchEvent.Modifier[0]);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Watchable.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -88,1 +88,1 @@\n- *     List&lt;AclEntry&gt; acl = view.getAcl();\n+ *     List<AclEntry> acl = view.getAcl();\n@@ -91,1 +91,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/AclFileAttributeView.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -160,1 +160,1 @@\n-     * <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/BasicFileAttributeView.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -39,1 +39,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/BasicFileAttributes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -36,1 +36,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/DosFileAttributes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -69,1 +69,1 @@\n- * <\/pre>\n+ * }\n@@ -121,1 +121,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -126,1 +126,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/PosixFileAttributeView.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,1 +112,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -114,1 +114,1 @@\n-     * <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/PosixFilePermissions.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,1 +134,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -142,1 +142,1 @@\n-     * <\/pre>\n+     * }\n@@ -191,1 +191,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -195,1 +195,1 @@\n-     * <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}