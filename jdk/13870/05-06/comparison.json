{"files":[{"patch":"@@ -1061,2 +1061,2 @@\n-     * for (int i = offset, j = index; i < offset + length; i++, j++)\n-     *     dst.put(j, src.get(i));\n+     *     for (int i = offset, j = index; i < offset + length; i++, j++)\n+     *         dst.put(j, src.get(i));\n","filename":"src\/java.base\/share\/classes\/java\/nio\/X-Buffer.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,6 +56,6 @@\n- *   Path dir = ...\n- *   try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(dir)) {\n- *       for (Path entry: stream) {\n- *           ...\n- *       }\n- *   }\n+ *     Path dir = ...\n+ *     try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir)) {\n+ *         for (Path entry: stream) {\n+ *             ...\n+ *         }\n+ *     }\n@@ -99,12 +99,12 @@\n- *   List<Path> listSourceFiles(Path dir) throws IOException {\n- *       List<Path> result = new ArrayList<>();\n- *       try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, \"*.{c,h,cpp,hpp,java}\")) {\n- *           for (Path entry: stream) {\n- *               result.add(entry);\n- *           }\n- *       } catch (DirectoryIteratorException ex) {\n- *           \/\/ I\/O error encountered during the iteration, the cause is an IOException\n- *           throw ex.getCause();\n- *       }\n- *       return result;\n- *   }\n+ *     List<Path> listSourceFiles(Path dir) throws IOException {\n+ *         List<Path> result = new ArrayList<>();\n+ *         try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, \"*.{c,h,cpp,hpp,java}\")) {\n+ *             for (Path entry: stream) {\n+ *                 result.add(entry);\n+ *             }\n+ *         } catch (DirectoryIteratorException ex) {\n+ *             \/\/ I\/O error encountered during the iteration, the cause is an IOException\n+ *             throw ex.getCause();\n+ *         }\n+ *         return result;\n+ *     }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/DirectoryStream.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-     *    boolean compression = (Boolean)fs.getAttribute(\"zfs:compression\");\n+     *     boolean compression = (Boolean)fs.getAttribute(\"zfs:compression\");\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileStore.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -259,2 +259,2 @@\n-     *  FileSystem fs = FileSystems.newFileSystem(URI.create(\"memory:\/\/\/?name=logfs\"),\n-     *                                            Map.of(\"capacity\", \"16G\", \"blockSize\", \"4k\"));\n+     *     FileSystem fs = FileSystems.newFileSystem(URI.create(\"memory:\/\/\/?name=logfs\"),\n+     *                                               Map.of(\"capacity\", \"16G\", \"blockSize\", \"4k\"));\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileSystems.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1814,2 +1814,2 @@\n-     *    Path path = ...\n-     *    BasicFileAttributes attrs = Files.readAttributes(path, BasicFileAttributes.class);\n+     *     Path path = ...\n+     *     BasicFileAttributes attrs = Files.readAttributes(path, BasicFileAttributes.class);\n@@ -1820,2 +1820,2 @@\n-     *    PosixFileAttributes attrs =\n-     *        Files.readAttributes(path, PosixFileAttributes.class, NOFOLLOW_LINKS);\n+     *     PosixFileAttributes attrs =\n+     *         Files.readAttributes(path, PosixFileAttributes.class, NOFOLLOW_LINKS);\n@@ -1882,2 +1882,2 @@\n-     *    Path path = ...\n-     *    Files.setAttribute(path, \"dos:hidden\", true);\n+     *     Path path = ...\n+     *     Files.setAttribute(path, \"dos:hidden\", true);\n@@ -1951,2 +1951,2 @@\n-     *    Path path = ...\n-     *    int uid = (Integer)Files.getAttribute(path, \"unix:uid\");\n+     *     Path path = ...\n+     *     int uid = (Integer)Files.getAttribute(path, \"unix:uid\");\n@@ -2410,3 +2410,3 @@\n-     *    Path path = ...\n-     *    FileTime now = FileTime.fromMillis(System.currentTimeMillis());\n-     *    Files.setLastModifiedTime(path, now);\n+     *     Path path = ...\n+     *     FileTime now = FileTime.fromMillis(System.currentTimeMillis());\n+     *     Files.setLastModifiedTime(path, now);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Files.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -157,3 +157,3 @@\n-     *    Path path = ...\n-     *    FileTime time = ...\n-     *    Files.getFileAttributeView(path, BasicFileAttributeView.class).setTimes(null, time, null);\n+     *     Path path = ...\n+     *     FileTime time = ...\n+     *     Files.getFileAttributeView(path, BasicFileAttributeView.class).setTimes(null, time, null);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/BasicFileAttributeView.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n- *    Path file = ...\n- *    BasicFileAttributes attrs = Files.readAttributes(file, BasicFileAttributes.class);\n+ *     Path file = ...\n+ *     BasicFileAttributes attrs = Files.readAttributes(file, BasicFileAttributes.class);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/BasicFileAttributes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- *    Path file = ...\n- *    DosFileAttributes attrs = Files.readAttributes(file, DosFileAttributes.class);\n+ *     Path file = ...\n+ *     DosFileAttributes attrs = Files.readAttributes(file, DosFileAttributes.class);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/DosFileAttributes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n- *     Set&lt;PosixFilePermission&gt; perms =\n+ *     Set<PosixFilePermission> perms =\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/PosixFileAttributeView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-     *   Set&lt;PosixFilePermission&gt; perms = PosixFilePermissions.fromString(\"rwxr-x---\");\n+     *     Set<PosixFilePermission> perms = PosixFilePermissions.fromString(\"rwxr-x---\");\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/PosixFilePermissions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,7 +135,7 @@\n-     *    UserDefinedFileAttributeView view =\n-     *        Files.getFileAttributeView(path, UserDefinedFileAttributeView.class);\n-     *    String name = \"user.mimetype\";\n-     *    ByteBuffer buf = ByteBuffer.allocate(view.size(name));\n-     *    view.read(name, buf);\n-     *    buf.flip();\n-     *    String value = Charset.defaultCharset().decode(buf).toString();\n+     *     UserDefinedFileAttributeView view =\n+     *         Files.getFileAttributeView(path, UserDefinedFileAttributeView.class);\n+     *     String name = \"user.mimetype\";\n+     *     ByteBuffer buf = ByteBuffer.allocate(view.size(name));\n+     *     view.read(name, buf);\n+     *     buf.flip();\n+     *     String value = Charset.defaultCharset().decode(buf).toString();\n@@ -192,3 +192,3 @@\n-     *    UserDefinedFileAttributeView view =\n-     *        Files.getFileAttributeView(path, UserDefinedFileAttributeView.class);\n-     *    view.write(\"user.mimetype\", Charset.defaultCharset().encode(\"text\/html\"));\n+     *     UserDefinedFileAttributeView view =\n+     *         Files.getFileAttributeView(path, UserDefinedFileAttributeView.class);\n+     *     view.write(\"user.mimetype\", Charset.defaultCharset().encode(\"text\/html\"));\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}