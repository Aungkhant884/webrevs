{"files":[{"patch":"@@ -184,4 +184,5 @@\n- * <blockquote><pre>\n- * b.flip();\n- * b.position(23);\n- * b.limit(42);<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     b.flip();\n+ *     b.position(23);\n+ *     b.limit(42);\n+ * }\n@@ -191,2 +192,3 @@\n- * <blockquote><pre>\n- * b.flip().position(23).limit(42);<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     b.flip().position(23).limit(42);\n+ * }\n@@ -443,3 +445,4 @@\n-     * <blockquote><pre>\n-     * buf.clear();     \/\/ Prepare buffer for reading\n-     * in.read(buf);    \/\/ Read data<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     buf.clear();     \/\/ Prepare buffer for reading\n+     *     in.read(buf);    \/\/ Read data\n+     * }\n@@ -469,5 +472,6 @@\n-     * <blockquote><pre>\n-     * buf.put(magic);    \/\/ Prepend header\n-     * in.read(buf);      \/\/ Read data into rest of buffer\n-     * buf.flip();        \/\/ Flip buffer\n-     * out.write(buf);    \/\/ Write header + data to channel<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     buf.put(magic);    \/\/ Prepend header\n+     *     in.read(buf);      \/\/ Read data into rest of buffer\n+     *     buf.flip();        \/\/ Flip buffer\n+     *     out.write(buf);    \/\/ Write header + data to channel\n+     * }\n@@ -496,4 +500,5 @@\n-     * <blockquote><pre>\n-     * out.write(buf);    \/\/ Write remaining data\n-     * buf.rewind();      \/\/ Rewind buffer\n-     * buf.get(array);    \/\/ Copy data into array<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     out.write(buf);    \/\/ Write remaining data\n+     *     buf.rewind();      \/\/ Rewind buffer\n+     *     buf.get(array);    \/\/ Copy data into array\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java","additions":23,"deletions":18,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -152,6 +152,10 @@\n- * <blockquote><pre>\n- * float      {@link #getFloat()}\n- * float      {@link #getFloat(int) getFloat(int index)}\n- * ByteBuffer {@link #putFloat(float) putFloat(float f)}\n- * ByteBuffer {@link #putFloat(int,float) putFloat(int index, float f)}\n- * <\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     \/\/ @link substring=\"getFloat()\" target=\"#getFloat\" :\n+ *     float      getFloat()\n+ *     \/\/ @link substring=\"getFloat(int index)\" target=\"#getFloat(int)\" :\n+ *     float      getFloat(int index)\n+ *     \/\/ @link substring=\"putFloat(float f)\" target=\"#putFloat(float)\" :\n+ *     ByteBuffer putFloat(float f)\n+ *     \/\/ @link substring=\"putFloat(int index, float f)\" target=\"#putFloat(int,float)\" :\n+ *     ByteBuffer putFloat(int index, float f)\n+ * }\n@@ -234,4 +238,5 @@\n- * <blockquote><pre>\n- * bb.putInt(0xCAFEBABE);\n- * bb.putShort(3);\n- * bb.putShort(45);<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     bb.putInt(0xCAFEBABE);\n+ *     bb.putShort(3);\n+ *     bb.putShort(45);\n+ * }\n@@ -241,2 +246,3 @@\n- * <blockquote><pre>\n- * bb.putInt(0xCAFEBABE).putShort(3).putShort(45);<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     bb.putInt(0xCAFEBABE).putShort(3).putShort(45);\n+ * }\n@@ -249,5 +255,6 @@\n- * <blockquote><pre>\n- * cb.put(\"text\/\");\n- * cb.put(subtype);\n- * cb.put(\"; charset=\");\n- * cb.put(enc);<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     cb.put(\"text\/\");\n+ *     cb.put(subtype);\n+ *     cb.put(\"; charset=\");\n+ *     cb.put(enc);\n+ * }\n@@ -257,2 +264,3 @@\n- * <blockquote><pre>\n- * cb.put(\"text\/\").put(subtype).put(\"; charset=\").put(enc);<\/pre><\/blockquote>\n+ * {@snippet lang=java :\n+ *     cb.put(\"text\/\").put(subtype).put(\"; charset=\").put(enc);\n+ * }\n@@ -783,1 +791,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -786,1 +794,1 @@\n-     * }<\/pre>\n+     * }\n@@ -833,2 +841,3 @@\n-     * <pre>\n-     *     src.get(a, 0, a.length) <\/pre>\n+     * {@snippet lang=java :\n+     *     src.get(a, 0, a.length)\n+     * }\n@@ -863,1 +872,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -866,1 +875,1 @@\n-     * }<\/pre>\n+     * }\n@@ -911,2 +920,3 @@\n-     * <pre>\n-     *     src.get(index, dst, 0, dst.length) <\/pre>\n+     * {@snippet lang=java :\n+     *     src.get(index, dst, 0, dst.length)\n+     * }\n@@ -987,1 +997,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -989,1 +999,2 @@\n-     *         dst.put(src.get()); <\/pre>\n+     *         dst.put(src.get());\n+     * }\n@@ -1049,4 +1060,4 @@\n-     * <pre>{@code\n-     * for (int i = offset, j = index; i < offset + length; i++, j++)\n-     *     dst.put(j, src.get(i));\n-     * }<\/pre>\n+     * {@snippet lang=java :\n+     *     for (int i = offset, j = index; i < offset + length; i++, j++)\n+     *         dst.put(j, src.get(i));\n+     * }\n@@ -1161,1 +1172,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1164,1 +1175,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1215,2 +1226,3 @@\n-     * <pre>\n-     *     dst.put(a, 0, a.length) <\/pre>\n+     * {@snippet lang=java :\n+     *     dst.put(a, 0, a.length)\n+     * }\n@@ -1246,1 +1258,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1249,1 +1261,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1297,2 +1309,3 @@\n-     * <pre>\n-     *     dst.put(index, src, 0, src.length); <\/pre>\n+     * {@snippet lang=java :\n+     *     dst.put(index, src, 0, src.length);\n+     * }\n@@ -1381,1 +1394,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1384,1 +1397,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1432,2 +1445,3 @@\n-     * <pre>\n-     *     dst.put(s, 0, s.length()) <\/pre>\n+     * {@snippet lang=java :\n+     *     dst.put(s, 0, s.length())\n+     * }\n@@ -1649,8 +1663,8 @@\n-     * <blockquote><pre>{@code\n-     *   buf.clear();          \/\/ Prepare buffer for use\n-     *   while (in.read(buf) >= 0 || buf.position != 0) {\n-     *       buf.flip();\n-     *       out.write(buf);\n-     *       buf.compact();    \/\/ In case of partial write\n-     *   }\n-     * }<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     buf.clear();          \/\/ Prepare buffer for use\n+     *     while (in.read(buf) >= 0 || buf.position != 0) {\n+     *         buf.flip();\n+     *         out.write(buf);\n+     *         buf.compact();    \/\/ In case of partial write\n+     *     }\n+     * }\n@@ -1981,2 +1995,3 @@\n-     * <pre>\n-     *     dst.put(csq.toString()) <\/pre>\n+     * {@snippet lang=java :\n+     *     dst.put(csq.toString())\n+     * }\n@@ -2022,2 +2037,3 @@\n-     * <pre>\n-     *     dst.put(csq.subSequence(start, end).toString()) <\/pre>\n+     * {@snippet lang=java :\n+     *     dst.put(csq.subSequence(start, end).toString())\n+     * }\n@@ -2076,2 +2092,3 @@\n-     * <pre>\n-     *     dst.put($x$) <\/pre>\n+     * {@snippet lang=java :\n+     *     dst.put($x$)\n+     * }\n@@ -2176,2 +2193,3 @@\n-     * <blockquote><pre>\n-     * int value = alignmentOffset(index, unitSize)<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     int value = alignmentOffset(index, unitSize)\n+     * }\n@@ -2179,2 +2197,3 @@\n-     * <blockquote><pre>\n-     * alignmentOffset(index - value, unitSize) == 0, value &le; index<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     alignmentOffset(index - value, unitSize) == 0, value <= index\n+     * }\n@@ -2182,2 +2201,3 @@\n-     * <blockquote><pre>\n-     * alignmentOffset(index + (unitSize - value), unitSize) == 0<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     alignmentOffset(index + (unitSize - value), unitSize) == 0\n+     * }\n@@ -2242,4 +2262,4 @@\n-     * <pre>{@code\n-     * nb.alignmentOffset(0, unitSize) == 0\n-     * nb.alignmentOffset(nb.limit(), unitSize) == 0\n-     * }<\/pre>\n+     * {@snippet lang=java :\n+     *     nb.alignmentOffset(0, unitSize) == 0\n+     *     nb.alignmentOffset(nb.limit(), unitSize) == 0\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/X-Buffer.java.template","additions":89,"deletions":69,"binary":false,"changes":158,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -271,4 +271,4 @@\n-     * <pre>\n-     *     ch.{@link #open(Path,Set,ExecutorService,FileAttribute[])\n-     *       open}(file, opts, null, new FileAttribute&lt;?&gt;[0]);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"open\" target=\"#open(Path,Set,ExecutorService,FileAttribute[])\" :\n+     *     ch.open(file, opts, null, new FileAttribute<?>[0]);\n+     * }\n@@ -502,3 +502,4 @@\n-     * <pre>\n-     *     ch.{@link #lock(long,long,boolean,Object,CompletionHandler) lock}(0L, Long.MAX_VALUE, false, att, handler)\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"lock\" target=\"#lock(long,long,boolean,Object,CompletionHandler)\" :\n+     *     ch.lock(0L, Long.MAX_VALUE, false, att, handler)\n+     * }\n@@ -575,3 +576,4 @@\n-     * <pre>\n-     *     ch.{@link #lock(long,long,boolean) lock}(0L, Long.MAX_VALUE, false)\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"lock\" target=\"#lock(long,long,boolean)\" :\n+     *     ch.lock(0L, Long.MAX_VALUE, false)\n+     * }\n@@ -651,2 +653,4 @@\n-     * <pre>\n-     *     ch.{@link #tryLock(long,long,boolean) tryLock}(0L, Long.MAX_VALUE, false) <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"tryLock\" target=\"#tryLock(long,long,boolean)\" :\n+     *     ch.tryLock(0L, Long.MAX_VALUE, false)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/AsynchronousFileChannel.java","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -82,1 +82,1 @@\n- *  listener.accept(null, new CompletionHandler&lt;AsynchronousSocketChannel,Void&gt;() {\n+ *  listener.accept(null, new CompletionHandler<AsynchronousSocketChannel,Void>() {\n@@ -94,1 +94,1 @@\n- * <\/pre>\n+ * }\n@@ -159,3 +159,3 @@\n-     * <blockquote><pre>\n-     * open((AsynchronousChannelGroup)null);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     open((AsynchronousChannelGroup)null);\n+     * }\n@@ -179,3 +179,3 @@\n-     * <blockquote><pre>\n-     * bind(local, 0);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     bind(local, 0);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/AsynchronousServerSocketChannel.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,3 +183,3 @@\n-     * <blockquote><pre>\n-     * open((AsynchronousChannelGroup)null);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     open((AsynchronousChannelGroup)null);\n+     * }\n@@ -452,4 +452,5 @@\n-     * <blockquote><pre>\n-     * dsts[offset].remaining()\n-     *     + dsts[offset+1].remaining()\n-     *     + ... + dsts[offset+length-1].remaining()<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     dsts[offset].remaining()\n+     *         + dsts[offset+1].remaining()\n+     *         + ... + dsts[offset+length-1].remaining()\n+     * }\n@@ -606,4 +607,5 @@\n-     * <blockquote><pre>\n-     * srcs[offset].remaining()\n-     *     + srcs[offset+1].remaining()\n-     *     + ... + srcs[offset+length-1].remaining()<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     srcs[offset].remaining()\n+     *         + srcs[offset+1].remaining()\n+     *         + ... + srcs[offset+length-1].remaining()\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/AsynchronousSocketChannel.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -451,1 +451,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -453,1 +453,1 @@\n-     * } <\/pre>\n+     * }\n@@ -457,1 +457,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -459,1 +459,1 @@\n-     * } <\/pre>\n+     * }\n@@ -486,1 +486,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -488,1 +488,1 @@\n-     * } <\/pre>\n+     * }\n@@ -492,1 +492,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -494,1 +494,1 @@\n-     * } <\/pre>\n+     * }\n@@ -551,1 +551,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -553,1 +553,1 @@\n-     * } <\/pre>\n+     * }\n@@ -557,1 +557,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -559,1 +559,1 @@\n-     * } <\/pre>\n+     * }\n@@ -586,1 +586,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -588,1 +588,1 @@\n-     * } <\/pre>\n+     * }\n@@ -592,1 +592,1 @@\n-     * <pre> {@code\n+     * {@snippet lang=java :\n@@ -594,1 +594,1 @@\n-     * } <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/Channels.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -319,3 +319,4 @@\n-     * <pre>\n-     *     fc.{@link #open(Path,Set,FileAttribute[]) open}(file, opts, new FileAttribute&lt;?&gt;[0]);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"open\" target=\"#open(Path,Set,FileAttribute[])\" :\n+     *     fc.open(file, opts, new FileAttribute<?>[0]);\n+     * }\n@@ -1203,2 +1204,4 @@\n-     * <pre>\n-     *     fc.{@link #lock(long,long,boolean) lock}(0L, Long.MAX_VALUE, false) <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"lock\" target=\"#lock(long,long,boolean)\" :\n+     *     fc.lock(0L, Long.MAX_VALUE, false)\n+     * }\n@@ -1327,2 +1330,4 @@\n-     * <pre>\n-     *     fc.{@link #tryLock(long,long,boolean) tryLock}(0L, Long.MAX_VALUE, false) <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"tryLock\" target=\"#tryLock(long,long,boolean)\" :\n+     *     fc.tryLock(0L, Long.MAX_VALUE, false)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,4 +61,5 @@\n-     * <blockquote><pre>\n-     * srcs[offset].remaining()\n-     *     + srcs[offset+1].remaining()\n-     *     + ... + srcs[offset+length-1].remaining()<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     srcs[offset].remaining()\n+     *         + srcs[offset+1].remaining()\n+     *         + ... + srcs[offset+length-1].remaining()\n+     * }\n@@ -137,2 +138,3 @@\n-     * <blockquote><pre>\n-     * c.write(srcs, 0, srcs.length);<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     c.write(srcs, 0, srcs.length);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/GatheringByteChannel.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -118,1 +118,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/MulticastChannel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,4 +61,5 @@\n-     * <blockquote><pre>\n-     * dsts[offset].remaining()\n-     *     + dsts[offset+1].remaining()\n-     *     + ... + dsts[offset+length-1].remaining()<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     dsts[offset].remaining()\n+     *         + dsts[offset+1].remaining()\n+     *         + ... + dsts[offset+length-1].remaining()\n+     * }\n@@ -135,2 +136,3 @@\n-     * <blockquote><pre>\n-     * c.read(dsts, 0, dsts.length);<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     c.read(dsts, 0, dsts.length);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/ScatteringByteChannel.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -341,3 +341,3 @@\n-     * <blockquote><pre>{@code\n-     * k.readyOps() & OP_READ != 0\n-     * }<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     k.readyOps() & OP_READ != 0\n+     * }\n@@ -364,3 +364,3 @@\n-     * <blockquote><pre>{@code\n-     * k.readyOps() & OP_WRITE != 0\n-     * }<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     k.readyOps() & OP_WRITE != 0\n+     * }\n@@ -388,3 +388,3 @@\n-     * <blockquote><pre>{@code\n-     * k.readyOps() & OP_CONNECT != 0\n-     * }<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     k.readyOps() & OP_CONNECT != 0\n+     * }\n@@ -412,3 +412,3 @@\n-     * <blockquote><pre>{@code\n-     * k.readyOps() & OP_ACCEPT != 0\n-     * }<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     k.readyOps() & OP_ACCEPT != 0\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/SelectionKey.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,3 +201,3 @@\n-     * <blockquote><pre>\n-     * bind(local, 0);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     bind(local, 0);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/ServerSocketChannel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,9 +49,10 @@\n- * <blockquote><pre id=\"be\">\n- * boolean completed = false;\n- * try {\n- *     begin();\n- *     completed = ...;    \/\/ Perform blocking I\/O operation\n- *     return ...;         \/\/ Return result\n- * } finally {\n- *     end(completed);\n- * }<\/pre><\/blockquote>\n+ * {@snippet lang=java id=\"be\" :\n+ *     boolean completed = false;\n+ *     try {\n+ *         begin();\n+ *         completed = ...;    \/\/ Perform blocking I\/O operation\n+ *         return ...;         \/\/ Return result\n+ *     } finally {\n+ *         end(completed);\n+ *     }\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/spi\/AbstractInterruptibleChannel.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,8 +50,9 @@\n- * <blockquote><pre id=\"be\">\n- * try {\n- *     begin();\n- *     \/\/ Perform blocking I\/O operation here\n- *     ...\n- * } finally {\n- *     end();\n- * }<\/pre><\/blockquote>\n+ * {@snippet lang=java id=\"be\" :\n+ *     try {\n+ *         begin();\n+ *         \/\/ Perform blocking I\/O operation here\n+ *         ...\n+ *     } finally {\n+ *         end();\n+ *     }\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/spi\/AbstractSelector.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -843,1 +843,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -847,1 +847,2 @@\n-     *       .decode(bb); <\/pre>\n+     *       .decode(bb);\n+     * }\n@@ -879,1 +880,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -883,1 +884,2 @@\n-     *       .encode(bb); <\/pre>\n+     *       .encode(bb);\n+     * }\n@@ -914,2 +916,3 @@\n-     * <pre>\n-     *     cs.encode(CharBuffer.wrap(s)); <\/pre>\n+     * {@snippet lang=java :\n+     *     cs.encode(CharBuffer.wrap(s));\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,8 +55,8 @@\n- * <pre>\n- *   Path dir = ...\n- *   try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(dir)) {\n- *       for (Path entry: stream) {\n- *           ...\n- *       }\n- *   }\n- * <\/pre>\n+ * {@snippet lang=java :\n+ *     Path dir = ...\n+ *     try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir)) {\n+ *         for (Path entry: stream) {\n+ *             ...\n+ *         }\n+ *     }\n+ * }\n@@ -98,14 +98,14 @@\n- * <pre>\n- *   List&lt;Path&gt; listSourceFiles(Path dir) throws IOException {\n- *       List&lt;Path&gt; result = new ArrayList&lt;&gt;();\n- *       try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(dir, \"*.{c,h,cpp,hpp,java}\")) {\n- *           for (Path entry: stream) {\n- *               result.add(entry);\n- *           }\n- *       } catch (DirectoryIteratorException ex) {\n- *           \/\/ I\/O error encountered during the iteration, the cause is an IOException\n- *           throw ex.getCause();\n- *       }\n- *       return result;\n- *   }\n- * <\/pre>\n+ * {@snippet lang=java :\n+ *     List<Path> listSourceFiles(Path dir) throws IOException {\n+ *         List<Path> result = new ArrayList<>();\n+ *         try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, \"*.{c,h,cpp,hpp,java}\")) {\n+ *             for (Path entry: stream) {\n+ *                 result.add(entry);\n+ *             }\n+ *         } catch (DirectoryIteratorException ex) {\n+ *             \/\/ I\/O error encountered during the iteration, the cause is an IOException\n+ *             throw ex.getCause();\n+ *         }\n+ *         return result;\n+ *     }\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/DirectoryStream.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -234,3 +234,3 @@\n-     * <pre>\n-     *    boolean compression = (Boolean)fs.getAttribute(\"zfs:compression\");\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     boolean compression = (Boolean)fs.getAttribute(\"zfs:compression\");\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileStore.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,1 +215,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -222,1 +222,1 @@\n-     * <\/pre>\n+     * }\n@@ -447,1 +447,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -450,1 +450,1 @@\n-     * <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileSystem.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -258,4 +258,4 @@\n-     * <pre>\n-     *  FileSystem fs = FileSystems.newFileSystem(URI.create(\"memory:\/\/\/?name=logfs\"),\n-     *                                            Map.of(\"capacity\", \"16G\", \"blockSize\", \"4k\"));\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     FileSystem fs = FileSystems.newFileSystem(URI.create(\"memory:\/\/\/?name=logfs\"),\n+     *                                               Map.of(\"capacity\", \"16G\", \"blockSize\", \"4k\"));\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileSystems.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -47,1 +47,1 @@\n- * }<\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileTreeIterator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -52,1 +52,1 @@\n- * }<\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileTreeWalker.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -41,2 +41,2 @@\n- *     Files.walkFileTree(start, new SimpleFileVisitor&lt;Path&gt;() {\n- *         &#64;Override\n+ *     Files.walkFileTree(start, new SimpleFileVisitor<Path>() {\n+ *         @Override\n@@ -49,1 +49,1 @@\n- *         &#64;Override\n+ *         @Override\n@@ -62,1 +62,1 @@\n- * <\/pre>\n+ * }\n@@ -66,1 +66,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -71,2 +71,2 @@\n- *         new SimpleFileVisitor&lt;Path&gt;() {\n- *             &#64;Override\n+ *         new SimpleFileVisitor<Path>() {\n+ *             @Override\n@@ -85,1 +85,1 @@\n- *             &#64;Override\n+ *             @Override\n@@ -93,1 +93,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileVisitor.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -197,1 +197,1 @@\n-     * <\/pre>\n+     * }\n@@ -323,1 +323,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -337,1 +337,1 @@\n-     * }<\/pre>\n+     * }\n@@ -496,1 +496,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -498,1 +498,1 @@\n-     *     try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(dir, \"*.java\")) {\n+     *     try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, \"*.java\")) {\n@@ -501,1 +501,1 @@\n-     * <\/pre>\n+     * }\n@@ -580,2 +580,2 @@\n-     * <pre>\n-     *     DirectoryStream.Filter&lt;Path&gt; filter = new DirectoryStream.Filter&lt;Path&gt;() {\n+     * {@snippet lang=java :\n+     *     DirectoryStream.Filter<Path> filter = new DirectoryStream.Filter<Path>() {\n@@ -583,1 +583,1 @@\n-     *             return (Files.size(file) &gt; 8192L);\n+     *             return (Files.size(file) > 8192L);\n@@ -587,1 +587,1 @@\n-     *     try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(dir, filter)) {\n+     *     try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, filter)) {\n@@ -590,1 +590,1 @@\n-     * <\/pre>\n+     * }\n@@ -1260,1 +1260,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -1264,1 +1264,1 @@\n-     * <\/pre>\n+     * }\n@@ -1378,1 +1378,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -1381,1 +1381,1 @@\n-     * <\/pre>\n+     * }\n@@ -1385,1 +1385,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -1389,1 +1389,1 @@\n-     * <\/pre>\n+     * }\n@@ -1764,1 +1764,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -1768,1 +1768,1 @@\n-     *         List&lt;AclEntry&gt; acl = view.getAcl();\n+     *         List<AclEntry> acl = view.getAcl();\n@@ -1771,1 +1771,1 @@\n-     * <\/pre>\n+     * }\n@@ -1813,4 +1813,4 @@\n-     * <pre>\n-     *    Path path = ...\n-     *    BasicFileAttributes attrs = Files.readAttributes(path, BasicFileAttributes.class);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     Path path = ...\n+     *     BasicFileAttributes attrs = Files.readAttributes(path, BasicFileAttributes.class);\n+     * }\n@@ -1819,4 +1819,4 @@\n-     * <pre>\n-     *    PosixFileAttributes attrs =\n-     *        Files.readAttributes(path, PosixFileAttributes.class, NOFOLLOW_LINKS);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     PosixFileAttributes attrs =\n+     *         Files.readAttributes(path, PosixFileAttributes.class, NOFOLLOW_LINKS);\n+     * }\n@@ -1881,4 +1881,4 @@\n-     * <pre>\n-     *    Path path = ...\n-     *    Files.setAttribute(path, \"dos:hidden\", true);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     Path path = ...\n+     *     Files.setAttribute(path, \"dos:hidden\", true);\n+     * }\n@@ -1950,4 +1950,4 @@\n-     * <pre>\n-     *    Path path = ...\n-     *    int uid = (Integer)Files.getAttribute(path, \"unix:uid\");\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     Path path = ...\n+     *     int uid = (Integer)Files.getAttribute(path, \"unix:uid\");\n+     * }\n@@ -2215,1 +2215,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -2221,1 +2221,1 @@\n-     * <\/pre>\n+     * }\n@@ -2409,5 +2409,5 @@\n-     * <pre>\n-     *    Path path = ...\n-     *    FileTime now = FileTime.fromMillis(System.currentTimeMillis());\n-     *    Files.setLastModifiedTime(path, now);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     Path path = ...\n+     *     FileTime now = FileTime.fromMillis(System.currentTimeMillis());\n+     *     Files.setLastModifiedTime(path, now);\n+     * }\n@@ -3066,1 +3066,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -3072,1 +3072,1 @@\n-     * <\/pre>\n+     * }\n@@ -3452,1 +3452,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -3456,1 +3456,1 @@\n-     * <\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Files.java","additions":48,"deletions":48,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -79,1 +79,1 @@\n- * <\/pre>\n+ * }\n@@ -128,1 +128,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -131,1 +131,1 @@\n-     * }<\/pre>\n+     * }\n@@ -269,3 +269,3 @@\n-     * <blockquote><pre>\n-     * subpath(0,&nbsp;getNameCount()-1);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     subpath(0, getNameCount()-1);\n+     * }\n@@ -366,1 +366,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -368,1 +368,1 @@\n-     * }<\/pre>\n+     * }\n@@ -422,1 +422,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -424,1 +424,1 @@\n-     * }<\/pre>\n+     * }\n@@ -501,1 +501,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -503,1 +503,1 @@\n-     * }<\/pre>\n+     * }\n@@ -533,1 +533,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -535,1 +535,1 @@\n-     * }<\/pre>\n+     * }\n@@ -560,1 +560,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -562,1 +562,1 @@\n-     * }<\/pre>\n+     * }\n@@ -756,1 +756,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -758,1 +758,1 @@\n-     * }<\/pre>\n+     * }\n@@ -848,3 +848,4 @@\n-     * <pre>\n-     *     watchable.{@link #register(WatchService,WatchEvent.Kind[],WatchEvent.Modifier[]) register}(watcher, events, new WatchEvent.Modifier[0]);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"register\" target=\"Watchable#register\" :\n+     *     register(watcher, events, new WatchEvent.Modifier[0]);\n+     * }\n@@ -855,1 +856,1 @@\n-     * <pre>\n+     * {@snippet lang=java :\n@@ -860,1 +861,1 @@\n-     * <\/pre>\n+     * }\n@@ -864,1 +865,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -866,1 +867,1 @@\n-     * }<\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":28,"deletions":27,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -63,1 +63,1 @@\n- *         for (WatchEvent&lt;?&gt; event: key.pollEvents()) {\n+ *         for (WatchEvent<?> event: key.pollEvents()) {\n@@ -73,1 +73,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/WatchKey.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,3 +100,4 @@\n-     * <pre>\n-     *     watchable.{@link #register(WatchService,WatchEvent.Kind[],WatchEvent.Modifier[]) register}(watcher, events, new WatchEvent.Modifier[0]);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     \/\/ @link substring=\"register\" target=#register(WatchService,WatchEvent.Kind[],WatchEvent.Modifier[]) :\n+     *     register.watcher, events, new WatchEvent.Modifier[0]);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Watchable.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -88,1 +88,1 @@\n- *     List&lt;AclEntry&gt; acl = view.getAcl();\n+ *     List<AclEntry> acl = view.getAcl();\n@@ -91,1 +91,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/AclFileAttributeView.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,5 +156,5 @@\n-     * <pre>\n-     *    Path path = ...\n-     *    FileTime time = ...\n-     *    Files.getFileAttributeView(path, BasicFileAttributeView.class).setTimes(null, time, null);\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     Path path = ...\n+     *     FileTime time = ...\n+     *     Files.getFileAttributeView(path, BasicFileAttributeView.class).setTimes(null, time, null);\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/BasicFileAttributeView.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,4 +36,4 @@\n- * <pre>\n- *    Path file = ...\n- *    BasicFileAttributes attrs = Files.readAttributes(file, BasicFileAttributes.class);\n- * <\/pre>\n+ * {@snippet lang=java :\n+ *     Path file = ...\n+ *     BasicFileAttributes attrs = Files.readAttributes(file, BasicFileAttributes.class);\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/BasicFileAttributes.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,4 +33,4 @@\n- * <pre>\n- *    Path file = ...\n- *    DosFileAttributes attrs = Files.readAttributes(file, DosFileAttributes.class);\n- * <\/pre>\n+ * {@snippet lang=java :\n+ *     Path file = ...\n+ *     DosFileAttributes attrs = Files.readAttributes(file, DosFileAttributes.class);\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/DosFileAttributes.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -69,1 +69,1 @@\n- * <\/pre>\n+ * }\n@@ -121,1 +121,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -123,1 +123,1 @@\n- *     Set&lt;PosixFilePermission&gt; perms =\n+ *     Set<PosixFilePermission> perms =\n@@ -126,1 +126,1 @@\n- * <\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/PosixFileAttributeView.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,3 +112,3 @@\n-     * <pre>\n-     *   Set&lt;PosixFilePermission&gt; perms = PosixFilePermissions.fromString(\"rwxr-x---\");\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     Set<PosixFilePermission> perms = PosixFilePermissions.fromString(\"rwxr-x---\");\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/PosixFilePermissions.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,9 +134,9 @@\n-     * <pre>\n-     *    UserDefinedFileAttributeView view =\n-     *        Files.getFileAttributeView(path, UserDefinedFileAttributeView.class);\n-     *    String name = \"user.mimetype\";\n-     *    ByteBuffer buf = ByteBuffer.allocate(view.size(name));\n-     *    view.read(name, buf);\n-     *    buf.flip();\n-     *    String value = Charset.defaultCharset().decode(buf).toString();\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     UserDefinedFileAttributeView view =\n+     *         Files.getFileAttributeView(path, UserDefinedFileAttributeView.class);\n+     *     String name = \"user.mimetype\";\n+     *     ByteBuffer buf = ByteBuffer.allocate(view.size(name));\n+     *     view.read(name, buf);\n+     *     buf.flip();\n+     *     String value = Charset.defaultCharset().decode(buf).toString();\n+     * }\n@@ -191,5 +191,5 @@\n-     * <pre>\n-     *    UserDefinedFileAttributeView view =\n-     *        Files.getFileAttributeView(path, UserDefinedFileAttributeView.class);\n-     *    view.write(\"user.mimetype\", Charset.defaultCharset().encode(\"text\/html\"));\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     UserDefinedFileAttributeView view =\n+     *         Files.getFileAttributeView(path, UserDefinedFileAttributeView.class);\n+     *     view.write(\"user.mimetype\", Charset.defaultCharset().encode(\"text\/html\"));\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}