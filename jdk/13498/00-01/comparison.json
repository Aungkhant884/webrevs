{"files":[{"patch":"@@ -56,1 +56,1 @@\n-  NOINLINE void* operator new(size_t size);\n+  NOINLINE void* operator new(size_t size) throw();\n@@ -58,1 +58,1 @@\n-  NOINLINE void* operator new [](size_t size);\n+  NOINLINE void* operator new [](size_t size) throw();\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrAllocation.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -285,3 +285,3 @@\n- private:\n-  void* operator new(size_t size) throw() = delete;\n-  void* operator new [](size_t size) throw() = delete;\n+ public:\n+  void* operator new(size_t size) = delete;\n+  void* operator new [](size_t size) = delete;\n@@ -518,2 +518,2 @@\n-  void* operator new [](size_t size) throw() = delete;\n-  void* operator new [](size_t size, const std::nothrow_t& nothrow_constant) throw() = delete;\n+  void* operator new [](size_t size) = delete;\n+  void* operator new [](size_t size, const std::nothrow_t& nothrow_constant) = delete;\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3654,1 +3654,1 @@\n-  JvmtiRawMonitor* rmonitor = new JvmtiRawMonitor(name);\n+  JvmtiRawMonitor* rmonitor = new(std::nothrow) JvmtiRawMonitor(name);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,2 +114,2 @@\n-  void* operator new(size_t size) {\n-    return CHeapObj::operator new(size, std::nothrow);\n+  void* operator new(size_t size, const std::nothrow_t&  nothrow_constant) throw() {\n+    return CHeapObj::operator new(size, nothrow_constant);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRawMonitor.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,9 +61,0 @@\n-void* Thread::allocate(size_t size, bool throw_excpt, MEMFLAGS flags) {\n-  return throw_excpt ? AllocateHeap(size, flags, CURRENT_PC)\n-                       : AllocateHeap(size, flags, CURRENT_PC, AllocFailStrategy::RETURN_NULL);\n-}\n-\n-void Thread::operator delete(void* p) {\n-  FreeHeap(p);\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -203,5 +203,0 @@\n-  void  operator delete(void* p);\n-\n- protected:\n-  static void* allocate(size_t size, bool throw_excpt, MEMFLAGS flags = mtThread);\n-\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}