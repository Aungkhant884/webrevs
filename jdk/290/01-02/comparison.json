{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} AbsentStreamValuesTest.java\n- * @run testng\/othervm --enable-preview AbsentStreamValuesTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview AbsentStreamValuesTest\n+ * @run testng\/othervm AbsentStreamValuesTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy AbsentStreamValuesTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/AbsentStreamValuesTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,2 +30,1 @@\n- * @compile --enable-preview -source ${jdk.version} BadCanonicalCtrTest.java\n- * @run testng\/othervm --enable-preview BadCanonicalCtrTest\n+ * @run testng\/othervm BadCanonicalCtrTest\n@@ -62,1 +61,0 @@\n-    private static final String VERSION = Integer.toString(Runtime.version().feature());\n@@ -82,2 +80,1 @@\n-                    \"public record R1 () implements java.io.Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record R1 () implements java.io.Serializable { }\");\n@@ -92,2 +89,1 @@\n-                    \"public record R2 (int x, int y) implements java.io.Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record R2 (int x, int y) implements java.io.Serializable { }\");\n@@ -104,2 +100,1 @@\n-                    \"    public void readExternal(java.io.ObjectInput in)    { } }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"    public void readExternal(java.io.ObjectInput in)    { } }\");\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/BadCanonicalCtrTest.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} BasicRecordSer.java\n- * @run testng\/othervm --enable-preview BasicRecordSer\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview BasicRecordSer\n+ * @run testng\/othervm BasicRecordSer\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy BasicRecordSer\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/BasicRecordSer.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} ConstructorAccessTest.java\n- * @run testng\/othervm --enable-preview ConstructorAccessTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview ConstructorAccessTest\n+ * @run testng\/othervm ConstructorAccessTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy ConstructorAccessTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/ConstructorAccessTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n- * @compile --enable-preview -source ${jdk.version} ConstructorPermissionTest.java\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview ConstructorPermissionTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy ConstructorPermissionTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/ConstructorPermissionTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} CycleTest.java\n- * @run testng\/othervm --enable-preview CycleTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview CycleTest\n+ * @run testng\/othervm CycleTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy CycleTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/CycleTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} DifferentStreamFieldsTest.java\n- * @run testng\/othervm --enable-preview DifferentStreamFieldsTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview DifferentStreamFieldsTest\n+ * @run testng\/othervm DifferentStreamFieldsTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy DifferentStreamFieldsTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/DifferentStreamFieldsTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,2 +29,1 @@\n- * @compile --enable-preview -source ${jdk.version} ProhibitedMethods.java\n- * @run testng\/othervm --enable-preview ProhibitedMethods\n+ * @run testng\/othervm ProhibitedMethods\n@@ -72,1 +71,0 @@\n-    private static final String VERSION = Integer.toString(Runtime.version().feature());\n@@ -109,2 +107,1 @@\n-                    \"public record Foo () implements java.io.Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record Foo () implements java.io.Serializable { }\");\n@@ -118,2 +115,1 @@\n-                    \"public record Bar (int x, int y) implements java.io.Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record Bar (int x, int y) implements java.io.Serializable { }\");\n@@ -128,2 +124,1 @@\n-                    \"public record Baz<U extends Serializable,V extends Serializable>(U u, V v) implements Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record Baz<U extends Serializable,V extends Serializable>(U u, V v) implements Serializable { }\");\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/ProhibitedMethods.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} ReadResolveTest.java\n- * @run testng\/othervm --enable-preview ReadResolveTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview ReadResolveTest\n+ * @run testng\/othervm ReadResolveTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy ReadResolveTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/ReadResolveTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} RecordClassTest.java\n- * @run testng\/othervm --enable-preview RecordClassTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview RecordClassTest\n+ * @run testng\/othervm RecordClassTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy RecordClassTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/RecordClassTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,2 +29,1 @@\n- * @compile --enable-preview -source ${jdk.version} SerialPersistentFieldsTest.java\n- * @run testng\/othervm --enable-preview SerialPersistentFieldsTest\n+ * @run testng\/othervm SerialPersistentFieldsTest\n@@ -65,1 +64,0 @@\n-    private static final String VERSION = Integer.toString(Runtime.version().feature());\n@@ -86,2 +84,1 @@\n-                    \"public record R1 () implements java.io.Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record R1 () implements java.io.Serializable { }\");\n@@ -99,2 +96,1 @@\n-                    \"public record R2 (int x) implements java.io.Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record R2 (int x) implements java.io.Serializable { }\");\n@@ -109,2 +105,1 @@\n-                    \"public record R3 (int x, int y) implements java.io.Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record R3 (int x, int y) implements java.io.Serializable { }\");\n@@ -118,2 +113,1 @@\n-                    \"public record R4<U extends Serializable,V extends Serializable>(U u, V v) implements Serializable { }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"public record R4<U extends Serializable,V extends Serializable>(U u, V v) implements Serializable { }\");\n@@ -135,2 +129,1 @@\n-                    \"    }  }\",\n-                    \"--enable-preview\", \"-source\", VERSION);\n+                    \"    }  }\");\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/SerialPersistentFieldsTest.java","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} SerialVersionUIDTest.java\n- * @run testng\/othervm --enable-preview SerialVersionUIDTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview SerialVersionUIDTest\n+ * @run testng\/othervm SerialVersionUIDTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy SerialVersionUIDTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/SerialVersionUIDTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,1 @@\n- * @compile --enable-preview -source ${jdk.version} StreamRefTest.java\n- * @run testng\/othervm --enable-preview StreamRefTest\n+ * @run testng\/othervm StreamRefTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/StreamRefTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} ThrowingConstructorTest.java\n- * @run testng\/othervm --enable-preview ThrowingConstructorTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview ThrowingConstructorTest\n+ * @run testng\/othervm ThrowingConstructorTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy ThrowingConstructorTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/ThrowingConstructorTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n- * @compile --enable-preview -source ${jdk.version} UnsharedTest.java\n- * @run testng\/othervm --enable-preview UnsharedTest\n+ * @run testng\/othervm UnsharedTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/UnsharedTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} WriteReplaceTest.java\n- * @run testng\/othervm --enable-preview WriteReplaceTest\n- * @run testng\/othervm\/java.security.policy=empty_security.policy --enable-preview WriteReplaceTest\n+ * @run testng\/othervm WriteReplaceTest\n+ * @run testng\/othervm\/java.security.policy=empty_security.policy WriteReplaceTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/WriteReplaceTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    private static final String VERSION = Integer.toString(Runtime.version().feature());\n-\n@@ -62,1 +60,0 @@\n-                   \"--enable-preview\", \"-source\", VERSION,\n@@ -66,1 +63,0 @@\n-                   \"--enable-preview\", \"-source\", VERSION,\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/migration\/AbstractTest.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @compile --enable-preview -source ${jdk.version} AssignableFrom.java Point.java\n+ * @compile AssignableFrom.java Point.java\n@@ -31,1 +31,1 @@\n- * @run testng\/othervm --enable-preview AssignableFromTest\n+ * @run testng\/othervm AssignableFromTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/migration\/AssignableFromTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @compile --enable-preview -source ${jdk.version} AssignableFrom.java Point.java\n+ * @compile AssignableFrom.java Point.java\n@@ -31,1 +31,1 @@\n- * @run testng\/othervm --enable-preview DefaultValuesTest\n+ * @run testng\/othervm DefaultValuesTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/migration\/DefaultValuesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @compile --enable-preview -source ${jdk.version} AssignableFrom.java Point.java\n+ * @compile AssignableFrom.java Point.java\n@@ -31,1 +31,1 @@\n- * @run testng\/othervm --enable-preview SuperStreamFieldsTest\n+ * @run testng\/othervm SuperStreamFieldsTest\n","filename":"test\/jdk\/java\/io\/Serializable\/records\/migration\/SuperStreamFieldsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} ObjectMethodsTest.java\n- * @run testng\/othervm --enable-preview ObjectMethodsTest\n- * @run testng\/othervm\/java.security.policy=empty.policy --enable-preview ObjectMethodsTest\n+ * @run testng\/othervm ObjectMethodsTest\n+ * @run testng\/othervm\/java.security.policy=empty.policy ObjectMethodsTest\n","filename":"test\/jdk\/java\/lang\/runtime\/ObjectMethodsTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}