{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+import java.io.IOException;\n+import java.io.PrintStream;\n@@ -38,0 +40,4 @@\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -40,0 +46,2 @@\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n@@ -52,10 +60,18 @@\n-    public static void main(String[] args) {\n-        System.out.println(OK_MSG);\n-        \/\/ print all args\n-        List<String> vmArgs = ManagementFactory.getRuntimeMXBean().getInputArguments();\n-        for (String s: vmArgs) {\n-            System.out.println(argString(s));\n-        }\n-        \/\/ print requested sys.props\n-        for (String p: args) {\n-            System.out.println(propString(p, System.getProperty(p)));\n+    \/**\n+     * 1st argument is a filename to redirect application output,\n+     * the rest are names of the properties to dump.\n+     *\/\n+    public static void main(String[] args) throws IOException {\n+        String outFile = args[0];\n+        try (PrintStream out = new PrintStream(outFile, StandardCharsets.UTF_8)) {\n+            out.println(OK_MSG);\n+            \/\/ print all args\n+            List<String> vmArgs = ManagementFactory.getRuntimeMXBean().getInputArguments();\n+            for (String s : vmArgs) {\n+                out.println(argString(s));\n+            }\n+            \/\/ print requested sys.props (skip 1st arg which is output filename)\n+            for (int i=1; i < args.length; i++) {\n+                String p = args[i];\n+                out.println(propString(p, System.getProperty(p)));\n+            }\n@@ -67,1 +83,3 @@\n-    private static final String targ = JbdOptionsTarg.class.getName();\n+    private static final String outFilename = UUID.randomUUID().toString() + \".out\";\n+    private static final Path outPath = Paths.get(outFilename);\n+    private static final String targ = JbdOptionsTarg.class.getName() + \" \" + outFilename;\n@@ -154,0 +172,1 @@\n+\n@@ -157,3 +176,0 @@\n-            OutputAnalyzer out = new OutputAnalyzer(jdb.getJdbOutput());\n-            out.shouldContain(JbdOptionsTarg.OK_MSG);\n-            return new TestResult(out);\n@@ -161,0 +177,8 @@\n+        String output = Files.readAllLines(outPath, StandardCharsets.UTF_8).stream()\n+                .collect(Collectors.joining(System.getProperty(\"line.separator\")));\n+        Files.deleteIfExists(outPath);\n+        System.out.println(\"Debuggee output: [\");\n+        System.out.println(output);\n+        System.out.println(\"]\");\n+        OutputAnalyzer out = new OutputAnalyzer(output);\n+        return new TestResult(out);\n","filename":"test\/jdk\/com\/sun\/jdi\/JdbOptions.java","additions":39,"deletions":15,"binary":false,"changes":54,"status":"modified"}]}