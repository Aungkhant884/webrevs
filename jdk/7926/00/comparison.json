{"files":[{"patch":"@@ -2,1 +2,1 @@\n- *  Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ *  Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-\/* package *\/ class IndirectVarHandle extends VarHandle {\n+\/* package *\/ final class IndirectVarHandle extends VarHandle {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/IndirectVarHandle.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,9 @@\n-abstract class MemoryAccessVarHandleBase extends VarHandle {\n+abstract sealed class MemoryAccessVarHandleBase extends VarHandle permits\n+        MemoryAccessVarHandleByteHelper,\n+        MemoryAccessVarHandleCharHelper,\n+        MemoryAccessVarHandleDoubleHelper,\n+        MemoryAccessVarHandleFloatHelper,\n+        MemoryAccessVarHandleIntHelper,\n+        MemoryAccessVarHandleLongHelper,\n+        MemoryAccessVarHandleShortHelper\n+{\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MemoryAccessVarHandleBase.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.util.HashMap;\n@@ -36,1 +35,0 @@\n-import java.util.Map;\n@@ -39,2 +37,0 @@\n-import java.util.function.BiFunction;\n-import java.util.function.Function;\n@@ -42,1 +38,0 @@\n-import jdk.internal.util.Preconditions;\n@@ -479,1 +474,35 @@\n-public abstract class VarHandle implements Constable {\n+public abstract sealed class VarHandle implements Constable\n+     permits IndirectVarHandle, MemoryAccessVarHandleBase,\n+             VarHandleByteArrayAsChars.ByteArrayViewVarHandle,\n+             VarHandleByteArrayAsDoubles.ByteArrayViewVarHandle,\n+             VarHandleByteArrayAsFloats.ByteArrayViewVarHandle,\n+             VarHandleByteArrayAsInts.ByteArrayViewVarHandle,\n+             VarHandleByteArrayAsLongs.ByteArrayViewVarHandle,\n+             VarHandleByteArrayAsShorts.ByteArrayViewVarHandle,\n+             VarHandleBooleans.Array,\n+             VarHandleBooleans.FieldInstanceReadOnly,\n+             VarHandleBooleans.FieldStaticReadOnly,\n+             VarHandleBytes.Array,\n+             VarHandleBytes.FieldInstanceReadOnly,\n+             VarHandleBytes.FieldStaticReadOnly,\n+             VarHandleChars.Array,\n+             VarHandleChars.FieldInstanceReadOnly,\n+             VarHandleChars.FieldStaticReadOnly,\n+             VarHandleDoubles.Array,\n+             VarHandleDoubles.FieldInstanceReadOnly,\n+             VarHandleDoubles.FieldStaticReadOnly,\n+             VarHandleFloats.Array,\n+             VarHandleFloats.FieldInstanceReadOnly,\n+             VarHandleFloats.FieldStaticReadOnly,\n+             VarHandleInts.Array,\n+             VarHandleInts.FieldInstanceReadOnly,\n+             VarHandleInts.FieldStaticReadOnly,\n+             VarHandleLongs.Array,\n+             VarHandleLongs.FieldInstanceReadOnly,\n+             VarHandleLongs.FieldStaticReadOnly,\n+             VarHandleReferences.Array,\n+             VarHandleReferences.FieldInstanceReadOnly,\n+             VarHandleReferences.FieldStaticReadOnly,\n+             VarHandleShorts.Array,\n+             VarHandleShorts.FieldInstanceReadOnly,\n+             VarHandleShorts.FieldStaticReadOnly {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandle.java","additions":36,"deletions":7,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    static class FieldInstanceReadOnly extends VarHandle {\n+    static sealed class FieldInstanceReadOnly extends VarHandle {\n@@ -384,1 +384,1 @@\n-    static class FieldStaticReadOnly extends VarHandle {\n+    static sealed class FieldStaticReadOnly extends VarHandle {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandle.java.template","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    private static abstract class ByteArrayViewVarHandle extends VarHandle {\n+    static abstract sealed class ByteArrayViewVarHandle extends VarHandle {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandleByteArrayView.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}