{"files":[{"patch":"@@ -251,4 +251,0 @@\n-\/\/ Action_mark - update the BOT for the block [blk_start, blk_end).\n-\/\/               Current typical use is for splitting a block.\n-\/\/ Action_single - udpate the BOT for an allocation.\n-\/\/ Action_verify - BOT verification.\n@@ -258,1 +254,1 @@\n-                                    Action action, bool reducing) {\n+                                    bool reducing) {\n@@ -287,27 +283,7 @@\n-    switch (action) {\n-      case Action_mark: {\n-        if (init_to_zero()) {\n-          _array->set_offset_array(start_index, boundary, blk_start, reducing);\n-          break;\n-        } \/\/ Else fall through to the next case\n-      }\n-      case Action_single: {\n-        _array->set_offset_array(start_index, boundary, blk_start, reducing);\n-        \/\/ We have finished marking the \"offset card\". We need to now\n-        \/\/ mark the subsequent cards that this blk spans.\n-        if (start_index < end_index) {\n-          HeapWord* rem_st = _array->address_for_index(start_index) + BOTConstants::card_size_in_words();\n-          HeapWord* rem_end = _array->address_for_index(end_index) + BOTConstants::card_size_in_words();\n-          set_remainder_to_point_to_start(rem_st, rem_end, reducing);\n-        }\n-        break;\n-      }\n-      case Action_check: {\n-        _array->check_offset_array(start_index, boundary, blk_start);\n-        \/\/ We have finished checking the \"offset card\". We need to now\n-        \/\/ check the subsequent cards that this blk spans.\n-        check_all_cards(start_index + 1, end_index);\n-        break;\n-      }\n-      default:\n-        ShouldNotReachHere();\n+    _array->set_offset_array(start_index, boundary, blk_start, reducing);\n+    \/\/ We have finished marking the \"offset card\". We need to now\n+    \/\/ mark the subsequent cards that this blk spans.\n+    if (start_index < end_index) {\n+      HeapWord* rem_st = _array->address_for_index(start_index) + BOTConstants::card_size_in_words();\n+      HeapWord* rem_end = _array->address_for_index(end_index) + BOTConstants::card_size_in_words();\n+      set_remainder_to_point_to_start(rem_st, rem_end, reducing);\n@@ -325,1 +301,1 @@\n-  do_block_internal(blk_start, blk_end, Action_single);\n+  do_block_internal(blk_start, blk_end);\n","filename":"src\/hotspot\/share\/gc\/shared\/blockOffsetTable.cpp","additions":9,"deletions":33,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -282,8 +282,0 @@\n-  \/\/ The following enums are used by do_block_internal() below\n-  enum Action {\n-    Action_single,      \/\/ BOT records a single block (see single_block())\n-    Action_mark,        \/\/ BOT marks the start of a block (see mark_block())\n-    Action_check        \/\/ Check that BOT records block correctly\n-                        \/\/ (see verify_single_block()).\n-  };\n-\n@@ -318,1 +310,1 @@\n-  void do_block_internal(HeapWord* blk_start, HeapWord* blk_end, Action action, bool reducing = false);\n+  void do_block_internal(HeapWord* blk_start, HeapWord* blk_end, bool reducing = false);\n","filename":"src\/hotspot\/share\/gc\/shared\/blockOffsetTable.hpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"}]}