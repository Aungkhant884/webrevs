{"files":[{"patch":"@@ -303,2 +303,2 @@\n-<p>For aarch64 machines running Windows the minimum accepted version is Visual Studio 2019 (16.8 or higher). For all other platforms the minimum accepted version of Visual Studio is 2017. Older versions will not be accepted by <code>configure<\/code> and will not work. For all platforms the maximum accepted version of Visual Studio is 2022.<\/p>\n-<p>If you have multiple versions of Visual Studio installed, <code>configure<\/code> will by default pick the latest. You can request a specific version to be used by setting <code>--with-toolchain-version<\/code>, e.g. <code>--with-toolchain-version=2017<\/code>.<\/p>\n+<p>The minimum accepted version is Visual Studio 2019 (for aarch64, at least 16.8 is required). Older versions will not be accepted by <code>configure<\/code> and will not work. The maximum accepted version of Visual Studio is 2022.<\/p>\n+<p>If you have multiple versions of Visual Studio installed, <code>configure<\/code> will by default pick the latest. You can request a specific version to be used by setting <code>--with-toolchain-version<\/code>, e.g. <code>--with-toolchain-version=2022<\/code>.<\/p>\n","filename":"doc\/building.html","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -385,4 +385,3 @@\n-For aarch64 machines running Windows the minimum accepted version is Visual Studio 2019\n-(16.8 or higher). For all other platforms the minimum accepted version of\n-Visual Studio is 2017. Older versions will not be accepted by `configure` and will\n-not work. For all platforms the maximum accepted version of Visual Studio is 2022.\n+The minimum accepted version is Visual Studio 2019 (for aarch64, at least 16.8\n+is required). Older versions will not be accepted by `configure` and will not\n+work. The maximum accepted version of Visual Studio is 2022.\n@@ -392,1 +391,1 @@\n-setting `--with-toolchain-version`, e.g. `--with-toolchain-version=2017`.\n+setting `--with-toolchain-version`, e.g. `--with-toolchain-version=2022`.\n","filename":"doc\/building.md","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -171,4 +171,0 @@\n-      if test \"x$TOOLCHAIN_VERSION\" = x2017; then\n-        # VS2017 incorrectly triggers this warning for constexpr\n-        DISABLED_WARNINGS=\"$DISABLED_WARNINGS 4307\"\n-      fi\n","filename":"make\/autoconf\/flags-cflags.m4","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-TOOLCHAIN_MINIMUM_VERSION_microsoft=\"19.10.0.0\" # VS2017\n+TOOLCHAIN_MINIMUM_VERSION_microsoft=\"19.20.0.0\" # VS2019\n","filename":"make\/autoconf\/toolchain.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,15 +28,1 @@\n-VALID_VS_VERSIONS=\"2019 2017 2022\"\n-\n-VS_DESCRIPTION_2017=\"Microsoft Visual Studio 2017\"\n-VS_VERSION_INTERNAL_2017=141\n-VS_MSVCR_2017=vcruntime140.dll\n-VS_MSVCP_2017=msvcp140.dll\n-VS_ENVVAR_2017=\"VS150COMNTOOLS\"\n-VS_USE_UCRT_2017=\"true\"\n-VS_VS_INSTALLDIR_2017=\"Microsoft Visual Studio\/2017\"\n-VS_EDITIONS_2017=\"BuildTools Community Professional Enterprise\"\n-VS_SDK_INSTALLDIR_2017=\n-VS_VS_PLATFORM_NAME_2017=\"v141\"\n-VS_SDK_PLATFORM_NAME_2017=\n-VS_SUPPORTED_2017=true\n-VS_TOOLSET_SUPPORTED_2017=true\n+VALID_VS_VERSIONS=\"2022 2019\"\n@@ -87,1 +73,1 @@\n-      # In VS 2017 and VS 2019, the default installation is in a subdir named after the edition.\n+      # In VS 2019, the default installation is in a subdir named after the edition.\n@@ -175,5 +161,3 @@\n-  # VS2017 provides the option to install previous minor versions of the MSVC\n-  # toolsets. It is not possible to directly download earlier minor versions of\n-  # VS2017 and in order to build with a previous minor compiler toolset version,\n-  # it is now possible to compile with earlier minor versions by passing\n-  # -vcvars_ver=<toolset_version> argument to vcvarsall.bat.\n+  # Since VS2017 MS provides the option to install previous minor versions of\n+  # the toolset. In order to build with a previous minor compiler toolset\n+  # version, pass -vcvars_ver=<toolset_version> argument to vcvarsall.bat.\n@@ -497,8 +481,3 @@\n-      if test \"$VS_VERSION\" -lt 2017; then\n-        # Probe: Using well-known location from Visual Studio 12.0 and older\n-        POSSIBLE_MSVC_DLL=\"$VCINSTALLDIR\/redist\/$vs_target_cpu\/microsoft.vc${VS_VERSION_INTERNAL}.crt\/$DLL_NAME\"\n-      else\n-        # Probe: Using well-known location from VS 2017 and VS 2019\n-        POSSIBLE_MSVC_DLL=\"`ls $VCToolsRedistDir\/$vs_target_cpu\/microsoft.vc${VS_VERSION_INTERNAL}.crt\/$DLL_NAME 2> \/dev\/null`\"\n-      fi\n-      # In case any of the above finds more than one file, loop over them.\n+      # Probe: Using well-known location\n+      POSSIBLE_MSVC_DLL=\"`ls $VCToolsRedistDir\/$vs_target_cpu\/microsoft.vc${VS_VERSION_INTERNAL}.crt\/$DLL_NAME 2> \/dev\/null`\"\n+      # If the above finds more than one file, loop over them.\n","filename":"make\/autoconf\/toolchain_microsoft.m4","additions":9,"deletions":30,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -169,1 +169,0 @@\n-WINDOWS_ONLY(public:) \/\/ VS2017 warns (C2027) use of undefined type if IsPointerConvertible is declared private\n","filename":"src\/hotspot\/share\/runtime\/atomic.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2504,1 +2504,1 @@\n-    freeze_entry = (address)(void*)freeze<SelectedConfigT>;\n+    freeze_entry = (address)freeze<SelectedConfigT>;\n@@ -2507,1 +2507,1 @@\n-    thaw_entry   = (address)(void*)thaw<SelectedConfigT>;\n+    thaw_entry   = (address)thaw<SelectedConfigT>;\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}