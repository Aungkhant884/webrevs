{"files":[{"patch":"@@ -2010,2 +2010,2 @@\n-\/\/ SymbolHashMap is used to find a constant pool index from a string.\n-\/\/ This function fills in SymbolHashMaps, one for utf8s and one for\n+\/\/ SymbolHash is used to find a constant pool index from a string.\n+\/\/ This function fills in SymbolHashs, one for utf8s and one for\n@@ -2013,2 +2013,2 @@\n-jint ConstantPool::hash_entries_to(SymbolHashMap *symmap,\n-                                   SymbolHashMap *classmap) {\n+jint ConstantPool::hash_entries_to(SymbolHash *symmap,\n+                                   SymbolHash *classmap) {\n@@ -2053,1 +2053,1 @@\n-                                   SymbolHashMap* tbl,\n+                                   SymbolHash* tbl,\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -50,2 +50,0 @@\n-class SymbolHashMap;\n-\n@@ -893,0 +891,15 @@\n+  class SymbolHash: public CHeapObj<mtSymbol> {\n+    ResourceHashtable<const Symbol*, u2, 256, ResourceObj::C_HEAP, mtSymbol, Symbol::compute_hash> _table;\n+\n+   public:\n+    void add_if_absent(const Symbol* sym, u2 value) {\n+      bool created;\n+      _table.put_if_absent(sym, value, &created);\n+    }\n+\n+    u2 symbol_to_value(const Symbol* sym) {\n+      u2* value = _table.get(sym);\n+      return (value == nullptr) ? 0 : *value;\n+    }\n+  }; \/\/ End SymbolHash class\n+\n@@ -894,1 +907,1 @@\n-  jint hash_entries_to(SymbolHashMap *symmap, SymbolHashMap *classmap);\n+  jint hash_entries_to(SymbolHash *symmap, SymbolHash *classmap);\n@@ -902,1 +915,1 @@\n-                        SymbolHashMap* tbl,\n+                        SymbolHash* tbl,\n@@ -917,15 +930,0 @@\n-class SymbolHashMap: public CHeapObj<mtSymbol> {\n-  ResourceHashtable<const Symbol*, u2, 256, ResourceObj::C_HEAP, mtSymbol, Symbol::compute_hash> _table;\n-\n- public:\n-  void add_if_absent(const Symbol* sym, u2 value) {\n-    bool created;\n-    _table.put_if_absent(sym, value, &created);\n-  }\n-\n-  u2 symbol_to_value(const Symbol* sym) {\n-    u2* value = _table.get(sym);\n-    return (value == nullptr) ? 0 : *value;\n-  }\n-}; \/\/ End SymbolHashMap class\n-\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -44,2 +44,2 @@\n-  _symmap = new SymbolHashMap();\n-  _classmap = new SymbolHashMap();\n+  _symmap = new ConstantPool::SymbolHash();\n+  _classmap = new ConstantPool::SymbolHash();\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"oops\/constantPool.hpp\"\n@@ -34,2 +35,2 @@\n-  SymbolHashMap*       _symmap;\n-  SymbolHashMap*       _classmap;\n+  ConstantPool::SymbolHash*  _symmap;\n+  ConstantPool::SymbolHash*  _classmap;\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}