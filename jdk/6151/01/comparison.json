{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,1 @@\n+import javax.imageio.IIOException;\n@@ -658,24 +659,28 @@\n-                    switch(dataType) {\n-                    case DataBuffer.TYPE_BYTE:\n-                        byte[] bdata =\n-                            ((DataBufferByte)src.getDataBuffer()).getData();\n-                        stream.write(bdata, pos, destScanlineLength);\n-                        break;\n-\n-                    case DataBuffer.TYPE_SHORT:\n-                        short[] sdata =\n-                            ((DataBufferShort)src.getDataBuffer()).getData();\n-                        stream.writeShorts(sdata, pos, destScanlineLength);\n-                        break;\n-\n-                    case DataBuffer.TYPE_USHORT:\n-                        short[] usdata =\n-                            ((DataBufferUShort)src.getDataBuffer()).getData();\n-                        stream.writeShorts(usdata, pos, destScanlineLength);\n-                        break;\n-\n-                    case DataBuffer.TYPE_INT:\n-                        int[] idata =\n-                            ((DataBufferInt)src.getDataBuffer()).getData();\n-                        stream.writeInts(idata, pos, destScanlineLength);\n-                        break;\n+                    try {\n+                        switch(dataType) {\n+                            case DataBuffer.TYPE_BYTE:\n+                                byte[] bdata =\n+                                    ((DataBufferByte)src.getDataBuffer()).getData();\n+                                stream.write(bdata, pos, destScanlineLength);\n+                                break;\n+\n+                            case DataBuffer.TYPE_SHORT:\n+                                short[] sdata =\n+                                    ((DataBufferShort)src.getDataBuffer()).getData();\n+                                stream.writeShorts(sdata, pos, destScanlineLength);\n+                                break;\n+\n+                            case DataBuffer.TYPE_USHORT:\n+                                short[] usdata =\n+                                    ((DataBufferUShort)src.getDataBuffer()).getData();\n+                                stream.writeShorts(usdata, pos, destScanlineLength);\n+                                break;\n+\n+                            case DataBuffer.TYPE_INT:\n+                                int[] idata =\n+                                    ((DataBufferInt)src.getDataBuffer()).getData();\n+                                stream.writeInts(idata, pos, destScanlineLength);\n+                                break;\n+                            }\n+                    } catch (IndexOutOfBoundsException e) {\n+                        throw new IIOException(\"Invalid buffer length\", e);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/bmp\/BMPImageWriter.java","additions":30,"deletions":25,"binary":false,"changes":55,"status":"modified"},{"filename":"test\/jdk\/javax\/imageio\/plugins\/bmp\/0.png","binary":true,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8262297\n+ * @summary Checks that ImageIO.write(..., ..., File) truncates the file\n+ *\/\n+\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.FileInputStream;\n+import javax.imageio.IIOException;\n+import java.io.InputStream;\n+import javax.imageio.ImageIO;\n+\n+public class TruncatedPngTest {\n+\n+    public static void main(String[] args) {\n+        String fileName = \"0.png\";\n+        String separator = System.getProperty(\"file.separator\");\n+        String dirPath = System.getProperty(\"test.src\", \".\");\n+        String filePath = dirPath + separator + fileName;\n+\n+        boolean passed = false;\n+        File inputFile = new File(filePath);\n+        try (InputStream is = new FileInputStream(inputFile)) {\n+            BufferedImage image = ImageIO.read(is);\n+            ImageIO.write(image, \"bmp\", new File(\"0.bmp\"));\n+        } catch (IIOException e) {\n+            System.out.println(\"Test PASSED.\");\n+            passed = true;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            throw new RuntimeException(\"Unexpected exception!\");\n+        }\n+\n+        if (!passed) {\n+            throw new RuntimeException(\"IIOException was not caught!\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/imageio\/plugins\/bmp\/TruncatedPngTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}