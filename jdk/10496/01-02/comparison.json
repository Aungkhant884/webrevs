{"files":[{"patch":"@@ -1164,6 +1164,6 @@\n-  for (ciSignatureStream str(signature()); !str.is_done(); str.next()) {\n-    if (!str.type()->is_loaded()) {\n-      return true;\n-    }\n-  }\n-  return false;\n+  \/\/ ciSignature is resolved against some accessing class and\n+  \/\/ signature classes aren't required to be local. As a benefit,\n+  \/\/ it makes signature classes visible through loader constraints.\n+  \/\/ So, encountering an unloaded class signals it is absent both in\n+  \/\/ the callee (local) and caller contexts.\n+  return signature()->has_unloaded_classes();\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"ci\/ciStreams.hpp\"\n@@ -49,1 +50,0 @@\n-  int count = 0;\n@@ -51,3 +51,1 @@\n-  Symbol* sh = symbol->get_symbol();\n-  SignatureStream ss(sh);\n-  for (; ; ss.next()) {\n+  for (SignatureStream ss(symbol->get_symbol()); !ss.is_done(); ss.next()) {\n@@ -55,4 +53,2 @@\n-    ciType* type;\n-    if (!ss.is_reference()) {\n-      type = ciType::make(ss.type());\n-    } else {\n+    ciType* type = NULL;\n+    if (ss.is_reference()) {\n@@ -61,0 +57,2 @@\n+    } else {\n+      type = ciType::make(ss.type());\n@@ -65,1 +63,3 @@\n-      break;\n+    } else {\n+      _types.append(type);\n+      size += type->size();\n@@ -67,2 +67,0 @@\n-    _types.append(type);\n-    size += type->size();\n@@ -100,0 +98,16 @@\n+\/\/ ------------------------------------------------------------------\n+\/\/ ciSignature::has_unloaded_classes\n+\/\/\n+\/\/ Reports if there are any unloaded classes present in the signature.\n+\/\/ Each ciSignature when instantiated is resolved against some accessing class\n+\/\/ and the resolved classes aren't required to be local, but can be revealed\n+\/\/ through loader constraints.\n+bool ciSignature::has_unloaded_classes() {\n+  for (ciSignatureStream str(this); !str.is_done(); str.next()) {\n+    if (!str.type()->is_loaded()) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/ci\/ciSignature.cpp","additions":25,"deletions":11,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+  bool has_unloaded_classes();\n+\n","filename":"src\/hotspot\/share\/ci\/ciSignature.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}