{"files":[{"patch":"@@ -1648,0 +1648,1 @@\n+    _gc_tracer_cm->report_gc_reference_process_time(pt.total_time_ms());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -293,0 +293,1 @@\n+    scope()->tracer()->report_gc_reference_process_time(pt.total_time_ms());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -945,0 +945,1 @@\n+  gc_tracer_stw()->report_gc_reference_process_time(pt.total_time_ms());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2041,0 +2041,1 @@\n+    gc_tracer->report_gc_reference_process_time(pt.total_time_ms());\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -475,0 +475,1 @@\n+      _gc_tracer.report_gc_reference_process_time(pt.total_time_ms());\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -595,0 +595,1 @@\n+  _gc_tracer->report_gc_reference_process_time(pt.total_time_ms());\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -206,0 +206,1 @@\n+    gc_tracer()->report_gc_reference_process_time(pt.total_time_ms());\n","filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -75,0 +75,1 @@\n+}\n@@ -76,1 +77,2 @@\n-  send_reference_processing_time_event(rps.total_process_time());\n+void GCTracer::report_gc_reference_process_time(const double total_time_ms) const {\n+  send_reference_processing_time_event(total_time_ms);\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTrace.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,0 +105,1 @@\n+  void report_gc_reference_process_time(const double total_time) const;\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTrace.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -227,2 +227,1 @@\n-                                phase_times.ref_discovered(REF_PHANTOM),\n-                                phase_times.total_time_ms());\n+                                phase_times.ref_discovered(REF_PHANTOM));\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-  double _total_process_time;\n@@ -46,2 +45,1 @@\n-    _phantom_count(0),\n-    _total_process_time(0.0) {}\n+    _phantom_count(0) {}\n@@ -56,14 +54,1 @@\n-    _phantom_count(phantom_count),\n-    _total_process_time(0.0)\n-  {}\n-\n-  ReferenceProcessorStats(size_t soft_count,\n-                          size_t weak_count,\n-                          size_t final_count,\n-                          size_t phantom_count,\n-                          double total_process_time) :\n-    _soft_count(soft_count),\n-    _weak_count(weak_count),\n-    _final_count(final_count),\n-    _phantom_count(phantom_count),\n-    _total_process_time(total_process_time)\n+    _phantom_count(phantom_count)\n@@ -87,4 +72,0 @@\n-\n-  double total_process_time() const{\n-    return _total_process_time;\n-  }\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessorStats.hpp","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -498,0 +498,2 @@\n+  double start_time = os::elapsedTime();\n+\n@@ -508,0 +510,2 @@\n+  _total_processing_time_ms = (os::elapsedTime() - start_time) * 1000;\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -140,0 +140,1 @@\n+  double _total_processing_time_ms;\n@@ -186,0 +187,2 @@\n+  double total_processing_time() const { return _total_processing_time_ms; }\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,0 +72,1 @@\n+  _tracer->report_gc_reference_process_time(_heap->ref_processor()->total_processing_time());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -426,0 +426,2 @@\n+  double start_time = os::elapsedTime();\n+\n@@ -435,0 +437,2 @@\n+\n+  ZTracer::tracer()->report_gc_reference_process_time((os::elapsedTime() - start_time) * 1000);\n","filename":"src\/hotspot\/share\/gc\/z\/zReferenceProcessor.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}