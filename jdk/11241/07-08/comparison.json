{"files":[{"patch":"@@ -41,8 +41,10 @@\n- * A comma-separated list of normally restricted HTTP header names that users may set in HTTP requests\n- * or by user code in HttpRequest instances. By default, the following request headers are not allowed\n- * to be set by user code: connection, content-length, expect, host, and upgrade. You can override this\n- * behavior with this property. The names are case-insensitive and whitespace is ignored. Note that this\n- * property is intended for testing and not for real-world deployments. Protocol errors or other undefined\n- * behavior are likely to occur when using this property. There may be other headers that are restricted\n- * from being set depending on the context. This includes the \"Authorization\" header when the relevant\n- * HttpClient has an authenticator set. These restrictions cannot be overridden by this property.\n+ * A comma-separated list of normally restricted HTTP header names that users may set in HTTP\n+ * requests or by user code in HttpRequest instances. By default, the following request\n+ * headers are not allowed to be set by user code: connection, content-length, expect, host,\n+ * and upgrade. You can override this behavior with this property. The names are case-insensitive\n+ * and whitespace is ignored. Note that this property is intended for testing and not for\n+ * real-world deployments. Protocol errors or other undefined behavior are likely to occur\n+ * when using this property. There may be other headers that are restricted from being set\n+ * depending on the context. This includes the \"Authorization\" header when the relevant\n+ * HttpClient has an authenticator set. These restrictions cannot be overridden by this\n+ * property.\n@@ -54,2 +56,2 @@\n- * The maximum number of connections to keep in the HTTP\/1.1 keep alive cache. A value of 0 means that\n- * the cache is unbounded.\n+ * The maximum number of connections to keep in the HTTP\/1.1 keep alive cache. A value of 0\n+ * means that the cache is unbounded.\n@@ -58,2 +60,2 @@\n- * The HTTP\/2 client connection window size in bytes. The maximum size is 2^31-1. This value cannot be\n- * smaller than the stream window size, which can be configured through the\n+ * The HTTP\/2 client connection window size in bytes. The maximum size is 2^31-1. This value\n+ * cannot be smaller than the stream window size, which can be configured through the\n@@ -63,2 +65,2 @@\n- * Whether automatic retry of connection failures is disabled. If false, then retries are attempted\n- * (subject to the retry limit).\n+ * Whether automatic retry of connection failures is disabled. If false, then retries are\n+ * attempted (subject to the retry limit).\n@@ -70,1 +72,2 @@\n- * Whether HTTP\/2 push promise is enabled. A value of 1 enables push promise; a value of 0 disables it.\n+ * Whether HTTP\/2 push promise is enabled. A value of 1 enables push promise; a value of 0\n+ * disables it.\n@@ -72,2 +75,2 @@\n- * <li><p><b>{@systemProperty jdk.httpclient.hpack.maxheadertablesize}<\/b> (default: 16384 or 16 kB)<br>\n- * The HTTP\/2 client maximum HPACK header table size in bytes.\n+ * <li><p><b>{@systemProperty jdk.httpclient.hpack.maxheadertablesize}<\/b> (default: 16384 or\n+ * 16 kB)<br> The HTTP\/2 client maximum HPACK header table size in bytes.\n@@ -76,2 +79,3 @@\n- * Enables high-level logging of various events through the {@link java.lang.System.Logger Platform Logging\n- * API}.The value contains a comma-separated list of any of the following items:\n+ * Enables high-level logging of various events through the {@link java.lang.System.Logger\n+ * Platform Logging API}.The value contains a comma-separated list of any of the\n+ * following items:\n@@ -95,2 +99,2 @@\n- * Specifying an item adds it to the HTTP client's log. For example, if you specify the following value,\n- * then the Platform Logging API logs all possible HTTP Client events:<br>\n+ * Specifying an item adds it to the HTTP client's log. For example, if you specify the\n+ * following value, then the Platform Logging API logs all possible HTTP Client events:<br>\n@@ -102,3 +106,3 @@\n- * The number of seconds to keep idle HTTP connections alive in the keep alive cache. This property\n- * applies to both HTTP\/1.1 and HTTP\/2. The value for HTTP\/2 can be overridden with the\n- * {@code jdk.httpclient.keepalive.timeout.h2 property}.\n+ * The number of seconds to keep idle HTTP connections alive in the keep alive cache. This\n+ * property applies to both HTTP\/1.1 and HTTP\/2. The value for HTTP\/2 can be overridden\n+ * with the {@code jdk.httpclient.keepalive.timeout.h2 property}.\n@@ -106,2 +110,2 @@\n- * <li><p><b>{@systemProperty jdk.httpclient.keepalive.timeout.h2}<\/b> (default: see below)<br>\n- * The number of seconds to keep idle HTTP\/2 connections alive. If not set, then the\n+ * <li><p><b>{@systemProperty jdk.httpclient.keepalive.timeout.h2}<\/b> (default: see\n+ * below)<br>The number of seconds to keep idle HTTP\/2 connections alive. If not set, then the\n@@ -111,1 +115,2 @@\n- * The HTTP\/2 client maximum frame size in bytes. The server is not permitted to send a frame larger than this.\n+ * The HTTP\/2 client maximum frame size in bytes. The server is not permitted to send a frame\n+ * larger than this.\n@@ -114,1 +119,2 @@\n- * The maximum number of HTTP\/2 push streams that the client will permit servers to open simultaneously.\n+ * The maximum number of HTTP\/2 push streams that the client will permit servers to open\n+ * simultaneously.\n@@ -116,3 +122,3 @@\n- * <li><p><b>{@systemProperty jdk.httpclient.receiveBufferSize}<\/b> (default: operating system default)<br>\n- * The HTTP client <a href=\"..\/java.base\/java\/net\/StandardSocketOptions.html#SO_RCVBUF\">socket receive\n- * buffer size<\/a> in bytes.\n+ * <li><p><b>{@systemProperty jdk.httpclient.receiveBufferSize}<\/b> (default: operating system\n+ * default)<br>The HTTP client <a href=\"..\/java.base\/java\/net\/StandardSocketOptions.html#SO_RCVBUF\">\n+ * socket receive buffer size<\/a> in bytes.\n@@ -121,1 +127,2 @@\n- * The maximum number of attempts to send a HTTP request when redirected or any failure occurs for any reason.\n+ * The maximum number of attempts to send a HTTP request when redirected or any failure occurs\n+ * for any reason.\n@@ -123,2 +130,2 @@\n- * <li><p><b>{@systemProperty jdk.httpclient.websocket.writeBufferSize}<\/b> (default: 16384 or 16kB)<br>\n- * The buffer size used by the web socket implementation for socket writes.\n+ * <li><p><b>{@systemProperty jdk.httpclient.websocket.writeBufferSize}<\/b> (default: 16384\n+ * or 16kB)<br>The buffer size used by the web socket implementation for socket writes.\n@@ -130,1 +137,2 @@\n- * The number of attempts the Basic authentication filter will attempt to retry a failed authentication.\n+ * The number of attempts the Basic authentication filter will attempt to retry a failed\n+ * authentication.\n@@ -132,3 +140,4 @@\n- * <li><p><b>{@systemProperty jdk.httpclient.sendBufferSize}<\/b> (default: operating system default)<br>\n- * The HTTP client socket <a href=\"..\/java.base\/java\/net\/StandardSocketOptions.html#SO_SNDBUF\">send\n- * buffer size<\/a>. Values less than or equal to zero are ignored.\n+ * <li><p><b>{@systemProperty jdk.httpclient.sendBufferSize}<\/b> (default: operating system\n+ * default)<br>The HTTP client socket\n+ * <a href=\"..\/java.base\/java\/net\/StandardSocketOptions.html#SO_SNDBUF\">send buffer size<\/a>.\n+ * Values less than or equal to zero are ignored.\n@@ -136,3 +145,3 @@\n- * <li><p><b>{@systemProperty jdk.internal.httpclient.disableHostnameVerification}<\/b> (default: false)<br>\n- * If true (or set to an empty string), hostname verification in SSL certificates is disabled.\n- * This is a system property only and not available in {@code conf\/net.properties}.\n+ * <li><p><b>{@systemProperty jdk.internal.httpclient.disableHostnameVerification}<\/b> (default:\n+ * false)<br>If true (or set to an empty string), hostname verification in SSL certificates\n+ * is disabled. This is a system property only and not available in {@code conf\/net.properties}.\n@@ -141,3 +150,3 @@\n- * <li><p><b>{@systemProperty jdk.http.auth.proxying.disabledSchemes}<\/b> (default: see conf\/net.properties)<br>\n- * A comma separated list of HTTP authentication scheme names, that are disallowed for use by\n- * the HTTP client implementation, for HTTP proxying.\n+ * <li><p><b>{@systemProperty jdk.http.auth.proxying.disabledSchemes}<\/b> (default: see\n+ * conf\/net.properties)<br>A comma separated list of HTTP authentication scheme names,\n+ * that are disallowed for use by the HTTP client implementation, for HTTP proxying.\n@@ -145,3 +154,3 @@\n- * <li><p><b>{@systemProperty jdk.http.auth.tunneling.disabledSchemes}<\/b> (default: see conf\/net.properties)<br>\n- * A comma separated list of HTTP authentication scheme names, that are disallowed for use by\n- * the HTTP client implementation, for HTTP CONNECT tunneling.\n+ * <li><p><b>{@systemProperty jdk.http.auth.tunneling.disabledSchemes}<\/b> (default: see\n+ * conf\/net.properties)<br>A comma separated list of HTTP authentication scheme names, that\n+ * are disallowed for use by the HTTP client implementation, for HTTP CONNECT tunneling.\n","filename":"src\/java.net.http\/share\/classes\/module-info.java","additions":56,"deletions":47,"binary":false,"changes":103,"status":"modified"}]}