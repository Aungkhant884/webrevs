{"files":[{"patch":"@@ -122,1 +122,1 @@\n-        byte[] keyBlock = new byte[keyBlockLen];\n+        byte[] keyBlock;\n@@ -185,0 +185,2 @@\n+\n+            Arrays.fill(tmp, (byte)0);\n@@ -202,36 +204,5 @@\n-        if (isExportable == false) {\n-            \/\/ cipher keys\n-            clientCipherKey = new SecretKeySpec(clientKeyBytes, alg);\n-            serverCipherKey = new SecretKeySpec(serverKeyBytes, alg);\n-\n-            \/\/ IV keys if needed.\n-            if (ivLength != 0) {\n-                byte[] tmp = new byte[ivLength];\n-\n-                System.arraycopy(keyBlock, ofs, tmp, 0, ivLength);\n-                ofs += ivLength;\n-                clientIv = new IvParameterSpec(tmp);\n-\n-                System.arraycopy(keyBlock, ofs, tmp, 0, ivLength);\n-                ofs += ivLength;\n-                serverIv = new IvParameterSpec(tmp);\n-            }\n-        } else {\n-            \/\/ if exportable suites, calculate the alternate\n-            \/\/ cipher key expansion and IV generation\n-            if (protocolVersion >= 0x0302) {\n-                \/\/ TLS 1.1+\n-                throw new RuntimeException(\n-                    \"Internal Error:  TLS 1.1+ should not be negotiating\" +\n-                    \"exportable ciphersuites\");\n-            } else if (protocolVersion == 0x0301) {\n-                \/\/ TLS 1.0\n-                byte[] seed = concat(clientRandom, serverRandom);\n-\n-                byte[] tmp = doTLS10PRF(clientKeyBytes,\n-                    LABEL_CLIENT_WRITE_KEY, seed, expandedKeyLength, md5, sha);\n-                clientCipherKey = new SecretKeySpec(tmp, alg);\n-\n-                tmp = doTLS10PRF(serverKeyBytes, LABEL_SERVER_WRITE_KEY, seed,\n-                            expandedKeyLength, md5, sha);\n-                serverCipherKey = new SecretKeySpec(tmp, alg);\n+        try {\n+            if (isExportable == false) {\n+                \/\/ cipher keys\n+                clientCipherKey = new SecretKeySpec(clientKeyBytes, alg);\n+                serverCipherKey = new SecretKeySpec(serverKeyBytes, alg);\n@@ -239,0 +210,1 @@\n+                \/\/ IV keys if needed.\n@@ -240,4 +212,4 @@\n-                    tmp = new byte[ivLength];\n-                    byte[] block = doTLS10PRF(null, LABEL_IV_BLOCK, seed,\n-                                ivLength << 1, md5, sha);\n-                    System.arraycopy(block, 0, tmp, 0, ivLength);\n+                    byte[] tmp = new byte[ivLength];\n+\n+                    System.arraycopy(keyBlock, ofs, tmp, 0, ivLength);\n+                    ofs += ivLength;\n@@ -245,1 +217,3 @@\n-                    System.arraycopy(block, ivLength, tmp, 0, ivLength);\n+\n+                    System.arraycopy(keyBlock, ofs, tmp, 0, ivLength);\n+                    ofs += ivLength;\n@@ -249,14 +223,20 @@\n-                \/\/ SSLv3\n-                byte[] tmp = new byte[expandedKeyLength];\n-\n-                md5.update(clientKeyBytes);\n-                md5.update(clientRandom);\n-                md5.update(serverRandom);\n-                System.arraycopy(md5.digest(), 0, tmp, 0, expandedKeyLength);\n-                clientCipherKey = new SecretKeySpec(tmp, alg);\n-\n-                md5.update(serverKeyBytes);\n-                md5.update(serverRandom);\n-                md5.update(clientRandom);\n-                System.arraycopy(md5.digest(), 0, tmp, 0, expandedKeyLength);\n-                serverCipherKey = new SecretKeySpec(tmp, alg);\n+                \/\/ if exportable suites, calculate the alternate\n+                \/\/ cipher key expansion and IV generation\n+                if (protocolVersion >= 0x0302) {\n+                    \/\/ TLS 1.1+\n+                    throw new RuntimeException(\n+                            \"Internal Error:  TLS 1.1+ should not be negotiating\" +\n+                                    \"exportable ciphersuites\");\n+                } else if (protocolVersion == 0x0301) {\n+                    \/\/ TLS 1.0\n+                    byte[] seed = concat(clientRandom, serverRandom);\n+\n+                    byte[] tmp = doTLS10PRF(clientKeyBytes,\n+                            LABEL_CLIENT_WRITE_KEY, seed, expandedKeyLength, md5, sha);\n+                    clientCipherKey = new SecretKeySpec(tmp, alg);\n+                    Arrays.fill(tmp, (byte) 0);\n+\n+                    tmp = doTLS10PRF(serverKeyBytes, LABEL_SERVER_WRITE_KEY, seed,\n+                            expandedKeyLength, md5, sha);\n+                    serverCipherKey = new SecretKeySpec(tmp, alg);\n+                    Arrays.fill(tmp, (byte) 0);\n@@ -264,2 +244,13 @@\n-                if (ivLength != 0) {\n-                    tmp = new byte[ivLength];\n+                    if (ivLength != 0) {\n+                        tmp = new byte[ivLength];\n+                        byte[] block = doTLS10PRF(null, LABEL_IV_BLOCK, seed,\n+                                ivLength << 1, md5, sha);\n+                        System.arraycopy(block, 0, tmp, 0, ivLength);\n+                        clientIv = new IvParameterSpec(tmp);\n+                        System.arraycopy(block, ivLength, tmp, 0, ivLength);\n+                        serverIv = new IvParameterSpec(tmp);\n+                    }\n+                } else {\n+                    \/\/ SSLv3\n+                    byte[] tmp = new byte[expandedKeyLength];\n+                    byte[] digest;\n@@ -267,0 +258,1 @@\n+                    md5.update(clientKeyBytes);\n@@ -269,2 +261,4 @@\n-                    System.arraycopy(md5.digest(), 0, tmp, 0, ivLength);\n-                    clientIv = new IvParameterSpec(tmp);\n+                    digest = md5.digest();\n+                    System.arraycopy(digest, 0, tmp, 0, expandedKeyLength);\n+                    clientCipherKey = new SecretKeySpec(tmp, alg);\n+                    Arrays.fill(digest, (byte) 0);\n@@ -272,0 +266,1 @@\n+                    md5.update(serverKeyBytes);\n@@ -274,2 +269,20 @@\n-                    System.arraycopy(md5.digest(), 0, tmp, 0, ivLength);\n-                    serverIv = new IvParameterSpec(tmp);\n+                    digest = md5.digest();\n+                    System.arraycopy(digest, 0, tmp, 0, expandedKeyLength);\n+                    serverCipherKey = new SecretKeySpec(tmp, alg);\n+                    Arrays.fill(digest, (byte) 0);\n+\n+                    Arrays.fill(tmp, (byte) 0);\n+\n+                    if (ivLength != 0) {\n+                        tmp = new byte[ivLength];\n+\n+                        md5.update(clientRandom);\n+                        md5.update(serverRandom);\n+                        System.arraycopy(md5.digest(), 0, tmp, 0, ivLength);\n+                        clientIv = new IvParameterSpec(tmp);\n+\n+                        md5.update(serverRandom);\n+                        md5.update(clientRandom);\n+                        System.arraycopy(md5.digest(), 0, tmp, 0, ivLength);\n+                        serverIv = new IvParameterSpec(tmp);\n+                    }\n@@ -278,0 +291,4 @@\n+        } finally {\n+            Arrays.fill(serverKeyBytes, (byte) 0);\n+            Arrays.fill(clientKeyBytes, (byte) 0);\n+            Arrays.fill(keyBlock, (byte) 0);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/TlsKeyMaterialGenerator.java","additions":79,"deletions":62,"binary":false,"changes":141,"status":"modified"}]}