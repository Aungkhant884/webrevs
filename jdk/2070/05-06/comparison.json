{"files":[{"patch":"@@ -692,0 +692,1 @@\n+            \/\/ erase the previous values in sessionK\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESCrypt.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2013, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESedeKeyGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Arrays;\n@@ -89,0 +90,1 @@\n+        byte[] masterSecret = spec.getMasterSecret().getEncoded();\n@@ -90,1 +92,1 @@\n-            return engineGenerateKey0();\n+            return engineGenerateKey0(masterSecret);\n@@ -93,0 +95,2 @@\n+        } finally {\n+            Arrays.fill(masterSecret, (byte)0);\n@@ -97,2 +101,1 @@\n-    private SecretKey engineGenerateKey0() throws GeneralSecurityException {\n-        byte[] masterSecret = spec.getMasterSecret().getEncoded();\n+    private SecretKey engineGenerateKey0(byte[] masterSecret) throws GeneralSecurityException {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/TlsKeyMaterialGenerator.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Arrays;\n@@ -138,0 +139,1 @@\n+                    sha.reset();\n@@ -142,0 +144,1 @@\n+                    md5.reset();\n@@ -143,1 +146,0 @@\n-\n@@ -145,1 +147,2 @@\n-\n+            \/\/ master is referenced inside the TlsMasterSecretKey.\n+            \/\/ Do not touch it anymore.\n@@ -152,0 +155,4 @@\n+        } finally {\n+            if (premaster != null) {\n+                Arrays.fill(premaster, (byte)0);\n+            }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/TlsMasterSecretGenerator.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,1 +165,5 @@\n-            return new SecretKeySpec(prfBytes, \"TlsPrf\");\n+            try {\n+                return new SecretKeySpec(prfBytes, \"TlsPrf\");\n+            } finally {\n+                Arrays.fill(prfBytes, (byte)0);\n+            }\n@@ -168,0 +172,4 @@\n+        } finally {\n+            if (secret != null) {\n+                Arrays.fill(secret, (byte) 0);\n+            }\n@@ -260,0 +268,1 @@\n+            md5.reset();\n@@ -270,0 +279,1 @@\n+            sha.reset();\n@@ -354,0 +364,2 @@\n+            digest.reset();\n+\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/TlsPrfGenerator.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Arrays;\n@@ -90,1 +91,5 @@\n-        return new SecretKeySpec(b, \"TlsRsaPremasterSecret\");\n+        try {\n+            return new SecretKeySpec(b, \"TlsRsaPremasterSecret\");\n+        } finally {\n+            Arrays.fill(b, (byte)0);\n+        }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/TlsRsaPremasterSecretGenerator.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}