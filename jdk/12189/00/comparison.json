{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,1 +175,1 @@\n-  if (op->arg(0) != NULL) {\n+  if (op->arg(0) != nullptr) {\n@@ -222,1 +222,1 @@\n-  if (path == NULL || path[0] == '\\0') {\n+  if (path == nullptr || path[0] == '\\0') {\n@@ -227,1 +227,1 @@\n-    if (arg1 != NULL && (strlen(arg1) > 0)) {\n+    if (arg1 != nullptr && (strlen(arg1) > 0)) {\n@@ -237,1 +237,1 @@\n-    if (num_str != NULL && num_str[0] != '\\0') {\n+    if (num_str != nullptr && num_str[0] != '\\0') {\n@@ -264,1 +264,1 @@\n-\/\/   arg1: Name of the dump file or NULL\n+\/\/   arg1: Name of the dump file or null\n@@ -268,2 +268,2 @@\n-  outputStream* os = out;   \/\/ if path not specified or path is NULL, use out\n-  fileStream* fs = NULL;\n+  outputStream* os = out;   \/\/ if path not specified or path is null, use out\n+  fileStream* fs = nullptr;\n@@ -272,1 +272,1 @@\n-  if (arg0 != NULL && (strlen(arg0) > 0)) {\n+  if (arg0 != nullptr && (strlen(arg0) > 0)) {\n@@ -281,1 +281,1 @@\n-  if (path != NULL && path[0] != '\\0') {\n+  if (path != nullptr && path[0] != '\\0') {\n@@ -284,1 +284,1 @@\n-    if (fs == NULL) {\n+    if (fs == nullptr) {\n@@ -291,1 +291,1 @@\n-  if (num_str != NULL && num_str[0] != '\\0') {\n+  if (num_str != nullptr && num_str[0] != '\\0') {\n@@ -303,1 +303,1 @@\n-  if (os != NULL && os != out) {\n+  if (os != nullptr && os != out) {\n@@ -313,2 +313,2 @@\n-  const char* name = NULL;\n-  if ((name = op->arg(0)) == NULL) {\n+  const char* name = nullptr;\n+  if ((name = op->arg(0)) == nullptr) {\n@@ -339,2 +339,2 @@\n-  const char* name = NULL;\n-  if ((name = op->arg(0)) == NULL) {\n+  const char* name = nullptr;\n+  if ((name = op->arg(0)) == nullptr) {\n@@ -368,1 +368,1 @@\n-  { NULL,               NULL }\n+  { nullptr,            nullptr }\n@@ -381,1 +381,1 @@\n-  assert(thread->stack_base() != NULL && thread->stack_size() > 0,\n+  assert(thread->stack_base() != nullptr && thread->stack_size() > 0,\n@@ -392,1 +392,1 @@\n-    if (op == NULL) {\n+    if (op == nullptr) {\n@@ -410,2 +410,2 @@\n-      AttachOperationFunctionInfo* info = NULL;\n-      for (int i=0; funcs[i].name != NULL; i++) {\n+      AttachOperationFunctionInfo* info = nullptr;\n+      for (int i=0; funcs[i].name != nullptr; i++) {\n@@ -421,1 +421,1 @@\n-      if (info == NULL) {\n+      if (info == nullptr) {\n@@ -425,1 +425,1 @@\n-      if (info != NULL) {\n+      if (info != nullptr) {\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,1 +171,1 @@\n-    if (arg == NULL) {\n+    if (arg == nullptr) {\n@@ -185,1 +185,1 @@\n-      set_arg(i, NULL);\n+      set_arg(i, nullptr);\n","filename":"src\/hotspot\/share\/services\/attachListener.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    char* data = NULL;                              \\\n+    char* data = nullptr;                           \\\n@@ -51,1 +51,1 @@\n-    if (name != NULL) {                             \\\n+    if (name != nullptr) {                          \\\n@@ -67,4 +67,4 @@\n-PerfCounter*    ClassLoadingService::_classes_loaded_count = NULL;\n-PerfCounter*    ClassLoadingService::_classes_unloaded_count = NULL;\n-PerfCounter*    ClassLoadingService::_classbytes_loaded = NULL;\n-PerfCounter*    ClassLoadingService::_classbytes_unloaded = NULL;\n+PerfCounter*    ClassLoadingService::_classes_loaded_count = nullptr;\n+PerfCounter*    ClassLoadingService::_classes_unloaded_count = nullptr;\n+PerfCounter*    ClassLoadingService::_classbytes_loaded = nullptr;\n+PerfCounter*    ClassLoadingService::_classbytes_unloaded = nullptr;\n@@ -73,5 +73,5 @@\n-PerfCounter*    ClassLoadingService::_shared_classes_loaded_count = NULL;\n-PerfCounter*    ClassLoadingService::_shared_classes_unloaded_count = NULL;\n-PerfCounter*    ClassLoadingService::_shared_classbytes_loaded = NULL;\n-PerfCounter*    ClassLoadingService::_shared_classbytes_unloaded = NULL;\n-PerfVariable*   ClassLoadingService::_class_methods_size = NULL;\n+PerfCounter*    ClassLoadingService::_shared_classes_loaded_count = nullptr;\n+PerfCounter*    ClassLoadingService::_shared_classes_unloaded_count = nullptr;\n+PerfCounter*    ClassLoadingService::_shared_classbytes_loaded = nullptr;\n+PerfCounter*    ClassLoadingService::_shared_classbytes_unloaded = nullptr;\n+PerfVariable*   ClassLoadingService::_class_methods_size = nullptr;\n@@ -183,1 +183,1 @@\n-    if (k->transitive_interfaces() != NULL) {\n+    if (k->transitive_interfaces() != nullptr) {\n","filename":"src\/hotspot\/share\/services\/classLoadingService.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-  assert(_array != NULL, \"Sanity check\");\n+  assert(_array != nullptr, \"Sanity check\");\n@@ -46,1 +46,1 @@\n-  if (str != NULL) {\n+  if (str != nullptr) {\n@@ -87,1 +87,1 @@\n-  jio_snprintf(buf, len, \"%s\", (c != NULL) ? c : \"\");\n+  jio_snprintf(buf, len, \"%s\", (c != nullptr) ? c : \"\");\n@@ -114,1 +114,1 @@\n-  if (str == NULL\n+  if (str == nullptr\n@@ -122,1 +122,1 @@\n-      (str == NULL ? \"<null>\" : str),\n+      (str == nullptr ? \"<null>\" : str),\n@@ -183,2 +183,2 @@\n-  if (str == NULL) {\n-    _value = NULL;\n+  if (str == nullptr) {\n+    _value = nullptr;\n@@ -193,1 +193,1 @@\n-  if (has_default() && _default_string != NULL) {\n+  if (has_default() && _default_string != nullptr) {\n@@ -199,1 +199,1 @@\n-    set_value(NULL);\n+    set_value(nullptr);\n@@ -205,1 +205,1 @@\n-  set_value(NULL);\n+  set_value(nullptr);\n@@ -210,1 +210,1 @@\n-  if (str == NULL) {\n+  if (str == nullptr) {\n@@ -299,1 +299,1 @@\n-  if (_value != NULL) {\n+  if (_value != nullptr) {\n@@ -301,1 +301,1 @@\n-    set_value(NULL);\n+    set_value(nullptr);\n@@ -307,1 +307,1 @@\n-  if (str == NULL) {\n+  if (str == nullptr) {\n","filename":"src\/hotspot\/share\/services\/diagnosticArgument.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    : _next(NULL), _name(name), _description(description), _type(type),\n+    : _next(nullptr), _name(name), _description(description), _type(type),\n@@ -86,2 +86,2 @@\n-  bool has_value() const          { return _is_set || _default_string != NULL; }\n-  bool has_default() const        { return _default_string != NULL; }\n+  bool has_value() const          { return _is_set || _default_string != nullptr; }\n+  bool has_default() const        { return _default_string != nullptr; }\n@@ -115,1 +115,1 @@\n-               GenDCmdArgument(name, description, type, NULL, mandatory) { }\n+               GenDCmdArgument(name, description, type, nullptr, mandatory) { }\n","filename":"src\/hotspot\/share\/services\/diagnosticArgument.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -190,1 +190,1 @@\n-    DCmd* cmd = NULL;\n+    DCmd* cmd = nullptr;\n@@ -193,1 +193,1 @@\n-    if (factory != NULL) {\n+    if (factory != nullptr) {\n@@ -199,2 +199,2 @@\n-      if(p._class != NULL) {\n-        if(p._action != NULL) {\n+      if(p._class != nullptr) {\n+        if(p._action != nullptr) {\n@@ -202,1 +202,1 @@\n-                  p._class, p._name == NULL ? \"null\" : p._name, p._action);\n+                  p._class, p._name == nullptr ? \"null\" : p._name, p._action);\n@@ -205,1 +205,1 @@\n-                  p._class, p._name == NULL ? \"null\" : p._name);\n+                  p._class, p._name == nullptr ? \"null\" : p._name);\n@@ -210,1 +210,1 @@\n-      if (cmd != NULL) {\n+      if (cmd != nullptr) {\n@@ -270,2 +270,2 @@\n-  const char* val = NULL;\n-  if (_value.value() != NULL) {\n+  const char* val = nullptr;\n+  if (_value.value() != nullptr) {\n@@ -302,1 +302,1 @@\n-  if (_libpath.value() == NULL) {\n+  if (_libpath.value() == nullptr) {\n@@ -308,1 +308,1 @@\n-  bool is_java_agent = (suffix != NULL) && (strncmp(\".jar\", suffix, 4) == 0);\n+  bool is_java_agent = (suffix != nullptr) && (strncmp(\".jar\", suffix, 4) == 0);\n@@ -311,1 +311,1 @@\n-    if (_option.value() == NULL) {\n+    if (_option.value() == nullptr) {\n@@ -322,1 +322,1 @@\n-      if (opt == NULL) {\n+      if (opt == nullptr) {\n@@ -460,1 +460,1 @@\n-  assert(count_res != NULL && name_res != NULL, \"Unexpected layout of FinalizerHistogramEntry\");\n+  assert(count_res != nullptr && name_res != nullptr, \"Unexpected layout of FinalizerHistogramEntry\");\n@@ -805,1 +805,1 @@\n-  if (str != NULL) {\n+  if (str != nullptr) {\n@@ -867,2 +867,2 @@\n-  _log(\"log\", \"Name of log to be printed. If omitted, all logs are printed.\", \"STRING\", false, NULL),\n-  _max(\"max\", \"Maximum number of events to be printed (newest first). If omitted, all events are printed.\", \"STRING\", false, NULL)\n+  _log(\"log\", \"Name of log to be printed. If omitted, all logs are printed.\", \"STRING\", false, nullptr),\n+  _max(\"max\", \"Maximum number of events to be printed (newest first). If omitted, all events are printed.\", \"STRING\", false, nullptr)\n@@ -877,2 +877,2 @@\n-  if (max_value != NULL) {\n-    char* endptr = NULL;\n+  if (max_value != nullptr) {\n+    char* endptr = nullptr;\n@@ -886,1 +886,1 @@\n-  if (log_name != NULL) {\n+  if (log_name != nullptr) {\n@@ -1007,1 +1007,1 @@\n-  if (file != NULL) {\n+  if (file != nullptr) {\n@@ -1033,1 +1033,1 @@\n-static debugInit_startDebuggingViaCommandPtr dvc_start_ptr = NULL;\n+static debugInit_startDebuggingViaCommandPtr dvc_start_ptr = nullptr;\n@@ -1036,2 +1036,2 @@\n-  char const* transport = NULL;\n-  char const* addr = NULL;\n+  char const* transport = nullptr;\n+  char const* addr = nullptr;\n@@ -1045,2 +1045,2 @@\n-    for (AgentLibrary* agent = Arguments::agents(); agent != NULL; agent = agent->next()) {\n-      if ((strcmp(\"jdwp\", agent->name()) == 0) && (dvc_start_ptr == NULL)) {\n+    for (AgentLibrary* agent = Arguments::agents(); agent != nullptr; agent = agent->next()) {\n+      if ((strcmp(\"jdwp\", agent->name()) == 0) && (dvc_start_ptr == nullptr)) {\n@@ -1057,1 +1057,1 @@\n-  if (error != NULL) {\n+  if (error != nullptr) {\n@@ -1079,2 +1079,2 @@\n-  ThreadDumpToFileDCmd* dcmd = new ThreadDumpToFileDCmd(NULL, false);\n-  if (dcmd != NULL) {\n+  ThreadDumpToFileDCmd* dcmd = new ThreadDumpToFileDCmd(nullptr, false);\n+  if (dcmd != nullptr) {\n@@ -1089,1 +1089,1 @@\n-  bool json = (_format.value() != NULL) && (strcmp(_format.value(), \"json\") == 0);\n+  bool json = (_format.value() != nullptr) && (strcmp(_format.value(), \"json\") == 0);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -126,1 +126,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -148,1 +148,1 @@\n-                        \"control\", NULL};\n+                        \"control\", nullptr};\n@@ -166,1 +166,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -187,1 +187,1 @@\n-                        \"control\", NULL};\n+                        \"control\", nullptr};\n@@ -209,1 +209,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -240,1 +240,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -284,1 +284,1 @@\n-      \"monitor\", NULL};\n+      \"monitor\", nullptr};\n@@ -303,1 +303,1 @@\n-      \"monitor\", NULL};\n+      \"monitor\", nullptr};\n@@ -332,1 +332,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -357,1 +357,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -383,1 +383,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -407,1 +407,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -431,1 +431,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -539,1 +539,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -561,1 +561,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -582,1 +582,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -603,1 +603,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -623,1 +623,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -648,1 +648,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -669,1 +669,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -689,1 +689,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -711,1 +711,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -731,1 +731,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -796,1 +796,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -818,1 +818,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -840,1 +840,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -862,1 +862,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -882,1 +882,1 @@\n-    JavaPermission p = { \"java.lang.management.ManagementPermission\", \"control\", NULL };\n+    JavaPermission p = { \"java.lang.management.ManagementPermission\", \"control\", nullptr };\n@@ -906,1 +906,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n@@ -931,1 +931,1 @@\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", NULL};\n+    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-  : _cmd(line), _cmd_len(0), _args(NULL), _args_len(0)\n+  : _cmd(line), _cmd_len(0), _args(nullptr), _args_len(0)\n@@ -40,1 +40,1 @@\n-  assert(line != NULL, \"Command line string should not be NULL\");\n+  assert(line != nullptr, \"Command line string should not be null\");\n@@ -54,1 +54,1 @@\n-    _cmd = NULL;\n+    _cmd = nullptr;\n@@ -141,1 +141,1 @@\n-    _value_addr = NULL;\n+    _value_addr = nullptr;\n@@ -148,1 +148,1 @@\n-  if (info == NULL) return false;\n+  if (info == nullptr) return false;\n@@ -153,2 +153,2 @@\n-  assert(arg != NULL, \"Sanity\");\n-  if (_options == NULL) {\n+  assert(arg != nullptr, \"Sanity\");\n+  if (_options == nullptr) {\n@@ -158,1 +158,1 @@\n-    while (o->next() != NULL) {\n+    while (o->next() != nullptr) {\n@@ -163,1 +163,1 @@\n-  arg->set_next(NULL);\n+  arg->set_next(nullptr);\n@@ -172,2 +172,2 @@\n-  assert(arg != NULL, \"Sanity\");\n-  if (_arguments_list == NULL) {\n+  assert(arg != nullptr, \"Sanity\");\n+  if (_arguments_list == nullptr) {\n@@ -177,1 +177,1 @@\n-    while (a->next() != NULL) {\n+    while (a->next() != nullptr) {\n@@ -182,1 +182,1 @@\n-  arg->set_next(NULL);\n+  arg->set_next(nullptr);\n@@ -197,1 +197,1 @@\n-    if (arg != NULL) {\n+    if (arg != nullptr) {\n@@ -200,1 +200,1 @@\n-      if (next_argument != NULL) {\n+      if (next_argument != nullptr) {\n@@ -225,1 +225,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -232,1 +232,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -239,1 +239,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -247,1 +247,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -257,1 +257,1 @@\n-  out->print(\"Syntax : %s %s\", cmd_name, _options == NULL ? \"\" : \"[options]\");\n+  out->print(\"Syntax : %s %s\", cmd_name, _options == nullptr ? \"\" : \"[options]\");\n@@ -259,1 +259,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -268,1 +268,1 @@\n-  if (_arguments_list != NULL) {\n+  if (_arguments_list != nullptr) {\n@@ -271,1 +271,1 @@\n-    while (arg != NULL) {\n+    while (arg != nullptr) {\n@@ -284,1 +284,1 @@\n-  if (_options != NULL) {\n+  if (_options != nullptr) {\n@@ -287,1 +287,1 @@\n-    while (arg != NULL) {\n+    while (arg != nullptr) {\n@@ -304,1 +304,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -309,1 +309,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -317,1 +317,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -322,1 +322,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -331,1 +331,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -336,1 +336,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -347,1 +347,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -352,1 +352,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -364,1 +364,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -372,1 +372,1 @@\n-  while (arg != NULL) {\n+  while (arg != nullptr) {\n@@ -381,1 +381,1 @@\n-DCmdFactory* DCmdFactory::_DCmdFactoryList = NULL;\n+DCmdFactory* DCmdFactory::_DCmdFactoryList = nullptr;\n@@ -387,1 +387,1 @@\n-  if (cmdline == NULL) return; \/\/ Nothing to do!\n+  if (cmdline == nullptr) return; \/\/ Nothing to do!\n@@ -406,1 +406,1 @@\n-      assert(command != NULL, \"command error must be handled before this line\");\n+      assert(command != nullptr, \"command error must be handled before this line\");\n@@ -504,1 +504,1 @@\n-  while (factory != NULL) {\n+  while (factory != nullptr) {\n@@ -510,1 +510,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -515,1 +515,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -532,1 +532,1 @@\n-  if (f != NULL) {\n+  if (f != nullptr) {\n@@ -547,1 +547,1 @@\n-  while (factory != NULL) {\n+  while (factory != nullptr) {\n@@ -560,1 +560,1 @@\n-  while (factory != NULL) {\n+  while (factory != nullptr) {\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.cpp","additions":45,"deletions":45,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,2 +113,2 @@\n-    : _buffer(buf), _len(len), _cursor(0), _key_addr(NULL),\n-      _key_len(0), _value_addr(NULL), _value_len(0), _delim(delim) {}\n+    : _buffer(buf), _len(len), _cursor(0), _key_addr(nullptr),\n+      _key_len(0), _value_addr(nullptr), _value_len(0), _delim(delim) {}\n@@ -210,1 +210,1 @@\n-    : _options(NULL), _arguments_list(NULL) {}\n+    : _options(nullptr), _arguments_list(nullptr) {}\n@@ -275,1 +275,1 @@\n-    JavaPermission p = {NULL, NULL, NULL};\n+    JavaPermission p = {nullptr, nullptr, nullptr};\n@@ -339,1 +339,1 @@\n-    if (_ref != NULL) {\n+    if (_ref != nullptr) {\n@@ -374,1 +374,1 @@\n-    : _next(NULL), _enabled(enabled), _hidden(hidden),\n+    : _next(nullptr), _enabled(enabled), _hidden(hidden),\n@@ -445,2 +445,2 @@\n-    DCmdClass* dcmd = new DCmdClass(NULL, false);\n-    if (dcmd != NULL) {\n+    DCmdClass* dcmd = new DCmdClass(nullptr, false);\n+    if (dcmd != nullptr) {\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,2 @@\n-GCNotificationRequest *GCNotifier::first_request = NULL;\n-GCNotificationRequest *GCNotifier::last_request = NULL;\n+GCNotificationRequest *GCNotifier::first_request = nullptr;\n+GCNotificationRequest *GCNotifier::last_request = nullptr;\n@@ -60,1 +60,1 @@\n-  if(first_request == NULL) {\n+  if(first_request == nullptr) {\n@@ -72,1 +72,1 @@\n-  if(first_request != NULL) {\n+  if(first_request != nullptr) {\n@@ -79,1 +79,1 @@\n-  return first_request != NULL;\n+  return first_request != nullptr;\n@@ -186,1 +186,1 @@\n-    assert(_request != NULL, \"Sanity check\");\n+    assert(_request != nullptr, \"Sanity check\");\n@@ -195,1 +195,1 @@\n-  if (request != NULL) {\n+  if (request != nullptr) {\n","filename":"src\/hotspot\/share\/services\/gcNotifier.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    next = NULL;\n+    next = nullptr;\n","filename":"src\/hotspot\/share\/services\/gcNotifier.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -418,1 +418,1 @@\n-    _buffer(NULL),\n+    _buffer(nullptr),\n@@ -449,1 +449,1 @@\n-    _buffer = NULL;\n+    _buffer = nullptr;\n@@ -662,1 +662,1 @@\n-  ParWriterBufferQueue() : _head(NULL), _tail(NULL), _length(0) { }\n+  ParWriterBufferQueue() : _head(nullptr), _tail(nullptr), _length(0) { }\n@@ -665,2 +665,2 @@\n-    if (_head == NULL) {\n-      assert(is_empty() && _tail == NULL, \"Sanity check\");\n+    if (_head == nullptr) {\n+      assert(is_empty() && _tail == nullptr, \"Sanity check\");\n@@ -669,1 +669,1 @@\n-      assert ((_tail->_next == NULL && _tail->_buffer != NULL), \"Buffer queue is polluted\");\n+      assert ((_tail->_next == nullptr && _tail->_buffer != nullptr), \"Buffer queue is polluted\");\n@@ -674,1 +674,1 @@\n-    assert(_tail->_next == NULL, \"Buffer queue is polluted\");\n+    assert(_tail->_next == nullptr, \"Buffer queue is polluted\");\n@@ -678,1 +678,1 @@\n-    if (_head == NULL)  return NULL;\n+    if (_head == nullptr)  return nullptr;\n@@ -680,1 +680,1 @@\n-    assert (entry->_buffer != NULL, \"polluted buffer in writer list\");\n+    assert (entry->_buffer != nullptr, \"polluted buffer in writer list\");\n@@ -682,2 +682,2 @@\n-    if (_head == NULL) {\n-      _tail = NULL;\n+    if (_head == nullptr) {\n+      _tail = nullptr;\n@@ -685,1 +685,1 @@\n-    entry->_next = NULL;\n+    entry->_next = nullptr;\n@@ -733,1 +733,1 @@\n-    _buffer_base(NULL),\n+    _buffer_base(nullptr),\n@@ -740,1 +740,1 @@\n-     assert(_buffer_queue != NULL, \"Sanity check\");\n+     assert(_buffer_queue != nullptr, \"Sanity check\");\n@@ -743,1 +743,1 @@\n-     if (_buffer_base != NULL) {\n+     if (_buffer_base != nullptr) {\n@@ -745,1 +745,1 @@\n-       _buffer_base = NULL;\n+       _buffer_base = nullptr;\n@@ -748,1 +748,1 @@\n-     _buffer_queue = NULL;\n+     _buffer_queue = nullptr;\n@@ -753,1 +753,1 @@\n-  char const* error() const override    { return _err == NULL ? _backend_ptr->error() : _err; }\n+  char const* error() const override    { return _err == nullptr ? _backend_ptr->error() : _err; }\n@@ -756,1 +756,1 @@\n-    assert(_lock == NULL, \"ParDumpWriter lock must be initialized only once\");\n+    assert(_lock == nullptr, \"ParDumpWriter lock must be initialized only once\");\n@@ -761,1 +761,1 @@\n-    assert(_lock != NULL, \"ParDumpWriter lock is not initialized\");\n+    assert(_lock != nullptr, \"ParDumpWriter lock is not initialized\");\n@@ -763,1 +763,1 @@\n-    _lock = NULL;\n+    _lock = nullptr;\n@@ -792,2 +792,2 @@\n-    assert(_buffer_queue != NULL, \"Internal buffer queue is not ready when allocate internal buffer\");\n-    assert(_buffer == NULL && _buffer_base == NULL, \"current buffer must be NULL before allocate\");\n+    assert(_buffer_queue != nullptr, \"Internal buffer queue is not ready when allocate internal buffer\");\n+    assert(_buffer == nullptr && _buffer_base == nullptr, \"current buffer must be null before allocate\");\n@@ -795,1 +795,1 @@\n-    if (_buffer == NULL) {\n+    if (_buffer == nullptr) {\n@@ -805,1 +805,1 @@\n-    if ((new_error != NULL) && (_err == NULL)) {\n+    if ((new_error != nullptr) && (_err == nullptr)) {\n@@ -829,1 +829,1 @@\n-    if (entry == NULL) {\n+    if (entry == nullptr) {\n@@ -835,1 +835,1 @@\n-    entry->_next = NULL;\n+    entry->_next = nullptr;\n@@ -838,1 +838,1 @@\n-    _buffer_base =_buffer = NULL;\n+    _buffer_base =_buffer = nullptr;\n@@ -843,1 +843,1 @@\n-    assert(entry != NULL && entry->_buffer != NULL, \"Invalid entry to reclaim\");\n+    assert(entry != nullptr && entry->_buffer != nullptr, \"Invalid entry to reclaim\");\n@@ -845,1 +845,1 @@\n-    entry->_buffer = NULL;\n+    entry->_buffer = nullptr;\n@@ -868,1 +868,1 @@\n-      entry = NULL;\n+      entry = nullptr;\n@@ -877,1 +877,1 @@\n-      _buffer_base = _buffer = NULL;\n+      _buffer_base = _buffer = nullptr;\n@@ -884,1 +884,1 @@\n-Monitor* ParDumpWriter::_lock = NULL;\n+Monitor* ParDumpWriter::_lock = nullptr;\n@@ -941,1 +941,1 @@\n-    if (o != NULL && o->klass()->java_mirror() == NULL) {\n+    if (o != nullptr && o->klass()->java_mirror() == nullptr) {\n@@ -944,1 +944,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -1036,1 +1036,1 @@\n-      if (o != NULL && log_is_enabled(Debug, cds, heap) && mask_dormant_archived_object(o) == NULL) {\n+      if (o != nullptr && log_is_enabled(Debug, cds, heap) && mask_dormant_archived_object(o) == nullptr) {\n@@ -1043,1 +1043,1 @@\n-      assert(oopDesc::is_oop_or_null(o), \"Expected an oop or NULL at \" PTR_FORMAT, p2i(o));\n+      assert(oopDesc::is_oop_or_null(o), \"Expected an oop or nullptr at \" PTR_FORMAT, p2i(o));\n@@ -1122,1 +1122,1 @@\n-  if (resolved_references != NULL) {\n+  if (resolved_references != nullptr) {\n@@ -1129,1 +1129,1 @@\n-    while (prev != NULL && prev->constants()->resolved_references_or_null() != NULL) {\n+    while (prev != nullptr && prev->constants()->resolved_references_or_null() != nullptr) {\n@@ -1159,1 +1159,1 @@\n-  if (resolved_references != NULL) {\n+  if (resolved_references != nullptr) {\n@@ -1166,1 +1166,1 @@\n-    while (prev != NULL && prev->constants()->resolved_references_or_null() != NULL) {\n+    while (prev != nullptr && prev->constants()->resolved_references_or_null() != nullptr) {\n@@ -1260,2 +1260,2 @@\n-  if (java_super == NULL) {\n-    writer->write_objectID(oop(NULL));\n+  if (java_super == nullptr) {\n+    writer->write_objectID(oop(nullptr));\n@@ -1271,2 +1271,2 @@\n-  writer->write_objectID(oop(NULL));\n-  writer->write_objectID(oop(NULL));\n+  writer->write_objectID(oop(nullptr));\n+  writer->write_objectID(oop(nullptr));\n@@ -1293,1 +1293,1 @@\n-  InstanceKlass* ik = NULL; \/\/ bottom class for object arrays, NULL for primitive type arrays\n+  InstanceKlass* ik = nullptr; \/\/ bottom class for object arrays, null for primitive type arrays\n@@ -1296,1 +1296,1 @@\n-    assert(bk != NULL, \"checking\");\n+    assert(bk != nullptr, \"checking\");\n@@ -1309,1 +1309,1 @@\n-  assert(java_super != NULL, \"checking\");\n+  assert(java_super != nullptr, \"checking\");\n@@ -1312,3 +1312,3 @@\n-  writer->write_objectID(ik == NULL ? oop(NULL) : ik->class_loader());\n-  writer->write_objectID(ik == NULL ? oop(NULL) : ik->signers());\n-  writer->write_objectID(ik == NULL ? oop(NULL) : ik->protection_domain());\n+  writer->write_objectID(ik == nullptr ? oop(nullptr) : ik->class_loader());\n+  writer->write_objectID(ik == nullptr ? oop(nullptr) : ik->signers());\n+  writer->write_objectID(ik == nullptr ? oop(nullptr) : ik->protection_domain());\n@@ -1316,2 +1316,2 @@\n-  writer->write_objectID(oop(NULL));    \/\/ reserved\n-  writer->write_objectID(oop(NULL));\n+  writer->write_objectID(oop(nullptr));    \/\/ reserved\n+  writer->write_objectID(oop(nullptr));\n@@ -1373,1 +1373,1 @@\n-    if (o != NULL && log_is_enabled(Debug, cds, heap) && mask_dormant_archived_object(o) == NULL) {\n+    if (o != nullptr && log_is_enabled(Debug, cds, heap) && mask_dormant_archived_object(o) == nullptr) {\n@@ -1554,1 +1554,1 @@\n-  if (o != NULL) {\n+  if (o != nullptr) {\n@@ -1584,1 +1584,1 @@\n-  if (o == NULL) return;\n+  if (o == nullptr) return;\n@@ -1628,1 +1628,1 @@\n-    HeapDumpLargeObjectListElem(oop obj) : _obj(obj), _next(NULL) { }\n+    HeapDumpLargeObjectListElem(oop obj) : _obj(obj), _next(nullptr) { }\n@@ -1636,1 +1636,1 @@\n-  HeapDumpLargeObjectList() : _head(NULL) { }\n+  HeapDumpLargeObjectList() : _head(nullptr) { }\n@@ -1639,1 +1639,1 @@\n-    assert (obj != NULL, \"sanity check\");\n+    assert (obj != nullptr, \"sanity check\");\n@@ -1641,1 +1641,1 @@\n-    if (entry == NULL) {\n+    if (entry == nullptr) {\n@@ -1645,1 +1645,1 @@\n-    assert (entry->_obj != NULL, \"sanity check\");\n+    assert (entry->_obj != nullptr, \"sanity check\");\n@@ -1658,2 +1658,2 @@\n-    if (_head == NULL) {\n-      return NULL;\n+    if (_head == nullptr) {\n+      return nullptr;\n@@ -1663,1 +1663,1 @@\n-    assert (entry != NULL, \"illegal larger object list entry\");\n+    assert (entry != nullptr, \"illegal larger object list entry\");\n@@ -1666,1 +1666,1 @@\n-    assert (ret != NULL, \"illegal oop pointer\");\n+    assert (ret != nullptr, \"illegal oop pointer\");\n@@ -1671,1 +1671,1 @@\n-    while (_head !=  NULL) {\n+    while (_head !=  nullptr) {\n@@ -1677,1 +1677,1 @@\n-    return _head == NULL;\n+    return _head == nullptr;\n@@ -1694,1 +1694,1 @@\n-  HeapObjectDumper(AbstractDumpWriter* writer, HeapDumpLargeObjectList* list = NULL) {\n+  HeapObjectDumper(AbstractDumpWriter* writer, HeapDumpLargeObjectList* list = nullptr) {\n@@ -1711,1 +1711,1 @@\n-  if (DumperSupport::mask_dormant_archived_object(o) == NULL) {\n+  if (DumperSupport::mask_dormant_archived_object(o) == nullptr) {\n@@ -1718,1 +1718,1 @@\n-  if (_list != NULL && is_large(o)) {\n+  if (_list != nullptr && is_large(o)) {\n@@ -1850,1 +1850,1 @@\n-    assert (_dumper_controller == NULL, \"dumper controller must be NULL\");\n+    assert (_dumper_controller == nullptr, \"dumper controller must be nullptr\");\n@@ -1880,2 +1880,2 @@\n-  static VM_HeapDumper* dumper()         {  assert(_global_dumper != NULL, \"Error\"); return _global_dumper; }\n-  static DumpWriter* writer()            {  assert(_global_writer != NULL, \"Error\"); return _global_writer; }\n+  static VM_HeapDumper* dumper()         {  assert(_global_dumper != nullptr, \"Error\"); return _global_dumper; }\n+  static DumpWriter* writer()            {  assert(_global_writer != nullptr, \"Error\"); return _global_writer; }\n@@ -1883,1 +1883,1 @@\n-    assert(_global_dumper == NULL, \"Error\");\n+    assert(_global_dumper == nullptr, \"Error\");\n@@ -1887,1 +1887,1 @@\n-    assert(_global_writer == NULL, \"Error\");\n+    assert(_global_writer == nullptr, \"Error\");\n@@ -1890,2 +1890,2 @@\n-  void clear_global_dumper() { _global_dumper = NULL; }\n-  void clear_global_writer() { _global_writer = NULL; }\n+  void clear_global_dumper() { _global_dumper = nullptr; }\n+  void clear_global_writer() { _global_writer = nullptr; }\n@@ -1925,1 +1925,1 @@\n-    _stack_traces = NULL;\n+    _stack_traces = nullptr;\n@@ -1928,2 +1928,2 @@\n-    _dumper_controller = NULL;\n-    _poi = NULL;\n+    _dumper_controller = nullptr;\n+    _poi = nullptr;\n@@ -1940,2 +1940,2 @@\n-      _oome_thread = NULL;\n-      _oome_constructor = NULL;\n+      _oome_thread = nullptr;\n+      _oome_constructor = nullptr;\n@@ -1946,1 +1946,1 @@\n-    if (_stack_traces != NULL) {\n+    if (_stack_traces != nullptr) {\n@@ -1952,1 +1952,1 @@\n-    if (_dumper_controller != NULL) {\n+    if (_dumper_controller != nullptr) {\n@@ -1954,1 +1954,1 @@\n-      _dumper_controller = NULL;\n+      _dumper_controller = nullptr;\n@@ -1965,2 +1965,2 @@\n-VM_HeapDumper* VM_HeapDumper::_global_dumper = NULL;\n-DumpWriter*    VM_HeapDumper::_global_writer = NULL;\n+VM_HeapDumper* VM_HeapDumper::_global_dumper = nullptr;\n+DumpWriter*    VM_HeapDumper::_global_writer = nullptr;\n@@ -2024,1 +2024,1 @@\n-  assert(threadObj != NULL, \"sanity check\");\n+  assert(threadObj != nullptr, \"sanity check\");\n@@ -2040,1 +2040,1 @@\n-    frame* last_entry_frame = NULL;\n+    frame* last_entry_frame = nullptr;\n@@ -2043,1 +2043,1 @@\n-    if (java_thread == _oome_thread && _oome_constructor != NULL) {\n+    if (java_thread == _oome_thread && _oome_constructor != nullptr) {\n@@ -2046,1 +2046,1 @@\n-    while (vf != NULL) {\n+    while (vf != nullptr) {\n@@ -2058,1 +2058,1 @@\n-              if (o != NULL) {\n+              if (o != nullptr) {\n@@ -2072,1 +2072,1 @@\n-               if (o != NULL) {\n+               if (o != nullptr) {\n@@ -2088,1 +2088,1 @@\n-            if (last_entry_frame != NULL) {\n+            if (last_entry_frame != nullptr) {\n@@ -2097,1 +2097,1 @@\n-        last_entry_frame = NULL;\n+        last_entry_frame = nullptr;\n@@ -2103,1 +2103,1 @@\n-        assert(fr != NULL, \"sanity check\");\n+        assert(fr != nullptr, \"sanity check\");\n@@ -2185,1 +2185,1 @@\n-  if (workers == NULL) {\n+  if (workers == nullptr) {\n@@ -2196,1 +2196,1 @@\n-      _poi = NULL;\n+      _poi = nullptr;\n@@ -2257,1 +2257,1 @@\n-    \/\/ These should be classes in the NULL class loader data, and not all classes\n+    \/\/ These should be classes in the null class loader data, and not all classes\n@@ -2324,1 +2324,1 @@\n-    if (threadObj != NULL && !thread->is_exiting() && !thread->is_hidden_from_external_view()) {\n+    if (threadObj != nullptr && !thread->is_exiting() && !thread->is_hidden_from_external_view()) {\n@@ -2340,1 +2340,1 @@\n-      if (thread == _oome_thread && _oome_constructor != NULL) {\n+      if (thread == _oome_thread && _oome_constructor != nullptr) {\n@@ -2378,1 +2378,1 @@\n-  assert(path != NULL && strlen(path) > 0, \"path missing\");\n+  assert(path != nullptr && strlen(path) > 0, \"path missing\");\n@@ -2381,1 +2381,1 @@\n-  if (out != NULL) {\n+  if (out != nullptr) {\n@@ -2388,1 +2388,1 @@\n-  AbstractCompressor* compressor = NULL;\n+  AbstractCompressor* compressor = nullptr;\n@@ -2393,1 +2393,1 @@\n-    if (compressor == NULL) {\n+    if (compressor == nullptr) {\n@@ -2401,1 +2401,1 @@\n-  if (writer.error() != NULL) {\n+  if (writer.error() != nullptr) {\n@@ -2403,1 +2403,1 @@\n-    if (out != NULL) {\n+    if (out != nullptr) {\n@@ -2405,1 +2405,1 @@\n-        (error() != NULL) ? error() : \"reason unknown\");\n+        (error() != nullptr) ? error() : \"reason unknown\");\n@@ -2423,1 +2423,1 @@\n-  if (error() == NULL) {\n+  if (error() == nullptr) {\n@@ -2436,1 +2436,1 @@\n-  if (out != NULL) {\n+  if (out != nullptr) {\n@@ -2438,1 +2438,1 @@\n-    if (error() == NULL) {\n+    if (error() == nullptr) {\n@@ -2446,1 +2446,1 @@\n-  return (writer.error() == NULL) ? 0 : -1;\n+  return (writer.error() == nullptr) ? 0 : -1;\n@@ -2454,1 +2454,1 @@\n-  set_error(NULL);\n+  set_error(nullptr);\n@@ -2458,1 +2458,1 @@\n-\/\/ returns the error string (resource allocated), or NULL\n+\/\/ returns the error string (resource allocated), or null\n@@ -2460,1 +2460,1 @@\n-  if (error() != NULL) {\n+  if (error() != nullptr) {\n@@ -2465,1 +2465,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -2471,1 +2471,1 @@\n-  if (_error != NULL) {\n+  if (_error != nullptr) {\n@@ -2474,2 +2474,2 @@\n-  if (error == NULL) {\n-    _error = NULL;\n+  if (error == nullptr) {\n+    _error = nullptr;\n@@ -2478,1 +2478,1 @@\n-    assert(_error != NULL, \"allocation failure\");\n+    assert(_error != nullptr, \"allocation failure\");\n@@ -2513,1 +2513,1 @@\n-                      (HeapDumpPath == NULL ? 0 : strlen(HeapDumpPath)) +\n+                      (HeapDumpPath == nullptr ? 0 : strlen(HeapDumpPath)) +\n@@ -2522,1 +2522,1 @@\n-    if (HeapDumpPath == NULL || HeapDumpPath[0] == '\\0') {\n+    if (HeapDumpPath == nullptr || HeapDumpPath[0] == '\\0') {\n@@ -2528,1 +2528,1 @@\n-      if (dir == NULL) {\n+      if (dir == nullptr) {\n@@ -2552,1 +2552,1 @@\n-    if (my_path == NULL) {\n+    if (my_path == nullptr) {\n@@ -2561,1 +2561,1 @@\n-    if (my_path == NULL) {\n+    if (my_path == nullptr) {\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":125,"deletions":125,"binary":false,"changes":250,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    _error(NULL), _gc_before_heap_dump(gc_before_heap_dump), _oome(oome) { }\n+    _error(nullptr), _gc_before_heap_dump(gc_before_heap_dump), _oome(oome) { }\n@@ -67,1 +67,1 @@\n-    _error(NULL), _gc_before_heap_dump(gc_before_heap_dump), _oome(false) { }\n+    _error(nullptr), _gc_before_heap_dump(gc_before_heap_dump), _oome(false) { }\n@@ -72,1 +72,1 @@\n-  \/\/ additional info is written to out if not NULL.\n+  \/\/ additional info is written to out if not null.\n@@ -75,1 +75,1 @@\n-  int dump(const char* path, outputStream* out = NULL, int compression = -1, bool overwrite = false, uint parallel_thread_num = 1);\n+  int dump(const char* path, outputStream* out = nullptr, int compression = -1, bool overwrite = false, uint parallel_thread_num = 1);\n@@ -77,1 +77,1 @@\n-  \/\/ returns error message (resource allocated), or NULL if no error\n+  \/\/ returns error message (resource allocated), or null if no error\n","filename":"src\/hotspot\/share\/services\/heapDumper.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -64,1 +64,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -84,1 +84,1 @@\n-    if (handle != NULL) {\n+    if (handle != nullptr) {\n@@ -89,1 +89,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -97,1 +97,1 @@\n-  if (gzip_compress_func == NULL) {\n+  if (gzip_compress_func == nullptr) {\n@@ -100,1 +100,1 @@\n-    if (gzip_compress_func == NULL) {\n+    if (gzip_compress_func == nullptr) {\n@@ -105,1 +105,1 @@\n-  if (gzip_init_func == NULL) {\n+  if (gzip_init_func == nullptr) {\n@@ -108,1 +108,1 @@\n-    if (gzip_init_func == NULL) {\n+    if (gzip_init_func == nullptr) {\n@@ -122,1 +122,1 @@\n-  char const* msg = NULL;\n+  char const* msg = nullptr;\n@@ -134,1 +134,1 @@\n-                                          NULL, &msg);\n+                                          nullptr, &msg);\n@@ -153,1 +153,1 @@\n-  if (work != NULL) {\n+  if (work != nullptr) {\n@@ -158,2 +158,2 @@\n-    work->_next = NULL;\n-    work->_prev = NULL;\n+    work->_next = nullptr;\n+    work->_prev = nullptr;\n@@ -191,1 +191,1 @@\n-  _err(NULL),\n+  _err(nullptr),\n@@ -205,1 +205,1 @@\n-  if (_writer == NULL) {\n+  if (_writer == nullptr) {\n@@ -207,1 +207,1 @@\n-  } else if (_lock == NULL) {\n+  } else if (_lock == nullptr) {\n@@ -213,1 +213,1 @@\n-  if (_compressor != NULL) {\n+  if (_compressor != nullptr) {\n@@ -219,1 +219,1 @@\n-  if (_current == NULL) {\n+  if (_current == nullptr) {\n@@ -223,1 +223,1 @@\n-  _active = (_err == NULL);\n+  _active = (_err == nullptr);\n@@ -243,1 +243,1 @@\n-  if ((_current != NULL) && (_current->_in_used > 0)) {\n+  if ((_current != nullptr) && (_current->_in_used > 0)) {\n@@ -246,1 +246,1 @@\n-    _current = NULL;\n+    _current = nullptr;\n@@ -280,1 +280,1 @@\n-  while ((work = get_work()) != NULL) {\n+  while ((work = get_work()) != nullptr) {\n@@ -291,1 +291,1 @@\n-  if ((new_error != NULL) && (_err == NULL)) {\n+  if ((new_error != nullptr) && (_err == nullptr)) {\n@@ -300,1 +300,1 @@\n-  if (result == NULL) {\n+  if (result == nullptr) {\n@@ -302,1 +302,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -309,2 +309,2 @@\n-  result->_out = NULL;\n-  result->_tmp = NULL;\n+  result->_out = nullptr;\n+  result->_tmp = nullptr;\n@@ -312,1 +312,1 @@\n-  if (result->_in == NULL) {\n+  if (result->_in == nullptr) {\n@@ -321,1 +321,1 @@\n-    if (result->_out == NULL) {\n+    if (result->_out == nullptr) {\n@@ -330,1 +330,1 @@\n-    if (result->_tmp == NULL) {\n+    if (result->_tmp == nullptr) {\n@@ -340,1 +340,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -344,1 +344,1 @@\n-  if (work != NULL) {\n+  if (work != nullptr) {\n@@ -380,1 +380,1 @@\n-  assert(buffer != NULL && used != 0 && max != 0, \"Invalid data send to compression backend\");\n+  assert(buffer != nullptr && used != 0 && max != 0, \"Invalid data send to compression backend\");\n@@ -395,1 +395,1 @@\n-  assert (_current->_in != NULL && _current->_in_max >= max &&\n+  assert (_current->_in != nullptr && _current->_in_max >= max &&\n@@ -414,1 +414,1 @@\n-        _current = NULL;\n+        _current = nullptr;\n@@ -424,1 +424,1 @@\n-    while ((_current == NULL) && _unused.is_empty() && _active) {\n+    while ((_current == nullptr) && _unused.is_empty() && _active) {\n@@ -429,1 +429,1 @@\n-        if (work != NULL) {\n+        if (work != nullptr) {\n@@ -439,1 +439,1 @@\n-    if (_current == NULL) {\n+    if (_current == nullptr) {\n@@ -443,1 +443,1 @@\n-    if (_current != NULL) {\n+    if (_current != nullptr) {\n@@ -454,1 +454,1 @@\n-  *buffer = NULL;\n+  *buffer = nullptr;\n@@ -462,1 +462,1 @@\n-  if (_compressor != NULL) {\n+  if (_compressor != nullptr) {\n@@ -467,1 +467,1 @@\n-    if (msg != NULL) {\n+    if (msg != nullptr) {\n@@ -482,3 +482,3 @@\n-    size_t size = _compressor == NULL ? to_write->_in_used : to_write->_out_used;\n-    char* p = _compressor == NULL ? to_write->_in : to_write->_out;\n-    char const* msg = NULL;\n+    size_t size = _compressor == nullptr ? to_write->_in_used : to_write->_out_used;\n+    char* p = _compressor == nullptr ? to_write->_in : to_write->_out;\n+    char const* msg = nullptr;\n@@ -486,1 +486,1 @@\n-    if (_err == NULL) {\n+    if (_err == nullptr) {\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":47,"deletions":47,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  \/\/ Does the actual compression. Returns NULL on success and a static error\n+  \/\/ Does the actual compression. Returns null on success and a static error\n@@ -52,1 +52,1 @@\n-  \/\/ Opens the writer. Returns NULL on success and a static error message otherwise.\n+  \/\/ Opens the writer. Returns null on success and a static error message otherwise.\n@@ -55,1 +55,1 @@\n-  \/\/ Does the write. Returns NULL on success and a static error message otherwise.\n+  \/\/ Does the write. Returns null on success and a static error message otherwise.\n@@ -72,1 +72,1 @@\n-  \/\/ Opens the writer. Returns NULL on success and a static error message otherwise.\n+  \/\/ Opens the writer. Returns null on success and a static error message otherwise.\n@@ -75,1 +75,1 @@\n-  \/\/ Does the write. Returns NULL on success and a static error message otherwise.\n+  \/\/ Does the write. Returns null on success and a static error message otherwise.\n@@ -111,1 +111,1 @@\n-  \/\/ The output buffer where the compressed data is. Is NULL when compression is disabled.\n+  \/\/ The output buffer where the compressed data is. Is null when compression is disabled.\n@@ -116,1 +116,1 @@\n-  \/\/ The temporary space needed for compression. Is NULL when compression is disabled.\n+  \/\/ The temporary space needed for compression. Is null when compression is disabled.\n@@ -149,1 +149,1 @@\n-  WriteWork* first() { return is_empty() ? NULL : _head._next; }\n+  WriteWork* first() { return is_empty() ? nullptr : _head._next; }\n@@ -152,1 +152,1 @@\n-  WriteWork* last() { return is_empty() ? NULL : _head._prev; }\n+  WriteWork* last() { return is_empty() ? nullptr : _head._prev; }\n@@ -154,1 +154,1 @@\n-  \/\/ Removes the first element. Returns NULL if empty.\n+  \/\/ Removes the first element. Returns null if empty.\n@@ -157,1 +157,1 @@\n-  \/\/ Removes the last element. Returns NULL if empty.\n+  \/\/ Removes the last element. Returns null if empty.\n@@ -210,1 +210,1 @@\n-  \/\/ compressor can be NULL if no compression is used.\n+  \/\/ compressor can be null if no compression is used.\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    if (sensor != NULL) {\n+    if (sensor != nullptr) {\n@@ -55,1 +55,1 @@\n-    if (gc_sensor != NULL) {\n+    if (gc_sensor != nullptr) {\n@@ -72,1 +72,1 @@\n-    if (sensor != NULL && sensor->has_pending_requests()) {\n+    if (sensor != nullptr && sensor->has_pending_requests()) {\n@@ -75,1 +75,1 @@\n-    if (gc_sensor != NULL && gc_sensor->has_pending_requests()) {\n+    if (gc_sensor != nullptr && gc_sensor->has_pending_requests()) {\n@@ -91,1 +91,1 @@\n-    if (sensor != NULL &&\n+    if (sensor != nullptr &&\n@@ -110,1 +110,1 @@\n-  if (sensor == NULL ||\n+  if (sensor == nullptr ||\n@@ -132,1 +132,1 @@\n-  if (sensor == NULL ||\n+  if (sensor == nullptr ||\n@@ -173,1 +173,1 @@\n-  assert(_sensor_obj.peek() == NULL, \"Should be set only once\");\n+  assert(_sensor_obj.peek() == nullptr, \"Should be set only once\");\n@@ -299,1 +299,1 @@\n-  if (sensor_h() != NULL) {\n+  if (sensor_h() != nullptr) {\n@@ -363,1 +363,1 @@\n-  if (sensor() != NULL) {\n+  if (sensor() != nullptr) {\n","filename":"src\/hotspot\/share\/services\/lowMemoryDetector.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -232,1 +232,1 @@\n-    if (pool->usage_sensor() == NULL) {\n+    if (pool->usage_sensor() == nullptr) {\n","filename":"src\/hotspot\/share\/services\/lowMemoryDetector.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-  address corruption = NULL;\n+  address corruption = nullptr;\n@@ -68,1 +68,1 @@\n-    print_block_on_error(tty, corruption != NULL ? corruption : (address)this);\n+    print_block_on_error(tty, corruption != nullptr ? corruption : (address)this);\n@@ -77,2 +77,2 @@\n-  \/\/ Weed out obviously wrong block addresses of NULL or very low\n-  \/\/ values. Note that we should not call this for ::free(NULL),\n+  \/\/ Weed out obviously wrong block addresses of null or very low\n+  \/\/ values. Note that we should not call this for ::free(null),\n","filename":"src\/hotspot\/share\/services\/mallocHeader.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,3 @@\n-MallocSiteHashtableEntry**  MallocSiteTable::_table = NULL;\n-const NativeCallStack* MallocSiteTable::_hash_entry_allocation_stack = NULL;\n-const MallocSiteHashtableEntry* MallocSiteTable::_hash_entry_allocation_site = NULL;\n+MallocSiteHashtableEntry**  MallocSiteTable::_table = nullptr;\n+const NativeCallStack* MallocSiteTable::_hash_entry_allocation_stack = nullptr;\n+const MallocSiteHashtableEntry* MallocSiteTable::_hash_entry_allocation_site = nullptr;\n@@ -74,2 +74,2 @@\n-  assert(_hash_entry_allocation_stack == NULL &&\n-         _hash_entry_allocation_site == NULL,\n+  assert(_hash_entry_allocation_stack == nullptr &&\n+         _hash_entry_allocation_site == nullptr,\n@@ -94,1 +94,1 @@\n-    while (head != NULL) {\n+    while (head != nullptr) {\n@@ -109,2 +109,2 @@\n- *  This method should not return NULL under normal circumstance.\n- *  If NULL is returned, it indicates:\n+ *  This method should not return nullptr under normal circumstance.\n+ *  If nullptr is returned, it indicates:\n@@ -122,1 +122,1 @@\n-  if (_table[index] == NULL) {\n+  if (_table[index] == nullptr) {\n@@ -125,1 +125,1 @@\n-    if (entry == NULL) return NULL;\n+    if (entry == nullptr) return nullptr;\n@@ -138,1 +138,1 @@\n-  while (head != NULL && pos_idx < MAX_BUCKET_LENGTH) {\n+  while (head != nullptr && pos_idx < MAX_BUCKET_LENGTH) {\n@@ -147,1 +147,1 @@\n-    if (head->next() == NULL && pos_idx < (MAX_BUCKET_LENGTH - 1)) {\n+    if (head->next() == nullptr && pos_idx < (MAX_BUCKET_LENGTH - 1)) {\n@@ -150,1 +150,1 @@\n-      if (entry == NULL) return NULL;\n+      if (entry == nullptr) return nullptr;\n@@ -162,1 +162,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -172,1 +172,1 @@\n-       index < pos_idx && head != NULL;\n+       index < pos_idx && head != nullptr;\n@@ -174,1 +174,1 @@\n-  assert(head != NULL, \"Invalid position index\");\n+  assert(head != nullptr, \"Invalid position index\");\n@@ -188,1 +188,1 @@\n-  assert(walker != NULL, \"NuLL walker\");\n+  assert(walker != nullptr, \"NuLL walker\");\n@@ -211,1 +211,1 @@\n-    if (head == NULL) {\n+    if (head == nullptr) {\n@@ -214,1 +214,1 @@\n-    while (head != NULL) {\n+    while (head != nullptr) {\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-    _malloc_site(stack, flags), _hash(stack.calculate_hash()), _next(NULL) {\n+    _malloc_site(stack, flags), _hash(stack.calculate_hash()), _next(nullptr) {\n@@ -136,1 +136,1 @@\n-    if (site != NULL) {\n+    if (site != nullptr) {\n@@ -152,2 +152,2 @@\n-    if (site != NULL) site->allocate(size);\n-    return site != NULL;\n+    if (site != nullptr) site->allocate(size);\n+    return site != nullptr;\n@@ -160,1 +160,1 @@\n-    if (site != NULL) {\n+    if (site != nullptr) {\n@@ -184,1 +184,1 @@\n-    assert(_hash_entry_allocation_stack != NULL, \"Must be set\");\n+    assert(_hash_entry_allocation_stack != nullptr, \"Must be set\");\n@@ -189,1 +189,1 @@\n-    assert(_hash_entry_allocation_site != NULL, \"Must be set\");\n+    assert(_hash_entry_allocation_site != nullptr, \"Must be set\");\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,1 +154,1 @@\n-  assert(malloc_base != NULL, \"precondition\");\n+  assert(malloc_base != nullptr, \"precondition\");\n@@ -185,1 +185,1 @@\n-  assert(memblock != NULL, \"precondition\");\n+  assert(memblock != nullptr, \"precondition\");\n","filename":"src\/hotspot\/share\/services\/mallocTracker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -332,1 +332,1 @@\n-    assert(memblock != NULL, \"NULL pointer\");\n+    assert(memblock != nullptr, \"nullptr pointer\");\n@@ -336,1 +336,1 @@\n-    assert(memblock != NULL, \"NULL pointer\");\n+    assert(memblock != nullptr, \"nullptr pointer\");\n","filename":"src\/hotspot\/share\/services\/mallocTracker.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,14 +75,14 @@\n-PerfVariable* Management::_begin_vm_creation_time = NULL;\n-PerfVariable* Management::_end_vm_creation_time = NULL;\n-PerfVariable* Management::_vm_init_done_time = NULL;\n-\n-InstanceKlass* Management::_diagnosticCommandImpl_klass = NULL;\n-InstanceKlass* Management::_garbageCollectorExtImpl_klass = NULL;\n-InstanceKlass* Management::_garbageCollectorMXBean_klass = NULL;\n-InstanceKlass* Management::_gcInfo_klass = NULL;\n-InstanceKlass* Management::_managementFactoryHelper_klass = NULL;\n-InstanceKlass* Management::_memoryManagerMXBean_klass = NULL;\n-InstanceKlass* Management::_memoryPoolMXBean_klass = NULL;\n-InstanceKlass* Management::_memoryUsage_klass = NULL;\n-InstanceKlass* Management::_sensor_klass = NULL;\n-InstanceKlass* Management::_threadInfo_klass = NULL;\n+PerfVariable* Management::_begin_vm_creation_time = nullptr;\n+PerfVariable* Management::_end_vm_creation_time = nullptr;\n+PerfVariable* Management::_vm_init_done_time = nullptr;\n+\n+InstanceKlass* Management::_diagnosticCommandImpl_klass = nullptr;\n+InstanceKlass* Management::_garbageCollectorExtImpl_klass = nullptr;\n+InstanceKlass* Management::_garbageCollectorMXBean_klass = nullptr;\n+InstanceKlass* Management::_gcInfo_klass = nullptr;\n+InstanceKlass* Management::_managementFactoryHelper_klass = nullptr;\n+InstanceKlass* Management::_memoryManagerMXBean_klass = nullptr;\n+InstanceKlass* Management::_memoryPoolMXBean_klass = nullptr;\n+InstanceKlass* Management::_memoryUsage_klass = nullptr;\n+InstanceKlass* Management::_sensor_klass = nullptr;\n+InstanceKlass* Management::_threadInfo_klass = nullptr;\n@@ -170,1 +170,1 @@\n-    if (k == NULL) {\n+    if (k == nullptr) {\n@@ -195,2 +195,2 @@\n-  if (k == NULL) {\n-     return NULL;\n+  if (k == nullptr) {\n+     return nullptr;\n@@ -208,1 +208,1 @@\n-  assert(ik->class_loader() == NULL, \"need to follow in oops_do\");\n+  assert(ik->class_loader() == nullptr, \"need to follow in oops_do\");\n@@ -224,1 +224,1 @@\n-  if (_begin_vm_creation_time == NULL) return;\n+  if (_begin_vm_creation_time == nullptr) return;\n@@ -246,1 +246,1 @@\n-  if (_threadInfo_klass == NULL) {\n+  if (_threadInfo_klass == nullptr) {\n@@ -253,1 +253,1 @@\n-  if (_memoryUsage_klass == NULL) {\n+  if (_memoryUsage_klass == nullptr) {\n@@ -260,1 +260,1 @@\n-  if (_memoryPoolMXBean_klass == NULL) {\n+  if (_memoryPoolMXBean_klass == nullptr) {\n@@ -267,1 +267,1 @@\n-  if (_memoryManagerMXBean_klass == NULL) {\n+  if (_memoryManagerMXBean_klass == nullptr) {\n@@ -274,1 +274,1 @@\n-  if (_garbageCollectorMXBean_klass == NULL) {\n+  if (_garbageCollectorMXBean_klass == nullptr) {\n@@ -281,1 +281,1 @@\n-  if (_sensor_klass == NULL) {\n+  if (_sensor_klass == nullptr) {\n@@ -288,1 +288,1 @@\n-  if (_managementFactoryHelper_klass == NULL) {\n+  if (_managementFactoryHelper_klass == nullptr) {\n@@ -295,1 +295,1 @@\n-  if (_garbageCollectorExtImpl_klass == NULL) {\n+  if (_garbageCollectorExtImpl_klass == nullptr) {\n@@ -303,1 +303,1 @@\n-  if (_gcInfo_klass == NULL) {\n+  if (_gcInfo_klass == nullptr) {\n@@ -310,1 +310,1 @@\n-  if (_diagnosticCommandImpl_klass == NULL) {\n+  if (_diagnosticCommandImpl_klass == nullptr) {\n@@ -341,1 +341,1 @@\n-  if (st != NULL) {\n+  if (st != nullptr) {\n@@ -402,2 +402,2 @@\n-  if (mgr == NULL) {\n-    THROW_(vmSymbols::java_lang_NullPointerException(), NULL);\n+  if (mgr == nullptr) {\n+    THROW_(vmSymbols::java_lang_NullPointerException(), nullptr);\n@@ -412,1 +412,1 @@\n-               NULL);\n+               nullptr);\n@@ -416,1 +416,1 @@\n-  if (gc == NULL || !gc->is_gc_memory_manager()) {\n+  if (gc == nullptr || !gc->is_gc_memory_manager()) {\n@@ -419,1 +419,1 @@\n-               NULL);\n+               nullptr);\n@@ -425,2 +425,2 @@\n-  if (obj == NULL) {\n-    THROW_(vmSymbols::java_lang_NullPointerException(), NULL);\n+  if (obj == nullptr) {\n+    THROW_(vmSymbols::java_lang_NullPointerException(), nullptr);\n@@ -467,2 +467,2 @@\n-  if (obj == NULL) {\n-    THROW_(vmSymbols::java_lang_NullPointerException(), NULL);\n+  if (obj == nullptr) {\n+    THROW_(vmSymbols::java_lang_NullPointerException(), nullptr);\n@@ -487,1 +487,1 @@\n-  if (support == NULL) {\n+  if (support == nullptr) {\n@@ -502,2 +502,2 @@\n-  MemoryManager* mgr = NULL;\n-  if (obj == NULL) {\n+  MemoryManager* mgr = nullptr;\n+  if (obj == nullptr) {\n@@ -507,2 +507,2 @@\n-    if (mgr == NULL) {\n-      return NULL;\n+    if (mgr == nullptr) {\n+      return nullptr;\n@@ -518,1 +518,1 @@\n-  if (mgr == NULL) {\n+  if (mgr == nullptr) {\n@@ -546,2 +546,2 @@\n-  MemoryPool* pool = NULL;\n-  if (obj == NULL) {\n+  MemoryPool* pool = nullptr;\n+  if (obj == nullptr) {\n@@ -551,2 +551,2 @@\n-    if (pool == NULL) {\n-      return NULL;\n+    if (pool == nullptr) {\n+      return nullptr;\n@@ -562,1 +562,1 @@\n-  if (pool == NULL) {\n+  if (pool == nullptr) {\n@@ -589,1 +589,1 @@\n-  if (pool != NULL) {\n+  if (pool != nullptr) {\n@@ -594,1 +594,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -604,1 +604,1 @@\n-  if (pool != NULL) {\n+  if (pool != nullptr) {\n@@ -609,1 +609,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -619,1 +619,1 @@\n-  if (pool != NULL && pool->is_collected_pool()) {\n+  if (pool != nullptr && pool->is_collected_pool()) {\n@@ -624,1 +624,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -630,1 +630,1 @@\n-  if (obj == NULL || sensorObj == NULL) {\n+  if (obj == nullptr || sensorObj == nullptr) {\n@@ -644,1 +644,1 @@\n-  assert(mpool != NULL, \"MemoryPool should exist\");\n+  assert(mpool != nullptr, \"MemoryPool should exist\");\n@@ -686,1 +686,1 @@\n-  assert(pool != NULL, \"MemoryPool should exist\");\n+  assert(pool != nullptr, \"MemoryPool should exist\");\n@@ -875,1 +875,1 @@\n-  \/\/ last flag entry is always NULL, so subtract 1\n+  \/\/ last flag entry is always null, so subtract 1\n@@ -984,1 +984,1 @@\n-  if (obj == NULL) {\n+  if (obj == nullptr) {\n@@ -988,1 +988,1 @@\n-    if (mgr != NULL) {\n+    if (mgr != nullptr) {\n@@ -1005,1 +1005,1 @@\n-  if (obj == NULL) {\n+  if (obj == nullptr) {\n@@ -1047,1 +1047,1 @@\n-      oop thread_obj = (jt != NULL ? jt->threadObj() : (oop)NULL);\n+      oop thread_obj = (jt != nullptr ? jt->threadObj() : (oop)nullptr);\n@@ -1065,1 +1065,1 @@\n-\/\/ the given array of thread IDs; or NULL if the thread does not exist\n+\/\/ the given array of thread IDs; or null if the thread does not exist\n@@ -1078,1 +1078,1 @@\n-  if (ids == NULL || infoArray == NULL) {\n+  if (ids == nullptr || infoArray == nullptr) {\n@@ -1121,1 +1121,1 @@\n-      if (jt == NULL) {\n+      if (jt == nullptr) {\n@@ -1144,1 +1144,1 @@\n-  for (ThreadSnapshot* ts = dump_result.snapshots(); ts != NULL; index++, ts = ts->next()) {\n+  for (ThreadSnapshot* ts = dump_result.snapshots(); ts != nullptr; index++, ts = ts->next()) {\n@@ -1148,3 +1148,3 @@\n-    if (ts->threadObj() == NULL) {\n-     \/\/ if the thread does not exist or now it is terminated, set threadinfo to NULL\n-      infoArray_h->obj_at_put(index, NULL);\n+    if (ts->threadObj() == nullptr) {\n+     \/\/ if the thread does not exist or now it is terminated, set threadinfo to null\n+      infoArray_h->obj_at_put(index, nullptr);\n@@ -1164,1 +1164,1 @@\n-\/\/ the given array of thread IDs; or NULL if the thread does not exist\n+\/\/ the given array of thread IDs; or null if the thread does not exist\n@@ -1168,1 +1168,1 @@\n-\/\/    ids - array of thread IDs; NULL indicates all live threads\n+\/\/    ids - array of thread IDs; null indicates all live threads\n@@ -1177,1 +1177,1 @@\n-  int num_threads = (ta != NULL ? ta->length() : 0);\n+  int num_threads = (ta != nullptr ? ta->length() : 0);\n@@ -1182,1 +1182,1 @@\n-  if (ids_ah() != NULL) {\n+  if (ids_ah() != nullptr) {\n@@ -1213,4 +1213,4 @@\n-  for (ThreadSnapshot* ts = dump_result.snapshots(); ts != NULL; ts = ts->next(), index++) {\n-    if (ts->threadObj() == NULL) {\n-     \/\/ if the thread does not exist or now it is terminated, set threadinfo to NULL\n-      result_h->obj_at_put(index, NULL);\n+  for (ThreadSnapshot* ts = dump_result.snapshots(); ts != nullptr; ts = ts->next(), index++) {\n+    if (ts->threadObj() == nullptr) {\n+     \/\/ if the thread does not exist or now it is terminated, set threadinfo to null\n+      result_h->obj_at_put(index, nullptr);\n@@ -1221,1 +1221,1 @@\n-    assert(stacktrace != NULL, \"Must have a stack trace dumped\");\n+    assert(stacktrace != nullptr, \"Must have a stack trace dumped\");\n@@ -1257,1 +1257,1 @@\n-          assert(monitor != NULL, \"must be a Java object\");\n+          assert(monitor != nullptr, \"must be a Java object\");\n@@ -1267,1 +1267,1 @@\n-        assert(object != NULL, \"must be a Java object\");\n+        assert(object != nullptr, \"must be a Java object\");\n@@ -1278,1 +1278,1 @@\n-      assert(ts->threadObj() != NULL, \"Must be a valid JavaThread\");\n+      assert(ts->threadObj() != nullptr, \"Must be a valid JavaThread\");\n@@ -1280,2 +1280,2 @@\n-      GrowableArray<OopHandle>* locks = (tcl != NULL ? tcl->owned_locks() : NULL);\n-      int num_locked_synchronizers = (locks != NULL ? locks->length() : 0);\n+      GrowableArray<OopHandle>* locks = (tcl != nullptr ? tcl->owned_locks() : nullptr);\n+      int num_locked_synchronizers = (locks != nullptr ? locks->length() : 0);\n@@ -1342,1 +1342,1 @@\n-        if (java_thread == NULL) {\n+        if (java_thread == nullptr) {\n@@ -1357,1 +1357,1 @@\n-      if (o == NULL) {\n+      if (o == nullptr) {\n@@ -1366,1 +1366,1 @@\n-      if (pool != NULL) {\n+      if (pool != nullptr) {\n@@ -1374,1 +1374,1 @@\n-      if (o == NULL) {\n+      if (o == nullptr) {\n@@ -1379,1 +1379,1 @@\n-      if (mgr != NULL) {\n+      if (mgr != nullptr) {\n@@ -1404,1 +1404,1 @@\n-  JavaThread* java_thread = NULL;\n+  JavaThread* java_thread = nullptr;\n@@ -1411,1 +1411,1 @@\n-    if (java_thread != NULL) {\n+    if (java_thread != nullptr) {\n@@ -1420,1 +1420,1 @@\n-  \/\/ last flag entry is always NULL, so subtract 1\n+  \/\/ last flag entry is always null, so subtract 1\n@@ -1458,1 +1458,1 @@\n-  if (name() == NULL) {\n+  if (name() == nullptr) {\n@@ -1530,1 +1530,1 @@\n-\/\/ specified by names. If names == NULL, fill globals array\n+\/\/ specified by names. If names == null, fill globals array\n@@ -1534,1 +1534,1 @@\n-\/\/ exist, globals[i].name will be set to NULL.\n+\/\/ exist, globals[i].name will be set to null.\n@@ -1541,1 +1541,1 @@\n-  if (globals == NULL) {\n+  if (globals == nullptr) {\n@@ -1547,1 +1547,1 @@\n-  if (names != NULL) {\n+  if (names != nullptr) {\n@@ -1562,1 +1562,1 @@\n-      if (s == NULL) {\n+      if (s == nullptr) {\n@@ -1569,1 +1569,1 @@\n-      if (flag != NULL &&\n+      if (flag != nullptr &&\n@@ -1573,1 +1573,1 @@\n-        globals[i].name = NULL;\n+        globals[i].name = nullptr;\n@@ -1578,1 +1578,1 @@\n-    \/\/ return all globals if names == NULL\n+    \/\/ return all globals if names == null\n@@ -1580,1 +1580,1 @@\n-    \/\/ last flag entry is always NULL, so subtract 1\n+    \/\/ last flag entry is always null, so subtract 1\n@@ -1604,1 +1604,1 @@\n-  if (fn == NULL) {\n+  if (fn == nullptr) {\n@@ -1645,2 +1645,2 @@\n-  assert(names() != NULL, \"names was NULL\");\n-  assert(times() != NULL, \"times was NULL\");\n+  assert(names() != nullptr, \"names was nullptr\");\n+  assert(times() != nullptr, \"times was nullptr\");\n@@ -1660,1 +1660,1 @@\n-  assert(thread != NULL, \"thread was NULL\");\n+  assert(thread != nullptr, \"thread was nullptr\");\n@@ -1674,1 +1674,1 @@\n-  assert(thread->name() != NULL, \"All threads should have a name\");\n+  assert(thread->name() != nullptr, \"All threads should have a name\");\n@@ -1698,1 +1698,1 @@\n-\/\/ CPU times.  If names or times is NULL, a NullPointerException is thrown.\n+\/\/ CPU times.  If names or times is null, a NullPointerException is thrown.\n@@ -1707,1 +1707,1 @@\n-  if (names == NULL || times == NULL) {\n+  if (names == nullptr || times == nullptr) {\n@@ -1739,1 +1739,1 @@\n-  if (deadlocks == NULL) {\n+  if (deadlocks == nullptr) {\n@@ -1746,1 +1746,1 @@\n-  for (cycle = deadlocks; cycle != NULL; cycle = cycle->next()) {\n+  for (cycle = deadlocks; cycle != nullptr; cycle = cycle->next()) {\n@@ -1754,1 +1754,1 @@\n-  for (cycle = deadlocks; cycle != NULL; cycle = cycle->next()) {\n+  for (cycle = deadlocks; cycle != nullptr; cycle = cycle->next()) {\n@@ -1768,1 +1768,1 @@\n-\/\/ Otherwise, returns NULL.\n+\/\/ Otherwise, returns null.\n@@ -1780,1 +1780,1 @@\n-\/\/ Otherwise, returns NULL.\n+\/\/ Otherwise, returns null.\n@@ -1803,1 +1803,1 @@\n-  if (info == NULL) {\n+  if (info == nullptr) {\n@@ -1816,1 +1816,1 @@\n-  if (array == NULL) {\n+  if (array == nullptr) {\n@@ -1863,1 +1863,1 @@\n-  if (gc_stat->gc_ext_attribute_values_size > 0 && gc_stat->gc_ext_attribute_values == NULL) {\n+  if (gc_stat->gc_ext_attribute_values_size > 0 && gc_stat->gc_ext_attribute_values == nullptr) {\n@@ -1934,1 +1934,1 @@\n-  if (on == NULL) {\n+  if (on == nullptr) {\n@@ -1940,1 +1940,1 @@\n-  if (name == NULL) {\n+  if (name == nullptr) {\n@@ -1970,1 +1970,1 @@\n-  if (cmds == NULL || infoArray == NULL) {\n+  if (cmds == nullptr || infoArray == nullptr) {\n@@ -1991,1 +1991,1 @@\n-    if (cmd == NULL) {\n+    if (cmd == nullptr) {\n@@ -1996,1 +1996,1 @@\n-    if (cmd_name == NULL) {\n+    if (cmd_name == nullptr) {\n@@ -2022,1 +2022,1 @@\n-  if (cmd == NULL) {\n+  if (cmd == nullptr) {\n@@ -2027,1 +2027,1 @@\n-  if (cmd_name == NULL) {\n+  if (cmd_name == nullptr) {\n@@ -2031,1 +2031,1 @@\n-  DCmd* dcmd = NULL;\n+  DCmd* dcmd = nullptr;\n@@ -2034,2 +2034,2 @@\n-  if (factory != NULL) {\n-    dcmd = factory->create_resource_instance(NULL);\n+  if (factory != nullptr) {\n+    dcmd = factory->create_resource_instance(nullptr);\n@@ -2037,1 +2037,1 @@\n-  if (dcmd == NULL) {\n+  if (dcmd == nullptr) {\n@@ -2064,1 +2064,1 @@\n-  if (cmd == NULL) {\n+  if (cmd == nullptr) {\n@@ -2069,1 +2069,1 @@\n-  if (cmdline == NULL) {\n+  if (cmdline == nullptr) {\n@@ -2105,1 +2105,1 @@\n-  if (java_thread != NULL) {\n+  if (java_thread != nullptr) {\n@@ -2119,1 +2119,1 @@\n-  if (ids == NULL || sizeArray == NULL) {\n+  if (ids == nullptr || sizeArray == nullptr) {\n@@ -2144,1 +2144,1 @@\n-    if (java_thread != NULL) {\n+    if (java_thread != nullptr) {\n@@ -2165,1 +2165,1 @@\n-  JavaThread* java_thread = NULL;\n+  JavaThread* java_thread = nullptr;\n@@ -2172,1 +2172,1 @@\n-    if (java_thread != NULL) {\n+    if (java_thread != nullptr) {\n@@ -2174,1 +2174,1 @@\n-      if (thread_obj != NULL && !thread_obj->is_a(vmClasses::BasicVirtualThread_klass())) {\n+      if (thread_obj != nullptr && !thread_obj->is_a(vmClasses::BasicVirtualThread_klass())) {\n@@ -2193,1 +2193,1 @@\n-  if (ids == NULL || timeArray == NULL) {\n+  if (ids == nullptr || timeArray == nullptr) {\n@@ -2218,1 +2218,1 @@\n-    if (java_thread != NULL) {\n+    if (java_thread != nullptr) {\n@@ -2229,2 +2229,2 @@\n-  NULL,\n-  NULL,\n+  nullptr,\n+  nullptr,\n@@ -2261,1 +2261,1 @@\n-  NULL,\n+  nullptr,\n@@ -2278,1 +2278,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":144,"deletions":144,"binary":false,"changes":288,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-      NOT_MANAGEMENT_RETURN_(NULL);\n+      NOT_MANAGEMENT_RETURN_(nullptr);\n@@ -86,1 +86,1 @@\n-      NOT_MANAGEMENT_RETURN_(NULL);\n+      NOT_MANAGEMENT_RETURN_(nullptr);\n@@ -88,1 +88,1 @@\n-      NOT_MANAGEMENT_RETURN_(NULL);\n+      NOT_MANAGEMENT_RETURN_(nullptr);\n@@ -90,1 +90,1 @@\n-      NOT_MANAGEMENT_RETURN_(NULL);\n+      NOT_MANAGEMENT_RETURN_(nullptr);\n@@ -92,1 +92,1 @@\n-      NOT_MANAGEMENT_RETURN_(NULL);\n+      NOT_MANAGEMENT_RETURN_(nullptr);\n@@ -94,1 +94,1 @@\n-      NOT_MANAGEMENT_RETURN_(NULL);\n+      NOT_MANAGEMENT_RETURN_(nullptr);\n","filename":"src\/hotspot\/share\/services\/management.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,1 +100,1 @@\n-      if (_malloc_sites.add(*site) != NULL) {\n+      if (_malloc_sites.add(*site) != nullptr) {\n@@ -130,1 +130,1 @@\n-      if (_virtual_memory_regions.add(*rgn) != NULL) {\n+      if (_virtual_memory_regions.add(*rgn) != nullptr) {\n@@ -217,1 +217,1 @@\n-  while ((rgn = itr.next()) != NULL) {\n+  while ((rgn = itr.next()) != nullptr) {\n@@ -220,1 +220,1 @@\n-    if (site == NULL) {\n+    if (site == nullptr) {\n@@ -223,1 +223,1 @@\n-      if (node == NULL) return false;\n+      if (node == nullptr) return false;\n@@ -278,1 +278,1 @@\n-    tmp.set_head(NULL);\n+    tmp.set_head(nullptr);\n@@ -289,1 +289,1 @@\n-    tmp.set_head(NULL);\n+    tmp.set_head(nullptr);\n@@ -300,1 +300,1 @@\n-    tmp.set_head(NULL);\n+    tmp.set_head(nullptr);\n@@ -312,1 +312,1 @@\n-    tmp.set_head(NULL);\n+    tmp.set_head(nullptr);\n@@ -324,1 +324,1 @@\n-    tmp.set_head(NULL);\n+    tmp.set_head(nullptr);\n","filename":"src\/hotspot\/share\/services\/memBaseline.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -320,1 +320,1 @@\n-  while ((malloc_site = malloc_itr.next()) != NULL) {\n+  while ((malloc_site = malloc_itr.next()) != nullptr) {\n@@ -348,1 +348,1 @@\n-  while ((virtual_memory_site = virtual_memory_itr.next()) != NULL) {\n+  while ((virtual_memory_site = virtual_memory_itr.next()) != nullptr) {\n@@ -378,1 +378,1 @@\n-  while ((rgn = itr.next()) != NULL) {\n+  while ((rgn = itr.next()) != nullptr) {\n@@ -384,1 +384,1 @@\n-  assert(reserved_rgn != NULL, \"NULL pointer\");\n+  assert(reserved_rgn != nullptr, \"null pointer\");\n@@ -411,1 +411,1 @@\n-      assert(itr.next() == NULL, \"Unexpectedly more than one regions\");\n+      assert(itr.next() == nullptr, \"Unexpectedly more than one regions\");\n@@ -418,1 +418,1 @@\n-  while ((committed_rgn = itr.next()) != NULL) {\n+  while ((committed_rgn = itr.next()) != nullptr) {\n@@ -737,2 +737,2 @@\n-  while (early_site != NULL || current_site != NULL) {\n-    if (early_site == NULL) {\n+  while (early_site != nullptr || current_site != nullptr) {\n+    if (early_site == nullptr) {\n@@ -741,1 +741,1 @@\n-    } else if (current_site == NULL) {\n+    } else if (current_site == nullptr) {\n@@ -768,2 +768,2 @@\n-  while (early_site != NULL || current_site != NULL) {\n-    if (early_site == NULL) {\n+  while (early_site != nullptr || current_site != nullptr) {\n+    if (early_site == nullptr) {\n@@ -772,1 +772,1 @@\n-    } else if (current_site == NULL) {\n+    } else if (current_site == nullptr) {\n@@ -820,1 +820,1 @@\n-  assert(stack != NULL, \"NULL stack\");\n+  assert(stack != nullptr, \"null stack\");\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n- assert(output != NULL, \"No output stream\");\n+ assert(output != nullptr, \"No output stream\");\n","filename":"src\/hotspot\/share\/services\/memTracker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-    assert(mem_base != NULL, \"caller should handle NULL\");\n+    assert(mem_base != nullptr, \"caller should handle null\");\n@@ -108,1 +108,1 @@\n-    assert(memblock != NULL, \"caller should handle NULL\");\n+    assert(memblock != nullptr, \"caller should handle null\");\n@@ -145,1 +145,1 @@\n-    if (addr != NULL) {\n+    if (addr != nullptr) {\n@@ -155,1 +155,1 @@\n-    if (addr != NULL) {\n+    if (addr != nullptr) {\n@@ -166,1 +166,1 @@\n-    if (addr != NULL) {\n+    if (addr != nullptr) {\n@@ -181,1 +181,1 @@\n-    if (addr != NULL) {\n+    if (addr != nullptr) {\n@@ -190,1 +190,1 @@\n-    if (addr != NULL) {\n+    if (addr != nullptr) {\n@@ -199,1 +199,1 @@\n-    if (addr != NULL) {\n+    if (addr != nullptr) {\n@@ -207,1 +207,1 @@\n-    if (addr != NULL) {\n+    if (addr != nullptr) {\n@@ -216,1 +216,1 @@\n-    assert(NMTQuery_lock != NULL, \"not initialized!\");\n+    assert(NMTQuery_lock != nullptr, \"not initialized!\");\n","filename":"src\/hotspot\/share\/services\/memTracker.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-  if (mgr_obj == NULL) {\n+  if (mgr_obj == nullptr) {\n@@ -85,2 +85,2 @@\n-    Symbol* method_name = NULL;\n-    Symbol* signature = NULL;\n+    Symbol* method_name = nullptr;\n+    Symbol* signature = nullptr;\n@@ -90,1 +90,1 @@\n-      if (extKlass != NULL) {\n+      if (extKlass != nullptr) {\n@@ -129,1 +129,1 @@\n-      if (mgr_obj != NULL) {\n+      if (mgr_obj != nullptr) {\n@@ -182,1 +182,1 @@\n-  _last_gc_stat = NULL;\n+  _last_gc_stat = nullptr;\n@@ -184,1 +184,1 @@\n-  _current_gc_stat = NULL;\n+  _current_gc_stat = nullptr;\n@@ -214,1 +214,1 @@\n-  assert(_last_gc_stat != NULL && _current_gc_stat != NULL, \"Just checking\");\n+  assert(_last_gc_stat != nullptr && _current_gc_stat != nullptr, \"Just checking\");\n","filename":"src\/hotspot\/share\/services\/memoryManager.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-  if (pool_obj == NULL) {\n+  if (pool_obj == nullptr) {\n@@ -127,1 +127,1 @@\n-      if (pool_obj != NULL) {\n+      if (pool_obj != nullptr) {\n@@ -161,1 +161,1 @@\n-  assert(*sensor_ptr == NULL, \"Should be called only once\");\n+  assert(*sensor_ptr == nullptr, \"Should be called only once\");\n","filename":"src\/hotspot\/share\/services\/memoryPool.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-MemoryManager*   MemoryService::_code_cache_manager    = NULL;\n+MemoryManager*   MemoryService::_code_cache_manager    = nullptr;\n@@ -54,2 +54,2 @@\n-MemoryPool*      MemoryService::_metaspace_pool        = NULL;\n-MemoryPool*      MemoryService::_compressed_class_pool = NULL;\n+MemoryPool*      MemoryService::_metaspace_pool        = nullptr;\n+MemoryPool*      MemoryService::_compressed_class_pool = nullptr;\n@@ -101,1 +101,1 @@\n-  if (_code_cache_manager == NULL) {\n+  if (_code_cache_manager == nullptr) {\n@@ -133,1 +133,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -143,1 +143,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/services\/memoryService.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -51,1 +51,1 @@\n-  assert(scale != NULL, \"Null pointer check\");\n+  assert(scale != nullptr, \"Null pointer check\");\n@@ -78,1 +78,1 @@\n-  if (s != NULL) {\n+  if (s != nullptr) {\n","filename":"src\/hotspot\/share\/services\/nmtCommon.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-  if (scale == NULL) return 0;\n+  if (scale == nullptr) return 0;\n","filename":"src\/hotspot\/share\/services\/nmtDCmd.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-                        \"monitor\", NULL};\n+                        \"monitor\", nullptr};\n","filename":"src\/hotspot\/share\/services\/nmtDCmd.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-  assert(old->next == NULL, \"unhang from map first\");\n+  assert(old->next == nullptr, \"unhang from map first\");\n@@ -79,1 +79,1 @@\n-  assert(p->next == NULL, \"unhang from map first\");\n+  assert(p->next == nullptr, \"unhang from map first\");\n@@ -98,1 +98,1 @@\n-    for (NMTPreInitAllocation* a = _entries[i]; a != NULL; a = a->next) {\n+    for (NMTPreInitAllocation* a = _entries[i]; a != nullptr; a = a->next) {\n@@ -118,1 +118,1 @@\n-    for (NMTPreInitAllocation* a = _entries[i]; a != NULL; a = a->next) {\n+    for (NMTPreInitAllocation* a = _entries[i]; a != nullptr; a = a->next) {\n@@ -134,1 +134,1 @@\n-    for (const NMTPreInitAllocation* a = _entries[i]; a != NULL; a = a->next) {\n+    for (const NMTPreInitAllocation* a = _entries[i]; a != nullptr; a = a->next) {\n@@ -141,1 +141,1 @@\n-      for (const NMTPreInitAllocation* a2 = _entries[i]; a2 != NULL; a2 = a2->next) {\n+      for (const NMTPreInitAllocation* a2 = _entries[i]; a2 != nullptr; a2 = a2->next) {\n@@ -161,1 +161,1 @@\n-NMTPreInitAllocationTable* NMTPreInit::_table = NULL;\n+NMTPreInitAllocationTable* NMTPreInit::_table = nullptr;\n@@ -169,1 +169,1 @@\n-  assert(_table == NULL, \"just once\");\n+  assert(_table == nullptr, \"just once\");\n@@ -188,1 +188,1 @@\n-  if (_table != NULL) {\n+  if (_table != nullptr) {\n@@ -197,1 +197,1 @@\n-  if (_table != NULL) {\n+  if (_table != nullptr) {\n","filename":"src\/hotspot\/share\/services\/nmtPreInit.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,1 +126,1 @@\n-  NMTPreInitAllocation(size_t size) : next(NULL), size(size) {};\n+  NMTPreInitAllocation(size_t size) : next(nullptr), size(size) {};\n@@ -173,1 +173,1 @@\n-    while ((*aa) != NULL && (*aa)->payload() != p) {\n+    while ((*aa) != nullptr && (*aa)->payload() != p) {\n@@ -176,1 +176,1 @@\n-    assert((*aa) == NULL || p == (*aa)->payload(),\n+    assert((*aa) == nullptr || p == (*aa)->payload(),\n@@ -190,1 +190,1 @@\n-    assert(a->next == NULL, \"entry already in table?\");\n+    assert(a->next == nullptr, \"entry already in table?\");\n@@ -197,1 +197,1 @@\n-  \/\/ Returns NULL if not found.\n+  \/\/ Returns null if not found.\n@@ -205,1 +205,1 @@\n-    assert((*aa) != NULL, \"Entry not found: \" PTR_FORMAT, p2i(p));\n+    assert((*aa) != nullptr, \"Entry not found: \" PTR_FORMAT, p2i(p));\n@@ -208,1 +208,1 @@\n-    DEBUG_ONLY(a->next = NULL;)  \/\/ mark as removed\n+    DEBUG_ONLY(a->next = nullptr;)  \/\/ mark as removed\n@@ -233,1 +233,1 @@\n-    if (_table == NULL) {\n+    if (_table == nullptr) {\n@@ -240,1 +240,1 @@\n-    assert(_table != NULL, \"stray allocation?\");\n+    assert(_table != nullptr, \"stray allocation?\");\n@@ -246,1 +246,1 @@\n-    assert(_table != NULL, \"stray allocation?\");\n+    assert(_table != nullptr, \"stray allocation?\");\n@@ -280,1 +280,1 @@\n-    if (old_p == NULL) {                  \/\/ realloc(NULL, n)\n+    if (old_p == nullptr) {                  \/\/ realloc(null, n)\n@@ -307,1 +307,1 @@\n-      if (a != NULL) { \/\/ this was originally a pre-init allocation\n+      if (a != nullptr) { \/\/ this was originally a pre-init allocation\n@@ -320,1 +320,1 @@\n-    if (p == NULL) { \/\/ free(NULL)\n+    if (p == nullptr) { \/\/ free(null)\n@@ -339,1 +339,1 @@\n-      if (find_in_map(p) != NULL) {\n+      if (find_in_map(p) != nullptr) {\n","filename":"src\/hotspot\/share\/services\/nmtPreInit.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,4 +35,4 @@\n-PerfCounter*  RuntimeService::_sync_time_ticks = NULL;\n-PerfCounter*  RuntimeService::_total_safepoints = NULL;\n-PerfCounter*  RuntimeService::_safepoint_time_ticks = NULL;\n-PerfCounter*  RuntimeService::_application_time_ticks = NULL;\n+PerfCounter*  RuntimeService::_sync_time_ticks = nullptr;\n+PerfCounter*  RuntimeService::_total_safepoints = nullptr;\n+PerfCounter*  RuntimeService::_safepoint_time_ticks = nullptr;\n+PerfCounter*  RuntimeService::_application_time_ticks = nullptr;\n","filename":"src\/hotspot\/share\/services\/runtimeService.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-static ThreadIdTableHash* volatile _local_table = NULL;\n+static ThreadIdTableHash* volatile _local_table = nullptr;\n@@ -100,1 +100,1 @@\n-      if (tobj != NULL) {\n+      if (tobj != nullptr) {\n@@ -114,1 +114,1 @@\n-  assert(_local_table == NULL, \"Thread table is already created\");\n+  assert(_local_table == nullptr, \"Thread table is already created\");\n@@ -203,1 +203,1 @@\n-  ThreadGet(): _return(NULL) {}\n+  ThreadGet(): _return(nullptr) {}\n","filename":"src\/hotspot\/share\/services\/threadIdTable.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,4 +66,4 @@\n-PerfCounter*  ThreadService::_total_threads_count = NULL;\n-PerfVariable* ThreadService::_live_threads_count = NULL;\n-PerfVariable* ThreadService::_peak_threads_count = NULL;\n-PerfVariable* ThreadService::_daemon_threads_count = NULL;\n+PerfCounter*  ThreadService::_total_threads_count = nullptr;\n+PerfVariable* ThreadService::_live_threads_count = nullptr;\n+PerfVariable* ThreadService::_peak_threads_count = nullptr;\n+PerfVariable* ThreadService::_daemon_threads_count = nullptr;\n@@ -73,1 +73,1 @@\n-ThreadDumpResult* ThreadService::_threaddump_list = NULL;\n+ThreadDumpResult* ThreadService::_threaddump_list = nullptr;\n@@ -78,1 +78,1 @@\n-static OopStorage* _thread_service_storage = NULL;\n+static OopStorage* _thread_service_storage = nullptr;\n@@ -224,1 +224,1 @@\n-  assert(thread != NULL, \"should be non-NULL\");\n+  assert(thread != nullptr, \"should be non-nullptr\");\n@@ -237,2 +237,2 @@\n-  oop obj = NULL;\n-  if (wait_obj != NULL) {\n+  oop obj = nullptr;\n+  if (wait_obj != nullptr) {\n@@ -243,1 +243,1 @@\n-    if (enter_obj != NULL) {\n+    if (enter_obj != nullptr) {\n@@ -281,1 +281,1 @@\n-  for (ThreadDumpResult* dump = _threaddump_list; dump != NULL; dump = dump->next()) {\n+  for (ThreadDumpResult* dump = _threaddump_list; dump != nullptr; dump = dump->next()) {\n@@ -288,1 +288,1 @@\n-  if (_threaddump_list == NULL) {\n+  if (_threaddump_list == nullptr) {\n@@ -299,1 +299,1 @@\n-  ThreadDumpResult* prev = NULL;\n+  ThreadDumpResult* prev = nullptr;\n@@ -301,1 +301,1 @@\n-  for (ThreadDumpResult* d = _threaddump_list; d != NULL; prev = d, d = d->next()) {\n+  for (ThreadDumpResult* d = _threaddump_list; d != nullptr; prev = d, d = d->next()) {\n@@ -303,1 +303,1 @@\n-      if (prev == NULL) {\n+      if (prev == nullptr) {\n@@ -344,1 +344,1 @@\n-  for (ThreadSnapshot* ts = dump_result.snapshots(); ts != NULL; i++, ts = ts->next()) {\n+  for (ThreadSnapshot* ts = dump_result.snapshots(); ts != nullptr; i++, ts = ts->next()) {\n@@ -346,1 +346,1 @@\n-    if (stacktrace == NULL) {\n+    if (stacktrace == nullptr) {\n@@ -348,1 +348,1 @@\n-      result_obj->obj_at_put(i, NULL);\n+      result_obj->obj_at_put(i, nullptr);\n@@ -361,1 +361,1 @@\n-  if (stat != NULL) {\n+  if (stat != nullptr) {\n@@ -368,1 +368,1 @@\n-  if (stat != NULL) {\n+  if (stat != nullptr) {\n@@ -375,1 +375,1 @@\n-  if (threadObj != NULL && threadObj->is_a(vmClasses::BasicVirtualThread_klass())) {\n+  if (threadObj != nullptr && threadObj->is_a(vmClasses::BasicVirtualThread_klass())) {\n@@ -396,3 +396,3 @@\n-  ObjectMonitor* waitingToLockMonitor = NULL;\n-  JvmtiRawMonitor* waitingToLockRawMonitor = NULL;\n-  oop waitingToLockBlocker = NULL;\n+  ObjectMonitor* waitingToLockMonitor = nullptr;\n+  JvmtiRawMonitor* waitingToLockRawMonitor = nullptr;\n+  oop waitingToLockBlocker = nullptr;\n@@ -405,1 +405,1 @@\n-  for (JavaThread* jt = jti.first(); jt != NULL; jt = jti.next()) {\n+  for (JavaThread* jt = jti.first(); jt != nullptr; jt = jti.next()) {\n@@ -411,2 +411,2 @@\n-  DeadlockCycle* deadlocks = NULL;\n-  DeadlockCycle* last = NULL;\n+  DeadlockCycle* deadlocks = nullptr;\n+  DeadlockCycle* last = nullptr;\n@@ -414,1 +414,1 @@\n-  for (JavaThread* jt = jti.first(); jt != NULL; jt = jti.next()) {\n+  for (JavaThread* jt = jti.first(); jt != nullptr; jt = jti.next()) {\n@@ -446,3 +446,3 @@\n-    while (waitingToLockMonitor != NULL ||\n-           waitingToLockRawMonitor != NULL ||\n-           waitingToLockBlocker != NULL) {\n+    while (waitingToLockMonitor != nullptr ||\n+           waitingToLockRawMonitor != nullptr ||\n+           waitingToLockBlocker != nullptr) {\n@@ -451,1 +451,1 @@\n-      if (waitingToLockRawMonitor != NULL) {\n+      if (waitingToLockRawMonitor != nullptr) {\n@@ -453,1 +453,1 @@\n-        if (owner != NULL && \/\/ the raw monitor could be released at any time\n+        if (owner != nullptr && \/\/ the raw monitor could be released at any time\n@@ -457,1 +457,1 @@\n-      } else if (waitingToLockMonitor != NULL) {\n+      } else if (waitingToLockMonitor != nullptr) {\n@@ -460,1 +460,1 @@\n-          if (currentThread == NULL) {\n+          if (currentThread == nullptr) {\n@@ -468,1 +468,1 @@\n-            if (deadlocks == NULL) {\n+            if (deadlocks == nullptr) {\n@@ -484,1 +484,1 @@\n-            currentThread = threadObj != NULL ? java_lang_Thread::thread(threadObj) : NULL;\n+            currentThread = threadObj != nullptr ? java_lang_Thread::thread(threadObj) : nullptr;\n@@ -486,1 +486,1 @@\n-            currentThread = NULL;\n+            currentThread = nullptr;\n@@ -491,1 +491,1 @@\n-      if (currentThread == NULL || is_virtual_or_carrier_thread(currentThread)) {\n+      if (currentThread == nullptr || is_virtual_or_carrier_thread(currentThread)) {\n@@ -509,1 +509,1 @@\n-        if (deadlocks == NULL) {\n+        if (deadlocks == nullptr) {\n@@ -530,1 +530,1 @@\n-ThreadDumpResult::ThreadDumpResult() : _num_threads(0), _num_snapshots(0), _snapshots(NULL), _last(NULL), _next(NULL), _setter() {\n+ThreadDumpResult::ThreadDumpResult() : _num_threads(0), _num_snapshots(0), _snapshots(nullptr), _last(nullptr), _next(nullptr), _setter() {\n@@ -538,1 +538,1 @@\n-ThreadDumpResult::ThreadDumpResult(int num_threads) : _num_threads(num_threads), _num_snapshots(0), _snapshots(NULL), _last(NULL), _next(NULL), _setter() {\n+ThreadDumpResult::ThreadDumpResult(int num_threads) : _num_threads(num_threads), _num_snapshots(0), _snapshots(nullptr), _last(nullptr), _next(nullptr), _setter() {\n@@ -551,1 +551,1 @@\n-  while (ts != NULL) {\n+  while (ts != nullptr) {\n@@ -575,1 +575,1 @@\n-  if (_snapshots == NULL) {\n+  if (_snapshots == nullptr) {\n@@ -584,1 +584,1 @@\n-  for (ThreadSnapshot* ts = _snapshots; ts != NULL; ts = ts->next()) {\n+  for (ThreadSnapshot* ts = _snapshots; ts != nullptr; ts = ts->next()) {\n@@ -597,1 +597,1 @@\n-  _locked_monitors = NULL;\n+  _locked_monitors = nullptr;\n@@ -608,1 +608,1 @@\n-        assert(monitor->owner() != NULL, \"This monitor must have an owning object\");\n+        assert(monitor->owner() != nullptr, \"This monitor must have an owning object\");\n@@ -616,1 +616,1 @@\n-  if (_locked_monitors != NULL) {\n+  if (_locked_monitors != nullptr) {\n@@ -632,1 +632,1 @@\n-  int len = (_locked_monitors != NULL ? _locked_monitors->length() : 0);\n+  int len = (_locked_monitors != nullptr ? _locked_monitors->length() : 0);\n@@ -663,1 +663,1 @@\n-    _jni_locked_monitors = NULL;\n+    _jni_locked_monitors = nullptr;\n@@ -676,1 +676,1 @@\n-  if (_jni_locked_monitors != NULL) {\n+  if (_jni_locked_monitors != nullptr) {\n@@ -746,1 +746,1 @@\n-      assert(monitor != NULL, \"must be a Java object\");\n+      assert(monitor != nullptr, \"must be a Java object\");\n@@ -758,1 +758,1 @@\n-  assert(ik != NULL, \"must be loaded in 1.4+\");\n+  assert(ik != nullptr, \"must be loaded in 1.4+\");\n@@ -791,1 +791,1 @@\n-  for (ThreadConcurrentLocks* t = _map; t != NULL;)  {\n+  for (ThreadConcurrentLocks* t = _map; t != nullptr;)  {\n@@ -820,1 +820,1 @@\n-    if (owner_thread_obj != NULL) {\n+    if (owner_thread_obj != nullptr) {\n@@ -832,1 +832,1 @@\n-  if (tcl != NULL) {\n+  if (tcl != nullptr) {\n@@ -840,1 +840,1 @@\n-  if (_map == NULL) {\n+  if (_map == nullptr) {\n@@ -849,1 +849,1 @@\n-  for (ThreadConcurrentLocks* tcl = _map; tcl != NULL; tcl = tcl->next()) {\n+  for (ThreadConcurrentLocks* tcl = _map; tcl != nullptr; tcl = tcl->next()) {\n@@ -854,1 +854,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -860,2 +860,2 @@\n-  GrowableArray<OopHandle>* locks = (tcl != NULL ? tcl->owned_locks() : NULL);\n-  if (locks == NULL || locks->is_empty()) {\n+  GrowableArray<OopHandle>* locks = (tcl != nullptr ? tcl->owned_locks() : nullptr);\n+  if (locks == nullptr || locks->is_empty()) {\n@@ -877,1 +877,1 @@\n-  _next = NULL;\n+  _next = nullptr;\n@@ -915,2 +915,2 @@\n-  \/\/ If thread is still attaching then threadObj will be NULL.\n-  _thread_status = threadObj == NULL ? JavaThreadStatus::NEW\n+  \/\/ If thread is still attaching then threadObj will be null.\n+  _thread_status = threadObj == nullptr ? JavaThreadStatus::NEW\n@@ -924,2 +924,2 @@\n-  oop blocker_object = NULL;\n-  oop blocker_object_owner = NULL;\n+  oop blocker_object = nullptr;\n+  oop blocker_object_owner = nullptr;\n@@ -930,1 +930,1 @@\n-    assert(vthread != NULL, \"\");\n+    assert(vthread != nullptr, \"\");\n@@ -937,1 +937,1 @@\n-    if (obj() == NULL) {\n+    if (obj() == nullptr) {\n@@ -943,2 +943,2 @@\n-      if ((owner == NULL && _thread_status == JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER)\n-          || (owner != NULL && owner->is_attaching_via_jni())) {\n+      if ((owner == nullptr && _thread_status == JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER)\n+          || (owner != nullptr && owner->is_attaching_via_jni())) {\n@@ -952,2 +952,2 @@\n-        blocker_object = NULL;\n-      } else if (owner != NULL) {\n+        blocker_object = nullptr;\n+      } else if (owner != nullptr) {\n@@ -959,1 +959,1 @@\n-    if (blocker_object != NULL && blocker_object->is_a(vmClasses::java_util_concurrent_locks_AbstractOwnableSynchronizer_klass())) {\n+    if (blocker_object != nullptr && blocker_object->is_a(vmClasses::java_util_concurrent_locks_AbstractOwnableSynchronizer_klass())) {\n@@ -964,1 +964,1 @@\n-  if (blocker_object != NULL) {\n+  if (blocker_object != nullptr) {\n@@ -967,1 +967,1 @@\n-  if (blocker_object_owner != NULL) {\n+  if (blocker_object_owner != nullptr) {\n@@ -992,1 +992,1 @@\n-  if (_stack_trace != NULL) {\n+  if (_stack_trace != nullptr) {\n@@ -1000,1 +1000,1 @@\n-  _next = NULL;\n+  _next = nullptr;\n@@ -1028,1 +1028,1 @@\n-    if (waitingToLockRawMonitor != NULL) {\n+    if (waitingToLockRawMonitor != nullptr) {\n@@ -1031,2 +1031,2 @@\n-      \/\/ Could be NULL as the raw monitor could be released at any time if held by non-JavaThread\n-      if (owner != NULL) {\n+      \/\/ Could be null as the raw monitor could be released at any time if held by non-JavaThread\n+      if (owner != nullptr) {\n@@ -1044,1 +1044,1 @@\n-    if (waitingToLockMonitor != NULL) {\n+    if (waitingToLockMonitor != nullptr) {\n@@ -1054,1 +1054,1 @@\n-      if (currentThread == NULL) {\n+      if (currentThread == nullptr) {\n@@ -1071,1 +1071,1 @@\n-      assert(currentThread != NULL, \"AbstractOwnableSynchronizer owning thread is unexpectedly NULL\");\n+      assert(currentThread != nullptr, \"AbstractOwnableSynchronizer owning thread is unexpectedly nullptr\");\n@@ -1104,1 +1104,1 @@\n-    if (jt->threadObj() == NULL   ||\n+    if (jt->threadObj() == nullptr   ||\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":85,"deletions":85,"binary":false,"changes":170,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -223,2 +223,2 @@\n-  ThreadSnapshot() : _thread(NULL),\n-                     _stack_trace(NULL), _concurrent_locks(NULL), _next(NULL) {};\n+  ThreadSnapshot() : _thread(nullptr),\n+                     _stack_trace(nullptr), _concurrent_locks(nullptr), _next(nullptr) {};\n@@ -282,1 +282,1 @@\n-  int             num_jni_locked_monitors() { return (_jni_locked_monitors != NULL ? _jni_locked_monitors->length() : 0); }\n+  int             num_jni_locked_monitors() { return (_jni_locked_monitors != nullptr ? _jni_locked_monitors->length() : 0); }\n@@ -308,1 +308,1 @@\n-  int       num_locked_monitors()       { return (_locked_monitors != NULL ? _locked_monitors->length() : 0); }\n+  int       num_locked_monitors()       { return (_locked_monitors != nullptr ? _locked_monitors->length() : 0); }\n@@ -346,1 +346,1 @@\n-  ConcurrentLocksDump(bool retain_map_on_free) : _map(NULL), _last(NULL), _retain_map_on_free(retain_map_on_free) {\n+  ConcurrentLocksDump(bool retain_map_on_free) : _map(nullptr), _last(nullptr), _retain_map_on_free(retain_map_on_free) {\n@@ -349,1 +349,1 @@\n-  ConcurrentLocksDump() : _map(NULL), _last(NULL), _retain_map_on_free(false) {\n+  ConcurrentLocksDump() : _map(nullptr), _last(nullptr), _retain_map_on_free(false) {\n@@ -462,1 +462,1 @@\n-    return java_thread != NULL && java_thread->threadObj() != NULL;\n+    return java_thread != nullptr && java_thread->threadObj() != nullptr;\n@@ -549,1 +549,1 @@\n-    assert((java_thread != NULL), \"Java thread should not be null here\");\n+    assert((java_thread != nullptr), \"Java thread should not be null here\");\n@@ -565,2 +565,2 @@\n-    JavaThreadStatusChanger(java_thread), _stat(NULL), _active(false) {\n-    assert((java_thread != NULL), \"Java thread should not be null here\");\n+    JavaThreadStatusChanger(java_thread), _stat(nullptr), _active(false) {\n+    assert((java_thread != nullptr), \"Java thread should not be null here\");\n","filename":"src\/hotspot\/share\/services\/threadService.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-SortedLinkedList<SimpleThreadStackSite, ThreadStackTracker::compare_thread_stack_base>* ThreadStackTracker::_simple_thread_stacks = NULL;\n+SortedLinkedList<SimpleThreadStackSite, ThreadStackTracker::compare_thread_stack_base>* ThreadStackTracker::_simple_thread_stacks = nullptr;\n@@ -40,1 +40,1 @@\n-    return (_simple_thread_stacks != NULL);\n+    return (_simple_thread_stacks != nullptr);\n@@ -51,1 +51,1 @@\n-  assert(base != NULL, \"Should have been filtered\");\n+  assert(base != nullptr, \"Should have been filtered\");\n@@ -61,1 +61,1 @@\n-      assert(_simple_thread_stacks != NULL, \"Must be initialized\");\n+      assert(_simple_thread_stacks != nullptr, \"Must be initialized\");\n@@ -70,1 +70,1 @@\n-  assert(base != NULL, \"Should have been filtered\");\n+  assert(base != nullptr, \"Should have been filtered\");\n@@ -80,1 +80,1 @@\n-      assert(_simple_thread_stacks != NULL, \"Must be initialized\");\n+      assert(_simple_thread_stacks != nullptr, \"Must be initialized\");\n@@ -93,1 +93,1 @@\n-      assert(_simple_thread_stacks != NULL, \"Must be initialized\");\n+      assert(_simple_thread_stacks != nullptr, \"Must be initialized\");\n@@ -98,1 +98,1 @@\n-      while (ts != NULL) {\n+      while (ts != nullptr) {\n@@ -101,1 +101,1 @@\n-        if (exist != NULL) {\n+        if (exist != nullptr) {\n@@ -114,1 +114,1 @@\n-    while (s != NULL) {\n+    while (s != nullptr) {\n","filename":"src\/hotspot\/share\/services\/threadStackTracker.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-  LinkedListNode<CommittedMemoryRegion>* preceding = NULL;\n+  LinkedListNode<CommittedMemoryRegion>* preceding = nullptr;\n@@ -74,1 +74,1 @@\n-  for (LinkedListNode<CommittedMemoryRegion>* node = from; node != NULL; node = node->next()) {\n+  for (LinkedListNode<CommittedMemoryRegion>* node = from; node != nullptr; node = node->next()) {\n@@ -89,1 +89,1 @@\n-  if (node != NULL) {\n+  if (node != nullptr) {\n@@ -102,1 +102,1 @@\n-  if (other == NULL) {\n+  if (other == nullptr) {\n@@ -111,1 +111,1 @@\n-  assert(addr != NULL, \"Invalid address\");\n+  assert(addr != nullptr, \"Invalid address\");\n@@ -117,1 +117,1 @@\n-  LinkedListNode<CommittedMemoryRegion>* next = (prev != NULL ? prev->next() : _committed_regions.head());\n+  LinkedListNode<CommittedMemoryRegion>* next = (prev != nullptr ? prev->next() : _committed_regions.head());\n@@ -119,1 +119,1 @@\n-  if (next != NULL) {\n+  if (next != nullptr) {\n@@ -134,2 +134,2 @@\n-      prev = find_preceding_node_from((prev != NULL ? prev : _committed_regions.head()), addr);\n-      next = (prev != NULL ? prev->next() : _committed_regions.head());\n+      prev = find_preceding_node_from((prev != nullptr ? prev : _committed_regions.head()), addr);\n+      next = (prev != nullptr ? prev->next() : _committed_regions.head());\n@@ -165,1 +165,1 @@\n-  assert(addr != NULL, \"Invalid address\");\n+  assert(addr != nullptr, \"Invalid address\");\n@@ -189,2 +189,2 @@\n-    assert(high_node == NULL || node->next() == high_node, \"Should be right after\");\n-    return (high_node != NULL);\n+    assert(high_node == nullptr || node->next() == high_node, \"Should be right after\");\n+    return (high_node != nullptr);\n@@ -197,1 +197,1 @@\n-  assert(addr != NULL, \"Invalid address\");\n+  assert(addr != nullptr, \"Invalid address\");\n@@ -204,1 +204,1 @@\n-  LinkedListNode<CommittedMemoryRegion>* prev = NULL;\n+  LinkedListNode<CommittedMemoryRegion>* prev = nullptr;\n@@ -207,1 +207,1 @@\n-  while (head != NULL) {\n+  while (head != nullptr) {\n@@ -254,1 +254,1 @@\n-  assert(addr != NULL, \"Invalid address\");\n+  assert(addr != nullptr, \"Invalid address\");\n@@ -259,1 +259,1 @@\n-  LinkedListNode<CommittedMemoryRegion>* prev = NULL;\n+  LinkedListNode<CommittedMemoryRegion>* prev = nullptr;\n@@ -261,1 +261,1 @@\n-  while (head != NULL) {\n+  while (head != nullptr) {\n@@ -269,2 +269,2 @@\n-  if (head != NULL) {\n-    if (prev != NULL) {\n+  if (head != nullptr) {\n+    if (prev != nullptr) {\n@@ -273,1 +273,1 @@\n-      _committed_regions.set_head(NULL);\n+      _committed_regions.set_head(nullptr);\n@@ -284,1 +284,1 @@\n-  while (head != NULL) {\n+  while (head != nullptr) {\n@@ -307,1 +307,1 @@\n-  while (head != NULL) {\n+  while (head != nullptr) {\n@@ -323,1 +323,1 @@\n-  assert(_reserved_regions == NULL, \"only call once\");\n+  assert(_reserved_regions == nullptr, \"only call once\");\n@@ -328,1 +328,1 @@\n-    return (_reserved_regions != NULL);\n+    return (_reserved_regions != nullptr);\n@@ -335,1 +335,1 @@\n-  assert(base_addr != NULL, \"Invalid address\");\n+  assert(base_addr != nullptr, \"Invalid address\");\n@@ -337,1 +337,1 @@\n-  assert(_reserved_regions != NULL, \"Sanity check\");\n+  assert(_reserved_regions != nullptr, \"Sanity check\");\n@@ -343,1 +343,1 @@\n-  if (reserved_rgn == NULL) {\n+  if (reserved_rgn == nullptr) {\n@@ -345,1 +345,1 @@\n-    return _reserved_regions->add(rgn) != NULL;\n+    return _reserved_regions->add(rgn) != nullptr;\n@@ -410,2 +410,2 @@\n-  assert(addr != NULL, \"Invalid address\");\n-  assert(_reserved_regions != NULL, \"Sanity check\");\n+  assert(addr != nullptr, \"Invalid address\");\n+  assert(_reserved_regions != nullptr, \"Sanity check\");\n@@ -415,1 +415,1 @@\n-  if (reserved_rgn != NULL) {\n+  if (reserved_rgn != nullptr) {\n@@ -427,1 +427,1 @@\n-  assert(addr != NULL, \"Invalid address\");\n+  assert(addr != nullptr, \"Invalid address\");\n@@ -429,1 +429,1 @@\n-  assert(_reserved_regions != NULL, \"Sanity check\");\n+  assert(_reserved_regions != nullptr, \"Sanity check\");\n@@ -434,1 +434,1 @@\n-  if (reserved_rgn == NULL) {\n+  if (reserved_rgn == nullptr) {\n@@ -438,1 +438,1 @@\n-  assert(reserved_rgn != NULL, \"Add committed region, No reserved region found\");\n+  assert(reserved_rgn != nullptr, \"Add committed region, No reserved region found\");\n@@ -447,1 +447,1 @@\n-  assert(addr != NULL, \"Invalid address\");\n+  assert(addr != nullptr, \"Invalid address\");\n@@ -449,1 +449,1 @@\n-  assert(_reserved_regions != NULL, \"Sanity check\");\n+  assert(_reserved_regions != nullptr, \"Sanity check\");\n@@ -453,1 +453,1 @@\n-  assert(reserved_rgn != NULL, \"No reserved region (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\", p2i(addr), size);\n+  assert(reserved_rgn != nullptr, \"No reserved region (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\", p2i(addr), size);\n@@ -463,2 +463,2 @@\n-  assert(rgn != NULL, \"Sanity check\");\n-  assert(_reserved_regions != NULL, \"Sanity check\");\n+  assert(rgn != nullptr, \"Sanity check\");\n+  assert(_reserved_regions != nullptr, \"Sanity check\");\n@@ -483,1 +483,1 @@\n-  assert(addr != NULL, \"Invalid address\");\n+  assert(addr != nullptr, \"Invalid address\");\n@@ -485,1 +485,1 @@\n-  assert(_reserved_regions != NULL, \"Sanity check\");\n+  assert(_reserved_regions != nullptr, \"Sanity check\");\n@@ -490,1 +490,1 @@\n-  if (reserved_rgn == NULL) {\n+  if (reserved_rgn == nullptr) {\n@@ -494,1 +494,1 @@\n-  assert(reserved_rgn != NULL, \"No reserved region\");\n+  assert(reserved_rgn != nullptr, \"No reserved region\");\n@@ -518,1 +518,1 @@\n-      assert(cls_rgn != NULL, \"Class space region  not recorded?\");\n+      assert(cls_rgn != nullptr, \"Class space region  not recorded?\");\n@@ -542,1 +542,1 @@\n-    if (new_rgn == NULL) {\n+    if (new_rgn == nullptr) {\n@@ -559,1 +559,1 @@\n-  assert(reserved_rgn != NULL, \"No reserved region\");\n+  assert(reserved_rgn != nullptr, \"No reserved region\");\n@@ -602,1 +602,1 @@\n-    assert(committed_start != NULL, \"Must be\");\n+    assert(committed_start != nullptr, \"Must be\");\n@@ -634,1 +634,1 @@\n-        assert(committed_start != NULL, \"Should not be null\");\n+        assert(committed_start != nullptr, \"Should not be null\");\n@@ -659,1 +659,1 @@\n-  assert(_reserved_regions != NULL, \"Sanity check\");\n+  assert(_reserved_regions != nullptr, \"Sanity check\");\n@@ -662,1 +662,1 @@\n-  if (_reserved_regions != NULL) {\n+  if (_reserved_regions != nullptr) {\n@@ -664,1 +664,1 @@\n-    while (head != NULL) {\n+    while (head != nullptr) {\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":54,"deletions":54,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -185,1 +185,1 @@\n-     assert(addr != NULL, \"Invalid address\");\n+     assert(addr != nullptr, \"Invalid address\");\n@@ -258,1 +258,1 @@\n-    assert(base != NULL, \"Sanity check\");\n+    assert(base != nullptr, \"Sanity check\");\n@@ -339,1 +339,1 @@\n-    while (rgn != NULL) {\n+    while (rgn != nullptr) {\n@@ -356,1 +356,1 @@\n-    assert(rgn.base() != NULL, \"Invalid base address\");\n+    assert(rgn.base() != nullptr, \"Invalid base address\");\n@@ -358,1 +358,1 @@\n-    return _committed_regions.add(rgn) != NULL;\n+    return _committed_regions.add(rgn) != nullptr;\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-  if (JVMFlagLimit::get_range(flag) != NULL) {\n+  if (JVMFlagLimit::get_range(flag) != nullptr) {\n@@ -69,1 +69,1 @@\n-  if ((error != JVMFlag::MISSING_NAME) && (name != NULL)) {\n+  if ((error != JVMFlag::MISSING_NAME) && (name != nullptr)) {\n@@ -83,1 +83,1 @@\n-      if (name != NULL) { print_flag_error_message_bounds(flag, buffer); } break;\n+      if (name != nullptr) { print_flag_error_message_bounds(flag, buffer); } break;\n@@ -201,1 +201,1 @@\n-    assert(value == NULL, \"old value is freed automatically and not returned\");\n+    assert(value == nullptr, \"old value is freed automatically and not returned\");\n@@ -227,1 +227,1 @@\n-  if (name == NULL) {\n+  if (name == nullptr) {\n@@ -231,1 +231,1 @@\n-  if (value == NULL) {\n+  if (value == nullptr) {\n@@ -254,1 +254,1 @@\n-  if (flag_value == NULL) {\n+  if (flag_value == nullptr) {\n@@ -312,1 +312,1 @@\n-    if (str == NULL) {\n+    if (str == nullptr) {\n","filename":"src\/hotspot\/share\/services\/writeableFlags.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}