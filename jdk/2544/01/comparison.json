{"files":[{"patch":"@@ -389,2 +389,2 @@\n-     *             if (number instanceof Integer)\n-     *                 consumer.accept((Integer) number);\n+     *             if (number instanceof Integer i)\n+     *                 consumer.accept(i);\n@@ -400,2 +400,2 @@\n-     *         if (e instanceof Iterable) {\n-     *             for (Object ie: (Iterable<?>) e) {\n+     *         if (e instanceof Iterable elements) {\n+     *             for (Object ie : elements) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Stream.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+import java.util.List;\n+import java.util.function.Consumer;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+\/*\n+ * THE CONTENTS OF THIS FILE HAVE TO BE IN SYNC WITH THE EXAMPLES USED IN THE\n+ * JAVADOC.\n+ *\n+ * @test\n+ * @compile JavadocExamples.java\n+ * @summary Checks to ensure example code displayed in the API documentation of\n+ *  java\/util\/Stream compiles correctly.\n+ *\/\n+public class JavadocExamples {\n+\n+    public void fromMapMulti() {\n+        \/\/ Number\/Integer Example\n+        Stream<Number> numbers = Stream.of(1, 2, 3.0);\n+        List<Integer> integers = numbers.<Integer>mapMulti((number, consumer) -> {\n+            if (number instanceof Integer i)\n+                consumer.accept(i);\n+        })\n+                .collect(Collectors.toList());\n+    }\n+}\n+\/\/ mapMulti - Expand Iterable Example\n+class C {\n+    static void expandIterable(Object e, Consumer<Object> c) {\n+        if (e instanceof Iterable elements) {\n+            for (Object ie : elements) {\n+                expandIterable(ie, c);\n+            }\n+        } else if (e != null) {\n+            c.accept(e);\n+        }\n+    }\n+    public static void main(String[] args) {\n+        Stream<Object> stream = Stream.of(1, 2, 3);\n+        Stream<Object> expandedStream = stream.mapMulti(C::expandIterable);\n+    }\n+}\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/stream\/examples\/JavadocExamples.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"}]}