{"files":[{"patch":"@@ -26,0 +26,1 @@\n+import java.awt.Rectangle;\n@@ -63,1 +64,1 @@\n-    public enum Position {HORIZONTAL, VERTICAL}\n+    public enum Position {HORIZONTAL, VERTICAL, TOP_LEFT_CORNER}\n@@ -266,4 +267,7 @@\n-     * @param position  position can be either HORIZONTAL (both test\n-     *                  instruction frame and test window as arranged\n-     *                  side by side) or VERTICAL (both test instruction\n-     *                  frame and test window as arranged up and down)\n+     * @param position  position can either be:\n+     *                  HORIZONTAL - both test instruction frame and test window\n+     *                  as arranged side by side.\n+     *                  VERTICAL - both test instruction frame and test window\n+     *                  as arranged up and down.\n+     *                  TOP_LEFT_CORNER - test instruction frame positioned at\n+     *                  top left corner with main test window beside it.\n@@ -273,0 +277,1 @@\n+\n@@ -277,1 +282,2 @@\n-            testWindow.setLocation((frame.getLocation().x + frame.getWidth() + 5), frame.getY());\n+            testWindow.setLocation((frame.getLocation().x + frame.getWidth() + 5),\n+                    frame.getY());\n@@ -285,0 +291,34 @@\n+        else if (position.equals(Position.TOP_LEFT_CORNER)) {\n+            frame.setLocation(0,0);\n+            testWindow.setLocation((frame.getLocation().x + frame.getWidth() + 5),\n+                    frame.getY());\n+        }\n+    }\n+\n+    \/**\n+     * Returns the current position and size of the test instruction frame.\n+     * This method can be used in scenarios when custom positioning of\n+     * multiple test windows w.r.t test instruction frame is necessary,\n+     * at test-case level and the desired configuration is not available\n+     * as a {@code Position} option.\n+     *\n+     * @return Rectangle bounds of test instruction frame\n+     * @see #positionTestWindow\n+     *\n+     * @throws InterruptedException      exception thrown when thread is\n+     *                                   interrupted\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *                                   obtaining frame bounds on EDT\n+     *\/\n+    public static Rectangle getInstructionFrameBounds()\n+            throws InterruptedException, InvocationTargetException {\n+        final Rectangle[] bounds = {null};\n+\n+        if (isEventDispatchThread()) {\n+            bounds[0] = frame != null ? frame.getBounds() : null;\n+        } else {\n+            invokeAndWait(() -> {\n+                bounds[0] = frame != null ? frame.getBounds() : null;\n+            });\n+        }\n+        return bounds[0];\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":46,"deletions":6,"binary":false,"changes":52,"status":"modified"}]}