{"files":[{"patch":"@@ -270,1 +270,1 @@\n-     * after calling this method.\n+     * only after calling this method.\n@@ -329,2 +329,6 @@\n-    \/\/ this method pushes the updated frame location to window manager\n-    \/\/ before it is used to reposition the test window.\n+    \/**\n+     * To ensure the frame location is updated by the window manager\n+     * if it adjusts the frame location after {@code setLocation}\n+     *\n+     * @see #positionTestWindow\n+     *\/\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-            frame = new JFrame(\"JTabbedPane\");\n-            JTabbedPane tp = new JTabbedPane();\n+        frame = new JFrame(\"JTabbedPane\");\n+        JTabbedPane tp = new JTabbedPane();\n@@ -54,6 +54,6 @@\n-            tp.addTab(\"<html><center><font size=+3>big<\/font><\/center><\/html>\",\n-                    new JLabel());\n-            tp.addTab(\"<html><center><font color=red>red<\/font><\/center><\/html>\",\n-                    new JLabel());\n-            tp.addTab(\"<html><center><em><b>Bold Italic!<\/b><\/em><\/center><\/html>\",\n-                    new JLabel());\n+        tp.addTab(\"<html><center><font size=+3>big<\/font><\/center><\/html>\",\n+                new JLabel());\n+        tp.addTab(\"<html><center><font color=red>red<\/font><\/center><\/html>\",\n+                new JLabel());\n+        tp.addTab(\"<html><center><em><b>Bold Italic!<\/b><\/em><\/center><\/html>\",\n+                new JLabel());\n@@ -61,2 +61,2 @@\n-            frame.getContentPane().add(tp);\n-            frame.setSize(400, 400);\n+        frame.getContentPane().add(tp);\n+        frame.setSize(400, 400);\n@@ -64,4 +64,4 @@\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-            frame.setVisible(true);\n+        PassFailJFrame.addTestWindow(frame);\n+        PassFailJFrame.positionTestWindow(frame,\n+                PassFailJFrame.Position.HORIZONTAL);\n+        frame.setVisible(true);\n@@ -77,1 +77,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/4209065\/bug4209065.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -66,9 +66,0 @@\n-        SwingUtilities.invokeAndWait(PrintAllPagesTest::printAllPagesTest);\n-\n-        \/\/ add the test frame to dispose\n-        PassFailJFrame.addTestWindow(f);\n-\n-        \/\/ Arrange the test instruction frame and test frame side by side\n-        PassFailJFrame.positionTestWindow(f, PassFailJFrame.Position.HORIZONTAL);\n-        f.setVisible(true);\n-\n@@ -76,0 +67,7 @@\n+            printAllPagesTest();\n+            \/\/ add the test frame to dispose\n+            PassFailJFrame.addTestWindow(f);\n+\n+            \/\/ Arrange the test instruction frame and test frame side by side\n+            PassFailJFrame.positionTestWindow(f, PassFailJFrame.Position.HORIZONTAL);\n+            f.setVisible(true);\n@@ -81,0 +79,3 @@\n+            if (!ret) {\n+                throw new RuntimeException(\"Printing cancelled\/failed\");\n+            }\n@@ -82,4 +83,0 @@\n-\n-        if (!ret) {\n-            throw new RuntimeException(\"Printing cancelled\/failed\");\n-        }\n@@ -109,1 +106,2 @@\n-        table.scrollRectToVisible(table.getCellRect(table.getRowCount() - 1, 0, false));\n+        table.scrollRectToVisible(table.getCellRect(table.getRowCount() - 1,\n+                0, false));\n","filename":"test\/jdk\/javax\/swing\/JTable\/PrintAllPagesTest.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"}]}