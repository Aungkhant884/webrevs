{"files":[{"patch":"@@ -0,0 +1,103 @@\n+\/* Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.KeyStroke;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8296275\n+ * @summary To verify the setAccelerator method of JMenuItem.\n+ * @requires (os.family==\"mac\")\n+ * @run main JMenuItemSetAcceleratorTest\n+ *\/\n+\n+public class JMenuItemSetAcceleratorTest {\n+    private static JFrame frame;\n+    private static final CountDownLatch actionLatch = new CountDownLatch(1);\n+    private static Robot robot;\n+\n+    private static void createAndShow() {\n+        frame = new JFrame(\"JMenuItem.setAccelerator\");\n+        frame.setLayout(new FlowLayout());\n+\n+        JMenuBar bar = new JMenuBar();\n+        JMenu menu = new JMenu(\"File\");\n+        JMenuItem menuItem = new JMenuItem(\"Menu Item\");\n+\n+        menuItem.setAccelerator(\n+            KeyStroke.getKeyStroke(KeyEvent.VK_M, InputEvent.META_DOWN_MASK));\n+        menuItem.addActionListener(e -> {\n+            System.out.println(\"menu item action.\");\n+            actionLatch.countDown();\n+        });\n+\n+        menu.add(menuItem);\n+        bar.add(menu);\n+\n+        frame.setJMenuBar(bar);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(JMenuItemSetAcceleratorTest::createAndShow);\n+\n+            robot = new Robot();\n+            robot.setAutoDelay(50);\n+            robot.setAutoWaitForIdle(true);\n+\n+            robot.keyPress(KeyEvent.VK_META);\n+            robot.keyPress(KeyEvent.VK_M);\n+            robot.keyRelease(KeyEvent.VK_M);\n+            robot.keyRelease(KeyEvent.VK_META);\n+\n+            if (!actionLatch.await(5, TimeUnit.SECONDS)) {\n+                throw new RuntimeException(\n+                    \"Hasn't received the JMenuItem action event by pressing \"\n+                        + \"accelerator keys, test fails.\");\n+            }\n+            System.out.println(\"Test passed, received action event on menu item.\");\n+        } finally {\n+            SwingUtilities.invokeAndWait(JMenuItemSetAcceleratorTest::disposeFrame);\n+        }\n+    }\n+\n+    public static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Desktop\/JMenuItemSetAcceleratorTest.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"}]}