{"files":[{"patch":"@@ -1284,10 +1284,2 @@\n-  \/\/ In Mac OS X 10.4, CrashReporter will write a crash log for all 'fatal' signals, including\n-  \/\/ signals caught and handled by the JVM. To work around this, we reset the mach task\n-  \/\/ signal handler that's placed on our process by CrashReporter. This disables\n-  \/\/ CrashReporter-based reporting.\n-  \/\/\n-  \/\/ This work-around is not necessary for 10.5+, as CrashReporter no longer intercedes\n-  \/\/ on caught fatal signals.\n-  \/\/\n-  \/\/ Additionally, gdb installs both standard BSD signal handlers, and mach exception\n-  \/\/ handlers. By replacing the existing task exception handler, we disable gdb's mach\n+  \/\/ lldb (gdb) installs both standard BSD signal handlers, and mach exception\n+  \/\/ handlers. By replacing the existing task exception handler, we disable lldb's mach\n@@ -1295,0 +1287,4 @@\n+  \/\/\n+  \/\/ EXC_MASK_BAD_ACCESS needed by all architectures for NULL ptr checking\n+  \/\/ EXC_MASK_ARITHMETIC needed by all architectures for div by 0 checking\n+  \/\/ EXC_MASK_BAD_INSTRUCTION needed by aarch64 to initiate deoptimization\n@@ -1297,1 +1293,2 @@\n-                                EXC_MASK_BAD_ACCESS | EXC_MASK_BAD_INSTRUCTION | EXC_MASK_ARITHMETIC,\n+                                EXC_MASK_BAD_ACCESS | EXC_MASK_ARITHMETIC\n+                                  AARCH64_ONLY(| EXC_MASK_BAD_INSTRUCTION),\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"}]}