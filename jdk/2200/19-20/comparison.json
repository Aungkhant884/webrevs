{"files":[{"patch":"@@ -818,1 +818,1 @@\n-          \/\/ The code unable to handle this, bailout.\n+          \/\/ The code is unable to handle this so bailout.\n@@ -845,1 +845,1 @@\n-          \/\/ The code unable to handle this, bailout.\n+          \/\/ The code is unable to handle this so bailout.\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -177,2 +177,0 @@\n-\/\/ By default, gcc always saves frame pointer rfp on this stack. This\n-\/\/ may get turned off by -fomit-frame-pointer.\n@@ -323,44 +321,0 @@\n-#if defined(ASSERT) && defined(__APPLE__)\n-  \/\/ Execution protection violation\n-  \/\/\n-  \/\/ This should be kept as the last step in the triage.  We don't\n-  \/\/ have a dedicated trap number for a no-execute fault, so be\n-  \/\/ conservative and allow other handlers the first shot.\n-  if (UnguardOnExecutionViolation > 0 &&\n-      (sig == SIGBUS)) {\n-    static __thread address last_addr = (address) -1;\n-\n-    address addr = (address) info->si_addr;\n-    address pc = os::Posix::ucontext_get_pc(uc);\n-\n-    if (pc != addr && uc->context_esr == 0x9200004F) { \/\/TODO: figure out what this value means\n-      \/\/ We are faulting trying to write a R-X page\n-      pthread_jit_write_protect_np(false);\n-\n-      log_debug(os)(\"Writing protection violation \"\n-                    \"at \" INTPTR_FORMAT\n-                    \", unprotecting\", p2i(addr));\n-\n-      stub = pc;\n-\n-      last_addr = (address) -1;\n-    } else if (pc == addr && uc->context_esr == 0x8200000f) { \/\/TODO: figure out what this value means\n-      \/\/ We are faulting trying to execute a RW- page\n-\n-      if (addr != last_addr) {\n-        pthread_jit_write_protect_np(true);\n-\n-        log_debug(os)(\"Execution protection violation \"\n-                      \"at \" INTPTR_FORMAT\n-                      \", protecting\", p2i(addr));\n-\n-        stub = pc;\n-\n-        \/\/ Set last_addr so if we fault again at the same address, we don't end\n-        \/\/ up in an endless loop.\n-        last_addr = addr;\n-      }\n-    }\n-  }\n-#endif\n-\n@@ -401,34 +355,0 @@\n-\n-\/\/ Java thread:\n-\/\/\n-\/\/   Low memory addresses\n-\/\/    +------------------------+\n-\/\/    |                        |\\  Java thread created by VM does not have glibc\n-\/\/    |    glibc guard page    | - guard, attached Java thread usually has\n-\/\/    |                        |\/  1 glibc guard page.\n-\/\/ P1 +------------------------+ Thread::stack_base() - Thread::stack_size()\n-\/\/    |                        |\\\n-\/\/    |  HotSpot Guard Pages   | - red, yellow and reserved pages\n-\/\/    |                        |\/\n-\/\/    +------------------------+ JavaThread::stack_reserved_zone_base()\n-\/\/    |                        |\\\n-\/\/    |      Normal Stack      | -\n-\/\/    |                        |\/\n-\/\/ P2 +------------------------+ Thread::stack_base()\n-\/\/\n-\/\/ Non-Java thread:\n-\/\/\n-\/\/   Low memory addresses\n-\/\/    +------------------------+\n-\/\/    |                        |\\\n-\/\/    |  glibc guard page      | - usually 1 page\n-\/\/    |                        |\/\n-\/\/ P1 +------------------------+ Thread::stack_base() - Thread::stack_size()\n-\/\/    |                        |\\\n-\/\/    |      Normal Stack      | -\n-\/\/    |                        |\/\n-\/\/ P2 +------------------------+ Thread::stack_base()\n-\/\/\n-\/\/ ** P1 (aka bottom) and size ( P2 = P1 - size) are the address and stack size returned from\n-\/\/    pthread_attr_getstack()\n-\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/os_bsd_aarch64.cpp","additions":0,"deletions":80,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -3929,1 +3929,1 @@\n-  \/\/ Use os interface as the thread is not a java one anymore.\n+  \/\/ Use os interface as the thread is not a JavaThread anymore.\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-JNI_END\n+JNI_END\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1855,1 +1855,1 @@\n-          \"Unguard page and retry on no-execute fault \"                     \\\n+          \"Unguard page and retry on no-execute fault (Win32 only) \"        \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}