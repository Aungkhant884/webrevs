{"files":[{"patch":"@@ -169,1 +169,1 @@\n-      DISABLED_WARNINGS=\"unknown-warning-option unused-parameter unused format-nonliteral\"\n+      DISABLED_WARNINGS=\"unknown-warning-option unused-parameter unused\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,2 @@\n+class NativeStack : public AllStatic {\n+public:\n@@ -43,6 +45,6 @@\n-    const int nativeByteSpace        = sizeof(jbyte);\n-    const int nativeShortSpace       = sizeof(jshort);\n-    const int nativeIntSpace         = sizeof(jint);\n-    const int nativeLongSpace        = wordSize;\n-    const int nativeFloatSpace       = nativeIntSpace;\n-    const int nativeDoubleSpace      = nativeLongSpace;\n+  static const int byteSpace        = sizeof(jbyte);\n+  static const int shortSpace       = sizeof(jshort);\n+  static const int intSpace         = sizeof(jint);\n+  static const int longSpace        = wordSize;\n+  static const int floatSpace       = intSpace;\n+  static const int doubleSpace      = longSpace;\n@@ -50,6 +52,6 @@\n-    const int nativeByteSpace        = wordSize;\n-    const int nativeShortSpace       = wordSize;\n-    const int nativeIntSpace         = wordSize;\n-    const int nativeLongSpace        = wordSize;\n-    const int nativeFloatSpace       = nativeIntSpace;\n-    const int nativeDoubleSpace      = nativeLongSpace;\n+  static const int byteSpace        = wordSize;\n+  static const int shortSpace       = wordSize;\n+  static const int intSpace         = wordSize;\n+  static const int longSpace        = wordSize;\n+  static const int floatSpace       = intSpace;\n+  static const int doubleSpace      = longSpace;\n@@ -57,0 +59,1 @@\n+};\n@@ -85,30 +88,3 @@\n-  switch (_num_int_args) {\n-  case 0:\n-    __ ldr(c_rarg1, src);\n-    _num_int_args++;\n-    break;\n-  case 1:\n-    __ ldr(c_rarg2, src);\n-    _num_int_args++;\n-    break;\n-  case 2:\n-    __ ldr(c_rarg3, src);\n-    _num_int_args++;\n-    break;\n-  case 3:\n-    __ ldr(c_rarg4, src);\n-    _num_int_args++;\n-    break;\n-  case 4:\n-    __ ldr(c_rarg5, src);\n-    _num_int_args++;\n-    break;\n-  case 5:\n-    __ ldr(c_rarg6, src);\n-    _num_int_args++;\n-    break;\n-  case 6:\n-    __ ldr(c_rarg7, src);\n-    _num_int_args++;\n-    break;\n-  default:\n+  if (_num_int_args < Argument::n_int_register_parameters_c-1) {\n+    __ ldr(as_Register(_num_int_args + c_rarg1->encoding()), src);\n+  } else {\n@@ -117,4 +93,1 @@\n-    _stack_offset += nativeByteSpace;\n-\n-    _num_int_args++;\n-    break;\n+    _stack_offset += NativeStack::byteSpace;\n@@ -122,0 +95,2 @@\n+\n+  _num_int_args++;\n@@ -127,31 +102,4 @@\n-  switch (_num_int_args) {\n-  case 0:\n-    __ ldr(c_rarg1, src);\n-    _num_int_args++;\n-    break;\n-  case 1:\n-    __ ldr(c_rarg2, src);\n-    _num_int_args++;\n-    break;\n-  case 2:\n-    __ ldr(c_rarg3, src);\n-    _num_int_args++;\n-    break;\n-  case 3:\n-    __ ldr(c_rarg4, src);\n-    _num_int_args++;\n-    break;\n-  case 4:\n-    __ ldr(c_rarg5, src);\n-    _num_int_args++;\n-    break;\n-  case 5:\n-    __ ldr(c_rarg6, src);\n-    _num_int_args++;\n-    break;\n-  case 6:\n-    __ ldr(c_rarg7, src);\n-    _num_int_args++;\n-    break;\n-  default:\n-    _stack_offset = align_up(_stack_offset, nativeShortSpace);\n+  if (_num_int_args < Argument::n_int_register_parameters_c-1) {\n+    __ ldr(as_Register(_num_int_args + c_rarg1->encoding()), src);\n+  } else {\n+    _stack_offset = align_up(_stack_offset, NativeStack::shortSpace);\n@@ -160,4 +108,1 @@\n-    _stack_offset += nativeShortSpace;\n-\n-    _num_int_args++;\n-    break;\n+    _stack_offset += NativeStack::shortSpace;\n@@ -165,0 +110,2 @@\n+\n+  _num_int_args++;\n@@ -170,36 +117,7 @@\n-  switch (_num_int_args) {\n-  case 0:\n-    __ ldr(c_rarg1, src);\n-    _num_int_args++;\n-    break;\n-  case 1:\n-    __ ldr(c_rarg2, src);\n-    _num_int_args++;\n-    break;\n-  case 2:\n-    __ ldr(c_rarg3, src);\n-    _num_int_args++;\n-    break;\n-  case 3:\n-    __ ldr(c_rarg4, src);\n-    _num_int_args++;\n-    break;\n-  case 4:\n-    __ ldr(c_rarg5, src);\n-    _num_int_args++;\n-    break;\n-  case 5:\n-    __ ldr(c_rarg6, src);\n-    _num_int_args++;\n-    break;\n-  case 6:\n-    __ ldr(c_rarg7, src);\n-    _num_int_args++;\n-    break;\n-  default:\n-    _stack_offset = align_up(_stack_offset, nativeIntSpace);\n-    __ ldr(r0, src);\n-    __ str(r0, Address(to(), _stack_offset));\n-    _stack_offset += nativeIntSpace;\n-    _num_int_args++;\n-    break;\n+  if (_num_int_args < Argument::n_int_register_parameters_c-1) {\n+    __ ldr(as_Register(_num_int_args + c_rarg1->encoding()), src);\n+  } else {\n+    _stack_offset = align_up(_stack_offset, NativeStack::intSpace);\n+    __ ldrw(r0, src);\n+    __ strw(r0, Address(to(), _stack_offset));\n+    _stack_offset += NativeStack::intSpace;\n@@ -207,0 +125,2 @@\n+\n+  _num_int_args++;\n@@ -212,31 +132,4 @@\n-  switch (_num_int_args) {\n-  case 0:\n-    __ ldr(c_rarg1, src);\n-    _num_int_args++;\n-    break;\n-  case 1:\n-    __ ldr(c_rarg2, src);\n-    _num_int_args++;\n-    break;\n-  case 2:\n-    __ ldr(c_rarg3, src);\n-    _num_int_args++;\n-    break;\n-  case 3:\n-    __ ldr(c_rarg4, src);\n-    _num_int_args++;\n-    break;\n-  case 4:\n-    __ ldr(c_rarg5, src);\n-    _num_int_args++;\n-    break;\n-  case 5:\n-    __ ldr(c_rarg6, src);\n-    _num_int_args++;\n-    break;\n-  case 6:\n-    __ ldr(c_rarg7, src);\n-    _num_int_args++;\n-    break;\n-  default:\n-    _stack_offset = align_up(_stack_offset, nativeLongSpace);\n+  if (_num_int_args < Argument::n_int_register_parameters_c-1) {\n+    __ ldr(as_Register(_num_int_args + c_rarg1->encoding()), src);\n+  } else {\n+    _stack_offset = align_up(_stack_offset, NativeStack::longSpace);\n@@ -245,3 +138,1 @@\n-    _stack_offset += nativeLongSpace;\n-    _num_int_args++;\n-    break;\n+    _stack_offset += NativeStack::longSpace;\n@@ -249,0 +140,2 @@\n+\n+  _num_int_args++;\n@@ -255,1 +148,1 @@\n-    __ ldrs(as_FloatRegister(_num_fp_args++), src);\n+    __ ldrs(as_FloatRegister(_num_fp_args), src);\n@@ -257,1 +150,1 @@\n-      _stack_offset = align_up(_stack_offset, nativeFloatSpace);\n+      _stack_offset = align_up(_stack_offset, NativeStack::floatSpace);\n@@ -260,2 +153,1 @@\n-    _stack_offset += nativeFloatSpace;\n-    _num_fp_args++;\n+    _stack_offset += NativeStack::floatSpace;\n@@ -263,0 +155,1 @@\n+  _num_fp_args++;\n@@ -269,1 +162,1 @@\n-    __ ldrd(as_FloatRegister(_num_fp_args++), src);\n+    __ ldrd(as_FloatRegister(_num_fp_args), src);\n@@ -271,1 +164,1 @@\n-    _stack_offset = align_up(_stack_offset, nativeDoubleSpace);\n+    _stack_offset = align_up(_stack_offset, NativeStack::doubleSpace);\n@@ -274,2 +167,1 @@\n-    _stack_offset += nativeDoubleSpace;\n-    _num_fp_args++;\n+    _stack_offset += NativeStack::doubleSpace;\n@@ -277,0 +169,1 @@\n+  _num_fp_args++;\n@@ -413,1 +306,0 @@\n-      _num_int_args++;\n@@ -415,3 +307,1 @@\n-      store_and_inc(_to, from_obj, nativeByteSpace);\n-\n-      _num_int_args++;\n+      store_and_inc(_to, from_obj, NativeStack::byteSpace);\n@@ -419,0 +309,1 @@\n+    _num_int_args++;\n@@ -429,1 +320,0 @@\n-      _num_int_args++;\n@@ -431,3 +321,1 @@\n-      store_and_inc(_to, from_obj, nativeShortSpace);\n-\n-      _num_int_args++;\n+      store_and_inc(_to, from_obj, NativeStack::shortSpace);\n@@ -435,0 +323,1 @@\n+    _num_int_args++;\n@@ -443,1 +332,0 @@\n-      _num_int_args++;\n@@ -445,3 +333,1 @@\n-      store_and_inc(_to, from_obj, nativeIntSpace);\n-\n-      _num_int_args++;\n+      store_and_inc(_to, from_obj, NativeStack::intSpace);\n@@ -449,0 +335,1 @@\n+    _num_int_args++;\n@@ -458,1 +345,0 @@\n-      _num_int_args++;\n@@ -460,2 +346,1 @@\n-      store_and_inc(_to, from_obj, nativeLongSpace);\n-      _num_int_args++;\n+      store_and_inc(_to, from_obj, NativeStack::longSpace);\n@@ -463,0 +348,1 @@\n+    _num_int_args++;\n@@ -472,1 +358,0 @@\n-      _num_int_args++;\n@@ -475,1 +360,0 @@\n-      _num_int_args++;\n@@ -477,0 +361,1 @@\n+    _num_int_args++;\n@@ -486,1 +371,0 @@\n-      _num_fp_args++;\n@@ -488,3 +372,1 @@\n-      store_and_inc(_to, from_obj, nativeFloatSpace);\n-\n-      _num_fp_args++;\n+      store_and_inc(_to, from_obj, NativeStack::floatSpace);\n@@ -492,0 +374,1 @@\n+    _num_fp_args++;\n@@ -502,1 +385,0 @@\n-      _num_fp_args++;\n@@ -504,2 +386,1 @@\n-      store_and_inc(_to, from_obj, nativeDoubleSpace);\n-      _num_fp_args++;\n+      store_and_inc(_to, from_obj, NativeStack::doubleSpace);\n@@ -507,0 +388,1 @@\n+    _num_fp_args++;\n","filename":"src\/hotspot\/cpu\/aarch64\/interpreterRT_aarch64.cpp","additions":65,"deletions":183,"binary":false,"changes":248,"status":"modified"}]}