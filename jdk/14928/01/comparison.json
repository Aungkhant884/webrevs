{"files":[{"patch":"@@ -118,1 +118,1 @@\n-                throw new UnsupportedOperationException();\n+                throw new UnsupportedOperationException(AccessMode.valueFromOrdinal(mode).methodName());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarForm.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.HashMap;\n@@ -35,0 +36,1 @@\n+import java.util.Map;\n@@ -2006,0 +2008,5 @@\n+\n+        private static final @Stable AccessMode[] VALUES = values();\n+        static AccessMode valueFromOrdinal(int mode) {\n+            return VALUES[mode];\n+        }\n@@ -2090,0 +2097,2 @@\n+     * @throws UnsupportedOperationException if this VarHandle does not support\n+     *         the given access mode\n@@ -2095,0 +2104,3 @@\n+        if (!isAccessModeSupported(AccessMode.valueFromOrdinal(ad.mode))) {\n+            throwUnsupportedOperationException(ad.mode);\n+        }\n@@ -2103,1 +2115,1 @@\n-    private final void throwWrongMethodTypeException(VarHandle.AccessDescriptor ad) {\n+    final void throwWrongMethodTypeException(VarHandle.AccessDescriptor ad) {\n@@ -2108,0 +2120,6 @@\n+    @DontInline\n+    final void throwUnsupportedOperationException(int mode) {\n+        throw new UnsupportedOperationException(AccessMode.valueFromOrdinal(mode).methodName()\n+                + \" is not supported for \" + this);\n+    }\n+\n@@ -2220,1 +2238,3 @@\n-        MemberName mn = vform.getMemberName(mode);\n+        MemberName mn = vform.getMemberNameOrNull(mode);\n+        if (mn == null)\n+            throwUnsupportedOperationException(mode);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandle.java","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"}]}