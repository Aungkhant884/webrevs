{"files":[{"patch":"@@ -72,0 +72,4 @@\n+    boolean refersToImpl(T obj) {\n+        return refersTo0(obj);\n+    }\n+\n@@ -73,1 +77,1 @@\n-    native final boolean refersTo0(Object o);\n+    private native final boolean refersTo0(Object o);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/PhantomReference.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -366,1 +366,1 @@\n-        return refersTo0(obj);\n+        return refersToImpl(obj);\n@@ -370,0 +370,3 @@\n+     * This method exists only to avoid making refersTo0() virtual. Making\n+     * refersTo0() virtual has the undesirable effect of C2 often preferring\n+     * to call the native implementation over the intrinsic.\n@@ -371,0 +374,4 @@\n+    boolean refersToImpl(T obj) {\n+        return refersTo0(obj);\n+    }\n+\n@@ -372,1 +379,1 @@\n-    native boolean refersTo0(Object o);\n+    private native final boolean refersTo0(Object o);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}