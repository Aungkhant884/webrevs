{"files":[{"patch":"@@ -1,73 +0,0 @@\n-diff -r 6ab9279c0e99 src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp\n---- a\/src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp\tWed Sep 02 18:37:31 2020 +0200\n-+++ b\/src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp\tThu Sep 10 10:53:58 2020 -0700\n-@@ -655,6 +655,22 @@\n- static RunTimeSharedDictionary _dynamic_builtin_dictionary;\n- static RunTimeSharedDictionary _dynamic_unregistered_dictionary;\n- \n-+\n-+Handle SystemDictionaryShared::create_jar_manifest(const char* manifest_chars, long size, TRAPS) {\n-+  typeArrayOop buf = oopFactory::new_byteArray(size, CHECK_NH);\n-+  typeArrayHandle bufhandle(THREAD, buf);\n-+  ArrayAccess<>::arraycopy_from_native(reinterpret_cast<const jbyte*>(manifest_chars),\n-+                                         buf, typeArrayOopDesc::element_offset<jbyte>(0), size);\n-+  Handle bais = JavaCalls::construct_new_instance(SystemDictionary::ByteArrayInputStream_klass(),\n-+                      vmSymbols::byte_array_void_signature(),\n-+                      bufhandle, CHECK_NH);\n-+  \/\/ manifest = new Manifest(ByteArrayInputStream)\n-+  Handle manifest = JavaCalls::construct_new_instance(SystemDictionary::Jar_Manifest_klass(),\n-+                      vmSymbols::input_stream_void_signature(),\n-+                      bais, CHECK_NH);\n-+  return manifest;\n-+}\n-+\n- oop SystemDictionaryShared::shared_protection_domain(int index) {\n-   return ((objArrayOop)_shared_protection_domains.resolve())->obj_at(index);\n- }\n-@@ -679,22 +695,9 @@\n-     \/\/ ByteArrayInputStream bais = new ByteArrayInputStream(buf);\n-     const char* src = ent->manifest();\n-     assert(src != NULL, \"No Manifest data\");\n--    typeArrayOop buf = oopFactory::new_byteArray(size, CHECK_NH);\n--    typeArrayHandle bufhandle(THREAD, buf);\n--    ArrayAccess<>::arraycopy_from_native(reinterpret_cast<const jbyte*>(src),\n--                                         buf, typeArrayOopDesc::element_offset<jbyte>(0), size);\n--\n--    Handle bais = JavaCalls::construct_new_instance(SystemDictionary::ByteArrayInputStream_klass(),\n--                      vmSymbols::byte_array_void_signature(),\n--                      bufhandle, CHECK_NH);\n--\n--    \/\/ manifest = new Manifest(bais)\n--    manifest = JavaCalls::construct_new_instance(SystemDictionary::Jar_Manifest_klass(),\n--                      vmSymbols::input_stream_void_signature(),\n--                      bais, CHECK_NH);\n-+    manifest = create_jar_manifest(src, size, THREAD);\n-     atomic_set_shared_jar_manifest(shared_path_index, manifest());\n-   }\n--\n-   manifest = Handle(THREAD, shared_jar_manifest(shared_path_index));\n-   assert(manifest.not_null(), \"sanity\");\n-   return manifest;\n-diff -r 6ab9279c0e99 src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp\n---- a\/src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp\tWed Sep 02 18:37:31 2020 +0200\n-+++ b\/src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp\tThu Sep 10 10:53:58 2020 -0700\n-@@ -320,6 +320,7 @@\n-   static void print_table_statistics(outputStream* st) NOT_CDS_RETURN;\n-   static bool empty_dumptime_table() NOT_CDS_RETURN_(true);\n-   static void start_dumping() NOT_CDS_RETURN;\n-+  static Handle create_jar_manifest(const char* man, long size, TRAPS) NOT_CDS_RETURN_(NULL);\n- \n-   DEBUG_ONLY(static bool no_class_loading_should_happen() {return _no_class_loading_should_happen;})\n- \n-diff -r 6ab9279c0e99 src\/hotspot\/share\/memory\/metaspaceShared.cpp\n---- a\/src\/hotspot\/share\/memory\/metaspaceShared.cpp\tWed Sep 02 18:37:31 2020 +0200\n-+++ b\/src\/hotspot\/share\/memory\/metaspaceShared.cpp\tThu Sep 10 10:53:58 2020 -0700\n-@@ -1356,6 +1356,8 @@\n- \n-     HeapShared::init_for_dumping(THREAD);\n- \n-+    \/\/ create a dummy manifest to cause more classes loaded\n-+    SystemDictionaryShared::create_jar_manifest(\"Manifest-Version: 1.0\\n\", strlen(\"Manifest-Version: 1.0\\n\"), THREAD);\n-     \/\/ Rewrite and link classes\n-     log_info(cds)(\"Rewriting and linking classes ...\");\n- \n","filename":"open.patch","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"}]}