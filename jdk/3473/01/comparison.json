{"files":[{"patch":"@@ -47,0 +47,1 @@\n+import  java.util.concurrent.atomic.AtomicReference;\n@@ -59,0 +60,2 @@\n+        final AtomicReference<IOException> exception = new AtomicReference<>();\n+\n@@ -70,1 +73,5 @@\n-                Files.delete(file);\n+                try {\n+                    Files.delete(file);\n+                } catch (IOException ex) {\n+                    exception.compareAndSet(ex, null);\n+                }\n@@ -86,1 +93,5 @@\n-                Files.delete(dir);\n+                try {\n+                    Files.delete(dir);\n+                } catch (IOException ex) {\n+                    exception.compareAndSet(ex, null);\n+                }\n@@ -90,0 +101,3 @@\n+        if (exception.get() != null) {\n+            throw exception.get();\n+        }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/IOUtils.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -92,0 +92,5 @@\n+    public Executor setWindowsTmpDir(String tmp) {\n+        winTmpDir = tmp;\n+        return this;\n+    }\n+\n@@ -282,0 +287,3 @@\n+        if (winTmpDir != null) {\n+            builder.environment().put(\"TMP\", winTmpDir);\n+        }\n@@ -429,0 +437,1 @@\n+    private String winTmpDir = null;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/Executor.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -646,0 +646,3 @@\n+            if (TKit.isWindows()) {\n+                exec.setWindowsTmpDir(System.getProperty(\"java.io.tmpdir\"));\n+            }\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}