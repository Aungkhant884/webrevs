{"files":[{"patch":"@@ -183,1 +183,1 @@\n-            if (c.getClass().getModule() == Object.class.getModule()) {\n+            if (Collections.isTrustedCollection(c)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/ArrayList.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1012,0 +1012,3 @@\n+    interface CollectionWrapper {\n+        Collection<?> getCollection();\n+    }\n@@ -1048,1 +1051,1 @@\n-    static class UnmodifiableCollection<E> implements Collection<E>, Serializable {\n+    static class UnmodifiableCollection<E> implements Collection<E>, CollectionWrapper, Serializable {\n@@ -1061,0 +1064,2 @@\n+        public Collection<?> getCollection()       {return c;}\n+\n@@ -2082,1 +2087,1 @@\n-    static class SynchronizedCollection<E> implements Collection<E>, Serializable {\n+    static class SynchronizedCollection<E> implements Collection<E>, CollectionWrapper, Serializable {\n@@ -2101,0 +2106,4 @@\n+        public Collection<?> getCollection() {\n+            return c;\n+        }\n+\n@@ -3144,1 +3153,1 @@\n-    static class CheckedCollection<E> implements Collection<E>, Serializable {\n+    static class CheckedCollection<E> implements Collection<E>, CollectionWrapper, Serializable {\n@@ -3170,0 +3179,2 @@\n+        public Collection<?> getCollection()              { return c; }\n+\n@@ -5697,1 +5708,1 @@\n-        implements Set<E>, Serializable\n+        implements Set<E>, CollectionWrapper, Serializable\n@@ -5710,0 +5721,2 @@\n+        public Collection<?> getCollection()     { return s; }\n+\n@@ -5782,1 +5795,1 @@\n-        implements Queue<E>, Serializable {\n+        implements Queue<E>, CollectionWrapper, Serializable {\n@@ -5788,0 +5801,1 @@\n+        public Collection<?> getCollection()               { return q; }\n@@ -5823,0 +5837,14 @@\n+\n+    \/*\n+     * Checks whether the collection is trusted.\n+     * It is safe to assume that all methods of trusted collection are compliant\n+     *\/\n+    static boolean isTrustedCollection(Collection<?> coll) {\n+        if (coll.getClass().getModule() == Object.class.getModule()) {\n+            return coll instanceof CollectionWrapper wrapper\n+                  ? isTrustedCollection(wrapper.getCollection())\n+                  : true;\n+        } else {\n+            return false;\n+        }\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collections.java","additions":33,"deletions":5,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -123,0 +123,3 @@\n+                public boolean isTrustedCollection(Collection<?> coll) {\n+                    return Collections.isTrustedCollection(coll);\n+                }\n@@ -173,1 +176,1 @@\n-        } else if (coll.getClass().getModule() == Object.class.getModule()) {\n+        } else if (Collections.isTrustedCollection(coll)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -266,1 +266,1 @@\n-        if (c.getClass().getModule() != Object.class.getModule())\n+        if (!Collections.isTrustedCollection(c))\n","filename":"src\/java.base\/share\/classes\/java\/util\/PriorityQueue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-        if (c.getClass().getModule() == Object.class.getModule()) {\n+        if (Collections.isTrustedCollection(c)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/Vector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-            if (c.getClass().getModule() != Object.class.getModule())\n+            if (!SharedSecrets.getJavaUtilCollectionAccess().isTrustedCollection(c))\n@@ -691,1 +691,4 @@\n-        if (c.getClass().getModule() != Object.class.getModule()) {\n+        if (cs.length == 0) {\n+            return 0;\n+        }\n+        if (!SharedSecrets.getJavaUtilCollectionAccess().isTrustedCollection(c)) {\n@@ -694,2 +697,0 @@\n-        if (cs.length == 0)\n-            return 0;\n@@ -745,1 +746,1 @@\n-            if (len == 0 && c.getClass().getModule() == Object.class.getModule()) {\n+            if (len == 0 && SharedSecrets.getJavaUtilCollectionAccess().isTrustedCollection(c)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/CopyOnWriteArrayList.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-        if (c.getClass().getModule() != Object.class.getModule())\n+        if (!SharedSecrets.getJavaUtilCollectionAccess().isTrustedCollection(c))\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/PriorityBlockingQueue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Collection;\n@@ -31,0 +32,1 @@\n+    boolean isTrustedCollection(Collection<?> coll);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaUtilCollectionAccess.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}