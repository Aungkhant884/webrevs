{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-            if (c.getClass() == ArrayList.class) {\n+            if (c.getClass().getModule() == Object.class.getModule()) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/ArrayList.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -173,0 +173,2 @@\n+        } else if (coll.getClass().getModule() == Object.class.getModule()) {\n+            return listFromTrustedArray(coll.toArray());\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -266,1 +266,1 @@\n-        if (c.getClass() != ArrayList.class)\n+        if (c.getClass().getModule() != Object.class.getModule())\n","filename":"src\/java.base\/share\/classes\/java\/util\/PriorityQueue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,1 +184,1 @@\n-        if (c.getClass() == ArrayList.class) {\n+        if (c.getClass().getModule() == Object.class.getModule()) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/Vector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.util.ArrayList;\n@@ -143,1 +142,1 @@\n-            if (c.getClass() != java.util.ArrayList.class)\n+            if (c.getClass().getModule() != Object.class.getModule())\n@@ -692,1 +691,1 @@\n-        if (c.getClass() != ArrayList.class) {\n+        if (c.getClass().getModule() != Object.class.getModule()) {\n@@ -746,2 +745,1 @@\n-            if (len == 0 && (c.getClass() == CopyOnWriteArrayList.class ||\n-                             c.getClass() == ArrayList.class)) {\n+            if (len == 0 && c.getClass().getModule() == Object.class.getModule()) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/CopyOnWriteArrayList.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-        if (c.getClass() != java.util.ArrayList.class)\n+        if (c.getClass().getModule() != Object.class.getModule())\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/PriorityBlockingQueue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}