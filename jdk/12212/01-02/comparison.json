{"files":[{"patch":"@@ -5838,0 +5838,49 @@\n+    private static final Set<String> trustedCollections = Set.of(\n+        \/\/ Lists\n+        \"java.util.Collections$EmptyList\",\n+        \"java.util.Collections$SingletonList\",\n+        \"java.util.Arrays$ArrayList\",\n+        \"java.util.ArrayList\",\n+        \"java.util.LinkedList\",\n+        \"java.util.Vector\",\n+        \"java.util.Stack\",\n+        \"java.util.concurrent.CopyOnWriteArrayList\",\n+\n+        \/\/ Sets\n+        \"java.util.HashSet\",\n+        \"java.util.LinkedHashSet\",\n+        \"java.util.TreeSet\",\n+        \"java.util.JumboEnumSet\",\n+        \"java.util.RegularEnumSet\",\n+        \"java.util.Collections$EmptySet\",\n+        \"java.util.Collections$SingletonSet\",\n+        \"java.util.concurrent.CopyOnWriteArraySet\",\n+        \"java.util.concurrent.ConcurrentSkipListSet\",\n+\n+        \/\/ Queue\n+        \"java.util.ArrayDeque\",\n+        \"java.util.PriorityQueue\",\n+        \"java.util.concurrent.ArrayBlockingQueue\",\n+        \"java.util.concurrent.ConcurrentLinkedQueue\",\n+        \"java.util.concurrent.ConcurrentLinkedDeque\",\n+        \"java.util.concurrent.DelayQueue\",\n+        \"java.util.concurrent.LinkedBlockingQueue\",\n+        \"java.util.concurrent.LinkedBlockingDeque\",\n+        \"java.util.concurrent.LinkedTransferQueue\",\n+        \"java.util.concurrent.PriorityBlockingQueue\",\n+        \"java.util.concurrent.SynchronousQueue\"\n+    );\n+\n+    private static final Set<String> trustedMaps = Set.of(\n+        \"java.util.Properties\",\n+        \"java.util.HashMap\",\n+        \"java.util.LinkedHashMap\",\n+        \"java.util.IdentityHashMap\",\n+        \"java.util.WeakHashMap\",\n+        \"java.util.Hashtable\",\n+        \"java.util.TreeMap\",\n+        \"java.util.EnumMap\",\n+        \"java.util.concurrent.ConcurrentHashMap\",\n+        \"java.util.concurrent.ConcurrentSkipListMap\"\n+    );\n+\n@@ -5844,5 +5893,11 @@\n-            return coll instanceof CollectionWrapper wrapper\n-                  ? isTrustedCollection(wrapper.getCollection())\n-                  : true;\n-        } else {\n-            return false;\n+            if (coll instanceof CollectionWrapper wrapper) {\n+                return isTrustedCollection(wrapper.getCollection());\n+            } else if (trustedCollections.contains(coll.getClass().getName())) {\n+                return true;\n+            } else if (coll instanceof ImmutableCollections.AbstractImmutableCollection<?>) {\n+                return true;\n+            } else if (coll instanceof Set<?> && coll.getClass().isMemberClass()) { \/\/ Map keys set or entries set\n+                return trustedMaps.contains(coll.getClass().getNestHost().getName());\n+            } else {\n+                return false;\n+            }\n@@ -5850,0 +5905,1 @@\n+        return false;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collections.java","additions":61,"deletions":5,"binary":false,"changes":66,"status":"modified"}]}