{"files":[{"patch":"@@ -333,1 +333,1 @@\n-                   Register state, Register subkeyHtbl, Register counter, Register enc_dec);\n+                   Register state, Register subkeyHtbl, Register counter);\n@@ -362,1 +362,1 @@\n-                      Register in, Register out, Register subkeyHtbl, Register isEncrypt, Register pos);\n+                      Register in, Register out, Register ct, Register subkeyHtbl, Register pos);\n@@ -366,1 +366,1 @@\n-                                Register in, Register out, Register pos, bool out_order, Register isEncrypt, Register rounds);\n+                                Register in, Register out, Register ct, Register pos, bool out_order, Register rounds);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -305,1 +305,0 @@\n-\/\/   isEncrypt  = r12           | r13\n@@ -326,2 +325,0 @@\n-  const Address isEncrypt_mem(rbp, 4 * wordSize);\n-  const Register isEncrypt = r13;\n@@ -337,2 +334,0 @@\n-  const Address isEncrypt_mem(rbp, 10 * wordSize);\n-  const Register isEncrypt = r12;\n@@ -356,1 +351,1 @@\n-  __ movptr(isEncrypt, isEncrypt_mem);\n+\n@@ -364,1 +359,1 @@\n-  aesgcm_avx2(in, len, ct, out, key, state, subkeyHtbl, counter, isEncrypt);\n+  aesgcm_avx2(in, len, ct, out, key, state, subkeyHtbl, counter);\n@@ -3364,1 +3359,1 @@\n-                                             Register in, Register out, Register pos, bool in_order, Register isEncrypt, Register rounds) {\n+                                             Register in, Register out, Register ct, Register pos, bool in_order, Register rounds) {\n@@ -3720,1 +3715,1 @@\n-  __ cmpl(isEncrypt, 1);\n+  __ cmpptr(ct, out);\n@@ -3912,1 +3907,1 @@\n-  Register len, Register in, Register out, Register subkeyHtbl, Register isEncrypt, Register pos) {\n+  Register len, Register in, Register out, Register ct, Register subkeyHtbl, Register pos) {\n@@ -4140,1 +4135,1 @@\n-  __ cmpl(isEncrypt, 1);\n+  __ cmpptr(ct, out);\n@@ -4169,1 +4164,1 @@\n-                                Register state, Register subkeyHtbl, Register counter, Register isEncrypt) {\n+                                Register state, Register subkeyHtbl, Register counter) {\n@@ -4200,1 +4195,1 @@\n-  initial_blocks(xmm9, rounds, key, r14, in, out, subkeyHtbl, isEncrypt, pos);\n+  initial_blocks(xmm9, rounds, key, r14, in, out, ct, subkeyHtbl, pos);\n@@ -4219,1 +4214,1 @@\n-  ghash8_encrypt8_parallel(key, subkeyHtbl, ctr_blockx, aad_hashx, in, out, pos, false, isEncrypt, rounds);\n+  ghash8_encrypt8_parallel(key, subkeyHtbl, ctr_blockx, aad_hashx, in, out, ct, pos, false, rounds);\n@@ -4232,1 +4227,1 @@\n-  ghash8_encrypt8_parallel(key, subkeyHtbl, ctr_blockx, aad_hashx, in, out, pos, true, isEncrypt, rounds);\n+  ghash8_encrypt8_parallel(key, subkeyHtbl, ctr_blockx, aad_hashx, in, out, ct, pos, true, rounds);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_aes.cpp","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -493,1 +493,1 @@\n-   do_signature(aes_gcm_signature, \"([BII[BI[BILcom\/sun\/crypto\/provider\/GCTR;Lcom\/sun\/crypto\/provider\/GHASH;Z)I\")                                                             \\\n+   do_signature(aes_gcm_signature, \"([BII[BI[BILcom\/sun\/crypto\/provider\/GCTR;Lcom\/sun\/crypto\/provider\/GHASH;)I\")                                                             \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2495,2 +2495,1 @@\n-                                  Node* parm6, Node* parm7,\n-                                  Node* parm8) {\n+                                  Node* parm6, Node* parm7) {\n@@ -2543,2 +2542,1 @@\n-  if (parm8 != nullptr) { call->init_req(TypeFunc::Parms+8, parm8);\n-  \/* close each nested if ===> *\/  } } } } } } } } }\n+  \/* close each nested if ===> *\/  } } } } } } } }\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -807,2 +807,1 @@\n-                          Node* parm6 = nullptr, Node* parm7 = nullptr,\n-                          Node* parm8 = nullptr);\n+                          Node* parm6 = nullptr, Node* parm7 = nullptr);\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7622,1 +7622,0 @@\n-  Node* isEncrypt = argument(9);\n@@ -7679,1 +7678,1 @@\n-                               in_start, len, ct_start, out_start, k_start, state_start, subkeyHtbl_start, cnt_start, isEncrypt);\n+                               in_start, len, ct_start, out_start, k_start, state_start, subkeyHtbl_start, cnt_start);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1016,1 +1016,1 @@\n-  int num_args = 9;\n+  int num_args = 8;\n@@ -1028,1 +1028,0 @@\n-  fields[argp++] = TypeInt::BOOL;    \/\/ bool encryption\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -590,1 +590,1 @@\n-                                    GCTR gctr, GHASH ghash, boolean encryption) {\n+                                    GCTR gctr, GHASH ghash) {\n@@ -598,1 +598,1 @@\n-                    ctOfs + len, out, outOfs + len, gctr, ghash, encryption);\n+                    ctOfs + len, out, outOfs + len, gctr, ghash);\n@@ -611,1 +611,1 @@\n-                    ctOfs + len, out, outOfs + len, gctr, ghash, encryption);\n+                    ctOfs + len, out, outOfs + len, gctr, ghash);\n@@ -645,1 +645,1 @@\n-        GCTR gctr, GHASH ghash, boolean isEncrypt) {\n+        GCTR gctr, GHASH ghash) {\n@@ -753,1 +753,1 @@\n-        int implGCMCrypt(ByteBuffer src, ByteBuffer dst, boolean encryption) {\n+        int implGCMCrypt(ByteBuffer src, ByteBuffer dst) {\n@@ -769,1 +769,1 @@\n-                    gctr, ghash, encryption);\n+                    gctr, ghash);\n@@ -783,1 +783,1 @@\n-                        ct, 0, bout, 0, gctr, ghash, encryption);\n+                        ct, 0, bout, 0, gctr, ghash);\n@@ -892,1 +892,1 @@\n-                    len = implGCMCrypt(buffer, dst, encryption);\n+                    len = implGCMCrypt(buffer, dst);\n@@ -931,1 +931,1 @@\n-                len += implGCMCrypt(src, dst, encryption);\n+                len += implGCMCrypt(src, dst);\n@@ -1173,1 +1173,1 @@\n-                    outOfs, out, outOfs, gctr, ghash, encryption);\n+                    outOfs, out, outOfs, gctr, ghash);\n@@ -1239,1 +1239,1 @@\n-                resultLen = implGCMCrypt(src, dst, encryption);\n+                resultLen = implGCMCrypt(src, dst);\n@@ -1691,1 +1691,1 @@\n-                        buffer, 0, out, outOfs, gctr, ghash, encryption);\n+                        buffer, 0, out, outOfs, gctr, ghash);\n@@ -1803,1 +1803,1 @@\n-                    gctr, ghash, true);\n+                    gctr, ghash);\n@@ -1865,1 +1865,1 @@\n-                    inOfs, out, outOfs, gctr, ghash, false);\n+                    inOfs, out, outOfs, gctr, ghash);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}