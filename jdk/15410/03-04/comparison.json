{"files":[{"patch":"@@ -364,1 +364,1 @@\n-  void generateHtbl_8_block_avx2(Register htbl, Register rscratch);\n+  void generateHtbl_8_block_avx2(Register htbl);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3296,1 +3296,1 @@\n-\/\/Temp registers: xmm1, xmm2, xmm3\n+\/\/Temp registers: xmm1, xmm2, xmm3, r15\n@@ -3336,2 +3336,2 @@\n-\/\/Temp registers: xmm0, xmm1, xmm2, xmm6, xmm11, xmm12\n-void StubGenerator::generateHtbl_8_block_avx2(Register htbl, Register rscratch) {\n+\/\/Temp registers: xmm0, xmm1, xmm2, xmm3, xmm6, xmm11, xmm12, r15, rbx\n+void StubGenerator::generateHtbl_8_block_avx2(Register htbl) {\n@@ -3341,1 +3341,1 @@\n-  __ movdqu(xmm1, ExternalAddress(ghash_long_swap_mask_addr()), rscratch);\n+  __ movdqu(xmm1, ExternalAddress(ghash_long_swap_mask_addr()), rbx \/*rscratch*\/);\n@@ -3344,2 +3344,2 @@\n-  __ movdqu(xmm11, ExternalAddress(ghash_polynomial_addr()), rscratch);\n-  __ movdqu(xmm12, ExternalAddress(ghash_polynomial_two_one_addr()), rscratch);\n+  __ movdqu(xmm11, ExternalAddress(ghash_polynomial_addr()), rbx \/*rscratch*\/);\n+  __ movdqu(xmm12, ExternalAddress(ghash_polynomial_two_one_addr()), rbx \/*rscratch*\/);\n@@ -3399,2 +3399,4 @@\n-\/\/xmm1-xmm8 - encrypted counter values\n-\/\/Temp registers: xmm0, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15\n+\/\/xmm1-xmm8 - updated encrypted counter values\n+\/\/ctr_blockx - updated counter value\n+\/\/out - updated output buffer\n+\/\/Temp registers: xmm0, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, rbx\n@@ -3548,0 +3550,1 @@\n+  __ movdqu(t7, ExternalAddress(counter_shuffle_mask_addr()), rbx \/*rscratch*\/);\n@@ -3549,1 +3552,1 @@\n-    __ vpshufb(as_XMMRegister(rnum), as_XMMRegister(rnum), ExternalAddress(counter_shuffle_mask_addr()), Assembler::AVX_128bit, rbx \/*rscratch*\/);\n+    __ vpshufb(as_XMMRegister(rnum), as_XMMRegister(rnum), t7, Assembler::AVX_128bit);\n@@ -3559,1 +3562,1 @@\n-\/\/Temp registers: xmm0, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15\n+\/\/Temp registers: xmm0, xmm10, xmm11, xmm12, xmm13, xmm15, rbx\n@@ -3636,0 +3639,4 @@\n+\/\/ctr - updated counter value\n+\/\/pos - updated position\n+\/\/len - updated length\n+\/\/out - updated output buffer\n@@ -3717,0 +3724,1 @@\n+  __ movdqu(t4, ExternalAddress(counter_shuffle_mask_addr()), rbx \/*rscratch*\/);\n@@ -3718,1 +3726,1 @@\n-    __ vpshufb(as_XMMRegister(rnum), as_XMMRegister(rnum), ExternalAddress(counter_shuffle_mask_addr()), Assembler::AVX_128bit, rbx \/*rscratch*\/);\n+    __ vpshufb(as_XMMRegister(rnum), as_XMMRegister(rnum), t4, Assembler::AVX_128bit);\n@@ -3731,1 +3739,1 @@\n-\/\/state - aad hash for ghash computation\n+\/\/state - address of aad hash for ghash computation\n@@ -3733,1 +3741,1 @@\n-\/\/counter - counter for aes operations\n+\/\/counter - address of counter for aes operations\n@@ -3735,2 +3743,2 @@\n-\/\/xmm9 - counter value\n-\/\/xmm14 - newly calculated aad hash\n+\/\/(counter) - updated in memory counter value\n+\/\/(state) - updated in memory aad hash\n@@ -3738,1 +3746,3 @@\n-\/\/Temp registers: r10, r15, xmm8, xmm9\n+\/\/(out) - output buffer updated\n+\/\/len - updated length\n+\/\/Temp registers: xmm0-xmm15, r10, r15, rbx\n@@ -3754,1 +3764,1 @@\n-  generateHtbl_8_block_avx2(subkeyHtbl, rbx \/*rscratch*\/);\n+  generateHtbl_8_block_avx2(subkeyHtbl);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_aes.cpp","additions":27,"deletions":17,"binary":false,"changes":44,"status":"modified"}]}