{"files":[{"patch":"@@ -102,1 +102,1 @@\n-    private Table summaryTable;\n+    private Table<Element> summaryTable;\n@@ -104,1 +104,1 @@\n-    private Table getSummaryTable() {\n+    private Table<Element> getSummaryTable() {\n@@ -119,1 +119,1 @@\n-    protected abstract Table createSummaryTable();\n+    protected abstract Table<Element> createSummaryTable();\n@@ -303,1 +303,1 @@\n-        Table useTable = new Table(HtmlStyle.summaryTable)\n+        var useTable = new Table<Void>(HtmlStyle.summaryTable)\n@@ -348,1 +348,1 @@\n-        Table table = getSummaryTable();\n+        var table = getSummaryTable();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<TypeElement>(HtmlStyle.summaryTable)\n@@ -120,1 +120,1 @@\n-                .addTab(contents.classes, e -> utils.isNonThrowableClass((TypeElement)e))\n+                .addTab(contents.classes, e -> utils.isNonThrowableClass(e))\n@@ -122,2 +122,2 @@\n-                .addTab(contents.records, e -> utils.isRecord((TypeElement)e))\n-                .addTab(contents.exceptionClasses, e -> utils.isThrowable((TypeElement)e))\n+                .addTab(contents.records, e -> utils.isRecord(e))\n+                .addTab(contents.exceptionClasses, e -> utils.isThrowable(e))\n@@ -149,1 +149,1 @@\n-    protected void addTableRow(Table table, TypeElement klass) {\n+    protected void addTableRow(Table<TypeElement> table, TypeElement klass) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllPackagesIndexWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -217,2 +217,2 @@\n-    protected Table createSummaryTable() {\n-        return new Table(HtmlStyle.summaryTable)\n+    protected Table<Element> createSummaryTable() {\n+        return new Table<Element>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeMemberWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyle.summaryTable)\n@@ -271,1 +271,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyle.summaryTable)\n@@ -312,1 +312,1 @@\n-    protected void addPackageUse(PackageElement pkg, Table table) {\n+    protected void addPackageUse(PackageElement pkg, Table<?> table) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriterImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-    protected Table createSummaryTable() {\n+    protected Table<Element> createSummaryTable() {\n@@ -196,1 +196,1 @@\n-        return new Table(\n+        return new Table<Element>(\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-    protected void addTableTabs(Table table, String headingKey) {\n+    protected void addTableTabs(Table<Element> table, String headingKey) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -143,2 +143,2 @@\n-    protected Table createSummaryTable() {\n-        return new Table(HtmlStyle.summaryTable)\n+    protected Table<Element> createSummaryTable() {\n+        return new Table<Element>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.TreeSet;\n@@ -40,0 +41,1 @@\n+\n@@ -186,1 +188,19 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+\n+        var hostNamesSet = new TreeSet<String>();\n+        boolean noHost = false;\n+        for (var searchIndexItems : searchIndexMap.values()) {\n+            try {\n+                URI uri = getSpecURI(searchIndexItems.get(0));\n+                String host = uri.getHost();\n+                if (host != null) {\n+                    hostNamesSet.add(host);\n+                } else {\n+                    noHost = true;\n+                }\n+            } catch (URISyntaxException e) {\n+                \/\/ ignore\n+            }\n+        }\n+        var hostNamesList = new ArrayList<>(hostNamesSet);\n+\n+        var table = new Table<URI>(HtmlStyle.summaryTable)\n@@ -189,1 +209,13 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                .setId(HtmlIds.EXTERNAL_SPECS);\n+        if ((hostNamesList.size() + (noHost ? 1 : 0)) > 1) {\n+            for (var host : hostNamesList) {\n+                table.addTab(Text.of(host), u -> host.equals(u.getHost()));\n+            }\n+            if (noHost) {\n+                table.addTab(Text.of(resources.getText(\"doclet.External_Specifications.no-host\")),\n+                        u -> u.getHost() == null);\n+            }\n+        }\n+        table.setDefaultTab(Text.of(resources.getText(\"doclet.External_Specifications.All_Specifications\")));\n+\n@@ -191,1 +223,2 @@\n-            Content specName = createSpecLink(searchIndexItems.get(0));\n+            IndexItem ii = searchIndexItems.get(0);\n+            Content specName = createSpecLink(ii);\n@@ -200,1 +233,6 @@\n-            table.addRow(specName, references);\n+            try {\n+                URI uri = getSpecURI(ii);\n+                table.addRow(uri, specName, references);\n+            } catch (URISyntaxException e) {\n+                table.addRow(specName, references);\n+            }\n@@ -281,1 +319,10 @@\n-    private Content createSpecLink(IndexItem i) {\n+    \/**\n+     * {@return the fully-resolved URI in index item for a {@code @spec} tag}\n+     *\n+     * While the signature declares that it may throw {@code URISynaxException},\n+     * that should not occur: items with bad URIs should not make it into the index.\n+     *\n+     * @param i the index item\n+     * @throws URISyntaxException if there is an issue creating the URI\n+     *\/\n+    private URI getSpecURI(IndexItem i) throws URISyntaxException {\n@@ -285,1 +332,3 @@\n-        Content title = Text.of(i.getLabel());\n+        URI specURI = new URI(specTree.getURL().getBody());\n+        return resolveExternalSpecURI(specURI);\n+    }\n@@ -287,1 +336,2 @@\n-        URI specURI;\n+    private Content createSpecLink(IndexItem i) {\n+        Content title = Text.of(i.getLabel());\n@@ -289,1 +339,2 @@\n-            specURI = new URI(specTree.getURL().getBody());\n+            URI uri = getSpecURI(i);\n+            return HtmlTree.A(uri, title);\n@@ -294,2 +345,0 @@\n-\n-        return HtmlTree.A(resolveExternalSpecURI(specURI), title);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ExternalSpecsWriter.java","additions":59,"deletions":10,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-    protected Table createSummaryTable() {\n+    protected Table<Element> createSummaryTable() {\n@@ -150,1 +150,1 @@\n-        return new Table(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,0 +82,1 @@\n+    static final HtmlId EXTERNAL_SPECS = HtmlId.of(\"external-specs\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -188,2 +188,2 @@\n-    protected Table createSummaryTable() {\n-        return new Table(HtmlStyle.summaryTable)\n+    protected Table<Element> createSummaryTable() {\n+        return new Table<Element>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-            Table table =  new Table(HtmlStyle.summaryTable)\n+            var table = new Table<ModuleElement>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleIndexWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -430,2 +430,2 @@\n-    private Table getTable2(Content caption, TableHeader tableHeader) {\n-        return new Table(HtmlStyle.detailsTable)\n+    private Table<?> getTable2(Content caption, TableHeader tableHeader) {\n+        return new Table<Void>(HtmlStyle.detailsTable)\n@@ -444,2 +444,2 @@\n-    private Table getTable3(Content caption, TableHeader tableHeader) {\n-        return new Table(HtmlStyle.detailsTable)\n+    private Table<?> getTable3(Content caption, TableHeader tableHeader) {\n+        return new Table<Void>(HtmlStyle.detailsTable)\n@@ -463,1 +463,1 @@\n-                Table table = getTable3(caption, requiresTableHeader);\n+                var table = getTable3(caption, requiresTableHeader);\n@@ -471,1 +471,1 @@\n-                Table amrTable = getTable3(amrCaption, requiresTableHeader);\n+                var amrTable = getTable3(amrCaption, requiresTableHeader);\n@@ -485,1 +485,1 @@\n-    private void addModulesList(Map<ModuleElement, Content> mdleMap, Table table) {\n+    private void addModulesList(Map<ModuleElement, Content> mdleMap, Table<?> table) {\n@@ -509,1 +509,1 @@\n-                Table aepTable = getTable2(Text.of(aepText), indirectPackagesHeader);\n+                var aepTable = getTable2(Text.of(aepText), indirectPackagesHeader);\n@@ -515,1 +515,1 @@\n-                Table aopTable = getTable2(Text.of(aopText), indirectPackagesHeader);\n+                var aopTable = getTable2(Text.of(aopText), indirectPackagesHeader);\n@@ -529,1 +529,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n@@ -646,1 +646,1 @@\n-    public void addIndirectPackages(Table table, Map<ModuleElement, SortedSet<PackageElement>> ip) {\n+    public void addIndirectPackages(Table<?> table, Map<ModuleElement, SortedSet<PackageElement>> ip) {\n@@ -676,1 +676,1 @@\n-                Table table = getTable2(Text.of(label), usesProvidesTableHeader);\n+                var table = getTable2(Text.of(label), usesProvidesTableHeader);\n@@ -684,1 +684,1 @@\n-                Table table = getTable2(Text.of(label), usesProvidesTableHeader);\n+                var table = getTable2(Text.of(label), usesProvidesTableHeader);\n@@ -699,1 +699,1 @@\n-    public void addUsesList(Table table) {\n+    public void addUsesList(Table<?> table) {\n@@ -727,1 +727,1 @@\n-    public void addProvidesList(Table table) {\n+    public void addProvidesList(Table<?> table) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    protected Table createSummaryTable() {\n+    protected Table<Element> createSummaryTable() {\n@@ -91,1 +91,1 @@\n-        return new Table(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NestedClassWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-    protected void addTableTabs(Table table, String headingKey) {\n+    protected void addTableTabs(Table<Element> table, String headingKey) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NewAPIListWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-            Table table =  new Table(HtmlStyle.summaryTable)\n+            var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageIndexWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyle.summaryTable)\n@@ -188,1 +188,1 @@\n-            Table table = new Table(HtmlStyle.summaryTable)\n+            var table = new Table<Void>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageUseWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -244,1 +244,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<TypeElement>(HtmlStyle.summaryTable)\n@@ -250,1 +250,1 @@\n-                .addTab(contents.classes, e -> utils.isNonThrowableClass((TypeElement)e))\n+                .addTab(contents.classes, e -> utils.isNonThrowableClass(e))\n@@ -252,2 +252,2 @@\n-                .addTab(contents.records, e -> utils.isRecord((TypeElement)e))\n-                .addTab(contents.exceptionClasses, e -> utils.isThrowable((TypeElement)e))\n+                .addTab(contents.records, e -> utils.isRecord(e))\n+                .addTab(contents.exceptionClasses, e -> utils.isThrowable(e))\n@@ -282,1 +282,1 @@\n-            Table table = new Table(HtmlStyle.summaryTable)\n+            var table = new Table<Void>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    protected void addTableTabs(Table table, String headingKey) {\n+    protected void addTableTabs(Table<Element> table, String headingKey) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PreviewListWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,2 +157,2 @@\n-    protected Table createSummaryTable() {\n-        return new Table(HtmlStyle.summaryTable)\n+    protected Table<Element> createSummaryTable() {\n+        return new Table<Element>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n@@ -212,1 +211,1 @@\n-            Table table = new Table(HtmlStyle.summaryTable)\n+            var table = new Table<Element>(HtmlStyle.summaryTable)\n@@ -340,1 +339,1 @@\n-    protected abstract void addTableTabs(Table table, String headingKey);\n+    protected abstract void addTableTabs(Table<Element> table, String headingKey);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.TextBuilder;\n@@ -124,1 +123,1 @@\n-        Table table = new Table(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyle.summaryTable)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SystemPropertiesWriter.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,2 +37,0 @@\n-import javax.lang.model.element.Element;\n-\n@@ -49,1 +47,2 @@\n- * An HTML container used to display summary tables for various kinds of elements.\n+ * An HTML container used to display summary tables for various kinds of elements\n+ * and other tabular data.\n@@ -51,1 +50,1 @@\n- * updated to render elements as a stream of {@code <div>} elements that rely on\n+ * updated to render its content as a stream of {@code <div>} elements that rely on\n@@ -68,1 +67,8 @@\n- * tab.\n+ * tab.   The filtered views use a {@link Predicate} to identify the\n+ * rows to be shown for each {@link #addTab(Content, Predicate) tab}. The\n+ * type parameter for the predicate is the type parameter {@code T} for the table.\n+ * The type parameter should be {@link Void} when the table is not configured\n+ * to use tabs.\n+ *\n+ * @param <T> the class or interface used to distinguish the rows to be displayed\n+ *            for each tab, or {@code Void} when a table does not contain tabs\n@@ -70,1 +76,1 @@\n-public class Table extends Content {\n+public class Table<T> extends Content {\n@@ -73,2 +79,2 @@\n-    private List<Tab> tabs;\n-    private Set<Tab> occurringTabs;\n+    private List<Tab<T>> tabs;\n+    private Set<Tab<T>> occurringTabs;\n@@ -87,1 +93,1 @@\n-    record Tab(Content label, Predicate<Element> predicate, int index) {}\n+    record Tab<T>(Content label, Predicate<T> predicate, int index) {}\n@@ -107,1 +113,1 @@\n-    public Table setCaption(Content captionContent) {\n+    public Table<T> setCaption(Content captionContent) {\n@@ -115,1 +121,1 @@\n-     * predicate for the tab, and an element associated with each row.\n+     * predicate for the tab, and an item associated with each row.\n@@ -122,1 +128,1 @@\n-    public Table addTab(Content label, Predicate<Element> predicate) {\n+    public Table<T> addTab(Content label, Predicate<T> predicate) {\n@@ -129,1 +135,1 @@\n-        tabs.add(new Tab(label, predicate, tabs.size() + 1));\n+        tabs.add(new Tab<>(label, predicate, tabs.size() + 1));\n@@ -140,1 +146,1 @@\n-    public Table setDefaultTab(Content label) {\n+    public Table<T> setDefaultTab(Content label) {\n@@ -150,1 +156,1 @@\n-    public Table setAlwaysShowDefaultTab(boolean showDefaultTab) {\n+    public Table<T> setAlwaysShowDefaultTab(boolean showDefaultTab) {\n@@ -157,1 +163,1 @@\n-     * own controls to select table catetories, in which case the tabs are omitted.\n+     * own controls to select table categories, in which case the tabs are omitted.\n@@ -162,1 +168,1 @@\n-    public Table setRenderTabs(boolean renderTabs) {\n+    public Table<T> setRenderTabs(boolean renderTabs) {\n@@ -178,1 +184,1 @@\n-    public Table setHeader(TableHeader header) {\n+    public Table<T> setHeader(TableHeader header) {\n@@ -194,1 +200,1 @@\n-    public Table setColumnStyles(HtmlStyle... styles) {\n+    public Table<T> setColumnStyles(HtmlStyle... styles) {\n@@ -209,1 +215,1 @@\n-    public Table setColumnStyles(List<HtmlStyle> styles) {\n+    public Table<T> setColumnStyles(List<HtmlStyle> styles) {\n@@ -222,1 +228,1 @@\n-    public Table setGridStyle(HtmlStyle gridStyle) {\n+    public Table<T> setGridStyle(HtmlStyle gridStyle) {\n@@ -236,1 +242,1 @@\n-    public Table setId(HtmlId id) {\n+    public Table<T> setId(HtmlId id) {\n@@ -259,1 +265,1 @@\n-     * that takes an {@code element} parameter instead.\n+     * that takes an {@code item} parameter instead.\n@@ -272,1 +278,1 @@\n-     * If tabs have been added to the table, the specified element will be used\n+     * If tabs have been added to the table, the specified item will be used\n@@ -277,1 +283,1 @@\n-     * @param element the element\n+     * @param item the item\n@@ -280,1 +286,1 @@\n-     *      and {@code element} is null\n+     *      and {@code item} is null\n@@ -282,2 +288,2 @@\n-    public void addRow(Element element, Content... contents) {\n-        addRow(element, Arrays.asList(contents));\n+    public void addRow(T item, Content... contents) {\n+        addRow(item, Arrays.asList(contents));\n@@ -291,1 +297,1 @@\n-     * If tabs have been added to the table, the specified element will be used\n+     * If tabs have been added to the table, the specified item will be used\n@@ -296,1 +302,1 @@\n-     * @param element the element\n+     * @param item the item\n@@ -299,1 +305,1 @@\n-     *      and {@code element} is null\n+     *      and {@code item} is null\n@@ -301,2 +307,2 @@\n-    public void addRow(Element element, List<Content> contents) {\n-        if (tabs != null && element == null) {\n+    public void addRow(T item, List<Content> contents) {\n+        if (tabs != null && item == null) {\n@@ -318,1 +324,1 @@\n-            \/\/ whose predicate matches the element. The values correspond to the equivalent ids.\n+            \/\/ whose predicate matches the item. The values correspond to the equivalent ids.\n@@ -321,2 +327,2 @@\n-            for (Tab tab : tabs) {\n-                if (tab.predicate().test(element)) {\n+            for (var tab : tabs) {\n+                if (tab.predicate().test(item)) {\n@@ -345,1 +351,1 @@\n-     * Returns whether or not the table is empty.\n+     * Returns whether the table is empty.\n@@ -403,1 +409,1 @@\n-                for (Tab tab : tabs) {\n+                for (var tab : tabs) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":44,"deletions":38,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -167,0 +167,2 @@\n+doclet.External_Specifications.All_Specifications=All Specifications\n+doclet.External_Specifications.no-host=Local\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -293,0 +293,55 @@\n+    @Test\n+    public void testMultipleHosts(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/**\n+                 * First sentence.\n+                 * @spec http:\/\/example.com\/1 example-1\n+                 * @spec http:\/\/example.net\/2 example-2\n+                 *\/\n+                public class C { }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"--source-path\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <dt>External Specifications<\/dt>\n+                    <dd><a href=\"http:\/\/example.com\/1\"><span id=\"example-1\" class=\"search-tag-result\">example-1<\/span><\/a>,\\s\n+                    <a href=\"http:\/\/example.net\/2\"><span id=\"example-2\" class=\"search-tag-result\">example-2<\/span><\/a><\/dd>\n+                    \"\"\");\n+\n+        checkOutput(\"external-specs.html\", true,\n+                \"\"\"\n+                    <div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\">\\\n+                    <button id=\"external-specs-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"external-specs.tabpanel\" \\\n+                    tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('external-specs', 'external-specs', 2)\" \\\n+                    class=\"active-table-tab\">All Specifications<\/button>\\\n+                    <button id=\"external-specs-tab1\" role=\"tab\" aria-selected=\"false\" aria-controls=\"external-specs.tabpanel\" \\\n+                    tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('external-specs', 'external-specs-tab1', 2)\" \\\n+                    class=\"table-tab\">example.com<\/button>\\\n+                    <button id=\"external-specs-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"external-specs.tabpanel\" \\\n+                    tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('external-specs', 'external-specs-tab2', 2)\" \\\n+                    class=\"table-tab\">example.net<\/button><\/div>\n+                    <div id=\"external-specs.tabpanel\" role=\"tabpanel\">\n+                    <div class=\"summary-table two-column-summary\" aria-labelledby=\"external-specs-tab0\">\n+                    <div class=\"table-header col-first\">Specification<\/div>\n+                    <div class=\"table-header col-last\">Referenced In<\/div>\"\"\",\n+                \"\"\"\n+                    <div class=\"col-first even-row-color external-specs external-specs-tab1\"><a href=\"http:\/\/example.com\/1\">example-1<\/a><\/div>\n+                    <div class=\"col-last even-row-color external-specs external-specs-tab1\">\n+                    <ul class=\"ref-list\">\n+                    <li><code><a href=\"p\/C.html#example-1\">class p.C<\/a><\/code><\/li>\n+                    <\/ul>\n+                    <\/div>\n+                    <div class=\"col-first odd-row-color external-specs external-specs-tab2\"><a href=\"http:\/\/example.net\/2\">example-2<\/a><\/div>\n+                    <div class=\"col-last odd-row-color external-specs external-specs-tab2\">\n+                    <ul class=\"ref-list\">\n+                    <li><code><a href=\"p\/C.html#example-2\">class p.C<\/a><\/code><\/li>\n+                    <\/ul>\n+                    <\/div>\"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSpecTag\/TestSpecTag.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"}]}