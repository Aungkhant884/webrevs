{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindowPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+import java.awt.AWTException;\n@@ -27,2 +28,0 @@\n-import java.awt.event.MouseAdapter;\n-import java.awt.event.MouseEvent;\n@@ -30,0 +29,1 @@\n+import java.awt.Robot;\n@@ -35,2 +35,0 @@\n-import java.beans.PropertyChangeEvent;\n-import java.beans.PropertyChangeListener;\n@@ -51,1 +49,1 @@\n-public class MultiScreenCheckScreenIDTest extends MouseAdapter {\n+public class MultiScreenCheckScreenIDTest {\n@@ -53,1 +51,0 @@\n-    private static final int ROWS = 8;\n@@ -55,1 +52,1 @@\n-    private GraphicsDevice[] screens;\n+    private static GraphicsDevice[] screens;\n@@ -58,0 +55,2 @@\n+    static Robot robot;\n+\n@@ -61,0 +60,2 @@\n+            robot.delay(100);\n+            robot.waitForIdle();\n@@ -66,1 +67,0 @@\n-        Thread.sleep(1000);\n@@ -70,1 +70,1 @@\n-    private static void createGUI() {\n+    private static void createGUI() throws AWTException {\n@@ -74,1 +74,1 @@\n-    private void createWindowGrid() {\n+    private void createWindowGrid() throws AWTException {\n@@ -81,1 +81,1 @@\n-                    \"Found : \" + screens.length );\n+                    \"Found : \" + screens.length);\n@@ -84,0 +84,1 @@\n+        robot = new Robot();\n@@ -88,1 +89,1 @@\n-            for (Rectangle r : gridOfRectangles(screenBounds, COLS, ROWS)) {\n+            for (Rectangle r : gridOfRectangles(screenBounds, COLS)) {\n@@ -97,2 +98,0 @@\n-\n-                    Thread.sleep(100);\n@@ -102,0 +101,21 @@\n+                robot.delay(50);\n+                robot.waitForIdle();\n+                if (windowList.get(windowList.size() - 1).getBounds().intersects\n+                        (screens[0].getDefaultConfiguration().getBounds())) {\n+                    if (!(windowList.get(windowList.size() - 1).\n+                            getGraphicsConfiguration().getBounds().\n+                            intersects(screens[0].getDefaultConfiguration().\n+                                    getBounds()))) {\n+                        throw new RuntimeException(\"Graphics configuration \" +\n+                                \"changed for screen 0\");\n+                    }\n+                } else if (windowList.get(windowList.size() - 1).getBounds().\n+                        intersects(screens[1].getDefaultConfiguration().getBounds())) {\n+                    if (!(windowList.get(windowList.size() - 1).\n+                            getGraphicsConfiguration().getBounds().\n+                            intersects(screens[1].getDefaultConfiguration().\n+                                    getBounds()))) {\n+                        throw new RuntimeException(\"Graphics configuration \" +\n+                                \"changed for screen 1\");\n+                    }\n+                }\n@@ -106,2 +126,1 @@\n-    private void createWindow(Rectangle bounds) throws Exception {\n-        Thread.sleep(50);\n+    private void createWindow(Rectangle bounds) {\n@@ -112,1 +131,0 @@\n-        window.addMouseListener(this);\n@@ -115,19 +133,0 @@\n-\n-        window.addPropertyChangeListener(\"graphicsConfiguration\",\n-                new PropertyChangeListener() {\n-            @Override\n-            public void propertyChange(PropertyChangeEvent propertyChangeEvent) {\n-                double windowXPos = window.getBounds().getX();\n-                double screen1Width = screens[0].getDefaultConfiguration()\n-                        .getBounds().getWidth();\n-                System.out.println(\"window x Position : \" + windowXPos + \",\" +\n-                        \" screen[0] width : \" + screen1Width);\n-\n-                \/\/Check if GC is changed for windows positioned in screen 0.\n-\n-                if (windowXPos < screen1Width) {\n-                    throw new RuntimeException(\"Graphics configuration changed\" +\n-                            \" for screen 1\");\n-                }\n-            }\n-        });\n@@ -136,6 +135,1 @@\n-    @Override\n-    public void mouseClicked(MouseEvent e) {\n-        ((Window) e.getSource()).dispose();\n-    }\n-\n-    private static List<Rectangle> gridOfRectangles(Rectangle r, int cols, int rows) {\n+    private static List<Rectangle> gridOfRectangles(Rectangle r, int cols) {\n@@ -143,8 +137,4 @@\n-        for (int row = 0; row < rows; row++) {\n-            int y1 = r.y + (int) Math.round(r.height * (double) row \/ rows);\n-            int y2 = r.y + (int) Math.round(r.height * (double) (row + 1) \/ rows);\n-            for (int col = 0; col < cols; col++) {\n-                int x1 = r.x + (int) Math.round(r.width * (double) col \/ cols);\n-                int x2 = r.x + (int) Math.round(r.width * (double) (col + 1) \/ cols);\n-                l.add(new Rectangle(x1, y1, x2 - x1, y2 - y1));\n-            }\n+        for (int col = 0; col < cols; col++) {\n+            int x1 = r.x + (int) Math.round(r.width * (double) col \/ cols);\n+            int x2 = r.x + (int) Math.round(r.width * (double) (col + 1) \/ cols);\n+            l.add(new Rectangle(x1, 0, x2 - x1, x2-x1));\n","filename":"test\/jdk\/java\/awt\/Multiscreen\/MultiScreenCheckScreenIDTest.java","additions":40,"deletions":50,"binary":false,"changes":90,"status":"modified"}]}