{"files":[{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -31,8 +31,0 @@\n-\n-import java.awt.event.KeyAdapter;\n-import java.awt.event.ComponentAdapter;\n-import java.awt.event.ComponentEvent;\n-import java.awt.event.KeyEvent;\n-import java.awt.event.InputEvent;\n-\n-import java.awt.BorderLayout;\n@@ -40,2 +32,1 @@\n-import java.awt.Point;\n-import java.awt.Rectangle;\n+import java.awt.AWTException;\n@@ -43,0 +34,8 @@\n+import java.awt.Rectangle;\n+import java.awt.Point;\n+import java.awt.BorderLayout;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.InputEvent;\n@@ -54,1 +53,1 @@\n-    public final static int TIMEOUT = 30;\n+    public final static int TIMEOUT = 20;\n@@ -60,6 +59,5 @@\n-    public static void createUIAndTest() throws Exception {\n-        final CountDownLatch frameVisibleLatch = new CountDownLatch(1);\n-        final CountDownLatch componentVisibleLatch = new CountDownLatch(1);\n-        final CountDownLatch keyPressedEventLatch = new CountDownLatch(1);\n-        final Point points[] = new Point[1];\n-        final Rectangle rect[] = new Rectangle[1];\n+    public static void createUIAndTest() throws InterruptedException, InvocationTargetException, AWTException {\n+        CountDownLatch frameVisibleLatch = new CountDownLatch(1);\n+        CountDownLatch keyPressedEventLatch = new CountDownLatch(1);\n+        final Point[] points = new Point[1];\n+        final Rectangle[] rect = new Rectangle[1];\n@@ -72,1 +70,1 @@\n-            frame.addComponentListener(new ComponentAdapter() {\n+            frame.addWindowListener(new WindowAdapter() {\n@@ -74,3 +72,2 @@\n-                public void componentShown(ComponentEvent e) {\n-                    super.componentShown(e);\n-                    System.out.println(\"Frame is visible \" + e.toString());\n+                public void windowOpened(WindowEvent e) {\n+                    super.windowOpened(e);\n@@ -78,9 +75,1 @@\n-                }\n-            });\n-\n-            jTextField.addComponentListener(new ComponentAdapter() {\n-                @Override\n-                public void componentShown(ComponentEvent e) {\n-                    super.componentShown(e);\n-                    System.out.println(\"Component is visible + \" + e.toString());\n-                    componentVisibleLatch.countDown();\n+                    System.out.println(\"Frame opened\");\n@@ -99,2 +88,2 @@\n-                        jLabel.setText(\"KEYPRESS received for Shift+1\");\n-                        System.out.println(\"KEYPRESS received for Shift+1\");\n+                        jLabel.setText(\"keyPressed received for Shift+1\");\n+                        System.out.println(\"keyPressed received for Shift+1\");\n@@ -102,2 +91,2 @@\n-                        jLabel.setText(\"Did not received KEY PRESS for Shift+1\");\n-                        System.out.println(\"Did not received KEY PRESS for Shift+1\");\n+                        jLabel.setText(\"Did not received keyPressed for Shift+1\");\n+                        System.out.println(\"Did not received keyPressed for Shift+1\");\n@@ -118,9 +107,0 @@\n-        if (!isTopLevelVisible(frame, frameVisibleLatch)) {\n-            throw new RuntimeException(\"Dialog is not visible after \" + TIMEOUT + \"  seconds\");\n-        }\n-        System.out.println(\"frame is visible \" + frame.toString());\n-\n-        if (!isJComponentVisible(jTextField, componentVisibleLatch)) {\n-            throw new RuntimeException(\"Component is not visible after \" + TIMEOUT + \"   seconds\");\n-        }\n-\n@@ -131,0 +111,4 @@\n+        if (!frameVisibleLatch.await(TIMEOUT, TimeUnit.SECONDS)) {\n+            throw new RuntimeException(\"Frame is not visible after \" + TIMEOUT + \"  seconds\");\n+        }\n+\n@@ -136,1 +120,1 @@\n-        performMouseAction(robot, points[0].x + rect[0].width \/ 2, points[0].y + rect[0].height \/ 2);\n+        clickTextField(robot, points[0].x + rect[0].width \/ 2, points[0].y + rect[0].height \/ 2);\n@@ -147,1 +131,1 @@\n-            throw new RuntimeException(\"Did not received KEY PRESS for Shift + 1 , test failed\");\n+            throw new RuntimeException(\"Did not received keyPressed for Shift + 1 , test failed\");\n@@ -151,1 +135,2 @@\n-    public static void performMouseAction(final Robot robot, final int X, final int Y) {\n+    public static void clickTextField(final Robot robot, final int X, final int Y) {\n+        robot.delay(DELAY);\n@@ -154,1 +139,0 @@\n-        robot.delay(DELAY);\n@@ -162,49 +146,2 @@\n-    public static void checkSwingTopLevelVisible(javax.swing.JFrame jFrame, CountDownLatch topLevelVisibleLatch) throws InterruptedException, InvocationTargetException {\n-        SwingUtilities.invokeAndWait(() -> {\n-            if (jFrame.isVisible()) {\n-                topLevelVisibleLatch.countDown();\n-            }\n-        });\n-    }\n-\n-    public static boolean isTopLevelVisible(javax.swing.JFrame jFrame, CountDownLatch topLevelVisibleLatch) throws Exception {\n-        checkSwingTopLevelVisible(jFrame, topLevelVisibleLatch);\n-        if (topLevelVisibleLatch.getCount() != 0) {\n-            int count = 1;\n-            while (count <= 5) {\n-                TimeUnit.SECONDS.sleep(1);\n-                checkSwingTopLevelVisible(jFrame, topLevelVisibleLatch);\n-                if (topLevelVisibleLatch.getCount() == 0) {\n-                    break;\n-                }\n-                count++;\n-            }\n-        }\n-        return topLevelVisibleLatch.await(TIMEOUT, TimeUnit.SECONDS);\n-    }\n-\n-    public static void checkJComponentVisible(javax.swing.JComponent jComponent, CountDownLatch componentVisibleLatch) throws InterruptedException, InvocationTargetException {\n-        SwingUtilities.invokeAndWait(() -> {\n-            if (jComponent.isVisible()) {\n-                componentVisibleLatch.countDown();\n-            }\n-        });\n-    }\n-\n-    public static boolean isJComponentVisible(javax.swing.JComponent jComponent, CountDownLatch componentVisibleLatch) throws InterruptedException, InvocationTargetException {\n-        checkJComponentVisible(jComponent, componentVisibleLatch);\n-        if (componentVisibleLatch.getCount() != 0) {\n-            int count = 1;\n-            while (count <= 5) {\n-                TimeUnit.SECONDS.sleep(1);\n-                checkJComponentVisible(jComponent, componentVisibleLatch);\n-                if (componentVisibleLatch.getCount() == 0) {\n-                    break;\n-                }\n-                count++;\n-            }\n-        }\n-        return componentVisibleLatch.await(TIMEOUT, TimeUnit.SECONDS);\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n+    public static void main(String[] args) throws InterruptedException, InvocationTargetException,\n+            AWTException {\n@@ -214,3 +151,5 @@\n-            if (frame != null) {\n-                SwingUtilities.invokeAndWait(frame::dispose);\n-            }\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n","filename":"test\/jdk\/java\/awt\/im\/4959409\/bug4959409.java","additions":39,"deletions":100,"binary":false,"changes":139,"status":"modified"}]}