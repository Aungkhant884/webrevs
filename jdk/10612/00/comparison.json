{"files":[{"patch":"@@ -83,1 +83,1 @@\n-    private static final String PATH = \"com\/sun\/rowset\/RowSetResourceBundle\";\n+    private static final String PATH = \"com.sun.rowset.RowSetResourceBundle\";\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/JdbcRowSetResourceBundle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import com.sun.rowset.JdbcRowSetResourceBundle;\n+\n+import java.util.Locale;\n+import java.util.MissingResourceException;\n+import java.util.PropertyResourceBundle;\n+import java.util.ResourceBundle;\n+\n+\/**\n+ * @test\n+ * @bug 8294989\n+ * @summary Check JDBC RowSet resource bundle access\n+ * @modules java.sql.rowset\/com.sun.rowset\n+ * @run main\/othervm --add-opens java.sql.rowset\/com.sun.rowset=ALL-UNNAMED ValidateGetBundle\n+ *\/\n+public class ValidateGetBundle{\n+\n+    \/\/ Resource bundle base name via a fully qualified class name\n+    private static final String FULLY_QUALIFIED_CLASS_NAME = \"com.sun.rowset.RowSetResourceBundle\";\n+    \/\/ Resource bundle base name via a path\n+    private static final String PATH_TO_BUNDLE = \"com\/sun\/rowset\/RowSetResourceBundle\";\n+    \/\/ Default Locale\n+    private static final Locale DEFAULT_LOCALE = Locale.getDefault();\n+\n+    public static void main(String[] args) {\n+\n+        \/\/ The resource bundle should be found with the fully qualified class name\n+        testResourceBundleAccess(FULLY_QUALIFIED_CLASS_NAME, true);\n+        \/\/ The resource bundle will not be found when the path is specified\n+        testResourceBundleAccess(PATH_TO_BUNDLE, false);\n+    }\n+\n+    \/**\n+     * Test to validate whether the JDBC RowSet Resource bundle can be found\n+     * @param bundleName the base name of the resource bundle\n+     * @param expectBundle indicates whether the resource bundle should be found\n+     *\/\n+    private static void testResourceBundleAccess(String bundleName, boolean expectBundle) {\n+        try {\n+            var bundle = (PropertyResourceBundle) ResourceBundle.getBundle(\n+                    bundleName, DEFAULT_LOCALE, JdbcRowSetResourceBundle.class.getModule());\n+            System.out.printf(\"$$$ %s found as expected!%n\", bundleName);\n+\n+        } catch (MissingResourceException mr) {\n+            if (expectBundle) {\n+                throw new RuntimeException(String.format(\"Error:%s%n\", mr.getMessage()));\n+            }\n+            System.out.printf(\"$$$ %s was not found as expected!\", bundleName);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/sql\/resourceBundleTests\/ValidateGetBundle.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.rowset;\n+\n+import java.sql.SQLException;\n+import javax.sql.rowset.RowSetProvider;\n+import org.testng.annotations.Test;\n+import util.BaseTest;\n+import static org.testng.Assert.*;\n+\n+\n+\/**\n+ * @test\n+ * @bug 8294989\n+ * @summary Check that the resource bundle can be accessed\n+ * @throws SQLException if an unexpected error occurs\n+ *\/\n+public class ValidateResourceBundleAccess{\n+    \/\/ Expected JDBCResourceBundle message, jdbcrowsetimpl.invalstate\n+    private static final String invalidState = \"Invalid state\";\n+    \/\/ Expected JDBCResourceBundle message, crsreader.connecterr\n+    private static final String rsReaderError = \"Internal Error in RowSetReader: no connection or command\";\n+\n+    @Test\n+    public void testResourceBundleAccess() throws SQLException {\n+        var rsr = RowSetProvider.newFactory();\n+        var crs =rsr.createCachedRowSet();\n+        var jrs = rsr.createJdbcRowSet();\n+\n+        \/\/ Simple test to force an Exception to validate the expected message\n+        \/\/ is found from the resource bundle\n+        try {\n+            jrs.getMetaData();\n+        } catch (SQLException sqe) {\n+            assertTrue(sqe.getMessage().equals(invalidState));\n+        }\n+        \/\/ Now tests via CachedRowSet\n+        try {\n+            crs.execute();\n+        } catch (SQLException e) {\n+            assertTrue(e.getMessage().equals(rsReaderError));\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/ValidateResourceBundleAccess.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"}]}