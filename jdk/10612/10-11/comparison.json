{"files":[{"patch":"@@ -29,0 +29,4 @@\n+import java.util.stream.Stream;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.junit.jupiter.params.provider.Arguments;\n@@ -35,1 +39,1 @@\n- * @run main\/othervm ValidateGetBundle\n+ * @run junit\/othervm ValidateGetBundle\n@@ -44,7 +48,0 @@\n-    public static void main(String[] args) {\n-        \/\/ The resource bundle should be found with the fully qualified class name\n-        testResourceBundleAccess(FULLY_QUALIFIED_CLASS_NAME, true);\n-        \/\/ The resource bundle will not be found when the path is specified\n-        testResourceBundleAccess(PATH_TO_BUNDLE, false);\n-    }\n-\n@@ -56,1 +53,3 @@\n-    private static void testResourceBundleAccess(String bundleName, boolean expectBundle) {\n+    @ParameterizedTest\n+    @MethodSource(\"bundleProvider\")\n+    void testResourceBundleAccess(String bundleName, boolean expectBundle) {\n@@ -73,0 +72,10 @@\n+\n+    \/\/ Data provider for testResourceBundleAccess\n+    private static Stream<Arguments> bundleProvider() {\n+        return Stream.of(\n+                \/\/ The resource bundle should be found with the fully qualified class name\n+                Arguments.of(FULLY_QUALIFIED_CLASS_NAME, true),\n+                \/\/ The resource bundle will not be found when the path is specified\n+                Arguments.of(PATH_TO_BUNDLE, false)\n+        );\n+    }\n","filename":"test\/jdk\/javax\/sql\/resourceBundleTests\/ValidateGetBundle.java","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"}]}