{"files":[{"patch":"@@ -25,1 +25,0 @@\n-import java.lang.foreign.MemoryLayout;\n@@ -43,1 +42,0 @@\n-import java.lang.ref.Cleaner;\n@@ -48,1 +46,0 @@\n-import static java.lang.foreign.MemoryLayout.PathElement.sequenceElement;\n@@ -69,1 +66,1 @@\n-    static final VarHandle VH_int = JAVA_INT.arrayElementVarHandle();\n+    static final VarHandle VH_INT = JAVA_INT.arrayElementVarHandle();\n@@ -71,2 +68,2 @@\n-    static final ValueLayout.OfInt JAVA_INT_ALIGNED = JAVA_INT.withBitAlignment(32);\n-    static final VarHandle VH_int_aligned = JAVA_INT_ALIGNED.arrayElementVarHandle();\n+    static final ValueLayout.OfInt JAVA_INT_UNALIGNED = JAVA_INT.withBitAlignment(8);\n+    static final VarHandle VH_INT_UNALIGNED = JAVA_INT_UNALIGNED.arrayElementVarHandle();\n@@ -123,1 +120,1 @@\n-        return (int) VH_int.get(segment, 0L);\n+        return (int) VH_INT_UNALIGNED.get(segment, 0L);\n@@ -145,1 +142,1 @@\n-            sum += (int) VH_int.get(segment, (long) i);\n+            sum += (int) VH_INT_UNALIGNED.get(segment, (long) i);\n@@ -154,1 +151,1 @@\n-            sum += (int) VH_int_aligned.get(alignedSegment, (long) i);\n+            sum += (int) VH_INT.get(alignedSegment, (long) i);\n@@ -163,1 +160,1 @@\n-            res += segment.get(JAVA_INT, i * CARRIER_SIZE);\n+            res += segment.get(JAVA_INT_UNALIGNED, i * CARRIER_SIZE);\n@@ -172,1 +169,1 @@\n-            res += alignedSegment.get(JAVA_INT_ALIGNED, i * CARRIER_SIZE);\n+            res += alignedSegment.get(JAVA_INT, i * CARRIER_SIZE);\n@@ -182,1 +179,1 @@\n-            sum += (int) VH_int.get(base, (long) i);\n+            sum += (int) VH_INT_UNALIGNED.get(base, (long) i);\n@@ -192,1 +189,1 @@\n-            sum += (int) VH_int.get(base, (long) i);\n+            sum += (int) VH_INT_UNALIGNED.get(base, (long) i);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverNonConstantHeap.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.lang.foreign.ValueLayout;\n@@ -43,1 +44,0 @@\n-import static java.lang.foreign.MemoryLayout.PathElement.sequenceElement;\n@@ -67,1 +67,3 @@\n-    static final VarHandle intHandle = JAVA_INT.arrayElementVarHandle();\n+    static final ValueLayout.OfInt JAVA_INT_UNALIGNED = JAVA_INT.withBitAlignment(8);\n+    static final ValueLayout.OfFloat JAVA_FLOAT_UNALIGNED = JAVA_FLOAT.withBitAlignment(8);\n+    static final VarHandle intHandleUnaligned = JAVA_INT_UNALIGNED.arrayElementVarHandle();\n@@ -85,11 +87,11 @@\n-                nativeSegment.setAtIndex(JAVA_INT, i, i);\n-                nativeSegment.setAtIndex(JAVA_FLOAT, i, i);\n-                nativeSharedSegment.setAtIndex(JAVA_INT, i, i);\n-                nativeSharedSegment.setAtIndex(JAVA_FLOAT, i, i);\n-                intHandle.set(nativeSegment, (long)i, i);\n-                heapSegmentBytes.setAtIndex(JAVA_INT, i, i);\n-                heapSegmentBytes.setAtIndex(JAVA_FLOAT, i, i);\n-                intHandle.set(heapSegmentBytes, (long)i, i);\n-                heapSegmentFloats.setAtIndex(JAVA_INT, i, i);\n-                heapSegmentFloats.setAtIndex(JAVA_FLOAT, i, i);\n-                intHandle.set(heapSegmentFloats, (long)i, i);\n+                nativeSegment.setAtIndex(JAVA_INT_UNALIGNED, i, i);\n+                nativeSegment.setAtIndex(JAVA_FLOAT_UNALIGNED, i, i);\n+                nativeSharedSegment.setAtIndex(JAVA_INT_UNALIGNED, i, i);\n+                nativeSharedSegment.setAtIndex(JAVA_FLOAT_UNALIGNED, i, i);\n+                intHandleUnaligned.set(nativeSegment, (long)i, i);\n+                heapSegmentBytes.setAtIndex(JAVA_INT_UNALIGNED, i, i);\n+                heapSegmentBytes.setAtIndex(JAVA_FLOAT_UNALIGNED, i, i);\n+                intHandleUnaligned.set(heapSegmentBytes, (long)i, i);\n+                heapSegmentFloats.setAtIndex(JAVA_INT_UNALIGNED, i, i);\n+                heapSegmentFloats.setAtIndex(JAVA_FLOAT_UNALIGNED, i, i);\n+                intHandleUnaligned.set(heapSegmentFloats, (long)i, i);\n@@ -113,2 +115,2 @@\n-            intHandle.set(nativeSegment, (long)k, k + 1);\n-            int v = (int) intHandle.get(nativeSegment, (long)k);\n+            intHandleUnaligned.set(nativeSegment, (long)k, k + 1);\n+            int v = (int) intHandleUnaligned.get(nativeSegment, (long)k);\n@@ -124,2 +126,2 @@\n-            nativeSegment.setAtIndex(JAVA_INT, k, k + 1);\n-            int v = nativeSegment.getAtIndex(JAVA_INT, k);\n+            nativeSegment.setAtIndex(JAVA_INT_UNALIGNED, k, k + 1);\n+            int v = nativeSegment.getAtIndex(JAVA_INT_UNALIGNED, k);\n@@ -135,2 +137,2 @@\n-            intHandle.set(heapSegmentBytes, (long)k, k + 1);\n-            int v = (int) intHandle.get(heapSegmentBytes, (long)k);\n+            intHandleUnaligned.set(heapSegmentBytes, (long)k, k + 1);\n+            int v = (int) intHandleUnaligned.get(heapSegmentBytes, (long)k);\n@@ -146,2 +148,2 @@\n-            heapSegmentBytes.setAtIndex(JAVA_INT, k, k + 1);\n-            int v = heapSegmentBytes.getAtIndex(JAVA_INT, k);\n+            heapSegmentBytes.setAtIndex(JAVA_INT_UNALIGNED, k, k + 1);\n+            int v = heapSegmentBytes.getAtIndex(JAVA_INT_UNALIGNED, k);\n@@ -157,2 +159,2 @@\n-            intHandle.set(heapSegmentFloats, (long)k, k + 1);\n-            int v = (int)intHandle.get(heapSegmentFloats, (long)k);\n+            intHandleUnaligned.set(heapSegmentFloats, (long)k, k + 1);\n+            int v = (int)intHandleUnaligned.get(heapSegmentFloats, (long)k);\n@@ -168,2 +170,2 @@\n-            heapSegmentFloats.setAtIndex(JAVA_INT, k, k + 1);\n-            int v = heapSegmentFloats.getAtIndex(JAVA_INT, k);\n+            heapSegmentFloats.setAtIndex(JAVA_INT_UNALIGNED, k, k + 1);\n+            int v = heapSegmentFloats.getAtIndex(JAVA_INT_UNALIGNED, k);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LoopOverPollutedSegments.java","additions":27,"deletions":25,"binary":false,"changes":52,"status":"modified"}]}