{"files":[{"patch":"@@ -42,0 +42,1 @@\n+import java.util.function.BiFunction;\n@@ -118,8 +119,1 @@\n-        Objects.requireNonNull(name);\n-        Objects.requireNonNull(session);\n-        RawNativeLibraries nativeLibraries = RawNativeLibraries.newInstance(MethodHandles.lookup());\n-        NativeLibrary library = nativeLibraries.load(name);\n-        if (library == null) {\n-            throw new IllegalArgumentException(\"Cannot open library: \" + name);\n-        }\n-        return libraryLookup(nativeLibraries, library, session);\n+        return libraryLookup(name, RawNativeLibraries::load, session);\n@@ -147,1 +141,5 @@\n-        Objects.requireNonNull(path);\n+        return libraryLookup(path, RawNativeLibraries::load, session);\n+    }\n+\n+    private static <Z> SymbolLookup libraryLookup(Z libDesc, BiFunction<RawNativeLibraries, Z, NativeLibrary> loadLibraryFunc, MemorySession session) {\n+        Objects.requireNonNull(libDesc);\n@@ -149,0 +147,1 @@\n+        \/\/ attempt to load native library from path or name\n@@ -150,1 +149,1 @@\n-        NativeLibrary library = nativeLibraries.load(path);\n+        NativeLibrary library = loadLibraryFunc.apply(nativeLibraries, libDesc);\n@@ -152,1 +151,1 @@\n-            throw new IllegalArgumentException(\"Cannot open library: \" + path);\n+            throw new IllegalArgumentException(\"Cannot open library: \" + libDesc);\n@@ -154,4 +153,0 @@\n-        return libraryLookup(nativeLibraries, library, session);\n-    }\n-\n-    private static SymbolLookup libraryLookup(RawNativeLibraries nativeLibraries, NativeLibrary library, MemorySession session) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"}]}