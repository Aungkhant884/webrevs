{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import compiler.lib.ir_framework.IRNode;\n@@ -30,1 +29,1 @@\n-import compiler.lib.ir_framework.shared.Comparison;\n+import compiler.lib.ir_framework.driver.SuccessOnlyConstraintException;\n@@ -34,0 +33,1 @@\n+import compiler.lib.ir_framework.shared.Comparison;\n@@ -57,1 +57,5 @@\n-        return Constraint.createFailOn(rawIRNode.regex(compilePhase, vmInfo, Comparison.Bound.UPPER), constraintIndex, compilationOutput);\n+        try {\n+            return Constraint.createFailOn(rawIRNode.regex(compilePhase, vmInfo, Comparison.Bound.UPPER), constraintIndex, compilationOutput);\n+        } catch (SuccessOnlyConstraintException e) {\n+            return Constraint.createSuccess();\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/constraint\/raw\/RawFailOnConstraint.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1058,22 +1058,11 @@\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE_MAX, \"> 0\"}, \/\/ valid\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE_ANY, \"> 0\"}, \/\/ valid\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"\", \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"xxx\", \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"min()\", \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"min(max_for_type)\", \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"2,4,8,16,32,64,max_int\", \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"2,4,8,16,32,64,-3\", \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"min(max_for_type, xxx)\", \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n-    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"min(max_for_type, min(max_for_type, max_for_type))\", \"> 0\"},\n-        applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, \"> 0\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE_MAX, \"> 0\"}) \/\/ valid\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE_ANY, \"> 0\"}) \/\/ valid\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"\", \"> 0\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"xxx\", \"> 0\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"min()\", \"> 0\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"min(max_for_type)\", \"> 0\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"2,4,8,16,32,64,max_int\", \"> 0\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"2,4,8,16,32,64,-3\", \"> 0\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"min(max_for_type, xxx)\", \"> 0\"})\n+    @IR(counts = {IRNode.LOAD_VECTOR_I, IRNode.VECTOR_SIZE + \"min(max_for_type, min(max_for_type, max_for_type))\", \"> 0\"})\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestBadFormat.java","additions":11,"deletions":22,"binary":false,"changes":33,"status":"modified"}]}