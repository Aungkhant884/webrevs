{"files":[{"patch":"@@ -714,2 +714,2 @@\n-    { for (int i = number_of_exception_handlers() - 1; i >= 0; i--) exception_handler_at(i)->iterate_preorder(mark, closure); }\n-    { for (int i = e->number_of_sux            () - 1; i >= 0; i--) e->sux_at           (i)->iterate_preorder(mark, closure); }\n+    { for (int i = number_of_exception_handlers()    - 1; i >= 0; i--) exception_handler_at(i)->iterate_preorder(mark, closure); }\n+    if (e != NULL) { for (int i = e->number_of_sux() - 1; i >= 0; i--) e->sux_at           (i)->iterate_preorder(mark, closure); }\n@@ -724,2 +724,2 @@\n-    { for (int i = number_of_exception_handlers() - 1; i >= 0; i--) exception_handler_at(i)->iterate_postorder(mark, closure); }\n-    { for (int i = e->number_of_sux            () - 1; i >= 0; i--) e->sux_at           (i)->iterate_postorder(mark, closure); }\n+    { for (int i = number_of_exception_handlers()    - 1; i >= 0; i--) exception_handler_at(i)->iterate_postorder(mark, closure); }\n+    if (e != NULL) { for (int i = e->number_of_sux() - 1; i >= 0; i--) e->sux_at           (i)->iterate_postorder(mark, closure); }\n@@ -757,0 +757,36 @@\n+\/\/ Closure to find node which uses a given predecessor as input.\n+class SearchUsageClosure : public BlockClosure {\n+  Value _pred, _result;\n+ public:\n+  SearchUsageClosure(Value pred) : _pred(pred), _result(NULL) {}\n+  Value result() const { return _result; }\n+\n+  virtual void block_do(BlockBegin* block) {\n+    for (Value v = (Value)block; v != NULL; v = v->next()) {\n+      \/\/ Ignore illegal Phi.\n+      if (v->as_Phi() == NULL || !v->as_Phi()->is_illegal()) {\n+        int index;\n+        Value value;\n+        ValueStack* vs = v->state_before();\n+        if (vs != NULL) {\n+          for_each_local_value(vs, index, value) {\n+            if (value == _pred) {\n+              _result = v;\n+              return;\n+            }\n+          }\n+        }\n+        vs = v->exception_state();\n+        if (vs != NULL) {\n+          for_each_local_value(vs, index, value) {\n+            if (value == _pred) {\n+              _result = v;\n+              return;\n+            }\n+          }\n+        }\n+      }\n+    }\n+  }\n+};\n+\n@@ -838,1 +874,11 @@\n-          TRACE_PHI(tty->print_cr(\"invalidating local %d because of type mismatch\", index));\n+          TRACE_PHI(tty->print_cr(\"invalidating local %d because of type mismatch%s\",\n+                                  index, new_value == NULL ? \" (new_value is NULL)\" : \"\"));\n+          \/\/ Check if illegal phi gets used.\n+          SearchUsageClosure search(existing_phi);\n+          iterate_preorder(&search);\n+          Value usage = search.result();\n+          if (usage != NULL) {\n+            TRACE_PHI(tty->print_cr(\"Bailing out because %s (id %d) uses illegal phi (id %d)\",\n+                                    usage->name(), usage->id(), existing_phi->id()));\n+            return false;\n+          }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.cpp","additions":51,"deletions":5,"binary":false,"changes":56,"status":"modified"}]}