{"files":[{"patch":"@@ -205,1 +205,1 @@\n-  return sample->has_stack_trace_id() && !sample->is_dead();\n+  return sample->has_stack_trace_id() && !sample->is_dead() && !sample->stacktrace().valid();\n@@ -252,1 +252,1 @@\n-  blob = writer.copy();\n+  blob = writer.move();\n@@ -384,0 +384,6 @@\n+  {\n+    \/\/ First install stacktrace blobs for the most recently added candidates.\n+    MutexLocker lock(ClassLoaderDataGraph_lock);\n+    \/\/ the lock is needed to ensure the unload lists do not grow in the middle of inspection.\n+    install_stack_traces(sampler);\n+  }\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/objectSampleCheckpoint.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -203,0 +203,7 @@\n+template <typename T>\n+static void set_leakp_serialized(const T* ptr) {\n+  assert(ptr != NULL, \"invariant\");\n+  SET_LEAKP_SERIALIZED(ptr);\n+  assert(IS_LEAKP_SERIALIZED(ptr), \"invariant\");\n+}\n+\n@@ -235,0 +242,1 @@\n+  set_leakp_serialized(klass);\n@@ -374,1 +382,1 @@\n-    return IS_LEAKP(klass) || is_implied(klass);\n+    return IS_LEAKP_NOT_SERIALIZED(klass) && (IS_LEAKP(klass) || is_implied(klass));\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -57,0 +57,2 @@\n+#define LEAKP_SERIALIZED_META_BIT                 (BIT << 5)\n+#define LEAKP_SERIALIZED_BIT                      (LEAKP_SERIALIZED_META_BIT << META_SHIFT)\n@@ -59,1 +61,1 @@\n-#define META_BITS                                 (SERIALIZED_BIT | TRANSIENT_BIT | LEAKP_BIT | EPOCH_1_CLEARED_BIT | EPOCH_0_CLEARED_BIT)\n+#define META_BITS                                 (LEAKP_SERIALIZED_BIT | SERIALIZED_BIT | TRANSIENT_BIT | LEAKP_BIT | EPOCH_1_CLEARED_BIT | EPOCH_0_CLEARED_BIT)\n@@ -127,1 +129,1 @@\n-#define META_MASK                                 (~(SERIALIZED_META_BIT | TRANSIENT_META_BIT | LEAKP_META_BIT))\n+#define META_MASK                                 (~(LEAKP_SERIALIZED_META_BIT | SERIALIZED_META_BIT | TRANSIENT_META_BIT | LEAKP_META_BIT))\n@@ -133,0 +135,2 @@\n+#define IS_LEAKP_SERIALIZED(ptr)                  (TRACE_ID_PREDICATE(ptr, LEAKP_SERIALIZED_BIT))\n+#define IS_LEAKP_NOT_SERIALIZED(ptr)              (!(IS_LEAKP_SERIALIZED(ptr)))\n@@ -136,0 +140,1 @@\n+#define SET_LEAKP_SERIALIZED(ptr)                 (TRACE_ID_META_TAG(ptr, LEAKP_SERIALIZED_META_BIT))\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdMacros.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}