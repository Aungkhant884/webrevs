{"files":[{"patch":"@@ -2860,0 +2860,38 @@\n+  RuntimeStub* generate_cont_doYield() {\n+    if (!Continuations::enabled()) return nullptr;\n+    Unimplemented();\n+    return nullptr;\n+  }\n+\n+  address generate_cont_thaw(bool return_barrier, bool exception) {\n+    if (!Continuations::enabled()) return nullptr;\n+    Unimplemented();\n+    return nullptr;\n+  }\n+\n+  address generate_cont_thaw() {\n+    if (!Continuations::enabled()) return nullptr;\n+    Unimplemented();\n+    return nullptr;\n+  }\n+\n+  address generate_cont_returnBarrier() {\n+    if (!Continuations::enabled()) return nullptr;\n+    Unimplemented();\n+    return nullptr;\n+  }\n+\n+  address generate_cont_returnBarrier_exception() {\n+    if (!Continuations::enabled()) return nullptr;\n+    Unimplemented();\n+    return nullptr;\n+  }\n+\n+  #if INCLUDE_JFR\n+  RuntimeStub* generate_jfr_write_checkpoint() {\n+    if (!Continuations::enabled()) return nullptr;\n+    Unimplemented();\n+    return nullptr;\n+  }\n+  #endif \/\/ INCLUD_JFR\n+\n@@ -2898,0 +2936,14 @@\n+  void generate_phase1() {\n+    if (!Continuations::enabled()) return;\n+\n+    \/\/ Continuation stubs:\n+    StubRoutines::_cont_thaw          = generate_cont_thaw();\n+    StubRoutines::_cont_returnBarrier = generate_cont_returnBarrier();\n+    StubRoutines::_cont_returnBarrierExc = generate_cont_returnBarrier_exception();\n+    StubRoutines::_cont_doYield_stub  = generate_cont_doYield();\n+    StubRoutines::_cont_doYield       = StubRoutines::_cont_doYield_stub == nullptr ? nullptr\n+                                      : StubRoutines::_cont_doYield_stub->entry_point();\n+\n+    JFR_ONLY(StubRoutines::_jfr_write_checkpoint_stub = generate_jfr_write_checkpoint();)\n+    JFR_ONLY(StubRoutines::_jfr_write_checkpoint = StubRoutines::_jfr_write_checkpoint_stub->entry_point();)\n+  }\n@@ -2974,5 +3026,3 @@\n-  StubGenerator(CodeBuffer* code, bool all) : StubCodeGenerator(code) {\n-    _stub_count = !all ? 0x100 : 0x200;\n-    if (all) {\n-      generate_all();\n-    } else {\n+  StubGenerator(CodeBuffer* code, int phase) : StubCodeGenerator(code) {\n+    _stub_count = (phase == 0) ? 0x100 : 0x200;\n+    if (phase == 0) {\n@@ -2980,0 +3030,4 @@\n+    } else if (phase == 1) {\n+      generate_phase1(); \/\/ stubs that must be available for the interpreter\n+    } else {\n+      generate_all();\n","filename":"src\/hotspot\/cpu\/s390\/stubGenerator_s390.cpp","additions":59,"deletions":5,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -163,0 +163,4 @@\n+  Thread* current = Thread::current_or_null_safe();\n+  assert(current != nullptr, \"cannot be called by a detached thread\");\n+  guarantee(current != this || JavaThread::cast(current)->is_oop_safe(),\n+            \"current cannot touch oops after its GC barrier is detached.\");\n@@ -1513,3 +1517,9 @@\n-  oop thread_obj = threadObj();\n-  if (thread_obj != NULL) {\n-    if (java_lang_Thread::is_daemon(thread_obj)) st->print(\" daemon\");\n+  Thread* current = Thread::current_or_null_safe();\n+  assert(current != nullptr, \"cannot be called by a detached thread\");\n+  if (!current->is_Java_thread() || JavaThread::cast(current)->is_oop_safe()) {\n+    \/\/ Only access threadObj() if current thread is not a JavaThread\n+    \/\/ or if it is a JavaThread that can safely access oops.\n+    oop thread_obj = threadObj();\n+    if (thread_obj != nullptr) {\n+      if (java_lang_Thread::is_daemon(thread_obj)) st->print(\" daemon\");\n+    }\n@@ -1574,6 +1584,18 @@\n-  oop thread_obj = threadObj();\n-  if (thread_obj != NULL) {\n-    oop name = java_lang_Thread::name(thread_obj);\n-    if (name != NULL) {\n-      if (buf == NULL) {\n-        name_str = java_lang_String::as_utf8_string(name);\n+#ifdef ASSERT\n+  Thread* current = Thread::current_or_null_safe();\n+  assert(current != nullptr, \"cannot be called by a detached thread\");\n+  if (!current->is_Java_thread() || JavaThread::cast(current)->is_oop_safe()) {\n+    \/\/ Only access threadObj() if current thread is not a JavaThread\n+    \/\/ or if it is a JavaThread that can safely access oops.\n+#endif\n+    oop thread_obj = threadObj();\n+    if (thread_obj != NULL) {\n+      oop name = java_lang_Thread::name(thread_obj);\n+      if (name != NULL) {\n+        if (buf == NULL) {\n+          name_str = java_lang_String::as_utf8_string(name);\n+        } else {\n+          name_str = java_lang_String::as_utf8_string(name, buf, buflen);\n+        }\n+      } else if (is_attaching_via_jni()) { \/\/ workaround for 6412693 - see 6404306\n+        name_str = \"<no-name - thread is attaching>\";\n@@ -1581,1 +1603,1 @@\n-        name_str = java_lang_String::as_utf8_string(name, buf, buflen);\n+        name_str = \"<un-named>\";\n@@ -1583,2 +1605,0 @@\n-    } else if (is_attaching_via_jni()) { \/\/ workaround for 6412693 - see 6404306\n-      name_str = \"<no-name - thread is attaching>\";\n@@ -1586,1 +1606,1 @@\n-      name_str = \"<un-named>\";\n+      name_str = Thread::name();\n@@ -1588,0 +1608,1 @@\n+#ifdef ASSERT\n@@ -1589,1 +1610,9 @@\n-    name_str = Thread::name();\n+    \/\/ Current JavaThread has exited...\n+    if (current == this) {\n+      \/\/ ... and is asking about itself:\n+      name_str = \"<no-name - current JavaThread has exited>\";\n+    } else {\n+      \/\/ ... and it can't safely determine this JavaThread's name so\n+      \/\/ use the default thread name.\n+      name_str = Thread::name();\n+    }\n@@ -1591,0 +1620,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":44,"deletions":14,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -1000,3 +1000,0 @@\n-    Thread* current = Thread::current();\n-    guarantee(current != thread || JavaThread::cast(thread)->is_oop_safe(),\n-              \"current cannot touch oops after its GC barrier is detached.\");\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -498,1 +498,0 @@\n-java\/lang\/CompressExpandTest.java                               8287851 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}