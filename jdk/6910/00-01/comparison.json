{"files":[{"patch":"@@ -2268,5 +2268,0 @@\n-                } else {\n-                    \/\/ Remove private key entries where there is no associated\n-                    \/\/ certs. Most likely the keystore is loaded with a null\n-                    \/\/ password.\n-                    entries.remove(entry.alias.toLowerCase(Locale.ENGLISH));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8076190 8242151 8153005 8266182 8279066\n+ * @bug 8076190 8242151 8153005 8266182\n@@ -156,1 +156,1 @@\n-        check(\"os4\", \"a\", null, \"changeit\", true, false, false);\n+        check(\"os4\", \"a\", null, \"changeit\", true, false, true);\n@@ -162,1 +162,1 @@\n-        check(\"os5\", \"a\", null, \"changeit\", true, false, false);\n+        check(\"os5\", \"a\", null, \"changeit\", true, false, true);\n@@ -178,1 +178,1 @@\n-        check(\"ksnormal\", \"a\", null, \"changeit\", true, false, false);\n+        check(\"ksnormal\", \"a\", null, \"changeit\", true, false, true);\n@@ -207,1 +207,1 @@\n-        check(\"ksnormal\", \"b\", null, \"changeit\", true, false, false);\n+        check(\"ksnormal\", \"b\", null, \"changeit\", true, false, true);\n@@ -324,1 +324,1 @@\n-                .shouldContain(\"Your keystore contains 0 entries\");\n+                .shouldContain(\"Certificate chain length: 0\");\n","filename":"test\/jdk\/sun\/security\/pkcs12\/KeytoolOpensslInteropTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1,87 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8279066\n- * @library \/test\/lib\n- * @summary Still see private key entries without certificates in a PKCS12 keystore\n- *\/\n-\n-import jdk.test.lib.Asserts;\n-import jdk.test.lib.SecurityTools;\n-\n-import java.io.File;\n-import java.security.KeyStore;\n-\n-public class ZeroCertificates {\n-    public static void main(String[] args) throws Exception {\n-\n-        SecurityTools.keytool(\"-keystore tmp -storepass changeit -genkeypair \" +\n-                        \"-alias certone -dname CN=A -keyalg EC\")\n-                .shouldHaveExitValue(0);\n-        SecurityTools.keytool(\"-keystore tmp -storepass changeit -exportcert \" +\n-                        \"-alias certone -file cert\")\n-                .shouldHaveExitValue(0);\n-\n-        SecurityTools.keytool(\"-keystore ks -storepass changeit -genkeypair \" +\n-                        \"-alias privateone -dname CN=A -keyalg EC\")\n-                .shouldHaveExitValue(0);\n-        SecurityTools.keytool(\"-keystore ks -storepass changeit -genseckey \" +\n-                        \"-alias secretone -keyalg AES -keysize 128\")\n-                .shouldHaveExitValue(0);\n-        SecurityTools.keytool(\"-keystore ks -storepass changeit -importcert \" +\n-                        \"-alias certone -file cert -noprompt\")\n-                .shouldHaveExitValue(0);\n-\n-        SecurityTools.keytool(\"-keystore ks -storepass changeit -list\")\n-                .shouldHaveExitValue(0)\n-                .shouldContain(\"Your keystore contains 3 entries\")\n-                .shouldContain(\"certone\")\n-                .shouldContain(\"privateone\")\n-                .shouldContain(\"secretone\");\n-\n-        \/\/ PrivateKeyEntry and TrustedCertificateEntry will not show.\n-        \/\/ SecretKeyEntry is still there.\n-        SecurityTools.keytool(\"-keystore ks -list\")\n-                .shouldHaveExitValue(0)\n-                .shouldContain(\"Your keystore contains 1 entry\")\n-                .shouldNotContain(\"certone\")\n-                .shouldNotContain(\"privateone\")\n-                .shouldContain(\"secretone\");\n-\n-        KeyStore ks;\n-\n-        ks = KeyStore.getInstance(new File(\"ks\"), \"changeit\".toCharArray());\n-        Asserts.assertEQ(ks.size(), 3);\n-        Asserts.assertTrue(ks.containsAlias(\"secretone\"));\n-        Asserts.assertTrue(ks.containsAlias(\"privateone\"));\n-        Asserts.assertTrue(ks.containsAlias(\"certone\"));\n-\n-        ks = KeyStore.getInstance(new File(\"ks\"), (char[])null);\n-        Asserts.assertEQ(ks.size(), 1);\n-        Asserts.assertTrue(ks.containsAlias(\"secretone\"));\n-        Asserts.assertFalse(ks.containsAlias(\"privateone\"));\n-        Asserts.assertFalse(ks.containsAlias(\"certone\"));\n-    }\n-}\n","filename":"test\/jdk\/sun\/security\/pkcs12\/ZeroCertificates.java","additions":0,"deletions":87,"binary":false,"changes":87,"status":"deleted"}]}