{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,1 +167,1 @@\n-    return (LogTargetImpl<LogLevel::level, T0, T1, T2, T3, T4, GuardTag>*)NULL; \\\n+    return (LogTargetImpl<LogLevel::level, T0, T1, T2, T3, T4, GuardTag>*)nullptr; \\\n","filename":"src\/hotspot\/share\/logging\/log.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-    \/\/ All readers of _instance after the fence see non-NULL.\n+    \/\/ All readers of _instance after the fence see non-nullptr.\n@@ -198,1 +198,1 @@\n-    for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+    for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-LogOutput** LogConfiguration::_outputs = NULL;\n+LogOutput** LogConfiguration::_outputs = nullptr;\n@@ -46,1 +46,1 @@\n-LogConfiguration::UpdateListenerFunction* LogConfiguration::_listener_callbacks = NULL;\n+LogConfiguration::UpdateListenerFunction* LogConfiguration::_listener_callbacks = nullptr;\n@@ -108,1 +108,1 @@\n-  assert(_outputs == NULL, \"Should not initialize _outputs before this function, initialize called twice?\");\n+  assert(_outputs == nullptr, \"Should not initialize _outputs before this function, initialize called twice?\");\n@@ -117,1 +117,1 @@\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -132,1 +132,1 @@\n-  const bool quoted = start_quote != NULL;\n+  const bool quoted = start_quote != nullptr;\n@@ -137,1 +137,1 @@\n-    equals = NULL;\n+    equals = nullptr;\n@@ -143,1 +143,1 @@\n-  if (equals != NULL) {\n+  if (equals != nullptr) {\n@@ -156,1 +156,1 @@\n-    if (end_quote == NULL) {\n+    if (end_quote == nullptr) {\n@@ -193,1 +193,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -200,1 +200,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -248,1 +248,1 @@\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -288,1 +288,1 @@\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -306,1 +306,1 @@\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -331,1 +331,1 @@\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -379,1 +379,1 @@\n-    if (next != NULL && next[0] == ':' && (next[1] == '\\\\' || next[1] == '\/')) {\n+    if (next != nullptr && next[0] == ':' && (next[1] == '\\\\' || next[1] == '\/')) {\n@@ -385,1 +385,1 @@\n-    while (next != NULL && *next == '\"') {\n+    while (next != nullptr && *next == '\"') {\n@@ -387,1 +387,1 @@\n-      if (end_quote == NULL) {\n+      if (end_quote == nullptr) {\n@@ -396,1 +396,1 @@\n-    if (next != NULL) {\n+    if (next != nullptr) {\n@@ -400,1 +400,1 @@\n-      str = NULL;\n+      str = nullptr;\n@@ -405,1 +405,1 @@\n-  if (str != NULL) {\n+  if (str != nullptr) {\n@@ -426,1 +426,1 @@\n-  if (output == NULL || strlen(output) == 0 ||\n+  if (output == nullptr || strlen(output) == 0 ||\n@@ -432,1 +432,1 @@\n-      output_options = NULL;\n+      output_options = nullptr;\n@@ -441,1 +441,1 @@\n-      output_options = NULL;\n+      output_options = nullptr;\n@@ -459,1 +459,1 @@\n-    assert(end != NULL, \"line must end with newline '%s'\", start);\n+    assert(end != nullptr, \"line must end with newline '%s'\", start);\n@@ -468,2 +468,2 @@\n-      assert(end != NULL || *start == '\\0', \"line must end with newline '%s'\", start);\n-    } while (end != NULL);\n+      assert(end != nullptr || *start == '\\0', \"line must end with newline '%s'\", start);\n+    } while (end != nullptr);\n@@ -481,2 +481,2 @@\n-  assert(errstream != NULL, \"errstream can not be NULL\");\n-  if (outputstr == NULL || strlen(outputstr) == 0) {\n+  assert(errstream != nullptr, \"errstream can not be nullptr\");\n+  if (outputstr == nullptr || strlen(outputstr) == 0) {\n@@ -517,1 +517,1 @@\n-      if (output != NULL) {\n+      if (output != nullptr) {\n@@ -528,1 +528,1 @@\n-  if (!added && output_options != NULL && strlen(output_options) > 0) {\n+  if (!added && output_options != nullptr && strlen(output_options) > 0) {\n@@ -693,1 +693,1 @@\n-  assert(cb != NULL, \"Should not register NULL as listener\");\n+  assert(cb != nullptr, \"Should not register nullptr as listener\");\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-  \/\/ Create a new output. Returns NULL if failed.\n+  \/\/ Create a new output. Returns nullptr if failed.\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-const char* volatile LogDecorations::_host_name = NULL;\n+const char* volatile LogDecorations::_host_name = nullptr;\n@@ -38,1 +38,1 @@\n-  if (host_name == NULL) {\n+  if (host_name == nullptr) {\n@@ -42,2 +42,2 @@\n-      const char* old_value = Atomic::cmpxchg(&_host_name, (const char*)NULL, host_name);\n-      if (old_value != NULL) {\n+      const char* old_value = Atomic::cmpxchg(&_host_name, (const char*)nullptr, host_name);\n+      if (old_value != nullptr) {\n","filename":"src\/hotspot\/share\/logging\/logDecorations.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-  if (decorator_args == NULL || strlen(decorator_args) == 0) {\n+  if (decorator_args == nullptr || strlen(decorator_args) == 0) {\n@@ -76,1 +76,1 @@\n-    if (comma_pos != NULL) {\n+    if (comma_pos != nullptr) {\n@@ -81,1 +81,1 @@\n-      if (errstream != NULL) {\n+      if (errstream != nullptr) {\n@@ -89,1 +89,1 @@\n-  } while (comma_pos != NULL);\n+  } while (comma_pos != nullptr);\n","filename":"src\/hotspot\/share\/logging\/logDecorators.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-  bool parse(const char* decorator_args, outputStream* errstream = NULL);\n+  bool parse(const char* decorator_args, outputStream* errstream = nullptr);\n","filename":"src\/hotspot\/share\/logging\/logDecorators.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,2 +50,2 @@\n-  LogDiagnosticCommand* dcmd = new LogDiagnosticCommand(NULL, false);\n-  if (dcmd != NULL) {\n+  LogDiagnosticCommand* dcmd = new LogDiagnosticCommand(nullptr, false);\n+  if (dcmd != nullptr) {\n","filename":"src\/hotspot\/share\/logging\/logDiagnosticCommand.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"control\", NULL};\n+    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"control\", nullptr};\n","filename":"src\/hotspot\/share\/logging\/logDiagnosticCommand.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-    : LogFileStreamOutput(NULL), _name(os::strdup_check_oom(name, mtLogging)),\n-      _file_name(NULL), _archive_name(NULL), _current_file(0),\n+    : LogFileStreamOutput(nullptr), _name(os::strdup_check_oom(name, mtLogging)),\n+      _file_name(nullptr), _archive_name(nullptr), _current_file(0),\n@@ -75,1 +75,1 @@\n-  if (_stream != NULL) {\n+  if (_stream != nullptr) {\n@@ -241,1 +241,1 @@\n-  if (_stream == NULL) {\n+  if (_stream == nullptr) {\n@@ -270,1 +270,1 @@\n-  if (_stream == NULL) {\n+  if (_stream == nullptr) {\n@@ -290,1 +290,1 @@\n-  if (_stream == NULL) {\n+  if (_stream == nullptr) {\n@@ -305,1 +305,1 @@\n-  if (_stream == NULL) {\n+  if (_stream == nullptr) {\n@@ -330,1 +330,1 @@\n-  assert(_archive_name != NULL && _archive_name_len > 0, \"Rotation must be configured before using this function.\");\n+  assert(_archive_name != nullptr && _archive_name_len > 0, \"Rotation must be configured before using this function.\");\n@@ -367,1 +367,1 @@\n-  if (_stream == NULL) {\n+  if (_stream == nullptr) {\n@@ -381,1 +381,1 @@\n-  char* result = NULL;\n+  char* result = nullptr;\n@@ -388,1 +388,1 @@\n-  if (pid == NULL && timestamp == NULL) {\n+  if (pid == nullptr && timestamp == nullptr) {\n@@ -403,2 +403,2 @@\n-  if (pid != NULL) {\n-    if (timestamp == NULL || pid < timestamp) {\n+  if (pid != nullptr) {\n+    if (timestamp == nullptr || pid < timestamp) {\n@@ -415,2 +415,2 @@\n-  if (timestamp != NULL) {\n-    if (pid == NULL || timestamp < pid) {\n+  if (timestamp != nullptr) {\n+    if (pid == nullptr || timestamp < pid) {\n","filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,1 +137,1 @@\n-      if (next == NULL) {\n+      if (next == nullptr) {\n@@ -145,1 +145,1 @@\n-    } while (next != NULL);\n+    } while (next != nullptr);\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-                                       _message_buffer(NULL),\n+                                       _message_buffer(nullptr),\n@@ -44,1 +44,1 @@\n-                                       _lines(NULL),\n+                                       _lines(nullptr),\n@@ -47,1 +47,1 @@\n-                                       _prefix_fn(NULL) {\n+                                       _prefix_fn(nullptr) {\n@@ -101,1 +101,1 @@\n-    if (_prefix_fn != NULL) {\n+    if (_prefix_fn != nullptr) {\n","filename":"src\/hotspot\/share\/logging\/logMessageBuffer.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,1 +112,1 @@\n-  \/\/ Setting this to NULL will disable prefixing.\n+  \/\/ Setting this to nullptr will disable prefixing.\n","filename":"src\/hotspot\/share\/logging\/logMessageBuffer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-                                    LogTagType subset[LogTag::MaxTags] = NULL,\n+                                    LogTagType subset[LogTag::MaxTags] = nullptr,\n@@ -94,1 +94,1 @@\n-  if (subset == NULL) {\n+  if (subset == nullptr) {\n@@ -164,1 +164,1 @@\n-    for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+    for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -230,1 +230,1 @@\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -262,1 +262,1 @@\n-      for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+      for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -288,1 +288,1 @@\n-    for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+    for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -326,1 +326,1 @@\n-  if (options == NULL || strlen(options) == 0) {\n+  if (options == nullptr || strlen(options) == 0) {\n@@ -336,1 +336,1 @@\n-    if (comma_pos != NULL) {\n+    if (comma_pos != nullptr) {\n@@ -340,1 +340,1 @@\n-    if (equals_pos == NULL) {\n+    if (equals_pos == nullptr) {\n@@ -358,1 +358,1 @@\n-  } while (comma_pos != NULL);\n+  } while (comma_pos != nullptr);\n","filename":"src\/hotspot\/share\/logging\/logOutput.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-  if (level == LogLevel::Off && node != NULL) {\n+  if (level == LogLevel::Off && node != nullptr) {\n@@ -58,1 +58,1 @@\n-  } else if (level != LogLevel::Off && node == NULL) {\n+  } else if (level != LogLevel::Off && node == nullptr) {\n@@ -60,1 +60,1 @@\n-  } else if (node != NULL) {\n+  } else if (node != nullptr) {\n@@ -66,1 +66,1 @@\n-  for (LogOutputNode* node = _level_start[LogLevel::Last]; node != NULL; node = node->_next) {\n+  for (LogOutputNode* node = _level_start[LogLevel::Last]; node != nullptr; node = node->_next) {\n@@ -71,1 +71,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -81,1 +81,1 @@\n-    _level_start[level] = NULL;\n+    _level_start[level] = nullptr;\n@@ -86,1 +86,1 @@\n-  while (cur != NULL) {\n+  while (cur != nullptr) {\n@@ -94,1 +94,1 @@\n-  assert(node != NULL, \"Node must be non-null\");\n+  assert(node != nullptr, \"Node must be non-null\");\n@@ -106,1 +106,1 @@\n-  for (LogOutputNode* cur = _level_start[LogLevel::Last]; cur != NULL; cur = cur->_next) {\n+  for (LogOutputNode* cur = _level_start[LogLevel::Last]; cur != nullptr; cur = cur->_next) {\n@@ -126,1 +126,1 @@\n-       node->_next != NULL && node->_next->_level == level;\n+       node->_next != nullptr && node->_next->_level == level;\n@@ -132,1 +132,1 @@\n-    if (_level_start[l] == NULL || _level_start[l]->_level < level) {\n+    if (_level_start[l] == nullptr || _level_start[l]->_level < level) {\n@@ -138,1 +138,1 @@\n-  for (LogOutputNode* cur = _level_start[LogLevel::Last]; cur != NULL; cur = cur->_next) {\n+  for (LogOutputNode* cur = _level_start[LogLevel::Last]; cur != nullptr; cur = cur->_next) {\n","filename":"src\/hotspot\/share\/logging\/logOutputList.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-      _level_start[i] = NULL;\n+      _level_start[i] = nullptr;\n@@ -76,1 +76,1 @@\n-    return _level_start[level] != NULL;\n+    return _level_start[level] != nullptr;\n@@ -81,1 +81,1 @@\n-    if (node == NULL) {\n+    if (node == nullptr) {\n@@ -145,1 +145,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/logging\/logOutputList.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n@@ -76,1 +76,1 @@\n-  if (equals != NULL) {\n+  if (equals != nullptr) {\n@@ -80,1 +80,1 @@\n-      if (errstream != NULL) {\n+      if (errstream != nullptr) {\n@@ -104,1 +104,1 @@\n-  if (asterisk_pos != NULL && asterisk_pos[1] == '\\0') {\n+  if (asterisk_pos != nullptr && asterisk_pos[1] == '\\0') {\n@@ -114,1 +114,1 @@\n-    if (plus_pos != NULL) {\n+    if (plus_pos != nullptr) {\n@@ -119,1 +119,1 @@\n-      if (errstream != NULL) {\n+      if (errstream != nullptr) {\n@@ -130,1 +130,1 @@\n-      if (errstream != NULL) {\n+      if (errstream != nullptr) {\n@@ -138,1 +138,1 @@\n-  } while (plus_pos != NULL);\n+  } while (plus_pos != nullptr);\n@@ -143,1 +143,1 @@\n-        if (errstream != NULL) {\n+        if (errstream != nullptr) {\n@@ -278,1 +278,1 @@\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = LogTagSet::first(); ts != nullptr; ts = ts->next()) {\n","filename":"src\/hotspot\/share\/logging\/logSelection.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-  static LogSelection parse(const char* str, outputStream* error_stream = NULL);\n+  static LogSelection parse(const char* str, outputStream* error_stream = nullptr);\n","filename":"src\/hotspot\/share\/logging\/logSelection.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-      if (out == NULL) {\n+      if (out == nullptr) {\n@@ -59,1 +59,1 @@\n-  if (str == NULL || strcmp(str, \"\") == 0) {\n+  if (str == nullptr || strcmp(str, \"\") == 0) {\n@@ -64,1 +64,1 @@\n-  for (char *comma_pos = copy, *cur = copy; success && comma_pos != NULL; cur = comma_pos + 1) {\n+  for (char *comma_pos = copy, *cur = copy; success && comma_pos != nullptr; cur = comma_pos + 1) {\n@@ -66,1 +66,1 @@\n-      if (errstream != NULL) {\n+      if (errstream != nullptr) {\n@@ -75,1 +75,1 @@\n-    if (comma_pos != NULL) {\n+    if (comma_pos != nullptr) {\n","filename":"src\/hotspot\/share\/logging\/logSelectionList.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-  bool parse(const char* str, outputStream* errstream = NULL);\n+  bool parse(const char* str, outputStream* errstream = nullptr);\n@@ -62,1 +62,1 @@\n-  bool verify_selections(outputStream* out = NULL) const;\n+  bool verify_selections(outputStream* out = nullptr) const;\n","filename":"src\/hotspot\/share\/logging\/logSelectionList.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-  if (newbuf == NULL) { \/\/ OOM. Leave object unchanged.\n+  if (newbuf == nullptr) { \/\/ OOM. Leave object unchanged.\n","filename":"src\/hotspot\/share\/logging\/logStream.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-  \/\/ Constructor to support creation from typed (likely NULL) pointer. Mostly used by the logging framework.\n+  \/\/ Constructor to support creation from typed (likely nullptr) pointer. Mostly used by the logging framework.\n@@ -107,1 +107,1 @@\n-  \/\/ LogStream stream((LogTargetImpl<level, T0, T1, T2, T3, T4, GuardTag>*)NULL);\n+  \/\/ LogStream stream((LogTargetImpl<level, T0, T1, T2, T3, T4, GuardTag>*)nullptr);\n@@ -136,1 +136,1 @@\n-    : LogStream((LogTargetImpl<level, T0, T1, T2, T3, T4, GuardTag>*)NULL) {}\n+    : LogStream((LogTargetImpl<level, T0, T1, T2, T3, T4, GuardTag>*)nullptr) {}\n","filename":"src\/hotspot\/share\/logging\/logStream.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-LogTagSet*  LogTagSet::_list      = NULL;\n+LogTagSet*  LogTagSet::_list      = nullptr;\n@@ -184,1 +184,1 @@\n-  for (const LogTagSetDescription* d = tagset_descriptions; d->tagset != NULL; d++) {\n+  for (const LogTagSetDescription* d = tagset_descriptions; d->tagset != nullptr; d++) {\n@@ -200,1 +200,1 @@\n-  for (LogTagSet* ts = first(); ts != NULL; ts = ts->next()) {\n+  for (LogTagSet* ts = first(); ts != nullptr; ts = ts->next()) {\n","filename":"src\/hotspot\/share\/logging\/logTagSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-  { NULL, NULL }\n+  { nullptr, nullptr }\n","filename":"src\/hotspot\/share\/logging\/logTagSetDescriptions.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}