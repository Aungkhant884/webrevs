{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,0 @@\n-    private static final Class<InputStream> ioInputStreamClass = InputStream.class;\n@@ -1142,1 +1141,1 @@\n-        return ioInputStreamClass;\n+        return java.io.InputStream.class;\n@@ -1161,1 +1160,1 @@\n-        return ioInputStreamClass.isAssignableFrom(representationClass);\n+        return java.io.InputStream.class.isAssignableFrom(representationClass);\n","filename":"src\/java.datatransfer\/share\/classes\/java\/awt\/datatransfer\/DataFlavor.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.datatransfer.DataFlavor;\n+import java.io.InputStream;\n+\n+\/**\n+ * @test\n+ * @bug 8259519\n+ * @summary InputStream should be used as a default data flavor representation\n+ *\/\n+public final class DefaultRepresentation extends InputStream {\n+\n+    public static void main(String[] args) {\n+        DataFlavor df = new DataFlavor(DefaultRepresentation.class, \"stream\");\n+        if (df.getDefaultRepresentationClass() != InputStream.class) {\n+            \/\/ default representation class is not specified!\n+            \/\/ this check just defends against accidental changes\n+            throw new RuntimeException(\"InputStream class is expected\");\n+        }\n+        if (!df.isRepresentationClassInputStream()) {\n+            throw new RuntimeException(\"true is expected\");\n+        }\n+    }\n+\n+    @Override\n+    public int read() {\n+        return 0;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/datatransfer\/DataFlavor\/DefaultRepresentation.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}