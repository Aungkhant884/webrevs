{"files":[{"patch":"@@ -560,1 +560,5 @@\n-                requestBodyCF.complete(null);\n+                if (frame.getErrorCode() != ResetFrame.NO_ERROR) {\n+                    requestBodyCF.completeExceptionally(new IOException(\"RST_STREAM received\"));\n+                } else {\n+                    requestBodyCF.complete(null);\n+                }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,23 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n@@ -12,1 +35,0 @@\n-import jdk.httpclient.test.lib.http2.BodyOutputStream;\n@@ -15,1 +37,0 @@\n-import jdk.httpclient.test.lib.http2.Http2TestExchangeImpl;\n@@ -17,2 +38,0 @@\n-import jdk.httpclient.test.lib.http2.Http2TestServerConnection;\n-import jdk.internal.net.http.common.HttpHeadersBuilder;\n@@ -25,1 +44,0 @@\n-import javax.net.ssl.SSLSession;\n@@ -27,1 +45,0 @@\n-import java.io.InputStream;\n@@ -31,1 +48,0 @@\n-import java.net.http.HttpHeaders;\n@@ -102,2 +118,2 @@\n-            \/\/ The input stream is not read in this bug as this will trigger window updates for the server concerns\n-            \/\/ the case where no updates are sent and the server instead tells the client to abort the transmission.\n+            \/\/ The input stream is not read in this bug as this will trigger window updates for the server. This bug\n+            \/\/ concerns the case where no updates are sent and the server instead tells the client to abort the transmission.\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/PostPutTest.java","additions":25,"deletions":9,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    boolean closed;\n+    volatile boolean closed;\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/BodyInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+    volatile int resetErrorCode;\n@@ -137,1 +138,1 @@\n-                sendReset(EMPTY_BARRAY, 0, 0, ResetFrame.NO_ERROR);\n+                sendReset(EMPTY_BARRAY, 0, 0, resetErrorCode);\n@@ -158,2 +159,4 @@\n-    public void setSendResetNoError(boolean val) {\n-        this.sendResetNoError = val;\n+    \/\/ Called before close() when used\n+    public void sendResetOnClose(int error) {\n+        this.sendResetNoError = true;\n+        this.resetErrorCode = error;\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/BodyOutputStream.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -736,1 +736,1 @@\n-                    bos.setSendResetNoError(true);\n+                    bos.sendResetOnClose(ResetFrame.NO_ERROR);\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/http2\/Http2TestServerConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}