{"files":[{"patch":"@@ -110,1 +110,0 @@\n-    G1CMBitMap* next_bitmap = g1h->concurrent_mark()->next_mark_bitmap();\n@@ -112,3 +111,1 @@\n-    \/\/ The following checks whether the humongous object is live are sufficient.\n-    \/\/ The main additional check (in addition to having a reference from the roots\n-    \/\/ or the young gen) is whether the humongous object has a remembered set entry.\n+    \/\/ The following check whether the humongous object is live is sufficient.\n@@ -116,2 +113,6 @@\n-    \/\/ A humongous object cannot be live if there is no remembered set for it\n-    \/\/ because:\n+    \/\/ A humongous object can only be live if it is (still) a humongous reclaim\n+    \/\/ candidate because:\n+    \/\/ - if it has not been a candidate at the start of collection, it will never\n+    \/\/ be a candidate (and live).\n+    \/\/ - any found outstanding (i.e. in the DCQ, or in its remembered set)\n+    \/\/ references will set the candidate state to false.\n@@ -120,5 +121,1 @@\n-    \/\/ (I.e. there are no intra-region references that may be missed by the\n-    \/\/ remembered set)\n-    \/\/ - as soon there is a remembered set entry to the humongous starts region\n-    \/\/ (i.e. it has \"escaped\" to an old object) this remembered set entry will stay\n-    \/\/ until the end of a concurrent mark.\n+    \/\/ (I.e. there can be no intra-region references)\n@@ -130,2 +127,3 @@\n-    \/\/ So if at this point in the collection there is no remembered set entry,\n-    \/\/ nobody has a reference to it.\n+    \/\/ So if at this point in the collection we did not find a reference during gc\n+    \/\/ (or it had enough references to not be a candidate, having many remembered\n+    \/\/ set entries), nobody has a reference to it.\n@@ -135,0 +133,2 @@\n+    \/\/ So there is no need to re-check remembered set size of the humongous region.\n+    \/\/\n@@ -149,6 +149,0 @@\n-    log_debug(gc, humongous)(\"Reclaimed humongous region %u (object size \" SIZE_FORMAT \" @ \" PTR_FORMAT \")\",\n-                             region_idx,\n-                             (size_t)obj->size() * HeapWordSize,\n-                             p2i(r->bottom())\n-                            );\n-\n@@ -173,0 +167,5 @@\n+    log_debug(gc, humongous)(\"Reclaimed humongous region %u (object size \" SIZE_FORMAT \" @ \" PTR_FORMAT \")\",\n+                             region_idx,\n+                             (size_t)obj->size() * HeapWordSize,\n+                             p2i(r->bottom())\n+                            );\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"}]}