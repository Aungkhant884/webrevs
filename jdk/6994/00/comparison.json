{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,0 +110,3 @@\n+        if(startTimeTicks == endTimeTicks) {\n+            return Duration.ZERO;\n+        }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedEvent.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -830,1 +830,1 @@\n-    private Duration getDuration(long timespan, String name) throws InternalError {\n+    private Duration getDuration(long timespan, String name) {\n@@ -832,0 +832,3 @@\n+        if (timespan == 0) {\n+            return Duration.ZERO;\n+        }\n@@ -1000,1 +1003,1 @@\n-        return OffsetDateTime.ofInstant(getInstant(name), objectContext.getZoneOffset());\n+        return OffsetDateTime.ofInstant(instant, objectContext.getZoneOffset());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}