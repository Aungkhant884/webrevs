{"files":[{"patch":"@@ -83,1 +83,13 @@\n-  return *(oop*)addr;\n+  oop val = *(oop*)addr;\n+\n+#if INCLUDE_SHENANDOAHGC\n+  if (UseShenandoahGC) {\n+    \/\/ Pass the value through the barrier to avoid capturing bad oops as\n+    \/\/ stack values. Note: do not heal the location, to avoid accidentally\n+    \/\/ corrupting the stack. Stack watermark barriers are supposed to handle\n+    \/\/ the healing.\n+    val = ShenandoahBarrierSet::barrier_set()->load_reference_barrier(val);\n+  }\n+#endif\n+\n+  return val;\n@@ -108,1 +120,13 @@\n-  return CompressedOops::decode(*narrow_addr);\n+  oop val = CompressedOops::decode(*narrow_addr);\n+\n+#if INCLUDE_SHENANDOAHGC\n+  if (UseShenandoahGC) {\n+    \/\/ Pass the value through the barrier to avoid capturing bad oops as\n+    \/\/ stack values. Note: do not heal the location, to avoid accidentally\n+    \/\/ corrupting the stack. Stack watermark barriers are supposed to handle\n+    \/\/ the healing.\n+    val = ShenandoahBarrierSet::barrier_set()->load_reference_barrier(val);\n+  }\n+#endif\n+\n+  return val;\n","filename":"src\/hotspot\/share\/runtime\/stackValue.cpp","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"}]}