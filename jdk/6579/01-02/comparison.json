{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import java.util.Optional;\n@@ -1066,1 +1067,2 @@\n-                    return (labelContent.isEmpty() ? text: labelContent);\n+                    return invalidTagOutput(resources.getText(\"doclet.tag.invalid\", tagName),\n+                            Optional.of(labelContent.isEmpty() ? text: labelContent));\n@@ -1625,3 +1627,3 @@\n-                        if (body.matches(\"(?i)\\\\{@[a-z]+.*\")) {\n-                            messages.warning(dtp,\"doclet.tag.invalid_usage\", body);\n-                        } else {\n+                        Matcher m = Pattern.compile(\"(?i)\\\\{@([a-z]+).*\").matcher(body);\n+                        String tagName = m.matches() ? m.group(1) : null;\n+                        if (tagName == null) {\n@@ -1629,0 +1631,6 @@\n+                            result.add(invalidTagOutput(resources.getText(\"doclet.tag.invalid_input\", body),\n+                                    Optional.empty()));\n+                        } else {\n+                            messages.warning(dtp, \"doclet.tag.invalid_usage\", body);\n+                            result.add(invalidTagOutput(resources.getText(\"doclet.tag.invalid\", tagName),\n+                                    Optional.of(Text.of(body))));\n@@ -1631,1 +1639,0 @@\n-                    result.add(Text.of(node.toString()));\n@@ -1785,0 +1792,18 @@\n+    \/**\n+     * Returns the output for an invalid tag. The returned content uses special styling to\n+     * highlight the problem. Depending on the presence of the {@code detail} string the method\n+     * returns a plain text span or an expandable component.\n+     *\n+     * @param summary the single-line summary message\n+     * @param detail the optional detail message which may contain preformatted text\n+     * @return the output\n+     *\/\n+    protected Content invalidTagOutput(String summary, Optional<Content> detail) {\n+        if (detail.isEmpty() || detail.get().isEmpty()) {\n+            return HtmlTree.SPAN(HtmlStyle.invalidTag, Text.of(summary));\n+        }\n+        return new HtmlTree(TagName.DETAILS).addStyle(HtmlStyle.invalidTag)\n+                .add(new HtmlTree(TagName.SUMMARY).add(Text.of(summary)))\n+                .add(new HtmlTree(TagName.PRE).add(detail.get()));\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":30,"deletions":5,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -537,6 +537,4 @@\n-        if (detail.isEmpty() || detail.get().isBlank()) {\n-            return HtmlTree.SPAN(HtmlStyle.invalidTag, Text.of(summary));\n-        }\n-        return new HtmlTree(TagName.DETAILS).addStyle(HtmlStyle.invalidTag)\n-                .add(new HtmlTree(TagName.SUMMARY).add(Text.of(summary)))\n-                .add(new HtmlTree(TagName.PRE).add(Text.of(utils.normalizeNewlines(detail.get()))));\n+        return htmlWriter.invalidTagOutput(summary,\n+                detail.isEmpty() || detail.get().isEmpty()\n+                        ? Optional.empty()\n+                        : Optional.of(Text.of(utils.normalizeNewlines(detail.get()))));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -109,0 +109,1 @@\n+doclet.tag.invalid=invalid @{0}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -358,3 +358,0 @@\n-doclet.snippet.error=\\\n- Invalid snippet\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -402,1 +402,1 @@\n-        return writer.invalidTagOutput(resources.getText(\"doclet.snippet.error\"), details);\n+        return writer.invalidTagOutput(resources.getText(\"doclet.tag.invalid\", \"snippet\"), details);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SnippetTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -244,1 +244,3 @@\n-     * Returns the output that acts as a notification for an invalid tag.\n+     * Returns the output for an invalid tag. The returned content uses special styling to\n+     * highlight the problem. Depending on the presence of the {@code detail} string the method\n+     * returns a plain text span or an expandable component.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletWriter.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -169,3 +169,18 @@\n-                    <div class=\"block\"><code>java.util.Foo&lt;String&gt;<\/code>\n-                     Baz&lt;Object&gt;\n-                     <code>#b(List&lt;Integer&gt;)<\/code><\/div>\"\"\",\n+                    <div class=\"block\">\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @link<\/summary>\n+                    <pre><code>java.util.Foo&lt;String&gt;<\/code><\/pre>\n+                    <\/details>\n+                                        \n+                    \\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @linkplain<\/summary>\n+                    <pre>Baz&lt;Object&gt;<\/pre>\n+                    <\/details>\n+                                        \n+                    \\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @link<\/summary>\n+                    <pre><code>#b(List&lt;Integer&gt;)<\/code><\/pre>\n+                    <\/details>\n+                    <\/div>\"\"\",\n@@ -178,3 +193,18 @@\n-                    <li><code>java.util.List&lt;Bar&gt;<\/code><\/li>\n-                    <li><code>Baz&lt;Object, String&gt;<\/code><\/li>\n-                    <li><code>B#b(List&lt;Baz&gt;)<\/code><\/li>\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @see<\/summary>\n+                    <pre><code>java.util.List&lt;Bar&gt;<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @see<\/summary>\n+                    <pre><code>Baz&lt;Object, String&gt;<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @see<\/summary>\n+                    <pre><code>B#b(List&lt;Baz&gt;)<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testGenericTypeLink\/TestGenericTypeLink.java","additions":36,"deletions":6,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-                <dd><code>i<\/code> - a &lt; b<\/dd>\n+                <dd><code>i<\/code> - a <span class=\"invalid-tag\">invalid input: '&lt;'<\/span> b<\/dd>\n@@ -76,1 +76,1 @@\n-                <dd><code>i<\/code> - a &lt; b<\/dd>\n+                <dd><code>i<\/code> - a <span class=\"invalid-tag\">invalid input: '&lt;'<\/span> b<\/dd>\n@@ -104,1 +104,1 @@\n-                <dd>a &lt; b<\/dd>\n+                <dd>a <span class=\"invalid-tag\">invalid input: '&lt;'<\/span> b<\/dd>\n@@ -108,1 +108,1 @@\n-                <dd>a &lt; b<\/dd>\n+                <dd>a <span class=\"invalid-tag\">invalid input: '&lt;'<\/span> b<\/dd>\n@@ -150,1 +150,6 @@\n-                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                <div class=\"block\">\n+                <details class=\"invalid-tag\">\n+                <summary>invalid @link<\/summary>\n+                <pre><code>NonExistingClass<\/code><\/pre>\n+                <\/details>\n+                <\/div>\n@@ -153,1 +158,6 @@\n-                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                <div class=\"block\">\n+                <details class=\"invalid-tag\">\n+                <summary>invalid @link<\/summary>\n+                <pre><code>NonExistingClass<\/code><\/pre>\n+                <\/details>\n+                <\/div>\n@@ -156,1 +166,6 @@\n-                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                <div class=\"block\">\n+                <details class=\"invalid-tag\">\n+                <summary>invalid @link<\/summary>\n+                <pre><code>NonExistingClass<\/code><\/pre>\n+                <\/details>\n+                <\/div>\n@@ -159,1 +174,6 @@\n-                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                <div class=\"block\">\n+                <details class=\"invalid-tag\">\n+                <summary>invalid @link<\/summary>\n+                <pre><code>NonExistingClass<\/code><\/pre>\n+                <\/details>\n+                <\/div>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInherited\/TestInherited.java","additions":28,"deletions":8,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-                    <div class=\"block\">case1: A hanging &lt;  : xx&lt;<\/div>\"\"\");\n+                    <div class=\"block\">case1: A hanging &lt;  : xx<span class=\"invalid-tag\">invalid input: '&lt;'<\/span><\/div>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNonInlineHtmlTagRemoval\/TestNonInlineHtmlTagRemoval.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,6 @@\n-                    <li><code>Foo&lt;String&gt;<\/code><\/li>\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid @see<\/summary>\n+                    <pre><code>Foo&lt;String&gt;<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSeeTag\/TestSeeTag.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1086,1 +1086,1 @@\n-                        <summary>Invalid snippet<\/summary>\n+                        <summary>invalid @snippet<\/summary>\n@@ -1167,1 +1167,1 @@\n-                        <summary>Invalid snippet<\/summary>\n+                        <summary>invalid @snippet<\/summary>\n@@ -1229,1 +1229,1 @@\n-                        <summary>Invalid snippet<\/summary>\n+                        <summary>invalid @snippet<\/summary>\n@@ -2042,1 +2042,1 @@\n-                        <summary>Invalid snippet<\/summary>\n+                        <summary>invalid @snippet<\/summary>\n@@ -2093,1 +2093,1 @@\n-                        <summary>Invalid snippet<\/summary>\n+                        <summary>invalid @snippet<\/summary>\n@@ -2393,1 +2393,1 @@\n-                        <summary>Invalid snippet<\/summary>\n+                        <summary>invalid @snippet<\/summary>\n@@ -2549,1 +2549,1 @@\n-                        <summary>Invalid snippet<\/summary>\n+                        <summary>invalid @snippet<\/summary>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetTag.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}