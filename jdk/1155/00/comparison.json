{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,15 @@\n-import java.awt.event.*;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Cursor;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.LayoutManager2;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseEvent;\n@@ -30,5 +44,9 @@\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-import java.awt.*;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JLayeredPane;\n+import javax.swing.JRootPane;\n+import javax.swing.LookAndFeel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.MouseInputListener;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.basic.BasicRootPaneUI;\n@@ -488,1 +506,1 @@\n-                                 cpHeight + mbHeight + tpWidth + i.top + i.bottom);\n+                                 cpHeight + mbHeight + tpHeight + i.top + i.bottom);\n@@ -539,1 +557,1 @@\n-                                 cpHeight + mbHeight + tpWidth + i.top + i.bottom);\n+                                 cpHeight + mbHeight + tpHeight + i.top + i.bottom);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalRootPaneUI.java","additions":27,"deletions":9,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JLayeredPane;\n+import javax.swing.JRootPane;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+import static javax.swing.UIManager.getInstalledLookAndFeels;\n+\n+\/**\n+ * @test\n+ * @bug 4916923\n+ * @key headful\n+ * @summary MetalRootLayout does not correctly calculate minimumsize\n+ *\/\n+public final class RootPaneDecorationSize {\n+\n+    public static void main(String[] args) throws Exception {\n+        for (UIManager.LookAndFeelInfo laf : getInstalledLookAndFeels()) {\n+            EventQueue.invokeAndWait(() -> setLookAndFeel(laf));\n+            EventQueue.invokeAndWait(RootPaneDecorationSize::test);\n+        }\n+    }\n+\n+    private static void test() {\n+        JFrame frame = new JFrame();\n+        Dimension size;\n+        Dimension min;\n+        Dimension pref;\n+        try {\n+            \/\/ undecorated frame and decorated root pane usually used together\n+            frame.setUndecorated(true);\n+            frame.getRootPane().setWindowDecorationStyle(JRootPane.FRAME);\n+            \/\/ customize the current L&F (mimic custom L&F)\n+            JLayeredPane layeredPane = frame.getRootPane().getLayeredPane();\n+            for (Component comp : layeredPane.getComponents()) {\n+                comp.setMinimumSize(new Dimension(1000, 10));\n+                comp.setMaximumSize(new Dimension(1000, 10));\n+                comp.setPreferredSize(new Dimension(1000, 10));\n+            }\n+            frame.pack();\n+            size = frame.getSize();\n+            min = frame.getMinimumSize();\n+            pref = frame.getPreferredSize();\n+        } finally {\n+            frame.dispose();\n+        }\n+        System.err.println(\"\\tsize = \" + size);\n+        System.err.println(\"\\tminimumSize = \" + min);\n+        System.err.println(\"\\tpreferredSize = \" + pref);\n+\n+        \/\/ We cannot predict which size will be used by the current L&F\n+        \/\/ but based on customization above the height < 1000 and width > 1000\n+        if (size.height > 1000 || min.height > 1000 || pref.height > 1000) {\n+            throw new RuntimeException(\"The height too big\");\n+        }\n+        if (size.width < 1000 || min.width < 1000 || pref.width < 1000) {\n+            throw new RuntimeException(\"The width too small\");\n+        }\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            System.err.println(\"LookAndFeel: \" + laf.getClassName());\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored){\n+            System.err.println(\"Unsupported LookAndFeel: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException |\n+                IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JRootPane\/RootPaneDecorationSize.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"}]}