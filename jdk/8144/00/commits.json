[{"commit":{"message":"8284125: AArch64: Remove partial masked operations for SVE\n\nCurrently there are match rules named as xxx_masked_partial, which are\nexpected to work on masked vector operations when the vector size is not\nthe full size of hardware vector reg width, i.e. partial vector. Those\nrules will make sure the given masked (predicate) high bits are cleared\nwith vector width. Actually, for those masked rules with predicate\ninput, if we can guarantee the input predicate high bits are already\ncleared with vector width, we don't need to re-do the clear work before\nuse. Currently, there are only 4 nodes on AArch64 backend which\ninitializes (defines) predicate registers:\n\n  1.MaskAllNode\n  2.VectorLoadMaskNode\n  3.VectorMaskGen\n  4.VectorMaskCmp\n\nWe can ensure that the predicate register will be well initialized with\nproper vector size, so that most of the masked partial rules with a mask\ninput could be removed.\n\n[TEST]\nvector api jtreg tests passed on my SVE testing system.\n\nChange-Id: Iee3d7c5952f7634458222cad9eec1cc661818b8e"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4"}],"sha":"fcf03d9fed622c7b4f36573570e952ddb4e769d1"}]