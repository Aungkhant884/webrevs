{"files":[{"patch":"@@ -204,1 +204,1 @@\n-        assertEquals(struct.byteSize(), MemoryLayouts.ADDRESS.byteSize());\n+        assertEquals(struct.byteSize(), 8);\n@@ -217,2 +217,4 @@\n-            assertFalse(layout.toString().contains(\"%\"));\n-            assertEquals(layout.withBitAlignment(a).toString().contains(\"%\"), a != bitAlign);\n+            if (layout.bitAlignment() == layout.bitSize()) {\n+                assertFalse(layout.toString().contains(\"%\"));\n+                assertEquals(layout.withBitAlignment(a).toString().contains(\"%\"), a != bitAlign);\n+            }\n@@ -309,1 +311,1 @@\n-        Object[][] layoutsAndAlignments = new Object[basicLayouts.length * 5][];\n+        Object[][] layoutsAndAlignments = new Object[basicLayouts.length * 4][];\n@@ -314,4 +316,0 @@\n-        }\n-        \/\/add basic layouts wrapped in a sequence with unspecified size\n-        for (MemoryLayout l : basicLayouts) {\n-            layoutsAndAlignments[i++] = new Object[] { MemoryLayout.ofSequence(l), l.bitAlignment() };\n","filename":"test\/jdk\/java\/foreign\/TestLayouts.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"}]}