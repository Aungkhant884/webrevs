{"files":[{"patch":"@@ -466,2 +466,2 @@\n-      THROW_MSG(vmSymbols::java_lang_IllegalStateException(),\n-                \"DiagnosticCommandImpl is not available\");\n+      fatal(\"Should have the DiagnosticCommandImpl class\");\n+      return; \/\/ silence the compiler\n@@ -469,0 +469,1 @@\n+\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-  instanceOop i = gcManager->get_memory_manager_instance(CHECK_NH);\n+  instanceOop i = gcManager->get_memory_manager_instance(THREAD);\n@@ -204,1 +204,1 @@\n-    instanceOop gc_mbean = request->gcManager->get_memory_manager_instance(CHECK);\n+    instanceOop gc_mbean = request->gcManager->get_memory_manager_instance(THREAD);\n","filename":"src\/hotspot\/share\/services\/gcNotifier.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-      THROW_MSG_(vmSymbols::java_lang_IllegalArgumentException(),\n-                 \"This GCMemoryManager doesn't have a GarbageCollectorMXBean\", NULL);\n+      fatal(\"Should have the ManagementFactoryHelper or GarbageCollectorExtImpl class\");\n+      return nullptr; \/\/ silence the compiler\n","filename":"src\/hotspot\/share\/services\/memoryManager.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}