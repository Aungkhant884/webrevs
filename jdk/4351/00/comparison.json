{"files":[{"patch":"@@ -3420,1 +3420,1 @@\n-                !sym.kind.isResolutionError() || sym.kind == AMBIGUOUS;\n+                 !sym.kind.isResolutionError() || sym.kind == AMBIGUOUS || sym.kind == STATICERR;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,19 @@\n+\/**\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8238213\n+ * @summary Method resolution should stop on static error\n+ * @compile\/fail\/ref=ShouldStopOnStaticError.out -XDrawDiagnostics ShouldStopOnStaticError.java\n+ *\/\n+\n+public class ShouldStopOnStaticError {\n+    static void foo() {\n+        test1(5.0);\n+        test2((Double)5.0);\n+    }\n+\n+    void test1(double d) {}\n+    void test1(Double d) {}\n+\n+    void test2(Number n) {}\n+    static void test2(Double... d) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/static_error\/ShouldStopOnStaticError.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+ShouldStopOnStaticError.java:10:9: compiler.err.non-static.cant.be.ref: kindname.method, test1(double)\n+ShouldStopOnStaticError.java:11:9: compiler.err.non-static.cant.be.ref: kindname.method, test2(java.lang.Number)\n+2 errors\n","filename":"test\/langtools\/tools\/javac\/static_error\/ShouldStopOnStaticError.out","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"}]}