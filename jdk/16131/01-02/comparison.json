{"files":[{"patch":"@@ -82,1 +82,2 @@\n-        List<String> fields = FieldExplorer.get(cls);\n+        FieldExplorer explorer = new FieldExplorer(cls);\n+        List<String> fields = explorer.get();\n@@ -86,1 +87,1 @@\n-    \/\/ helper class to get list of the class field\n+    \/\/ helper class to get list of the class fields\n@@ -89,1 +90,1 @@\n-        private Class cls;\n+        private final Class cls;\n@@ -104,1 +105,1 @@\n-        InputStream getClassBytes() throws Exception {\n+        private InputStream getClassBytes() throws Exception {\n@@ -111,1 +112,1 @@\n-        static List<String> get(Class cls) throws Exception {\n+        public List<String> get() throws Exception {\n@@ -113,2 +114,1 @@\n-            FieldExplorer explorer = new FieldExplorer(cls);\n-            try (InputStream classBytes = explorer.getClassBytes()) {\n+            try (InputStream classBytes = getClassBytes()) {\n@@ -116,1 +116,1 @@\n-                classReader.accept(explorer, 0);\n+                classReader.accept(this, 0);\n@@ -118,1 +118,1 @@\n-            return explorer.fieldNameAndSig;\n+            return fieldNameAndSig;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassFields\/getclfld007.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -115,17 +115,1 @@\n-        } else {\n-            err = jvmti->GetFieldName(clazz, fields[j], &name, &sig, NULL);\n-            if (err != JVMTI_ERROR_NONE) {\n-                printf(\"(GetFieldName#%d) unexpected error: %s (%d)\\n\",\n-                       j, TranslateError(err), err);\n-            } else {\n-                printf(\">>>   [%d]: %s, sig = \\\"%s\\\"\\n\", j, name, sig);\n-                if ((j < field_count) &&\n-                       (name == NULL || sig == NULL ||\n-                        !equals_str(env, name, fieldArr, j * 2) ||\n-                        !equals_str(env, sig, fieldArr, j * 2 + 1))) {\n-                    printf(\"(%d) wrong field: \\\"%s%s\\\"\", j, name, sig);\n-                    result = STATUS_FAILED;\n-                }\n-                jvmti->Deallocate((unsigned char *)name);\n-                jvmti->Deallocate((unsigned char *)sig);\n-            }\n+            continue;\n@@ -133,0 +117,17 @@\n+        err = jvmti->GetFieldName(clazz, fields[j], &name, &sig, NULL);\n+        if (err != JVMTI_ERROR_NONE) {\n+            printf(\"(GetFieldName#%d) unexpected error: %s (%d)\\n\",\n+                   j, TranslateError(err), err);\n+            result = STATUS_FAILED;\n+            continue;\n+        }\n+        printf(\">>>   [%d]: %s, sig = \\\"%s\\\"\\n\", j, name, sig);\n+        if ((j < field_count) &&\n+               (name == NULL || sig == NULL ||\n+                !equals_str(env, name, fieldArr, j * 2) ||\n+                !equals_str(env, sig, fieldArr, j * 2 + 1))) {\n+            printf(\"(%d) wrong field: \\\"%s%s\\\"\", j, name, sig);\n+            result = STATUS_FAILED;\n+        }\n+        jvmti->Deallocate((unsigned char *)name);\n+        jvmti->Deallocate((unsigned char *)sig);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassFields\/getclfld007\/getclfld007.cpp","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"}]}