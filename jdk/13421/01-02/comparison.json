{"files":[{"patch":"@@ -130,2 +130,2 @@\n-  \/\/ Prevent the reordering of adding node to list and setting the value of node.\n-  \/\/ Such a reordering would lead to reading incorrect values.\n+  \/\/ To allow lock-free iteration of the output list the updates in the loops\n+  \/\/ below require release semantics.\n@@ -136,2 +136,3 @@\n-    if (_level_start[l] == nullptr || _level_start[l]->_level < level) {\n-      _level_start[l] = node;\n+    LogOutputNode* lnode = Atomic::load(&_level_start[l]);\n+    if (lnode == nullptr || lnode->_level < level) {\n+      Atomic::store(&_level_start[l], node);\n@@ -142,3 +143,3 @@\n-  for (LogOutputNode* cur = _level_start[LogLevel::Last]; cur != nullptr; cur = cur->_next) {\n-    if (cur != node && cur->_next == node->_next) {\n-      cur->_next = node;\n+  for (LogOutputNode* cur = Atomic::load(&_level_start[LogLevel::Last]); cur != nullptr; cur = Atomic::load(&cur->_next)) {\n+    if (cur != node && Atomic::load(&cur->_next) == node->_next) {\n+      Atomic::store(&cur->_next, node);\n","filename":"src\/hotspot\/share\/logging\/logOutputList.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}