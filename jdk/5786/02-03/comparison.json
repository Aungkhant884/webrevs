{"files":[{"patch":"@@ -247,1 +247,1 @@\n-  _enqueue->enqueue(_current_discovered_addr, oop(nullptr));\n+  RawAccess<>::oop_store(_current_discovered_addr, oop(NULL));\n@@ -259,8 +259,3 @@\n-  \/\/ Remove Reference object from discovered list. The first address is in the\n-  \/\/ C heap, so do not apply the barrier on it but only store the new_next value\n-  \/\/ directly.\n-  if (_prev_discovered_addr != _refs_list.adr_head()) {\n-    _enqueue->enqueue(_prev_discovered_addr, new_next);\n-  } else {\n-    RawAccess<>::oop_store(_prev_discovered_addr, new_next);\n-  }\n+  \/\/ Remove Reference object from discovered list. We do not need barriers here,\n+  \/\/ as we only remove. We will do the barrier when we actually advance the cursor.\n+  RawAccess<>::oop_store(_prev_discovered_addr, new_next);\n@@ -285,1 +280,5 @@\n-  _enqueue->enqueue(_current_discovered_addr, _next_discovered);\n+  if (_prev_discovered_addr != _refs_list.adr_head()) {\n+    _enqueue->enqueue(_prev_discovered_addr, _current_discovered);\n+  } else {\n+    RawAccess<>::oop_store(_prev_discovered_addr, _current_discovered);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"}]}