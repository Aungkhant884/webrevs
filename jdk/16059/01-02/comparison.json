{"files":[{"patch":"@@ -251,1 +251,2 @@\n-  CompiledICHolder* holder = Atomic::xchg(&_pending_released, (CompiledICHolder*)nullptr, memory_order_relaxed);\n+  CompiledICHolder* holder = Atomic::load(&_pending_released);\n+  _pending_released = nullptr;\n@@ -267,0 +268,2 @@\n+  assert(icholder->next() == nullptr, \"multiple enqueue?\");\n+\n@@ -270,0 +273,1 @@\n+    \/\/ The only reader runs at a safepoint serially so there is no need for a more strict atomic.\n","filename":"src\/hotspot\/share\/code\/icBuffer.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  : _holder_metadata(metadata), _holder_klass(klass), _is_metadata_method(is_method) {\n+  : _holder_metadata(metadata), _holder_klass(klass), _next(nullptr), _is_metadata_method(is_method) {\n","filename":"src\/hotspot\/share\/oops\/compiledICHolder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}