{"files":[{"patch":"@@ -1643,2 +1643,1 @@\n-  if (VM_Version::supports_stxr_prefetch())\n-    prfm(Address(counter_addr), PSTL1STRM);\n+  prfm(Address(counter_addr), PSTL1STRM);\n@@ -2378,2 +2377,1 @@\n-    if (VM_Version::supports_stxr_prefetch())\n-      prfm(Address(addr), PSTL1STRM);\n+    prfm(Address(addr), PSTL1STRM);\n@@ -2421,2 +2419,1 @@\n-    if (VM_Version::supports_stxr_prefetch())\n-      prfm(Address(addr), PSTL1STRM);\n+    prfm(Address(addr), PSTL1STRM);\n@@ -2463,2 +2460,1 @@\n-    if (VM_Version::supports_stxr_prefetch())\n-      prfm(Address(addr), PSTL1STRM);\n+    prfm(Address(addr), PSTL1STRM);\n@@ -2522,2 +2518,1 @@\n-  if (VM_Version::supports_stxr_prefetch())                             \\\n-    prfm(Address(addr), PSTL1STRM);                                     \\\n+  prfm(Address(addr), PSTL1STRM);                                       \\\n@@ -2553,2 +2548,1 @@\n-  if (VM_Version::supports_stxr_prefetch())                             \\\n-    prfm(Address(addr), PSTL1STRM);                                     \\\n+  prfm(Address(addr), PSTL1STRM);                                       \\\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -226,2 +226,0 @@\n-  if (_cpu == CPU_ARM && (_model == 0xd07 || _model2 == 0xd07)) _features |= CPU_STXR_PREFETCH;\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,0 @@\n-    decl(STXR_PREFETCH, stxr_prefetch, 29)    \\\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -183,1 +183,0 @@\n-        STXR_PREFETCH,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.aarch64\/src\/jdk\/vm\/ci\/aarch64\/AArch64.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,0 @@\n-    final long aarch64STXR_PREFETCH = getConstant(\"VM_Version::CPU_STXR_PREFETCH\", Long.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot.aarch64\/src\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotVMConfig.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}