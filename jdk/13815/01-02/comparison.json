{"files":[{"patch":"@@ -87,1 +87,1 @@\n-    IdleThread[] idleThreads;\n+    IdleRunnable[] idleRunnables;\n@@ -108,3 +108,5 @@\n-        idle_threads = new IdleThread[idles];\n-        for(int i=0; i < idle_threads.length; i++) {\n-            new Thread(idle_threads[i] = new IdleThread()).start();\n+        idleRunnables = new IdleRunnable[idles];\n+        for(int i = 0; i < idles; i++) {\n+            IdleRunnable r = new IdleRunnable();\n+            idleRunnables[i] = r;\n+            new Thread(r).start();\n@@ -116,1 +118,1 @@\n-        for (IdleThread it : idle_threads) {\n+        for (IdleRunnable it : idleRunnables) {\n@@ -122,2 +124,2 @@\n-    public static class IdleThread implements Runnable {\n-        boolean done = false;\n+    public static class IdleRunnable implements Runnable {\n+        volatile boolean done = false;\n@@ -128,1 +130,1 @@\n-            my_thread = Thread.currentThread();\n+            myThread = Thread.currentThread();\n@@ -136,1 +138,1 @@\n-            LockSupport.unpark(my_thread);\n+            LockSupport.unpark(myThread);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/UnparkBenchSleepersAfter.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -77,2 +77,1 @@\n-            exec.submit(() ->\n-            {\n+            exec.submit(() -> {\n@@ -91,2 +90,1 @@\n-    IdleThread[] idle_threads;\n-\n+    IdleRunnable[] idleRunnables;\n@@ -98,3 +96,3 @@\n-        idle_threads = new IdleThread[idles];\n-        for(int i=0; i < idle_threads.length; i++) {\n-            new Thread(idle_threads[i] = new IdleThread()).start();\n+        idleRunnables = new IdleRunnable[idles];\n+        for(int i = 0; i < idleRunnables.length; i++) {\n+            new Thread(idleRunnables[i] = new IdleRunnable()).start();\n@@ -108,1 +106,1 @@\n-        for(IdleThread it : idle_threads) {\n+        for(IdleRunnable it : idleRunnables) {\n@@ -114,3 +112,3 @@\n-    public static class IdleThread implements Runnable {\n-        boolean done = false;\n-        Thread my_thread;\n+    public static class IdleRunnable implements Runnable {\n+        volatile boolean done = false;\n+        Thread myThread;\n@@ -120,1 +118,1 @@\n-            my_thread = Thread.currentThread();\n+            myThread = Thread.currentThread();\n@@ -128,1 +126,1 @@\n-            LockSupport.unpark(my_thread);\n+            LockSupport.unpark(myThread);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/UnparkBenchSleepersBefore.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"}]}