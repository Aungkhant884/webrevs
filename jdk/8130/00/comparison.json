{"files":[{"patch":"@@ -77,1 +77,1 @@\n- *                             new Locale(\"hi\", \"IN\"), NumberFormat.Style.SHORT);\n+ *                             Locale.forLanguageTag(\"hi-IN\"), NumberFormat.Style.SHORT);\n","filename":"src\/java.base\/share\/classes\/java\/text\/CompactNumberFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2441,1 +2441,1 @@\n-     *   ResourceBundle.getBundle(\"MyResources\", new Locale(\"fr\", \"CH\"),\n+     *   ResourceBundle.getBundle(\"MyResources\", Locale.forLanguageTag(\"fr-CH\"),\n","filename":"src\/java.base\/share\/classes\/java\/util\/ResourceBundle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-        orient = ComponentOrientation.getOrientation(new Locale(\"iw\", \"\"));\n+        orient = ComponentOrientation.getOrientation(Locale.of(\"iw\"));\n@@ -100,1 +100,1 @@\n-        orient = ComponentOrientation.getOrientation(new Locale(\"ar\", \"\"));\n+        orient = ComponentOrientation.getOrientation(Locale.of(\"ar\"));\n@@ -103,1 +103,1 @@\n-        orient = ComponentOrientation.getOrientation(new Locale(\"he\", \"\"));\n+        orient = ComponentOrientation.getOrientation(Locale.of(\"he\"));\n@@ -106,1 +106,1 @@\n-        orient = ComponentOrientation.getOrientation(new Locale(\"yi\", \"\"));\n+        orient = ComponentOrientation.getOrientation(Locale.of(\"yi\"));\n@@ -122,2 +122,2 @@\n-                                                        new Locale(\"et\", \"\"));\n-        if (rb.getLocale().getLanguage().equals(new Locale(\"iw\").getLanguage())) {\n+                                                        Locale.of(\"et\"));\n+        if (rb.getLocale().getLanguage().equals(Locale.of(\"iw\").getLanguage())) {\n@@ -133,1 +133,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\",new Locale(\"es\", \"\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\",Locale.of(\"es\"));\n@@ -136,1 +136,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\", new Locale(\"iw\", \"IL\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\", Locale.of(\"iw\", \"IL\"));\n@@ -140,1 +140,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\", new Locale(\"he\", \"IL\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\", Locale.of(\"he\", \"IL\"));\n@@ -145,1 +145,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle1\", new Locale(\"ar\", \"\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle1\", Locale.of(\"ar\"));\n","filename":"test\/jdk\/java\/awt\/ComponentOrientation\/BasicTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\", new Locale(\"iw\", \"\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\", Locale.of(\"iw\"));\n@@ -106,1 +106,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\", new Locale(\"es\", \"\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\", Locale.of(\"es\"));\n","filename":"test\/jdk\/java\/awt\/ComponentOrientation\/WindowTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,6 +55,6 @@\n-        test(new Locale(\"de\", \"AT\"), 0x0c07);\n-        test(new Locale(\"ar\"), 0x0401);\n-        test(new Locale(\"ar\", \"SA\"), 0x0401);\n-        test(new Locale(\"ar\", \"EG\"), 0x0c01);\n-        test(new Locale(\"??\"), 0x0409);\n-        test(new Locale(\"??\", \"??\"), 0x0409);\n+        test(Locale.of(\"de\", \"AT\"), 0x0c07);\n+        test(Locale.of(\"ar\"), 0x0401);\n+        test(Locale.of(\"ar\", \"SA\"), 0x0401);\n+        test(Locale.of(\"ar\", \"EG\"), 0x0c01);\n+        test(Locale.of(\"??\"), 0x0409);\n+        test(Locale.of(\"??\", \"??\"), 0x0409);\n","filename":"test\/jdk\/java\/awt\/font\/FontNames\/GetLCIDFromLocale.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -3,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +44,1 @@\n-        Locale de_atLocale = new Locale(\"de\", \"AT\");\n+        Locale de_atLocale = Locale.of(\"de\", \"AT\");\n@@ -56,1 +55,1 @@\n-        Locale deGELocale = new Locale(\"de\", \"GE\");\n+        Locale deGELocale = Locale.of(\"de\", \"GE\");\n","filename":"test\/jdk\/java\/awt\/font\/FontNames\/TrueTypeFontLocaleNameTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    private static final Locale TURKISH = new Locale(\"tr\");\n+    private static final Locale TURKISH = Locale.of(\"tr\");\n","filename":"test\/jdk\/java\/beans\/XMLDecoder\/Test6341798.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-            Locale.setDefault(new Locale(\"lt\"));\n+            Locale.setDefault(Locale.of(\"lt\"));\n","filename":"test\/jdk\/java\/io\/pathNames\/win32\/bug6344646.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-    final static Locale turkish = new Locale(\"tr\");\n+    final static Locale turkish = Locale.of(\"tr\");\n","filename":"test\/jdk\/java\/lang\/Character\/DumpCharProperties.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        locales.add(new Locale(\"az\", \"\"));\n+        locales.add(Locale.of(\"az\"));\n","filename":"test\/jdk\/java\/lang\/Character\/UnicodeCasingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import static java.util.Locale.ENGLISH;\n@@ -34,2 +35,1 @@\n-    private static final Locale ENGLISH = new Locale(\"en\");\n-    private static final Locale TURKISH = new Locale(\"tr\");\n+    private static final Locale TURKISH = Locale.of(\"tr\");\n","filename":"test\/jdk\/java\/lang\/String\/NonCharacterMapping.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        locales.add(new Locale(\"az\", \"\"));\n+        locales.add(Locale.of(\"az\"));\n@@ -305,1 +305,1 @@\n-            orig.toLowerCase() : orig.toLowerCase(new Locale(lang, \"\"));\n+            orig.toLowerCase() : orig.toLowerCase(Locale.of(lang));\n@@ -321,1 +321,1 @@\n-            orig.toUpperCase() : orig.toUpperCase(new Locale(lang, \"\"));\n+            orig.toUpperCase() : orig.toUpperCase(Locale.of(lang));\n","filename":"test\/jdk\/java\/lang\/String\/SpecialCasingTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-        Locale turkish = new Locale(\"tr\", \"TR\");\n-        Locale lt = new Locale(\"lt\"); \/\/ Lithanian\n-        Locale az = new Locale(\"az\"); \/\/ Azeri\n+        Locale turkish = Locale.of(\"tr\", \"TR\");\n+        Locale lt = Locale.of(\"lt\"); \/\/ Lithanian\n+        Locale az = Locale.of(\"az\"); \/\/ Azeri\n","filename":"test\/jdk\/java\/lang\/String\/ToLowerCase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,3 +39,3 @@\n-        Locale turkish = new Locale(\"tr\", \"TR\");\n-        Locale lt = new Locale(\"lt\"); \/\/ Lithanian\n-        Locale az = new Locale(\"az\"); \/\/ Azeri\n+        Locale turkish = Locale.of(\"tr\", \"TR\");\n+        Locale lt = Locale.of(\"lt\"); \/\/ Lithanian\n+        Locale az = Locale.of(\"az\"); \/\/ Azeri\n","filename":"test\/jdk\/java\/lang\/String\/ToUpperCase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        locales.add(new Locale(\"az\", \"\"));\n+        locales.add(Locale.of(\"az\"));\n","filename":"test\/jdk\/java\/lang\/String\/UnicodeCasingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n+            Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/java\/security\/Provider\/Turkish.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1394,1 +1394,1 @@\n-        iter = BreakIterator.getLineInstance(new Locale(\"th\", \"\"));\n+        iter = BreakIterator.getLineInstance(Locale.of(\"th\"));\n","filename":"test\/jdk\/java\/text\/BreakIterator\/BreakIteratorTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        final Locale THAI_LOCALE = new Locale(\"th\", \"TH\");\n+        final Locale THAI_LOCALE = Locale.of(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/text\/BreakIterator\/NewVSOld_th_TH.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-        Locale abcd = new Locale(\"ab\", \"CD\", \"\");\n+        Locale abcd = Locale.of(\"ab\", \"CD\");\n@@ -148,1 +148,1 @@\n-        Locale dk = new Locale(\"da\", \"DK\", \"\");\n+        Locale dk = Locale.of(\"da\", \"DK\");\n","filename":"test\/jdk\/java\/text\/Collator\/APITest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    private static Collator colLao = Collator.getInstance(new Locale(\"lo\"));\n-    private static Collator colThai = Collator.getInstance(new Locale(\"th\"));\n+    private static Collator colLao = Collator.getInstance(Locale.of(\"lo\"));\n+    private static Collator colThai = Collator.getInstance(Locale.of(\"th\"));\n","filename":"test\/jdk\/java\/text\/Collator\/Bug5047314.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,1 +215,1 @@\n-    private final Collator myCollation = Collator.getInstance(new Locale(\"da\", \"\", \"\"));\n+    private final Collator myCollation = Collator.getInstance(Locale.of(\"da\"));\n","filename":"test\/jdk\/java\/text\/Collator\/DanishTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-    private final Collator myCollation = Collator.getInstance(new Locale(\"fi\", \"FI\", \"\"));\n+    private final Collator myCollation = Collator.getInstance(Locale.of(\"fi\", \"FI\"));\n","filename":"test\/jdk\/java\/text\/Collator\/FinnishTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -349,1 +349,1 @@\n-                                                        new Locale(\"da\", \"DK\"));\n+                                                        Locale.of(\"da\", \"DK\"));\n@@ -378,1 +378,1 @@\n-        Collator c = Collator.getInstance(new Locale(\"el\", \"\"));\n+        Collator c = Collator.getInstance(Locale.of(\"el\"));\n@@ -391,1 +391,1 @@\n-        Collator c = Collator.getInstance(new Locale(\"el\", \"GR\"));\n+        Collator c = Collator.getInstance(Locale.of(\"el\", \"GR\"));\n@@ -547,1 +547,1 @@\n-        Locale l = new Locale(\"es\", \"es\");\n+        Locale l = Locale.of(\"es\", \"es\");\n","filename":"test\/jdk\/java\/text\/Collator\/Regression.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-    private final Collator myCollation = Collator.getInstance(new Locale(\"es\", \"ES\", \"\"));\n+    private final Collator myCollation = Collator.getInstance(Locale.of(\"es\", \"ES\"));\n","filename":"test\/jdk\/java\/text\/Collator\/SpanishTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-    private final Collator myCollation = Collator.getInstance(new Locale(\"th\"));\n+    private final Collator myCollation = Collator.getInstance(Locale.of(\"th\"));\n","filename":"test\/jdk\/java\/text\/Collator\/ThaiTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-    private final Collator myCollation = Collator.getInstance(new Locale(\"tr\", \"TR\", \"\"));\n+    private final Collator myCollation = Collator.getInstance(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/java\/text\/Collator\/TurkishTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -364,1 +364,1 @@\n-    private final Collator myCollation = Collator.getInstance(new Locale(\"vi\", \"VN\"));\n+    private final Collator myCollation = Collator.getInstance(Locale.of(\"vi\", \"VN\"));\n","filename":"test\/jdk\/java\/text\/Collator\/VietnameseTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-            .getCompactNumberInstance(new Locale(\"dz\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"dz\"), NumberFormat.Style.LONG);\n@@ -52,1 +52,1 @@\n-            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n@@ -55,1 +55,1 @@\n-            .getCompactNumberInstance(new Locale(\"hi\", \"IN\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"hi\", \"IN\"), NumberFormat.Style.LONG);\n@@ -61,1 +61,1 @@\n-            .getCompactNumberInstance(new Locale(\"it\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(Locale.ITALIAN, NumberFormat.Style.SHORT);\n@@ -64,1 +64,1 @@\n-            .getCompactNumberInstance(new Locale(\"ca\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"ca\"), NumberFormat.Style.LONG);\n@@ -67,1 +67,1 @@\n-            .getCompactNumberInstance(new Locale(\"as\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"as\"), NumberFormat.Style.LONG);\n@@ -70,1 +70,1 @@\n-            .getCompactNumberInstance(new Locale(\"brx\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(Locale.of(\"brx\"), NumberFormat.Style.SHORT);\n@@ -73,1 +73,1 @@\n-            .getCompactNumberInstance(new Locale(\"sw\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"sw\"), NumberFormat.Style.LONG);\n@@ -76,1 +76,1 @@\n-            .getCompactNumberInstance(new Locale(\"se\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(Locale.of(\"se\"), NumberFormat.Style.SHORT);\n@@ -82,1 +82,1 @@\n-            .getCompactNumberInstance(new Locale(\"sl\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"sl\"), NumberFormat.Style.LONG);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestCompactNumber.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,1 +168,1 @@\n-                .getCompactNumberInstance(new Locale(\"hi\", \"IN\"), NumberFormat.Style.SHORT);\n+                .getCompactNumberInstance(Locale.of(\"hi\", \"IN\"), NumberFormat.Style.SHORT);\n@@ -171,1 +171,1 @@\n-                .getCompactNumberInstance(new Locale(\"hi\", \"IN\"), NumberFormat.Style.SHORT);\n+                .getCompactNumberInstance(Locale.of(\"hi\", \"IN\"), NumberFormat.Style.SHORT);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestEquality.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-            .getCompactNumberInstance(new Locale(\"dz\"),\n+            .getCompactNumberInstance(Locale.of(\"dz\"),\n@@ -54,1 +54,1 @@\n-            .getCompactNumberInstance(new Locale(\"en\"),\n+            .getCompactNumberInstance(Locale.ENGLISH,\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestFormatToCharacterIterator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n@@ -51,1 +51,1 @@\n-            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n@@ -54,1 +54,1 @@\n-            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n@@ -57,1 +57,1 @@\n-            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestMutatingInstance.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            .getCompactNumberInstance(new Locale(\"dz\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"dz\"), NumberFormat.Style.LONG);\n@@ -50,1 +50,1 @@\n-            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n@@ -53,1 +53,1 @@\n-            .getCompactNumberInstance(new Locale(\"hi\", \"IN\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"hi\", \"IN\"), NumberFormat.Style.LONG);\n@@ -59,1 +59,1 @@\n-            .getCompactNumberInstance(new Locale(\"it\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(Locale.ITALIAN, NumberFormat.Style.SHORT);\n@@ -62,1 +62,1 @@\n-            .getCompactNumberInstance(new Locale(\"sw\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(Locale.of(\"sw\"), NumberFormat.Style.LONG);\n@@ -65,1 +65,1 @@\n-            .getCompactNumberInstance(new Locale(\"se\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(Locale.of(\"se\"), NumberFormat.Style.SHORT);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestParseBigDecimal.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            .getCompactNumberInstance(new Locale(\"dz\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(Locale.of(\"dz\"), NumberFormat.Style.SHORT);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestWithCompatProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            new Locale(\"hi\"), NumberFormat.Style.SHORT);\n+            Locale.of(\"hi\"), NumberFormat.Style.SHORT);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/serialization\/TestSerialization.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        Locale[] locs = {Locale.US, Locale.JAPAN, Locale.UK, new Locale(\"ar\")};\n+        Locale[] locs = {Locale.US, Locale.JAPAN, Locale.UK, Locale.of(\"ar\")};\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/Bug4322313.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    private static Locale localeEG = new Locale(\"ar\", \"EG\");\n+    private static Locale localeEG = Locale.of(\"ar\", \"EG\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/Bug4823811.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-    private static Locale th = new Locale(\"th\", \"\");\n-    private static Locale th_TH = new Locale(\"th\", \"TH\");\n+    private static Locale th = Locale.of(\"th\");\n+    private static Locale th_TH = Locale.of(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/Bug6683975.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    private static final Locale RUSSIAN = new Locale(\"ru\");\n+    private static final Locale RUSSIAN = Locale.of(\"ru\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/Bug8139572.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-    static Locale CZECH = new Locale(\"cs\");\n+    static Locale CZECH = Locale.of(\"cs\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/ContextMonthNamesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -268,1 +268,1 @@\n-            Locale curLocale = new Locale(\"de\",\"DE\");\n+            Locale curLocale = Locale.GERMANY;\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/DateFormatRegression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-     * Parse a name like \"fr_FR\" into new Locale(\"fr\", \"FR\", \"\");\n+     * Parse a name like \"fr_FR\" into Locale.of(\"fr\", \"FR\", \"\");\n@@ -95,1 +95,1 @@\n-        return new Locale(name, country, variant);\n+        return Locale.of(name, country, variant);\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/DateFormatRoundTripTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -416,1 +416,1 @@\n-        DateFormat fmt = DateFormat.getDateInstance(DateFormat.FULL, new Locale(\"cs\", \"\", \"\"));\n+        DateFormat fmt = DateFormat.getDateInstance(DateFormat.FULL, Locale.of(\"cs\"));\n@@ -991,1 +991,1 @@\n-        Locale loc = new Locale(\"th\", \"TH\");\n+        Locale loc = Locale.of(\"th\", \"TH\");\n@@ -1211,1 +1211,1 @@\n-        Locale locale = new Locale(\"ru\");\n+        Locale locale = Locale.of(\"ru\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/DateFormatTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    private static final Locale localeEnSG = new Locale(\"en\", \"SG\");\n+    private static final Locale localeEnSG = Locale.of(\"en\", \"SG\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/LocaleDateFormats.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-        Locale calendarLocale = new Locale(\"ja\", \"JP\", \"JP\");\n+        Locale calendarLocale = Locale.of(\"ja\", \"JP\", \"JP\");\n@@ -139,1 +139,1 @@\n-        calendarLocale = new Locale(\"th\", \"TH\");\n+        calendarLocale = Locale.of(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/NonGregorianFormatTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private static final Locale BURMESE = new Locale(\"my\");\n+    private static final Locale BURMESE = Locale.of(\"my\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/TestDayPeriodWithSDF.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,1 +138,1 @@\n-                                             new Locale(\"ja\", \"JP\", \"JP\"));\n+                                             Locale.of(\"ja\", \"JP\", \"JP\"));\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/WeekDateTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-            Locale.setDefault(new Locale(\"en\", \"US\"));\n+            Locale.setDefault(Locale.US);\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/bug4358730.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    static final Locale TestLocale = new Locale(\"en\", \"US\");\n+    static final Locale TestLocale = Locale.US;\n@@ -66,1 +66,1 @@\n-    static final Locale FullLocalizationTestLocale = new Locale(\"hi\", \"IN\");\n+    static final Locale FullLocalizationTestLocale = Locale.of(\"hi\", \"IN\");\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/GoldenDoubleValues.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -707,1 +707,1 @@\n-        Locale bizarreLocale = new Locale(\"fr\", \"FR\");\n+        Locale bizarreLocale = Locale.FRANCE;\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/RoundingAndPropertyTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-        Locale deCH = new Locale(\"de\", \"CH\");\n+        Locale deCH = Locale.of(\"de\", \"CH\");\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/Bug8132125.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-            new Locale(\"it\", \"IT\", \"EURO\"),\n+            Locale.of(\"it\", \"IT\", \"EURO\"),\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/CurrencyFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,3 +37,3 @@\n-        new Locale(\"ar\"),\n-        new Locale(\"ar\", \"EG\"),\n-        new Locale(\"ar\", \"DZ\"),\n+        Locale.of(\"ar\"),\n+        Locale.of(\"ar\", \"EG\"),\n+        Locale.of(\"ar\", \"DZ\"),\n@@ -47,1 +47,1 @@\n-        new Locale(\"th\", \"TH\", \"TH\"),\n+        Locale.of(\"th\", \"TH\", \"TH\"),\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/MultipleNumberScriptTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -490,1 +490,1 @@\n-        Locale de = new Locale(\"pt\", \"PT\");\n+        Locale de = Locale.of(\"pt\", \"PT\");\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/NumberRegression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-                NumberFormat.getCurrencyInstance(new Locale(\"es\", \"PE\"));\n+                NumberFormat.getCurrencyInstance(Locale.of(\"es\", \"PE\"));\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/TestPeruCurrencyFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        mf1 = new MessageFormat(\"{0}\", new Locale(\"ja\", \"JP\"));\n+        mf1 = new MessageFormat(\"{0}\", Locale.of(\"ja\", \"JP\"));\n@@ -64,1 +64,1 @@\n-        mf1 = new MessageFormat(\"{0}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n+        mf1 = new MessageFormat(\"{0}\", Locale.of(\"ja\", \"JP\", \"FOO\"));\n@@ -67,1 +67,1 @@\n-        mf2 = new MessageFormat(\"{1}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n+        mf2 = new MessageFormat(\"{1}\", Locale.of(\"ja\", \"JP\", \"FOO\"));\n@@ -70,1 +70,1 @@\n-        mf1 = new MessageFormat(\"{1}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n+        mf1 = new MessageFormat(\"{1}\", Locale.of(\"ja\", \"JP\", \"FOO\"));\n@@ -73,1 +73,1 @@\n-        mf1 = new MessageFormat(\"{1, date}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n+        mf1 = new MessageFormat(\"{1, date}\", Locale.of(\"ja\", \"JP\", \"FOO\"));\n@@ -76,1 +76,1 @@\n-        mf2 = new MessageFormat(\"{1, date}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n+        mf2 = new MessageFormat(\"{1, date}\", Locale.of(\"ja\", \"JP\", \"FOO\"));\n","filename":"test\/jdk\/java\/text\/Format\/common\/Bug6215962.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- o Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ o Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,1 +154,1 @@\n-        Chronology test = Chronology.ofLocale(new Locale(\"ja\", \"JP\"));\n+        Chronology test = Chronology.ofLocale(Locale.JAPAN);\n@@ -161,1 +161,1 @@\n-        Chronology test = Chronology.ofLocale(new Locale(\"ja\", \"JP\", \"JP\"));\n+        Chronology test = Chronology.ofLocale(Locale.of(\"ja\", \"JP\", \"JP\"));\n@@ -168,1 +168,1 @@\n-        Assert.assertEquals(Chronology.ofLocale(new Locale(\"ja\", \"JP\")).getId(), \"ISO\");\n+        Assert.assertEquals(Chronology.ofLocale(Locale.JAPAN).getId(), \"ISO\");\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/chrono\/TCKJapaneseChronology.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,1 +143,1 @@\n-        Chronology test = Chronology.ofLocale(new Locale(\"th\", \"TH\"));\n+        Chronology test = Chronology.ofLocale(Locale.of(\"th\", \"TH\"));\n@@ -150,1 +150,1 @@\n-        Chronology test = Chronology.ofLocale(new Locale(\"th\", \"TH\", \"TH\"));\n+        Chronology test = Chronology.ofLocale(Locale.of(\"th\", \"TH\", \"TH\"));\n@@ -157,1 +157,1 @@\n-        Assert.assertEquals(Chronology.ofLocale(new Locale(\"th\", \"TH\")).getId(), \"ISO\");\n+        Assert.assertEquals(Chronology.ofLocale(Locale.of(\"th\", \"TH\")).getId(), \"ISO\");\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/chrono\/TCKThaiBuddhistChronology.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-    Locale enUS = new Locale(\"en\", \"US\");\n+    Locale enUS = Locale.US;\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestDateTimeTextProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,2 +89,2 @@\n-    Locale enUS = new Locale(\"en\", \"US\");\n-    Locale ptBR = new Locale(\"pt\", \"BR\");\n+    Locale enUS = Locale.US;\n+    Locale ptBR = Locale.of(\"pt\", \"BR\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestDateTimeTextProviderWithLocale.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    private static final Locale BURMESE = new Locale(\"my\");\n+    private static final Locale BURMESE = Locale.of(\"my\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestDayPeriodWithDTF.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    private static final Locale LOCALE_GA = new Locale(\"ga\");\n+    private static final Locale LOCALE_GA = Locale.of(\"ga\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestLocalizedOffsetPrinterParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-            new Locale(\"no\", \"NO\"));\n+            Locale.of(\"no\", \"NO\"));\n@@ -109,1 +109,1 @@\n-            {new Locale(\"no\", \"NO\"), new String[]{\"M\", \"T\", \"O\", \"T\", \"F\", \"L\", \"S\"}},};\n+            {Locale.of(\"no\", \"NO\"), new String[]{\"M\", \"T\", \"O\", \"T\", \"F\", \"L\", \"S\"}},};\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestNarrowMonthNamesAndDayNames.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,2 @@\n-    private static final Locale ARABIC = new Locale(\"ar\");\n-    private static final Locale thTH = new Locale(\"th\", \"TH\");\n+    private static final Locale ARABIC = Locale.of(\"ar\");\n+    private static final Locale thTH = Locale.of(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestNonIsoFormatter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,2 +98,2 @@\n-    static final Locale RUSSIAN = new Locale(\"ru\");\n-    static final Locale FINNISH = new Locale(\"fi\");\n+    static final Locale RUSSIAN = Locale.of(\"ru\");\n+    static final Locale FINNISH = Locale.of(\"fi\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestTextParserWithLocale.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,2 +93,2 @@\n-    static final Locale RUSSIAN = new Locale(\"ru\");\n-    static final Locale FINNISH = new Locale(\"fi\");\n+    static final Locale RUSSIAN = Locale.of(\"ru\");\n+    static final Locale FINNISH = Locale.of(\"fi\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestTextPrinterWithLocale.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    private static final Locale THAI_LOCALE = new Locale(\"th\", \"TH\");\n+    private static final Locale THAI_LOCALE = Locale.of(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/util\/Calendar\/BuddhistCalendarTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        Calendar czechCalendar = Calendar.getInstance(new Locale(\"cs\", \"CZ\"));\n+        Calendar czechCalendar = Calendar.getInstance(Locale.of(\"cs\", \"CZ\"));\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug4302966.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-        Calendar jcal = Calendar.getInstance(new Locale(\"ja\", \"JP\", \"JP\"));\n+        Calendar jcal = Calendar.getInstance(Locale.of(\"ja\", \"JP\", \"JP\"));\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug6448234.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,2 +86,2 @@\n-                new Locale(\"th\", \"TH\"), Locale.forLanguageTag(\"th-Thai-TH\"),\n-                new Locale(\"ja\", \"JP\", \"JP\"), new Locale(\"th\", \"TH\", \"TH\")\n+                Locale.of(\"th\", \"TH\"), Locale.forLanguageTag(\"th-Thai-TH\"),\n+                Locale.of(\"ja\", \"JP\", \"JP\"), Locale.of(\"th\", \"TH\", \"TH\")\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug8167273.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    private static final Locale jaJPJP = new Locale(\"ja\", \"JP\", \"JP\");\n-    private static final Locale thTH = new Locale(\"th\", \"TH\");\n+    private static final Locale jaJPJP = Locale.of(\"ja\", \"JP\", \"JP\");\n+    private static final Locale thTH = Locale.of(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/util\/Calendar\/Builder\/BuilderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        Calendar cal = Calendar.getInstance(new Locale(\"\", \"001\"));\n+        Calendar cal = Calendar.getInstance(Locale.of(\"\", \"001\"));\n@@ -74,1 +74,1 @@\n-                        Calendar c = Calendar.getInstance(new Locale(\"\", region));\n+                        Calendar c = Calendar.getInstance(Locale.of(\"\", region));\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarDataTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2258,1 +2258,1 @@\n-        cal1 = Calendar.getInstance(new Locale(\"th\", \"TH\"));\n+        cal1 = Calendar.getInstance(Locale.of(\"th\", \"TH\"));\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarRegression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -977,1 +977,1 @@\n-                Locale l = new Locale(lt[j][0], lt[j][1]);\n+                Locale l = Locale.of(lt[j][0], lt[j][1]);\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,1 @@\n-                        locale = new Locale(lang, country, var);\n+                        locale = Locale.of(lang, country, var);\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarTestScripts\/CalendarTestEngine.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        new Locale(\"th\", \"TH\"),\n+        Locale.of(\"th\", \"TH\"),\n@@ -43,1 +43,1 @@\n-        new Locale(\"ja\", \"JP\", \"JP\"),\n+        Locale.of(\"ja\", \"JP\", \"JP\"),\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarTypeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    private static final Locale ARABIC = new Locale(\"ar\");\n+    private static final Locale ARABIC = Locale.of(\"ar\");\n","filename":"test\/jdk\/java\/util\/Calendar\/CldrFormatNamesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,2 +72,2 @@\n-            { new Locale(\"ar\"), ArabicName, ArabicName },\n-            { new Locale(\"th\"), ThaiName, \"R\" },\n+            { Locale.of(\"ar\"), ArabicName, ArabicName },\n+            { Locale.of(\"th\"), ThaiName, \"R\" },\n@@ -75,1 +75,1 @@\n-            { new Locale(\"hi\", \"IN\"), EngName, \"R\" }\n+            { Locale.of(\"hi\", \"IN\"), EngName, \"R\" }\n@@ -94,5 +94,5 @@\n-            { new Locale(\"ar\"), ArabicName, ArabicName },\n-            { new Locale(\"th\"), ThaiName, ThaiName },\n-            { new Locale(\"hi\", \"IN\"), HindiName, HindiName },\n-            { new Locale(\"ru\"), RussianName, RussianName },\n-            { new Locale(\"sr\"), SerbianName, SerbianName },\n+            { Locale.of(\"ar\"), ArabicName, ArabicName },\n+            { Locale.of(\"th\"), ThaiName, ThaiName },\n+            { Locale.of(\"hi\", \"IN\"), HindiName, HindiName },\n+            { Locale.of(\"ru\"), RussianName, RussianName },\n+            { Locale.of(\"sr\"), SerbianName, SerbianName },\n@@ -100,6 +100,6 @@\n-            { new Locale(\"hr\"), EngName, EngName },\n-            { new Locale(\"in\"), EngName, EngName },\n-            { new Locale(\"lt\"), EngName, EngName },\n-            { new Locale(\"nl\"), EngName, EngName },\n-            { new Locale(\"no\"), EngName, \"R\" },\n-            { new Locale(\"sv\"), EngName, EngName },\n+            { Locale.of(\"hr\"), EngName, EngName },\n+            { Locale.of(\"in\"), EngName, EngName },\n+            { Locale.of(\"lt\"), EngName, EngName },\n+            { Locale.of(\"nl\"), EngName, EngName },\n+            { Locale.of(\"no\"), EngName, \"R\" },\n+            { Locale.of(\"sv\"), EngName, EngName },\n@@ -107,1 +107,1 @@\n-            { new Locale(\"el\"), EngName, EngName }\n+            { Locale.of(\"el\"), EngName, EngName }\n","filename":"test\/jdk\/java\/util\/Calendar\/JapanEraNameCompatTest.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-    private static final Locale JAJPJP = new Locale(\"ja\", \"JP\", \"JP\");\n-    private static final Locale THTH = new Locale(\"th\", \"TH\");\n+    private static final Locale JAJPJP = Locale.of(\"ja\", \"JP\", \"JP\");\n+    private static final Locale THTH = Locale.of(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/util\/Calendar\/NarrowNamesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,2 +90,2 @@\n-        new Locale(\"th\", \"TH\"),\n-        new Locale(\"ja\", \"JP\", \"JP\")};\n+        Locale.of(\"th\", \"TH\"),\n+        Locale.of(\"ja\", \"JP\", \"JP\")};\n","filename":"test\/jdk\/java\/util\/Calendar\/ZoneOffsets.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        Currency currency = Currency.getInstance(new Locale(\"\", country));\n+        Currency currency = Currency.getInstance(Locale.of(\"\", country));\n","filename":"test\/jdk\/java\/util\/Currency\/Bug4512215.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-            Currency.getInstance(new Locale(\"\", \"EU\"));\n+            Currency.getInstance(Locale.of(\"\", \"EU\"));\n@@ -179,1 +179,1 @@\n-        Locale locale = new Locale(\"\", countryCode);\n+        Locale locale = Locale.of(\"\", countryCode);\n@@ -260,2 +260,2 @@\n-        testDisplayName(\"ESP\", new Locale(\"es\"), \"peseta espa\\u00f1ola\");\n-        testDisplayName(\"ITL\", new Locale(\"it\"), \"lira italiana\");\n+        testDisplayName(\"ESP\", Locale.of(\"es\"), \"peseta espa\\u00f1ola\");\n+        testDisplayName(\"ITL\", Locale.ITALIAN, \"lira italiana\");\n@@ -264,1 +264,1 @@\n-        testDisplayName(\"SEK\", new Locale(\"sv\"), \"svensk krona\");\n+        testDisplayName(\"SEK\", Locale.of(\"sv\"), \"svensk krona\");\n","filename":"test\/jdk\/java\/util\/Currency\/CurrencyTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-                    Currency c = Currency.getInstance(new Locale(\"\", ctry));\n+                    Currency c = Currency.getInstance(Locale.of(\"\", ctry));\n@@ -198,1 +198,1 @@\n-        Currency cur = Currency.getInstance(new Locale(\"\", \"JP\"));\n+        Currency cur = Currency.getInstance(Locale.of(\"\", \"JP\"));\n","filename":"test\/jdk\/java\/util\/Currency\/PropertiesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-        Locale loc = new Locale(\"\", country);\n+        Locale loc = Locale.of(\"\", country);\n@@ -260,1 +260,1 @@\n-                        Currency.getInstance(new Locale(\"\", country));\n+                        Currency.getInstance(Locale.of(\"\", country));\n@@ -273,1 +273,1 @@\n-                        cur = Currency.getInstance(new Locale(\"\", country));\n+                        cur = Currency.getInstance(Locale.of(\"\", country));\n","filename":"test\/jdk\/java\/util\/Currency\/ValidateISO4217.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    static final Locale TURKISH = new Locale(\"tr\");\n+    static final Locale TURKISH = Locale.of(\"tr\");\n","filename":"test\/jdk\/java\/util\/Formatter\/FormatLocale.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-            testFormatter(new Locale(\"hi\", \"IN\"), formatString, number);\n+            testFormatter(Locale.of(\"hi\", \"IN\"), formatString, number);\n","filename":"test\/jdk\/java\/util\/Formatter\/spi\/FormatterWithProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Locale locale = new Locale(\"xx\", \"YY\");\n+        Locale locale = Locale.of(\"xx\", \"YY\");\n","filename":"test\/jdk\/java\/util\/Formatter\/spi\/NoGroupingUsed.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-            new Locale(\"hi\", \"IN\"), new Locale(\"xx\", \"YY\")};\n+            Locale.of(\"hi\", \"IN\"), Locale.of(\"xx\", \"YY\")};\n","filename":"test\/jdk\/java\/util\/Formatter\/spi\/provider\/test\/NumberFormatProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-            final Locale l = new Locale(localeCodes[0], \"\");\n+            final Locale l = Locale.of(localeCodes[0]);\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4175998Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-                final Locale expected = new Locale(lang, \"XX\");\n+                final Locale expected = Locale.of(lang, \"XX\");\n@@ -126,1 +126,1 @@\n-            out.writeObject(new Locale(lang, \"XX\"));\n+            out.writeObject(Locale.of(lang, \"XX\"));\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4184873Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        Locale aLocale = new Locale(language, country, variant);\n+        Locale aLocale = Locale.of(language, country, variant);\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4210525.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-        Locale aLocale = new Locale(language);\n+        Locale aLocale = Locale.of(language);\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4316602.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        final Locale loc = new Locale(\"ja\", \"US\");\n+        final Locale loc = Locale.of(\"ja\", \"US\");\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4518797.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-        locales = Collections.singleton(new Locale(\"nv\"));\n+        locales = Collections.singleton(Locale.of(\"nv\"));\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8135061.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-        Locale[] locArr = {new Locale(\"hi\", \"IN\"), Locale.UK, new Locale(\"fi\", \"FI\"),\n+        Locale[] locArr = {Locale.of(\"hi\", \"IN\"), Locale.UK, Locale.of(\"fi\", \"FI\"),\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8154797.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n+            Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8159420.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-        Locale jaJPJP = new Locale(\"ja\", \"JP\", \"JP\");\n+        Locale jaJPJP = Locale.of(\"ja\", \"JP\", \"JP\");\n","filename":"test\/jdk\/java\/util\/Locale\/ExtensionsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-                        resourceBundleName, new Locale(\"\", \"\", \"\"));\n+                        resourceBundleName, Locale.of(\"\"));\n","filename":"test\/jdk\/java\/util\/Locale\/GenerateKeyList.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,20 +72,20 @@\n-        new Locale(\"ar\", \"SA\"),\n-        new Locale(\"zh\", \"CN\"),\n-        new Locale(\"zh\", \"TW\"),\n-        new Locale(\"nl\", \"NL\"),\n-        new Locale(\"en\", \"AU\"),\n-        new Locale(\"en\", \"CA\"),\n-        new Locale(\"en\", \"GB\"),\n-        new Locale(\"en\", \"US\"),\n-        new Locale(\"fr\", \"CA\"),\n-        new Locale(\"fr\", \"FR\"),\n-        new Locale(\"de\", \"DE\"),\n-        new Locale(\"iw\", \"IL\"),\n-        new Locale(\"hi\", \"IN\"),\n-        new Locale(\"it\", \"IT\"),\n-        new Locale(\"ja\", \"JP\"),\n-        new Locale(\"ko\", \"KR\"),\n-        new Locale(\"pt\", \"BR\"),\n-        new Locale(\"es\", \"ES\"),\n-        new Locale(\"sv\", \"SE\"),\n-        new Locale(\"th\", \"TH\"),\n+        Locale.of(\"ar\", \"SA\"),\n+        Locale.CHINA,\n+        Locale.TAIWAN,\n+        Locale.of(\"nl\", \"NL\"),\n+        Locale.of(\"en\", \"AU\"),\n+        Locale.of(\"en\", \"CA\"),\n+        Locale.UK,\n+        Locale.US,\n+        Locale.of(\"fr\", \"CA\"),\n+        Locale.FRANCE,\n+        Locale.GERMANY,\n+        Locale.of(\"iw\", \"IL\"),\n+        Locale.of(\"hi\", \"IN\"),\n+        Locale.ITALY,\n+        Locale.JAPAN,\n+        Locale.KOREA,\n+        Locale.of(\"pt\", \"BR\"),\n+        Locale.of(\"es\", \"ES\"),\n+        Locale.of(\"sv\", \"SE\"),\n+        Locale.of(\"th\", \"TH\"),\n@@ -184,20 +184,20 @@\n-        new Locale(\"ar\", \"SA\"),\n-        new Locale(\"zh\", \"CN\"),\n-        new Locale(\"zh\", \"TW\"),\n-        new Locale(\"iw\", \"IL\"),\n-        new Locale(\"ja\", \"JP\"),\n-        new Locale(\"ko\", \"KR\"),\n-        new Locale(\"it\", \"IT\"),\n-        new Locale(\"th\", \"TH\"),\n-        new Locale(\"ar\", \"SA\"),\n-        new Locale(\"zh\", \"CN\"),\n-        new Locale(\"zh\", \"CN\"),\n-        new Locale(\"zh\", \"CN\"),\n-        new Locale(\"zh\", \"TW\"),\n-        new Locale(\"iw\", \"IL\"),\n-        new Locale(\"ja\", \"JP\"),\n-        new Locale(\"ja\", \"JP\"),\n-        new Locale(\"ko\", \"KR\"),\n-        new Locale(\"it\", \"IT\"),\n-        new Locale(\"it\", \"IT\"),\n-        new Locale(\"th\", \"TH\"),\n+        Locale.of(\"ar\", \"SA\"),\n+        Locale.of(\"zh\", \"CN\"),\n+        Locale.of(\"zh\", \"TW\"),\n+        Locale.of(\"iw\", \"IL\"),\n+        Locale.of(\"ja\", \"JP\"),\n+        Locale.of(\"ko\", \"KR\"),\n+        Locale.of(\"it\", \"IT\"),\n+        Locale.of(\"th\", \"TH\"),\n+        Locale.of(\"ar\", \"SA\"),\n+        Locale.of(\"zh\", \"CN\"),\n+        Locale.of(\"zh\", \"CN\"),\n+        Locale.of(\"zh\", \"CN\"),\n+        Locale.of(\"zh\", \"TW\"),\n+        Locale.of(\"iw\", \"IL\"),\n+        Locale.of(\"ja\", \"JP\"),\n+        Locale.of(\"ja\", \"JP\"),\n+        Locale.of(\"ko\", \"KR\"),\n+        Locale.of(\"it\", \"IT\"),\n+        Locale.of(\"it\", \"IT\"),\n+        Locale.of(\"th\", \"TH\"),\n","filename":"test\/jdk\/java\/util\/Locale\/InternationalBAT.java","additions":41,"deletions":41,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -312,1 +312,1 @@\n-            Locale locale = new Locale(test[0], test[1], test[2]);\n+            Locale locale = Locale.of(test[0], test[1], test[2]);\n@@ -483,1 +483,1 @@\n-            Locale locale = new Locale(test[0], test[1], test[2]);\n+            Locale locale = Locale.of(test[0], test[1], test[2]);\n@@ -641,5 +641,5 @@\n-                new Locale(\"en\"),\n-                new Locale(\"en\", \"US\"),\n-                new Locale(\"\", \"US\"),\n-                new Locale(\"no\", \"NO\", \"NY\"),\n-                new Locale(\"\", \"\", \"NY\"),\n+                Locale.ENGLISH,\n+                Locale.US,\n+                Locale.of(\"\", \"US\"),\n+                Locale.of(\"no\", \"NO\", \"NY\"),\n+                Locale.of(\"\", \"\", \"NY\"),\n@@ -712,1 +712,1 @@\n-        locale = builder.setLocale(new Locale(\"ja\", \"JP\", \"JP\")).build();\n+        locale = builder.setLocale(Locale.of(\"ja\", \"JP\", \"JP\")).build();\n@@ -716,1 +716,1 @@\n-        locale = builder.setLocale(new Locale(\"th\", \"TH\", \"TH\")).build();\n+        locale = builder.setLocale(Locale.of(\"th\", \"TH\", \"TH\")).build();\n@@ -720,1 +720,1 @@\n-        locale = builder.setLocale(new Locale(\"no\", \"NO\", \"NY\")).build();\n+        locale = builder.setLocale(Locale.of(\"no\", \"NO\", \"NY\")).build();\n@@ -728,1 +728,1 @@\n-                b.setLocale(new Locale(\"123\", \"4567\", \"89\"));\n+                b.setLocale(Locale.of(\"123\", \"4567\", \"89\"));\n@@ -1122,18 +1122,18 @@\n-            new Locale(\"en\"),\n-            new Locale(\"en\", \"US\"),\n-            new Locale(\"en\", \"US\", \"Win\"),\n-            new Locale(\"en\", \"US\", \"Win_XP\"),\n-            new Locale(\"ja\", \"JP\"),\n-            new Locale(\"ja\", \"JP\", \"JP\"),\n-            new Locale(\"th\", \"TH\"),\n-            new Locale(\"th\", \"TH\", \"TH\"),\n-            new Locale(\"no\", \"NO\"),\n-            new Locale(\"nb\", \"NO\"),\n-            new Locale(\"nn\", \"NO\"),\n-            new Locale(\"no\", \"NO\", \"NY\"),\n-            new Locale(\"nn\", \"NO\", \"NY\"),\n-            new Locale(\"he\", \"IL\"),\n-            new Locale(\"he\", \"IL\", \"var\"),\n-            new Locale(\"Language\", \"Country\", \"Variant\"),\n-            new Locale(\"\", \"US\"),\n-            new Locale(\"\", \"\", \"Java\"),\n+            Locale.ENGLISH,\n+            Locale.US,\n+            Locale.of(\"en\", \"US\", \"Win\"),\n+            Locale.of(\"en\", \"US\", \"Win_XP\"),\n+            Locale.JAPAN,\n+            Locale.of(\"ja\", \"JP\", \"JP\"),\n+            Locale.of(\"th\", \"TH\"),\n+            Locale.of(\"th\", \"TH\", \"TH\"),\n+            Locale.of(\"no\", \"NO\"),\n+            Locale.of(\"nb\", \"NO\"),\n+            Locale.of(\"nn\", \"NO\"),\n+            Locale.of(\"no\", \"NO\", \"NY\"),\n+            Locale.of(\"nn\", \"NO\", \"NY\"),\n+            Locale.of(\"he\", \"IL\"),\n+            Locale.of(\"he\", \"IL\", \"var\"),\n+            Locale.of(\"Language\", \"Country\", \"Variant\"),\n+            Locale.of(\"\", \"US\"),\n+            Locale.of(\"\", \"\", \"Java\"),\n@@ -1212,1 +1212,1 @@\n-                locale = new Locale(lang, country, variant);\n+                locale = Locale.of(lang, country, variant);\n@@ -1290,4 +1290,4 @@\n-        checkCalendar(new Locale(\"ja\", \"JP\", \"jp\"), \"java.util.GregorianCalendar\");\n-        checkCalendar(new Locale(\"ja\", \"jp\", \"jp\"), \"java.util.GregorianCalendar\");\n-        checkCalendar(new Locale(\"ja\", \"JP\", \"JP\"), \"java.util.JapaneseImperialCalendar\");\n-        checkCalendar(new Locale(\"ja\", \"jp\", \"JP\"), \"java.util.JapaneseImperialCalendar\");\n+        checkCalendar(Locale.of(\"ja\", \"JP\", \"jp\"), \"java.util.GregorianCalendar\");\n+        checkCalendar(Locale.of(\"ja\", \"jp\", \"jp\"), \"java.util.GregorianCalendar\");\n+        checkCalendar(Locale.of(\"ja\", \"JP\", \"JP\"), \"java.util.JapaneseImperialCalendar\");\n+        checkCalendar(Locale.of(\"ja\", \"jp\", \"JP\"), \"java.util.JapaneseImperialCalendar\");\n@@ -1297,4 +1297,4 @@\n-        checkDigit(new Locale(\"th\", \"TH\", \"th\"), '0');\n-        checkDigit(new Locale(\"th\", \"th\", \"th\"), '0');\n-        checkDigit(new Locale(\"th\", \"TH\", \"TH\"), '\\u0e50');\n-        checkDigit(new Locale(\"th\", \"TH\", \"TH\"), '\\u0e50');\n+        checkDigit(Locale.of(\"th\", \"TH\", \"th\"), '0');\n+        checkDigit(Locale.of(\"th\", \"th\", \"th\"), '0');\n+        checkDigit(Locale.of(\"th\", \"TH\", \"TH\"), '\\u0e50');\n+        checkDigit(Locale.of(\"th\", \"TH\", \"TH\"), '\\u0e50');\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleEnhanceTest.java","additions":39,"deletions":39,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,1 +130,1 @@\n-        Locale testLocale = new Locale(lang, ctry);\n+        Locale testLocale = Locale.of(lang, ctry);\n@@ -251,1 +251,1 @@\n-            System.out.println(new SimpleDateFormat(\"z\", new Locale(lang, ctry)).parse(\"UTC\"));\n+            System.out.println(new SimpleDateFormat(\"z\", Locale.of(lang, ctry)).parse(\"UTC\"));\n@@ -261,1 +261,1 @@\n-            Locale l = new Locale(\"ja\", \"JP\", \"JP\");\n+            Locale l = Locale.of(\"ja\", \"JP\", \"JP\");\n@@ -298,1 +298,1 @@\n-            Locale l = new Locale(\"xx\",\"XX\");\n+            Locale l = Locale.of(\"xx\",\"XX\");\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleProviders.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -197,1 +197,1 @@\n-            Locale testLocale = new Locale(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n+            Locale testLocale = Locale.of(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n@@ -220,1 +220,1 @@\n-            Locale testLocale = new Locale(dataTable[LANG][i], dataTable[CTRY][i]);\n+            Locale testLocale = Locale.of(dataTable[LANG][i], dataTable[CTRY][i]);\n@@ -243,1 +243,1 @@\n-            Locale testLocale = new Locale(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n+            Locale testLocale = Locale.of(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n@@ -271,4 +271,4 @@\n-        Locale english = new Locale(\"en\", \"US\");\n-        Locale french = new Locale(\"fr\", \"FR\");\n-        Locale croatian = new Locale(\"hr\", \"HR\");\n-        Locale greek = new Locale(\"el\", \"GR\");\n+        Locale english = Locale.US;\n+        Locale french = Locale.FRANCE;\n+        Locale croatian = Locale.of(\"hr\", \"HR\");\n+        Locale greek = Locale.of(\"el\", \"GR\");\n@@ -315,1 +315,1 @@\n-            Locale testLocale = new Locale(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n+            Locale testLocale = Locale.of(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n@@ -387,0 +387,1 @@\n+    @SuppressWarnings(\"deprecation\")\n@@ -391,1 +392,1 @@\n-        Locale test4 = new Locale(\"zz\", \"ZZ\");\n+        Locale test4 = Locale.of(\"zz\", \"ZZ\");\n@@ -422,1 +423,1 @@\n-        Locale test = new Locale(\"xx\", \"YY\", \"\");\n+        Locale test = Locale.of(\"xx\", \"YY\");\n@@ -615,1 +616,1 @@\n-        Locale test1 = new Locale(\"zh\", \"TW\", \"\");\n+        Locale test1 = Locale.of(\"zh\", \"TW\");\n@@ -643,1 +644,1 @@\n-            String test = (new Locale(languageCodes[i], \"\", \"\")).getDisplayLanguage(Locale.US);\n+            String test = (Locale.of(languageCodes[i])).getDisplayLanguage(Locale.US);\n@@ -661,1 +662,1 @@\n-            String test = (new Locale(iso2Languages[i], \"\", \"\")).getISO3Language();\n+            String test = (Locale.of(iso2Languages[i])).getISO3Language();\n@@ -672,1 +673,1 @@\n-            String test = (new Locale(\"\", iso2Countries[i], \"\")).getISO3Country();\n+            String test = (Locale.of(\"\", iso2Countries[i])).getISO3Country();\n@@ -684,6 +685,6 @@\n-        Locale hebrewOld = new Locale(\"iw\", \"IL\", \"\");\n-        Locale hebrewNew = new Locale(\"he\", \"IL\", \"\");\n-        Locale yiddishOld = new Locale(\"ji\", \"IL\", \"\");\n-        Locale yiddishNew = new Locale(\"yi\", \"IL\", \"\");\n-        Locale indonesianOld = new Locale(\"in\", \"\", \"\");\n-        Locale indonesianNew = new Locale(\"id\", \"\", \"\");\n+        Locale hebrewOld = Locale.of(\"iw\", \"IL\");\n+        Locale hebrewNew = Locale.of(\"he\", \"IL\");\n+        Locale yiddishOld = Locale.of(\"ji\", \"IL\");\n+        Locale yiddishNew = Locale.of(\"yi\", \"IL\");\n+        Locale indonesianOld = Locale.of(\"in\");\n+        Locale indonesianNew = Locale.of(\"id\");\n@@ -739,9 +740,9 @@\n-        Locale[] localesToTest = { new Locale(\"de\", \"CA\"),\n-                                   new Locale(\"ja\", \"ZA\"),\n-                                   new Locale(\"ru\", \"MX\"),\n-                                   new Locale(\"en\", \"FR\"),\n-                                   new Locale(\"es\", \"DE\"),\n-                                   new Locale(\"\", \"HR\"),\n-                                   new Locale(\"\", \"SE\"),\n-                                   new Locale(\"\", \"DO\"),\n-                                   new Locale(\"\", \"BE\") };\n+        Locale[] localesToTest = { Locale.of(\"de\", \"CA\"),\n+                                   Locale.of(\"ja\", \"ZA\"),\n+                                   Locale.of(\"ru\", \"MX\"),\n+                                   Locale.of(\"en\", \"FR\"),\n+                                   Locale.of(\"es\", \"DE\"),\n+                                   Locale.of(\"\", \"HR\"),\n+                                   Locale.of(\"\", \"SE\"),\n+                                   Locale.of(\"\", \"DO\"),\n+                                   Locale.of(\"\", \"BE\") };\n@@ -791,1 +792,1 @@\n-            String name = localesToTest[i].getDisplayName(new Locale(\"es\", \"ES\"));\n+            String name = localesToTest[i].getDisplayName(Locale.of(\"es\", \"ES\"));\n@@ -840,1 +841,1 @@\n-                new Locale(\"th\", \"TH\"));\n+                Locale.of(\"th\", \"TH\"));\n@@ -895,7 +896,7 @@\n-            new Locale(\"xx\", \"\", \"\"), \"xx\",\n-            new Locale(\"\", \"YY\", \"\"), \"_YY\",\n-            new Locale(\"\", \"\", \"ZZ\"), \"\",\n-            new Locale(\"xx\", \"YY\", \"\"), \"xx_YY\",\n-            new Locale(\"xx\", \"\", \"ZZ\"), \"xx__ZZ\",\n-            new Locale(\"\", \"YY\", \"ZZ\"), \"_YY_ZZ\",\n-            new Locale(\"xx\", \"YY\", \"ZZ\"), \"xx_YY_ZZ\",\n+            Locale.of(\"xx\", \"\", \"\"), \"xx\",\n+            Locale.of(\"\", \"YY\", \"\"), \"_YY\",\n+            Locale.of(\"\", \"\", \"ZZ\"), \"\",\n+            Locale.of(\"xx\", \"YY\", \"\"), \"xx_YY\",\n+            Locale.of(\"xx\", \"\", \"ZZ\"), \"xx__ZZ\",\n+            Locale.of(\"\", \"YY\", \"ZZ\"), \"_YY_ZZ\",\n+            Locale.of(\"xx\", \"YY\", \"ZZ\"), \"xx_YY_ZZ\",\n@@ -918,2 +919,2 @@\n-        Locale[] LOC = {Locale.CHINESE, new Locale(\"zh\", \"CN\", \"\"),\n-            new Locale(\"zh\", \"TW\", \"\"), new Locale(\"zh\", \"HK\", \"\")};\n+        Locale[] LOC = {Locale.CHINESE, Locale.of(\"zh\", \"CN\"),\n+            Locale.of(\"zh\", \"TW\"), Locale.of(\"zh\", \"HK\")};\n@@ -946,1 +947,1 @@\n-        Locale mylocale = new Locale(\"hu\", \"\", \"\");\n+        Locale mylocale = Locale.of(\"hu\");\n@@ -963,1 +964,1 @@\n-        Calendar cal = Calendar.getInstance(new Locale(\"ru\", \"\", \"\"));\n+        Calendar cal = Calendar.getInstance(Locale.of(\"ru\"));\n@@ -977,1 +978,1 @@\n-        Locale locale = new Locale(\"aaa\", \"CCC\");\n+        Locale locale = Locale.of(\"aaa\", \"CCC\");\n@@ -997,1 +998,1 @@\n-        Locale locale = new Locale(\"aaa\", \"CCC\");\n+        Locale locale = Locale.of(\"aaa\", \"CCC\");\n@@ -1007,1 +1008,1 @@\n-        locale = new Locale(\"zz\", \"CCC\");\n+        locale = Locale.of(\"zz\", \"CCC\");\n@@ -1022,3 +1023,3 @@\n-        Locale[] locales = {new Locale(\"no\", \"NO\"), new Locale(\"no\", \"NO\", \"B\"),\n-            new Locale(\"no\", \"NO\", \"NY\"), new Locale(\"nb\", \"NO\"),\n-            new Locale(\"nn\", \"NO\")};\n+        Locale[] locales = {Locale.of(\"no\", \"NO\"), Locale.of(\"no\", \"NO\", \"B\"),\n+            Locale.of(\"no\", \"NO\", \"NY\"), Locale.of(\"nb\", \"NO\"),\n+            Locale.of(\"nn\", \"NO\")};\n@@ -1053,2 +1054,2 @@\n-        if (!av.contains(new Locale(\"nb\", \"NO\"))\n-                || !av.contains(new Locale(\"nn\", \"NO\"))) {\n+        if (!av.contains(Locale.of(\"nb\", \"NO\"))\n+                || !av.contains(Locale.of(\"nn\", \"NO\"))) {\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleTest.java","additions":52,"deletions":51,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-                    new Locale(HexFormat.of().toHexDigits((short)j), \"\", \"\");\n+                    Locale.of(HexFormat.of().toHexDigits((short)j));\n","filename":"test\/jdk\/java\/util\/Locale\/SoftKeys.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        Locale locTH = new Locale(\"th\", \"TH\", \"TH\");\n+        Locale locTH = Locale.of(\"th\", \"TH\", \"TH\");\n@@ -61,1 +61,1 @@\n-        Locale locTH = new Locale(\"th\", \"TH\", \"TH\");\n+        Locale locTH = Locale.of(\"th\", \"TH\", \"TH\");\n@@ -74,1 +74,1 @@\n-        Locale locTH = new Locale(\"th\", \"TH\", \"TH\");\n+        Locale locTH = Locale.of(\"th\", \"TH\", \"TH\");\n","filename":"test\/jdk\/java\/util\/Locale\/ThaiGov.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    private static final Locale loc2 = new Locale(\"ja\", \"JP\", \"JP\");\n+    private static final Locale loc2 = Locale.of(\"ja\", \"JP\", \"JP\");\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/DisplayNameTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        String name = Locale.forLanguageTag(\"foo-u-ca-japanese\").getDisplayName(new Locale(\"foo\"));\n+        String name = Locale.forLanguageTag(\"foo-u-ca-japanese\").getDisplayName(Locale.of(\"foo\"));\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/spi\/LocaleNameProviderTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-    private static final Locale[] avail = {new Locale(\"foo\")};\n+    private static final Locale[] avail = {Locale.of(\"foo\")};\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/spi\/provider\/foo\/LocaleNameProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-        Locale root = new Locale(\"\", \"\", \"\");\n+        Locale root = Locale.of(\"\", \"\", \"\");\n","filename":"test\/jdk\/java\/util\/Locale\/bug6277243.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        Locale kids = new Locale(\"ja\", \"JP\", \"kids\"); \/\/ test provider's supported locale\n+        Locale kids = Locale.of(\"ja\", \"JP\", \"kids\"); \/\/ test provider's supported locale\n@@ -72,1 +72,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/CalendarDataProviderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-        Locale kids = new Locale(\"ja\", \"JP\", \"kids\"); \/\/ test provider's supported locale\n+        Locale kids = Locale.of(\"ja\", \"JP\", \"kids\"); \/\/ test provider's supported locale\n@@ -124,1 +124,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/CalendarNameProviderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        Locale OSAKA = new Locale(\"ja\", \"JP\", \"osaka\");\n+        Locale OSAKA = Locale.of(\"ja\", \"JP\", \"osaka\");\n@@ -56,1 +56,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/ClasspathTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-        Collator def = Collator.getInstance(new Locale(\"\"));\n+        Collator def = Collator.getInstance(Locale.of(\"\"));\n@@ -119,1 +119,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/CollatorProviderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,3 +143,3 @@\n-    final Locale OSAKA = new Locale(\"ja\", \"JP\", \"osaka\");\n-    final Locale KYOTO = new Locale(\"ja\", \"JP\", \"kyoto\");\n-    final Locale TOKYO = new Locale(\"ja\", \"JP\", \"tokyo\");\n+    final Locale OSAKA = Locale.of(\"ja\", \"JP\", \"osaka\");\n+    final Locale KYOTO = Locale.of(\"ja\", \"JP\", \"kyoto\");\n+    final Locale TOKYO = Locale.of(\"ja\", \"JP\", \"tokyo\");\n@@ -188,1 +188,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/CurrencyNameProviderTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,3 +152,3 @@\n-        Locale[] testlocs = {new Locale(\"ja\", \"JP\", \"osaka_extended\"),\n-                             new Locale(\"ja\", \"JP\", \"osaka_extended_further\"),\n-                             new Locale(\"ja\", \"JP\", \"osaka_\")};\n+        Locale[] testlocs = {Locale.of(\"ja\", \"JP\", \"osaka_extended\"),\n+                             Locale.of(\"ja\", \"JP\", \"osaka_extended_further\"),\n+                             Locale.of(\"ja\", \"JP\", \"osaka_\")};\n@@ -207,1 +207,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/DateFormatProviderTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,2 +120,2 @@\n-        Locale xx = new Locale(\"xx\");\n-        Locale dispLocale = new Locale (\"xx\", \"YY\", \"ZZ\");\n+        Locale xx = Locale.of(\"xx\");\n+        Locale dispLocale = Locale.of(\"xx\", \"YY\", \"ZZ\");\n@@ -139,1 +139,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/GenericTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,2 +126,2 @@\n-        Locale YY = new Locale(\"yy\", \"YY\", \"YYYY\");\n-        Locale YY_suffix = new Locale(\"yy\", \"YY\", \"YYYY_suffix\");\n+        Locale YY = Locale.of(\"yy\", \"YY\", \"YYYY\");\n+        Locale YY_suffix = Locale.of(\"yy\", \"YY\", \"YYYY_suffix\");\n@@ -146,1 +146,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/LocaleNameProviderTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,2 @@\n-            new Locale(\"ja\", \"JP\", \"JP\"),\n-            new Locale(\"th\", \"TH\", \"TH\"),\n+            Locale.of(\"ja\", \"JP\", \"JP\"),\n+            Locale.of(\"th\", \"TH\", \"TH\"),\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/SupportedLocalesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,3 +118,3 @@\n-    final Locale OSAKA = new Locale(\"ja\", \"JP\", \"osaka\");\n-    final Locale KYOTO = new Locale(\"ja\", \"JP\", \"kyoto\");\n-    final Locale GENERIC = new Locale(\"ja\", \"JP\", \"generic\");\n+    final Locale OSAKA = Locale.of(\"ja\", \"JP\", \"osaka\");\n+    final Locale KYOTO = Locale.of(\"ja\", \"JP\", \"kyoto\");\n+    final Locale GENERIC = Locale.of(\"ja\", \"JP\", \"generic\");\n@@ -273,1 +273,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/TimeZoneNameProviderTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        new Locale(\"ja\", \"JP\", \"kids\"),\n+        Locale.of(\"ja\", \"JP\", \"kids\"),\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/CalendarDataProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        new Locale(\"ja\", \"JP\", \"kids\"),\n+        Locale.of(\"ja\", \"JP\", \"kids\"),\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/CalendarNameProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    static Locale[] avail = {new Locale(\"ja\", \"JP\", \"osaka\"),\n-        new Locale(\"ja\", \"JP\", \"kyoto\"),\n+    static Locale[] avail = {Locale.of(\"ja\", \"JP\", \"osaka\"),\n+        Locale.of(\"ja\", \"JP\", \"kyoto\"),\n@@ -38,1 +38,1 @@\n-        new Locale(\"xx\")};\n+        Locale.of(\"xx\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/CurrencyNameProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    static Locale[] avail = {new Locale(\"ja\", \"JP\", \"tokyo\"),\n-                             new Locale(\"ja\", \"JP\", \"osaka\"), };\n+    static Locale[] avail = {Locale.of(\"ja\", \"JP\", \"tokyo\"),\n+                             Locale.of(\"ja\", \"JP\", \"osaka\"), };\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/CurrencyNameProviderImpl2.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-    static final Locale jaJPGeneric = new Locale(\"ja\", \"JP\", \"generic\");\n-    static final Locale OSAKA = new Locale(\"ja\", \"JP\", \"osaka\");\n+    static final Locale jaJPGeneric = Locale.of(\"ja\", \"JP\", \"generic\");\n+    static final Locale OSAKA = Locale.of(\"ja\", \"JP\", \"osaka\");\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/GenericTimeZoneNameProviderImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,4 +38,4 @@\n-                             new Locale(\"ja\", \"JP\", \"osaka\"),\n-                             new Locale(\"ja\", \"JP\", \"kyoto\"),\n-                             new Locale(\"xx\"),\n-                             new Locale(\"yy\", \"YY\", \"YYYY\")};\n+                             Locale.of(\"ja\", \"JP\", \"osaka\"),\n+                             Locale.of(\"ja\", \"JP\", \"kyoto\"),\n+                             Locale.of(\"xx\"),\n+                             Locale.of(\"yy\", \"YY\", \"YYYY\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/LocaleNameProviderImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,3 +35,3 @@\n-    static Locale[] avail = {new Locale(\"ja\", \"JP\", \"osaka\"),\n-                        new Locale(\"ja\", \"JP\", \"kyoto\"),\n-                        new Locale(\"xx\"),\n+    static Locale[] avail = {Locale.of(\"ja\", \"JP\", \"osaka\"),\n+                        Locale.of(\"ja\", \"JP\", \"kyoto\"),\n+                        Locale.of(\"xx\"),\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/TimeZoneNameProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-        new Locale(\"ja\", \"JP\", \"osaka\"),\n-        new Locale(\"ja\", \"JP\", \"kyoto\"),\n-        new Locale(\"xx\", \"YY\")};\n+        Locale.of(\"ja\", \"JP\", \"osaka\"),\n+        Locale.of(\"ja\", \"JP\", \"kyoto\"),\n+        Locale.of(\"xx\", \"YY\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/BreakIteratorProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,3 +39,3 @@\n-        new Locale(\"ja\", \"JP\", \"osaka\"),\n-        new Locale(\"ja\", \"JP\", \"kyoto\"),\n-        new Locale(\"xx\", \"YY\", \"ZZZZ\")};\n+        Locale.of(\"ja\", \"JP\", \"osaka\"),\n+        Locale.of(\"ja\", \"JP\", \"kyoto\"),\n+        Locale.of(\"xx\", \"YY\", \"ZZZZ\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/CollatorProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,3 +39,3 @@\n-        new Locale(\"ja\", \"JP\", \"osaka\"),\n-        new Locale(\"ja\", \"JP\", \"kyoto\"),\n-        new Locale(\"yy\")};\n+        Locale.of(\"ja\", \"JP\", \"osaka\"),\n+        Locale.of(\"ja\", \"JP\", \"kyoto\"),\n+        Locale.of(\"yy\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/DateFormatProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-        new Locale(\"ja\", \"JP\", \"osaka\"),\n-        new Locale(\"ja\", \"JP\", \"kyoto\"),\n+        Locale.of(\"ja\", \"JP\", \"osaka\"),\n+        Locale.of(\"ja\", \"JP\", \"kyoto\"),\n@@ -41,1 +41,1 @@\n-        new Locale(\"yy\", \"ZZ\")\n+        Locale.of(\"yy\", \"ZZ\")\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/DateFormatSymbolsProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-        new Locale(\"ja\", \"JP\", \"osaka\"),\n-        new Locale(\"ja\", \"JP\", \"kyoto\"),\n+        Locale.of(\"ja\", \"JP\", \"osaka\"),\n+        Locale.of(\"ja\", \"JP\", \"kyoto\"),\n@@ -41,1 +41,1 @@\n-        new Locale(\"yy\", \"ZZ\", \"UUU\")\n+        Locale.of(\"yy\", \"ZZ\", \"UUU\")\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/DecimalFormatSymbolsProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,3 +39,3 @@\n-        new Locale(\"ja\", \"JP\", \"osaka\"),\n-        new Locale(\"ja\", \"JP\", \"kyoto\"),\n-        new Locale(\"zz\")};\n+        Locale.of(\"ja\", \"JP\", \"osaka\"),\n+        Locale.of(\"ja\", \"JP\", \"kyoto\"),\n+        Locale.of(\"zz\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/NumberFormatProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-            ResourceBundle bundle = ResourceBundle.getBundle(bundleName, new Locale(\"en\", \"US\"));\n+            ResourceBundle bundle = ResourceBundle.getBundle(bundleName, Locale.US);\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug4165815Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        Locale.setDefault(new Locale(\"en\", \"US\"));\n+        Locale.setDefault(Locale.US);\n@@ -66,1 +66,1 @@\n-            final Locale loc = new Locale(\"jf\", \"jf\");\n+            final Locale loc = Locale.of(\"jf\", \"jf\");\n@@ -90,1 +90,1 @@\n-     *  getBundle(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n+     *  getBundle(\"Bug4168625Resource\", Locale.FRANCE);\n@@ -100,1 +100,1 @@\n-     *  getBundle(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n+     *  getBundle(\"Bug4168625Resource\", Locale.FRANCE);\n@@ -115,1 +115,1 @@\n-     *  getBundle(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n+     *  getBundle(\"Bug4168625Resource\", Locale.FRANCE);\n@@ -127,1 +127,1 @@\n-     *  getBundle(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n+     *  getBundle(\"Bug4168625Resource\", Locale.FRANCE);\n@@ -135,1 +135,1 @@\n-        checkResourceLoading(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n+        checkResourceLoading(\"Bug4168625Resource\", Locale.FRANCE);\n@@ -145,1 +145,1 @@\n-     *  getBundle(\"Bug4168625Resource\", new Locale(\"en\", \"US\"));\n+     *  getBundle(\"Bug4168625Resource\", Locale.US);\n@@ -161,1 +161,1 @@\n-     *  getBundle(\"Bug4168625Resource\", new Locale(\"en\", \"US\"));\n+     *  getBundle(\"Bug4168625Resource\", Locale.US);\n@@ -279,2 +279,2 @@\n-        ConcurrentLoadingThread thread1 = new ConcurrentLoadingThread(loader, test, new Locale(\"en\", \"CA\"));\n-        ConcurrentLoadingThread thread2 = new ConcurrentLoadingThread(loader, test, new Locale(\"en\", \"IE\"));\n+        ConcurrentLoadingThread thread1 = new ConcurrentLoadingThread(loader, test, Locale.of(\"en\", \"CA\"));\n+        ConcurrentLoadingThread thread2 = new ConcurrentLoadingThread(loader, test, Locale.of(\"en\", \"IE\"));\n@@ -309,1 +309,1 @@\n-        ConcurrentLoadingThread thread1 = new ConcurrentLoadingThread(loader, test, new Locale(\"en\", \"US\"));\n+        ConcurrentLoadingThread thread1 = new ConcurrentLoadingThread(loader, test, Locale.US);\n@@ -564,1 +564,1 @@\n-     *  ThreadA.getBundle(\"Bug4168625Resource\", new Locale(\"sp\"));\n+     *  ThreadA.getBundle(\"Bug4168625Resource\", Locale.of(\"sp\"));\n@@ -568,1 +568,1 @@\n-     *  ThreadB.getBundle(\"Bug4168625Resource\", new Locale(\"sp\"));\n+     *  ThreadB.getBundle(\"Bug4168625Resource\", Locale.of(\"sp\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug4168625Test.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        Locale loc = new Locale(\"jf\", \"\");\n+        Locale loc = Locale.of(\"jf\");\n@@ -64,1 +64,1 @@\n-        loc = new Locale(\"jf\", \"JF\");\n+        loc = Locale.of(\"jf\", \"JF\");\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug4177489Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ResourceBundle myResources = ResourceBundle.getBundle(\"RB4353454\", new Locale(\"\"));\n+        ResourceBundle myResources = ResourceBundle.getBundle(\"RB4353454\", Locale.of(\"\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug4353454.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-            Locale.setDefault(new Locale(\"en\", \"US\"));\n+            Locale.setDefault(Locale.US);\n@@ -43,1 +43,1 @@\n-            localeList.add(new Locale(\"en\", \"CA\"));\n+            localeList.add(Locale.of(\"en\", \"CA\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug6190861.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    private static final Locale ru_RU = new Locale(\"ru\", \"RU\");\n+    private static final Locale ru_RU = Locale.of(\"ru\", \"RU\");\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug6299235\/Bug6299235Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,4 +144,4 @@\n-        candidateData.put(new Locale(\"ja\", \"JP\", \"YOK\"), new Locale[] {\n-                              new Locale(\"ja\", \"JP\", \"YOK\"),\n-                              new Locale(\"ja\", \"JP\"),\n-                              new Locale(\"ja\"),\n+        candidateData.put(Locale.of(\"ja\", \"JP\", \"YOK\"), new Locale[] {\n+                              Locale.of(\"ja\", \"JP\", \"YOK\"),\n+                              Locale.of(\"ja\", \"JP\"),\n+                              Locale.of(\"ja\"),\n@@ -149,3 +149,3 @@\n-        candidateData.put(new Locale(\"ja\", \"JP\"), new Locale[] {\n-                              new Locale(\"ja\", \"JP\"),\n-                              new Locale(\"ja\"),\n+        candidateData.put(Locale.of(\"ja\", \"JP\"), new Locale[] {\n+                              Locale.of(\"ja\", \"JP\"),\n+                              Locale.of(\"ja\"),\n@@ -153,2 +153,2 @@\n-        candidateData.put(new Locale(\"ja\"), new Locale[] {\n-                              new Locale(\"ja\"),\n+        candidateData.put(Locale.of(\"ja\"), new Locale[] {\n+                              Locale.of(\"ja\"),\n@@ -157,3 +157,3 @@\n-        candidateData.put(new Locale(\"ja\", \"\", \"YOK\"), new Locale[] {\n-                              new Locale(\"ja\", \"\", \"YOK\"),\n-                              new Locale(\"ja\"),\n+        candidateData.put(Locale.of(\"ja\", \"\", \"YOK\"), new Locale[] {\n+                              Locale.of(\"ja\", \"\", \"YOK\"),\n+                              Locale.of(\"ja\"),\n@@ -161,3 +161,3 @@\n-        candidateData.put(new Locale(\"\", \"JP\", \"YOK\"), new Locale[] {\n-                              new Locale(\"\", \"JP\", \"YOK\"),\n-                              new Locale(\"\", \"JP\"),\n+        candidateData.put(Locale.of(\"\", \"JP\", \"YOK\"), new Locale[] {\n+                              Locale.of(\"\", \"JP\", \"YOK\"),\n+                              Locale.of(\"\", \"JP\"),\n@@ -165,2 +165,2 @@\n-        candidateData.put(new Locale(\"\", \"\", \"YOK\"), new Locale[] {\n-                              new Locale(\"\", \"\", \"YOK\"),\n+        candidateData.put(Locale.of(\"\", \"\", \"YOK\"), new Locale[] {\n+                              Locale.of(\"\", \"\", \"YOK\"),\n@@ -168,2 +168,2 @@\n-        candidateData.put(new Locale(\"\", \"JP\"), new Locale[] {\n-                              new Locale(\"\", \"JP\"),\n+        candidateData.put(Locale.of(\"\", \"JP\"), new Locale[] {\n+                              Locale.of(\"\", \"JP\"),\n@@ -357,1 +357,1 @@\n-        bundleNames.put(new Locale(\"ja\", \"JP\", \"YOK\"),\n+        bundleNames.put(Locale.of(\"ja\", \"JP\", \"YOK\"),\n@@ -359,1 +359,1 @@\n-        bundleNames.put(new Locale(\"ja\", \"JP\"),\n+        bundleNames.put(Locale.of(\"ja\", \"JP\"),\n@@ -361,1 +361,1 @@\n-        bundleNames.put(new Locale(\"ja\"),\n+        bundleNames.put(Locale.of(\"ja\"),\n@@ -363,1 +363,1 @@\n-        bundleNames.put(new Locale(\"ja\", \"\", \"YOK\"),\n+        bundleNames.put(Locale.of(\"ja\", \"\", \"YOK\"),\n@@ -365,1 +365,1 @@\n-        bundleNames.put(new Locale(\"\", \"JP\", \"YOK\"),\n+        bundleNames.put(Locale.of(\"\", \"JP\", \"YOK\"),\n@@ -367,1 +367,1 @@\n-        bundleNames.put(new Locale(\"\", \"\", \"YOK\"),\n+        bundleNames.put(Locale.of(\"\", \"\", \"YOK\"),\n@@ -369,1 +369,1 @@\n-        bundleNames.put(new Locale(\"\", \"JP\"),\n+        bundleNames.put(Locale.of(\"\", \"JP\"),\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Control\/DefaultControlTest.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-                                     new Locale(\"\"));\n+                                     Locale.of(\"\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Control\/LoadingStrategiesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-    static final Locale ROOT_LOCALE = new Locale(\"\");\n@@ -41,1 +40,1 @@\n-        ROOT_LOCALE,\n+        Locale.ROOT,\n@@ -163,1 +162,1 @@\n-            cleaner = locale.equals(ROOT_LOCALE);\n+            cleaner = locale.equals(Locale.ROOT);\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Control\/StressTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-        ResourceBundle rb = ResourceBundle.getBundle(\"XmlRB\", new Locale(\"\"), xmlControl);\n+        ResourceBundle rb = ResourceBundle.getBundle(\"XmlRB\", Locale.ROOT, xmlControl);\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Control\/XMLResourceBundleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-        Locale.setDefault(new Locale(\"fr\", \"FR\"));\n+        Locale.setDefault(Locale.FRANCE);\n@@ -139,1 +139,1 @@\n-                            new Locale(\"be\", \"BY\"),\n+                            Locale.of(\"be\", \"BY\"),\n@@ -155,1 +155,1 @@\n-                            new Locale(\"it\", \"IT\"));\n+                            Locale.ITALY);\n@@ -213,1 +213,1 @@\n-                            new Locale(\"es\", \"ES\"));\n+                            Locale.of(\"es\", \"ES\"));\n@@ -259,1 +259,1 @@\n-                        new Locale(\"fr\", \"CH\", \"\"));\n+                        Locale.of(\"fr\", \"CH\"));\n@@ -266,1 +266,1 @@\n-                        new Locale(\"fr\", \"BE\", \"\"));\n+                        Locale.of(\"fr\", \"BE\"));\n@@ -274,1 +274,1 @@\n-                        new Locale(\"iw\", \"IL\", \"\"),\n+                        Locale.of(\"iw\", \"IL\"),\n@@ -318,1 +318,1 @@\n-                            new Locale(\"it\", \"IT\"));\n+                            Locale.ITALY);\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/ResourceBundleTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        Locale.setDefault(new Locale(\"en\", \"UK\"));\n+        Locale.setDefault(Locale.of(\"en\", \"UK\"));\n@@ -90,1 +90,1 @@\n-        ResourceBundle bundle = ResourceBundle.getBundle(baseName, new Locale(language, country, variant));\n+        ResourceBundle bundle = ResourceBundle.getBundle(baseName, Locale.of(language, country, variant));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Test4314141.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-              new Locale(\"vi\"), new Locale(\"in\"));\n+              Locale.of(\"vi\"), Locale.of(\"in\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/modules\/basic\/srcBasic\/asiabundles\/jdk\/test\/resources\/asia\/MyResourcesAsia.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-              Locale.GERMAN, Locale.FRENCH, new Locale(\"es\"), new Locale(\"yi\"));\n+              Locale.GERMAN, Locale.FRENCH, Locale.of(\"es\"), Locale.of(\"yi\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/modules\/basic\/srcBasic\/eubundles\/jdk\/test\/resources\/eu\/MyResourcesEU.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1469,1 +1469,1 @@\n-            Locale locale = new Locale(\"hi\",\"IN\");\n+            Locale locale = Locale.of(\"hi\",\"IN\");\n@@ -1488,1 +1488,1 @@\n-        Locale dummy = new Locale(\"en\", \"US\", \"dummy\");\n+        Locale dummy = Locale.of(\"en\", \"US\", \"dummy\");\n","filename":"test\/jdk\/java\/util\/Scanner\/ScanTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-            testScannerUseLocale(\"-123,45\", new Locale(\"fi\", \"FI\"), -123.45);\n+            testScannerUseLocale(\"-123,45\", Locale.of(\"fi\", \"FI\"), -123.45);\n","filename":"test\/jdk\/java\/util\/Scanner\/spi\/UseLocaleWithProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-            Locale.GERMAN, new Locale(\"fi\", \"FI\")};\n+            Locale.GERMAN, Locale.of(\"fi\", \"FI\")};\n","filename":"test\/jdk\/java\/util\/Scanner\/spi\/provider\/test\/NumberFormatProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-        Set<Locale> locales = Set.of(Locale.forLanguageTag(\"zh-hant\"), new Locale(\"no\", \"NO\", \"NY\"));\n+        Set<Locale> locales = Set.of(Locale.forLanguageTag(\"zh-hant\"), Locale.of(\"no\", \"NO\", \"NY\"));\n@@ -183,2 +183,2 @@\n-        Locale th_TH_TH = new Locale(\"th\", \"TH\", \"TH\");\n-        Locale th_TH = new Locale(\"th\", \"TH\");\n+        Locale th_TH_TH = Locale.of(\"th\", \"TH\", \"TH\");\n+        Locale th_TH = Locale.of(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/util\/TimeZone\/Bug8167143.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-            Locale.setDefault(new Locale(\"zh\", \"HK\"));\n+            Locale.setDefault(Locale.of(\"zh\", \"HK\"));\n","filename":"test\/jdk\/java\/util\/TimeZone\/HongKong.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-            Locale.setDefault(new Locale(\"TR\", \"tr\"));\n+            Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/java\/util\/jar\/JarFile\/TurkCert.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n+            Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/Turkish.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,3 +63,3 @@\n-        Locale[] locales = {new Locale(\"ru\"),\n-                            new Locale(\"fr\"),\n-                            new Locale(\"uk\")};\n+        Locale[] locales = {Locale.of(\"ru\"),\n+                            Locale.FRENCH,\n+                            Locale.of(\"uk\")};\n@@ -69,1 +69,1 @@\n-        reader.setLocale(new Locale(\"fr\"));\n+        reader.setLocale(Locale.FRENCH);\n","filename":"test\/jdk\/javax\/imageio\/AppletResourceTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n+            Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/javax\/management\/loading\/MletParserLocaleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n+            Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/javax\/management\/modelmbean\/DescriptorSupportXMLLocaleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n+            Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/JMXServiceURLLocaleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,11 +49,11 @@\n-            new Locale(\"en\"),\n-            new Locale(\"de\"),\n-            new Locale(\"es\"),\n-            new Locale(\"fr\"),\n-            new Locale(\"it\"),\n-            new Locale(\"ja\"),\n-            new Locale(\"ko\"),\n-            new Locale(\"pt\", \"BR\"),\n-            new Locale(\"sv\"),\n-            new Locale(\"zh\", \"CN\"),\n-            new Locale(\"zh\", \"TW\")\n+            Locale.of(\"en\"),\n+            Locale.of(\"de\"),\n+            Locale.of(\"es\"),\n+            Locale.of(\"fr\"),\n+            Locale.of(\"it\"),\n+            Locale.of(\"ja\"),\n+            Locale.of(\"ko\"),\n+            Locale.of(\"pt\", \"BR\"),\n+            Locale.of(\"sv\"),\n+            Locale.of(\"zh\", \"CN\"),\n+            Locale.of(\"zh\", \"TW\")\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/8080628\/bug8080628.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -50,10 +50,10 @@\n-        new Locale(\"de\"),\n-        new Locale(\"es\"),\n-        new Locale(\"fr\"),\n-        new Locale(\"it\"),\n-        new Locale(\"ja\"),\n-        new Locale(\"ko\"),\n-        new Locale(\"pt\", \"BR\"),\n-        new Locale(\"sv\"),\n-        new Locale(\"zh\", \"CN\"),\n-        new Locale(\"zh\", \"TW\")\n+        Locale.of(\"de\"),\n+        Locale.of(\"es\"),\n+        Locale.of(\"fr\"),\n+        Locale.of(\"it\"),\n+        Locale.of(\"ja\"),\n+        Locale.of(\"ko\"),\n+        Locale.of(\"pt\", \"BR\"),\n+        Locale.of(\"sv\"),\n+        Locale.of(\"zh\", \"CN\"),\n+        Locale.of(\"zh\", \"TW\")\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/8020708\/bug8020708.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n+            Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/jdk\/sun\/nio\/cs\/Test4206507.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        Locale loc = new Locale(\"en\", \"US\");\n+        Locale loc = Locale.of(\"en\", \"US\");\n","filename":"test\/jdk\/sun\/security\/util\/Resources\/customSysClassLoader\/MessageFormatting.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-                Locale loc = new Locale(\"ko\",\"KR\");\n+                Locale loc = Locale.of(\"ko\",\"KR\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4395196.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        Locale zhTWloc = new Locale(\"zh\", \"TW\");\n+        Locale zhTWloc = Locale.of(\"zh\", \"TW\");\n@@ -56,1 +56,1 @@\n-        Locale zhTWloc = new Locale(\"zh\", \"TW\");\n+        Locale zhTWloc = Locale.of(\"zh\", \"TW\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4442855.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        DateFormatSymbols dfs = new DateFormatSymbols(new Locale(\"uk\",\"UA\"));\n+        DateFormatSymbols dfs = new DateFormatSymbols(Locale.of(\"uk\",\"UA\"));\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4621320.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-                Locale loc = new Locale(\"zh\",\"CN\");\n+                Locale loc = Locale.of(\"zh\",\"CN\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4762201.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Locale si = new Locale(\"sl\", \"si\");\n+        Locale si = Locale.of(\"sl\", \"si\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4807540.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-      Locale dk = new Locale(\"da\", \"DK\");\n+      Locale dk = Locale.of(\"da\", \"DK\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug5096553.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        final Locale esDO = new Locale(\"es\", \"DO\");\n+        final Locale esDO = Locale.of(\"es\", \"DO\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug8037343.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    private static Locale FINNISH = new Locale(\"fi\");\n+    private static Locale FINNISH = Locale.of(\"fi\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug8074791.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -344,1 +344,1 @@\n-                locale = new Locale(language, country, variant);\n+                locale = Locale.of(language, country, variant);\n","filename":"test\/jdk\/sun\/text\/resources\/LocaleDataTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        Calendar buddhist = Calendar.getInstance(new Locale(\"th\", \"TH\"));\n+        Calendar buddhist = Calendar.getInstance(Locale.of(\"th\", \"TH\"));\n","filename":"test\/jdk\/sun\/util\/calendar\/Bug6653944.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        Locale newlocale = new Locale(lang, loc);\n+        Locale newlocale = Locale.of(lang, loc);\n","filename":"test\/jdk\/sun\/util\/resources\/Calendar\/Bug4518811.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        Calendar huCalendar = Calendar.getInstance(new Locale(\"hu\",\"HU\"));\n+        Calendar huCalendar = Calendar.getInstance(Locale.of(\"hu\",\"HU\"));\n@@ -43,1 +43,1 @@\n-        Calendar ukCalendar = Calendar.getInstance(new Locale(\"uk\",\"UA\"));\n+        Calendar ukCalendar = Calendar.getInstance(Locale.of(\"uk\",\"UA\"));\n","filename":"test\/jdk\/sun\/util\/resources\/Calendar\/Bug4527203.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,2 +113,2 @@\n-            Locale fiLocale = new Locale(\"fi\", \"FI\");\n-            Locale inLocale = new Locale (inLang, \"\");\n+            Locale fiLocale = Locale.of(\"fi\", \"FI\");\n+            Locale inLocale = Locale.of(inLang);\n@@ -127,2 +127,2 @@\n-            Locale fiLocale = new Locale(\"fi\", \"FI\");\n-            Locale inLocale = new Locale (\"\", inCountry);\n+            Locale fiLocale = Locale.of(\"fi\", \"FI\");\n+            Locale inLocale = Locale.of(\"\", inCountry);\n","filename":"test\/jdk\/sun\/util\/resources\/Locale\/Bug4429024.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,5 +37,5 @@\n-        new Locale(\"de\"),\n-        new Locale(\"es\"),\n-        new Locale(\"fr\"),\n-        new Locale(\"it\"),\n-        new Locale(\"sv\")\n+        Locale.GERMAN,\n+        Locale.of(\"es\"),\n+        Locale.FRENCH,\n+        Locale.ITALIAN,\n+        Locale.of(\"sv\")\n@@ -61,1 +61,1 @@\n-            Locale dutch = new Locale(\"nl\", \"BE\");\n+            Locale dutch = Locale.of(\"nl\", \"BE\");\n","filename":"test\/jdk\/sun\/util\/resources\/Locale\/Bug4965260.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,9 +66,10 @@\n-        new Locale(\"de\"),\n-        new Locale(\"es\"),\n-        new Locale(\"fr\"),\n-        new Locale(\"it\"),\n-        new Locale(\"ja\"),\n-        new Locale(\"ko\"),\n-        new Locale(\"sv\"),\n-        new Locale(\"zh\", \"CN\"),\n-        new Locale(\"zh\", \"TW\")\n+        Locale.ENGLISH,\n+        Locale.GERMAN,\n+        Locale.of(\"es\"),\n+        Locale.FRENCH,\n+        Locale.ITALIAN,\n+        Locale.JAPANESE,\n+        Locale.KOREAN,\n+        Locale.of(\"sv\"),\n+        Locale.SIMPLIFIED_CHINESE,\n+        Locale.TRADITIONAL_CHINESE\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug4640234.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        Locale tzLocale = new Locale(langName, locName);\n+        Locale tzLocale = Locale.of(langName, locName);\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug4848242.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,11 +37,11 @@\n-        new Locale(\"en\"),\n-        new Locale(\"de\"),\n-        new Locale(\"es\"),\n-        new Locale(\"fr\"),\n-        new Locale(\"it\"),\n-        new Locale(\"ja\"),\n-        new Locale(\"ko\"),\n-        new Locale(\"sv\"),\n-        new Locale(\"zh\",\"CN\"),\n-        new Locale(\"zh\",\"TW\")\n-        };\n+        Locale.ENGLISH,\n+        Locale.GERMAN,\n+        Locale.of(\"es\"),\n+        Locale.FRENCH,\n+        Locale.ITALIAN,\n+        Locale.JAPANESE,\n+        Locale.KOREAN,\n+        Locale.of(\"sv\"),\n+        Locale.SIMPLIFIED_CHINESE,\n+        Locale.TRADITIONAL_CHINESE\n+    };\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug4858517.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-       Locale tzLocale = new Locale(\"en\", \"IE\");\n+       Locale tzLocale = Locale.of(\"en\", \"IE\");\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug4938846.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Locale tzLocale = new Locale(\"fr\");\n+        Locale tzLocale = Locale.FRENCH;\n@@ -55,1 +55,1 @@\n-        tzLocale = new Locale(\"zh\", \"TW\");\n+        tzLocale = Locale.TRADITIONAL_CHINESE;\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug6271396.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,10 +37,10 @@\n-        new Locale(\"en\"),\n-        new Locale(\"de\"),\n-        new Locale(\"es\"),\n-        new Locale(\"fr\"),\n-        new Locale(\"it\"),\n-        new Locale(\"ja\"),\n-        new Locale(\"ko\"),\n-        new Locale(\"sv\"),\n-        new Locale(\"zh\",\"CN\"),\n-        new Locale(\"zh\",\"TW\")\n+        Locale.ENGLISH,\n+        Locale.GERMAN,\n+        Locale.of(\"es\"),\n+        Locale.FRENCH,\n+        Locale.ITALIAN,\n+        Locale.JAPANESE,\n+        Locale.KOREAN,\n+        Locale.of(\"sv\"),\n+        Locale.SIMPLIFIED_CHINESE,\n+        Locale.TRADITIONAL_CHINESE\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug6317929.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,10 +37,10 @@\n-        new Locale(\"en\"),\n-        new Locale(\"de\"),\n-        new Locale(\"es\"),\n-        new Locale(\"fr\"),\n-        new Locale(\"it\"),\n-        new Locale(\"ja\"),\n-        new Locale(\"ko\"),\n-        new Locale(\"sv\"),\n-        new Locale(\"zh\",\"CN\"),\n-        new Locale(\"zh\",\"TW\")\n+        Locale.ENGLISH,\n+        Locale.GERMAN,\n+        Locale.of(\"es\"),\n+        Locale.FRENCH,\n+        Locale.ITALIAN,\n+        Locale.JAPANESE,\n+        Locale.KOREAN,\n+        Locale.of(\"sv\"),\n+        Locale.SIMPLIFIED_CHINESE,\n+        Locale.TRADITIONAL_CHINESE\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug6377794.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Locale tzLocale = new Locale(\"ja\");\n+        Locale tzLocale = Locale.JAPANESE;\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug6442006.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        Locale.setDefault(new Locale(\"tr\", \"TR\"));\n+        Locale.setDefault(Locale.of(\"tr\", \"TR\"));\n","filename":"test\/langtools\/tools\/javac\/util\/StringUtilsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}