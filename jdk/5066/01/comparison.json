{"files":[{"patch":"@@ -1484,2 +1484,0 @@\n-  _evacuation_failed_info_array(NULL),\n-  _preserved_marks_set(true \/* in_c_heap *\/),\n@@ -1514,2 +1512,0 @@\n-  _evacuation_failed_info_array = NEW_C_HEAP_ARRAY(EvacuationFailedInfo, n_queues, mtGC);\n-\n@@ -1520,1 +1516,0 @@\n-    ::new (&_evacuation_failed_info_array[i]) EvacuationFailedInfo();\n@@ -1775,2 +1770,0 @@\n-  _preserved_marks_set.init(ParallelGCThreads);\n-\n@@ -3007,0 +3000,13 @@\n+class G1PreservedMarksSet : public PreservedMarksSet {\n+public:\n+\n+  G1PreservedMarksSet(uint num_workers) : PreservedMarksSet(true \/* in_c_heap *\/) {\n+    init(num_workers);\n+  }\n+\n+  virtual ~G1PreservedMarksSet() {\n+    assert_empty();\n+    reclaim();\n+  }\n+};\n+\n@@ -3091,0 +3097,1 @@\n+      G1PreservedMarksSet preserved_marks_set(workers()->active_workers());\n@@ -3093,0 +3100,1 @@\n+                                                &preserved_marks_set,\n@@ -3105,1 +3113,1 @@\n-      post_evacuate_collection_set(jtm.evacuation_info(), &rdcqs, &per_thread_states);\n+      post_evacuate_collection_set(jtm.evacuation_info(), &per_thread_states);\n@@ -3134,5 +3142,0 @@\n-void G1CollectedHeap::preserve_mark_during_evac_failure(uint worker_id, oop obj, markWord m) {\n-  _evacuation_failed_info_array[worker_id].register_copy_failure(obj->size());\n-  _preserved_marks_set.get(worker_id)->push_if_necessary(obj, m);\n-}\n-\n@@ -3568,1 +3571,0 @@\n-  _preserved_marks_set.assert_empty();\n@@ -3804,1 +3806,0 @@\n-                                                   G1RedirtyCardsQueueSet* rdcqs,\n@@ -3822,1 +3823,1 @@\n-  post_evacuate_cleanup_1(per_thread_states, rdcqs);\n+  post_evacuate_cleanup_1(per_thread_states);\n@@ -3824,1 +3825,1 @@\n-  post_evacuate_cleanup_2(&_preserved_marks_set, rdcqs, evacuation_info, per_thread_states->surviving_young_words());\n+  post_evacuate_cleanup_2(per_thread_states, evacuation_info);\n@@ -3909,2 +3910,1 @@\n-void G1CollectedHeap::post_evacuate_cleanup_1(G1ParScanThreadStateSet* per_thread_states,\n-                                              G1RedirtyCardsQueueSet* rdcqs) {\n+void G1CollectedHeap::post_evacuate_cleanup_1(G1ParScanThreadStateSet* per_thread_states) {\n@@ -3913,1 +3913,1 @@\n-    G1PostEvacuateCollectionSetCleanupTask1 cl(per_thread_states, rdcqs);\n+    G1PostEvacuateCollectionSetCleanupTask1 cl(per_thread_states);\n@@ -3919,4 +3919,2 @@\n-void G1CollectedHeap::post_evacuate_cleanup_2(PreservedMarksSet* preserved_marks,\n-                                              G1RedirtyCardsQueueSet* rdcqs,\n-                                              G1EvacuationInfo* evacuation_info,\n-                                              const size_t* surviving_young_words) {\n+void G1CollectedHeap::post_evacuate_cleanup_2(G1ParScanThreadStateSet* per_thread_states,\n+                                              G1EvacuationInfo* evacuation_info) {\n@@ -3925,1 +3923,1 @@\n-    G1PostEvacuateCollectionSetCleanupTask2 cl(preserved_marks, rdcqs, evacuation_info, surviving_young_words);\n+    G1PostEvacuateCollectionSetCleanupTask2 cl(per_thread_states, evacuation_info);\n@@ -4310,5 +4308,0 @@\n-    for (uint i = 0; i < ParallelGCThreads; i++) {\n-      if (_evacuation_failed_info_array[i].has_failed()) {\n-        _gc_tracer_stw->report_evacuation_failed(_evacuation_failed_info_array[i]);\n-      }\n-    }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":23,"deletions":30,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-#include \"gc\/shared\/preservedMarks.hpp\"\n@@ -96,1 +95,0 @@\n-class EvacuationFailedInfo;\n@@ -153,2 +151,0 @@\n-  friend class G1ParScanThreadState;\n-  friend class G1ParScanThreadStateSet;\n@@ -845,1 +841,0 @@\n-                                    G1RedirtyCardsQueueSet* rdcqs,\n@@ -860,6 +855,3 @@\n-  void post_evacuate_cleanup_1(G1ParScanThreadStateSet* per_thread_states,\n-                               G1RedirtyCardsQueueSet* rdcqs);\n-  void post_evacuate_cleanup_2(PreservedMarksSet* preserved_marks,\n-                               G1RedirtyCardsQueueSet* rdcqs,\n-                               G1EvacuationInfo* evacuation_info,\n-                               const size_t* surviving_young_words);\n+  void post_evacuate_cleanup_1(G1ParScanThreadStateSet* per_thread_states);\n+  void post_evacuate_cleanup_2(G1ParScanThreadStateSet* per_thread_states,\n+                               G1EvacuationInfo* evacuation_info);\n@@ -890,8 +882,0 @@\n-  EvacuationFailedInfo* _evacuation_failed_info_array;\n-\n-  PreservedMarksSet _preserved_marks_set;\n-\n-  \/\/ Preserve the mark of \"obj\", if necessary, in preparation for its mark\n-  \/\/ word being overwritten with a self-forwarding-pointer.\n-  void preserve_mark_during_evac_failure(uint worker_id, oop obj, markWord m);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"gc\/shared\/preservedMarks.inline.hpp\"\n@@ -55,0 +56,1 @@\n+                                           PreservedMarks* preserved_marks,\n@@ -82,1 +84,3 @@\n-    _obj_alloc_stat(NULL)\n+    _obj_alloc_stat(NULL),\n+    _preserved_marks(preserved_marks),\n+    _evacuation_failed_info()\n@@ -116,0 +120,4 @@\n+  if (_evacuation_failed_info.has_failed()) {\n+     _g1h->gc_tracer_stw()->report_evacuation_failed(_evacuation_failed_info);\n+  }\n+\n@@ -374,3 +382,3 @@\n-    _g1h->_gc_tracer_stw->report_promotion_in_new_plab_event(old->klass(), word_sz * HeapWordSize, age,\n-                                                             dest_attr.type() == G1HeapRegionAttr::Old,\n-                                                             alloc_buf->word_sz() * HeapWordSize);\n+    _g1h->gc_tracer_stw()->report_promotion_in_new_plab_event(old->klass(), word_sz * HeapWordSize, age,\n+                                                              dest_attr.type() == G1HeapRegionAttr::Old,\n+                                                              alloc_buf->word_sz() * HeapWordSize);\n@@ -378,2 +386,2 @@\n-    _g1h->_gc_tracer_stw->report_promotion_outside_plab_event(old->klass(), word_sz * HeapWordSize, age,\n-                                                              dest_attr.type() == G1HeapRegionAttr::Old);\n+    _g1h->gc_tracer_stw()->report_promotion_outside_plab_event(old->klass(), word_sz * HeapWordSize, age,\n+                                                               dest_attr.type() == G1HeapRegionAttr::Old);\n@@ -406,1 +414,1 @@\n-    if (_g1h->_gc_tracer_stw->should_report_promotion_events()) {\n+    if (_g1h->gc_tracer_stw()->should_report_promotion_events()) {\n@@ -450,1 +458,1 @@\n-      return handle_evacuation_failure_par(old, old_mark);\n+      return handle_evacuation_failure_par(old, old_mark, word_sz);\n@@ -463,1 +471,1 @@\n-    return handle_evacuation_failure_par(old, old_mark);\n+    return handle_evacuation_failure_par(old, old_mark, word_sz);\n@@ -546,1 +554,2 @@\n-      new G1ParScanThreadState(_g1h, _rdcqs,\n+      new G1ParScanThreadState(_g1h, rdcqs(),\n+                               _preserved_marks_set->get(worker_id),\n@@ -600,1 +609,1 @@\n-oop G1ParScanThreadState::handle_evacuation_failure_par(oop old, markWord m) {\n+oop G1ParScanThreadState::handle_evacuation_failure_par(oop old, markWord m, size_t word_sz) {\n@@ -612,1 +621,2 @@\n-    _g1h->preserve_mark_during_evac_failure(_worker_id, old, m);\n+    _preserved_marks->push_if_necessary(old, m);\n+    _evacuation_failed_info.register_copy_failure(word_sz);\n@@ -658,0 +668,1 @@\n+                                                 PreservedMarksSet* preserved_marks_set,\n@@ -663,0 +674,1 @@\n+    _preserved_marks_set(preserved_marks_set),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":24,"deletions":12,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"gc\/shared\/copyFailedInfo.hpp\"\n@@ -46,0 +47,2 @@\n+class PreservedMarks;\n+class PreservedMarksSet;\n@@ -103,1 +106,0 @@\n-\n@@ -109,0 +111,6 @@\n+  \/\/ Per-thread evacuation failure data structures.\n+  PreservedMarks* _preserved_marks;\n+  EvacuationFailedInfo _evacuation_failed_info;\n+\n+  void handle_evacuation_failure_notifications(oop obj, markWord m, size_t word_sz);\n+\n@@ -112,0 +120,1 @@\n+                       PreservedMarks* preserved_marks,\n@@ -225,1 +234,1 @@\n-  oop handle_evacuation_failure_par(oop obj, markWord m);\n+  oop handle_evacuation_failure_par(oop obj, markWord m, size_t word_sz);\n@@ -238,0 +247,1 @@\n+  PreservedMarksSet* _preserved_marks_set;\n@@ -248,0 +258,1 @@\n+                          PreservedMarksSet* preserved_marks_set,\n@@ -253,0 +264,3 @@\n+  G1RedirtyCardsQueueSet* rdcqs() { return _rdcqs; }\n+  PreservedMarksSet* preserved_marks_set() { return _preserved_marks_set; }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"gc\/shared\/preservedMarks.inline.hpp\"\n@@ -40,2 +41,1 @@\n-G1PostEvacuateCollectionSetCleanupTask1::G1PostEvacuateCollectionSetCleanupTask1(G1ParScanThreadStateSet* per_thread_states,\n-                                                                                 G1RedirtyCardsQueueSet* rdcqs) :\n+G1PostEvacuateCollectionSetCleanupTask1::G1PostEvacuateCollectionSetCleanupTask1(G1ParScanThreadStateSet* per_thread_states) :\n@@ -50,1 +50,1 @@\n-    add_parallel_task(new RemoveSelfForwardPtrsTask(rdcqs));\n+    add_parallel_task(new RemoveSelfForwardPtrsTask(per_thread_states->rdcqs()));\n@@ -604,4 +604,2 @@\n-G1PostEvacuateCollectionSetCleanupTask2::G1PostEvacuateCollectionSetCleanupTask2(PreservedMarksSet* preserved_marks_set,\n-                                                                                 G1RedirtyCardsQueueSet* rdcqs,\n-                                                                                 G1EvacuationInfo* evacuation_info,\n-                                                                                 const size_t* surviving_young_words) :\n+G1PostEvacuateCollectionSetCleanupTask2::G1PostEvacuateCollectionSetCleanupTask2(G1ParScanThreadStateSet* per_thread_states,\n+                                                                                 G1EvacuationInfo* evacuation_info) :\n@@ -620,1 +618,1 @@\n-    add_parallel_task(new RestorePreservedMarksTask(preserved_marks_set));\n+    add_parallel_task(new RestorePreservedMarksTask(per_thread_states->preserved_marks_set()));\n@@ -622,2 +620,2 @@\n-  add_parallel_task(new RedirtyLoggedCardsTask(rdcqs));\n-  add_parallel_task(new FreeCollectionSetTask(evacuation_info, surviving_young_words));\n+  add_parallel_task(new RedirtyLoggedCardsTask(per_thread_states->rdcqs()));\n+  add_parallel_task(new FreeCollectionSetTask(evacuation_info, per_thread_states->surviving_young_words()));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -51,2 +51,1 @@\n-  G1PostEvacuateCollectionSetCleanupTask1(G1ParScanThreadStateSet* per_thread_states,\n-                                          G1RedirtyCardsQueueSet* rdcqs);\n+  G1PostEvacuateCollectionSetCleanupTask1(G1ParScanThreadStateSet* per_thread_states);\n@@ -117,4 +116,2 @@\n-  G1PostEvacuateCollectionSetCleanupTask2(PreservedMarksSet* preserved_marks_set,\n-                                          G1RedirtyCardsQueueSet* rdcqs,\n-                                          G1EvacuationInfo* evacuation_info,\n-                                          const size_t* surviving_young_words);\n+  G1PostEvacuateCollectionSetCleanupTask2(G1ParScanThreadStateSet* per_thread_states,\n+                                          G1EvacuationInfo* evacuation_info);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.hpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}