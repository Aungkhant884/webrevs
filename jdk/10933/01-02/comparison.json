{"files":[{"patch":"@@ -490,8 +490,2 @@\n-      assert(nm->oops_size() == 0, \"must not contain oop constants\");\n-\n-      if (relocInfo::mustIterateImmediateOopsInCode()) {\n-        RelocIterator iter(nm, nm->oops_reloc_begin());\n-        while (iter.next()) {\n-          assert(iter.type() != relocInfo::oop_type, \"must not contain oops in code\");\n-        }\n-      }\n+      assert(!nm->contains_oops(), \"no oops allowed\");\n+      assert(nm->metadata_size() == 0, \"metadata usage not expected\");\n@@ -1740,0 +1734,13 @@\n+bool nmethod::contains_oops() {\n+  if (oops_size() > 0) return true;\n+\n+  if (relocInfo::mustIterateImmediateOopsInCode()) {\n+    RelocIterator iter(this, oops_reloc_begin());\n+    while (iter.next()) {\n+      if (iter.type() == relocInfo::oop_type) return true;\n+    }\n+  }\n+\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -549,0 +549,2 @@\n+  bool contains_oops();\n+\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}