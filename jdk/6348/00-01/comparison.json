{"files":[{"patch":"@@ -376,1 +376,1 @@\n-                \/\/ otherwise, the body is absent, special case for GET\/DELETE,\n+                \/\/ otherwise, the body is absent, special case for GET\/DELETE\/HEAD,\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpRequest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8203433\n+ * @bug 8203433 8276559\n@@ -51,1 +51,0 @@\n-import javax.net.ServerSocketFactory;\n@@ -55,4 +54,0 @@\n-import java.io.OutputStream;\n-import java.io.OutputStreamWriter;\n-import java.io.PrintWriter;\n-import java.io.Writer;\n@@ -61,2 +56,0 @@\n-import java.net.ServerSocket;\n-import java.net.Socket;\n@@ -69,13 +62,0 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.StringTokenizer;\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentLinkedQueue;\n-import java.util.concurrent.atomic.AtomicLong;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n@@ -84,2 +64,0 @@\n-import static java.nio.charset.StandardCharsets.UTF_8;\n-import static java.net.HttpURLConnection.HTTP_OK;\n@@ -87,1 +65,0 @@\n-import static org.testng.Assert.assertTrue;\n@@ -101,2 +78,0 @@\n-    static final String MESSAGE = \"Basic HeadTest message body\";\n-    static final int ITERATIONS = 3;\n@@ -136,2 +111,0 @@\n-    static final AtomicLong requestCounter = new AtomicLong();\n-\n@@ -142,5 +115,0 @@\n-        HttpClient client = HttpClient.newBuilder()\n-                .followRedirects(Redirect.ALWAYS)\n-                .sslContext(sslContext)\n-                .build();\n-\n@@ -148,1 +116,0 @@\n-\n@@ -152,1 +119,0 @@\n-\n@@ -156,1 +122,21 @@\n-        HttpRequest request = requestBuilder.build();\n+        doTest(requestBuilder.build(), expResp);\n+        \/\/ repeat the test this time by building the request using convenience\n+        \/\/ GET and HEAD methods\n+        requestBuilder = HttpRequest.newBuilder(uri);\n+        if (version != null) {\n+            requestBuilder.version(version);\n+        }\n+        switch (method) {\n+            case \"GET\" -> requestBuilder.GET();\n+            case \"HEAD\" -> requestBuilder.HEAD();\n+            default -> throw new IllegalArgumentException(\"Unexpected method \" + method);\n+        }\n+        doTest(requestBuilder.build(), expResp);\n+    }\n+\n+    \/\/ issue a request with no body and verify the response code is the expected response code\n+    private void doTest(HttpRequest request, int expResp) throws Exception {\n+        HttpClient client = HttpClient.newBuilder()\n+                .followRedirects(Redirect.ALWAYS)\n+                .sslContext(sslContext)\n+                .build();\n","filename":"test\/jdk\/java\/net\/httpclient\/HeadTest.java","additions":23,"deletions":37,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @bug 8170064\n+ * @bug 8170064 8276559\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpRequestBuilderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-* @bug 8252304\n+* @bug 8252304 8276559\n@@ -123,0 +123,1 @@\n+                { HttpRequest.newBuilder(URI.create(\"https:\/\/method-0\/\")).HEAD().build() },\n@@ -124,1 +125,0 @@\n-                { HttpRequest.newBuilder(URI.create(\"https:\/\/method-1\/\")).HEAD().build() },\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpRequestNewBuilderTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @bug 8276559\n","filename":"test\/jdk\/java\/net\/httpclient\/RequestBuilderTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}