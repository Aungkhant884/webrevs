{"files":[{"patch":"@@ -202,1 +202,1 @@\n-    RefProcTotalPhaseTimesTracker tt(RefPhase2, &phase_times);\n+    RefProcTotalPhaseTimesTracker tt(SoftWeakFinalRefsPhase, &phase_times);\n@@ -207,1 +207,1 @@\n-    RefProcTotalPhaseTimesTracker tt(RefPhase3, &phase_times);\n+    RefProcTotalPhaseTimesTracker tt(KeepAliveFinalRefsPhase, &phase_times);\n@@ -212,1 +212,1 @@\n-    RefProcTotalPhaseTimesTracker tt(RefPhase4, &phase_times);\n+    RefProcTotalPhaseTimesTracker tt(PhantomRefsPhase, &phase_times);\n@@ -455,2 +455,2 @@\n-class RefProcPhase2Task: public RefProcTask {\n-  void run_phase2(uint worker_id,\n+class RefProcSoftWeakFinalPhaseTask: public RefProcTask {\n+  void run_phase(uint worker_id,\n@@ -470,2 +470,2 @@\n-  RefProcPhase2Task(ReferenceProcessor& ref_processor,\n-                    ReferenceProcessorPhaseTimes* phase_times)\n+  RefProcSoftWeakFinalPhaseTask(ReferenceProcessor& ref_processor,\n+                                ReferenceProcessorPhaseTimes* phase_times)\n@@ -480,1 +480,1 @@\n-    RefProcWorkerTimeTracker t(_phase_times->phase2_worker_time_sec(), tracker_id(worker_id));\n+    RefProcWorkerTimeTracker t(_phase_times->SoftWeakFinalRefsPhase_worker_time_sec(), tracker_id(worker_id));\n@@ -482,2 +482,2 @@\n-      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::SoftRefSubPhase2, _phase_times, tracker_id(worker_id));\n-      run_phase2(worker_id, _ref_processor._discoveredSoftRefs, is_alive, keep_alive, true \/* do_enqueue_and_clear *\/, REF_SOFT);\n+      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::ProcessSoftRefSubPhase, _phase_times, tracker_id(worker_id));\n+      run_phase(worker_id, _ref_processor._discoveredSoftRefs, is_alive, keep_alive, true \/* do_enqueue_and_clear *\/, REF_SOFT);\n@@ -486,2 +486,2 @@\n-      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::WeakRefSubPhase2, _phase_times, tracker_id(worker_id));\n-      run_phase2(worker_id, _ref_processor._discoveredWeakRefs, is_alive, keep_alive, true \/* do_enqueue_and_clear *\/, REF_WEAK);\n+      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::ProcessWeakRefSubPhase, _phase_times, tracker_id(worker_id));\n+      run_phase(worker_id, _ref_processor._discoveredWeakRefs, is_alive, keep_alive, true \/* do_enqueue_and_clear *\/, REF_WEAK);\n@@ -490,2 +490,2 @@\n-      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::FinalRefSubPhase2, _phase_times, tracker_id(worker_id));\n-      run_phase2(worker_id, _ref_processor._discoveredFinalRefs, is_alive, keep_alive, false \/* do_enqueue_and_clear *\/, REF_FINAL);\n+      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::ProcessFinalRefSubPhase, _phase_times, tracker_id(worker_id));\n+      run_phase(worker_id, _ref_processor._discoveredFinalRefs, is_alive, keep_alive, false \/* do_enqueue_and_clear *\/, REF_FINAL);\n@@ -499,1 +499,1 @@\n-class RefProcPhase3Task: public RefProcTask {\n+class RefProcKeepAliveFinalPhaseTask: public RefProcTask {\n@@ -501,2 +501,2 @@\n-  RefProcPhase3Task(ReferenceProcessor& ref_processor,\n-                    ReferenceProcessorPhaseTimes* phase_times)\n+  RefProcKeepAliveFinalPhaseTask(ReferenceProcessor& ref_processor,\n+                                 ReferenceProcessorPhaseTimes* phase_times)\n@@ -511,1 +511,1 @@\n-    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::FinalRefSubPhase3, _phase_times, tracker_id(worker_id));\n+    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::KeepAliveFinalRefsSubPhase, _phase_times, tracker_id(worker_id));\n@@ -516,1 +516,1 @@\n-class RefProcPhase4Task: public RefProcTask {\n+class RefProcPhantomPhaseTask: public RefProcTask {\n@@ -518,2 +518,2 @@\n-  RefProcPhase4Task(ReferenceProcessor& ref_processor,\n-                    ReferenceProcessorPhaseTimes* phase_times)\n+  RefProcPhantomPhaseTask(ReferenceProcessor& ref_processor,\n+                          ReferenceProcessorPhaseTimes* phase_times)\n@@ -528,1 +528,1 @@\n-    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::PhantomRefSubPhase4, _phase_times, tracker_id(worker_id));\n+    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::ProcessPhantomRefsSubPhase, _phase_times, tracker_id(worker_id));\n@@ -723,1 +723,1 @@\n-    log_debug(gc, ref)(\"Skipped phase 2 of Reference Processing: no references\");\n+    log_debug(gc, ref)(\"Skipped SoftWeakFinalRefsPhase of Reference Processing: no references\");\n@@ -727,1 +727,1 @@\n-  RefProcMTDegreeAdjuster a(this, RefPhase2, num_total_refs);\n+  RefProcMTDegreeAdjuster a(this, SoftWeakFinalRefsPhase, num_total_refs);\n@@ -730,1 +730,1 @@\n-    RefProcBalanceQueuesTimeTracker tt(RefPhase2, &phase_times);\n+    RefProcBalanceQueuesTimeTracker tt(SoftWeakFinalRefsPhase, &phase_times);\n@@ -736,1 +736,1 @@\n-  RefProcPhaseTimeTracker tt(RefPhase2, &phase_times);\n+  RefProcPhaseTimeTracker tt(SoftWeakFinalRefsPhase, &phase_times);\n@@ -738,3 +738,3 @@\n-  log_reflist(\"Phase 2 Soft before\", _discoveredSoftRefs, _max_num_queues);\n-  log_reflist(\"Phase 2 Weak before\", _discoveredWeakRefs, _max_num_queues);\n-  log_reflist(\"Phase 2 Final before\", _discoveredFinalRefs, _max_num_queues);\n+  log_reflist(\"SoftWeakFinalRefsPhase Soft before\", _discoveredSoftRefs, _max_num_queues);\n+  log_reflist(\"SoftWeakFinalRefsPhase Weak before\", _discoveredWeakRefs, _max_num_queues);\n+  log_reflist(\"SoftWeakFinalRefsPhase Final before\", _discoveredFinalRefs, _max_num_queues);\n@@ -742,2 +742,2 @@\n-  RefProcPhase2Task phase2(*this, &phase_times);\n-  run_task(phase2, proxy_task, false);\n+  RefProcSoftWeakFinalPhaseTask phase_task(*this, &phase_times);\n+  run_task(phase_task, proxy_task, false);\n@@ -747,1 +747,1 @@\n-  log_reflist(\"Phase 2 Final after\", _discoveredFinalRefs, _max_num_queues);\n+  log_reflist(\"SoftWeakFinalRefsPhase Final after\", _discoveredFinalRefs, _max_num_queues);\n@@ -757,1 +757,1 @@\n-    log_debug(gc, ref)(\"Skipped phase 3 of Reference Processing: no references\");\n+    log_debug(gc, ref)(\"Skipped KeepAliveFinalRefsPhase of Reference Processing: no references\");\n@@ -761,1 +761,1 @@\n-  RefProcMTDegreeAdjuster a(this, RefPhase3, num_final_refs);\n+  RefProcMTDegreeAdjuster a(this, KeepAliveFinalRefsPhase, num_final_refs);\n@@ -764,1 +764,1 @@\n-    RefProcBalanceQueuesTimeTracker tt(RefPhase3, &phase_times);\n+    RefProcBalanceQueuesTimeTracker tt(KeepAliveFinalRefsPhase, &phase_times);\n@@ -768,5 +768,4 @@\n-  \/\/ Phase 3:\n-  \/\/ . Traverse referents of final references and keep them and followers alive.\n-  RefProcPhaseTimeTracker tt(RefPhase3, &phase_times);\n-  RefProcPhase3Task phase3(*this, &phase_times);\n-  run_task(phase3, proxy_task, true);\n+  \/\/ Traverse referents of final references and keep them and followers alive.\n+  RefProcPhaseTimeTracker tt(KeepAliveFinalRefsPhase, &phase_times);\n+  RefProcKeepAliveFinalPhaseTask phase_task(*this, &phase_times);\n+  run_task(phase_task, proxy_task, true);\n@@ -785,1 +784,1 @@\n-    log_debug(gc, ref)(\"Skipped phase 4 of Reference Processing: no references\");\n+    log_debug(gc, ref)(\"Skipped PhantomRefsPhase of Reference Processing: no references\");\n@@ -789,1 +788,1 @@\n-  RefProcMTDegreeAdjuster a(this, RefPhase4, num_phantom_refs);\n+  RefProcMTDegreeAdjuster a(this, PhantomRefsPhase, num_phantom_refs);\n@@ -792,1 +791,1 @@\n-    RefProcBalanceQueuesTimeTracker tt(RefPhase4, &phase_times);\n+    RefProcBalanceQueuesTimeTracker tt(PhantomRefsPhase, &phase_times);\n@@ -796,2 +795,2 @@\n-  \/\/ Phase 4: Walk phantom references appropriately.\n-  RefProcPhaseTimeTracker tt(RefPhase4, &phase_times);\n+  \/\/ Walk phantom references appropriately.\n+  RefProcPhaseTimeTracker tt(PhantomRefsPhase, &phase_times);\n@@ -799,1 +798,1 @@\n-  log_reflist(\"Phase 4 Phantom before\", _discoveredPhantomRefs, _max_num_queues);\n+  log_reflist(\"PhantomRefsPhase Phantom before\", _discoveredPhantomRefs, _max_num_queues);\n@@ -801,2 +800,2 @@\n-  RefProcPhase4Task phase4(*this, &phase_times);\n-  run_task(phase4, proxy_task, false);\n+  RefProcPhantomPhaseTask phase_task(*this, &phase_times);\n+  run_task(phase_task, proxy_task, false);\n@@ -1193,1 +1192,1 @@\n-  return phase == ReferenceProcessor::RefPhase3;\n+  return phase == ReferenceProcessor::KeepAliveFinalRefsPhase;\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":48,"deletions":49,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -163,3 +163,3 @@\n-  friend class RefProcPhase2Task;\n-  friend class RefProcPhase3Task;\n-  friend class RefProcPhase4Task;\n+  friend class RefProcSoftWeakFinalPhaseTask;\n+  friend class RefProcKeepAliveFinalPhaseTask;\n+  friend class RefProcPhantomPhaseTask;\n@@ -170,5 +170,5 @@\n-    SoftRefSubPhase2,\n-    WeakRefSubPhase2,\n-    FinalRefSubPhase2,\n-    FinalRefSubPhase3,\n-    PhantomRefSubPhase4,\n+    ProcessSoftRefSubPhase,\n+    ProcessWeakRefSubPhase,\n+    ProcessFinalRefSubPhase,\n+    KeepAliveFinalRefsSubPhase,\n+    ProcessPhantomRefsSubPhase,\n@@ -180,3 +180,3 @@\n-    RefPhase2,\n-    RefPhase3,\n-    RefPhase4,\n+    SoftWeakFinalRefsPhase,\n+    KeepAliveFinalRefsPhase,\n+    PhantomRefsPhase,\n@@ -237,1 +237,1 @@\n-  \/\/ Phase 2: Drop Soft\/Weak\/Final references with a NULL or live referent, and clear\n+  \/\/ Drop Soft\/Weak\/Final references with a NULL or live referent, and clear\n@@ -242,1 +242,1 @@\n-  \/\/ Phase 3: Keep alive followers of Final references, and enqueue.\n+  \/\/ Keep alive followers of Final references, and enqueue.\n@@ -246,1 +246,1 @@\n-  \/\/ Phase 4: Drop and keep alive live Phantom references, or clear and enqueue if dead.\n+  \/\/ Drop and keep alive live Phantom references, or clear and enqueue if dead.\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-#define ASSERT_PHASE(phase) assert((phase) >= ReferenceProcessor::RefPhase2 && \\\n+#define ASSERT_PHASE(phase) assert((phase) >= ReferenceProcessor::SoftWeakFinalRefsPhase && \\\n@@ -43,1 +43,1 @@\n-#define ASSERT_SUB_PHASE(phase) assert((phase) >= ReferenceProcessor::SoftRefSubPhase2 && \\\n+#define ASSERT_SUB_PHASE(phase) assert((phase) >= ReferenceProcessor::ProcessSoftRefSubPhase && \\\n@@ -55,1 +55,1 @@\n-static const char* Phase2ParWorkTitle = \"Total (ms):\";\n+static const char* SoftWeakFinalRefsPhaseParWorkTitle = \"Total (ms):\";\n@@ -65,1 +65,1 @@\n-static const char* Phase2SerWorkTitle = \"Total:\";\n+static const char* SoftWeakFinalRefsPhaseSerWorkTitle = \"Total:\";\n@@ -175,1 +175,1 @@\n-  _phase2_worker_time_sec = new WorkerDataArray<double>(NULL, Phase2ParWorkTitle, max_gc_threads);\n+  _SoftWeakFinalRefsPhase_worker_time_sec = new WorkerDataArray<double>(NULL, SoftWeakFinalRefsPhaseParWorkTitle, max_gc_threads);\n@@ -211,1 +211,1 @@\n-  _phase2_worker_time_sec->reset();\n+  _SoftWeakFinalRefsPhase_worker_time_sec->reset();\n@@ -227,1 +227,1 @@\n-  delete _phase2_worker_time_sec;\n+  delete _SoftWeakFinalRefsPhase_worker_time_sec;\n@@ -275,3 +275,3 @@\n-  print_phase(ReferenceProcessor::RefPhase2, next_indent);\n-  print_phase(ReferenceProcessor::RefPhase3, next_indent);\n-  print_phase(ReferenceProcessor::RefPhase4, next_indent);\n+  print_phase(ReferenceProcessor::SoftWeakFinalRefsPhase, next_indent);\n+  print_phase(ReferenceProcessor::KeepAliveFinalRefsPhase, next_indent);\n+  print_phase(ReferenceProcessor::PhantomRefsPhase, next_indent);\n@@ -328,4 +328,4 @@\n-      case ReferenceProcessor::RefPhase2:\n-        print_sub_phase(&ls, ReferenceProcessor::SoftRefSubPhase2, indent + 1);\n-        print_sub_phase(&ls, ReferenceProcessor::WeakRefSubPhase2, indent + 1);\n-        print_sub_phase(&ls, ReferenceProcessor::FinalRefSubPhase2, indent + 1);\n+      case ReferenceProcessor::SoftWeakFinalRefsPhase:\n+        print_sub_phase(&ls, ReferenceProcessor::ProcessSoftRefSubPhase, indent + 1);\n+        print_sub_phase(&ls, ReferenceProcessor::ProcessWeakRefSubPhase, indent + 1);\n+        print_sub_phase(&ls, ReferenceProcessor::ProcessFinalRefSubPhase, indent + 1);\n@@ -333,2 +333,2 @@\n-      case ReferenceProcessor::RefPhase3:\n-        print_sub_phase(&ls, ReferenceProcessor::FinalRefSubPhase3, indent + 1);\n+      case ReferenceProcessor::KeepAliveFinalRefsPhase:\n+        print_sub_phase(&ls, ReferenceProcessor::KeepAliveFinalRefsSubPhase, indent + 1);\n@@ -336,2 +336,2 @@\n-      case ReferenceProcessor::RefPhase4:\n-        print_sub_phase(&ls, ReferenceProcessor::PhantomRefSubPhase4, indent + 1);\n+      case ReferenceProcessor::PhantomRefsPhase:\n+        print_sub_phase(&ls, ReferenceProcessor::ProcessPhantomRefsSubPhase, indent + 1);\n@@ -342,2 +342,2 @@\n-    if (phase == ReferenceProcessor::RefPhase2) {\n-      print_worker_time(&ls, _phase2_worker_time_sec, Phase2SerWorkTitle, indent + 1);\n+    if (phase == ReferenceProcessor::SoftWeakFinalRefsPhase) {\n+      print_worker_time(&ls, _SoftWeakFinalRefsPhase_worker_time_sec, SoftWeakFinalRefsPhaseSerWorkTitle, indent + 1);\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessorPhaseTimes.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  WorkerDataArray<double>* _phase2_worker_time_sec;\n+  WorkerDataArray<double>* _SoftWeakFinalRefsPhase_worker_time_sec;\n@@ -83,1 +83,1 @@\n-  WorkerDataArray<double>* phase2_worker_time_sec() const { return _phase2_worker_time_sec; }\n+  WorkerDataArray<double>* SoftWeakFinalRefsPhase_worker_time_sec() const { return _SoftWeakFinalRefsPhase_worker_time_sec; }\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessorPhaseTimes.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}