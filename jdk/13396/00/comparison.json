{"files":[{"patch":"@@ -35,1 +35,1 @@\n-JavaVM* jvm = NULL;\n+JavaVM* jvm_management = NULL;\n@@ -42,1 +42,1 @@\n-    jvm = vm;\n+    jvm_management = vm;\n@@ -60,1 +60,1 @@\n-    sprintf(errmsg, \"errno: %d error: %s\\n\", errno, msg);\n+    snprintf(errmsg, sizeof(errmsg), \"errno: %d error: %s\\n\", errno, msg);\n","filename":"src\/java.management\/share\/native\/libmanagement\/management.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-JavaVM* jvm = NULL;\n+JavaVM* jvm_j2pkcs11 = NULL;\n@@ -81,1 +81,1 @@\n-    jvm = vm;\n+    jvm_j2pkcs11 = vm;\n@@ -213,1 +213,1 @@\n-     * Initalize Cryptoki\n+     * Initialize Cryptoki\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_general.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -218,1 +218,1 @@\n-    if (jvm == NULL) { return rv ;} \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ;} \/* there is no VM running *\/\n@@ -221,1 +221,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -225,1 +225,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -232,1 +232,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -278,1 +278,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n@@ -294,1 +294,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -311,1 +311,1 @@\n-    if (jvm == NULL) { return rv ; } \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ; } \/* there is no VM running *\/\n@@ -314,1 +314,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -318,1 +318,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -325,1 +325,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -370,1 +370,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n@@ -386,1 +386,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -403,1 +403,1 @@\n-    if (jvm == NULL) { return rv ; } \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ; } \/* there is no VM running *\/\n@@ -406,1 +406,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -410,1 +410,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -417,1 +417,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -458,1 +458,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n@@ -474,1 +474,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -491,1 +491,1 @@\n-    if (jvm == NULL) { return rv ; } \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ; } \/* there is no VM running *\/\n@@ -494,1 +494,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -498,1 +498,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -505,1 +505,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -546,1 +546,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_mutex.c","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -275,0 +275,27 @@\n+#ifdef P11_ENABLE_C_SESSIONCANCEL\n+\/*\n+ * Class:     sun_security_pkcs11_wrapper_PKCS11\n+ * Method:    C_SessionCancel\n+ * Signature: (JJ)V\n+ * Parametermapping:                    *PKCS11*\n+ * @param   jlong jSessionHandle        CK_SESSION_HANDLE hSession\n+ * @param   jlong jFlags                CK_FLAGS flags\n+ *\/\n+JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_C_1SessionCancel\n+    (JNIEnv *env, jobject obj, jlong jSessionHandle, jlong jFlags)\n+{\n+    CK_SESSION_HANDLE ckSessionHandle;\n+    CK_RV rv;\n+\n+    CK_FUNCTION_LIST_3_0_PTR ckpFunctions30 = getFunctionList30(env, obj);\n+    if (ckpFunctions30 == NULL) { return; }\n+\n+    ckSessionHandle = jLongToCKULong(jSessionHandle);\n+\n+    rv = (*ckpFunctions30->C_SessionCancel)(ckSessionHandle,\n+            jLongToCKULong(jFlags));\n+\n+    ckAssertReturnValueOK(env, rv);\n+}\n+#endif\n+\n@@ -354,1 +381,1 @@\n-    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+    ckAssertReturnValueOK(env, rv);\n@@ -370,1 +397,2 @@\n-    (JNIEnv *env, jobject obj, jlong jSessionHandle, jlong jUserType, jcharArray jPin)\n+    (JNIEnv *env, jobject obj, jlong jSessionHandle, jlong jUserType,\n+     jcharArray jPin)\n@@ -377,0 +405,1 @@\n+    CK_FUNCTION_LIST_PTR ckpFunctions;\n@@ -378,2 +407,5 @@\n-    CK_FUNCTION_LIST_PTR ckpFunctions = getFunctionList(env, obj);\n-    if (ckpFunctions == NULL) { return; }\n+    ckpFunctions = getFunctionList(env, obj);\n+\n+    if (ckpFunctions == NULL) {\n+        return;\n+    }\n@@ -386,1 +418,49 @@\n-    rv = (*ckpFunctions->C_Login)(ckSessionHandle, ckUserType, ckpPinArray, ckPinLength);\n+    rv = (*ckpFunctions->C_Login)(ckSessionHandle, ckUserType, ckpPinArray,\n+            ckPinLength);\n+    free(ckpPinArray);\n+\n+    ckAssertReturnValueOK(env, rv);\n+}\n+#endif\n+\n+#ifdef P11_ENABLE_C_LOGINUSER\n+\/*\n+ * Class:     sun_security_pkcs11_wrapper_PKCS11\n+ * Method:    C_LoginUser\n+ * Signature: (JJ[C;Ljava\/lang\/String;)V\n+ * Parametermapping:                    *PKCS11*\n+ * @param   jlong jSessionHandle        CK_SESSION_HANDLE hSession\n+ * @param   jlong jUserType             CK_USER_TYPE userType\n+ * @param   jcharArray jPin             CK_CHAR_PTR pPin\n+ *                                      CK_ULONG ulPinLen\n+ * @param   jstring jUsername           CK_CHAR_PTR pUsername\n+ *                                      CK_ULONG ulUsernameLen\n+ *\/\n+JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_C_1LoginUser\n+    (JNIEnv *env, jobject obj, jlong jSessionHandle, jlong jUserType,\n+     jcharArray jPin, jstring jUsername)\n+{\n+    CK_SESSION_HANDLE ckSessionHandle;\n+    CK_USER_TYPE ckUserType;\n+    CK_CHAR_PTR ckpPinArray = NULL_PTR;\n+    CK_ULONG ckPinLength;\n+    CK_CHAR_PTR ckpUsername = NULL_PTR;\n+    CK_ULONG ckUsernameLength;\n+    CK_RV rv;\n+    CK_FUNCTION_LIST_3_0_PTR ckpFunctions30;\n+\n+    ckpFunctions30 = getFunctionList30(env, obj);\n+\n+    ckSessionHandle = jLongToCKULong(jSessionHandle);\n+    ckUserType = jLongToCKULong(jUserType);\n+    jCharArrayToCKCharArray(env, jPin, &ckpPinArray, &ckPinLength);\n+    if ((*env)->ExceptionCheck(env)) { return; }\n+    jStringToCKUTF8CharArray(env, jUsername, &ckpUsername,\n+            &ckUsernameLength);\n+    if ((*env)->ExceptionCheck(env)) { return; }\n+\n+    if (ckpFunctions30 == NULL) {\n+        return;\n+    }\n+    rv = (*ckpFunctions30->C_LoginUser)(ckSessionHandle, ckUserType,\n+            ckpPinArray, ckPinLength, ckpUsername, ckUsernameLength);\n@@ -389,0 +469,1 @@\n+    free(ckpUsername);\n@@ -390,1 +471,1 @@\n-    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+    ckAssertReturnValueOK(env, rv);\n@@ -392,0 +473,1 @@\n+\n@@ -414,1 +496,1 @@\n-    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) { return; }\n+    ckAssertReturnValueOK(env, rv);\n@@ -546,1 +628,1 @@\n- * @param hSession The session, this callback is comming from.\n+ * @param hSession The session, this callback is coming from.\n@@ -561,1 +643,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -579,1 +661,1 @@\n-    if (jvm == NULL) { return rv ; } \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ; } \/* there is no VM running *\/\n@@ -582,1 +664,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -586,1 +668,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -593,1 +675,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -628,1 +710,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_sessmgmt.c","additions":97,"deletions":15,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-JavaVM* jvm = NULL;\n+JavaVM* jvm_management_ext = NULL;\n@@ -42,1 +42,1 @@\n-    jvm = vm;\n+    jvm_management_ext = vm;\n@@ -60,1 +60,1 @@\n-    sprintf(errmsg, \"errno: %d error: %s\\n\", errno, msg);\n+    snprintf(errmsg, sizeof(errmsg), \"errno: %d error: %s\\n\", errno, msg);\n","filename":"src\/jdk.management\/share\/native\/libmanagement_ext\/management_ext.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}