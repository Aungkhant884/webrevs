{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,2 @@\n-    private static Hashtable<Signal, Signal.Handler> handlers = new Hashtable<>(4);\n-    private static Hashtable<Integer, Signal> signals = new Hashtable<>(4);\n+    private static final Hashtable<Signal, Signal.Handler> handlers = new Hashtable<>(4);\n+    private static final Hashtable<Integer, Signal> signals = new Hashtable<>(4);\n@@ -164,1 +164,1 @@\n-                                                    Signal.Handler handler)\n+                                                     Signal.Handler handler)\n@@ -176,15 +176,14 @@\n-        synchronized (handlers) {\n-            Signal.Handler oldHandler = handlers.get(sig);\n-            handlers.remove(sig);\n-            if (newH == 2) {\n-                handlers.put(sig, handler);\n-            }\n-            if (oldH == 0) {\n-                return Signal.Handler.SIG_DFL;\n-            } else if (oldH == 1) {\n-                return Signal.Handler.SIG_IGN;\n-            } else if (oldH == 2) {\n-                return oldHandler;\n-            } else {\n-                return new NativeHandler(oldH);\n-            }\n+        Signal.Handler oldHandler;\n+        if (newH == 2) {\n+            oldHandler = handlers.put(sig, handler);\n+        } else {\n+            oldHandler = handlers.remove(sig);\n+        }\n+        if (oldH == 0) {\n+            return Signal.Handler.SIG_DFL;\n+        } else if (oldH == 1) {\n+            return Signal.Handler.SIG_IGN;\n+        } else if (oldH == 2) {\n+            return oldHandler;\n+        } else {\n+            return new NativeHandler(oldH);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Signal.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"}]}