{"files":[{"patch":"@@ -4818,0 +4818,3 @@\n+        private static final Set<String> externMethodNames =\n+            Set.of(\"writeExternal\", \"readExternal\");\n+\n@@ -5212,0 +5215,6 @@\n+\n+                        if (isExternalizable((Type)e.asType()) && externMethodNames.contains(name)) {\n+                            log.warning(LintCategory.SERIAL,\n+                                        TreeInfo.diagnosticPositionFor(method, tree),\n+                                        Warnings.IneffectualExternMethodEnum(name));\n+                        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2018,0 +2018,4 @@\n+# 0: string\n+compiler.warn.ineffectual.extern.method.enum=\\\n+    externalization-related method {0} is not effective in an enum class\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ key: compiler.warn.ineffectual.externalizable.method.record\n+\/\/ key: compiler.warn.ineffectual.extern.method.enum\n@@ -30,1 +30,3 @@\n-record IneffectualExternRecord(int foo) implements Externalizable {\n+enum IneffectualExternEnum implements Externalizable {\n+    INSTANCE;\n+\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/IneffectualExternEnum.java","additions":4,"deletions":2,"binary":false,"changes":6,"previous_filename":"test\/langtools\/tools\/javac\/diags\/examples\/IneffectualExternRecord.java","status":"copied"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8310835\n+ * @compile\/ref=EnumExtern.out -XDrawDiagnostics -Xlint:serial EnumExtern.java\n+ * @compile\/ref=empty.out      -XDrawDiagnostics               EnumExtern.java\n+ *\/\n+\n+import java.io.*;\n+\n+enum EnumExtern implements Externalizable {\n+    INSTANCE;\n+\n+    \/\/ Verify a warning is generated in an enum class for each of the\n+    \/\/ distinguished serial fields and methods as well as extern methods.\n+\n+    private static final long serialVersionUID = 42;\n+    private static final ObjectStreamField[] serialPersistentFields = {};\n+\n+    private void writeObject(ObjectOutputStream stream) throws IOException {\n+        stream.defaultWriteObject();\n+    }\n+\n+    private Object writeReplace() throws ObjectStreamException {\n+        return null;\n+    }\n+\n+    private void readObject(ObjectInputStream stream)\n+        throws IOException, ClassNotFoundException {\n+        stream.defaultReadObject();\n+    }\n+\n+    private void readObjectNoData() throws ObjectStreamException {\n+        return;\n+    }\n+\n+    private Object readResolve() throws ObjectStreamException {\n+        return null;\n+    }\n+\n+    \/\/ ineffective Externalizable methods\n+    @Override\n+    public void writeExternal(ObjectOutput oo) {\n+        ;\n+    }\n+\n+    @Override\n+    public void readExternal(ObjectInput oi) {\n+        ;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/warnings\/Serial\/EnumExtern.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,10 @@\n+EnumExtern.java:16:31: compiler.warn.ineffectual.serial.field.enum: serialVersionUID\n+EnumExtern.java:17:46: compiler.warn.ineffectual.serial.field.enum: serialPersistentFields\n+EnumExtern.java:19:18: compiler.warn.ineffectual.serial.method.enum: writeObject\n+EnumExtern.java:23:20: compiler.warn.ineffectual.serial.method.enum: writeReplace\n+EnumExtern.java:27:18: compiler.warn.ineffectual.serial.method.enum: readObject\n+EnumExtern.java:32:18: compiler.warn.ineffectual.serial.method.enum: readObjectNoData\n+EnumExtern.java:36:20: compiler.warn.ineffectual.serial.method.enum: readResolve\n+EnumExtern.java:42:17: compiler.warn.ineffectual.extern.method.enum: writeExternal\n+EnumExtern.java:47:17: compiler.warn.ineffectual.extern.method.enum: readExternal\n+9 warnings\n","filename":"test\/langtools\/tools\/javac\/warnings\/Serial\/EnumExtern.out","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/ref=empty.out -XDrawDiagnostics               EnumSerial.java\n+ * @compile\/ref=empty.out      -XDrawDiagnostics               EnumSerial.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/Serial\/EnumSerial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}