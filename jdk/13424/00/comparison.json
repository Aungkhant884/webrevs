{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,0 +100,1 @@\n+typedef void g_clear_error_func();\n@@ -107,0 +108,1 @@\n+static g_clear_error_func* g_clear_error = NULL;\n@@ -320,0 +322,2 @@\n+    g_clear_error = (g_clear_error_func*)dlsym(gio_handle, \"g_clear_error\");\n+\n@@ -326,1 +330,2 @@\n-        !g_strfreev)\n+        !g_strfreev ||\n+        !g_clear_error)\n@@ -415,0 +420,3 @@\n+                            } else {\n+                                proxy_array = NULL;\n+                                break;\n@@ -416,0 +424,3 @@\n+                        } else {\n+                            proxy_array = NULL;\n+                            break;\n@@ -435,0 +446,3 @@\n+         \/\/ as per API doc, g_clear_error doesn't complain if error is NULL, so it's safe to\n+         \/\/ call without null checks\n+        (*g_clear_error)(&error);\n","filename":"src\/java.base\/unix\/native\/libnet\/DefaultProxySelector.c","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+\/*\n+ * @test\n+ * @bug 8305529\n+ * @summary Verifies that the sun.net.spi.DefaultProxySelector#select(URI) doesn't return a List\n+ *          with null elements in it\n+ * @modules java.base\/sun.net.spi:+open\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.process.ProcessTools SystemProxyTest\n+ * @run driver SystemProxyDriver\n+ *\/\n+public class SystemProxyDriver {\n+    \/\/ launches the SystemProxyTest as a separate process and verifies that the test passes\n+    public static void main(final String[] args) throws Exception {\n+        final String[] commandArgs = new String[]{\n+                \"--add-opens\",\n+                \"java.base\/sun.net.spi=ALL-UNNAMED\",\n+                \/\/ trigger use of the http_proxy environment variable that we pass when launching\n+                \/\/ this Java program\n+                \"-Djava.net.useSystemProxies=true\",\n+                \"SystemProxyTest\"\n+        };\n+        final ProcessBuilder pb = ProcessTools.createTestJvm(commandArgs);\n+        pb.inheritIO();\n+        pb.environment().put(\"http_proxy\", \"foo:\/\/\"); \/\/ intentionally use a value without host\/port\n+        final Process p = pb.start();\n+        final int exitCode = p.waitFor();\n+        if (exitCode != 0) {\n+            throw new RuntimeException(\"Test failed, exitCode: \" + exitCode);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/net\/spi\/SystemProxyDriver.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.net.Proxy;\n+import java.net.ProxySelector;\n+import java.net.URI;\n+import java.util.List;\n+\n+import sun.net.spi.DefaultProxySelector;\n+\n+\/\/ this test is launched from SystemProxyDriver\n+public class SystemProxyTest {\n+\n+    \/\/ calls the DefaultProxySelector.select(URI) and verifies that the returned List is\n+    \/\/ not null, not empty and doesn't contain null elements.\n+    public static void main(final String[] args) throws Exception {\n+        final ProxySelector ps = new DefaultProxySelector();\n+        final URI uri = new URI(\"http:\/\/example.com\"); \/\/ the target URL doesn't matter\n+        final List<Proxy> proxies = ps.select(uri);\n+        if (proxies == null) {\n+            \/\/ null isn't expected to be returned by the select() API\n+            throw new AssertionError(\"DefaultProxySelector.select(URI) returned null for uri: \"\n+                    + uri);\n+        }\n+        if (proxies.isEmpty()) {\n+            \/\/ empty list isn't expected to be returned by the select() API, instead when\n+            \/\/ no proxy is configured, the returned list is expected to contain one entry with\n+            \/\/ a Proxy instance representing direct connection\n+            throw new AssertionError(\"DefaultProxySelector.select(URI) returned empty list\" +\n+                    \" for uri: \" + uri);\n+        }\n+        System.out.println(\"returned proxies list: \" + proxies);\n+        for (final Proxy p : proxies) {\n+            if (p == null) {\n+                throw new AssertionError(\"null proxy in proxies list for uri: \" + uri);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/net\/spi\/SystemProxyTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}