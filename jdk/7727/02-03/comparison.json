{"files":[{"patch":"@@ -78,1 +78,1 @@\n-  os::ThreadWXEnable wx(os::WXExec);\n+  os::current_thread_wx::Enable wx(os::current_thread_wx::Exec);\n","filename":"src\/hotspot\/cpu\/aarch64\/jniFastGetField_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-  os::ThreadWXEnable wx(os::WXWrite);\n+  os::current_thread_wx::Enable wx(os::current_thread_wx::Write);\n@@ -538,1 +538,3 @@\n-static THREAD_LOCAL os::WXMode _wx_state = os::WXUnknown;\n+\n+static THREAD_LOCAL os::current_thread_wx::WXMode _wx_state = os::current_thread_wx::Write;\n+\n@@ -544,4 +546,1 @@\n-os::WXMode os::current_thread_change_wx(WXMode new_state) {\n-  if (_wx_state == WXUnknown) {\n-    _wx_state = os::WXWrite; \/\/ No way to know but we assume the original state is \"writable, not executable\"\n-  }\n+os::current_thread_wx::WXMode os::current_thread_wx::change(WXMode new_state) {\n@@ -550,1 +549,1 @@\n-  pthread_jit_write_protect_np(_wx_state == os::WXExec);\n+  pthread_jit_write_protect_np(_wx_state == os::current_thread_wx::Exec);\n@@ -554,2 +553,2 @@\n-void os::current_thread_init_wx() {\n-  current_thread_change_wx(os::WXWrite);\n+void os::current_thread_wx::init() {\n+  change(os::current_thread_wx::Write);\n@@ -558,1 +557,1 @@\n-void os::current_thread_assert_wx_state(WXMode expected) {\n+void os::current_thread_wx::assert_wx(WXMode expected) {\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/os_bsd_aarch64.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -44,5 +44,0 @@\n-  enum WXMode {\n-    WXUnknown,\n-    WXWrite,\n-    WXExec\n-  };\n@@ -50,3 +45,2 @@\n-  \/\/ Enables write or execute access to writeable and executable pages.\n-  \/\/ returns the previous state\n-  static WXMode current_thread_change_wx(WXMode new_state);\n+  class current_thread_wx {\n+  public:\n@@ -54,2 +48,4 @@\n-  \/\/ initializes the WXMode to WXWrite, as writeable pages are the default here\n-  static void current_thread_init_wx();\n+    enum WXMode {\n+      Write,\n+      Exec\n+    };\n@@ -57,1 +53,3 @@\n-  static void current_thread_assert_wx_state(WXMode expected);\n+    \/\/ Enables write or execute access to writeable and executable pages.\n+    \/\/ returns the previous state\n+    static WXMode change(WXMode new_state);\n@@ -59,9 +57,17 @@\n-  class ThreadWXEnable  {\n-    WXMode _old_mode;\n-  public:\n-    ThreadWXEnable(WXMode new_mode) :\n-      _old_mode(os::current_thread_change_wx(new_mode))\n-    { }\n-    ~ThreadWXEnable() {\n-      os::current_thread_change_wx(_old_mode);\n-    }\n+    \/\/ initializes the WXMode to WXWrite, as writeable pages are the default here\n+    static void init();\n+\n+    static void assert_wx(WXMode expected);\n+\n+    \/\/ RAII object to set a specific WXMode and reset it to the previous mode\n+    \/\/ on destruction\n+    class Enable  {\n+      WXMode _old_mode;\n+    public:\n+      Enable(WXMode new_mode) :\n+        _old_mode(change(new_mode))\n+      { }\n+      ~Enable() {\n+        change(_old_mode);\n+      }\n+    };\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/os_bsd_aarch64.hpp","additions":26,"deletions":20,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -1270,1 +1270,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2883,1 +2883,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite);)\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write);)\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSetNMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite);)\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write);)\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSetNMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSetNMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -986,1 +986,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));               \\\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));               \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1466,1 +1466,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,0 @@\n-#include \"runtime\/thread.inline.hpp\"\n@@ -3660,1 +3659,1 @@\n-    MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXExec));\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Exec));\n@@ -3753,1 +3752,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Write));\n@@ -3810,1 +3809,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_init_wx());\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::init());\n@@ -3881,1 +3880,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXExec));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Exec));\n@@ -3934,1 +3933,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Write));\n@@ -3953,1 +3952,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXExec));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Exec));\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));                    \\\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));                    \\\n","filename":"src\/hotspot\/share\/prims\/jniCheck.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -438,1 +438,1 @@\n-    <xsl:text>MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));<\/xsl:text>\n+    <xsl:text>MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));<\/xsl:text>\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnter.xsl","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));\n@@ -3140,1 +3140,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));\n@@ -3174,1 +3174,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,2 +35,2 @@\n-  \/\/ We need os::WXExec because we are about to call a generated stub. Like in VM\n-  \/\/ entries, the thread state should be changed while we are still in os::WXWrite.\n+  \/\/ We need os::current_thread_wx::Exec because we are about to call a generated stub. Like in VM\n+  \/\/ entries, the thread state should be changed while we are still in os::current_thread_wx::Write.\n@@ -38,1 +38,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXExec));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Exec));\n","filename":"src\/hotspot\/share\/prims\/universalNativeInvoker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXExec));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Exec));\n@@ -116,1 +116,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Write));\n@@ -146,1 +146,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -385,1 +385,1 @@\n-      MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXExec));\n+      MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Exec));\n@@ -437,1 +437,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXExec));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Exec));\n@@ -444,1 +444,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXExec));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Exec));\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable _wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable _wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/prims\/whitebox.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2371,1 +2371,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));          \\\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));          \\\n@@ -281,1 +281,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));        \\\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));        \\\n@@ -309,1 +309,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));        \\\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));        \\\n@@ -319,1 +319,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));        \\\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));        \\\n@@ -356,1 +356,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));        \\\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));        \\\n@@ -381,1 +381,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite));        \\\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write));        \\\n@@ -391,1 +391,1 @@\n-    MACOS_AARCH64_ONLY(os::ThreadWXEnable __wx(os::WXWrite))         \\\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::Enable __wx(os::current_thread_wx::Write);)        \\\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXExec));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Exec));\n@@ -106,1 +106,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/runtime\/javaCalls.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"runtime\/stubRoutines.hpp\"\n@@ -32,0 +31,1 @@\n+#include \"runtime\/stubRoutines.hpp\"\n@@ -37,1 +37,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXExec);)\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Exec);)\n@@ -43,1 +43,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXExec);)\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Exec);)\n","filename":"src\/hotspot\/share\/runtime\/safefetch.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -759,1 +759,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXExec));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Exec));\n@@ -360,1 +360,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Write));\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -278,1 +278,1 @@\n-  MACOS_AARCH64_ONLY(DEBUG_ONLY(os::current_thread_init_wx();))\n+  MACOS_AARCH64_ONLY(DEBUG_ONLY(os::current_thread_wx::init();))\n@@ -340,1 +340,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_init_wx());\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::init());\n@@ -967,1 +967,1 @@\n-    os::current_thread_assert_wx_state(os::WXWrite);\n+    os::current_thread_wx::assert_wx(os::current_thread_wx::Write);\n@@ -1814,1 +1814,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n@@ -2681,1 +2681,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Write));\n@@ -2789,1 +2789,1 @@\n-  MACOS_AARCH64_ONLY(os::current_thread_init_wx());\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::init());\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-    MACOS_AARCH64_ONLY(os::current_thread_change_wx(os::WXWrite));\n+    MACOS_AARCH64_ONLY(os::current_thread_wx::change(os::current_thread_wx::Write));\n","filename":"test\/hotspot\/gtest\/gtestMain.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-  MACOS_AARCH64_ONLY(os::ThreadWXEnable wx(os::WXWrite));\n+  MACOS_AARCH64_ONLY(os::current_thread_wx::Enable wx(os::current_thread_wx::Write));\n","filename":"test\/hotspot\/gtest\/runtime\/test_threads.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}