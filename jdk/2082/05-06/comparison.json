{"files":[{"patch":"@@ -82,1 +82,1 @@\n-            this.eventfd = new EventFD();\n+            this.eventfd = new EventFD(false);\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-     * Creates a non-blocking eventfd object with initial value zero.\n+     * Creates a blocking eventfd object with initial value zero.\n@@ -41,1 +41,11 @@\n-        IOUtil.configureBlocking(IOUtil.newFD(efd), false);\n+    }\n+\n+    \/**\n+     * Creates an eventfd object with initial value zero and optional\n+     * blocking.\n+     *\n+     * @param blocking Whether the eventfd object is blocking\n+     *\/\n+    EventFD(boolean blocking) throws IOException {\n+        efd = eventfd0();\n+        IOUtil.configureBlocking(IOUtil.newFD(efd), blocking);\n@@ -60,1 +70,1 @@\n-    static native int eventfd0() throws IOException;\n+    static private native int eventfd0() throws IOException;\n@@ -69,1 +79,1 @@\n-    static native int set0(int efd) throws IOException;\n+    static private native int set0(int efd) throws IOException;\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EventFD.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"}]}