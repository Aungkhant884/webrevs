{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023 SAP SE. All rights reserved.\n@@ -140,1 +140,0 @@\n-  __ clear_mem(Address(Z_thread, JavaThread::exception_pc_offset()), sizeof(intptr_t));\n@@ -142,0 +141,1 @@\n+  NOT_PRODUCT(__ clear_mem(Address(Z_thread, JavaThread::exception_pc_offset()), sizeof(intptr_t)));\n","filename":"src\/hotspot\/cpu\/s390\/runtime_s390.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2016, 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2023 SAP SE. All rights reserved.\n@@ -1083,2 +1083,3 @@\n-  DEBUG_ONLY(__ z_cg(Z_R14, _z_abi16(return_pc), Z_SP));\n-  __ asm_assert_eq(\"killed Z_R14\", 0);\n+  \/\/ asm_assert* is a nop in product builds\n+  NOT_PRODUCT(__ z_cg(Z_R14, _z_abi16(return_pc), Z_SP));\n+  NOT_PRODUCT(__ asm_assert_eq(\"killed Z_R14\", 0));\n@@ -1354,1 +1355,0 @@\n-#ifdef ASSERT\n@@ -1356,2 +1356,1 @@\n-  __ save_return_pc(Z_R14);\n-#endif\n+  NOT_PRODUCT(__ save_return_pc(Z_R14));\n@@ -1722,1 +1721,0 @@\n-#ifdef ASSERT\n@@ -1724,2 +1722,1 @@\n-  __ save_return_pc(Z_R14);\n-#endif\n+  NOT_PRODUCT(__ save_return_pc(Z_R14));\n","filename":"src\/hotspot\/cpu\/s390\/templateInterpreterGenerator_s390.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"}]}