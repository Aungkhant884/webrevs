{"files":[{"patch":"@@ -229,1 +229,1 @@\n-  assert(*_lock >= 0, \"Can not content exclusive lock\");\n+  assert(Atomic::load(_lock) >= 0, \"Can not content exclusive lock\");\n@@ -235,1 +235,1 @@\n-  } while (Atomic::cmpxchg(_lock, val, target, memory_order_relaxed) != val);\n+  } while (Atomic::cmpxchg(_lock, val, target, memory_order_acquire) != val);\n@@ -238,1 +238,1 @@\n-  while (*_lock != _MAGIC_) {\n+  while (Atomic::load(_lock) != _MAGIC_) {\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-        Atomic::dec(_lock, memory_order_relaxed);\n+        Atomic::dec(_lock, memory_order_release);\n@@ -149,1 +149,1 @@\n-      jint res = Atomic::add(_lock, 1, memory_order_relaxed);\n+      jint res = Atomic::add(_lock, 1, memory_order_acquire);\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}