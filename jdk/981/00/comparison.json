{"files":[{"patch":"@@ -26,0 +26,1 @@\n+#include \"classfile\/systemDictionary.hpp\"\n@@ -78,0 +79,3 @@\n+    _string_klass_or_null(G1StringDedup::is_enabled()\n+                          ? SystemDictionary::String_klass()\n+                          : nullptr),\n@@ -82,0 +86,4 @@\n+  \/\/ Verify klass comparison with _string_klass_or_null is sufficient\n+  \/\/ to determine whether dedup is enabled and the object is a String.\n+  assert(SystemDictionary::String_klass()->is_final(), \"precondition\");\n+\n@@ -513,1 +521,1 @@\n-    if (G1StringDedup::is_enabled()) {\n+    if (klass == _string_klass_or_null) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+class Klass;\n@@ -86,0 +87,2 @@\n+  \/\/ Used to check whether string dedup should be applied to an object.\n+  Klass* _string_klass_or_null;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-  if (from_young && java_lang_String::is_instance_inlined(obj)) {\n+  if (from_young) {\n@@ -86,0 +86,1 @@\n+  assert(java_lang_String::is_instance(java_string), \"not a String\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1StringDedup.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -78,1 +78,2 @@\n-  static void enqueue_from_mark(oop java_string, uint worker_id);\n+  static void enqueue_from_mark(oop obj, uint worker_id);\n+  \/\/ precondition: java_string is a String.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1StringDedup.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}