{"files":[{"patch":"@@ -744,4 +744,5 @@\n- * The current thread waits on threadLock if the suspendCount of the given\n- * thread is greather than 0 but before it releases the handlerLock. This is\n- * necessary because threadControl_resumeThread() and threadControl_resumeAll()\n- * need it.\n+ * If the suspendCount of the given thread is greater than 0, then the\n+ * current thread will release the handlerLock and wait on the threadLock. It\n+ * must release the handlerLock first, because threadControl_resumeThread()\n+ * and threadControl_resumeAll() need it, and calling them is how suspendCount\n+ * will eventually be decremented to 0.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n-        System.out.println();\n@@ -81,1 +80,0 @@\n-        System.out.println();\n@@ -100,1 +98,0 @@\n-\n@@ -160,0 +157,3 @@\n+        mainThread.suspend();\n+        printStack(mainThread);\n+        mainThread.resume();\n@@ -165,1 +165,1 @@\n-        log(\"Sleeping 500ms shows that the main thread is blocked calling Thread.resume() on \\\"resumee\\\" Thread.\");\n+        log(\"Sleeping 500ms so that the main thread is blocked calling Thread.resume() on \\\"resumee\\\" Thread.\");\n@@ -168,0 +168,3 @@\n+        mainThread.suspend();\n+        printStack(mainThread);\n+        mainThread.resume();\n@@ -176,1 +179,1 @@\n-                \/\/ main thread should be still blocked.\n+                \/\/ main thread should still be blocked.\n@@ -198,1 +201,6 @@\n-            System.out.println(\"frame[\" + i++ +\"]: \" + ff.location().method() + \" (bci:\" + ff.location().codeIndex() + \")\");\n+            Location loc = ff.location();\n+            String locString = \"bci:\" + loc.codeIndex();\n+            try {\n+                locString = loc.sourceName() + \":\" + loc.lineNumber() + \",\" + locString;\n+            } catch (AbsentInformationException e) {\/* empty *\/};\n+            log(\"  frame[\" + i++ +\"]: \" + ff.location().method() + \" (\" + locString + \")\");\n@@ -220,1 +228,0 @@\n-        System.out.println();\n@@ -222,1 +229,0 @@\n-        System.out.println();\n","filename":"test\/jdk\/com\/sun\/jdi\/ResumeAfterThreadResumeCallTest.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"}]}