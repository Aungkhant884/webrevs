{"files":[{"patch":"@@ -6604,1 +6604,1 @@\n-    state = get_state_from_digest_object(digestBase_obj, \"[I\");\n+    state = get_state_from_digest_object(digestBase_obj, T_INT);\n@@ -6610,1 +6610,1 @@\n-    state = get_state_from_digest_object(digestBase_obj, \"[I\");\n+    state = get_state_from_digest_object(digestBase_obj, T_INT);\n@@ -6616,1 +6616,1 @@\n-    state = get_state_from_digest_object(digestBase_obj, \"[I\");\n+    state = get_state_from_digest_object(digestBase_obj, T_INT);\n@@ -6622,1 +6622,1 @@\n-    state = get_state_from_digest_object(digestBase_obj, \"[J\");\n+    state = get_state_from_digest_object(digestBase_obj, T_LONG);\n@@ -6628,1 +6628,1 @@\n-    state = get_state_from_digest_object(digestBase_obj, \"[B\");\n+    state = get_state_from_digest_object(digestBase_obj, T_BYTE);\n@@ -6692,1 +6692,1 @@\n-  const char* state_type = \"[I\";\n+  BasicType elem_type = T_INT;\n@@ -6721,1 +6721,1 @@\n-      state_type = \"[J\";\n+      elem_type = T_LONG;\n@@ -6729,1 +6729,1 @@\n-      state_type = \"[B\";\n+      elem_type = T_BYTE;\n@@ -6747,1 +6747,1 @@\n-    return inline_digestBase_implCompressMB(digestBase_obj, instklass_digestBase, state_type, stub_addr, stub_name, src_start, ofs, limit);\n+    return inline_digestBase_implCompressMB(digestBase_obj, instklass_digestBase, elem_type, stub_addr, stub_name, src_start, ofs, limit);\n@@ -6754,1 +6754,1 @@\n-                                                      const char* state_type, address stubAddr, const char *stubName,\n+                                                      BasicType elem_type, address stubAddr, const char *stubName,\n@@ -6761,1 +6761,1 @@\n-  Node* state = get_state_from_digest_object(digest_obj, state_type);\n+  Node* state = get_state_from_digest_object(digest_obj, elem_type);\n@@ -6921,1 +6921,8 @@\n-Node * LibraryCallKit::get_state_from_digest_object(Node *digest_object, const char *state_type) {\n+Node * LibraryCallKit::get_state_from_digest_object(Node *digest_object, BasicType elem_type) {\n+  const char* state_type;\n+  switch (elem_type) {\n+    case T_BYTE: state_type = \"[B\"; break;\n+    case T_INT:  state_type = \"[I\"; break;\n+    case T_LONG: state_type = \"[J\"; break;\n+    default: ShouldNotReachHere();\n+  }\n@@ -6927,1 +6934,1 @@\n-  Node* state = array_element_address(digest_state, intcon(0), T_INT);\n+  Node* state = array_element_address(digest_state, intcon(0), elem_type);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":20,"deletions":13,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-                                        const char* state_type, address stubAddr, const char *stubName,\n+                                        BasicType elem_type, address stubAddr, const char *stubName,\n@@ -287,1 +287,1 @@\n-  Node* get_state_from_digest_object(Node *digestBase_object, const char* state_type);\n+  Node* get_state_from_digest_object(Node *digestBase_object, BasicType elem_type);\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}