{"files":[{"patch":"@@ -117,1 +117,1 @@\n-    private final boolean bootClass;\n+    private final boolean isJDK;\n@@ -119,1 +119,1 @@\n-    EventInstrumentation(Class<?> superClass, byte[] bytes, long id, boolean bootClass, boolean guardEventConfiguration) {\n+    EventInstrumentation(Class<?> superClass, byte[] bytes, long id, boolean isJDK, boolean guardEventConfiguration) {\n@@ -127,1 +127,1 @@\n-        this.staticCommitMethod = bootClass ? findStaticCommitMethod(classNode, fieldInfos) : null;\n+        this.staticCommitMethod = isJDK ? findStaticCommitMethod(classNode, fieldInfos) : null;\n@@ -133,1 +133,1 @@\n-        this.bootClass = bootClass;\n+        this.isJDK = isJDK;\n@@ -341,1 +341,1 @@\n-        \/\/ MyEvent#isEnabbled()\n+        \/\/ MyEvent#isEnabled()\n@@ -662,2 +662,2 @@\n-        if (bootClass) {\n-            if (hasMethod(METHOD_ENABLED)) {\n+        if (isJDK) {\n+            if (hasStaticMethod(METHOD_ENABLED)) {\n@@ -666,1 +666,1 @@\n-            UpdateIfExists(METHOD_SHOULD_COMMIT_LONG, methodVisitor -> {\n+            updateIfStaticMethodExists(METHOD_SHOULD_COMMIT_LONG, methodVisitor -> {\n@@ -686,1 +686,1 @@\n-            UpdateIfExists(METHOD_TIME_STAMP, methodVisitor -> {\n+            updateIfStaticMethodExists(METHOD_TIME_STAMP, methodVisitor -> {\n@@ -716,2 +716,2 @@\n-    private void UpdateIfExists(Method method, Consumer<MethodVisitor> code) {\n-        if (hasMethod(method)) {\n+    private void updateIfStaticMethodExists(Method method, Consumer<MethodVisitor> code) {\n+        if (hasStaticMethod(method)) {\n@@ -722,1 +722,1 @@\n-    private boolean hasMethod(Method method) {\n+    private boolean hasStaticMethod(Method method) {\n@@ -725,1 +725,1 @@\n-                return true;\n+                return Modifier.isStatic(m.access);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventInstrumentation.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"}]}