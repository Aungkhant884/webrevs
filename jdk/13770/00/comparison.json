{"files":[{"patch":"@@ -742,0 +742,22 @@\n+     * @throws IllegalArgumentException if a member layouts in {@code elements} occurs at an offset (relative to the start\n+     * of the struct layout) which is not compatible with its alignment constraint.\n+     *\n+     * @apiNote This factory does not automatically align element layouts, by inserting additional {@linkplain PaddingLayout\n+     * padding layout} elements. As such, the following struct layout creation will fail with an exception:\n+     *\n+     * {@snippet lang = java:\n+     * structLayout(JAVA_SHORT, JAVA_INT)\n+     * }\n+     *\n+     * To avoid the exception, clients can either insert additional padding layout elements:\n+     *\n+     * {@snippet lang = java:\n+     * structLayout(JAVA_SHORT, MemoryLayout.ofPadding(16), JAVA_INT)\n+     * }\n+     *\n+     * Or, alternatively, they can use a member layout which features a smaller alignment constraint. This will result\n+     * in a <em>packed<\/em> struct layout:\n+     *\n+     * {@snippet lang = java:\n+     * structLayout(JAVA_SHORT, JAVA_INT.withBitAlignment(16))\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}