[{"commit":{"message":"More comments from Andrew."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"}],"sha":"43d7a5ee2260c3674904cc9a0611080099776db9"},{"commit":{"message":"Add missing part"},"files":[{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"c444dc5a667a28391d526d8e882b183ca5e0257a"},{"commit":{"message":"Address Andrew's comments"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"}],"sha":"241007734e954fabb99d2388a0f2637f40ba43f5"},{"commit":{"message":"8267356: AArch64: Vector API SVE codegen support\n\nThis is the integration of current SVE work done in\npanama-vector\/vectorIntrinscs, which includes:\n\n1. Code generation for Vector API c2 IR nodes with SVE.\n2. Non-max vector size support with SVE, e.g. using *128Vector APIs on\n   256-bit SVE environment could also generate optimized SVE\n   instructions with predicate feature.\n3. Some more SVE assemblers (and tests) used by the codegen part.\n\nNote: VectorMask<E> is still represented in vector register, a further\nimprovement to map mask to predicate register is under development at\nhttps:\/\/github.com\/openjdk\/panama-vector\/tree\/vectorIntrinsics+mask\n\nTest: tier1-3 with vector api test cases passed on 512-bit SVE hardware\nwith MaxVectorSize=16\/32\/64."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/share\/opto\/output.cpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"eaa19f03a9aa0f44dabd1fce65865a0afdd9d814"}]