[{"commit":{"message":"8267356: AArch64: Vector API SVE codegen support\n\nThis is the integration of current SVE work done in\npanama-vector\/vectorIntrinscs, which includes:\n\n1. Code generation for Vector API c2 IR nodes with SVE.\n2. Non-max vector size support with SVE, e.g. using *128Vector APIs on\n   256-bit SVE environment could also generate optimized SVE\n   instructions with predicate feature.\n3. Some more SVE assemblers (and tests) used by the codegen part.\n\nTest: tier1-3 with vector api test cases passed on 512-bit SVE hardware\nwith MaxVectorSize=16\/32\/64.\n\nNote: our original plan was making this part of JEP 414 Vector API\n(Second Incubator)[1], but we realized that it's now close to 17 release\ncycle and the JEP process may take time. Adding more features may delay\nthe whole review process for the JEP. So we separate this work out as a\nstandalone patch.\n\n[1] http:\/\/openjdk.java.net\/jeps\/414"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/share\/opto\/output.cpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"13e50f375d0bd592d3712e79fdb91ab52eb08c81"}]