{"files":[{"patch":"@@ -2054,1 +2054,1 @@\n-  class TraceSelfClosure : public AsyncHandshakeClosure {\n+  class TraceSelfClosure : public SelfExecutedHandshakeClosure {\n@@ -2069,1 +2069,1 @@\n-    TraceSelfClosure(JavaThread* self_target) : AsyncHandshakeClosure(\"WB_TraceSelf\"), _self(self_target) {}\n+    TraceSelfClosure(JavaThread* self_target) : SelfExecutedHandshakeClosure(\"WB_TraceSelf\"), _self(self_target) {}\n@@ -2075,1 +2075,1 @@\n-    Handshake::execute(tsc, target);\n+    Handshake::enqueue(tsc, target);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+  bool self_executed()             { return _handshake_cl->self_executed(); }\n@@ -336,0 +337,1 @@\n+  assert(!hs_cl->is_async(), \"invariant\");\n@@ -342,0 +344,1 @@\n+  assert(!hs_cl->is_async(), \"invariant\");\n@@ -391,1 +394,1 @@\n-void Handshake::execute(AsyncHandshakeClosure* hs_cl, JavaThread* target) {\n+void Handshake::enqueue(AsyncHandshakeClosure* hs_cl, JavaThread* target) {\n@@ -441,1 +444,1 @@\n-  return !op->is_async();\n+  return !op->self_executed();\n@@ -590,0 +593,4 @@\n+      if (op->is_async()) {\n+        delete op;\n+      }\n+\n@@ -628,1 +635,1 @@\n-class ThreadSelfSuspensionHandshake : public AsyncHandshakeClosure {\n+class ThreadSelfSuspensionHandshake : public SelfExecutedHandshakeClosure {\n@@ -630,1 +637,1 @@\n-  ThreadSelfSuspensionHandshake() : AsyncHandshakeClosure(\"ThreadSelfSuspensionHandshake\") {}\n+  ThreadSelfSuspensionHandshake() : SelfExecutedHandshakeClosure(\"ThreadSelfSuspensionHandshake\") {}\n@@ -665,1 +672,1 @@\n-  Handshake::execute(ts, _handshakee);\n+  Handshake::enqueue(ts, _handshakee);\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+  virtual bool self_executed()                     { return false; }\n@@ -56,3 +57,12 @@\n-   AsyncHandshakeClosure(const char* name) : HandshakeClosure(name) {}\n-   virtual ~AsyncHandshakeClosure() {}\n-   virtual bool is_async()          { return true; }\n+  AsyncHandshakeClosure(const char* name) : HandshakeClosure(name) {}\n+  virtual ~AsyncHandshakeClosure() {}\n+  virtual bool is_async()          { return true; }\n+};\n+\n+\/\/ A handshake closure that must be executed by the target JavaThread\n+\/\/ itself. It cannot be executed by the initiating thread or the VMThread.\n+class SelfExecutedHandshakeClosure : public AsyncHandshakeClosure {\n+ public:\n+  SelfExecutedHandshakeClosure(const char* name) : AsyncHandshakeClosure(name) {}\n+  virtual ~SelfExecutedHandshakeClosure() {}\n+  virtual bool self_executed()            { return true; }\n@@ -66,1 +76,1 @@\n-  static void execute(AsyncHandshakeClosure*  hs_cl, JavaThread* target);\n+  static void enqueue(AsyncHandshakeClosure*  hs_cl, JavaThread* target);\n","filename":"src\/hotspot\/share\/runtime\/handshake.hpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"}]}