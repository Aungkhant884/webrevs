{"files":[{"patch":"@@ -72,1 +72,1 @@\n-  assert(is_aligned(bytes), \"arg not aligned\");\n+  assert(is_aligned(bytes, _alignment), \"arg not aligned\");\n@@ -90,1 +90,1 @@\n-  assert(is_aligned(bytes), \"arg not aligned\");\n+  assert(is_aligned(bytes, _alignment), \"arg not aligned\");\n@@ -107,8 +107,0 @@\n-bool PSVirtualSpace::is_aligned(size_t value) const {\n-  return ::is_aligned(value, alignment());\n-}\n-\n-bool PSVirtualSpace::is_aligned(char* value) const {\n-  return is_aligned((size_t)value);\n-}\n-\n@@ -116,5 +108,5 @@\n-  assert(::is_aligned(alignment(), os::vm_page_size()), \"bad alignment\");\n-  assert(is_aligned(reserved_low_addr()), \"bad reserved_low_addr\");\n-  assert(is_aligned(reserved_high_addr()), \"bad reserved_high_addr\");\n-  assert(is_aligned(committed_low_addr()), \"bad committed_low_addr\");\n-  assert(is_aligned(committed_high_addr()), \"bad committed_high_addr\");\n+  assert(is_aligned(alignment(), os::vm_page_size()), \"bad alignment\");\n+  assert(is_aligned(reserved_low_addr(), _alignment), \"bad reserved_low_addr\");\n+  assert(is_aligned(reserved_high_addr(), _alignment), \"bad reserved_high_addr\");\n+  assert(is_aligned(committed_low_addr(), _alignment), \"bad committed_low_addr\");\n+  assert(is_aligned(committed_high_addr(), _alignment), \"bad committed_high_addr\");\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.cpp","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -97,2 +97,0 @@\n-  bool is_aligned(size_t val) const;\n-  bool is_aligned(char* val) const;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}