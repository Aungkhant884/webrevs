{"files":[{"patch":"@@ -29,0 +29,1 @@\n+#include \"utilities\/align.hpp\"\n@@ -106,6 +107,0 @@\n-bool PSVirtualSpace::is_aligned(size_t value, size_t align) {\n-  const size_t tmp_value = value + align - 1;\n-  const size_t mask = ~(align - 1);\n-  return (tmp_value & mask) == value;\n-}\n-\n@@ -113,1 +108,1 @@\n-  return is_aligned(value, alignment());\n+  return ::is_aligned(value, alignment());\n@@ -121,1 +116,1 @@\n-  assert(is_aligned(alignment(), os::vm_page_size()), \"bad alignment\");\n+  assert(::is_aligned(alignment(), os::vm_page_size()), \"bad alignment\");\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- protected:\n+\n@@ -97,4 +97,3 @@\n-  static  bool is_aligned(size_t val, size_t align);\n-          bool is_aligned(size_t val) const;\n-          bool is_aligned(char* val) const;\n-          void verify() const;\n+  bool is_aligned(size_t val) const;\n+  bool is_aligned(char* val) const;\n+  void verify() const;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.hpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}