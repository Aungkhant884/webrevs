{"files":[{"patch":"@@ -29,0 +29,1 @@\n+#include \"utilities\/align.hpp\"\n@@ -71,1 +72,1 @@\n-  assert(is_aligned(bytes), \"arg not aligned\");\n+  assert(is_aligned(bytes, _alignment), \"arg not aligned\");\n@@ -89,1 +90,1 @@\n-  assert(is_aligned(bytes), \"arg not aligned\");\n+  assert(is_aligned(bytes, _alignment), \"arg not aligned\");\n@@ -106,14 +107,0 @@\n-bool PSVirtualSpace::is_aligned(size_t value, size_t align) {\n-  const size_t tmp_value = value + align - 1;\n-  const size_t mask = ~(align - 1);\n-  return (tmp_value & mask) == value;\n-}\n-\n-bool PSVirtualSpace::is_aligned(size_t value) const {\n-  return is_aligned(value, alignment());\n-}\n-\n-bool PSVirtualSpace::is_aligned(char* value) const {\n-  return is_aligned((size_t)value);\n-}\n-\n@@ -122,4 +109,4 @@\n-  assert(is_aligned(reserved_low_addr()), \"bad reserved_low_addr\");\n-  assert(is_aligned(reserved_high_addr()), \"bad reserved_high_addr\");\n-  assert(is_aligned(committed_low_addr()), \"bad committed_low_addr\");\n-  assert(is_aligned(committed_high_addr()), \"bad committed_high_addr\");\n+  assert(is_aligned(reserved_low_addr(), _alignment), \"bad reserved_low_addr\");\n+  assert(is_aligned(reserved_high_addr(), _alignment), \"bad reserved_high_addr\");\n+  assert(is_aligned(committed_low_addr(), _alignment), \"bad committed_low_addr\");\n+  assert(is_aligned(committed_high_addr(), _alignment), \"bad committed_high_addr\");\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.cpp","additions":7,"deletions":20,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- protected:\n+\n@@ -97,4 +97,1 @@\n-  static  bool is_aligned(size_t val, size_t align);\n-          bool is_aligned(size_t val) const;\n-          bool is_aligned(char* val) const;\n-          void verify() const;\n+  void verify() const;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}