{"files":[{"patch":"@@ -70,0 +70,2 @@\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n@@ -852,1 +854,1 @@\n-                e.setTime(getSourceDate());\n+                setSourceDate(e);\n@@ -857,1 +859,1 @@\n-                e.setTime(getSourceDate());\n+                setSourceDate(e);\n@@ -957,1 +959,1 @@\n-                    e2.setTime(getSourceDate(e.getTime()));\n+                    setSourceDate(e2, e.getTime());\n@@ -1023,1 +1025,1 @@\n-        e.setTime(getSourceDate());\n+        setSourceDate(e);\n@@ -1042,1 +1044,1 @@\n-            e.setTime(getSourceDate());\n+            setSourceDate(e);\n@@ -1067,1 +1069,1 @@\n-        e.setTime(getSourceDate());\n+        setSourceDate(e);\n@@ -1188,1 +1190,1 @@\n-        e.setTime(getSourceDate(file.lastModified()));\n+        setSourceDate(e, file.lastModified());\n@@ -2267,3 +2269,3 @@\n-    \/\/ Return sourceDate if specified othewise the current time\n-    private long getSourceDate() {\n-        return getSourceDate(System.currentTimeMillis());\n+    \/\/ Set the ZipEntry dostime using sourceDate if specified otherwise the current time\n+    private void setSourceDate(ZipEntry e) {\n+        setSourceDate(e, System.currentTimeMillis());\n@@ -2272,2 +2274,3 @@\n-    \/\/ Return the sourceDate if specified otherwise the original time\n-    private long getSourceDate(long origTime) {\n+    \/\/ Set the ZipEntry dostime using the sourceDate if specified\n+    \/\/ otherwise the original time\n+    private void setSourceDate(ZipEntry e, long origTime) {\n@@ -2275,1 +2278,1 @@\n-          return sourceDate;\n+          e.setTimeLocal(LocalDateTime.ofEpochSecond(sourceDate, 0, ZoneOffset.UTC));\n@@ -2277,1 +2280,1 @@\n-          return origTime;\n+          e.setTime(origTime); \n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Main.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -296,1 +296,1 @@\n-\\      --source-date=TIMESTAMP    The epoch timestamp in milliseconds to use\\n\\\n+\\      --source-date=TIMESTAMP    The epoch timestamp in seconds to use\\n\\\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-The timestamp in milliseconds since the epoch to use for all created\n+The timestamp in seconds since the epoch to use for all created\n","filename":"src\/jdk.jartool\/share\/man\/jar.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n@@ -110,1 +112,1 @@\n-            e2.setTime(sourceDate);\n+            e2.setTimeLocal(LocalDateTime.ofEpochSecond(sourceDate, 0, ZoneOffset.UTC));\n@@ -135,1 +137,1 @@\n-            zipEntry.setTime(sourceDate);\n+            zipEntry.setTimeLocal(LocalDateTime.ofEpochSecond(sourceDate, 0, ZoneOffset.UTC));\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/JmodOutputStream.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -65,0 +65,2 @@\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n@@ -978,1 +980,1 @@\n-                                ze.setTime(options.sourceDate);\n+                                ze.setTimeLocal(LocalDateTime.ofEpochSecond(options.sourceDate, 0, ZoneOffset.UTC));\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/JmodTask.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-main.opt.source-date=Epoch source date to timestamp entries with in milliseconds\n+main.opt.source-date=Epoch source date to timestamp entries with in seconds\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/resources\/jmod.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-The timestamp in milliseconds since the epoch to use for all created\n+The timestamp in seconds since the epoch to use for all created\n","filename":"src\/jdk.jlink\/share\/man\/jmod.1","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,2 +128,2 @@\n-        \/\/ --source-date set to 1647302400000 (15\/03\/2022)\n-        long sourceDate = 1647302400000L;\n+        \/\/ --source-date set to epoch seconds 1647302400 (15\/03\/2022)\n+        long sourceDate = 1647302400L;\n@@ -181,3 +181,3 @@\n-        checkFileTime(dirOuter.lastModified(), sourceDate);\n-        checkFileTime(dirInner.lastModified(), sourceDate);\n-        checkFileTime(fileInner.lastModified(), sourceDate);\n+        checkFileTime(dirOuter.lastModified(), sourceDate * 1000);\n+        checkFileTime(dirInner.lastModified(), sourceDate * 1000);\n+        checkFileTime(fileInner.lastModified(), sourceDate * 1000);\n","filename":"test\/jdk\/tools\/jar\/JarEntryTime.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -213,2 +213,2 @@\n-        \/\/ Use source date of 15\/03\/2022\n-        long sourceDate = 1647302400000L;\n+        \/\/ Use source date of epoch seconds 15\/03\/2022\n+        long sourceDate = 1647302400L;\n","filename":"test\/jdk\/tools\/jmod\/JmodTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}