{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,18 +152,1 @@\n-        return javaToExtendedDosTime(time, null);\n-    }\n-\n-    static LocalDateTime javaEpochToLocalDateTime(long time) {\n-        return javaEpochToLocalDateTime(time, null);\n-    }\n-\n-    \/**\n-     * Converts Java time to DOS time using specified time-zone,\n-     * encoding any milliseconds lost in the conversion into the\n-     * upper half of the returned long.\n-     *\n-     * @param time milliseconds since epoch\n-     * @param zoneId time-zone to convert from UTC value into local time.\n-     * @return DOS time with 2s remainder encoded into upper half\n-     *\/\n-    static long javaToExtendedDosTime(long time, ZoneId zoneId) {\n-        LocalDateTime ldt = javaEpochToLocalDateTime(time, zoneId);\n+        LocalDateTime ldt = javaEpochToLocalDateTime(time);\n@@ -176,1 +159,1 @@\n-    static LocalDateTime javaEpochToLocalDateTime(long time, ZoneId zoneId) {\n+    static LocalDateTime javaEpochToLocalDateTime(long time) {\n@@ -178,1 +161,1 @@\n-        return LocalDateTime.ofInstant(instant, zoneId == null ? ZoneId.systemDefault() : zoneId);\n+        return LocalDateTime.ofInstant(instant, ZoneId.systemDefault());\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipUtils.java","additions":4,"deletions":21,"binary":false,"changes":25,"status":"modified"}]}