{"files":[{"patch":"@@ -39,1 +39,1 @@\n-  uint i = _num_regions;\n+  uint regions_left = _num_regions;\n@@ -41,2 +41,3 @@\n-  while (i > keep_min_regions && (at(i - 1)->reclaimable_bytes() + reclaimed_bytes) <= prune_total_bytes) {\n-    uint cur_idx = i - 1;\n+  while (regions_left > keep_min_regions &&\n+         (at(regions_left - 1)->reclaimable_bytes() + reclaimed_bytes) <= prune_total_bytes) {\n+    uint cur_idx = regions_left - 1;\n@@ -48,1 +49,1 @@\n-    i--;\n+    regions_left--;\n@@ -51,1 +52,1 @@\n-  _num_regions -= _num_regions - i;\n+  _num_regions = regions_left;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -78,2 +78,2 @@\n-  \/\/ bytes and keeping at least keep_min_regions beginning the least efficient\n-  \/\/ collection set candidates regions.\n+  \/\/ bytes and keeping at least keep_min_regions. Removes the least efficient\n+  \/\/ collection set candidate regions first.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}