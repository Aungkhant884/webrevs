{"files":[{"patch":"@@ -38,1 +38,1 @@\n-void G1CollectionSetCandidates::remove_from_end(uint num_remove) {\n+void G1CollectionSetCandidates::remove_from_end(uint num_remove, size_t wasted) {\n@@ -41,0 +41,1 @@\n+#ifdef ASSERT\n@@ -49,0 +50,3 @@\n+\n+  assert(reclaimable == wasted, \"Recalculated reclaimable inconsistent\");\n+#endif\n@@ -50,1 +54,1 @@\n-  _remaining_reclaimable_bytes -= reclaimable;\n+  _remaining_reclaimable_bytes -= wasted;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-  void remove_from_end(uint num_remove);\n+  void remove_from_end(uint num_remove, size_t wasted);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -276,0 +276,1 @@\n+    size_t const reclaimable = r->reclaimable_bytes();\n@@ -277,1 +278,1 @@\n-        _cur_wasted + r->reclaimable_bytes() > _max_wasted) {\n+        _cur_wasted + reclaimable > _max_wasted) {\n@@ -281,1 +282,1 @@\n-    _cur_wasted += r->reclaimable_bytes();\n+    _cur_wasted += reclaimable;\n@@ -309,1 +310,1 @@\n-    candidates->remove_from_end(prune_cl.num_pruned());\n+    candidates->remove_from_end(prune_cl.num_pruned(), prune_cl.wasted());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}