{"files":[{"patch":"@@ -28,2 +28,9 @@\n-import java.nio.file.*;\n-import java.nio.file.attribute.*;\n+import java.nio.file.FileStore;\n+import java.nio.file.FileSystemException;\n+import java.nio.file.attribute.AclFileAttributeView;\n+import java.nio.file.attribute.BasicFileAttributeView;\n+import java.nio.file.attribute.DosFileAttributeView;\n+import java.nio.file.attribute.FileAttributeView;\n+import java.nio.file.attribute.FileOwnerAttributeView;\n+import java.nio.file.attribute.FileStoreAttributeView;\n+import java.nio.file.attribute.UserDefinedFileAttributeView;\n@@ -31,0 +38,1 @@\n+import java.util.Locale;\n@@ -47,0 +55,3 @@\n+    private boolean hasHashCode = false; \/\/ as hashCode can be any int\n+    private int hashCode;\n+\n@@ -224,2 +235,1 @@\n-            return supportsFileAttributeView(UserDefinedFileAttributeView.class);\n-        return false;\n+            return supportsFileAttributeView(UserDefinedFileAttributeView.class); return false;\n@@ -237,6 +247,2 @@\n-        if (root.equalsIgnoreCase(other.root)) {\n-             VolumeInformation otherInfo = other.volumeInformation();\n-            return volInfo.volumeName().equals(otherInfo.volumeName()) &&\n-                volInfo.fileSystemName().equals(otherInfo.fileSystemName()) &&\n-                volInfo.volumeSerialNumber() == otherInfo.volumeSerialNumber();\n-        }\n+        if (volType == DRIVE_FIXED && other.volumeType() == DRIVE_FIXED)\n+            return root.equalsIgnoreCase(other.root);\n@@ -248,1 +254,6 @@\n-        return root.hashCode();\n+        if (!hasHashCode) { \/\/ Don't care about race\n+            hashCode = volType == DRIVE_FIXED ?\n+                root.toLowerCase(Locale.ROOT).hashCode() : root.hashCode();\n+            hasHashCode = true;\n+        }\n+        return hashCode;\n@@ -262,1 +273,1 @@\n- }\n+}\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsFileStore.java","additions":23,"deletions":12,"binary":false,"changes":35,"status":"modified"}]}