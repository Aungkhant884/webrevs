{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -235,1 +235,9 @@\n-        return root.equals(other.root);\n+        if (root.equals(other.root))\n+            return true;\n+        if (root.equalsIgnoreCase(other.root)) {\n+             VolumeInformation otherInfo = other.volumeInformation();\n+            return volInfo.volumeName().equals(otherInfo.volumeName()) &&\n+                volInfo.fileSystemName().equals(otherInfo.fileSystemName()) &&\n+                volInfo.volumeSerialNumber() == otherInfo.volumeSerialNumber();\n+        }\n+        return false;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsFileStore.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 4313887 6873621 6979526 7006126 7020517\n+ * @bug 4313887 6873621 6979526 7006126 7020517 8264400\n@@ -39,0 +39,1 @@\n+import jdk.test.lib.Platform;\n@@ -41,1 +42,0 @@\n-\n@@ -83,0 +83,10 @@\n+        if (Platform.isWindows()) {\n+            \/**\n+             * Test: FileStore.equals() should not be case sensitive\n+             *\/\n+            FileSystem fs = FileSystems.getDefault();\n+            FileStore upper = Files.getFileStore(fs.getPath(\"C:\\\\\"));\n+            FileStore lower = Files.getFileStore(fs.getPath(\"c:\\\\\"));\n+            assertTrue(lower.equals(upper));\n+        }\n+\n","filename":"test\/jdk\/java\/nio\/file\/FileStore\/Basic.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}