{"files":[{"patch":"@@ -183,1 +183,1 @@\n-        mdAlgId.derEncode(tmp2);\n+        mdAlgId.encode(tmp2);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/OAEPParameters.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -785,1 +785,1 @@\n-            digAlgID.derEncode(derAlgs);\n+            digAlgID.encode(derAlgs);\n@@ -787,1 +787,1 @@\n-            sigAlgID.derEncode(derSigAlg);\n+            sigAlgID.encode(derSigAlg);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS7.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -527,1 +527,1 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -211,5 +211,0 @@\n-    public void encode(DerOutputStream out) throws IOException {\n-\n-        derEncode(out);\n-    }\n-\n@@ -225,1 +220,2 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -110,1 +110,2 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -112,1 +113,1 @@\n-        attr.derEncode(out);\n+        attr.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attribute.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -90,10 +90,0 @@\n-    \/**\n-     * Encode the attributes in DER form to the stream.\n-     *\n-     * @param out the OutputStream to marshal the contents to.\n-     * @exception IOException on encoding errors.\n-     *\/\n-    public void encode(DerOutputStream out) throws IOException {\n-        derEncode(out);\n-    }\n-\n@@ -107,1 +97,2 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attributes.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -242,1 +242,1 @@\n-            mdAlgId.derEncode(tmp2);\n+            mdAlgId.encode(tmp2);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/PSSParameters.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    void derEncode(DerOutputStream out)\n+    void encode(DerOutputStream out)\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerEncoder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -407,1 +407,1 @@\n-            set[i].derEncode(streams[i]);\n+            set[i].encode(streams[i]);\n@@ -585,1 +585,2 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -595,1 +596,1 @@\n-        encoder.derEncode(this);\n+        encoder.encode(this);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerOutputStream.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -619,7 +619,0 @@\n-    \/*\n-     * AVAs are encoded as a SEQUENCE of two elements.\n-     *\/\n-    public void encode(DerOutputStream out) throws IOException {\n-        derEncode(out);\n-    }\n-\n@@ -635,1 +628,2 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -150,7 +150,0 @@\n-    \/**\n-     * Marshal a DER-encoded \"AlgorithmID\" sequence on the DER stream.\n-     *\/\n-    public final void encode(DerOutputStream out) throws IOException {\n-        derEncode(out);\n-    }\n-\n@@ -167,1 +160,1 @@\n-    public void derEncode (DerOutputStream out) throws IOException {\n+    public void encode (DerOutputStream out) throws IOException {\n@@ -245,1 +238,1 @@\n-        derEncode(out);\n+        encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n- * @see CertAttrSet\n@@ -65,2 +64,1 @@\n-public class AuthorityInfoAccessExtension extends Extension\n-        implements CertAttrSet {\n+public class AuthorityInfoAccessExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityInfoAccessExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,0 @@\n- * @see CertAttrSet\n@@ -55,2 +54,1 @@\n-public class AuthorityKeyIdentifierExtension extends Extension\n-        implements CertAttrSet {\n+public class AuthorityKeyIdentifierExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityKeyIdentifierExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n- * @see CertAttrSet\n@@ -51,2 +50,1 @@\n-public class BasicConstraintsExtension extends Extension\n-        implements CertAttrSet {\n+public class BasicConstraintsExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/BasicConstraintsExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n- * @see CertAttrSet\n@@ -81,2 +80,1 @@\n-public class CRLDistributionPointsExtension extends Extension\n-        implements CertAttrSet {\n+public class CRLDistributionPointsExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLDistributionPointsExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n- * @see CertAttrSet\n@@ -46,2 +45,1 @@\n-public class CRLNumberExtension extends Extension\n-        implements CertAttrSet {\n+public class CRLNumberExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLNumberExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n- * @see CertAttrSet\n@@ -41,2 +40,1 @@\n-public class CRLReasonCodeExtension extends Extension\n-        implements CertAttrSet {\n+public class CRLReasonCodeExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLReasonCodeExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.security.x509;\n-\n-import sun.security.util.DerOutputStream;\n-\n-import java.io.IOException;\n-\n-\/**\n- * This interface defines a certificate attribute that can be DER-encoded.\n- *\/\n-public interface CertAttrSet {\n-\n-    \/**\n-     * Encodes the attribute to the output stream.\n-     *\n-     * @param out the DerOutputStream to encode the attribute to.\n-     * @exception IOException on write errors.\n-     *\/\n-    void encode(DerOutputStream out) throws IOException;\n-}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertAttrSet.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -39,1 +39,1 @@\n-public class CertificateAlgorithmId implements CertAttrSet {\n+public class CertificateAlgorithmId implements DerEncoder {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateAlgorithmId.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @see CertAttrSet\n+ * @see DerEncoder\n@@ -43,1 +43,1 @@\n-public class CertificateExtensions implements CertAttrSet {\n+public class CertificateExtensions implements DerEncoder {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n- * @see CertAttrSet\n@@ -61,2 +60,1 @@\n-public class CertificateIssuerExtension extends Extension\n-        implements CertAttrSet {\n+public class CertificateIssuerExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateIssuerExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n- * @see CertAttrSet\n@@ -68,2 +67,1 @@\n-public class CertificatePoliciesExtension extends Extension\n-        implements CertAttrSet {\n+public class CertificatePoliciesExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePoliciesExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @see CertAttrSet\n+ * @see DerEncoder\n@@ -41,1 +41,1 @@\n-public class CertificateSerialNumber implements CertAttrSet {\n+public class CertificateSerialNumber implements DerEncoder {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateSerialNumber.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @see CertAttrSet\n+ * @see DerEncoder\n@@ -42,1 +42,1 @@\n-public class CertificateSubjectName implements CertAttrSet {\n+public class CertificateSubjectName implements DerEncoder {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateSubjectName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @see CertAttrSet\n+ * @see DerEncoder\n@@ -40,1 +40,1 @@\n-public class CertificateValidity implements CertAttrSet {\n+public class CertificateValidity implements DerEncoder {\n@@ -145,1 +145,1 @@\n-            throw new IOException(\"CertAttrSet:CertificateValidity:\" +\n+            throw new IOException(\"CertificateValidity:\" +\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateValidity.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @see CertAttrSet\n+ * @see DerEncoder\n@@ -40,1 +40,1 @@\n-public class CertificateVersion implements CertAttrSet {\n+public class CertificateVersion implements DerEncoder {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateVersion.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @see CertAttrSet\n+ * @see DerEncoder\n@@ -41,1 +41,1 @@\n-public class CertificateX509Key implements CertAttrSet {\n+public class CertificateX509Key implements DerEncoder {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateX509Key.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,2 +79,1 @@\n-public class ExtendedKeyUsageExtension extends Extension\n-        implements CertAttrSet {\n+public class ExtendedKeyUsageExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/ExtendedKeyUsageExtension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-public class Extension implements java.security.cert.Extension {\n+public class Extension implements java.security.cert.Extension, DerEncoder {\n@@ -172,0 +172,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/Extension.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n- * @see CertAttrSet\n@@ -59,2 +58,1 @@\n-public class InhibitAnyPolicyExtension extends Extension\n-        implements CertAttrSet {\n+public class InhibitAnyPolicyExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InhibitAnyPolicyExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,2 +58,1 @@\n-public class InvalidityDateExtension extends Extension\n-        implements CertAttrSet {\n+public class InvalidityDateExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InvalidityDateExtension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n- * @see CertAttrSet\n@@ -48,2 +47,1 @@\n-public class IssuerAlternativeNameExtension\n-        extends Extension implements CertAttrSet {\n+public class IssuerAlternativeNameExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuerAlternativeNameExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,2 +66,1 @@\n-public class IssuingDistributionPointExtension extends Extension\n-        implements CertAttrSet {\n+public class IssuingDistributionPointExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuingDistributionPointExtension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n- * @see CertAttrSet\n@@ -46,2 +45,1 @@\n-public class KeyUsageExtension extends Extension\n-        implements CertAttrSet {\n+public class KeyUsageExtension extends Extension {\n@@ -199,1 +197,1 @@\n-                                + \" CertAttrSet:KeyUsage.\");\n+                                + \" KeyUsage.\");\n@@ -228,1 +226,1 @@\n-                                + \" CertAttrSet:KeyUsage.\");\n+                                + \" KeyUsage.\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/KeyUsageExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n- * @see CertAttrSet\n@@ -63,1 +62,1 @@\n-        implements CertAttrSet, Cloneable {\n+        implements Cloneable {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NameConstraintsExtension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n- * @see CertAttrSet\n@@ -50,2 +49,1 @@\n-public class NetscapeCertTypeExtension extends Extension\n-        implements CertAttrSet {\n+public class NetscapeCertTypeExtension extends Extension {\n@@ -104,1 +102,1 @@\n-                             + \"] not recognized by CertAttrSet:NetscapeCertType.\");\n+                             + \"] not recognized by NetscapeCertType.\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NetscapeCertTypeExtension.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n- * @see CertAttrSet\n@@ -50,2 +49,1 @@\n-public class OCSPNoCheckExtension extends Extension\n-        implements CertAttrSet {\n+public class OCSPNoCheckExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OCSPNoCheckExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,0 @@\n- * @see CertAttrSet\n@@ -55,2 +54,1 @@\n-public class PolicyConstraintsExtension extends Extension\n-        implements CertAttrSet {\n+public class PolicyConstraintsExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyConstraintsExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n- * @see CertAttrSet\n@@ -52,2 +51,1 @@\n-public class PolicyMappingsExtension extends Extension\n-        implements CertAttrSet {\n+public class PolicyMappingsExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyMappingsExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n- * @see CertAttrSet\n@@ -60,2 +59,1 @@\n-public class PrivateKeyUsageExtension extends Extension\n-        implements CertAttrSet {\n+public class PrivateKeyUsageExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PrivateKeyUsageExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n- * @see CertAttrSet\n@@ -53,2 +52,1 @@\n-public class SubjectAlternativeNameExtension extends Extension\n-        implements CertAttrSet {\n+public class SubjectAlternativeNameExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectAlternativeNameExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n- * @see CertAttrSet\n@@ -69,2 +68,1 @@\n-public class SubjectInfoAccessExtension extends Extension\n-        implements CertAttrSet {\n+public class SubjectInfoAccessExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectInfoAccessExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n- * @see CertAttrSet\n@@ -53,2 +52,1 @@\n-public class SubjectKeyIdentifierExtension extends Extension\n-        implements CertAttrSet {\n+public class SubjectKeyIdentifierExtension extends Extension {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectKeyIdentifierExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1238,1 +1238,1 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.io.OutputStream;\n@@ -269,18 +268,0 @@\n-    \/**\n-     * Appends the certificate to an output stream.\n-     *\n-     * @param out an input stream to which the certificate is appended.\n-     * @exception CertificateEncodingException on encoding errors.\n-     *\/\n-    public void encode(OutputStream out)\n-    throws CertificateEncodingException {\n-        if (signedCert == null)\n-            throw new CertificateEncodingException(\n-                          \"Null certificate to encode\");\n-        try {\n-            out.write(signedCert.clone());\n-        } catch (IOException e) {\n-            throw new CertificateEncodingException(e.toString());\n-        }\n-    }\n-\n@@ -295,1 +276,2 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":2,"deletions":20,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * @see CertAttrSet\n+ * @see DerEncoder\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -413,1 +413,1 @@\n-        signAlg.derEncode(topLevelItems);\n+        signAlg.encode(topLevelItems);\n@@ -462,1 +462,1 @@\n-        signAlg.derEncode(tbsCertItems);\n+        signAlg.encode(tbsCertItems);\n","filename":"test\/jdk\/java\/security\/testlibrary\/CertificateBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1357,1 +1357,1 @@\n-                sigAlgId.derEncode(basicORItemStream);\n+                sigAlgId.encode(basicORItemStream);\n","filename":"test\/jdk\/java\/security\/testlibrary\/SimpleOCSPServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-        signerInfo.derEncode(strm);\n+        signerInfo.encode(strm);\n@@ -129,1 +129,1 @@\n-            signerInfos[i].derEncode(strm);\n+            signerInfos[i].encode(strm);\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs7\/SignerOrder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        p2.derEncode(dout);\n+        p2.encode(dout);\n@@ -79,1 +79,1 @@\n-        p3.derEncode(dout);\n+        p3.encode(dout);\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs9\/UnknownAttribute.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+import sun.security.util.DerOutputStream;\n@@ -215,1 +216,3 @@\n-            crt.encode((OutputStream) fos);\n+            DerOutputStream dos = new DerOutputStream();\n+            crt.encode(dos);\n+            fos.write(dos.toByteArray());\n","filename":"test\/jdk\/sun\/security\/x509\/X509CertImpl\/V3Certificate.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n-    public void derEncode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"test\/langtools\/tools\/jdeps\/jdkinternals\/src\/q\/NoRepl.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}