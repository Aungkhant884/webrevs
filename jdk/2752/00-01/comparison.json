{"files":[{"patch":"@@ -33,0 +33,2 @@\n+import java.util.HashSet;\n+import java.util.Set;\n@@ -219,2 +221,5 @@\n-            new Option(true, true, OptionType.EXTRACT, \"--output-dir\", \"-o\") {\n-                void process(Main jartool, String opt, String arg) {\n+            new Option(true, true, OptionType.EXTRACT, \"--dir\") {\n+                void process(Main jartool, String opt, String arg) throws BadArgs {\n+                    if (jartool.xdestDir != null) {\n+                        throw new BadArgs(\"error.extract.multiple.dest.dir\").showUsage(true);\n+                    }\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/GNUStyleOptions.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -157,2 +157,2 @@\n-    \/\/ destination directory for extraction (defaults to current working directory)\n-    String xdestDir = \".\";\n+    \/\/ destination directory for extraction\n+    String xdestDir = null;\n@@ -365,1 +365,4 @@\n-                if (!xdestDir.equals(\".\")) {\n+                if (xdestDir == null) {\n+                    \/\/ default to current working directory\n+                    xdestDir = \".\";\n+                } else if (!xdestDir.equals(\".\")) {\n@@ -580,3 +583,0 @@\n-                        case 'o':\n-                            xdestDir = args[count++];\n-                            break;\n@@ -617,0 +617,5 @@\n+                        if (xflag && xdestDir != null) {\n+                            \/\/ extract option doesn't allow more than one destination directory\n+                            usageError(getMsg(\"error.extract.multiple.dest.dir\"));\n+                            return false;\n+                        }\n@@ -628,2 +633,6 @@\n-                        pathsMap.get(version).add(dir);\n-                        nameBuf[k++] = dir + args[++i];\n+                        if (xflag) {\n+                            xdestDir = dir;\n+                        } else {\n+                            pathsMap.get(version).add(dir);\n+                            nameBuf[k++] = dir + args[++i];\n+                        }\n@@ -1338,0 +1347,3 @@\n+        if (vflag) {\n+            output(formatMsg(\"out.extract.dir\", Path.of(xdestDir).normalize().toAbsolutePath().toString()));\n+        }\n@@ -1372,0 +1384,3 @@\n+        if (vflag) {\n+            output(formatMsg(\"out.extract.dir\", Path.of(xdestDir).normalize().toAbsolutePath().toString()));\n+        }\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Main.java","additions":23,"deletions":8,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -61,0 +61,2 @@\n+error.extract.multiple.dest.dir=\\\n+        You may not specify more than one directory for extracting the jar\n@@ -162,0 +164,2 @@\n+out.extract.dir=\\\n+        extracting to {0}\n@@ -241,2 +245,3 @@\n-\\  -C DIR                     Change to the specified directory and include the\\n\\\n-\\                             following file\n+\\  -C DIR                     When used in extract mode, extracts the jar into the\\n\\\n+\\                             specified directory. In any other mode, change to the\\n\\\n+\\                             specified directory and include the following file\n@@ -307,2 +312,2 @@\n-main.help.opt.extract.output-dir=\\\n-\\  -o, --output-dir=DIR        Directory into which the jar will be extracted\n+main.help.opt.extract.dir=\\\n+\\  --dir                    Directory into which the jar will be extracted\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar.properties","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-     * Test that {@code jar -x -f --output-dir} works as expected\n+     * Test that {@code jar -x -f --dir} works as expected\n@@ -170,1 +170,1 @@\n-                \"--output-dir\", dest);\n+                \"--dir\", dest);\n@@ -176,1 +176,1 @@\n-     * Verifies that the {@code jar --help} output contains the --output-dir and -o option\n+     * Verifies that the {@code jar --help} output contains the --dir option\n@@ -184,2 +184,2 @@\n-        Assert.assertTrue(output.contains(\"-o, --output-dir=DIR        Directory into which the jar will be extracted\"),\n-                \"jar --help didn't contain -o or --output-dir option\");\n+        final String expectedMsg = \"--dir                    Directory into which the jar will be extracted\";\n+        Assert.assertTrue(output.contains(expectedMsg), \"jar --help didn't contain --dir option\");\n@@ -189,1 +189,1 @@\n-     * Tests that {@code jar -xf} command works fine even when the -o or --output-dir option\n+     * Tests that {@code jar -x -f} command works fine even when the -C or --dir option\n@@ -194,1 +194,1 @@\n-        final int exitCode = JAR_TOOL.run(System.out, System.err, \"-xf\", testJarPath.toString());\n+        final int exitCode = JAR_TOOL.run(System.out, System.err, \"-x\", \"-f\", testJarPath.toString());\n@@ -201,1 +201,71 @@\n-     * Extracts the jar file using {@code jar -xfo <jarfile> <dest>}\n+     * Tests that {@code jar -xvf <jarname> -C <dir>} works fine too\n+     *\/\n+    @Test\n+    public void testLegacyCompatibilityMode() throws Exception {\n+        final String tmpDir = Files.createTempDirectory(Path.of(\".\"), \"8173970-\").toString();\n+        final String[] args = new String[]{\"-xvf\", testJarPath.toString(), \"-C\", tmpDir};\n+        printJarCommand(args);\n+        final int exitCode = JAR_TOOL.run(System.out, System.err, args);\n+        Assert.assertEquals(exitCode, 0, \"Failed to extract \" + testJarPath);\n+        verifyExtractedContent(tmpDir);\n+    }\n+\n+    \/**\n+     * Tests that when multiple directories are specified for extracting the jar, the jar extraction\n+     * fails\n+     *\/\n+    @Test\n+    public void testExtractFailWithMultipleDir() throws Exception {\n+        final String expectedErrMsg = \"You may not specify more than one directory for extracting the jar\";\n+        final String tmpDir = Files.createTempDirectory(Path.of(\".\"), \"8173970-\").toString();\n+        final List<String[]> cmdArgs = new ArrayList<>();\n+        cmdArgs.add(new String[]{\"-x\", \"-f\", testJarPath.toString(), \"-C\", tmpDir, \"-C\", tmpDir});\n+        cmdArgs.add(new String[]{\"-x\", \"-f\", testJarPath.toString(), \"--dir\", tmpDir, \"--dir\", tmpDir});\n+        cmdArgs.add(new String[]{\"-x\", \"-f\", testJarPath.toString(), \"--dir\", tmpDir, \"-C\", tmpDir});\n+        for (final String[] args : cmdArgs) {\n+            final ByteArrayOutputStream err = new ByteArrayOutputStream();\n+            printJarCommand(args);\n+            int exitCode = JAR_TOOL.run(System.out, new PrintStream(err), args);\n+            Assert.assertNotEquals(exitCode, 0, \"jar extraction was expected to fail but didn't\");\n+            \/\/ verify it did indeed fail due to the right reason\n+            Assert.assertTrue(err.toString(StandardCharsets.UTF_8).contains(expectedErrMsg));\n+        }\n+    }\n+\n+    \/**\n+     * Tests that extracting only specific files from a jar, into a specific destination directory,\n+     * works as expected\n+     *\/\n+    @Test\n+    public void testExtractPartialContent() throws Exception {\n+        final String tmpDir = Files.createTempDirectory(Path.of(\".\"), \"8173970-\").toString();\n+        final String[] cmdArgs = new String[]{\"-x\", \"-f\", testJarPath.toString(), \"--dir\", tmpDir,\n+                \"f1.txt\", \"d1\/d2\/d3\/f2.txt\"};\n+        printJarCommand(cmdArgs);\n+        final int exitCode = JAR_TOOL.run(System.out, System.err, cmdArgs);\n+        Assert.assertEquals(exitCode, 0, \"Failed to extract \" + testJarPath);\n+        \/\/ make sure only the specific files were extracted\n+        final Stream<Path> paths = Files.walk(Path.of(tmpDir));\n+        Assert.assertEquals(paths.count(), 6, \"Unexpected number of files\/dirs in \" + tmpDir);\n+        final Path f1 = Paths.get(tmpDir, \"f1.txt\");\n+        Assert.assertTrue(Files.isRegularFile(f1), f1.toString() + \" wasn't extracted from \" + testJarPath);\n+        Assert.assertEquals(Files.readAllBytes(f1), FILE_CONTENT, \"Unexpected content in file \" + f1);\n+        final Path d1 = Paths.get(tmpDir, \"d1\");\n+        Assert.assertTrue(Files.isDirectory(d1), d1.toString() + \" wasn't extracted from \" + testJarPath);\n+        Assert.assertEquals(Files.walk(d1, 1).count(), 2, \"Unexpected number \" +\n+                \"of files\/dirs in \" + d1);\n+        final Path d2 = Paths.get(d1.toString(), \"d2\");\n+        Assert.assertTrue(Files.isDirectory(d2), d2.toString() + \" wasn't extracted from \" + testJarPath);\n+        Assert.assertEquals(Files.walk(d2, 1).count(), 2, \"Unexpected number \" +\n+                \"of files\/dirs in \" + d2);\n+        final Path d3 = Paths.get(d2.toString(), \"d3\");\n+        Assert.assertTrue(Files.isDirectory(d3), d3.toString() + \" wasn't extracted from \" + testJarPath);\n+        Assert.assertEquals(Files.walk(d3, 1).count(), 2, \"Unexpected number \" +\n+                \"of files\/dirs in \" + d3);\n+        final Path f2 = Paths.get(d3.toString(), \"f2.txt\");\n+        Assert.assertTrue(Files.isRegularFile(f2), f2.toString() + \" wasn't extracted from \" + testJarPath);\n+        Assert.assertEquals(Files.readAllBytes(f2), FILE_CONTENT, \"Unexpected content in file \" + f2);\n+    }\n+\n+    \/**\n+     * Extracts the jar file using {@code jar -x -f <jarfile> -C <dest>}\n@@ -204,2 +274,3 @@\n-        System.out.println(\"Extracting \" + testJarPath + \" to \" + dest);\n-        final int exitCode = JAR_TOOL.run(System.out, System.err, \"-xfo\", testJarPath.toString(), dest);\n+        final String[] args = new String[]{\"-x\", \"-f\", testJarPath.toString(), \"-C\", dest};\n+        printJarCommand(args);\n+        final int exitCode = JAR_TOOL.run(System.out, System.err, args);\n@@ -237,0 +308,4 @@\n+\n+    private static void printJarCommand(final String[] cmdArgs) {\n+        System.out.println(\"Running 'jar \" + String.join(\" \", cmdArgs) + \"'\");\n+    }\n","filename":"test\/jdk\/tools\/jar\/JarExtractTest.java","additions":85,"deletions":10,"binary":false,"changes":95,"status":"modified"}]}