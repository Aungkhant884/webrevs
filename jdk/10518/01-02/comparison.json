{"files":[{"patch":"@@ -13,1 +13,1 @@\n-always successfully open the core dump. This is due to  library (shared\n+always successfully open the core dump. This is due to library (shared\n@@ -21,3 +21,3 @@\n-   it was produced on. This is done by first running <b>jhsdb debugd<\/b> on the machine with the core dump,\n-    and then attaching to it from another machine by using the jhsdb <b>--connect<\/b> argument. See\n-    the <b>jhsdb<\/b> man page for details.\n+    it was produced on. This is done by first running <b>jhsdb debugd<\/b> on the machine with\n+    the core dump, and then attaching to it from another machine by using the jhsdb\n+    <b>--connect<\/b> argument. See the <b>jhsdb<\/b> man page for details.\n@@ -38,1 +38,1 @@\n-Their pages are instead  read from the executable and shared objects (or DLLs).\n+Their pages are instead read from the executable and shared objects (or DLLs).\n@@ -40,1 +40,1 @@\n-files on the debugger machine. The best  way to guarantee this match is to match the\n+files on the debugger machine. The best way to guarantee this match is to match the\n@@ -43,3 +43,3 @@\n-the OS libraries and JDK installed in the same locations on both machines. However, often this isn't an option,\n-and instead you need to include copies of the core dump machine's libraries\n-and java installation on the debugger machine, and you need\n+the OS libraries and JDK installed in the same locations on both machines. However, often\n+this isn't an option, and instead you need to copy the libraries and java installation from\n+the machine where the core dump was produced to the debugger machine, and you need\n@@ -72,4 +72,13 @@\n- need to point SA to the location of the JDK bin directory. This is done by making sure\n- the bin directory is included in the <b>PATH<\/b> environment variable. If the windows\n- libraries are not identical, then they may also need to be copied to the debugger machine\n- and included in <b>PATH<\/b>.\n+ need to point SA to the location of the JDK <b>java.exe<\/b> and libraries. This is done by making\n+ sure the <b>bin<\/b> and <b>bin\/server<\/b> directories are included in the <b>PATH<\/b>\n+ environment variable. Something like the following should work if <b>JAVA_HOME<\/b>\n+ is setup:\n+ <\/p>\n+\n+<p>\n+ set PATH=%JAVA_HOME%\\bin;%JAVA_HOME%\\bin\\server;%PATH%\n+<\/p>\n+\n+<p>\n+ If the windows libraries are not identical, then they may also need to be copied\n+ to the debugger machine and included in <b>PATH<\/b>.\n@@ -80,1 +89,1 @@\n-SA normally uses the path to the specified java executable to locate the JDK libraries. It will look in the following subdirectories for them (relative to the path to the specified java executable):  <b>..\/lib<\/b>, <b>..\/lib\/server<\/b>, <b>..\/jre\/lib<\/b>, and <b>..\/jre\/lib\/server<\/b>. If not found in any of those locations, it will look in the same subdirectories relative to the <b>JAVA_HOME<\/b> environment variable, but using <b>JAVA_HOME<\/b> normally should not be necessary.\n+SA normally uses the path to the specified java executable to locate the JDK libraries. It will look in the following subdirectories for them (relative to the path to the specified java executable): <b>..\/lib<\/b>, <b>..\/lib\/server<\/b>, <b>..\/jre\/lib<\/b>, and <b>..\/jre\/lib\/server<\/b>. If not found in any of those locations, it will look in the same subdirectories relative to the <b>JAVA_HOME<\/b> environment variable, but using <b>JAVA_HOME<\/b> normally should not be necessary.\n","filename":"src\/jdk.hotspot.agent\/doc\/transported_core.html","additions":23,"deletions":14,"binary":false,"changes":37,"status":"modified"}]}