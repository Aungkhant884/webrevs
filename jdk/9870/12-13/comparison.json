{"files":[{"patch":"@@ -208,6 +208,2 @@\n-        \/*\n-         * Buffer size of 1024 copied from typical POSIX size used\n-         * in strerror_r\n-         *\/\n-        char error[1024];\n-        if (strerror_r(errno, error, sizeof(error)) == 0) {\n+        char error[strerrorlen_s(errno) + 1];\n+        if (strerror_s(error, sizeof(error), errno) == 0) {\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md_common.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -609,2 +609,3 @@\n- * Because Windows API errors and regular errno errors can exist at the same time,\n- * warn that the resulting report may not be accurate when both are present.\n+ * Detects the last C Runtime error by default, similarly to the variant for Unix.\n+ * To force detection of Windows API errors instead, add the custom format specifier\n+ * %w32 at the start of the message.\n@@ -620,3 +621,0 @@\n-    char* const conflict = \"Java detected conflicting Windows and C Runtime errors and is unable to provide an accurate report\";\n-    char* const unknown = \"Java could not determine the underlying error\";\n-\n@@ -625,4 +623,2 @@\n-    \/* Check to catch conflicting errors *\/\n-    if (GetLastError() != 0 && errno != 0) {\n-        errtext = conflict;\n-    } else {\n+    if(strncmp(\"%w32\", fmt, 4) == 0) {                      \/* Format specifier requesting WINAPI errors *\/\n+        fmt += 4;\n@@ -634,1 +630,3 @@\n-                errtext = unknown;\n+        \t    char* unknown = \"Java could not determine the underlying error\";\n+            \terrtext = (char*) JLI_MemAlloc(JLI_StrLen(unknown) + 1);\n+            \tJLI_StrCpy(errtext, unknown);\n@@ -646,1 +644,1 @@\n-\n+    } else {\n@@ -648,2 +646,6 @@\n-            errtext = strerror(errno);\n-            if(errtext == NULL) errtext = unknown;\n+            errtext = (char*) JLI_MemAlloc(strerrorlen_s(errno) + 1);\n+            if (strerror_s(errtext, sizeof(strerrorlen_s(errno) + 1), errno) != 0) {\n+        \t    char* unknown = \"Java could not determine the underlying error\";\n+            \terrtext = (char*) JLI_MemRealloc(errtext, JLI_StrLen(unknown) + 1);\n+            \tJLI_StrCpy(errtext, unknown);\n+            }\n@@ -684,2 +686,6 @@\n-    if (freeit) {\n-        (void)LocalFree((HLOCAL)errtext);\n+    if (errtext != NULL) {\n+        if (freeit) {\n+            (void)LocalFree((HLOCAL)errtext);\n+        } else {\n+            free(errtext);\n+        }\n","filename":"src\/java.base\/windows\/native\/libjli\/java_md.c","additions":21,"deletions":15,"binary":false,"changes":36,"status":"modified"}]}