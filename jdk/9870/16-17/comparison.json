{"files":[{"patch":"@@ -1187,0 +1187,15 @@\n+\n+JNIEXPORT size_t JNICALL\n+getLastErrorString(char *buf, size_t len)\n+{\n+    if (errno == 0 || len < 1) return 0;\n+    getErrorString(errno, buf, len);\n+    return strlen(buf);\n+}\n+\n+JNIEXPORT int JNICALL\n+getErrorString(int err, char *buf, size_t len)\n+{\n+    if (err == 0 || len < 1) return 0;\n+    return strerror_s(buf, len, err);\n+}\n","filename":"src\/java.base\/share\/native\/libjava\/jni_util.c","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -62,15 +62,0 @@\n-\n-JNIEXPORT size_t JNICALL\n-getLastErrorString(char *buf, size_t len)\n-{\n-    if (errno == 0 || len < 1) return 0;\n-    getErrorString(errno, buf, len);\n-    return strlen(buf);\n-}\n-\n-JNIEXPORT int JNICALL\n-getErrorString(int err, char *buf, size_t len)\n-{\n-    if (err == 0 || len < 1) return 0;\n-    return strerror_r(err, buf, len);\n-}\n","filename":"src\/java.base\/unix\/native\/libjava\/jni_util_md.c","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -67,25 +67,1 @@\n-getLastErrorString(char *buf, size_t len) {\n-\n-    DWORD errval;\n-\n-    if ((errval = GetLastError()) != 0) {\n-        \/\/ DOS error\n-        size_t n = (size_t)FormatMessage(\n-                FORMAT_MESSAGE_FROM_SYSTEM|FORMAT_MESSAGE_IGNORE_INSERTS,\n-                NULL,\n-                errval,\n-                0,\n-                buf,\n-                (DWORD)len,\n-                NULL);\n-        if (n > 3) {\n-            \/\/ Drop final '.', CR, LF\n-            if (buf[n - 1] == '\\n') n--;\n-            if (buf[n - 1] == '\\r') n--;\n-            if (buf[n - 1] == '.') n--;\n-            buf[n] = '\\0';\n-        }\n-        return n;\n-    }\n-\n-    \/\/ C runtime error that has no corresponding DOS error code\n+getLastWinErrorString(char *buf, size_t len) {\n@@ -93,1 +69,2 @@\n-    return strerror_s(buf, len, errno);\n+    getErrorString(GetLastError(), buf, len);\n+    return strlen(buf);\n@@ -96,2 +73,2 @@\n-JNIEXPORT int JNICALL\n-getErrorString(int err, char *buf, size_t len)\n+JNIEXPORT DWORD JNICALL\n+getWinErrorString(DWORD err, char *buf, size_t len)\n@@ -99,4 +76,22 @@\n-    int ret = 0;\n-    if (err == 0 || len < 1) return 0;\n-    ret = strerror_s(buf, len, err);\n-    return ret;\n+\n+\tif (err == 0 || len < 1) {\n+        return 0;\n+\t} else {\n+\t    \/\/ DOS error\n+\t    size_t n = (size_t)FormatMessage(\n+\t            FORMAT_MESSAGE_FROM_SYSTEM|FORMAT_MESSAGE_IGNORE_INSERTS,\n+\t            NULL,\n+\t            err,\n+\t            0,\n+\t            buf,\n+\t            (DWORD)len,\n+\t            NULL);\n+\t    if (n > 3) {\n+\t        \/\/ Drop final '.', CR, LF\n+\t        if (buf[n - 1] == '\\n') n--;\n+\t        if (buf[n - 1] == '\\r') n--;\n+\t        if (buf[n - 1] == '.') n--;\n+\t        buf[n] = '\\0';\n+\t    }\n+\t    return n == 0 ? GetLastError() : 0;\n+\t}\n","filename":"src\/java.base\/windows\/native\/libjava\/jni_util_md.c","additions":27,"deletions":32,"binary":false,"changes":59,"status":"modified"}]}