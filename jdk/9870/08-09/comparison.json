{"files":[{"patch":"@@ -626,15 +626,19 @@\n-    \/* Platform SDK \/ DOS Error *\/\n-    if((errval = GetLastError()) != 0) {\n-        int n = FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM|\n-            FORMAT_MESSAGE_IGNORE_INSERTS|FORMAT_MESSAGE_ALLOCATE_BUFFER,\n-            NULL, errval, 0, (LPTSTR)&errtext, 0, NULL);\n-        if (errtext == NULL || n == 0) {                \/* Paranoia check *\/\n-            errtext = unknown;\n-            n = 0;\n-        } else {\n-            freeit = JNI_TRUE;\n-            if (n > 3) {                                \/* Drop final CR, LF *\/\n-                if (errtext[n - 1] == '\\n') n--;\n-                if (errtext[n - 1] == '\\r') n--;\n-                if (errtext[n - 1] == '.') n--;         \/* Drop '.' to match getLastErrorString *\/\n-                errtext[n] = '\\0';\n+    \/* Check to catch conflicting errors *\/\n+    if(GetLastError() != 0 && errno != 0) {\n+        errtext = conflict;\n+    } else {\n+        if((errval = GetLastError()) != 0) {               \/* Platform SDK \/ DOS Error *\/\n+            int n = FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM|\n+                FORMAT_MESSAGE_IGNORE_INSERTS|FORMAT_MESSAGE_ALLOCATE_BUFFER,\n+                NULL, errval, 0, (LPTSTR)&errtext, 0, NULL);\n+            if (errtext == NULL || n == 0) {                \/* Paranoia check *\/\n+                errtext = unknown;\n+                n = 0;\n+            } else {\n+                freeit = JNI_TRUE;\n+                if (n > 3) {                                \/* Drop final CR, LF *\/\n+                    if (errtext[n - 1] == '\\n') n--;\n+                    if (errtext[n - 1] == '\\r') n--;\n+                    if (errtext[n - 1] == '.') n--;         \/* Drop '.' to match getLastErrorString *\/\n+                    errtext[n] = '\\0';\n+                }\n@@ -643,1 +647,0 @@\n-    }\n@@ -645,9 +648,5 @@\n-    \/* C runtime error that has no corresponding DOS error code *\/\n-    if(errno != 0) {\n-        errtext = strerror(errno);\n-        if(errtext == NULL) errtext = unknown;\n-    }\n-\n-    \/* Final safety check to catch conflicting errors *\/\n-    if(GetLastError() != 0 && errno != 0) {\n-        errtext = conflict;\n+        \/* C runtime error that has no corresponding DOS error code *\/\n+        if(errno != 0) {\n+            errtext = strerror(errno);\n+            if(errtext == NULL) errtext = unknown;\n+        }\n","filename":"src\/java.base\/windows\/native\/libjli\/java_md.c","additions":24,"deletions":25,"binary":false,"changes":49,"status":"modified"}]}