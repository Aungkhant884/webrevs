{"files":[{"patch":"@@ -98,1 +98,1 @@\n-       JNU_ThrowIOExceptionWithLastError(env, \"pollset_create failed\");\n+       JNU_ThrowIOExceptionWithIOError(env, \"pollset_create failed\");\n@@ -126,1 +126,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"pollset_poll failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"pollset_poll failed\");\n@@ -141,1 +141,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socketpair failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socketpair failed\");\n@@ -157,1 +157,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"write failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"write failed\");\n@@ -167,1 +167,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"drain1 failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"drain1 failed\");\n","filename":"src\/java.base\/aix\/native\/libnio\/ch\/AixPollPort.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    JNU_ThrowIOExceptionWithLastError(env, msg);\n+    JNU_ThrowIOExceptionWithIOError(env, msg);\n@@ -121,1 +121,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Transfer failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Transfer failed\");\n","filename":"src\/java.base\/aix\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"epoll_create1 failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"epoll_create1 failed\");\n@@ -91,1 +91,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"epoll_wait failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"epoll_wait failed\");\n","filename":"src\/java.base\/linux\/native\/libnio\/ch\/EPoll.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"eventfd failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"eventfd failed\");\n","filename":"src\/java.base\/linux\/native\/libnio\/ch\/EventFD.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Transfer failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Transfer failed\");\n@@ -109,1 +109,1 @@\n-                    JNU_ThrowIOExceptionWithLastError(env, \"Copy failed\");\n+                    JNU_ThrowIOExceptionWithIOError(env, \"Copy failed\");\n@@ -126,1 +126,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Transfer failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Transfer failed\");\n","filename":"src\/java.base\/linux\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-                        JNU_ThrowIOExceptionWithLastError(env, \"Copy failed\");\n+                        JNU_ThrowIOExceptionWithIOError(env, \"Copy failed\");\n","filename":"src\/java.base\/linux\/native\/libnio\/fs\/LinuxNativeDispatcher.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-        JNU_ThrowByNameWithLastError(env,\n+        JNU_ThrowPerrorByName(env,\n@@ -109,1 +109,1 @@\n-        JNU_ThrowByNameWithLastError(env,\n+        JNU_ThrowPerrorByName(env,\n@@ -192,1 +192,1 @@\n-        JNU_ThrowByNameWithLastError(env,\n+        JNU_ThrowPerrorByName(env,\n@@ -254,1 +254,1 @@\n-            JNU_ThrowByNameWithLastError(env,\n+            JNU_ThrowPerrorByName(env,\n@@ -277,1 +277,1 @@\n-                JNU_ThrowByNameWithLastError(env,\n+                JNU_ThrowPerrorByName(env,\n","filename":"src\/java.base\/macosx\/native\/libjava\/ProcessHandleImpl_macosx.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-            JLI_ReportErrorMessageSys(\"error locating main entrypoint\\n\");\n+            JLI_Perror(\"error locating main entrypoint\");\n@@ -349,1 +349,1 @@\n-        JLI_ReportErrorMessageSys(\"Could not create main thread: %s\\n\", strerror(errno));\n+        JLI_Perror(\"Could not create main thread\");\n@@ -353,1 +353,1 @@\n-        JLI_ReportErrorMessageSys(\"pthread_detach() failed: %s\\n\", strerror(errno));\n+        JLI_Perror(\"pthread_detach() failed\");\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    JNU_ThrowIOExceptionWithLastError(env, msg);\n+    JNU_ThrowIOExceptionWithIOError(env, msg);\n@@ -97,1 +97,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Transfer failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Transfer failed\");\n","filename":"src\/java.base\/macosx\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"kqueue failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"kqueue failed\");\n@@ -108,1 +108,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"kqueue failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"kqueue failed\");\n","filename":"src\/java.base\/macosx\/native\/libnio\/ch\/KQueue.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetLength failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetLength failed\");\n@@ -103,1 +103,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek failed\");\n@@ -118,1 +118,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek error\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek error\");\n@@ -120,1 +120,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek error\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek error\");\n@@ -141,1 +141,1 @@\n-    JNU_ThrowIOExceptionWithLastError(env, NULL);\n+    JNU_ThrowIOExceptionWithIOError(env, NULL);\n","filename":"src\/java.base\/share\/native\/libjava\/FileInputStream.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek failed\");\n@@ -120,1 +120,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetLength failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetLength failed\");\n@@ -139,1 +139,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek failed\");\n@@ -165,1 +165,1 @@\n-    JNU_ThrowIOExceptionWithLastError(env, \"setLength failed\");\n+    JNU_ThrowIOExceptionWithIOError(env, \"setLength failed\");\n","filename":"src\/java.base\/share\/native\/libjava\/RandomAccessFile.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Read error\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Read error\");\n@@ -113,1 +113,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Read error\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Read error\");\n@@ -141,1 +141,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Write error\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Write error\");\n@@ -192,1 +192,1 @@\n-                JNU_ThrowIOExceptionWithLastError(env, \"Write error\");\n+                JNU_ThrowIOExceptionWithIOError(env, \"Write error\");\n@@ -207,2 +207,0 @@\n-    char buf[256];\n-    size_t n;\n@@ -212,1 +210,4 @@\n-    n = getLastErrorString(buf, sizeof(buf));\n+#ifdef _WIN32\n+    \/* The implementation on Windows uses the Windows API *\/\n+    char buf[256];\n+    size_t n = getLastWinErrorString(buf, sizeof(buf));\n@@ -214,0 +215,6 @@\n+#else\n+    char* buf = NULL;\n+    const int error = errno;\n+    if (error != 0) buf = strerror(error);\n+    if (buf != NULL) {\n+#endif\n","filename":"src\/java.base\/share\/native\/libjava\/io_util.c","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -98,3 +98,3 @@\n- * Throw an exception by name, using the string returned by\n- * getLastErrorString for the detail string. If the last-error\n- * string is NULL, use the given default detail string.\n+ * Throw an exception by name, using the C error string for the\n+ * detail string. If the C error string is NULL, use the given\n+ * default detail string. Is similar to C's strerror().\n@@ -103,1 +103,1 @@\n-JNU_ThrowByNameWithLastError(JNIEnv *env, const char *name,\n+JNU_ThrowPerrorByName(JNIEnv *env, const char *name,\n@@ -106,2 +106,3 @@\n-    char buf[256];\n-    size_t n = getLastErrorString(buf, sizeof(buf));\n+    char* buf = NULL;\n+    const int error = errno;\n+    if (error != 0) buf = strerror(error);\n@@ -109,1 +110,1 @@\n-    if (n > 0) {\n+    if (buf != NULL) {\n@@ -125,2 +126,3 @@\n- * Throw an exception by name, using a given message and the string\n- * returned by getLastErrorString to construct the detail string.\n+ * Throw an exception by name, using a given message and the C error\n+ * string to construct the detail string. Is the equivalent of the\n+ * C perror() for exceptions.\n@@ -129,1 +131,1 @@\n-JNU_ThrowByNameWithMessageAndLastError\n+JNU_ThrowPerrorByNameWithMessage\n@@ -132,2 +134,1 @@\n-    char buf[256];\n-    size_t n = getLastErrorString(buf, sizeof(buf));\n+    char* buf = NULL;\n@@ -136,1 +137,4 @@\n-    if (n > 0) {\n+    const int error = errno;\n+    if (error != 0) buf = strerror(error);\n+\n+    if (buf != NULL) {\n@@ -181,11 +185,0 @@\n-\/*\n- * Convenience method.\n- * Call JNU_ThrowByNameWithLastError for java.io.IOException.\n- *\/\n-JNIEXPORT void JNICALL\n-JNU_ThrowIOExceptionWithLastError(JNIEnv *env, const char *defaultDetail)\n-{\n-    JNU_ThrowByNameWithLastError(env, \"java\/io\/IOException\", defaultDetail);\n-}\n-\n-\n","filename":"src\/java.base\/share\/native\/libjava\/jni_util.c","additions":17,"deletions":24,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-JNU_ThrowByNameWithLastError(JNIEnv *env, const char *name,\n+JNU_ThrowPerrorByName(JNIEnv *env, const char *name,\n@@ -81,2 +81,4 @@\n-\/* Throw an exception by name, using a given message and the string\n- * returned by getLastErrorString to construct the detail string.\n+\/*\n+ * Throw an exception by name, using a given message and the C error\n+ * string to construct the detail string. Is the equivalent of the\n+ * C perror() for exceptions.\n@@ -85,1 +87,1 @@\n-JNU_ThrowByNameWithMessageAndLastError\n+JNU_ThrowPerrorByNameWithMessage\n@@ -88,3 +90,3 @@\n-\/* Throw an IOException, using the last-error string for the detail\n- * string. If the last-error string is NULL, use the given default\n- * detail string.\n+\/* Throw an IOException, using the error string from the currently failing\n+ * IO operation for the detail string. If the IO error string is NULL, use\n+ * the given default detail string.\n@@ -93,1 +95,1 @@\n-JNU_ThrowIOExceptionWithLastError(JNIEnv *env, const char *defaultDetail);\n+JNU_ThrowIOExceptionWithIOError(JNIEnv *env, const char *defaultDetail);\n@@ -339,5 +341,7 @@\n-JNIEXPORT size_t JNICALL\n-getLastErrorString(char *buf, size_t len);\n-\n-JNIEXPORT int JNICALL\n-getErrorString(int err, char *buf, size_t len);\n+#ifdef _WIN32\n+JNIEXPORT size_t JNICALL getLastWinErrorString(char*, size_t);\n+JNIEXPORT void JNICALL\n+throwByNameWithMessageAndWinError(JNIEnv *env, const char *name, const char *message);\n+JNIEXPORT void JNICALL\n+throwByNameWithWinError(JNIEnv *env, const char *name, const char *defaultDetail);\n+#endif\n","filename":"src\/java.base\/share\/native\/libjava\/jni_util.h","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -139,4 +139,0 @@\n-\/* Reports a system error message to stderr or a window *\/\n-JNIEXPORT void JNICALL\n-JLI_ReportErrorMessageSys(const char * message, ...);\n-\n","filename":"src\/java.base\/share\/native\/libjli\/java.h","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,0 +84,2 @@\n+#define JLI_Perror              perror\n+\n","filename":"src\/java.base\/share\/native\/libjli\/jli_util.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -851,0 +851,1 @@\n+#ifdef _WIN32\n@@ -852,0 +853,4 @@\n+#else\n+    int error;\n+    char* errbuf = NULL;\n+#endif\n@@ -866,1 +871,8 @@\n-        if (pmsg && getLastErrorString(errbuf, sizeof(errbuf)) > 0)\n+#ifdef _WIN32\n+        \/* ZFILE_Open *\/\n+        if (pmsg && getLastWinErrorString(errbuf, sizeof(errbuf)) > 0) {\n+#else\n+        error = errno;\n+        if (error != 0) errbuf = strerror(error);\n+        if (errbuf != NULL) {\n+#endif\n@@ -868,0 +880,1 @@\n+        }\n@@ -884,1 +897,7 @@\n-            if (pmsg && getLastErrorString(errbuf, sizeof(errbuf)) > 0)\n+#ifdef _WIN32\n+            if (pmsg && getLastWinErrorString(errbuf, sizeof(errbuf)) > 0) {\n+#else\n+            error = errno;\n+            if (error != 0) errbuf = strerror(error);\n+            if (errbuf != NULL) {\n+#endif\n@@ -886,0 +905,1 @@\n+            }\n@@ -1496,1 +1516,1 @@\n-    char tmpbuf[1024];\n+    char* buffer = NULL;\n@@ -1521,2 +1541,3 @@\n-                    getErrorString(errno, tmpbuf, sizeof(tmpbuf));\n-                    msg = tmpbuf;\n+                    int error = errno;\n+                    if (error != 0) buffer = strerror(error);\n+                    if (buffer != NULL) msg = buffer;\n@@ -1538,2 +1559,3 @@\n-                getErrorString(errno, tmpbuf, sizeof(tmpbuf));\n-                msg = tmpbuf;\n+                int error = errno;\n+                if (error != 0) buffer = strerror(error);\n+                if (buffer != NULL) msg = buffer;\n","filename":"src\/java.base\/share\/native\/libzip\/zip_util.c","additions":29,"deletions":7,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"tcgetattr failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"tcgetattr failed\");\n@@ -66,1 +66,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"tcsetattr failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"tcsetattr failed\");\n","filename":"src\/java.base\/unix\/native\/libjava\/Console_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"close failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"close failed\");\n","filename":"src\/java.base\/unix\/native\/libjava\/FileDescriptor_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -325,1 +325,1 @@\n-    char tmpbuf[1024];\n+    char* buf = NULL;\n@@ -328,5 +328,2 @@\n-    if (errnum != 0) {\n-        int ret = getErrorString(errnum, tmpbuf, sizeof(tmpbuf));\n-        if (ret != EINVAL)\n-            detail = tmpbuf;\n-    }\n+    if (errnum != 0) buf = strerror(errnum);\n+    if (buf != NULL) detail = buf;\n","filename":"src\/java.base\/unix\/native\/libjava\/ProcessImpl_md.c","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Bad pathname\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Bad pathname\");\n@@ -282,1 +282,1 @@\n-                    JNU_ThrowIOExceptionWithLastError(env, \"Could not open file\");\n+                    JNU_ThrowIOExceptionWithIOError(env, \"Could not open file\");\n@@ -285,1 +285,1 @@\n-                    JNU_ThrowIOExceptionWithLastError(env, \"Could not close file\");\n+                    JNU_ThrowIOExceptionWithIOError(env, \"Could not close file\");\n","filename":"src\/java.base\/unix\/native\/libjava\/UnixFileSystem_md.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"open \/dev\/null failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"open \/dev\/null failed\");\n@@ -179,1 +179,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"close failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"close failed\");\n","filename":"src\/java.base\/unix\/native\/libjava\/io_util_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,9 @@\n+\/*\n+ * Convenience method.\n+ * Call JNU_ThrowByNameWithLastError for java.io.IOException.\n+ *\/\n+JNIEXPORT void JNICALL\n+JNU_ThrowIOExceptionWithIOError(JNIEnv *env, const char *defaultDetail) {\n+    JNU_ThrowPerrorByName(env, \"java\/io\/IOException\", defaultDetail);\n+}\n+\n@@ -62,15 +71,0 @@\n-\n-JNIEXPORT size_t JNICALL\n-getLastErrorString(char *buf, size_t len)\n-{\n-    if (errno == 0 || len < 1) return 0;\n-    getErrorString(errno, buf, len);\n-    return strlen(buf);\n-}\n-\n-JNIEXPORT int JNICALL\n-getErrorString(int err, char *buf, size_t len)\n-{\n-    if (err == 0 || len < 1) return 0;\n-    return strerror_r(err, buf, len);\n-}\n","filename":"src\/java.base\/unix\/native\/libjava\/jni_util_md.c","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -425,1 +425,1 @@\n-                JLI_ReportErrorMessageSys(JRE_ERROR11);\n+                JLI_Perror(JRE_ERROR11);\n@@ -460,1 +460,1 @@\n-        JLI_ReportErrorMessageSys(JRE_ERROR4, newexec);\n+        JLI_Perror(JRE_ERROR4, newexec);\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -200,20 +200,0 @@\n-JNIEXPORT void JNICALL\n-JLI_ReportErrorMessageSys(const char* fmt, ...) {\n-    va_list vl;\n-    char *emsg;\n-\n-    \/*\n-     * TODO: its safer to use strerror_r but is not available on\n-     * Solaris 8. Until then....\n-     *\/\n-    emsg = strerror(errno);\n-    if (emsg != NULL) {\n-        fprintf(stderr, \"%s\\n\", emsg);\n-    }\n-\n-    va_start(vl, fmt);\n-    vfprintf(stderr, fmt, vl);\n-    fprintf(stderr, \"\\n\");\n-    va_end(vl);\n-}\n-\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md_common.c","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -685,1 +685,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1132,1 +1132,1 @@\n-            JNU_ThrowByNameWithMessageAndLastError\n+            JNU_ThrowPerrorByNameWithMessage\n@@ -1154,1 +1154,1 @@\n-                JNU_ThrowByNameWithMessageAndLastError\n+                JNU_ThrowPerrorByNameWithMessage\n@@ -1159,1 +1159,1 @@\n-            JNU_ThrowByNameWithMessageAndLastError\n+            JNU_ThrowPerrorByNameWithMessage\n@@ -1183,1 +1183,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1192,1 +1192,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1328,1 +1328,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1352,1 +1352,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1397,1 +1397,1 @@\n-                JNU_ThrowByNameWithMessageAndLastError\n+                JNU_ThrowPerrorByNameWithMessage\n@@ -1402,1 +1402,1 @@\n-            JNU_ThrowByNameWithMessageAndLastError\n+            JNU_ThrowPerrorByNameWithMessage\n@@ -1422,1 +1422,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1433,1 +1433,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1503,1 +1503,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1512,1 +1512,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1634,1 +1634,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1674,1 +1674,1 @@\n-                JNU_ThrowByNameWithMessageAndLastError\n+                JNU_ThrowPerrorByNameWithMessage\n@@ -1679,1 +1679,1 @@\n-            JNU_ThrowByNameWithMessageAndLastError\n+            JNU_ThrowPerrorByNameWithMessage\n@@ -1695,1 +1695,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1739,1 +1739,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n@@ -1835,1 +1835,1 @@\n-        JNU_ThrowByNameWithMessageAndLastError\n+        JNU_ThrowPerrorByNameWithMessage\n","filename":"src\/java.base\/unix\/native\/libnet\/NetworkInterface.c","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socket\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socket\");\n@@ -114,1 +114,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"dup2\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"dup2\");\n@@ -117,1 +117,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"close\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"close\");\n","filename":"src\/java.base\/unix\/native\/libnet\/SdpSupport.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    JNU_ThrowByNameWithMessageAndLastError(env, name, defaultDetail);\n+    JNU_ThrowPerrorByNameWithMessage(env, name, defaultDetail);\n@@ -88,1 +88,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\", msg);\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\", msg);\n","filename":"src\/java.base\/unix\/native\/libnet\/net_util_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"mincore failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"mincore failed\");\n@@ -113,1 +113,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"madvise failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"madvise failed\");\n@@ -124,1 +124,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"madvise failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"madvise failed\");\n@@ -135,1 +135,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"msync failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"msync failed\");\n","filename":"src\/java.base\/unix\/native\/libnio\/MappedMemoryUtils.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"fstat64 failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"fstat64 failed\");\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/FileKey.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Configure blocking failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Configure blocking failed\");\n@@ -93,1 +93,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Pipe failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Pipe failed\");\n@@ -99,1 +99,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Configure blocking failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Configure blocking failed\");\n@@ -125,1 +125,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Drain\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Drain\");\n@@ -145,1 +145,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"read\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"read\");\n@@ -157,1 +157,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"getrlimit failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"getrlimit failed\");\n@@ -220,1 +220,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, msg);\n+        JNU_ThrowIOExceptionWithIOError(env, msg);\n@@ -245,1 +245,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, msg);\n+        JNU_ThrowIOExceptionWithIOError(env, msg);\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/IOUtil.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"dup failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"dup failed\");\n@@ -161,1 +161,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"dup2 failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"dup2 failed\");\n@@ -193,1 +193,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, str);\n+            JNU_ThrowIOExceptionWithIOError(env, str);\n@@ -204,1 +204,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"close failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"close failed\");\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/InheritedChannel.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"sigaction\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"sigaction\");\n@@ -89,1 +89,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Thread signal failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Thread signal failed\");\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/NativeThread.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-            JNU_ThrowByNameWithLastError(env,\n+            JNU_ThrowPerrorByName(env,\n@@ -233,1 +233,1 @@\n-            JNU_ThrowByNameWithLastError(env,\n+            JNU_ThrowPerrorByName(env,\n@@ -247,1 +247,1 @@\n-            JNU_ThrowByNameWithLastError(env,\n+            JNU_ThrowPerrorByName(env,\n@@ -260,1 +260,1 @@\n-            JNU_ThrowByNameWithLastError(env,\n+            JNU_ThrowPerrorByName(env,\n@@ -368,1 +368,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Accept failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Accept failed\");\n@@ -509,1 +509,1 @@\n-        JNU_ThrowByNameWithLastError(env,\n+        JNU_ThrowPerrorByName(env,\n@@ -568,1 +568,1 @@\n-        JNU_ThrowByNameWithLastError(env,\n+        JNU_ThrowPerrorByName(env,\n@@ -867,1 +867,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"poll failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"poll failed\");\n@@ -947,1 +947,1 @@\n-    JNU_ThrowByNameWithLastError(env, xn, \"NioSocketError\");\n+    JNU_ThrowPerrorByName(env, xn, \"NioSocketError\");\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/Net.c","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"poll failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"poll failed\");\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/PollSelectorImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"getsockopt\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"getsockopt\");\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/UnixAsynchronousSocketChannelImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Accept failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Accept failed\");\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/UnixDomainSockets.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socketpair failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socketpair failed\");\n@@ -135,1 +135,1 @@\n-    JNU_ThrowIOExceptionWithLastError(env, msg);\n+    JNU_ThrowIOExceptionWithIOError(env, msg);\n@@ -232,1 +232,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Lock failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Lock failed\");\n@@ -256,1 +256,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Release failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Release failed\");\n@@ -265,1 +265,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Close failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Close failed\");\n@@ -282,1 +282,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"dup2 failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"dup2 failed\");\n@@ -290,1 +290,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"dup2 failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"dup2 failed\");\n@@ -368,1 +368,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"map with mode MAP_SYNC unsupported\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"map with mode MAP_SYNC unsupported\");\n@@ -405,1 +405,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"DirectIO setup failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"DirectIO setup failed\");\n@@ -410,1 +410,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"DirectIO setup failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"DirectIO setup failed\");\n@@ -416,1 +416,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"DirectIO setup failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"DirectIO setup failed\");\n@@ -422,1 +422,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"DirectIO setup failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"DirectIO setup failed\");\n@@ -428,1 +428,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"DirectIO setup failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"DirectIO setup failed\");\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/UnixFileDispatcherImpl.c","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -349,1 +349,1 @@\n-    char tmpbuf[1024];\n+    char* buf = NULL;\n@@ -353,2 +353,2 @@\n-    getErrorString((int)errno, tmpbuf, sizeof(tmpbuf));\n-    len = strlen(tmpbuf);\n+    buf = strerror(error);\n+    len = buf == NULL ? 0 : strlen(buf);\n@@ -357,1 +357,1 @@\n-        (*env)->SetByteArrayRegion(env, bytes, 0, len, (jbyte*)tmpbuf);\n+        (*env)->SetByteArrayRegion(env, bytes, 0, len, (jbyte*) buf);\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetConsoleMode failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetConsoleMode failed\");\n@@ -83,1 +83,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"SetConsoleMode failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"SetConsoleMode failed\");\n","filename":"src\/java.base\/windows\/native\/libjava\/Console_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"close failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"close failed\");\n","filename":"src\/java.base\/windows\/native\/libjava\/FileDescriptor_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-            JNU_ThrowByNameWithLastError(env,\n+            throwByNameWithWinError(env,\n@@ -127,1 +127,1 @@\n-                JNU_ThrowByNameWithLastError(env,\n+                throwByNameWithWinError(env,\n@@ -517,1 +517,1 @@\n-        JNU_ThrowByNameWithLastError(env,\n+        throwByNameWithWinError(env,\n","filename":"src\/java.base\/windows\/native\/libjava\/ProcessHandleImpl_win.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -494,1 +494,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"CreateFileW\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"CreateFileW\");\n","filename":"src\/java.base\/windows\/native\/libjava\/ProcessImpl_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -314,1 +314,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Bad pathname\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Bad pathname\");\n@@ -350,1 +350,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Bad pathname\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Bad pathname\");\n@@ -642,1 +642,1 @@\n-                JNU_ThrowIOExceptionWithLastError(env, \"Could not open file\");\n+                JNU_ThrowIOExceptionWithIOError(env, \"Could not open file\");\n@@ -998,1 +998,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env,\n+        JNU_ThrowIOExceptionWithIOError(env,\n","filename":"src\/java.base\/windows\/native\/libjava\/WinNTFileSystem_md.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -560,1 +560,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"close failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"close failed\");\n","filename":"src\/java.base\/windows\/native\/libjava\/io_util_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,24 @@\n+\/*\n+ * Convenience method.\n+ * IO on Windows uses the Windows API.\n+ *\/\n+JNIEXPORT void JNICALL\n+JNU_ThrowIOExceptionWithIOError(JNIEnv *env, const char *defaultDetail) {\n+    char buf[256];\n+    size_t n = getLastWinErrorString(buf, 256);\n+\n+    if (n > 0) {\n+        jstring s = JNU_NewStringPlatform(env, buf);\n+        if (s != NULL) {\n+            jobject x = JNU_NewObjectByName(env, \"java\/io\/IOException\",\n+                                            \"(Ljava\/lang\/String;)V\", s);\n+            if (x != NULL) {\n+                (*env)->Throw(env, x);\n+            }\n+        }\n+    }\n+    if (!(*env)->ExceptionOccurred(env)) {\n+        JNU_ThrowByName(env, \"java\/io\/IOException\", defaultDetail);\n+    }\n+}\n+\n@@ -67,1 +91,1 @@\n-getLastErrorString(char *buf, size_t len) {\n+getLastWinErrorString(char *buffer, size_t size) {\n@@ -69,1 +93,1 @@\n-    DWORD errval;\n+    DWORD error;\n@@ -71,4 +95,4 @@\n-    if ((errval = GetLastError()) != 0) {\n-        \/\/ DOS error\n-        size_t n = (size_t)FormatMessage(\n-                FORMAT_MESSAGE_FROM_SYSTEM|FORMAT_MESSAGE_IGNORE_INSERTS,\n+    if ((error = GetLastError()) != 0) {\n+        \/* DOS error *\/\n+        size_t n = (size_t) FormatMessage(\n+                FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,\n@@ -76,1 +100,1 @@\n-                errval,\n+                error,\n@@ -78,2 +102,2 @@\n-                buf,\n-                (DWORD)len,\n+                buffer,\n+                (DWORD) size,\n@@ -82,5 +106,5 @@\n-            \/\/ Drop final '.', CR, LF\n-            if (buf[n - 1] == '\\n') n--;\n-            if (buf[n - 1] == '\\r') n--;\n-            if (buf[n - 1] == '.') n--;\n-            buf[n] = '\\0';\n+            \/* Drop final '.', CR, LF *\/\n+            if (buffer[n - 1] == '\\n') n--;\n+            if (buffer[n - 1] == '\\r') n--;\n+            if (buffer[n - 1] == '.') n--;\n+            buffer[n] = '\\0';\n@@ -89,0 +113,47 @@\n+    } else {\n+        return 0;\n+    }\n+}\n+\n+JNIEXPORT void JNICALL\n+throwByNameWithMessageAndWinError\n+  (JNIEnv *env, const char *name, const char *message) {\n+\n+    char buf[256];\n+    size_t n = getLastWinErrorString(buf, sizeof(buf));\n+    size_t messagelen = message == NULL ? 0 : strlen(message);\n+\n+    if (n > 0) {\n+        jstring s = JNU_NewStringPlatform(env, buf);\n+        if (s != NULL) {\n+            jobject x = NULL;\n+            if (messagelen) {\n+                jstring s2 = NULL;\n+                size_t messageextlen = messagelen + 4;\n+                char *str1 = (char *)malloc((messageextlen) * sizeof(char));\n+                if (str1 == 0) {\n+                    JNU_ThrowOutOfMemoryError(env, 0);\n+                    return;\n+                }\n+                jio_snprintf(str1, messageextlen, \" (%s)\", message);\n+                s2 = (*env)->NewStringUTF(env, str1);\n+                free(str1);\n+                JNU_CHECK_EXCEPTION(env);\n+                if (s2 != NULL) {\n+                    jstring s3 = JNU_CallMethodByName(\n+                                     env, NULL, s, \"concat\",\n+                                     \"(Ljava\/lang\/String;)Ljava\/lang\/String;\",\n+                                     s2).l;\n+                    (*env)->DeleteLocalRef(env, s2);\n+                    JNU_CHECK_EXCEPTION(env);\n+                    if (s3 != NULL) {\n+                        (*env)->DeleteLocalRef(env, s);\n+                        s = s3;\n+                    }\n+                }\n+            }\n+            x = JNU_NewObjectByName(env, name, \"(Ljava\/lang\/String;)V\", s);\n+            if (x != NULL) {\n+                (*env)->Throw(env, x);\n+            }\n+        }\n@@ -91,3 +162,7 @@\n-    \/\/ C runtime error that has no corresponding DOS error code\n-    if (errno == 0 || len < 1) return 0;\n-    return strerror_s(buf, len, errno);\n+    if (!(*env)->ExceptionOccurred(env)) {\n+        if (messagelen) {\n+            JNU_ThrowByName(env, name, message);\n+        } else {\n+            JNU_ThrowByName(env, name, \"no further information\");\n+        }\n+    }\n@@ -96,7 +171,18 @@\n-JNIEXPORT int JNICALL\n-getErrorString(int err, char *buf, size_t len)\n-{\n-    int ret = 0;\n-    if (err == 0 || len < 1) return 0;\n-    ret = strerror_s(buf, len, err);\n-    return ret;\n+JNIEXPORT void JNICALL\n+throwByNameWithWinError(JNIEnv *env, const char *name, const char *defaultDetail) {\n+    char buf[256];\n+    size_t n = getLastWinErrorString(buf, sizeof(buf));\n+\n+    if (n > 0) {\n+        jstring s = JNU_NewStringPlatform(env, buf);\n+        if (s != NULL) {\n+            jobject x = JNU_NewObjectByName(env, name,\n+                                            \"(Ljava\/lang\/String;)V\", s);\n+            if (x != NULL) {\n+                (*env)->Throw(env, x);\n+            }\n+        }\n+    }\n+    if (!(*env)->ExceptionOccurred(env)) {\n+        JNU_ThrowByName(env, name, defaultDetail);\n+    }\n","filename":"src\/java.base\/windows\/native\/libjava\/jni_util_md.c","additions":110,"deletions":24,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -608,69 +608,0 @@\n-\/*\n- * Just like JLI_ReportErrorMessage, except that it concatenates the system\n- * error message if any, it's up to the calling routine to correctly\n- * format the separation of the messages.\n- *\/\n-JNIEXPORT void JNICALL\n-JLI_ReportErrorMessageSys(const char *fmt, ...)\n-{\n-    va_list vl;\n-\n-    int save_errno = errno;\n-    DWORD       errval;\n-    jboolean freeit = JNI_FALSE;\n-    char  *errtext = NULL;\n-\n-    va_start(vl, fmt);\n-\n-    if ((errval = GetLastError()) != 0) {               \/* Platform SDK \/ DOS Error *\/\n-        int n = FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM|\n-            FORMAT_MESSAGE_IGNORE_INSERTS|FORMAT_MESSAGE_ALLOCATE_BUFFER,\n-            NULL, errval, 0, (LPTSTR)&errtext, 0, NULL);\n-        if (errtext == NULL || n == 0) {                \/* Paranoia check *\/\n-            errtext = \"\";\n-            n = 0;\n-        } else {\n-            freeit = JNI_TRUE;\n-            if (n > 2) {                                \/* Drop final CR, LF *\/\n-                if (errtext[n - 1] == '\\n') n--;\n-                if (errtext[n - 1] == '\\r') n--;\n-                errtext[n] = '\\0';\n-            }\n-        }\n-    } else {   \/* C runtime error that has no corresponding DOS error code *\/\n-        errtext = strerror(save_errno);\n-    }\n-\n-    if (IsJavaw()) {\n-        char *message;\n-        int mlen;\n-        \/* get the length of the string we need *\/\n-        int len = mlen =  _vscprintf(fmt, vl) + 1;\n-        if (freeit) {\n-           mlen += (int)JLI_StrLen(errtext);\n-        }\n-\n-        message = (char *)JLI_MemAlloc(mlen);\n-        _vsnprintf(message, len, fmt, vl);\n-        message[len]='\\0';\n-\n-        if (freeit) {\n-           JLI_StrCat(message, errtext);\n-        }\n-\n-        MessageBox(NULL, message, \"Java Virtual Machine Launcher\",\n-            (MB_OK|MB_ICONSTOP|MB_APPLMODAL));\n-\n-        JLI_MemFree(message);\n-    } else {\n-        vfprintf(stderr, fmt, vl);\n-        if (freeit) {\n-           fprintf(stderr, \"%s\", errtext);\n-        }\n-    }\n-    if (freeit) {\n-        (void)LocalFree((HLOCAL)errtext);\n-    }\n-    va_end(vl);\n-}\n-\n","filename":"src\/java.base\/windows\/native\/libjli\/java_md.c","additions":0,"deletions":69,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * Function prototypes.\n+ * Utility declarations.\n","filename":"src\/java.base\/windows\/native\/libjli\/java_md.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-                JNU_ThrowByNameWithMessageAndLastError(env,\n+                throwByNameWithMessageAndWinError(env,\n@@ -413,1 +413,1 @@\n-                JNU_ThrowByNameWithMessageAndLastError(env,\n+                throwByNameWithMessageAndWinError(env,\n","filename":"src\/java.base\/windows\/native\/libnet\/NetworkInterface.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-                JNU_ThrowByNameWithMessageAndLastError(env,\n+                throwByNameWithMessageAndWinError(env,\n@@ -202,1 +202,1 @@\n-                JNU_ThrowByNameWithMessageAndLastError(env,\n+                throwByNameWithMessageAndWinError(env,\n","filename":"src\/java.base\/windows\/native\/libnet\/NetworkInterface_winXP.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-    JNU_ThrowByNameWithMessageAndLastError(env, name, defaultDetail);\n+    throwByNameWithMessageAndWinError(env, name, defaultDetail);\n","filename":"src\/java.base\/windows\/native\/libnet\/net_util_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Flush failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Flush failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/MappedMemoryUtils.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"WSARecv failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"WSARecv failed\");\n@@ -132,1 +132,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"WSARecv failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"WSARecv failed\");\n@@ -174,1 +174,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"WSASend failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"WSASend failed\");\n@@ -224,1 +224,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"WSASend failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"WSASend failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/DatagramDispatcher.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Invalid handle\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Invalid handle\");\n@@ -69,1 +69,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Read failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Read failed\");\n@@ -89,1 +89,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Invalid handle\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Invalid handle\");\n@@ -117,1 +117,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Read failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Read failed\");\n@@ -135,1 +135,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Invalid handle\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Invalid handle\");\n@@ -142,1 +142,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek failed\");\n@@ -165,1 +165,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Read failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Read failed\");\n@@ -172,1 +172,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek failed\");\n@@ -206,1 +206,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Write failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Write failed\");\n@@ -255,1 +255,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Write failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Write failed\");\n@@ -275,1 +275,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek failed\");\n@@ -290,1 +290,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Write failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Write failed\");\n@@ -296,1 +296,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Seek failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Seek failed\");\n@@ -322,1 +322,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"SetFilePointerEx failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"SetFilePointerEx failed\");\n@@ -340,1 +340,1 @@\n-                JNU_ThrowIOExceptionWithLastError(env, \"Force failed\");\n+                JNU_ThrowIOExceptionWithIOError(env, \"Force failed\");\n@@ -345,1 +345,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Force failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Force failed\");\n@@ -365,1 +365,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Truncation failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Truncation failed\");\n@@ -380,1 +380,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Size failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Size failed\");\n@@ -420,1 +420,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Lock failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Lock failed\");\n@@ -426,1 +426,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Lock failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Lock failed\");\n@@ -458,1 +458,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Release failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Release failed\");\n@@ -470,1 +470,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Close failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Close failed\");\n@@ -483,1 +483,1 @@\n-       JNU_ThrowIOExceptionWithLastError(env, \"DuplicateHandle failed\");\n+       JNU_ThrowIOExceptionWithIOError(env, \"DuplicateHandle failed\");\n@@ -548,1 +548,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Map failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Map failed\");\n@@ -562,1 +562,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Map failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Map failed\");\n@@ -570,1 +570,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Map failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Map failed\");\n@@ -586,1 +586,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Unmap failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Unmap failed\");\n@@ -619,1 +619,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"SetFilePointerEx failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"SetFilePointerEx failed\");\n@@ -640,1 +640,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"transfer failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"transfer failed\");\n@@ -669,1 +669,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"DirectIO setup failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"DirectIO setup failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetFileInformationByHandle failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetFileInformationByHandle failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/FileKey.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-    JNU_ThrowIOExceptionWithLastError(env, \"Read\/write failed\");\n+    JNU_ThrowIOExceptionWithIOError(env, \"Read\/write failed\");\n@@ -115,1 +115,1 @@\n-    JNU_ThrowIOExceptionWithLastError(env, \"Read\/write failed\");\n+    JNU_ThrowIOExceptionWithIOError(env, \"Read\/write failed\");\n@@ -166,1 +166,1 @@\n-                JNU_ThrowIOExceptionWithLastError(env, \"recv failed\");\n+                JNU_ThrowIOExceptionWithIOError(env, \"recv failed\");\n@@ -183,1 +183,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"send failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"send failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/IOUtil.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"CreateIoCompletionPort failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"CreateIoCompletionPort failed\");\n@@ -99,1 +99,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetQueuedCompletionStatus failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetQueuedCompletionStatus failed\");\n@@ -124,1 +124,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"PostQueuedCompletionStatus\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"PostQueuedCompletionStatus\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/Iocp.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Accept failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Accept failed\");\n@@ -780,1 +780,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"send failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"send failed\");\n@@ -797,1 +797,1 @@\n-                JNU_ThrowIOExceptionWithLastError(env, \"recv failed\");\n+                JNU_ThrowIOExceptionWithIOError(env, \"recv failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/Net.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Read failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Read failed\");\n@@ -138,1 +138,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Vector read failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Vector read failed\");\n@@ -188,1 +188,1 @@\n-                   JNU_ThrowIOExceptionWithLastError(env, \"Write failed\");\n+                   JNU_ThrowIOExceptionWithIOError(env, \"Write failed\");\n@@ -274,1 +274,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Vector write failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Vector write failed\");\n@@ -286,1 +286,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Socket close failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Socket close failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/SocketDispatcher.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Accept failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Accept failed\");\n@@ -249,1 +249,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"getsockname\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"getsockname\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/UnixDomainSockets.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"epoll_create1 failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"epoll_create1 failed\");\n@@ -84,1 +84,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"epoll_wait failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"epoll_wait failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/WEPollNatives.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"ReadFile failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"ReadFile failed\");\n@@ -88,1 +88,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"WriteFile failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"WriteFile failed\");\n@@ -118,1 +118,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"LockFile failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"LockFile failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/WindowsAsynchronousFileChannelImpl.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socket failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socket failed\");\n@@ -90,1 +90,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"WSAIoctl failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"WSAIoctl failed\");\n@@ -120,1 +120,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"AcceptEx failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"AcceptEx failed\");\n@@ -145,1 +145,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"closesocket failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"closesocket failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/WindowsAsynchronousServerSocketChannelImpl.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socket failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socket failed\");\n@@ -87,1 +87,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"WSAIoctl failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"WSAIoctl failed\");\n@@ -115,1 +115,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"ConnectEx failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"ConnectEx failed\");\n@@ -136,1 +136,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"shutdown failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"shutdown failed\");\n@@ -147,1 +147,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"closesocket failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"closesocket failed\");\n@@ -178,1 +178,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"WSARecv failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"WSARecv failed\");\n@@ -210,1 +210,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"WSASend failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"WSASend failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/WindowsAsynchronousSocketChannelImpl.c","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"Select failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"Select failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/WindowsSelectorImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socket\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socket\");\n@@ -121,1 +121,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"kill\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"kill\");\n@@ -222,1 +222,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"read\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"read\");\n@@ -257,1 +257,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"write\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"write\");\n","filename":"src\/jdk.attach\/aix\/native\/libattach\/VirtualMachineImpl.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socket\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socket\");\n@@ -124,1 +124,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"kill\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"kill\");\n@@ -225,1 +225,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"read\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"read\");\n@@ -260,1 +260,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"write\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"write\");\n","filename":"src\/jdk.attach\/linux\/native\/libattach\/VirtualMachineImpl.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socket\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socket\");\n@@ -126,1 +126,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"kill\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"kill\");\n@@ -227,1 +227,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"read\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"read\");\n@@ -262,1 +262,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"write\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"write\");\n@@ -292,1 +292,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"open\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"open\");\n","filename":"src\/jdk.attach\/macosx\/native\/libattach\/VirtualMachineImpl.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-                JNU_ThrowIOExceptionWithLastError(env, err_mesg);\n+                JNU_ThrowIOExceptionWithIOError(env, err_mesg);\n@@ -305,1 +305,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"CreateNamedPipe failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"CreateNamedPipe failed\");\n@@ -334,1 +334,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"ConnectNamedPipe failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"ConnectNamedPipe failed\");\n@@ -367,1 +367,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"ReadFile\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"ReadFile\");\n@@ -446,1 +446,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"VirtualAllocEx failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"VirtualAllocEx failed\");\n@@ -459,1 +459,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"VirtualAllocEx failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"VirtualAllocEx failed\");\n@@ -479,1 +479,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"WaitForSingleObject failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"WaitForSingleObject failed\");\n@@ -512,1 +512,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"CreateRemoteThread failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"CreateRemoteThread failed\");\n","filename":"src\/jdk.attach\/windows\/native\/libattach\/VirtualMachineImpl.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-    getLastErrorString(buffer, sizeof(buffer));\n+    getLastWinErrorString(buffer, sizeof(buffer));\n","filename":"src\/jdk.hotspot.agent\/share\/native\/libsaproc\/sadis.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"stat64 failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"stat64 failed\");\n","filename":"src\/jdk.management.agent\/unix\/native\/libmanagement_agent\/FileSystemImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetVolumeInformation failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetVolumeInformation failed\");\n@@ -143,1 +143,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetFileSecurity failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetFileSecurity failed\");\n@@ -151,1 +151,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"GetFileSecurity failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"GetFileSecurity failed\");\n@@ -168,1 +168,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetSecurityDescriptorOwner failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetSecurityDescriptorOwner failed\");\n@@ -183,1 +183,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetSecurityDescriptorDacl failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetSecurityDescriptorDacl failed\");\n@@ -213,1 +213,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetAclInformation failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"GetAclInformation failed\");\n@@ -227,1 +227,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"GetAce failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"GetAce failed\");\n","filename":"src\/jdk.management.agent\/windows\/native\/libmanagement_agent\/FileSystemImpl.c","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-            JNU_ThrowByNameWithLastError(env, \"java\/net\/SocketException\", errmsg);\n+            JNU_ThrowPerrorByName(env, \"java\/net\/SocketException\", errmsg);\n","filename":"src\/jdk.net\/linux\/native\/libextnet\/LinuxSocketOptions.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-            JNU_ThrowByNameWithLastError(env, \"java\/net\/SocketException\", errmsg);\n+            JNU_ThrowPerrorByName(env, \"java\/net\/SocketException\", errmsg);\n","filename":"src\/jdk.net\/macosx\/native\/libextnet\/MacOSXSocketOptions.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            JNU_ThrowByNameWithLastError(env, \"java\/net\/SocketException\", errmsg);\n+            JNU_ThrowPerrorByName(env, \"java\/net\/SocketException\", errmsg);\n","filename":"src\/jdk.net\/windows\/native\/libextnet\/WindowsSocketOptions.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-    JNU_ThrowByNameWithLastError(env, xn, \"NioSocketError\");\n+    JNU_ThrowPerrorByName(env, xn, \"NioSocketError\");\n@@ -162,1 +162,1 @@\n-        JNU_ThrowIOExceptionWithLastError(env, \"socketpair failed\");\n+        JNU_ThrowIOExceptionWithIOError(env, \"socketpair failed\");\n@@ -194,1 +194,1 @@\n-            JNU_ThrowByNameWithLastError(env, \"java\/lang\/UnsupportedOperationException\",\n+            JNU_ThrowPerrorByName(env, \"java\/lang\/UnsupportedOperationException\",\n@@ -309,1 +309,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"Close failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"Close failed\");\n@@ -323,1 +323,1 @@\n-            JNU_ThrowIOExceptionWithLastError(env, \"dup2 failed\");\n+            JNU_ThrowIOExceptionWithIOError(env, \"dup2 failed\");\n@@ -504,1 +504,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n@@ -525,1 +525,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n@@ -545,1 +545,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n@@ -559,1 +559,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n@@ -583,1 +583,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n@@ -609,1 +609,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n@@ -634,1 +634,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n@@ -652,1 +652,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n@@ -678,1 +678,1 @@\n-        JNU_ThrowByNameWithLastError(env, JNU_JAVANETPKG \"SocketException\",\n+        JNU_ThrowPerrorByName(env, JNU_JAVANETPKG \"SocketException\",\n","filename":"src\/jdk.sctp\/unix\/native\/libsctp\/SctpNet.c","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}