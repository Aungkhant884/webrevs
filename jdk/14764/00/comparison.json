{"files":[{"patch":"@@ -666,0 +666,1 @@\n+    case Op_VectorizedHashCode:\n@@ -3579,1 +3580,1 @@\n-              op == Op_StrCompressedCopy || op == Op_StrInflatedCopy ||\n+              op == Op_StrCompressedCopy || op == Op_StrInflatedCopy || op == Op_VectorizedHashCode ||\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8311023\n+ * @summary Crash encountered while converting the types of non-escaped object to instance types.\n+ *\n+ * @run main\/othervm\n+ *      -XX:-TieredCompilation -Xbatch compiler.escapeAnalysis.Test8311023\n+ *\/\n+\n+package compiler.escapeAnalysis;\n+\n+import java.util.Arrays;\n+\n+public class Test8311023 {\n+    public static int micro() {\n+        int[] a = { 10, 20, 30, 40, 50, 60};\n+        return Arrays.hashCode(a);\n+    }\n+\n+    public static void main(String [] args) {\n+        int res = 0;\n+        for (int i = 0; i < 10000; i++) {\n+            res += micro();\n+        }\n+        System.out.println(\"PASS:\" +  res);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/Test8311023.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}