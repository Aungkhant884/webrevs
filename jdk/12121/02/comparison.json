{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -134,1 +134,1 @@\n- * <\/pre>\n+ * }\n@@ -139,1 +139,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -148,1 +148,1 @@\n- * <\/pre>\n+ * }\n@@ -153,1 +153,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -162,1 +162,1 @@\n- * <\/pre>\n+ * }\n@@ -167,1 +167,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -173,1 +173,1 @@\n- * <\/pre>\n+ * }\n@@ -178,1 +178,1 @@\n- * <pre>\n+ * {@snippet lang=java :\n@@ -184,1 +184,1 @@\n- * <\/pre>\n+ * }\n@@ -189,1 +189,1 @@\n- * <pre>\n+ *{@snippet lang=java :\n@@ -195,1 +195,1 @@\n- * <\/pre>\n+ * }\n@@ -200,1 +200,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -216,1 +216,1 @@\n- * }<\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/text\/BreakIterator.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -67,1 +67,1 @@\n- *     for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next()) {\n+ *     for (char c = iter.first(); c != CharacterIterator.DONE; c = iter.next()) {\n@@ -71,1 +71,1 @@\n- * }<\/pre>\n+ * }\n@@ -74,1 +74,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -76,1 +76,1 @@\n- *     for(char c = iter.last(); c != CharacterIterator.DONE; c = iter.previous()) {\n+ *     for (char c = iter.last(); c != CharacterIterator.DONE; c = iter.previous()) {\n@@ -80,1 +80,1 @@\n- * }<\/pre>\n+ * }\n@@ -85,1 +85,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -99,1 +99,1 @@\n- * }<\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/text\/CharacterIterator.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,3 +81,3 @@\n- * <pre>\n- * new SimpleDateFormat(aPattern, DateFormatSymbols.getInstance(aLocale)).\n- * <\/pre>\n+ * {@snippet lang=java :\n+ * new SimpleDateFormat(aPattern, DateFormatSymbols.getInstance(aLocale));\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/text\/DateFormatSymbols.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,4 +73,4 @@\n- * <blockquote><pre>\n- * NumberFormat f = NumberFormat.getInstance(loc);\n- * if (f instanceof DecimalFormat) {\n- *     ((DecimalFormat) f).setDecimalSeparatorAlwaysShown(true);\n+ * <blockquote>{@snippet lang=java :\n+ * NumberFormat numFormat = NumberFormat.getInstance(loc);\n+ * if (numFormat instanceof DecimalFormat decFormat) {\n+ *     decFormat.setDecimalSeparatorAlwaysShown(true);\n@@ -78,1 +78,1 @@\n- * <\/pre><\/blockquote>\n+ * }<\/blockquote>\n@@ -341,1 +341,1 @@\n- * <blockquote><pre><strong>{@code\n+ * <blockquote>{@snippet lang=java :\n@@ -343,1 +343,1 @@\n- * \/\/ and percent format for each locale}<\/strong>{@code\n+ * \/\/ and percent format for each locale\n@@ -349,14 +349,3 @@\n- *     for (int i = 0; i < locales.length; ++i) {\n- *         if (locales[i].getCountry().length() == 0) {\n- *            continue; \/\/ Skip language-only locales\n- *         }\n- *         System.out.print(locales[i].getDisplayName());\n- *         switch (j) {\n- *         case 0:\n- *             form = NumberFormat.getInstance(locales[i]); break;\n- *         case 1:\n- *             form = NumberFormat.getIntegerInstance(locales[i]); break;\n- *         case 2:\n- *             form = NumberFormat.getCurrencyInstance(locales[i]); break;\n- *         default:\n- *             form = NumberFormat.getPercentInstance(locales[i]); break;\n+ *     for (Locale locale : locales) {\n+ *         if (locale.getCountry().length() == 0) {\n+ *             continue; \/\/ Skip language-only locales\n@@ -364,2 +353,9 @@\n- *         if (form instanceof DecimalFormat) {\n- *             System.out.print(\": \" + ((DecimalFormat) form).toPattern());\n+ *         System.out.print(locale.getDisplayName());\n+ *         form = switch (j) {\n+ *             case 0 -> NumberFormat.getInstance(locale);\n+ *             case 1 -> NumberFormat.getIntegerInstance(locale);\n+ *             case 2 -> NumberFormat.getCurrencyInstance(locale);\n+ *             default -> NumberFormat.getPercentInstance(locale);\n+ *         };\n+ *         if (form instanceof DecimalFormat decForm) {\n+ *             System.out.print(\": \" + decForm.toPattern());\n@@ -373,1 +369,1 @@\n- * }<\/pre><\/blockquote>\n+ * }<\/blockquote>\n","filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormat.java","additions":21,"deletions":25,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -76,1 +76,1 @@\n- * }<\/pre>\n+ * }\n@@ -83,1 +83,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -88,1 +88,1 @@\n- * }<\/pre>\n+ * }\n@@ -93,1 +93,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -95,1 +95,1 @@\n- * }<\/pre>\n+ * }\n@@ -106,1 +106,1 @@\n- * <pre>{@code\n+ * {@snippet lang=java :\n@@ -108,1 +108,1 @@\n- * }<\/pre>\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/text\/NumberFormat.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}