{"files":[{"patch":"@@ -263,1 +263,1 @@\n-            if (packageName != null && !packageName.equals(\"\")) {\n+            if (packageName != null && !packageName.isEmpty()) {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/compileproperties\/CompileProperties.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-        if (!oldDatafile.equals(\"\")) {\n+        if (!oldDatafile.isEmpty()) {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatebreakiteratordata\/CharacterCategory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,2 +164,2 @@\n-        if (language.equals(\"\")) {\n-            if (!country.equals(\"\") || !valiant.equals(\"\")) {\n+        if (language.isEmpty()) {\n+            if (!country.isEmpty() || !valiant.isEmpty()) {\n@@ -175,1 +175,1 @@\n-        if (!country.equals(\"\") || !valiant.equals(\"\")) {\n+        if (!country.isEmpty() || !valiant.isEmpty()) {\n@@ -178,1 +178,1 @@\n-            if (!valiant.equals(\"\")) {\n+            if (!valiant.isEmpty()) {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatebreakiteratordata\/GenerateBreakIteratorData.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2025,1 +2025,1 @@\n-        if (tmpbuf.equals(\"\")) {\n+        if (tmpbuf.isEmpty()) {\n@@ -2042,1 +2042,1 @@\n-            if (!outputDir.equals(\"\")) {\n+            if (!outputDir.isEmpty()) {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatebreakiteratordata\/RuleBasedBreakIteratorBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -378,1 +378,1 @@\n-        if (s == null || s.equals(\"\")) {\n+        if (s == null || s.isEmpty()) {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/pandocfilter\/json\/JSONParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-        if (toolProperty != null && !(toolName == null || toolName.equals(\"\"))) {\n+        if (toolProperty != null && !(toolName == null || toolName.isEmpty())) {\n@@ -172,1 +172,1 @@\n-            if (toolName.equals(\"\")) {\n+            if (toolName.isEmpty()) {\n@@ -246,1 +246,1 @@\n-        okButton.setEnabled(toolProperty == null || (toolName != null && !toolName.equals(\"\")));\n+        okButton.setEnabled(toolProperty == null || (toolName != null && !toolName.isEmpty()));\n@@ -307,1 +307,1 @@\n-        return toolName.equals(\"\") ? \"\" : props.getProperty(toolName + \".args\", \"\");\n+        return toolName.isEmpty() ? \"\" : props.getProperty(toolName + \".args\", \"\");\n","filename":"make\/langtools\/tools\/anttasks\/SelectToolTask.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-            if (packageName != null && !packageName.equals(\"\")) {\n+            if (packageName != null && !packageName.isEmpty()) {\n","filename":"make\/langtools\/tools\/compileproperties\/CompileProperties.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-                if (colName.equals(\"\")) {\n+                if (colName.isEmpty()) {\n","filename":"src\/demo\/share\/jfc\/TableExample\/JDBCAdapter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-                if (!trimmed.equals(\"\") && !trimmed.startsWith(\"\/\/\") && !trimmed.startsWith(\"#\")) {\n+                if (!trimmed.isEmpty() && !trimmed.startsWith(\"\/\/\") && !trimmed.startsWith(\"#\")) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvFill.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-            if (name == null || name.equals(\"\"))\n+            if (name == null || name.isEmpty())\n@@ -267,1 +267,1 @@\n-        if ( (key == null) || (key.trim().equals(\"\")) ) {\n+        if ( (key == null) || (key.trim().isEmpty()) ) {\n@@ -305,1 +305,1 @@\n-        if ( (key == null) || (key.trim().equals(\"\")) ) {\n+        if ( (key == null) || (key.trim().isEmpty()) ) {\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/CompositeDataSupport.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-        if (type.equals(\"\") || isEmptyValue(value)) {\n+        if (type.isEmpty() || isEmptyValue(value)) {\n","filename":"src\/java.naming\/share\/classes\/javax\/naming\/ldap\/Rdn.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -342,1 +342,1 @@\n-        if (action.equals(\"\")) {\n+        if (action.isEmpty()) {\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/ServicePermission.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-                        if (defaultLib == null || defaultLib.trim().equals(\"\")) {\n+                        if (defaultLib == null || defaultLib.trim().isEmpty()) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/SunNativeProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1364,1 +1364,1 @@\n-        if (kdcs.equals(\"\")) {\n+        if (kdcs.isEmpty()) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Config.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -342,1 +342,1 @@\n-            if (NName == null || NName.equals(\"\")) {\n+            if (NName == null || NName.isEmpty()) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/Canonicalizer20010315.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -595,1 +595,1 @@\n-            if (NName == null || NName.equals(\"\")) {\n+            if (NName == null || NName.isEmpty()) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/CanonicalizerBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        if (dn == null || dn.equals(\"\")) {\n+        if (dn == null || dn.isEmpty()) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/RFC2253Parser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-        if (context.uriToResolve.equals(\"\") || context.uriToResolve.charAt(0) == '#') {\n+        if (context.uriToResolve.isEmpty() || context.uriToResolve.charAt(0) == '#') {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/implementations\/ResolverDirectHTTP.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        if (context.uriToResolve.equals(\"\")) {\n+        if (context.uriToResolve.isEmpty()) {\n@@ -124,1 +124,1 @@\n-        if (context.uriToResolve.equals(\"\") ||\n+        if (context.uriToResolve.isEmpty() ||\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/implementations\/ResolverFragment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-        if (context.uriToResolve.equals(\"\") || context.uriToResolve.charAt(0) == '#' ||\n+        if (context.uriToResolve.isEmpty() || context.uriToResolve.charAt(0) == '#' ||\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/implementations\/ResolverLocalFilesystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-        if (uri != null && !uri.equals(\"\")) {\n+        if (uri != null && !uri.isEmpty()) {\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMReference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-        if (!uri.equals(\"\")) {\n+        if (!uri.isEmpty()) {\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMRetrievalMethod.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -449,1 +449,1 @@\n-            if (value != null && !value.equals(\"\")) {\n+            if (value != null && !value.isEmpty()) {\n@@ -456,1 +456,1 @@\n-            if (value != null && !value.equals(\"\")) {\n+            if (value != null && !value.isEmpty()) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/utils\/XMLSecurityManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -463,1 +463,1 @@\n-                else if (systemId != null && !systemId.equals(\"\")) {\n+                else if (systemId != null && !systemId.isEmpty()) {\n@@ -773,1 +773,1 @@\n-            if ((uri != null) && (!uri.equals(\"\")))\n+            if ((uri != null) && (!uri.isEmpty()))\n@@ -813,1 +813,1 @@\n-        if ((uri != null) && (!uri.equals(\"\"))){\n+        if ((uri != null) && (!uri.isEmpty())){\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/XSLTC.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -259,1 +259,1 @@\n-    if (baseURI != null && !baseURI.equals(\"\")) {\n+    if (baseURI != null && !baseURI.isEmpty()) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/dom\/DocumentCache.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-        if (base != null && !base.equals(\"\")) {\n+        if (base != null && !base.isEmpty()) {\n@@ -168,1 +168,1 @@\n-        if (uri == null || uri.equals(\"\")) {\n+        if (uri == null || uri.isEmpty()) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/dom\/LoadDocument.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-            if (attrs.getLocalName(i).equals(\"\")) {\n+            if (attrs.getLocalName(i).isEmpty()) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/SAX2DOM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -545,1 +545,1 @@\n-        if (type == null || type.equals(\"\") || listener == null)\n+        if (type == null || type.isEmpty() || listener == null)\n@@ -589,1 +589,1 @@\n-        if (type == null || type.equals(\"\") || listener == null)\n+        if (type == null || type.isEmpty() || listener == null)\n@@ -693,1 +693,1 @@\n-        if(!evt.initialized || evt.type == null || evt.type.equals(\"\")) {\n+        if(!evt.initialized || evt.type == null || evt.type.isEmpty()) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/dom\/DocumentImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1054,1 +1054,1 @@\n-            return prefix.equals(\"\") ? null : prefix;\n+            return prefix.isEmpty() ? null : prefix;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/XMLStreamReaderImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2329,1 +2329,1 @@\n-            return uri.equals(\"\") ? fAttributes.getType(null, localName) :\n+            return uri.isEmpty() ? fAttributes.getType(null, localName) :\n@@ -2342,1 +2342,1 @@\n-            return uri.equals(\"\") ? fAttributes.getValue(null, localName) :\n+            return uri.isEmpty() ? fAttributes.getValue(null, localName) :\n@@ -2351,1 +2351,1 @@\n-            return uri.equals(\"\") ? fAttributes.getIndex(null, localPart) :\n+            return uri.isEmpty() ? fAttributes.getIndex(null, localPart) :\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/AbstractSAXParser.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-                        if(value != null && !value.equals(\"\")){\n+                        if(value != null && !value.isEmpty()){\n@@ -152,1 +152,1 @@\n-                        if(value != null && !value.equals(\"\")){\n+                        if(value != null && !value.isEmpty()){\n@@ -163,1 +163,1 @@\n-                        if(value != null && !value.equals(\"\")){\n+                        if(value != null && !value.isEmpty()){\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/util\/SecurityManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -531,1 +531,1 @@\n-            if (value != null && !value.equals(\"\")) {\n+            if (value != null && !value.isEmpty()) {\n@@ -538,1 +538,1 @@\n-            if (value != null && !value.equals(\"\")) {\n+            if (value != null && !value.isEmpty()) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/utils\/XMLSecurityManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-    if (m_extendedTypes[ExpandedNameID].getLocalName().equals(\"\"))\n+    if (m_extendedTypes[ExpandedNameID].getLocalName().isEmpty())\n@@ -321,1 +321,1 @@\n-    return (namespace.equals(\"\") ? null : namespace);\n+    return (namespace.isEmpty() ? null : namespace);\n@@ -333,1 +333,1 @@\n-    if (m_extendedTypes[ExpandedNameID].getNamespace().equals(\"\"))\n+    if (m_extendedTypes[ExpandedNameID].getNamespace().isEmpty())\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/dtm\/ref\/ExpandedNameTable.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-        if (methodListFileName != null && !methodListFileName.equals(\"\")) {\n+        if (methodListFileName != null && !methodListFileName.isEmpty()) {\n@@ -190,1 +190,1 @@\n-                            if (!trimmedLine.equals(\"\")) {\n+                            if (!trimmedLine.isEmpty()) {\n","filename":"src\/jdk.aot\/share\/classes\/jdk.tools.jaotc\/src\/jdk\/tools\/jaotc\/Collector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -543,1 +543,1 @@\n-        if (expr == null || expr.equals(\"\"))\n+        if (expr == null || expr.isEmpty())\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/api\/JavacTaskImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -728,1 +728,1 @@\n-        if (name.equals(\"\"))\n+        if (name.isEmpty())\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-        if (strName.equals(\"\"))\n+        if (strName.isEmpty())\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-            if (from == null || from.trim().equals(\"\")) from = justPkgName;\n+            if (from == null || from.trim().isEmpty()) from = justPkgName;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/CompileJavaPackages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-        settings = (serverConf.equals(\"\")) ? \"id=\"+id+\",portfile=\"+portfileName : serverConf;\n+        settings = (serverConf.isEmpty()) ? \"id=\"+id+\",portfile=\"+portfileName : serverConf;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/client\/SjavacClient.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-        if (packageName.equals(\"\")) {\n+        if (packageName.isEmpty()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/comp\/SmartFileManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -328,1 +328,1 @@\n-        if(delim == null || delim.equals(\"\"))\n+        if(delim == null || delim.isEmpty())\n@@ -349,1 +349,1 @@\n-        if(delim == null || delim.equals(\"\"))\n+        if(delim == null || delim.isEmpty())\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/com\/sun\/java\/swing\/ui\/CommonUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-        if(panelTitle != null && panelTitle.equals(\"\"))\n+        if(panelTitle != null && panelTitle.isEmpty())\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/com\/sun\/java\/swing\/ui\/WizardDlg.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-            paths[i] = new File(tmp[i].equals(\"\")? \".\" : tmp[i]);\n+            paths[i] = new File(tmp[i].isEmpty()? \".\" : tmp[i]);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/SALauncherLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-          if ((name == null) || (name.equals(\"\"))) {\n+          if ((name == null) || (name.isEmpty())) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/windbg\/WindbgCDebugInfoBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-                            if ((keyValue[1] == null) || keyValue[1].equals(\"\")) {\n+                            if ((keyValue[1] == null) || keyValue[1].isEmpty()) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/JMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -291,1 +291,1 @@\n-        if (findText == null || findText.equals(\"\")) {\n+        if (findText == null || findText.isEmpty()) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/ObjectHistogramPanel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-      if (findText == null || findText.equals(\"\")) {\n+      if (findText == null || findText.isEmpty()) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/classbrowser\/ClassBrowserPanel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        if (address.getText() != null && !address.getText().equals(\"\")) {\n+        if (address.getText() != null && !address.getText().isEmpty()) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/classbrowser\/CodeViewerPanel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-            emptyScope = unqualifiedName.equals(\"\");\n+            emptyScope = unqualifiedName.isEmpty();\n","filename":"src\/jdk.internal.vm.compiler\/share\/classes\/org.graalvm.compiler.debug\/src\/org\/graalvm\/compiler\/debug\/ScopeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-        if (optionName.equals(\"\")) {\n+        if (optionName.isEmpty()) {\n","filename":"src\/jdk.internal.vm.compiler\/share\/classes\/org.graalvm.compiler.options.processor\/src\/org\/graalvm\/compiler\/options\/processor\/OptionProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-            if (subopt.equals(\"\") || subopt.equals(\"all\")) {\n+            if (subopt.isEmpty() || subopt.equals(\"all\")) {\n@@ -215,1 +215,1 @@\n-            if (subopt.equals(\"\") || subopt.equals(\"all\")) {\n+            if (subopt.isEmpty() || subopt.equals(\"all\")) {\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jmap\/JMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -915,1 +915,1 @@\n-        if (userDN.equals(\"\")) {\n+        if (userDN.isEmpty()) {\n","filename":"src\/jdk.security.auth\/share\/classes\/com\/sun\/security\/auth\/module\/LdapLoginModule.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-        if (algorithm2.equals(\"\") == false) {\n+        if (!algorithm2.isEmpty()) {\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/sha\/TestDigest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-        if (stringToRefer.equals(\"\") && cpci != ConstantPoolTestsHelper.NO_CP_CACHE_PRESENT) {\n+        if (stringToRefer.isEmpty() && cpci != ConstantPoolTestsHelper.NO_CP_CACHE_PRESENT) {\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/ResolvePossiblyCachedConstantInPoolTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        Assert.assertTrue(!virtual.toString().equals(\"\"));\n+        Assert.assertTrue(!virtual.toString().isEmpty());\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/VirtualObjectFormattingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-            } else if (value != null && minchar > 0 && value.trim().equals(\"\")) {\n+            } else if (value != null && minchar > 0 && value.trim().isEmpty()) {\n","filename":"test\/hotspot\/jtreg\/compiler\/stringopts\/TestOptimizeStringConcat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-        final boolean expectDisable = !early.equals(\"\");\n+        final boolean expectDisable = !early.isEmpty();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/serviceability\/ReplaceCriticalClasses.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-                                    if ((refName == null) || (refName.equals(\"\"))) {\n+                                    if ((refName == null) || (refName.isEmpty())) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareEvent\/referenceType\/refType001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-                                } else if ((threadName == null) || (threadName.equals(\"\"))) {\n+                                } else if ((threadName == null) || (threadName.isEmpty())) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareEvent\/thread\/thread001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-                        if ((refName == null) || (refName.equals(\"\"))) {\n+                        if ((refName == null) || (refName.isEmpty())) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassUnloadEvent\/className\/classname001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-                        if ((refSignature == null) || (refSignature.equals(\"\"))) {\n+                        if ((refSignature == null) || (refSignature.isEmpty())) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassUnloadEvent\/classSignature\/signature001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-                                    if ((threadName == null) || (threadName.equals(\"\"))) {\n+                                    if ((threadName == null) || (threadName.isEmpty())) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadDeathEvent\/thread\/thread001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -223,1 +223,1 @@\n-                        if ((threadName == null) || (threadName.equals(\"\"))) {\n+                        if ((threadName == null) || (threadName.isEmpty())) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadStartEvent\/thread\/thread001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-                                       if ((threadName == null) || (threadName.equals(\"\"))) {\n+                                       if ((threadName == null) || (threadName.isEmpty())) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VMStartEvent\/thread\/thread001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        if (classesDir.equals(\"\")) {\n+        if (classesDir.isEmpty()) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ResourceExhausted\/resexhausted003.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-            if (returnedLevel == null || !returnedLevel.equals(\"\")) {\n+            if (returnedLevel == null || !returnedLevel.isEmpty()) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/LoggingMXBean\/getLoggerLevel\/getloggerlevel001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-            if (parentName == null || !parentName.equals(\"\")) {\n+            if (parentName == null || !parentName.isEmpty()) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/LoggingMXBean\/getParentLoggerName\/getparentloggername001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1182,1 +1182,1 @@\n-            if (answer.equals(\"\"))\n+            if (answer.isEmpty())\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Binder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -346,1 +346,1 @@\n-            if (answer.equals(\"\"))\n+            if (answer.isEmpty())\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdwp\/Binder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-        if (!(windir == null || windir.equals(\"\"))) {\n+        if (!(windir == null || windir.isEmpty())) {\n@@ -204,1 +204,1 @@\n-                } else if (userInput.trim().equals(\"\")) {\n+                } else if (userInput.trim().isEmpty()) {\n@@ -1030,1 +1030,1 @@\n-                boolean win = (!(windir == null || windir.equals(\"\")));\n+                boolean win = (!(windir == null || windir.isEmpty()));\n@@ -1740,1 +1740,1 @@\n-                if (value == null || value.equals(\"\")) {\n+                if (value == null || value.isEmpty()) {\n@@ -1749,1 +1749,1 @@\n-                if (value == null || value.equals(\"\")) {\n+                if (value == null || value.isEmpty()) {\n@@ -1757,1 +1757,1 @@\n-                if (!(value == null || value.equals(\"\"))) {\n+                if (!(value == null || value.isEmpty())) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/BindServer.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-        if (null == str || str.equals(\"\"))\n+        if (null == str || str.isEmpty())\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/compiler\/jbe\/constprop\/constprop02\/constprop02.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-                    if (!attrPrefix.equals(\"\") && !attrPrefixDecl) {\n+                    if (!attrPrefix.isEmpty() && !attrPrefixDecl) {\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/stream\/XMLStreamWriterTest\/DOMUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        if (!mode.equals(\"\")) {\n+        if (!mode.isEmpty()) {\n@@ -81,1 +81,1 @@\n-        if (!padding.equals(\"\")) {\n+        if (!padding.isEmpty()) {\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/CICO\/PBEFunc\/PBEAlgorithm.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n-                    if (value.equals(\"\")) {\n+                    if (value.isEmpty()) {\n","filename":"test\/jdk\/com\/sun\/jdi\/CompatibleConnectors.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        if (!debuggeeVMOptions.equals(\"\")) {\n+        if (!debuggeeVMOptions.isEmpty()) {\n","filename":"test\/jdk\/com\/sun\/jdi\/EventQueueDisconnectTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        if (!sr.value().equals(\"\")) {\n+        if (!sr.value().isEmpty()) {\n","filename":"test\/jdk\/com\/sun\/jdi\/GetUninitializedStringValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        if (opts.equals(\"\")) {\n+        if (opts.isEmpty()) {\n","filename":"test\/jdk\/com\/sun\/jdi\/VMConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-        if (name != null && name.get(name.size() - 1).equals(\"\")) {\n+        if (name != null && name.get(name.size() - 1).isEmpty()) {\n","filename":"test\/jdk\/com\/sun\/jndi\/dns\/FedTests\/FedObjectFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-                    if (result.equals(\"\")) {\n+                    if (result.isEmpty()) {\n@@ -111,1 +111,1 @@\n-                    if (result.equals(\"\")) {\n+                    if (result.isEmpty()) {\n","filename":"test\/jdk\/com\/sun\/security\/sasl\/ClientCallbackHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-                    if (result.equals(\"\")) {\n+                    if (result.isEmpty()) {\n@@ -111,1 +111,1 @@\n-                    if (result.equals(\"\")) {\n+                    if (result.isEmpty()) {\n","filename":"test\/jdk\/com\/sun\/security\/sasl\/digest\/ClientCallbackHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        if (failed.equals(\"\")){\n+        if (failed.isEmpty()){\n","filename":"test\/jdk\/java\/awt\/Choice\/UnfocusableCB_ERR\/UnfocusableCB_ERR.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-        if (passed.equals(\"\")){\n+        if (passed.isEmpty()){\n","filename":"test\/jdk\/java\/awt\/Component\/CompEventOnHiddenComponent\/CompEventOnHiddenComponent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-        if (tf1.getText().equals(\"\")) {\n+        if (tf1.getText().isEmpty()) {\n","filename":"test\/jdk\/java\/awt\/Focus\/ConsumeNextKeyTypedOnModalShowTest\/ConsumeNextKeyTypedOnModalShowTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-        if (!excplicitModifier.equals(\"\")){\n+        if (!excplicitModifier.isEmpty()){\n@@ -311,1 +311,1 @@\n-        if (!extraModifiers.equals(\"\")){\n+        if (!extraModifiers.isEmpty()){\n@@ -324,1 +324,1 @@\n-        if (!extraModifiersButton3.equals(\"\")){\n+        if (!extraModifiersButton3.isEmpty()){\n","filename":"test\/jdk\/java\/awt\/Mouse\/MouseModifiersUnitTest\/MouseModifiersUnitTest_Standard.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-                if (scaleStr != null && !scaleStr.equals(\"\")) {\n+                if (scaleStr != null && !scaleStr.isEmpty()) {\n","filename":"test\/jdk\/java\/awt\/SplashScreen\/MultiResolutionSplash\/unix\/UnixMultiResolutionSplashTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-                if (fcname.equals(\"\")) {\n+                if (fcname.isEmpty()) {\n","filename":"test\/jdk\/java\/awt\/font\/FontNames\/FCCompositeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -344,1 +344,1 @@\n-                if (! r.out().equals(\"\"))\n+                if (! r.out().isEmpty())\n@@ -346,1 +346,1 @@\n-                if (! r.err().equals(\"\"))\n+                if (! r.err().isEmpty())\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/Basic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-            if (! cr.err.equals(\"\"))\n+            if (! cr.err.isEmpty())\n@@ -166,1 +166,1 @@\n-\/\/          && ! outputOf(\"command.com\", \"\/C\", \"CD\").equals(\"\")) {\n+\/\/          && ! outputOf(\"command.com\", \"\/C\", \"CD\").isEmpty()) {\n@@ -175,1 +175,1 @@\n-\/\/          && ! outputOf(\"COMMAND.COM\", \"\/C\", \"CD\").equals(\"\")) {\n+\/\/          && ! outputOf(\"COMMAND.COM\", \"\/C\", \"CD\").isEmpty()) {\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/exec\/WinCommand.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        if (prop != null && !prop.equals(\"\")) {\n+        if (prop != null && !prop.isEmpty()) {\n","filename":"test\/jdk\/java\/lang\/SecurityManager\/CheckPackageMatching.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-            if (vmOpt != null && !vmOpt.equals(\"\")) {\n+            if (vmOpt != null && !vmOpt.isEmpty()) {\n","filename":"test\/jdk\/java\/lang\/System\/MacEncoding\/TestFileEncoding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-            if (rest.equals(\"\") || method.getParameterTypes().length > 0\n+            if (rest.isEmpty() || method.getParameterTypes().length > 0\n","filename":"test\/jdk\/java\/lang\/management\/CompositeData\/OpenTypeConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-        if (!l2.equals(\"\")) {\n+        if (!l2.isEmpty()) {\n@@ -200,1 +200,1 @@\n-        if (!p2.equals(\"\")) {\n+        if (!p2.isEmpty()) {\n","filename":"test\/jdk\/java\/lang\/management\/PlatformLoggingMXBean\/LoggingMXBeanTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1150,1 +1150,1 @@\n-                while(!requestLine.equals(\"\")) {\n+                while(!requestLine.isEmpty()) {\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/SetAuthenticator\/HTTPTestServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -433,1 +433,1 @@\n-                    while (!line.equals(\"\")) {\n+                    while (!line.isEmpty()) {\n","filename":"test\/jdk\/java\/net\/httpclient\/CookieHeaderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1696,1 +1696,1 @@\n-                        while(!line.equals(\"\")) {\n+                        while(!line.isEmpty()) {\n","filename":"test\/jdk\/java\/net\/httpclient\/DigestEchoServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -421,1 +421,1 @@\n-                    while (!line.equals(\"\")) {\n+                    while (!line.isEmpty()) {\n","filename":"test\/jdk\/java\/net\/httpclient\/EncodedCharsInURI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-                        while(!requestLine.equals(\"\")) {\n+                        while(!requestLine.isEmpty()) {\n","filename":"test\/jdk\/java\/net\/httpclient\/ProxyTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-            if (response.body() != null && !response.body().equals(\"\"))\n+            if (response.body() != null && !response.body().isEmpty())\n@@ -115,1 +115,1 @@\n-        if (response.body() != null && !response.body().equals(\"\"))\n+        if (response.body() != null && !response.body().isEmpty())\n","filename":"test\/jdk\/java\/net\/httpclient\/Response204.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -322,1 +322,1 @@\n-                    while (!line.equals(\"\")) {\n+                    while (!line.isEmpty()) {\n","filename":"test\/jdk\/java\/net\/httpclient\/ServerCloseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-                        while(!requestLine.equals(\"\")) {\n+                        while(!requestLine.isEmpty()) {\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ProxyTest2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-        if (path == null || path.equals(\"\"))\n+        if (path == null || path.isEmpty())\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/Http2TestServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -403,1 +403,1 @@\n-                       sslSocket.getApplicationProtocol().equals(\"\")) {\n+                       sslSocket.getApplicationProtocol().isEmpty()) {\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/Http2TestServerConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-                    return (rp.getFileName().toString().equals(\"\")) ? 0 : rp.getNameCount();\n+                    return (rp.getFileName().toString().isEmpty()) ? 0 : rp.getNameCount();\n","filename":"test\/jdk\/java\/nio\/file\/Files\/walkFileTree\/MaxDepth.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,2 +186,2 @@\n-            if ((!outString.equals(\"\")) &&\n-                (!errString.equals(\"\")))\n+            if ((!outString.isEmpty()) &&\n+                (!errString.isEmpty()))\n","filename":"test\/jdk\/java\/rmi\/activation\/Activatable\/checkAnnotations\/CheckAnnotations.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-                    trace.equals(\"\"))\n+                    trace.isEmpty())\n","filename":"test\/jdk\/java\/rmi\/activation\/ActivationSystem\/stubClassesPermitted\/StubClassesPermitted.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-        if (!TestParams.testSrc.equals(\"\")) {\n+        if (!TestParams.testSrc.isEmpty()) {\n@@ -99,1 +99,1 @@\n-        \/\/if (!TestParams.testClasses.equals(\"\")) {\n+        \/\/if (!TestParams.testClasses.isEmpty()) {\n@@ -157,1 +157,1 @@\n-        if (!TestParams.testSrc.equals(\"\")) {\n+        if (!TestParams.testSrc.isEmpty()) {\n@@ -160,1 +160,1 @@\n-        if (!TestParams.testClasses.equals(\"\")) {\n+        if (!TestParams.testClasses.isEmpty()) {\n@@ -164,1 +164,1 @@\n-        if (!TestParams.testJavaOpts.equals(\"\")) {\n+        if (!TestParams.testJavaOpts.isEmpty()) {\n@@ -170,1 +170,1 @@\n-        if (!TestParams.testVmOpts.equals(\"\")) {\n+        if (!TestParams.testVmOpts.isEmpty()) {\n","filename":"test\/jdk\/java\/rmi\/testlibrary\/RMID.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-            if (!property.equals(\"\")) {\n+            if (!property.isEmpty()) {\n","filename":"test\/jdk\/java\/rmi\/transport\/checkFQDN\/CheckFQDN.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        if (num == null || num.equals(\"\") || num.equals(\"*\")) {\n+        if (num == null || num.isEmpty() || num.equals(\"*\")) {\n@@ -107,1 +107,1 @@\n-            if (low.equals(\"\")) {\n+            if (low.isEmpty()) {\n@@ -117,1 +117,1 @@\n-            if (high.equals(\"\")) {\n+            if (high.isEmpty()) {\n","filename":"test\/jdk\/java\/security\/Policy\/ExtensiblePolicy\/TVJar\/TVPermission.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -845,2 +845,2 @@\n-        if (currency.equals(\"\") ||\n-            intlCurrency.equals(\"\") ||\n+        if (currency.isEmpty() ||\n+            intlCurrency.isEmpty() ||\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/NumberRegression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-                if (!s.equals(\"\")) {\n+                if (!s.isEmpty()) {\n@@ -233,1 +233,1 @@\n-                    if (!s.equals(\"\")) {\n+                    if (!s.isEmpty()) {\n","filename":"test\/jdk\/java\/text\/Normalizer\/NormalizerAPITest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -408,1 +408,1 @@\n-        if (tags.equals(\"\")) {\n+        if (tags.isEmpty()) {\n","filename":"test\/jdk\/java\/util\/Locale\/Bug7069824.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-        if (tags.equals(\"\")) {\n+        if (tags.isEmpty()) {\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8035133.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-        if (tags.equals(\"\")) {\n+        if (tags.isEmpty()) {\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8040211.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-        if (tags.equals(\"\")) {\n+        if (tags.isEmpty()) {\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8159420.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-            if (!testLocale.getVariant().equals(\"\")) {\n+            if (!testLocale.getVariant().isEmpty()) {\n@@ -340,1 +340,1 @@\n-            if (expectedLang.equals(\"\") && defaultIsFrench) {\n+            if (expectedLang.isEmpty() && defaultIsFrench) {\n@@ -343,1 +343,1 @@\n-            if (expectedLang.equals(\"\")) {\n+            if (expectedLang.isEmpty()) {\n@@ -348,1 +348,1 @@\n-            if (expectedCtry.equals(\"\") && defaultIsFrench) {\n+            if (expectedCtry.isEmpty() && defaultIsFrench) {\n@@ -351,1 +351,1 @@\n-            if (expectedCtry.equals(\"\")) {\n+            if (expectedCtry.isEmpty()) {\n@@ -356,1 +356,1 @@\n-            if (expectedVar.equals(\"\") && defaultIsFrench) {\n+            if (expectedVar.isEmpty() && defaultIsFrench) {\n@@ -359,1 +359,1 @@\n-            if (expectedVar.equals(\"\")) {\n+            if (expectedVar.isEmpty()) {\n@@ -364,1 +364,1 @@\n-            if (expectedName.equals(\"\") && defaultIsFrench) {\n+            if (expectedName.isEmpty() && defaultIsFrench) {\n@@ -367,1 +367,1 @@\n-            if (expectedName.equals(\"\")) {\n+            if (expectedName.isEmpty()) {\n@@ -828,1 +828,1 @@\n-        if (!thaiCurrency.getPositiveSuffix().equals(\"\")) {\n+        if (!thaiCurrency.getPositiveSuffix().isEmpty()) {\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleTest.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-                    if (modifier.equals(\"\")) {\n+                    if (modifier.isEmpty()) {\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/DateFormatProviderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-                if (!lang.equals(\"\")) {\n+                if (!lang.isEmpty()) {\n@@ -101,1 +101,1 @@\n-                if (!ctry.equals(\"\")) {\n+                if (!ctry.isEmpty()) {\n@@ -106,1 +106,1 @@\n-                if (!vrnt.equals(\"\")) {\n+                if (!vrnt.isEmpty()) {\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/LocaleNameProviderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-        if (!(locale.getLanguage().equals(\"fr\")) || !(locale.getCountry().equals(\"\")))\n+        if (!(locale.getLanguage().equals(\"fr\")) || !(locale.getCountry().isEmpty()))\n@@ -277,1 +277,1 @@\n-        if (!(locale.getLanguage().equals(\"\")) || !(locale.getCountry().equals(\"\")))\n+        if (!(locale.getLanguage().isEmpty()) || !(locale.getCountry().isEmpty()))\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/ResourceBundleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-            if (!sc.next().equals(\"\"))\n+            if (!sc.next().isEmpty())\n@@ -429,1 +429,1 @@\n-        if (!sc.nextLine().equals(\"\")) failCount++;\n+        if (!sc.nextLine().isEmpty()) failCount++;\n@@ -466,1 +466,1 @@\n-        if (!sc.nextLine().equals(\"\"))\n+        if (!sc.nextLine().isEmpty())\n@@ -496,1 +496,1 @@\n-                if (!empty.equals(\"\"))\n+                if (!empty.isEmpty())\n","filename":"test\/jdk\/java\/util\/Scanner\/ScanTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-        if (!l2.equals(\"\")) {\n+        if (!l2.isEmpty()) {\n@@ -174,1 +174,1 @@\n-        if (!p2.equals(\"\")) {\n+        if (!p2.isEmpty()) {\n","filename":"test\/jdk\/java\/util\/logging\/LoggingMXBeanTest2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-            check((((comment == null) || comment.equals(\"\"))\n+            check((((comment == null) || comment.isEmpty())\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/Assortment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -407,1 +407,1 @@\n-        if (name.equals(\"\") || name.equals(\".\") || name.equals(zname)) {\n+        if (name.isEmpty() || name.equals(\".\") || name.equals(zname)) {\n","filename":"test\/jdk\/java\/util\/zip\/zip.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-        if (v.equals(\"\")) {\n+        if (v.isEmpty()) {\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/ExampleVectors\/CheckExampleVectors.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-        if (node.getNodeValue() != null && !node.getNodeValue().equals(\"\") ) {\n+        if (node.getNodeValue() != null && !node.getNodeValue().isEmpty() ) {\n","filename":"test\/jdk\/javax\/imageio\/plugins\/bmp\/BmpDefaultImageMetadataTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-        if (node.getNodeValue() != null && !node.getNodeValue().equals(\"\") ) {\n+        if (node.getNodeValue() != null && !node.getNodeValue().isEmpty() ) {\n","filename":"test\/jdk\/javax\/imageio\/plugins\/wbmp\/WbmpDefaultImageMetadataTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-            String p = (prefix.equals(\"\")) ? name : prefix + \".\" + name;\n+            String p = (prefix.isEmpty()) ? name : prefix + \".\" + name;\n","filename":"test\/jdk\/javax\/management\/MBeanInfo\/NotificationInfoTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-        if (bad.equals(\"\")) {\n+        if (bad.isEmpty()) {\n","filename":"test\/jdk\/javax\/management\/modelmbean\/InfoSupportTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-        if (ss[0].equals(\"\") || \"+-*\/\".indexOf(ss[0].charAt(0)) < 0) {\n+        if (ss[0].isEmpty() || \"+-*\/\".indexOf(ss[0].charAt(0)) < 0) {\n","filename":"test\/jdk\/javax\/management\/query\/QueryExpStringTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-        if (failed.equals(\"\"))\n+        if (failed.isEmpty())\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/BrokenConnectionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -513,1 +513,1 @@\n-            if (s == null || s.equals(\"\")) {\n+            if (s == null || s.isEmpty()) {\n","filename":"test\/jdk\/jdk\/jfr\/tool\/JSONValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-                                         Stream.of(opts).filter(s -> !s.equals(\"\")))\n+                                         Stream.of(opts).filter(s -> !s.isEmpty()))\n@@ -336,1 +336,1 @@\n-                                          .filter(s -> !s.equals(\"\"))\n+                                          .filter(s -> !s.isEmpty())\n","filename":"test\/jdk\/jdk\/modules\/incubator\/ImageModules.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -414,1 +414,1 @@\n-        return filterString != null && !filterString.equals(\"\");\n+        return filterString != null && !filterString.isEmpty();\n","filename":"test\/jdk\/sanity\/client\/lib\/SwingSet3\/src\/com\/sun\/swingset3\/demos\/table\/TableDemo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-                && !System.getProperty(\"jemmy.resources\").equals(\"\")) {\n+                && !System.getProperty(\"jemmy.resources\").isEmpty()) {\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/BundleManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -503,1 +503,1 @@\n-                    && !props.getProperty(\"TIMEOUTS_FILE\").equals(\"\")) {\n+                    && !props.getProperty(\"TIMEOUTS_FILE\").isEmpty()) {\n@@ -509,1 +509,1 @@\n-                    && !props.getProperty(\"RESOURCE_FILE\").equals(\"\")) {\n+                    && !props.getProperty(\"RESOURCE_FILE\").isEmpty()) {\n@@ -527,1 +527,1 @@\n-                && !System.getProperty(\"jemmy.properties\").equals(\"\")) {\n+                && !System.getProperty(\"jemmy.properties\").isEmpty()) {\n@@ -618,1 +618,1 @@\n-                && !System.getProperty(\"jemmy.queue_dispatching\").equals(\"\")) {\n+                && !System.getProperty(\"jemmy.queue_dispatching\").isEmpty()) {\n@@ -622,1 +622,1 @@\n-                && !System.getProperty(\"jemmy.robot_dispatching\").equals(\"\")) {\n+                && !System.getProperty(\"jemmy.robot_dispatching\").isEmpty()) {\n@@ -626,1 +626,1 @@\n-                && !System.getProperty(\"jemmy.smooth_robot_dispatching\").equals(\"\")) {\n+                && !System.getProperty(\"jemmy.smooth_robot_dispatching\").isEmpty()) {\n@@ -630,1 +630,1 @@\n-                && !System.getProperty(\"jemmy.shortcut_events\").equals(\"\")) {\n+                && !System.getProperty(\"jemmy.shortcut_events\").isEmpty()) {\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/JemmyProperties.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -383,1 +383,1 @@\n-                && !System.getProperty(\"jemmy.timeouts\").equals(\"\")) {\n+                && !System.getProperty(\"jemmy.timeouts\").isEmpty()) {\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/Timeouts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1155,1 +1155,1 @@\n-                            || props.getProperty(\"guibrowser.showall\").equals(\"\")\n+                            || props.getProperty(\"guibrowser.showall\").isEmpty()\n@@ -1159,1 +1159,1 @@\n-                            && !props.getProperty(\"guibrowser.viewpage_0\").equals(\"\")) {\n+                            && !props.getProperty(\"guibrowser.viewpage_0\").isEmpty()) {\n@@ -1165,1 +1165,1 @@\n-                                && !props.getProperty(\"guibrowser.viewpage_3\").equals(\"\")) {\n+                                && !props.getProperty(\"guibrowser.viewpage_3\").isEmpty()) {\n@@ -1169,1 +1169,1 @@\n-                                && !props.getProperty(\"guibrowser.viewpage_4\").equals(\"\")) {\n+                                && !props.getProperty(\"guibrowser.viewpage_4\").isEmpty()) {\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/explorer\/GUIBrowser.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -832,1 +832,1 @@\n-                && !((JTextComponent) getSource()).getSelectedText().equals(\"\")) {\n+                && !((JTextComponent) getSource()).getSelectedText().isEmpty()) {\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/operators\/JTextComponentOperator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-        if (result.equals(\"\")) {\n+        if (result.isEmpty()) {\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/util\/TextStyleChooser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-            if(i>-1 && !suffixString.equals(\"\")){\n+            if(i>-1 && !suffixString.isEmpty()){\n","filename":"test\/jdk\/sun\/net\/idn\/NFS4StringPrep.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -293,1 +293,1 @@\n-                        while (!requestLine.equals(\"\")) {\n+                        while (!requestLine.isEmpty()) {\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/B8209178.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-            if (message == null || message.equals(\"\")) {\n+            if (message == null || message.isEmpty()) {\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/file\/NonUTF8EncodedChar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-                if (str.equals(\"\")) {\n+                if (str.isEmpty()) {\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/Modified.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        if (disabledName.equals(\"\")) {\n+        if (disabledName.isEmpty()) {\n","filename":"test\/jdk\/sun\/security\/ssl\/CipherSuite\/DisabledCurve.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-            if (shouldParse && !line.equals(\"\")) {\n+            if (shouldParse && !line.isEmpty()) {\n","filename":"test\/jdk\/sun\/tools\/jhsdb\/heapconfig\/JMapHeapConfigTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        if (!sj.toString().equals(\"\"))\n+        if (!sj.toString().isEmpty())\n@@ -59,1 +59,1 @@\n-        if (!sj.toString().equals(\"\"))\n+        if (!sj.toString().isEmpty())\n@@ -64,1 +64,1 @@\n-        if (!sj.toString().equals(\"\"))\n+        if (!sj.toString().isEmpty())\n@@ -71,1 +71,1 @@\n-        if (!sj.toString().equals(\"\"))\n+        if (!sj.toString().isEmpty())\n","filename":"test\/jdk\/tools\/jar\/modularJar\/src\/bar\/jdk\/test\/bar\/Bar.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        if (!sj.toString().equals(\"\"))\n+        if (!sj.toString().isEmpty())\n@@ -55,1 +55,1 @@\n-        if (!sj.toString().equals(\"\"))\n+        if (!sj.toString().isEmpty())\n@@ -60,1 +60,1 @@\n-        if (!sj.toString().equals(\"\"))\n+        if (!sj.toString().isEmpty())\n@@ -67,1 +67,1 @@\n-        if (!sj.toString().equals(\"\"))\n+        if (!sj.toString().isEmpty())\n","filename":"test\/jdk\/tools\/jar\/modularJar\/src\/foo\/jdk\/test\/foo\/Foo.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-            if (!language.equals(\"\")) {\n+            if (!language.isEmpty()) {\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/VerifyLocale.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -585,1 +585,1 @@\n-                    if (!type.equals(\"\") && !type.equals(\"void\")) { \/\/ create return statement\n+                    if (!type.isEmpty() && !type.equals(\"void\")) { \/\/ create return statement\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/sampleapi\/lib\/sampleapi\/generator\/PackageGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-        if (!log.equals(\"\"))\n+        if (!log.isEmpty())\n@@ -163,1 +163,1 @@\n-        if (!log.equals(\"\"))\n+        if (!log.isEmpty())\n","filename":"test\/langtools\/tools\/javac\/modules\/ReportNonExistentPackageTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-                if (!s.equals(\"\")) {\n+                if (!s.isEmpty()) {\n","filename":"test\/lib-test\/jdk\/test\/lib\/apps\/LingeredAppTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}