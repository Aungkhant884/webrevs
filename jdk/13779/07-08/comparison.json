{"files":[{"patch":"@@ -623,1 +623,1 @@\n-  oop forward_ptr = old->forward_to_self_atomic(m, memory_order_relaxed);\n+  oop forward_ptr = old->forward_failed_atomic(m, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -331,1 +331,1 @@\n-  if (obj->forward_to_self_atomic(obj_mark) == nullptr) {\n+  if (obj->forward_failed_atomic(obj_mark) == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -908,1 +908,1 @@\n-  old->forward_to_self();\n+  old->forward_failed();\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,2 +107,2 @@\n-  static const int self_forwarded_bits            = 1;\n-  static const int max_hash_bits                  = BitsPerWord - age_bits - lock_bits - self_forwarded_bits;\n+  static const int forward_failed_bits            = 1;\n+  static const int max_hash_bits                  = BitsPerWord - age_bits - lock_bits - forward_failed_bits;\n@@ -113,2 +113,2 @@\n-  static const int self_forwarded_shift           = lock_shift + lock_bits;\n-  static const int age_shift                      = self_forwarded_shift + self_forwarded_bits;\n+  static const int forward_failed_shift           = lock_shift + lock_bits;\n+  static const int age_shift                      = forward_failed_shift + forward_failed_bits;\n@@ -119,2 +119,2 @@\n-  static const uintptr_t self_forwarded_mask      = right_n_bits(self_forwarded_bits);\n-  static const uintptr_t self_forwarded_mask_in_place = self_forwarded_mask << self_forwarded_shift;\n+  static const uintptr_t forward_failed_mask      = right_n_bits(forward_failed_bits);\n+  static const uintptr_t forward_failed_mask_in_place = forward_failed_mask << forward_failed_shift;\n@@ -268,4 +268,4 @@\n-  inline bool self_forwarded() const {\n-    bool self_fwd = mask_bits(value(), self_forwarded_mask_in_place) != 0;\n-    assert(!self_fwd || UseAltGCForwarding, \"Only set self-fwd bit when using alt GC forwarding\");\n-    return self_fwd;\n+  inline bool forward_failed() const {\n+    bool fwd_failed = mask_bits(value(), forward_failed_mask_in_place) != 0;\n+    assert(!fwd_failed || UseAltGCForwarding, \"Only set fwd-failed bit when using alt GC forwarding\");\n+    return fwd_failed;\n@@ -274,1 +274,1 @@\n-  inline markWord set_self_forwarded() const {\n+  inline markWord set_forward_failed() const {\n@@ -276,1 +276,1 @@\n-    return markWord(value() | self_forwarded_mask_in_place | marked_value);\n+    return markWord(value() | forward_failed_mask_in_place | marked_value);\n","filename":"src\/hotspot\/share\/oops\/markWord.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -261,1 +261,1 @@\n-  inline void forward_to_self();\n+  inline void forward_failed();\n@@ -268,1 +268,1 @@\n-  inline oop forward_to_self_atomic(markWord compare, atomic_memory_order order = memory_order_conservative);\n+  inline oop forward_failed_atomic(markWord compare, atomic_memory_order order = memory_order_conservative);\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -276,1 +276,1 @@\n-void oopDesc::forward_to_self() {\n+void oopDesc::forward_failed() {\n@@ -285,1 +285,1 @@\n-    m = m.set_self_forwarded();\n+    m = m.set_forward_failed();\n@@ -305,1 +305,1 @@\n-oop oopDesc::forward_to_self_atomic(markWord compare, atomic_memory_order order) {\n+oop oopDesc::forward_failed_atomic(markWord compare, atomic_memory_order order) {\n@@ -314,1 +314,1 @@\n-    m = m.set_self_forwarded();\n+    m = m.set_forward_failed();\n@@ -330,1 +330,1 @@\n-  if (header.self_forwarded()) {\n+  if (header.forward_failed()) {\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}