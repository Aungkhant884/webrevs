{"files":[{"patch":"@@ -52,1 +52,1 @@\n-    const int32_t ref_count = Atomic::load(&_ref_count);\n+    const int32_t ref_count = Atomic::load_acquire(&_ref_count);\n@@ -82,2 +82,3 @@\n-    \/\/ Wait until claimed\n-    if (Atomic::load(&_ref_count) != -1) {\n+    \/\/ If the previous reference count was 1, then we just changed it to -1,\n+    \/\/ and we have now claimed the page. Otherwise we wait until it is claimed.\n+    if (ref_count != 1) {\n@@ -105,1 +106,1 @@\n-      \/\/ If the previous ref_count was 1, then we just decremented\n+      \/\/ If the previous reference count was 1, then we just decremented\n@@ -118,3 +119,2 @@\n-      \/\/ If the previous ref_count was -2 or -1, then we just incremented\n-      \/\/ it to -1 or 0, and we should signal the that page is now claimed\n-      \/\/ or released.\n+      \/\/ If the previous reference count was -2 or -1, then we just incremented it\n+      \/\/ to -1 or 0, and we should signal the that page is now claimed or released.\n@@ -133,1 +133,1 @@\n-  if (Atomic::load(&_ref_count) != 0) {\n+  if (Atomic::load_acquire(&_ref_count) != 0) {\n@@ -144,1 +144,1 @@\n-  if (Atomic::load(&_ref_count) != 0) {\n+  if (Atomic::load_acquire(&_ref_count) != 0) {\n@@ -194,2 +194,1 @@\n-  _page->verify_live_objects(live_objects);\n-  _page->verify_live_bytes(live_bytes);\n+  _page->verify_live(live_objects, live_bytes);\n","filename":"src\/hotspot\/share\/gc\/z\/zForwarding.cpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"gc\/z\/zForwarding.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-void ZPage::verify_live_objects(uint32_t live_objects) const {\n+void ZPage::verify_live(uint32_t live_objects, size_t live_bytes) const {\n@@ -133,4 +133,1 @@\n-}\n-\n-void ZPage::verify_live_bytes(size_t live_bytes) const {\n-  guarantee(live_bytes == _livemap.live_bytes(), \"Invalid number of live bytes %zu vs %zu\", live_bytes, _livemap.live_bytes());\n+  guarantee(live_bytes == _livemap.live_bytes(), \"Invalid number of live bytes\");\n","filename":"src\/hotspot\/share\/gc\/z\/zPage.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -114,2 +114,1 @@\n-  void verify_live_objects(uint32_t live_objects) const;\n-  void verify_live_bytes(size_t live_bytes) const;\n+  void verify_live(uint32_t live_objects, size_t live_bytes) const;\n","filename":"src\/hotspot\/share\/gc\/z\/zPage.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -142,0 +142,1 @@\n+    _claimed(0),\n@@ -145,1 +146,0 @@\n-    _claimed(0),\n@@ -263,2 +263,5 @@\n-  const ZPageAllocatorStats st = stats();\n-  return st.capacity() - st.used() - st.claimed();\n+  const ssize_t capacity = (ssize_t)Atomic::load(&_capacity);\n+  const ssize_t used = (ssize_t)Atomic::load(&_used);\n+  const ssize_t claimed = (ssize_t)Atomic::load(&_claimed);\n+  const ssize_t unused = capacity - used - claimed;\n+  return unused > 0 ? (size_t)unused : 0;\n@@ -276,1 +279,0 @@\n-                             _claimed,\n@@ -750,1 +752,1 @@\n-    _claimed += flushed;\n+    Atomic::add(&_claimed, flushed);\n@@ -766,1 +768,1 @@\n-    _claimed -= flushed;\n+    Atomic::sub(&_claimed, flushed);\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+  volatile size_t            _claimed;\n@@ -60,1 +61,0 @@\n-  size_t                     _claimed;\n@@ -148,1 +148,0 @@\n-  size_t _claimed;\n@@ -159,1 +158,0 @@\n-                      size_t claimed,\n@@ -169,1 +167,0 @@\n-  size_t claimed() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-                                                size_t claimed,\n@@ -45,1 +44,0 @@\n-    _claimed(claimed),\n@@ -76,4 +74,0 @@\n-inline size_t ZPageAllocatorStats::claimed() const {\n-  return _claimed;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.inline.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-    \/\/ Failed to relocate obejct. Wait for a worker thread to\n+    \/\/ Failed to relocate object. Wait for a worker thread to\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}