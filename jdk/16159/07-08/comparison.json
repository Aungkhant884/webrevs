{"files":[{"patch":"@@ -441,1 +441,0 @@\n-        KeyStore ts = KeyStore.getInstance(\"PKCS12\");\n@@ -444,1 +443,1 @@\n-            ts.load(fsIn, pass);\n+            KeyStore ts = KeyStore.getInstance(new File(tsPath), pass);\n@@ -466,1 +465,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n@@ -469,1 +467,1 @@\n-            ks.load(fsIn, pass);\n+            KeyStore ks = KeyStore.getInstance(new File(ksPath), pass);\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/ResumeTLS13withSNI.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -182,2 +182,1 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        ks.load(new FileInputStream(keyFilename), passwd.toCharArray());\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename), passwd.toCharArray());\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/SSLCtxAccessToSessCtx.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n+        KeyStore ks;\n@@ -320,1 +320,1 @@\n-            ks.load(fis, passwd.toCharArray());\n+            ks = KeyStore.getInstance(new File(keyFilename), passwd.toCharArray());\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/SessionCacheSizeTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -345,2 +345,1 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        ks.load(new FileInputStream(keyFilename), passwd.toCharArray());\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename), passwd.toCharArray());\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/SessionTimeOutTests.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -267,2 +267,2 @@\n-            KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-            ks.load(new FileInputStream(keystorefile), passphrase.toCharArray());\n+            KeyStore ks = KeyStore.getInstance(new File(keystorefile),\n+                    passphrase.toCharArray());\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/B8025710.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,3 +31,1 @@\n-import java.io.ByteArrayOutputStream;\n-import java.io.FileInputStream;\n-import java.io.PrintStream;\n+import java.io.*;\n@@ -41,1 +39,0 @@\n-import java.io.ByteArrayInputStream;\n@@ -52,2 +49,2 @@\n-        KeyStore keyStore = KeyStore.getInstance(\"PKCS12\");\n-        keyStore.load(new FileInputStream(ks), pass.toCharArray());\n+        KeyStore keyStore = KeyStore.getInstance(new File(ks),\n+                pass.toCharArray());\n","filename":"test\/jdk\/sun\/security\/provider\/X509Factory\/BadPem.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.io.File;\n@@ -52,2 +53,2 @@\n-        KeyStore keyStore = KeyStore.getInstance(\"PKCS12\");\n-        keyStore.load(new FileInputStream(ks), pass.toCharArray());\n+        KeyStore keyStore = KeyStore.getInstance(new File(ks),\n+                pass.toCharArray());\n","filename":"test\/jdk\/sun\/security\/provider\/X509Factory\/BigCRL.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -193,3 +193,2 @@\n-            KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-            ks.load(new FileInputStream(testRoot\n-                                + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/truststore\"),\n+            KeyStore ks = KeyStore.getInstance(new File(testRoot\n+                    + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/truststore\"),\n","filename":"test\/jdk\/sun\/security\/ssl\/GenSSLConfigs\/main.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,4 +36,1 @@\n-import java.io.BufferedReader;\n-import java.io.FileInputStream;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n+import java.io.*;\n@@ -71,1 +68,0 @@\n-    static String pkcs12Type = \"PKCS12\";\n@@ -150,1 +146,2 @@\n-            ks = KeyStore.getInstance(pkcs12Type);\n+            ks = KeyStore.getInstance(new File(System.getProperty(\n+                            \"javax.net.ssl.keyStore\")), passphrase);\n@@ -152,2 +149,0 @@\n-            ks.load(new FileInputStream(System.getProperty(\n-                        \"javax.net.ssl.keyStore\")), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/InputRecord\/ClientHelloRead.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.io.File;\n@@ -104,3 +105,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        KeyStore ts = KeyStore.getInstance(\"PKCS12\");\n-\n@@ -109,2 +107,2 @@\n-        ks.load(new FileInputStream(keyStoreFile), passphrase);\n-        ts.load(new FileInputStream(keyStoreFile), passphrase);\n+        KeyStore ks = KeyStore.getInstance(new File(keyStoreFile), passphrase);\n+        KeyStore ts = KeyStore.getInstance(new File(keyStoreFile), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/TestBadDNForPeerCA.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.io.File;\n@@ -127,3 +128,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        KeyStore ts = KeyStore.getInstance(\"PKCS12\");\n-\n@@ -132,2 +130,2 @@\n-        ks.load(new FileInputStream(keyStoreFile), passphrase);\n-        ts.load(new FileInputStream(keyStoreFile), passphrase);\n+        KeyStore ks = KeyStore.getInstance(new File(keyStoreFile), passphrase);\n+        KeyStore ts = KeyStore.getInstance(new File(keyStoreFile), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/TestBadDNForPeerCA12.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -176,2 +176,2 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        KeyStore ts = KeyStore.getInstance(\"PKCS12\");\n+        KeyStore ks;\n+        KeyStore ts;\n@@ -183,2 +183,2 @@\n-            ks.load(keyFile, passphrase);\n-            ts.load(trustFile, passphrase);\n+            ks = KeyStore.getInstance(new File(keyFilename), passphrase);\n+            ts = KeyStore.getInstance(new File(trustFilename), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketSSLEngineCloseInbound.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-            KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n@@ -55,3 +54,2 @@\n-            ks.load(new FileInputStream(testRoot\n-                        + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/keystore\"),\n-                    passphrase);\n+            KeyStore ks = KeyStore.getInstance(new File(testRoot\n+                    + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/keystore\"), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/ServerHandshaker\/GetPeerHostServer.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -257,3 +257,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        KeyStore ts = KeyStore.getInstance(\"PKCS12\");\n-\n@@ -262,2 +259,2 @@\n-        ks.load(new FileInputStream(keyFile), passphrase);\n-        ts.load(new FileInputStream(trustFile), passphrase);\n+        KeyStore ks = KeyStore.getInstance(new File(keyFile), passphrase);\n+        KeyStore ts = KeyStore.getInstance(new File(trustFile), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/ServerHandshaker\/HelloExtensionsTest.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -74,2 +74,1 @@\n-        ks = KeyStore.getInstance(\"PKCS12\");\n-        ks.load(new FileInputStream(keyFilename), password);\n+        ks = KeyStore.getInstance(new File(keyFilename), password);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/PreferredKey.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-    static String pkcs12Type = \"PKCS12\";\n@@ -74,2 +73,1 @@\n-        ks = KeyStore.getInstance(pkcs12Type);\n-        ks.load(new FileInputStream(keyFilename), passphrase);\n+        ks = KeyStore.getInstance(new File(keyFilename), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/SelectOneKeyOutOfMany.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -195,2 +195,1 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        ks.load(new FileInputStream(keyFilename), cpasswd);\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename), cpasswd);\n@@ -200,2 +199,1 @@\n-        KeyStore ts = KeyStore.getInstance(\"PKCS12\");\n-        ts.load(new FileInputStream(trustFilename), cpasswd);\n+        KeyStore ts = KeyStore.getInstance(new File(trustFilename), cpasswd);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/CertRequestOverflow.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -68,2 +68,1 @@\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        ks.load(new FileInputStream(trustFilename), passphrase);\n+        KeyStore ks = KeyStore.getInstance(new File(trustFilename), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/CheckNullEntity.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-    static String pkcs12Type = \"PKCS12\";\n@@ -185,2 +184,1 @@\n-        KeyStore ks = KeyStore.getInstance(pkcs12Type);\n-        ks.load(new FileInputStream(keyFilename), cpasswd);\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename), cpasswd);\n@@ -190,2 +188,1 @@\n-        KeyStore ts = KeyStore.getInstance(pkcs12Type);\n-        ts.load(new FileInputStream(trustFilename), cpasswd);\n+        KeyStore ts = KeyStore.getInstance(new File(trustFilename), cpasswd);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/X509ExtendedTMEnabled.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}