{"files":[{"patch":"@@ -2407,2 +2407,2 @@\n-  \/\/ start computing from the field after _crc to end of base archive name.\n-  char* buf = (char*)&(_generic_header._crc) + sizeof(_generic_header._crc);\n+  \/\/ start computing from the field after _header_size to end of base archive name.\n+  char* buf = (char*)&(_generic_header._header_size) + sizeof(_generic_header._header_size);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-#define CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION 12\n-#define CURRENT_CDS_ARCHIVE_VERSION 12\n+#define CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION 13\n+#define CURRENT_CDS_ARCHIVE_VERSION 13\n@@ -69,0 +69,1 @@\n+  int          _crc;                      \/\/ header crc checksum, start from _base_archive_name_offset\n@@ -71,1 +72,0 @@\n-  int          _crc;                      \/\/ header crc checksum\n","filename":"src\/hotspot\/share\/include\/cds.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1965,0 +1965,8 @@\n+WB_ENTRY(jint, WB_GetCDSGenericHeaderMinVersion(JNIEnv* env, jobject wb))\n+  return (jint)CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION;\n+WB_END\n+\n+WB_ENTRY(jint, WB_GetCDSCurrentVersion(JNIEnv* env, jobject wb))\n+  return (jint)CURRENT_CDS_ARCHIVE_VERSION;\n+WB_END\n+\n@@ -2687,0 +2695,2 @@\n+  {CC\"getCDSGenericHeaderMinVersion\",     CC\"()I\",    (void*)&WB_GetCDSGenericHeaderMinVersion},\n+  {CC\"getCurrentCDSVersion\",              CC\"()I\",    (void*)&WB_GetCDSCurrentVersion},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -46,0 +46,2 @@\n+    private static int genericHeaderMinVersion;  \/\/ minimum supported CDS version\n+    private static int currentCDSArchiveVersion; \/\/ current CDS version in java process\n@@ -107,0 +109,3 @@\n+        genericHeaderMinVersion = CDSArchiveUtils.getGenericHeaderMinVersion();\n+        currentCDSArchiveVersion = CDSArchiveUtils.getCurrentCDSArchiveVersion();\n+\n@@ -161,1 +166,1 @@\n-        System.out.println(\"\\n2c. Corrupt _magic, should fail\\n\");\n+        System.out.println(\"\\n2b. Corrupt _magic, should fail\\n\");\n@@ -173,1 +178,1 @@\n-        System.out.println(\"\\n2d. Corrupt _version, should fail\\n\");\n+        System.out.println(\"\\n2c. Corrupt _version, should fail\\n\");\n@@ -175,0 +180,1 @@\n+        int version = currentCDSArchiveVersion + 1;\n@@ -176,1 +182,1 @@\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion(), 0x3FFFFFFF);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion(), version);\n@@ -178,2 +184,3 @@\n-        output.shouldContain(\"The shared archive file has the wrong version\");\n-        output.shouldNotContain(\"Checksum verification failed\");\n+        output.shouldContain(\"The shared archive file has the wrong version\")\n+              .shouldContain(\"_version expected: \" + currentCDSArchiveVersion)\n+              .shouldContain(\"actual: \" + version);\n@@ -184,1 +191,1 @@\n-        System.out.println(\"\\n2e. Corrupt _version, should fail\\n\");\n+        System.out.println(\"\\n2d. Corrupt _version, should fail\\n\");\n@@ -187,1 +194,2 @@\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion(), 0x00000000);\n+        version = genericHeaderMinVersion - 1;\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion(), version);\n@@ -189,1 +197,1 @@\n-        output.shouldContain(\"Cannot handle shared archive file version 0. Must be at least 12\");\n+        output.shouldContain(\"Cannot handle shared archive file version \" + version + \". Must be at least \" + genericHeaderMinVersion);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -48,0 +48,3 @@\n+    \/\/ Minimum supported CDS file header version\n+    private static int genericHeaderMinVersion;    \/\/ CDS_GENERIC_HEADER_SUPPORTED_MIN_VERSION\n+    private static int currentCDSArchiveVersion;   \/\/ CURRENT_CDS_ARCHIVE_VERSION\n@@ -85,0 +88,3 @@\n+            \/\/ genericHeaderMinVersion\n+            genericHeaderMinVersion = wb.getCDSGenericHeaderMinVersion();\n+            currentCDSArchiveVersion = wb.getCurrentCDSVersion();\n@@ -119,0 +125,4 @@\n+    \/\/ minimum supported file header version\n+    public static int getGenericHeaderMinVersion()  { return genericHeaderMinVersion;     }\n+    \/\/ current CDS version\n+    public static int getCurrentCDSArchiveVersion() { return currentCDSArchiveVersion;    }\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSArchiveUtils.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -626,0 +626,2 @@\n+  public native int     getCDSGenericHeaderMinVersion();\n+  public native int     getCurrentCDSVersion();\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -627,0 +627,2 @@\n+  public native int     getCDSGenericHeaderMinVersion();\n+  public native int     getCurrentCDSVersion();\n","filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}