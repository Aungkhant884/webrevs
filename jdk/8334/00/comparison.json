{"files":[{"patch":"@@ -101,1 +101,1 @@\n-        \/\/ This attribute is superceded by\n+        \/\/ This attribute is superseded by\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIJRMPServerImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -417,1 +417,1 @@\n-                if (debug) logger.debug(\"close\",\"droping dead references\");\n+                if (debug) logger.debug(\"close\",\"dropping dead references\");\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIServerImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1043,1 +1043,1 @@\n-                    \"rethrowing <\"+e+\">, although the MBean is succesfully \" +\n+                    \"rethrowing <\"+e+\">, although the MBean is successfully \" +\n@@ -1048,1 +1048,1 @@\n-                      \">, although the MBean is sucessfully unregistered\");\n+                      \">, although the MBean is successfully unregistered\");\n@@ -1052,1 +1052,1 @@\n-                    \"rethrowing <\"+er+\">, although the MBean is succesfully \" +\n+                    \"rethrowing <\"+er+\">, although the MBean is successfully \" +\n@@ -1057,1 +1057,1 @@\n-                      \">, although the MBean is sucessfully unregistered\");\n+                      \">, although the MBean is successfully unregistered\");\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/interceptor\/DefaultMBeanServerInterceptor.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1432,1 +1432,1 @@\n-        \/\/ This is admitedly a bug, but we chose not to fix it for now\n+        \/\/ This is admittedly a bug, but we chose not to fix it for now\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/JmxMBeanServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n- * PerInterface cache for the given itnerface, but with the\n+ * PerInterface cache for the given interface, but with the\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-     * Guaranteing consistency while using Concurent objects at each level\n+     * Guaranteing consistency while using Concurrent objects at each level\n@@ -380,1 +380,1 @@\n-     *                operation is abandonned, the MBean is not added to the\n+     *                operation is abandoned, the MBean is not added to the\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/Repository.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -440,1 +440,1 @@\n-                                         \"dispose callled, no wait\");\n+                                         \"dispose called, no wait\");\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ArrayNotificationBuffer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-\/\/ private varaibles\n+\/\/ private variables\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ClientCommunicatorAdmin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -307,1 +307,1 @@\n-     * It is caller's responsiblity to not re-call this method before calling\n+     * It is caller's responsibility to not re-call this method before calling\n@@ -564,1 +564,1 @@\n-                            \"Recieved null object as notifs, stops fetching because the \"\n+                            \"Received null object as notifs, stops fetching because the \"\n@@ -795,1 +795,1 @@\n-     * <P>The parameter reconnected will decide whether to initilize the clientSequenceNumber,\n+     * <P>The parameter reconnected will decide whether to initialize the clientSequenceNumber,\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ClientNotifForwarder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-                                \"Found atleast one clear password\");\n+                                \"Found at least one clear password\");\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/HashedPasswordManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -270,1 +270,1 @@\n-        \/\/ keep it for the compability for the fix:\n+        \/\/ keep it for the compatibility for the fix:\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/util\/EnvHelp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -635,1 +635,1 @@\n-    \/\/ Altough java.util.logging.LoggingMXBean is deprecated, an application\n+    \/\/ Although java.util.logging.LoggingMXBean is deprecated, an application\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/ManagementFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -336,1 +336,1 @@\n-     * the thread contention monitoring is reenabled.\n+     * the thread contention monitoring is re-enabled.\n@@ -380,1 +380,1 @@\n-     * the thread contention monitoring is reenabled.\n+     * the thread contention monitoring is re-enabled.\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/ThreadInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-       evaluted an AttributeValueExp can only appear inside a QueryExp,\n+       evaluated an AttributeValueExp can only appear inside a QueryExp,\n","filename":"src\/java.management\/share\/classes\/javax\/management\/AttributeValueExp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * {@code handleNotification} (when no {@code Excecutor} is specified) throws an\n+ * {@code handleNotification} (when no {@code Executor} is specified) throws an\n","filename":"src\/java.management\/share\/classes\/javax\/management\/NotificationBroadcasterSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2328,1 +2328,1 @@\n-        \/\/    length of user suplied list + possibly 1 for GENERIC, +\n+        \/\/    length of user supplied list + possibly 1 for GENERIC, +\n","filename":"src\/java.management\/share\/classes\/javax\/management\/modelmbean\/RequiredModelMBean.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-    \/\/ indexes refering to columns in the PRIMITIVE_ARRAY_TYPES table.\n+    \/\/ indexes referring to columns in the PRIMITIVE_ARRAY_TYPES table.\n@@ -667,1 +667,1 @@\n-    \/* *** Methods overriden from class Object *** *\/\n+    \/* *** Methods overridden from class Object *** *\/\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/ArrayType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-                   it is a non-final method from Object overriden\n+                   it is a non-final method from Object overridden\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/CompositeDataInvocationHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -349,1 +349,1 @@\n-    \/* *** Methods overriden from class Object *** *\/\n+    \/* *** Methods overridden from class Object *** *\/\n@@ -395,1 +395,1 @@\n-        \/\/ All tests for equality were successfull\n+        \/\/ All tests for equality were successful\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/CompositeType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n-        \/\/ All tests for equality were successfull\n+        \/\/ All tests for equality were successful\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/OpenMBeanConstructorInfoSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -308,1 +308,1 @@\n-        \/\/ All tests for equality were successfull\n+        \/\/ All tests for equality were successful\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/OpenMBeanOperationInfoSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -372,1 +372,1 @@\n-    \/* *** Methods overriden from class Object *** *\/\n+    \/* *** Methods overridden from class Object *** *\/\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/OpenType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-    \/* *** Methods overriden from class Object *** *\/\n+    \/* *** Methods overridden from class Object *** *\/\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/SimpleType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -745,1 +745,1 @@\n-        \/\/ All tests for equality were successfull\n+        \/\/ All tests for equality were successful\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/TabularDataSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-    \/* *** Methods overriden from class Object *** *\/\n+    \/* *** Methods overridden from class Object *** *\/\n@@ -304,1 +304,1 @@\n-        \/\/ All tests for equality were successfull\n+        \/\/ All tests for equality were successful\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/TabularType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -578,1 +578,1 @@\n-        \/\/ assign deserialized vaules to object fields\n+        \/\/ assign deserialized values to object fields\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RelationNotification.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1683,1 +1683,1 @@\n-        \/\/ criterias\n+        \/\/ criteria\n@@ -2880,1 +2880,1 @@\n-    \/\/ -exception IllegalArgumentException  if null paramater\n+    \/\/ -exception IllegalArgumentException  if null parameter\n@@ -3003,1 +3003,1 @@\n-        \/\/ Creation of relation successfull!!!!\n+        \/\/ Creation of relation successful!!!!\n@@ -3205,1 +3205,1 @@\n-    \/\/ -exception IllegalArgumentException  if null paramater\n+    \/\/ -exception IllegalArgumentException  if null parameter\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RelationService.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -805,1 +805,1 @@\n-                \/\/ Service is not registered (to be catched in any case and\n+                \/\/ Service is not registered (to be caught in any case and\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RelationSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -626,1 +626,1 @@\n-                \/\/ that has no from method to be embeded in another class.\n+                \/\/ that has no from method to be embedded in another class.\n","filename":"src\/java.management\/share\/classes\/sun\/management\/MappedMXBeanType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -669,1 +669,1 @@\n-     * code is based upon the VirtualMachine's components, and satifies\n+     * code is based upon the VirtualMachine's components, and satisfies\n","filename":"src\/jdk.attach\/share\/classes\/com\/sun\/tools\/attach\/VirtualMachine.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-     * code is based upon the descriptor's components, and satifies\n+     * code is based upon the descriptor's components, and satisfies\n","filename":"src\/jdk.attach\/share\/classes\/com\/sun\/tools\/attach\/VirtualMachineDescriptor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-Debuggers on Solaris (and Linux) use two addtional shared objects\n+Debuggers on Solaris (and Linux) use two additional shared objects\n@@ -46,1 +46,1 @@\n-Enviroment variable <b>LIBSAPROC_DEBUG<\/b> may be set to any value\n+Environment variable <b>LIBSAPROC_DEBUG<\/b> may be set to any value\n","filename":"src\/jdk.hotspot.agent\/doc\/transported_core.html","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -428,1 +428,1 @@\n-    \/\/ This is not considered fatal and does happen on occassion, usually with an\n+    \/\/ This is not considered fatal and does happen on occasion, usually with an\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/LinuxDebuggerLocal.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-   uint32_t         flags;    \/\/ acces flags\n+   uint32_t         flags;    \/\/ access flags\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/libproc_impl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -548,1 +548,1 @@\n-  posbin = rstrstr(execname, \"\/bin\/\");  \/\/ look for the last occurence of \"\/bin\/\"\n+  posbin = rstrstr(execname, \"\/bin\/\");  \/\/ look for the last occurrence of \"\/bin\/\"\n@@ -627,1 +627,1 @@\n-      \/\/ This is the begining of the mach-o file in the segment.\n+      \/\/ This is the beginning of the mach-o file in the segment.\n@@ -644,1 +644,1 @@\n-          print_debug(\"Warning: out of segement limit: %ld \\n\", fpos  - lcmd.cmdsize - iter->offset);\n+          print_debug(\"Warning: out of segment limit: %ld \\n\", fpos  - lcmd.cmdsize - iter->offset);\n@@ -708,1 +708,1 @@\n-    print_debug(\"cant allocate ps_prochandle\\n\");\n+    print_debug(\"can't allocate ps_prochandle\\n\");\n","filename":"src\/jdk.hotspot.agent\/macosx\/native\/libsaproc\/ps_core.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-        putValue(\"ShortDescription\", \"Acknowleges the action\");\n-        putValue(\"LongDescription\", \"Acknowleges the action\");\n+        putValue(\"ShortDescription\", \"Acknowledges the action\");\n+        putValue(\"LongDescription\", \"Acknowledges the action\");\n@@ -57,2 +57,2 @@\n-    public static final String VALUE_SHORT_DESCRIPTION = \"Acknowleges the action\";\n-    public static final String VALUE_LONG_DESCRIPTION = \"Acknowleges the action\";\n+    public static final String VALUE_SHORT_DESCRIPTION = \"Acknowledges the action\";\n+    public static final String VALUE_LONG_DESCRIPTION = \"Acknowledges the action\";\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/com\/sun\/java\/swing\/action\/OkAction.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -691,1 +691,1 @@\n-        \/\/ \"whatis\" is just an alias for \"findpc\". It's kept around for compatiblity reasons.\n+        \/\/ \"whatis\" is just an alias for \"findpc\". It's kept around for compatibility reasons.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CommandProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-         \/\/ should not happend, taken care already.\n+         \/\/ should not happen, taken care already.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/DebugServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-     debugee *\/\n+     debuggee *\/\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/HotSpotAgent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-   \/\/ in the dissassembly.\n+   \/\/ in the disassembly.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/asm\/Disassembler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  \/** Scalar replaced bjects pool *\/\n+  \/** Scalar replaced objects pool *\/\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/ScopeDesc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    cache. It is generic enough to be sharable among debugger\n+    cache. It is generic enough to be shareable among debugger\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/PageCache.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-     * willl always return null.\n+     * will always return null.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/posix\/elf\/ELFHashTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * This is the interface definintion for a ProgramHeader in an ELF file.\n+ * This is the interface definition for a ProgramHeader in an ELF file.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/posix\/elf\/ELFProgramHeader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    \/** Lower bound binding values reserverd for processor specific\n+    \/** Lower bound binding values reserved for processor specific\n@@ -40,1 +40,1 @@\n-    \/** Upper bound binding values reserverd for processor specific\n+    \/** Upper bound binding values reserved for processor specific\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/posix\/elf\/ELFSymbol.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-\/** A very simple data structure representing a contigous region of\n+\/** A very simple data structure representing a contiguous region of\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/memory\/MemRegion.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -634,1 +634,1 @@\n-                  \/\/ Klass already resolved. ConstantPool constains Klass*.\n+                  \/\/ Klass already resolved. ConstantPool contains Klass*.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ConstantPool.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  \/\/ Following acccessors are for named, non-VM fields only\n+  \/\/ Following accessors are for named, non-VM fields only\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/Field.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  \/\/ These two should be removed. But requires som code to be cleaned up\n+  \/\/ These two should be removed. But requires some code to be cleaned up\n@@ -166,1 +166,1 @@\n-  \/** Contains maping between jsr targets and there return addresses.\n+  \/** Contains mapping between jsr targets and their return addresses.\n@@ -827,1 +827,1 @@\n-        \/\/ Automatically handles 'wide' ret indicies\n+        \/\/ Automatically handles 'wide' ret indices\n@@ -1030,1 +1030,1 @@\n-      \/\/ Remember prevous bci.\n+      \/\/ Remember previous bci.\n@@ -1703,1 +1703,1 @@\n-    \/\/ Parse signature (espcially simple for fields)\n+    \/\/ Parse signature (especially simple for fields)\n@@ -2009,1 +2009,1 @@\n-  \/\/ Helper method. Can be used in subclasses to fx. calculate gc_points. If the current instuction\n+  \/\/ Helper method. Can be used in subclasses to fx. calculate gc_points. If the current instruction\n@@ -2295,1 +2295,1 @@\n-  \/\/   deadcode, fewer gc_points might have been encounted than assumed\n+  \/\/   deadcode, fewer gc_points might have been encountered than assumed\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/GenerateOopMap.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-  \/\/ Find LCA (Least Common Ancester) in class heirarchy\n+  \/\/ Find LCA (Least Common Ancester) in class hierarchy\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/Klass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-\/\/ case was taken and specify the data displacment for each branch target.\n+\/\/ case was taken and specify the data displacement for each branch target.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/MultiBranchData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-    public static final long JVM_ACC_TRANSIENT    = 0x0080; \/* not persistant *\/\n+    public static final long JVM_ACC_TRANSIENT    = 0x0080; \/* not persistent *\/\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/ClassConstants.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -602,1 +602,1 @@\n-        \/\/       occured during method resolution\/execution. In all\n+        \/\/       occurred during method resolution\/execution. In all\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Frame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  \/** Corresponding transition state (not used, included for completness) *\/\n+  \/** Corresponding transition state (not used, included for completeness) *\/\n@@ -50,1 +50,1 @@\n-  \/** Corresponding transition state (not used, included for completness) *\/\n+  \/** Corresponding transition state (not used, included for completeness) *\/\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/JavaThreadState.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/ [RGV] We need seperate JNI and Java offset values because in 64 bit mode, the argument offsets\n+\/\/ [RGV] We need separate JNI and Java offset values because in 64 bit mode, the argument offsets\n@@ -97,1 +97,1 @@\n-  \/\/ iterate() calles the 2 virtual methods according to the following invocation syntax:\n+  \/\/ iterate() calls the 2 virtual methods according to the following invocation syntax:\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/NativeSignatureIterator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    \/\/ we have pushed the new interpreter frame, but have not intialized it yet, or\n+    \/\/ we have pushed the new interpreter frame, but have not initialized it yet, or\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/amd64\/AMD64CurrentFrameGuess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    \"SIGPOLL\",    \/* pollable event occured *\/\n+    \"SIGPOLL\",    \/* pollable event occurred *\/\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/linux\/LinuxSignals.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    \"SIGPOLL\",    \/* pollable event occured *\/\n+    \"SIGPOLL\",    \/* pollable event occurred *\/\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/linux_x86\/LinuxSignals.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    \"SIGPOLL\",    \/* pollable event occured *\/\n+    \"SIGPOLL\",    \/* pollable event occurred *\/\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/posix\/POSIXSignals.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-             * Sort results - decending order by total size\n+             * Sort results - descending order by total size\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/FinalizerInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-     * Uses a linear search from the current row. Could be optimized withing the\n+     * Uses a linear search from the current row. Could be optimized within the\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/ObjectHistogramPanel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    public static final String VALUE_SHORT_DESCRIPTION = \"Show Thread Informaion\";\n+    public static final String VALUE_SHORT_DESCRIPTION = \"Show Thread Information\";\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/action\/ThreadInfoAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * A mouse adapater which is attached to the header of a JTable. It listens\n+ * A mouse adapter which is attached to the header of a JTable. It listens\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/table\/SortHeaderMouseAdapter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    \/\/ Default implmentations for methods in the TreeModel interface.\n+    \/\/ Default implementations for methods in the TreeModel interface.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/treetable\/AbstractTreeTableModel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-     * This is overriden to invoke supers implementation, and then,\n+     * This is overridden to invoke supers implementation, and then,\n@@ -165,1 +165,1 @@\n-     * -1, and therefore doesn't automaticly resize the editor for us.\n+     * -1, and therefore doesn't automatically resize the editor for us.\n@@ -197,1 +197,1 @@\n-     * Overriden to invoke repaint for the particular location if\n+     * Overridden to invoke repaint for the particular location if\n@@ -356,1 +356,1 @@\n-     * the same component for editing and renderering. The table may have\n+     * the same component for editing and rendering. The table may have\n@@ -384,1 +384,1 @@\n-     * to do something similiar.\n+     * to do something similar.\n@@ -392,1 +392,1 @@\n-         * Overriden to determine an offset that tree would place the\n+         * Overridden to determine an offset that tree would place the\n@@ -394,1 +394,1 @@\n-         * <code>getRowBounds<\/code> JTree method, and additionaly\n+         * <code>getRowBounds<\/code> JTree method, and additionally\n@@ -431,1 +431,1 @@\n-         * This is overriden to forward the event to the tree. This will\n+         * This is overridden to forward the event to the tree. This will\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/treetable\/JTreeTable.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * to add methods for getting inforamtion about the set of columns each\n+ * to add methods for getting information about the set of columns each\n@@ -43,1 +43,1 @@\n-     * Returns the number ofs availible column.\n+     * Returns the number of available columns.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/treetable\/TreeTableModel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -434,1 +434,1 @@\n-    \/\/ RuntimeException with origianal IOException as cause from the\n+    \/\/ RuntimeException with original IOException as cause from the\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/AbstractHeapGraphWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- * <li>Java boolean - GXL bool atttribute\n+ * <li>Java boolean - GXL bool attribute\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/HeapGXLWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-            \/\/ be dealing with a freed or partialy intialized blob, exceptions are possible.\n+            \/\/ be dealing with a freed or partially initialized blob, exceptions are possible.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerFinder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -310,1 +310,1 @@\n-          \/\/ be dealing with a freed or partialy intialized blob, exceptions are possible.\n+          \/\/ be dealing with a freed or partially initialized blob, exceptions are possible.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerLocation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    \"getNodeData\" on two nodes; the default implementaion returns the\n+    \"getNodeData\" on two nodes; the default implementation returns the\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/RBTree.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    \/\/ Enable to terminate this worker during runnning by daemonize.\n+    \/\/ Enable to terminate this worker during running by daemonize.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/WorkerThread.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -775,1 +775,1 @@\n-    \/\/ This is not considered fatal and does happen on occassion, usually with an\n+    \/\/ This is not considered fatal and does happen on occasion, usually with an\n","filename":"src\/jdk.hotspot.agent\/windows\/native\/libsaproc\/sawindbg.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-     * memory region is sufficiently initialized for client acccess.\n+     * memory region is sufficiently initialized for client access.\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/AbstractPerfDataBufferPrologue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-     * Note - the <em>file:<\/em> protocol currenly does not support\n+     * Note - the <em>file:<\/em> protocol currently does not support\n@@ -98,1 +98,1 @@\n-     * Note - the <em>file:<\/em> protocol currenly does not support\n+     * Note - the <em>file:<\/em> protocol currently does not support\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/protocol\/file\/MonitoredHostProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * protocol for the HotSpot PerfData monitoring implemetation.\n+ * protocol for the HotSpot PerfData monitoring implementation.\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/protocol\/file\/PerfDataBuffer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    \/\/ counter names for prologue psuedo counters\n+    \/\/ counter names for prologue pseudo counters\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/v1_0\/PerfDataBufferPrologue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- * as decsribed in perfMemory.hpp. This structure looks like:\n+ * as described in perfMemory.hpp. This structure looks like:\n@@ -75,1 +75,1 @@\n-     * the data structure just in case some unforseen need arrises.\n+     * the data structure just in case some unforeseen need arrises.\n@@ -155,1 +155,1 @@\n-         * updates). This discrepency is handled by ignoring any re-parsed\n+         * updates). This discrepancy is handled by ignoring any re-parsed\n@@ -295,1 +295,1 @@\n-        \/\/ protect againt a corrupted shard memory region.\n+        \/\/ protect against a corrupted shared memory region.\n@@ -458,1 +458,1 @@\n-                            \"Unexpected vector type encounterd:\"\n+                            \"Unexpected vector type encountered:\"\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/v2_0\/PerfDataBuffer.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-                        \"Unknow time unit: \" + unitString);\n+                        \"Unknown time unit: \" + unitString);\n@@ -331,1 +331,1 @@\n-        \/\/ verify that the vm identifier is valied\n+        \/\/ verify that the vm identifier is valid\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/Arguments.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-        \/\/ should allow null data statments\n+        \/\/ should allow null data statements\n@@ -69,1 +69,1 @@\n-            \/\/ if no formating is specified, then the format is set to output\n+            \/\/ if no formatting is specified, then the format is set to output\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/ColumnFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -535,1 +535,1 @@\n-         * this search stops on the first occurance of an option\n+         * this search stops on the first occurrence of an option\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/Parser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -371,1 +371,1 @@\n-This value cannot be changed once JFR has been initalized.\n+This value cannot be changed once JFR has been initialized.\n@@ -378,1 +378,1 @@\n-This value cannot be changed once JFR has been initalized.\n+This value cannot be changed once JFR has been initialized.\n","filename":"src\/jdk.jcmd\/share\/man\/jcmd.1","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-            \/\/ local SYSTEM account are attachable if you have Adminstrator\n+            \/\/ local SYSTEM account are attachable if you have Administrator\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/LocalVirtualMachine.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-     * @param minutes the displayed time range in minutes, or -1 to diaplay all data\n+     * @param minutes the displayed time range in minutes, or -1 to display all data\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/Plotter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-        \/\/ It's this new editor that wil be cancelled here, if needed.\n+        \/\/ It's this new editor that will be cancelled here, if needed.\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/inspector\/TableSorter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -220,1 +220,1 @@\n-     * if the method is an initializer, constructor or static intializer.\n+     * if the method is an initializer, constructor or static initializer.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/ClassType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-     * Gets an identifing name for the source corresponding to\n+     * Gets an identifying name for the source corresponding to\n@@ -134,1 +134,1 @@\n-     * Gets an identifing name for the source corresponding to\n+     * Gets an identifying name for the source corresponding to\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/Location.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -236,1 +236,1 @@\n-     * within the range of stack frame indicies.\n+     * within the range of stack frame indices.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/ThreadReference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-     * <LI>their bytecodes are the same except for indicies into\n+     * <LI>their bytecodes are the same except for indices into\n@@ -896,1 +896,1 @@\n-    \/** Tracing enabled for internal managment of reference types. *\/\n+    \/** Tracing enabled for internal management of reference types. *\/\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/VirtualMachine.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -258,1 +258,1 @@\n- * be named {@code telepathicAttach}. Similiarly the ListeningConnector\n+ * be named {@code telepathicAttach}. Similarly the ListeningConnector\n@@ -380,1 +380,1 @@\n-      * {@link java.lang.Process} object for the taget VM. It may be\n+      * {@link java.lang.Process} object for the target VM. It may be\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/VirtualMachineManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * {@link Connector.Argument connector argument}. Similiarly,\n+ * {@link Connector.Argument connector argument}. Similarly,\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/connect\/TransportTimeoutException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * thread invokving the {@link Connection#close close} method.\n+ * thread invoking the {@link Connection#close close} method.\n@@ -38,1 +38,1 @@\n- * exception. Similiarly when a thread is blocked in\n+ * exception. Similarly when a thread is blocked in\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/connect\/spi\/ClosedConnectionException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-     * a cooresponding request and thus will return null.\n+     * a corresponding request and thus will return null.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/event\/Event.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n- * <LI>Only with other ExceptionEvents for the same exception occurrance:\n+ * <LI>Only with other ExceptionEvents for the same exception occurrence:\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/event\/EventSet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-     * @param count the number of ocurrences before generating an event.\n+     * @param count the number of occurrences before generating an event.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/request\/EventRequest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-         * limititation of RefType.fieldByName. Once that method is\n+         * limitation of RefType.fieldByName. Once that method is\n@@ -600,1 +600,1 @@\n-         * object for the length of an array in the debugee:\n+         * object for the length of an array in the debuggee:\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/LValue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-   * followng this token will (therefore) be the first error token.\n+   * following this token will (therefore) be the first error token.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/ParseException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-     * Return a Reader cooresponding to the source of this location.\n+     * Return a Reader corresponding to the source of this location.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/Env.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-     * return the cooresponding EventRequest.  Otherwise\n+     * return the corresponding EventRequest.  Otherwise\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/EventRequestSpec.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-         * sourcepath can arrive from the debugee as a List.\n+         * sourcepath can arrive from the debuggee as a List.\n@@ -72,1 +72,1 @@\n-         * line originiated.\n+         * line originated.\n@@ -108,1 +108,1 @@\n-     * Return a File cooresponding to the source of this location.\n+     * Return a File corresponding to the source of this location.\n@@ -131,1 +131,1 @@\n-     * Return a BufferedReader cooresponding to the source\n+     * Return a BufferedReader corresponding to the source\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/SourceMapper.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -411,1 +411,1 @@\n-             \"untrace [methods]         -- stop tracing method entrys and\/or exits\\n\" +\n+             \"untrace [methods]         -- stop tracing method entries and\/or exits\\n\" +\n@@ -482,1 +482,1 @@\n-             \"options forwarded to debuggee process if lauched by jdb (shorthand instead of using -R):\\n\" +\n+             \"options forwarded to debuggee process if launched by jdb (shorthand instead of using -R):\\n\" +\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/TTYResources.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -380,1 +380,1 @@\n-         * Now that the vm connection is open, fetch the debugee\n+         * Now that the vm connection is open, fetch the debuggee\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/VMConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-         * There is an implict VM-wide suspend at the conclusion\n+         * There is an implicit VM-wide suspend at the conclusion\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ClassTypeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-                 * the JDI implemementation. However, it would cripple\n+                 * the JDI implementation. However, it would cripple\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/InternalEventHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-         * There is an implict VM-wide suspend at the conclusion\n+         * There is an implicit VM-wide suspend at the conclusion\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/InvokableTypeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-        \/* base stratum is done slighly differently *\/\n+        \/* base stratum is done slightly differently *\/\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/LocationImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -420,1 +420,1 @@\n-         * There is an implict VM-wide suspend at the conclusion\n+         * There is an implicit VM-wide suspend at the conclusion\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ObjectReferenceImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-            throw new IOException(\"length size mis-match\");\n+            throw new IOException(\"length size mismatch\");\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/Packet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-         * Look from our starting fileIndex upto the starting\n+         * Look from our starting fileIndex up to the starting\n@@ -127,1 +127,1 @@\n-         * Look from our starting fileIndex upto the starting\n+         * Look from our starting fileIndex up to the starting\n@@ -529,1 +529,1 @@\n-     * is in stratumId - so, store the current indicies.\n+     * is in stratumId - so, store the current indices.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/SDE.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-            throw new IllegalArgumentException(\"length mis-match\");\n+            throw new IllegalArgumentException(\"length mismatch\");\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/SocketConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * debugger and debugee.\n+ * debugger and debuggee.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/SocketTransportService.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-                    System.err.println(\"Recieved reply with no sender!\");\n+                    System.err.println(\"Received reply with no sender!\");\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/TargetVM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-         * Othewise, only one thread is being resumed:\n+         * Otherwise, only one thread is being resumed:\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ThreadReferenceImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    int TRANSIENT = 0x00000080;     \/* not persistant *\/\n+    int TRANSIENT = 0x00000080;     \/* not persistent *\/\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/VMModifiers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1323,1 +1323,1 @@\n-                    printTrace(\"Dispose threashold reached. Will dispose \"\n+                    printTrace(\"Dispose threshold reached. Will dispose \"\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/VirtualMachineImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-socket_transportservice.description = Connects debugger and debugee using a TCP connection\n-memory_transportservice.description = Connects debugger and debugee using a shared memory connection\n+socket_transportservice.description = Connects debugger and debuggee using a TCP connection\n+memory_transportservice.description = Connects debugger and debuggee using a shared memory connection\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/resources\/jdi.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n- * Access must be syncronized.  Holds one shared\n+ * Access must be synchronized.  Holds one shared\n","filename":"src\/jdk.jdi\/share\/native\/libdt_shmem\/shmemBase.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-            throw new IllegalArgumentException(\"length mis-match\");\n+            throw new IllegalArgumentException(\"length mismatch\");\n","filename":"src\/jdk.jdi\/windows\/classes\/com\/sun\/tools\/jdi\/SharedMemoryConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -743,1 +743,1 @@\n-        \/\/ No address of preferred addres family found, grab the fist one.\n+        \/\/ No address of preferred address family found, grab the fist one.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libdt_socket\/socketTransport.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -587,1 +587,1 @@\n-     * is in stratumId - so, store the current indicies.\n+     * is in stratumId - so, store the current indices.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/SDE.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-             * indicies 0 thru matchCount-1 of theClasses.\n+             * indices 0 thru matchCount-1 of theClasses.\n@@ -280,1 +280,1 @@\n-             * indicies 0 thru prepCount-1 of theClasses.\n+             * indices 0 thru prepCount-1 of theClasses.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/VirtualMachineImpl.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -478,1 +478,1 @@\n- * JVMTI calls. Caller is resposible for deleting the returned reference.\n+ * JVMTI calls. Caller is responsible for deleting the returned reference.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/commonRef.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-    *cmdName_p = \"<Unkown Command>\";\n+    *cmdName_p = \"<Unknown Command>\";\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/debugDispatch.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1356,1 +1356,1 @@\n-    \/\/ No transport initilized.\n+    \/\/ No transport initialized.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/debugInit.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -419,1 +419,1 @@\n-            \/* This is kinda cheating assumming the event\n+            \/* This is kinda cheating assuming the event\n@@ -990,1 +990,1 @@\n- * eventHandlerRestricted_iterator invokation.\n+ * eventHandlerRestricted_iterator invocation.\n@@ -1095,1 +1095,1 @@\n- * eventHandlerRestricted_iterator invokation.\n+ * eventHandlerRestricted_iterator invocation.\n@@ -1205,1 +1205,1 @@\n- * eventHandlerRestricted_iterator invokation.\n+ * eventHandlerRestricted_iterator invocation.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventFilter.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * it matchs create a second event.  There may also be internal\n+ * it matches create a second event.  There may also be internal\n@@ -56,1 +56,1 @@\n- * Each event kind has a handler chain, which is a doublely linked\n+ * Each event kind has a handler chain, which is a doubly linked\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventHandler.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    jboolean available;    \/* Is the thread in an invokable state? *\/\n+    jboolean available;    \/* Is the thread in an invocable state? *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/invoker.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-             *    stepping will be diabled again and another frame pop\n+             *    stepping will be disabled again and another frame pop\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/stepControl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2189,1 +2189,1 @@\n-             * trackAppResume indirectly aquires handlerLock. For proper lock\n+             * trackAppResume indirectly acquires handlerLock. For proper lock\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-\/\/ Platform independed part\n+\/\/ Platform independent part\n@@ -310,1 +310,1 @@\n-        \/\/ Firts call, get codepage from the os\n+        \/\/ First call, get codepage from the os\n@@ -490,1 +490,1 @@\n-           \/\/ Not able to intialize process locale from platform one.\n+           \/\/ Not able to initialize process locale from platform one.\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/utf_util.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1043,1 +1043,1 @@\n-     * b- gotten a suprious wakeup\n+     * b- gotten a spurious wakeup\n@@ -2412,1 +2412,1 @@\n-        LOG_LOC((\"%s: debugee: thread=%p(%s:0x%x),method=%p(%s@%d;%s)\",\n+        LOG_LOC((\"%s: debuggee: thread=%p(%s:0x%x),method=%p(%s@%d;%s)\",\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-    \/* Indication that VM_DEATH has been recieved and the JVMTI callbacks have been cleared. *\/\n+    \/* Indication that VM_DEATH has been received and the JVMTI callbacks have been cleared. *\/\n@@ -275,1 +275,1 @@\n-#define MOD_TRANSIENT    0x0080     \/* not persistant *\/\n+#define MOD_TRANSIENT    0x0080     \/* not persistent *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-                \/\/ XXX: should we cancle the notifierTask here?\n+                \/\/ XXX: should we cancel the notifierTask here?\n","filename":"src\/jdk.jstatd\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/protocol\/rmi\/RemoteMonitoredVm.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -314,1 +314,1 @@\n-                     * or there is \"all acess\" to the file.\n+                     * or there is \"all access\" to the file.\n","filename":"src\/jdk.management.agent\/windows\/native\/libmanagement_agent\/FileSystemImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            throw new IllegalArgumentException(\"heapdump file must have .hprof extention\");\n+            throw new IllegalArgumentException(\"heapdump file must have .hprof extension\");\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/internal\/HotSpotDiagnostic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -314,1 +314,1 @@\n-    \/\/ allocate memory to hold the fd information (we don't acutally use this information\n+    \/\/ allocate memory to hold the fd information (we don't actually use this information\n","filename":"src\/jdk.management\/unix\/native\/libmanagement_ext\/OperatingSystemImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -962,1 +962,1 @@\n-    \/* The 'A' at the end means the ANSI (not the UNICODE) vesions of the methods *\/\n+    \/* The 'A' at the end means the ANSI (not the UNICODE) versions of the methods *\/\n","filename":"src\/jdk.management\/windows\/native\/libmanagement_ext\/OperatingSystemImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}