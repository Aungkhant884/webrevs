[{"commit":{"message":"Tweak copyright headers"},"files":[{"filename":"src\/hotspot\/cpu\/arm\/downcallLinker_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/foreignGlobals_arm.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/downcallLinker_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/foreignGlobals_s390.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Architecture.java"}],"sha":"7b1b95f5daf43c9946715b4a4bb1e374be9a53e7"},{"commit":{"message":"Use @requires to disable some tests on x86"},"files":[{"filename":"test\/jdk\/java\/foreign\/TestLargeSegmentCopy.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"}],"sha":"b805dd5e00769301fd3db1ce970d30c9dfaeb33f"},{"commit":{"message":"Use AssertionError for internal exceptions"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"}],"sha":"202f61a1c0e27e131f0400aa66f21c61c71fe18c"},{"commit":{"message":"Javadoc nits\n\nCo-authored-by: Maurizio Cimadamore <54672762+mcimadamore@users.noreply.github.com>"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"}],"sha":"eb38b5965cb5cf73a09b6e8a6e14de3e4e0f81b8"},{"commit":{"message":"Work around x86 failures"},"files":[{"filename":"test\/jdk\/ProblemList.txt"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutPrincipalTotalityTest.java"},{"filename":"test\/jdk\/java\/foreign\/MemoryLayoutTypeRetentionTest.java"},{"filename":"test\/jdk\/java\/foreign\/TestLinker.java"}],"sha":"9e13922dfe853a6e58e4c7af02d06d4f65447699"},{"commit":{"message":"Review comments"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"}],"sha":"cef12055dc4b60e3c7a8537c58d6f1ce52f816a2"},{"commit":{"message":"Rename CAPTURED_STATE_MASK stub location to CAPTURED_STATE_BUFFER"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/StubLocations.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"}],"sha":"a40080e6a963a67cb8d25fed8f150504ac54d31d"},{"commit":{"message":"fix TestCaptureCallState"},"files":[{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"}],"sha":"d7bb061f4e4f34c1a6e74b7e593a1f4a83774294"},{"commit":{"message":"add stubs"},"files":[{"filename":"src\/hotspot\/cpu\/arm\/downcallLinker_arm.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/downcallLinker_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/downcallLinker_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/downcallLinker_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/downcallLinker_zero.cpp"}],"sha":"c852298ddb2c42bef6876d66c7a5c5a82474412f"},{"commit":{"message":"8295353: Mark Register v24 as Volatile in Foreign Function & Memory C ABI Definition\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"}],"sha":"80339f70547d347d4825beaba63ab508451c395f"},{"commit":{"message":"8294970: Add linker option for saving thread-locals that the VM can overwrite\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/share\/prims\/downcallLinker.cpp"},{"filename":"src\/hotspot\/share\/prims\/downcallLinker.hpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ABIDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CapturableState.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/DowncallLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/LinkerOptions.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/StubLocations.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/TestLinker.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/TestCaptureCallState.java"},{"filename":"test\/jdk\/java\/foreign\/capturecallstate\/libCaptureCallState.c"}],"sha":"36eba4b7f9e7ae30b3ec2585d61282a57d8a9c4b"},{"commit":{"message":"8275584: Incorrect stack spilling in CallArranger on MacOS\/AArch64\n\nCo-authored-by: Jorn Vernee <jvernee@openjdk.org>\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"test\/jdk\/ProblemList.txt"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/CallArrangerTestBase.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"}],"sha":"8fbc651c9911227b3f83b637725a26cd8071601d"},{"commit":{"message":"8295265: Refactor handling of special values passed to stubs\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/upcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vmstorage_aarch64.inline.hpp"},{"filename":"src\/hotspot\/cpu\/arm\/foreignGlobals_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/vmstorage_arm.inline.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/foreignGlobals_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/vmstorage_ppc.inline.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/foreignGlobals_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vmstorage_riscv.inline.hpp"},{"filename":"src\/hotspot\/cpu\/s390\/foreignGlobals_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/vmstorage_s390.inline.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/upcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/vmstorage_x86.inline.hpp"},{"filename":"src\/hotspot\/cpu\/zero\/foreignGlobals_zero.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/vmstorage_zero.inline.hpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/hotspot\/share\/prims\/vmstorageBase.inline.hpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ABIDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/StubLocations.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"0c810a9cfbaf151b2afbc960da6347e98c5d4d15"},{"commit":{"message":"VMStorage to record"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/VMStorage.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"}],"sha":"f8c344220ca728e602df0793b7ba72b0a27d835e"},{"commit":{"message":"8275644: Replace VMReg in shuffling code with something more fine grained.\n\nReviewed-by: mcimadamore, ngasson"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/downcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/foreignGlobals_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/upcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vmstorage_aarch64.inline.hpp"},{"filename":"src\/hotspot\/cpu\/arm\/downcallLinker_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/foreignGlobals_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/vmstorage_arm.inline.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/downcallLinker_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/foreignGlobals_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/vmstorage_ppc.inline.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/downcallLinker_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/foreignGlobals_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vmstorage_riscv.inline.hpp"},{"filename":"src\/hotspot\/cpu\/s390\/downcallLinker_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/foreignGlobals_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/vmstorage_s390.inline.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/downcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/foreignGlobals_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/upcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/vmstorage_x86.inline.hpp"},{"filename":"src\/hotspot\/cpu\/zero\/downcallLinker_zero.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/foreignGlobals_zero.cpp"},{"filename":"src\/hotspot\/cpu\/zero\/vmstorage_zero.inline.hpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp"},{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"},{"filename":"src\/hotspot\/share\/prims\/downcallLinker.hpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.cpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.hpp"},{"filename":"src\/hotspot\/share\/prims\/foreignGlobals.inline.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/hotspot\/share\/prims\/vmstorage.cpp"},{"filename":"src\/hotspot\/share\/prims\/vmstorage.inline.hpp"},{"filename":"src\/hotspot\/share\/prims\/vmstorageBase.inline.hpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/VMStorage.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/AArch64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/X86_64Architecture.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"eecd85294b24fbb3f6ac535e0738a552f7ee955a"},{"commit":{"message":"8291913: Remove the TraceOptimizedUpcallStubs flag\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/upcallLinker_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/upcallLinker_x86_64.cpp"},{"filename":"src\/hotspot\/share\/code\/codeBlob.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"}],"sha":"7abcb28e3eacc5084240c1745752be967dabb67d"}]