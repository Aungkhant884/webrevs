{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,4 @@\n+    static int getUnsignedShort(byte[] b, int off) {\n+        return ((b[off] & 0xFF) << 8) + (b[off + 1] & 0xFF);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/io\/Bits.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -78,0 +78,2 @@\n+    private final byte[] readBuffer = new byte[8];\n+\n@@ -370,4 +372,0 @@\n-        return (int) read(1);\n-    }\n-\n-   private long read(int length) throws IOException {\n@@ -376,1 +374,1 @@\n-            return read0(length);\n+            return read0();\n@@ -382,1 +380,1 @@\n-    private native long read0(int length) throws IOException;\n+    private native int read0() throws IOException;\n@@ -807,1 +805,1 @@\n-        return (short) read(2);\n+        return (short) readUnsignedShort();\n@@ -831,1 +829,2 @@\n-        return (int) read(2);\n+        readFully(readBuffer, 0, 2);\n+        return Bits.getUnsignedShort(readBuffer, 0);\n@@ -855,1 +854,1 @@\n-        return (char) read(2);\n+        return (char) readUnsignedShort();\n@@ -879,1 +878,2 @@\n-        return (int) read(4);\n+        readFully(readBuffer, 0, 4);\n+        return Bits.getInt(readBuffer, 0);\n@@ -911,1 +911,2 @@\n-        return read(8);\n+        readFully(readBuffer, 0, 8);\n+        return Bits.getLong(readBuffer, 0);\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -70,3 +70,3 @@\n-JNIEXPORT jlong JNICALL\n-Java_java_io_RandomAccessFile_read0(JNIEnv *env, jobject this, jint length) {\n-    return readN(env, this, raf_fd, length);\n+JNIEXPORT jint JNICALL\n+Java_java_io_RandomAccessFile_read0(JNIEnv *env, jobject this) {\n+    return readSingle(env, this, raf_fd);\n","filename":"src\/java.base\/share\/native\/libjava\/RandomAccessFile.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,57 +56,0 @@\n-#define SHORT_SIZE 2\n-#define INT_SIZE   4\n-#define LONG_SIZE  8\n-\n-jlong\n-readN(JNIEnv *env, jobject this, jfieldID fid, jint len) {\n-    if (len == 1) {\n-        return readSingle(env, this, fid);\n-    }\n-    char *buf = NULL;\n-    if (len == SHORT_SIZE) {\n-      char stackBuf[SHORT_SIZE];\n-      buf = stackBuf;\n-    }\n-    if (len == INT_SIZE) {\n-      char stackBuf[INT_SIZE];\n-      buf = stackBuf;\n-    }\n-    if (len == LONG_SIZE) {\n-      char stackBuf[LONG_SIZE];\n-      buf = stackBuf;\n-    }\n-\n-    FD fd = getFD(env, this, fid);\n-    if (fd == -1) {\n-        JNU_ThrowIOException(env, \"Stream Closed\");\n-        return -1;\n-    }\n-    jint nread = IO_Read(fd, buf, len);\n-    if (nread == -1) {\n-        JNU_ThrowByName(env, \"java\/io\/EOFException\", NULL);\n-        return -1;\n-    }\n-\n-    if (len == SHORT_SIZE) {\n-        return ((*buf) << 8) + (*(buf + 1) & 0xFF);\n-    }\n-    if (len == INT_SIZE) {\n-        return ((*buf) << 24) +\n-               ((*(buf + 1) & 0xFF) << 16) +\n-               ((*(buf + 2) & 0xFF) << 8) +\n-               ((*(buf + 3) & 0xFF));\n-    }\n-    if (len == LONG_SIZE) {\n-        return ((((jlong) *(buf)) << 56) +\n-                (((jlong) (*(buf + 1)) & 0xFF) << 48) +\n-                (((jlong) (*(buf + 2)) & 0xFF) << 40) +\n-                (((jlong) (*(buf + 3)) & 0xFF) << 32) +\n-                (((jlong) (*(buf + 4)) & 0xFF) << 24) +\n-                ((*(buf + 5) & 0xFF) << 16) +\n-                ((*(buf + 6) & 0xFF) << 8) +\n-                ((*(buf + 7) & 0xFF)));\n-    }\n-    JNU_ThrowByName(env, \"java\/lang\/IllegalArgumentException\", NULL);\n-    return -1;\n-}\n-\n","filename":"src\/java.base\/share\/native\/libjava\/io_util.c","additions":1,"deletions":58,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,0 @@\n-jlong readN(JNIEnv *env, jobject this, jfieldID fid, jint length);\n","filename":"src\/java.base\/share\/native\/libjava\/io_util.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}