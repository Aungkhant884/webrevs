{"files":[{"patch":"@@ -103,3 +103,2 @@\n-static ModuleEntry* get_module_entry(jobject module, TRAPS) {\n-  oop m = JNIHandles::resolve_non_null(module);\n-  if (!java_lang_Module::is_instance(m)) {\n+static ModuleEntry* get_module_entry(Handle module, TRAPS) {\n+  if (!java_lang_Module::is_instance(module())) {\n@@ -109,1 +108,1 @@\n-  return java_lang_Module::module_entry(m);\n+  return java_lang_Module::module_entry(module());\n@@ -275,1 +274,1 @@\n-void Modules::define_module(jobject module, jboolean is_open, jstring version,\n+void Modules::define_module(Handle module, jboolean is_open, jstring version,\n@@ -280,1 +279,1 @@\n-  if (module == NULL) {\n+  if (module.is_null()) {\n@@ -284,2 +283,1 @@\n-  Handle module_handle(THREAD, JNIHandles::resolve_non_null(module));\n-  if (!java_lang_Module::is_instance(module_handle())) {\n+  if (!java_lang_Module::is_instance(module())) {\n@@ -291,1 +289,1 @@\n-  char* module_name = get_module_name(module_handle(), module_name_len, CHECK);\n+  char* module_name = get_module_name(module(), module_name_len, CHECK);\n@@ -304,1 +302,1 @@\n-    define_javabase_module(module_handle, version, location, packages_h, num_packages, CHECK);\n+    define_javabase_module(module, version, location, packages_h, num_packages, CHECK);\n@@ -308,1 +306,1 @@\n-  oop loader = java_lang_Module::loader(module_handle());\n+  oop loader = java_lang_Module::loader(module());\n@@ -405,1 +403,1 @@\n-        ModuleEntry* module_entry = module_table->locked_create_entry(module_handle,\n+        ModuleEntry* module_entry = module_table->locked_create_entry(module,\n@@ -422,1 +420,1 @@\n-        java_lang_Module::set_module_entry(module_handle(), module_entry);\n+        java_lang_Module::set_module_entry(module(), module_entry);\n@@ -479,1 +477,1 @@\n-void Modules::define_archived_modules(jobject platform_loader, jobject system_loader, TRAPS) {\n+void Modules::define_archived_modules(Handle h_platform_loader, Handle h_system_loader, TRAPS) {\n@@ -493,1 +491,1 @@\n-  if (platform_loader == NULL) {\n+  if (h_platform_loader.is_null()) {\n@@ -497,1 +495,1 @@\n-  if (system_loader == NULL) {\n+  if (h_system_loader.is_null()) {\n@@ -501,1 +499,0 @@\n-  Handle h_platform_loader(THREAD, JNIHandles::resolve_non_null(platform_loader));\n@@ -505,1 +502,0 @@\n-  Handle h_system_loader(THREAD, JNIHandles::resolve_non_null(system_loader));\n@@ -518,1 +514,1 @@\n-void Modules::set_bootloader_unnamed_module(jobject module, TRAPS) {\n+void Modules::set_bootloader_unnamed_module(Handle module, TRAPS) {\n@@ -521,1 +517,1 @@\n-  if (module == NULL) {\n+  if (module.is_null()) {\n@@ -524,2 +520,1 @@\n-  Handle module_handle(THREAD, JNIHandles::resolve(module));\n-  if (!java_lang_Module::is_instance(module_handle())) {\n+  if (!java_lang_Module::is_instance(module())) {\n@@ -531,1 +526,1 @@\n-  oop name = java_lang_Module::name(module_handle());\n+  oop name = java_lang_Module::name(module());\n@@ -538,1 +533,1 @@\n-  oop loader = java_lang_Module::loader(module_handle());\n+  oop loader = java_lang_Module::loader(module());\n@@ -550,1 +545,1 @@\n-  unnamed_module->set_module(boot_loader_data->add_handle(module_handle));\n+  unnamed_module->set_module(boot_loader_data->add_handle(module));\n@@ -552,1 +547,1 @@\n-  java_lang_Module::set_module_entry(module_handle(), unnamed_module);\n+  java_lang_Module::set_module_entry(module(), unnamed_module);\n@@ -555,1 +550,1 @@\n-void Modules::add_module_exports(jobject from_module, jstring package_name, jobject to_module, TRAPS) {\n+void Modules::add_module_exports(Handle from_module, jstring package_name, Handle to_module, TRAPS) {\n@@ -562,1 +557,1 @@\n-  if (from_module == NULL) {\n+  if (from_module.is_null()) {\n@@ -576,1 +571,1 @@\n-  if (to_module == NULL) {\n+  if (to_module.is_null()) {\n@@ -622,2 +617,2 @@\n-void Modules::add_module_exports_qualified(jobject from_module, jstring package,\n-                                           jobject to_module, TRAPS) {\n+void Modules::add_module_exports_qualified(Handle from_module, jstring package,\n+                                           Handle to_module, TRAPS) {\n@@ -625,1 +620,1 @@\n-  if (to_module == NULL) {\n+  if (to_module.is_null()) {\n@@ -632,1 +627,1 @@\n-void Modules::add_reads_module(jobject from_module, jobject to_module, TRAPS) {\n+void Modules::add_reads_module(Handle from_module, Handle to_module, TRAPS) {\n@@ -634,1 +629,1 @@\n-  if (from_module == NULL) {\n+  if (from_module.is_null()) {\n@@ -646,1 +641,1 @@\n-  if (to_module != NULL) {\n+  if (!to_module.is_null()) {\n@@ -738,1 +733,1 @@\n-void Modules::add_module_exports_to_all_unnamed(jobject module, jstring package_name, TRAPS) {\n+void Modules::add_module_exports_to_all_unnamed(Handle module, jstring package_name, TRAPS) {\n@@ -740,1 +735,1 @@\n-  if (module == NULL) {\n+  if (module.is_null()) {\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":32,"deletions":37,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-  static void define_module(jobject module, jboolean is_open, jstring version,\n+  static void define_module(Handle module, jboolean is_open, jstring version,\n@@ -56,1 +56,1 @@\n-  static void define_archived_modules(jobject platform_loader, jobject system_loader,\n+  static void define_archived_modules(Handle h_platform_loader, Handle h_system_loader,\n@@ -67,1 +67,1 @@\n-  static void set_bootloader_unnamed_module(jobject module, TRAPS);\n+  static void set_bootloader_unnamed_module(Handle module, TRAPS);\n@@ -79,1 +79,1 @@\n-  static void add_module_exports(jobject from_module, jstring package, jobject to_module, TRAPS);\n+  static void add_module_exports(Handle from_module, jstring package, Handle to_module, TRAPS);\n@@ -90,1 +90,1 @@\n-  static void add_module_exports_qualified(jobject from_module, jstring package, jobject to_module, TRAPS);\n+  static void add_module_exports_qualified(Handle from_module, jstring package, Handle to_module, TRAPS);\n@@ -98,1 +98,1 @@\n-  static void add_reads_module(jobject from_module, jobject to_module, TRAPS);\n+  static void add_reads_module(Handle from_module, Handle to_module, TRAPS);\n@@ -115,1 +115,1 @@\n-  static void add_module_exports_to_all_unnamed(jobject module, jstring package, TRAPS);\n+  static void add_module_exports_to_all_unnamed(Handle module, jstring package, TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/modules.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1089,1 +1089,2 @@\n-  Modules::define_module(module, is_open, version, location, packages, CHECK);\n+  Handle h_module (THREAD, JNIHandles::resolve(module));\n+  Modules::define_module(h_module, is_open, version, location, packages, CHECK);\n@@ -1093,1 +1094,2 @@\n-  Modules::set_bootloader_unnamed_module(module, CHECK);\n+  Handle h_module (THREAD, JNIHandles::resolve(module));\n+  Modules::set_bootloader_unnamed_module(h_module, CHECK);\n@@ -1097,1 +1099,3 @@\n-  Modules::add_module_exports_qualified(from_module, package, to_module, CHECK);\n+  Handle h_from_module (THREAD, JNIHandles::resolve(from_module));\n+  Handle h_to_module (THREAD, JNIHandles::resolve(to_module));\n+  Modules::add_module_exports_qualified(h_from_module, package, h_to_module, CHECK);\n@@ -1101,1 +1105,2 @@\n-  Modules::add_module_exports_to_all_unnamed(from_module, package, CHECK);\n+  Handle h_from_module (THREAD, JNIHandles::resolve(from_module));\n+  Modules::add_module_exports_to_all_unnamed(h_from_module, package, CHECK);\n@@ -1105,1 +1110,2 @@\n-  Modules::add_module_exports(from_module, package, NULL, CHECK);\n+  Handle h_from_module (THREAD, JNIHandles::resolve(from_module));\n+  Modules::add_module_exports(h_from_module, package, Handle(), CHECK);\n@@ -1109,1 +1115,3 @@\n-  Modules::add_reads_module(from_module, source_module, CHECK);\n+  Handle h_from_module (THREAD, JNIHandles::resolve(from_module));\n+  Handle h_source_module (THREAD, JNIHandles::resolve(source_module));\n+  Modules::add_reads_module(h_from_module, h_source_module, CHECK);\n@@ -1113,1 +1121,3 @@\n-  Modules::define_archived_modules(platform_loader, system_loader, CHECK);\n+  Handle h_platform_loader (THREAD, JNIHandles::resolve(platform_loader));\n+  Handle h_system_loader (THREAD, JNIHandles::resolve(system_loader));\n+  Modules::define_archived_modules(h_platform_loader, h_system_loader, CHECK);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1705,1 +1705,2 @@\n-  Modules::define_module(module, is_open, version, location, packages, CHECK);\n+  Handle h_module (THREAD, JNIHandles::resolve(module));\n+  Modules::define_module(h_module, is_open, version, location, packages, CHECK);\n@@ -1709,1 +1710,3 @@\n-  Modules::add_module_exports_qualified(from_module, package, to_module, CHECK);\n+  Handle h_from_module (THREAD, JNIHandles::resolve(from_module));\n+  Handle h_to_module (THREAD, JNIHandles::resolve(to_module));\n+  Modules::add_module_exports_qualified(h_from_module, package, h_to_module, CHECK);\n@@ -1713,1 +1716,2 @@\n-  Modules::add_module_exports_to_all_unnamed(module, package, CHECK);\n+  Handle h_module (THREAD, JNIHandles::resolve(module));\n+  Modules::add_module_exports_to_all_unnamed(h_module, package, CHECK);\n@@ -1717,1 +1721,2 @@\n-  Modules::add_module_exports(module, package, NULL, CHECK);\n+  Handle h_module (THREAD, JNIHandles::resolve(module));\n+  Modules::add_module_exports(h_module, package, Handle(), CHECK);\n@@ -1721,1 +1726,3 @@\n-  Modules::add_reads_module(from_module, source_module, CHECK);\n+  Handle h_from_module (THREAD, JNIHandles::resolve(from_module));\n+  Handle h_source_module (THREAD, JNIHandles::resolve(source_module));\n+  Modules::add_reads_module(h_from_module, h_source_module, CHECK);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"}]}