[{"commit":{"message":"Remove the \"is_predicated_vector()\" check introduced in JDK-8292587"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"}],"sha":"a11766fd14f95a47697b10ae7691a405ed21d28a"},{"commit":{"message":"Merge branch 'master' into 8290169-adlc"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"28f5c074f99ac56fb27a6afcba7dfa4f6b798c6c"},{"commit":{"message":"Merge branch 'master' into 8290169-adlc\n\nResolve the conflicts."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"f8bfb7be24acb5b8d0452ff4accd9e29f65ea957"},{"commit":{"message":"8290169: adlc: Improve child constraints for vector unary operations\n\nAs demonstrated in [1], the child constrait generated for *predicated\nvector unary operation* is the super set of that generated for the\n*unpredicated* version. As a result, there exists a risk for predicated\nvector unary operaions to match the unpredicated rules by accident.\n\nIn this patch, we resolve this issue by generating one extra check\n\"rChild == NULL\" ONLY for vector unary operations. In this way, the\nchild constraints for predicated\/unpredicated vector unary operations\nare exclusive now.\n\nFollowing the example in [1], the dfa state generated for AbsVI is shown\nbelow.\n\n```\nvoid  State::_sub_Op_AbsVI(const Node *n){\n  if( STATE__VALID_CHILD(_kids[0], VREG) && STATE__VALID_CHILD(_kids[1], PREGGOV) &&\n      ( UseSVE > 0 ) )\n  {\n    unsigned int c = _kids[0]->_cost[VREG]+_kids[1]->_cost[PREGGOV] + SVE_COST;\n      DFA_PRODUCTION(VREG, vabsI_masked_rule, c)\n  }\n  if( STATE__VALID_CHILD(_kids[0], VREG) && _kids[1] == NULL &&  <---- 1\n      ( UseSVE > 0) )\n  {\n    unsigned int c = _kids[0]->_cost[VREG] + SVE_COST;\n    if (STATE__NOT_YET_VALID(VREG) || _cost[VREG] > c) {\n      DFA_PRODUCTION(VREG, vabsI_rule, c)\n    }\n  }\n  ...\n```\n\nWe can see that the constraint at line 1 cannot be matched for\npredicated AbsVI node now.\n\nThe main updates are made in adlc\/dfa part. Ideally, we should only\nadd the extra check for affected platforms, i.e. AVX-512 and SVE. But we\ndidn't do that because it would be better not to introduce any\narchitecture dependent implementation here.\n\nBesides, workarounds in both aarch64_sve.ad and x86.ad are removed. 1)\nMany \"is_predicated_vector()\" checks can be removed in aarch64_sve.ad\nfile. 2) Default instruction cost is used for involving rules in x86.ad\nfile.\n\n[1]. https:\/\/github.com\/shqking\/jdk\/commit\/50ec9b19"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/share\/adlc\/archDesc.hpp"},{"filename":"src\/hotspot\/share\/adlc\/dfa.cpp"}],"sha":"4be4fa3796b0620a8300721b638259c25754a876"}]