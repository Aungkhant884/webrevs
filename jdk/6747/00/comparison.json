{"files":[{"patch":"@@ -824,1 +824,1 @@\n-    id = WorkerThread::current()->id();\n+    id = WorkerThread::id();\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  \/\/ Get worker id.\n+  \/\/ Get and set worker id.\n@@ -64,0 +64,1 @@\n+  WorkerThread::set_id(worker_id);\n@@ -94,1 +95,1 @@\n-WorkerThread* WorkerThreads::create_worker(uint id) {\n+WorkerThread* WorkerThreads::create_worker(uint which) {\n@@ -99,1 +100,1 @@\n-  WorkerThread* const worker = new WorkerThread(_name, id, &_dispatcher);\n+  WorkerThread* const worker = new WorkerThread(_name, which, &_dispatcher);\n@@ -149,4 +150,5 @@\n-WorkerThread::WorkerThread(const char* name_prefix, uint id, WorkerTaskDispatcher* dispatcher) :\n-    _dispatcher(dispatcher),\n-    _id(id) {\n-  set_name(\"%s#%d\", name_prefix, id);\n+THREAD_LOCAL uint WorkerThread::_id = UINT_MAX;\n+\n+WorkerThread::WorkerThread(const char* name_prefix, uint which, WorkerTaskDispatcher* dispatcher) :\n+    _dispatcher(dispatcher) {\n+  set_name(\"%s#%d\", name_prefix, which);\n","filename":"src\/hotspot\/share\/gc\/shared\/workerThread.cpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-  virtual WorkerThread* create_worker(uint id);\n+  virtual WorkerThread* create_worker(uint which);\n@@ -120,0 +120,2 @@\n+  friend class WorkerTaskDispatcher;\n+\n@@ -121,0 +123,2 @@\n+  static THREAD_LOCAL uint _id;\n+\n@@ -122,1 +126,0 @@\n-  const uint                  _id;\n@@ -124,4 +127,1 @@\n-public:\n-  static WorkerThread* current() {\n-    return WorkerThread::cast(Thread::current());\n-  }\n+  static void set_id(uint id) { _id = id; }\n@@ -129,4 +129,2 @@\n-  static WorkerThread* cast(Thread* t) {\n-    assert(t->is_Worker_thread(), \"incorrect cast to WorkerThread\");\n-    return static_cast<WorkerThread*>(t);\n-  }\n+public:\n+  static uint id() { return _id; }\n@@ -136,2 +134,0 @@\n-  uint id() const                        { return _id; }\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/workerThread.hpp","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -74,2 +74,2 @@\n-WorkerThread* ShenandoahWorkerThreads::create_worker(uint id) {\n-  WorkerThread* worker = WorkerThreads::create_worker(id);\n+WorkerThread* ShenandoahWorkerThreads::create_worker(uint which) {\n+  WorkerThread* worker = WorkerThreads::create_worker(which);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahWorkGroup.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  WorkerThread* create_worker(uint id);\n+  WorkerThread* create_worker(uint which);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahWorkGroup.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}