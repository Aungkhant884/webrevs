{"files":[{"patch":"@@ -44,1 +44,1 @@\n- * @run main FullScreenInsets\n+ * @requires (os.family != \"linux\")\n@@ -46,0 +46,1 @@\n+\n@@ -51,1 +52,1 @@\n-    private static final float TOLERANCE = 10;\n+    private static final float TOLERANCE = 2;\n@@ -53,1 +54,1 @@\n-    public static void main(final String[] args) throws IOException {\n+    public static void main(final String[] args) throws IOException, AWTException {\n@@ -59,1 +60,1 @@\n-        final Frame wGreen = new Frame();\n+        final Window wGreen = new Frame();\n@@ -61,1 +62,0 @@\n-        wGreen.setUndecorated(true);\n@@ -68,1 +68,1 @@\n-        final Frame wRed = new Frame();\n+        final Window wRed = new Frame();\n@@ -70,1 +70,0 @@\n-        wRed.setUndecorated(true);\n@@ -74,2 +73,2 @@\n-        final Insets iRed = wGreen.getInsets();\n-        final Dimension sRed = wGreen.getSize();\n+        final Insets iRed = wRed.getInsets();\n+        final Dimension sRed = wRed.getSize();\n@@ -81,0 +80,1 @@\n+            Rectangle expectedBounds = device.getDefaultConfiguration().getBounds();\n@@ -84,1 +84,1 @@\n-            testWindowBounds(device.getFullScreenWindow().getBounds(), wGreen);\n+            testWindowBounds(expectedBounds, wGreen);\n@@ -89,1 +89,1 @@\n-            testWindowBounds(device.getFullScreenWindow().getBounds(), wRed);\n+            testWindowBounds(expectedBounds, wRed);\n@@ -122,2 +122,3 @@\n-    private static void testWindowBounds(Rectangle expectedBounds, final Window w) {\n-        if (!expectedBounds.equals(w.getBounds())) {\n+    private static void testWindowBounds(final Rectangle expectedSize, final Window w) {\n+        if (w.getWidth() != expectedSize.getWidth()\n+                || w.getHeight() != expectedSize.getHeight()) {\n@@ -125,2 +126,3 @@\n-                               \" Expected: \" + expectedBounds +\n-                               \" Actual: \" + w.getBounds());\n+                    \" Expected: width = \" + expectedSize.getWidth()\n+                    + \", height = \" + expectedSize.getHeight() + \" Actual: \"\n+                    + w.getSize());\n@@ -131,1 +133,2 @@\n-    private static void testColor(final Window w, final Color color, final String filename) throws IOException {\n+    private static void testColor(final Window w, final Color color, final String filename)\n+            throws IOException {\n@@ -142,1 +145,1 @@\n-        \/\/ vertical scan - at the right end\n+        \/\/ vertical scan - at the far right side\n@@ -145,1 +148,2 @@\n-            float[] actualRGB = new Color(bimg.getRGB(x, y)).getRGBColorComponents(null);\n+            float[] actualRGB = new Color(bimg.getRGB(x, y))\n+                    .getRGBColorComponents(null);\n@@ -156,1 +160,1 @@\n-        \/\/ horizontal scan - at the bottom end\n+        \/\/ horizontal scan - at the far bottom side\n@@ -159,1 +163,2 @@\n-            float[] actualRGB = new Color(bimg.getRGB(x, y)).getRGBColorComponents(null);\n+            float[] actualRGB = new Color(bimg.getRGB(x, y))\n+                    .getRGBColorComponents(null);\n@@ -177,2 +182,2 @@\n-                || Math.abs(actualRGB[1] - expectedRGB[1]) > TOLERANCE ||\n-                Math.abs(actualRGB[2] - expectedRGB[2]) > TOLERANCE);\n+                || Math.abs(actualRGB[1] - expectedRGB[1]) > TOLERANCE\n+                || Math.abs(actualRGB[2] - expectedRGB[2]) > TOLERANCE);\n","filename":"test\/jdk\/java\/awt\/FullScreen\/FullScreenInsets\/FullScreenInsets.java","additions":27,"deletions":22,"binary":false,"changes":49,"status":"modified"}]}