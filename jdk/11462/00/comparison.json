{"files":[{"patch":"@@ -183,1 +183,0 @@\n-java\/awt\/FullScreen\/FullScreenInsets\/FullScreenInsets.java 7019055,8266245 windows-all,linux-all,macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import javax.imageio.ImageIO;\n@@ -27,1 +28,0 @@\n-import java.awt.DisplayMode;\n@@ -32,0 +32,1 @@\n+import java.awt.Rectangle;\n@@ -35,0 +36,2 @@\n+import java.io.File;\n+import java.io.IOException;\n@@ -36,1 +39,1 @@\n-\/**\n+\/*\n@@ -41,1 +44,1 @@\n- * @author Sergey Bylokhov\n+ * @run main FullScreenInsets\n@@ -47,0 +50,2 @@\n+    private static int deviceCount = 0;\n+    private static final float TOLERANCE = 10;\n@@ -48,1 +53,1 @@\n-    public static void main(final String[] args) {\n+    public static void main(final String[] args) throws IOException {\n@@ -52,0 +57,1 @@\n+        System.out.println(\"No. of Screen Devices: \"+ devices.length + \"\\n\");\n@@ -53,1 +59,1 @@\n-        final Window wGreen = new Frame();\n+        final Frame wGreen = new Frame();\n@@ -55,0 +61,1 @@\n+        wGreen.setUndecorated(true);\n@@ -61,1 +68,1 @@\n-        final Window wRed = new Frame();\n+        final Frame wRed = new Frame();\n@@ -63,0 +70,1 @@\n+        wRed.setUndecorated(true);\n@@ -73,0 +81,1 @@\n+            System.out.println(\"Testing on Screen Device# \"+ deviceCount++);\n@@ -75,2 +84,2 @@\n-            testWindowBounds(device.getDisplayMode(), wGreen);\n-            testColor(wGreen, Color.GREEN);\n+            testWindowBounds(device.getFullScreenWindow().getBounds(), wGreen);\n+            testColor(wGreen, Color.GREEN, \"GREEN_\" + deviceCount + \".png\");\n@@ -80,2 +89,2 @@\n-            testWindowBounds(device.getDisplayMode(), wRed);\n-            testColor(wRed, Color.RED);\n+            testWindowBounds(device.getFullScreenWindow().getBounds(), wRed);\n+            testColor(wRed, Color.RED, \"RED_\" + deviceCount + \".png\");\n@@ -99,1 +108,1 @@\n-            System.err.println(\" Wrong window size:\" +\n+            System.out.println(\" Wrong window size:\" +\n@@ -107,1 +116,1 @@\n-            System.err.println(\" Wrong window insets:\" +\n+            System.out.println(\" Wrong window insets:\" +\n@@ -113,6 +122,5 @@\n-    private static void testWindowBounds(final DisplayMode dm, final Window w) {\n-        if (w.getWidth() != dm.getWidth() || w.getHeight() != dm.getHeight()) {\n-            System.err.println(\" Wrong window bounds:\" +\n-                               \" Expected: width = \" + dm.getWidth()\n-                               + \", height = \" + dm.getHeight() + \" Actual: \"\n-                               + w.getSize());\n+    private static void testWindowBounds(Rectangle expectedBounds, final Window w) {\n+        if (!expectedBounds.equals(w.getBounds())) {\n+            System.out.println(\" Wrong window bounds:\" +\n+                               \" Expected: \" + expectedBounds +\n+                               \" Actual: \" + w.getBounds());\n@@ -123,1 +131,1 @@\n-    private static void testColor(final Window w, final Color color) {\n+    private static void testColor(final Window w, final Color color, final String filename) throws IOException {\n@@ -125,0 +133,1 @@\n+        float[] expectedRGB = color.getRGBColorComponents(null);\n@@ -132,12 +141,27 @@\n-        final BufferedImage bi = r.createScreenCapture(w.getBounds());\n-        for (int y = 0; y < bi.getHeight(); y++) {\n-            for (int x = 0; x < bi.getWidth(); x++) {\n-                if (bi.getRGB(x, y) != color.getRGB()) {\n-                    System.err.println(\n-                            \"Incorrect pixel at \" + x + \"x\" + y + \" : \" +\n-                            Integer.toHexString(bi.getRGB(x, y)) +\n-                            \" ,expected : \" + Integer.toHexString(\n-                                    color.getRGB()));\n-                    passed = false;\n-                    return;\n-                }\n+        final BufferedImage bimg = r.createScreenCapture(w.getBounds());\n+        \/\/ vertical scan - at the right end\n+        int x = bimg.getWidth() - 1;\n+        for (int y= 0; y < bimg.getHeight() - 1; y++) {\n+            float[] actualRGB = new Color(bimg.getRGB(x, y)).getRGBColorComponents(null);\n+            if (checkColor(actualRGB, expectedRGB)) {\n+                System.out.println(\n+                        \"Vertical Scan: Incorrect pixel at \" + x + \"x\" + y + \" : \" +\n+                                Integer.toHexString(bimg.getRGB(x, y)) +\n+                                \" ,expected : \" + Integer.toHexString(\n+                                color.getRGB()));\n+                passed = false;\n+                break;\n+            }\n+        }\n+        \/\/ horizontal scan - at the bottom end\n+        int y = bimg.getHeight() - 1;\n+        for (x= 0; x < bimg.getWidth() - 1; x++) {\n+            float[] actualRGB = new Color(bimg.getRGB(x, y)).getRGBColorComponents(null);\n+            if (checkColor(actualRGB, expectedRGB)) {\n+                System.out.println(\n+                        \"Horizontal Scan: Incorrect pixel at \" + x + \"x\" + y + \" : \" +\n+                                Integer.toHexString(bimg.getRGB(x, y)) +\n+                                \" ,expected : \" + Integer.toHexString(\n+                                color.getRGB()));\n+                passed = false;\n+                break;\n@@ -146,0 +170,9 @@\n+        if (!passed) {\n+            ImageIO.write(bimg, \"png\", new File(filename));\n+        }\n+    }\n+\n+    private static boolean checkColor(float[] actualRGB, float[] expectedRGB) {\n+        return (Math.abs(actualRGB[0] - expectedRGB[0]) > TOLERANCE\n+                || Math.abs(actualRGB[1] - expectedRGB[1]) > TOLERANCE ||\n+                Math.abs(actualRGB[2] - expectedRGB[2]) > TOLERANCE);\n@@ -149,1 +182,1 @@\n-        if(robot == null) {\n+        if (robot == null) {\n@@ -152,1 +185,1 @@\n-            }catch(AWTException ae) {\n+            } catch(AWTException ae) {\n","filename":"test\/jdk\/java\/awt\/FullScreen\/FullScreenInsets\/FullScreenInsets.java","additions":67,"deletions":34,"binary":false,"changes":101,"status":"modified"}]}