{"files":[{"patch":"@@ -363,4 +363,7 @@\n-            result = new AnnotationTypeMismatchExceptionProxy(\n-                Proxy.isProxyClass(result.getClass())\n-                        ? result.getClass().getInterfaces()[0].getName()\n-                        : result.getClass().getName() + \"[\" + result + \"]\");\n+            if (result instanceof Annotation) {\n+                result = new AnnotationTypeMismatchExceptionProxy(\n+                    result.toString());\n+            } else {\n+                result = new AnnotationTypeMismatchExceptionProxy(\n+                    result.getClass().getName() + \"[\" + result + \"]\");\n+            }\n@@ -758,1 +761,1 @@\n-            \"Array with component tag: \" + tag);\n+            \"Array with component tag: \" + (tag == 0 ? \"0\" : (char) tag));\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotationParser.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-            } else if (!e.foundType().equals(AnAnnotation.class.getName())) {\n+            } else if (!e.foundType().equals(\"@\" + AnAnnotation.class.getName() + \"(\" + AnEnum.VALUE.name() + \")\")) {\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/EnumTypeMismatchTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}