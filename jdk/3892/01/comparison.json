{"files":[{"patch":"@@ -358,1 +358,3 @@\n-                memberType.getClass().getName());\n+                Proxy.isProxyClass(memberType)\n+                        ? memberType.getInterfaces()[0].getName()\n+                        : memberType.getName());\n@@ -362,1 +364,3 @@\n-                result.getClass() + \"[\" + result + \"]\");\n+                Proxy.isProxyClass(result.getClass())\n+                        ? result.getClass().getInterfaces()[0].getName()\n+                        : result.getClass().getName() + \"[\" + result + \"]\");\n@@ -465,1 +469,1 @@\n-        if (!enumType.isEnum()) {\n+        if (!enumType.isEnum() || enumType != parseSig(typeName, container)) {\n@@ -467,4 +471,1 @@\n-                typeName + \".\" + constName);\n-        } else if (enumType != parseSig(typeName, container)) {\n-            return new AnnotationTypeMismatchExceptionProxy(\n-                typeName + \".\" + constName);\n+                    typeName.substring(1, typeName.length() - 1).replace('\/', '.') + \".\" + constName);\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotationParser.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @bug 8266598\n@@ -62,1 +63,5 @@\n-            \/\/ correct\n+            if (!e.element().getName().equals(\"value\")) {\n+                throw new IllegalStateException(\"Unexpected element: \" + e.element());\n+            } else if (!e.foundType().equals(AnEnum.class.getName() + \".\" + AnEnum.VALUE.name())) {\n+                throw new IllegalStateException(\"Unexpected type: \" + e.foundType());\n+            }\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/AnnotationTypeMismatchTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @bug 8266598\n@@ -62,1 +63,5 @@\n-            \/\/ correct\n+            if (!e.element().getName().equals(\"value\")) {\n+                throw new IllegalStateException(\"Unexpected element: \" + e.element());\n+            } else if (!e.foundType().equals(AnAnnotation.class.getName())) {\n+                throw new IllegalStateException(\"Unexpected type: \" + e.foundType());\n+            }\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/EnumTypeMismatchTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}