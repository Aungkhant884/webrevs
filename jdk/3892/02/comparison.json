{"files":[{"patch":"@@ -358,1 +358,3 @@\n-                memberType.getClass().getName());\n+                Proxy.isProxyClass(memberType)\n+                        ? memberType.getInterfaces()[0].getName()\n+                        : memberType.getName());\n@@ -361,2 +363,7 @@\n-            result = new AnnotationTypeMismatchExceptionProxy(\n-                result.getClass() + \"[\" + result + \"]\");\n+            if (result instanceof Annotation) {\n+                result = new AnnotationTypeMismatchExceptionProxy(\n+                    result.toString());\n+            } else {\n+                result = new AnnotationTypeMismatchExceptionProxy(\n+                    result.getClass().getName() + \"[\" + result + \"]\");\n+            }\n@@ -465,4 +472,1 @@\n-        if (!enumType.isEnum()) {\n-            return new AnnotationTypeMismatchExceptionProxy(\n-                typeName + \".\" + constName);\n-        } else if (enumType != parseSig(typeName, container)) {\n+        if (!enumType.isEnum() || enumType != parseSig(typeName, container)) {\n@@ -470,1 +474,1 @@\n-                typeName + \".\" + constName);\n+                    typeName.substring(1, typeName.length() - 1).replace('\/', '.') + \".\" + constName);\n@@ -757,1 +761,1 @@\n-            \"Array with component tag: \" + tag);\n+            \"Array with component tag: \" + (tag == 0 ? \"0\" : (char) tag));\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotationParser.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @bug 8266598\n@@ -62,1 +63,5 @@\n-            \/\/ correct\n+            if (!e.element().getName().equals(\"value\")) {\n+                throw new IllegalStateException(\"Unexpected element: \" + e.element());\n+            } else if (!e.foundType().equals(AnEnum.class.getName() + \".\" + AnEnum.VALUE.name())) {\n+                throw new IllegalStateException(\"Unexpected type: \" + e.foundType());\n+            }\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/AnnotationTypeMismatchTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @bug 8266598\n@@ -62,1 +63,5 @@\n-            \/\/ correct\n+            if (!e.element().getName().equals(\"value\")) {\n+                throw new IllegalStateException(\"Unexpected element: \" + e.element());\n+            } else if (!e.foundType().equals(\"@\" + AnAnnotation.class.getName() + \"(\" + AnEnum.VALUE.name() + \")\")) {\n+                throw new IllegalStateException(\"Unexpected type: \" + e.foundType());\n+            }\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/EnumTypeMismatchTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}