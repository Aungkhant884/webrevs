{"files":[{"patch":"@@ -549,0 +549,7 @@\n+static int raw_encode(KRegister kreg) {\n+  assert(kreg == knoreg || kreg->is_valid(), \"sanity\");\n+  int kreg_enc = kreg->raw_encoding();\n+  assert(kreg_enc == -1 || is_valid_encoding(kreg_enc), \"sanity\");\n+  return kreg_enc;\n+}\n+\n@@ -722,0 +729,16 @@\n+void Assembler::emit_operand(KRegister kreg, Address adr,\n+                             int rip_relative_correction) {\n+  emit_operand(kreg, adr._base, adr._index, adr._scale, adr._disp,\n+               adr._rspec,\n+               rip_relative_correction);\n+}\n+\n+void Assembler::emit_operand(KRegister kreg, Register base, Register index,\n+                             Address::ScaleFactor scale, int disp,\n+                             RelocationHolder const& rspec,\n+                             int rip_relative_correction) {\n+  assert(!index->is_valid() || index != rsp, \"illegal addressing mode\");\n+  emit_operand_helper(raw_encode(kreg), raw_encode(base), raw_encode(index),\n+                      scale, disp, rspec, rip_relative_correction);\n+}\n+\n@@ -2592,1 +2615,1 @@\n-  emit_operand(as_Register(dst->encoding()), src);\n+  emit_operand(dst, src);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -784,0 +784,15 @@\n+  void emit_operand_helper(KRegister kreg,\n+                           int base_enc, int index_enc, Address::ScaleFactor scale,\n+                           int disp,\n+                           RelocationHolder const& rspec,\n+                           int rip_relative_correction = 0);\n+\n+  void emit_operand(KRegister kreg, Address adr,\n+                    int rip_relative_correction = 0);\n+\n+  void emit_operand(KRegister kreg,\n+                    Register base, Register index, Address::ScaleFactor scale,\n+                    int disp,\n+                    RelocationHolder const& rspec,\n+                    int rip_relative_correction = 0);\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}