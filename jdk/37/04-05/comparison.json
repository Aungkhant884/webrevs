{"files":[{"patch":"@@ -1646,10 +1646,10 @@\n- \/\/ for bootstrap and other parallel classloaders don't acquire lock,\n- \/\/ use placeholder token\n- \/\/ If a parallelCapable class loader calls define_instance_class instead of\n- \/\/ find_or_define_instance_class to get here, we have a timing\n- \/\/ hole with systemDictionary updates and check_constraints\n- if (!class_loader_h.is_null() && !is_parallelCapable(class_loader_h)) {\n-   assert(ObjectSynchronizer::current_thread_holds_lock(THREAD->as_Java_thread(),\n-         compute_loader_lock_object(class_loader_h, THREAD)),\n-         \"define called without lock\");\n- }\n+  \/\/ for bootstrap and other parallel classloaders don't acquire lock,\n+  \/\/ use placeholder token\n+  \/\/ If a parallelCapable class loader calls define_instance_class instead of\n+  \/\/ find_or_define_instance_class to get here, we have a timing\n+  \/\/ hole with systemDictionary updates and check_constraints\n+  if (!class_loader_h.is_null() && !is_parallelCapable(class_loader_h)) {\n+    assert(ObjectSynchronizer::current_thread_holds_lock(THREAD->as_Java_thread(),\n+           compute_loader_lock_object(class_loader_h, THREAD)),\n+           \"define called without lock\");\n+  }\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,2 @@\n+  assert(Thread::current()->is_Java_thread(),\n+         \"Expected main thread to be a JavaThread\");\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSet.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-    JNIAccessMark jni(this);\n+    JNIAccessMark jni(this, THREAD);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2074,1 +2074,1 @@\n-if (thread_id == 0) { \/\/ current thread\n+  if (thread_id == 0) { \/\/ current thread\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}