{"files":[{"patch":"@@ -421,0 +421,1 @@\n+     * Divider sizes {@code newSize < 1} are ignored.\n@@ -427,0 +428,3 @@\n+        if (newSize <= 0) {\n+            return;\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JSplitPane.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -222,0 +222,1 @@\n+     * Divider sizes {@code newSize < 1} are ignored.\n@@ -226,0 +227,3 @@\n+        if (newSize <= 0) {\n+            return;\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicSplitPaneDivider.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @key headful\n+ * @bug 4797982\n+ * @summary Verifies if negative size of JSplitPane divider can be set.\n+ * @run main JSplitPaneTestNegDivSize\n+ *\/\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import javax.swing.JFrame;\n+import javax.swing.JSplitPane;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.basic.BasicSplitPaneUI;\n+\n+public class JSplitPaneTestNegDivSize {\n+\n+    private static volatile int divSize;\n+    private static volatile int basicDivSize;\n+    private static JFrame frame;\n+    private static JSplitPane sp;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame = new JFrame();\n+            sp = new JSplitPane(JSplitPane.VERTICAL_SPLIT, true,\n+                    new JTextArea(\"I am top text area!\"),\n+                    new JTextArea(\"I am bottom text area!\"));\n+            frame.getContentPane().add(sp, BorderLayout.CENTER);\n+            sp.setDividerSize(-50);\n+            divSize = sp.getDividerSize();\n+            ((BasicSplitPaneUI)sp.getUI()).getDivider().setDividerSize(-50);\n+            basicDivSize = ((BasicSplitPaneUI)sp.getUI()).getDivider().\n+                                              getDividerSize();\n+            frame.setSize(new Dimension(400,200));\n+            frame.setVisible(true);\n+        });\n+        try {\n+            Thread.sleep(1000);\n+        } catch(Exception e){}\n+        SwingUtilities.invokeAndWait(()->frame.dispose());\n+        System.out.println(divSize);\n+        System.out.println(basicDivSize);\n+        System.out.println((Integer)UIManager.get(\"SplitPane.dividerSize\"));\n+        if (divSize < 0 || basicDivSize < 0) {\n+            throw new RuntimeException(\"Negative divider size\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSplitPane\/JSplitPaneTestNegDivSize.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}