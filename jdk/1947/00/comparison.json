{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2266,1 +2266,1 @@\n-  if (!allow_rewrites() && !IgnoreRewrites) {\n+  if (!allow_rewrites()) {\n@@ -2271,23 +2271,0 @@\n-  \/\/ This following flag is to tempoary supress rewrites. The locals that might conflict will\n-  \/\/ all be set to contain values. This is UNSAFE - however, until the rewriting has been completely\n-  \/\/ tested it is nice to have.\n-  if (IgnoreRewrites) {\n-    if (Verbose) {\n-       tty->print(\"rewrites suppressed for local no. \");\n-       for (int l = 0; l < _max_locals; l++) {\n-         if (_new_var_map[l] != l) {\n-           tty->print(\"%d \", l);\n-           vars()[l] = CellTypeState::value;\n-         }\n-       }\n-       tty->cr();\n-    }\n-\n-    \/\/ That was that...\n-    _new_var_map = NULL;\n-    _nof_refval_conflicts = 0;\n-    _conflict = false;\n-\n-    return;\n-  }\n-\n","filename":"src\/hotspot\/share\/oops\/generateOopMap.cpp","additions":2,"deletions":25,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -677,4 +677,0 @@\n-  develop(bool, IgnoreRewrites, false,                                      \\\n-          \"Suppress rewrites of bytecodes in the oopmap generator. \"        \\\n-          \"This is unsafe!\")                                                \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}