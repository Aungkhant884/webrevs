{"files":[{"patch":"@@ -66,7 +66,0 @@\n-#ifdef ASSERT\n-  \/\/ We expect no reposition failures so kill vm if we get one.\n-  \/\/\n-  bool valid_reposition_failure() {\n-    return false;\n-  }\n-#endif \/\/ ASSERT\n","filename":"src\/hotspot\/os\/aix\/osThread_aix.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -744,1 +744,1 @@\n-  OSThread* osthread = new OSThread(NULL, NULL);\n+  OSThread* osthread = new OSThread();\n@@ -858,1 +858,1 @@\n-  OSThread* osthread = new OSThread(NULL, NULL);\n+  OSThread* osthread = new OSThread();\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,8 +70,0 @@\n-#ifdef ASSERT\n-  \/\/ We expect no reposition failures so kill vm if we get one.\n-  \/\/\n-  bool valid_reposition_failure() {\n-    return false;\n-  }\n-#endif \/\/ ASSERT\n-\n","filename":"src\/hotspot\/os\/bsd\/osThread_bsd.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -592,1 +592,1 @@\n-  OSThread* osthread = new OSThread(NULL, NULL);\n+  OSThread* osthread = new OSThread();\n@@ -685,1 +685,1 @@\n-  OSThread* osthread = new OSThread(NULL, NULL);\n+  OSThread* osthread = new OSThread();\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,7 +58,1 @@\n-#ifdef ASSERT\n-  \/\/ We expect no reposition failures so kill vm if we get one.\n-  \/\/\n-  bool valid_reposition_failure() {\n-    return false;\n-  }\n-#endif \/\/ ASSERT\n+\n","filename":"src\/hotspot\/os\/linux\/osThread_linux.hpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -789,1 +789,1 @@\n-  OSThread* osthread = new OSThread(NULL, NULL);\n+  OSThread* osthread = new OSThread();\n@@ -918,1 +918,1 @@\n-  OSThread* osthread = new OSThread(NULL, NULL);\n+  OSThread* osthread = new OSThread();\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,7 +52,0 @@\n-#ifdef ASSERT\n-  \/\/ We expect no reposition failures so kill vm if we get one\n-  \/\/\n-  bool valid_reposition_failure() {\n-    return false;\n-  }\n-#endif \/\/ ASSERT\n","filename":"src\/hotspot\/os\/windows\/osThread_windows.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -571,1 +571,1 @@\n-  OSThread* osthread = new OSThread(NULL, NULL);\n+  OSThread* osthread = new OSThread();\n@@ -674,1 +674,1 @@\n-  OSThread* osthread = new OSThread(NULL, NULL);\n+  OSThread* osthread = new OSThread();\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-static int thread_id_offset = invalid_offset;\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrJavaEventWriter.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-OSThread::OSThread(OSThreadStartFunc start_proc, void* start_parm) {\n+OSThread::OSThread() {\n@@ -31,2 +31,0 @@\n-  set_start_proc(start_proc);\n-  set_start_parm(start_parm);\n","filename":"src\/hotspot\/share\/runtime\/osThread.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,2 +64,0 @@\n-  OSThreadStartFunc _start_proc;  \/\/ Thread start routine\n-  void* _start_parm;              \/\/ Thread start routine parameter\n@@ -73,1 +71,1 @@\n-  OSThread(OSThreadStartFunc start_proc, void* start_parm);\n+  OSThread();\n@@ -76,9 +74,0 @@\n-  \/\/ Accessors\n-  OSThreadStartFunc start_proc() const              { return _start_proc; }\n-  void set_start_proc(OSThreadStartFunc start_proc) { _start_proc = start_proc; }\n-  void* start_parm() const                          { return _start_parm; }\n-  void set_start_parm(void* start_parm)             { _start_parm = start_parm; }\n-  \/\/ This is specialized on Windows.\n-#ifndef _WINDOWS\n-  void set_interrupted(bool z)                      { \/* nothing to do *\/ }\n-#endif\n@@ -93,2 +82,0 @@\n-  static ByteSize thread_id_offset()              { return byte_offset_of(OSThread, _thread_id); }\n-  static size_t thread_id_size()                  { return sizeof(thread_id_t); }\n","filename":"src\/hotspot\/share\/runtime\/osThread.hpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1114,1 +1114,1 @@\n-  osthread()->set_interrupted(true);\n+  WINDOWS_ONLY(osthread()->set_interrupted(true);)\n@@ -1159,1 +1159,1 @@\n-    osthread()->set_interrupted(false);\n+    WINDOWS_ONLY(osthread()->set_interrupted(false);)\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}