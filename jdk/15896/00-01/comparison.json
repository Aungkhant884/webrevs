{"files":[{"patch":"@@ -65,1 +65,1 @@\n- * \\tparam T is the class of the elements in the list.  Must be a possibly\n+ * * T is the class of the elements in the list.  Must be a possibly\n@@ -68,1 +68,1 @@\n- * \\tparam entry_member is a pointer to class member referring to the\n+ * * entry_member is a pointer to class member referring to the\n@@ -71,1 +71,1 @@\n- * \\tparam has_size determines whether the list has a size()\n+ * * has_size determines whether the list has a size()\n@@ -76,1 +76,1 @@\n- * \\tparam Base is the base class for the list.  This is typically\n+ * * Base is the base class for the list.  This is typically\n@@ -89,5 +89,5 @@\n- * Some operations that remove elements from a list take a\n- * <code>disposer<\/code> argument.  This is a function or function object that\n- * will be called with one argument, a const reference to a removed element.\n- * This function should \"dispose\" of the argument object when called, such as\n- * by deleting the object.  The result of the call is ignored.\n+ * Some operations that remove elements from a list take a disposer argument.\n+ * This is a function or function object that will be called with one\n+ * argument, a const reference to a removed element.  This function should\n+ * \"dispose\" of the argument object when called, such as by deleting the\n+ * object.  The result of the call is ignored.\n@@ -122,1 +122,1 @@\n- *   using MyList = IntrusiveList<MyClass, &_entry>;\n+ *   using MyList = IntrusiveList<MyClass, &MyClass::_entry>;\n","filename":"src\/hotspot\/share\/utilities\/intrusiveList.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}