{"files":[{"patch":"@@ -2660,6 +2660,7 @@\n-  void umov(Register Rd, FloatRegister Vn, SIMD_RegVariant T, int idx) {\n-    starti;\n-    assert(T != Q, \"invalid register variant\");\n-    f(0, 31), f(T == D ? 1 : 0, 30), f(0b001110000, 29, 21);\n-    f(((idx << 1) | 1) << (int)T, 20, 16), f(0b001111, 15, 10);\n-    rf(Vn, 5), rf(Rd, 0);\n+#define INSN(NAME, cond, op1, op2)                                                      \\\n+  void NAME(Register Rd, FloatRegister Vn, SIMD_RegVariant T, int idx) {                \\\n+    starti;                                                                             \\\n+    assert(cond, \"invalid register variant\");                                           \\\n+    f(0, 31), f(op1, 30), f(0b001110000, 29, 21);                                       \\\n+    f(((idx << 1) | 1) << (int)T, 20, 16), f(op2, 15, 10);                              \\\n+    rf(Vn, 5), rf(Rd, 0);                                                               \\\n@@ -2668,7 +2669,4 @@\n-  void smov(Register Rd, FloatRegister Vn, SIMD_RegVariant T, int idx) {\n-    starti;\n-    assert(T < D, \"invalid register variant\");\n-    f(0, 31), f(1, 30), f(0b001110000, 29, 21);\n-    f(((idx << 1) | 1) << (int)T, 20, 16), f(0b001011, 15, 10);\n-    rf(Vn, 5), rf(Rd, 0);\n-  }\n+  INSN(umov, (T != Q), (T == D ? 1 : 0), 0b001111);\n+  INSN(smov, (T < D),  1,                0b001011);\n+\n+#undef INSN\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"}]}