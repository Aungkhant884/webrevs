[{"commit":{"message":"Use macro INSN\n\nUse macro INSN to define smov and umov so that it would be easy for\nusers to figure out the difference between these two instructions."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"}],"sha":"d562ec15b6e099f2a352c5803144303b0c770caa"},{"commit":{"message":"Code style: add spaces between operands\n\nadd spaces between operands"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"b624a6b4a86875428daf539a40e7b16e3f621ff4"},{"commit":{"message":"Merge branch 'master' into smov\n\nTemporally keep file test\/hotspot\/gtest\/aarch64\/asmtest.out.h same with\nbranch mastger."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"ba69f5001066683bc9152750fb4d6dbfe9d94cf8"},{"commit":{"message":"Update the copyright notice to 2021\n\nUpdate the copyright notice to 2021.\n\nChange-Id: I7fe485e768ccac45a4861cd3c061aedc13fef579\nCustomizedGitHooks: yes"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"}],"sha":"3f84aaa5afce3bc8ff40c8cfa146f303908c0e40"},{"commit":{"message":"8257137: Revise smov and umov in aarch64 assembler.\n\n1. Both smov and umov lack of checking the register type validity.\n   Register type must be 'B', 'H' or 'S' for smov [1].\n   Register type can NOT be 'Q' for umov [2].\n   Such checks are added.\n\n2. smov and umov have different explanations on 'Q' field, i.e. bit 30\nof the insturction, but current assembler implementation mixed it up.\n   For umov, 'Q' field can only be set when register type 'D' is given\n   [2]. However, this field of smov must be set for register type 'S'\n   [1], that is, 'Q' field can be optional for register type 'B' or 'H'.\n\n   Current implementation only took the umov scenario into account. As a\n   result, runtime error ILL_ILLOPN would occur if 'smov(Register,\n\t\t   FloatRegister, S, index)' is used.\n\n   We put them into two separate functions and make 'Q' field always set\n   for smov. That means 'SMOVX' (64-bit register variant) is generated\n   for all cases since it's compatible with our current usages of 'SMOVW'.\n   Existing usages of smov have been double checked and this patch does\n   not affect them.\n\n3. Smoke tests are also added.\n\n[1]. https:\/\/developer.arm.com\/docs\/ddi0602\/f\/simd-and-floating-point-instructions-alphabetic-order\/smov-signed-move-vector-element-to-general-purpose-register\n[2]. https:\/\/developer.arm.com\/docs\/ddi0602\/f\/simd-and-floating-point-instructions-alphabetic-order\/umov-unsigned-move-vector-element-to-general-purpose-register"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"a40c0d882b782ff198f043dcefb97ded4d0eac77"}]