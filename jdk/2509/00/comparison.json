{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,2 +119,2 @@\n-        if (System.getProperty(\"test.jdk\") != null) {\n-            terminal = new TestTerminal(nonBlockingInput, cmdout);\n+        if (cmdin != System.in) {\n+            terminal = new NonSystemInTerminal(nonBlockingInput, cmdout);\n@@ -1255,1 +1255,1 @@\n-    private static final class TestTerminal extends LineDisciplineTerminal {\n+    private static final class NonSystemInTerminal extends LineDisciplineTerminal {\n@@ -1261,2 +1261,2 @@\n-        public TestTerminal(InputStream input, OutputStream output) throws Exception {\n-            super(\"test\", \"ansi\", output, Charset.forName(\"UTF-8\"));\n+        public NonSystemInTerminal(InputStream input, OutputStream output) throws Exception {\n+            super(\"non-system-in\", \"ansi\", output, Charset.forName(\"UTF-8\"));\n@@ -1270,1 +1270,1 @@\n-                if (hp != null && !hp.isEmpty()) {\n+                if (hp != null && !hp.isEmpty() && System.getProperty(\"test.jdk\") != null) {\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8247403\n+ * @summary Verify JavaShellToolBuilder uses provided inputs\n+ * @modules jdk.jshell\n+ * @build KullaTesting TestingInputStream\n+ * @run testng CustomInputToolBuilder\n+ *\/\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.io.PrintStream;\n+import jdk.jshell.tool.JavaShellToolBuilder;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertTrue;\n+\n+@Test\n+public class CustomInputToolBuilder extends KullaTesting {\n+\n+    private static final String TEST_JDK = \"test.jdk\";\n+\n+    public void checkCustomInput() throws Exception {\n+        String testJdk = System.getProperty(TEST_JDK);\n+        try {\n+            System.clearProperty(TEST_JDK);\n+            byte[] cmdInputData = \"System.out.println(\\\"read: \\\" + System.in.read());\\n\/exit\\n\".getBytes();\n+            InputStream cmdInput = new ByteArrayInputStream(cmdInputData);\n+            InputStream userInput = new ByteArrayInputStream(\"a\\n\".getBytes());\n+            ByteArrayOutputStream out = new ByteArrayOutputStream();\n+            PrintStream printOut = new PrintStream(out);\n+\n+            JavaShellToolBuilder.builder()\n+                    .in(cmdInput, userInput)\n+                    .out(printOut, new PrintStream(new ByteArrayOutputStream()), printOut)\n+                    .promptCapture(true)\n+                    .start(\"--no-startup\");\n+\n+            String expected = \"read: 97\";\n+            String actual = new String(out.toByteArray());\n+\n+            assertTrue(actual.contains(expected),\n+                        \"actual:\\n\" + actual + \"\\n, expected:\\n\" + expected);\n+        } finally {\n+            System.setProperty(TEST_JDK, testJdk);\n+        }\n+    }\n+\n+}\n+\n","filename":"test\/langtools\/jdk\/jshell\/CustomInputToolBuilder.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"}]}