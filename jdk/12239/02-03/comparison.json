{"files":[{"patch":"@@ -516,1 +516,2 @@\n-    private void redirectOutputToLogFile(String msg, ProcessBuilder pb, String fileNameBase) {\n+    \/\/ Returns comma-separated file names for stdout and stderr.\n+    private String redirectOutputToLogFile(String msg, ProcessBuilder pb, String fileNameBase) {\n@@ -518,1 +519,1 @@\n-            return;\n+            return \"\";\n@@ -529,1 +530,27 @@\n-   }\n+\n+        return stdoutFileName + \",\" + stderrFileName;\n+    }\n+\n+    private void printLogfileContent(String logFileNames) {\n+        if (logFileNames.isEmpty()) {\n+            return;\n+        }\n+\n+        log(\"------------- stdout: \");\n+        try {\n+            Files.lines(Path.of(logFileNames.split(\",\")[0]))\n+                .forEach(line -> log(line));\n+        } catch (IOException ie) {\n+            log(\"Exception while reading stdout file: \" + ie);\n+        }\n+        log(\"------------- \");\n+\n+        log(\"------------- stderr: \");\n+        try {\n+            Files.lines(Path.of(logFileNames.split(\",\")[1]))\n+                .forEach(line -> log(line));\n+        } catch (IOException ie) {\n+            log(\"Exception while reading stderr file: \" + ie);\n+        }\n+        log(\"------------- \");\n+    }\n@@ -534,1 +561,2 @@\n-        redirectOutputToLogFile(\"checkDockerSupport(): <container> ps\", pb, \"container-ps\");\n+        String logFileNames = redirectOutputToLogFile(\"checkDockerSupport(): <container> ps\",\n+                                                      pb, \"container-ps\");\n@@ -540,0 +568,1 @@\n+        printLogfileContent(logFileNames);\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":33,"deletions":4,"binary":false,"changes":37,"status":"modified"}]}