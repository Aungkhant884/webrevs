{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -224,2 +224,1 @@\n-                    if (sym2.type.hasTag(TypeTag.METHOD) &&\n-                            utils.isSimpleOverride((MethodSymbol)sym2)) {\n+                    if (utils.isSimpleOverride((MethodSymbol)sym2)) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/WorkArounds.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8157000 8192850 8182765 8223607 8261976\n+ * @bug 8157000 8192850 8182765 8223607 8261976 8281376\n@@ -572,0 +572,89 @@\n+\n+    @Test\n+    public void testPolymorphicDetail() {\n+        javadoc(\"-d\", \"out-polymorphic-detail\",\n+                \"-sourcepath\", testSrc,\n+                \"--override-methods=detail\",\n+                \"pkg8\");\n+\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"P.html#m1()\">m1<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"P.html\" title=\"class in pkg8\">P<\/a><\/code><\/dd>\"\"\");\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"P.html#m2()\">m2<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"P.html\" title=\"class in pkg8\">P<\/a><\/code><\/dd>\"\"\");\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"P.html#m3()\">m3<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"P.html\" title=\"class in pkg8\">P<\/a><\/code><\/dd>\"\"\");\n+    }\n+\n+    @Test \/\/ results should be the same as that of \"detail\"\n+    public void testPolymorphicDefault() {\n+        javadoc(\"-d\", \"out-polymorphic-default\",\n+                \"-sourcepath\", testSrc,\n+                \"pkg8\");\n+\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"P.html#m1()\">m1<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"P.html\" title=\"class in pkg8\">P<\/a><\/code><\/dd>\"\"\");\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"P.html#m2()\">m2<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"P.html\" title=\"class in pkg8\">P<\/a><\/code><\/dd>\"\"\");\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"P.html#m3()\">m3<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"P.html\" title=\"class in pkg8\">P<\/a><\/code><\/dd>\"\"\");\n+    }\n+\n+    @Test\n+    public void testPolymorphicSummary() {\n+        javadoc(\"-d\", \"out-polymorphic-summary\",\n+                \"-sourcepath\", testSrc,\n+                \"--override-methods=summary\",\n+                \"pkg8\");\n+\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"GP.html#m1()\">m1<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"GP.html\" title=\"class in pkg8\">GP<\/a><\/code><\/dd>\"\"\");\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"GP.html#m2()\">m2<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"GP.html\" title=\"class in pkg8\">GP<\/a><\/code><\/dd>\"\"\");\n+\n+        checkOutput(\"pkg8\/C.html\", true,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"GP.html#m3()\">m3<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"GP.html\" title=\"class in pkg8\">GP<\/a><\/code><\/dd>\"\"\");\n+\n+        checkOutput(\"pkg8\/C.html\", false,\n+                \"\"\"\n+                    <dt>Overrides:<\/dt>\n+                    <dd><code><a href=\"GP.html#m1()\">m1<\/a><\/code>&nbsp;in class&nbsp;\\\n+                    <code><a href=\"P.html\" title=\"class in pkg8\">P<\/a><\/code><\/dd>\"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/TestOverrideMethods.java","additions":91,"deletions":2,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg8;\n+\n+public class C extends P {\n+\n+    \/**\n+     * Child m1().\n+     *\n+     * @param <T> Child m1's type\n+     *\/\n+    @Override\n+    public <T> void m1() {}\n+\n+    \/**\n+     * Child m2().\n+     *\/\n+    @Override\n+    public void m2() {}\n+\n+    \/**\n+     * Child m3().\n+     *\/\n+    @Override\n+    public void m3() {}\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/pkg8\/C.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg8;\n+\n+public class GP {\n+\n+    \/**\n+     * Grandparent m1().\n+     *\n+     * @param <T> Grandparent m1's type\n+     *\/\n+    public <T> void m1() {}\n+\n+    \/**\n+     * Grandparent m2().\n+     *\n+     * @param <T> Grandparent m2's type\n+     *\/\n+    public <T> void m2() {}\n+\n+    \/**\n+     * Grandparent m3().\n+     *\n+     * @param <T> Grandparent m3's type\n+     *\/\n+    public <T> void m3() {}\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/pkg8\/GP.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg8;\n+\n+public class P extends GP {\n+\n+    \/\/ note that while m1() and m2() are parameterized, m3() is not\n+\n+    @Override\n+    public <T> void m1() {}\n+\n+    @Override\n+    public <T> void m2() {}\n+\n+    @Override\n+    public void m3() {}\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/pkg8\/P.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"}]}