{"files":[{"patch":"@@ -62,1 +62,1 @@\n-  nonstatic_field(OffsetTableContigSpace,      _offsets,               BlockOffsetArray)\n+  nonstatic_field(TenuredSpace,                _offsets,               BlockOffsetArray)\n@@ -69,2 +69,1 @@\n-  declare_type(TenuredSpace,                 OffsetTableContigSpace)          \\\n-  declare_type(OffsetTableContigSpace,       ContiguousSpace)                 \\\n+  declare_type(TenuredSpace,                 ContiguousSpace)                 \\\n@@ -79,2 +78,1 @@\n-  declare_toplevel_type(BlockOffsetSharedArray*)                              \\\n-  declare_toplevel_type(OffsetTableContigSpace*)\n+  declare_toplevel_type(BlockOffsetSharedArray*)\n","filename":"src\/hotspot\/share\/gc\/serial\/vmStructs_serial.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -293,1 +293,1 @@\n-void OffsetTableContigSpace::clear(bool mangle_space) {\n+void TenuredSpace::clear(bool mangle_space) {\n@@ -298,1 +298,1 @@\n-void OffsetTableContigSpace::set_bottom(HeapWord* new_bottom) {\n+void TenuredSpace::set_bottom(HeapWord* new_bottom) {\n@@ -303,1 +303,1 @@\n-void OffsetTableContigSpace::set_end(HeapWord* new_end) {\n+void TenuredSpace::set_end(HeapWord* new_end) {\n@@ -599,1 +599,1 @@\n-void OffsetTableContigSpace::print_on(outputStream* st) const {\n+void TenuredSpace::print_on(outputStream* st) const {\n@@ -742,1 +742,1 @@\n-void OffsetTableContigSpace::initialize_threshold() {\n+void TenuredSpace::initialize_threshold() {\n@@ -746,1 +746,1 @@\n-void OffsetTableContigSpace::alloc_block(HeapWord* start, HeapWord* end) {\n+void TenuredSpace::alloc_block(HeapWord* start, HeapWord* end) {\n@@ -750,2 +750,2 @@\n-OffsetTableContigSpace::OffsetTableContigSpace(BlockOffsetSharedArray* sharedOffsetArray,\n-                                               MemRegion mr) :\n+TenuredSpace::TenuredSpace(BlockOffsetSharedArray* sharedOffsetArray,\n+                           MemRegion mr) :\n@@ -753,1 +753,1 @@\n-  _par_alloc_lock(Mutex::safepoint, \"OffsetTableContigSpaceParAlloc_lock\", true)\n+  _par_alloc_lock(Mutex::safepoint, \"TenuredSpaceParAlloc_lock\", true)\n@@ -762,1 +762,1 @@\n-void OffsetTableContigSpace::verify() const {\n+void TenuredSpace::verify() const {\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -562,4 +562,0 @@\n-\/\/ A ContigSpace that Supports an efficient \"block_start\" operation via\n-\/\/ a BlockOffsetArray (whose BlockOffsetSharedArray may be shared with\n-\/\/ other spaces.)  This is the abstract base class for old generation\n-\/\/ (tenured) spaces.\n@@ -568,1 +564,6 @@\n-class OffsetTableContigSpace: public ContiguousSpace {\n+\n+\/\/ Class TenuredSpace is used by TenuredGeneration; it supports an efficient\n+\/\/ \"block_start\" operation via a BlockOffsetArray (whose BlockOffsetSharedArray\n+\/\/ may be shared with other spaces.)\n+\n+class TenuredSpace: public ContiguousSpace {\n@@ -574,0 +575,2 @@\n+  \/\/ Mark sweep support\n+  size_t allowed_dead_ratio() const override;\n@@ -576,2 +579,2 @@\n-  OffsetTableContigSpace(BlockOffsetSharedArray* sharedOffsetArray,\n-                         MemRegion mr);\n+  TenuredSpace(BlockOffsetSharedArray* sharedOffsetArray,\n+               MemRegion mr);\n@@ -599,15 +602,0 @@\n-\n-\n-\/\/ Class TenuredSpace is used by TenuredGeneration\n-\n-class TenuredSpace: public OffsetTableContigSpace {\n-  friend class VMStructs;\n- protected:\n-  \/\/ Mark sweep support\n-  size_t allowed_dead_ratio() const override;\n- public:\n-  \/\/ Constructor\n-  TenuredSpace(BlockOffsetSharedArray* sharedOffsetArray,\n-               MemRegion mr) :\n-    OffsetTableContigSpace(sharedOffsetArray, mr) {}\n-};\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":10,"deletions":22,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-inline HeapWord* OffsetTableContigSpace::allocate(size_t size) {\n+inline HeapWord* TenuredSpace::allocate(size_t size) {\n@@ -58,1 +58,1 @@\n-inline HeapWord* OffsetTableContigSpace::par_allocate(size_t size) {\n+inline HeapWord* TenuredSpace::par_allocate(size_t size) {\n@@ -76,1 +76,1 @@\n-OffsetTableContigSpace::block_start_const(const void* p) const {\n+TenuredSpace::block_start_const(const void* p) const {\n@@ -159,1 +159,1 @@\n-  \/\/ space subtypes.  For example, OffsetTableContigSpace's that were\n+  \/\/ space subtypes.  For example, TenuredSpace's that were\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.gc.shared;\n-\n-import sun.jvm.hotspot.debugger.*;\n-\n-\/** No additional functionality for now *\/\n-\n-public class OffsetTableContigSpace extends ContiguousSpace {\n-  public OffsetTableContigSpace(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/OffsetTableContigSpace.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -31,1 +31,1 @@\n-public class TenuredSpace extends OffsetTableContigSpace {\n+public class TenuredSpace extends ContiguousSpace {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/TenuredSpace.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}