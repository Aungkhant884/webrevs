{"files":[{"patch":"@@ -98,23 +98,0 @@\n-\/\/ Checks for precise marking of oops as newgen.\n-class CheckForPreciseMarks : public BasicOopIterateClosure {\n- private:\n-  PSYoungGen*  _young_gen;\n-  PSCardTable* _card_table;\n-\n- protected:\n-  template <class T> void do_oop_work(T* p) {\n-    oop obj = RawAccess<IS_NOT_NULL>::oop_load(p);\n-    if (_young_gen->is_in_reserved(obj)) {\n-      assert(_card_table->addr_is_marked_precise(p), \"Found unmarked precise oop\");\n-      _card_table->set_card_newgen(p);\n-    }\n-  }\n-\n- public:\n-  CheckForPreciseMarks(PSYoungGen* young_gen, PSCardTable* card_table) :\n-    _young_gen(young_gen), _card_table(card_table) { }\n-\n-  virtual void do_oop(oop* p)       { CheckForPreciseMarks::do_oop_work(p); }\n-  virtual void do_oop(narrowOop* p) { CheckForPreciseMarks::do_oop_work(p); }\n-};\n-\n@@ -413,23 +390,0 @@\n-\/\/ This should be called immediately after a scavenge, before mutators resume.\n-void PSCardTable::verify_all_young_refs_precise() {\n-  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n-  PSOldGen* old_gen = heap->old_gen();\n-\n-  CheckForPreciseMarks check(heap->young_gen(), this);\n-\n-  old_gen->oop_iterate(&check);\n-\n-  verify_all_young_refs_precise_helper(old_gen->object_space()->used_region());\n-}\n-\n-void PSCardTable::verify_all_young_refs_precise_helper(MemRegion mr) {\n-  CardValue* bot = byte_for(mr.start());\n-  CardValue* top = byte_for(mr.end());\n-  while (bot <= top) {\n-    assert(*bot == clean_card || *bot == verify_card, \"Found unwanted or unknown card mark\");\n-    if (*bot == verify_card)\n-      *bot = youngergen_card;\n-    bot++;\n-  }\n-}\n-\n@@ -454,22 +408,0 @@\n-\/\/ Also includes verify_card\n-bool PSCardTable::addr_is_marked_precise(void *addr) {\n-  CardValue* p = byte_for(addr);\n-  CardValue val = *p;\n-\n-  if (card_is_newgen(val))\n-    return true;\n-\n-  if (card_is_verify(val))\n-    return true;\n-\n-  if (card_is_clean(val))\n-    return false;\n-\n-  if (card_is_dirty(val))\n-    return false;\n-\n-  assert(false, \"Found unhandled card mark type\");\n-\n-  return false;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.cpp","additions":0,"deletions":68,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -66,2 +66,0 @@\n-  void verify_all_young_refs_precise_helper(MemRegion mr);\n-\n@@ -96,1 +94,0 @@\n-  bool addr_is_marked_precise(void *addr);\n@@ -123,1 +120,0 @@\n-  void verify_all_young_refs_precise();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -646,1 +646,0 @@\n-    \/\/ Verify all old -> young cards are now precise\n@@ -648,3 +647,0 @@\n-      \/\/ Precise verification will give false positives. Until this is fixed,\n-      \/\/ use imprecise verification.\n-      \/\/ heap->card_table()->verify_all_young_refs_precise();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}