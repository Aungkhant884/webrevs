{"files":[{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/\n+\/\/ SunJSSE does not support dynamic system properties, no way to re-use\n+\/\/ system properties in samevm\/agentvm mode.\n+\/\/\n+\n+\/*\n+ * @test\n+ * @bug 8293489\n+ * @summary Accept CAs with BasicConstraints without pathLenConstraint\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+\n+import java.io.File;\n+import java.security.*;\n+import java.security.cert.*;\n+\n+import javax.net.ssl.*;\n+\n+public class BasicConstraints12 {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        genkey(\"-dname CN=TrustAnchor -alias anchor\");\n+        genkey(\"-dname CN=IntermediateCA -alias ca -ext bc:critical -signer anchor\");\n+        genkey(\"-dname CN=Server -alias server -signer ca\");\n+\n+        KeyStore full = KeyStore.getInstance(new File(\"ks\"), \"changeit\".toCharArray());\n+        X509Certificate anchor = (X509Certificate) full.getCertificate(\"anchor\");\n+        X509Certificate ca = (X509Certificate) full.getCertificate(\"ca\");\n+        X509Certificate server = (X509Certificate) full.getCertificate(\"server\");\n+\n+        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n+        ks.load(null, null);\n+        ks.setCertificateEntry(\"anchor\", anchor);\n+\n+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n+        tmf.init(ks);\n+\n+        X509TrustManager tm = (X509TrustManager)tmf.getTrustManagers()[0];\n+\n+        X509Certificate[] chain = new X509Certificate[] {server, ca, anchor};\n+\n+        System.out.println(\"Calling trustmanager...\");\n+\n+        tm.checkServerTrusted(chain, \"RSA\");\n+        System.out.println(\"Test ok\");\n+    }\n+\n+    static void genkey(String s) throws Exception {\n+        SecurityTools.keytool(\"-storepass changeit -keystore ks -genkeypair -keyalg RSA \" + s)\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/BasicConstraints12.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"}]}