{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8022536\n+ * @bug 8008535 8022536\n@@ -51,2 +51,0 @@\n-            To test 8022536, if a remote printer is the system default,\n-            it should show in the dialog as the selected printer.\n@@ -57,0 +55,2 @@\n+            To test 8022536, if a remote printer is the system default,\n+            it should show in the dialog as the selected printer.\n@@ -83,1 +83,2 @@\n-            PassFailJFrame.positionTestFrame(frame, PassFailJFrame.POSITION.HORIZONTAL);\n+            PassFailJFrame.positionTestFrame(frame,\n+                    PassFailJFrame.Position.HORIZONTAL);\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintLatinCJKTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-    private static volatile boolean failed = false;\n-    private static volatile boolean timeout = false;\n+    private static volatile boolean failed;\n+    private static volatile boolean timeout;\n@@ -58,1 +58,1 @@\n-    public enum POSITION {HORIZONTAL, VERTICAL}\n+    public enum Position {HORIZONTAL, VERTICAL}\n@@ -102,1 +102,1 @@\n-        int testTimeout = (int) TimeUnit.MINUTES.toMillis(timeoutInMinutes);\n+        long testTimeout = TimeUnit.MINUTES.toMillis(timeoutInMinutes);\n@@ -109,1 +109,1 @@\n-            int leftTime = testTimeout - (int) (System.currentTimeMillis() - startTime);\n+            long leftTime = testTimeout - (System.currentTimeMillis() - startTime);\n@@ -112,2 +112,2 @@\n-                testFailedReason = \"Failure Reason:\\n Timeout \" +\n-                        \"User did not perform testing.\";\n+                testFailedReason = \"Failure Reason:\\n\"\n+                        + \"Timeout User did not perform testing.\";\n@@ -143,2 +143,2 @@\n-                testFailedReason = \"Failure Reason:\\n User closed the \" +\n-                        \"instruction Frame\";\n+                testFailedReason = \"Failure Reason:\\n\"\n+                        + \"User closed the instruction Frame\";\n@@ -162,3 +162,3 @@\n-        long hours = millis \/ 3600000;\n-        long minutes = (millis - hours * 3600000) \/ 60000;\n-        long seconds = (millis - hours * 3600000 - minutes * 60000) \/ 1000;\n+        long hours = millis \/ 3_600_000;\n+        long minutes = (millis - hours * 3_600_000) \/ 60_000;\n+        long seconds = (millis - hours * 3_600_000 - minutes * 60_000) \/ 1_000;\n@@ -174,1 +174,1 @@\n-     * @throws InterruptedException      exception thrown for invokeAndWait\n+     * @throws InterruptedException      if the thread is interrupted\n@@ -178,1 +178,0 @@\n-        latch.await();\n@@ -180,2 +179,4 @@\n-            disposeFrames();\n-        } else invokeAndWait(PassFailJFrame::disposeFrames);\n+            throw new IllegalStateException(\"awaitAndCheck() should not be called on EDT\");\n+        }\n+        latch.await();\n+        invokeAndWait(PassFailJFrame::disposeFrames);\n@@ -198,1 +199,1 @@\n-    private static void disposeFrames() {\n+    private static synchronized void disposeFrames() {\n@@ -208,1 +209,1 @@\n-    public static void getFailureReason() {\n+    private static void getFailureReason() {\n@@ -227,9 +228,0 @@\n-        dialog.addWindowListener(new WindowAdapter() {\n-            @Override\n-            public void windowClosing(WindowEvent e) {\n-                super.windowClosing(e);\n-                testFailedReason = \"User closed the \" +\n-                        \"dialog\";\n-            }\n-        });\n-\n@@ -257,1 +249,1 @@\n-    public static void positionTestFrame(Frame testFrame, POSITION position) {\n+    public static void positionTestFrame(Frame testFrame, Position position) {\n@@ -259,1 +251,1 @@\n-        if (position.equals(POSITION.HORIZONTAL)) {\n+        if (position.equals(Position.HORIZONTAL)) {\n@@ -264,1 +256,1 @@\n-        } else if (position.equals(POSITION.VERTICAL)) {\n+        } else if (position.equals(Position.VERTICAL)) {\n@@ -280,1 +272,1 @@\n-    public synchronized static void addTestFrame(Frame testFrame) {\n+    public static synchronized void addTestFrame(Frame testFrame) {\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":23,"deletions":31,"binary":false,"changes":54,"status":"modified"}]}