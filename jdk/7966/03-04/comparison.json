{"files":[{"patch":"@@ -28,1 +28,1 @@\n- * @build Util\n+ * @build PassFailJFrame\n@@ -42,1 +42,2 @@\n-import javax.swing.SwingUtilities;\n+\n+import static javax.swing.SwingUtilities.invokeAndWait;\n@@ -46,8 +47,10 @@\n-    static PrintLatinCJKTest testInstance = new PrintLatinCJKTest();\n-    static String info =\n-       \"To test 8022536, if a remote printer is the system default, \\n\"+\n-       \"it should show in the dialog as the selected printer.\\n\"+\n-       \"You need a printer for this test. If you have none, let \\n\"+\n-       \"the test pass. If there is a printer, press Print, send \\n\"+\n-       \"the output to the printer, and examine it. It should have \\n\"+\n-       \"text looking like this : \\u4e00\\u4e01\\u4e02\\u4e03\\u4e04English.\";\n+    private static PrintLatinCJKTest testInstance = new PrintLatinCJKTest();\n+    private static JFrame frame;\n+    private static String info = \"\"\"\n+            To test 8022536, if a remote printer is the system default,\n+            it should show in the dialog as the selected printer.\n+            You need a printer for this test. If you have none, let\n+            the test pass. If there is a printer, press Print, send\n+            the output to the printer, and examine it. It should have\n+            text looking like this : \\u4e00\\u4e01\\u4e02\\u4e03\\u4e04English\n+            \"\"\";\n@@ -56,2 +59,2 @@\n-        SwingUtilities.invokeAndWait( () -> {\n-            JFrame f = new JFrame(\"Test Frame\");\n+        invokeAndWait( () -> {\n+            frame = new JFrame(\"Test Frame\");\n@@ -70,4 +73,12 @@\n-            f.add(\"South\", b);\n-            f.pack();\n-            f.setLocationRelativeTo(null);\n-            f.setVisible(true);\n+            frame.add(\"South\", b);\n+            frame.pack();\n+            frame.setLocationRelativeTo(null);\n+            frame.setVisible(true);\n+        });\n+    }\n+\n+    private static void disposeTestFrame() throws InterruptedException, InvocationTargetException {\n+        invokeAndWait(() -> {\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n@@ -94,0 +105,1 @@\n+        PrintLatinCJKTest.disposeTestFrame();\n@@ -97,0 +109,1 @@\n+\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintLatinCJKTest.java","additions":29,"deletions":16,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -39,5 +39,5 @@\n-public class PassFailJFrame extends JFrame {\n-    private final CountDownLatch latch = new CountDownLatch(1);\n-    private boolean failed = false;\n-    private String testFailedReason;\n-    private JTextArea instructionsText;\n+public class PassFailJFrame {\n+    private final static CountDownLatch latch = new CountDownLatch(1);\n+    private static boolean failed = false;\n+    private static String testFailedReason;\n+    private static JTextArea instructionsText;\n@@ -47,0 +47,1 @@\n+    private static JFrame frame;\n@@ -54,1 +55,1 @@\n-     * specified in the JDailog JTextArea.\n+     * specified in the JDialog JTextArea.\n@@ -71,1 +72,0 @@\n-        super(title);\n@@ -76,16 +76,8 @@\n-        invokeAndWait(() -> {\n-            setLayout(new BorderLayout());\n-            instructionsText = new JTextArea(instructions, maxRowLength, maxStringLength);\n-            instructionsText.setEditable(false);\n-            instructionsText.setFocusable(false);\n-            add(instructionsText, BorderLayout.NORTH);\n-\n-            JButton btnPass = new JButton(\"Pass\");\n-            btnPass.addActionListener((e) -> latch.countDown());\n-\n-            JButton btnFail = new JButton(\"Fail\");\n-            btnFail.addActionListener((e) -> getFailureReason());\n-\n-            JPanel buttonsPanel = new JPanel();\n-            buttonsPanel.add(btnPass);\n-            buttonsPanel.add(btnFail);\n+        if (isEventDispatchThread()) {\n+            createUI(title, instructions, maxRowLength, maxStringLength, timeoutMinutes);\n+        } else {\n+            invokeAndWait(() -> {\n+                createUI(title, instructions, maxRowLength, maxStringLength, timeoutMinutes);\n+            });\n+        }\n+    }\n@@ -93,5 +85,24 @@\n-            add(buttonsPanel, BorderLayout.SOUTH);\n-            pack();\n-            setLocation(10, 10);\n-            setVisible(true);\n-        });\n+    private static void createUI(String title, String instructions,\n+                                 int maxRowLength, int maxStringLength,\n+                                 int timeoutMinutes) {\n+        frame = new JFrame(title);\n+        frame.setLayout(new BorderLayout());\n+        instructionsText = new JTextArea(instructions, maxRowLength, maxStringLength);\n+        instructionsText.setEditable(false);\n+        instructionsText.setFocusable(false);\n+        frame.add(instructionsText, BorderLayout.NORTH);\n+\n+        JButton btnPass = new JButton(\"Pass\");\n+        btnPass.addActionListener((e) -> latch.countDown());\n+\n+        JButton btnFail = new JButton(\"Fail\");\n+        btnFail.addActionListener((e) -> getFailureReason());\n+\n+        JPanel buttonsPanel = new JPanel();\n+        buttonsPanel.add(btnPass);\n+        buttonsPanel.add(btnFail);\n+\n+        frame.add(buttonsPanel, BorderLayout.SOUTH);\n+        frame.pack();\n+        frame.setLocation(10, 10);\n+        frame.setVisible(true);\n@@ -112,2 +123,2 @@\n-            dispose();\n-        } else invokeAndWait(() -> dispose());\n+            disposePassFailJFrame();\n+        } else invokeAndWait(() -> disposePassFailJFrame());\n@@ -123,1 +134,7 @@\n-    public void getFailureReason() {\n+    public static void disposePassFailJFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+        }\n+    }\n+\n+    public static void getFailureReason() {\n@@ -149,0 +166,1 @@\n+\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":49,"deletions":31,"binary":false,"changes":80,"status":"modified"}]}