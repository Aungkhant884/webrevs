{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -218,1 +218,4 @@\n-    _code1 = BufferBlob::create(\"StubRoutines (1)\", code_size1);\n+    \/\/ Add extra space for large CodeEntryAlignment\n+    int max_aligned_stubs = 10;\n+    int size = code_size1 + CodeEntryAlignment * max_aligned_stubs;\n+    _code1 = BufferBlob::create(\"StubRoutines (1)\", size);\n@@ -272,1 +275,4 @@\n-    _code2 = BufferBlob::create(\"StubRoutines (2)\", code_size2);\n+    \/\/ Add extra space for large CodeEntryAlignment\n+    int max_aligned_stubs = 100;\n+    int size = code_size2 + CodeEntryAlignment * max_aligned_stubs;\n+    _code2 = BufferBlob::create(\"StubRoutines (2)\", size);\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,0 +76,7 @@\n+        for (int align = 256; align <= 1024; align *= 2) {\n+            shouldPass(\n+                \"-XX:+UnlockExperimentalVMOptions\",\n+                \"-XX:CodeCacheSegmentSize=\" + align,\n+                \"-XX:CodeEntryAlignment=\" + align\n+            );\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestCodeEntryAlignment.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}