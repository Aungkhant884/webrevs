{"files":[{"patch":"@@ -87,0 +87,22 @@\n+    \/*\n+     * Creates a CgroupInfo instance from a line in \/proc\/cgroups.\n+     * Comment token (hash) is handled by the caller.\n+     *\n+     * Example (annotated):\n+     *\n+     * #subsys_name     hierarchy       num_cgroups     enabled\n+     * cpuset           10              1               1         (a)\n+     * cpu              7               8               1         (b)\n+     * [...]\n+     *\n+     * Line (a) would yield:\n+     *   info = new CgroupInfo(\"cpuset\", 10, true);\n+     *   return info;\n+     * Line (b) results in:\n+     *   info = new CgroupInfo(\"cpu\", 7, true);\n+     *   return info;\n+     *\n+     *\n+     * See CgroupSubsystemFactory.determineType()\n+     *\n+     *\/\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupInfo.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -121,0 +121,15 @@\n+    \/*\n+     * Determine the type of the cgroup system (v1 - legacy or hybrid - or, v2 - unified)\n+     * based on three files:\n+     *\n+     *  (1) mountInfo  (i.e. \/proc\/self\/mountinfo)\n+     *  (2) cgroups    (i.e. \/proc\/cgroups)\n+     *  (3) selfCgroup (i.e. \/proc\/self\/cgroup)\n+     *\n+     * File 'cgroups' is inspected for the hierarchy ID of the mounted cgroup pseudo\n+     * filesystem. The hierarchy ID, in turn, helps us distinguish cgroups v2 and\n+     * cgroup v1. For a system with zero hierarchy ID, but with >= 1 relevant cgroup\n+     * controllers mounted in 'mountInfo' we can infer it's cgroups v2. Anything else\n+     * will be cgroup v1 (hybrid or legacy). File 'selfCgroup' is being used for\n+     * figuring out the mount path of the controller in the cgroup hierarchy.\n+     *\/\n@@ -155,2 +170,2 @@\n-        \/\/ If there are no mounted, relevant cgroup controllers in mountinfo and only\n-        \/\/ 0 hierarchy IDs in \/proc\/cgroups have been seen, we are on a cgroups v1 system.\n+        \/\/ If there are no mounted, relevant cgroup controllers in 'mountinfo' and only\n+        \/\/ 0 hierarchy IDs in file 'cgroups' have been seen, we are on a cgroups v1 system.\n@@ -189,0 +204,10 @@\n+    \/*\n+     * Sets the path to the cgroup controller for cgroups v2 based on a line\n+     * in \/proc\/self\/cgroup file (represented as the 'tokens' array).\n+     *\n+     * Example:\n+     *\n+     * 0::\/\n+     *\n+     * => tokens = [ \"0\", \"\", \"\/\" ]\n+     *\/\n@@ -199,0 +224,12 @@\n+    \/*\n+     * Sets the path to the cgroup controller for cgroups v1 based on a line\n+     * in \/proc\/self\/cgroup file (represented as the 'tokens' array).\n+     *\n+     * Note that multiple controllers might be joined at a single path.\n+     *\n+     * Example:\n+     *\n+     * 7:cpu,cpuacct:\/system.slice\/docker-74ad896fb40bbefe0f181069e4417505fffa19052098f27edf7133f31423bc0b.scope\n+     *\n+     * => tokens = [ \"7\", \"cpu,cpuacct\", \"\/system.slice\/docker-74ad896fb40bbefe0f181069e4417505fffa19052098f27edf7133f31423bc0b.scope\" ]\n+     *\/\n@@ -223,1 +260,17 @@\n-     * Amends cgroup infos with mount path and mount root.\n+     * Amends cgroup infos with mount path and mount root. The passed in\n+     * 'mntInfoLine' represents a single line in, for example,\n+     * \/proc\/self\/mountinfo. Each line is matched with MOUNTINFO_PATTERN\n+     * (see above), so as to extract the relevant tokens from the line.\n+     *\n+     * Host example cgroups v1:\n+     *\n+     * 44 30 0:41 \/ \/sys\/fs\/cgroup\/devices rw,nosuid,nodev,noexec,relatime shared:16 - cgroup cgroup rw,seclabel,devices\n+     *\n+     * Container example cgroups v1:\n+     *\n+     * 1901 1894 0:37 \/system.slice\/docker-2291eeb92093f9d761aaf971782b575e9be56bd5930d4b5759b51017df3c1387.scope \/sys\/fs\/cgroup\/cpu,cpuacct ro,nosuid,nodev,noexec,relatime master:12 - cgroup cgroup rw,seclabel,cpu,cpuacct\n+     *\n+     * Container example cgroups v2:\n+     *\n+     * 1043 1034 0:27 \/ \/sys\/fs\/cgroup ro,nosuid,nodev,noexec,relatime - cgroup2 cgroup2 rw,seclabel,nsdelegate\n+     *\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java","additions":56,"deletions":3,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -48,0 +48,10 @@\n+    \/**\n+     * Get a singleton instance of CgroupV1Subsystem. Initially, it creates a new\n+     * object by retrieving the pre-parsed information from cgroup interface\n+     * files from the provided 'infos' map.\n+     *\n+     * See CgroupSubsystemFactory.determineType() where the actual parsing of\n+     * cgroup interface files happens.\n+     *\n+     * @return A singleton CgroupV1Subsystem instance, never null\n+     *\/\n@@ -50,0 +60,1 @@\n+            CgroupV1Subsystem tmpSubsystem = initSubSystem(infos);\n@@ -52,1 +63,1 @@\n-                    INSTANCE = initSubSystem(infos);\n+                    INSTANCE = tmpSubsystem;\n@@ -63,2 +74,2 @@\n-        \/**\n-         * Find the cgroup mount points for subsystems\n+        \/*\n+         * Find the cgroup mount points for subsystem controllers\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1Subsystem.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -67,0 +67,11 @@\n+    \/**\n+     * Get the singleton instance of a cgroups v2 subsystem. On initialization,\n+     * a new object from the given cgroup information 'anyController' is being\n+     * created. Note that the cgroup information has been parsed from cgroup\n+     * interface files ahead of time.\n+     *\n+     * See CgroupSubsystemFactory.determineType() for the cgroup interface\n+     * files parsing logic.\n+     *\n+     * @return A singleton CgroupSubsystem instance, never null.\n+     *\/\n@@ -69,0 +80,4 @@\n+            CgroupSubsystemController unified = new CgroupV2SubsystemController(\n+                    anyController.getMountPoint(),\n+                    anyController.getCgroupPath());\n+            CgroupV2Subsystem tmpCgroupSystem = new CgroupV2Subsystem(unified);\n@@ -71,4 +86,1 @@\n-                    CgroupSubsystemController unified = new CgroupV2SubsystemController(\n-                            anyController.getMountPoint(),\n-                            anyController.getCgroupPath());\n-                    INSTANCE = new CgroupV2Subsystem(unified);\n+                    INSTANCE = tmpCgroupSystem;\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv2\/CgroupV2Subsystem.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"}]}