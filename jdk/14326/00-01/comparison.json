{"files":[{"patch":"@@ -1789,1 +1789,0 @@\n-    HandleMark hm(current_thread);\n@@ -1810,1 +1809,1 @@\n-    GetSingleStackTraceClosure op(this, current_thread, Handle(current_thread, thread_obj), thread, max_frame_count);\n+    GetSingleStackTraceClosure op(this, current_thread, thread, max_frame_count);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1947,2 +1947,10 @@\n-      _collector.set_result(err);\n-      return;\n+      \/\/ We got an error code so we don't have a JavaThread *, but\n+      \/\/ only return an error from here if we didn't get a valid\n+      \/\/ thread_oop.\n+      \/\/ In the virtual thread case the get_threadOop_and_JavaThread is expected to correctly set\n+      \/\/ the thread_oop and return JVMTI_ERROR_THREAD_NOT_ALIVE which we ignore here.\n+      \/\/ Thei corresponding thread state will be recorded in the jvmtiStackInfo.state.\n+      if (thread_oop == nullptr) {\n+        _collector.set_result(err);\n+        return;\n+      }\n@@ -1958,1 +1966,1 @@\n-  oop thread_oop = _thr_oop_h();\n+  oop thread_oop = JNIHandles::resolve_external_guard(_jthread);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -738,1 +738,0 @@\n-  Handle _thr_oop_h;\n@@ -744,1 +743,1 @@\n-                             Handle thr_oop_h, jthread thread, jint max_frame_count)\n+                             jthread thread, jint max_frame_count)\n@@ -747,1 +746,0 @@\n-      _thr_oop_h(thr_oop_h),\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,2 +54,3 @@\n-    public void ensureReady() {\n-        while (!threadReady) {\n+    public void ensureReady(Thread vt, Thread.State expState) {\n+        \/\/ wait while the thread is not ready or thread state is unexpected\n+        while (!threadReady || (vt.getState() != expState)) {\n@@ -103,0 +104,1 @@\n+        final Thread.State expState = Thread.State.WAITING;\n@@ -107,3 +109,2 @@\n-        task.ensureReady();\n-        TestTask.sleep(10);\n-        checkStates(vt, Thread.State.WAITING);\n+        task.ensureReady(vt, expState);\n+        checkStates(vt, expState);\n@@ -113,0 +114,1 @@\n+        final Thread.State expState = Thread.State.BLOCKED;\n@@ -117,3 +119,2 @@\n-            task.ensureReady();\n-            TestTask.sleep(10);\n-            checkStates(vt, Thread.State.BLOCKED);\n+            task.ensureReady(vt, expState);\n+            checkStates(vt, expState);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ThreadListStackTracesTest\/ThreadListStackTracesTest.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}