{"files":[{"patch":"@@ -125,1 +125,0 @@\n-    \/\/ there is no immediate move of word values in assembler_i486.?pp\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRGenerator_x86.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -865,1 +865,1 @@\n-  \/\/ to be installed in the Address class. This jump will transfers to the address\n+  \/\/ to be installed in the Address class. This jump will transfer to the address\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2906,1 +2906,1 @@\n-  \/\/ The following statuses are defined\/supported:\n+  \/\/ The following status values are defined\/supported:\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-  \/\/ is event_type enabled and usable for this thread in any environments?\n+  \/\/ is event_type enabled and usable for this thread in any environment?\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -644,1 +644,1 @@\n-  \/\/ On malloc(0), implementers of malloc(3) have the choice to return either\n+  \/\/ On malloc(0), implementations of malloc(3) have the choice to return either\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  \/\/ Make the task deactivate\n+  \/\/ Make the task inactivate\n","filename":"src\/hotspot\/share\/runtime\/task.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-  \/\/ chunks that backing up the arena.\n+  \/\/ chunks that are backing up the arena.\n","filename":"src\/hotspot\/share\/services\/memTracker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,2 +94,2 @@\n-      \/\/ There is no obvious benefits in allowing the thread table\n-      \/\/ to be concurrently populated during the initialization.\n+      \/\/ There is no obvious benefit in allowing the thread table\n+      \/\/ to be concurrently populated during initialization.\n","filename":"src\/hotspot\/share\/services\/threadIdTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}