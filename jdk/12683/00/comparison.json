{"files":[{"patch":"@@ -184,0 +184,10 @@\n+    public static final String ADD_REDUCTION_VI = PREFIX + \"ADD_REDUCTION_VI\" + POSTFIX;\n+    static {\n+        superWordNodes(ADD_REDUCTION_VI, \"AddReductionVI\");\n+    }\n+\n+    public static final String ADD_REDUCTION_VL = PREFIX + \"ADD_REDUCTION_VL\" + POSTFIX;\n+    static {\n+        superWordNodes(ADD_REDUCTION_VL, \"AddReductionVL\");\n+    }\n+\n@@ -233,0 +243,5 @@\n+    public static final String AND_REDUCTION_V = PREFIX + \"AND_REDUCTION_V\" + POSTFIX;\n+    static {\n+        superWordNodes(AND_REDUCTION_V, \"AndReductionV\");\n+    }\n+\n@@ -712,0 +727,10 @@\n+    public static final String MUL_REDUCTION_VI = PREFIX + \"MUL_REDUCTION_VI\" + POSTFIX;\n+    static {\n+        superWordNodes(MUL_REDUCTION_VI, \"MulReductionVI\");\n+    }\n+\n+    public static final String MUL_REDUCTION_VL = PREFIX + \"MUL_REDUCTION_VL\" + POSTFIX;\n+    static {\n+        superWordNodes(MUL_REDUCTION_VL, \"MulReductionVL\");\n+    }\n+\n@@ -737,0 +762,5 @@\n+    public static final String OR_REDUCTION_V = PREFIX + \"OR_REDUCTION_V\" + POSTFIX;\n+    static {\n+        superWordNodes(OR_REDUCTION_V, \"OrReductionV\");\n+    }\n+\n@@ -1336,0 +1366,5 @@\n+    public static final String XOR_REDUCTION_V = PREFIX + \"XOR_REDUCTION_V\" + POSTFIX;\n+    static {\n+        superWordNodes(XOR_REDUCTION_V, \"XorReductionV\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.ProdRed_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.ProdRed_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.ProdRed_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.ProdRed_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.ProdRed_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.ProdRed_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.ProdRed_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.ProdRed_Double\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.ProdRed_Double\n@@ -77,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -79,0 +39,20 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"prodReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public void runTests() throws Exception {\n@@ -104,0 +84,4 @@\n+    \/\/8300865 : No reduction nodes emitted (x86_64)\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.MUL_REDUCTION_VD})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ProdRed_Double.java","additions":29,"deletions":45,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.ProdRed_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.ProdRed_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.ProdRed_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.ProdRed_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.ProdRed_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.ProdRed_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.ProdRed_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.ProdRed_Float\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.ProdRed_Float\n@@ -77,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -79,0 +39,20 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"prodReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public void runTests() throws Exception {\n@@ -104,0 +84,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.MUL_REDUCTION_VF})\n+    @IR(applyIfCPUFeature = {\"sse4.1\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.MUL_REDUCTION_VF, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ProdRed_Float.java","additions":31,"deletions":45,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.ProdRed_Int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.ProdRed_Int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.ProdRed_Int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.ProdRed_Int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.ProdRed_Int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.ProdRed_Int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.ProdRed_Int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.ProdRed_Int\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.ProdRed_Int\n@@ -77,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -79,0 +39,20 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"prodReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public void runTests() throws Exception {\n@@ -103,0 +83,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.MUL_REDUCTION_VI})\n+    @IR(applyIfCPUFeature = {\"sse4.1\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.MUL_REDUCTION_VI, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ProdRed_Int.java","additions":31,"deletions":45,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,48 +28,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-TieredCompilation\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.RedTest_int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.RedTest_int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-TieredCompilation\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.RedTest_int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.RedTest_int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-TieredCompilation\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.RedTest_int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.RedTest_int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-TieredCompilation\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.RedTest_int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.RedTest_int\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.RedTest_int\n@@ -80,0 +34,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -84,0 +40,28 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+          scenarios[i] = new Scenario(i, \"-XX:+SuperWordReductions\",\n+                                         \"-XX:LoopMaxUnroll=\" + maxUnroll,\n+                                         \"-XX:-TieredCompilation\");\n+          i++;\n+        }\n+        for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+          scenarios[i] = new Scenario(i, \"-XX:-SuperWordReductions\",\n+                                         \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+          i++;\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\",\n+                 \"orReductionImplement\",\n+                 \"andReductionImplement\",\n+                 \"xorReductionImplement\",\n+                 \"mulReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public void runTests() throws Exception {\n@@ -160,0 +144,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VI})\n+    @IR(applyIfCPUFeature = {\"sse4.1\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.ADD_REDUCTION_VI, \">= 1\"})\n@@ -173,0 +163,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.OR_REDUCTION_V})\n+    @IR(applyIfCPUFeature = {\"sse4.1\", \"true\"},\n+            applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+            counts = {IRNode.OR_REDUCTION_V, \">= 1\"})\n@@ -186,0 +182,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.AND_REDUCTION_V})\n+    @IR(applyIfCPUFeature = {\"sse4.1\", \"true\"},\n+            applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+            counts = {IRNode.AND_REDUCTION_V, \">= 1\"})\n@@ -199,0 +201,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.XOR_REDUCTION_V})\n+    @IR(applyIfCPUFeature = {\"sse4.1\", \"true\"},\n+            applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+            counts = {IRNode.XOR_REDUCTION_V, \">= 1\"})\n@@ -212,0 +220,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.MUL_REDUCTION_VI})\n+    @IR(applyIfCPUFeature = {\"sse4.1\", \"true\"},\n+            applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+            counts = {IRNode.MUL_REDUCTION_VI, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/RedTest_int.java","additions":63,"deletions":49,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,48 +28,3 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-TieredCompilation\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.RedTest_long\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.RedTest_long\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-TieredCompilation\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.RedTest_long\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.RedTest_long\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-TieredCompilation\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.RedTest_long\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.RedTest_long\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-TieredCompilation\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.RedTest_long\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.RedTest_long\n+ * @requires vm.bits == \"64\"\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.RedTest_long\n@@ -80,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -84,0 +41,28 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+          scenarios[i] = new Scenario(i, \"-XX:+SuperWordReductions\",\n+                                         \"-XX:LoopMaxUnroll=\" + maxUnroll,\n+                                         \"-XX:-TieredCompilation\");\n+          i++;\n+        }\n+        for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+          scenarios[i] = new Scenario(i, \"-XX:-SuperWordReductions\",\n+                                         \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+          i++;\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\",\n+                 \"orReductionImplement\",\n+                 \"andReductionImplement\",\n+                 \"xorReductionImplement\",\n+                 \"mulReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public static void runTests() throws Exception {\n@@ -159,1 +144,6 @@\n-\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VL})\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.ADD_REDUCTION_VL, \">= 1\"})\n@@ -173,0 +163,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.OR_REDUCTION_V})\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.OR_REDUCTION_V, \">= 1\"})\n@@ -186,0 +182,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.AND_REDUCTION_V})\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.AND_REDUCTION_V, \">= 1\"})\n@@ -199,0 +201,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.XOR_REDUCTION_V})\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.XOR_REDUCTION_V, \">= 1\"})\n@@ -212,0 +220,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.MUL_REDUCTION_VL})\n+    @IR(applyIfCPUFeature = {\"avx512dq\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.MUL_REDUCTION_VL, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/RedTest_long.java","additions":64,"deletions":50,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRedAbsNeg_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRedAbsNeg_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRedAbsNeg_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRedAbsNeg_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRedAbsNeg_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRedAbsNeg_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRedAbsNeg_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRedAbsNeg_Double\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.SumRedAbsNeg_Double\n@@ -77,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -79,0 +39,21 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopUnrollLimit=\" + 250,\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public void runTests() throws Exception {\n@@ -113,0 +94,3 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VD})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRedAbsNeg_Double.java","additions":29,"deletions":45,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRedAbsNeg_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRedAbsNeg_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRedAbsNeg_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRedAbsNeg_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRedAbsNeg_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRedAbsNeg_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRedAbsNeg_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRedAbsNeg_Float\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.SumRedAbsNeg_Float\n@@ -77,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -79,0 +39,21 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopUnrollLimit=\" + 250,\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public void runTests() throws Exception {\n@@ -113,0 +94,3 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VF})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRedAbsNeg_Float.java","additions":29,"deletions":45,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRedSqrt_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRedSqrt_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRedSqrt_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRedSqrt_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRedSqrt_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRedSqrt_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRedSqrt_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRedSqrt_Double\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.SumRedSqrt_Double\n@@ -75,1 +33,0 @@\n-\n@@ -78,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -80,0 +39,21 @@\n+\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public void runTests() throws Exception {\n@@ -112,0 +92,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VD})\n+    @IR(applyIfCPUFeature = {\"avx\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.ADD_REDUCTION_VD, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRedSqrt_Double.java","additions":32,"deletions":46,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRed_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRed_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRed_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRed_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRed_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRed_Double\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRed_Double\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRed_Double\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.SumRed_Double\n@@ -77,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -79,0 +39,20 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public static void runTests() throws Exception {\n@@ -111,0 +91,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VD})\n+    @IR(applyIfCPUFeature = {\"sse2\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.ADD_REDUCTION_VD, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Double.java","additions":31,"deletions":45,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRed_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRed_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRed_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRed_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRed_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRed_Float\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRed_Float\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRed_Float\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.SumRed_Float\n@@ -77,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -79,0 +39,20 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public static void runTests() throws Exception {\n@@ -111,0 +91,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VF})\n+    @IR(applyIfCPUFeature = {\"sse2\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.ADD_REDUCTION_VF, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Float.java","additions":31,"deletions":45,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,44 +29,2 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRed_Int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=2\n- *      compiler.loopopts.superword.SumRed_Int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRed_Int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRed_Int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRed_Int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRed_Int\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRed_Int\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=16\n- *      compiler.loopopts.superword.SumRed_Int\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.SumRed_Int\n@@ -77,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -79,0 +39,20 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[8];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {2, 4, 8, 16}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public static void runTests() throws Exception {\n@@ -111,0 +91,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VI})\n+    @IR(applyIfCPUFeature = {\"sse4.1\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.ADD_REDUCTION_VI, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Int.java","additions":31,"deletions":45,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,23 +28,3 @@\n- * @requires os.arch==\"x86\" | os.arch==\"i386\" | os.arch==\"amd64\" | os.arch==\"x86_64\"\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRed_Long\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=4\n- *      compiler.loopopts.superword.SumRed_Long\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:+SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRed_Long\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n- *      -XX:CompileThresholdScaling=0.1\n- *      -XX:-SuperWordReductions\n- *      -XX:LoopMaxUnroll=8\n- *      compiler.loopopts.superword.SumRed_Long\n+ * @requires os.arch==\"amd64\" | os.arch==\"x86_64\"\n+ * @library \/test\/lib \/\n+ * @run driver compiler.loopopts.superword.SumRed_Long\n@@ -55,0 +35,2 @@\n+import compiler.lib.ir_framework.*;\n+\n@@ -57,0 +39,20 @@\n+        TestFramework framework = new TestFramework();\n+        framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                           \"-XX:LoopUnrollLimit=250\",\n+                           \"-XX:CompileThresholdScaling=0.1\");\n+        int i = 0;\n+        Scenario[] scenarios = new Scenario[4];\n+        for (String reductionSign : new String[] {\"+\", \"-\"}) {\n+            for (int maxUnroll : new int[] {4, 8}) {\n+                scenarios[i] = new Scenario(i, \"-XX:\" + reductionSign + \"SuperWordReductions\",\n+                                               \"-XX:LoopMaxUnroll=\" + maxUnroll);\n+                i++;\n+            }\n+        }\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    @Run(test = {\"sumReductionImplement\"},\n+        mode = RunMode.STANDALONE)\n+    public static void runTests() throws Exception {\n@@ -90,0 +92,6 @@\n+    @Test\n+    @IR(applyIf = {\"SuperWordReductions\", \"false\"},\n+        failOn = {IRNode.ADD_REDUCTION_VL})\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        counts = {IRNode.ADD_REDUCTION_VL, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/SumRed_Long.java","additions":32,"deletions":24,"binary":false,"changes":56,"status":"modified"}]}