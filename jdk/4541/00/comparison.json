{"files":[{"patch":"@@ -824,1 +824,0 @@\n-jdk\/jfr\/event\/gc\/detailed\/TestEvacuationFailedEvent.java        8263461 linux-x64\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-import java.io.File;\n-import java.nio.file.Paths;\n@@ -30,0 +28,1 @@\n+import jdk.jfr.Recording;\n@@ -31,1 +30,0 @@\n-import jdk.jfr.consumer.RecordingFile;\n@@ -33,0 +31,1 @@\n+import jdk.test.lib.jfr.EventNames;\n@@ -35,0 +34,2 @@\n+import sun.hotspot.WhiteBox;\n+\n@@ -38,0 +39,1 @@\n+ * @bug 8263461\n@@ -42,0 +44,1 @@\n+ * @requires vm.debug\n@@ -43,1 +46,6 @@\n- * @run main jdk.jfr.event.gc.detailed.TestEvacuationFailedEvent\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *          -Xmx32m -Xms32m -XX:+UnlockExperimentalVMOptions -XX:+G1EvacuationFailureALot\n+ *          -XX:G1EvacuationFailureALotCount=100 -XX:G1EvacuationFailureALotInterval=1\n+ *          -Xlog:gc=debug -XX:+UseG1GC jdk.jfr.event.gc.detailed.TestEvacuationFailedEvent\n@@ -45,0 +53,1 @@\n+\n@@ -47,3 +56,1 @@\n-    private final static String EVENT_SETTINGS_FILE = System.getProperty(\"test.src\", \".\") + File.separator + \"evacuationfailed-testsettings.jfc\";\n-    private final static String JFR_FILE = \"TestEvacuationFailedEvent.jfr\";\n-    private final static int BYTES_TO_ALLOCATE = 1024 * 512;\n+    private final static String EVENT_NAME = EventNames.EvacuationFailed;\n@@ -52,3 +59,4 @@\n-        String[] vmFlags = {\"-XX:+UnlockExperimentalVMOptions\", \"-XX:-UseFastUnorderedTimeStamps\",\n-            \"-Xmx64m\", \"-Xmn60m\", \"-XX:-UseDynamicNumberOfGCThreads\", \"-XX:ParallelGCThreads=3\",\n-            \"-XX:MaxTenuringThreshold=0\", \"-Xlog:gc*=debug\", \"-XX:+UseG1GC\"};\n+        Recording recording = new Recording();\n+        \/\/ activate the event we are interested in and start recording\n+        recording.enable(EVENT_NAME);\n+        recording.start();\n@@ -56,4 +64,4 @@\n-        if (!ExecuteOOMApp.execute(EVENT_SETTINGS_FILE, JFR_FILE, vmFlags, BYTES_TO_ALLOCATE)) {\n-            System.out.println(\"OOM happened in the other thread(not test thread). Skip test.\");\n-            \/\/ Skip test, process terminates due to the OOME error in the different thread\n-            return;\n+        Object[] data = new Object[1024];\n+\n+        for (int i = 0; i < data.length; i++) {\n+            data[i] = new byte[5 * 1024];\n@@ -61,0 +69,6 @@\n+        \/\/ Guarantee one young gc.\n+        WhiteBox.getWhiteBox().youngGC();\n+        \/\/ Keep alive data.\n+        System.out.println(data);\n+\n+        recording.stop();\n@@ -62,1 +76,2 @@\n-        List<RecordedEvent> events = RecordingFile.readAllEvents(Paths.get(JFR_FILE));\n+        \/\/ Verify recording\n+        List<RecordedEvent> events = Events.fromRecording(recording);\n@@ -72,0 +87,1 @@\n+        recording.close();\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/detailed\/TestEvacuationFailedEvent.java","additions":32,"deletions":16,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -1,32 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n--->\n-<configuration version=\"2.0\" label=\"TestSettings\" description=\"Configuration for testing promotion failed event\" provider=\"Oracle\">\n-\n-    <event name=\"jdk.EvacuationFailed\">\n-      <setting name=\"enabled\">true<\/setting>\n-      <setting name=\"threshold\">0 ms<\/setting>\n-    <\/event>\n-<\/configuration>\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/detailed\/evacuationfailed-testsettings.jfc","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"}]}