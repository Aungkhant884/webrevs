{"files":[{"patch":"@@ -1361,1 +1361,1 @@\n-class ObjectIterateParScanClosure : public BasicOopIterateClosure {\n+class ShenandoahObjectIterateParScanClosure : public BasicOopIterateClosure {\n@@ -1387,1 +1387,1 @@\n-  ObjectIterateParScanClosure(MarkBitMap* bitmap, ShenandoahObjToScanQueue* q) :\n+  ShenandoahObjectIterateParScanClosure(MarkBitMap* bitmap, ShenandoahObjToScanQueue* q) :\n@@ -1415,0 +1415,3 @@\n+    if (!_init_ready) {\n+      return;\n+    }\n@@ -1420,1 +1423,1 @@\n-    _init_ready &= prepare_worker_queues();\n+    _init_ready = prepare_worker_queues();\n@@ -1483,1 +1486,1 @@\n-    ObjectIterateParScanClosure oops(_aux_bit_map, q);\n+    ShenandoahObjectIterateParScanClosure oops(_aux_bit_map, q);\n@@ -1493,1 +1496,1 @@\n-    assert(q.is_empty(), \"should be empty\");\n+    assert(q->is_empty(), \"should be empty\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-\n+  friend class ShenandoahParallelObjectIterator;\n@@ -531,0 +531,4 @@\n+  \/\/ Heap iteration support\n+  void scan_roots_for_iteration(Stack<oop, mtGC>* oop_stack, ObjectIterateScanRootClosure* oops);\n+  bool prepare_aux_bitmap_for_iteration();\n+  void reclaim_aux_bitmap_for_iteration();\n@@ -556,3 +560,0 @@\n-  void scan_roots_for_iteration(Stack<oop, mtGC>* oop_stack, ObjectIterateScanRootClosure* oops);\n-  bool prepare_aux_bitmap_for_iteration();\n-  void reclaim_aux_bitmap_for_iteration();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}