{"files":[{"patch":"@@ -741,2 +741,9 @@\n-  assert(!obj->is_unlocked(), \"caller checked these conditions\");\n-  assert(Universe::heap()->is_in_or_null(obj), \"must be NULL or an object\");\n+  assert(Universe::heap()->is_in(obj), \"must an object\");\n+  \/\/ The object could become unlocked through a JNI call, which we have no other checks for.\n+  \/\/ Give a message if CheckJNICalls but ignore.\n+  if (obj->is_unlocked()) {\n+    if (CheckJNICalls) {\n+      fatal(\"Object has been unlocked by JNI\");\n+    }\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2105,0 +2105,8 @@\n+  \/\/ The object could become unlocked through a JNI call, which we have no other checks for.\n+  \/\/ Give a message if CheckJNICalls but ignore.\n+  if (obj->is_unlocked()) {\n+    if (CheckJNICalls) {\n+      fatal(\"Object has been unlocked by JNI\");\n+    }\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}