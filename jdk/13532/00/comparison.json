{"files":[{"patch":"@@ -86,1 +86,1 @@\n-    _num_optional_regions(optional_cset_length),\n+    _num_initial_optional_regions(optional_cset_length),\n@@ -109,1 +109,1 @@\n-  _oops_into_optional_regions = new G1OopStarChunkedList[_num_optional_regions];\n+  _oops_into_optional_regions = new G1OopStarChunkedList[_num_initial_optional_regions];\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,2 @@\n-  size_t _num_optional_regions;\n+  \/\/ Number of optional regions at start of gc.\n+  size_t _num_initial_optional_regions;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -77,2 +77,2 @@\n-  assert(index < _num_optional_regions,\n-         \"Trying to access optional region idx %u beyond \" SIZE_FORMAT, index, _num_optional_regions);\n+  assert(index < _num_initial_optional_regions,\n+         \"Trying to access optional region idx %u beyond \" SIZE_FORMAT, index, _num_initial_optional_regions);\n@@ -86,2 +86,2 @@\n-  assert(index < _num_optional_regions,\n-         \"Trying to access optional region idx %u beyond \" SIZE_FORMAT, index, _num_optional_regions);\n+  assert(index < _num_initial_optional_regions,\n+         \"Trying to access optional region idx %u beyond \" SIZE_FORMAT, index, _num_initial_optional_regions);\n@@ -93,1 +93,1 @@\n-  assert(hr->index_in_opt_cset() < _num_optional_regions,\n+  assert(hr->index_in_opt_cset() < _num_initial_optional_regions,\n@@ -95,1 +95,1 @@\n-         hr->index_in_opt_cset(), _num_optional_regions, HR_FORMAT_PARAMS(hr));\n+         hr->index_in_opt_cset(), _num_initial_optional_regions, HR_FORMAT_PARAMS(hr));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}