{"files":[{"patch":"@@ -72,3 +72,3 @@\n-        testUniqueInfoOpt(new String[] {\"--help\", \"--help\"}, \"where possible options\");\n-        testUniqueInfoOpt(new String[] {\"-X\", \"-X\"}, \"These extra options\");\n-        testUniqueInfoOpt(new String[] {\"--help-lint\", \"--help-lint\"}, \"The supported keys\");\n+        testUniqueInfoOpt(new String[] {\"--help\"},       new String[] {\"--help\", \"--help\"});\n+        testUniqueInfoOpt(new String[] {\"-X\"},           new String[] {\"-X\", \"-X\"});\n+        testUniqueInfoOpt(new String[] {\"--help-lint\"},  new String[] {\"--help-lint\", \"--help-lint\"});\n@@ -76,2 +76,2 @@\n-        testUniqueInfoOpt(new String[] {\"-version\", \"-version\"}, \"javac\");\n-        testUniqueInfoOpt(new String[] {\"-fullversion\", \"-fullversion\"}, \"javac full version\");\n+        testUniqueInfoOpt(new String[] {\"-version\"},     new String[] {\"-version\", \"-version\"});\n+        testUniqueInfoOpt(new String[] {\"-fullversion\"}, new String[] {\"-fullversion\", \"-fullversion\"});\n@@ -80,1 +80,1 @@\n-    void testUniqueInfoOpt(String[] opts, String... expect) {\n+    void testUniqueInfoOpt(String[] baseOpts, String[] testOpts) {\n@@ -82,3 +82,8 @@\n-        runMain(opts, files)\n-                .checkOK()\n-                .checkUniqueStartLog(expect);\n+\n+        TestResult base = runMain(baseOpts, files)\n+                                 .checkOK();\n+\n+        TestResult test = runMain(testOpts, files)\n+                                 .checkOK();\n+\n+        base.checkSameLog(test);\n","filename":"test\/langtools\/tools\/javac\/options\/modes\/InfoOptsTest.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-import java.util.Scanner;\n@@ -273,2 +272,2 @@\n-        TestResult checkUniqueStartLog(String... uniqueExpects) {\n-            return checkUniqueStartLog(Log.DIRECT, uniqueExpects);\n+        TestResult checkSameLog(TestResult other) {\n+            return checkSameLog(Log.DIRECT, other);\n@@ -277,15 +276,5 @@\n-        TestResult checkUniqueStartLog(Log l, String... uniqueExpects) {\n-            String log = logs.get(l);\n-            for (String e : uniqueExpects) {\n-                Scanner scanner = new Scanner(log);\n-                int num = 0;\n-                while (scanner.hasNextLine()) {\n-                    if (scanner.nextLine().startsWith(e)) {\n-                        num++;\n-                    }\n-                }\n-                if (num == 0) {\n-                    error(\"Expected string not found: \" + e);\n-                } else if (num > 1) {\n-                    error(\"Expected string appears more than once: \" + e);\n-                }\n+        TestResult checkSameLog(Log l, TestResult other) {\n+            String thisLog = logs.get(l);\n+            String otherLog = other.logs.get(l);\n+            if (!thisLog.equals(otherLog)) {\n+                error(\"Logs are not the same.\\nThis:\\n\" + thisLog + \"\\nOther:\\n\" + otherLog);\n","filename":"test\/langtools\/tools\/javac\/options\/modes\/OptionModesTester.java","additions":7,"deletions":18,"binary":false,"changes":25,"status":"modified"}]}