{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2019 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021 SAP SE. All rights reserved.\n@@ -36,0 +36,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -3622,0 +3623,23 @@\n+  \/\/ Do Klass pointers always fit into 32bit?\n+  const MetaWord* ccs_end = Metaspace::class_space_end();\n+  assert(ccs_end != NULL, \"Sanity\");\n+  const bool klass_pointers_are_32_bit = ((uintptr_t)ccs_end <= 0xFFFFFFFF);\n+\n+#ifdef ASSERT\n+  if (klass_pointers_are_32_bit) {\n+    \/\/ Assert that Klass pointers are < 32bit\n+    Label ok2;\n+    z_tmhl(current, 0xFFFF);\n+    z_brc(Assembler::bcondAllZero, ok2);\n+    z_illtrap(0xee);\n+    z_illtrap(0xee);\n+    bind(ok2);\n+    Label ok3;\n+    z_tmhh(current, 0xFFFF);\n+    z_brc(Assembler::bcondAllZero, ok3);\n+    z_illtrap(0xee);\n+    z_illtrap(0xee);\n+    bind(ok3);\n+  }\n+#endif\n+\n@@ -3628,1 +3652,1 @@\n-    } else if ((base_h == 0) && (base_l != 0)) {\n+    } else if ((base_h == 0) && (base_l != 0) && klass_pointers_are_32_bit) {\n@@ -3630,1 +3654,1 @@\n-      z_agfi(dst, -(int)base_l);\n+      z_afi(dst, -(int)base_l); \/\/ Note: 32bit add\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":28,"deletions":4,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2017, 2021 SAP SE. All rights reserved.\n@@ -502,0 +503,9 @@\n+\/\/ Returns one-past the highest possible class space location, NULL if no class space exists.\n+const MetaWord* Metaspace::class_space_end() {\n+  if (VirtualSpaceList::vslist_class() != NULL) {\n+    return VirtualSpaceList::vslist_class()->base_of_first_node() +\n+           VirtualSpaceList::vslist_class()->word_size_of_first_node();\n+  }\n+  return NULL;\n+}\n+\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021 SAP SE. All rights reserved.\n@@ -141,0 +142,2 @@\n+  \/\/ Returns one-past the highest possible class space location, NULL if no class space exists.\n+  static const MetaWord* class_space_end();\n","filename":"src\/hotspot\/share\/memory\/metaspace.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}