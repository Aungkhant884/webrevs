{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,0 @@\n-static const ZStatSubPhase ZSubPhaseConcurrentMarkIdle(\"Concurrent Mark Idle\");\n@@ -473,6 +472,1 @@\n-    {\n-      ZStatTimer timer(ZSubPhaseConcurrentMarkIdle);\n-      do {\n-        idle();\n-      } while (!_terminate.stage1_synchronized() && _stripes.is_empty());\n-    }\n+    idle();\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-  const T* vstack = Atomic::load(&_head);\n+  const T* vstack = _head;\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStack.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-  bool stage1_synchronized();\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkTerminate.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -82,4 +82,0 @@\n-inline bool ZMarkTerminate::stage1_synchronized() {\n-  return Atomic::load(&_nworking_stage1) == 0;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkTerminate.inline.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}