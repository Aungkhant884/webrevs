{"files":[{"patch":"@@ -381,1 +381,0 @@\n-  ZStatTimer timer(ZSubPhaseConcurrentMarkIdle);\n@@ -474,1 +473,6 @@\n-    idle();\n+    {\n+      ZStatTimer timer(ZSubPhaseConcurrentMarkIdle);\n+      do {\n+        idle();\n+      } while (!_terminate.stage1_synchronized() && _stripes.is_empty());\n+    }\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-  const T* vstack = _head;\n+  const T* vstack = Atomic::load(&_head);\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStack.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+  bool stage1_synchronized();\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkTerminate.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -82,0 +82,4 @@\n+inline bool ZMarkTerminate::stage1_synchronized() {\n+  return Atomic::load(&_nworking_stage1) == 0;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkTerminate.inline.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}