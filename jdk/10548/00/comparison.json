{"files":[{"patch":"@@ -2312,1 +2312,2 @@\n-                    return isIntersectionOrUnionType(pt);\n+                    if (isIntersectionOrUnionType(pt))\n+                        return true;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8292975\n+ * @summary Javac produces code that crashes with LambdaConversionException\n+ * @run main IntersectionParameterTypeTest\n+ *\/\n+\n+import java.util.function.BiFunction;\n+\n+public class IntersectionParameterTypeTest {\n+\n+    sealed interface Term {\n+        record Lit() implements Term {}\n+        record Lam(String x, Term a) implements Term {}\n+    }\n+\n+    public static <U, T> void call(BiFunction<U, T, T> op, U x, T t) {\n+      op.apply(x, t);\n+    }\n+\n+    public static void main(String[] args) {\n+      \/\/ this code works\n+      call(Term.Lam::new, \"x\", (Term) new Term.Lit());\n+\n+      \/\/ this does not\n+      call(Term.Lam::new, \"x\", new Term.Lit());\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/IntersectionParameterTypeTest.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8269983\n+ * @summary BootstrapMethodError with method reference and intersection type\n+ * @run main IntersectionParameterTypeTest2\n+ *\/\n+\n+public class IntersectionParameterTypeTest2 {\n+\n+    public static void main(String[] args) {\n+        f();\n+    }\n+\n+    static <T extends Comparable<T> & G> C<T> f() {\n+        return new C<>(Q::g);\n+    }\n+\n+    public interface G {}\n+\n+    private interface E<T> {\n+        void g(Q g, T value);\n+    }\n+\n+    static class C<T extends Comparable<?>> {\n+        C(E<T> g) {}\n+    }\n+\n+    static class Q {\n+        void g(G g) {}\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/IntersectionParameterTypeTest2.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"}]}