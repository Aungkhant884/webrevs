{"files":[{"patch":"@@ -4162,1 +4162,0 @@\n-\n@@ -4165,2 +4164,2 @@\n-  Register Rcurrent_monitor  = R11_scratch1,\n-           Rcurrent_obj      = R12_scratch2,\n+  Register Rcurrent_monitor  = R3_ARG1,\n+           Rcurrent_obj      = R4_ARG2,\n@@ -4168,2 +4167,2 @@\n-           Rscratch1         = R3_ARG1,\n-           Rscratch2         = R4_ARG2,\n+           Rscratch1         = R11_scratch1,\n+           Rscratch2         = R12_scratch2,\n@@ -4184,1 +4183,1 @@\n-  __ null_check_throw(Robj_to_lock, -1, R11_scratch1);\n+  __ null_check_throw(Robj_to_lock, -1, Rscratch1);\n@@ -4195,1 +4194,1 @@\n-    Label Lloop, LnotFree;\n+    Label Lloop, LnotFree, Lexit;\n@@ -4199,1 +4198,2 @@\n-    \/\/ Found object?\n+    \/\/ Exit if current entry is for same object; this guarantees, that new monitor\n+    \/\/ used for recursive lock is above the older one.\n@@ -4201,1 +4201,1 @@\n-    __ beq(CCR0, Lfound); \/\/ recursive locking\n+    __ beq(CCR0, Lexit); \/\/ recursive locking\n@@ -4211,0 +4211,1 @@\n+    __ bind(Lexit);\n@@ -4249,2 +4250,2 @@\n-  Register Rcurrent_monitor  = R11_scratch1,\n-           Rcurrent_obj      = R12_scratch2,\n+  Register Rcurrent_monitor  = R3_ARG1,\n+           Rcurrent_obj      = R4_ARG2,\n@@ -4252,2 +4253,2 @@\n-           Rscratch          = R3_ARG1,\n-           Rbot              = R4_ARG2;\n+           Rscratch          = R11_scratch1,\n+           Rbot              = R12_scratch2;\n@@ -4264,1 +4265,1 @@\n-  __ null_check_throw(Robj_to_lock, -1, R11_scratch1);\n+  __ null_check_throw(Robj_to_lock, -1, Rscratch);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"}]}