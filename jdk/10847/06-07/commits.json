[{"commit":{"message":"Merge pull request #2 from luhenry\/dev\/cl4es\/8282664-polyhash\n\nUnroll + Reorder BBs"},"files":[],"sha":"a4d898a35c97d6329c19de75cb4efdcd27f7fef0"},{"commit":{"message":"fixup! Handle size=0 and size=1 in Java"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"6477fb6fb4cc6a6e35685067077257ed14884b1d"},{"commit":{"message":"Handle size=0 and size=1 in Java"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysHashCode.java"}],"sha":"a1cce60ce79fc29d0eb53dc3058f4063af00921a"},{"commit":{"message":"reorder BB to do single scalar first to avoid slowdown of short arrays, longer arrays jumps will be amortized by speedups"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"9001dfffaca8618a56b69aa00d8305f597bad623"},{"commit":{"message":"Unroll loop for cnt1 < 32"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"8761b6a40654ee452746c2e107316391cc449f29"}]