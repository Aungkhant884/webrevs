[{"commit":{"message":"Final touch-ups, restored 2-stride with dependency chain breakage"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"af197062411e2dbc16feef1d65079f41c4d7dfef"},{"commit":{"message":"Minor cleanup"},"files":[{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"}],"sha":"1fa602736e4bcbc3daa4195aa45c30651ece59c9"},{"commit":{"message":"Revert accidental ModuleHashes change"},"files":[],"sha":"853a75755975a0254dd0a912f7960262abc2e63f"},{"commit":{"message":"Merge branch 'master' into 8282664-polyhash"},"files":[{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"}],"sha":"70fc9050291ce37289fd9456589d1ea862e8c379"},{"commit":{"message":"Merge pull request #2 from luhenry\/dev\/cl4es\/8282664-polyhash\n\nUnroll + Reorder BBs"},"files":[],"sha":"a4d898a35c97d6329c19de75cb4efdcd27f7fef0"},{"commit":{"message":"fixup! Handle size=0 and size=1 in Java"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"6477fb6fb4cc6a6e35685067077257ed14884b1d"},{"commit":{"message":"Handle size=0 and size=1 in Java"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysHashCode.java"}],"sha":"a1cce60ce79fc29d0eb53dc3058f4063af00921a"},{"commit":{"message":"reorder BB to do single scalar first to avoid slowdown of short arrays, longer arrays jumps will be amortized by speedups"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"9001dfffaca8618a56b69aa00d8305f597bad623"},{"commit":{"message":"Unroll loop for cnt1 < 32"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"8761b6a40654ee452746c2e107316391cc449f29"},{"commit":{"message":"Merge pull request #1 from luhenry\/dev\/cl4es\/8282664-polyhash\n\nSwitch to forward approach for vectorization"},"files":[],"sha":"6f49b5aa6cca73f46365a8d1667ac503eb79f66b"},{"commit":{"message":"Fix vector loop"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"test\/jdk\/java\/util\/Arrays\/HashCode.java"}],"sha":"e37387b603dfeab7e956a02245d57fe485dfc408"},{"commit":{"message":"fix indexing"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"528260f74dfbcfe32eccd087fdec58a792caab80"},{"commit":{"message":"Switch to forward approach for vectorization"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.hpp"}],"sha":"49f2b087133bbfbe55316c05167f844488d5922e"},{"commit":{"message":"Remove UseSSE >= 3 precondition now that UseAVX > 0 implies UseSSE=4"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"}],"sha":"cdf276de17c0b6fa82e7e412bb2276d5148051c0"},{"commit":{"message":"Merge branch 'master' into 8282664-polyhash"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"}],"sha":"95c10b5fe8923b3ad14eaea720fdbe30fd88bacc"},{"commit":{"message":"Merge branch 'master' into 8282664-polyhash"},"files":[{"filename":"src\/hotspot\/share\/opto\/escape.cpp"}],"sha":"538ed91e37f31ef553ec3362ba10988b69b8bf8e"},{"commit":{"message":"Change scalar unroll to 2 element stride, minding dependency chain"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"a473c2000c8cc7ce436511b1225b7b6bb3c47ec3"},{"commit":{"message":"Require UseSSE >= 3 due transitive use of sse3 instructions from ReduceI"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"}],"sha":"7e8a3e9c8e99dcb9cf09f24f955d35a854a259a1"},{"commit":{"message":"Reorder loops and some other suggestions from @merykitty"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"6aed1c1e8dcf5e6501226f7bf53c1430020b2539"},{"commit":{"message":"ws"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"22fec5f07471882eb830ee9850bef9b40d3f9c43"},{"commit":{"message":"Add ArraysHashCode microbenchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysHashCode.java"}],"sha":"c1dc489ba37357f7ba25638f5f3d29e307a07769"},{"commit":{"message":"Fixed vector loops for int and char arrays"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"974ad7eba846112d3403647a4e0290791015510e"},{"commit":{"message":"Split up Arrays\/HashCode tests"},"files":[{"filename":"test\/jdk\/java\/util\/Arrays\/HashCode.java"}],"sha":"371fdf85beebea0da60e2b9856f8f789f7a8be11"},{"commit":{"message":"Fixes, optimized short inputs, temporarily disabled vector loop for Arrays.hashCode cases, added and improved tests"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ArraysSupport.java"},{"filename":"test\/jdk\/java\/lang\/String\/HashCode.java"},{"filename":"test\/jdk\/java\/util\/Arrays\/HashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"361812434c1693732067176205f8c21a0406a4c6"},{"commit":{"message":"typo"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"}],"sha":"ff23d9b95d9ba2d23bfa8445123182446dcf54d9"},{"commit":{"message":"Add Arrays.hashCode tests, enable intrinsic by default on x86"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"},{"filename":"test\/jdk\/java\/util\/Arrays\/HashCode.java"}],"sha":"ff216db25f54b47da0847e9e2c64f737af1ec452"},{"commit":{"message":"Correct start values for array hashCode methods"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ArraysSupport.java"},{"filename":"test\/jdk\/java\/util\/Arrays\/HashCode.java"}],"sha":"596b51da719e5b764d8a6ed98dbbf7390bc4d45e"},{"commit":{"message":"Merge branch 'master' into 8282664-polyhash"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/machnode.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/System.java"}],"sha":"e53f3549648dba9052fb385ad4c380afe69ed548"},{"commit":{"message":"Fold identical ops; only add coef expansion for Arrays cases"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"}],"sha":"4e0382698a2e096eb10e5f9de69afaa46800d32d"},{"commit":{"message":"Fix fixing up of inputs in formsel.cpp; remove debug printouts and fix trailing whitespaces"},"files":[{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/machnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"}],"sha":"9d33d3aaaea972e0602c991fb7601bba36c67204"},{"commit":{"message":"Refactor to a single @IntrinsicCandidate method, re-enable x86 intrinsic code"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/machnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/System.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ArraysSupport.java"}],"sha":"c77a203e9e6d403cf5ec30d368fdd5c6fa296715"},{"commit":{"message":"Remove experiment baseline microbenchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"ebaa29b28e00f8c22e7525a62e5b113808677bea"},{"commit":{"message":"Adjust threshold"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"}],"sha":"6d773694ed3262855379815902fa97ef5a5467a1"},{"commit":{"message":"Introduce ArraysSupport.vectorizedHashCode, temporarily disable x86 intrinsic"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ArraysSupport.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"1b8195a537b132f8942c8358034b07cc4580b5be"},{"commit":{"message":"Merge branch 'master' into 8282664-polyhash"},"files":[{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"}],"sha":"b83fd3e7d932fe54008cbf021f0747815626a24d"},{"commit":{"message":"Merge luhenry:vectorized-stringlatin1..."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"a6d85da6f6ecb827a9f584dd14d9840b2fb883fb"},{"commit":{"message":"Reenable SpecialArraysHashCode by default"},"files":[],"sha":"5d862665bafaaf585cc82825eef7ab48cf865790"},{"commit":{"message":"Ensure a proper register is used + Slight performance optimizations"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"34b90e843fee3828dceb5ab2b8223aa6d2d8a3a9"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into vectorized-stringlatin1-hashcode"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"}],"sha":"c3624665585af1751478353410d8f6fb63fee0d8"},{"commit":{"message":"Fix overlapping registers"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"29dab16b1e8d6553797177c8ef3b49d9930be91e"},{"commit":{"message":"Actually fix h when hashcode is vectorized"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"723203684438515491b69ca14da77f798e8d4557"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into vectorized-stringlatin1-hashcode"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"}],"sha":"721899e56748118cacb96d9dc963bf1ffc0c9c15"},{"commit":{"message":"Fix h when vectorized for Arrays.hashCode"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"af7b445026d6fe80ec6bd71ff0063f4090803d76"},{"commit":{"message":"Add missing check for AryHashCode node"},"files":[{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"}],"sha":"2b631dd23181f1e7de82f5737cf25082eada0256"},{"commit":{"message":"Fix some merge conflicts"},"files":[{"filename":"src\/hotspot\/share\/opto\/escape.cpp"}],"sha":"a6f75c2a0c5147454b2eeba58ef1238a5f2eed7a"},{"commit":{"message":"Disable Arrays.hashCode intrinsic by default for CI"},"files":[],"sha":"1935cf31a9c84ed82294a2541612aff1407a993f"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into vectorized-stringlatin1-hashcode"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"}],"sha":"8a78584a781ec3699e0b0ca402de38ffe7f5d93a"},{"commit":{"message":"Some small refactoring: store power_of_31_backwards in the code directly, compact code, and more"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"ff8eb3340a37066c7b71f7c82fb7ec55572be836"},{"commit":{"message":"{wip} Generalize string hashcode to Arrays.hashCode"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"}],"sha":"e1a5942d1bb0e4c5e315458e750b63deb913e843"},{"commit":{"message":"Use intrinsic for StringUTF16"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"test\/jdk\/java\/lang\/String\/HashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"026e971335f40fb48f9a9594e6230c63bc0cbb82"},{"commit":{"message":"Reduce code duplication"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"6c1f57497b24b5c43ee709dd8c7c9550b215d6f0"},{"commit":{"message":"Improve performance of short strings"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"test\/jdk\/java\/lang\/String\/HashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"95f56b1f0796b886d94feb456614233a58301f5c"},{"commit":{"message":"Reduce overhead of method handle"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"ed9904b8837f4f90572f0e964ce36b04f4c17d0b"},{"commit":{"message":"Leave Java method unchanged"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"}],"sha":"79e0a826cebeb09d7333f4f7bf6c2dafd45c3ccd"},{"commit":{"message":"Add first pass at vectorized intrinsic for StringLatin1.hashCode\n\nNext is to generalize it for Arrays.hashCode and StringUTF16.hashCode and make it cheap on shorter strings"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"},{"filename":"test\/jdk\/java\/lang\/String\/HashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"5febe14dc41495bde14af81f60b4e2891dd4cbb1"},{"commit":{"message":"Add UTF-16 benchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"8e2e59bb0ad5e9e52e1070b9bb274fe7322fd68d"},{"commit":{"message":"8282664: Unroll by hand StringUTF16 and StringLatin1 polynomial hash loops\n\nDespite the hash value being cached for Strings, computing the hash still represents a significant CPU usage for applications handling lots of text.\n\nEven though it would be generally better to do it through an enhancement to the autovectorizer, the complexity of doing it by hand is trivial and the gain is sizable (2x speedup) even without the Vector API. The algorithm has been proposed by Richard Startin and Paul Sandoz [1].\n\nAt Datadog, we handle a great amount of text (through logs management for example), and hashing String represents a large part of our CPU usage. It's very unlikely that we are the only one as String.hashCode is such a core feature of the JVM-based languages with its use in HashMap for example. Having even only a 2x speedup would allow us to save thousands of CPU cores per month and improve correspondingly the energy\/carbon impact.\n\n[1] https:\/\/static.rainfocus.com\/oracle\/oow18\/sess\/1525822677955001tLqU\/PF\/codeone18-vector-API-DEV5081_1540354883936001Q3Sv.pdf"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java"},{"filename":"test\/jdk\/java\/lang\/String\/HashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java"}],"sha":"f7dda1d9007b69c082924c6b1c60d8872af7e25b"}]