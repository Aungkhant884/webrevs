{"files":[{"patch":"@@ -3337,1 +3337,1 @@\n-  Label SHORT_UNROLLED_LOOP_BEGIN, SHORT_SCALAR_LOOP_BEGIN,\n+  Label SHORT_UNROLLED_BEGIN, SHORT_UNROLLED_LOOP_BEGIN, SHORT_SCALAR_BEGIN, SHORT_SCALAR_LOOP_BEGIN,\n@@ -3358,3 +3358,10 @@\n-  \/\/ if (cnt1 == 0) {\n-  cmpl(cnt1, 0);\n-  jcc(Assembler::equal, END);\n+  \/*\n+     if (cnt1 >= 4) {\n+       if (cnt1 >= 16) {\n+           UNROLLED VECTOR LOOP\n+           SINGLE VECTOR LOOP\n+       }\n+       UNROLLED SCALAR LOOP\n+   }\n+   SINGLE SCALAR LOOP\n+   *\/\n@@ -3365,2 +3372,2 @@\n-\n-  \/\/ } else if (cnt1 < 32) {\n+  cmpl(cnt1, 4);\n+  jcc(Assembler::less, SHORT_SCALAR_BEGIN);\n@@ -3372,0 +3379,1 @@\n+  jmp(SHORT_UNROLLED_BEGIN);\n@@ -3373,44 +3381,0 @@\n-  \/\/ int i = 0;\n-  movl(index, 0);\n-  \/\/ int bound = cnt1 & ~(4 - 1);\n-  bound = coef;\n-  movl(bound, cnt1);\n-  andl(bound, ~(4-1));\n-\n-  \/\/ for (; i < bound; i += 4) {\n-  bind(SHORT_UNROLLED_LOOP_BEGIN);\n-  \/\/ i < bound;\n-  cmpl(index, bound);\n-  jccb(Assembler::greaterEqual, SHORT_SCALAR_LOOP_BEGIN);\n-  for (int idx = 0; idx < 4; idx++) {\n-    \/\/ h = (31 * h) or (h << 5 - h);\n-    movl(tmp, result);\n-    shll(result, 5);\n-    subl(result, tmp);\n-    \/\/ h += ary1[i];\n-    arrays_hashcode_elload(tmp, Address(ary1, index, Address::times(elsize), idx * elsize), eltype, is_string_hashcode);\n-    addl(result, tmp);\n-  }\n-  addl(index, 4);\n-  jmpb(SHORT_UNROLLED_LOOP_BEGIN);\n-  \/\/ }\n-  \/\/ for (; i < cnt1; i += 1) {\n-  bind(SHORT_SCALAR_LOOP_BEGIN);\n-  \/\/ i < cnt1;\n-  cmpl(index, cnt1);\n-  jcc(Assembler::greaterEqual, END);\n-\n-  \/\/ h = (31 * h) or (h << 5 - h);\n-  movl(tmp, result);\n-  shll(result, 5);\n-  subl(result, tmp);\n-  \/\/ h += ary1[i];\n-  arrays_hashcode_elload(tmp, Address(ary1, index, Address::times(elsize)), eltype, is_string_hashcode);\n-  addl(result, tmp);\n-  \/\/ i += 1;\n-  incrementl(index);\n-  jmpb(SHORT_SCALAR_LOOP_BEGIN);\n-  \/\/ }\n-\n-  if (generate_vectorized_loop) {\n-  \/\/ } else { \/\/ cnt1 >= 32\n@@ -3452,0 +3416,2 @@\n+  if (generate_vectorized_loop) {\n+  \/\/ if (cnt1 >= 32) {\n@@ -3523,1 +3489,0 @@\n-  cmpl(index, 0);\n@@ -3546,0 +3511,1 @@\n+  jmp(END);\n@@ -3547,0 +3513,48 @@\n+\n+  \/\/ } else if (cnt1 < 32) {\n+\n+  bind(SHORT_UNROLLED_BEGIN);\n+  \/\/ int i = 0;\n+  xorl(index, index);\n+  \/\/ int bound = cnt1 & ~(4 - 1);\n+  bound = coef;\n+  movl(bound, cnt1);\n+  andl(bound, ~(4-1));\n+\n+  \/\/ for (; i < bound; i += 4) {\n+  bind(SHORT_UNROLLED_LOOP_BEGIN);\n+  \/\/ i < bound;\n+  cmpl(index, bound);\n+  jccb(Assembler::greaterEqual, SHORT_SCALAR_LOOP_BEGIN);\n+  for (int idx = 0; idx < 4; idx++) {\n+    \/\/ h = (31 * h) or (h << 5 - h);\n+    movl(tmp, result);\n+    shll(result, 5);\n+    subl(result, tmp);\n+    \/\/ h += ary1[i];\n+    arrays_hashcode_elload(tmp, Address(ary1, index, Address::times(elsize), idx * elsize), eltype, is_string_hashcode);\n+    addl(result, tmp);\n+  }\n+  addl(index, 4);\n+  jmpb(SHORT_UNROLLED_LOOP_BEGIN);\n+  \/\/ }\n+  \/\/ for (; i < cnt1; i += 1) {\n+  bind(SHORT_SCALAR_BEGIN);\n+  xorl(index, index);\n+  bind(SHORT_SCALAR_LOOP_BEGIN);\n+  \/\/ i < cnt1;\n+  cmpl(index, cnt1);\n+  jcc(Assembler::greaterEqual, END);\n+\n+  \/\/ h = (31 * h) or (h << 5 - h);\n+  movl(tmp, result);\n+  shll(result, 5);\n+  subl(result, tmp);\n+  \/\/ h += ary1[i];\n+  arrays_hashcode_elload(tmp, Address(ary1, index, Address::times(elsize)), eltype, is_string_hashcode);\n+  addl(result, tmp);\n+  \/\/ i += 1;\n+  incrementl(index);\n+  jmpb(SHORT_SCALAR_LOOP_BEGIN);\n+  \/\/ }\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":65,"deletions":51,"binary":false,"changes":116,"status":"modified"}]}