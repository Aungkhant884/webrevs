{"files":[{"patch":"@@ -53,0 +53,1 @@\n+#include <string.h>\n@@ -84,0 +85,32 @@\n+static const char* INTEL_SYNTAX_OP = \"intel\";\n+\n+typedef struct {\n+  bool intel_syntax;\n+} Options;\n+\n+static Options parse_options(const char* options, printf_callback_t printf_callback, void* printf_stream) {\n+  Options ops;\n+  \/\/ initialize with defaults\n+  ops.intel_syntax = false;\n+\n+  const char* cursor = options;\n+  while (*cursor != '\\0') {\n+    if (*cursor == ',') {\n+      cursor++;\n+    }\n+    if (strncmp(cursor, INTEL_SYNTAX_OP, strlen(INTEL_SYNTAX_OP)) == 0) {\n+      cursor += strlen(INTEL_SYNTAX_OP);\n+      ops.intel_syntax = true;\n+    } else {\n+      const char* end = strchr(cursor, ',');\n+      if (end == NULL) {\n+        end = strchr(cursor, '\\0');\n+      }\n+      print(\"Unknown PrintAssembly option: %.*s\\n\", (int) (end - cursor), cursor);\n+      cursor = end;\n+    }\n+  }\n+\n+  return ops;\n+}\n+\n@@ -89,1 +122,1 @@\n-                                  void* (*event_callback)(void*, const char*, void*),\n+                                  event_callback_t event_callback,\n@@ -91,1 +124,1 @@\n-                                  int (*printf_callback)(void*, const char*, ...),\n+                                  printf_callback_t printf_callback,\n@@ -117,2 +150,2 @@\n-  \/\/ TODO: Support intel syntax\n-  cs_option(cs_handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);\n+  Options ops = parse_options(options, printf_callback, printf_stream);\n+  cs_option(cs_handle, CS_OPT_SYNTAX, ops.intel_syntax ? CS_OPT_SYNTAX_INTEL : CS_OPT_SYNTAX_ATT);\n","filename":"src\/utils\/hsdis\/capstone\/hsdis-capstone.c","additions":37,"deletions":4,"binary":false,"changes":41,"status":"modified"}]}