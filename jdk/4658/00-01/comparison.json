{"files":[{"patch":"@@ -177,4 +177,0 @@\n-  product(bool,  LoopUnrollMaximizeStrideLimit, true, DIAGNOSTIC,           \\\n-          \"Allow large strides in loops during unrolling, allowing more \"   \\\n-          \"loops to be undrolled\")                                          \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -880,12 +880,6 @@\n-  if (LoopUnrollMaximizeStrideLimit) {\n-    \/\/ Prevent orverflow when multiplying stride by 2, in C2, leave some space for +\/- 1\n-    \/\/ Note: min_jint = -max_jint - 1 (mathematically), abs(min_jint) = 1 (reality)\n-    \/\/ Stride gets doubled with every unroll iteration\n-    const int mid = max_jint \/ 2 - 2;\n-\n-    if (stride_con < -mid || stride_con > mid)\n-      return false;\n-  } else {\n-      \/\/ Check for initial stride being a small enough constant\n-      if (abs(cl->stride_con()) > (1<<2)*future_unroll_cnt) return false;\n-  }\n+  \/\/ Check for initial stride being a small enough constant\n+  const int initial_stride_sz = MAX2(1<<2, Matcher::max_vector_size(T_BYTE) \/ 2);\n+  \/\/ Maximum stride size should protect against overflow, when doubling stride unroll_count times\n+  const int max_stride_size = MIN2(max_jint \/ 2 - 2, initial_stride_sz * future_unroll_cnt);\n+  \/\/ No abs() use; abs(min_jint) = 1\n+  if (stride_con < -max_stride_size || stride_con > max_stride_size) return false;\n@@ -2015,4 +2009,2 @@\n-  assert(old_trip_count > 1 &&\n-      (!adjust_min_trip ||\n-      (LoopUnrollMaximizeStrideLimit && stride_p <= max_jint \/ 2 - 2) ||\n-      (!LoopUnrollMaximizeStrideLimit && stride_p <= (1<<3)*loop_head->unrolled_count())), \"sanity\");\n+  assert(old_trip_count > 1 && (!adjust_min_trip || stride_p <=\n+    MIN2(max_jint \/ 2 - 2, MAX2(1<<2, Matcher::max_vector_size(T_BYTE)) * loop_head->unrolled_count())), \"sanity\");\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"}]}