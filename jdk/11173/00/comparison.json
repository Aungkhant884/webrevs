{"files":[{"patch":"@@ -38,0 +38,1 @@\n+#include \"utilities\/concurrentHashTableTasks.inline.hpp\"\n@@ -243,0 +244,1 @@\n+  using CHTScanTask = CardSetHash::ScanTask;\n@@ -244,0 +246,1 @@\n+  const static uint BucketClaimSize = 16;\n@@ -249,0 +252,1 @@\n+  CHTScanTask _table_scanner;\n@@ -294,1 +298,2 @@\n-    _table(mm, initial_log_table_size, false) {\n+    _table(mm, initial_log_table_size, false),\n+    _table_scanner(&_table, BucketClaimSize) {\n@@ -335,1 +340,1 @@\n-    _table.do_safepoint_scan(cl);\n+    _table_scanner.do_safepoint_scan(cl);\n@@ -350,0 +355,4 @@\n+  void reset_table_scanner() {\n+    _table_scanner.set(&_table, BucketClaimSize);\n+  }\n+\n@@ -1032,0 +1041,4 @@\n+\n+void G1CardSet::reset_table_scanner() {\n+  _table->reset_table_scanner();\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.cpp","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -381,0 +381,2 @@\n+  void reset_table_scanner();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -919,0 +919,3 @@\n+  \/\/ we call prepare_remset_for_scan unconditionally because optional evacuation doesn't not call this method again.\n+  r->prepare_remset_for_scan();\n+\n@@ -1361,1 +1364,1 @@\n-        g1h->collection_set_iterate_increment_from(&combined, &_hr_claimer, worker_id);\n+        g1h->collection_set_iterate_increment_from(&combined, nullptr, worker_id);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -223,0 +223,4 @@\n+void HeapRegion::prepare_remset_for_scan() {\n+  return _rem_set->reset_table_scanner();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -460,0 +460,2 @@\n+  void prepare_remset_for_scan();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,0 +86,4 @@\n+void HeapRegionRemSet::reset_table_scanner() {\n+  _card_set.reset_table_scanner();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,0 +125,2 @@\n+  void reset_table_scanner();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+      _next = 0;\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTableTasks.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}