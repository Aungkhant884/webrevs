{"files":[{"patch":"@@ -380,1 +380,1 @@\n-  _max_num_tasks(ParallelGCThreads),\n+  _max_num_tasks(MAX2(ConcGCThreads, ParallelGCThreads)),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -151,1 +151,0 @@\n-          constraint(ConcGCThreadsConstraintFunc,AfterErgo)                 \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -70,15 +70,0 @@\n-\/\/ As ConcGCThreads should be smaller than ParallelGCThreads,\n-\/\/ we need constraint function.\n-JVMFlag::Error ConcGCThreadsConstraintFunc(uint value, bool verbose) {\n-  \/\/ G1 GC use ConcGCThreads.\n-  if (GCConfig::is_gc_selected(CollectedHeap::G1) && (value > ParallelGCThreads)) {\n-    JVMFlag::printError(verbose,\n-                        \"ConcGCThreads (\" UINT32_FORMAT \") must be \"\n-                        \"less than or equal to ParallelGCThreads (\" UINT32_FORMAT \")\\n\",\n-                        value, ParallelGCThreads);\n-    return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-\n-  return JVMFlag::SUCCESS;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n- f(uint,   ConcGCThreadsConstraintFunc)                        \\\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        runTest(false, \"-XX:ConcGCThreads=4\", \"-XX:ParallelGCThreads=3\");\n+        runTest(true, \"-XX:ConcGCThreads=4\", \"-XX:ParallelGCThreads=3\");\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMarkStackSizes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}