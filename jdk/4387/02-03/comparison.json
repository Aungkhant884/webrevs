{"files":[{"patch":"@@ -1506,3 +1506,7 @@\n-          \/\/ Chain of AddP: (AddP base (AddP base )) must keep the same base after sinking. We don't add a CastPP here\n-          \/\/ when the first one is sunk so if the second one is not, their bases remain the same. A CastPP of the base\n-          \/\/ is only added once both AddP nodes are sunk (see special code for AddP after the cast is created).\n+          \/\/ Chain of AddP: (AddP base (AddP base )) must keep the same base after sinking so:\n+          \/\/ 1- We don't add a CastPP here when the first one is sunk so if the second one is not, their bases remain\n+          \/\/ the same.\n+          \/\/ (see 2- below)\n+          assert(!x->is_AddP() || !x->in(AddPNode::Address)->is_AddP() ||\n+                 x->in(AddPNode::Address)->in(AddPNode::Base) == x->in(AddPNode::Base) ||\n+                 !x->in(AddPNode::Address)->in(AddPNode::Base)->eqv_uncast(x->in(AddPNode::Base)), \"unexpected AddP shape\");\n@@ -1523,0 +1527,2 @@\n+                \/\/ Chain of AddP:\n+                \/\/ 2- A CastPP of the base is only added now that both AddP nodes are sunk\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"}]}