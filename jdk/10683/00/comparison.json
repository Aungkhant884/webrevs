{"files":[{"patch":"@@ -58,0 +58,1 @@\n+    private static final String JAVA_LOCALE_USE_OLD_ISO_CODES;\n@@ -77,0 +78,1 @@\n+        JAVA_LOCALE_USE_OLD_ISO_CODES = getProperty(props, \"java.locale.useOldISOCodes\", \"\");\n@@ -246,0 +248,11 @@\n+\n+    \/**\n+     * {@return the {@code java.locale.useOldISOCodes} system property}\n+     *\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\/\n+    public static String javaLocaleUseOldISOCodes() {\n+        return JAVA_LOCALE_USE_OLD_ISO_CODES;\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/StaticProperty.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import jdk.internal.util.StaticProperty;\n@@ -104,0 +105,2 @@\n+     * The system property \"java.locale.useOldISOCodes\" is not security sensitive,\n+     * so no need to ensure privileged access here.\n@@ -105,2 +108,1 @@\n-    private static final boolean OLD_ISO_CODES = GetPropertyAction.privilegedGetProperties()\n-            .getProperty(\"java.locale.useOldISOCodes\", \"false\")\n+    private static final boolean OLD_ISO_CODES = StaticProperty.javaLocaleUseOldISOCodes()\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/BaseLocale.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/**\n+ * @test\n+ * @bug 8295232\n+ * @summary Ensures java.locale.useOldISOCodes is statically initialized\n+ * @library \/test\/lib\n+ * @run main UseOldISOCodesTest\n+ *\/\n+import java.util.Locale;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class UseOldISOCodesTest {\n+    public static void main(String[] args) throws Exception {\n+        ProcessTools.executeTestJvm(\"-Djava.locale.useOldISOCodes=true\", \"UseOldISOCodesTest$Runner\")\n+                .outputTo(System.out)\n+                .errorTo(System.err)\n+                .shouldHaveExitValue(0);\n+    }\n+\n+    static class Runner {\n+        private static final String obsoleteCode = \"iw\";\n+        private static final String newCode = \"he\";\n+\n+        public static void main(String[] args) {\n+            System.setProperty(\"java.locale.useOldISOCodes\", \"false\");\n+            Locale locale = Locale.of(newCode);\n+            if(!obsoleteCode.equals(locale.getLanguage())){\n+                throw new RuntimeException(\"Expected that newcode mapped to old \");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Locale\/UseOldISOCodesTest.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"}]}