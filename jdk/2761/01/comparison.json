{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,0 @@\n-import javax.swing.BorderFactory;\n-import javax.swing.border.Border;\n@@ -123,0 +121,5 @@\n+\n+        if (paintTextR.width <= 0 || paintTextR.height <= 0) {\n+            return;\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalToolTipUI.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8262085\n+ * @summary Tests tooltip for not throwing IllegalArgumentException on fast switching between frames.\n+ * @run main FastTooltipSwitchIAE\n+ *\/\n+\n+import javax.swing.JToolTip;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+\n+public class FastTooltipSwitchIAE {\n+    static Dimension oneByOneSize = new Dimension(1, 1);\n+\n+    public static void main(String[] args) {\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            try {\n+                SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+                SwingUtilities.invokeAndWait(FastTooltipSwitchIAE::doTest);\n+                System.out.println(\"Test passed for LookAndFeel \" + laf.getClassName());\n+            } catch (Exception e) {\n+                throw new RuntimeException(\"Test failed for \" + laf.getClassName(), e);\n+            }\n+        }\n+    }\n+\n+    private static void setLookAndFeel(final UIManager.LookAndFeelInfo laf) {\n+        try {\n+            System.out.println(\"LookAndFeel: \" + laf.getClassName());\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException |\n+                UnsupportedLookAndFeelException | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void doTest() {\n+        JToolTip toolTip = new JToolTip();\n+        toolTip.setTipText(\"<html><h1>Hello world<\/h1><\/html>\");\n+        toolTip.setMinimumSize(oneByOneSize);\n+        toolTip.setMaximumSize(oneByOneSize);\n+        toolTip.setPreferredSize(oneByOneSize);\n+        toolTip.setBounds(100, 100, 1, 1);\n+\n+        BufferedImage img = new BufferedImage(100, 100, BufferedImage.TYPE_INT_ARGB);\n+        Graphics2D g2d = img.createGraphics();\n+\n+        toolTip.paint(g2d);\n+\n+        g2d.dispose();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JToolTip\/FastTooltipSwitchIAE.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"}]}