{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,0 +113,1 @@\n+ * @see javax.lang.model##elementsAndTypes Element and Types\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/package-info.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- * models the declarations, that is <em>definitions<\/em>, of elements while\n+ * models the declarations, that is the <em>definitions<\/em>, of elements while\n@@ -114,2 +114,2 @@\n- * javax.lang.model.element.Element#asType() mapped to} some type. For\n- * classes and interfaces, their elements get {@linkplain\n+ * javax.lang.model.element.Element#asType() mapped to} some type.\n+ * The elements for classes and interfaces get {@linkplain\n@@ -117,2 +117,8 @@\n- * prototypical type. Conversely, in general, many types can map to a\n- * given type element. For example, the type mirror for the raw type\n+ * prototypical type.\n+ * (If a class or interface is generic, its prototypical type mirror\n+ * is parameterized with type arguments matching the type variables of\n+ * the declaration. Otherwise, for a non-generic class or interface,\n+ * the prototypical type mirror corresponds to an unannotated use of\n+ * the type.)\n+ * Conversely, in general, many types can map to\n+ * the same {@linkplain javax.lang.model.element.TypeElement type element}. For example, the type mirror for the raw type\n@@ -122,5 +128,10 @@\n- * to} the element for {@code java.util.Set}. Several kinds of types\n- * can be {@linkplain\n- * javax.lang.model.util.Types#asElement(TypeMirror) mapped to\n- * elements}, but other kinds of types do <em>not<\/em> have an element\n- * mapping.\n+ * to} the type element for {@code java.util.Set}. Several kinds of\n+ * types can be mapped to elements, but other kinds of types do\n+ * <em>not<\/em> have an {@linkplain\n+ * javax.lang.model.util.Types#asElement(TypeMirror) element mapping}.\n+ * For example, the type mirror of an {@linkplain\n+ * javax.lang.model.type.ExecutableType executable type} does\n+ * <em>not<\/em> have an element mapping while a {@linkplain\n+ * javax.lang.model.type.DeclaredType declared type} would map to a\n+ * {@linkplain javax.lang.model.element.TypeElement type element}, as\n+ * discussed above.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/package-info.java","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+ * @see javax.lang.model##elementsAndTypes Element and Types\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/type\/package-info.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}