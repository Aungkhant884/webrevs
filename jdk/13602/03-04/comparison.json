{"files":[{"patch":"@@ -115,0 +115,21 @@\n+\/\/-----------------------------C2GeneralStub-----------------------------------\n+\/\/ A generalized stub that can be used to implement an arbitrary stub in a\n+\/\/ type-safe manner. An example:\n+\/\/\n+\/\/ Register dst; XMMRegister src;\n+\/\/ \/\/ The lambda defining how the code is emitted in the stub\n+\/\/ auto slowpath = [](C2_MacroAssembler& masm, C2GeneralStub<Register, XMMRegister>& stub) {\n+\/\/   \/\/ Access the saved data in a type safe manner\n+\/\/   Register dst = stub.get<0>();\n+\/\/   XMMRegister src = stub.get<1>();\n+\/\/   masm.bind(stub.entry());\n+\/\/   ...\n+\/\/   masm.jump(stub.continuation());\n+\/\/ }\n+\/\/ \/\/ Create a stub with 2 data fields being dst and src, a max size of 4 bytes\n+\/\/ \/\/ and predefined emission function\n+\/\/ auto stub = C2CodeStub::make<Register, XMMRegister>(dst, src, 4, slowpath);\n+\/\/ __ jump_conditional(stub->entry());\n+\/\/ ...\n+\/\/ __ bind(stub->continuation());\n+\/\/\n","filename":"src\/hotspot\/share\/opto\/c2_CodeStubs.hpp","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"}]}