{"files":[{"patch":"@@ -86,1 +86,1 @@\n-    _rs_length_seq(TruncatedSeqLength),\n+    _card_rs_length_seq(TruncatedSeqLength),\n@@ -108,1 +108,1 @@\n-  _rs_length_seq.set_initial(0);\n+  _card_rs_length_seq.set_initial(0);\n@@ -220,2 +220,2 @@\n-void G1Analytics::report_rs_length(double rs_length, bool for_young_only_phase) {\n-  _rs_length_seq.add(rs_length, for_young_only_phase);\n+void G1Analytics::report_card_rs_length(double card_rs_length, bool for_young_only_phase) {\n+  _card_rs_length_seq.add(card_rs_length, for_young_only_phase);\n@@ -248,2 +248,2 @@\n-size_t G1Analytics::predict_scan_card_num(size_t rs_length, bool for_young_only_phase) const {\n-  return rs_length * predict_in_unit_interval(&_card_scan_to_merge_ratio_seq, for_young_only_phase);\n+size_t G1Analytics::predict_scan_card_num(size_t card_rs_length, bool for_young_only_phase) const {\n+  return card_rs_length * predict_in_unit_interval(&_card_scan_to_merge_ratio_seq, for_young_only_phase);\n@@ -288,2 +288,2 @@\n-size_t G1Analytics::predict_rs_length(bool for_young_only_phase) const {\n-  return predict_size(&_rs_length_seq, for_young_only_phase);\n+size_t G1Analytics::predict_card_rs_length(bool for_young_only_phase) const {\n+  return predict_size(&_card_rs_length_seq, for_young_only_phase);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-  G1PhaseDependentSeq _rs_length_seq;\n+  G1PhaseDependentSeq _card_rs_length_seq;\n@@ -135,1 +135,0 @@\n-  void report_rs_length_diff(double rs_length_diff, bool for_young_only_phase);\n@@ -141,1 +140,1 @@\n-  void report_rs_length(double rs_length, bool for_young_only_phase);\n+  void report_card_rs_length(double card_rs_length, bool for_young_only_phase);\n@@ -151,1 +150,1 @@\n-  \/\/ Predict how many of the given remembered set of length rs_length will add to\n+  \/\/ Predict how many of the given remembered set of length card_rs_length will add to\n@@ -153,1 +152,1 @@\n-  size_t predict_scan_card_num(size_t rs_length, bool for_young_only_phase) const;\n+  size_t predict_scan_card_num(size_t card_rs_length, bool for_young_only_phase) const;\n@@ -172,1 +171,1 @@\n-  size_t predict_rs_length(bool for_young_only_phase) const;\n+  size_t predict_card_rs_length(bool for_young_only_phase) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.hpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -282,1 +282,1 @@\n-  size_t _sampled_rs_length;\n+  size_t _sampled_card_rs_length;\n@@ -287,1 +287,1 @@\n-    _cset(cset), _sampled_rs_length(0), _sampled_code_root_rs_length(0) {}\n+    _cset(cset), _sampled_card_rs_length(0), _sampled_code_root_rs_length(0) {}\n@@ -291,1 +291,1 @@\n-    _sampled_rs_length += rem_set->occupied();\n+    _sampled_card_rs_length += rem_set->occupied();\n@@ -296,1 +296,1 @@\n-  size_t sampled_rs_length() const { return _sampled_rs_length; }\n+  size_t sampled_card_rs_length() const { return _sampled_card_rs_length; }\n@@ -317,1 +317,1 @@\n-    _policy->revise_young_list_target_length(cl.sampled_rs_length(), cl.sampled_code_root_rs_length());\n+    _policy->revise_young_list_target_length(cl.sampled_card_rs_length(), cl.sampled_code_root_rs_length());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  _rs_length(0),\n+  _card_rs_length(0),\n@@ -192,1 +192,1 @@\n-                             _analytics->predict_rs_length(for_young_only_phase),\n+                             _analytics->predict_card_rs_length(for_young_only_phase),\n@@ -196,1 +196,1 @@\n-void G1Policy::update_young_length_bounds(size_t pending_cards, size_t rs_length, size_t code_root_rs_length) {\n+void G1Policy::update_young_length_bounds(size_t pending_cards, size_t card_rs_length, size_t code_root_rs_length) {\n@@ -199,1 +199,1 @@\n-  uint new_young_list_desired_length = calculate_young_desired_length(pending_cards, rs_length, code_root_rs_length);\n+  uint new_young_list_desired_length = calculate_young_desired_length(pending_cards, card_rs_length, code_root_rs_length);\n@@ -203,1 +203,1 @@\n-  log_trace(gc, ergo, heap)(\"Young list length update: pending cards %zu rs_length %zu old target %u desired: %u target: %u max: %u\",\n+  log_trace(gc, ergo, heap)(\"Young list length update: pending cards %zu card_rs_length %zu old target %u desired: %u target: %u max: %u\",\n@@ -205,1 +205,1 @@\n-                            rs_length,\n+                            card_rs_length,\n@@ -239,1 +239,1 @@\n-                                              size_t rs_length,\n+                                              size_t card_rs_length,\n@@ -273,1 +273,1 @@\n-    double base_time_ms = predict_base_time_ms(pending_cards, rs_length, code_root_rs_length);\n+    double base_time_ms = predict_base_time_ms(pending_cards, card_rs_length, code_root_rs_length);\n@@ -556,1 +556,1 @@\n-void G1Policy::revise_young_list_target_length(size_t rs_length, size_t code_root_rs_length) {\n+void G1Policy::revise_young_list_target_length(size_t card_rs_length, size_t code_root_rs_length) {\n@@ -562,1 +562,1 @@\n-  update_young_length_bounds(pending_cards, rs_length, code_root_rs_length);\n+  update_young_length_bounds(pending_cards, card_rs_length, code_root_rs_length);\n@@ -928,1 +928,1 @@\n-    _analytics->report_rs_length((double)_rs_length, is_young_only_pause);\n+    _analytics->report_card_rs_length((double)_card_rs_length, is_young_only_pause);\n@@ -1051,1 +1051,1 @@\n-                                      size_t rs_length,\n+                                      size_t card_rs_length,\n@@ -1055,1 +1055,1 @@\n-  size_t unique_cards_from_rs = _analytics->predict_scan_card_num(rs_length, in_young_only_phase);\n+  size_t unique_cards_from_rs = _analytics->predict_scan_card_num(card_rs_length, in_young_only_phase);\n@@ -1060,1 +1060,1 @@\n-  double card_merge_time = _analytics->predict_card_merge_time_ms(pending_cards + rs_length, in_young_only_phase);\n+  double card_merge_time = _analytics->predict_card_merge_time_ms(pending_cards + card_rs_length, in_young_only_phase);\n@@ -1068,1 +1068,1 @@\n-  log_trace(gc, ergo, heap)(\"Predicted base time: total %f lb_cards %zu rs_length %zu effective_scanned_cards %zu \"\n+  log_trace(gc, ergo, heap)(\"Predicted base time: total %f lb_cards %zu card_rs_length %zu effective_scanned_cards %zu \"\n@@ -1071,1 +1071,1 @@\n-                            total_time, pending_cards, rs_length, effective_scanned_cards,\n+                            total_time, pending_cards, card_rs_length, effective_scanned_cards,\n@@ -1079,1 +1079,1 @@\n-  size_t rs_length = _analytics->predict_rs_length(for_young_only_phase);\n+  size_t card_rs_length = _analytics->predict_card_rs_length(for_young_only_phase);\n@@ -1081,1 +1081,1 @@\n-  return predict_base_time_ms(pending_cards, rs_length, code_root_rs_length);\n+  return predict_base_time_ms(pending_cards, card_rs_length, code_root_rs_length);\n@@ -1115,2 +1115,2 @@\n-  size_t rs_length = hr->rem_set()->occupied();\n-  size_t scan_card_num = _analytics->predict_scan_card_num(rs_length, for_young_only_phase);\n+  size_t card_rs_length = hr->rem_set()->occupied();\n+  size_t scan_card_num = _analytics->predict_scan_card_num(card_rs_length, for_young_only_phase);\n@@ -1119,1 +1119,1 @@\n-    _analytics->predict_card_merge_time_ms(rs_length, for_young_only_phase) +\n+    _analytics->predict_card_merge_time_ms(card_rs_length, for_young_only_phase) +\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-  size_t _rs_length;\n+  size_t _card_rs_length;\n@@ -135,2 +135,2 @@\n-  void record_rs_length(size_t rs_length) {\n-    _rs_length = rs_length;\n+  void record_card_rs_length(size_t card_rs_length) {\n+    _card_rs_length = card_rs_length;\n@@ -145,1 +145,1 @@\n-  double predict_base_time_ms(size_t pending_cards, size_t rs_length, size_t code_root_length) const;\n+  double predict_base_time_ms(size_t pending_cards, size_t card_rs_length, size_t code_root_length) const;\n@@ -216,1 +216,1 @@\n-  void update_young_length_bounds(size_t pending_cards, size_t rs_length, size_t code_root_rs_length);\n+  void update_young_length_bounds(size_t pending_cards, size_t card_rs_length, size_t code_root_rs_length);\n@@ -222,3 +222,2 @@\n-  \/\/ The parameters are: rs_length represents the prediction of how large the\n-  \/\/ young RSet lengths will be, min_eden_length and max_eden_length are the bounds\n-  \/\/ (inclusive) within eden can grow.\n+  \/\/ Min_eden_length and max_eden_length are the bounds\n+  \/\/ (inclusive) within which eden can grow.\n@@ -244,1 +243,1 @@\n-  uint calculate_young_desired_length(size_t pending_cards, size_t rs_length, size_t code_root_rs_length) const;\n+  uint calculate_young_desired_length(size_t pending_cards, size_t card_rs_length, size_t code_root_rs_length) const;\n@@ -307,1 +306,1 @@\n-  void revise_young_list_target_length(size_t rs_length, size_t code_root_rs_length);\n+  void revise_young_list_target_length(size_t card_rs_length, size_t code_root_rs_length);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -437,1 +437,1 @@\n-  size_t _rs_length;           \/\/ Remembered set size\n+  size_t _card_rs_length;      \/\/ (Card Set) Remembered set size\n@@ -447,1 +447,1 @@\n-      _rs_length(0),\n+      _card_rs_length(0),\n@@ -457,1 +457,1 @@\n-    _rs_length += other->_rs_length;\n+    _card_rs_length += other->_card_rs_length;\n@@ -471,1 +471,1 @@\n-    policy->record_rs_length(_rs_length);\n+    policy->record_card_rs_length(_card_rs_length);\n@@ -498,2 +498,2 @@\n-  void account_rs_length(HeapRegion* r) {\n-    _rs_length += r->rem_set()->occupied();\n+  void account_card_rs_length(HeapRegion* r) {\n+    _card_rs_length += r->rem_set()->occupied();\n@@ -620,1 +620,1 @@\n-    stats()->account_rs_length(r);\n+    stats()->account_card_rs_length(r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}