{"files":[{"patch":"@@ -35,7 +35,16 @@\n- * @library \/compiler\/patches \/test\/lib\n- * @run main\/othervm -Xbatch -XX:Tier4InvocationThreshold=200 -XX:CompileThreshold=100 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n- * @run main\/othervm -Xbatch -XX:Tier4InvocationThreshold=200 -XX:CompileThreshold=100 -XX:+UnlockDiagnosticVMOptions -XX:DisableIntrinsic=_indexOfL_char compiler.intrinsics.string.TestStringLatin1IndexOfChar\n- * @run main\/othervm -Xbatch -XX:Tier4InvocationThreshold=200 -XX:CompileThreshold=100 -XX:+IgnoreUnrecognizedVMOptions -XX:UseSSE=0 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n- * @run main\/othervm -Xbatch -XX:Tier4InvocationThreshold=200 -XX:CompileThreshold=100 -XX:+IgnoreUnrecognizedVMOptions -XX:UseAVX=1 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n- * @run main\/othervm -Xbatch -XX:Tier4InvocationThreshold=200 -XX:CompileThreshold=100 -XX:+IgnoreUnrecognizedVMOptions -XX:UseAVX=2 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n- * @run main\/othervm -Xbatch -XX:Tier4InvocationThreshold=200 -XX:CompileThreshold=100 -XX:+IgnoreUnrecognizedVMOptions -XX:UseAVX=3 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n+ * @requires vm.compiler2.enabled\n+ * @library \/compiler\/patches \/test\/lib \/\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -Xbatch compiler.intrinsics.string.TestStringLatin1IndexOfChar\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -Xbatch -XX:+UnlockDiagnosticVMOptions -XX:DisableIntrinsic=_indexOfL_char compiler.intrinsics.string.TestStringLatin1IndexOfChar\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -Xbatch -XX:+IgnoreUnrecognizedVMOptions -XX:UseSSE=0 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -Xbatch -XX:+IgnoreUnrecognizedVMOptions -XX:UseAVX=1 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -Xbatch -XX:+IgnoreUnrecognizedVMOptions -XX:UseAVX=2 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -Xbatch -XX:+IgnoreUnrecognizedVMOptions -XX:UseAVX=3 compiler.intrinsics.string.TestStringLatin1IndexOfChar\n@@ -47,0 +56,3 @@\n+import jdk.test.whitebox.WhiteBox;\n+import java.lang.reflect.Method;\n+import compiler.whitebox.CompilerWhiteBoxTest;\n@@ -49,0 +61,1 @@\n+    private static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n@@ -52,1 +65,21 @@\n-        for (int i = 0; i < 1_000; ++i) {\/\/repeat such that we enter into C2 code...\n+        Method methodFindOneItem    = TestStringLatin1IndexOfChar.class.getDeclaredMethod(\"findOneItem\");\n+        Method methodWithOffsetTest = TestStringLatin1IndexOfChar.class.getDeclaredMethod(\"withOffsetTest\");\n+        Method methodTestEmpty      = TestStringLatin1IndexOfChar.class.getDeclaredMethod(\"testEmpty\");\n+        Asserts.assertNotNull(methodFindOneItem);\n+        Asserts.assertNotNull(methodWithOffsetTest);\n+        Asserts.assertNotNull(methodTestEmpty);\n+\n+        \/\/ Warmup - profiling must inline the methods\n+        for (int i = 0; i < 10; ++i) {\n+            findOneItem();\n+            withOffsetTest();\n+            testEmpty();\n+        }\n+\n+        \/\/ Compile\n+        WHITE_BOX.enqueueMethodForCompilation(methodFindOneItem,    CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n+        WHITE_BOX.enqueueMethodForCompilation(methodWithOffsetTest, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n+        WHITE_BOX.enqueueMethodForCompilation(methodTestEmpty,      CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n+\n+        \/\/ Run compiled method\n+        for (int i = 0; i < 10; ++i) {\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringLatin1IndexOfChar.java","additions":41,"deletions":8,"binary":false,"changes":49,"status":"modified"}]}