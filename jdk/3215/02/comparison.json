{"files":[{"patch":"@@ -143,1 +143,1 @@\n-  if (cache == NULL)  cache = (void*)Universe::non_oop_word();\n+  if (cache == NULL)  cache = Universe::non_oop_word();\n","filename":"src\/hotspot\/share\/code\/compiledIC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1029,1 +1029,1 @@\n-    (*dest) = cast_to_oop(handle);\n+    *(void**)dest = handle;\n@@ -1031,1 +1031,1 @@\n-    (*dest) = JNIHandles::resolve_non_null(handle);\n+    *dest = JNIHandles::resolve_non_null(handle);\n@@ -2619,1 +2619,1 @@\n-      if (*p == Universe::non_oop_word()) {\n+      if (Universe::contains_non_oop_word(p)) {\n@@ -2715,0 +2715,30 @@\n+void nmethod::print_recorded_oop(int log_n, int i) {\n+  void* value;\n+\n+  if (i == 0) {\n+    value = NULL;\n+  } else {\n+    \/\/ Be careful around non-oop words. Don't create an oop\n+    \/\/ with that value, or it will assert in verification code.\n+    if (Universe::contains_non_oop_word(oop_addr_at(i))) {\n+      value = Universe::non_oop_word();\n+    } else {\n+      value = oop_at(i);\n+    }\n+  }\n+\n+  tty->print(\"#%*d: \" INTPTR_FORMAT \" \", log_n, i, p2i(value));\n+\n+  if (value == Universe::non_oop_word()) {\n+    tty->print(\"non-oop word\");\n+  } else {\n+    if (value == 0) {\n+      tty->print(\"NULL-oop\");\n+    } else {\n+      oop_at(i)->print_value_on(tty);\n+    }\n+  }\n+\n+  tty->cr();\n+}\n+\n@@ -2722,10 +2752,1 @@\n-      oop o = oop_at(i);\n-      tty->print(\"#%*d: \" INTPTR_FORMAT \" \", log_n, i, p2i(o));\n-      if ((void*)o == Universe::non_oop_word()) {\n-        tty->print(\"non-oop word\");\n-      } else if (o == NULL) {\n-        tty->print(\"NULL-oop\");\n-      } else {\n-        o->print_value_on(tty);\n-      }\n-      tty->cr();\n+      print_recorded_oop(log_n, i);\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":34,"deletions":13,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -674,0 +674,1 @@\n+  void print_recorded_oop(int log_n, int index);\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -544,1 +544,0 @@\n-  oop v = *oop_addr();\n@@ -546,2 +545,4 @@\n-  if (v == Universe::non_oop_word())  v = NULL;\n-  return v;\n+  if (Universe::contains_non_oop_word(oop_addr())) {\n+    return NULL;\n+  }\n+  return *oop_addr();\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-      if (*p != Universe::non_oop_word()) {\n+      if (!Universe::contains_non_oop_word(p)) {\n@@ -235,1 +235,1 @@\n-      if (**p != Universe::non_oop_word()) {\n+      if (*p != Universe::non_oop_word()) {\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -719,0 +719,4 @@\n+bool Universe::contains_non_oop_word(void* p) {\n+  return *(void**)p == non_oop_word();\n+}\n+\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -370,1 +370,2 @@\n-  static void*   non_oop_word();\n+  static void*         non_oop_word();\n+  static bool contains_non_oop_word(void* p);\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}