{"files":[{"patch":"@@ -187,1 +187,1 @@\n-    Set<X509Certificate> trustedCerts = new HashSet<>();\n+    private Set<X509Certificate> trustedCerts = new HashSet<>();\n@@ -1558,1 +1558,1 @@\n-        cpcp = new CertPathConstraintsParameters(cert, null, null, null);\n+        cpcp = buildCertPathConstraint(cert, null);\n@@ -1707,1 +1707,1 @@\n-                new CertPathConstraintsParameters(cert, null, null, null);\n+                buildCertPathConstraint(cert, null);\n@@ -2258,2 +2258,1 @@\n-            cpcp = new CertPathConstraintsParameters((X509Certificate)cert,\n-                    null,null, null);\n+            cpcp = buildCertPathConstraint((X509Certificate)cert, null);\n@@ -2488,2 +2487,1 @@\n-                        new CertPathConstraintsParameters((X509Certificate)c,\n-                        null, null, null);\n+                        buildCertPathConstraint((X509Certificate)c, null);\n@@ -2688,3 +2686,2 @@\n-                            new CertPathConstraintsParameters(\n-                            (X509Certificate)signer, null,\n-                            null, null);\n+                            buildCertPathConstraint((X509Certificate)signer,\n+                            null);\n@@ -2704,2 +2701,2 @@\n-                            new CertPathConstraintsParameters(\n-                            (X509Certificate)signer, null, null, null);\n+                            buildCertPathConstraint((X509Certificate)signer,\n+                            null);\n@@ -2730,2 +2727,1 @@\n-                        new CertPathConstraintsParameters(\n-                        (X509Certificate)signer, null, null, null);\n+                        buildCertPathConstraint((X509Certificate)signer, null);\n@@ -3007,1 +3003,1 @@\n-                                x,null, anchor, null);\n+                                x, null, anchor, null);\n@@ -3324,1 +3320,1 @@\n-                new CertPathConstraintsParameters(cert, null, null, null);\n+                buildCertPathConstraint(cert, null);\n@@ -3608,1 +3604,1 @@\n-                new CertPathConstraintsParameters(cert, null, null, null);\n+                buildCertPathConstraint(cert, null);\n@@ -4028,2 +4024,2 @@\n-                        new CertPathConstraintsParameters(\n-                        (X509Certificate)root.snd, null, null, null);\n+                        buildCertPathConstraint((X509Certificate)root.snd,\n+                        null);\n@@ -4100,2 +4096,1 @@\n-                        new CertPathConstraintsParameters(\n-                        p.snd, null, null, null);\n+                        buildCertPathConstraint(p.snd, null);\n@@ -4910,1 +4905,2 @@\n-                if (e.getMessage().contains(\"denyAfter constraint check failed\") &&\n+                String eMessage = e.getMessage();\n+                if (eMessage.contains(\"denyAfter constraint check failed\") &&\n@@ -4912,0 +4908,7 @@\n+                    String separator = \"java.security: \";\n+                    int sepPos = eMessage.indexOf(separator);\n+                    String denyAfterDate = \"0000-00-00\";\n+                    if (sepPos > 0) {\n+                        denyAfterDate = eMessage.substring(sepPos + separator.length(),\n+                                sepPos + separator.length() + denyAfterDate.length());\n+                    }\n@@ -4913,1 +4916,2 @@\n-                            rb.getString(\"whose.sigalg.usagesignedjar\"), label, sigAlg));\n+                            rb.getString(\"whose.sigalg.usagesignedjar\"), label, sigAlg,\n+                            denyAfterDate));\n@@ -5039,1 +5043,1 @@\n-                        \/\/ ignore, when a SecretkeyEntry does not include a cert\n+                        \/\/ ignore, if the keystore has not been loaded\/initialized properly\n@@ -5049,0 +5053,4 @@\n+        if (chain.isEmpty()) {\n+            return null;\n+        }\n+\n@@ -5057,2 +5065,1 @@\n-    private X509Certificate[] convertCerts(Certificate[] certs)\n-        throws Exception {\n+    private X509Certificate[] convertCerts(Certificate[] certs) {\n@@ -5062,7 +5069,2 @@\n-            try {\n-                CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n-                ByteArrayInputStream bais =\n-                        new ByteArrayInputStream(certs[i].getEncoded());\n-                xcerts[i] = (X509Certificate)cf.generateCertificate(bais);\n-            } catch (CertificateException e) {\n-                throw new RuntimeException(e);\n+            if (certs[i] instanceof X509Certificate) {\n+                xcerts[i] = (X509Certificate) certs[i];\n@@ -5074,1 +5076,1 @@\n-    private CertPathConstraintsParameters buildCertPathConstraint (\n+    private CertPathConstraintsParameters buildCertPathConstraint(\n@@ -5095,1 +5097,2 @@\n-        return new CertPathConstraintsParameters(xcert, null, anchor, null);\n+        return new CertPathConstraintsParameters(xcert, Validator.VAR_GENERIC,\n+                anchor, null);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":38,"deletions":35,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -486,1 +486,1 @@\n-        {\"whose.sigalg.usagesignedjar\", \"%1$s uses the %2$s signature algorithm which is considered a security risk and cannot be used to sign JARs after 2019-01-01.\"},\n+        {\"whose.sigalg.usagesignedjar\", \"%1$s uses the %2$s signature algorithm which is considered a security risk and cannot be used to sign JARs after %3$s.\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Resources.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -403,0 +403,2 @@\n+                        String denyAfterDate = entry.substring(entry.indexOf(\" \") + 1);\n+\n@@ -415,1 +417,1 @@\n-                                day);\n+                                day, denyAfterDate);\n@@ -689,0 +691,1 @@\n+        private String denyAfterString;\n@@ -691,1 +694,2 @@\n-        DenyAfterConstraint(String algo, int year, int month, int day) {\n+        DenyAfterConstraint(String algo, int year, int month, int day,\n+                String dateString) {\n@@ -720,0 +724,1 @@\n+            denyAfterString = dateString;\n@@ -754,1 +759,2 @@\n-                        denyAfterDate + \"; params date: \" +\n+                        denyAfterDate + \" (in java.security: \" + denyAfterString +\n+                        \"); params date: \" +\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DisabledAlgorithmConstraints.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"}]}