{"files":[{"patch":"@@ -4462,9 +4462,4 @@\n-            \/\/ (for constructors (but not for constructor references), the error\n-            \/\/ was given when the constructor was resolved)\n-\n-            if (sym.name != names.init || tree.hasTag(REFERENCE)) {\n-                chk.checkDeprecated(tree.pos(), env.info.scope.owner, sym);\n-                chk.checkSunAPI(tree.pos(), sym);\n-                chk.checkProfile(tree.pos(), sym);\n-                chk.checkPreview(tree.pos(), sym);\n-            }\n+            chk.checkDeprecated(tree.pos(), env.info.scope.owner, sym);\n+            chk.checkSunAPI(tree.pos(), sym);\n+            chk.checkProfile(tree.pos(), sym);\n+            chk.checkPreview(tree.pos(), sym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2858,7 +2858,2 @@\n-        Symbol sym = findMethod(env, site,\n-                                    names.init, argtypes,\n-                                    typeargtypes, allowBoxing,\n-                                    useVarargs);\n-        chk.checkDeprecated(pos, env.info.scope.owner, sym);\n-        chk.checkPreview(pos, sym);\n-        return sym;\n+        return findMethod(env, site, names.init, argtypes,\n+                            typeargtypes, allowBoxing, useVarargs);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8257307\n+ * @summary No javac warning when calling deprecated constructor with diamond\n+ * @run compile\/ref=T8257037.out -Xlint -XDrawDiagnostics T8257037.java\n+ *\/\n+\n+public class T8257037 {\n+    T8257037_GenericClass<Object> test = new T8257037_GenericClass<>(); \/\/ use diamond\n+}\n+\n+class T8257037_GenericClass<T> {\n+    @Deprecated\n+    public T8257037_GenericClass() {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8257037\/T8257037.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8257037.java:32:42: compiler.warn.has.been.deprecated: <T>T8257037_GenericClass(), T8257037_GenericClass\n+1 warning\n","filename":"test\/langtools\/tools\/javac\/T8257037\/T8257037.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"}]}