{"files":[{"patch":"@@ -2899,1 +2899,1 @@\n-                                        null;\n+                                                null;\n@@ -2906,2 +2906,1 @@\n-                    }\n-                });\n+                    }});\n@@ -2910,11 +2909,9 @@\n-    \/**\n-     * Find the constructor using diamond inference and do some checks(deprecated and preview).\n-     *\n-     * @param pos          The position to use for error reporting.\n-     * @param env          The environment current at the constructor invocation.\n-     * @param site         The type of class for which a constructor is searched.\n-     *                     The scope of this class has been touched in attribution.\n-     * @param argtypes     The types of the constructor invocation's value arguments.\n-     * @param typeargtypes The types of the constructor invocation's type arguments.\n-     * @param allowBoxing  Allow boxing conversions of arguments.\n-     * @param useVarargs   Box trailing arguments into an array for varargs.\n+    \/** Find the constructor using diamond inference and do some checks(deprecated and preview).\n+     *  @param pos          The position to use for error reporting.\n+     *  @param env          The environment current at the constructor invocation.\n+     *  @param site         The type of class for which a constructor is searched.\n+     *                      The scope of this class has been touched in attribution.\n+     *  @param argtypes     The types of the constructor invocation's value arguments.\n+     *  @param typeargtypes The types of the constructor invocation's type arguments.\n+     *  @param allowBoxing  Allow boxing conversions of arguments.\n+     *  @param useVarargs   Box trailing arguments into an array for varargs.\n@@ -2935,8 +2932,7 @@\n-    \/**\n-     * This method scans all the constructor symbol in a given class scope -\n-     * assuming that the original scope contains a constructor of the kind:\n-     * {@code Foo(X x, Y y)}, where X,Y are class type-variables declared in Foo,\n-     * a method check is executed against the modified constructor type:\n-     * {@code <X,Y>Foo<X,Y>(X x, Y y)}. This is crucial in order to enable diamond\n-     * inference. The inferred return type of the synthetic constructor IS\n-     * the inferred type for the diamond operator.\n+    \/** This method scans all the constructor symbol in a given class scope -\n+     *  assuming that the original scope contains a constructor of the kind:\n+     *  {@code Foo(X x, Y y)}, where X,Y are class type-variables declared in Foo,\n+     *  a method check is executed against the modified constructor type:\n+     *  {@code <X,Y>Foo<X,Y>(X x, Y y)}. This is crucial in order to enable diamond\n+     *  inference. The inferred return type of the synthetic constructor IS\n+     *  the inferred type for the diamond operator.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":18,"deletions":22,"binary":false,"changes":40,"status":"modified"}]}