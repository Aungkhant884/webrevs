{"files":[{"patch":"@@ -134,1 +134,1 @@\n-  assert(cb, \"sanity\");\n+  assert(cb != NULL, \"sanity\");\n","filename":"src\/hotspot\/cpu\/x86\/compiledIC_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-#define COMPRESSED_CLASS_POINTERS_DEPENDS_ON_COMPRESSED_OOPS (EnableJVMCI)\n+#define COMPRESSED_CLASS_POINTERS_DEPENDS_ON_COMPRESSED_OOPS EnableJVMCI\n","filename":"src\/hotspot\/cpu\/x86\/globalDefinitions_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -714,2 +714,0 @@\n-  } else {\n-    tty->print(\"unknown\");\n","filename":"src\/hotspot\/share\/code\/compiledIC.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1135,4 +1135,0 @@\n-    if (_immutable_pic_compilation) {\n-      \/\/ Use fake short distance during PIC compilation.\n-      foreign_call_destination = (jlong)(_instructions->start() + pc_offset);\n-    }\n@@ -1174,4 +1170,1 @@\n-      if (!_immutable_pic_compilation) {\n-        \/\/ Do not patch during PIC compilation.\n-        pd_patch_OopConstant(pc_offset, constant, JVMCI_CHECK);\n-      }\n+      pd_patch_OopConstant(pc_offset, constant, JVMCI_CHECK);\n@@ -1179,4 +1172,1 @@\n-      if (!_immutable_pic_compilation) {\n-        \/\/ Do not patch during PIC compilation.\n-        pd_patch_OopConstant(pc_offset, constant, JVMCI_CHECK);\n-      }\n+      pd_patch_OopConstant(pc_offset, constant, JVMCI_CHECK);\n@@ -1184,3 +1174,1 @@\n-      if (!_immutable_pic_compilation) {\n-        pd_patch_MetaspaceConstant(pc_offset, constant, JVMCI_CHECK);\n-      }\n+      pd_patch_MetaspaceConstant(pc_offset, constant, JVMCI_CHECK);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -154,2 +154,0 @@\n-  bool _immutable_pic_compilation;  \/\/ Installer is called for Immutable PIC compilation.\n-\n@@ -183,1 +181,1 @@\n-  CodeInstaller(JVMCIEnv* jvmci_env, bool immutable_pic_compilation) :\n+  CodeInstaller(JVMCIEnv* jvmci_env) :\n@@ -186,2 +184,1 @@\n-    _has_auto_box(false),\n-    _immutable_pic_compilation(immutable_pic_compilation) {}\n+    _has_auto_box(false) {}\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -846,1 +846,0 @@\n-  bool is_immutable_PIC = JVMCIENV->get_HotSpotCompiledCode_isImmutablePIC(compiled_code_handle) > 0;\n@@ -848,1 +847,1 @@\n-  CodeInstaller installer(JVMCIENV, is_immutable_PIC);\n+  CodeInstaller installer(JVMCIENV);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -174,2 +174,1 @@\n-    const void* start = (void*)blob;\n-    return contains(start);\n+    return contains((void*)blob);\n","filename":"src\/hotspot\/share\/memory\/heap.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"memory\/metaspaceClosure.hpp\"\n@@ -77,4 +76,0 @@\n-void MethodCounters::metaspace_pointers_do(MetaspaceClosure* it) {\n-  log_trace(cds)(\"Iter(MethodCounters): %p\", this);\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/methodCounters.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -40,2 +40,0 @@\n-  \/\/ If you add a new field that points to any metaspace object, you\n-  \/\/ must add this field to MethodCounters::metaspace_pointers_do().\n@@ -80,1 +78,0 @@\n-  void metaspace_pointers_do(MetaspaceClosure* it);\n","filename":"src\/hotspot\/share\/oops\/methodCounters.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}