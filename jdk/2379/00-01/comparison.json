{"files":[{"patch":"@@ -559,1 +559,1 @@\n-       \"INT\", false, \"0\")     {\n+       \"INT\", false, \"0\") {\n@@ -565,0 +565,4 @@\n+  uint num = (uint)_parallel_thread_num.value();\n+  uint parallel_thread_num = num == 0\n+      ? MAX2<uint>(1, (uint)os::initial_active_processor_count() * 3 \/ 8)\n+      : num;\n@@ -567,1 +571,1 @@\n-                              (uint)_parallel_thread_num.value());\n+                              parallel_thread_num);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @summary Test of diagnostic command GC.class_histogram -all=true\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.compiler\n- *          java.management\n- *          jdk.internal.jvmstat\/sun.jvmstat.monitor\n- * @run testng ClassHistogramAllTest\n- *\/\n-public class ClassHistogramAllTest extends ClassHistogramTest {\n-    public ClassHistogramAllTest() {\n-        super();\n-        classHistogramArgs = \"-all=true\";\n-    }\n-\n-    \/* See ClassHistogramTest for test cases *\/\n-}\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/ClassHistogramAllTest.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -24,0 +24,1 @@\n+import org.testng.annotations.DataProvider;\n@@ -45,1 +46,0 @@\n-    protected String classHistogramArgs = \"\";\n@@ -53,1 +53,1 @@\n-    public void run(CommandExecutor executor) {\n+    public void run(CommandExecutor executor, String classHistogramArgs) {\n@@ -90,3 +90,21 @@\n-    @Test\n-    public void jmx() {\n-        run(new JMXExecutor());\n+    @DataProvider(name=\"ArgsProvider\")\n+    private Object[][] getArgs() {\n+        return new Object[][] {\n+                {\"\"},\n+                {\"-parallel=0\"},\n+                {\"-parallel=1\"},\n+                {\"-parallel=2\"},\n+                {\"-all=false -parallel=0\"},\n+                {\"-all=false -parallel=1\"},\n+                {\"-all=false -parallel=2\"},\n+                {\"-all=true\"},\n+                {\"-all=true -parallel=0\"},\n+                {\"-all=true -parallel=1\"},\n+                {\"-all=true -parallel=2\"},\n+                {\"-parallel=2 -all=true\"}\n+        };\n+    }\n+\n+    @Test(dataProvider=\"ArgsProvider\")\n+    public void jmx(String args) {\n+        run(new JMXExecutor(), args);\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/ClassHistogramTest.java","additions":23,"deletions":5,"binary":false,"changes":28,"status":"modified"}]}