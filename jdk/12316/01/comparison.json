{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-  void* res = NULL;\n+  void* res = nullptr;\n","filename":"src\/hotspot\/os\/posix\/gc\/z\/zUtils_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -159,2 +159,2 @@\n-    if (fr.fp() == NULL || fr.cb() != NULL ||\n-        fr.sender_pc() == NULL || os::is_first_C_frame(&fr)) break;\n+    if (fr.fp() == nullptr || fr.cb() != nullptr ||\n+        fr.sender_pc() == nullptr || os::is_first_C_frame(&fr)) break;\n@@ -170,1 +170,1 @@\n-    stack[frame_idx] = NULL;\n+    stack[frame_idx] = nullptr;\n@@ -209,1 +209,1 @@\n-  if (native_dir == NULL) {\n+  if (native_dir == nullptr) {\n@@ -224,1 +224,1 @@\n-    if (fullname == NULL) {\n+    if (fullname == nullptr) {\n@@ -254,1 +254,1 @@\n-  DIR *dir = NULL;\n+  DIR *dir = nullptr;\n@@ -258,1 +258,1 @@\n-  if (dir == NULL) return true;\n+  if (dir == nullptr) return true;\n@@ -262,1 +262,1 @@\n-  while (result && (ptr = ::readdir(dir)) != NULL) {\n+  while (result && (ptr = ::readdir(dir)) != nullptr) {\n@@ -274,1 +274,1 @@\n-  if (requested_addr != NULL) {\n+  if (requested_addr != nullptr) {\n@@ -289,1 +289,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -319,1 +319,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -324,1 +324,1 @@\n-  if (base != NULL) {\n+  if (base != nullptr) {\n@@ -331,1 +331,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -333,1 +333,1 @@\n-  if (base != NULL && addr != base) {\n+  if (base != nullptr && addr != base) {\n@@ -337,1 +337,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -344,1 +344,1 @@\n-  assert(base != NULL, \"Base cannot be NULL\");\n+  assert(base != nullptr, \"Base cannot be null\");\n@@ -391,2 +391,2 @@\n-  if (extra_base == NULL) {\n-    return NULL;\n+  if (extra_base == nullptr) {\n+    return nullptr;\n@@ -405,3 +405,3 @@\n-  char* extra_base = reserve_mmapped_memory(extra_size, NULL);\n-  if (extra_base == NULL) {\n-    return NULL;\n+  char* extra_base = reserve_mmapped_memory(extra_size, nullptr);\n+  if (extra_base == nullptr) {\n+    return nullptr;\n@@ -411,1 +411,1 @@\n-  if (replace_existing_mapping_with_file_mapping(aligned_base, size, file_desc) == NULL) {\n+  if (replace_existing_mapping_with_file_mapping(aligned_base, size, file_desc) == nullptr) {\n@@ -454,1 +454,1 @@\n-  int currsec = time(NULL);\n+  int currsec = time(nullptr);\n@@ -593,1 +593,1 @@\n-      { -1, NULL }\n+      { -1, nullptr }\n@@ -598,1 +598,1 @@\n-    const char* locale = setlocale(categories[i].c, NULL);\n+    const char* locale = setlocale(categories[i].c, nullptr);\n@@ -600,1 +600,1 @@\n-                 ((locale != NULL) ? locale : \"<unknown>\"));\n+                 ((locale != nullptr) ? locale : \"<unknown>\"));\n@@ -627,1 +627,1 @@\n-  void* p = ::mmap(NULL, s, PROT_NONE,\n+  void* p = ::mmap(nullptr, s, PROT_NONE,\n@@ -708,1 +708,1 @@\n-  return (void*)::dlopen(NULL, RTLD_FIRST);\n+  return (void*)::dlopen(nullptr, RTLD_FIRST);\n@@ -710,1 +710,1 @@\n-  return (void*)::dlopen(NULL, RTLD_LAZY);\n+  return (void*)::dlopen(nullptr, RTLD_LAZY);\n@@ -722,1 +722,1 @@\n-  const char* l_path = NULL;\n+  const char* l_path = nullptr;\n@@ -724,1 +724,1 @@\n-  char* l_pathdup = NULL;\n+  char* l_pathdup = nullptr;\n@@ -726,1 +726,1 @@\n-  if (l_path != NULL) {\n+  if (l_path != nullptr) {\n@@ -730,1 +730,1 @@\n-  if (l_path == NULL) {\n+  if (l_path == nullptr) {\n@@ -736,1 +736,1 @@\n-    Events::log_dll_message(NULL, \"Unloaded shared library \\\"%s\\\" [\" INTPTR_FORMAT \"]\",\n+    Events::log_dll_message(nullptr, \"Unloaded shared library \\\"%s\\\" [\" INTPTR_FORMAT \"]\",\n@@ -741,1 +741,1 @@\n-    if (error_report == NULL) {\n+    if (error_report == nullptr) {\n@@ -745,1 +745,1 @@\n-    Events::log_dll_message(NULL, \"Attempt to unload shared library \\\"%s\\\" [\" INTPTR_FORMAT \"] failed, %s\",\n+    Events::log_dll_message(nullptr, \"Attempt to unload shared library \\\"%s\\\" [\" INTPTR_FORMAT \"] failed, %s\",\n@@ -788,1 +788,1 @@\n-  assert(dirname != NULL, \"just checking\");\n+  assert(dirname != nullptr, \"just checking\");\n@@ -793,1 +793,1 @@\n-  assert(dirp != NULL, \"just checking\");\n+  assert(dirp != nullptr, \"just checking\");\n@@ -798,1 +798,1 @@\n-  assert(dirp != NULL, \"just checking\");\n+  assert(dirp != nullptr, \"just checking\");\n@@ -838,1 +838,1 @@\n-\/\/            lib_name: Name of library to look in, NULL for shared libs.\n+\/\/            lib_name: Name of library to look in, null for shared libs.\n@@ -852,1 +852,1 @@\n-  if (lib_name != NULL) {\n+  if (lib_name != nullptr) {\n@@ -856,1 +856,1 @@\n-      if ((start = strrchr(lib_name, *os::file_separator())) != NULL) {\n+      if ((start = strrchr(lib_name, *os::file_separator())) != nullptr) {\n@@ -860,1 +860,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -866,1 +866,1 @@\n-  len = (lib_name != NULL ? name_len : 0) + strlen(sym_name) + 2;\n+  len = (lib_name != nullptr ? name_len : 0) + strlen(sym_name) + 2;\n@@ -868,2 +868,2 @@\n-  if (agent_entry_name == NULL) {\n-    return NULL;\n+  if (agent_entry_name == nullptr) {\n+    return nullptr;\n@@ -872,1 +872,1 @@\n-  if (lib_name != NULL) {\n+  if (lib_name != nullptr) {\n@@ -891,1 +891,1 @@\n-  ::nanosleep(&req, NULL);\n+  ::nanosleep(&req, nullptr);\n@@ -918,1 +918,1 @@\n-  if (filename == NULL || outbuf == NULL || outbuflen < 1) {\n+  if (filename == nullptr || outbuf == nullptr || outbuflen < 1) {\n@@ -921,1 +921,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -924,1 +924,1 @@\n-  char* result = NULL;\n+  char* result = nullptr;\n@@ -927,1 +927,1 @@\n-  \/\/ POSIX.1-2008 allows to specify NULL for the output buffer, in which case\n+  \/\/ POSIX.1-2008 allows to specify null for the output buffer, in which case\n@@ -929,2 +929,2 @@\n-  ALLOW_C_FUNCTION(::realpath, char* p = ::realpath(filename, NULL);)\n-  if (p != NULL) {\n+  ALLOW_C_FUNCTION(::realpath, char* p = ::realpath(filename, nullptr);)\n+  if (p != nullptr) {\n@@ -941,1 +941,1 @@\n-    \/\/ that it complains about the NULL we handed down as user buffer.\n+    \/\/ that it complains about the null we handed down as user buffer.\n@@ -947,1 +947,1 @@\n-      if (p != NULL) {\n+      if (p != nullptr) {\n@@ -1069,1 +1069,1 @@\n-    if (cb == NULL || !cb->is_nmethod() || cb->is_frame_complete_at(pc)) {\n+    if (cb == nullptr || !cb->is_nmethod() || cb->is_frame_complete_at(pc)) {\n@@ -1105,1 +1105,1 @@\n-          if (activation.sp() != NULL) {\n+          if (activation.sp() != nullptr) {\n@@ -1209,1 +1209,1 @@\n-static int (*_pthread_condattr_setclock)(pthread_condattr_t *, clockid_t) = NULL;\n+static int (*_pthread_condattr_setclock)(pthread_condattr_t *, clockid_t) = nullptr;\n@@ -1230,1 +1230,1 @@\n-  if (condattr_setclock_func != NULL) {\n+  if (condattr_setclock_func != nullptr) {\n@@ -1239,1 +1239,1 @@\n-  if (_pthread_condattr_setclock != NULL) {\n+  if (_pthread_condattr_setclock != nullptr) {\n@@ -1259,1 +1259,1 @@\n-               (_pthread_condattr_setclock != NULL ? \"\" : \" not\"));\n+               (_pthread_condattr_setclock != nullptr ? \"\" : \" not\"));\n@@ -1637,1 +1637,1 @@\n-  status = pthread_cond_init(&_cond[ABS_INDEX], NULL);\n+  status = pthread_cond_init(&_cond[ABS_INDEX], nullptr);\n@@ -1765,1 +1765,1 @@\n-PlatformMutex::Mutex::Mutex() : _next(NULL) {\n+PlatformMutex::Mutex::Mutex() : _next(nullptr) {\n@@ -1776,1 +1776,1 @@\n-PlatformMutex::Mutex* PlatformMutex::_mutex_freelist = NULL;\n+PlatformMutex::Mutex* PlatformMutex::_mutex_freelist = nullptr;\n@@ -1799,1 +1799,1 @@\n-    if (_impl != NULL) {\n+    if (_impl != nullptr) {\n@@ -1801,1 +1801,1 @@\n-      _impl->_next = NULL;\n+      _impl->_next = nullptr;\n@@ -1810,1 +1810,1 @@\n-  assert(_impl->_next == NULL, \"invariant\");\n+  assert(_impl->_next == nullptr, \"invariant\");\n@@ -1815,1 +1815,1 @@\n-PlatformMonitor::Cond::Cond() : _next(NULL) {\n+PlatformMonitor::Cond::Cond() : _next(nullptr) {\n@@ -1825,1 +1825,1 @@\n-PlatformMonitor::Cond* PlatformMonitor::_cond_freelist = NULL;\n+PlatformMonitor::Cond* PlatformMonitor::_cond_freelist = nullptr;\n@@ -1831,1 +1831,1 @@\n-    if (_impl != NULL) {\n+    if (_impl != nullptr) {\n@@ -1833,1 +1833,1 @@\n-      _impl->_next = NULL;\n+      _impl->_next = nullptr;\n@@ -1842,1 +1842,1 @@\n-  assert(_impl->_next == NULL, \"invariant\");\n+  assert(_impl->_next == nullptr, \"invariant\");\n@@ -1916,1 +1916,1 @@\n-  const char* argv[4] = {\"sh\", \"-c\", cmd, NULL};\n+  const char* argv[4] = {\"sh\", \"-c\", cmd, nullptr};\n@@ -1922,1 +1922,1 @@\n-  int rc = ::posix_spawn(&pid, \"\/bin\/sh\", NULL, NULL, (char**) argv, env);\n+  int rc = ::posix_spawn(&pid, \"\/bin\/sh\", nullptr, nullptr, (char**) argv, env);\n@@ -1992,1 +1992,1 @@\n-  if (abort_hook != NULL) {\n+  if (abort_hook != nullptr) {\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":76,"deletions":76,"binary":false,"changes":152,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,2 +79,2 @@\n-  \/\/ On error, it will return NULL and set errno. The content of 'outbuf' is undefined.\n-  \/\/ On truncation error ('outbuf' too small), it will return NULL and set errno to ENAMETOOLONG.\n+  \/\/ On error, it will return null and set errno. The content of 'outbuf' is undefined.\n+  \/\/ On truncation error ('outbuf' too small), it will return null and set errno to ENAMETOOLONG.\n","filename":"src\/hotspot\/os\/posix\/os_posix.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-static char* backing_store_file_name = NULL;  \/\/ name of the backing store\n+static char* backing_store_file_name = nullptr;  \/\/ name of the backing store\n@@ -70,2 +70,2 @@\n-  if (mapAddress == NULL) {\n-    return NULL;\n+  if (mapAddress == nullptr) {\n+    return nullptr;\n@@ -80,1 +80,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -186,1 +186,1 @@\n-  char* remainder = NULL;\n+  char* remainder = nullptr;\n@@ -197,1 +197,1 @@\n-  if (remainder != NULL && *remainder != '\\0') {\n+  if (remainder != nullptr && *remainder != '\\0') {\n@@ -310,1 +310,1 @@\n-  DIR *dirp = NULL;\n+  DIR *dirp = nullptr;\n@@ -334,1 +334,1 @@\n-  if (dirp == NULL) {\n+  if (dirp == nullptr) {\n@@ -345,1 +345,1 @@\n-    dirp = NULL;\n+    dirp = nullptr;\n@@ -369,1 +369,1 @@\n-  if (dirp == NULL) {\n+  if (dirp == nullptr) {\n@@ -397,1 +397,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -460,1 +460,1 @@\n-  struct passwd* p = NULL;\n+  struct passwd* p = nullptr;\n@@ -463,1 +463,1 @@\n-  if (result != 0 || p == NULL || p->pw_name == NULL || *(p->pw_name) == '\\0') {\n+  if (result != 0 || p == nullptr || p->pw_name == nullptr || *(p->pw_name) == '\\0') {\n@@ -469,1 +469,1 @@\n-      else if (p == NULL) {\n+      else if (p == nullptr) {\n@@ -472,1 +472,1 @@\n-        \/\/ indicating success, but has p == NULL. This was observed when\n+        \/\/ indicating success, but has p == nullptr. This was observed when\n@@ -485,1 +485,1 @@\n-                p->pw_name == NULL ? \"pw_name = NULL\" :\n+                p->pw_name == nullptr ? \"pw_name = null\" :\n@@ -490,1 +490,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -523,1 +523,1 @@\n-  char* oldest_user = NULL;\n+  char* oldest_user = nullptr;\n@@ -547,1 +547,1 @@\n-  if (tmpdirp == NULL) {\n+  if (tmpdirp == nullptr) {\n@@ -549,1 +549,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -559,1 +559,1 @@\n-  while ((dentry = os::readdir(tmpdirp)) != NULL) {\n+  while ((dentry = os::readdir(tmpdirp)) != nullptr) {\n@@ -576,1 +576,1 @@\n-    if (subdirp == NULL) {\n+    if (subdirp == nullptr) {\n@@ -595,1 +595,1 @@\n-    while ((udentry = os::readdir(subdirp)) != NULL) {\n+    while ((udentry = os::readdir(subdirp)) != nullptr) {\n@@ -655,1 +655,1 @@\n-  if (result == NULL) {\n+  if (result == nullptr) {\n@@ -658,1 +658,1 @@\n-    if (result != NULL) *nspid = vmid;\n+    if (result != nullptr) *nspid = vmid;\n@@ -720,1 +720,1 @@\n-  if (dirp == NULL) {\n+  if (dirp == nullptr) {\n@@ -734,1 +734,1 @@\n-  while ((entry = os::readdir(dirp)) != NULL) {\n+  while ((entry = os::readdir(dirp)) != nullptr) {\n@@ -877,1 +877,1 @@\n-  if (dirp == NULL) {\n+  if (dirp == nullptr) {\n@@ -1016,2 +1016,2 @@\n-\/\/ memory region on success or NULL on failure. A return value of\n-\/\/ NULL will ultimately disable the shared memory feature.\n+\/\/ memory region on success or null on failure. A return value of\n+\/\/ null will ultimately disable the shared memory feature.\n@@ -1037,2 +1037,2 @@\n-  if (user_name == NULL)\n-    return NULL;\n+  if (user_name == nullptr)\n+    return nullptr;\n@@ -1045,1 +1045,1 @@\n-  if (short_filename == NULL) {\n+  if (short_filename == nullptr) {\n@@ -1065,1 +1065,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1079,1 +1079,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1134,1 +1134,1 @@\n-  if (backing_store_file_name != NULL) {\n+  if (backing_store_file_name != nullptr) {\n@@ -1139,1 +1139,1 @@\n-    backing_store_file_name = NULL;\n+    backing_store_file_name = nullptr;\n@@ -1180,1 +1180,1 @@\n-  if (luser == NULL) {\n+  if (luser == nullptr) {\n@@ -1261,1 +1261,1 @@\n-    if (_start == NULL) {\n+    if (_start == nullptr) {\n@@ -1274,1 +1274,1 @@\n-  if (_start != NULL) _capacity = size;\n+  if (_start != nullptr) _capacity = size;\n@@ -1286,1 +1286,1 @@\n-  assert((start() != NULL && capacity() > 0), \"verify proper state\");\n+  assert((start() != nullptr && capacity() > 0), \"verify proper state\");\n@@ -1292,1 +1292,1 @@\n-  if (PerfDataSaveToFile || PerfDataSaveFile != NULL) {\n+  if (PerfDataSaveToFile || PerfDataSaveFile != nullptr) {\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":43,"deletions":43,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-struct InitTLSKey { InitTLSKey() { pthread_key_create(&g_jmpbuf_key, NULL); } };\n+struct InitTLSKey { InitTLSKey() { pthread_key_create(&g_jmpbuf_key, nullptr); } };\n@@ -52,1 +52,1 @@\n-    \/\/ Retrieve jump buffer pointer from TLS. If not NULL, it means we set the\n+    \/\/ Retrieve jump buffer pointer from TLS. If not null, it means we set the\n@@ -76,1 +76,1 @@\n-    pthread_setspecific(g_jmpbuf_key, NULL);\n+    pthread_setspecific(g_jmpbuf_key, nullptr);\n@@ -89,1 +89,1 @@\n-  pthread_setspecific(g_jmpbuf_key, NULL);\n+  pthread_setspecific(g_jmpbuf_key, nullptr);\n","filename":"src\/hotspot\/os\/posix\/safefetch_sigjmp.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-  if ((sig == SIGSEGV || sig == SIGBUS) && uc != NULL) {\n+  if ((sig == SIGSEGV || sig == SIGBUS) && uc != nullptr) {\n","filename":"src\/hotspot\/os\/posix\/safefetch_static_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,1 +127,1 @@\n-      assert(_sa[sig] == NULL, \"Overwriting signal handler?\");\n+      assert(_sa[sig] == nullptr, \"Overwriting signal handler?\");\n@@ -137,1 +137,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -158,1 +158,1 @@\n-static get_signal_t get_signal_action = NULL;\n+static get_signal_t get_signal_action = nullptr;\n@@ -172,1 +172,1 @@\n-static Semaphore* sig_semaphore = NULL;\n+static Semaphore* sig_semaphore = nullptr;\n@@ -335,1 +335,1 @@\n-  { -1, NULL }\n+  { -1, nullptr }\n@@ -350,1 +350,1 @@\n-  if (sig_semaphore != NULL) {\n+  if (sig_semaphore != nullptr) {\n@@ -382,1 +382,1 @@\n-  struct sigaction *actp = NULL;\n+  struct sigaction *actp = nullptr;\n@@ -388,1 +388,1 @@\n-  if (actp == NULL) {\n+  if (actp == nullptr) {\n@@ -409,2 +409,2 @@\n-    sa_handler_t hand = NULL;\n-    sa_sigaction_t sa = NULL;\n+    sa_handler_t hand = nullptr;\n+    sa_sigaction_t sa = nullptr;\n@@ -436,1 +436,1 @@\n-    pthread_sigmask(SIG_SETMASK, &oset, NULL);\n+    pthread_sigmask(SIG_SETMASK, &oset, nullptr);\n@@ -447,1 +447,1 @@\n-    if (actp != NULL) {\n+    if (actp != nullptr) {\n@@ -470,1 +470,1 @@\n-\/\/ handling - SIGTRAP may be used for implicit NULL checking, so it makes sense\n+\/\/ handling - SIGTRAP may be used for implicit null checking, so it makes sense\n@@ -501,1 +501,1 @@\n-  ::pthread_sigmask(SIG_UNBLOCK, &set, NULL);\n+  ::pthread_sigmask(SIG_UNBLOCK, &set, nullptr);\n@@ -558,1 +558,1 @@\n-  assert(info != NULL && ucVoid != NULL, \"sanity\");\n+  assert(info != nullptr && ucVoid != nullptr, \"sanity\");\n@@ -587,1 +587,1 @@\n-      ((sig == SIGSEGV || sig == SIGBUS) && info != NULL && info->si_addr == g_assert_poison)) {\n+      ((sig == SIGSEGV || sig == SIGBUS) && info != nullptr && info->si_addr == g_assert_poison)) {\n@@ -595,2 +595,2 @@\n-  address pc = NULL;\n-  if (uc != NULL) {\n+  address pc = nullptr;\n+  if (uc != nullptr) {\n@@ -618,1 +618,1 @@\n-  if (!signal_was_handled && pc != NULL && os::is_readable_pointer(pc)) {\n+  if (!signal_was_handled && pc != nullptr && os::is_readable_pointer(pc)) {\n@@ -621,1 +621,1 @@\n-      if (cb != NULL && cb->is_compiled()) {\n+      if (cb != nullptr && cb->is_compiled()) {\n@@ -628,1 +628,1 @@\n-        assert(deopt != NULL, \"\");\n+        assert(deopt != nullptr, \"\");\n@@ -642,1 +642,1 @@\n-    JavaThread* const jt = (t != NULL && t->is_Java_thread()) ? JavaThread::cast(t) : NULL;\n+    JavaThread* const jt = (t != nullptr && t->is_Java_thread()) ? JavaThread::cast(t) : nullptr;\n@@ -807,1 +807,1 @@\n-  assert(expected_act != NULL, \"Sanity\");\n+  assert(expected_act != nullptr, \"Sanity\");\n@@ -811,2 +811,2 @@\n-  static os_sigaction_t os_sigaction = NULL;\n-  if (os_sigaction == NULL) {\n+  static os_sigaction_t os_sigaction = nullptr;\n+  if (os_sigaction == nullptr) {\n@@ -815,1 +815,1 @@\n-    if (os_sigaction == NULL) return false;\n+    if (os_sigaction == nullptr) return false;\n@@ -818,1 +818,1 @@\n-  os_sigaction(sig, (struct sigaction*)NULL, &act);\n+  os_sigaction(sig, (struct sigaction*)nullptr, &act);\n@@ -1008,1 +1008,1 @@\n-    { -1, -1, NULL, NULL }\n+    { -1, -1, nullptr, nullptr }\n@@ -1039,1 +1039,1 @@\n-    { -1, NULL, NULL }\n+    { -1, nullptr, nullptr }\n@@ -1042,2 +1042,2 @@\n-  const char* s_code = NULL;\n-  const char* s_desc = NULL;\n+  const char* s_code = nullptr;\n+  const char* s_desc = nullptr;\n@@ -1053,2 +1053,2 @@\n-  if (s_code == NULL) {\n-    for (int i = 0; t2[i].s_code != NULL; i ++) {\n+  if (s_code == nullptr) {\n+    for (int i = 0; t2[i].s_code != nullptr; i ++) {\n@@ -1062,1 +1062,1 @@\n-  if (s_code == NULL) {\n+  if (s_code == nullptr) {\n@@ -1104,1 +1104,1 @@\n-  const char* ret = NULL;\n+  const char* ret = nullptr;\n@@ -1216,1 +1216,1 @@\n-\/\/ NULL for an invalid signal number\n+\/\/ null for an invalid signal number\n@@ -1221,1 +1221,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1248,1 +1248,1 @@\n-  sigaction(sig, (struct sigaction*)NULL, &oldAct);\n+  sigaction(sig, (struct sigaction*)nullptr, &oldAct);\n@@ -1289,2 +1289,2 @@\n-  signal_setting_t begin_signal_setting = NULL;\n-  signal_setting_t end_signal_setting = NULL;\n+  signal_setting_t begin_signal_setting = nullptr;\n+  signal_setting_t end_signal_setting = nullptr;\n@@ -1293,1 +1293,1 @@\n-  if (begin_signal_setting != NULL) {\n+  if (begin_signal_setting != nullptr) {\n@@ -1340,1 +1340,1 @@\n-  \/\/ EXC_MASK_BAD_ACCESS needed by all architectures for NULL ptr checking\n+  \/\/ EXC_MASK_BAD_ACCESS needed by all architectures for null ptr checking\n@@ -1430,1 +1430,1 @@\n-  sigaction(sig, NULL, &current_act);\n+  sigaction(sig, nullptr, &current_act);\n@@ -1435,1 +1435,1 @@\n-  if (::pthread_sigmask(\/* ignored *\/ SIG_BLOCK, NULL, &thread_sig_mask) == 0) {\n+  if (::pthread_sigmask(\/* ignored *\/ SIG_BLOCK, nullptr, &thread_sig_mask) == 0) {\n@@ -1444,1 +1444,1 @@\n-  if (expected_act != NULL) {\n+  if (expected_act != nullptr) {\n@@ -1458,1 +1458,1 @@\n-  if (chained_act != NULL) {\n+  if (chained_act != nullptr) {\n@@ -1490,1 +1490,1 @@\n-  sigaction(sig, (struct sigaction*)NULL, &oact);\n+  sigaction(sig, (struct sigaction*)nullptr, &oact);\n@@ -1561,1 +1561,1 @@\n-  pthread_sigmask(SIG_BLOCK, NULL, &caller_sigmask);\n+  pthread_sigmask(SIG_BLOCK, nullptr, &caller_sigmask);\n@@ -1566,1 +1566,1 @@\n-  pthread_sigmask(SIG_UNBLOCK, unblocked_signals(), NULL);\n+  pthread_sigmask(SIG_UNBLOCK, unblocked_signals(), nullptr);\n@@ -1571,1 +1571,1 @@\n-      pthread_sigmask(SIG_UNBLOCK, vm_signals(), NULL);\n+      pthread_sigmask(SIG_UNBLOCK, vm_signals(), nullptr);\n@@ -1574,1 +1574,1 @@\n-      pthread_sigmask(SIG_BLOCK, vm_signals(), NULL);\n+      pthread_sigmask(SIG_BLOCK, vm_signals(), nullptr);\n@@ -1606,2 +1606,2 @@\n-  osthread->set_ucontext(NULL);\n-  osthread->set_siginfo(NULL);\n+  osthread->set_ucontext(nullptr);\n+  osthread->set_siginfo(nullptr);\n@@ -1649,1 +1649,1 @@\n-    assert(thread != NULL, \"%s.\", ss.base());\n+    assert(thread != nullptr, \"%s.\", ss.base());\n@@ -1680,1 +1680,1 @@\n-      pthread_sigmask(SIG_BLOCK, NULL, &suspend_set);\n+      pthread_sigmask(SIG_BLOCK, nullptr, &suspend_set);\n@@ -1740,1 +1740,1 @@\n-  pthread_sigmask(SIG_BLOCK, NULL, &act.sa_mask);\n+  pthread_sigmask(SIG_BLOCK, nullptr, &act.sa_mask);\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":57,"deletions":57,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n-Thread* ThreadCrashProtection::_protected_thread = NULL;\n-ThreadCrashProtection* ThreadCrashProtection::_crash_protection = NULL;\n+Thread* ThreadCrashProtection::_protected_thread = nullptr;\n+ThreadCrashProtection* ThreadCrashProtection::_crash_protection = nullptr;\n@@ -49,1 +49,1 @@\n-  pthread_sigmask(0, NULL, &saved_sig_mask);\n+  pthread_sigmask(0, nullptr, &saved_sig_mask);\n@@ -56,2 +56,2 @@\n-    _crash_protection = NULL;\n-    _protected_thread = NULL;\n+    _crash_protection = nullptr;\n+    _protected_thread = nullptr;\n@@ -61,3 +61,3 @@\n-  pthread_sigmask(SIG_SETMASK, &saved_sig_mask, NULL);\n-  _crash_protection = NULL;\n-  _protected_thread = NULL;\n+  pthread_sigmask(SIG_SETMASK, &saved_sig_mask, nullptr);\n+  _crash_protection = nullptr;\n+  _protected_thread = nullptr;\n@@ -68,1 +68,1 @@\n-  assert(_crash_protection != NULL, \"must have crash protection\");\n+  assert(_crash_protection != nullptr, \"must have crash protection\");\n@@ -75,1 +75,1 @@\n-  if (thread != NULL &&\n+  if (thread != nullptr &&\n@@ -77,1 +77,1 @@\n-      _crash_protection != NULL) {\n+      _crash_protection != nullptr) {\n","filename":"src\/hotspot\/os\/posix\/threadCrashProtection_posix.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    return _crash_protection != NULL && _protected_thread == thr;\n+    return _crash_protection != nullptr && _protected_thread == thr;\n","filename":"src\/hotspot\/os\/posix\/threadCrashProtection_posix.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-  return (Thread*) pthread_getspecific(_thread_key); \/\/ may be NULL\n+  return (Thread*) pthread_getspecific(_thread_key); \/\/ may be null\n","filename":"src\/hotspot\/os\/posix\/threadLocalStorage_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-  address pc = (uc != NULL) ? os::Posix::ucontext_get_pc(uc) : NULL;\n+  address pc = (uc != nullptr) ? os::Posix::ucontext_get_pc(uc) : nullptr;\n@@ -86,1 +86,1 @@\n-  if ((sig == SIGSEGV || sig == SIGBUS) && info != NULL && info->si_addr == g_assert_poison) {\n+  if ((sig == SIGSEGV || sig == SIGBUS) && info != nullptr && info->si_addr == g_assert_poison) {\n@@ -93,1 +93,1 @@\n-  VMError::report_and_die(NULL, sig, pc, info, context);\n+  VMError::report_and_die(nullptr, sig, pc, info, context);\n@@ -119,1 +119,1 @@\n-      if (fault_addr != NULL) {\n+      if (fault_addr != nullptr) {\n","filename":"src\/hotspot\/os\/posix\/vmError_posix.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}