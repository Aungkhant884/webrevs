{"files":[{"patch":"@@ -64,1 +64,1 @@\n-  if (in(1)->Opcode() == Op_AddI) {\n+  if (in(1)->Opcode() == Op_AddI || in(1)->Opcode() == Op_AddL) {\n@@ -420,0 +420,4 @@\n+  \/\/ Convert \"(x-y) - x\" into \"-y\"\n+  if (op1 == Op_SubL && in1->in(1) == in2) {\n+    return new SubLNode(phase->makecon(TypeLong::ZERO), in1->in(2));\n+  }\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    \/\/ Checks x - (x + y) => -y\n+    \/\/ Checks x - (x + y) => 0 - y\n@@ -122,1 +122,1 @@\n-    \/\/ Checks (x - y) - x => -y\n+    \/\/ Checks (x - y) - x => 0 - y\n@@ -130,1 +130,1 @@\n-    \/\/ Checks x - (y + x) => -y\n+    \/\/ Checks x - (y + x) => 0 - y\n@@ -209,1 +209,1 @@\n-    \/\/ Checks (x + y) - y => y\n+    \/\/ Checks (x + y) - y => x\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/SubINodeIdealizationTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @bug 8267265\n+ * @bug 8267265 8272735\n@@ -45,1 +45,2 @@\n-                 \"test16\", \"test17\", \"test18\"})\n+                 \"test16\", \"test17\", \"test18\",\n+                 \"test19\", \"test20\", \"test21\"})\n@@ -66,14 +67,17 @@\n-        Asserts.assertEQ(a - (b + a)      , test5(a, b));\n-        Asserts.assertEQ(0 - (a - b)      , test6(a, b));\n-        Asserts.assertEQ(0 - (a + 2021)   , test7(a, b));\n-        Asserts.assertEQ((a + b) - (a + c), test8(a, b, c));\n-        Asserts.assertEQ((b + a) - (c + a), test9(a, b, c));\n-        Asserts.assertEQ((b + a) - (a + c), test10(a, b, c));\n-        Asserts.assertEQ((a + b) - (c + a), test11(a, b, c));\n-        Asserts.assertEQ(a - (b - c)      , test12(a, b, c));\n-        Asserts.assertEQ(0 - (a >> 63)    , test13(a));\n-        Asserts.assertEQ(0 - (0 - a)      , test14(a));\n-        Asserts.assertEQ(a*b - a*c        , test15(a, b, c));\n-        Asserts.assertEQ(a*b - b*c        , test16(a, b, c));\n-        Asserts.assertEQ(a*c - b*c        , test17(a, b, c));\n-        Asserts.assertEQ(a*b - c*a        , test18(a, b, c));\n+        Asserts.assertEQ((a - b) - a      , test5(a, b));\n+        Asserts.assertEQ(a - (b + a)      , test6(a, b));\n+        Asserts.assertEQ(0 - (a - b)      , test7(a, b));\n+        Asserts.assertEQ(0 - (a + 2021)   , test8(a, b));\n+        Asserts.assertEQ((a + b) - (a + c), test9(a, b, c));\n+        Asserts.assertEQ((b + a) - (c + a), test10(a, b, c));\n+        Asserts.assertEQ((b + a) - (a + c), test11(a, b, c));\n+        Asserts.assertEQ((a + b) - (c + a), test12(a, b, c));\n+        Asserts.assertEQ(a - (b - c)      , test13(a, b, c));\n+        Asserts.assertEQ(0 - (a >> 63)    , test14(a));\n+        Asserts.assertEQ(0 - (0 - a)      , test15(a));\n+        Asserts.assertEQ((a + b) - b      , test16(a, b));\n+        Asserts.assertEQ((a + b) - a      , test17(a, b));\n+        Asserts.assertEQ(a*b - a*c        , test18(a, b, c));\n+        Asserts.assertEQ(a*b - b*c        , test19(a, b, c));\n+        Asserts.assertEQ(a*c - b*c        , test20(a, b, c));\n+        Asserts.assertEQ(a*b - c*a        , test21(a, b, c));\n@@ -116,0 +120,7 @@\n+    @Test\n+    @IR(counts = {IRNode.SUB, \"1\"})\n+    \/\/ Checks (x - y) - x => 0 - y\n+    public long test5(long x, long y) {\n+        return (x - y) - x;\n+    }\n+\n@@ -120,1 +131,1 @@\n-    public long test5(long x, long y) {\n+    public long test6(long x, long y) {\n@@ -127,1 +138,1 @@\n-    public long test6(long x, long y) {\n+    public long test7(long x, long y) {\n@@ -135,1 +146,1 @@\n-    public long test7(long x, long y) {\n+    public long test8(long x, long y) {\n@@ -143,1 +154,1 @@\n-    public long test8(long x, long a, long b) {\n+    public long test9(long x, long a, long b) {\n@@ -151,1 +162,1 @@\n-    public long test9(long x, long a, long b) {\n+    public long test10(long x, long a, long b) {\n@@ -159,1 +170,1 @@\n-    public long test10(long x, long a, long b) {\n+    public long test11(long x, long a, long b) {\n@@ -167,1 +178,1 @@\n-    public long test11(long x, long a, long b) {\n+    public long test12(long x, long a, long b) {\n@@ -176,1 +187,1 @@\n-    public long test12(long a, long b, long c) {\n+    public long test13(long a, long b, long c) {\n@@ -185,1 +196,1 @@\n-    public long test13(long a) {\n+    public long test14(long a) {\n@@ -192,1 +203,1 @@\n-    public long test14(long x) {\n+    public long test15(long x) {\n@@ -196,0 +207,14 @@\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    \/\/ Checks (x + y) - y => x\n+    public long test16(long x, long y) {\n+        return (x + y) - y;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.SUB, IRNode.ADD})\n+    \/\/ Checks (x + y) - x => y\n+    public long test17(long x, long y) {\n+        return (x + y) - x;\n+    }\n+\n@@ -200,1 +225,1 @@\n-    public long test15(long a, long b, long c) {\n+    public long test18(long a, long b, long c) {\n@@ -208,1 +233,1 @@\n-    public long test16(long a, long b, long c) {\n+    public long test19(long a, long b, long c) {\n@@ -216,1 +241,1 @@\n-    public long test17(long a, long b, long c) {\n+    public long test20(long a, long b, long c) {\n@@ -224,1 +249,1 @@\n-    public long test18(long a, long b, long c) {\n+    public long test21(long a, long b, long c) {\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/SubLNodeIdealizationTests.java","additions":55,"deletions":30,"binary":false,"changes":85,"status":"modified"}]}