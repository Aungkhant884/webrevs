{"files":[{"patch":"@@ -562,2 +562,2 @@\n-  if (cb != nullptr && cb->is_adapter_blob()) {\n-    return true;\n+  if (cb == nullptr) {\n+    return false;\n@@ -565,4 +565,4 @@\n-  \/\/ itable stubs also use CompiledICHolder\n-  if (cb != nullptr && cb->is_vtable_blob()) {\n-    VtableStub* s = VtableStubs::entry_point(entry);\n-    return (s != nullptr) && s->is_itable_stub();\n+  if (cb->is_adapter_blob()) {\n+    return true;\n+  } else if (cb->is_vtable_blob()) {\n+    return VtableStubs::is_icholder_entry(entry);\n@@ -570,1 +570,0 @@\n-\n","filename":"src\/hotspot\/share\/code\/compiledIC.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -287,0 +287,7 @@\n+bool VtableStubs::is_icholder_entry(address pc) {\n+  assert(contains(pc), \"must contain all vtable blobs\");\n+  VtableStub* stub = (VtableStub*)(pc - VtableStub::entry_offset());\n+  \/\/ itable stubs use CompiledICHolder.\n+  return stub->is_itable_stub();\n+}\n+\n","filename":"src\/hotspot\/share\/code\/vtableStubs.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -109,0 +109,1 @@\n+  static bool        is_icholder_entry(address pc);                  \/\/ is the blob containing pc (which must be a vtable blob) an icholder?\n","filename":"src\/hotspot\/share\/code\/vtableStubs.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}