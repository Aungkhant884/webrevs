{"files":[{"patch":"@@ -2850,0 +2850,9 @@\n+    private static String oneInManys(String label, int i, int num, int pos) {\n+        if (num == 1) {\n+            return String.format(rb.getString(\"one.in.many1\"), label, pos);\n+        } else {\n+            return String.format(rb.getString(\"one.in.many2\"), label, i,\n+                    num, pos);\n+        }\n+    }\n+\n@@ -2878,1 +2887,0 @@\n-                            out.println(rb.getString(\"Signature.\"));\n@@ -2885,0 +2893,2 @@\n+                                out.printf(rb.getString(\"Certificate.d.\"), ++cc);\n+                                out.println();\n@@ -2893,1 +2903,3 @@\n-                                checkWeak(oneInMany(rb.getString(\"the.certificate\"), cc++, certs.size()), x);\n+                                checkWeak(oneInManys(rb.getString(\n+                                        \"the.certificate\"), cc,\n+                                        certs.size(), pos), x);\n@@ -2902,0 +2914,2 @@\n+                                    out.printf(rb.getString(\"Certificate.d.\"), ++cc);\n+                                    out.println();\n@@ -2910,1 +2924,3 @@\n-                                    checkWeak(oneInMany(rb.getString(\"the.tsa.certificate\"), cc++, certs.size()), x);\n+                                    checkWeak(oneInManys(rb.getString(\n+                                            \"the.tsa.certificate\"), cc,\n+                                            certs.size(), pos), x);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -400,0 +400,1 @@\n+        {\"Certificate.d.\", \"Certificate #%d:\"},\n@@ -401,1 +402,0 @@\n-        {\"Signature.\", \"Signature:\"},\n@@ -468,0 +468,2 @@\n+        {\"one.in.many1\", \"%1$s of signer #%2$d\"},\n+        {\"one.in.many2\", \"%1$s #%2$d of %3$d of signer #%4$d\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Resources.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -683,1 +683,1 @@\n-                .stderrShouldContain(\"The TSA certificate uses a 512-bit RSA key\" +\n+                .stderrShouldContain(\"The TSA certificate of signer #1 uses a 512-bit RSA key\" +\n@@ -725,45 +725,0 @@\n-    static void checkWeak(String file) throws Exception {\n-        verify(file)\n-                .shouldHaveExitValue(0)\n-                .shouldNotContain(\"treated as unsigned\");\n-        verify(file, \"-verbose\")\n-                .shouldHaveExitValue(0)\n-                .shouldNotContain(\"treated as unsigned\")\n-                .shouldMatch(\"Digest algorithm: .*(weak)\")\n-                .shouldMatch(\"Signature algorithm: .*(weak)\")\n-                .shouldMatch(\"Timestamp digest algorithm: .*(weak)\")\n-                .shouldNotMatch(\"Timestamp signature algorithm: .*(weak).*(weak)\")\n-                .shouldMatch(\"Timestamp signature algorithm: .*key.*(weak)\");\n-        verify(file, \"-J-Djava.security.debug=jar\")\n-                .shouldHaveExitValue(0)\n-                .shouldNotMatch(\"SignatureException:.*disabled\");\n-\n-        \/\/ keytool should print out warnings when reading or\n-        \/\/ generating cert\/cert req using legacy algorithms.\n-        String sout = SecurityTools.keytool(\"-printcert -jarfile \" + file)\n-                .stderrShouldContain(\"The TSA certificate uses a 1024-bit RSA key\" +\n-                        \" which is considered a security risk.\" +\n-                        \" This key size will be disabled in a future update.\")\n-                .getStdout();\n-        if (sout.indexOf(\"weak\", sout.indexOf(\"Timestamp:\")) < 0) {\n-            throw new RuntimeException(\"timestamp not weak: \" + sout);\n-        }\n-    }\n-\n-    static void checkHalfWeak(String file) throws Exception {\n-        verify(file)\n-                .shouldHaveExitValue(0)\n-                .shouldNotContain(\"treated as unsigned\");\n-        verify(file, \"-verbose\")\n-                .shouldHaveExitValue(0)\n-                .shouldNotContain(\"treated as unsigned\")\n-                .shouldMatch(\"Digest algorithm: .*(weak)\")\n-                .shouldNotMatch(\"Signature algorithm: .*(weak)\")\n-                .shouldNotMatch(\"Signature algorithm: .*(disabled)\")\n-                .shouldNotMatch(\"Timestamp digest algorithm: .*(weak)\")\n-                .shouldNotMatch(\"Timestamp signature algorithm: .*(weak).*(weak)\")\n-                .shouldNotMatch(\"Timestamp signature algorithm: .*(disabled).*(disabled)\")\n-                .shouldNotMatch(\"Timestamp signature algorithm: .*key.*(weak)\")\n-                .shouldNotMatch(\"Timestamp signature algorithm: .*key.*(disabled)\");\n-    }\n-\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/TimestampCheck.java","additions":1,"deletions":46,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6890872 8168882\n+ * @bug 6890872 8168882 8257722\n@@ -45,0 +45,1 @@\n+import java.nio.file.Path;\n@@ -48,0 +49,11 @@\n+    static OutputAnalyzer kt(String cmd, String ks) throws Exception {\n+        return SecurityTools.keytool(\"-storepass changeit \" + cmd +\n+                \" -keystore \" + ks);\n+    }\n+\n+    static void gencert(String owner, String cmd) throws Exception {\n+        kt(\"-certreq -alias \" + owner + \" -file tmp.req\", \"ks\");\n+        kt(\"-gencert -infile tmp.req -outfile tmp.cert \" + cmd, \"ks\");\n+        kt(\"-importcert -alias \" + owner + \" -file tmp.cert\", \"ks\");\n+    }\n+\n@@ -50,0 +62,1 @@\n+        testCertOutput();\n@@ -94,0 +107,42 @@\n+\n+    private static void testCertOutput() throws Throwable {\n+        kt(\"-genkeypair -keyalg rsa -alias ca1 -dname CN=CA1 -ext bc:c \" +\n+                \"-keysize 512\", \"ks\");\n+        kt(\"-genkeypair -keyalg rsa -alias e1 -dname CN=E1\", \"ks\");\n+        gencert(\"e1\", \"-alias ca1 -ext san=dns:e1\");\n+\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"ks\"));\n+        \/\/ sign the JAR file\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                \" a.jar e1\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.keytool(\"-printcert -jarfile a.jar\")\n+                .shouldNotContain(\"Signature:\")\n+                .shouldContain(\"Signer #1:\")\n+                .shouldContain(\"Certificate #1:\")\n+                .shouldContain(\"Certificate #2:\")\n+                .shouldNotContain(\"Signer #2:\")\n+                .shouldMatch(\"The certificate #2 of 2 of signer #1 uses a 512-bit RSA key.*is disabled\")\n+                .shouldHaveExitValue(0);\n+\n+        kt(\"-genkeypair -keyalg rsa -alias ca2 -dname CN=CA2 -ext bc:c \" +\n+                \"-sigalg SHA1withRSA\", \"ks\");\n+        kt(\"-genkeypair -keyalg rsa -alias e2 -dname CN=E2\", \"ks\");\n+        gencert(\"e2\", \"-alias ca2 -ext san=dns:e2\");\n+\n+        \/\/ sign the JAR file again with different signer\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                \" a.jar e2\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.keytool(\"-printcert -jarfile a.jar\")\n+                .shouldNotContain(\"Signature:\")\n+                .shouldContain(\"Signer #1:\")\n+                .shouldContain(\"Certificate #1:\")\n+                .shouldContain(\"Certificate #2:\")\n+                .shouldContain(\"Signer #2:\")\n+                .shouldMatch(\"The certificate #2 of 2 of signer #1 uses the SHA1withRSA.*will be disabled\")\n+                .shouldMatch(\"The certificate #2 of 2 of signer #2 uses a 512-bit RSA key.*is disabled\")\n+                .shouldHaveExitValue(0);\n+    }\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/ReadJar.java","additions":57,"deletions":2,"binary":false,"changes":59,"status":"modified"}]}