{"files":[{"patch":"@@ -2850,6 +2850,10 @@\n-    private static String oneInManys(String label, int i, int num, int pos) {\n-        if (num == 1) {\n-            return String.format(rb.getString(\"one.in.many1\"), label, pos);\n-        } else {\n-            return String.format(rb.getString(\"one.in.many2\"), label, i,\n-                    num, pos);\n+    private static String oneInManys(String label, int certNo, int certCnt, int signerNo,\n+        int signerCnt) {\n+        if (certCnt == 1 && signerCnt == 1) {\n+            return label;\n+        }\n+        if (certCnt > 1 && signerCnt == 1) {\n+            return String.format(rb.getString(\"one.in.many1\"), label, certNo);\n+        }\n+        if (certCnt == 1 && signerCnt > 1) {\n+            return String.format(rb.getString(\"one.in.many2\"), label, signerNo);\n@@ -2857,0 +2861,4 @@\n+        if (certCnt > 1 && signerCnt > 1) {\n+            return String.format(rb.getString(\"one.in.many3\"), label, certNo, signerNo);\n+        }\n+        return label;\n@@ -2880,0 +2888,1 @@\n+                int signerCnt = 0;\n@@ -2883,0 +2892,1 @@\n+                            signerCnt++;\n@@ -2884,1 +2894,16 @@\n-                            out.printf(rb.getString(\"Signer.d.\"), ++pos);\n+                        }\n+                    }\n+\n+                    if (signerCnt == 0) {\n+                        continue;\n+                    }\n+                    for (CodeSigner signer: ss) {\n+                        out.printf(rb.getString(\"Signer.d.\"), ++pos);\n+                        out.println();\n+                        out.println();\n+\n+                        List<? extends Certificate> certs\n+                                = signer.getSignerCertPath().getCertificates();\n+                        int cc = 0;\n+                        for (Certificate cert: certs) {\n+                            out.printf(rb.getString(\"Certificate.d.\"), ++cc);\n@@ -2886,0 +2911,7 @@\n+                            X509Certificate x = (X509Certificate)cert;\n+                            if (rfc) {\n+                                out.println(rb.getString(\"Certificate.owner.\") + x.getSubjectX500Principal() + \"\\n\");\n+                                dumpCert(x, out);\n+                            } else {\n+                                printX509Cert(x, out);\n+                            }\n@@ -2887,0 +2919,8 @@\n+                            checkWeak(oneInManys(rb.getString(\n+                                    \"the.certificate\"), cc,\n+                                    certs.size(), pos,\n+                                    signerCnt), x);\n+                        }\n+                        Timestamp ts = signer.getTimestamp();\n+                        if (ts != null) {\n+                            out.println(rb.getString(\"Timestamp.\"));\n@@ -2888,4 +2928,2 @@\n-\n-                            List<? extends Certificate> certs\n-                                    = signer.getSignerCertPath().getCertificates();\n-                            int cc = 0;\n+                            certs = ts.getSignerCertPath().getCertificates();\n+                            cc = 0;\n@@ -2904,24 +2942,3 @@\n-                                        \"the.certificate\"), cc,\n-                                        certs.size(), pos), x);\n-                            }\n-                            Timestamp ts = signer.getTimestamp();\n-                            if (ts != null) {\n-                                out.println(rb.getString(\"Timestamp.\"));\n-                                out.println();\n-                                certs = ts.getSignerCertPath().getCertificates();\n-                                cc = 0;\n-                                for (Certificate cert: certs) {\n-                                    out.printf(rb.getString(\"Certificate.d.\"), ++cc);\n-                                    out.println();\n-                                    X509Certificate x = (X509Certificate)cert;\n-                                    if (rfc) {\n-                                        out.println(rb.getString(\"Certificate.owner.\") + x.getSubjectX500Principal() + \"\\n\");\n-                                        dumpCert(x, out);\n-                                    } else {\n-                                        printX509Cert(x, out);\n-                                    }\n-                                    out.println();\n-                                    checkWeak(oneInManys(rb.getString(\n-                                            \"the.tsa.certificate\"), cc,\n-                                            certs.size(), pos), x);\n-                                }\n+                                        \"the.tsa.certificate\"), cc,\n+                                        certs.size(), pos,\n+                                        signerCnt), x);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":52,"deletions":35,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -468,2 +468,3 @@\n-        {\"one.in.many1\", \"%1$s of signer #%2$d\"},\n-        {\"one.in.many2\", \"%1$s #%2$d of %3$d of signer #%4$d\"},\n+        {\"one.in.many1\", \"%1$s #%2$d\"},\n+        {\"one.in.many2\", \"%1$s of signer #%2$d\"},\n+        {\"one.in.many3\", \"%1$s #%2$d of signer #%3$d\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Resources.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -683,1 +683,1 @@\n-                .stderrShouldContain(\"The TSA certificate of signer #1 uses a 512-bit RSA key\" +\n+                .stderrShouldContain(\"The TSA certificate uses a 512-bit RSA key\" +\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/TimestampCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,0 +109,17 @@\n+        kt(\"-genkeypair -keyalg rsa -alias e0 -dname CN=E0 \" +\n+                \"-keysize 512\", \"ks\");\n+        JarUtils.createJarFile(Path.of(\"a0.jar\"), Path.of(\".\"), Path.of(\"ks\"));\n+        \/\/ sign a0.jar file\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                \" a0.jar e0\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.keytool(\"-printcert -jarfile a0.jar\")\n+                .shouldNotContain(\"Signature:\")\n+                .shouldContain(\"Signer #1:\")\n+                .shouldContain(\"Certificate #1:\")\n+                .shouldNotContain(\"Certificate #2:\")\n+                .shouldNotContain(\"Signer #2:\")\n+                .shouldMatch(\"The certificate uses a 512-bit RSA key.*is disabled\")\n+                .shouldHaveExitValue(0);\n+\n@@ -114,2 +131,2 @@\n-        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"ks\"));\n-        \/\/ sign the JAR file\n+        JarUtils.createJarFile(Path.of(\"a1.jar\"), Path.of(\".\"), Path.of(\"ks\"));\n+        \/\/ sign a1.jar file\n@@ -117,1 +134,1 @@\n-                \" a.jar e1\")\n+                \" a1.jar e1\")\n@@ -120,1 +137,1 @@\n-        SecurityTools.keytool(\"-printcert -jarfile a.jar\")\n+        SecurityTools.keytool(\"-printcert -jarfile a1.jar\")\n@@ -126,1 +143,1 @@\n-                .shouldMatch(\"The certificate #2 of 2 of signer #1 uses a 512-bit RSA key.*is disabled\")\n+                .shouldMatch(\"The certificate #2 uses a 512-bit RSA key.*is disabled\")\n@@ -134,1 +151,1 @@\n-        \/\/ sign the JAR file again with different signer\n+        \/\/ sign a1.jar file again with different signer\n@@ -136,1 +153,1 @@\n-                \" a.jar e2\")\n+                \" a1.jar e2\")\n@@ -139,1 +156,1 @@\n-        SecurityTools.keytool(\"-printcert -jarfile a.jar\")\n+        SecurityTools.keytool(\"-printcert -jarfile a1.jar\")\n@@ -145,2 +162,26 @@\n-                .shouldMatch(\"The certificate #2 of 2 of signer #1 uses the SHA1withRSA.*will be disabled\")\n-                .shouldMatch(\"The certificate #2 of 2 of signer #2 uses a 512-bit RSA key.*is disabled\")\n+                .shouldMatch(\"The certificate #.* of signer #.*\" + \"uses the SHA1withRSA.*will be disabled\")\n+                .shouldMatch(\"The certificate #.* of signer #.*\" + \"uses a 512-bit RSA key.*is disabled\")\n+                .shouldHaveExitValue(0);\n+\n+        kt(\"-genkeypair -keyalg rsa -alias e3 -dname CN=E3\",\n+                \"ks\");\n+        JarUtils.createJarFile(Path.of(\"a2.jar\"), Path.of(\".\"), Path.of(\"ks\"));\n+        \/\/ sign a2.jar file\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                \" a2.jar e3\")\n+                .shouldHaveExitValue(0);\n+\n+        kt(\"-genkeypair -keyalg rsa -alias e4 -dname CN=E4 \" +\n+                \"-keysize 1024\", \"ks\");\n+        \/\/ sign a2.jar file again with different signer\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                \" a2.jar e4\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.keytool(\"-printcert -jarfile a2.jar\")\n+                .shouldNotContain(\"Signature:\")\n+                .shouldContain(\"Signer #1:\")\n+                .shouldContain(\"Certificate #1:\")\n+                .shouldNotContain(\"Certificate #2:\")\n+                .shouldContain(\"Signer #2:\")\n+                .shouldMatch(\"The certificate of signer #.*\" + \"uses a 1024-bit RSA key.*will be disabled\")\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/ReadJar.java","additions":51,"deletions":10,"binary":false,"changes":61,"status":"modified"}]}