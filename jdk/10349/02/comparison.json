{"files":[{"patch":"@@ -320,1 +320,9 @@\n-    \/\/ Implementation only for calling Grapheme.nextBoundary()\n+    \/**\n+     * Implementation only for calling Grapheme.nextBoundary().\n+     *\n+     * This is a special-purpose CharSequence that represents characters in the\n+     * index range [0..endIndex) of the underlying CharacterIterator, even if\n+     * that CharacterIterator represents the subrange of some string. The calling\n+     * code in GraphemeBreakIterator takes care to ensure that only valid indexes\n+     * into the src are used.\n+     *\/\n@@ -329,1 +337,4 @@\n-            return src.getEndIndex() - src.getBeginIndex();\n+            \/\/ Return the entire CharSequence length (0 to endIndex), not to\n+            \/\/ be confused with the text range length (beginIndex to endIndex)\n+            \/\/ of the underlying CharacterIterator.\n+            return src.getEndIndex();\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/BreakIteratorProviderImpl.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ *      8294008\n@@ -1471,0 +1472,4 @@\n+\n+    public void TestSetTextIOOBException() {\n+        BreakIterator.getCharacterInstance().setText(new StringCharacterIterator(\"abcfefg\", 1, 5, 3));\n+    }\n","filename":"test\/jdk\/java\/text\/BreakIterator\/BreakIteratorTest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}