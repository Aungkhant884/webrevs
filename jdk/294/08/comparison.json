{"files":[{"patch":"@@ -1961,1 +1961,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t size) {\n+bool os::pd_uncommit_memory(char* addr, size_t size, bool exec) {\n@@ -2038,1 +2038,1 @@\n-char* os::pd_reserve_memory(size_t bytes) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec) {\n@@ -2239,1 +2239,1 @@\n-char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes) {\n+char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec) {\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1681,1 +1681,1 @@\n-#ifdef __OpenBSD__\n+#if defined(__OpenBSD__)\n@@ -1687,0 +1687,4 @@\n+#elif defined(__APPLE__)\n+  if (::mprotect(addr, size, prot) == 0) {\n+    return true;\n+  }\n@@ -1769,2 +1773,2 @@\n-bool os::pd_uncommit_memory(char* addr, size_t size) {\n-#ifdef __OpenBSD__\n+bool os::pd_uncommit_memory(char* addr, size_t size, bool exec) {\n+#if defined(__OpenBSD__)\n@@ -1774,0 +1778,11 @@\n+#elif defined(__APPLE__)\n+  if (exec) {\n+    if (::madvise(addr, size, MADV_FREE) != 0) {\n+      return false;\n+    }\n+    return ::mprotect(addr, size, PROT_NONE) == 0;\n+  } else {\n+    uintptr_t res = (uintptr_t) ::mmap(addr, size, PROT_NONE,\n+        MAP_PRIVATE|MAP_FIXED|MAP_NORESERVE|MAP_ANONYMOUS, -1, 0);\n+    return res  != (uintptr_t) MAP_FAILED;\n+  }\n@@ -1794,1 +1809,1 @@\n-static char* anon_mmap(char* requested_addr, size_t bytes) {\n+static char* anon_mmap(char* requested_addr, size_t bytes, bool exec) {\n@@ -1796,1 +1811,2 @@\n-  const int flags = MAP_PRIVATE | MAP_NORESERVE | MAP_ANONYMOUS;\n+  const int flags = MAP_PRIVATE | MAP_NORESERVE | MAP_ANONYMOUS\n+      MACOS_ONLY(| (exec ? MAP_JIT : 0));\n@@ -1810,2 +1826,2 @@\n-char* os::pd_reserve_memory(size_t bytes) {\n-  return anon_mmap(NULL \/* addr *\/, bytes);\n+char* os::pd_reserve_memory(size_t bytes, bool exec) {\n+  return anon_mmap(NULL \/* addr *\/, bytes, exec);\n@@ -1896,1 +1912,1 @@\n-  char* result = pd_attempt_reserve_memory_at(requested_addr, bytes);\n+  char* result = pd_attempt_reserve_memory_at(requested_addr, bytes, !ExecMem);\n@@ -1908,1 +1924,1 @@\n-char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes) {\n+char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec) {\n@@ -1921,1 +1937,1 @@\n-  char * addr = anon_mmap(requested_addr, bytes);\n+  char * addr = anon_mmap(requested_addr, bytes, exec);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":26,"deletions":10,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -3275,1 +3275,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t size) {\n+bool os::pd_uncommit_memory(char* addr, size_t size, bool exec) {\n@@ -3519,1 +3519,1 @@\n-char* os::pd_reserve_memory(size_t bytes) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec) {\n@@ -4202,1 +4202,1 @@\n-  char* result = pd_attempt_reserve_memory_at(requested_addr, bytes);\n+  char* result = pd_attempt_reserve_memory_at(requested_addr, bytes, !ExecMem);\n@@ -4214,1 +4214,1 @@\n-char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes) {\n+char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec) {\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-char* os::reserve_memory_aligned(size_t size, size_t alignment) {\n+char* os::reserve_memory_aligned(size_t size, size_t alignment, bool exec) {\n@@ -341,1 +341,1 @@\n-  char* extra_base = os::reserve_memory(extra_size);\n+  char* extra_base = os::reserve_memory(extra_size, exec);\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3270,1 +3270,2 @@\n-char* os::reserve_memory_aligned(size_t size, size_t alignment) {\n+char* os::reserve_memory_aligned(size_t size, size_t alignment, bool exec) {\n+  \/\/ exec can be ignored\n@@ -3278,2 +3279,2 @@\n-char* os::pd_reserve_memory(size_t bytes) {\n-  return pd_attempt_reserve_memory_at(NULL \/* addr *\/, bytes);\n+char* os::pd_reserve_memory(size_t bytes, bool exec) {\n+  return pd_attempt_reserve_memory_at(NULL \/* addr *\/, bytes, exec);\n@@ -3284,1 +3285,1 @@\n-char* os::pd_attempt_reserve_memory_at(char* addr, size_t bytes) {\n+char* os::pd_attempt_reserve_memory_at(char* addr, size_t bytes, bool exec) {\n@@ -3479,1 +3480,1 @@\n-bool os::pd_uncommit_memory(char* addr, size_t bytes) {\n+bool os::pd_uncommit_memory(char* addr, size_t bytes, bool exec) {\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  const uintptr_t addr = (uintptr_t)os::reserve_memory(size, mtGC);\n+  const uintptr_t addr = (uintptr_t)os::reserve_memory(size, !ExecMem, mtGC);\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStackAllocator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  char* addr = os::reserve_memory(size, flags);\n+  char* addr = os::reserve_memory(size, !ExecMem, flags);\n@@ -76,1 +76,1 @@\n-  char* addr = os::reserve_memory(size, flags);\n+  char* addr = os::reserve_memory(size, !ExecMem, flags);\n","filename":"src\/hotspot\/share\/memory\/allocation.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-static char* attempt_map_or_reserve_memory_at(char* base, size_t size, int fd) {\n+static char* attempt_map_or_reserve_memory_at(char* base, size_t size, int fd, bool executable) {\n@@ -88,1 +88,1 @@\n-  return os::attempt_reserve_memory_at(base, size);\n+  return os::attempt_reserve_memory_at(base, size, executable);\n@@ -92,1 +92,1 @@\n-static char* map_or_reserve_memory(size_t size, int fd) {\n+static char* map_or_reserve_memory(size_t size, int fd, bool executable) {\n@@ -96,1 +96,1 @@\n-  return os::reserve_memory(size);\n+  return os::reserve_memory(size, executable);\n@@ -100,1 +100,1 @@\n-static char* map_or_reserve_memory_aligned(size_t size, size_t alignment, int fd) {\n+static char* map_or_reserve_memory_aligned(size_t size, size_t alignment, int fd, bool executable) {\n@@ -104,1 +104,1 @@\n-  return os::reserve_memory_aligned(size, alignment);\n+  return os::reserve_memory_aligned(size, alignment, executable);\n@@ -215,1 +215,1 @@\n-      base = attempt_map_or_reserve_memory_at(requested_address, size, _fd_for_heap);\n+      base = attempt_map_or_reserve_memory_at(requested_address, size, _fd_for_heap, _executable);\n@@ -221,1 +221,1 @@\n-      base = map_or_reserve_memory(size, _fd_for_heap);\n+      base = map_or_reserve_memory(size, _fd_for_heap, _executable);\n@@ -233,1 +233,1 @@\n-      base = map_or_reserve_memory_aligned(size, alignment, _fd_for_heap);\n+      base = map_or_reserve_memory_aligned(size, alignment, _fd_for_heap, _executable);\n@@ -417,1 +417,1 @@\n-      base = attempt_map_or_reserve_memory_at(requested_address, size, _fd_for_heap);\n+      base = attempt_map_or_reserve_memory_at(requested_address, size, _fd_for_heap, executable());\n@@ -423,1 +423,1 @@\n-      base = map_or_reserve_memory(size, _fd_for_heap);\n+      base = map_or_reserve_memory(size, _fd_for_heap, executable());\n@@ -1027,1 +1027,1 @@\n-    if (!os::uncommit_memory(aligned_upper_new_high, upper_needs)) {\n+    if (!os::uncommit_memory(aligned_upper_new_high, upper_needs, _executable)) {\n@@ -1038,1 +1038,1 @@\n-    if (!os::uncommit_memory(aligned_middle_new_high, middle_needs)) {\n+    if (!os::uncommit_memory(aligned_middle_new_high, middle_needs, _executable)) {\n@@ -1049,1 +1049,1 @@\n-    if (!os::uncommit_memory(aligned_lower_new_high, lower_needs)) {\n+    if (!os::uncommit_memory(aligned_lower_new_high, lower_needs, _executable)) {\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1659,2 +1659,2 @@\n-char* os::reserve_memory(size_t bytes, MEMFLAGS flags) {\n-  char* result = pd_reserve_memory(bytes);\n+char* os::reserve_memory(size_t bytes, bool executable, MEMFLAGS flags) {\n+  char* result = pd_reserve_memory(bytes, executable);\n@@ -1671,2 +1671,2 @@\n-char* os::attempt_reserve_memory_at(char* addr, size_t bytes) {\n-  char* result = pd_attempt_reserve_memory_at(addr, bytes);\n+char* os::attempt_reserve_memory_at(char* addr, size_t bytes, bool executable) {\n+  char* result = pd_attempt_reserve_memory_at(addr, bytes, executable);\n@@ -1711,1 +1711,1 @@\n-bool os::uncommit_memory(char* addr, size_t bytes) {\n+bool os::uncommit_memory(char* addr, size_t bytes, bool executable) {\n@@ -1715,1 +1715,1 @@\n-    res = pd_uncommit_memory(addr, bytes);\n+    res = pd_uncommit_memory(addr, bytes, executable);\n@@ -1720,1 +1720,1 @@\n-    res = pd_uncommit_memory(addr, bytes);\n+    res = pd_uncommit_memory(addr, bytes, executable);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-  static char*  pd_reserve_memory(size_t bytes);\n+  static char*  pd_reserve_memory(size_t bytes, bool executable);\n@@ -119,1 +119,1 @@\n-  static char*  pd_attempt_reserve_memory_at(char* addr, size_t bytes);\n+  static char*  pd_attempt_reserve_memory_at(char* addr, size_t bytes, bool executable);\n@@ -131,1 +131,1 @@\n-  static bool   pd_uncommit_memory(char* addr, size_t bytes);\n+  static bool   pd_uncommit_memory(char* addr, size_t bytes, bool executable);\n@@ -318,1 +318,1 @@\n-  static char*  reserve_memory(size_t bytes, MEMFLAGS flags = mtOther);\n+  static char*  reserve_memory(size_t bytes, bool executable = false, MEMFLAGS flags = mtOther);\n@@ -321,1 +321,1 @@\n-  static char*  reserve_memory_aligned(size_t size, size_t alignment);\n+  static char*  reserve_memory_aligned(size_t size, size_t alignment, bool executable = false);\n@@ -325,1 +325,1 @@\n-  static char*  attempt_reserve_memory_at(char* addr, size_t bytes);\n+  static char*  attempt_reserve_memory_at(char* addr, size_t bytes, bool executable = false);\n@@ -347,1 +347,1 @@\n-  static bool   uncommit_memory(char* addr, size_t bytes);\n+  static bool   uncommit_memory(char* addr, size_t bytes, bool executable = false);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-    char* base = os::reserve_memory(size, mtThreadStack);\n-    bool result = os::commit_memory(base, size, false);\n+    char* base = os::reserve_memory(size, !ExecMem, mtThreadStack);\n+    bool result = os::commit_memory(base, size, !ExecMem);\n@@ -172,1 +172,1 @@\n-    char* base = os::reserve_memory(size, mtTest);\n+    char* base = os::reserve_memory(size, !ExecMem, mtTest);\n@@ -174,1 +174,1 @@\n-    result = os::commit_memory(base, size, false);\n+    result = os::commit_memory(base, size, !ExecMem);\n","filename":"test\/hotspot\/gtest\/runtime\/test_committed_virtualmemory.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}