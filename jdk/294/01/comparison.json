{"files":[{"patch":"@@ -1904,1 +1904,1 @@\n-#ifdef __OpenBSD__\n+#if defined(__OpenBSD__)\n@@ -1910,0 +1910,12 @@\n+#elif defined(__APPLE__)\n+  if (!exec) {\n+    uintptr_t res = (uintptr_t) ::mmap(addr, size, prot,\n+                                       MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0);\n+    if (res != (uintptr_t) MAP_FAILED) {\n+      return true;\n+    }\n+  } else {\n+    if (::mprotect(addr, size, prot) == 0) {\n+      return true;\n+    }\n+  }\n@@ -1993,1 +2005,1 @@\n-#ifdef __OpenBSD__\n+#if defined(__OpenBSD__)\n@@ -1997,0 +2009,11 @@\n+#elif defined(__APPLE__)\n+  if (false) {\n+    if (::madvise(addr, size, MADV_FREE) != 0) {\n+      return false;\n+    }\n+    return ::mprotect(addr, size, PROT_NONE) == 0;\n+  } else {\n+    uintptr_t res = (uintptr_t) ::mmap(addr, size, PROT_NONE,\n+        MAP_PRIVATE|MAP_FIXED|MAP_NORESERVE|MAP_ANONYMOUS, -1, 0);\n+    return res  != (uintptr_t) MAP_FAILED;\n+  }\n@@ -2017,1 +2040,1 @@\n-static char* anon_mmap(char* requested_addr, size_t bytes) {\n+static char* anon_mmap(char* requested_addr, size_t bytes, bool executable) {\n@@ -2019,1 +2042,1 @@\n-  const int flags = MAP_PRIVATE | MAP_NORESERVE | MAP_ANONYMOUS;\n+  const int flags = MAP_PRIVATE | MAP_NORESERVE | MAP_ANONYMOUS MACOS_ONLY(| (executable ? MAP_JIT : 0));\n@@ -2033,2 +2056,2 @@\n-char* os::pd_reserve_memory(size_t bytes) {\n-  return anon_mmap(NULL \/* addr *\/, bytes);\n+char* os::pd_reserve_memory(size_t bytes, bool executable) {\n+  return anon_mmap(NULL \/* addr *\/, bytes, executable);\n@@ -2144,1 +2167,1 @@\n-  char * addr = anon_mmap(requested_addr, bytes);\n+  char * addr = anon_mmap(requested_addr, bytes, false\/*executable*\/);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":30,"deletions":7,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  const uintptr_t addr = (uintptr_t)os::reserve_memory(size, mtGC);\n+  const uintptr_t addr = (uintptr_t)os::reserve_memory(size, !ExecMem, mtGC);\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStackAllocator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  char* addr = os::reserve_memory(size, flags);\n+  char* addr = os::reserve_memory(size, !ExecMem, flags);\n@@ -76,1 +76,1 @@\n-  char* addr = os::reserve_memory(size, flags);\n+  char* addr = os::reserve_memory(size, !ExecMem, flags);\n","filename":"src\/hotspot\/share\/memory\/allocation.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -197,1 +197,5 @@\n-      base = os::reserve_memory_with_fd(size, _fd_for_heap);\n+      if (!_executable) {\n+        base = os::reserve_memory_with_fd(size, _fd_for_heap);\n+      } else {\n+        base = os::reserve_memory(size, ExecMem);\n+      }\n@@ -381,1 +385,5 @@\n-      base = os::reserve_memory_with_fd(size, _fd_for_heap);\n+      if (!executable()) {\n+        base = os::reserve_memory_with_fd(size, _fd_for_heap);\n+      } else {\n+        base = os::reserve_memory(size, ExecMem);\n+      }\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1655,2 +1655,2 @@\n-char* os::reserve_memory(size_t bytes, MEMFLAGS flags) {\n-  char* result = pd_reserve_memory(bytes);\n+char* os::reserve_memory(size_t bytes, bool executable, MEMFLAGS flags) {\n+  char* result = pd_reserve_memory(bytes, executable);\n@@ -1678,1 +1678,1 @@\n-    result = pd_reserve_memory(bytes);\n+    result = pd_reserve_memory(bytes, !ExecMem);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-  static char*  pd_reserve_memory(size_t bytes);\n+  static char*  pd_reserve_memory(size_t bytes, bool executable);\n@@ -317,1 +317,1 @@\n-  static char*  reserve_memory(size_t bytes, MEMFLAGS flags = mtOther);\n+  static char*  reserve_memory(size_t bytes, bool executable = false, MEMFLAGS flags = mtOther);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}