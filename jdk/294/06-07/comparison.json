{"files":[{"patch":"@@ -2038,1 +2038,1 @@\n-char* os::pd_reserve_memory(size_t bytes, bool executable) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec) {\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1809,1 +1809,1 @@\n-static char* anon_mmap(char* requested_addr, size_t bytes, bool executable) {\n+static char* anon_mmap(char* requested_addr, size_t bytes, bool exec) {\n@@ -1812,1 +1812,1 @@\n-      MACOS_ONLY(| (executable ? MAP_JIT : 0));\n+      MACOS_ONLY(| (exec ? MAP_JIT : 0));\n@@ -1826,2 +1826,2 @@\n-char* os::pd_reserve_memory(size_t bytes, bool executable) {\n-  return anon_mmap(NULL \/* addr *\/, bytes, executable);\n+char* os::pd_reserve_memory(size_t bytes, bool exec) {\n+  return anon_mmap(NULL \/* addr *\/, bytes, exec);\n@@ -1937,1 +1937,1 @@\n-  char * addr = anon_mmap(requested_addr, bytes, false\/*executable*\/);\n+  char * addr = anon_mmap(requested_addr, bytes, !ExecMem);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3519,1 +3519,1 @@\n-char* os::pd_reserve_memory(size_t bytes, bool executable) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec) {\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-char* os::reserve_memory_aligned(size_t size, size_t alignment, bool executable) {\n+char* os::reserve_memory_aligned(size_t size, size_t alignment, bool exec) {\n@@ -341,1 +341,1 @@\n-  char* extra_base = os::reserve_memory(extra_size, executable);\n+  char* extra_base = os::reserve_memory(extra_size, exec);\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3270,2 +3270,2 @@\n-char* os::reserve_memory_aligned(size_t size, size_t alignment, bool executable) {\n-  \/\/ executable can be ignored\n+char* os::reserve_memory_aligned(size_t size, size_t alignment, bool exec) {\n+  \/\/ exec can be ignored\n@@ -3279,1 +3279,1 @@\n-char* os::pd_reserve_memory(size_t bytes, bool executable) {\n+char* os::pd_reserve_memory(size_t bytes, bool exec) {\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1711,1 +1711,1 @@\n-bool os::uncommit_memory(char* addr, size_t bytes, bool exec) {\n+bool os::uncommit_memory(char* addr, size_t bytes, bool executable) {\n@@ -1715,1 +1715,1 @@\n-    res = pd_uncommit_memory(addr, bytes, exec);\n+    res = pd_uncommit_memory(addr, bytes, executable);\n@@ -1720,1 +1720,1 @@\n-    res = pd_uncommit_memory(addr, bytes, exec);\n+    res = pd_uncommit_memory(addr, bytes, executable);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-  static bool   pd_uncommit_memory(char* addr, size_t bytes, bool exec);\n+  static bool   pd_uncommit_memory(char* addr, size_t bytes, bool executable);\n@@ -349,1 +349,1 @@\n-  static bool   uncommit_memory(char* addr, size_t bytes, bool exec);\n+  static bool   uncommit_memory(char* addr, size_t bytes, bool executable);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-    bool result = os::commit_memory(base, size, false);\n+    bool result = os::commit_memory(base, size, !ExecMem);\n@@ -174,1 +174,1 @@\n-    result = os::commit_memory(base, size, false);\n+    result = os::commit_memory(base, size, !ExecMem);\n","filename":"test\/hotspot\/gtest\/runtime\/test_committed_virtualmemory.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}