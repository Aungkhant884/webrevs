{"files":[{"patch":"@@ -149,2 +149,1 @@\n-     * <p>The {@link #description() description} describes the returned filter.\n-     * The {@link Consumer operation} is the effective implementation of the\n+     * <p>The {@link Consumer operation} is the effective implementation of the\n@@ -164,1 +163,1 @@\n-     * <p> Example of adding the Foo response header to all responses:\n+     * <p> Example of adding the {@code \"Foo\"} response header to all responses:\n@@ -171,1 +170,1 @@\n-     * @param description the description of the returned filter\n+     * @param description the string to be returned from {@link #description()}\n@@ -198,2 +197,1 @@\n-     * <p>The {@link #description() description} describes the returned filter.\n-     * The {@link Consumer operation} is the effective implementation of the\n+     * <p>The {@link Consumer operation} is the effective implementation of the\n@@ -211,2 +209,2 @@\n-     * Doing so is likely to fail, since this is commonly done by the exchange\n-     * handler.\n+     * Doing so is likely to fail, since the exchange has commonly been handled\n+     * before the operation is invoked.\n@@ -221,2 +219,3 @@\n-     * The order in which the filters are invoked is reverse to the order in\n-     * which they are added to the context's filter-list.\n+     * The order in which the filter operations are invoked is reverse to the\n+     * order in which the filters are added to the context's filter-list.\n+     *\n@@ -231,1 +230,1 @@\n-     * @param description the description of the returned filter\n+     * @param description the string to be returned from {@link #description()}\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Filter.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @summary  Tests for Filter static factory methods\n+ * @summary Tests for Filter static factory methods\n@@ -74,1 +74,1 @@\n-        expectThrows(NPE, () -> Filter.beforeHandler(null, (HttpExchange e) -> e.getResponseHeaders().set(\"X-Foo\", \"Bar\")));\n+        expectThrows(NPE, () -> Filter.beforeHandler(null, e -> e.getResponseHeaders().set(\"X-Foo\", \"Bar\")));\n@@ -93,1 +93,1 @@\n-                (var e) -> e.getResponseHeaders().set(\"x-foo\", \"bar\"));\n+                e -> e.getResponseHeaders().set(\"x-foo\", \"bar\"));\n@@ -113,1 +113,1 @@\n-                (var e) -> e.getResponseHeaders().set(\"x-foo\", \"bar\"));\n+                e -> e.getResponseHeaders().set(\"x-foo\", \"bar\"));\n@@ -115,1 +115,1 @@\n-                (var e) -> e.getResponseHeaders().set(\"x-foo\", \"barbar\"));\n+                e -> e.getResponseHeaders().set(\"x-foo\", \"barbar\"));\n@@ -137,1 +137,1 @@\n-                (var e) -> {\n+                e -> {\n@@ -170,1 +170,1 @@\n-                (var e) -> respCode.set(e.getResponseCode()));\n+                e -> respCode.set(e.getResponseCode()));\n@@ -191,1 +191,1 @@\n-                (var e) -> e.setAttribute(\"test-attr\", value));\n+                e -> e.setAttribute(\"test-attr\", value));\n@@ -193,1 +193,1 @@\n-                (var e) -> attr.set((String) e.getAttribute(\"test-attr\")));\n+                e -> attr.set((String) e.getAttribute(\"test-attr\")));\n@@ -215,1 +215,1 @@\n-                (var e) -> {\n+                e -> {\n@@ -247,1 +247,1 @@\n-                (var e) -> e.getResponseHeaders().set(\"x-foo\", \"bar\"));\n+                e -> e.getResponseHeaders().set(\"x-foo\", \"bar\"));\n@@ -249,1 +249,1 @@\n-                (var e) -> respCode.set(e.getResponseCode()));\n+                e -> respCode.set(e.getResponseCode()));\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/FilterTest.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}