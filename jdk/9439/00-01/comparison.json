{"files":[{"patch":"@@ -80,7 +80,2 @@\n-      add->set_req(1, in11);\n-      add->set_req(2, in12);\n-      PhaseIterGVN* igvn = phase->is_IterGVN();\n-      if (igvn) {\n-        igvn->_worklist.push(in1);\n-        igvn->_worklist.push(in2);\n-      }\n+      add->set_req_X(1, in11, phase);\n+      add->set_req_X(2, in12, phase);\n@@ -635,6 +630,1 @@\n-      set_req(Offset, add->in(2));\n-      PhaseIterGVN* igvn = phase->is_IterGVN();\n-      if (add->outcnt() == 0 && igvn) {\n-        \/\/ add disconnected.\n-        igvn->_worklist.push((Node*)add);\n-      }\n+      set_req_X(Offset, add->in(2), phase); \/\/ puts add on igvn worklist if needed\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1477,2 +1477,1 @@\n-    igvn->C->root()->rm_prec(nb);\n-    igvn->_worklist.push(igvn->C->root());\n+    igvn->delete_precedence_of(igvn->C->root(), nb);\n@@ -1635,2 +1634,1 @@\n-        phase->C->root()->add_req(halt);\n-        igvn->_worklist.push(phase->C->root());\n+        igvn->add_input_to(phase->C->root(), halt);\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1008,1 +1008,0 @@\n-          igvn->_worklist.push(in(1));\n@@ -1058,1 +1057,0 @@\n-    igvn->_worklist.push(in(1));\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,4 +179,2 @@\n-  \/\/ if_uct to rgn\n-  _igvn.hash_delete(rgn);\n-  rgn->add_req(if_uct);\n-  _igvn._worklist.push(rgn);\n+  _igvn.add_input_to(rgn, if_uct);\n+\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1549,2 +1549,1 @@\n-  C->root()->add_req(halt);\n-  _igvn._worklist.push(C->root());\n+  _igvn.add_input_to(C->root(), halt);\n@@ -2929,2 +2928,1 @@\n-  C->root()->add_req(halt);\n-  _igvn._worklist.push(C->root());\n+  _igvn.add_input_to(C->root(), halt);\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -614,2 +614,1 @@\n-    C->root()->add_req(halt);\n-    _igvn._worklist.push(C->root());\n+    _igvn.add_input_to(C->root(), halt);\n@@ -4180,4 +4179,1 @@\n-          _igvn.hash_delete(n1);\n-          n1->set_req(0, c1);\n-          _igvn.hash_insert(n1);\n-          _igvn._worklist.push(n1);\n+          _igvn.replace_input_of(n1, 0, c1);\n@@ -4187,4 +4183,1 @@\n-          _igvn.hash_delete(n2);\n-          n2->set_req(0, c2);\n-          _igvn.hash_insert(n2);\n-          _igvn._worklist.push(n2);\n+          _igvn.replace_input_of(n2, 0, c2);\n@@ -5118,2 +5111,1 @@\n-          cfg->set_req( k, if_t ); \/\/ Now point to NeverBranch\n-          _igvn._worklist.push(cfg);\n+          _igvn.replace_input_of(cfg, k, if_t); \/\/ Now point to NeverBranch\n@@ -5134,2 +5126,1 @@\n-          C->root()->add_req(halt);\n-          _igvn._worklist.push(C->root());\n+          _igvn.add_input_to(C->root(), halt);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -397,4 +397,1 @@\n-    set_req(MemNode::Memory, mem);\n-    if (can_reshape && old_mem->outcnt() == 0 && igvn != NULL) {\n-      igvn->_worklist.push(old_mem);\n-    }\n+    set_req_X(MemNode::Memory, mem, phase);\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -76,7 +76,2 @@\n-      set_req(1, in1->in(2));\n-      set_req(2, in2->in(2));\n-      PhaseIterGVN* igvn = phase->is_IterGVN();\n-      if (igvn) {\n-        igvn->_worklist.push(in1);\n-        igvn->_worklist.push(in2);\n-      }\n+      set_req_X(1, in1->in(2), phase);\n+      set_req_X(2, in2->in(2), phase);\n@@ -100,7 +95,2 @@\n-      set_req(1, in11);\n-      set_req(2, in12);\n-      PhaseIterGVN* igvn = phase->is_IterGVN();\n-      if (igvn) {\n-        igvn->_worklist.push(in1);\n-        igvn->_worklist.push(in2);\n-      }\n+      set_req_X(1, in11, phase);\n+      set_req_X(2, in12, phase);\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -534,0 +534,6 @@\n+  \/\/ Add \"in\" as input (req) of \"n\"\n+  void add_input_to(Node* n, Node* in) {\n+    rehash_node_delayed(n);\n+    n->add_req(in);\n+  }\n+\n@@ -540,0 +546,8 @@\n+  \/\/ Delete precedence edge i of \"n\"\n+  void delete_precedence_of(Node* n, int i) {\n+    rehash_node_delayed(n);\n+    n->rm_prec(i);\n+  }\n+\n+\n+\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}