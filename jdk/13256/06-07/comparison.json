{"files":[{"patch":"@@ -47,0 +47,16 @@\n+    private static final byte[] KEM = new byte[]\n+            {'K', 'E', 'M'};\n+    private static final byte[] EAE_PRK = new byte[]\n+            {'e', 'a', 'e', '_', 'p', 'r', 'k'};\n+    private static final byte[] SHARED_SECRET = new byte[]\n+            {'s', 'h', 'a', 'r', 'e', 'd', '_', 's', 'e', 'c', 'r', 'e', 't'};\n+    private static final byte[] DKP_PRK = new byte[]\n+            {'d', 'k', 'p', '_', 'p', 'r', 'k'};\n+    private static final byte[] CANDIDATE = new byte[]\n+            {'c', 'a', 'n', 'd', 'i', 'd', 'a', 't', 'e'};\n+    private static final byte[] SK = new byte[]\n+            {'s', 'k'};\n+    private static final byte[] HPKE_V1 = new byte[]\n+            {'H', 'P', 'K', 'E', '-', 'v', '1'};\n+    private static final byte[] EMPTY = new byte[0];\n+\n@@ -138,1 +154,1 @@\n-                \"ECDH\", \"EC\", CurveDB.lookup(\"secp256r1\"), \"SHA-256\"),\n+                \"ECDH\", \"EC\", CurveDB.P_256, \"SHA-256\"),\n@@ -141,1 +157,1 @@\n-                \"ECDH\", \"EC\", CurveDB.lookup(\"secp384r1\"), \"SHA-384\"),\n+                \"ECDH\", \"EC\", CurveDB.P_384, \"SHA-384\"),\n@@ -144,1 +160,1 @@\n-                \"ECDH\", \"EC\", CurveDB.lookup(\"secp521r1\"), \"SHA-512\"),\n+                \"ECDH\", \"EC\", CurveDB.P_521, \"SHA-512\"),\n@@ -175,2 +191,1 @@\n-            suiteId = concat(\"KEM\".getBytes(StandardCharsets.UTF_8),\n-                    I2OSP(kem_id, 2));\n+            suiteId = concat(KEM, I2OSP(kem_id, 2));\n@@ -202,9 +217,2 @@\n-                return Arrays.copyOf(reverse(uArray), Npk);\n-            }\n-        }\n-\n-        private static byte[] reverse(byte[] arr) {\n-            int len = arr.length;\n-            byte[] result = new byte[len];\n-            for (int i = 0; i < len; i++) {\n-                result[i] = arr[len - 1 - i];\n+                ArrayUtil.reverse(uArray);\n+                return Arrays.copyOf(uArray, Npk);\n@@ -212,1 +220,0 @@\n-            return result;\n@@ -223,0 +230,2 @@\n+                data = data.clone();\n+                ArrayUtil.reverse(data);\n@@ -224,1 +233,1 @@\n-                        this.spec, new BigInteger(1, reverse(data)));\n+                        this.spec, new BigInteger(1, data));\n@@ -240,4 +249,2 @@\n-            SecretKey eae_prk = LabeledExtract(kdf, suiteId, null,\n-                    \"eae_prk\".getBytes(StandardCharsets.UTF_8), dh);\n-            return LabeledExpand(kdf, suiteId, eae_prk,\n-                    \"shared_secret\".getBytes(StandardCharsets.UTF_8),\n+            SecretKey eae_prk = LabeledExtract(kdf, suiteId, null, EAE_PRK, dh);\n+            return LabeledExpand(kdf, suiteId, eae_prk, SHARED_SECRET,\n@@ -272,2 +279,1 @@\n-            SecretKey dkp_prk = LabeledExtract(kdf, suiteId, null,\n-                    \"dkp_prk\".getBytes(StandardCharsets.UTF_8), ikm);\n+            SecretKey dkp_prk = LabeledExtract(kdf, suiteId, null, DKP_PRK, ikm);\n@@ -283,2 +289,1 @@\n-                            \"candidate\".getBytes(StandardCharsets.UTF_8),\n-                            I2OSP(counter, 1), Nsk);\n+                            CANDIDATE, I2OSP(counter, 1), Nsk);\n@@ -292,2 +297,1 @@\n-                PrivateKey k = DeserializePrivateKey(\n-                        Params.reverse(ECUtil.sArray(sk, curve)));\n+                PrivateKey k = DeserializePrivateKey(sk.toByteArray());\n@@ -296,4 +300,1 @@\n-                byte[] sk = LabeledExpand(kdf, suiteId, dkp_prk,\n-                        \"sk\".getBytes(StandardCharsets.UTF_8),\n-                        \"\".getBytes(StandardCharsets.UTF_8),\n-                        Nsk);\n+                byte[] sk = LabeledExpand(kdf, suiteId, dkp_prk, SK, EMPTY, Nsk);\n@@ -346,1 +347,1 @@\n-            if (ECUtil.equals(eckey.getParams(), CurveDB.lookup(\"secp256r1\"))) {\n+            if (ECUtil.equals(eckey.getParams(), CurveDB.P_256)) {\n@@ -348,1 +349,1 @@\n-            } else if (ECUtil.equals(eckey.getParams(), CurveDB.lookup(\"secp384r1\"))) {\n+            } else if (ECUtil.equals(eckey.getParams(), CurveDB.P_384)) {\n@@ -350,1 +351,1 @@\n-            } else if (ECUtil.equals(eckey.getParams(), CurveDB.lookup(\"secp521r1\"))) {\n+            } else if (ECUtil.equals(eckey.getParams(), CurveDB.P_521)) {\n@@ -383,3 +384,1 @@\n-                new SecretKeySpec(\n-                        concat(\"HPKE-v1\".getBytes(StandardCharsets.UTF_8), suite_id, label, ikm),\n-                        \"IKM\"),\n+                new SecretKeySpec(concat(HPKE_V1, suite_id, label, ikm), \"IKM\"),\n@@ -392,1 +391,1 @@\n-        byte[] labeled_info = concat(I2OSP(L, 2), \"HPKE-v1\".getBytes(StandardCharsets.UTF_8),\n+        byte[] labeled_info = concat(I2OSP(L, 2), HPKE_V1,\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHKEM.java","additions":36,"deletions":37,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,5 @@\n+\n+    public static final NamedCurve P_256;\n+    public static final NamedCurve P_384;\n+    public static final NamedCurve P_521;\n+\n@@ -112,1 +117,1 @@\n-    private static void add(KnownOIDs o, int type, String sfield,\n+    private static NamedCurve add(KnownOIDs o, int type, String sfield,\n@@ -146,0 +151,2 @@\n+\n+        return params;\n@@ -258,1 +265,1 @@\n-        add(KnownOIDs.secp256r1, PD,\n+        P_256 = add(KnownOIDs.secp256r1, PD,\n@@ -267,1 +274,1 @@\n-        add(KnownOIDs.secp384r1, PD,\n+        P_384 = add(KnownOIDs.secp384r1, PD,\n@@ -276,1 +283,1 @@\n-        add(KnownOIDs.secp521r1, PD,\n+        P_521 = add(KnownOIDs.secp521r1, PD,\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/CurveDB.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -544,1 +544,1 @@\n-                    CurveDB.lookup(\"secp256r1\").getGenerator();\n+                    CurveDB.P_256.getGenerator();\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECOperations.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,5 +215,2 @@\n-        for (NamedCurve namedCurve :\n-            List.of(\n-                CurveDB.lookup(\"secp256r1\"),\n-                CurveDB.lookup(\"secp384r1\"),\n-                CurveDB.lookup(\"secp521r1\"))) {\n+        for (NamedCurve namedCurve : List.of(\n+                CurveDB.P_256, CurveDB.P_384, CurveDB.P_521)) {\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/SunEC.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}