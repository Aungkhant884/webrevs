{"files":[{"patch":"@@ -3721,1 +3721,4 @@\n-            if (ReductionNode::implemented(use->Opcode(), Matcher::min_vector_size(bt), bt)) {\n+            \/\/ Matcher::min_vector_size may return 1 in some cases, e.g. double for x86.\n+            \/\/ For vector reduction implemented check we need atleast two elements.\n+            int min_vec_size = MAX2(Matcher::min_vector_size(bt), 2);\n+            if (ReductionNode::implemented(use->Opcode(), min_vec_size, bt)) {\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -85,2 +85,0 @@\n-    \/* Vectorization is expected but not enabled (SuperWord::implemented).\n-       A positive @IR test should be added later. *\/\n@@ -90,0 +88,3 @@\n+    @IR(applyIfAnd = {\"SuperWordReductions\", \"true\", \"LoopMaxUnroll\", \">= 8\"},\n+        applyIfCPUFeature = {\"sse2\", \"true\"},\n+        counts = {IRNode.MUL_REDUCTION_VD, \">= 1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ProdRed_Double.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}