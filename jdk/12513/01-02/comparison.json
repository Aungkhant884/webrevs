{"files":[{"patch":"@@ -51,1 +51,0 @@\n-import jtreg.SkippedException;\n@@ -53,1 +52,0 @@\n-import org.junit.jupiter.api.TestInstance;\n@@ -66,1 +64,0 @@\n-@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n@@ -313,1 +310,2 @@\n-        byte[] message = \"testSendReceive\".getBytes(\"UTF-8\");\n+        String message = \"testSendReceive\";\n+        byte[] messageBytes = message.getBytes(\"UTF-8\");\n@@ -316,1 +314,1 @@\n-        DatagramPacket p = new DatagramPacket(message, message.length);\n+        DatagramPacket p = new DatagramPacket(messageBytes, messageBytes.length);\n@@ -325,3 +323,6 @@\n-            if(s.getLocalPort()==p.getPort()){\n-                assertEquals(p.getLength(), message.length,\n-                        String.format(\"expected message %s, instead received %s%n\", message, p));\n+            String messageReceived = new String(p.getData(), 0, p.getLength());\n+\n+            System.out.println(String.format(\"TestSendReceive iteration [%s], Received DatagramPacket [%s] from [%s]\", i, messageReceived, s.getLocalSocketAddress()));\n+            if (s.getLocalPort() == p.getPort()) {\n+                assertEquals(message, messageReceived,\n+                        String.format(\"expected message %s, instead received %s%n\", message, messageReceived));\n@@ -365,1 +366,2 @@\n-                    System.out.format(\"Received unexpected message from %s%n\", p.getSocketAddress());\n+                    String messageReceived = new String(p.getData(), 0, p.getLength());\n+                    System.out.format(\"Received unexpected message %s from %s%n\", messageReceived,p.getSocketAddress());\n","filename":"test\/jdk\/java\/net\/DatagramSocket\/DatagramSocketMulticasting.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"}]}