{"files":[{"patch":"@@ -65,1 +65,1 @@\n-        points = new ArrayList<Point>();\n+        points = new ArrayList<>();\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/BlockConnectionWidget.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        selection = new HashSet<BlockWidget>();\n+        selection = new HashSet<>();\n@@ -93,1 +93,1 @@\n-        ArrayList<InputBlock> blocks = new ArrayList<InputBlock>(this.getNodes());\n+        ArrayList<InputBlock> blocks = new ArrayList<>(this.getNodes());\n@@ -98,1 +98,1 @@\n-        ArrayList<InputBlockEdge> edges = new ArrayList<InputBlockEdge>(this.getEdges());\n+        ArrayList<InputBlockEdge> edges = new ArrayList<>(this.getEdges());\n@@ -115,1 +115,1 @@\n-        GraphLayout<InputBlock, InputBlockEdge> layout = new HierarchicalGraphLayout<InputBlock, InputBlockEdge>();\/\/GridGraphLayout();\n+        GraphLayout<InputBlock, InputBlockEdge> layout = new HierarchicalGraphLayout<>();\n@@ -133,1 +133,1 @@\n-            Set<InputNode> inputNodes = new HashSet<InputNode>();\n+            Set<InputNode> inputNodes = new HashSet<>();\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowScene.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-        Lookup.Template<InputGraphProvider> tpl = new Lookup.Template<InputGraphProvider>(InputGraphProvider.class);\n+        Lookup.Template<InputGraphProvider> tpl = new Lookup.Template<>(InputGraphProvider.class);\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowTopComponent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-            return new ArrayList<Point>();\n+            return new ArrayList<>();\n@@ -144,3 +144,3 @@\n-        Set<LinkWrapper> links = new LinkedHashSet<LinkWrapper>();\n-        Set<VertexWrapper> vertices = new LinkedHashSet<VertexWrapper>();\n-        Map<N, VertexWrapper> vertexMap = new HashMap<N, VertexWrapper>();\n+        Set<LinkWrapper> links = new LinkedHashSet<>();\n+        Set<VertexWrapper> vertices = new LinkedHashSet<>();\n+        Map<N, VertexWrapper> vertexMap = new HashMap<>();\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/HierarchicalGraphLayout.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-        Lookup.Template<InputGraphProvider> tpl = new Lookup.Template<InputGraphProvider>(InputGraphProvider.class);\n+        Lookup.Template<InputGraphProvider> tpl = new Lookup.Template<>(InputGraphProvider.class);\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,22 +43,0 @@\n-    public static final Comparator<InputEdge> OUTGOING_COMPARATOR = new Comparator<InputEdge>(){\n-\n-        @Override\n-            public int compare(InputEdge o1, InputEdge o2) {\n-                if(o1.getFromIndex() == o2.getFromIndex()) {\n-                    return o1.getTo() - o2.getTo();\n-                }\n-                return o1.getFromIndex() - o2.getFromIndex();\n-            }\n-    };\n-\n-    public static final Comparator<InputEdge> INGOING_COMPARATOR = new Comparator<InputEdge>(){\n-\n-        @Override\n-            public int compare(InputEdge o1, InputEdge o2) {\n-                if(o1.getToIndex() == o2.getToIndex()) {\n-                    return o1.getFrom() - o2.getFrom();\n-                }\n-                return o1.getToIndex() - o2.getToIndex();\n-            }\n-    };\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputEdge.java","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -271,7 +271,1 @@\n-            sequence.getChangedEvent().addListener(new ChangedListener<FilterChain>() {\n-\n-                @Override\n-                public void changed(FilterChain source) {\n-                    addNotify();\n-                }\n-            });\n+            sequence.getChangedEvent().addListener(source -> addNotify());\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterTopComponent.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-            List<String> inputs = new ArrayList<String>(getPredecessors().size());\n+            List<String> inputs = new ArrayList<>(getPredecessors().size());\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Figure.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,18 +81,1 @@\n-    public static final Comparator<Slot> slotIndexComparator = new Comparator<Slot>() {\n-\n-        @Override\n-        public int compare(Slot o1, Slot o2) {\n-            return o1.wantedIndex - o2.wantedIndex;\n-        }\n-    };\n-    public static final Comparator<Slot> slotFigureComparator = new Comparator<Slot>() {\n-\n-        @Override\n-        public int compare(Slot o1, Slot o2) {\n-            return o1.figure.getId() - o2.figure.getId();\n-        }\n-    };\n-\n-    public InputNode getAssociatedNode() {\n-        return associatedNode;\n-    }\n+    public static final Comparator<Slot> slotIndexComparator = Comparator.comparingInt(o -> o.wantedIndex);\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Slot.java","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -38,2 +38,2 @@\n-    private ClusterNode from;\n-    private ClusterNode to;\n+    private final ClusterNode from;\n+    private final ClusterNode to;\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/ClusterEdge.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,4 +40,2 @@\n-    private ClusterInputSlotNode inputSlotNode;\n-    private Link connection;\n-    private Port inputSlot;\n-    private Port outputSlot;\n+    private final Port inputSlot;\n+    private final Port outputSlot;\n@@ -46,3 +44,1 @@\n-        this.inputSlotNode = inputSlotNode;\n-        this.connection = c;\n-        this.controlPoints = new ArrayList<Point>();\n+        this.controlPoints = new ArrayList<>();\n@@ -54,8 +50,0 @@\n-    public Link getConnection() {\n-        return connection;\n-    }\n-\n-    public ClusterInputSlotNode getInputSlotNode() {\n-        return inputSlotNode;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/ClusterIngoingConnection.java","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-    private final int SIZE = 0;\n@@ -40,4 +39,3 @@\n-    private Port inputSlot;\n-    private Port outputSlot;\n-    private ClusterNode blockNode;\n-    private InterClusterConnection interBlockConnection;\n+    private final Port inputSlot;\n+    private final Port outputSlot;\n+    private final ClusterNode blockNode;\n@@ -45,1 +43,0 @@\n-    private ClusterIngoingConnection conn;\n@@ -47,8 +44,1 @@\n-    public void setIngoingConnection(ClusterIngoingConnection c) {\n-        conn = c;\n-    }\n-\n-    public ClusterIngoingConnection getIngoingConnection() {\n-        return conn;\n-    }\n-    private String id;\n+    private final String id;\n@@ -82,1 +72,1 @@\n-                return \"OutPort of \" + thisNode.toString();\n+                return \"OutPort of \" + thisNode;\n@@ -101,1 +91,1 @@\n-                return \"InPort of \" + thisNode.toString();\n+                return \"InPort of \" + thisNode;\n@@ -110,4 +100,0 @@\n-    public InterClusterConnection getInterBlockConnection() {\n-        return interBlockConnection;\n-    }\n-\n@@ -119,0 +105,1 @@\n+        int SIZE = 0;\n@@ -130,4 +117,0 @@\n-    public void setInterBlockConnection(InterClusterConnection interBlockConnection) {\n-        this.interBlockConnection = interBlockConnection;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/ClusterInputSlotNode.java","additions":7,"deletions":24,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n-    private Port outputSlot;\n-    private Set<Vertex> subNodes;\n+    private final Set<Vertex> subNodes;\n@@ -46,2 +45,1 @@\n-    private Set<Link> subEdges;\n-    private boolean dirty;\n+    private final Set<Link> subEdges;\n@@ -49,1 +47,1 @@\n-    private String name;\n+    private final String name;\n@@ -58,2 +56,2 @@\n-        this.subNodes = new HashSet<Vertex>();\n-        this.subEdges = new HashSet<Link>();\n+        this.subNodes = new HashSet<>();\n+        this.subEdges = new HashSet<>();\n@@ -61,1 +59,1 @@\n-        position = new Point(0, 0);\n+        this.position = new Point(0, 0);\n@@ -93,2 +91,0 @@\n-\n-\n@@ -113,16 +109,0 @@\n-\n-        outputSlot = new Port() {\n-\n-            public Point getRelativePosition() {\n-                return new Point(size.width \/ 2, 0);\/\/size.height);\n-            }\n-\n-            public Vertex getVertex() {\n-                return widget;\n-            }\n-\n-            @Override\n-            public String toString() {\n-                return \"ClusterOutput(\" + name + \")\";\n-            }\n-        };\n@@ -173,1 +153,1 @@\n-            List<Point> points = new ArrayList<Point>(l.getControlPoints());\n+            List<Point> points = new ArrayList<>(l.getControlPoints());\n@@ -191,4 +171,0 @@\n-    public Port getOutputSlot() {\n-        return outputSlot;\n-    }\n-\n@@ -214,1 +190,1 @@\n-            ArrayList<Point> newArr = new ArrayList<Point>(arr.size());\n+            ArrayList<Point> newArr = new ArrayList<>(arr.size());\n@@ -237,4 +213,0 @@\n-    public void setDirty(boolean b) {\n-        dirty = b;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/ClusterNode.java","additions":8,"deletions":36,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -40,4 +40,2 @@\n-    private ClusterOutputSlotNode outputSlotNode;\n-    private Link connection;\n-    private Port inputSlot;\n-    private Port outputSlot;\n+    private final Port inputSlot;\n+    private final Port outputSlot;\n@@ -46,6 +44,3 @@\n-        this.outputSlotNode = outputSlotNode;\n-        this.connection = c;\n-        this.intermediatePoints = new ArrayList<Point>();\n-\n-        outputSlot = c.getFrom();\n-        inputSlot = outputSlotNode.getInputSlot();\n+        this.intermediatePoints = new ArrayList<>();\n+        this.outputSlot = c.getFrom();\n+        this.inputSlot = outputSlotNode.getInputSlot();\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/ClusterOutgoingConnection.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-    private final int SIZE = 0;\n@@ -40,4 +39,3 @@\n-    private Port inputSlot;\n-    private Port outputSlot;\n-    private ClusterNode blockNode;\n-    private boolean root;\n+    private final Port inputSlot;\n+    private final Port outputSlot;\n+    private final ClusterNode blockNode;\n@@ -46,1 +44,1 @@\n-    private String id;\n+    private final String id;\n@@ -82,1 +80,1 @@\n-                return \"InPort of \" + thisNode.toString();\n+                return \"InPort of \" + thisNode;\n@@ -91,1 +89,1 @@\n-                p.y = 0;\/\/thisBlockNode.getSize().height;\n+                p.y = 0;\n@@ -101,1 +99,1 @@\n-                return \"OutPort of \" + thisNode.toString();\n+                return \"OutPort of \" + thisNode;\n@@ -107,0 +105,1 @@\n+        int SIZE = 0;\n@@ -130,4 +129,0 @@\n-    public void setRoot(boolean b) {\n-        root = b;\n-    }\n-\n@@ -139,1 +134,1 @@\n-        return root;\n+        return false;\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/ClusterOutputSlotNode.java","additions":9,"deletions":14,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private FontMetrics fontMetrics;\n+    private final FontMetrics fontMetrics;\n@@ -74,1 +74,1 @@\n-            subManager.doLayout(new LayoutGraph(n.getSubEdges(), n.getSubNodes()), new HashSet<Link>());\n+            subManager.doLayout(new LayoutGraph(n.getSubEdges(), n.getSubNodes()), new HashSet<>());\n@@ -79,2 +79,1 @@\n-        manager.doLayout(new LayoutGraph(clusterEdges, new HashSet<>(clusterNode.values())),\n-                         new HashSet<Link>());\n+        manager.doLayout(new LayoutGraph(clusterEdges, new HashSet<>(clusterNode.values())), new HashSet<>());\n@@ -140,1 +139,1 @@\n-            inputLink.put(new AbstractMap.SimpleEntry<Cluster, Cluster>(l.getFromCluster(), l.getToCluster()), l);\n+            inputLink.put(new AbstractMap.SimpleEntry<>(l.getFromCluster(), l.getToCluster()), l);\n@@ -144,1 +143,1 @@\n-            Link l = inputLink.get(new AbstractMap.SimpleEntry<Cluster, Cluster>(ce.getFromCluster(), ce.getToCluster()));\n+            Link l = inputLink.get(new AbstractMap.SimpleEntry<>(ce.getFromCluster(), ce.getToCluster()));\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalCFGLayoutManager.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        doLayout(graph, new HashSet<Vertex>(), new HashSet<Vertex>(), new HashSet<Link>());\n+        doLayout(graph, new HashSet<>(), new HashSet<>(), new HashSet<>());\n@@ -66,14 +66,13 @@\n-        HashMap<Cluster, List<Vertex>> lists = new HashMap<Cluster, List<Vertex>>();\n-        HashMap<Cluster, List<Link>> listsConnection = new HashMap<Cluster, List<Link>>();\n-        HashMap<Cluster, HashMap<Port, ClusterInputSlotNode>> clusterInputSlotHash = new HashMap<Cluster, HashMap<Port, ClusterInputSlotNode>>();\n-        HashMap<Cluster, HashMap<Port, ClusterOutputSlotNode>> clusterOutputSlotHash = new HashMap<Cluster, HashMap<Port, ClusterOutputSlotNode>>();\n-\n-        HashMap<Cluster, ClusterNode> clusterNodes = new HashMap<Cluster, ClusterNode>();\n-        HashMap<Cluster, Set<ClusterInputSlotNode>> clusterInputSlotSet = new HashMap<Cluster, Set<ClusterInputSlotNode>>();\n-        HashMap<Cluster, Set<ClusterOutputSlotNode>> clusterOutputSlotSet = new HashMap<Cluster, Set<ClusterOutputSlotNode>>();\n-        Set<Link> clusterEdges = new HashSet<Link>();\n-        Set<Link> interClusterEdges = new HashSet<Link>();\n-        HashMap<Link, ClusterOutgoingConnection> linkClusterOutgoingConnection = new HashMap<Link, ClusterOutgoingConnection>();\n-        HashMap<Link, InterClusterConnection> linkInterClusterConnection = new HashMap<Link, InterClusterConnection>();\n-        HashMap<Link, ClusterIngoingConnection> linkClusterIngoingConnection = new HashMap<Link, ClusterIngoingConnection>();\n-        Set<ClusterNode> clusterNodeSet = new HashSet<ClusterNode>();\n+        HashMap<Cluster, List<Link>> listsConnection = new HashMap<>();\n+        HashMap<Cluster, HashMap<Port, ClusterInputSlotNode>> clusterInputSlotHash = new HashMap<>();\n+        HashMap<Cluster, HashMap<Port, ClusterOutputSlotNode>> clusterOutputSlotHash = new HashMap<>();\n+\n+        HashMap<Cluster, ClusterNode> clusterNodes = new HashMap<>();\n+        HashMap<Cluster, Set<ClusterInputSlotNode>> clusterInputSlotSet = new HashMap<>();\n+        HashMap<Cluster, Set<ClusterOutputSlotNode>> clusterOutputSlotSet = new HashMap<>();\n+        Set<Link> clusterEdges = new HashSet<>();\n+        Set<Link> interClusterEdges = new HashSet<>();\n+        HashMap<Link, ClusterOutgoingConnection> linkClusterOutgoingConnection = new HashMap<>();\n+        HashMap<Link, InterClusterConnection> linkInterClusterConnection = new HashMap<>();\n+        HashMap<Link, ClusterIngoingConnection> linkClusterIngoingConnection = new HashMap<>();\n+        Set<ClusterNode> clusterNodeSet = new HashSet<>();\n@@ -84,6 +83,5 @@\n-            lists.put(c, new ArrayList<Vertex>());\n-            listsConnection.put(c, new ArrayList<Link>());\n-            clusterInputSlotHash.put(c, new HashMap<Port, ClusterInputSlotNode>());\n-            clusterOutputSlotHash.put(c, new HashMap<Port, ClusterOutputSlotNode>());\n-            clusterOutputSlotSet.put(c, new TreeSet<ClusterOutputSlotNode>());\n-            clusterInputSlotSet.put(c, new TreeSet<ClusterInputSlotNode>());\n+            listsConnection.put(c, new ArrayList<>());\n+            clusterInputSlotHash.put(c, new HashMap<>());\n+            clusterOutputSlotHash.put(c, new HashMap<>());\n+            clusterOutputSlotSet.put(c, new TreeSet<>());\n+            clusterInputSlotSet.put(c, new TreeSet<>());\n@@ -149,1 +147,1 @@\n-                    outputSlotNode = new ClusterOutputSlotNode(clusterNodes.get(fromCluster), \"Out \" + fromCluster.toString() + \" \" + samePort.toString());\n+                    outputSlotNode = new ClusterOutputSlotNode(clusterNodes.get(fromCluster), \"Out \" + fromCluster.toString() + \" \" + samePort);\n@@ -164,1 +162,1 @@\n-                    inputSlotNode = new ClusterInputSlotNode(clusterNodes.get(toCluster), \"In \" + toCluster.toString() + \" \" + samePort.toString());\n+                    inputSlotNode = new ClusterInputSlotNode(clusterNodes.get(toCluster), \"In \" + toCluster.toString() + \" \" + samePort);\n@@ -169,1 +167,0 @@\n-                inputSlotNode.setIngoingConnection(conn);\n@@ -171,3 +168,1 @@\n-                if (samePort != null) {\n-                    clusterInputSlotHash.get(toCluster).put(samePort, inputSlotNode);\n-                }\n+                clusterInputSlotHash.get(toCluster).put(samePort, inputSlotNode);\n@@ -228,1 +223,1 @@\n-                List<Point> points = new ArrayList<Point>();\n+                List<Point> points = new ArrayList<>();\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalClusterLayoutManager.java","additions":23,"deletions":28,"binary":false,"changes":51,"status":"modified"}]}