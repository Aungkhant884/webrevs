{"files":[{"patch":"@@ -64,1 +64,1 @@\n-        this.add(BorderLayout.CENTER, treeView);\n+        add(BorderLayout.CENTER, treeView);\n","filename":"src\/utils\/IdealGraphVisualizer\/Bytecodes\/src\/main\/java\/com\/sun\/hotspot\/igv\/bytecodes\/BytecodeViewTopComponent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n@@ -53,1 +53,0 @@\n-    private final InputBlockEdge edge;\n@@ -60,1 +59,0 @@\n-        this.edge = edge;\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/BlockConnectionWidget.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n@@ -46,3 +46,2 @@\n-    private boolean root;\n-    private static final Font FOND = new Font(Font.SANS_SERIF, Font.PLAIN, 12);\n-    private static final Font BOLD_FOND = FOND.deriveFont(Font.BOLD);\n+    private static final Font font = new Font(Font.SANS_SERIF, Font.PLAIN, 12);\n+    private static final Font boldFont = font.deriveFont(Font.BOLD);\n@@ -61,1 +60,1 @@\n-        this.setFont(FOND);\n+        this.setFont(font);\n@@ -122,1 +121,1 @@\n-        return root;\n+        return false;\n@@ -143,1 +142,1 @@\n-                this.setFont(BOLD_FOND);\n+                this.setFont(boldFont);\n@@ -145,1 +144,1 @@\n-                this.setFont(FOND);\n+                this.setFont(font);\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/BlockWidget.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n@@ -61,1 +61,1 @@\n-    private final WidgetAction hoverAction = this.createWidgetHoverAction();\n+    private final WidgetAction hoverAction = createWidgetHoverAction();\n@@ -68,2 +68,2 @@\n-        this.getInputBindings().setZoomActionModifiers(0);\n-        this.setLayout(LayoutFactory.createAbsoluteLayout());\n+        getInputBindings().setZoomActionModifiers(0);\n+        setLayout(LayoutFactory.createAbsoluteLayout());\n@@ -72,1 +72,1 @@\n-        this.addChild(mainLayer);\n+        addChild(mainLayer);\n@@ -75,1 +75,1 @@\n-        this.addChild(edgeLayer);\n+        addChild(edgeLayer);\n@@ -78,1 +78,1 @@\n-        this.addChild(selectLayer);\n+        addChild(selectLayer);\n@@ -80,4 +80,4 @@\n-        this.getActions().addAction(hoverAction);\n-        this.getActions().addAction(selectAction);\n-        this.getActions().addAction(ActionFactory.createRectangularSelectAction(this, selectLayer, this));\n-        this.getActions().addAction(ActionFactory.createMouseCenteredZoomAction(1.1));\n+        getActions().addAction(hoverAction);\n+        getActions().addAction(selectAction);\n+        getActions().addAction(ActionFactory.createRectangularSelectAction(this, selectLayer, this));\n+        getActions().addAction(ActionFactory.createMouseCenteredZoomAction(1.1));\n@@ -92,1 +92,1 @@\n-        ArrayList<InputBlock> blocks = new ArrayList<>(this.getNodes());\n+        ArrayList<InputBlock> blocks = new ArrayList<>(getNodes());\n@@ -97,1 +97,1 @@\n-        ArrayList<InputBlockEdge> edges = new ArrayList<>(this.getEdges());\n+        ArrayList<InputBlockEdge> edges = new ArrayList<>(getEdges());\n@@ -110,2 +110,2 @@\n-            this.setEdgeSource(e, e.getFrom());\n-            this.setEdgeTarget(e, e.getTo());\n+            setEdgeSource(e, e.getFrom());\n+            setEdgeTarget(e, e.getTo());\n@@ -118,1 +118,1 @@\n-        this.validate();\n+        validate();\n@@ -152,0 +152,1 @@\n+    @Override\n@@ -156,0 +157,1 @@\n+    @Override\n@@ -160,0 +162,1 @@\n+    @Override\n@@ -182,2 +185,2 @@\n-    public void movementStarted(Widget widget) {\n-    }\n+    @Override\n+    public void movementStarted(Widget widget) {}\n@@ -185,2 +188,3 @@\n-    public void movementFinished(Widget widget) {\n-    }\n+    @Override\n+\n+    public void movementFinished(Widget widget) {}\n@@ -188,0 +192,1 @@\n+    @Override\n@@ -192,0 +197,1 @@\n+    @Override\n@@ -193,1 +199,2 @@\n-        if (selection.contains(widget)) {\n+        assert widget instanceof BlockWidget;\n+        if (selection.contains((BlockWidget) widget)) {\n@@ -208,0 +215,1 @@\n+    @Override\n@@ -216,0 +224,1 @@\n+    @Override\n@@ -229,1 +238,1 @@\n-        for (InputBlock b : this.getNodes()) {\n+        for (InputBlock b : getNodes()) {\n@@ -255,0 +264,1 @@\n+    @Override\n@@ -264,0 +274,1 @@\n+    @Override\n@@ -280,0 +291,1 @@\n+    @Override\n@@ -281,1 +293,1 @@\n-        Widget w = this.findWidget(edge);\n+        Widget w = findWidget(edge);\n@@ -288,0 +300,1 @@\n+    @Override\n@@ -289,1 +302,1 @@\n-        Widget w = this.findWidget(edge);\n+        Widget w = findWidget(edge);\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowScene.java","additions":37,"deletions":24,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n@@ -53,3 +53,2 @@\n-        this.setLayout(new BorderLayout());\n-        this.associateLookup(scene.getLookup());\n-\n+        setLayout(new BorderLayout());\n+        associateLookup(scene.getLookup());\n@@ -58,1 +57,1 @@\n-        this.add(panel, BorderLayout.CENTER);\n+        add(panel, BorderLayout.CENTER);\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowTopComponent.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/DoubleClickSelectAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n@@ -41,2 +41,1 @@\n-    public HierarchicalGraphLayout() {\n-    }\n+    public HierarchicalGraphLayout() {}\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/HierarchicalGraphLayout.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import com.sun.hotspot.igv.data.services.GroupCallback;\n@@ -39,1 +40,0 @@\n-import java.io.Serializable;\n@@ -68,1 +68,0 @@\n-    private final Server server;\n@@ -84,7 +83,1 @@\n-\n-        server = new Server(g -> {\n-            synchronized(OutlineTopComponent.this) {\n-                g.setParent(getDocument());\n-                getDocument().addElement(g);\n-            }\n-        });\n+        initReceivers();\n@@ -133,0 +126,12 @@\n+    private void initReceivers() {\n+\n+        final GroupCallback callback = g -> {\n+            synchronized(OutlineTopComponent.this) {\n+                g.setParent(getDocument());\n+                getDocument().addElement(g);\n+            }\n+        };\n+\n+        new Server(callback);\n+    }\n+\n@@ -230,2 +235,3 @@\n-                try {\n-                    InputGraph graph = lastProvider.getGraph();\n+                \/\/ Try to fetch and select the latest active graph.\n+                InputGraph graph = lastProvider.getGraph();\n+                if (graph != null) {\n@@ -242,2 +248,0 @@\n-                } catch (Exception e) {\n-                    Exceptions.printStackTrace(e);\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -33,1 +33,5 @@\n-import java.io.*;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.OutputStreamWriter;\n+import java.io.Writer;\n+import java.nio.file.Files;\n@@ -84,1 +88,1 @@\n-                try (Writer writer = new OutputStreamWriter(new FileOutputStream(file))) {\n+                try (Writer writer = new OutputStreamWriter(Files.newOutputStream(file.toPath()))) {\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/SaveAsAction.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,4 +48,0 @@\n-    \/**\n-     * Remove listener\n-     * @param l\n-     *\/\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/Event.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+        getChangedEvent().fire();\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/GraphDocument.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        return this.isDiffGraph;\n+        return isDiffGraph;\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputGraph.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private InputStream in;\n+    private final InputStream in;\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Printer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        changedEvent = new ChangedEvent<Filter>(this);\n+        changedEvent = new ChangedEvent<>(this);\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/AbstractFilter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,7 +63,1 @@\n-        filter.getChangedEvent().addListener(new ChangedListener<Filter>() {\n-\n-            @Override\n-            public void changed(Filter source) {\n-                update();\n-            }\n-        });\n+        filter.getChangedEvent().addListener(source -> update());\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterNode.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -187,7 +187,1 @@\n-            filterSettings.sort(new Comparator<FilterSetting>() {\n-\n-                @Override\n-                public int compare(FilterSetting o1, FilterSetting o2) {\n-                    return o1.getName().compareTo(o2.getName());\n-                }\n-            });\n+            filterSettings.sort(Comparator.comparing(FilterSetting::getName));\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterTopComponent.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/FilterAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+\n@@ -86,1 +87,0 @@\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Diagram.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-    private InputNode inputNode;\n-    private Diagram diagram;\n+    private final InputNode inputNode;\n+    private final Diagram diagram;\n@@ -49,2 +49,2 @@\n-    private List<Figure> predecessors;\n-    private List<Figure> successors;\n+    private final List<Figure> predecessors;\n+    private final List<Figure> successors;\n@@ -53,2 +53,2 @@\n-    private int id;\n-    private String idString;\n+    private final int id;\n+    private final String idString;\n@@ -183,5 +183,1 @@\n-        Set<Figure> result = new HashSet<>();\n-        for (Figure f : getPredecessors()) {\n-            result.add(f);\n-        }\n-        return Collections.unmodifiableSet(result);\n+        return Collections.unmodifiableSet(new HashSet<>(getPredecessors()));\n@@ -191,5 +187,1 @@\n-        Set<Figure> result = new HashSet<>();\n-        for (Figure f : getSuccessors()) {\n-            result.add(f);\n-        }\n-        return Collections.unmodifiableSet(result);\n+        return Collections.unmodifiableSet(new HashSet<>(getSuccessors()));\n@@ -244,7 +236,0 @@\n-    public InputSlot createInputSlot(int index) {\n-        InputSlot slot = new InputSlot(this, index);\n-        inputSlots.add(slot);\n-        inputSlots.sort(Slot.slotIndexComparator);\n-        return slot;\n-    }\n-\n@@ -262,3 +247,1 @@\n-        } else if (outputSlots.contains(s)) {\n-            outputSlots.remove(s);\n-        }\n+        } else outputSlots.remove(s);\n@@ -267,1 +250,1 @@\n-    public OutputSlot createOutputSlot() {\n+    public void createOutputSlot() {\n@@ -270,1 +253,0 @@\n-        return slot;\n@@ -334,2 +316,2 @@\n-        for (int i = 0; i < strings.length; i++) {\n-            result.add(getProperties().resolveString(strings[i]));\n+        for (String string : strings) {\n+            result.add(getProperties().resolveString(string));\n@@ -399,4 +381,0 @@\n-\n-    public Rectangle getBounds() {\n-        return new Rectangle(this.getPosition(), new Dimension(this.getWidth(), this.getHeight()));\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Figure.java","additions":12,"deletions":34,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-            new Timing(\"Child timing\");\n+            t = new Timing(\"Child timing\");\n@@ -184,1 +184,1 @@\n-            subManager.doLayout(new LayoutGraph(n.getSubEdges(), n.getSubNodes()), new HashSet<Link>());\n+            subManager.doLayout(new LayoutGraph(n.getSubEdges(), n.getSubNodes()), new HashSet<>());\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalClusterLayoutManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -557,18 +557,5 @@\n-    private static final Comparator<LayoutNode> nodeProcessingUpComparator = new Comparator<LayoutNode>() {\n-\n-        @Override\n-        public int compare(LayoutNode n1, LayoutNode n2) {\n-            int n1VIP = 0;\n-            for (LayoutEdge e : n1.succs) {\n-                if (e.vip) {\n-                    n1VIP++;\n-                }\n-            }\n-            int n2VIP = 0;\n-            for (LayoutEdge e : n2.succs) {\n-                if (e.vip) {\n-                    n2VIP++;\n-                }\n-            }\n-            if (n1VIP != n2VIP) {\n-                return n2VIP - n1VIP;\n+    private static final Comparator<LayoutNode> nodeProcessingUpComparator = (n1, n2) -> {\n+        int n1VIP = 0;\n+        for (LayoutEdge e : n1.succs) {\n+            if (e.vip) {\n+                n1VIP++;\n@@ -576,5 +563,5 @@\n-            if (n1.vertex == null) {\n-                if (n2.vertex == null) {\n-                    return 0;\n-                }\n-                return -1;\n+        }\n+        int n2VIP = 0;\n+        for (LayoutEdge e : n2.succs) {\n+            if (e.vip) {\n+                n2VIP++;\n@@ -582,0 +569,5 @@\n+        }\n+        if (n1VIP != n2VIP) {\n+            return n2VIP - n1VIP;\n+        }\n+        if (n1.vertex == null) {\n@@ -583,1 +575,1 @@\n-                return 1;\n+                return 0;\n@@ -585,1 +577,4 @@\n-            return n1.succs.size() - n2.succs.size();\n+            return -1;\n+        }\n+        if (n2.vertex == null) {\n+            return 1;\n@@ -587,0 +582,1 @@\n+        return n1.succs.size() - n2.succs.size();\n@@ -633,1 +629,1 @@\n-                sweepUp(false);\n+                sweepUp();\n@@ -639,1 +635,1 @@\n-            sweepUp(true);\n+            sweepUp();\n@@ -644,1 +640,0 @@\n-                int curX = 0;\n@@ -729,1 +724,1 @@\n-        private void sweepUp(boolean onlyDummies) {\n+        private void sweepUp() {\n@@ -739,10 +734,0 @@\n-        private void doubleSweep() {\n-            for (int i = layers.length - 2; i >= 0; i--) {\n-                NodeRow r = new NodeRow(space[i]);\n-                for (LayoutNode n : upProcessingOrder[i]) {\n-                    int optimal = calculateOptimalBoth(n);\n-                    r.insert(n, optimal);\n-                }\n-            }\n-        }\n-\n@@ -1495,1 +1480,1 @@\n-                int curX = 0;\n+                int curY = 0;\n@@ -1507,2 +1492,2 @@\n-                    startPoints.add(new Point(curWidth, curX));\n-                    startPoints.add(new Point(pos, curX));\n+                    startPoints.add(new Point(curWidth, curY));\n+                    startPoints.add(new Point(pos, curY));\n@@ -1514,2 +1499,2 @@\n-                    node.inOffsets.put(pos, -curX);\n-                    curX += offset;\n+                    node.inOffsets.put(pos, -curY);\n+                    curY += offset;\n@@ -1527,7 +1512,1 @@\n-                if (hasReversedDown) {\n-                    curX = -offset;\n-                } else {\n-                    curX = offset;\n-                }\n-\n-                curX = 0;\n+                int curX = 0;\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalLayoutManager.java","additions":30,"deletions":51,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    public void setBounds(Rectangle r);\n+    void setBounds(Rectangle r);\n@@ -38,1 +38,1 @@\n-    public Set<? extends Cluster> getSuccessors();\n+    Set<? extends Cluster> getSuccessors();\n@@ -40,1 +40,1 @@\n-    public Dimension getNodeOffset();\n+    Dimension getNodeOffset();\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/Cluster.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,5 +34,5 @@\n-    private Set<? extends Link> links;\n-    private SortedSet<Vertex> vertices;\n-    private HashMap<Vertex, Set<Port>> inputPorts;\n-    private HashMap<Vertex, Set<Port>> outputPorts;\n-    private HashMap<Port, Set<Link>> portLinks;\n+    private final Set<? extends Link> links;\n+    private final SortedSet<Vertex> vertices;\n+    private final HashMap<Vertex, Set<Port>> inputPorts;\n+    private final HashMap<Vertex, Set<Port>> outputPorts;\n+    private final HashMap<Port, Set<Link>> portLinks;\n@@ -41,1 +41,1 @@\n-        this(links, new HashSet<Vertex>());\n+        this(links, new HashSet<>());\n@@ -64,2 +64,2 @@\n-                outputPorts.put(v1, new HashSet<Port>(1));\n-                inputPorts.put(v1, new HashSet<Port>(3));\n+                outputPorts.put(v1, new HashSet<>(1));\n+                inputPorts.put(v1, new HashSet<>(3));\n@@ -73,2 +73,2 @@\n-                outputPorts.put(v2, new HashSet<Port>(1));\n-                inputPorts.put(v2, new HashSet<Port>(3));\n+                outputPorts.put(v2, new HashSet<>(1));\n+                inputPorts.put(v2, new HashSet<>(3));\n@@ -83,1 +83,1 @@\n-                portLinks.put(p2, new HashSet<Link>(3));\n+                portLinks.put(p2, new HashSet<>(3));\n@@ -95,2 +95,2 @@\n-                outputPorts.put(v, new HashSet<Port>(1));\n-                inputPorts.put(v, new HashSet<Port>(3));\n+                outputPorts.put(v, new HashSet<>(1));\n+                inputPorts.put(v, new HashSet<>(3));\n@@ -98,1 +98,0 @@\n-                vertices.contains(v);\n@@ -187,1 +186,1 @@\n-        return findRootVertices(new HashSet<Vertex>());\n+        return findRootVertices(new HashSet<>());\n@@ -192,1 +191,1 @@\n-        SortedSet<Cluster> clusters = new TreeSet<Cluster>();\n+        SortedSet<Cluster> clusters = new TreeSet<>();\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/LayoutGraph.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    public void doLayout(LayoutGraph graph, Set<? extends Link> importantLinks);\n+    void doLayout(LayoutGraph graph, Set<? extends Link> importantLinks);\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/LayoutManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    public Port getFrom();\n+    Port getFrom();\n@@ -37,1 +37,1 @@\n-    public Cluster getFromCluster();\n+    Cluster getFromCluster();\n@@ -39,1 +39,1 @@\n-    public Port getTo();\n+    Port getTo();\n@@ -41,1 +41,1 @@\n-    public Cluster getToCluster();\n+    Cluster getToCluster();\n@@ -43,1 +43,1 @@\n-    public boolean isVIP();\n+    boolean isVIP();\n@@ -45,1 +45,1 @@\n-    public List<Point> getControlPoints();\n+    List<Point> getControlPoints();\n@@ -47,1 +47,1 @@\n-    public void setControlPoints(List<Point> list);\n+    void setControlPoints(List<Point> list);\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/Link.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    public Vertex getVertex();\n+    Vertex getVertex();\n@@ -36,1 +36,1 @@\n-    public Point getRelativePosition();\n+    Point getRelativePosition();\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/Port.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    public Dimension getSize();\n+    Dimension getSize();\n@@ -37,1 +37,1 @@\n-    public Point getPosition();\n+    Point getPosition();\n@@ -39,1 +39,1 @@\n-    public void setPosition(Point p);\n+    void setPosition(Point p);\n@@ -41,1 +41,1 @@\n-    public boolean isRoot();\n+    boolean isRoot();\n@@ -43,1 +43,1 @@\n-    public Cluster getCluster();\n+    Cluster getCluster();\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/Vertex.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n+ * published by the Free Software Foundation. Oracle designates this\n@@ -13,1 +13,1 @@\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n@@ -125,7 +125,1 @@\n-    private static final Comparator<InputEdge> edgeComparator = new Comparator<InputEdge>() {\n-\n-        @Override\n-        public int compare(InputEdge o1, InputEdge o2) {\n-            return o1.getToIndex() - o2.getToIndex();\n-        }\n-    };\n+    private static final Comparator<InputEdge> edgeComparator = Comparator.comparingInt(InputEdge::getToIndex);\n@@ -176,1 +170,1 @@\n-            Set<Node> blockTerminators = new HashSet<Node>();\n+            Set<Node> blockTerminators = new HashSet<>();\n@@ -286,1 +280,1 @@\n-        controlSuccs.put(n, Arrays.asList(s));\n+        controlSuccs.put(n, Collections.singletonList(s));\n@@ -291,1 +285,1 @@\n-        controlSuccs.put(p, Arrays.asList(n));\n+        controlSuccs.put(p, Collections.singletonList(n));\n@@ -376,16 +370,13 @@\n-    private static final Comparator<Node> schedulePriority = new Comparator<Node>(){\n-            @Override\n-            public int compare(Node n1, Node n2) {\n-                \/\/ Order by rank, then idx.\n-                int r1 = n1.rank, r2 = n2.rank;\n-                int o1, o2;\n-                if (r1 != r2) { \/\/ Different rank.\n-                    o1 = r1;\n-                    o2 = r2;\n-                } else { \/\/ Same rank, order by idx.\n-                    o1 = Integer.parseInt(n1.inputNode.getProperties().get(\"idx\"));\n-                    o2 = Integer.parseInt(n2.inputNode.getProperties().get(\"idx\"));\n-                }\n-                return Integer.compare(o1, o2);\n-            };\n-        };\n+    private static final Comparator<Node> schedulePriority = (n1, n2) -> {\n+        \/\/ Order by rank, then idx.\n+        int r1 = n1.rank, r2 = n2.rank;\n+        int o1, o2;\n+        if (r1 != r2) { \/\/ Different rank.\n+            o1 = r1;\n+            o2 = r2;\n+        } else { \/\/ Same rank, order by idx.\n+            o1 = Integer.parseInt(n1.inputNode.getProperties().get(\"idx\"));\n+            o2 = Integer.parseInt(n2.inputNode.getProperties().get(\"idx\"));\n+        }\n+        return Integer.compare(o1, o2);\n+    };\n@@ -394,1 +385,1 @@\n-        List<InputNode> schedule = new ArrayList<InputNode>();\n+        List<InputNode> schedule = new ArrayList<>();\n@@ -397,1 +388,1 @@\n-        Queue<Node> ready = new PriorityQueue<Node>(schedulePriority);\n+        Queue<Node> ready = new PriorityQueue<>(schedulePriority);\n@@ -399,1 +390,1 @@\n-        Set<Node> visited = new HashSet<Node>(nodes.size());\n+        Set<Node> visited = new HashSet<>(nodes.size());\n@@ -715,3 +706,1 @@\n-        if (root == null) {\n-            assert false : \"No root found!\";\n-        }\n+        assert root != null : \"No root found!\";\n@@ -756,1 +745,1 @@\n-                edgeMap.put(to, new ArrayList<InputEdge>());\n+                edgeMap.put(to, new ArrayList<>());\n@@ -865,1 +854,1 @@\n-                    nodesPerWarning.put(warning, new HashSet<Node>());\n+                    nodesPerWarning.put(warning, new HashSet<>());\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/java\/com\/sun\/hotspot\/igv\/servercompiler\/ServerCompilerScheduler.java","additions":25,"deletions":36,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    private static Map<Class, LookupHistoryImpl> cache = new HashMap<>();\n+    private static final Map<Class, LookupHistoryImpl> cache = new HashMap<>();\n@@ -46,0 +46,1 @@\n+        private final Result<T> result;\n@@ -50,1 +51,1 @@\n-            Result<T> result = Utilities.actionsGlobalContext().lookupResult(klass);\n+            result = Utilities.actionsGlobalContext().lookupResult(klass);\n","filename":"src\/utils\/IdealGraphVisualizer\/Util\/src\/main\/java\/com\/sun\/hotspot\/igv\/util\/LookupHistory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/Util\/src\/main\/java\/com\/sun\/hotspot\/igv\/util\/PropertiesConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,3 @@\n-import java.awt.event.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseWheelListener;\n@@ -109,1 +111,1 @@\n-        Widget w = this.findWidget(o);\n+        Widget w = findWidget(o);\n@@ -115,1 +117,1 @@\n-        Widget w = this.findWidget(o);\n+        Widget w = findWidget(o);\n@@ -207,2 +209,2 @@\n-            DiagramScene.this.setHighlightedObjects(idSetToObjectSet(source.getHighlightedObjects()));\n-            DiagramScene.this.validate();\n+            setHighlightedObjects(idSetToObjectSet(source.getHighlightedObjects()));\n+            validate();\n@@ -215,2 +217,2 @@\n-            DiagramScene.this.gotoSelection(source.getSelectedObjects());\n-            DiagramScene.this.validate();\n+            gotoSelection(source.getSelectedObjects());\n+            validate();\n@@ -261,1 +263,0 @@\n-\n@@ -268,1 +269,1 @@\n-        this.setCheckClipping(true);\n+        setCheckClipping(true);\n@@ -279,1 +280,1 @@\n-        this.getActions().addAction(panAction);\n+        getActions().addAction(panAction);\n@@ -308,1 +309,1 @@\n-        this.getActions().addAction(selectAction);\n+        getActions().addAction(selectAction);\n@@ -311,1 +312,1 @@\n-        this.addChild(blockLayer);\n+        addChild(blockLayer);\n@@ -314,1 +315,1 @@\n-        this.addChild(connectionLayer);\n+        addChild(connectionLayer);\n@@ -317,1 +318,1 @@\n-        this.addChild(mainLayer);\n+        addChild(mainLayer);\n@@ -319,4 +320,4 @@\n-        this.setBorder(BorderFactory.createLineBorder(Color.white, BORDER_SIZE));\n-        this.setLayout(LayoutFactory.createAbsoluteLayout());\n-        this.getActions().addAction(mouseZoomAction);\n-        this.getActions().addAction(ActionFactory.createPopupMenuAction(popupMenuProvider));\n+        setBorder(BorderFactory.createLineBorder(Color.white, BORDER_SIZE));\n+        setLayout(LayoutFactory.createAbsoluteLayout());\n+        getActions().addAction(mouseZoomAction);\n+        getActions().addAction(ActionFactory.createPopupMenuAction((widget, localLocation) -> createPopupMenu()));\n@@ -325,1 +326,1 @@\n-        this.addChild(selectLayer);\n+        addChild(selectLayer);\n@@ -372,1 +373,1 @@\n-        this.getActions().addAction(ActionFactory.createRectangularSelectAction(rectangularSelectDecorator, selectLayer, rectangularSelectProvider));\n+        getActions().addAction(ActionFactory.createRectangularSelectAction(rectangularSelectDecorator, selectLayer, rectangularSelectProvider));\n@@ -374,4 +375,4 @@\n-        boolean b = this.getUndoRedoEnabled();\n-        this.setUndoRedoEnabled(false);\n-        this.setNewModel(model);\n-        this.setUndoRedoEnabled(b);\n+        boolean b = getUndoRedoEnabled();\n+        setUndoRedoEnabled(false);\n+        setNewModel(model);\n+        setUndoRedoEnabled(b);\n@@ -451,1 +452,1 @@\n-                Set<Object> newHighlightedObjects = new HashSet<>(DiagramScene.this.getHighlightedObjects());\n+                Set<Object> newHighlightedObjects = new HashSet<>(getHighlightedObjects());\n@@ -458,1 +459,1 @@\n-                DiagramScene.this.setHighlightedObjects(newHighlightedObjects);\n+                setHighlightedObjects(newHighlightedObjects);\n@@ -465,1 +466,1 @@\n-        this.addObjectSceneListener(selectionChangedListener, ObjectSceneEventType.OBJECT_SELECTION_CHANGED, ObjectSceneEventType.OBJECT_HIGHLIGHTING_CHANGED, ObjectSceneEventType.OBJECT_HOVER_CHANGED);\n+        addObjectSceneListener(selectionChangedListener, ObjectSceneEventType.OBJECT_SELECTION_CHANGED, ObjectSceneEventType.OBJECT_HIGHLIGHTING_CHANGED, ObjectSceneEventType.OBJECT_HOVER_CHANGED);\n@@ -494,1 +495,1 @@\n-        final boolean hidden = !this.getWidget(f, FigureWidget.class).isVisible();\n+        final boolean hidden = !getWidget(f, FigureWidget.class).isVisible();\n@@ -545,1 +546,1 @@\n-        Collection<Object> objects = new ArrayList<>(this.getObjects());\n+        Collection<Object> objects = new ArrayList<>(getObjects());\n@@ -547,1 +548,1 @@\n-            this.removeObject(o);\n+            removeObject(o);\n@@ -577,1 +578,1 @@\n-            this.addObject(f, w);\n+            addObject(f, w);\n@@ -600,1 +601,1 @@\n-                this.addObject(bn, w);\n+                addObject(bn, w);\n@@ -606,1 +607,1 @@\n-        this.smallUpdate(true);\n+        smallUpdate(true);\n@@ -614,5 +615,5 @@\n-        this.updateHiddenNodes(model.getHiddenNodes(), relayout);\n-        boolean b = this.getUndoRedoEnabled();\n-        this.setUndoRedoEnabled(false);\n-        this.setUndoRedoEnabled(b);\n-        this.validate();\n+        updateHiddenNodes(model.getHiddenNodes(), relayout);\n+        boolean b = getUndoRedoEnabled();\n+        setUndoRedoEnabled(false);\n+        setUndoRedoEnabled(b);\n+        validate();\n@@ -742,1 +743,1 @@\n-        SceneAnimator animator = this.getSceneAnimator();\n+        SceneAnimator animator = getSceneAnimator();\n@@ -807,1 +808,1 @@\n-        this.validate();\n+        validate();\n@@ -904,1 +905,1 @@\n-    public void gotoFigures(final List<Figure> figures) {\n+    private void gotoFigures(final List<Figure> figures) {\n@@ -954,1 +955,1 @@\n-        Set<Integer> hiddenNodes = new HashSet<>(this.getModel().getHiddenNodes());\n+        Set<Integer> hiddenNodes = new HashSet<>(getModel().getHiddenNodes());\n@@ -956,1 +957,1 @@\n-        this.getModel().setHiddenNodes(hiddenNodes);\n+        getModel().setHiddenNodes(hiddenNodes);\n@@ -1002,1 +1003,0 @@\n-\n@@ -1139,1 +1139,1 @@\n-        this.validate();\n+        validate();\n@@ -1146,1 +1146,1 @@\n-        this.getModel().setHiddenNodes(newHiddenNodes);\n+        getModel().setHiddenNodes(newHiddenNodes);\n@@ -1172,1 +1172,1 @@\n-        if (this.getSelectedObjects().isEmpty()) {\n+        if (getSelectedObjects().isEmpty()) {\n@@ -1234,2 +1234,2 @@\n-    private void setUndoRedoEnabled(boolean b) {\n-        this.undoRedoEnabled = b;\n+    private void setUndoRedoEnabled(boolean enable) {\n+        undoRedoEnabled = enable;\n@@ -1275,1 +1275,1 @@\n-            this.getUndoRedoManager().undoableEditHappened(new UndoableEditEvent(this, new DiagramUndoRedo(this, this.getScrollPosition(), modelCopy, newModelCopy)));\n+            getUndoRedoManager().undoableEditHappened(new UndoableEditEvent(this, new DiagramUndoRedo(this, getScrollPosition(), modelCopy, newModelCopy)));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":50,"deletions":50,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+    private boolean hideDuplicates;\n+\n@@ -93,2 +95,1 @@\n-        boolean diagramChanged = (filterChain != newModel.filterChain);\n-        this.filterChain = newModel.filterChain;\n+        boolean diagramChanged = filterChain != newModel.filterChain;\n@@ -96,1 +97,0 @@\n-        this.sequenceFilterChain = newModel.sequenceFilterChain;\n@@ -98,3 +98,2 @@\n-        this.diagram = newModel.diagram;\n-        boolean viewChanged = (hiddenNodes != newModel.hiddenNodes);\n-        this.hiddenNodes = newModel.hiddenNodes;\n+\n+        boolean viewChanged = hiddenNodes != newModel.hiddenNodes;\n@@ -102,1 +101,1 @@\n-        this.selectedNodes = newModel.selectedNodes;\n+\n@@ -104,1 +103,0 @@\n-        this.showSea = newModel.showSea;\n@@ -106,1 +104,0 @@\n-        this.showBlocks = newModel.showBlocks;\n@@ -108,1 +105,0 @@\n-        this.showCFG = newModel.showCFG;\n@@ -110,1 +106,10 @@\n-        this.showNodeHull = newModel.showNodeHull;\n+\n+        filterChain = newModel.filterChain;\n+        sequenceFilterChain = newModel.sequenceFilterChain;\n+        diagram = newModel.diagram;\n+        hiddenNodes = newModel.hiddenNodes;\n+        selectedNodes = newModel.selectedNodes;\n+        showSea = newModel.showSea;\n+        showBlocks = newModel.showBlocks;\n+        showCFG = newModel.showCFG;\n+        showNodeHull = newModel.showNodeHull;\n@@ -168,0 +173,16 @@\n+    public void setHideDuplicates(boolean hideDuplicates) {\n+        InputGraph currentGraph = getFirstGraph();\n+        if (hideDuplicates) {\n+            \/\/ Back up to the unhidden equivalent graph\n+            int index = graphs.indexOf(currentGraph);\n+            while (graphs.get(index).getProperties().get(\"_isDuplicate\") != null) {\n+                index--;\n+            }\n+            currentGraph = graphs.get(index);\n+        }\n+        filterGraphs();\n+        selectGraph(currentGraph);\n+        viewPropertiesChangedEvent.fire();\n+    }\n+\n+\n@@ -171,6 +192,7 @@\n-        this.showSea = Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.SEA_OF_NODES;\n-        this.showBlocks = Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CLUSTERED_SEA_OF_NODES;\n-        this.showCFG = Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CONTROL_FLOW_GRAPH;\n-        this.showNodeHull = true;\n-        this.showEmptyBlocks = true;\n-        this.group = graph.getGroup();\n+        showSea = Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.SEA_OF_NODES;\n+        showBlocks = Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CLUSTERED_SEA_OF_NODES;\n+        showCFG = Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CONTROL_FLOW_GRAPH;\n+        showNodeHull = true;\n+        showEmptyBlocks = true;\n+        group = graph.getGroup();\n+        group.getChangedEvent().addListener(groupContentChangedListener);\n@@ -190,17 +212,0 @@\n-        groupChangedEvent = new ChangedEvent<>(this);\n-        ChangedListener<DiagramViewModel> groupChangedListener = new ChangedListener<DiagramViewModel>() {\n-\n-            private Group oldGroup;\n-\n-            @Override\n-            public void changed(DiagramViewModel source) {\n-                if (oldGroup != null) {\n-                    oldGroup.getChangedEvent().removeListener(groupContentChangedListener);\n-                }\n-                group.getChangedEvent().addListener(groupContentChangedListener);\n-                oldGroup = group;\n-            }\n-        };\n-        groupChangedEvent.addListener(groupChangedListener);\n-        groupChangedEvent.fire();\n-\n@@ -293,1 +298,1 @@\n-    public void showFigures(Collection<Figure> f) {\n+    public void showFigures(Collection<Figure> figures) {\n@@ -295,2 +300,2 @@\n-        for (Figure fig : f) {\n-            newHiddenNodes.remove(fig.getInputNode().getId());\n+        for (Figure f : figures) {\n+            newHiddenNodes.remove(f.getInputNode().getId());\n@@ -354,1 +359,1 @@\n-        diagramChangedEvent.fire();\n+        getDiagramChangedEvent().fire();\n@@ -368,2 +373,5 @@\n-            result.add(graph);\n-            positions.add(graph.getName());\n+            String duplicate = graph.getProperties().get(\"_isDuplicate\");\n+            if (duplicate == null || !hideDuplicates) {\n+                result.add(graph);\n+                positions.add(graph.getName());\n+            }\n@@ -391,0 +399,5 @@\n+        if (index == -1 && hideDuplicates) {\n+            \/\/ A graph was selected that's currently hidden, so unhide and select it.\n+            setHideDuplicates(false);\n+            index = graphs.indexOf(g);\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":53,"deletions":40,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+\n@@ -70,0 +71,1 @@\n+    \n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            return editor.getModel().getGraphToView();\n+            return editor.getModel().getGraph();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorInputGraphProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.data.Properties;\n@@ -76,1 +75,2 @@\n-    public EditorTopComponent(Diagram diagram) {\n+\n+    public EditorTopComponent(InputGraph graph) {\n@@ -119,0 +119,1 @@\n+        add(container, BorderLayout.NORTH);\n@@ -120,4 +121,3 @@\n-        DiagramViewModel diagramViewModel = new DiagramViewModel(diagram.getGraph().getGroup(), filterChain, sequence);\n-        RangeSlider rangeSlider = new RangeSlider();\n-        rangeSlider.setModel(diagramViewModel);\n-        if (diagram.getGraph().getGroup().getGraphsCount() == 1) {\n+        DiagramViewModel diagramViewModel = new DiagramViewModel(graph, filterChain, sequence);\n+        RangeSlider rangeSlider = new RangeSlider(diagramViewModel);\n+        if (diagramViewModel.getGroup().getGraphs().size() == 1) {\n@@ -128,1 +128,0 @@\n-        add(container, BorderLayout.NORTH);\n@@ -137,6 +136,4 @@\n-        diagramViewModel.getDiagramChangedEvent().addListener(source -> {\n-            setDisplayName(getDiagram().getName());\n-            setToolTipText(getDiagram().getGraph().getGroup().getName());\n-            Collection<Object> list = new ArrayList<>();\n-            list.add(new EditorInputGraphProvider(EditorTopComponent.this));\n-            graphContent.set(list, null);\n+        diagramViewModel.getDiagramChangedEvent().addListener(model -> {\n+            setDisplayName(model.getGraph().getName());\n+            setToolTipText(model.getGroup().getName());\n+            graphContent.set(Collections.singletonList(new EditorInputGraphProvider(this)), null);\n@@ -144,1 +141,0 @@\n-        diagramViewModel.selectGraph(diagram.getGraph());\n@@ -252,1 +248,1 @@\n-        return getModel().getDiagramToView();\n+        return getModel().getDiagram();\n@@ -306,6 +302,0 @@\n-    public void setSelection(PropertyMatcher matcher) {\n-        Properties.PropertySelector<Figure> selector = new Properties.PropertySelector<>(getDiagram().getFigures());\n-        List<Figure> list = selector.selectMultiple(matcher);\n-        setSelectedFigures(list);\n-    }\n-\n@@ -324,5 +314,2 @@\n-            for (InputNode n : f.getSource().getSourceNodes()) {\n-                if (ids.contains(n.getId())) {\n-                    list.add(f);\n-                    break;\n-                }\n+            if (ids.contains(f.getInputNode().getId())) {\n+                list.add(f);\n@@ -337,1 +324,1 @@\n-            if (f.getBlock() == b) {\n+            if (f.getBlock().getInputBlock() == b) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":14,"deletions":27,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -179,8 +179,5 @@\n-            response.addResult(new Runnable() {\n-                @Override\n-                public void run() {\n-                    Message desc = new NotifyDescriptor.Message(\"An exception occurred during the search, \"\n-                            + \"perhaps due to a malformed query string:\\n\" + msg,\n-                            NotifyDescriptor.WARNING_MESSAGE);\n-                    DialogDisplayer.getDefault().notify(desc);\n-                }\n+            response.addResult(() -> {\n+                Message desc = new Message(\"An exception occurred during the search, \"\n+                        + \"perhaps due to a malformed query string:\\n\" + msg,\n+                        NotifyDescriptor.WARNING_MESSAGE);\n+                DialogDisplayer.getDefault().notify(desc);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/NodeQuickSearch.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-            for (Figure f : editor.getModel().getDiagramToView().getFigures()) {\n+            for (Figure f : editor.getModel().getDiagram().getFigures()) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandAdjacentAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        model.showNot(nodes);\n+        model.setHiddenNodes(nodes);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/HideAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        model.showNot(new HashSet<>());\n+        model.setHiddenNodes(new HashSet<>());\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ShowAllAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,4 @@\n-import javax.swing.*;\n+import javax.swing.BorderFactory;\n+import javax.swing.DefaultComboBoxModel;\n+import javax.swing.JComboBox;\n+import javax.swing.JTextField;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomLevelAction.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-    public static final boolean VERTICAL_LAYOUT = true;\n@@ -83,4 +82,0 @@\n-    public Node getNode() {\n-        return node;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/widgets\/FigureWidget.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,15 +26,15 @@\n-   version=\"1.1\"\n-   id=\"Vector_Icons\"\n-   x=\"0px\"\n-   y=\"0px\"\n-   width=\"16px\"\n-   height=\"16px\"\n-   viewBox=\"0 0 16 16\"\n-   style=\"enable-background:new 0 0 16 16;\"\n-   xml:space=\"preserve\"\n-   sodipodi:docname=\"zoomIn.svg\"\n-   inkscape:version=\"1.2.1 (9c6d41e, 2022-07-14)\"\n-   xmlns:inkscape=\"http:\/\/www.inkscape.org\/namespaces\/inkscape\"\n-   xmlns:sodipodi=\"http:\/\/sodipodi.sourceforge.net\/DTD\/sodipodi-0.dtd\"\n-   xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n-   xmlns:svg=\"http:\/\/www.w3.org\/2000\/svg\"><defs\n+        version=\"1.1\"\n+        id=\"Vector_Icons\"\n+        x=\"0px\"\n+        y=\"0px\"\n+        width=\"16px\"\n+        height=\"16px\"\n+        viewBox=\"0 0 16 16\"\n+        style=\"enable-background:new 0 0 16 16;\"\n+        xml:space=\"preserve\"\n+        sodipodi:docname=\"zoomIn.svg\"\n+        inkscape:version=\"1.2.1 (9c6d41e, 2022-07-14)\"\n+        xmlns:inkscape=\"http:\/\/www.inkscape.org\/namespaces\/inkscape\"\n+        xmlns:sodipodi=\"http:\/\/sodipodi.sourceforge.net\/DTD\/sodipodi-0.dtd\"\n+        xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n+><defs\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/zoomIn.svg","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -26,15 +26,15 @@\n-   version=\"1.1\"\n-   id=\"Vector_Icons\"\n-   x=\"0px\"\n-   y=\"0px\"\n-   width=\"16px\"\n-   height=\"16px\"\n-   viewBox=\"0 0 16 16\"\n-   style=\"enable-background:new 0 0 16 16;\"\n-   xml:space=\"preserve\"\n-   sodipodi:docname=\"zoomIn.svg\"\n-   inkscape:version=\"1.2.1 (9c6d41e, 2022-07-14)\"\n-   xmlns:inkscape=\"http:\/\/www.inkscape.org\/namespaces\/inkscape\"\n-   xmlns:sodipodi=\"http:\/\/sodipodi.sourceforge.net\/DTD\/sodipodi-0.dtd\"\n-   xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n-   xmlns:svg=\"http:\/\/www.w3.org\/2000\/svg\"><defs\n+        version=\"1.1\"\n+        id=\"Vector_Icons\"\n+        x=\"0px\"\n+        y=\"0px\"\n+        width=\"16px\"\n+        height=\"16px\"\n+        viewBox=\"0 0 16 16\"\n+        style=\"enable-background:new 0 0 16 16;\"\n+        xml:space=\"preserve\"\n+        sodipodi:docname=\"zoomIn.svg\"\n+        inkscape:version=\"1.2.1 (9c6d41e, 2022-07-14)\"\n+        xmlns:inkscape=\"http:\/\/www.inkscape.org\/namespaces\/inkscape\"\n+        xmlns:sodipodi=\"http:\/\/sodipodi.sourceforge.net\/DTD\/sodipodi-0.dtd\"\n+        xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n+><defs\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/zoomOut.svg","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -26,15 +26,15 @@\n-   version=\"1.1\"\n-   id=\"Vector_Icons\"\n-   x=\"0px\"\n-   y=\"0px\"\n-   width=\"16px\"\n-   height=\"16px\"\n-   viewBox=\"0 0 16 16\"\n-   style=\"enable-background:new 0 0 16 16;\"\n-   xml:space=\"preserve\"\n-   sodipodi:docname=\"zoomReset.svg\"\n-   inkscape:version=\"1.2.1 (9c6d41e, 2022-07-14)\"\n-   xmlns:inkscape=\"http:\/\/www.inkscape.org\/namespaces\/inkscape\"\n-   xmlns:sodipodi=\"http:\/\/sodipodi.sourceforge.net\/DTD\/sodipodi-0.dtd\"\n-   xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n-   xmlns:svg=\"http:\/\/www.w3.org\/2000\/svg\"><defs\n+        version=\"1.1\"\n+        id=\"Vector_Icons\"\n+        x=\"0px\"\n+        y=\"0px\"\n+        width=\"16px\"\n+        height=\"16px\"\n+        viewBox=\"0 0 16 16\"\n+        style=\"enable-background:new 0 0 16 16;\"\n+        xml:space=\"preserve\"\n+        sodipodi:docname=\"zoomReset.svg\"\n+        inkscape:version=\"1.2.1 (9c6d41e, 2022-07-14)\"\n+        xmlns:inkscape=\"http:\/\/www.inkscape.org\/namespaces\/inkscape\"\n+        xmlns:sodipodi=\"http:\/\/sodipodi.sourceforge.net\/DTD\/sodipodi-0.dtd\"\n+        xmlns=\"http:\/\/www.w3.org\/2000\/svg\"\n+><defs\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/zoomReset.svg","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}