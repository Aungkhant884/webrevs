{"files":[{"patch":"@@ -153,1 +153,1 @@\n-  format %{ \" # reinterpret $dst,$src\\t# D2X\" %}\n+  format %{ \" # reinterpret $dst,$src\\t# D to X\" %}\n@@ -155,2 +155,1 @@\n-    \/\/ The upper 64 bits of 'src' are expected to have been initialized\n-    \/\/ to zero.\n+    \/\/ The higher 64-bits of the \"dst\" register must be cleared to zero.\n@@ -170,1 +169,1 @@\n-  format %{ \" # reinterpret $dst,$src\\t# X2D\" %}\n+  format %{ \" # reinterpret $dst,$src\\t# X to D\" %}\n@@ -172,2 +171,1 @@\n-    \/\/ Resize the vector from 128-bits to 64-bits. The higher 64-bits of\n-    \/\/ the \"dst\" register must be cleared to zero.\n+    \/\/ The higher 64-bits of the \"dst\" register must be cleared to zero.\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -98,19 +98,2 @@\n-\n-instruct reinterpretD2X(vecX dst, vecD src)\n-%{\n-  predicate(n->bottom_type()->is_vect()->length_in_bytes() == 16 &&\n-            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 8);\n-  match(Set dst (VectorReinterpret src));\n-  ins_cost(INSN_COST);\n-  format %{ \" # reinterpret $dst,$src\\t# D2X\" %}\n-  ins_encode %{\n-    \/\/ The upper 64 bits of 'src' are expected to have been initialized\n-    \/\/ to zero.\n-    __ orr(as_FloatRegister($dst$$reg), __ T8B,\n-           as_FloatRegister($src$$reg),\n-           as_FloatRegister($src$$reg));\n-  %}\n-  ins_pipe(vlogical64);\n-%}\n-\n-instruct reinterpretX2D(vecD dst, vecX src)\n+define(`REINTERPRET_DX', `\n+instruct reinterpret$1`'2$2`'(vec$2 dst, vec$1 src)\n@@ -118,2 +101,2 @@\n-  predicate(n->bottom_type()->is_vect()->length_in_bytes() == 8 &&\n-            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == 16);\n+  predicate(n->bottom_type()->is_vect()->length_in_bytes() == $3 &&\n+            n->in(1)->bottom_type()->is_vect()->length_in_bytes() == $4);\n@@ -122,1 +105,1 @@\n-  format %{ \" # reinterpret $dst,$src\\t# X2D\" %}\n+  format %{ \" # reinterpret $dst,$src\\t# $1 to $2\" %}\n@@ -124,2 +107,1 @@\n-    \/\/ Resize the vector from 128-bits to 64-bits. The higher 64-bits of\n-    \/\/ the \"dst\" register must be cleared to zero.\n+    \/\/ The higher 64-bits of the \"dst\" register must be cleared to zero.\n@@ -131,1 +113,5 @@\n-%}\n+%}')dnl\n+dnl            $1 $2 $3  $4\n+REINTERPRET_DX(D, X, 16, 8)\n+REINTERPRET_DX(X, D, 8,  16)\n+dnl\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4","additions":11,"deletions":25,"binary":false,"changes":36,"status":"modified"}]}