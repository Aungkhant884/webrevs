{"files":[{"patch":"@@ -305,0 +305,2 @@\n+com.sun.management.jmxremote.serial.filter.pattern=java.lang.*;java.math.BigInteger;java.math.BigDecimal;java.util.*;javax.management.openmbean.*;javax.management.ObjectName;java.rmi.MarshalledObject;javax.security.auth.Subject;!*\n+\n","filename":"src\/jdk.management.agent\/share\/conf\/management.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,1 +177,3 @@\n-            System.out.println(\"Attempting testDefaultAgent(\" + propertyFile + \") with port: \" + port);\n+            System.out.println(\"Attempting testDefaultAgent(\" +\n+                               (propertyFile != null ? propertyFile : \"no properties\")\n+                               + \") with port: \" + port);\n@@ -191,1 +193,0 @@\n-        String propFile = System.getProperty(\"test.src\") + File.separator + propertyFile;\n@@ -197,7 +198,8 @@\n-        String[] args = new String[]{\n-            \"-Dcom.sun.management.jmxremote.port=\" + port,\n-            \"-Dcom.sun.management.jmxremote.authenticate=false\",\n-            \"-Dcom.sun.management.jmxremote.ssl=false\",\n-            \"-Dcom.sun.management.config.file=\" + propFile\n-        };\n-        pbArgs.addAll(Arrays.asList(args));\n+        \/\/ JMX config arguments, using propertyFile if non-null:\n+        pbArgs.add(\"-Dcom.sun.management.jmxremote.port=\" + port);\n+        pbArgs.add(\"-Dcom.sun.management.jmxremote.authenticate=false\");\n+        pbArgs.add(\"-Dcom.sun.management.jmxremote.ssl=false\");\n+        if (propertyFile != null) {\n+            String propFile = System.getProperty(\"test.src\") + File.separator + propertyFile;\n+            pbArgs.add(\"-Dcom.sun.management.config.file=\" + propFile);\n+        }\n@@ -285,0 +287,13 @@\n+        try {\n+            \/\/ Use default filter, should fail with: java.io.InvalidClassException: filter status: REJECTED\n+            testDefaultAgent(null);\n+            throw new RuntimeException(\"---\" + DefaultAgentFilterTest.class.getName() + \" - No exception reported\");\n+        } catch (Exception ex) {\n+            System.out.println(ex);\n+            if (ex instanceof InvalidClassException) {\n+                System.out.println(\"----\\tTest PASSED: expected InvalidClassException received.\");\n+            } else {\n+                System.out.println(\"----\\tTest FAILED: unexpected Exception\");\n+                throw ex;\n+            }\n+        }\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/DefaultAgentFilterTest.java","additions":24,"deletions":9,"binary":false,"changes":33,"status":"modified"}]}