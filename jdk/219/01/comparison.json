{"files":[{"patch":"@@ -934,5 +934,1 @@\n-  if (result != NULL) {\n-    if (_old_gen != NULL) {\n-      _old_gen->sample_eden_chunk();\n-    }\n-  } else {\n+  if (result == NULL) {\n@@ -950,5 +946,1 @@\n-  HeapWord* res = eden()->par_allocate(word_size);\n-  if (_old_gen != NULL) {\n-    _old_gen->sample_eden_chunk();\n-  }\n-  return res;\n+  return eden()->par_allocate(word_size);\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -374,11 +374,0 @@\n-  \/\/ Support for CMS's rescan. In this general form we return a pointer\n-  \/\/ to an abstract object that can be used, based on specific previously\n-  \/\/ decided protocols, to exchange information between generations,\n-  \/\/ information that may be useful for speeding up certain types of\n-  \/\/ garbage collectors. A NULL value indicates to the client that\n-  \/\/ no data recording is expected by the provider. The data-recorder is\n-  \/\/ expected to be GC worker thread-local, with the worker index\n-  \/\/ indicated by \"thr_num\".\n-  virtual void* get_data_recorder(int thr_num) { return NULL; }\n-  virtual void sample_eden_chunk() {}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/generation.hpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -274,3 +274,0 @@\n-  \/\/ mark-sweep support\n-  void follow_body(int begin, int end);\n-\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}