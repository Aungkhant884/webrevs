{"files":[{"patch":"@@ -43,1 +43,0 @@\n-import javax.swing.SwingUtilities;\n@@ -231,21 +230,21 @@\n-        \/\/ Wait for LookupHistory to be updated with the last active graph\n-        \/\/ before selecting it.\n-        SwingUtilities.invokeLater(() -> {\n-            for (GraphNode graphNode : selectedGraphs) {\n-                graphNode.setSelected(false);\n-            }\n-            for (FolderNode folderNode : selectedFolders) {\n-                folderNode.setSelected(false);\n-            }\n-            selectedGraphs = new GraphNode[0];\n-            selectedFolders.clear();\n-            if (lastProvider != null) {\n-                \/\/ Try to fetch and select the latest active graph.\n-                InputGraph graph = lastProvider.getGraph();\n-                if (graph != null) {\n-                    if (graph.isDiffGraph()) {\n-                        EditorTopComponent editor = EditorTopComponent.getActive();\n-                        if (editor != null) {\n-                            InputGraph firstGraph = editor.getModel().getFirstGraph();\n-                            InputGraph secondGraph = editor.getModel().getSecondGraph();\n-                            selectedGraphs = new GraphNode[]{FolderNode.getGraphNode(firstGraph), FolderNode.getGraphNode(secondGraph)};\n+        for (GraphNode graphNode : selectedGraphs) {\n+            graphNode.setSelected(false);\n+        }\n+        for (FolderNode folderNode : selectedFolders) {\n+            folderNode.setSelected(false);\n+        }\n+        selectedGraphs = new GraphNode[0];\n+        selectedFolders.clear();\n+        if (lastProvider != null) {\n+            \/\/ Try to fetch and select the latest active graph.\n+            InputGraph graph = lastProvider.getGraph();\n+            if (graph != null) {\n+                if (graph.isDiffGraph()) {\n+                    EditorTopComponent editor = EditorTopComponent.getActive();\n+                    if (editor != null) {\n+                        InputGraph firstGraph = editor.getModel().getFirstGraph();\n+                        GraphNode firstNode = FolderNode.getGraphNode(firstGraph);\n+                        InputGraph secondGraph = editor.getModel().getSecondGraph();\n+                        GraphNode secondNode = FolderNode.getGraphNode(secondGraph);\n+                        if (firstNode != null && secondNode != null) {\n+                            selectedGraphs = new GraphNode[]{firstNode, secondNode};\n@@ -253,2 +252,5 @@\n-                    } else {\n-                        selectedGraphs = new GraphNode[]{FolderNode.getGraphNode(graph)};\n+                    }\n+                } else {\n+                    GraphNode graphNode = FolderNode.getGraphNode(graph);\n+                    if (graphNode != null) {\n+                        selectedGraphs = new GraphNode[]{graphNode};\n@@ -258,9 +260,8 @@\n-            try {\n-                for (GraphNode graphNode : selectedGraphs) {\n-                    Node parentNode = graphNode.getParentNode();\n-                    if (parentNode instanceof FolderNode) {\n-                        FolderNode folderNode = (FolderNode) graphNode.getParentNode();\n-                        folderNode.setSelected(true);\n-                        selectedFolders.add(folderNode);\n-                    }\n-                    graphNode.setSelected(true);\n+        }\n+        try {\n+            for (GraphNode graphNode : selectedGraphs) {\n+                Node parentNode = graphNode.getParentNode();\n+                if (parentNode instanceof FolderNode) {\n+                    FolderNode folderNode = (FolderNode) graphNode.getParentNode();\n+                    folderNode.setSelected(true);\n+                    selectedFolders.add(folderNode);\n@@ -268,3 +269,1 @@\n-                manager.setSelectedNodes(selectedGraphs);\n-            } catch (Exception e) {\n-                Exceptions.printStackTrace(e);\n+                graphNode.setSelected(true);\n@@ -272,1 +271,4 @@\n-        });\n+            manager.setSelectedNodes(selectedGraphs);\n+        } catch (Exception e) {\n+            Exceptions.printStackTrace(e);\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":39,"deletions":37,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import com.sun.hotspot.igv.view.GraphViewerImplementation;\n@@ -40,1 +42,1 @@\n-    private InputGraph graph;\n+    private final InputGraph graph;\n@@ -55,1 +57,2 @@\n-        return getCurrentGraph() != null;\n+        InputGraph currentGraph = getCurrentGraph();\n+        return currentGraph != null && !currentGraph.isDiffGraph() && currentGraph != graph;\n@@ -61,3 +64,2 @@\n-        if (viewer != null) {\n-            InputGraph diffGraph = Difference.createDiffGraph(other, graph);\n-            viewer.view(diffGraph, true);\n+        if (viewer != null && other != null) {\n+            viewer.viewDifference(other, graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/DiffGraphCookie.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    private InputGraph firstGraph, secondGraph;\n@@ -43,3 +44,6 @@\n-    public InputGraph(String name, boolean isDiffGraph) {\n-        this(name);\n-        this.isDiffGraph = isDiffGraph;\n+    public InputGraph(InputGraph firstGraph, InputGraph secondGraph ) {\n+        this(firstGraph.getName() + \" Î” \" + secondGraph.getName());\n+        assert !firstGraph.isDiffGraph() && !secondGraph.isDiffGraph();\n+        this.firstGraph = firstGraph;\n+        this.secondGraph = secondGraph;\n+        isDiffGraph = true;\n@@ -55,0 +59,2 @@\n+        firstGraph = null;\n+        secondGraph = null;\n@@ -62,0 +68,8 @@\n+    public InputGraph getFirstGraph() {\n+        return firstGraph;\n+    }\n+\n+    public InputGraph getSecondGraph() {\n+        return secondGraph;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputGraph.java","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -34,1 +34,3 @@\n-    public void view(InputGraph graph, boolean clone);\n+    void view(InputGraph graph, boolean clone);\n+\n+    void viewDifference(InputGraph firstGraph, InputGraph secondGraph);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/services\/GraphViewer.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-        InputGraph graph = new InputGraph(a.getName() + \", \" + b.getName(), true);\n+        InputGraph graph = new InputGraph(a, b);\n","filename":"src\/utils\/IdealGraphVisualizer\/Difference\/src\/main\/java\/com\/sun\/hotspot\/igv\/difference\/Difference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -408,0 +408,1 @@\n+        InputGraph firstGraph;\n@@ -409,1 +410,3 @@\n-            return graphs.get(getFirstPosition());\n+            firstGraph = graphs.get(getFirstPosition());\n+        } else {\n+            firstGraph = graphs.get(graphs.size() - 1);\n@@ -411,1 +414,5 @@\n-        return graphs.get(graphs.size() - 1);\n+        if (firstGraph.isDiffGraph()) {\n+            firstGraph = firstGraph.getFirstGraph();\n+        }\n+        return firstGraph;\n+\n@@ -415,0 +422,1 @@\n+        InputGraph secondGraph;\n@@ -416,1 +424,6 @@\n-            return graphs.get(getSecondPosition());\n+            secondGraph = graphs.get(getSecondPosition());\n+        } else {\n+            secondGraph = getFirstGraph();\n+        }\n+        if (secondGraph.isDiffGraph()) {\n+            secondGraph = secondGraph.getSecondGraph();\n@@ -418,1 +431,1 @@\n-        return getFirstGraph();\n+        return secondGraph;\n@@ -421,2 +434,2 @@\n-    public void selectGraph(InputGraph g) {\n-        int index = graphs.indexOf(g);\n+    public void selectGraph(InputGraph graph) {\n+        int index = graphs.indexOf(graph);\n@@ -426,1 +439,1 @@\n-            index = graphs.indexOf(g);\n+            index = graphs.indexOf(graph);\n@@ -432,0 +445,17 @@\n+    public void selectDiffGraph(InputGraph graph) {\n+        int index = graphs.indexOf(graph);\n+        if (index == -1 && hideDuplicates) {\n+            \/\/ A graph was selected that's currently hidden, so unhide and select it.\n+            setHideDuplicates(false);\n+            index = graphs.indexOf(graph);\n+        }\n+        assert index != -1;\n+        int firstIndex = getFirstPosition();\n+        int secondIndex = getSecondPosition();\n+        if (firstIndex <= index) {\n+            setPositions(firstIndex, index);\n+        } else {\n+            setPositions(index, secondIndex);\n+        }\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":37,"deletions":7,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        if (editor != null) {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n@@ -61,1 +61,1 @@\n-        if (editor != null) {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n@@ -68,1 +68,1 @@\n-        if (editor != null) {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n@@ -77,1 +77,1 @@\n-        if (editor != null) {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorInputGraphProvider.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+import org.openide.windows.Mode;\n@@ -58,0 +59,1 @@\n+import org.openide.windows.WindowManager;\n@@ -286,0 +288,4 @@\n+    public static boolean isOpen(EditorTopComponent editor) {\n+        return WindowManager.getDefault().isOpenedEditorTopComponent(editor);\n+    }\n+\n@@ -294,0 +300,18 @@\n+    public static EditorTopComponent findEditorForGraph(InputGraph graph) {\n+        WindowManager manager = WindowManager.getDefault();\n+        for (Mode m : manager.getModes()) {\n+            List<TopComponent> l = new ArrayList<>();\n+            l.add(m.getSelectedTopComponent());\n+            l.addAll(Arrays.asList(manager.getOpenedTopComponents(m)));\n+            for (TopComponent t : l) {\n+                if (t instanceof EditorTopComponent) {\n+                    EditorTopComponent etc = (EditorTopComponent) t;\n+                    if (etc.getModel().getGroup().getGraphs().contains(graph)) {\n+                        return etc;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.hotspot.igv.difference.Difference;\n@@ -30,6 +31,0 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import org.openide.windows.Mode;\n-import org.openide.windows.TopComponent;\n-import org.openide.windows.WindowManager;\n@@ -46,1 +41,13 @@\n-    public void view(InputGraph graph, boolean clone) {\n+    public void viewDifference(InputGraph firstGraph, InputGraph secondGraph) {\n+        if (firstGraph.getGroup() != secondGraph.getGroup()) {\n+            InputGraph diffGraph = Difference.createDiffGraph(firstGraph, secondGraph);\n+            view(diffGraph, true);\n+        } else {\n+            view(firstGraph, true);\n+            EditorTopComponent etc = EditorTopComponent.findEditorForGraph(firstGraph);\n+            if (etc != null) {\n+                etc.getModel().selectDiffGraph(secondGraph);\n+                etc.requestActive();\n+            }\n+        }\n+    }\n@@ -48,0 +55,2 @@\n+    @Override\n+    public void view(InputGraph graph, boolean clone) {\n@@ -49,15 +58,5 @@\n-            WindowManager manager = WindowManager.getDefault();\n-            for (Mode m : manager.getModes()) {\n-                List<TopComponent> l = new ArrayList<>();\n-                l.add(m.getSelectedTopComponent());\n-                l.addAll(Arrays.asList(manager.getOpenedTopComponents(m)));\n-                for (TopComponent t : l) {\n-                    if (t instanceof EditorTopComponent) {\n-                        EditorTopComponent etc = (EditorTopComponent) t;\n-                        if (etc.getModel().getGroup().getGraphs().contains(graph)) {\n-                            etc.getModel().selectGraph(graph);\n-                            t.requestActive();\n-                            return;\n-                        }\n-                    }\n-                }\n+            EditorTopComponent etc = EditorTopComponent.findEditorForGraph(graph);\n+            if (etc != null) {\n+                etc.getModel().selectGraph(graph);\n+                etc.requestActive();\n+                return;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/GraphViewerImplementation.java","additions":21,"deletions":22,"binary":false,"changes":43,"status":"modified"}]}