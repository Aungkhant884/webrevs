{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+#if defined(__linux__)\n+#include <stdio.h>\n+#include <sys\/types.h>\n+#include <sys\/stat.h>\n+#include <sys\/sendfile.h>\n+#endif\n+\n@@ -50,1 +57,2 @@\n- * Transfer all bytes from src to dst via user-space buffers\n+ * Transfer all bytes from src to dst within the kernel if possible (Linux),\n+ * otherwise via user-space buffers\n@@ -56,1 +64,0 @@\n-    char buf[8192];\n@@ -59,0 +66,30 @@\n+#if defined(__linux__)\n+    \/\/ Attempt to transfer within the kernel\n+    struct stat stat_src;\n+    if (fstat(src, &stat_src) == 0) {\n+        size_t count = stat_src.st_size;\n+        while (count > 0) {\n+            off_t bytes_sent = sendfile(dst, src, NULL, count);\n+            if (bytes_sent == -1) {\n+                \/\/ Reset positions, throwing if impossible\n+                int errno_sendfile = errno;\n+                if (lseek(src, 0, SEEK_SET) < 0 ||\n+                    lseek(dst, 0, SEEK_SET) < 0) {\n+                    throwUnixException(env, errno_sendfile);\n+                }\n+                \/\/ Fall back to transfer via user-space buffers\n+                break;\n+            }\n+            count -= bytes_sent;\n+            if (cancel != NULL && *cancel != 0) {\n+                throwUnixException(env, ECANCELED);\n+                return;\n+            }\n+        }\n+        return;\n+    }\n+#endif\n+\n+    \/\/ Transfer via user-space buffers\n+    char buf[8192];\n+\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixCopyFile.c","additions":40,"deletions":3,"binary":false,"changes":43,"status":"modified"}]}