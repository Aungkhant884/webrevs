{"files":[{"patch":"@@ -163,11 +163,0 @@\n-        \/**\n-         * Just attribute the parse trees.\n-         *\/\n-        ATTR_ONLY,\n-\n-        \/**\n-         * Just attribute and do flow analysis on the parse trees.\n-         * This should catch most user errors.\n-         *\/\n-        CHECK_ONLY,\n-\n@@ -201,4 +190,0 @@\n-            else if (option.equals(\"attr\"))\n-                return ATTR_ONLY;\n-            else if (option.equals(\"check\"))\n-                return CHECK_ONLY;\n@@ -446,5 +431,1 @@\n-        if (options.isSet(\"should-stop.at\") &&\n-            CompileState.valueOf(options.get(\"should-stop.at\")) == CompileState.ATTR)\n-            compilePolicy = CompilePolicy.ATTR_ONLY;\n-        else\n-            compilePolicy = CompilePolicy.decode(options.get(\"compilePolicy\"));\n+        compilePolicy = CompilePolicy.decode(options.get(\"compilePolicy\"));\n@@ -951,8 +932,0 @@\n-                case ATTR_ONLY:\n-                    attribute(todo);\n-                    break;\n-\n-                case CHECK_ONLY:\n-                    flow(attribute(todo));\n-                    break;\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java","additions":1,"deletions":28,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- * @compile -XDcompilePolicy=check  Tree.java TreeScanner.java TreeInfo.java\n- * @compile -XDcompilePolicy=check  TreeInfo.java TreeScanner.java Tree.java\n+ * @compile -XDshould-stop.ifError=FLOW -XDshould-stop.ifNoError=FLOW  Tree.java TreeScanner.java TreeInfo.java\n+ * @compile -XDshould-stop.ifError=FLOW -XDshould-stop.ifNoError=FLOW  TreeInfo.java TreeScanner.java Tree.java\n@@ -44,2 +44,2 @@\n- * @compile -XDcompilePolicy=attr   Tree.java TreeScanner.java TreeInfo.java\n- * @compile -XDcompilePolicy=attr   TreeInfo.java TreeScanner.java Tree.java\n+ * @compile -XDshould-stop.ifError=ATTR -XDshould-stop.ifNoError=ATTR  Tree.java TreeScanner.java TreeInfo.java\n+ * @compile -XDshould-stop.ifError=ATTR -XDshould-stop.ifNoError=ATTR  TreeInfo.java TreeScanner.java Tree.java\n","filename":"test\/langtools\/tools\/javac\/6199662\/Tree.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -318,1 +318,2 @@\n-                    .withOption(\"--should-stop=at=ATTR\")\n+                    .withOption(\"--should-stop=ifError=ATTR\")\n+                    .withOption(\"--should-stop=ifNoError=ATTR\")\n","filename":"test\/langtools\/tools\/javac\/failover\/CheckAttributedTree.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,2 @@\n-                             .options(\"-XDshould-stop.at=ATTR\") \/\/the source is too big for a classfile\n+                             .options(\"-XDshould-stop.ifError=ATTR\",\n+                                      \"-XDshould-stop.ifNoError=ATTR\") \/\/the source is too big for a classfile\n","filename":"test\/langtools\/tools\/javac\/importscope\/T8193717.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=MostSpecific09.out -XDrawDiagnostics --should-stop=at=ATTR --debug=verboseResolution=applicable,success MostSpecific09.java\n+ * @compile\/fail\/ref=MostSpecific09.out -XDrawDiagnostics --should-stop=ifError=ATTR --should-stop=ifNoError=ATTR --debug=verboseResolution=applicable,success MostSpecific09.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/MostSpecific09.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1719,1 +1719,2 @@\n-                         \"-XDshould-stop.at=ATTR\",\n+                         \"-XDshould-stop.ifError=ATTR\",\n+                         \"-XDshould-stop.ifNoError=ATTR\",\n","filename":"test\/langtools\/tools\/javac\/modules\/AnnotationProcessing.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,3 +134,3 @@\n-        String[] options = {\n-            \"--should-stop=at=ATTR\",\n-            \"--debug=verboseResolution=success,failure,applicable,inapplicable,deferred-inference,predef\"\n+        String[][] options = {\n+                {\"--should-stop=ifError=ATTR\", \"--should-stop=ifNoError=ATTR\"},\n+                {\"--debug=verboseResolution=success,failure,applicable,inapplicable,deferred-inference,predef\"}\n","filename":"test\/langtools\/tools\/javac\/resolve\/ResolveHarness.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/ref=WarnWrongYieldTest.out -Xlint:-options -source 13 -XDrawDiagnostics -XDshould-stop.at=ATTR WarnWrongYieldTest.java\n+ * @compile\/ref=WarnWrongYieldTest.out -Xlint:-options -source 13 -XDrawDiagnostics -XDshould-stop.ifError=ATTR -XDshould-stop.ifNoError=ATTR WarnWrongYieldTest.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/WarnWrongYieldTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=WrongYieldTest.out -XDrawDiagnostics -XDshould-stop.at=ATTR WrongYieldTest.java\n+ * @compile\/fail\/ref=WrongYieldTest.out -XDrawDiagnostics -XDshould-stop.ifError=ATTR -XDshould-stop.ifNoError=ATTR WrongYieldTest.java\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/WrongYieldTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}