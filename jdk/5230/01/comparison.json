{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -140,1 +140,1 @@\n-    Collections.sort(blocks, new Comparator<>() {\n+    blocks.sort(new Comparator<>() {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/cdbg\/basic\/BasicCDebugInfoDataBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    Collections.sort(infoList, new Comparator<>() {\n+    infoList.sort(new Comparator<>() {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/cdbg\/basic\/BasicLineNumberMapping.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -368,1 +368,1 @@\n-    Collections.sort(liveRegions, new Comparator<Address>() {\n+    liveRegions.sort(new Comparator<Address>() {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ObjectHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,5 +53,1 @@\n-    Collections.sort(list, new Comparator<>() {\n-      public int compare(ObjectHistogramElement o1, ObjectHistogramElement o2) {\n-        return o1.compare(o2);\n-      }\n-    });\n+    list.sort(ObjectHistogramElement::compare);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ObjectHistogram.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.util.Collections;\n@@ -129,5 +128,1 @@\n-            Collections.sort(list, new Comparator<>() {\n-              public int compare(ObjectHistogramElement o1, ObjectHistogramElement o2) {\n-                  return o1.compare(o2);\n-              }\n-            });\n+            list.sort(ObjectHistogramElement::compare);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/FinalizerInfo.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import javax.swing.event.*;\n@@ -205,1 +204,1 @@\n-    Collections.sort(els, c);\n+    els.sort(c);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/ProcessListPanel.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,0 @@\n-import java.util.Collections;\n-import java.util.List;\n-\n@@ -58,1 +55,1 @@\n-        Collections.sort(elements, comparator);\n+        elements.sort(comparator);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/table\/SortableTableModel.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -47,1 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -181,1 +179,1 @@\n-            Collections.sort(elements, comparators.makeClassUseComparator());\n+            elements.sort(comparators.makeClassUseComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -150,1 +150,1 @@\n-        Collections.sort(sortedRegExpList, new MapKeyComparator());\n+        sortedRegExpList.sort(new MapKeyComparator());\n@@ -196,1 +196,1 @@\n-        Collections.sort(sortedRegExpList, new MapKeyComparator());\n+        sortedRegExpList.sort(new MapKeyComparator());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Group.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import sun.jvmstat.monitor.event.*;\n@@ -59,1 +58,1 @@\n-        Collections.sort(items, comparator);\n+        items.sort(comparator);\n@@ -79,1 +78,1 @@\n-        Collections.sort(items, comparator);\n+        items.sort(comparator);\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/JStatLogger.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-            Collections.sort(logged, arguments.comparator());\n+            logged.sort(arguments.comparator());\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/Jstat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -284,1 +284,1 @@\n-                Collections.sort(data, new TabularDataComparator(type));\n+                data.sort(new TabularDataComparator(type));\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/inspector\/XOpenTypeViewer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-import java.util.Collections;\n+import java.util.Comparator;\n@@ -87,1 +87,1 @@\n-             Collections.sort(ts, (x,y) -> x.getName().compareTo(y.getName()));\n+             ts.sort(Comparator.comparing(Type::getName));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataReader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.time.ZonedDateTime;\n@@ -440,1 +439,1 @@\n-            Collections.sort(chunks, RepositoryChunk.END_TIME_COMPARATOR);\n+            chunks.sort(RepositoryChunk.END_TIME_COMPARATOR);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-import java.util.Collections;\n+import java.util.Comparator;\n@@ -143,1 +143,1 @@\n-                Collections.sort(eventControls, (x,y) -> x.getEventType().getName().compareTo(y.getEventType().getName()));\n+                eventControls.sort(Comparator.comparing(x -> x.getEventType().getName()));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SettingsManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.util.Comparator;\n@@ -111,1 +112,1 @@\n-                    Collections.sort(jvmTypes, (a,b) -> Long.compare(a.getId(), b.getId()));\n+                    jvmTypes.sort(Comparator.comparingLong(Type::getId));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-            Collections.sort(added, (p1, p2) -> p1.compareTo(p2));\n+            Collections.sort(added);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/RepositoryFiles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.util.Collections;\n@@ -173,1 +172,1 @@\n-        Collections.sort(list, Comparator.comparing(Recording::getId));\n+        list.sort(Comparator.comparing(Recording::getId));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/AbstractDCmd.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.util.Collections;\n@@ -138,6 +137,1 @@\n-        Collections.sort(sorted, new Comparator<EventType>() {\n-            @Override\n-            public int compare(EventType e1, EventType e2) {\n-                return e1.getName().compareTo(e2.getName());\n-            }\n-        });\n+        sorted.sort(Comparator.comparing(EventType::getName));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdCheck.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.util.Collections;\n@@ -80,1 +79,1 @@\n-                    Collections.sort(events, PRIVATE_ACCESS.eventComparator());\n+                    events.sort(PRIVATE_ACCESS.eventComparator());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/EventPrintWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.util.Collections;\n@@ -208,1 +207,1 @@\n-            Collections.sort(types, new TypeComparator());\n+            types.sort(new TypeComparator());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Metadata.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-import java.util.Collections;\n+import java.util.Comparator;\n@@ -146,1 +146,1 @@\n-            Collections.sort(statsList, (u, v) -> Long.compare(v.count, u.count));\n+            statsList.sort(Comparator.comparingLong(v -> v.count));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Summary.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}