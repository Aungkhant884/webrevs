{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-import java.util.Comparator;\n+import java.util.Collections;\n@@ -87,1 +87,1 @@\n-             ts.sort(Comparator.comparing(Type::getName));\n+             Collections.sort(ts, (x,y) -> x.getName().compareTo(y.getName()));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataReader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.time.ZonedDateTime;\n@@ -439,1 +440,1 @@\n-            chunks.sort(RepositoryChunk.END_TIME_COMPARATOR);\n+            Collections.sort(chunks, RepositoryChunk.END_TIME_COMPARATOR);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-import java.util.Comparator;\n+import java.util.Collections;\n@@ -143,1 +143,1 @@\n-                eventControls.sort(Comparator.comparing(x -> x.getEventType().getName()));\n+                Collections.sort(eventControls, (x,y) -> x.getEventType().getName().compareTo(y.getEventType().getName()));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SettingsManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import java.util.Comparator;\n@@ -112,1 +111,1 @@\n-                    jvmTypes.sort(Comparator.comparingLong(Type::getId));\n+                    Collections.sort(jvmTypes, (a,b) -> Long.compare(a.getId(), b.getId()));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-            Collections.sort(added);\n+            Collections.sort(added, (p1, p2) -> p1.compareTo(p2));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/RepositoryFiles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.Collections;\n@@ -172,1 +173,1 @@\n-        list.sort(Comparator.comparing(Recording::getId));\n+        Collections.sort(list, Comparator.comparing(Recording::getId));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/AbstractDCmd.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Collections;\n@@ -137,1 +138,6 @@\n-        sorted.sort(Comparator.comparing(EventType::getName));\n+        Collections.sort(sorted, new Comparator<EventType>() {\n+            @Override\n+            public int compare(EventType e1, EventType e2) {\n+                return e1.getName().compareTo(e2.getName());\n+            }\n+        });\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdCheck.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.util.Collections;\n@@ -79,1 +80,1 @@\n-                    events.sort(PRIVATE_ACCESS.eventComparator());\n+                    Collections.sort(events, PRIVATE_ACCESS.eventComparator());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/EventPrintWriter.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.Collections;\n@@ -207,1 +208,1 @@\n-            types.sort(new TypeComparator());\n+            Collections.sort(types, new TypeComparator());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Metadata.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-import java.util.Comparator;\n+import java.util.Collections;\n@@ -146,1 +146,1 @@\n-            statsList.sort(Comparator.comparingLong(v -> v.count));\n+            Collections.sort(statsList, (u, v) -> Long.compare(v.count, u.count));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Summary.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}