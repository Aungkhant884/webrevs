{"files":[{"patch":"@@ -54,2 +54,2 @@\n-                                                                  \"--isArchived\",\n-                                                                  \"false\");\n+                                                                  \"false\" \/\/ ResolvedReferencesTestApp is not archived\n+                                                                  );\n@@ -75,3 +75,2 @@\n-                       \"--isArchived\",\n-                       \"true\")\n-                      .assertNormalExit();\n+                       \"true\" \/\/ ResolvedReferencesTestApp is archived\n+                       ).assertNormalExit();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/ResolvedReferencesNotNullTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,2 +30,6 @@\n-        if (args.length < 2 && args[0].equals(\"--isArchived\")) {\n-            throw new RuntimeException(\"Test requires --isArchived flag\");\n+        if (args.length < 1) {\n+            throw new RuntimeException(\"Test requires arg: [true|false]\");\n+        }\n+\n+        if (!args[0].equals(\"true\") && !args[0].equals(\"false\")) {\n+            throw new RuntimeException(\"Invalid argument: Test requires arg: [true|false]\");\n@@ -36,1 +40,1 @@\n-        boolean isArchived = (args[1].equals(\"true\"));\n+        boolean isArchived = (args[0].equals(\"true\"));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/ResolvedReferencesWb.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}