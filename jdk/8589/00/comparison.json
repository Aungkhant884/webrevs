{"files":[{"patch":"@@ -34,0 +34,1 @@\n+#include \"runtime\/continuation.hpp\"\n@@ -104,2 +105,5 @@\n-  bool do_escape_analysis = DoEscapeAnalysis;\n-  bool do_iterative_escape_analysis = DoEscapeAnalysis;\n+  \/\/ EscapeBarrier is not supported for virtual threads\n+  \/\/ so EA should be disabled if JVMTI agent enables corresponding capabilities\n+  bool do_escape_analysis = DoEscapeAnalysis\n+      && !(Continuations::enabled() && (env->should_retain_local_variables() || env->jvmti_can_get_owned_monitor_info()));\n+  bool do_iterative_escape_analysis = do_escape_analysis;\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1158,1 +1158,1 @@\n-  EscapeBarrier eb(!Continuations::enabled() && !(heap_filter & JVMTI_HEAP_FILTER_UNTAGGED), JavaThread::current());\n+  EscapeBarrier eb(!(heap_filter & JVMTI_HEAP_FILTER_UNTAGGED), JavaThread::current());\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"runtime\/continuation.hpp\"\n@@ -74,1 +75,1 @@\n-      _barrier_active(barrier_active && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n+      _barrier_active(barrier_active && !Continuations::enabled() && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n@@ -83,1 +84,1 @@\n-      _barrier_active(barrier_active && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n+      _barrier_active(barrier_active && !Continuations::enabled() && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n","filename":"src\/hotspot\/share\/runtime\/escapeBarrier.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}