{"files":[{"patch":"@@ -34,1 +34,0 @@\n-#include \"runtime\/continuation.hpp\"\n@@ -105,5 +104,2 @@\n-  \/\/ EscapeBarrier is not supported for virtual threads\n-  \/\/ so EA should be disabled if JVMTI agent enables corresponding capabilities\n-  bool do_escape_analysis = DoEscapeAnalysis\n-      && !(Continuations::enabled() && (env->should_retain_local_variables() || env->jvmti_can_get_owned_monitor_info()));\n-  bool do_iterative_escape_analysis = do_escape_analysis;\n+  bool do_escape_analysis = DoEscapeAnalysis;\n+  bool do_iterative_escape_analysis = DoEscapeAnalysis;\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -122,0 +122,5 @@\n+    oop vt_oop = jt->jvmti_vthread();\n+    \/\/ Skip virtual threads\n+    if (vt_oop != NULL && java_lang_VirtualThread::is_instance(vt_oop)) {\n+      continue;\n+    }\n","filename":"src\/hotspot\/share\/runtime\/escapeBarrier.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"runtime\/continuation.hpp\"\n@@ -75,1 +74,1 @@\n-      _barrier_active(barrier_active && !Continuations::enabled() && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n+      _barrier_active(barrier_active && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n@@ -84,1 +83,1 @@\n-      _barrier_active(barrier_active && !Continuations::enabled() && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n+      _barrier_active(barrier_active && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n","filename":"src\/hotspot\/share\/runtime\/escapeBarrier.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}