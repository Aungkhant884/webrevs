{"files":[{"patch":"@@ -653,3 +653,0 @@\n-  \/\/ set new iteration safe limit for the survivor spaces\n-  from()->set_concurrent_iteration_safe_limit(from()->top());\n-  to()->set_concurrent_iteration_safe_limit(to()->top());\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -267,2 +267,1 @@\n-ContiguousSpace::ContiguousSpace(): CompactibleSpace(), _top(NULL),\n-    _concurrent_iteration_safe_limit(NULL) {\n+ContiguousSpace::ContiguousSpace(): CompactibleSpace(), _top(NULL) {\n@@ -281,1 +280,0 @@\n-  set_concurrent_iteration_safe_limit(top());\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -502,1 +502,0 @@\n-  HeapWord* _concurrent_iteration_safe_limit;\n@@ -567,12 +566,0 @@\n-  HeapWord* concurrent_iteration_safe_limit() {\n-    assert(_concurrent_iteration_safe_limit <= top(),\n-           \"_concurrent_iteration_safe_limit update missed\");\n-    return _concurrent_iteration_safe_limit;\n-  }\n-  \/\/ changes the safe limit, all objects from bottom() to the new\n-  \/\/ limit should be properly initialized\n-  void set_concurrent_iteration_safe_limit(HeapWord* new_limit) {\n-    assert(new_limit <= top(), \"uninitialized objects in the safe range\");\n-    _concurrent_iteration_safe_limit = new_limit;\n-  }\n-\n@@ -583,2 +570,0 @@\n-    \/\/ set new iteration safe limit\n-    set_concurrent_iteration_safe_limit(compaction_top());\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -133,1 +133,0 @@\n-  nonstatic_field(ContiguousSpace,             _concurrent_iteration_safe_limit,              HeapWord*)                             \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}