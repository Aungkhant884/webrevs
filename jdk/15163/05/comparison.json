{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,5 @@\n-                    if (encodedCerts.size() > SSLConfiguration.maxCertificateChainLength) {\n+                    int maxAllowedChainLength = handshakeContext.sslConfig.isClientMode ?\n+                            SSLConfiguration.maxServerCertificateChainLength :\n+                            SSLConfiguration.maxClientCertificateChainLength;\n+\n+                    if (encodedCerts.size() > maxAllowedChainLength) {\n@@ -138,1 +142,1 @@\n-                                + SSLConfiguration.maxCertificateChainLength\n+                                + maxAllowedChainLength\n@@ -864,1 +868,5 @@\n-                if (certList.size() > SSLConfiguration.maxCertificateChainLength) {\n+                int maxAllowedChainLength = handshakeContext.sslConfig.isClientMode ?\n+                        SSLConfiguration.maxServerCertificateChainLength :\n+                        SSLConfiguration.maxClientCertificateChainLength;\n+\n+                if (certList.size() > maxAllowedChainLength) {\n@@ -869,1 +877,1 @@\n-                            + SSLConfiguration.maxCertificateChainLength\n+                            + maxAllowedChainLength\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateMessage.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,3 +111,8 @@\n-    \/\/ Set the max certificate chain length to 10\n-    static final int maxCertificateChainLength = GetIntegerAction.privilegedGetProperty(\n-            \"jdk.tls.maxCertificateChainLength\", 10);\n+    \/\/ Maximum allowed certificate chain length\n+    static final int maxCertificateChainLength;\n+\n+    \/\/ Limit the certificate chain length accepted from clients\n+    static final int maxClientCertificateChainLength;\n+\n+    \/\/ Limit the certificate chain length accepted from servers\n+    static final int maxServerCertificateChainLength;\n@@ -136,0 +141,54 @@\n+    static {\n+        boolean globalPropSet = false;\n+        boolean clientPropSet = false;\n+        boolean serverPropSet = false;\n+\n+        \/\/ jdk.tls.maxCertificateChainLength property has no default\n+        Integer certLen = GetIntegerAction.privilegedGetProperty(\n+                \"jdk.tls.maxCertificateChainLength\");\n+        if (certLen == null || certLen < 0) {\n+            certLen = 0;\n+        } else {\n+            globalPropSet = true;\n+        }\n+        maxCertificateChainLength = certLen;\n+\n+        \/\/ Default for jdk.tls.maxClientCertificateChainLength is 8\n+        Integer clientLen = GetIntegerAction.privilegedGetProperty(\n+                \"jdk.tls.maxClientCertificateChainLength\");\n+        if (clientLen == null || clientLen < 0) {\n+            clientLen = 8;\n+        } else {\n+            clientPropSet = true;\n+        }\n+\n+        \/\/ Default for jdk.tls.maxServerCertificateChainLength is 10\n+        Integer serverLen = GetIntegerAction.privilegedGetProperty(\n+                \"jdk.tls.maxServerCertificateChainLength\");\n+        if (serverLen == null || serverLen < 0) {\n+            serverLen = 10;\n+        } else {\n+            serverPropSet = true;\n+        }\n+\n+        \/*\n+         * When jdk.tls.maxCertificateChainLength is set, it will override\n+         * the defaults for jdk.tls.maxClientCertificateChainLength and\n+         * jdk.tls.maxServerCertificateChainLength if they are not explicitly\n+         * overridden. That means if either of those properties have been set,\n+         * the jdk.tls.maxCertificateChainLength property will not override\n+         * the values.\n+         *\/\n+        if (globalPropSet) {\n+            if (!clientPropSet) {\n+                clientLen = maxCertificateChainLength;\n+            }\n+            if (!serverPropSet) {\n+                serverLen = maxCertificateChainLength;\n+            }\n+        }\n+\n+        maxClientCertificateChainLength = clientLen;\n+        maxServerCertificateChainLength = serverLen;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLConfiguration.java","additions":63,"deletions":4,"binary":false,"changes":67,"status":"modified"}]}