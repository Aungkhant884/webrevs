{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,5 @@\n-                    if (encodedCerts.size() > SSLConfiguration.maxCertificateChainLength) {\n+                    int maxAllowedChainLength = handshakeContext.sslConfig.isClientMode ?\n+                            SSLConfiguration.maxServerCertificateChainLength :\n+                            SSLConfiguration.maxClientCertificateChainLength;\n+\n+                    if (encodedCerts.size() > maxAllowedChainLength) {\n@@ -138,1 +142,1 @@\n-                                + SSLConfiguration.maxCertificateChainLength\n+                                + maxAllowedChainLength\n@@ -864,1 +868,5 @@\n-                if (certList.size() > SSLConfiguration.maxCertificateChainLength) {\n+                int maxAllowedChainLength = handshakeContext.sslConfig.isClientMode ?\n+                        SSLConfiguration.maxServerCertificateChainLength :\n+                        SSLConfiguration.maxClientCertificateChainLength;\n+\n+                if (certList.size() > maxAllowedChainLength) {\n@@ -869,1 +877,1 @@\n-                            + SSLConfiguration.maxCertificateChainLength\n+                            + maxAllowedChainLength\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateMessage.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,0 +115,6 @@\n+    \/\/ Limit the maximum certificate chain length accepted from clients\n+    static final int maxClientCertificateChainLength;\n+\n+    \/\/ Limit the maximum certificate chain length accepted from servers\n+    static final int maxServerCertificateChainLength;\n+\n@@ -136,0 +142,19 @@\n+    \/*\n+     * If the jdk.tls.maxClientCertificateChainLength or jdk.tls.maxServerCertificateChainLength\n+     * system property is not set, it will default to the value of the\n+     * jdk.tls.maxCertificateChainLength system property. If either of them is\n+     * set, it will supersede the value of the jdk.tls.maxCertificateChainLength\n+     * system property.\n+     *\/\n+    static {\n+        Integer clientLen = GetIntegerAction.privilegedGetProperty(\n+                \"jdk.tls.maxClientCertificateChainLength\");\n+        maxClientCertificateChainLength = (clientLen != null) ?\n+                clientLen : maxCertificateChainLength;\n+\n+        Integer serverLen = GetIntegerAction.privilegedGetProperty(\n+                \"jdk.tls.maxServerCertificateChainLength\");\n+        maxServerCertificateChainLength = (serverLen != null) ?\n+                serverLen : maxCertificateChainLength;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLConfiguration.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"}]}