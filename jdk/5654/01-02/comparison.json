{"files":[{"patch":"@@ -262,0 +262,5 @@\n+        return asn1Encode(cksumType, checksum);\n+    }\n+\n+    public static byte[] asn1Encode(int cksumType, byte[] checksum)\n+            throws Asn1Exception, IOException {\n@@ -266,1 +271,1 @@\n-                                       true, (byte)0x00), temp);\n+                true, (byte)0x00), temp);\n@@ -270,1 +275,1 @@\n-                                       true, (byte)0x01), temp);\n+                true, (byte)0x01), temp);\n@@ -276,1 +281,0 @@\n-\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Checksum.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+import java.security.GeneralSecurityException;\n+\n@@ -31,0 +33,1 @@\n+import sun.security.krb5.internal.crypto.ArcFourHmac;\n@@ -138,7 +141,17 @@\n-            \/\/ MS-SFU 2.2.1: use hmac-md5 checksum regardless of key type\n-            Checksum cks = new Checksum(\n-                    Checksum.CKSUMTYPE_HMAC_MD5_ARCFOUR,\n-                    getS4UByteArray(),\n-                    key,\n-                    KeyUsage.KU_PA_FOR_USER_ENC_CKSUM);\n-            bytes.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)0x02), cks.asn1Encode());\n+            \/\/ MS-SFU 2.2.1: use hmac-md5 checksum regardless of key type.\n+            \/\/ Use internal methods to calculate and encode the checksum\n+            \/\/ instead of calling new Checksum() or CksumType.getInstance().\n+            \/\/ CKSUMTYPE_HMAC_MD5_ARCFOUR might be disabled as a weak cksum.\n+            byte[] s4u = getS4UByteArray();\n+            try {\n+                byte[] checksum = ArcFourHmac.calculateChecksum(\n+                        key.getBytes(),\n+                        KeyUsage.KU_PA_FOR_USER_ENC_CKSUM,\n+                        s4u, 0, s4u.length);\n+                bytes.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte) 0x02),\n+                        Checksum.asn1Encode(Checksum.CKSUMTYPE_HMAC_MD5_ARCFOUR, checksum));\n+            } catch (GeneralSecurityException e) {\n+                KrbCryptoException ke = new KrbCryptoException(e.getMessage());\n+                ke.initCause(e);\n+                throw ke;\n+            }\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/PAForUserEnc.java","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -46,0 +46,39 @@\n+        if (EType.allowWeakCrypto) {\n+            switch (cksumTypeConst) {\n+                case Checksum.CKSUMTYPE_CRC32:\n+                    cksumType = new Crc32CksumType();\n+                    cksumTypeName = \"sun.security.krb5.internal.crypto.Crc32CksumType\";\n+                    break;\n+                case Checksum.CKSUMTYPE_DES_MAC:\n+                    cksumType = new DesMacCksumType();\n+                    cksumTypeName = \"sun.security.krb5.internal.crypto.DesMacCksumType\";\n+                    break;\n+                case Checksum.CKSUMTYPE_DES_MAC_K:\n+                    cksumType = new DesMacKCksumType();\n+                    cksumTypeName =\n+                            \"sun.security.krb5.internal.crypto.DesMacKCksumType\";\n+                    break;\n+                case Checksum.CKSUMTYPE_RSA_MD5:\n+                    cksumType = new RsaMd5CksumType();\n+                    cksumTypeName = \"sun.security.krb5.internal.crypto.RsaMd5CksumType\";\n+                    break;\n+                case Checksum.CKSUMTYPE_RSA_MD5_DES:\n+                    cksumType = new RsaMd5DesCksumType();\n+                    cksumTypeName =\n+                            \"sun.security.krb5.internal.crypto.RsaMd5DesCksumType\";\n+                    break;\n+\n+                case Checksum.CKSUMTYPE_HMAC_SHA1_DES3_KD:\n+                    cksumType = new HmacSha1Des3KdCksumType();\n+                    cksumTypeName =\n+                            \"sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType\";\n+                    break;\n+\n+                case Checksum.CKSUMTYPE_HMAC_MD5_ARCFOUR:\n+                    \/\/ Still used by PA-FOR-USER\n+                    cksumType = new HmacMd5ArcFourCksumType();\n+                    cksumTypeName =\n+                            \"sun.security.krb5.internal.crypto.HmacMd5ArcFourCksumType\";\n+                    break;\n+            }\n+        }\n@@ -47,75 +86,25 @@\n-        case Checksum.CKSUMTYPE_CRC32:\n-            cksumType = new Crc32CksumType();\n-            cksumTypeName = \"sun.security.krb5.internal.crypto.Crc32CksumType\";\n-            break;\n-        case Checksum.CKSUMTYPE_DES_MAC:\n-            cksumType = new DesMacCksumType();\n-            cksumTypeName = \"sun.security.krb5.internal.crypto.DesMacCksumType\";\n-            break;\n-        case Checksum.CKSUMTYPE_DES_MAC_K:\n-            cksumType = new DesMacKCksumType();\n-            cksumTypeName =\n-                \"sun.security.krb5.internal.crypto.DesMacKCksumType\";\n-            break;\n-        case Checksum.CKSUMTYPE_RSA_MD5:\n-            cksumType = new RsaMd5CksumType();\n-            cksumTypeName = \"sun.security.krb5.internal.crypto.RsaMd5CksumType\";\n-            break;\n-        case Checksum.CKSUMTYPE_RSA_MD5_DES:\n-            cksumType = new RsaMd5DesCksumType();\n-            cksumTypeName =\n-                \"sun.security.krb5.internal.crypto.RsaMd5DesCksumType\";\n-            break;\n-\n-        case Checksum.CKSUMTYPE_HMAC_SHA1_DES3_KD:\n-            cksumType = new HmacSha1Des3KdCksumType();\n-            cksumTypeName =\n-                \"sun.security.krb5.internal.crypto.HmacSha1Des3KdCksumType\";\n-            break;\n-\n-        case Checksum.CKSUMTYPE_HMAC_SHA1_96_AES128:\n-            cksumType = new HmacSha1Aes128CksumType();\n-            cksumTypeName =\n-                \"sun.security.krb5.internal.crypto.HmacSha1Aes128CksumType\";\n-            break;\n-\n-        case Checksum.CKSUMTYPE_HMAC_SHA1_96_AES256:\n-            cksumType = new HmacSha1Aes256CksumType();\n-            cksumTypeName =\n-                \"sun.security.krb5.internal.crypto.HmacSha1Aes256CksumType\";\n-            break;\n-\n-        case Checksum.CKSUMTYPE_HMAC_SHA256_128_AES128:\n-            cksumType = new HmacSha2Aes128CksumType();\n-            cksumTypeName =\n-                    \"sun.security.krb5.internal.crypto.HmacSha2Aes128CksumType\";\n-            break;\n-\n-        case Checksum.CKSUMTYPE_HMAC_SHA384_192_AES256:\n-            cksumType = new HmacSha2Aes256CksumType();\n-            cksumTypeName =\n-                    \"sun.security.krb5.internal.crypto.HmacSha2Aes256CksumType\";\n-            break;\n-\n-        case Checksum.CKSUMTYPE_HMAC_MD5_ARCFOUR:\n-            cksumType = new HmacMd5ArcFourCksumType();\n-            cksumTypeName =\n-                \"sun.security.krb5.internal.crypto.HmacMd5ArcFourCksumType\";\n-            break;\n-\n-            \/\/ currently we don't support MD4.\n-        case Checksum.CKSUMTYPE_RSA_MD4_DES_K:\n-            \/\/ cksumType = new RsaMd4DesKCksumType();\n-            \/\/ cksumTypeName =\n-            \/\/          \"sun.security.krb5.internal.crypto.RsaMd4DesKCksumType\";\n-        case Checksum.CKSUMTYPE_RSA_MD4:\n-            \/\/ cksumType = new RsaMd4CksumType();\n-            \/\/ linux box support rsamd4, how to solve conflict?\n-            \/\/ cksumTypeName =\n-            \/\/          \"sun.security.krb5.internal.crypto.RsaMd4CksumType\";\n-        case Checksum.CKSUMTYPE_RSA_MD4_DES:\n-            \/\/ cksumType = new RsaMd4DesCksumType();\n-            \/\/ cksumTypeName =\n-            \/\/          \"sun.security.krb5.internal.crypto.RsaMd4DesCksumType\";\n-\n-        default:\n+            case Checksum.CKSUMTYPE_HMAC_SHA1_96_AES128:\n+                cksumType = new HmacSha1Aes128CksumType();\n+                cksumTypeName =\n+                        \"sun.security.krb5.internal.crypto.HmacSha1Aes128CksumType\";\n+                break;\n+\n+            case Checksum.CKSUMTYPE_HMAC_SHA1_96_AES256:\n+                cksumType = new HmacSha1Aes256CksumType();\n+                cksumTypeName =\n+                        \"sun.security.krb5.internal.crypto.HmacSha1Aes256CksumType\";\n+                break;\n+\n+            case Checksum.CKSUMTYPE_HMAC_SHA256_128_AES128:\n+                cksumType = new HmacSha2Aes128CksumType();\n+                cksumTypeName =\n+                        \"sun.security.krb5.internal.crypto.HmacSha2Aes128CksumType\";\n+                break;\n+\n+            case Checksum.CKSUMTYPE_HMAC_SHA384_192_AES256:\n+                cksumType = new HmacSha2Aes256CksumType();\n+                cksumTypeName =\n+                        \"sun.security.krb5.internal.crypto.HmacSha2Aes256CksumType\";\n+                break;\n+        }\n+        if (cksumType == null) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/crypto\/CksumType.java","additions":64,"deletions":75,"binary":false,"changes":139,"status":"modified"},{"patch":"@@ -56,0 +56,2 @@\n+    \/\/ allow_weak_crypto in krb5.conf\n+    public static boolean allowWeakCrypto;\n@@ -80,1 +82,1 @@\n-        boolean allowWeakCrypto = false;\n+        allowWeakCrypto = false;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/crypto\/EType.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}