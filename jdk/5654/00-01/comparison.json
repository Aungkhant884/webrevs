{"files":[{"patch":"@@ -63,6 +63,0 @@\n-        \/\/ There are at most 8 etypes.\n-        \/\/ Note: add etypes in preference order, because the default enctypes\n-        \/\/ list is also a part of it.\n-        int[] result = new int[8];\n-        int num = 0;\n-\n@@ -75,8 +69,0 @@\n-        if (maxKeyLength >= 256) {\n-            result[num++] = EncryptedData.ETYPE_AES256_CTS_HMAC_SHA1_96;\n-        }\n-        result[num++] = EncryptedData.ETYPE_AES128_CTS_HMAC_SHA1_96;\n-        if (maxKeyLength >= 256) {\n-            result[num++] = EncryptedData.ETYPE_AES256_CTS_HMAC_SHA384_192;\n-        }\n-        result[num++] = EncryptedData.ETYPE_AES128_CTS_HMAC_SHA256_128;\n@@ -84,2 +70,9 @@\n-        \/\/ By default, only AES etypes are enabled\n-        defaultETypes = Arrays.copyOf(result, num);\n+        defaultETypes = maxKeyLength >= 256\n+                ? new int[] {\n+                        EncryptedData.ETYPE_AES256_CTS_HMAC_SHA1_96,\n+                        EncryptedData.ETYPE_AES128_CTS_HMAC_SHA1_96,\n+                        EncryptedData.ETYPE_AES256_CTS_HMAC_SHA384_192,\n+                        EncryptedData.ETYPE_AES128_CTS_HMAC_SHA256_128, }\n+                : new int[] {\n+                        EncryptedData.ETYPE_AES128_CTS_HMAC_SHA1_96,\n+                        EncryptedData.ETYPE_AES128_CTS_HMAC_SHA256_128, };\n@@ -99,6 +92,0 @@\n-        if (allowWeakCrypto) {\n-            result[num++] = EncryptedData.ETYPE_DES3_CBC_HMAC_SHA1_KD;\n-            result[num++] = EncryptedData.ETYPE_ARCFOUR_HMAC;\n-            result[num++] = EncryptedData.ETYPE_DES_CBC_CRC;\n-            result[num++] = EncryptedData.ETYPE_DES_CBC_MD5;\n-        }\n@@ -106,2 +93,6 @@\n-        \/\/ Weak crypto are also supported and can be enabled manually\n-        if (num == result.length) {\n+        if (allowWeakCrypto) {\n+            int[] result = Arrays.copyOf(defaultETypes, defaultETypes.length + 4);\n+            result[defaultETypes.length] = EncryptedData.ETYPE_DES3_CBC_HMAC_SHA1_KD;\n+            result[defaultETypes.length + 1] = EncryptedData.ETYPE_ARCFOUR_HMAC;\n+            result[defaultETypes.length + 2] = EncryptedData.ETYPE_DES_CBC_CRC;\n+            result[defaultETypes.length + 3] = EncryptedData.ETYPE_DES_CBC_MD5;\n@@ -110,1 +101,1 @@\n-            supportedETypes = Arrays.copyOf(result, num);\n+            supportedETypes = defaultETypes;\n@@ -242,1 +233,1 @@\n-        return defaultETypes;\n+        return defaultETypes.clone();\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/crypto\/EType.java","additions":17,"deletions":26,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -54,6 +54,5 @@\n-        test(null, \"aes256-cts aes128-cts aes256-sha2 aes128-sha2 des3-hmac-sha1 arcfour-hmac des-cbc-crc des-cbc-md5\",\n-                18, 17, 20, 19);    \/\/ all weaks are filtered out\n-        test(false, \"aes256-cts aes128-cts aes256-sha2 aes128-sha2 des3-hmac-sha1 arcfour-hmac des-cbc-crc des-cbc-md5\",\n-                18, 17, 20, 19);    \/\/ all weaks are filtered out\n-        test(true, \"aes256-cts aes128-cts aes256-sha2 aes128-sha2 des3-hmac-sha1 arcfour-hmac des-cbc-crc des-cbc-md5\",\n-                18, 17, 20, 19, 16, 23, 1, 3);  \/\/ all etypes\n+        String strongAndWeak = \"aes256-cts aes128-cts aes256-sha2 aes128-sha2\" +\n+                \" des3-hmac-sha1 arcfour-hmac des-cbc-crc des-cbc-md5\";\n+        test(null, strongAndWeak, 18, 17, 20, 19);\n+        test(false, strongAndWeak, 18, 17, 20, 19);\n+        test(true, strongAndWeak, 18, 17, 20, 19, 16, 23, 1, 3);\n@@ -61,6 +60,5 @@\n-        test(null, \"aes256-cts aes256-sha2 aes128-cts aes128-sha2 des3-hmac-sha1 arcfour-hmac des-cbc-crc des-cbc-md5\",\n-                18, 20, 17, 19);    \/\/ in a different order\n-        test(false, \"aes256-cts aes256-sha2 aes128-cts aes128-sha2 des3-hmac-sha1 arcfour-hmac des-cbc-crc des-cbc-md5\",\n-                18, 20, 17, 19);    \/\/ in a different order\n-        test(true, \"aes256-cts aes256-sha2 aes128-cts aes128-sha2 des3-hmac-sha1 arcfour-hmac des-cbc-crc des-cbc-md5\",\n-                18, 20, 17, 19, 16, 23, 1, 3);  \/\/ in a different order\n+        String anotherOrder = \"aes256-cts aes256-sha2 aes128-cts aes128-sha2\" +\n+                \" des3-hmac-sha1 arcfour-hmac des-cbc-crc des-cbc-md5\";\n+        test(null, anotherOrder, 18, 20, 17, 19);\n+        test(false, anotherOrder, 18, 20, 17, 19);\n+        test(true, anotherOrder, 18, 20, 17, 19, 16, 23, 1, 3);\n@@ -68,6 +66,4 @@\n-        test(null, \"aes256-cts arcfour-hmac\",\n-                18);    \/\/ filtered out because weak not allowed\n-        test(false, \"aes256-cts arcfour-hmac\",\n-                18);    \/\/ filtered out because weak not allowed\n-        test(true, \"aes256-cts arcfour-hmac\",\n-                18, 23);    \/\/ correct way to add 23\n+        String two = \"aes256-cts arcfour-hmac\";\n+        test(null, two, 18);\n+        test(false, two, 18);\n+        test(true, two, 18, 23);\n","filename":"test\/jdk\/sun\/security\/krb5\/etype\/WeakCrypto.java","additions":14,"deletions":18,"binary":false,"changes":32,"status":"modified"}]}