{"files":[{"patch":"@@ -28,1 +28,1 @@\n- * @requires vm.bits == 64\n+ * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 16g)\n@@ -33,1 +33,1 @@\n- * @run testng\/othervm\/timeout=900 -Xmx8G ReadXBytes\n+ * @run testng\/othervm\/timeout=900 -Xmx12G ReadXBytes\n@@ -41,1 +41,1 @@\n-import java.io.RandomAccessFile;\n+import java.nio.ByteBuffer;\n@@ -49,1 +49,0 @@\n-import static java.nio.file.StandardOpenOption.READ;\n@@ -54,0 +53,2 @@\n+import static java.nio.file.StandardOpenOption.*;\n+\n@@ -75,0 +76,3 @@\n+    \/\/ Current directory\n+    private static final Path DIR = Path.of(System.getProperty(\"test.dir\", \".\"));\n+\n@@ -77,0 +81,6 @@\n+    \/\/ Create a temporary file path\n+    static Path createFilePath() {\n+        String name = String.format(\"ReadXBytes%d.tmp\", System.nanoTime());\n+        return DIR.resolve(name);\n+    }\n+\n@@ -79,4 +89,7 @@\n-        File file = File.createTempFile(\"foo\", \".bar\");\n-        file.deleteOnExit();\n-        try (RandomAccessFile raf = new RandomAccessFile(file, \"rw\")) {\n-            raf.setLength(length);\n+        Path path = createFilePath();\n+        path.toFile().deleteOnExit();\n+        try (FileChannel fc = FileChannel.open(path, CREATE_NEW, SPARSE, WRITE)) {\n+            if (length > 0) {\n+                fc.position(length - 1);\n+                fc.write(ByteBuffer.wrap(new byte[] {27}));\n+            }\n@@ -84,1 +97,1 @@\n-        return file.toPath();\n+        return path;\n@@ -90,3 +103,13 @@\n-        try (RandomAccessFile raf = new RandomAccessFile(file.toFile(), \"rw\")) {\n-            long written = 0L;\n-            int bufLength = Math.min(32768, (int)Math.min(length, BIG_LENGTH));\n+        try (FileChannel fc = FileChannel.open(file, WRITE);) {\n+            long pos = 0L;\n+            \/\/ if the length exceeds 2 GB, skip the first 2 GB - 1 MB bytes\n+            if (length >= 2L*1024*1024*1024) {\n+                \/\/ write the last (length - 2GB - 1MB) bytes\n+                pos = 2047L*1024*1024;\n+            } else if (length > 0) {\n+                \/\/ write either the first or last bytes only\n+                long p = Math.min(Math.abs(RAND.nextLong()), length - 1);\n+                pos = RAND.nextBoolean() ? p : length - 1 - p;\n+            }\n+            fc.position(pos);\n+            int bufLength = Math.min(32768, (int)Math.min(length - pos, BIG_LENGTH));\n@@ -94,1 +117,1 @@\n-            while (written < length) {\n+            while (pos < length) {\n@@ -96,3 +119,2 @@\n-                int len = (int)Math.min(bufLength, length - written);\n-                raf.write(buf, 0, len);\n-                written += len;\n+                int len = (int)Math.min(bufLength, length - pos);\n+                pos += fc.write(ByteBuffer.wrap(buf, 0, len));\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/ReadXBytes.java","additions":38,"deletions":16,"binary":false,"changes":54,"status":"modified"}]}