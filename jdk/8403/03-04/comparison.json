{"files":[{"patch":"@@ -852,1 +852,2 @@\n-static bool is_always_reachable(Address entry) {\n+\/\/ Check the entry target is always reachable from any branch.\n+static bool is_always_within_branch_range(Address entry) {\n@@ -883,2 +884,2 @@\n-    bool is_reachable = Assembler::reachable_from_branch_at(left_longest_branch_start, target) &&\n-                        Assembler::reachable_from_branch_at(right_longest_branch_start, target);\n+    const bool is_reachable = Assembler::reachable_from_branch_at(left_longest_branch_start, target) &&\n+                              Assembler::reachable_from_branch_at(right_longest_branch_start, target);\n@@ -901,1 +902,1 @@\n-  if (!is_always_reachable(entry)) {\n+  if (!is_always_within_branch_range(entry)) {\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -38,4 +38,2 @@\n- * @requires vm.flagless\n- * @requires os.arch==\"aarch64\"\n- * @requires vm.debug == false\n- * @requires vm.compiler2.enabled\n+ * @requires vm.flagless & os.arch==\"aarch64\" &\n+ *           vm.debug == false & vm.compiler2.enabled\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestTrampoline.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}