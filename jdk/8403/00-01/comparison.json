{"files":[{"patch":"@@ -403,5 +403,16 @@\n-  \/\/ Java method call target can have different compiled versions of a method: C2 or C1.\n-  \/\/ If CodeCache size > 128M, such calls must have reserved trampolines for the case:\n-  \/\/ C2 compiled method calls C1 compiled method.\n-  return  (entry.rspec().type() == relocInfo::runtime_call_type) ? target_needs_far_branch(entry.target())\n-                                                                 : MacroAssembler::far_branches();\n+  if (entry.rspec().type() == relocInfo::runtime_call_type) {\n+    \/\/ Runtime calls are statically bound.\n+    \/\/ Once they are generated neither a caller nor a callee address cannot be changed.\n+    \/\/ Check whether a far branch is needed to reach the target.\n+    return target_needs_far_branch(entry.target());\n+  } else {\n+    assert(entry.rspec().type() == relocInfo::opt_virtual_call_type\n+           || entry.rspec().type() == relocInfo::static_call_type\n+           || entry.rspec().type() == relocInfo::virtual_call_type, \"wrong reloc type: not Java method call\");\n+    \/\/ Other calls are Java calls.\n+    \/\/ A callee address can be changed at any time as a result of\n+    \/\/ callee deoptimization or the callee being C1 compiled has become C2 compiled.\n+    \/\/ If CodeCache size > 128M, such calls must have reserved trampolines for cases\n+    \/\/ when a new callee address out of 128M range.\n+    return MacroAssembler::far_branches();\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+        \/\/ ReservedCodeCacheSize=130M causes generation of trampolines.\n@@ -56,2 +57,4 @@\n-        \/\/ ReservedCodeCacheSize=240M guarantees no trampolines for runtime calls to the non-nmethod segment.\n-        command.add(\"-XX:ReservedCodeCacheSize=240M\");\n+        \/\/ runtime calls will be within 128M range.\n+        \/\/ So there is no need for trampolines for runtime calls.\n+        command.add(\"-XX:ReservedCodeCacheSize=130M\");\n+        command.add(\"-XX:+SegmentedCodeCache\");\n@@ -59,1 +62,0 @@\n-\n@@ -61,1 +63,0 @@\n-\n@@ -63,1 +64,0 @@\n-\n@@ -65,1 +65,0 @@\n-\n@@ -67,1 +66,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestTrampoline.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"}]}