{"files":[{"patch":"@@ -1582,2 +1582,2 @@\n-    julong reasonable_max = (julong)((phys_mem * (julong)MaxRAMPercentage) \/ 100);\n-    const julong reasonable_min = (julong)((phys_mem * (julong)MinRAMPercentage) \/ 100);\n+    julong reasonable_max = (julong)(((double)phys_mem * MaxRAMPercentage) \/ 100);\n+    const julong reasonable_min = (julong)(((double)phys_mem * MinRAMPercentage) \/ 100);\n@@ -1667,1 +1667,1 @@\n-      julong reasonable_initial = (julong)((phys_mem * (julong)InitialRAMPercentage) \/ 100);\n+      julong reasonable_initial = (julong)(((double)phys_mem * InitialRAMPercentage) \/ 100);\n@@ -2738,1 +2738,1 @@\n-      if (FLAG_SET_CMDLINE(MaxTenuringThreshold, (uint)max_tenuring_thresh) != JVMFlag::SUCCESS) {\n+      if (FLAG_SET_CMDLINE(MaxTenuringThreshold, max_tenuring_thresh) != JVMFlag::SUCCESS) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-    ((in_bytes(ObjectMonitor::f ## _offset())) - (unsigned)markWord::monitor_value)\n+    ((in_bytes(ObjectMonitor::f ## _offset())) - (int)markWord::monitor_value)\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-  const int milliseconds_per_microsecond = 1000;\n+  const int milliseconds_per_second = 1000;\n@@ -141,1 +141,1 @@\n-    milliseconds_since_19700101 \/ milliseconds_per_microsecond;\n+    milliseconds_since_19700101 \/ milliseconds_per_second;\n@@ -143,1 +143,1 @@\n-    checked_cast<int>(milliseconds_since_19700101 % milliseconds_per_microsecond);\n+    checked_cast<int>(milliseconds_since_19700101 % milliseconds_per_second);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2346,5 +2346,5 @@\n-    double sum = 0;\n-    double weighted_sum = 0;\n-    for (int i = 0; i <= n; i++) { sum += (double)histo[i]; weighted_sum += (double)(i*histo[i]); }\n-    if (sum >= 1.0) { \/\/ prevent divide by zero or divide overflow\n-      double rest = sum;\n+    uint64_t sum = 0;\n+    uint64_t weighted_sum = 0;\n+    for (int i = 0; i <= n; i++) { sum += histo[i]; weighted_sum += (i*histo[i]); }\n+    if (sum >= 1) { \/\/ prevent divide by zero or divide overflow\n+      uint64_t rest = sum;\n@@ -2353,1 +2353,1 @@\n-        rest -= (double)histo[i];\n+        rest -= histo[i];\n@@ -2356,2 +2356,2 @@\n-      tty->print_cr(\"rest: \" INT64_FORMAT_W(12) \" (%5.1f%%)\", (int64_t)rest, rest \/ percent);\n-      tty->print_cr(\"(avg. %s = %3.1f, max = %d)\", name, weighted_sum \/ sum, n);\n+      tty->print_cr(\"rest: \" INT64_FORMAT_W(12) \" (%5.1f%%)\", rest, (double)rest \/ percent);\n+      tty->print_cr(\"(avg. %s = %3.1f, max = %d)\", name, (double)weighted_sum \/ (double)sum, n);\n@@ -2361,1 +2361,1 @@\n-      tty->print_cr(\"Histogram generation failed for %s. n = %d, sum = %7.5f\", name, n, sum);\n+      tty->print_cr(\"Histogram generation failed for %s. n = %d, sum = %zu\", name, n, sum);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-  const uint32_t x_high = (uint32_t)(x >> 32);\n+  const uint32_t x_high = checked_cast<uint32_t>(x >> 32);\n","filename":"src\/hotspot\/share\/runtime\/threadHeapSampler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}