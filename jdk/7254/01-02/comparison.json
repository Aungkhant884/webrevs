{"files":[{"patch":"@@ -163,1 +163,1 @@\n-        this.size = size;\n+        this.size = size == 0 ? Long.MAX_VALUE - position : size;\n@@ -205,1 +205,1 @@\n-        this.size = size;\n+        this.size = size == 0 ? Long.MAX_VALUE - position : size;\n@@ -287,2 +287,0 @@\n-        System.out.printf(\"%d %d %d %d%n\", this.position, this.size,\n-            position, size);\n@@ -292,0 +290,8 @@\n+        try {\n+            if (Math.addExact(this.position, this.size) <= position)\n+                return false;               \/\/ This is below that\n+        } catch (ArithmeticException ignored) {\n+            \/\/ the sum of this.position and this.size overflows the range of\n+            \/\/ long hence their mathematical sum is greater than position\n+        }\n+\n@@ -304,12 +310,0 @@\n-        \/\/ if this.size == 0 then the range of this lock is unbounded and\n-        \/\/ cannot be below the specified lock range\n-        if (this.size > 0) {\n-            try {\n-                if (Math.addExact(this.position, this.size) <= position)\n-                    return false;               \/\/ This is below that\n-            } catch (ArithmeticException ignored) {\n-                \/\/ the sum of this.position and this.size overflows the range of\n-                \/\/ long hence their mathematical sum is greater than position\n-            }\n-        }\n-\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileLock.java","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -392,9 +392,2 @@\n-    DWORD lowNumBytes;\n-    DWORD highNumBytes;\n-    if (size == 0) {\n-        lowNumBytes = MAXDWORD;\n-        highNumBytes = MAXDWORD;\n-    } else {\n-        lowNumBytes = (DWORD)size;\n-        highNumBytes = (DWORD)(size >> 32);\n-    }\n+    DWORD lowNumBytes = (DWORD)size;\n+    DWORD highNumBytes = (DWORD)(size >> 32);\n@@ -444,9 +437,2 @@\n-    DWORD lowNumBytes;\n-    DWORD highNumBytes;\n-    if (size == 0) {\n-        lowNumBytes = MAXDWORD;\n-        highNumBytes = MAXDWORD;\n-    } else {\n-        lowNumBytes = (DWORD)size;\n-        highNumBytes = (DWORD)(size >> 32);\n-    }\n+    DWORD lowNumBytes = (DWORD)size;\n+    DWORD highNumBytes = (DWORD)(size >> 32);\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":5,"deletions":19,"binary":false,"changes":24,"status":"modified"}]}