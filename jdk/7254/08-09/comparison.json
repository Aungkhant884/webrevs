{"files":[{"patch":"@@ -337,0 +337,3 @@\n+        if (size == 0)\n+            size = Long.MAX_VALUE - Math.max(0, position);\n+\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WindowsAsynchronousFileChannelImpl.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -202,2 +202,2 @@\n-                    throw new RuntimeException(\"Lock size not \" +\n-                        expectedSize + \" for position \" + pos);\n+                    throw new RuntimeException(\"Lock size \" + fl.size() +\n+                        \" != \" + expectedSize + \" for position \" + pos);\n@@ -223,2 +223,2 @@\n-                throw new RuntimeException(\"Lock size not \" + expectedSize +\n-                    \" for position \" + pos);\n+                throw new RuntimeException(\"Lock size \" + fl.size() + \" != \" +\n+                    expectedSize + \" for position \" + pos);\n","filename":"test\/jdk\/java\/nio\/channels\/AsynchronousFileChannel\/Basic.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -147,1 +147,2 @@\n-                        throw new RuntimeException(\"Size not \" + expectedSize +\n+                        throw new RuntimeException(\"Lock size \" + lock.size() +\n+                            \" != \" + expectedSize +\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/Lock.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}