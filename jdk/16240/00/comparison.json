{"files":[{"patch":"@@ -1674,1 +1674,1 @@\n-static char* reserve_mmaped_memory(size_t bytes, char* requested_addr) {\n+static char* reserve_mmaped_memory(size_t bytes, char* requested_addr, int *fail_reason) {\n@@ -1730,0 +1730,2 @@\n+    if (fail_reason != nullptr)\n+      *fail_reason = errno;\n@@ -2151,1 +2153,1 @@\n-char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec) {\n+char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec, int *fail_reason) {\n@@ -2160,1 +2162,1 @@\n-    return reserve_mmaped_memory(bytes, requested_addr);\n+    return reserve_mmaped_memory(bytes, requested_addr, fail_reason);\n@@ -2165,1 +2167,1 @@\n-      return reserve_mmaped_memory(bytes, requested_addr);\n+      return reserve_mmaped_memory(bytes, requested_addr, fail_reason);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1802,1 +1802,1 @@\n-char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec) {\n+char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec, int *fail_reason) {\n@@ -1813,0 +1813,3 @@\n+  \/\/ Keep the error number to report it back\n+  if (fail_reason != nullptr)\n+    *fail_reason = errno;\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3485,1 +3485,1 @@\n-static char* anon_mmap(char* requested_addr, size_t bytes) {\n+static char* anon_mmap(char* requested_addr, size_t bytes, int *fail_reason) {\n@@ -3509,0 +3509,3 @@\n+  if (fail_reason != nullptr)\n+    *fail_reason = errno;\n+\n@@ -3526,1 +3529,1 @@\n-  char* start = anon_mmap(req_addr, extra_size);\n+  char* start = anon_mmap(req_addr, extra_size, nullptr);\n@@ -3554,1 +3557,1 @@\n-  return anon_mmap(nullptr, bytes);\n+  return anon_mmap(nullptr, bytes, nullptr);\n@@ -4213,1 +4216,1 @@\n-  char* result = pd_attempt_reserve_memory_at(requested_addr, bytes, !ExecMem);\n+  char* result = pd_attempt_reserve_memory_at(requested_addr, bytes, !ExecMem, nullptr);\n@@ -4225,1 +4228,1 @@\n-char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec) {\n+char* os::pd_attempt_reserve_memory_at(char* requested_addr, size_t bytes, bool exec, int *fail_reason) {\n@@ -4235,1 +4238,1 @@\n-  char * addr = anon_mmap(requested_addr, bytes);\n+  char * addr = anon_mmap(requested_addr, bytes, fail_reason);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -3422,1 +3422,1 @@\n-char* os::pd_attempt_reserve_memory_at(char* addr, size_t bytes, bool exec) {\n+char* os::pd_attempt_reserve_memory_at(char* addr, size_t bytes, bool exec, int *fail_reason) {\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1811,2 +1811,2 @@\n-char* os::attempt_reserve_memory_at(char* addr, size_t bytes, bool executable) {\n-  char* result = pd_attempt_reserve_memory_at(addr, bytes, executable);\n+char* os::attempt_reserve_memory_at(char* addr, size_t bytes, bool executable, int *fail_reason) {\n+  char* result = pd_attempt_reserve_memory_at(addr, bytes, executable, fail_reason);\n@@ -1989,1 +1989,1 @@\n-    result = os::pd_attempt_reserve_memory_at(candidate, bytes, false);\n+    result = os::pd_attempt_reserve_memory_at(candidate, bytes, false, nullptr);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-  static char*  pd_attempt_reserve_memory_at(char* addr, size_t bytes, bool executable);\n+  static char*  pd_attempt_reserve_memory_at(char* addr, size_t bytes, bool executable, int *fail_reason);\n@@ -441,1 +441,1 @@\n-  static char*  attempt_reserve_memory_at(char* addr, size_t bytes, bool executable = false);\n+  static char*  attempt_reserve_memory_at(char* addr, size_t bytes, bool executable = false, int *fail_reason = nullptr);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -509,2 +509,6 @@\n-  address p2 = (address)os::attempt_reserve_memory_at((char*)p_middle_stripes, middle_stripe_len);\n-  ASSERT_EQ(p2, p_middle_stripes);\n+  int fail_reason = 0;\n+\n+  address p2 = (address)os::attempt_reserve_memory_at((char*)p_middle_stripes, middle_stripe_len, false, &fail_reason);\n+\n+  ASSERT_EQ(p2, p_middle_stripes) << err_msg(\"allocation failed errno = %d, err-text: %s\\n\" , fail_reason, os::strerror(fail_reason));\n+\n@@ -567,3 +571,7 @@\n-  \/\/ re-reserve it. This should work unless release failed.\n-  address p2 = (address)os::attempt_reserve_memory_at((char*)p, total_range_len);\n-  ASSERT_EQ(p2, p);\n+  \/\/ re-reserve it. If failed, the reason is reported back through fail_reason.\n+  int fail_reason = 0;\n+\n+  address p2 = (address)os::attempt_reserve_memory_at((char*)p, total_range_len, false, &fail_reason);\n+\n+  ASSERT_EQ(p2, p) << err_msg(\"allocation at address failed errno = %d, err-text: %s\" , fail_reason, os::strerror(fail_reason));\n+\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"}]}