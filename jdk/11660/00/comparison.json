{"files":[{"patch":"@@ -13392,0 +13392,24 @@\n+            <state stateKeys=\"Enabled\">\n+               <style>\n+                  <textForeground>\n+                     <matte red=\"0\" green=\"0\" blue=\"0\" alpha=\"255\" uiDefaultParentName=\"text\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n+                  <\/textForeground>\n+                  <textBackground\/>\n+                  <background\/>\n+                  <uiproperties\/>\n+               <\/style>\n+               <canvas>\n+                  <size width=\"100\" height=\"30\"\/>\n+                  <nextLayerNameIndex>2<\/nextLayerNameIndex>\n+                  <stretchingInsets top=\"5\" bottom=\"5\" left=\"5\" right=\"5\"\/>\n+                  <layer name=\"Layer 1\">\n+                     <opacity>1.0<\/opacity>\n+                     <fillOpacity>1.0<\/fillOpacity>\n+                     <blendingMode>NORMAL<\/blendingMode>\n+                     <locked>false<\/locked>\n+                     <visible>true<\/visible>\n+                     <shapes\/>\n+                     <effects\/>\n+                  <\/layer>\n+               <\/canvas>\n+            <\/state>\n@@ -13393,1 +13417,1 @@\n-         <foregroundStates\/>\n+\t <foregroundStates\/>\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/skin.laf","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -0,0 +1,121 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 7175396\n+ * @key headful\n+ * @summary  Verifies the text on label is painted red for Nimbus LaF.\n+ * @run main\/othervm -Dsun.java2d.uiScale=1.0 TestNimbusLabel\n+ *\/\n+\n+import java.io.File;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class TestNimbusLabel\n+{\n+    private static JLabel label;\n+    private static JFrame frame;\n+    private static boolean passed = false;\n+    private static int colorTolerance = 5;\n+\n+    private static boolean checkPixel(Color color) {\n+        int red1 = color.getRed();\n+        int blue1 = color.getBlue();\n+        int green1 = color.getGreen();\n+        int red2 = Color.red.getRed();\n+        int blue2 = Color.red.getBlue();\n+        int green2 = Color.red.getGreen();\n+        if ((Math.abs(red1 - red2) < colorTolerance) &&\n+                (Math.abs(green1 - green2) < colorTolerance) &&\n+                (Math.abs(blue1 - blue2) < colorTolerance)) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        try {\n+            UIManager.setLookAndFeel(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n+            Robot robot = new Robot();\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                UIManager.getDefaults().put(\"Label[Enabled].textForeground\",\n+                                            java.awt.Color.red);\n+                label =\n+                    \/\/new JLabel(\"This text should be in red\");\n+                    new JLabel(\"<html><body>This text should be in red<\/body><\/html>\");\n+\n+                frame.getContentPane().add(label);\n+                frame.setUndecorated(true);\n+                frame.setLocationRelativeTo(null);\n+                frame.pack();\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Point p = frame.getLocationOnScreen();\n+            Dimension d = frame.getSize();\n+            System.out.println(\"width \" + d.getWidth() +\n+                                \" height \" + d.getHeight());\n+            int y = p.y + d.height\/2;\n+\n+            for (int x = p.x; x < p.x + d.width; x++) {\n+                    System.out.println(\"color(\" + x + \",\" + y + \")=\" +\n+                                        robot.getPixelColor(x, y));\n+                    Color color = robot.getPixelColor(x, y);\n+                    if (checkPixel(color)) {\n+                        passed = true;\n+                        break;\n+                    }\n+            }\n+            if (!passed) {\n+                BufferedImage img =\n+                    robot.createScreenCapture(new Rectangle(p.x, p.y,\n+                            d.width,\n+                            d.height));\n+                ImageIO.write(img, \"png\", new File(\"label.png\"));\n+                throw new RuntimeException(\"Label.foreground color not honoured\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/TestNimbusLabel.java","additions":121,"deletions":0,"binary":false,"changes":121,"status":"added"}]}