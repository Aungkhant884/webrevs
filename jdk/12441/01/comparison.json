{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @requires (os.family == \"windows\") & (vm.compMode != \"Xcomp\") & (vm.compMode != \"Xint\")\n+ * @requires (os.family == \"windows\") & (vm.compMode != \"Xcomp\") & (vm.compMode != \"Xint\") & (vm.gc != \"Z\")\n@@ -66,1 +66,1 @@\n-            System.out.println(lastError);\n+            System.out.println(\"lastError = \" + lastError);\n@@ -68,0 +68,2 @@\n+                System.err.println(\"iteration \" + i + \" got lastError = \" + lastError\n+                                   + \" (expected \" + VALUE + \")\");\n@@ -95,1 +97,3 @@\n-        new OutputAnalyzer(jdb.getJdbOutput()).shouldMatch(\"The application exited\");\n+        \/\/ Good lastError should be reported in debuggee output:\n+        new OutputAnalyzer(getDebuggeeOutput()).shouldMatch(\"lastError = \" + Integer.toString(TestNativeLastError.VALUE));\n+        \/\/ Exception would be captured in jdb output:\n","filename":"test\/jdk\/com\/sun\/jdi\/JdbLastErrorTest.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"}]}