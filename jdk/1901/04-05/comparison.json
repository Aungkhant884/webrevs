{"files":[{"patch":"@@ -65,1 +65,1 @@\n-                                LeakInputType.ENCRYPT_MODE));\n+                                null));\n@@ -82,2 +82,1 @@\n-        static int ENCRYPT_MODE = 1;\n-        static int DECRYPT_MODE = 2;\n+        static int DECRYPT_MODE = 1;\n@@ -96,9 +95,0 @@\n-    private static class LeakEncrypt implements LeakOperation {\n-        public Cipher getCipher() throws Exception {\n-            Cipher cipher = Cipher.getInstance(\n-                    \"AES\/ECB\/NoPadding\", provider);\n-            cipher.init(Cipher.ENCRYPT_MODE, key);\n-            return cipher;\n-        }\n-    }\n-\n@@ -110,2 +100,0 @@\n-            } else {\n-                cipher.update(ByteBuffer.allocate(1), ByteBuffer.allocate(2));\n@@ -121,2 +109,0 @@\n-            } else {\n-                cipher.update(new byte[1]);\n@@ -137,6 +123,0 @@\n-        executeTest(new SessionLeaker(new LeakEncrypt(), new LeakByteArray()),\n-                \"P11Cipher::implUpdate(byte[], int, int, byte[], int, int)\");\n-\n-        executeTest(new SessionLeaker(new LeakEncrypt(), new LeakByteBuffer()),\n-                \"P11Cipher::implUpdate(ByteBuffer, ByteBuffer)\");\n-\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/CancelMultipart.java","additions":2,"deletions":22,"binary":false,"changes":24,"status":"modified"}]}