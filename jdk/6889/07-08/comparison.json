{"files":[{"patch":"@@ -623,1 +623,2 @@\n-     * The configuration is lazily initialized after the module system is initialized.\n+     * The configuration is lazily initialized after the module system is initialized. The\n+     * default config would be used before the proper config is loaded.\n@@ -644,4 +645,4 @@\n-            15, \/\/ inflationThreshold\n-            ALL_MH_ACCESSORS, \/\/ useDirectMethodHandle\n-            false, \/\/ useNativeAccessorOnly\n-            false); \/\/ disableSerialConstructorChecks\n+                                                            15, \/\/ inflationThreshold\n+                                                            ALL_MH_ACCESSORS, \/\/ useDirectMethodHandle\n+                                                            false, \/\/ useNativeAccessorOnly\n+                                                            false); \/\/ disableSerialConstructorChecks\n@@ -652,1 +653,1 @@\n-     * loaded during early VM startup. See bug 8261407.\n+     * loaded during early VM startup.\n@@ -654,1 +655,1 @@\n-     * Note that the default implementation of the object methods of\n+     * Note that the default implementations of the object methods of\n@@ -722,1 +723,1 @@\n-                \"true\".equals(props.getProperty(\"jdk.disableSerialConstructorChecks\"));\n+            \"true\".equals(props.getProperty(\"jdk.disableSerialConstructorChecks\"));\n@@ -725,4 +726,4 @@\n-                inflationThreshold,\n-                useDirectMethodHandle,\n-                useNativeAccessorOnly,\n-                disableSerialConstructorChecks);\n+                          inflationThreshold,\n+                          useDirectMethodHandle,\n+                          useNativeAccessorOnly,\n+                          disableSerialConstructorChecks);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"}]}