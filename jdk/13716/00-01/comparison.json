{"files":[{"patch":"@@ -76,1 +76,1 @@\n-  do_cleaning = do_cleaning && (_should_clean_deallocate_lists || InstanceKlass::clean_previous_versions());\n+  do_cleaning = do_cleaning && (_should_clean_deallocate_lists || InstanceKlass::should_clean_previous_versions());\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataGraph.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4024,1 +4024,1 @@\n-bool InstanceKlass::_clean_previous_versions = false;\n+bool InstanceKlass::_should_clean_previous_versions = false;\n@@ -4032,2 +4032,2 @@\n-  bool ret = _clean_previous_versions;\n-  log_trace(redefine, class, iklass, purge)(\"Class unloading: clean_previous_versions = %s\",\n+  bool ret = _should_clean_previous_versions;\n+  log_trace(redefine, class, iklass, purge)(\"Class unloading: should_clean_previous_versions = %s\",\n@@ -4035,1 +4035,1 @@\n-  _clean_previous_versions = false;\n+  _should_clean_previous_versions = false;\n@@ -4100,1 +4100,1 @@\n-        _clean_previous_versions = true;\n+        _should_clean_previous_versions = true;\n@@ -4212,1 +4212,1 @@\n-    _clean_previous_versions = true;\n+    _should_clean_previous_versions = true;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -718,1 +718,1 @@\n-  static bool  _clean_previous_versions;\n+  static bool  _should_clean_previous_versions;\n@@ -727,1 +727,1 @@\n-  static bool clean_previous_versions() { return _clean_previous_versions; }\n+  static bool should_clean_previous_versions() { return _should_clean_previous_versions; }\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,2 +91,2 @@\n-              .shouldContain(\"Class unloading: clean_previous_versions = false\")\n-              .shouldContain(\"Class unloading: clean_previous_versions = true\")\n+              .shouldContain(\"Class unloading: should_clean_previous_versions = false\")\n+              .shouldContain(\"Class unloading: should_clean_previous_versions = true\")\n@@ -102,1 +102,1 @@\n-        \/\/ previous_version_list and the flag _clean_previous_versions should stay false\n+        \/\/ previous_version_list and the flag _should_clean_previous_versions should stay false\n@@ -122,1 +122,1 @@\n-        \/\/ of Running, and _clean_previous_versions should return true at class unloading.\n+        \/\/ of Running, and _should_clean_previous_versions should return true at class unloading.\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefinePreviousVersions.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,0 +37,3 @@\n+import java.util.ArrayList;\n+import java.util.List;\n+\n@@ -45,0 +48,5 @@\n+    private static final String SHOULD_CLEAN_TRUE = \"Class unloading: should_clean_previous_versions = true\";\n+    private static final String SHOULD_CLEAN_FALSE = \"Class unloading: should_clean_previous_versions = false\";\n+    private static final String SCRATCH_CLASS_ADDED_SHARED = \"scratch class added; class is shared\";\n+    private static final String SCRATCH_CLASS_ADDED_ON_STACK = \"scratch class added; one of its methods is on_stack.\";\n+\n@@ -56,1 +64,6 @@\n-            \/\/ the output.\n+            \/\/ the output to verify it is correct given the command line.\n+            List<String> baseCommand = List.of(\n+                \"-XX:StartFlightRecording\",\n+                \"-Xlog:redefine+class+iklass+add=trace,redefine+class+iklass+purge=trace\",\n+                \"RedefineSharedClassJFR\");\n+\n@@ -61,5 +74,4 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                    \"-XX:StartFlightRecording\",\n-                    \"-Xshare:off\",\n-                    \"-Xlog:redefine+class+iklass+add=trace,redefine+class+iklass+purge=trace\",\n-                    \"RedefineSharedClassJFR\");\n+                List<String> offCommand = new ArrayList<>();\n+                offCommand.add(\"-Xshare:off\");\n+                offCommand.addAll(baseCommand);\n+                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(offCommand);\n@@ -67,2 +79,2 @@\n-                    .shouldContain(\"Class unloading: clean_previous_versions = true\")\n-                    .shouldNotContain(\"Class unloading: clean_previous_versions = false\")\n+                    .shouldContain(SHOULD_CLEAN_TRUE)\n+                    .shouldNotContain(SHOULD_CLEAN_FALSE)\n@@ -70,1 +82,1 @@\n-                    \/\/ not the above check that clean_previous should be true will also\n+                    \/\/ not the above check that should_clean_previous should be true will also\n@@ -72,2 +84,2 @@\n-                    .shouldContain(\"scratch class added; one of its methods is on_stack.\")\n-                    .shouldNotContain(\"scratch class added; class is shared\")\n+                    .shouldContain(SCRATCH_CLASS_ADDED_ON_STACK)\n+                    .shouldNotContain(SCRATCH_CLASS_ADDED_SHARED)\n@@ -79,5 +91,4 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                    \"-XX:StartFlightRecording\",\n-                    \"-Xshare:on\",\n-                    \"-Xlog:redefine+class+iklass+add=trace,redefine+class+iklass+purge=trace\",\n-                    \"RedefineSharedClassJFR\");\n+                List<String> onCommand = new ArrayList<>();\n+                onCommand.add(\"-Xshare:on\");\n+                onCommand.addAll(baseCommand);\n+                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(onCommand);\n@@ -85,4 +96,4 @@\n-                    .shouldContain(\"Class unloading: clean_previous_versions = false\")\n-                    .shouldNotContain(\"Class unloading: clean_previous_versions = true\")\n-                    .shouldContain(\"scratch class added; class is shared\")\n-                    \/\/ If the below line occurs, then clean_previous_versions will be\n+                    .shouldContain(SHOULD_CLEAN_FALSE)\n+                    .shouldNotContain(SHOULD_CLEAN_TRUE)\n+                    .shouldContain(SCRATCH_CLASS_ADDED_SHARED)\n+                    \/\/ If the below line occurs, then should_clean_previous_versions will be\n@@ -92,1 +103,1 @@\n-                    .shouldNotContain(\"scratch class added; one of its methods is on_stack.\")\n+                    .shouldNotContain(SCRATCH_CLASS_ADDED_ON_STACK)\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineSharedClassJFR.java","additions":32,"deletions":21,"binary":false,"changes":53,"status":"modified"}]}