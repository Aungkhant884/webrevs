{"files":[{"patch":"@@ -217,18 +217,2 @@\n-    const TypePtr *t = mphi->adr_type();\n-    bool do_split = false;\n-    if (t == TypePtr::BOTTOM || t == TypeRawPtr::BOTTOM ) {\n-      do_split = true;\n-    } else if (t->isa_oopptr() && !t->is_oopptr()->is_known_instance()) {\n-      const TypeOopPtr* mem_t =\n-        t->is_oopptr()->cast_to_exactness(true)\n-          ->is_oopptr()->cast_to_ptr_type(t_oop->ptr())\n-            ->is_oopptr()->cast_to_instance_id(t_oop->instance_id());\n-      if (t_oop->is_aryptr()) {\n-        mem_t = mem_t->is_aryptr()\n-                      ->cast_to_size(t_oop->is_aryptr()->size())\n-                        ->with_offset(t_oop->is_aryptr()->offset())\n-                          ->is_aryptr();\n-      }\n-      do_split = mem_t == t_oop;\n-    }\n-    if (do_split) {\n+    const TypePtr* t = mphi->adr_type();\n+    if (t != t_adr) {\n@@ -237,2 +221,0 @@\n-    } else {\n-      assert(phase->C->get_alias_index(t) == phase->C->get_alias_index(t_adr), \"correct memory chain\");\n@@ -240,0 +222,1 @@\n+    guarantee(phase->C->get_alias_index(result->as_Phi()->adr_type()) == phase->C->get_alias_index(t_adr), \"correct memory chain\");\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -4616,5 +4616,0 @@\n-const TypePtr *TypeAryPtr::with_offset(int offset) const {\n-  assert(offset != OffsetTop && offset != OffsetBot, \"should be known\");\n-  return make(_ptr, _const_oop, _ary->remove_speculative()->is_ary(), _klass, _klass_is_exact, offset, _instance_id, _speculative, _inline_depth);\n-}\n-\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1284,1 +1284,0 @@\n-  virtual const TypePtr* with_offset(int offset) const;\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}