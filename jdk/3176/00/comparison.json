{"files":[{"patch":"@@ -428,2 +428,2 @@\n-  Handle loader(THREAD, (oop)NULL);\n-  Handle domain(THREAD, (oop)NULL);\n+  Handle loader;\n+  Handle domain;\n@@ -448,1 +448,1 @@\n-      kls = SystemDictionary::find_constrained_instance_or_array_klass(sym, loader, THREAD);\n+      kls = SystemDictionary::find_constrained_instance_or_array_klass(sym, loader);\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-  \/\/                                           bool is_method, TRAPS)\n+  \/\/                                           bool is_method)\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1052,1 +1052,1 @@\n-                                               Handle class_loader, TRAPS) {\n+                                               Handle class_loader) {\n@@ -1084,1 +1084,1 @@\n-    assert(SystemDictionary::is_shared_class_visible_impl(class_name, ik, pkg_entry, class_loader, THREAD),\n+    assert(SystemDictionary::is_shared_class_visible_impl(class_name, ik, pkg_entry, class_loader),\n@@ -1088,1 +1088,1 @@\n-  return is_shared_class_visible_impl(class_name, ik, pkg_entry, class_loader, THREAD);\n+  return is_shared_class_visible_impl(class_name, ik, pkg_entry, class_loader);\n@@ -1094,1 +1094,1 @@\n-                                                    Handle class_loader, TRAPS) {\n+                                                    Handle class_loader) {\n@@ -1234,2 +1234,1 @@\n-  bool visible = is_shared_class_visible(\n-                          class_name, ik, pkg_entry, class_loader, CHECK_NULL);\n+  bool visible = is_shared_class_visible(class_name, ik, pkg_entry, class_loader);\n@@ -1821,1 +1820,1 @@\n-                    Symbol* class_name, Handle class_loader, Thread* THREAD) {\n+                    Symbol* class_name, Handle class_loader) {\n@@ -1843,1 +1842,1 @@\n-      MutexLocker mu(THREAD, SystemDictionary_lock);\n+      MutexLocker mu(SystemDictionary_lock);\n@@ -1851,1 +1850,1 @@\n-    MutexLocker mu(THREAD, SystemDictionary_lock);\n+    MutexLocker mu(SystemDictionary_lock);\n@@ -1862,2 +1861,1 @@\n-                                             Handle class_loader2,\n-                                             Thread* THREAD) {\n+                                             Handle class_loader2) {\n@@ -1893,1 +1891,1 @@\n-    MutexLocker mu_s(THREAD, SystemDictionary_lock);\n+    MutexLocker mu_s(SystemDictionary_lock);\n@@ -1903,1 +1901,1 @@\n-                                     class_loader1, class_loader2, THREAD);\n+                                     class_loader1, class_loader2);\n@@ -2041,3 +2039,3 @@\n-                                               Klass* klass_being_linked,\n-                                               Handle loader1, Handle loader2,\n-                                               bool is_method, TRAPS)  {\n+                                                  Klass* klass_being_linked,\n+                                                  Handle loader1, Handle loader2,\n+                                                  bool is_method)  {\n@@ -2055,1 +2053,1 @@\n-      if (!add_loader_constraint(sig, klass_being_linked, loader1, loader2, THREAD)) {\n+      if (!add_loader_constraint(sig, klass_being_linked, loader1, loader2)) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":15,"deletions":17,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -173,2 +173,1 @@\n-                                                           Handle class_loader,\n-                                                           Thread* THREAD);\n+                                                         Handle class_loader);\n@@ -221,1 +220,1 @@\n-                                         Handle loader1, Handle loader2, bool is_method, TRAPS);\n+                                         Handle loader1, Handle loader2, bool is_method);\n@@ -353,1 +352,1 @@\n-                                      Handle class_loader, TRAPS);\n+                                      Handle class_loader);\n@@ -357,1 +356,1 @@\n-                                           Handle class_loader, TRAPS);\n+                                           Handle class_loader);\n@@ -369,1 +368,1 @@\n-                                    Handle loader2, TRAPS);\n+                                    Handle loader2);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1826,1 +1826,1 @@\n-                                                    Handle loader1, Handle loader2, TRAPS) {\n+                                                    Handle loader1, Handle loader2) {\n@@ -1864,1 +1864,1 @@\n-  if (THREAD->is_VM_thread()) {\n+  if (Thread::current()->is_VM_thread()) {\n@@ -1880,1 +1880,1 @@\n-bool SystemDictionaryShared::check_linking_constraints(InstanceKlass* klass, TRAPS) {\n+bool SystemDictionaryShared::check_linking_constraints(Thread* current, InstanceKlass* klass) {\n@@ -1891,1 +1891,1 @@\n-      HandleMark hm(THREAD);\n+      HandleMark hm(current);\n@@ -1895,2 +1895,2 @@\n-        Handle loader1(THREAD, get_class_loader_by(lc->_loader_type1));\n-        Handle loader2(THREAD, get_class_loader_by(lc->_loader_type2));\n+        Handle loader1(current, get_class_loader_by(lc->_loader_type1));\n+        Handle loader2(current, get_class_loader_by(lc->_loader_type2));\n@@ -1898,1 +1898,1 @@\n-          ResourceMark rm(THREAD);\n+          ResourceMark rm(current);\n@@ -1904,1 +1904,1 @@\n-        if (!SystemDictionary::add_loader_constraint(name, klass, loader1, loader2, THREAD)) {\n+        if (!SystemDictionary::add_loader_constraint(name, klass, loader1, loader2)) {\n@@ -1921,1 +1921,1 @@\n-    ResourceMark rm(THREAD);\n+    ResourceMark rm(current);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-  static bool check_linking_constraints(InstanceKlass* klass, TRAPS) NOT_CDS_RETURN_(false);\n+  static bool check_linking_constraints(Thread* current, InstanceKlass* klass) NOT_CDS_RETURN_(false);\n@@ -302,1 +302,1 @@\n-                                     Handle loader1, Handle loader2, TRAPS) NOT_CDS_RETURN;\n+                                     Handle loader1, Handle loader2) NOT_CDS_RETURN;\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -678,1 +678,1 @@\n-                                              resolved_loader, true, CHECK);\n+                                              resolved_loader, true);\n@@ -715,2 +715,1 @@\n-                                              false,\n-                                              CHECK);\n+                                              false);\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1258,2 +1258,2 @@\n-  Handle loader(THREAD, (oop)NULL);\n-  Handle domain(THREAD, (oop)NULL);\n+  Handle loader;\n+  Handle domain;\n@@ -1270,1 +1270,1 @@\n-      found_klass = SystemDictionary::find_constrained_instance_or_array_klass(sym, loader, THREAD);\n+      found_klass = SystemDictionary::find_constrained_instance_or_array_klass(sym, loader);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -987,1 +987,1 @@\n-      if (is_shared() && SystemDictionaryShared::check_linking_constraints(this, THREAD)) {\n+      if (is_shared() && SystemDictionaryShared::check_linking_constraints(THREAD, this)) {\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -528,1 +528,1 @@\n-                                                        true, CHECK_(false));\n+                                                        true);\n@@ -1272,1 +1272,1 @@\n-                                                      true, CHECK);\n+                                                      true);\n","filename":"src\/hotspot\/share\/oops\/klassVtable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -323,2 +323,1 @@\n-    ResourceMark rm;\n-    JavaThread *jt = THREAD->as_Java_thread();\n+    ResourceMark rm(THREAD);\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}