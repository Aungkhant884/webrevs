{"files":[{"patch":"@@ -266,1 +266,1 @@\n-    static final int totalAllocationsSize = 4 * 1024 * 1024;\n+    static final int totalAllocationsSize = 16 * 1024 * 1024; \/\/ 16 MB total\n@@ -336,0 +336,1 @@\n+                System.out.println(\"Parsed Trim Line. rss1: \" + rss1 + \" rss2: \" + rss2);\n@@ -338,1 +339,0 @@\n-                    System.out.println(\"rss1: \" + rss1 + \" rss2 \" + rss2);\n@@ -351,2 +351,8 @@\n-        if (rssReductionTotal < (numAllocations * szAllocations)) {\n-            throw new RuntimeException(\"We did not see the expected RSS reduction in the UL log.\");\n+        \/\/ This is very fuzzy. We malloced X, free'd X, trimmed, measured the combined effect of all reductions.\n+        \/\/ This does not take into effect mallocs or frees that may happen concurrently. But we expect to see *some*\n+        \/\/ reduction somewhere. Test with a fudge factor.\n+        float fudge = 0.8f;\n+        long expectedMinimalReduction = (long) (totalAllocationsSize * fudge);\n+        if (rssReductionTotal < expectedMinimalReduction) {\n+            throw new RuntimeException(\"We did not see the expected RSS reduction in the UL log. Expected (with fudge)\" +\n+                                       \" to see at least a combined reduction of \" + expectedMinimalReduction + \".\");\n","filename":"test\/hotspot\/jtreg\/gc\/TestTrimNative.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"}]}