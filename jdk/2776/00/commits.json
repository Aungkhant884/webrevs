[{"commit":{"message":"8261008: Optimize Xor\n\nThis patch canonicalizes 'Xor' to constant zero when both inputs are the\nsame.\n\nIt's not quite easy to measure the performance change between 'xor' and\nconstant zero, the later is typically a single 'mov' in generated code.\nBut given by this transformation, c2 may perform some other more\npowerful optimizations.\n\nThis was tested with the micro benchmark below. Loop in this case is\nproperly removed and the performance increases significantly.\n\n```\npublic void xorTheSame(MyState s, Blackhole bh) {\n  int x = s.in1;\n  int y = s.in2;\n  for (int i = 0; i < 5000; i++) {\n    y = x ^ x;\n    x = y ^ y;\n  }\n  bh.consume(x);\n}\n```\n\n[Test]\nAll jtreg tests passed without new failure.\n\nChange-Id: I1334199868b07543c4fe004976c26bed9162a993"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"7e1588c1a1ff1de7278ddafb29ac8333d5d976f1"}]