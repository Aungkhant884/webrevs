{"files":[{"patch":"@@ -916,0 +916,16 @@\n+\n+const Type* XorINode::Value(PhaseGVN* phase) const {\n+  Node* in1 = in(1);\n+  Node* in2 = in(2);\n+  const Type* t1 = phase->type(in1);\n+  const Type* t2 = phase->type(in2);\n+  if (t1 == Type::TOP || t2 == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  \/\/ x ^ x ==> 0\n+  if (in1->eqv_uncast(in2)) {\n+    return add_id();\n+  }\n+  return AddNode::Value(phase);\n+}\n+\n@@ -951,0 +967,14 @@\n+const Type* XorLNode::Value(PhaseGVN* phase) const {\n+  Node* in1 = in(1);\n+  Node* in2 = in(2);\n+  const Type* t1 = phase->type(in1);\n+  const Type* t2 = phase->type(in2);\n+  if (t1 == Type::TOP || t2 == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  \/\/ x ^ x ==> 0\n+  if (in1->eqv_uncast(in2)) {\n+    return add_id();\n+  }\n+  return AddNode::Value(phase);\n+}\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,0 +215,1 @@\n+  virtual const Type *Value(PhaseGVN *phase) const;\n@@ -227,0 +228,1 @@\n+  virtual const Type *Value(PhaseGVN *phase) const;\n","filename":"src\/hotspot\/share\/opto\/addnode.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}