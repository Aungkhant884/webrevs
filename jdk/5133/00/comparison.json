{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-     * Visits an AttributeTree node.\n+     * Visits an {@code AttributeTree} node.\n@@ -68,1 +68,1 @@\n-     * Visits an AuthorTree node.\n+     * Visits an {@code AuthorTree} node.\n@@ -76,1 +76,1 @@\n-     * Visits a CommentTree node.\n+     * Visits a {@code CommentTree} node.\n@@ -84,1 +84,1 @@\n-     * Visits a DeprecatedTree node.\n+     * Visits a {@code DeprecatedTree} node.\n@@ -92,1 +92,1 @@\n-     * Visits a DocCommentTree node.\n+     * Visits a {@code DocCommentTree} node.\n@@ -100,1 +100,1 @@\n-     * Visits a DocRootTree node.\n+     * Visits a {@code DocRootTree} node.\n@@ -108,1 +108,1 @@\n-     * Visits a DocTypeTree node.\n+     * Visits a {@code DocTypeTree} node.\n@@ -123,1 +123,1 @@\n-     * Visits an EndElementTree node.\n+     * Visits an {@code EndElementTree} node.\n@@ -131,1 +131,1 @@\n-     * Visits an EntityTree node.\n+     * Visits an {@code EntityTree} node.\n@@ -139,1 +139,1 @@\n-     * Visits an ErroneousTree node.\n+     * Visits an {@code ErroneousTree} node.\n@@ -147,1 +147,1 @@\n-     * Visits a HiddenTree node.\n+     * Visits a {@code HiddenTree} node.\n@@ -163,1 +163,1 @@\n-     * Visits an IdentifierTree node.\n+     * Visits an {@code IdentifierTree} node.\n@@ -171,1 +171,1 @@\n-     * Visits an IndexTree node.\n+     * Visits an {@code IndexTree} node.\n@@ -187,1 +187,1 @@\n-     * Visits an InheritDocTree node.\n+     * Visits an {@code InheritDocTree} node.\n@@ -195,1 +195,1 @@\n-     * Visits a LinkTree node.\n+     * Visits a {@code LinkTree} node.\n@@ -203,1 +203,1 @@\n-     * Visits an LiteralTree node.\n+     * Visits an {@code LiteralTree} node.\n@@ -211,1 +211,1 @@\n-     * Visits a ParamTree node.\n+     * Visits a {@code ParamTree} node.\n@@ -219,1 +219,1 @@\n-     * Visits a ProvidesTree node.\n+     * Visits a {@code ProvidesTree} node.\n@@ -235,1 +235,1 @@\n-     * Visits a ReferenceTree node.\n+     * Visits a {@code ReferenceTree} node.\n@@ -243,1 +243,1 @@\n-     * Visits a ReturnTree node.\n+     * Visits a {@code ReturnTree} node.\n@@ -251,1 +251,1 @@\n-     * Visits a SeeTree node.\n+     * Visits a {@code SeeTree} node.\n@@ -259,1 +259,1 @@\n-     * Visits a SerialTree node.\n+     * Visits a {@code SerialTree} node.\n@@ -267,1 +267,1 @@\n-     * Visits a SerialDataTree node.\n+     * Visits a {@code SerialDataTree} node.\n@@ -275,1 +275,1 @@\n-     * Visits a SerialFieldTree node.\n+     * Visits a {@code SerialFieldTree} node.\n@@ -283,1 +283,1 @@\n-     * Visits a SinceTree node.\n+     * Visits a {@code SinceTree} node.\n@@ -291,1 +291,1 @@\n-     * Visits a StartElementTree node.\n+     * Visits a {@code StartElementTree} node.\n@@ -299,1 +299,1 @@\n-     * Visits a SummaryTree node.\n+     * Visits a {@code SummaryTree} node.\n@@ -314,1 +314,1 @@\n-     * Visits a SystemPropertyTree node.\n+     * Visits a {@code SystemPropertyTree} node.\n@@ -329,1 +329,1 @@\n-     * Visits a TextTree node.\n+     * Visits a {@code TextTree} node.\n@@ -337,1 +337,1 @@\n-     * Visits a ThrowsTree node.\n+     * Visits a {@code ThrowsTree} node.\n@@ -345,1 +345,1 @@\n-     * Visits an UnknownBlockTagTree node.\n+     * Visits an {@code UnknownBlockTagTree} node.\n@@ -353,1 +353,1 @@\n-     * Visits an UnknownInlineTagTree node.\n+     * Visits an {@code UnknownInlineTagTree} node.\n@@ -361,1 +361,1 @@\n-     * Visits a UsesTree node.\n+     * Visits a {@code UsesTree} node.\n@@ -377,1 +377,1 @@\n-     * Visits a ValueTree node.\n+     * Visits a {@code ValueTree} node.\n@@ -385,1 +385,1 @@\n-     * Visits a VersionTree node.\n+     * Visits a {@code VersionTree} node.\n@@ -393,1 +393,1 @@\n-     * Visits an unknown type of DocTree node.\n+     * Visits an unknown type of {@code DocTree} node.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/doctree\/DocTreeVisitor.java","additions":37,"deletions":37,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-     * Visits an AnnotatedTypeTree node.\n+     * Visits an {@code AnnotatedTypeTree} node.\n@@ -71,1 +71,1 @@\n-     * Visits an AnnotatedTree node.\n+     * Visits an {@code AnnotatedTree} node.\n@@ -79,1 +79,1 @@\n-     * Visits a MethodInvocationTree node.\n+     * Visits a {@code MethodInvocationTree} node.\n@@ -87,1 +87,1 @@\n-     * Visits an AssertTree node.\n+     * Visits an {@code AssertTree} node.\n@@ -95,1 +95,1 @@\n-     * Visits an AssignmentTree node.\n+     * Visits an {@code AssignmentTree} node.\n@@ -103,1 +103,1 @@\n-     * Visits a CompoundAssignmentTree node.\n+     * Visits a {@code CompoundAssignmentTree} node.\n@@ -111,1 +111,1 @@\n-     * Visits a BinaryTree node.\n+     * Visits a {@code BinaryTree} node.\n@@ -119,1 +119,1 @@\n-     * Visits a BlockTree node.\n+     * Visits a {@code BlockTree} node.\n@@ -127,1 +127,1 @@\n-     * Visits a BreakTree node.\n+     * Visits a {@code BreakTree} node.\n@@ -135,1 +135,1 @@\n-     * Visits a CaseTree node.\n+     * Visits a {@code CaseTree} node.\n@@ -143,1 +143,1 @@\n-     * Visits a CatchTree node.\n+     * Visits a {@code CatchTree} node.\n@@ -151,1 +151,1 @@\n-     * Visits a ClassTree node.\n+     * Visits a {@code ClassTree} node.\n@@ -159,1 +159,1 @@\n-     * Visits a ConditionalExpressionTree node.\n+     * Visits a {@code ConditionalExpressionTree} node.\n@@ -167,1 +167,1 @@\n-     * Visits a ContinueTree node.\n+     * Visits a {@code ContinueTree} node.\n@@ -175,1 +175,1 @@\n-     * Visits a DoWhileTree node.\n+     * Visits a {@code DoWhileTree} node.\n@@ -183,1 +183,1 @@\n-     * Visits an ErroneousTree node.\n+     * Visits an {@code ErroneousTree} node.\n@@ -191,1 +191,1 @@\n-     * Visits an ExpressionStatementTree node.\n+     * Visits an {@code ExpressionStatementTree} node.\n@@ -199,1 +199,1 @@\n-     * Visits an EnhancedForLoopTree node.\n+     * Visits an {@code EnhancedForLoopTree} node.\n@@ -207,1 +207,1 @@\n-     * Visits a ForLoopTree node.\n+     * Visits a {@code ForLoopTree} node.\n@@ -215,1 +215,1 @@\n-     * Visits an IdentifierTree node.\n+     * Visits an {@code IdentifierTree} node.\n@@ -223,1 +223,1 @@\n-     * Visits an IfTree node.\n+     * Visits an {@code IfTree} node.\n@@ -231,1 +231,1 @@\n-     * Visits an ImportTree node.\n+     * Visits an {@code ImportTree} node.\n@@ -239,1 +239,1 @@\n-     * Visits an ArrayAccessTree node.\n+     * Visits an {@code ArrayAccessTree} node.\n@@ -247,1 +247,1 @@\n-     * Visits a LabeledStatementTree node.\n+     * Visits a {@code LabeledStatementTree} node.\n@@ -255,1 +255,1 @@\n-     * Visits a LiteralTree node.\n+     * Visits a {@code LiteralTree} node.\n@@ -263,1 +263,1 @@\n-     * Visits an BindingPattern node.\n+     * Visits a {@code BindingPatternTree} node.\n@@ -272,1 +272,1 @@\n-     * Visits a DefaultCaseLabelTree node.\n+     * Visits a {@code DefaultCaseLabelTree} node.\n@@ -282,1 +282,1 @@\n-     * Visits a MethodTree node.\n+     * Visits a {@code MethodTree} node.\n@@ -290,1 +290,1 @@\n-     * Visits a ModifiersTree node.\n+     * Visits a {@code ModifiersTree} node.\n@@ -298,1 +298,1 @@\n-     * Visits a NewArrayTree node.\n+     * Visits a {@code NewArrayTree} node.\n@@ -306,1 +306,1 @@\n-     * Visits a GuardPatternTree node.\n+     * Visits a {@code GuardPatternTree} node.\n@@ -316,1 +316,1 @@\n-     * Visits a ParenthesizedPatternTree node.\n+     * Visits a {@code ParenthesizedPatternTree} node.\n@@ -326,1 +326,1 @@\n-     * Visits a NewClassTree node.\n+     * Visits a {@code NewClassTree} node.\n@@ -334,1 +334,1 @@\n-     * Visits a LambdaExpressionTree node.\n+     * Visits a {@code LambdaExpressionTree} node.\n@@ -342,1 +342,1 @@\n-     * Visits a PackageTree node.\n+     * Visits a {@code PackageTree} node.\n@@ -350,1 +350,1 @@\n-     * Visits a ParenthesizedTree node.\n+     * Visits a {@code ParenthesizedTree} node.\n@@ -358,1 +358,1 @@\n-     * Visits a ReturnTree node.\n+     * Visits a {@code ReturnTree} node.\n@@ -366,1 +366,1 @@\n-     * Visits a MemberSelectTree node.\n+     * Visits a {@code MemberSelectTree} node.\n@@ -374,1 +374,1 @@\n-     * Visits a MemberReferenceTree node.\n+     * Visits a {@code MemberReferenceTree} node.\n@@ -382,1 +382,1 @@\n-     * Visits an EmptyStatementTree node.\n+     * Visits an {@code EmptyStatementTree} node.\n@@ -390,1 +390,1 @@\n-     * Visits a SwitchTree node.\n+     * Visits a {@code SwitchTree} node.\n@@ -398,1 +398,1 @@\n-     * Visits a SwitchExpressionTree node.\n+     * Visits a {@code SwitchExpressionTree} node.\n@@ -408,1 +408,1 @@\n-     * Visits a SynchronizedTree node.\n+     * Visits a {@code SynchronizedTree} node.\n@@ -416,1 +416,1 @@\n-     * Visits a ThrowTree node.\n+     * Visits a {@code ThrowTree} node.\n@@ -424,1 +424,1 @@\n-     * Visits a CompilationUnitTree node.\n+     * Visits a {@code CompilationUnitTree} node.\n@@ -432,1 +432,1 @@\n-     * Visits a TryTree node.\n+     * Visits a {@code TryTree} node.\n@@ -440,1 +440,1 @@\n-     * Visits a ParameterizedTypeTree node.\n+     * Visits a {@code ParameterizedTypeTree} node.\n@@ -448,1 +448,1 @@\n-     * Visits a UnionTypeTree node.\n+     * Visits a {@code UnionTypeTree} node.\n@@ -456,1 +456,1 @@\n-     * Visits an IntersectionTypeTree node.\n+     * Visits an {@code IntersectionTypeTree} node.\n@@ -464,1 +464,1 @@\n-     * Visits an ArrayTypeTree node.\n+     * Visits an {@code ArrayTypeTree} node.\n@@ -472,1 +472,1 @@\n-     * Visits a TypeCastTree node.\n+     * Visits a {@code TypeCastTree} node.\n@@ -480,1 +480,1 @@\n-     * Visits a PrimitiveTypeTree node.\n+     * Visits a {@code PrimitiveTypeTree} node.\n@@ -488,1 +488,1 @@\n-     * Visits a TypeParameterTree node.\n+     * Visits a {@code TypeParameterTree} node.\n@@ -496,1 +496,1 @@\n-     * Visits an InstanceOfTree node.\n+     * Visits an {@code InstanceOfTree} node.\n@@ -504,1 +504,1 @@\n-     * Visits a UnaryTree node.\n+     * Visits a {@code UnaryTree} node.\n@@ -512,1 +512,1 @@\n-     * Visits a VariableTree node.\n+     * Visits a {@code VariableTree} node.\n@@ -520,1 +520,1 @@\n-     * Visits a WhileLoopTree node.\n+     * Visits a {@code WhileLoopTree} node.\n@@ -528,1 +528,1 @@\n-     * Visits a WildcardTypeTree node.\n+     * Visits a {@code WildcardTypeTree} node.\n@@ -536,1 +536,1 @@\n-     * Visits a ModuleTree node.\n+     * Visits a {@code ModuleTree} node.\n@@ -544,1 +544,1 @@\n-     * Visits an ExportsTree node.\n+     * Visits an {@code ExportsTree} node.\n@@ -552,1 +552,1 @@\n-     * Visits an OpensTree node.\n+     * Visits an {@code OpensTree} node.\n@@ -560,1 +560,1 @@\n-     * Visits a ProvidesTree node.\n+     * Visits a {@code ProvidesTree} node.\n@@ -568,1 +568,1 @@\n-     * Visits a RequiresTree node.\n+     * Visits a {@code RequiresTree} node.\n@@ -576,1 +576,1 @@\n-     * Visits a UsesTree node.\n+     * Visits a {@code UsesTree} node.\n@@ -584,1 +584,1 @@\n-     * Visits an unknown type of Tree node.\n+     * Visits an unknown type of {@code Tree} node.\n@@ -594,1 +594,1 @@\n-     * Visits a YieldTree node.\n+     * Visits a {@code YieldTree} node.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/TreeVisitor.java","additions":67,"deletions":67,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,4 +61,4 @@\n-     * Returns a Trees object for a given CompilationTask.\n-     * @param task the compilation task for which to get the Trees object\n-     * @throws IllegalArgumentException if the task does not support the Trees API.\n-     * @return the Trees object\n+     * Returns a {@code Trees} object for a given {@code CompilationTask}.\n+     * @param task the compilation task for which to get the {@code Trees} object\n+     * @throws IllegalArgumentException if the task does not support the Tree API.\n+     * @return the {@code Trees} object\n@@ -75,4 +75,4 @@\n-     * Returns a Trees object for a given ProcessingEnvironment.\n-     * @param env the processing environment for which to get the Trees object\n-     * @throws IllegalArgumentException if the env does not support the Trees API.\n-     * @return the Trees object\n+     * Returns a {code Trees} object for a given {@code ProcessingEnvironment}.\n+     * @param env the processing environment for which to get the {@code Trees} object\n+     * @throws IllegalArgumentException if the env does not support the Tree API.\n+     * @return the {@code Trees} object\n@@ -105,1 +105,1 @@\n-     * Returns the Tree node for a given Element.\n+     * Returns the {@code Tree} node for a given {@code Element}.\n@@ -113,1 +113,1 @@\n-     * Returns the ClassTree node for a given TypeElement.\n+     * Returns the {@code ClassTree} node for a given {@code TypeElement}.\n@@ -121,1 +121,1 @@\n-     * Returns the MethodTree node for a given ExecutableElement.\n+     * Returns the {@code MethodTree} node for a given {@code ExecutableElement}.\n@@ -129,1 +129,1 @@\n-     * Returns the Tree node for an AnnotationMirror on a given Element.\n+     * Returns the {@code Tree} node for an {@code AnnotationMirror} on a given {@code Element}.\n@@ -138,1 +138,1 @@\n-     * Returns the Tree node for an AnnotationValue for an AnnotationMirror on a given Element.\n+     * Returns the {@code Tree} node for an {@code AnnotationValue} for an {@code AnnotationMirror} on a given {@code Element}.\n@@ -156,1 +156,1 @@\n-     * Returns the TreePath node for a given Element.\n+     * Returns the {@code TreePath} node for a given {@code Element}.\n@@ -164,1 +164,1 @@\n-     * Returns the TreePath node for an AnnotationMirror on a given Element.\n+     * Returns the {@code TreePath} node for an {@code AnnotationMirror} on a given {@code Element}.\n@@ -173,1 +173,1 @@\n-     * Returns the TreePath node for an AnnotationValue for an AnnotationMirror on a given Element.\n+     * Returns the {@code TreePath} node for an {@code AnnotationValue} for an {@code AnnotationMirror} on a given {@code Element}.\n@@ -183,1 +183,1 @@\n-     * Returns the Element for the Tree node identified by a given TreePath.\n+     * Returns the {@code Element} for the {@code Tree} node identified by a given {@code TreePath}.\n@@ -187,2 +187,2 @@\n-     * @throws IllegalArgumentException is the TreePath does not identify\n-     * a Tree node that might have an associated Element.\n+     * @throws IllegalArgumentException is the {@code TreePath} does not identify\n+     * a {@code Tree} node that might have an associated {@code Element}.\n@@ -193,2 +193,2 @@\n-     * Returns the TypeMirror for the Tree node identified by a given TreePath.\n-     * Returns {@code null} if the TypeMirror is not available.\n+     * Returns the {@code TypeMirror} for the {@code Tree} node identified by a given {@code TreePath}.\n+     * Returns {@code null} if the {@code TypeMirror} is not available.\n@@ -197,2 +197,2 @@\n-     * @throws IllegalArgumentException is the TreePath does not identify\n-     * a Tree node that might have an associated TypeMirror.\n+     * @throws IllegalArgumentException is the {@code TreePath} does not identify\n+     * a {@code Tree} node that might have an associated {@code TypeMirror}.\n@@ -203,2 +203,2 @@\n-     * Returns the Scope for the Tree node identified by a given TreePath.\n-     * Returns {@code null} if the Scope is not available.\n+     * Returns the {@code Scope} for the {@code Tree} node identified by a given {@code TreePath}.\n+     * Returns {@code null} if the {@code Scope} is not available.\n@@ -211,1 +211,1 @@\n-     * Returns the doc comment, if any, for the Tree node identified by a given TreePath.\n+     * Returns the doc comment, if any, for the {@code Tree} node identified by a given {@code TreePath}.\n@@ -238,1 +238,1 @@\n-      * Returns the original type from the ErrorType object.\n+      * Returns the original type from the {@code ErrorType} object.\n@@ -240,1 +240,1 @@\n-      * @return the type mirror corresponding to the original type, replaced by the ErrorType\n+      * @return the type mirror corresponding to the original type, replaced by the {@code ErrorType}\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/util\/Trees.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"}]}