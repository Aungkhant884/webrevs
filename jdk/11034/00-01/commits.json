[{"commit":{"message":"Clean up related code"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/superword.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnsupportedConditionalMove.java"}],"sha":"bcf6a21e2b42f98ab4fb832fc48840be5dfd4fec"},{"commit":{"message":"Merge branch 'master' into fg8295407"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.hpp"}],"sha":"7fc87c097fbc63cf4928071af50ff1736ce65b1a"},{"commit":{"message":"8295407: C2 crash: Error: ShouldNotReachHere() in multiple vector tests with -XX:-MonomorphicArrayCheck -XX:-UncommonNullCast\n\nFor unsupported `CMove` patterns, JDK-8293833 helps remove unused\n`CMove` and related packs from superword candidate packset by the\nfunction `remove_cmove_and_related_packs()`, but it only works\nwhen `-XX:+UseVectorCmov` is enabled[1]. When the option is not\nenabled, these unsupported `CMove` packs are still kept in the\nsuperword packset, causing the same failure.\n\nActually, the function `filter_packs()` in superword is to filter\nout unsupported packs but it can't work as expected currently for\nthese `CMove` cases. As we know, not all `CMove` packs can be\nvectorized. `merge_packs_to_cmovd()`[2] looks through all packs\nin the superword packset and generates a `CMove` candidate\npackset to collect all qualified `CMove` packs. Hence, only\n`CMove` packs in the `CMove` candidate packset are our target\npatterns and can be vectorized. But `filter_packs()` thinks,\nif the `CMove` pack is in a superword packset and its vector\nnode is implemented in the current platform, then it can\nbe vectorized. Therefore, the function doesn't remove\nthese unsupported packs.\n\nWe can adjust the function `implemented()` in the stage of\n`filter_packs()` to check if the current `CMove` pack is in\nthe `CMove` candidate packset. If not, `filter_packs()` considers\nit not to be vectorized and then remove it. After the fix,\nwhether `-XX:+UseVectorCmov` is enabled or not, these\nunsupported packs can be removed by `filter_packs()`. In this\nway, we don't need the function`remove_cmove_and_related_packs()`\nanymore and thus the patch also cleans related code.\n\n[1] https:\/\/github.com\/openjdk\/jdk\/blob\/9b9be88bcaa35c89b6915ff0c251e5a04b10b330\/src\/hotspot\/share\/opto\/superword.cpp#L537\n[2] https:\/\/github.com\/openjdk\/jdk\/blob\/9b9be88bcaa35c89b6915ff0c251e5a04b10b330\/src\/hotspot\/share\/opto\/superword.cpp#L1892\n[3] https:\/\/github.com\/openjdk\/jdk\/blob\/9b9be88bcaa35c89b6915ff0c251e5a04b10b330\/src\/hotspot\/share\/opto\/superword.cpp#L2701"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/superword.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnsupportedConditionalMove.java"}],"sha":"97a27264c2330196190919466ceda2cd8c265139"}]