{"files":[{"patch":"@@ -95,1 +95,1 @@\n-  Mutex* lock = new Mutex(Monitor::native, \"MetaspaceTestArea-lock\", false, Monitor::_safepoint_check_never);\n+  Mutex* lock = new Mutex(Monitor::leaf, \"MetaspaceTestArea-lock\", false, Monitor::_safepoint_check_never);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/testHelpers.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -372,1 +372,1 @@\n-    \/\/ modulo locks of native rank or acquired in try_lock_without_rank_check()\n+    \/\/ modulo locks acquired in try_lock_without_rank_check()\n@@ -375,1 +375,1 @@\n-        assert(tmp->rank() == Mutex::native || tmp->rank() < tmp->next()->rank()\n+        assert(tmp->rank() < tmp->next()->rank()\n@@ -381,3 +381,1 @@\n-  \/\/ Locks with rank native are an exception and are not\n-  \/\/ subject to the verification rules.\n-  bool check_can_be_skipped = this->rank() == Mutex::native || SafepointSynchronize::is_at_safepoint();\n+  bool check_can_be_skipped = SafepointSynchronize::is_at_safepoint();\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,4 +57,0 @@\n-  \/\/ The rank native was only for use in Mutexes created by JVM_RawMonitorCreate,\n-  \/\/ which being external to the VM are not subject to deadlock detection,\n-  \/\/ however it has now been used by other locks that don't fit into the\n-  \/\/ deadlock detection scheme.\n@@ -68,1 +64,2 @@\n-       tty            = access         +   2,\n+       service        = access         +   3,\n+       tty            = service        +   3,\n@@ -75,2 +72,1 @@\n-       max_nonleaf    = nonleaf        + 900,\n-       native         = max_nonleaf    +   1\n+       max_nonleaf    = nonleaf        + 900\n","filename":"src\/hotspot\/share\/runtime\/mutex.hpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-    def(MonitoringSupport_lock     , PaddedMutex  , native   ,   true,  _safepoint_check_never);      \/\/ used for serviceability monitoring support\n+    def(MonitoringSupport_lock     , PaddedMutex  , service-1,   true,  _safepoint_check_never);      \/\/ used for serviceability monitoring support\n@@ -248,1 +248,1 @@\n-  def(Service_lock                 , PaddedMonitor, tty-2,       true,  _safepoint_check_never);      \/\/ used for service thread operations\n+  def(Service_lock                 , PaddedMonitor, service,     true,  _safepoint_check_never);      \/\/ used for service thread operations\n@@ -251,1 +251,1 @@\n-    def(Notification_lock            , PaddedMonitor, special,     true,  _safepoint_check_never);  \/\/ used for notification thread operations\n+    def(Notification_lock          , PaddedMonitor, service,     true,  _safepoint_check_never);  \/\/ used for notification thread operations\n@@ -338,1 +338,1 @@\n-  def(SharedDecoder_lock           , PaddedMutex  , native,      true,  _safepoint_check_never);\n+  def(SharedDecoder_lock           , PaddedMutex  , tty-1,       true,  _safepoint_check_never);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    _lock = new Mutex(Monitor::native, \"gtest-IsMetaspaceObjTest-lock\", false, Monitor::_safepoint_check_never);\n+    _lock = new Mutex(Monitor::leaf, \"gtest-IsMetaspaceObjTest-lock\", false, Monitor::_safepoint_check_never);\n","filename":"test\/hotspot\/gtest\/metaspace\/test_is_metaspace_obj.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    _lock = new Mutex(Monitor::native, \"gtest-MetaspaceArenaTest-lock\", false, Monitor::_safepoint_check_never);\n+    _lock = new Mutex(Monitor::leaf, \"gtest-MetaspaceArenaTest-lock\", false, Monitor::_safepoint_check_never);\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-    _lock = new Mutex(Monitor::native, \"gtest-MetaspaceArenaTestBed-lock\", false, Monitor::_safepoint_check_never);\n+    _lock = new Mutex(Monitor::leaf, \"gtest-MetaspaceArenaTestBed-lock\", false, Monitor::_safepoint_check_never);\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena_stress.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-                   \".* Attempting to acquire lock mutex_rank_leaf\/11 out of order with lock mutex_rank_access\/1 \"\n+                   \".* Attempting to acquire lock mutex_rank_leaf\/.* out of order with lock mutex_rank_access\/1 \"\n@@ -147,1 +147,1 @@\n-                   \".* Attempting to acquire lock mutex_rank_special\/6 out of order with lock mutex_rank_tty\/3 \"\n+                   \".* Attempting to acquire lock mutex_rank_special\/.* out of order with lock mutex_rank_tty\/.*\"\n@@ -208,1 +208,1 @@\n-                   \".* Attempting to wait on monitor monitor_rank_special_minus_one\/5 while holding lock monitor_rank_special\/6 \"\n+                   \".* Attempting to wait on monitor monitor_rank_special_minus_one\/.* while holding lock monitor_rank_special\/.*\"\n@@ -224,1 +224,1 @@\n-                   \".* Attempting to wait on monitor monitor_rank_access\/1 while holding lock monitor_rank_tty\/3 \"\n+                   \".* Attempting to wait on monitor monitor_rank_access\/1 while holding lock monitor_rank_tty\/.*\"\n@@ -240,1 +240,1 @@\n-                   \".* Attempting to wait on monitor monitor_rank_tty\/3 while holding lock monitor_rank_special\/6 \"\n+                   \".* Attempting to wait on monitor monitor_rank_tty\/.* while holding lock monitor_rank_special\/.*\"\n","filename":"test\/hotspot\/gtest\/runtime\/test_mutex.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}