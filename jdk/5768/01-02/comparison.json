{"files":[{"patch":"@@ -283,1 +283,1 @@\n-  assert(header_size() > sizeof(*this), \"_base_archive_name_size not included in head size?\");\n+  assert(header_size() > sizeof(*this), \"_base_archive_name_size not included in header size?\");\n@@ -1154,1 +1154,1 @@\n-    assert(name_size != 0, \"None default base archive, name size should not be zero!\");\n+    assert(name_size != 0, \"For non-default base archive, name size should be non-zero!\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetMagic, -1);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetMagic(), -1);\n@@ -175,1 +175,1 @@\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion, 0x00000000);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetVersion(), 0x00000000);\n@@ -225,2 +225,2 @@\n-        \/\/ modify _base_archive_path_offet to not zero\n-        System.out.println(\"\\n8. modify _base_archive_path_offset to not zero\\n\");\n+        \/\/ modify _base_archive_path_offet to non-zero\n+        System.out.println(\"\\n8. modify _base_archive_path_offset to non-zero\\n\");\n@@ -231,1 +231,1 @@\n-        CDSArchiveUtils.writeData(copiedJsa, CDSArchiveUtils.offsetBaseArchivePathOffset, 1024);\n+        CDSArchiveUtils.writeData(copiedJsa, CDSArchiveUtils.offsetBaseArchivePathOffset(), 1024);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -108,2 +108,2 @@\n-        \/\/ 2. Make header size biger than the archive size\n-        System.out.println(\"\\n2. Make header size biger than the archive size\");\n+        \/\/ 2. Make header size larger than the archive size\n+        System.out.println(\"\\n2. Make header size larger than the archive size\");\n@@ -112,1 +112,1 @@\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetHeaderSize,  (int)copiedJsa.length() + 1024);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetHeaderSize(),  (int)copiedJsa.length() + 1024);\n@@ -124,1 +124,1 @@\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetBaseArchivePathOffset, baseArchivePathOffset + 1024);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetBaseArchivePathOffset(), baseArchivePathOffset + 1024);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ArchiveConsistency.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,10 +49,10 @@\n-    public static int offsetMagic;                \/\/ offset of GenericCDSFileMapHeader::_magic\n-    public static int offsetCrc;                  \/\/ offset of GenericCDSFileMapHeader::_crc\n-    public static int offsetVersion;              \/\/ offset of GenericCDSFileMapHeader::_version\n-    public static int offsetHeaderSize;           \/\/ offset of GenericCDSFileMapHeader::_header_size\n-    public static int offsetBaseArchivePathOffset;\/\/ offset of GenericCDSFileMapHeader::_base_archive_path_offset\n-    public static int offsetBaseArchiveNameSize;  \/\/ offset of GenericCDSFileMapHeader::_base_archive_name_size\n-    public static int offsetJvmIdent;             \/\/ offset of FileMapHeader::_jvm_ident\n-    public static int spOffsetCrc;                \/\/ offset of CDSFileMapRegion::_crc\n-    public static int spOffset;                   \/\/ offset of CDSFileMapRegion\n-    public static int spUsedOffset;               \/\/ offset of CDSFileMapRegion::_used\n+    private static int offsetMagic;                \/\/ offset of GenericCDSFileMapHeader::_magic\n+    private static int offsetCrc;                  \/\/ offset of GenericCDSFileMapHeader::_crc\n+    private static int offsetVersion;              \/\/ offset of GenericCDSFileMapHeader::_version\n+    private static int offsetHeaderSize;           \/\/ offset of GenericCDSFileMapHeader::_header_size\n+    private static int offsetBaseArchivePathOffset;\/\/ offset of GenericCDSFileMapHeader::_base_archive_path_offset\n+    private static int offsetBaseArchiveNameSize;  \/\/ offset of GenericCDSFileMapHeader::_base_archive_name_size\n+    private static int offsetJvmIdent;             \/\/ offset of FileMapHeader::_jvm_ident\n+    private static int spOffsetCrc;                \/\/ offset of CDSFileMapRegion::_crc\n+    private static int spOffset;                   \/\/ offset of CDSFileMapRegion\n+    private static int spUsedOffset;               \/\/ offset of CDSFileMapRegion::_used\n@@ -60,8 +60,8 @@\n-    public static int staticMagic;                \/\/ static magic value defined in hotspot\n-    public static int dynamicMagic;               \/\/ dyamic magic value defined in hotspot\n-    public static int sizetSize;                  \/\/ size of size_t\n-    public static int intSize;                    \/\/ size of int\n-    public static int staticArchiveHeaderSize;    \/\/ static archive file header size\n-    public static int dynamicArchiveHeaderSize;   \/\/ dynamic archive file header size\n-    public static int cdsFileMapRegionSize;       \/\/ size of CDSFileMapRegion\n-    public static long alignment;                 \/\/ MetaspaceShared::core_region_alignment\n+    private static int staticMagic;                \/\/ static magic value defined in hotspot\n+    private static int dynamicMagic;               \/\/ dyamic magic value defined in hotspot\n+    private static int sizetSize;                  \/\/ size of size_t\n+    private static int intSize;                    \/\/ size of int\n+    private static int staticArchiveHeaderSize;    \/\/ static archive file header size\n+    private static int dynamicArchiveHeaderSize;   \/\/ dynamic archive file header size\n+    private static int cdsFileMapRegionSize;       \/\/ size of CDSFileMapRegion\n+    private static long alignment;                 \/\/ MetaspaceShared::core_region_alignment\n@@ -70,1 +70,1 @@\n-    public static String[] shared_region_name = {\n+    private static String[] shared_region_name = {\n@@ -79,1 +79,1 @@\n-    public static int num_regions = shared_region_name.length;\n+    private static int num_regions = shared_region_name.length;\n@@ -118,0 +118,23 @@\n+    \/\/ accessors\n+    \/\/ offsets\n+    public static int offsetMagic()                 { return offsetMagic;                 }\n+    public static int offsetCrc()                   { return offsetCrc;                   }\n+    public static int offsetVersion()               { return offsetVersion;               }\n+    public static int offsetHeaderSize()            { return offsetHeaderSize;            }\n+    public static int offsetBaseArchivePathOffset() { return offsetBaseArchivePathOffset; }\n+    public static int offsetBaseArchiveNameSize()   { return offsetBaseArchiveNameSize;   }\n+    public static int offsetJvmIdent()              { return offsetJvmIdent;              }\n+    public static int spOffsetCrc()                 { return spOffsetCrc;                 }\n+    public static int spOffset()                    { return spOffset;                    }\n+    public static int spUsedOffset()                { return spUsedOffset;                }\n+    \/\/ constants\n+    public static int staticMagic()                 { return staticMagic;                 }\n+    public static int dynamicMagic()                { return dynamicMagic;                }\n+    public static int sizetSize()                   { return sizetSize;                   }\n+    public static int staticArchiveHeaderSize()     { return staticArchiveHeaderSize;     }\n+    public static int dynamicArchiveHeaderSize()    { return dynamicArchiveHeaderSize;    }\n+    public static int cdsFileMapRegionSize()        { return cdsFileMapRegionSize;        }\n+    public static long alignment()                  { return alignment;                   }\n+\n+\n+\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSArchiveUtils.java","additions":43,"deletions":20,"binary":false,"changes":63,"status":"modified"}]}