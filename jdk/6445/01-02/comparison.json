{"files":[{"patch":"@@ -1871,2 +1871,0 @@\n-    ciKlass* receiver_constraint = nullptr;\n-\n@@ -1874,5 +1872,0 @@\n-    case Bytecodes::_invokespecial:\n-      if (!target->is_object_initializer() && calling_klass->is_interface()) {\n-        receiver_constraint = calling_klass;\n-      }\n-      break;\n@@ -1883,1 +1876,0 @@\n-        receiver_constraint = holder;\n@@ -1896,0 +1888,6 @@\n+  } else {\n+    if (bc_raw == Bytecodes::_invokehandle) {\n+      assert(!will_link, \"should come here only for unlinked call\");\n+      code = Bytecodes::_invokespecial;\n+    }\n+  }\n@@ -1897,0 +1895,1 @@\n+  if (code == Bytecodes::_invokespecial) {\n@@ -1898,0 +1897,8 @@\n+    ciKlass* receiver_constraint = nullptr;\n+\n+    if (bc_raw == Bytecodes::_invokeinterface) {\n+      receiver_constraint = holder;\n+    } else if (bc_raw == Bytecodes::_invokespecial && !target->is_object_initializer() && calling_klass->is_interface()) {\n+      receiver_constraint = calling_klass;\n+    }\n+\n@@ -1902,1 +1909,2 @@\n-      c->set_incompatible_class_change_check();\n+      \/\/ go to uncommon_trap when checkcast fails\n+      c->set_invokespecial_receiver_check();\n@@ -1905,5 +1913,0 @@\n-  } else {\n-    if (bc_raw == Bytecodes::_invokehandle) {\n-      assert(!will_link, \"should come here only for unlinked call\");\n-      code = Bytecodes::_invokespecial;\n-    }\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"}]}