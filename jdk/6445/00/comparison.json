{"files":[{"patch":"@@ -1868,1 +1868,2 @@\n-  \/\/ invoke-special-super\n+  \/\/ Additional receiver subtype checks for interface calls via invokespecial or invokeinterface.\n+  ciKlass* receiver_constraint = nullptr;\n@@ -1870,7 +1871,2 @@\n-    ciInstanceKlass* sender_klass = calling_klass;\n-    if (sender_klass->is_interface()) {\n-      int index = state()->stack_size() - (target->arg_size_no_receiver() + 1);\n-      Value receiver = state()->stack_at(index);\n-      CheckCast* c = new CheckCast(sender_klass, receiver, copy_state_before());\n-      c->set_invokespecial_receiver_check();\n-      state()->stack_at_put(index, append_split(c));\n+    if (calling_klass->is_interface()) {\n+      receiver_constraint = calling_klass;\n@@ -1878,0 +1874,11 @@\n+  } else if (bc_raw == Bytecodes::_invokeinterface && target->is_loaded() && target->is_private()) {\n+    assert(holder->is_interface(), \"How did we get a non-interface method here!\");\n+    receiver_constraint = holder;\n+  }\n+\n+  if (receiver_constraint != nullptr) {\n+    int index = state()->stack_size() - (target->arg_size_no_receiver() + 1);\n+    Value receiver = state()->stack_at(index);\n+    CheckCast* c = new CheckCast(receiver_constraint, receiver, copy_state_before());\n+    c->set_invokespecial_receiver_check();\n+    state()->stack_at_put(index, append_split(c));\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1255,0 +1255,1 @@\n+  bool is_private_interface_method() const       { return code() == Bytecodes::_invokeinterface && target_is_loaded() && _target->is_private(); }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2799,1 +2799,2 @@\n-      if (x->code() == Bytecodes::_invokespecial || x->target_is_final()) {\n+      if (x->code() == Bytecodes::_invokespecial || x->target_is_final() ||\n+          x->is_private_interface_method()) {\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}