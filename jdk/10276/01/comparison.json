{"files":[{"patch":"@@ -107,0 +107,14 @@\n+    @Override\n+    public void setEnabled(boolean enabled) {\n+        super.setEnabled(enabled);\n+        setEnabled(this, enabled);\n+    }\n+\n+    private static void setEnabled(Container container, boolean enabled) {\n+        for (Component component : container.getComponents()) {\n+            component.setEnabled(enabled);\n+            if (component instanceof Container) {\n+                setEnabled((Container) component, enabled);\n+            }\n+        }\n+    }\n@@ -677,0 +691,5 @@\n+\n+            if (!(getGTKColorChooserPanel().isEnabled())) {\n+                return;\n+            }\n+\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKColorChooserPanel.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8271328\n+ * @key headful\n+ * @requires (os.family == \"linux\")\n+ * @summary Verifies if user is not able to select color from disabled ColorChooser\n+ * @run main TestDisabledColorChooser\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.event.InputEvent;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import javax.swing.JColorChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class TestDisabledColorChooser  {\n+    private static JFrame frame;\n+    private static JColorChooser Colorchooser;\n+\n+    public TestDisabledColorChooser() {\n+        createAndShowUI();\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\");\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                new TestDisabledColorChooser();\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Point pt = frame.getLocationOnScreen();\n+            robot.mouseMove(pt.x+75, pt.y+frame.getHeight()\/2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            Color c1 = Colorchooser.getColor();\n+\n+            Colorchooser.setEnabled(false);\n+            robot.mouseMove(pt.x+85, pt.y+frame.getHeight()\/2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            Color c2 = Colorchooser.getColor();\n+            robot.delay(1000);\n+\n+            if (c1.getRGB() != c2.getRGB())\n+                throw new RuntimeException(\"User is able to select color after disabling ColorChooser\");\n+            else\n+                System.out.println(\"passed\");\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private void createAndShowUI() {\n+        frame = new JFrame(\"Test Disabled ColorChooser Color Selection\");\n+        Colorchooser = new JColorChooser();\n+        frame.add(Colorchooser);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/TestDisabledColorChooser.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"}]}