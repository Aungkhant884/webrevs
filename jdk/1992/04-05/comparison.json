{"files":[{"patch":"@@ -718,1 +718,1 @@\n-  product(int, AvgMonitorsPerThreadEstimate, 1024, DIAGNOSTIC,              \\\n+  product(size_t, AvgMonitorsPerThreadEstimate, 1024, DIAGNOSTIC,           \\\n@@ -721,1 +721,1 @@\n-          range(0, max_jint)                                                \\\n+          range(0, max_uintx)                                               \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -256,3 +256,1 @@\n-\/\/ This is a 'jint' because the range of AvgMonitorsPerThreadEstimate\n-\/\/ is 0..max_jint:\n-static jint _in_use_list_ceiling = 0;\n+static size_t _in_use_list_ceiling = 0;\n@@ -1165,3 +1163,1 @@\n-  \/\/ _in_use_list_ceiling is a jint so this cast could lose precision,\n-  \/\/ but in reality the ceiling should never get that high.\n-  return (size_t)_in_use_list_ceiling;\n+  return _in_use_list_ceiling;\n@@ -1171,1 +1167,1 @@\n-  Atomic::add(&_in_use_list_ceiling, (jint)-AvgMonitorsPerThreadEstimate);\n+  Atomic::add(&_in_use_list_ceiling, -AvgMonitorsPerThreadEstimate);\n@@ -1175,1 +1171,1 @@\n-  Atomic::add(&_in_use_list_ceiling, (jint)AvgMonitorsPerThreadEstimate);\n+  Atomic::add(&_in_use_list_ceiling, AvgMonitorsPerThreadEstimate);\n@@ -1179,3 +1175,1 @@\n-  \/\/ _in_use_list_ceiling is a jint so this cast could lose precision,\n-  \/\/ but in reality the ceiling should never get that high.\n-  _in_use_list_ceiling = (jint)new_value;\n+  _in_use_list_ceiling = new_value;\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"}]}