{"files":[{"patch":"@@ -1609,1 +1609,1 @@\n-    \/\/ Method is on the form \"static void UserEvent::commit(...)\" and instrumented\n+    \/\/ Method is of the form \"static void UserEvent::commit(...)\" and instrumented\n@@ -1622,1 +1622,1 @@\n-    \/\/ Method is on the form \"void UserEvent:commit()\" and instrumented\n+    \/\/ Method is of the form \"void UserEvent:commit()\" and instrumented\n@@ -1780,1 +1780,1 @@\n-    \/\/ Must be on form: static void UserEvent::commit(...)\n+    \/\/ Must be of form: static void UserEvent::commit(...)\n@@ -1792,1 +1792,1 @@\n-    \/\/ Must be on form: void UserEvent::commit()\n+    \/\/ Must be of form: void UserEvent::commit()\n","filename":"src\/hotspot\/share\/jfr\/instrumentation\/jfrEventClassTransformer.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/instrumentation\/jfrEventClassTransformer.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-static const char* const link_error_msg = \"illegal access linking method 'jdk.jfr.internal.event.EventWriter.getEventWriter(long)'\";\n+static const char* const link_error_msg = \"illegal access linking method 'jdk.jfr.internal.event.EventWriterFactory.getEventWriter(long)'\";\n@@ -63,1 +63,1 @@\n-  \/\/ Attempting to link against jdk.jfr.internal.event.EventWriter.getEventWriter().\n+  \/\/ Attempting to link against jdk.jfr.internal.event.EventWriterFactory.getEventWriter().\n","filename":"src\/hotspot\/share\/jfr\/instrumentation\/jfrResolution.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -375,1 +375,1 @@\n-        \/\/ MyEvent#commit() or MyEvent#commit(EventConfiguration, ...)\n+        \/\/ MyEvent#commit() or static MyEvent#commit(...)\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventInstrumentation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-\/\/ See JVMUpcall and EventWriterKey::ensureEventWriterFactory()\n+\/\/ See JVMUpcallz and EventWriterKey::ensureEventWriterFactory()\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventWriterFactoryRecipe.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,3 +42,10 @@\n-     * @param dummy\n-     *            (not used but needed since invoke infrastructure in native\n-     *            uses same signature bytesForEagerInstrumentation)\n+     * @param dummy1\n+     *            not used, but act as padding so bytesForEagerInstrumentation and\n+     *            onRetransform can have identical method signatures, which simplifies the\n+     *            invoke machinery in native\n+     *\n+     * @param dummy2\n+     *            not used, but act as padding so bytesForEagerInstrumentation and\n+     *            onRetransform can have identical method signatures, which simplifies the\n+     *            invoke machinery in native\n+     *\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVMUpcalls.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-            \/\/ An excluded class lacks configuration field and can't be used by JFR.\n+            \/\/ An excluded class lacks a configuration field and can't be used by JFR.\n@@ -153,1 +153,1 @@\n-                \/\/ don't register mirrors classes.\n+                \/\/ Don't register mirror classes.\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-\/\/    Manager, but as an add additional measure the method EventWriterFactory::getEventWriter(long)\n+\/\/    Manager, but as an additional measure, the method EventWriterFactory::getEventWriter(long)\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/event\/EventWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-        throw new RuntimeException(\"Test error. PlaceholderEventWriter class should have been replaced with EventWriter\");\n+        throw new RuntimeException(\"Test error, PlaceholderEventWriterFactory class should have been replaced with EventWriterFactory\");\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/PlaceholderEventWriterFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-    \/\/ attempts to resolve and link against EventWriter. This user implementation\n+    \/\/ attempts to resolve and link against EventWriterFactory. This user implementation\n@@ -148,1 +148,1 @@\n-    \/\/ overload. that attempts to resolve and link EventWriter. This will fail,\n+    \/\/ overload. that attempts to resolve and link EventWriterFactory. This will fail,\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestGetEventWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}