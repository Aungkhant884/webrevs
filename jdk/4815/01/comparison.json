{"files":[{"patch":"@@ -56,1 +56,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -59,0 +58,5 @@\n+        loadOSXLibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadOSXLibrary() {\n@@ -135,0 +139,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -149,0 +154,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -163,0 +169,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -177,0 +184,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -191,0 +199,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -254,0 +263,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -281,0 +291,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -332,0 +343,1 @@\n+                @SuppressWarnings(\"removal\")\n@@ -350,0 +362,1 @@\n+                @SuppressWarnings(\"removal\")\n@@ -371,0 +384,1 @@\n+                @SuppressWarnings(\"removal\")\n@@ -394,0 +408,1 @@\n+                @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eio\/FileManager.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"}) \/\/ JDK implementation class\n+@SuppressWarnings(\"serial\") \/\/ JDK implementation class\n@@ -60,0 +60,5 @@\n+        loadOSXUILibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadOSXUILibrary() {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileView.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"}) \/\/ JDK implementation class\n+@SuppressWarnings(\"serial\") \/\/ JDK implementation class\n@@ -45,0 +45,5 @@\n+        loadAWTLibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadAWTLibrary() {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenMenu.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -70,1 +69,6 @@\n-        \/\/ Need to load the native library for this code.\n+        loadAWTLibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadAWTLibrary() {\n+            \/\/ Need to load the native library for this code.\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -134,1 +134,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -150,0 +149,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -179,6 +179,0 @@\n-        inAWT = AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n-            @Override\n-            public Boolean run() {\n-                return !Boolean.parseBoolean(System.getProperty(\"javafx.embed.singleThread\", \"false\"));\n-            }\n-        });\n@@ -191,1 +185,9 @@\n-    private static final boolean inAWT;\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean inAWT\n+            = AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n+        @Override\n+        public Boolean run() {\n+            return !Boolean.parseBoolean(\n+                    System.getProperty(\"javafx.embed.singleThread\", \"false\"));\n+        }\n+    });\n@@ -193,0 +195,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -251,0 +254,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -589,0 +593,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/LWCToolkit.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -97,1 +97,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -195,2 +194,0 @@\n-    private static boolean fxAppThreadIsDispatchThread;\n-\n@@ -233,7 +230,0 @@\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-            public Object run() {\n-                fxAppThreadIsDispatchThread =\n-                        \"true\".equals(System.getProperty(\"javafx.embed.singleThread\"));\n-                return null;\n-            }\n-        });\n@@ -242,0 +232,8 @@\n+    @SuppressWarnings(\"removal\")\n+    private static boolean fxAppThreadIsDispatchThread =\n+            AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n+                public Boolean run() {\n+                    return \"true\".equals(System.getProperty(\"javafx.embed.singleThread\"));\n+                }\n+            });\n+\n@@ -737,0 +735,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -738,0 +737,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -739,0 +739,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -753,0 +754,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/EventQueue.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -388,1 +388,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -408,4 +407,2 @@\n-    public static final String hostEncoding;\n-\n-    static {\n-        hostEncoding =\n+    @SuppressWarnings(\"removal\")\n+    public static final String hostEncoding =\n@@ -414,1 +411,0 @@\n-    }\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/DocFlavor.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"}) \/\/ Same-version serialization only\n+@SuppressWarnings(\"serial\") \/\/ Same-version serialization only\n@@ -108,0 +108,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -109,1 +110,19 @@\n-    protected static final Component component;\n+    protected static final Component component\n+            = AccessController.doPrivileged(new PrivilegedAction<Component>() {\n+        public Component run() {\n+            try {\n+                final Component component = createNoPermsComponent();\n+\n+                \/\/ 6482575 - clear the appContext field so as not to leak it\n+                AWTAccessor.getComponentAccessor().\n+                        setAppContext(component, null);\n+\n+                return component;\n+            } catch (Throwable e) {\n+                \/\/ We don't care about component.\n+                \/\/ So don't prevent class initialisation.\n+                e.printStackTrace();\n+                return null;\n+            }\n+        }\n+    });\n@@ -117,23 +136,1 @@\n-    protected static final MediaTracker tracker;\n-\n-    static {\n-        component = AccessController.doPrivileged(new PrivilegedAction<Component>() {\n-            public Component run() {\n-                try {\n-                    final Component component = createNoPermsComponent();\n-\n-                    \/\/ 6482575 - clear the appContext field so as not to leak it\n-                    AWTAccessor.getComponentAccessor().\n-                            setAppContext(component, null);\n-\n-                    return component;\n-                } catch (Throwable e) {\n-                    \/\/ We don't care about component.\n-                    \/\/ So don't prevent class initialisation.\n-                    e.printStackTrace();\n-                    return null;\n-                }\n-            }\n-        });\n-        tracker = new MediaTracker(component);\n-    }\n+    protected static final MediaTracker tracker = new MediaTracker(component);\n@@ -141,0 +138,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/ImageIcon.java","additions":23,"deletions":25,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"})\n+@SuppressWarnings(\"serial\")\n@@ -120,4 +120,3 @@\n-    static boolean popupPostionFixDisabled = false;\n-\n-    static {\n-        popupPostionFixDisabled = java.security.AccessController.doPrivileged(\n+    @SuppressWarnings(\"removal\")\n+    static boolean popupPostionFixDisabled =\n+            java.security.AccessController.doPrivileged(\n@@ -125,3 +124,1 @@\n-                \"javax.swing.adjustPopupLocationToFit\",\"\")).equals(\"false\");\n-\n-    }\n+                    \"javax.swing.adjustPopupLocationToFit\",\"\")).equals(\"false\");\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JPopupMenu.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"})\n+@SuppressWarnings(\"serial\")\n@@ -211,1 +211,4 @@\n-    private static final boolean LOG_DISABLE_TRUE_DOUBLE_BUFFERING;\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean LOG_DISABLE_TRUE_DOUBLE_BUFFERING\n+            = AccessController.doPrivileged(new GetBooleanAction(\n+                                   \"swing.logDoubleBufferingDisable\"));\n@@ -217,1 +220,4 @@\n-    private static final boolean IGNORE_DISABLE_TRUE_DOUBLE_BUFFERING;\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean IGNORE_DISABLE_TRUE_DOUBLE_BUFFERING\n+            = AccessController.doPrivileged(new GetBooleanAction(\n+                                   \"swing.ignoreDoubleBufferingDisable\"));\n@@ -329,9 +335,0 @@\n-    static {\n-        LOG_DISABLE_TRUE_DOUBLE_BUFFERING =\n-            AccessController.doPrivileged(new GetBooleanAction(\n-                                   \"swing.logDoubleBufferingDisable\"));\n-        IGNORE_DISABLE_TRUE_DOUBLE_BUFFERING =\n-            AccessController.doPrivileged(new GetBooleanAction(\n-                                   \"swing.ignoreDoubleBufferingDisable\"));\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JRootPane.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -99,6 +98,4 @@\n-    private static final boolean legacySortingFTPEnabled;\n-\n-    static {\n-        legacySortingFTPEnabled = \"true\".equals(AccessController.doPrivileged(\n-            new GetPropertyAction(\"swing.legacySortingFTPEnabled\", \"true\")));\n-    }\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean legacySortingFTPEnabled = \"true\".equals(\n+            AccessController.doPrivileged(\n+                    new GetPropertyAction(\"swing.legacySortingFTPEnabled\", \"true\")));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SortingFocusTraversalPolicy.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -59,0 +58,2 @@\n+        initStatic();\n+    }\n@@ -60,0 +61,2 @@\n+    @SuppressWarnings(\"removal\")\n+    private static void initStatic() {\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/FontUtilities.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -138,0 +137,5 @@\n+        initStatic();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void initStatic() {\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/StrikeCache.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -69,2 +68,4 @@\n-    private static final boolean uiScaleEnabled;\n-    private static final double debugScale;\n+    @SuppressWarnings(\"removal\")\n+    private static final boolean uiScaleEnabled\n+            = \"true\".equals(AccessController.doPrivileged(\n+            new GetPropertyAction(\"sun.java2d.uiScale.enabled\", \"true\")));\n@@ -72,5 +73,2 @@\n-    static {\n-        uiScaleEnabled = \"true\".equals(AccessController.doPrivileged(\n-                new GetPropertyAction(\"sun.java2d.uiScale.enabled\", \"true\")));\n-        debugScale = uiScaleEnabled ? getScaleFactor(\"sun.java2d.uiScale\") : -1;\n-    }\n+    private static final double debugScale =\n+            uiScaleEnabled ? getScaleFactor(\"sun.java2d.uiScale\") : -1;\n@@ -302,0 +300,1 @@\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/SunGraphicsEnvironment.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-@SuppressWarnings({\"removal\",\"serial\"}) \/\/ JDK-implementation class\n+@SuppressWarnings(\"serial\") \/\/ JDK-implementation class\n@@ -86,13 +86,0 @@\n-    \/**\n-     * {@code copyBufferEnabled}, true by default, defines the following strategy.\n-     * A duplicating (copy) buffer is created for the original pixel buffer.\n-     * The copy buffer is synchronized with the original buffer every time the\n-     * latter changes. {@code JLightweightFrame} passes the copy buffer array\n-     * to the {@link LightweightContent#imageBufferReset} method. The code spot\n-     * which synchronizes two buffers becomes the only critical section guarded\n-     * by the lock (managed with the {@link LightweightContent#paintLock()},\n-     * {@link LightweightContent#paintUnlock()} methods).\n-     *\/\n-    private static boolean copyBufferEnabled;\n-    private int[] copyBuffer;\n-\n@@ -109,2 +96,0 @@\n-        copyBufferEnabled = \"true\".equals(AccessController.\n-            doPrivileged(new GetPropertyAction(\"swing.jlf.copyBufferEnabled\", \"true\")));\n@@ -113,0 +98,15 @@\n+    \/**\n+     * {@code copyBufferEnabled}, true by default, defines the following strategy.\n+     * A duplicating (copy) buffer is created for the original pixel buffer.\n+     * The copy buffer is synchronized with the original buffer every time the\n+     * latter changes. {@code JLightweightFrame} passes the copy buffer array\n+     * to the {@link LightweightContent#imageBufferReset} method. The code spot\n+     * which synchronizes two buffers becomes the only critical section guarded\n+     * by the lock (managed with the {@link LightweightContent#paintLock()},\n+     * {@link LightweightContent#paintUnlock()} methods).\n+     *\/\n+    @SuppressWarnings(\"removal\")\n+    private static boolean copyBufferEnabled = \"true\".equals(AccessController.\n+            doPrivileged(new GetPropertyAction(\"swing.jlf.copyBufferEnabled\", \"true\")));\n+    private int[] copyBuffer;\n+\n@@ -117,0 +117,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -333,1 +334,1 @@\n-    @SuppressWarnings(\"serial\") \/\/ anonymous class inside\n+    @SuppressWarnings({\"removal\",\"serial\"}) \/\/ anonymous class inside\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/JLightweightFrame.java","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -60,0 +59,5 @@\n+        initStatic();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void initStatic() {\n@@ -298,0 +302,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -320,0 +325,1 @@\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsEnvironment.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -84,0 +83,5 @@\n+        initStatic();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void initStatic() {\n@@ -286,0 +290,1 @@\n+                @SuppressWarnings(\"removal\")\n@@ -386,0 +391,1 @@\n+                @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/CUPSPrinter.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -79,2 +78,3 @@\n-\n-    static String osname;\n+    @SuppressWarnings(\"removal\")\n+    static String osname = java.security.AccessController.doPrivileged(\n+            new sun.security.action.GetPropertyAction(\"os.name\"));\n@@ -100,0 +100,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -115,0 +116,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -129,3 +131,0 @@\n-        osname = java.security.AccessController.doPrivileged(\n-            new sun.security.action.GetPropertyAction(\"os.name\"));\n-\n@@ -138,0 +137,1 @@\n+            @SuppressWarnings(\"removal\")\n@@ -225,0 +225,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -563,0 +564,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -626,0 +628,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -635,0 +638,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -868,0 +872,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/PrintServiceLookupProvider.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -312,1 +312,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -539,1 +538,2 @@\n-        java.security.AccessController.doPrivileged(po);\n+        @SuppressWarnings(\"removal\")\n+        var dummy = java.security.AccessController.doPrivileged(po);\n@@ -612,1 +612,2 @@\n-            java.security.AccessController.doPrivileged(spooler);\n+            @SuppressWarnings(\"removal\")\n+            var dummy2 = java.security.AccessController.doPrivileged(spooler);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintJob.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -77,1 +77,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -84,1 +83,0 @@\n-    private static String encoding = \"ISO8859_1\";\n@@ -150,2 +148,2 @@\n-    static {\n-        encoding = java.security.AccessController.doPrivileged(\n+    @SuppressWarnings(\"removal\")\n+    private static String encoding = java.security.AccessController.doPrivileged(\n@@ -153,1 +151,0 @@\n-    }\n@@ -424,0 +421,1 @@\n+      @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintService.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -51,7 +50,4 @@\n-    private static TrueTypeFont eudcFont;\n-\n-    static {\n-\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-\n-                public Object run() {\n+    @SuppressWarnings(\"removal\")\n+    private static final TrueTypeFont eudcFont =\n+            AccessController.doPrivileged(new PrivilegedAction<TrueTypeFont>() {\n+                public TrueTypeFont run() {\n@@ -64,1 +60,1 @@\n-                            eudcFont = new TrueTypeFont(eudcFile, null, 0,\n+                            return new TrueTypeFont(eudcFile, null, 0,\n@@ -71,1 +67,0 @@\n-\n@@ -73,1 +68,0 @@\n-    }\n@@ -87,0 +81,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -221,0 +216,1 @@\n+            @SuppressWarnings(\"removal\")\n@@ -255,0 +251,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/Win32FontManager.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -51,0 +50,5 @@\n+        loadAWTLibrary();\n+    }\n+\n+    @SuppressWarnings(\"removal\")\n+    private static void loadAWTLibrary() {\n@@ -105,0 +109,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -205,0 +210,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -270,0 +276,1 @@\n+        @SuppressWarnings(\"removal\")\n@@ -279,0 +286,1 @@\n+        @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/windows\/classes\/sun\/print\/PrintServiceLookupProvider.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}