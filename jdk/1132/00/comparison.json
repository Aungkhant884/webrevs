{"files":[{"patch":"@@ -31,6 +31,25 @@\n-    int regBase = reg->value() - ConcreteRegisterImpl::max_fpr;\n-    if (regBase % 4 == 0) {\n-      \/\/ Reads of the low and high 16 byte parts should be handled by location itself\n-      \/\/ because they have separate callee saved entries.\n-      \/\/ See RegisterSaver::save_live_registers().\n-      return NULL;\n+    int reg_base = reg->value() - ConcreteRegisterImpl::max_fpr;\n+    int base_reg_enc = (reg_base \/ XMMRegisterImpl::max_slots_per_register);\n+    assert(base_reg_enc >= 0 && base_reg_enc < XMMRegisterImpl::number_of_registers, \"invalid XMMRegister: %d\", base_reg_enc);\n+    VMReg base_reg = as_XMMRegister(base_reg_enc)->as_VMReg();\n+    intptr_t offset_in_bytes = (reg->value() - base_reg->value()) * VMRegImpl::stack_slot_size;\n+    if (base_reg_enc > 15) {\n+      if (offset_in_bytes == 0) {\n+        return NULL; \/\/ ZMM16-31 are stored in full.\n+      }\n+    } else {\n+      if (offset_in_bytes == 0 || offset_in_bytes == 16 || offset_in_bytes == 32) {\n+        \/\/ Reads of the low and high 16 byte parts should be handled by location itself because\n+        \/\/ they have separate callee saved entries (see RegisterSaver::save_live_registers()).\n+        return NULL;\n+      }\n+      \/\/ The upper part of YMM0-15 and ZMM0-15 registers are saved separately in the frame.\n+      if (offset_in_bytes > 32) {\n+        base_reg = base_reg->next(8);\n+        offset_in_bytes -= 32;\n+      } else if (offset_in_bytes > 16) {\n+        base_reg = base_reg->next(4);\n+        offset_in_bytes -= 16;\n+      } else {\n+        \/\/ XMM0-15 case (0 < offset_in_bytes < 16). No need to adjust base register (or offset).\n+      }\n@@ -38,10 +57,3 @@\n-    VMReg baseReg = as_XMMRegister(regBase \/ XMMRegisterImpl::max_slots_per_register)->as_VMReg();\n-    intptr_t offset = (reg->value() - baseReg->value()) * VMRegImpl::stack_slot_size; \/\/ offset in bytes\n-    if (offset >= 16) {\n-      \/\/ The high part of YMM registers are saved in a their own area in the frame\n-      baseReg = baseReg->next()->next()->next()->next();\n-      offset -= 16;\n-    }\n-    address baseLocation = location(baseReg);\n-    if (baseLocation != NULL) {\n-      return baseLocation + offset;\n+    address base_location = location(base_reg);\n+    if (base_location != NULL) {\n+      return base_location + offset_in_bytes;\n","filename":"src\/hotspot\/cpu\/x86\/registerMap_x86.cpp","additions":28,"deletions":16,"binary":false,"changes":44,"status":"modified"}]}