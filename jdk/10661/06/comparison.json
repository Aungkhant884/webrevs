{"files":[{"patch":"@@ -868,0 +868,1 @@\n+  BUILD_HOTSPOT_JTREG_LIBRARIES_LDFLAGS_libfast-math := -ffast-math\n","filename":"make\/test\/JtregNativeHotspot.gmk","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+# include <fenv.h>\n@@ -1746,0 +1747,11 @@\n+  \/\/ Save and restore the floating-point environment around dlopen().\n+  \/\/ There are known cases where global library initialization sets\n+  \/\/ FPU flags that affect computation accuracy, for example, enabling\n+  \/\/ Flush-To-Zero and Denormals-Are-Zero. Do not let those libraries\n+  \/\/ break Java arithmetic. Unfortunately, this might affect libraries\n+  \/\/ that might depend on these FPU features for performance and\/or\n+  \/\/ numerical \"accuracy\", but we need to protect Java semantics first\n+  \/\/ and foremost. See JDK-8295159.\n+  fenv_t curr_fenv;\n+  int rtn = fegetenv(&curr_fenv);\n+  assert(rtn == 0, \"fegetnv must succeed\");\n@@ -1747,0 +1759,3 @@\n+  rtn = fesetenv(&curr_fenv);\n+  assert(rtn == 0, \"fesetenv must succeed\");\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8295159\n+ * @summary DSO created with -ffast-math breaks Java floating-point arithmetic\n+ * @run main\/othervm\/native compiler.floatingpoint.TestDenormalDouble\n+ *\/\n+\n+package compiler.floatingpoint;\n+\n+import static java.lang.System.loadLibrary;\n+\n+public class TestDenormalDouble {\n+    static volatile double lastDouble;\n+\n+    private static void testDoubles() {\n+        lastDouble = 0x1.0p-1074;\n+        for (double x = lastDouble * 2; x <= 0x1.0p1022; x *= 2) {\n+            if (x != x || x <= lastDouble) {\n+                throw new AssertionError(\"TEST FAILED: \" + x);\n+            }\n+            lastDouble = x;\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        testDoubles();\n+        System.out.println(\"Loading libfast-math.so\");\n+        loadLibrary(\"fast-math\");\n+        testDoubles();\n+        System.out.println(\"Test passed.\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/TestDenormalDouble.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8295159\n+ * @summary DSO created with -ffast-math breaks Java floating-point arithmetic\n+ * @run main\/othervm\/native compiler.floatingpoint.TestDenormalFloat\n+ *\/\n+\n+package compiler.floatingpoint;\n+\n+import static java.lang.System.loadLibrary;\n+\n+public class TestDenormalFloat {\n+    static volatile float lastFloat;\n+\n+    private static void testFloats() {\n+        lastFloat = 0x1.0p-149f;\n+        for (float x = lastFloat * 2; x <= 0x1.0p127f; x *= 2) {\n+            if (x != x || x <= lastFloat) {\n+                throw new AssertionError(\"TEST FAILED: \" + x);\n+            }\n+            lastFloat = x;\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        testFloats();\n+        System.out.println(\"Loading libfast-math.so\");\n+        loadLibrary(\"fast-math\");\n+        testFloats();\n+        System.out.println(\"Test passed.\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/TestDenormalFloat.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ This file is intentionally left blank.\n+\/\/\n+\/\/ It exists only to be linked with -ffast-math. See GCC bug 55522:\n+\/\/\n+\/\/ \"When used at link-time, [ GCC with -ffast-math ] may include\n+\/\/ libraries or startup files that change the default FPU control word\n+\/\/ or other similar optimizations.\"\n+\/\/\n+\/\/ This breaks Java's floating point arithmetic.\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/libfast-math.c","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"}]}