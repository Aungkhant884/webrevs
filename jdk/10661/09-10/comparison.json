{"files":[{"patch":"@@ -5165,16 +5165,0 @@\n-      Label FAIL, DONE;\n-#ifdef _LP64\n-      \/\/ Perform a little arithmetic to make sure that denormal\n-      \/\/ numbers are handled correctly, i.e. that the \"Denormals Are\n-      \/\/ Zeros\" flag has not been set.\n-      movsd(xmm9, ExternalAddress(StubRoutines::large_denormal_addr()), rsi);\n-      movsd(xmm8, ExternalAddress(StubRoutines::small_denormal_addr()), rsi);\n-      addsd(xmm8, xmm9);\n-      ucomisd(xmm8, xmm9);\n-      jcc(Assembler::equal, FAIL);\n-      xorpd(xmm9, ExternalAddress(StubRoutines::x86::double_sign_flip()), rsi);\n-      subsd(xmm9, xmm8);\n-      ucomisd(xmm8, xmm9);\n-      jcc(Assembler::notEqual, DONE);\n-#endif\n-      bind(FAIL);\n@@ -5182,1 +5166,0 @@\n-      bind(DONE);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -993,1 +993,1 @@\n-  assert(rtn == 0, \"fegetnv must succeed\");\n+  assert(rtn == 0, \"fegetenv must succeed\");\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1817,1 +1817,1 @@\n-  assert(rtn == 0, \"fegetnv must succeed\");\n+  assert(rtn == 0, \"fegetenv must succeed\");\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -324,4 +324,0 @@\n-  \/\/ We need the addition of _large_denormal and _small_denormal to be\n-  \/\/ performed at runtime. Making _small_denormal volatile ensures\n-  \/\/ that the following expression isn't evaluated at compile time:\n-\n@@ -330,1 +326,1 @@\n-  \/\/ is added it it, must be rounded according to the mode. These two\n+  \/\/ is added to it, must be rounded according to the mode. These two\n@@ -333,0 +329,4 @@\n+\n+  \/\/ We need the addition of _large_denormal and _small_denormal to be\n+  \/\/ performed at runtime. Making _small_denormal volatile ensures\n+  \/\/ that the following expression isn't evaluated at compile time:\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-                throw new AssertionError(\"TEST FAILED: \" + x);\n+                throw new RuntimeException(\"TEST FAILED: \" + x);\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/TestDenormalDouble.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-                throw new AssertionError(\"TEST FAILED: \" + x);\n+                throw new RuntimeException(\"TEST FAILED: \" + x);\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/TestDenormalFloat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}