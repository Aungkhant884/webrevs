{"files":[{"patch":"@@ -67,0 +67,1 @@\n+    private static final String FA_PASS_ALL_ARGUMENTS = \"pass-all-args\";\n@@ -238,0 +239,3 @@\n+            putUnlessNull(args, StandardBundlerParam.FA_PASS_ALL_ARGUMENTS.getID(),\n+                    initialMap.get(FA_PASS_ALL_ARGUMENTS));\n+\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_PASS_ALL_ARGUMENTS;\n@@ -97,0 +98,4 @@\n+                    assoc.passAllArguments = Optional.ofNullable(\n+                    FA_PASS_ALL_ARGUMENTS.fetchFrom(fa))\n+                    .orElse(false);\n+\n@@ -106,0 +111,1 @@\n+    boolean passAllArguments;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/FileAssociation.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -420,0 +420,8 @@\n+    static final StandardBundlerParam<Boolean> FA_PASS_ALL_ARGUMENTS =\n+            new StandardBundlerParam<>(\n+                    \"fileAssociation.passAllArguments\",\n+                    Boolean.class,\n+                    params -> false,\n+                    (s, p) -> Boolean.valueOf(s)\n+            );\n+\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -532,1 +532,5 @@\n-                xml.writeAttribute(\"Argument\", \"\\\"%1\\\"\");\n+                if (fa.passAllArguments) {\n+                    xml.writeAttribute(\"Argument\", \"\\\"%1\\\" %*\");\n+                } else {\n+                    xml.writeAttribute(\"Argument\", \"\\\"%1\\\"\");\n+                }\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixAppImageFragmentBuilder.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,0 +53,3 @@\n+        if (passAllArguments) {\n+            entries.put(\"pass-all-args\", \"true\");\n+        }\n@@ -71,0 +74,5 @@\n+    public FileAssociations setPassAllArguments() {\n+        passAllArguments = true;\n+        return this;\n+    }\n+\n@@ -104,0 +112,1 @@\n+    boolean passAllArguments;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/FileAssociations.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -267,2 +267,2 @@\n-                final Path appOutput = testFile.getParent()\n-                        .resolve(HelloApp.OUTPUT_FILENAME);\n+                final Path testDir = testFile.getParent();\n+                final Path appOutput = testDir.resolve(HelloApp.OUTPUT_FILENAME);\n@@ -271,5 +271,0 @@\n-                TKit.trace(String.format(\"Use desktop to open [%s] file\",\n-                        testFile));\n-                Desktop.getDesktop().open(testFile.toFile());\n-                TKit.waitForFileCreated(appOutput, 7);\n-\n@@ -280,0 +275,27 @@\n+                if (fa.passAllArguments) {\n+                    \/\/ write a shortcut and open it with desktop\n+                    final Path createShortcutVbs = testDir.resolve(\"createShortcut.vbs\");\n+                    final Path shortcutLnk = testDir.resolve(\"shortcut.lnk\");\n+                    TKit.createTextFile(createShortcutVbs, List.of(\n+                            \"Dim sc, shell\",\n+                            \"Set shell = WScript.CreateObject (\\\"WScript.Shell\\\")\",\n+                            \"Set sc = shell.CreateShortcut (\\\"\" + shortcutLnk + \"\\\")\",\n+                            \"sc.TargetPath = \\\"\\\"\\\"\" + testFile + \"\\\"\\\"\\\"\",\n+                            \"sc.Arguments = \\\"foo \\\"\\\"bar baz\\\"\\\" boo\\\"\",\n+                            \"sc.WorkingDirectory = \\\"\\\"\\\"\" + testDir + \"\\\"\\\"\\\"\",\n+                            \"sc.Save()\"\n+                    ));\n+                    Executor.of(\"cscript\", \"\/nologo\", createShortcutVbs.toString())\n+                            .execute();\n+                    TKit.assertFileExists(shortcutLnk);\n+                    TKit.trace(String.format(\"Use desktop to open [%s] file\",\n+                            shortcutLnk));\n+                    expectedArgs.addAll(List.of(\"foo\", \"bar baz\", \"boo\"));\n+                    Desktop.getDesktop().open(shortcutLnk.toFile());\n+                } else {\n+                    TKit.trace(String.format(\"Use desktop to open [%s] file\",\n+                            testFile));\n+                    Desktop.getDesktop().open(testFile.toFile());\n+                }\n+                TKit.waitForFileCreated(appOutput, 7);\n+\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/PackageTest.java","additions":29,"deletions":7,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -27,4 +27,2 @@\n-import jdk.jpackage.test.TKit;\n-import jdk.jpackage.test.PackageTest;\n-import jdk.jpackage.test.PackageType;\n-import jdk.jpackage.test.FileAssociations;\n+\n+import jdk.jpackage.test.*;\n@@ -89,0 +87,1 @@\n+        packageTest.forTypes(PackageType.WIN_EXE);\n@@ -96,0 +95,2 @@\n+        } else {\n+            fa.setPassAllArguments();\n@@ -109,1 +110,2 @@\n-        packageTest.run();\n+        packageTest.run(RunnablePackageTest.Action.CREATE, RunnablePackageTest.Action.INSTALL,\n+                RunnablePackageTest.Action.VERIFY_INSTALL, RunnablePackageTest.Action.UNINSTALL);\n","filename":"test\/jdk\/tools\/jpackage\/share\/FileAssociationsTest.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}