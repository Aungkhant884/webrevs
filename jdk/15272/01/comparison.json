{"files":[{"patch":"@@ -52,0 +52,4 @@\n+#if INCLUDE_JFR\n+#include \"jfr\/jfrEvents.hpp\"\n+#endif\n+\n@@ -717,0 +721,1 @@\n+\n@@ -724,0 +729,6 @@\n+\n+#if INCLUDE_JFR\n+  EventNativeLibraryUnload event;\n+  event.set_name(l_path);\n+#endif\n+\n@@ -733,0 +744,5 @@\n+#if INCLUDE_JFR\n+    event.set_success(true);\n+    event.set_errorMessage(nullptr);\n+    event.commit();\n+#endif\n@@ -743,0 +759,5 @@\n+#if INCLUDE_JFR\n+    event.set_success(false);\n+    event.set_errorMessage(error_report);\n+    event.commit();\n+#endif\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1257,0 +1257,6 @@\n+\n+#if INCLUDE_JFR\n+  EventNativeLibraryUnload event;\n+  event.set_name(name);\n+#endif\n+\n@@ -1260,0 +1266,5 @@\n+#if INCLUDE_JFR\n+    event.set_success(true);\n+    event.set_errorMessage(nullptr);\n+    event.commit();\n+#endif\n@@ -1262,0 +1273,2 @@\n+    char buf[500];\n+    size_t tl = os::lasterror(buf, sizeof(buf));\n@@ -1264,0 +1277,8 @@\n+#if INCLUDE_JFR\n+    event.set_success(false);\n+    if (tl == 0) {\n+      os::snprintf(buf, sizeof(buf), \"Attempt to unload dll failed (error code %d)\", (int) errcode);\n+    }\n+    event.set_errorMessage(buf);\n+    event.commit();\n+#endif\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -949,0 +949,7 @@\n+  <Event name=\"NativeLibraryUnload\" category=\"Java Virtual Machine, Runtime\" label=\"Native Library Unload\" thread=\"false\" stackTrace=\"true\" startTime=\"true\"\n+    description=\"Information about a dynamic library or other native image unload operation\">\n+    <Field type=\"string\" name=\"name\" label=\"Name\" \/>\n+    <Field type=\"boolean\" name=\"success\" label=\"Success\" description=\"Success or failure of the unload operation\" \/>\n+    <Field type=\"string\" name=\"errorMessage\" label=\"Error Message\" description=\"In case of an unload error, error description\" \/>\n+  <\/Event>\n+\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -703,0 +703,6 @@\n+    <event name=\"jdk.NativeLibraryUnload\">\n+      <setting name=\"enabled\">true<\/setting>\n+      <setting name=\"stackTrace\">true<\/setting>\n+      <setting name=\"threshold\">0 ms<\/setting>\n+    <\/event>\n+\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -703,0 +703,6 @@\n+    <event name=\"jdk.NativeLibraryUnload\">\n+      <setting name=\"enabled\">true<\/setting>\n+      <setting name=\"stackTrace\">true<\/setting>\n+      <setting name=\"threshold\">0 ms<\/setting>\n+    <\/event>\n+\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-            \"DataLoss\", \"IntFlag\", \"ReservedStackActivation\",\n+            \"DataLoss\", \"IntFlag\", \"ReservedStackActivation\", \"NativeLibraryUnload\",\n","filename":"test\/jdk\/jdk\/jfr\/event\/metadata\/TestLookForUntestedEvents.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -187,0 +187,1 @@\n+    public static final String NativeLibraryUnload = PREFIX + \"NativeLibraryUnload\";\n","filename":"test\/lib\/jdk\/test\/lib\/jfr\/EventNames.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}