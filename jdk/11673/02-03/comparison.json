{"files":[{"patch":"@@ -790,1 +790,1 @@\n-class VerifyMeetMark;\n+class VerifyMeet;\n@@ -792,1 +792,2 @@\n-  friend class VerifyMeetMark;\n+  friend class VerifyMeet;\n+  friend class Type;\n@@ -835,4 +836,0 @@\n-public:\n-  VerifyMeetResult(Compile* C) :\n-          _depth(0), _cache(C->comp_arena(), 2, 0, VerifyMeetResultEntry()) {\n-  }\n@@ -900,0 +897,4 @@\n+public:\n+  VerifyMeetResult(Compile* C) :\n+          _depth(0), _cache(C->comp_arena(), 2, 0, VerifyMeetResultEntry()) {\n+  }\n@@ -906,1 +907,1 @@\n-class VerifyMeetMark {\n+class VerifyMeet {\n@@ -910,1 +911,1 @@\n-  VerifyMeetMark(Compile* C) : _C(C) {\n+  VerifyMeet(Compile* C) : _C(C) {\n@@ -917,1 +918,1 @@\n-  ~VerifyMeetMark() {\n+  ~VerifyMeet() {\n@@ -924,0 +925,8 @@\n+\n+  const Type* meet(const Type* t1, const Type* t2) const {\n+    return _C->_type_verify->meet(t1, t2);\n+  }\n+\n+  void add(const Type* t1, const Type* t2, const Type* res) const {\n+    _C->_type_verify->add(t1, t2, res);\n+  }\n@@ -925,1 +934,0 @@\n-#endif\n@@ -927,2 +935,1 @@\n-void Type::check_symmetrical(const Type* t, const Type* mt) const {\n-#ifdef ASSERT\n+void Type::check_symmetrical(const Type* t, const Type* mt, const VerifyMeet& verify) const {\n@@ -930,2 +937,1 @@\n-  VerifyMeetResult* type_verify = C->_type_verify;\n-  const Type* mt2 = type_verify->meet(t, this);\n+  const Type* mt2 = verify.meet(t, this);\n@@ -941,2 +947,2 @@\n-  const Type* t2t    = type_verify->meet(dual_join,t->_dual);\n-  const Type* t2this = type_verify->meet(dual_join,this->_dual);\n+  const Type* t2t    = verify.meet(dual_join,t->_dual);\n+  const Type* t2this = verify.meet(dual_join,this->_dual);\n@@ -963,1 +969,0 @@\n-#endif\n@@ -965,0 +970,1 @@\n+#endif\n@@ -981,1 +987,1 @@\n-  VerifyMeetMark verif(C);\n+  VerifyMeet verify(C);\n@@ -989,2 +995,1 @@\n-  VerifyMeetResult* type_verify = C->_type_verify;\n-  type_verify->add(this_t, t, mt);\n+  verify.add(this_t, t, mt);\n@@ -997,3 +1002,3 @@\n-  this_t->check_symmetrical(t, mt);\n-  const Type *mt_dual = type_verify->meet(this_t->_dual, t->_dual);\n-  this_t->_dual->check_symmetrical(t->_dual, mt_dual);\n+  this_t->check_symmetrical(t, mt, verify);\n+  const Type *mt_dual = verify.meet(this_t->_dual, t->_dual);\n+  this_t->_dual->check_symmetrical(t->_dual, mt_dual, verify);\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":28,"deletions":23,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+class VerifyMeet;\n@@ -173,1 +174,1 @@\n-  void check_symmetrical(const Type *t, const Type *mt) const;\n+  void check_symmetrical(const Type* t, const Type* mt, const VerifyMeet& verify) const NOT_DEBUG_RETURN;\n@@ -188,1 +189,1 @@\n-  void assert_type_verify_empty() const PRODUCT_RETURN;\n+  void assert_type_verify_empty() const NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}