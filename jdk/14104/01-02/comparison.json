{"files":[{"patch":"@@ -94,1 +94,1 @@\n-            String text =  ValueFormatter.formatClass(clazz);\n+            String text = ValueFormatter.formatClass(clazz);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/FieldFormatter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    abstract public void add(Object value);\n+    public abstract void add(Object value);\n@@ -40,1 +40,1 @@\n-    abstract public Object result();\n+    public abstract Object result();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/Function.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-            throw new ParseException(\"Expected text to start with a single quote character\",  position());\n+            throw new ParseException(\"Expected text to start with a single quote character\", position());\n@@ -270,1 +270,1 @@\n-        Consumer<Field> style =  switch (text.toLowerCase()) {\n+        Consumer<Field> style = switch (text.toLowerCase()) {\n@@ -333,1 +333,1 @@\n-    public void close() throws  ParseException {\n+    public void close() throws ParseException {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/QueryParser.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-            String typeName =  Utils.makeSimpleName(f.getTypeName());\n+            String typeName = Utils.makeSimpleName(f.getTypeName());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/QueryPrinter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            System.out.println(\"A recording can also be started on already running Java Virtual Machine:\");\n+            System.out.println(\"A recording can also be started on an already running Java Virtual Machine:\");\n@@ -77,1 +77,3 @@\n-            System.out.println(\" jfr summary recording.jfr\");\n+            System.out.println(\" jfr view gc recording.jfr\");\n+            System.out.println();\n+            System.out.println(\" jfr view allocation-by-site recording.jfr\");\n@@ -79,1 +81,1 @@\n-            System.out.println(\" jfr metadata recording.jfr\");\n+            System.out.println(\" jfr summary recording.jfr\");\n@@ -81,1 +83,1 @@\n-            System.out.println(\" jfr metadata --categories GC,Detailed\");\n+            System.out.println(\" jfr metadata\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Main.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        return \"Display events in a tabular format. See 'jfr help metadata' for details.\";\n+        return \"Display events in a tabular format. See 'jfr help view' for details.\";\n@@ -95,1 +95,1 @@\n-        stream.println(\" jfr view --cell-height 5 ThreadStart recording.jfr\");\n+        stream.println(\" jfr view --cell-height 10 ThreadStart recording.jfr\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/View.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        } else if(roundedDuration.isNegative()){\n+        } else if (roundedDuration.isNegative()) {\n@@ -73,1 +73,1 @@\n-            return String.format(\"%.6f ms\",  outputMs);\n+            return String.format(\"%.6f ms\", outputMs);\n@@ -79,1 +79,1 @@\n-            return String.format(\"%.\" + outputDigit + \"f ms\",  outputMs);\n+            return String.format(\"%.\" + outputDigit + \"f ms\", outputMs);\n@@ -85,1 +85,1 @@\n-            return String.format(\"%.\" + outputDigit + \"f s\",  outputSecond);\n+            return String.format(\"%.\" + outputDigit + \"f s\", outputSecond);\n@@ -88,1 +88,1 @@\n-            return String.format(\"%d m %d s\",  d.toMinutesPart(), d.toSecondsPart());\n+            return String.format(\"%d m %d s\", d.toMinutesPart(), d.toSecondsPart());\n@@ -91,1 +91,1 @@\n-            return String.format(\"%d h %d m\",  d.toHoursPart(), d.toMinutesPart());\n+            return String.format(\"%d h %d m\", d.toHoursPart(), d.toMinutesPart());\n@@ -94,1 +94,1 @@\n-            return String.format(\"%d d %d h\",  d.toDaysPart(), d.toHoursPart());\n+            return String.format(\"%d d %d h\", d.toDaysPart(), d.toHoursPart());\n@@ -105,1 +105,1 @@\n-        } else if(d.isNegative()){\n+        } else if(d.isNegative()) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/util\/ValueFormatter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        Path file = Utils.createTempFile(\"faked-file\",  \".jfr\");\n+        Path file = Utils.createTempFile(\"faked-file\", \".jfr\");\n","filename":"test\/jdk\/jdk\/jfr\/tool\/TestView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}