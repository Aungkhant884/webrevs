{"files":[{"patch":"@@ -45,1 +45,1 @@\n- * be set using query clauses COLUMNS and FORMAT.\n+ * be set using query clauses COLUMN and FORMAT.\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/Field.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-            return classLoader != null && !classLoader.getName().equals(\"bootstrap\");\n+            return classLoader != null && !\"bootstrap\".equals(classLoader.getName());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/FieldBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-[application.file-write-by-path]\n+[application.file-writes-by-path]\n@@ -401,5 +401,5 @@\n-[application.memory-leaks-by-type]\n-label = \"Memory Leak Candidates by Type\"\n-table = \"COLUMN 'Alloc. Time', 'Object Type', 'Object Age'\n-         SELECT LAST_BATCH(allocationTime), LAST_BATCH(object.type), LAST_BATCH(objectAge)\n-         FROM OldObjectSample GROUP BY object.type ORDER BY allocationTime\"\n+[application.memory-leaks-by-class]\n+label = \"Memory Leak Candidates by Class\"\n+table = \"COLUMN 'Alloc. Time', 'Object Class', 'Object Age', 'Heap Usage'\n+         SELECT LAST_BATCH(allocationTime), LAST_BATCH(object.type), LAST_BATCH(objectAge),\n+         LAST_BATCH(lastKnownHeapUsage) FROM OldObjectSample GROUP BY object.type ORDER BY allocationTime\"\n@@ -409,3 +409,3 @@\n-table = \"COLUMN 'Alloc. Time', 'Application Method', 'Object Age'\n-         SELECT LAST_BATCH(allocationTime), LAST_BATCH(stackTrace.topApplicationFrame), LAST_BATCH(objectAge)\n-         FROM OldObjectSample GROUP BY stackTrace.topApplicationFrame ORDER BY allocationTime\"\n+table = \"COLUMN 'Alloc. Time', 'Application Method', 'Object Age', 'Heap Usage'\n+         SELECT LAST_BATCH(allocationTime), LAST_BATCH(stackTrace.topApplicationFrame), LAST_BATCH(objectAge),\n+         LAST_BATCH(lastKnownHeapUsage) FROM OldObjectSample GROUP BY stackTrace.topApplicationFrame ORDER BY allocationTime\"\n@@ -453,1 +453,1 @@\n-table = \"COLUMN 'Class', 'Count', 'Heap Space', 'Change'\n+table = \"COLUMN 'Class', 'Count', 'Heap Space', 'Increase'\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/view.ini","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}