{"files":[{"patch":"@@ -57,1 +57,0 @@\n-  bool is_java_klass() const  { return true; }\n","filename":"src\/hotspot\/share\/ci\/ciArrayKlass.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-  _nonstatic_field_size = ik->nonstatic_field_size();\n@@ -126,1 +125,0 @@\n-  _nonstatic_field_size = -1;\n@@ -499,3 +497,0 @@\n-  \/\/ Size in bytes of my fields, including inherited fields.\n-  int fsize = nonstatic_field_size() * heapOopSize;\n-\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -64,2 +64,0 @@\n-  jint                   _nonstatic_field_size;\n-  jint                   _nonstatic_oop_map_size;\n@@ -176,3 +174,0 @@\n-  jint                   nonstatic_field_size()  {\n-    assert(is_loaded(), \"must be loaded\");\n-    return _nonstatic_field_size; }\n@@ -182,3 +177,0 @@\n-  jint                   nonstatic_oop_map_size()  {\n-    assert(is_loaded(), \"must be loaded\");\n-    return _nonstatic_oop_map_size; }\n@@ -286,1 +278,0 @@\n-  bool is_java_klass() const     { return true; }\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}