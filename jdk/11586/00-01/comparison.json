{"files":[{"patch":"@@ -44,0 +44,1 @@\n+#include \"runtime\/stackWatermark.hpp\"\n@@ -389,0 +390,5 @@\n+  \/\/ Process the oops in the thread head before calling into code that wants to\n+  \/\/ stack walk over Loom continuations. The stack walking code will otherwise\n+  \/\/ skip frames in stack chunks on the Java heap.\n+  StackWatermarkSet::start_processing(thread, StackWatermarkKind::gc);\n+\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampler.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-JfrVframeStream::JfrVframeStream(JavaThread* jt, const frame& fr, bool stop_at_java_call_stub, bool async_mode) :\n+static RegisterMap::WalkContinuation walk_continuation(JavaThread* jt) {\n@@ -158,0 +158,6 @@\n+  return (UseZGC && !StackWatermarkSet::processing_started(jt))\n+      ? RegisterMap::WalkContinuation::skip\n+      : RegisterMap::WalkContinuation::include;\n+}\n+\n+JfrVframeStream::JfrVframeStream(JavaThread* jt, const frame& fr, bool stop_at_java_call_stub, bool async_mode) :\n@@ -161,1 +167,1 @@\n-                                 RegisterMap::WalkContinuation::skip)),\n+                                 walk_continuation(jt))),\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTrace.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}