{"files":[{"patch":"@@ -120,1 +120,1 @@\n-public final class Connection implements Runnable, HandshakeCompletedListener {\n+public final class Connection implements Runnable {\n@@ -360,1 +360,1 @@\n-            sslSocket.addHandshakeCompletedListener(this);\n+            setHandshakeCompletedListener(sslSocket);\n@@ -656,1 +656,1 @@\n-                    if (isTlsConnection()) {\n+                    if (isTlsConnection() && tlsHandshakeListener != null) {\n@@ -660,1 +660,1 @@\n-                            tlsHandshakeCompleted.completeExceptionally(ce);\n+                            tlsHandshakeListener.tlsHandshakeCompleted.completeExceptionally(ce);\n@@ -662,1 +662,1 @@\n-                            tlsHandshakeCompleted.cancel(false);\n+                            tlsHandshakeListener.tlsHandshakeCompleted.cancel(false);\n@@ -1030,23 +1030,2 @@\n-    private final CompletableFuture<X509Certificate> tlsHandshakeCompleted =\n-            new CompletableFuture<>();\n-\n-    @Override\n-    public void handshakeCompleted(HandshakeCompletedEvent event) {\n-        try {\n-            X509Certificate tlsServerCert = null;\n-            Certificate[] certs;\n-            if (event.getSocket().getUseClientMode()) {\n-                certs = event.getPeerCertificates();\n-            } else {\n-                certs = event.getLocalCertificates();\n-            }\n-            if (certs != null && certs.length > 0 &&\n-                    certs[0] instanceof X509Certificate) {\n-                tlsServerCert = (X509Certificate) certs[0];\n-            }\n-            tlsHandshakeCompleted.complete(tlsServerCert);\n-        } catch (SSLPeerUnverifiedException ex) {\n-            CommunicationException ce = new CommunicationException();\n-            ce.setRootCause(closureReason);\n-            tlsHandshakeCompleted.completeExceptionally(ex);\n-        }\n+    public boolean isTlsConnection() {\n+        return (sock instanceof SSLSocket) || isUpgradedToStartTls;\n@@ -1055,2 +1034,8 @@\n-    public boolean isTlsConnection() {\n-        return sock instanceof SSLSocket;\n+    private HandshakeListener tlsHandshakeListener;\n+\n+    synchronized public void setHandshakeCompletedListener(SSLSocket sslSocket) {\n+        if (tlsHandshakeListener != null)\n+            tlsHandshakeListener.tlsHandshakeCompleted.cancel(false);\n+\n+        tlsHandshakeListener = new HandshakeListener();\n+        sslSocket.addHandshakeCompletedListener(tlsHandshakeListener);\n@@ -1060,1 +1045,1 @@\n-            throws SaslException {\n+        throws SaslException {\n@@ -1062,2 +1047,2 @@\n-            if (isTlsConnection())\n-                return tlsHandshakeCompleted.get();\n+            if (isTlsConnection() && tlsHandshakeListener != null)\n+                return tlsHandshakeListener.tlsHandshakeCompleted.get();\n@@ -1071,0 +1056,27 @@\n+\n+    private class HandshakeListener implements HandshakeCompletedListener {\n+\n+        private CompletableFuture<X509Certificate> tlsHandshakeCompleted =\n+                new CompletableFuture<>();\n+        @Override\n+        public void handshakeCompleted(HandshakeCompletedEvent event) {\n+            try {\n+                X509Certificate tlsServerCert = null;\n+                Certificate[] certs;\n+                if (event.getSocket().getUseClientMode()) {\n+                    certs = event.getPeerCertificates();\n+                } else {\n+                    certs = event.getLocalCertificates();\n+                }\n+                if (certs != null && certs.length > 0 &&\n+                        certs[0] instanceof X509Certificate) {\n+                    tlsServerCert = (X509Certificate) certs[0];\n+                }\n+                tlsHandshakeCompleted.complete(tlsServerCert);\n+            } catch (SSLPeerUnverifiedException ex) {\n+                CommunicationException ce = new CommunicationException();\n+                ce.setRootCause(closureReason);\n+                tlsHandshakeCompleted.completeExceptionally(ex);\n+            }\n+        }\n+    }\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Connection.java","additions":45,"deletions":33,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -354,0 +354,1 @@\n+            ldapConnection.setHandshakeCompletedListener(sslSocket);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/ext\/StartTlsResponseImpl.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}