{"files":[{"patch":"@@ -285,0 +285,25 @@\n+static bool is_klass_initialized(Symbol* klass_name) {\n+  VM_ENTRY_MARK;\n+  InstanceKlass* ik = SystemDictionary::find_instance_klass(klass_name, Handle(), Handle());\n+  return ik != nullptr && ik->is_initialized();\n+}\n+\n+bool ciInstanceKlass::is_box_cache_valid() const {\n+  BasicType box_type = box_klass_type();\n+\n+  if (box_type != T_OBJECT) {\n+    switch(box_type) {\n+      case T_INT:     return is_klass_initialized(java_lang_Integer_IntegerCache::symbol());\n+      case T_CHAR:    return is_klass_initialized(java_lang_Character_CharacterCache::symbol());\n+      case T_SHORT:   return is_klass_initialized(java_lang_Short_ShortCache::symbol());\n+      case T_BYTE:    return is_klass_initialized(java_lang_Byte_ByteCache::symbol());\n+      case T_LONG:    return is_klass_initialized(java_lang_Long_LongCache::symbol());\n+      case T_BOOLEAN:\n+      case T_FLOAT:\n+      case T_DOUBLE:  return true;\n+      default:;\n+    }\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -274,0 +274,1 @@\n+  bool is_box_cache_valid() const;\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -570,6 +570,0 @@\n-static bool is_klass_initialized(Symbol* klass_name) {\n-  VM_ENTRY_MARK;\n-  InstanceKlass* ik = SystemDictionary::find_instance_klass(klass_name, Handle(), Handle());\n-  return ik != nullptr && ik->is_initialized();\n-}\n-\n@@ -578,16 +572,1 @@\n-  BasicType box_type = klass->box_klass_type();\n-\n-  if (box_type != T_OBJECT) {\n-    switch(box_type) {\n-      case T_INT:     return is_klass_initialized(java_lang_Integer_IntegerCache::symbol());\n-      case T_CHAR:    return is_klass_initialized(java_lang_Character_CharacterCache::symbol());\n-      case T_SHORT:   return is_klass_initialized(java_lang_Short_ShortCache::symbol());\n-      case T_BYTE:    return is_klass_initialized(java_lang_Byte_ByteCache::symbol());\n-      case T_LONG:    return is_klass_initialized(java_lang_Long_LongCache::symbol());\n-      case T_BOOLEAN:\n-      case T_FLOAT:\n-      case T_DOUBLE:  return true;\n-      default:;\n-    }\n-  }\n-  return false;\n+  return klass->is_box_cache_valid();\n","filename":"src\/hotspot\/share\/opto\/callGenerator.cpp","additions":1,"deletions":22,"binary":false,"changes":23,"status":"modified"}]}