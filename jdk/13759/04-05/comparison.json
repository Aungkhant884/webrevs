{"files":[{"patch":"@@ -74,0 +74,3 @@\n+    volatile Point srcPoint;\n+    volatile Point dstPoint;\n+    volatile Dimension d;\n@@ -161,2 +164,3 @@\n-        final Robot robot = new Robot();\n-        Thread.sleep(FRAME_ACTIVATION_TIMEOUT);\n+        Robot robot = new Robot();\n+        robot.delay(FRAME_ACTIVATION_TIMEOUT);\n+\n@@ -205,5 +209,5 @@\n-    boolean test(Robot robot, JFrame targetFrame) throws InterruptedException {\n-\/\/        robot.waitForIdle();\n-\n-        final Point srcPoint = sourceFrame.getLocationOnScreen();\n-        Dimension d = sourceFrame.getSize();\n+    boolean test(Robot robot, JFrame targetFrame) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            srcPoint = sourceFrame.getLocationOnScreen();\n+            d = sourceFrame.getSize();\n+        });\n@@ -216,3 +220,4 @@\n-\n-        final Point dstPoint = targetFrame.getLocationOnScreen();\n-        d = targetFrame.getSize();\n+        EventQueue.invokeAndWait(() -> {\n+            dstPoint = targetFrame.getLocationOnScreen();\n+            d = targetFrame.getSize();\n+        });\n@@ -234,1 +239,1 @@\n-            Thread.sleep(10);\n+            robot.delay(10);\n","filename":"test\/jdk\/java\/awt\/dnd\/DropTargetingTest.java","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -177,5 +177,2 @@\n-    public void start() {\n-        try {\n-            final Robot robot = new Robot();\n-\n-            Thread.sleep(FRAME_ACTIVATION_TIMEOUT);\n+    public void start() throws Exception {\n+        Robot robot = new Robot();\n@@ -183,1 +180,1 @@\n-            final Point srcPoint = getCenterLocationOnScreen(canvas2);\n+        robot.delay(FRAME_ACTIVATION_TIMEOUT);\n@@ -185,4 +182,1 @@\n-            if (!pointInComponent(robot, srcPoint, canvas2)) {\n-                System.err.println(\"WARNING: Couldn't locate \" + canvas2);\n-                return;\n-            }\n+        final Point srcPoint = getCenterLocationOnScreen(canvas2);\n@@ -190,6 +184,4 @@\n-            final Point dstPoint1 = getCenterLocationOnScreen(canvas1);\n-\n-            if (!pointInComponent(robot, dstPoint1, canvas1)) {\n-                System.err.println(\"WARNING: Couldn't locate \" + canvas1);\n-                return;\n-            }\n+        if (!pointInComponent(robot, srcPoint, canvas2)) {\n+            System.err.println(\"WARNING: Couldn't locate \" + canvas2);\n+            return;\n+        }\n@@ -197,5 +189,1 @@\n-            final Point dstPoint2 = getCenterLocationOnScreen(canvas3);\n-            if (!pointInComponent(robot, dstPoint2, canvas3)) {\n-                System.err.println(\"WARNING: Couldn't locate \" + canvas3);\n-                return;\n-            }\n+        final Point dstPoint1 = getCenterLocationOnScreen(canvas1);\n@@ -203,3 +191,4 @@\n-            test(robot, srcPoint, dstPoint1, false);\n-            test(robot, srcPoint, dstPoint2, true);\n-            test(robot, srcPoint, dstPoint1, false);\n+        if (!pointInComponent(robot, dstPoint1, canvas1)) {\n+            System.err.println(\"WARNING: Couldn't locate \" + canvas1);\n+            return;\n+        }\n@@ -207,3 +196,4 @@\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"The test failed.\");\n+        final Point dstPoint2 = getCenterLocationOnScreen(canvas3);\n+        if (!pointInComponent(robot, dstPoint2, canvas3)) {\n+            System.err.println(\"WARNING: Couldn't locate \" + canvas3);\n+            return;\n@@ -211,0 +201,5 @@\n+\n+        robot.waitForIdle();\n+        test(robot, srcPoint, dstPoint1, false);\n+        test(robot, srcPoint, dstPoint2, true);\n+        test(robot, srcPoint, dstPoint1, false);\n@@ -233,1 +228,1 @@\n-            Thread.sleep(50);\n+            robot.delay(50);\n","filename":"test\/jdk\/java\/awt\/dnd\/IntraJVMGetDropSuccessTest.java","additions":23,"deletions":28,"binary":false,"changes":51,"status":"modified"}]}