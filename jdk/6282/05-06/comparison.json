{"files":[{"patch":"@@ -642,15 +642,0 @@\n-static jboolean isJNUEncodingSupported = JNI_FALSE;\n-static jboolean jnuEncodingSupported(JNIEnv *env) {\n-    jboolean exe;\n-    if (isJNUEncodingSupported == JNI_TRUE) {\n-        return JNI_TRUE;\n-    }\n-    isJNUEncodingSupported = (jboolean) JNU_CallStaticMethodByName (\n-                                    env, &exe,\n-                                    \"java\/nio\/charset\/Charset\",\n-                                    \"isSupported\",\n-                                    \"(Ljava\/lang\/String;)Z\",\n-                                    jnuEncoding).z;\n-    return isJNUEncodingSupported;\n-}\n-\n@@ -674,12 +659,2 @@\n-        if (jnuEncodingSupported(env)) {\n-            result = (*env)->NewObject(env, strClazz,\n-                                       String_init_ID, bytes, jnuEncoding);\n-        } else {\n-            \/*If the encoding specified in sun.jnu.encoding is not endorsed\n-              by \"Charset.isSupported\" we have to fall back to use UTF-8\n-             *\/\n-            jstring utf8 = (*env)->NewStringUTF(env, \"UTF-8\");\n-            result = (*env)->NewObject(env, strClazz,\n-                                       String_init_ID, bytes, utf8);\n-            (*env)->DeleteLocalRef(env, utf8);\n-        }\n+        result = (*env)->NewObject(env, strClazz,\n+                                   String_init_ID, bytes, jnuEncoding);\n@@ -765,0 +740,1 @@\n+            jboolean exe;\n@@ -771,0 +747,17 @@\n+\n+            \/\/ Replace jnuEncoding with UTF-8, if it is not supported\n+            if ((jboolean) JNU_CallStaticMethodByName (\n+                                            env, &exe,\n+                                            \"java\/nio\/charset\/Charset\",\n+                                            \"isSupported\",\n+                                            \"(Ljava\/lang\/String;)Z\",\n+                                            jnuEncoding).z == JNI_FALSE) {\n+                jstring utf8 = (*env)->NewStringUTF(env, \"UTF-8\");\n+                if (utf8 == NULL) {\n+                    return;\n+                }\n+                (*env)->DeleteGlobalRef(env, jnuEncoding);\n+                fastEncoding = FAST_UTF_8;\n+                jnuEncoding = (jstring)(*env)->NewGlobalRef(env, utf8);\n+                (*env)->DeleteLocalRef(env, utf8);\n+            }\n@@ -821,10 +814,12 @@\n-    if (jnuEncodingSupported(env)) {\n-        hab = (*env)->CallObjectMethod(env, jstr, String_getBytes_ID, jnuEncoding);\n-    } else {\n-        jmethodID mid;\n-        jclass strClazz = JNU_ClassString(env);\n-        CHECK_NULL_RETURN(strClazz, 0);\n-        mid = (*env)->GetMethodID(env, strClazz,\n-                                       \"getBytes\", \"()[B\");\n-        if (mid != NULL) {\n-            hab = (*env)->CallObjectMethod(env, jstr, mid);\n+    hab = (*env)->CallObjectMethod(env, jstr, String_getBytes_ID, jnuEncoding);\n+    if (hab != 0) {\n+        if (!(*env)->ExceptionCheck(env)) {\n+            jint len = (*env)->GetArrayLength(env, hab);\n+            result = MALLOC_MIN4(len);\n+            if (result == 0) {\n+                JNU_ThrowOutOfMemoryError(env, 0);\n+                (*env)->DeleteLocalRef(env, hab);\n+                return 0;\n+            }\n+            (*env)->GetByteArrayRegion(env, hab, 0, len, (jbyte *)result);\n+            result[len] = 0; \/* NULL-terminate *\/\n@@ -832,1 +827,0 @@\n-    }\n@@ -834,10 +828,1 @@\n-    if (!(*env)->ExceptionCheck(env)) {\n-        jint len = (*env)->GetArrayLength(env, hab);\n-        result = MALLOC_MIN4(len);\n-        if (result == 0) {\n-            JNU_ThrowOutOfMemoryError(env, 0);\n-            (*env)->DeleteLocalRef(env, hab);\n-            return 0;\n-        }\n-        (*env)->GetByteArrayRegion(env, hab, 0, len, (jbyte *)result);\n-        result[len] = 0; \/* NULL-terminate *\/\n+        (*env)->DeleteLocalRef(env, hab);\n@@ -845,2 +830,0 @@\n-\n-    (*env)->DeleteLocalRef(env, hab);\n","filename":"src\/java.base\/share\/native\/libjava\/jni_util.c","additions":33,"deletions":50,"binary":false,"changes":83,"status":"modified"}]}