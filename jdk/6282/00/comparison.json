{"files":[{"patch":"@@ -36,1 +36,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -48,1 +47,0 @@\n-import java.nio.charset.CharacterCodingException;\n@@ -51,0 +49,1 @@\n+import java.nio.charset.CharacterCodingException;\n@@ -87,0 +86,1 @@\n+import sun.nio.cs.UTF_8;\n@@ -2020,4 +2020,3 @@\n-       if (enc != null) {\n-            try {\n-                return new PrintStream(new BufferedOutputStream(fos, 128), true, enc);\n-            } catch (UnsupportedEncodingException uee) {}\n+        if (enc != null) {\n+            return new PrintStream(new BufferedOutputStream(fos, 128), true,\n+                                   Charset.forName(enc, UTF_8.INSTANCE));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,4 @@\n-    private static final Charset jnuEncoding = Charset.forName(\n-        GetPropertyAction.privilegedGetProperty(\"sun.jnu.encoding\"));\n+    private static final Charset jnuEncoding =\n+        Charset.forName(\n+            GetPropertyAction.privilegedGetProperty(\"sun.jnu.encoding\"),\n+            sun.nio.cs.UTF_8.INSTANCE);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/Util.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -679,4 +679,1 @@\n-              by \"Charset.isSupported\" we have to fall back to use String(byte[])\n-              explicitly here without specifying the encoding name, in which the\n-              StringCoding class will pickup the iso-8859-1 as the fallback\n-              converter for us.\n+              by \"Charset.isSupported\" we have to fall back to use UTF-8\n@@ -684,5 +681,4 @@\n-            jmethodID mid = (*env)->GetMethodID(env, strClazz,\n-                                                \"<init>\", \"([B)V\");\n-            if (mid != NULL) {\n-                result = (*env)->NewObject(env, strClazz, mid, bytes);\n-            }\n+            jstring utf8 = (*env)->NewStringUTF(env, \"UTF-8\");\n+            result = (*env)->NewObject(env, strClazz,\n+                                       String_init_ID, bytes, utf8);\n+            (*env)->DeleteLocalRef(env, utf8);\n","filename":"src\/java.base\/share\/native\/libjava\/jni_util.c","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"}]}