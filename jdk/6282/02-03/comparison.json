{"files":[{"patch":"@@ -191,1 +191,1 @@\n-    \/\/ A boolean indicating `sun.jnu.encoding` is supported by the JVM or not.\n+    \/\/ `sun.jnu.encoding` if it is not supported. Otherwise null.\n@@ -194,2 +194,1 @@\n-    private static boolean jnuEncodingSupported;\n-    private static String jnuEncoding;\n+    private static String notSupportedJnuEncoding;\n@@ -2121,5 +2120,4 @@\n-        \/\/ Force the jnu encoding to UTF-8, if it is not supported\n-        jnuEncoding = props.getProperty(\"sun.jnu.encoding\");\n-        jnuEncodingSupported = jnuEncoding != null && Charset.isSupported(jnuEncoding);\n-        if (!jnuEncodingSupported) {\n-            props.setProperty(\"sun.jnu.encoding\", \"UTF-8\");\n+        \/\/ Check if sun.jnu.encoding is supporetd or not\n+        var jnuEncoding = props.getProperty(\"sun.jnu.encoding\");\n+        if (jnuEncoding == null || !Charset.isSupported(jnuEncoding)) {\n+            notSupportedJnuEncoding = jnuEncoding == null ? \"null\" : jnuEncoding;\n@@ -2262,3 +2260,3 @@\n-        \/\/ Emit a warning if `sun.jnu.encoding` is not supported\n-        if (!jnuEncodingSupported) {\n-            System.err.printf(\n+        \/\/ Emit a warning if `sun.jnu.encoding` is not supported, and replace it with UTF-8\n+        if (notSupportedJnuEncoding != null) {\n+            System.err.println(\n@@ -2266,2 +2264,3 @@\n-                            \" file system is not supported by the JVM: %s%n\",\n-                    jnuEncoding);\n+                    \" file system is not supported: \" +\n+                    notSupportedJnuEncoding);\n+                    props.setProperty(\"sun.jnu.encoding\", \"UTF-8\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"}]}