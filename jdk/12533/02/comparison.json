{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/native\/libjimage\/imageFile.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -206,2 +206,2 @@\n-\/\/ Ex. Container offset (ATTRIBUTE_OFFSET) 0x33562 would be represented as 0x22\n-\/\/ (kind = 4, length = 3), 0x03, 0x35, 0x62.\n+\/\/ Ex. Container offset (ATTRIBUTE_OFFSET) 0x33562 would be represented as 0x2A\n+\/\/ (kind = 5, length = 3), 0x03, 0x35, 0x62.\n@@ -217,4 +217,4 @@\n-\/\/  - Even though ATTRIBUTE_END is used to mark the end of the attribute stream,\n-\/\/      streams will contain zero byte values to represent lesser significant bits.\n-\/\/      Thus, detecting a zero byte is not sufficient to detect the end of an attribute\n-\/\/      stream.\n+\/\/  - Even though ATTRIBUTE_END (which might be encoded with a zero byte) is used to\n+\/\/      mark the end of the attribute stream, streams will contain zero byte values\n+\/\/      in the non-header portion of the attribute data. Thus, detecting a zero byte\n+\/\/      is not sufficient to detect the end of an attribute stream.\n","filename":"src\/java.base\/share\/native\/libjimage\/imageFile.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -249,1 +249,1 @@\n-                        \/\/ Failed to pack. Meed to grow table.\n+                        \/\/ Failed to pack. Need to grow table.\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/PerfectHashBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}