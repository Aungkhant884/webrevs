{"files":[{"patch":"@@ -484,1 +484,1 @@\n-        String refFragment =    ch.getReferencedFragment(refSignature);\n+        String refFragment =   ch.getReferencedFragment(refSignature);\n@@ -489,0 +489,5 @@\n+            if (labelContent.isEmpty()) {\n+                reportWarning.accept(\"doclet.link.see.no_label\", null);\n+                return invalidTagOutput(resources.getText(\"doclet.link.see.no_label\"),\n+                        Optional.of(refSignature));\n+            }\n@@ -494,4 +499,0 @@\n-                if (labelContent.isEmpty() && refFragment != null) {\n-                    \/\/ Use fragment as default label instead of module name if it is not null\n-                    labelContent = plainOrCode(isLinkPlain, Text.of(refFragment));\n-                }\n@@ -505,1 +506,0 @@\n-                    \/\/ Use fragment as default label instead of package name if it is not null\n@@ -507,1 +507,1 @@\n-                            Text.of(refFragment == null ? refPackage.getQualifiedName() : refFragment));\n+                            Text.of(refPackage.getQualifiedName()));\n@@ -509,1 +509,1 @@\n-                return htmlWriter.getPackageLink(refPackage, labelContent.isEmpty() ? text : labelContent, refFragment);\n+                return htmlWriter.getPackageLink(refPackage, labelContent, refFragment);\n@@ -547,3 +547,0 @@\n-            Content lc = labelContent.isEmpty()\n-                    ? plainOrCode(isLinkPlain, Text.of(refFragment))\n-                    : labelContent;\n@@ -552,1 +549,1 @@\n-                return htmlWriter.getPackageLink(utils.elementUtils.getPackageOf(refClass), lc, refFragment);\n+                return htmlWriter.getPackageLink(utils.elementUtils.getPackageOf(refClass), labelContent, refFragment);\n@@ -555,1 +552,1 @@\n-                    .label(lc)\n+                    .label(labelContent)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -106,0 +106,1 @@\n+doclet.link.see.no_label=missing reference label\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+        generateMissingLabelSource();\n@@ -82,1 +83,0 @@\n-                    <li><a href=\"..\/p2\/Class2.html#class2main\"><code>class2main<\/code><\/a><\/li>\n@@ -84,1 +84,0 @@\n-                    <li><a href=\"..\/p2\/package-summary.html#package-p2-heading\"><code>package-p2-heading<\/code><\/a><\/li>\n@@ -90,1 +89,1 @@\n-                    Plain link without label: <a href=\"..\/p1\/Class1.html#main\">main<\/a>\"\"\");\n+                    Plain link <a href=\"..\/p1\/Class1.html#main\">to Class1<\/a>.\"\"\");\n@@ -125,1 +124,0 @@\n-                    <li><a href=\"..\/..\/..\/m2\/com\/m2\/Class2.html#main-heading\"><code>main-heading<\/code><\/a><\/li>\n@@ -127,1 +125,0 @@\n-                    <li><a href=\"..\/..\/module-summary.html#module-m1-heading\"><code>module-m1-heading<\/code><\/a><\/li>\n@@ -129,1 +126,0 @@\n-                    <li><a href=\"..\/..\/..\/m2\/doc-files\/file.html#module-m2-html-file-heading\"><code>doc-files\/file.html#module-m2-html-file-heading<\/code><\/a><\/li>\n@@ -143,0 +139,35 @@\n+    @Test\n+    public void testMissingLabel(Path base) throws Exception {\n+        Path out = base.resolve(\"out\");\n+\n+        javadoc(\"-d\", out.toString(),\n+                \"-sourcepath\", src.toString(),\n+                \"--no-platform-links\",\n+                \"nolabel\");\n+\n+        checkExit(Exit.OK);\n+        checkOutput(Output.OUT, true, \"\"\"\n+                    warning: missing reference label\n+                    Link with missing label: {@link ##main}.\n+                                             ^\n+                    \"\"\",\n+            \"\"\"\n+                    src\/nolabel\/Class1.java:5: warning: missing reference label\n+                    @see ##main\n+                    ^\n+                    \"\"\");\n+        checkOutput(\"nolabel\/Class1.html\", true, \"\"\"\n+                    Link with missing label:\\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>missing reference label<\/summary>\n+                    <pre>##main<\/pre>\n+                    <\/details>\n+                    .<\/div>\n+                    \"\"\",\n+           \"\"\"\n+                    <details class=\"invalid-tag\">\n+                    <summary>missing reference label<\/summary>\n+                    <pre>##main<\/pre>\n+                    \"\"\");\n+    }\n+\n@@ -166,1 +197,0 @@\n-                    @see p2.Class2##class2main\n@@ -168,1 +198,0 @@\n-                    @see p2##package-p2-heading\n@@ -186,1 +215,1 @@\n-                    Plain link without label: {@linkplain p1.Class1##main}\n+                    Plain link {@linkplain p1.Class1##main to Class1}.\n@@ -221,1 +250,0 @@\n-                     * @see m2\/com.m2.Class2##main-heading\n@@ -223,1 +251,0 @@\n-                     * @see m1\/##module-m1-heading\n@@ -225,1 +252,0 @@\n-                     * @see m2\/##doc-files\/file.html#module-m2-html-file-heading\n@@ -271,0 +297,11 @@\n+\n+    void generateMissingLabelSource() throws Exception {\n+        new ClassBuilder(tb, \"nolabel.Class1\")\n+                .setModifiers(\"public\", \"class\")\n+                .setComments(\"\"\"\n+                    <h2 id=\"main\">Class1 Main<\/h2>\n+                    Link with missing label: {@link ##main}.\n+                    @see ##main\n+                    \"\"\")\n+                .write(src);\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSeeLinkAnchor\/TestSeeLinkAnchor.java","additions":49,"deletions":12,"binary":false,"changes":61,"status":"modified"}]}