{"files":[{"patch":"@@ -75,3 +75,3 @@\n-bool G1CardTable::is_in_young(oop obj) const {\n-  volatile CardValue* p = byte_for(obj);\n-  return *p == G1CardTable::g1_young_card_val();\n+bool G1CardTable::is_in_young(const void* p) const {\n+  volatile CardValue* card = byte_for(p);\n+  return *card == G1CardTable::g1_young_card_val();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  virtual void on_commit(uint start_idx, size_t num_regions, bool zero_filled);\n+  void on_commit(uint start_idx, size_t num_regions, bool zero_filled) override;\n@@ -120,1 +120,1 @@\n-  void initialize() {}\n+  void initialize() override {}\n@@ -123,1 +123,1 @@\n-  virtual void resize_covered_region(MemRegion new_region) { ShouldNotReachHere(); }\n+  void resize_covered_region(MemRegion new_region) override { ShouldNotReachHere(); }\n@@ -125,1 +125,1 @@\n-  virtual bool is_in_young(oop obj) const;\n+  bool is_in_young(const void* p) const override;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-  bool is_in_young(const oop p) const;\n+  bool is_in_young(const void* p) const;\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-inline bool ParallelScavengeHeap::is_in_young(const oop p) const {\n+inline bool ParallelScavengeHeap::is_in_young(const void* p) const {\n@@ -48,1 +48,1 @@\n-  bool result = cast_from_oop<HeapWord*>(p) >= young_gen()->reserved().start();\n+  bool result = p >= young_gen()->reserved().start();\n@@ -50,1 +50,1 @@\n-         \"incorrect test - result=%d, p=\" PTR_FORMAT, result, p2i((void*)p));\n+         \"incorrect test - result=%d, p=\" PTR_FORMAT, result, p2i(p));\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -403,2 +403,2 @@\n-bool PSCardTable::is_in_young(oop obj) const {\n-  return ParallelScavengeHeap::heap()->is_in_young(obj);\n+bool PSCardTable::is_in_young(const void* p) const {\n+  return ParallelScavengeHeap::heap()->is_in_young(p);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-  bool is_in_young(oop obj) const;\n+  bool is_in_young(const void* p) const override;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -247,1 +247,1 @@\n-  virtual bool is_in_young(oop obj) const = 0;\n+  virtual bool is_in_young(const void* p) const = 0;\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -461,2 +461,2 @@\n-bool CardTableRS::is_in_young(oop obj) const {\n-  return GenCollectedHeap::heap()->is_in_young(obj);\n+bool CardTableRS::is_in_young(const void* p) const {\n+  return GenCollectedHeap::heap()->is_in_young(p);\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableRS.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  void initialize();\n+  void initialize() override;\n@@ -79,1 +79,1 @@\n-  virtual bool is_in_young(oop obj) const;\n+  bool is_in_young(const void* p) const override;\n@@ -98,1 +98,1 @@\n-  void do_MemRegion(MemRegion mr);\n+  void do_MemRegion(MemRegion mr) override;\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableRS.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -885,2 +885,2 @@\n-bool GenCollectedHeap::is_in_young(oop p) const {\n-  bool result = cast_from_oop<HeapWord*>(p) < _old_gen->reserved().start();\n+bool GenCollectedHeap::is_in_young(const void* p) const {\n+  bool result = p < _old_gen->reserved().start();\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -199,2 +199,1 @@\n-  \/\/ Returns true if the reference is to an object in the reserved space\n-  \/\/ for the young generation.\n+  \/\/ Returns true if p points into the reserved space for the young generation.\n@@ -202,1 +201,1 @@\n-  bool is_in_young(oop p) const;\n+  bool is_in_young(const void* p) const;\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}