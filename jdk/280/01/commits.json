[{"commit":{"message":"Only insert trailing barrier when is_c1_or_interpreter_only()"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"}],"sha":"d2358620dfd87160632d55d412d6d43b83ca685f"},{"commit":{"message":"8252857: AArch64: Shenandoah C1 CAS is not sequentially consistent\n\nC1 atomic operations are supposed to be sequentially consistent by\ndefault but the variant in the Shenandoah C1 barrier set assembler only\nprovides a half-barrier when the CAS succeeds. Added a trailing full\nbarrier and load-acquire to exactly match the non-Shenandoah C1 CAS\nimplementation. This prevents any memory accesses following the CAS\noperation being observed before it.\n\nAlso adjusted the documentation for ShenandoahBarrierSetAssembler\n::cmpxchg_oop as it currently claims to be sequentially consistent by\ndefault but it's not clear what the \"default\" values of acquire and\nrelease should be, and the comment for acquire\/release implies to me\nthat setting them to true would relax the ordering guarantees but\nactually it's the opposite. I tried to simplify this and make it less\nambiguous.\n\nOne other thing I noticed when reading this: the comment\n\n   \/\/ Step 4. CAS has failed because the value most recently fetched\n   \/\/ from addr (which is now held in tmp1) ...\n\nis wrong on non-LSE systems because tmp1 is rscratch1 and that is\nclobbered by the call to __ cmpxchg() at the end of step3. Although it\ndoesn't matter because the value in tmp1 is not used after that point.\nAdjusted the comment to clarify this.\n\nTested hotspot_all_no_apps, jdk_core plus jcstress with -jvmArgs\n'-XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:TieredStopAtLevel=1'."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"}],"sha":"4768d96fd82eda6ea4d2c3111964ba3ab273101d"}]