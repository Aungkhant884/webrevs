{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    private ScheduledThreadPoolExecutor timeoutExecutor;\n+    private final ScheduledThreadPoolExecutor timeoutExecutor;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/AsynchronousChannelGroupImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    private ReadWriteLock closeLock = new ReentrantReadWriteLock();\n+    private final ReadWriteLock closeLock = new ReentrantReadWriteLock();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/AsynchronousServerSocketChannelImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        private FileKey fileKey;\n+        private final FileKey fileKey;\n@@ -69,2 +69,2 @@\n-    private static ConcurrentHashMap<FileKey, List<FileLockReference>> lockMap =\n-        new ConcurrentHashMap<FileKey, List<FileLockReference>>();\n+    private static final ConcurrentHashMap<FileKey, List<FileLockReference>> lockMap =\n+        new ConcurrentHashMap<>();\n@@ -73,1 +73,1 @@\n-    private static ReferenceQueue<FileLock> queue = new ReferenceQueue<FileLock>();\n+    private static final ReferenceQueue<FileLock> queue = new ReferenceQueue<>();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileLockTable.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    static int addressSize;\n+    static final int addressSize;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/IOVecWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,17 +31,1 @@\n-\n-class OptionKey {\n-    private int level;\n-    private int name;\n-\n-    OptionKey(int level, int name) {\n-        this.level = level;\n-        this.name = name;\n-    }\n-\n-    int level() {\n-        return level;\n-    }\n-\n-    int name() {\n-        return name;\n-    }\n+record OptionKey(int level, int name) {\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/OptionKey.java","additions":2,"deletions":18,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    private static TerminatingThreadLocal<BufferCache> bufferCache = new TerminatingThreadLocal<>() {\n+    private static final TerminatingThreadLocal<BufferCache> bufferCache = new TerminatingThreadLocal<>() {\n@@ -115,1 +115,1 @@\n-        private ByteBuffer[] buffers;\n+        private final ByteBuffer[] buffers;\n@@ -381,1 +381,1 @@\n-    private static Unsafe unsafe = Unsafe.getUnsafe();\n+    private static final Unsafe unsafe = Unsafe.getUnsafe();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/Util.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    static short SIZE_POLLFD = 8; \/\/ sizeof pollfd struct\n+    static final short SIZE_POLLFD = 8; \/\/ sizeof pollfd struct\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/PollArrayWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,0 @@\n-    private static int addressSize = unsafe.addressSize();\n@@ -51,1 +50,1 @@\n-        return (addressSize == 4) ? value32 : value64;\n+        return (unsafe.addressSize() == 4) ? value32 : value64;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WindowsAsynchronousSocketChannelImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,0 @@\n-    private static int addressSize = unsafe.addressSize();\n@@ -55,1 +54,1 @@\n-        return (addressSize == 4) ? value32 : value64;\n+        return (unsafe.addressSize() == 4) ? value32 : value64;\n@@ -59,1 +58,1 @@\n-    private final int INIT_CAP = 8;\n+    private static final int INIT_CAP = 8;\n@@ -77,1 +76,1 @@\n-    private PollArrayWrapper pollWrapper;\n+    private final PollArrayWrapper pollWrapper;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WindowsSelectorImpl.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}