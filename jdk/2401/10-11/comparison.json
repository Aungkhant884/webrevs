{"files":[{"patch":"@@ -1518,1 +1518,1 @@\n-                                                     CallNode* alloc,\n+                                                     Node* alloc,\n@@ -1532,2 +1532,4 @@\n-  if (alloc != nullptr) {\n-    assert(alloc->is_Allocate() || alloc->as_CallStaticJava()->is_boxing_method(), \"unexpected alloc\");\n+  if (!alloc->is_Allocate() && !alloc->is_VectorBox()\n+        && (!alloc->is_CallStaticJava() || !alloc->as_CallStaticJava()->is_boxing_method())) {\n+    alloc->dump();\n+    assert(false, \"unexpected call node\");\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -505,1 +505,1 @@\n-  DEBUG_ONLY(CallNode* _alloc;)\n+  DEBUG_ONLY(Node* _alloc;)\n@@ -515,1 +515,1 @@\n-                            CallNode* alloc,\n+                            Node* alloc,\n@@ -532,1 +532,1 @@\n-  CallNode* alloc() const { return _alloc; }\n+  Node* alloc() const { return _alloc; }\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -164,0 +164,1 @@\n+class VectorBoxNode;\n@@ -746,0 +747,1 @@\n+    DEFINE_CLASS_ID(VectorBox, Node, 18)\n@@ -922,0 +924,1 @@\n+  DEFINE_CLASS_QUERY(VectorBox)\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-                                               NULL,\n+                                               vec_box,\n","filename":"src\/hotspot\/share\/opto\/vector.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}