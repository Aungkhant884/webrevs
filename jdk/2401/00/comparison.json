{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -606,0 +606,45 @@\n+  if (callprojs.resproj != NULL && call->is_CallStaticJava() &&\n+      call->as_CallStaticJava()->is_boxing_method()) {\n+    GraphKit kit(call->jvms());\n+    PhaseGVN& gvn = kit.gvn();\n+\n+    Node_List delay_boxes;\n+    bool no_use = true;\n+    for (DUIterator_Fast imax, i = callprojs.resproj->fast_outs(imax); i < imax; i++) {\n+      Node* m = callprojs.resproj->fast_out(i);\n+      if (m->is_CallStaticJava() &&\n+          m->as_CallStaticJava()->uncommon_trap_request() != 0) {\n+        delay_boxes.push(m);\n+      } else {\n+        no_use = false;\n+        break;\n+      }\n+    }\n+\n+    if (no_use) {\n+      \/\/ delay box node in uncommon_trap runtime, treat box as a scalarized object\n+      while (delay_boxes.size() > 0) {\n+        ProjNode* res = callprojs.resproj->as_Proj();\n+        Node* uncommon_trap_node = delay_boxes.pop();\n+        int in_edge = uncommon_trap_node->find_edge(res);\n+        assert(in_edge > 0, \"sanity\");\n+\n+        ciInstanceKlass* klass = call->as_CallStaticJava()->method()->holder();\n+        int n_fields = klass->nof_nonstatic_fields();\n+        assert(n_fields == 1, \"sanity\");\n+\n+        uint first_ind = (uncommon_trap_node->req() - uncommon_trap_node->jvms()->scloff());\n+        Node* sobj = new SafePointScalarObjectNode(gvn.type(res)->isa_oopptr(),\n+#ifdef ASSERT\n+                                                  NULL,\n+#endif \/\/ ASSERT\n+                                                  first_ind, n_fields);\n+        sobj->init_req(0, C->root());\n+        uncommon_trap_node->add_req(call->in(res->_con));\n+        sobj = gvn.transform(sobj);\n+        uncommon_trap_node->jvms()->set_endoff(uncommon_trap_node->req());\n+        uncommon_trap_node->set_req(in_edge, sobj);\n+      }\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/callGenerator.cpp","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"}]}