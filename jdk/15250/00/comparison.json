{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import javax.swing.Timer;\n@@ -57,0 +58,4 @@\n+    private static final int DELAY_BEFORE_SESSION_CLOSE = 2000;\n+\n+    private static final Timer timerCloseSession;\n+\n@@ -83,0 +88,10 @@\n+\n+        if (IS_NATIVE_LOADED) {\n+            timerCloseSession =\n+                    new Timer(DELAY_BEFORE_SESSION_CLOSE, e -> closeSession());\n+\n+            timerCloseSession.setRepeats(false);\n+            timerCloseSession.start();\n+        } else {\n+            timerCloseSession = null;\n+        }\n@@ -108,0 +123,2 @@\n+    private static synchronized native void closeSession();\n+\n@@ -113,0 +130,2 @@\n+        timerCloseSession.restart();\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/ScreencastHelper.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -327,0 +327,4 @@\n+                    .sorted((t1, t2) -> \/\/Token with more screens preferred\n+                            t2.allowedScreensBounds.size()\n+                            - t1.allowedScreensBounds.size()\n+                    )\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/TokenStorage.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -607,0 +607,1 @@\n+        fp_g_string_set_size = dl_symbol(\"g_string_set_size\");\n@@ -3113,0 +3114,1 @@\n+    gtk->g_string_set_size = fp_g_string_set_size;\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.c","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -761,0 +761,3 @@\n+static GString *(*fp_g_string_set_size)(GString* string,\n+                                        gsize len);\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -719,0 +719,4 @@\n+    GString *(*g_string_set_size)(GString* string,\n+                                  gsize len);\n+\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk_interface.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,0 +46,3 @@\n+static volatile gboolean sessionClosed = TRUE;\n+static GString *activeSessionToken;\n+\n@@ -92,1 +95,0 @@\n-                fp_pw_thread_loop_lock(pw.loop);\n@@ -94,0 +96,1 @@\n+                fp_pw_thread_loop_lock(pw.loop);\n@@ -127,0 +130,3 @@\n+\n+    gtk->g_string_set_size(activeSessionToken, 0);\n+    sessionClosed = TRUE;\n@@ -135,0 +141,18 @@\n+    gboolean isSameToken = !token\n+            ? FALSE\n+            : strcmp(token, activeSessionToken->str) == 0;\n+\n+    if (!sessionClosed) {\n+        if (isSameToken) {\n+            DEBUG_SCREENCAST(\"Reusing active session.\\n\", NULL);\n+            return TRUE;\n+        } else {\n+            DEBUG_SCREENCAST(\n+                    \"Active session has a different token |%s| -> |%s|,\"\n+                    \" closing current session.\\n\",\n+                    activeSessionToken->str, token\n+            );\n+            doCleanup();\n+        }\n+    }\n+\n@@ -148,0 +172,2 @@\n+    gtk->g_string_printf(activeSessionToken, \"%s\", token);\n+    sessionClosed = FALSE;\n@@ -389,1 +415,11 @@\n-    data->hasFormat = FALSE;\n+    if (!sessionClosed && data->stream) {\n+        fp_pw_thread_loop_lock(pw.loop);\n+        int result = fp_pw_stream_set_active(data->stream, TRUE);\n+        fp_pw_thread_loop_unlock(pw.loop);\n+\n+        DEBUG_SCREEN_PREFIX(data->screenProps,\n+                            \"stream %p: activate result |%i|\\n\",\n+                            data->stream, result);\n+\n+        return result == 0; \/\/ 0 - success\n+    };\n@@ -391,0 +427,1 @@\n+    data->hasFormat = FALSE;\n@@ -508,13 +545,2 @@\n-    pw.loop = fp_pw_thread_loop_new(\"AWT Pipewire Thread\", NULL);\n-\n-    if (!pw.loop) {\n-        DEBUG_SCREENCAST(\"!!! Could not create a loop\\n\", NULL);\n-        doCleanup();\n-        return FALSE;\n-    }\n-\n-    pw.context = fp_pw_context_new(\n-            fp_pw_thread_loop_get_loop(pw.loop),\n-            NULL,\n-            0\n-    );\n+    if (!pw.loop && !sessionClosed) {\n+        pw.loop = fp_pw_thread_loop_new(\"AWT Pipewire Thread\", NULL);\n@@ -522,5 +548,5 @@\n-    if (!pw.context) {\n-        DEBUG_SCREENCAST(\"!!! Could not create a pipewire context\\n\", NULL);\n-        doCleanup();\n-        return FALSE;\n-    }\n+        if (!pw.loop) {\n+            DEBUG_SCREENCAST(\"!!! Could not create a loop\\n\", NULL);\n+            doCleanup();\n+            return FALSE;\n+        }\n@@ -528,5 +554,5 @@\n-    if (fp_pw_thread_loop_start(pw.loop) != 0) {\n-        DEBUG_SCREENCAST(\"!!! Could not start pipewire thread loop\\n\", NULL);\n-        doCleanup();\n-        return FALSE;\n-    }\n+        pw.context = fp_pw_context_new(\n+                fp_pw_thread_loop_get_loop(pw.loop),\n+                NULL,\n+                0\n+        );\n@@ -534,1 +560,5 @@\n-    fp_pw_thread_loop_lock(pw.loop);\n+        if (!pw.context) {\n+            DEBUG_SCREENCAST(\"!!! Could not create a pipewire context\\n\", NULL);\n+            doCleanup();\n+            return FALSE;\n+        }\n@@ -536,6 +566,5 @@\n-    pw.core = fp_pw_context_connect_fd(\n-            pw.context,\n-            pw.pwFd,\n-            NULL,\n-            0\n-    );\n+        if (fp_pw_thread_loop_start(pw.loop) != 0) {\n+            DEBUG_SCREENCAST(\"!!! Could not start pipewire thread loop\\n\", NULL);\n+            doCleanup();\n+            return FALSE;\n+        }\n@@ -543,4 +572,1 @@\n-    if (!pw.core) {\n-        DEBUG_SCREENCAST(\"!!! Could not create pipewire core\\n\", NULL);\n-        goto fail;\n-    }\n+        fp_pw_thread_loop_lock(pw.loop);\n@@ -548,1 +574,6 @@\n-    pw_core_add_listener(pw.core, &pw.coreListener, &coreEvents, NULL);\n+        pw.core = fp_pw_context_connect_fd(\n+                pw.context,\n+                pw.pwFd,\n+                NULL,\n+                0\n+        );\n@@ -550,5 +581,2 @@\n-    for (int i = 0; i < screenSpace.screenCount; ++i) {\n-        struct PwStreamData *data =\n-                (struct PwStreamData*) malloc(sizeof (struct PwStreamData));\n-        if (!data) {\n-            ERR(\"failed to allocate memory\\n\");\n+        if (!pw.core) {\n+            DEBUG_SCREENCAST(\"!!! Could not create pipewire core\\n\", NULL);\n@@ -558,1 +586,2 @@\n-        memset(data, 0, sizeof (struct PwStreamData));\n+        pw_core_add_listener(pw.core, &pw.coreListener, &coreEvents, NULL);\n+    }\n@@ -560,0 +589,1 @@\n+    for (int i = 0; i < screenSpace.screenCount; ++i) {\n@@ -561,1 +591,12 @@\n-        screen->data = data;\n+        if (!screen->data && !sessionClosed) {\n+            struct PwStreamData *data =\n+                    (struct PwStreamData*) malloc(sizeof (struct PwStreamData));\n+            if (!data) {\n+                ERR(\"failed to allocate memory\\n\");\n+                goto fail;\n+            }\n+\n+            memset(data, 0, sizeof (struct PwStreamData));\n+\n+            screen->data = data;\n+        }\n@@ -749,0 +790,2 @@\n+    activeSessionToken = gtk->g_string_new(\"\");\n+\n@@ -786,0 +829,11 @@\n+\/*\n+ * Class:     sun_awt_screencast_ScreencastHelper\n+ * Method:    closeSession\n+ * Signature: ()V\n+ *\/\n+JNIEXPORT void JNICALL\n+Java_sun_awt_screencast_ScreencastHelper_closeSession(JNIEnv *env, jclass cls) {\n+    DEBUG_SCREENCAST(\"closing screencast session\\n\\n\", NULL);\n+    doCleanup();\n+}\n+\n@@ -808,1 +862,1 @@\n-            DEBUG_SCREENCAST(\"%s:%i incorrect array length\\n\", __FUNCTION__, __LINE__);\n+            DEBUG_SCREENCAST(\"incorrect array length\\n\", NULL);\n@@ -899,1 +953,0 @@\n-            fp_pw_stream_disconnect(screenProps->data->stream);\n@@ -901,0 +954,2 @@\n+\n+            screenProps->captureDataReady = FALSE;\n@@ -903,1 +958,1 @@\n-    doCleanup();\n+\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_pipewire.c","additions":102,"deletions":47,"binary":false,"changes":149,"status":"modified"},{"patch":"@@ -780,0 +780,4 @@\n+    if (!portal) {\n+        return;\n+    }\n+\n@@ -799,3 +803,0 @@\n-    if (!portal) {\n-        return;\n-    }\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/screencast_portal.c","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}