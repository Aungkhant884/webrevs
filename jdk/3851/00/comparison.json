{"files":[{"patch":"@@ -31,1 +31,1 @@\n-import sun.lwawt.macosx.CFRetainedResource;\n+import sun.lwawt.macosx.CFLayer;\n@@ -38,1 +38,1 @@\n-public class MTLLayer extends CFRetainedResource {\n+public class MTLLayer extends CFLayer {\n@@ -51,2 +51,0 @@\n-    private SurfaceData surfaceData; \/\/ represents intermediate buffer (texture)\n-\n@@ -60,4 +58,0 @@\n-    public long getPointer() {\n-        return ptr;\n-    }\n-\n@@ -108,4 +102,0 @@\n-    public SurfaceData getSurfaceData() {\n-        return surfaceData;\n-    }\n-\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLLayer.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-import sun.lwawt.macosx.CFRetainedResource;\n+import sun.lwawt.macosx.CFLayer;\n@@ -38,1 +38,1 @@\n-public class CGLLayer extends CFRetainedResource {\n+public class CGLLayer extends CFLayer {\n@@ -48,2 +48,0 @@\n-    private SurfaceData surfaceData; \/\/ represents intermediate buffer (texture)\n-\n@@ -57,4 +55,0 @@\n-    public long getPointer() {\n-        return ptr;\n-    }\n-\n@@ -101,4 +95,0 @@\n-    public SurfaceData getSurfaceData() {\n-        return surfaceData;\n-    }\n-\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/opengl\/CGLLayer.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.lwawt.macosx;\n+\n+import sun.java2d.SurfaceData;\n+import sun.java2d.NullSurfaceData;\n+\n+\/**\n+ * Common layer class between OpenGl and Metal.\n+ *\/\n+public abstract class CFLayer extends CFRetainedResource {\n+    protected SurfaceData surfaceData; \/\/ represents intermediate buffer (texture)\n+\n+    protected CFLayer(long ptr, boolean disposeOnAppKitThread) {\n+        super(ptr, disposeOnAppKitThread);\n+    }\n+\n+    public abstract SurfaceData replaceSurfaceData();\n+\n+    @Override\n+    public void dispose() {\n+        super.dispose();\n+    }\n+\n+    public long getPointer() {\n+        return ptr;\n+    }\n+\n+    public SurfaceData getSurfaceData() {\n+        return surfaceData;\n+    }\n+}\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CFLayer.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -35,0 +35,1 @@\n+import sun.lwawt.macosx.CFLayer;\n@@ -37,1 +38,0 @@\n-import sun.lwawt.macosx.CFRetainedResource;\n@@ -49,1 +49,1 @@\n-    private CFRetainedResource windowLayer;\n+    private CFLayer windowLayer;\n@@ -74,5 +74,1 @@\n-        if (CGraphicsDevice.usingMetalPipeline()) {\n-            return ((MTLLayer)windowLayer).getPointer();\n-        } else {\n-            return ((CGLLayer)windowLayer).getPointer();\n-        }\n+        return windowLayer.getPointer();\n@@ -83,5 +79,1 @@\n-        if (CGraphicsDevice.usingMetalPipeline()) {\n-            ((MTLLayer)windowLayer).dispose();\n-        } else {\n-            ((CGLLayer)windowLayer).dispose();\n-        }\n+        windowLayer.dispose();\n@@ -118,5 +110,1 @@\n-        if ( CGraphicsDevice.usingMetalPipeline()) {\n-            return ((MTLLayer)windowLayer).getSurfaceData();\n-        } else {\n-            return ((CGLLayer)windowLayer).getSurfaceData();\n-        }\n+        return windowLayer.getSurfaceData();\n@@ -127,5 +115,1 @@\n-        if (CGraphicsDevice.usingMetalPipeline()) {\n-            return ((MTLLayer)windowLayer).replaceSurfaceData();\n-        } else {\n-            return ((CGLLayer)windowLayer).replaceSurfaceData();\n-        }\n+        return windowLayer.replaceSurfaceData();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformEmbeddedFrame.java","additions":6,"deletions":22,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import sun.lwawt.macosx.CFLayer;\n@@ -54,1 +55,1 @@\n-    private CFRetainedResource windowLayer;\n+    private CFLayer windowLayer;\n@@ -107,4 +108,1 @@\n-        surfaceData = (CGraphicsDevice.usingMetalPipeline()) ?\n-                    ((MTLLayer)windowLayer).replaceSurfaceData() :\n-                    ((CGLLayer)windowLayer).replaceSurfaceData()\n-        ;\n+        surfaceData = windowLayer.replaceSurfaceData();\n@@ -125,3 +123,1 @@\n-        return CGraphicsDevice.usingMetalPipeline() ?\n-                ((MTLLayer)windowLayer).getPointer() :\n-                ((CGLLayer)windowLayer).getPointer();\n+        return windowLayer.getPointer();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformView.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}