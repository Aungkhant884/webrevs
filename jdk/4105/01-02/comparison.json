{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,2 +116,2 @@\n-            else if (out instanceof PrintWriter printWriter)\n-                context.put(Log.errKey, printWriter);\n+            else if (out instanceof PrintWriter pout)\n+                context.put(Log.errKey, pout);\n@@ -123,2 +123,2 @@\n-                if (fileManager instanceof BaseFileManager baseFileManager) {\n-                    baseFileManager.autoClose = true;\n+                if (fileManager instanceof BaseFileManager bfm) {\n+                    bfm.autoClose = true;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/api\/JavadocTool.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -473,1 +473,1 @@\n-            if (type instanceof TypeElement typeElement) {\n+            if (type instanceof TypeElement te) {\n@@ -475,1 +475,1 @@\n-                        new HtmlLinkInfo(configuration, context, typeElement));\n+                        new HtmlLinkInfo(configuration, context, te));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1126,2 +1126,2 @@\n-                if (this instanceof ClassWriterImpl classWriterImpl) {\n-                    containing = classWriterImpl.getTypeElement();\n+                if (this instanceof ClassWriterImpl cwrtr) {\n+                    containing = cwrtr.getTypeElement();\n@@ -2132,5 +2132,5 @@\n-        if (element instanceof PackageElement packageElement) {\n-            stylesheets.addAll(getModuleStylesheets(packageElement));\n-            basePath = docPaths.forPackage(packageElement);\n-        } else if (element instanceof ModuleElement moduleElement) {\n-            basePath = DocPaths.forModule(moduleElement);\n+        if (element instanceof PackageElement pkgElem) {\n+            stylesheets.addAll(getModuleStylesheets(pkgElem));\n+            basePath = docPaths.forPackage(pkgElem);\n+        } else if (element instanceof ModuleElement modElem) {\n+            basePath = DocPaths.forModule(modElem);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,1 @@\n-        output.append(o instanceof String str ?\n-            str : o.toString());\n+        output.append(o.toString());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/LinkOutputImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-            if (elem instanceof PackageElement packageElement && configuration.docEnv.isIncluded(elem)\n+            if (elem instanceof PackageElement pkgElem && configuration.docEnv.isIncluded(elem)\n@@ -180,1 +180,1 @@\n-                convertPackage(packageElement, outputdir);\n+                convertPackage(pkgElem, outputdir);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SourceToHTMLConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-                htmlWriter instanceof ClassWriterImpl classHtmlWriter) {\n+                htmlWriter instanceof ClassWriterImpl clsHtml) {\n@@ -328,1 +328,1 @@\n-                    classHtmlWriter.getTypeElement().getQualifiedName() + \".\" +\n+                    clsHtml.getTypeElement().getQualifiedName() + \".\" +\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,2 +55,2 @@\n-        if (content instanceof ContentBuilder contentBuilder) {\n-            contents.addAll(contentBuilder.contents);\n+        if (content instanceof ContentBuilder conBldr) {\n+            contents.addAll(conBldr.contents);\n@@ -68,2 +68,2 @@\n-            if (c instanceof TextBuilder textBuilder) {\n-                tb = textBuilder;\n+            if (c instanceof TextBuilder txtBldr) {\n+                tb = txtBldr;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ContentBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -177,2 +177,2 @@\n-        if (content instanceof ContentBuilder contentBuilder) {\n-            contentBuilder.contents.forEach(this::add);\n+        if (content instanceof ContentBuilder conBldr) {\n+            conBldr.contents.forEach(this::add);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlTree.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -372,1 +372,1 @@\n-            if (t instanceof ParamTree && ((ParamTree) t).getName().getName() == component) {\n+            if (t instanceof ParamTree pt && pt.getName().getName() == component) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/CommentUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -319,2 +319,2 @@\n-                    t -> (t instanceof UnknownBlockTagTree unknownBlockTagTree)\n-                            && (unknownBlockTagTree.getTagName().equals(\"propertyDescription\")));\n+                    t -> (t instanceof UnknownBlockTagTree ukbt)\n+                            && (ukbt.getTagName().equals(\"propertyDescription\")));\n@@ -334,2 +334,2 @@\n-                t -> (t instanceof UnknownBlockTagTree unknownBlockTagTree)\n-                        && (unknownBlockTagTree.getTagName().equals(\"defaultValue\")));\n+                t -> (t instanceof UnknownBlockTagTree ukbt)\n+                        && (ukbt.getTagName().equals(\"defaultValue\")));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -282,1 +282,1 @@\n-            if (taglet instanceof SimpleTaglet && !((SimpleTaglet) taglet).enabled) {\n+            if (taglet instanceof SimpleTaglet st && !st.enabled) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,2 +77,2 @@\n-            exception = input.docTreeInfo.docTree instanceof ThrowsTree throwsTree\n-                    ? ch.getException(throwsTree) : null;\n+            exception = input.docTreeInfo.docTree instanceof ThrowsTree tt\n+                    ? ch.getException(tt) : null;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        return (other instanceof DocPath docPath) && path.equals(docPath.path);\n+        return (other instanceof DocPath dp) && path.equals(dp.path);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocPath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -399,2 +399,2 @@\n-        if (element instanceof ModuleElement moduleElement) {\n-            item = moduleItems.get(utils.getModuleName(moduleElement));\n+        if (element instanceof ModuleElement modElem) {\n+            item = moduleItems.get(utils.getModuleName(modElem));\n@@ -402,2 +402,2 @@\n-        else if (element instanceof PackageElement packageElement) {\n-            ModuleElement moduleElement = utils.containingModule(packageElement);\n+        else if (element instanceof PackageElement pkgElem) {\n+            ModuleElement moduleElement = utils.containingModule(pkgElem);\n@@ -405,1 +405,1 @@\n-            item = (pkgMap != null) ? pkgMap.get(utils.getPackageName(packageElement)) : null;\n+            item = (pkgMap != null) ? pkgMap.get(utils.getPackageName(pkgElem)) : null;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Extern.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1739,1 +1739,1 @@\n-            if (baseCollator instanceof RuleBasedCollator ruleBaseCollator) {\n+            if (baseCollator instanceof RuleBasedCollator rbc) {\n@@ -1743,1 +1743,1 @@\n-                    return new RuleBasedCollator(ruleBaseCollator.getRules()\n+                    return new RuleBasedCollator(rbc.getRules()\n@@ -2634,4 +2634,4 @@\n-            if (taglet instanceof BaseTaglet baseTaglet) {\n-                return baseTaglet.accepts(t);\n-            } else if (t instanceof UnknownBlockTagTree unknownBlockTagTree) {\n-                return unknownBlockTagTree.getTagName().equals(taglet.getName());\n+            if (taglet instanceof BaseTaglet bt) {\n+                return bt.accepts(t);\n+            } else if (t instanceof UnknownBlockTagTree ukbt) {\n+                return ukbt.getTagName().equals(taglet.getName());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -594,1 +594,1 @@\n-        if (tsi.tag != null && tsi.tree instanceof StartElementTree startElementTree) {\n+        if (tsi.tag != null && tsi.tree instanceof StartElementTree sElemTree) {\n@@ -600,2 +600,2 @@\n-                DocTree tree = (endTree != null) ? endTree : startElementTree;\n-                Name treeName = startElementTree.getName();\n+                DocTree tree = (endTree != null) ? endTree : sElemTree;\n+                Name treeName = sElemTree.getName();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,2 +161,2 @@\n-            StandardJavaFileManager fm = toolEnv.fileManager instanceof StandardJavaFileManager standardJavaFileManager\n-                    ? standardJavaFileManager\n+            StandardJavaFileManager fm = toolEnv.fileManager instanceof StandardJavaFileManager sfm\n+                    ? sfm\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/JavadocTool.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        if (!(instance instanceof Messager messenger))\n+        if (!(instance instanceof Messager msgr))\n@@ -71,1 +71,1 @@\n-        return messenger;\n+        return msgr;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/Messager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,2 +143,2 @@\n-        if (log instanceof Messager logMessager){\n-            messager = logMessager;\n+        if (log instanceof Messager mLog){\n+            messager = mLog;\n@@ -369,2 +369,2 @@\n-            if (fileManager instanceof BaseFileManager baseFileManager) {\n-                baseFileManager.autoClose = true;\n+            if (fileManager instanceof BaseFileManager bfm) {\n+                bfm.autoClose = true;\n@@ -436,2 +436,2 @@\n-            if (fileManager instanceof BaseFileManager baseFileManager\n-                    && baseFileManager.autoClose) {\n+            if (fileManager instanceof BaseFileManager bfm\n+                    && bfm.autoClose) {\n@@ -520,2 +520,2 @@\n-        if (fileManager instanceof BaseFileManager baseFileManager) {\n-            baseFileManager.handleOptions(options.fileManagerOptions());\n+        if (fileManager instanceof BaseFileManager bfm) {\n+            bfm.handleOptions(options.fileManagerOptions());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/Start.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,2 +151,2 @@\n-        if (fileManager instanceof JavacFileManager javacFileManager) {\n-            javacFileManager.setSymbolFileEnabled(false);\n+        if (fileManager instanceof JavacFileManager jfm) {\n+            jfm.setSymbolFileEnabled(false);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ToolEnvironment.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}