{"files":[{"patch":"@@ -34,1 +34,0 @@\n-import com.sun.tools.attach.VirtualMachineDescriptor;\n@@ -174,2 +173,1 @@\n-        for (int i = 0; i < subopts.length; i++) {\n-            String subopt = subopts[i];\n+        for (String subopt : subopts) {\n@@ -187,2 +185,2 @@\n-               parallel = subopt.substring(\"parallel=\".length());\n-               if (parallel == null) {\n+                parallel = subopt.substring(\"parallel=\".length());\n+                if (parallel == null) {\n@@ -191,1 +189,1 @@\n-               }\n+                }\n@@ -212,2 +210,1 @@\n-        for (int i = 0; i < subopts.length; i++) {\n-            String subopt = subopts[i];\n+        for (String subopt : subopts) {\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jmap\/JMap.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,2 +118,2 @@\n-        for (int i = 0; i < unitStrings.length; i++) {\n-            int index = s.indexOf(unitStrings[i]);\n+        for (String unit : unitStrings) {\n+            int index = s.indexOf(unit);\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/Arguments.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.util.*;\n-\n@@ -159,3 +157,2 @@\n-        for (Iterator<OptionFormat> i = children.iterator();  i.hasNext(); \/* empty *\/) {\n-            OptionFormat of = i.next();\n-            of.printFormat(indentLevel+1);\n+        for (OptionFormat of : children) {\n+            of.printFormat(indentLevel + 1);\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/ColumnFormat.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,4 +80,4 @@\n-      for (Iterator<OptionFormat> i = children.iterator(); i.hasNext(); \/* empty *\/) {\n-          OptionFormat o = i.next();\n-          c.visit(o, i.hasNext());\n-      }\n+        for (Iterator<OptionFormat> i = children.iterator(); i.hasNext(); \/* empty *\/) {\n+            OptionFormat o = i.next();\n+            c.visit(o, i.hasNext());\n+        }\n@@ -85,4 +85,3 @@\n-      for (Iterator <OptionFormat>i = children.iterator(); i.hasNext(); \/* empty *\/) {\n-          OptionFormat o = i.next();\n-          o.apply(c);\n-      }\n+        for (OptionFormat o : children) {\n+            o.apply(c);\n+        }\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/OptionFormat.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-    private static Set<String> reservedWords;\n+    private static final Set<String> reservedWords = Set.of(otherKeyWords);\n@@ -106,3 +106,2 @@\n-        reservedWords = new HashSet<String>();\n-        for (int i = 0; i < otherKeyWords.length; i++) {\n-            reservedWords.add(otherKeyWords[i]);\n+        for (char delimiter : delimiters) {\n+            st.ordinaryChar(delimiter);\n@@ -111,6 +110,2 @@\n-        for (int i = 0; i < delimiters.length; i++ ) {\n-            st.ordinaryChar(delimiters[i]);\n-        }\n-\n-        for (int i = 0; i < infixOps.length; i++ ) {\n-            st.ordinaryChar(infixOps[i]);\n+        for (char infixOp : infixOps) {\n+            st.ordinaryChar(infixOp);\n@@ -234,2 +229,2 @@\n-        for (int i = 0; i < infixOps.length; i++) {\n-            if (op == infixOps[i]) {\n+        for (char infixOp : infixOps) {\n+            if (op == infixOp) {\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/Parser.java","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,1 @@\n-            for (Iterator<Monitor> i = logged.iterator(); i.hasNext(); \/* empty *\/ ) {\n-                Monitor m = i.next();\n+            for (Monitor m : logged) {\n@@ -63,2 +62,1 @@\n-        for (Iterator<Monitor> i = logged.iterator(); i.hasNext(); \/* empty *\/ ) {\n-            Monitor m = i.next();\n+        for (Monitor m : logged) {\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/RawOutputFormatter.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}