{"files":[{"patch":"@@ -2459,1 +2459,1 @@\n-static inline void *prefetch_and_load_ptr(void **addr, intx prefetch_interval) {\n+static inline JavaThread *prefetch_and_load_ptr(JavaThread*const * addr, intx prefetch_interval) {\n@@ -2464,13 +2464,21 @@\n-\/\/ Possibly the ugliest for loop the world has seen. C++ does not allow\n-\/\/ multiple types in the declaration section of the for loop. In this case\n-\/\/ we are only dealing with pointers and hence can cast them. It looks ugly\n-\/\/ but macros are ugly and therefore it's fine to make things absurdly ugly.\n-#define DO_JAVA_THREADS(LIST, X)                                                                                          \\\n-    for (JavaThread *MACRO_scan_interval = (JavaThread*)(uintptr_t)PrefetchScanIntervalInBytes,                           \\\n-             *MACRO_list = (JavaThread*)(LIST),                                                                           \\\n-             **MACRO_end = ((JavaThread**)((ThreadsList*)MACRO_list)->threads()) + ((ThreadsList*)MACRO_list)->length(),  \\\n-             **MACRO_current_p = (JavaThread**)((ThreadsList*)MACRO_list)->threads(),                                     \\\n-             *X = (JavaThread*)prefetch_and_load_ptr((void**)MACRO_current_p, (intx)MACRO_scan_interval);                 \\\n-         MACRO_current_p != MACRO_end;                                                                                    \\\n-         MACRO_current_p++,                                                                                               \\\n-             X = (JavaThread*)prefetch_and_load_ptr((void**)MACRO_current_p, (intx)MACRO_scan_interval))\n+struct JavaThreadPrefetchedIterator {\n+    ThreadsList* _list;\n+    JavaThread*const * _end;\n+    JavaThread*const * _current;\n+\n+    JavaThreadPrefetchedIterator(ThreadsList* list) :\n+      _list(list), _end(list->threads() + list->length()), _current(list->threads()) {}\n+\n+    JavaThread* current() {\n+      return _current != _end\n+        ? prefetch_and_load_ptr(_current, PrefetchScanIntervalInBytes)\n+        : NULL;\n+    }\n+\n+    void next() {\n+      _current++;\n+    }\n+  };\n+\n+#define DO_JAVA_THREADS(LIST, X) \\\n+  for (JavaThreadPrefetchedIterator iter(LIST); JavaThread* X = iter.current(); iter.next())\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":22,"deletions":14,"binary":false,"changes":36,"status":"modified"}]}