{"files":[{"patch":"@@ -135,2 +135,0 @@\n-  # nio tests' libCreationTimeHelper native needs -ldl linker flag\n-  BUILD_JDK_JTREG_LIBRARIES_LDFLAGS_libCreationTimeHelper := -ldl\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -278,5 +278,1 @@\n-                         unsigned int mask, struct my_statx *restrict statxbuf,\n-                         int follow_symlink) {\n-    if (follow_symlink == NO_FOLLOW_SYMLINK) {\n-      flags |= AT_SYMLINK_NOFOLLOW;\n-    }\n+                         unsigned int mask, struct my_statx *restrict statxbuf) {\n@@ -683,1 +679,1 @@\n-        RESTARTABLE(statx_wrapper(AT_FDCWD, path, flags, mask, &statx_buf, FOLLOW_SYMLINK), err);\n+        RESTARTABLE(statx_wrapper(AT_FDCWD, path, flags, mask, &statx_buf), err);\n@@ -710,1 +706,1 @@\n-    int flags = AT_STATX_SYNC_AS_STAT;\n+    int flags = AT_STATX_SYNC_AS_STAT | AT_SYMLINK_NOFOLLOW;\n@@ -715,1 +711,1 @@\n-        RESTARTABLE(statx_wrapper(AT_FDCWD, path, flags, mask, &statx_buf, NO_FOLLOW_SYMLINK), err);\n+        RESTARTABLE(statx_wrapper(AT_FDCWD, path, flags, mask, &statx_buf), err);\n@@ -747,1 +743,1 @@\n-        RESTARTABLE(statx_wrapper((int)fd, \"\", flags, mask, &statx_buf, FOLLOW_SYMLINK), err);\n+        RESTARTABLE(statx_wrapper((int)fd, \"\", flags, mask, &statx_buf), err);\n@@ -776,1 +772,0 @@\n-    int f_symlink = FOLLOW_SYMLINK;\n@@ -781,1 +776,1 @@\n-            f_symlink = NO_FOLLOW_SYMLINK;\n+            flags |= AT_SYMLINK_NOFOLLOW;\n@@ -783,1 +778,1 @@\n-        RESTARTABLE(statx_wrapper((int)dfd, path, flags, mask, &statx_buf, f_symlink), err);\n+        RESTARTABLE(statx_wrapper((int)dfd, path, flags, mask, &statx_buf), err);\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @enablePreview\n@@ -33,0 +34,1 @@\n+import java.lang.foreign.Linker;\n@@ -93,1 +95,1 @@\n-            supportsCreationTimeRead = CreationTimeHelper.linuxIsCreationTimeSupported();\n+            supportsCreationTimeRead = Linker.nativeLinker().defaultLookup().find(\"statx\").isPresent();\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/CreationTime.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Red Hat, Inc.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-public class CreationTimeHelper {\n-\n-    static {\n-        System.loadLibrary(\"CreationTimeHelper\");\n-    }\n-\n-    \/\/ Helper so as to determine 'statx' support on the runtime system\n-    static native boolean linuxIsCreationTimeSupported();\n-}\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/CreationTimeHelper.java","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Red Hat, Inc.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-#include \"jni.h\"\n-#if defined(__linux__)\n-#include <dlfcn.h>\n-#endif\n-\n-\/\/ static native boolean linuxIsCreationTimeSupported()\n-JNIEXPORT jboolean JNICALL\n-Java_CreationTimeHelper_linuxIsCreationTimeSupported(JNIEnv *env, jclass cls)\n-{\n-#if defined(__linux__)\n-    void* statx_func = dlsym(RTLD_DEFAULT, \"statx\");\n-    return statx_func != NULL ? JNI_TRUE : JNI_FALSE;\n-#else\n-    return JNI_FALSE;\n-#endif\n-}\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/BasicFileAttributeView\/libCreationTimeHelper.c","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"}]}