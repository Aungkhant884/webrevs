{"files":[{"patch":"@@ -817,1 +817,1 @@\n-void Type::check_symmetrical(const Type *t, const Type *mt) const {\n+void Type::check_symmetrical(const Type* t, const Type* mt) const {\n@@ -819,1 +819,9 @@\n-  assert(mt == t->xmeet(this), \"meet not commutative\");\n+  const Type* mt2 = t->xmeet(this);\n+  if (mt != mt2) {\n+    tty->print_cr(\"=== Meet Not Commutative ===\");\n+    tty->print(\"t           = \");   t->dump(); tty->cr();\n+    tty->print(\"this        = \");      dump(); tty->cr();\n+    tty->print(\"t meet this = \"); mt2->dump(); tty->cr();\n+    tty->print(\"this meet t = \");  mt->dump(); tty->cr();\n+    fatal(\"meet not commutative\");\n+  }\n@@ -821,2 +829,2 @@\n-  const Type *t2t    = dual_join->xmeet(t->_dual);\n-  const Type *t2this = dual_join->xmeet(this->_dual);\n+  const Type* t2t    = dual_join->xmeet(t->_dual);\n+  const Type* t2this = dual_join->xmeet(this->_dual);\n@@ -828,1 +836,1 @@\n-  if( !interface_vs_oop(t) && (t2t != t->_dual || t2this != this->_dual) ) {\n+  if (!interface_vs_oop(t) && (t2t != t->_dual || t2this != this->_dual)) {\n@@ -841,1 +849,1 @@\n-    fatal(\"meet not symmetric\" );\n+    fatal(\"meet not symmetric\");\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"}]}