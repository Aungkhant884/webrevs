[{"commit":{"message":"Merge branch 'JEP-19-ASM' of https:\/\/github.com\/JornVernee\/jdk into JEP-19-ASM"},"files":[],"sha":"ce5c677a1ba91857459b05b7476c4b109719b4ba"},{"commit":{"message":"Merge branch 'pr\/7959' into JEP-19-ASM"},"files":[],"sha":"58c0dbe28cfad2444df8a0362eac8869474af770"},{"commit":{"message":"Merge branch 'master' into JEP-19-VM-IMPL2"},"files":[],"sha":"c3c1421bf4aafb496a6fdd25e2f5b013b06b4526"},{"commit":{"message":"ifdef NOT_PRODUCT -> ifndef PRODUCT"},"files":[],"sha":"c3abb7321e26b04667aa86bcaa19a7f0717c73fb"},{"commit":{"message":"Missing ASSERT -> NOT_PRODUCT"},"files":[],"sha":"406f3e832219d0cf1754c87a631cc82e6b0aecd6"},{"commit":{"message":"Cleanup UL usage"},"files":[],"sha":"d611f365ade15cd7a7d005547814ce88fff0ca1a"},{"commit":{"message":"Fix failure with SPEC disabled (accidentally dropped change)"},"files":[],"sha":"ff8835ee99203e94fb216c5bd7cf1ce610d5737f"},{"commit":{"message":"indentation"},"files":[],"sha":"2ea5bc946d8914a103aac729a6c94126b00a1bf9"},{"commit":{"message":"fix space"},"files":[],"sha":"e0fd8f03c9eb5dfed72a97d66726ce7c9a72844b"},{"commit":{"message":"Merge branch 'master' into JEP-19-ASM"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"e81c2daf5b586192a2d67b502331b635494e3440"},{"commit":{"message":"WIP - comments"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SoftReferenceCache.java"}],"sha":"6d1bbf8fca744454af8a3e0ef302f6a3a6c437d3"},{"commit":{"message":"BootstrapMethodError -> ExceptionInInitializerError"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"}],"sha":"cd3daab589a8b94cec6d7595897dd9c8592fdd3b"},{"commit":{"message":"Use unaligned layout constants when filling in reconstituted structs (was accidentally dropped change)"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"}],"sha":"80640bac0e7b56381aa16f0161e8ae71a9a9b438"},{"commit":{"message":"Fix LinkUpcall benchmark"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"}],"sha":"6e038edf62568c291c65a71653fac9389b8bacb8"},{"commit":{"message":"8286306: Upcall wrapper class sharing\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/LinkUpcall.java"}],"sha":"d1c75ae0842eef98580c6f19a3799e856c70800c"},{"commit":{"message":"Polish"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"70c4201a73a0d31ef37d315bfd34ea1e034e2031"},{"commit":{"message":"8281595: ASM-ify scope acquire\/release for down call parameters\n8281387: Some downcall shapes show unexpected allocations\n\nCo-authored-by: Maurizio Cimadamore <mcimadamore@openjdk.org>\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"679e1659ec9b3e8ca058dc28cdff5f8f225defea"},{"commit":{"message":"8281228: Preview branch's CLinker.downcallHandle crashes inside asm\n\nReviewed-by: sundar, jvernee"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"}],"sha":"1cfff2f4fbf59872e514c1bb7935531b33a2c43d"},{"commit":{"message":"8278414: Replace binding recipe customization using MH combinators with bytecode spinning\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BindingSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/CallArrangerTestBase.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"115a4901a0c4da2a6deae89fdab48cc5f76e526b"},{"commit":{"message":"8276648: Downcall stubs are never freed\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SoftReferenceCache.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"}],"sha":"0aff004c8acad72ca9e321adbc5d5f56c1287348"},{"commit":{"message":"Merge branch 'master' into JEP-19-VM-IMPL2"},"files":[],"sha":"f55b6c59732d7aaba297b74a954e3b3cce865063"},{"commit":{"message":"Undo spurious changes."},"files":[],"sha":"f961121a3f48b2c747a02620465a762938342255"},{"commit":{"message":"Merge branch 'JEP-19-VM-IMPL2' of https:\/\/github.com\/JornVernee\/jdk into JEP-19-VM-IMPL2"},"files":[],"sha":"aab2d15c1720ce08d52515ec822f3acd26629caa"},{"commit":{"message":"Apply copyright year updates per request of @nick-arm\n\nCo-authored-by: Nick Gasson <nick.gasson@arm.com>"},"files":[],"sha":"0f49ff0b5ea6c35a106077ecf4ce86921409fb5a"},{"commit":{"message":"Fix overwritten copyright years."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"b113aaa383aff7f41f20a8b3aee144d5507341ab"},{"commit":{"message":"Missed 2 years"},"files":[],"sha":"8100e0a723cf3f421354f170a1dc57cd1393667a"},{"commit":{"message":"Update Oracle copyright years"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"9a7bb6bb1e34d6d72b2fc786432efcdf5245d967"},{"commit":{"message":"Revert \"Block async exceptions during upcalls\"\n\nThis reverts commit b29ad8f46732666f2d07e63ce8701b1eb7bed790."},"files":[],"sha":"1c04a42eaa491fc777d761318e0b080772a17fb4"},{"commit":{"message":"Block async exceptions during upcalls"},"files":[],"sha":"b29ad8f46732666f2d07e63ce8701b1eb7bed790"},{"commit":{"message":"Merge branch 'foreign-preview-m' into JEP-19-VM-IMPL2"},"files":[],"sha":"08f35e334947d0d290b76ab55fe228b4cd0b1d92"},{"commit":{"message":"Merge branch 'master' into foreign-preview"},"files":[],"sha":"cdd006e7675f9f86a589775fb67d5e4a05c13003"},{"commit":{"message":"Fix crashes in heap segment benchmarks due to misaligned access"},"files":[],"sha":"7b774297b1d04e104a988ea5bd2f2b04c8de3461"},{"commit":{"message":"Fix use of rt_call"},"files":[],"sha":"c6754a1c3dbe73eaaecdfe168645360e30b8e45d"},{"commit":{"message":"Migrate to GrowableArray"},"files":[],"sha":"abd2b6ca9a8c14807c7d6f0cb63d0c95ff8d3ddc"},{"commit":{"message":"Address some review comments"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"7854fb69baad33f2c2abb26c3a158f03ae068fab"},{"commit":{"message":"Merge branch 'foreign-preview-m' into JEP-19-VM-IMPL2"},"files":[{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"}],"sha":"43fd1b91daddf4d9610dbb08b5f365cbfac92d66"},{"commit":{"message":"Merge branch 'master' into foreign-preview"},"files":[{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"}],"sha":"3c88a2ef8705ad37370529f42cde19d22da466cf"},{"commit":{"message":"Remove unneeded ComputeMoveOrder"},"files":[],"sha":"e84e33793004827f9873f5f1a3339d37fca0fb9a"},{"commit":{"message":"Remove comment about native calls in lcm.cpp"},"files":[],"sha":"253a5057184f2858711e5ab83b354068b6cd0ad3"},{"commit":{"message":"8284072: foreign\/StdLibTest.java randomly crashes on MacOS\/AArch64\n\nReviewed-by: jvernee, mcimadamore"},"files":[],"sha":"8c9a5e390fd516def1bf150b5542b9ae4f895ddb"},{"commit":{"message":"Update riscv and arm stubs"},"files":[],"sha":"cb2fa54f2285b1a5bcaf53bafbef6b414d454ca8"},{"commit":{"message":"Remove spurious ProblemList change"},"files":[],"sha":"0445349fdf5ecf62d09110c502a2f809edf5f44c"},{"commit":{"message":"Pass pointer to LogStream"},"files":[],"sha":"7ba6061bd8ca71fd23877cc7046ad7ed76ec0248"},{"commit":{"message":"Polish"},"files":[],"sha":"602ffc0addb2fbedcdd02e1681e0ac706a6d2b25"},{"commit":{"message":"Replace TraceNativeInvokers flag with unified logging"},"files":[],"sha":"bb456040892c74acedcbb129f6c618fa189f2565"},{"commit":{"message":"Fix other platforms, take 2"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"}],"sha":"eae09686732fc3447f70bcbb177d3d598a81abc3"},{"commit":{"message":"Fix other platforms"},"files":[],"sha":"1217d51abb73402aeb35806d025db22fafb8fda1"},{"commit":{"message":"8277601: OptimizedEntryBlob should implement preserve_callee_argument_oops\n\nReviewed-by: mcimadamore"},"files":[],"sha":"5c1246e1281687e19bc20b2b894b8ac748d80b49"},{"commit":{"message":"8280721: Rewrite binding of foreign classes to use javaClasses.h\/cpp\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/NativeEntryPoint.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"}],"sha":"f749da31078d975dfd2233903faef7a9bcf07274"},{"commit":{"message":"8277657: OptimizedEntryBlob should extend RuntimeBlob directly\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"}],"sha":"3541a19c04e21e6cd1fdcc09afcefb9899f40c4e"},{"commit":{"message":"8276647: Remove C2 trivial call intrinsification support\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"}],"sha":"b5b2c95b9473f460711ffadf2ce5b87049769341"},{"commit":{"message":"8275647: Enable multi-register return values for optimized upcall stubs\n\nReviewed-by: mcimadamore, ngasson"},"files":[{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"}],"sha":"0d98a90e0d93090e89f7b1384783955b3c136320"},{"commit":{"message":"8276987: Optimized upcall stub should be printed with -XX:+PrintStubCode\n\nReviewed-by: jvernee"},"files":[],"sha":"9d9332fd1a7279100890e0d41bda400eea992f20"},{"commit":{"message":"8275646: Implement optimized upcall stubs on AArch64\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"}],"sha":"309998e87465dbb204cf3a73c4afcb6835daeb37"},{"commit":{"message":"8255903: Enable multi-register return values for native invokers\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"a6c1bf370bfaff0c8708759d618876bf07eccbb6"},{"commit":{"message":"8255902: Enable stack arguments for native invokers & optimized upcall stubs\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"}],"sha":"9900ad04e7ef69bdc0e82b48bce1e33e2bd766a8"},{"commit":{"message":"8274912: Eagerly generate native invokers\n\nReviewed-by: ngasson, mcimadamore\n\n8275382: foreign-memaccess+abi branch fails to build with error Undefined symbol: “typeArrayOopDesc::long_at(int) const”\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"}],"sha":"f6c7bab3e251707782e4f6524073dc66a11721da"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/reflect\/Reflection.java\n\nCo-authored-by: ExE Boss <3889017+ExE-Boss@users.noreply.github.com>"},"files":[],"sha":"f823bf84e21758cf9e19b47c6d75f6a59ad43604"},{"commit":{"message":"Add tests for loaderLookup\/restricted method corner cases"},"files":[],"sha":"b71c4e932245dc5023e3c295bf333f755f49c416"},{"commit":{"message":"* Clarify what happens when SymbolLookup::loaderLookup is invoked from JNI\n* Tweak restricted method check to work when there's no caller class"},"files":[],"sha":"4d24ffa906ddf79a45cf359e38b242f756a7bd01"},{"commit":{"message":"Tweak examples in SymbolLookup javadoc"},"files":[],"sha":"853f06b82f0258ee9fc5eb311b7d79762d3839de"},{"commit":{"message":"Merge branch 'master' into foreign-preview"},"files":[],"sha":"41d055abae5739d13edfd5bd6c4a6bd810cfa180"},{"commit":{"message":"Update src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template\n\nCo-authored-by: ExE Boss <3889017+ExE-Boss@users.noreply.github.com>"},"files":[],"sha":"dc309e8bf76e691c86a333c2ce58a0055d57fbe0"},{"commit":{"message":"Tweak support for Linker lookup\nImprove javadoc of SymbolLookup"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"}],"sha":"6fdb96e5875ba15e86bcfd298593c4e063b83de7"},{"commit":{"message":"Tweak Addressable javadoc"},"files":[],"sha":"d1fcf012a449315d4ed582eec31ba6087f93ed42"},{"commit":{"message":"Downcall and upcall tests use wrong layout which is missing some trailing padding"},"files":[],"sha":"945317ec5904ded7fd21fd5b953e2f4a422a702e"},{"commit":{"message":"Simplify libraryLookup impl"},"files":[],"sha":"5866bbb59c2c18382720e1c40fcc01023d30ced4"},{"commit":{"message":"Address CSR comments"},"files":[],"sha":"6990183f2547863b70aad7a6b7f41150a7160974"},{"commit":{"message":"Merge branch 'master' into foreign-preview"},"files":[],"sha":"746de5ceda598d1035d15c2be2afb766b6a1b1fa"},{"commit":{"message":"Add ValueLayout changes"},"files":[],"sha":"2e3d57a821720d265aab4acfd7e886bd72e92c0f"},{"commit":{"message":"Tweak support for array element var handle"},"files":[],"sha":"857d0466af04d239124e2fb02c0a332e36436da8"},{"commit":{"message":"Add @see"},"files":[],"sha":"1dc1e69528016ff163a2a8413f4bd3c71765e8ad"},{"commit":{"message":"Initial push"},"files":[],"sha":"e01fcfef4e8c2cbaf36024631f102006890d1524"},{"commit":{"message":"Remove whitespaces"},"files":[],"sha":"8637379efc82ec9027c94ebf1444ea69c4f3b5fc"},{"commit":{"message":"Drop `UnsupportedOperationException` from throws clause in FileChannel\/FileChannelImpl"},"files":[],"sha":"3a87df5ef812552996268c3015d3d2d59e22cab0"},{"commit":{"message":"Add @ForceInline annotation on session accessor\nBeef up UnrolledAccess benchmark"},"files":[],"sha":"66cebe77b38eaa989090ad3b09b33f675bd7f5b3"},{"commit":{"message":"Use a less expensive array element alignment check\nThe bit to byte conversion shows up in hot paths"},"files":[],"sha":"a68195aede70023b178b8c5b25c81ab60957a3ac"},{"commit":{"message":"Fix UnrolledAccess benchmark"},"files":[],"sha":"c9afcd1725ba8666d9335e8e6b16c15064be4457"},{"commit":{"message":"Fix TestLinkToNativeRBP"},"files":[],"sha":"d84de5108865cf283344fe9f8703036084688d24"},{"commit":{"message":"Added UnsupportedOperationException on other functionalities (e.g. `VaList::make` which might throw if the platform is not supported"},"files":[],"sha":"d21e792f29c559fe10b5cbb808ff4fe2aaab62bc"},{"commit":{"message":"Address review comment"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"}],"sha":"5b0aeb8da8a92e6a8af740dfcf293e881791bbe1"},{"commit":{"message":"Forgot to add `CLinker` file"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java"}],"sha":"0d03a0b82b3828cd3d4cf8246e8713fe539fee75"},{"commit":{"message":"* Rename `CLinker` to `Linker`\n* Rename `CLinker::systemCLinker` to `CLinker::nativeLinker`\n* Move system linker factory back as an instance method in `Linker`\n* Improve javadoc of `Linker`\n* Check all usages of `native` in javadoc (and replace some of them)"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"}],"sha":"c1a7a6b4b94534b79fb1beb48467c5469c58eaff"},{"commit":{"message":"Tweak qualified reference to wrapOverflow"},"files":[],"sha":"f10791b1bb92134771230ffafcd45c31107128f0"},{"commit":{"message":"Remove bogus line in javadoc of `MemoryLayout::structLayout`"},"files":[],"sha":"e17b6b5f7656f93009bdf4461400c37aee8d4d3c"},{"commit":{"message":"* Cleanup `@throws` specification for get\/setUtf8String\n* Add missing `@throws` for `MemoryLayout.structLayout`\/`MemoryLayout.sequenceLayout`"},"files":[],"sha":"aeafdbe990c586d66260e15c27d7b913319c7624"},{"commit":{"message":"Make sure that layouts cannot overflow size"},"files":[],"sha":"376af6258d5cfbd9475f896f71bc93402d8f9ea1"},{"commit":{"message":"Merge branch 'master' into foreign-preview"},"files":[],"sha":"247e5eb590f14df12181eaf876d6453d748bfecd"},{"commit":{"message":"Tweak FunctionDescriptor::argumentLayouts to return an immutable list"},"files":[],"sha":"af41a76c8af9dbf85f39fcd3716b8e9f77bfb85a"},{"commit":{"message":"Fix bad usage of `@link` with primitive array types"},"files":[],"sha":"0bcc8664aae327b55e1518f278838fa92cb5fcc4"},{"commit":{"message":"Switch to daemon threads for async upcalls"},"files":[],"sha":"43dc6be31711b97a7df9f27d5f74c91777c22ee5"},{"commit":{"message":"Use thread local storage to optimize attach of async threads"},"files":[{"filename":"src\/hotspot\/share\/code\/codeBlob.hpp"}],"sha":"55aee872e000cb7b0957cf2c44b925c3830d6a98"},{"commit":{"message":"Drop support for Constable from MemoryLayout\/FunctionDescriptor"},"files":[],"sha":"e557f6cccda5cf90f471de1d11082af187ea7102"},{"commit":{"message":"Merge branch 'master' into foreign-preview"},"files":[],"sha":"b86c658da63baaddac426dbf4239d0984ef5c927"},{"commit":{"message":"Revert changes to RunTests.gmk"},"files":[],"sha":"504b564abe5778acc23f2a3cb9952fefc1c5f2df"},{"commit":{"message":"Add --enable-preview to micro benchmark java options"},"files":[],"sha":"6e7189b420eb33f8c6d4ef161b55cac58c7499a7"},{"commit":{"message":"Address more review comments"},"files":[],"sha":"d95c6d0f87d8604f279b1ed2090cf03490694e32"},{"commit":{"message":"Update src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java\n\nCo-authored-by: Jorn Vernee <JornVernee@users.noreply.github.com>"},"files":[],"sha":"6881b6dc4fd2099e0bf5134944924784b0e0dfa1"},{"commit":{"message":"Update src\/java.base\/share\/classes\/java\/lang\/foreign\/SymbolLookup.java\n\nCo-authored-by: Jorn Vernee <JornVernee@users.noreply.github.com>"},"files":[],"sha":"40776085c6ab67431e5aa0dfaeaf0a43e5c711c4"},{"commit":{"message":"Address review comments"},"files":[],"sha":"3e8cfd74843f64f0d3c31c33bcf223543fb566e9"},{"commit":{"message":"Update src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java\n\nCo-authored-by: Jorn Vernee <JornVernee@users.noreply.github.com>"},"files":[],"sha":"95f65eeabae155d075d6471025ade9f8a8636beb"},{"commit":{"message":"Update src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java\n\nCo-authored-by: Jorn Vernee <JornVernee@users.noreply.github.com>"},"files":[],"sha":"b6aa6813e1e3b9dcbfbdc84ac256b5f33db3b694"},{"commit":{"message":"Update src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java\n\nCo-authored-by: Jorn Vernee <JornVernee@users.noreply.github.com>"},"files":[],"sha":"acb3d4c3268da47859dfe59544dea25b3810d635"},{"commit":{"message":"Drop redundant javadoc statements re. handling of nulls\n(handling of nulls is specified once and for all in the package javadoc)"},"files":[],"sha":"c9bc9a70cd19220f770e4c60c8e532983a810b69"},{"commit":{"message":"Fix indentation in Lib.gmk"},"files":[],"sha":"7ec71f7305c476b735fea35f839ac43f09b65361"},{"commit":{"message":"rename syslookup lib on Windows"},"files":[],"sha":"4b2760d310386010244dc4c5d6fd58a86624a75d"},{"commit":{"message":"Add missing LIBS flag"},"files":[],"sha":"fc1fdb5b4b8afec22e179f40bd57ca6e9e348b95"},{"commit":{"message":"Simplify syslookup build changes"},"files":[],"sha":"3d3c30a41552ec44c2e2819ce7669fa3e84fda86"},{"commit":{"message":"Address review comments\n* Use `new` instead of `fresh`\n* Drop use of `new` where caching might be used\n* Remove unused imports\n* Add static imports to make code more succint\n* Fix other typos"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"}],"sha":"6bb1b5c9d4afde94c16d19fd724e7744e45946a2"},{"commit":{"message":"Fix TestLayouts on 32-bits"},"files":[],"sha":"8e6017dc0da95cf29cbb895d3ff5580bcd8c0763"},{"commit":{"message":"Update copyright"},"files":[],"sha":"ef54894f0bef8296dc984ade88ed23508fe79b33"},{"commit":{"message":"Drop unused imports in Reflection.java"},"files":[],"sha":"6254192546ba21804d8e48c9a8a7751d6f887d8b"},{"commit":{"message":"Fix writeOversized for booleans"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"3fb495d07e63aaeedb04d7853d4515b57be91f0f"},{"commit":{"message":"Revert changes to scopedMemoryAccess.cpp"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"dac414cdd289999e02c3785fd440d6364b50fd23"},{"commit":{"message":"Add TestUpcallStack to problem list"},"files":[],"sha":"7403a789d767b00df89a7eeb5804a05c6332d95d"},{"commit":{"message":"Revert changes to problem list"},"files":[],"sha":"a3586cb8be8b238e859b8126799ba2a346951b35"},{"commit":{"message":"Revert to previous handshake logic"},"files":[],"sha":"6aa5f1095ff3516b34ff07328c2aae1d8a8a9583"},{"commit":{"message":"Initial push"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/Binding.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableInvoker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ProgrammableUpcallHandler.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/linux\/LinuxAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/aarch64\/macos\/MacOsAArch64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/SysVx64Linker.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/Windowsx64Linker.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/CallArrangerTestBase.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestAarch64CallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestSysVCallArranger.java"},{"filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java"}],"sha":"3f411d5e9b9ced0cfb641b082fa53c7dd4744af5"}]