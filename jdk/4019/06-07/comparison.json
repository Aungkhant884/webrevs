{"files":[{"patch":"@@ -1428,2 +1428,3 @@\n-         * Use any data from ibuffer and 'in' to first verify the auth tag. If\n-         * the tag is valid, decrypt the data.\n+         * Use available data from ibuffer and 'in' to verify and decrypt the\n+         * data.  If the verification fails, the 'out' left to it's original\n+         * values if crypto was in-place; otherwise 'out' is zeroed\n@@ -1437,0 +1438,6 @@\n+            if (len < tagLenBytes) {\n+                throw new AEADBadTagException(\"Input data too short to \" +\n+                    \"contain an expected tag length of \" + tagLenBytes +\n+                    \"bytes\");\n+            }\n+\n@@ -1443,4 +1450,0 @@\n-            if (len < tagLenBytes) {\n-                throw new AEADBadTagException(\"Input too short - need tag\");\n-            }\n-\n@@ -1474,1 +1477,1 @@\n-                throw new AEADBadTagException(\"Tag mismatch!\");\n+                throw new AEADBadTagException(\"Tag mismatch\");\n@@ -1482,2 +1485,3 @@\n-         * Use any data from ibuffer and 'src' to first verify the auth tag. If\n-         * the tag is valid, decrypt the data.\n+         * Use available data from ibuffer and 'src' to verify and decrypt the\n+         * data.  If the verification fails, the 'dst' left to it's original\n+         * values if crypto was in-place; otherwise 'dst' is zeroed\n@@ -1507,2 +1511,2 @@\n-                throw new ShortBufferException(\"Output buffer too small, must\" +\n-                    \"be at least \" + (len - tagLenBytes) + \" bytes long\");\n+                throw new ShortBufferException(\"Output buffer too small, \" +\n+                    \"must be at least \" + len + \" bytes long\");\n@@ -1531,1 +1535,3 @@\n-                throw new AEADBadTagException(\"Input too short - need tag\");\n+                throw new AEADBadTagException(\"Input data too short to \" +\n+                    \"contain an expected tag length of \" + tagLenBytes +\n+                    \"bytes\");\n@@ -1561,1 +1567,1 @@\n-                throw new AEADBadTagException(\"Tag mismatch!\");\n+                throw new AEADBadTagException(\"Tag mismatch\");\n@@ -1608,1 +1614,2 @@\n-                    resultLen = op.update(buffer, len, bufRemainder, out, outOfs);\n+                    resultLen = op.update(buffer, len, bufRemainder, out,\n+                        outOfs);\n@@ -1647,2 +1654,1 @@\n-            ghash.doFinal(in, inOfs, inLen);\n-            return len + gctr.doFinal(in, inOfs, inLen, out, outOfs);\n+            return len + op.doFinal(in, inOfs, inLen, out, outOfs);\n@@ -1721,1 +1727,2 @@\n-                len = implGCMCrypt(in, inOfs, inLen, out, outOfs, out, outOfs, gctr, ghash);\n+                len = implGCMCrypt(in, inOfs, inLen, out, outOfs, out, outOfs,\n+                    gctr, ghash);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":24,"deletions":17,"binary":false,"changes":41,"status":"modified"}]}