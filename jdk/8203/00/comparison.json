{"files":[{"patch":"@@ -1865,0 +1865,13 @@\n+      \/\/ print_metadata and dump_asm may safepoint which makes us loose the ttylock.\n+      \/\/ We call them first and write to a stringStream, then we retake the lock to\n+      \/\/ make sure the end tag is coherent, and that xmlStream->pop_tag is done thread safe.\n+      ResourceMark rm;\n+      stringStream method_metadata_str;\n+      if (C->method() != NULL) {\n+        C->method()->print_metadata(&method_metadata_str);\n+      }\n+      stringStream dump_asm_str;\n+      dump_asm_on(&dump_asm_str, node_offsets, node_offset_limit);\n+\n+      NoSafepointVerifier nsv;\n+      ttyLocker ttyl2;\n@@ -1874,1 +1887,1 @@\n-        C->method()->print_metadata();\n+        tty->print(\"%s\", method_metadata_str.as_string());\n@@ -1880,1 +1893,1 @@\n-      dump_asm(node_offsets, node_offset_limit);\n+      tty->print(\"%s\", dump_asm_str.as_string());\n@@ -1883,4 +1896,0 @@\n-        \/\/ print_metadata and dump_asm above may safepoint which makes us loose the ttylock.\n-        \/\/ Retake lock too make sure the end tag is coherent, and that xmlStream->pop_tag is done\n-        \/\/ thread safe\n-        ttyLocker ttyl2;\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -243,2 +243,0 @@\n-  uint              node_bundling_limit();\n-  Bundle*           node_bundling_base();\n@@ -256,1 +254,0 @@\n-  void dump_asm(int* pcs = NULL, uint pc_limit = 0) { dump_asm_on(tty, pcs, pc_limit); }\n@@ -259,1 +256,0 @@\n-  void dump_asm(int* pcs = NULL, uint pc_limit = 0) { return; }\n","filename":"src\/hotspot\/share\/opto\/output.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}