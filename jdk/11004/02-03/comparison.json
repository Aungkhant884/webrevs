{"files":[{"patch":"@@ -81,2 +81,0 @@\n-    public static final LinuxRISCV64CallArranger LINUX = new LinuxRISCV64CallArranger();\n-\n@@ -113,1 +111,1 @@\n-    public MethodHandle arrangeDowncall(MethodType mt, FunctionDescriptor cDesc, LinkerOptions options) {\n+    public static MethodHandle arrangeDowncall(MethodType mt, FunctionDescriptor cDesc, LinkerOptions options) {\n@@ -125,1 +123,1 @@\n-    public MemorySegment arrangeUpcall(MethodHandle target, MethodType mt, FunctionDescriptor cDesc, SegmentScope scope) {\n+    public static MemorySegment arrangeUpcall(MethodHandle target, MethodType mt, FunctionDescriptor cDesc, SegmentScope scope) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-        return LinuxRISCV64CallArranger.LINUX.arrangeDowncall(inferredMethodType, function, options);\n+        return LinuxRISCV64CallArranger.arrangeDowncall(inferredMethodType, function, options);\n@@ -61,1 +61,1 @@\n-        return LinuxRISCV64CallArranger.LINUX.arrangeUpcall(target, targetType, function, scope);\n+        return LinuxRISCV64CallArranger.arrangeUpcall(target, targetType, function, scope);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64Linker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}