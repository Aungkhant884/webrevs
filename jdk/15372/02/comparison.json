{"files":[{"patch":"@@ -41,1 +41,44 @@\n-\/\/ Implementation Classes for Loader Constraints\n+\/\/ Overview\n+\/\/\n+\/\/ The LoaderConstraintTable controls whether two ClassLoaders can resolve the same class name N\n+\/\/ to different InstanceKlasses.\n+\/\/\n+\/\/     The design of the algorithm can be found in the OOPSLA'98 paper \"Dynamic Class Loading in\n+\/\/     the Java Virtual Machine\" by Sheng Liang and Gilad Bracha.\n+\/\/\n+\/\/     To understand the implementation, start with LoaderConstraintTable::{add_entry, check_or_update}\n+\/\/\n+\/\/ When a class name N is entered into the LoaderConstraintTable, it's mapped to a ConstraintSet which\n+\/\/ contains one or more LoaderConstraints:\n+\/\/\n+\/\/   LoaderConstraint_a = { _klass_a, loader_a1, loader_a2, ...}\n+\/\/   LoaderConstraint_b = { _klass_b, loader_b1, loader_b2, ...}\n+\/\/   LoaderConstraint_c = { _klass_c, loader_c1, loader_c2, ...}\n+\/\/   ...\n+\/\/\n+\/\/ If _klass_<m> is null, when the first loader_<m><n> resolves the name N to a class K,\n+\/\/ we assign _klass_<m> = K.\n+\/\/\n+\/\/ if _klass_<m> is non-null, when a loader loader_<m><n> tries to resolve the name N to a class K,\n+\/\/ where _klass_<m> != K, a LinkageError is thrown, and the resolution fails.\n+\/\/\n+\/\/ Management of LoaderConstraints\n+\/\/\n+\/\/ When the SystemDictionary decides that loader_x and loader_y must resolve the name N to the same class:\n+\/\/ For the name N, find two LoaderConstraints such that:\n+\/\/\n+\/\/     - LoaderConstraint_x contains loader_x\n+\/\/     - LoaderConstraint_y contains loader_y\n+\/\/\n+\/\/       (Note that no class loader will appear in more than one LoaderConstraint for\n+\/\/        each name N, as enforced by the following steps).\n+\/\/\n+\/\/ If neither LoaderConstraint_x nor LoaderConstraint_y exist, add a new LoaderConstraint that contains\n+\/\/ both loader_x and loader_y.\n+\/\/\n+\/\/ Otherwise if LoaderConstraint_x exists but LoaderConstraint_y doesn't exist, add loader_y to LoaderConstraint_x,\n+\/\/ or vice versa.\n+\/\/\n+\/\/ Otherwise if both LoaderConstraints have different values for _klass, a LinkageError is thrown.\n+\/\/\n+\/\/ Otherwise the two LoaderConstraints are merged into one.\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.cpp","additions":44,"deletions":1,"binary":false,"changes":45,"status":"modified"}]}