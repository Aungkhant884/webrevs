{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import java.io.File;\n@@ -35,0 +34,1 @@\n+import java.nio.file.Path;\n@@ -171,1 +171,1 @@\n-            pb.redirectOutput(new File(redirects.get(OutputKind.STDOUT)));\n+            pb.redirectOutput(Path.of(redirects.get(OutputKind.STDOUT)).toFile());\n@@ -173,1 +173,1 @@\n-            pb.redirectError(new File(redirects.get(OutputKind.STDERR)));\n+            pb.redirectError(Path.of(redirects.get(OutputKind.STDERR)).toFile());\n","filename":"test\/langtools\/tools\/lib\/toolbox\/AbstractTask.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.File;\n@@ -335,1 +334,1 @@\n-                                .replace(File.separatorChar, '\/');\n+                                .replace(ToolBox.fileSeparatorChar, '\/');\n","filename":"test\/langtools\/tools\/lib\/toolbox\/JarTask.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import java.io.File;\n@@ -93,1 +92,1 @@\n-        this.classpath = Stream.of(classpath.split(File.pathSeparator))\n+        this.classpath = Stream.of(classpath.split(ToolBox.pathSeparator))\n@@ -126,1 +125,1 @@\n-        this.sourcepath = Stream.of(sourcepath.split(File.pathSeparator))\n+        this.sourcepath = Stream.of(sourcepath.split(ToolBox.pathSeparator))\n@@ -471,1 +470,1 @@\n-            .collect(Collectors.joining(File.pathSeparator));\n+            .collect(Collectors.joining(ToolBox.pathSeparator));\n","filename":"test\/langtools\/tools\/lib\/toolbox\/JavacTask.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import java.io.File;\n@@ -92,1 +91,1 @@\n-        this.classpath = Stream.of(classpath.split(File.pathSeparator))\n+        this.classpath = Stream.of(classpath.split(ToolBox.pathSeparator))\n@@ -125,1 +124,1 @@\n-        this.sourcepath = Stream.of(sourcepath.split(File.pathSeparator))\n+        this.sourcepath = Stream.of(sourcepath.split(ToolBox.pathSeparator))\n@@ -400,1 +399,1 @@\n-            .collect(Collectors.joining(File.pathSeparator));\n+            .collect(Collectors.joining(ToolBox.pathSeparator));\n","filename":"test\/langtools\/tools\/lib\/toolbox\/JavadocTask.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import java.io.File;\n@@ -260,1 +259,1 @@\n-     * @param srcDir the directory in which a directory will be created\n+     * @param src the directory in which a directory will be created\n@@ -270,1 +269,1 @@\n-                .collect(Collectors.joining(File.pathSeparator));\n+                .collect(Collectors.joining(ToolBox.pathSeparator));\n","filename":"test\/langtools\/tools\/lib\/toolbox\/ModuleBuilder.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -37,2 +37,0 @@\n-import java.nio.file.FileAlreadyExistsException;\n-import java.nio.file.FileVisitOption;\n@@ -51,1 +49,0 @@\n-import java.util.EnumSet;\n@@ -95,0 +92,4 @@\n+    \/** The platform path separator. *\/\n+    public static final String pathSeparator = System.getProperty(\"path.separator\");\n+    \/** The platform file separator character. *\/\n+    public static char fileSeparatorChar = System.getProperty(\"file.separator\").charAt(0);\n","filename":"test\/langtools\/tools\/lib\/toolbox\/ToolBox.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}