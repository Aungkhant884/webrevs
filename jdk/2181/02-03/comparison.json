{"files":[{"patch":"@@ -230,0 +230,18 @@\n+#ifdef ASSERT\n+void FreeRegionList::verify_region_to_remove(HeapRegion* curr, HeapRegion* next) {\n+  assert_free_region_list(_head != next, \"invariant\");\n+  if (next != NULL) {\n+    assert_free_region_list(next->prev() != NULL, \"invariant\");\n+    assert_free_region_list(_tail != curr, \"invariant\");\n+  } else {\n+    assert_free_region_list(_tail == curr, \"invariant\");\n+  }\n+  HeapRegion* prev = curr->prev();\n+  if (prev == NULL) {\n+    assert_free_region_list(_head == curr, \"invariant\");\n+  } else {\n+    assert_free_region_list(_head != curr, \"invariant\");\n+  }\n+}\n+#endif\n+\n@@ -245,12 +263,1 @@\n-#ifdef ASSERT\n-  if (prev == NULL) {\n-    assert_free_region_list(_head == first, \"invariant\");\n-  } else {\n-    assert_free_region_list(_head != first, \"invariant\");\n-  }\n-  if (next == NULL) {\n-    assert_free_region_list(_tail == first, \"invariant\");\n-  } else {\n-    assert_free_region_list(_tail != first, \"invariant\");\n-  }\n-#endif\n+\n@@ -262,6 +269,1 @@\n-\n-    assert_free_region_list(_head != next, \"invariant\");\n-    if (next != NULL) {\n-      assert_free_region_list(next->prev() != NULL, \"invariant\");\n-      assert_free_region_list(_tail != curr, \"invariant\");\n-    }\n+    verify_region_to_remove(curr, next);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionSet.cpp","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -230,0 +230,1 @@\n+  void verify_region_to_remove(HeapRegion* curr, HeapRegion* next) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionSet.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}