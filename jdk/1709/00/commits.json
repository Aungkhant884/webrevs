[{"commit":{"message":"8257928: Test image build failure with clang-10 due to -Wmisleading-indentation\n\nFlag '-Wmisleading-indentation' was introduced since clang-10 [1] and\ngcc-6 [2]. Putting the code with proper indentations would suppress this\nwarning.\n\nThe main reason why test image build with gcc succeeds is that, clang\nand gcc might behave differently for some corner cases under\n'-Wmisleading-indentation'.\n\nThe following code snippet is crafted based on this build failure, where\neach statement with improper indentation (line A and line B) follows an\nif-statement. The key difference between foo() and bar() lies in that\nthere exists an extra comment, i.e. \"\/* comment 2 *\/\", between statement\nat line A and the if-statement.\n\n    int foo(int num) {\n      \/* comment 1 *\/\n      if (num > 1)\n        return 0;\n\n      \/* comment 2 *\/\n        num = num + 1;  \/\/ line A\n      return num;\n    }\n\n    int bar(int val) {\n      \/* comment 3 *\/\n      if (val > 1)\n        return 0;\n\n        val = val + 1;  \/\/ line B\n      return val;\n    }\n\nIt's worth noting that foo() is quite similar to the erroneous code in\nthis build failure. Clang-10 would emit misleading indentation warnings\nfor both foo() and bar(), whereas gcc-6 or higher considers foo() free\nof problems. [3]\n\nThis patch is a complement to JDK-8253892. In JDK-8253892, flag\n'-Wmisleading-indentation' is disabled for both clang and gcc when\nbuilding JRE and JDK images. This patch does not disable the flag for\ntest image building, but just fixes the code, becasue:\n  - only a small number of warnings are produced and it's easy to fix\n  them one by one.\n  - inconsistent warning behaviors between gcc and clang are triggered\n  by this case and simply disabling the flag does not work.\n\nNote that AArch64 is NOT tested because test image build still fails\nafter this bug is fixed due to another runtime error (See JDK-8257936),\nwhich is not related to this patch.\n\n[1] https:\/\/releases.llvm.org\/10.0.0\/tools\/clang\/docs\/DiagnosticsReference.html\n[2] https:\/\/gcc.gnu.org\/onlinedocs\/gcc-6.5.0\/gcc\/Warning-Options.html#Warning-Options\n[3] https:\/\/godbolt.org\/z\/xs6xWv"},"files":[{"filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass028\/redefclass028.cpp"},{"filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass029\/redefclass029.cpp"},{"filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass030\/redefclass030.cpp"},{"filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t003\/hs201t003.cpp"}],"sha":"f51c0cdcfba9fdd1d911b34c91d71193bb7ca460"}]