{"files":[{"patch":"@@ -3681,0 +3681,7 @@\n+    if (incr2->in(1)->is_ConstraintCast()) {\n+      if (!incr2->in(1)->in(0)->is_RangeCheck()) {\n+        \/\/ The form of Phi->CastXX->AddX appears when using Preconditions.checkIndex, and it would\n+        \/\/ be recognized as additional IV when 1) Phi != phi2, 2) CastXX is controlled by RangeCheck\n+        continue;\n+      }\n+    }\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2022, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8290432\n+ * @summary Unexpected parallel induction variable pattern was recongized\n+ *\n+ * @run main\/othervm -XX:-TieredCompilation -Xcomp\n+ *           -XX:CompileCommand=compileonly,compiler.c2.TestUnexpectedParallelIV::test\n+ *           -XX:CompileCommand=quiet\n+ *           -XX:CompileCommand=dontinline,compiler.c2.TestUnexpectedParallelIV::* compiler.c2.TestUnexpectedParallelIV\n+ *\/\n+\n+package compiler.c2;\n+\n+public class TestUnexpectedParallelIV {\n+\n+    static int dontInline() {\n+        return 0;\n+    }\n+\n+    static long test(int val, boolean b) {\n+        long ret = 0;\n+        long dArr[] = new long[100];\n+        for (int i = 15; 293 > i; ++i) {\n+            ret = val;\n+            int j = 1;\n+            while (++j < 6) {\n+                int k = (val--);\n+                for (long l = i; 1 > l; ) {\n+                    if (k != 0) {\n+                        ret += dontInline();\n+                    }\n+                }\n+                if (b) {\n+                    break;\n+                }\n+            }\n+        }\n+        return ret;\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 1000; i++) {\n+            test(0, false);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestUnexpectedParallelIV.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}