{"files":[{"patch":"@@ -3655,1 +3655,1 @@\n-  if (!cl->is_valid_counted_loop(T_INT))\n+  if (!cl->is_valid_counted_loop(T_INT)) {\n@@ -3657,0 +3657,1 @@\n+  }\n@@ -3658,1 +3659,1 @@\n-  if (incr == NULL)\n+  if (incr == NULL) {\n@@ -3660,0 +3661,1 @@\n+  }\n@@ -3668,1 +3670,1 @@\n-    if (!out->is_Phi() || out == phi || !has_node(out))\n+    if (!out->is_Phi() || out == phi || !has_node(out)) {\n@@ -3670,0 +3672,2 @@\n+    }\n+\n@@ -3678,1 +3682,1 @@\n-        !incr2->in(2)->is_Con())\n+        !incr2->in(2)->is_Con()) {\n@@ -3680,0 +3684,1 @@\n+    }\n@@ -3681,6 +3686,5 @@\n-    if (incr2->in(1)->is_ConstraintCast()) {\n-      if (!incr2->in(1)->in(0)->is_RangeCheck()) {\n-        \/\/ The form of Phi->CastXX->AddX appears when using Preconditions.checkIndex, and it would\n-        \/\/ be recognized as additional IV when 1) Phi != phi2, 2) CastXX is controlled by RangeCheck\n-        continue;\n-      }\n+    if (incr2->in(1)->is_ConstraintCast() && !incr2->in(1)->in(0)->is_RangeCheck()) {\n+      \/\/ The form of Phi->CastXX->AddX appears when using Preconditions.checkIndex, and it would\n+      \/\/ be recognized as additional IV when 1) Phi != phi2, 2) CastXX is controlled by RangeCheck\n+      \/\/ (to reflect changes in LibraryCallKit::inline_preconditions_checkIndex)\n+      continue;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"}]}