{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -466,2 +466,1 @@\n-            value = (elemTag == DerValue.tag_GeneralizedTime) ?\n-                    dis.getGeneralizedTime() : dis.getUTCTime();\n+            value = dis.getTime();\n@@ -573,1 +572,1 @@\n-                temp2.putUTCTime((Date) value);\n+                temp2.putTime((Date) value);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -192,0 +192,4 @@\n+    public Date getTime() throws IOException {\n+        return getDerValue().getTime();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerInputStream.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -485,0 +485,9 @@\n+    \/**\n+     * Takes a Date and chooses UTC or GeneralizedTime as per RFC 2630\n+     *\/\n+    public DerOutputStream putTime(Date d) {\n+        Date low = new Date(-631152000000L); \/\/ Dates before 1\/1\/1950\n+        Date high = new Date(2524607999000L); \/\/ Dates after 12\/31\/2049\n+        return (d.before(low) || d.after(high)) ? putGeneralizedTime(d) : putUTCTime(d);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerOutputStream.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1063,0 +1063,8 @@\n+    \/**\n+     * Determines whether Date was encoded as UTC or Generalized time and\n+     * calls getUTCTime or getGeneralizedTime accordingly\n+     *\/\n+    public Date getTime() throws IOException {\n+        return (tag == tag_UtcTime) ? getUTCTime() : getGeneralizedTime();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8279254\n+ * @summary Changed time encoding to correctly use UTC between 1950-2050 and GeneralizedTime otherwise\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.util\n+ *\/\n+\n+import java.util.Date;\n+import sun.security.util.DerOutputStream;\n+import sun.security.util.DerValue;\n+\n+public class DerTimeEncoding {\n+    public static void main(String args[]) throws Exception {\n+        \/\/Check that dates after 2050 use GeneralizedTime\n+        DerOutputStream out = new DerOutputStream();\n+        Date generalizedTimeDate = new Date(2688854400000L); \/\/ Test date is 3\/17\/2055\n+        out.putTime(generalizedTimeDate);\n+        DerValue val = new DerValue(out.toByteArray());\n+        if (val.tag != DerValue.tag_GeneralizedTime) {\n+            System.out.println(\"putTime incorrectly serialized to UTC time instead of GeneralizedTime\");\n+            throw new RuntimeException(\"Incorrect Der date format\");\n+        }\n+\n+        \/\/Check dates between 1950-2050 use UTC time\n+        out = new DerOutputStream();\n+        Date utcDate = new Date(242092800000L); \/\/Test date is 9\/3\/1977\n+        out.putTime(utcDate);\n+        val = new DerValue(out.toByteArray());\n+        if (val.tag != DerValue.tag_UtcTime) {\n+            System.out.println(\"putTime incorrectly serialized to Generalized time instead of UTC time\");\n+            throw new RuntimeException(\"Incorrect Der date format\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/sun\/security\/util\/DerOutputStream\/DerTimeEncoding.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}