{"files":[{"patch":"@@ -1303,1 +1303,1 @@\n-     * <li> its {@code final} modifier is always\n+     * <li> its {@code final} and {@code abstract} modifiers are always\n@@ -1305,1 +1305,1 @@\n-     * <li> its interface modifier is always {@code false}, event when\n+     * <li> its interface modifier is always {@code false}, even when\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-     * <li> its {@code final} modifier is always\n+     * <li> its {@code final} and {@code abstract} modifiers are always\n@@ -43,1 +43,1 @@\n-     * <li> its interface modifier is always {@code false}, event when\n+     * <li> its interface modifier is always {@code false}, even when\n@@ -73,3 +73,3 @@\n-                System.out.println(\"Expected \" + Modifier.toString(expectedModifiers) +\n-                                   \", but got \" + Modifier.toString(actualModifiers));\n-                throw new RuntimeException();\n+                throw new RuntimeException(\"Expected \" + Modifier.toString(expectedModifiers) +\n+                                           \"on \" + testCase.getCanonicalName() +\n+                                           \", but got \" + Modifier.toString(actualModifiers));\n@@ -125,3 +125,3 @@\n-                System.out.println(\"Bad modifiers \" + Modifier.toString(actualModifiers) +\n-                                   \" on primitive type \" + testCase);\n-                throw new RuntimeException();\n+                throw new RuntimeException(\"Bad modifiers \" +\n+                                           Modifier.toString(actualModifiers) +\n+                                           \" on primitive type \" + testCase);\n@@ -136,1 +136,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/lang\/Class\/getModifiers\/TestPrimitiveAndArrayModifiers.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}