{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.util.Map;\n@@ -82,3 +81,5 @@\n-     * Returns an immutable {@link Map} containing the HTTP headers that were\n-     * included with this request. The keys in this {@code Map} will be the header\n-     * names, while the values will be a {@link java.util.List} of\n+     * Returns an immutable {@link Headers} containing the HTTP headers that\n+     * were included with this request.\n+     *\n+     * <p> The keys in this {@code Headers} will be the header names, while the\n+     * values will be a {@link java.util.List} of\n@@ -86,4 +87,2 @@\n-     * included (either for a header that was listed several times, or one that\n-     * accepts a comma-delimited list of values on a single line). In either of\n-     * these cases, the values for the header name will be presented in the\n-     * order that they were included in the request.\n+     * included in the request, in the order they were included. Header fields\n+     * appearing multiple times are represented as multiple string values.\n@@ -91,1 +90,1 @@\n-     * <p> The keys in {@code Map} are case-insensitive.\n+     * <p>The keys in {@code Headers} are case-insensitive.\n@@ -93,1 +92,2 @@\n-     * @return a read-only {@code Map} which can be used to access request headers\n+     * @return a read-only {@code Headers} which can be used to access request\n+     *         headers.\n@@ -98,6 +98,7 @@\n-     * Returns a mutable {@link Map} into which the HTTP response headers can be\n-     * stored and which will be transmitted as part of this response. The keys in\n-     * the {@code Map} will be the header names, while the values must be a\n-     * {@link java.util.List} of {@linkplain java.lang.String Strings} containing\n-     * each value that should be included multiple times (in the order that they\n-     * should be included).\n+     * Returns a mutable {@link Headers} into which the HTTP response headers\n+     * can be stored and which will be transmitted as part of this response.\n+     *\n+     * <p> The keys in the {@code Headers} will be the header names, while the\n+     * values must be a {@link java.util.List} of {@linkplain java.lang.String Strings}\n+     * containing each value that should be included multiple times (in the\n+     * order that they should be included).\n@@ -105,1 +106,1 @@\n-     * <p> The keys in {@code Map} are case-insensitive.\n+     * <p> The keys in {@code Headers} are case-insensitive.\n@@ -107,1 +108,2 @@\n-     * @return a writable {@code Map} which can be used to set response headers.\n+     * @return a writable {@code Headers} which can be used to set response\n+     *         headers.\n@@ -112,1 +114,1 @@\n-     * Get the request {@link URI}.\n+     * Returns the request {@link URI}.\n@@ -119,1 +121,1 @@\n-     * Get the request method.\n+     * Returns the request method.\n@@ -126,1 +128,1 @@\n-     * Get the {@link HttpContext} for this exchange.\n+     * Returns the {@link HttpContext} for this exchange.\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpExchange.java","additions":24,"deletions":22,"binary":false,"changes":46,"status":"modified"}]}