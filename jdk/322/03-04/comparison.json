{"files":[{"patch":"@@ -796,0 +796,1 @@\n+        AlgorithmId sigAlgID = SignatureUtil.fromSignature(signer, privateKey);\n@@ -799,1 +800,1 @@\n-            String digAlgName = digAlgID.getName();\n+            \/\/ MessageDigest\n@@ -801,0 +802,1 @@\n+            String digAlgName = digAlgID.getName();\n@@ -810,0 +812,8 @@\n+            \/\/ CMSAlgorithmProtection (RFC6211)\n+            DerOutputStream derAp = new DerOutputStream();\n+            DerOutputStream derAlgs = new DerOutputStream();\n+            digAlgID.derEncode(derAlgs);\n+            DerOutputStream derSigAlg = new DerOutputStream();\n+            sigAlgID.derEncode(derSigAlg);\n+            derAlgs.writeImplicit((byte)0xA1, derSigAlg);\n+            derAp.write(DerValue.tag_Sequence, derAlgs);\n@@ -813,0 +823,2 @@\n+                    new PKCS9Attribute(PKCS9Attribute.CMS_ALGORITHM_PROTECTION_OID,\n+                            derAp.toByteArray()),\n@@ -828,1 +840,1 @@\n-                SignatureUtil.fromSignature(signer, privateKey));\n+                sigAlgID);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS7.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -167,0 +167,7 @@\n+ * <TR>\n+ * <TD>1.2.840.113549.1.9.16.2.52<\/TD>\n+ * <TD>CMSAlgorithmProtection<\/TD>\n+ * <TD>Single-valued<\/TD>\n+ * <TD>byte[]<\/TD>\n+ * <\/TR>\n+ *\n@@ -179,1 +186,1 @@\n-    static final ObjectIdentifier[] PKCS9_OIDS = new ObjectIdentifier[18];\n+    static final ObjectIdentifier[] PKCS9_OIDS = new ObjectIdentifier[19];\n@@ -226,0 +233,3 @@\n+    public static final ObjectIdentifier CMS_ALGORITHM_PROTECTION_OID =\n+            PKCS9_OIDS[18] =\n+            ObjectIdentifier.of(KnownOIDs.CMSAlgorithmProtection);\n@@ -264,1 +274,2 @@\n-        {DerValue.tag_Sequence}     \/\/ SignatureTimestampToken\n+        {DerValue.tag_Sequence},    \/\/ SignatureTimestampToken\n+        {DerValue.tag_Sequence}     \/\/ CMSAlgorithmProtection\n@@ -267,1 +278,1 @@\n-    private static final Class<?>[] VALUE_CLASSES = new Class<?>[18];\n+    private static final Class<?>[] VALUE_CLASSES = new Class<?>[19];\n@@ -295,0 +306,1 @@\n+            VALUE_CLASSES[18] = BYTE_ARRAY_CLASS;  \/\/ CMSAlgorithmProtection\n@@ -322,1 +334,2 @@\n-      true     \/\/ SignatureTimestampToken\n+      true,    \/\/ SignatureTimestampToken\n+      true,    \/\/ CMSAlgorithmProtection\n@@ -499,0 +512,5 @@\n+\n+        case 18:    \/\/ CMSAlgorithmProtection\n+            value = elems[0].toByteArray();\n+            break;\n+\n@@ -626,0 +644,4 @@\n+        case 18:    \/\/ CMSAlgorithmProtection\n+            temp.write(DerValue.tag_Set, (byte[])value);\n+            break;\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":26,"deletions":4,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -188,0 +188,30 @@\n+\n+        \/\/ verify CMSAlgorithmProtection\n+        checkCMSAlgorithmProtection();\n+    }\n+\n+    \/\/ CMSAlgorithmProtection verification as described in RFC 6211\n+    private void checkCMSAlgorithmProtection() throws IOException {\n+        if (authenticatedAttributes == null) {\n+            return;\n+        }\n+        PKCS9Attribute ap = authenticatedAttributes.getAttribute(\n+                PKCS9Attribute.CMS_ALGORITHM_PROTECTION_OID);\n+        if (ap == null) {\n+            return;\n+        }\n+        DerValue dv = new DerValue((byte[])ap.getValue());\n+        DerInputStream data = dv.data();\n+        AlgorithmId d = AlgorithmId.parse(data.getDerValue());\n+        DerValue ds = data.getDerValue();\n+        if (data.available() > 0) {\n+            throw new IOException(\"Unknown field in CMSAlgorithmProtection\");\n+        }\n+        if (!ds.isContextSpecific((byte)1)) {\n+            throw new IOException(\"No signature algorithm in CMSAlgorithmProtection\");\n+        }\n+        AlgorithmId s = AlgorithmId.parse(ds.withTag(DerValue.tag_Sequence));\n+        if (!s.equals(digestEncryptionAlgorithmId)\n+                || !d.equals(digestAlgorithmId)) {\n+            throw new IOException(\"CMSAlgorithmProtection check failed\");\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -235,0 +235,1 @@\n+    CMSAlgorithmProtection(\"1.2.840.113549.1.9.52\"),\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KnownOIDs.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-         * content directly, \"false\" if it's calulcated on signed attributes\n+         * content directly, \"false\" if it's calculated on signed attributes\n","filename":"src\/jdk.jartool\/share\/classes\/jdk\/security\/jarsigner\/JarSigner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}