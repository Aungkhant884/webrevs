{"files":[{"patch":"@@ -171,1 +171,1 @@\n-     * silently drops empty content as determined by {@link #isEmpty()}.\n+     * silently drops discardable content as determined by {@link #isDiscardable()}.\n@@ -181,1 +181,1 @@\n-        } else if (!content.isEmpty()) {\n+        } else if (!content.isDiscardable()) {\n@@ -191,1 +191,1 @@\n-     * Adds content to this HTML tree without checking for emptiness.\n+     * Adds content to this HTML tree without checking whether it is discardable.\n@@ -981,0 +981,5 @@\n+    @Override\n+    public boolean isEmpty() {\n+        return (!hasContent() && !hasAttrs());\n+    }\n+\n@@ -1010,6 +1015,3 @@\n-     * Returns {@code true} if the HTML tree is empty.\n-     *\n-     * @implSpec This method always returns {@code false} for void elements (which are not\n-     * expected to have content) as well as elements that may be used without content, such\n-     * as the {@code script} or {@code a} elements. Other elements are considered empty\n-     * if they do not contain any content.\n+     * Returns {@code true} if the HTML tree does not affect the output and can be discarded.\n+     * This implementation considers non-void elements without content as discardable, with the\n+     * exception of {@code SCRIPT} and {@code A} which can sometimes be used without content.\n@@ -1017,1 +1019,1 @@\n-     * @return true if the HTML tree is empty\n+     * @return true if the HTML tree can be discarded without affecting the output\n@@ -1020,1 +1022,1 @@\n-    public boolean isEmpty() {\n+    public boolean isDiscardable() {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlTree.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -130,0 +130,10 @@\n+    \/**\n+     * Returns true if this content does not affect the output and can be discarded.\n+     * The default implementation considers empty content as discardable.\n+     *\n+     * @return true if this content can be discarded without affecting the output\n+     *\/\n+    public boolean isDiscardable() {\n+        return isEmpty();\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/Content.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}