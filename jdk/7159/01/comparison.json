{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -328,2 +328,1 @@\n-                HtmlTree name = new HtmlTree(TagName.SPAN);\n-                name.setStyle(HtmlStyle.typeNameLabel);\n+                HtmlTree name = HtmlTree.SPAN(HtmlStyle.typeNameLabel);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -106,1 +107,1 @@\n-            desc.add(HtmlTree.EMPTY);\n+            desc.add(Text.EMPTY);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1380,6 +1380,8 @@\n-        if (depr) {\n-            div = HtmlTree.DIV(HtmlStyle.deprecationComment, result);\n-            htmltree.add(div);\n-        } else {\n-            div = HtmlTree.DIV(HtmlStyle.block, result);\n-            htmltree.add(div);\n+        if (!result.isEmpty()) {\n+            if (depr) {\n+                div = HtmlTree.DIV(HtmlStyle.deprecationComment, result);\n+                htmltree.add(div);\n+            } else {\n+                div = HtmlTree.DIV(HtmlStyle.block, result);\n+                htmltree.add(div);\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-        if (serializableFieldsTree.isValid()) {\n+        if (!serializableFieldsTree.isEmpty()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialFieldWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,0 +614,1 @@\n+        HtmlTree iconSpan = HtmlTree.SPAN(HtmlStyle.navBarToggleIcon).addUnchecked(Text.EMPTY);\n@@ -620,3 +621,3 @@\n-                        .add(HtmlTree.SPAN(HtmlStyle.navBarToggleIcon, HtmlTree.EMPTY))\n-                        .add(HtmlTree.SPAN(HtmlStyle.navBarToggleIcon, HtmlTree.EMPTY))\n-                        .add(HtmlTree.SPAN(HtmlStyle.navBarToggleIcon, HtmlTree.EMPTY)))\n+                        .add(iconSpan)\n+                        .add(iconSpan)\n+                        .add(iconSpan))\n@@ -662,1 +663,2 @@\n-        tree.add(HtmlTree.SPAN(HtmlStyle.skipNav, HtmlTree.EMPTY)\n+        tree.add(HtmlTree.SPAN(HtmlStyle.skipNav)\n+                .addUnchecked(Text.EMPTY)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -302,1 +302,1 @@\n-                Content moduleLink = HtmlTree.EMPTY;\n+                Content moduleLink = Text.EMPTY;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -36,0 +35,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -88,1 +88,1 @@\n-            desc.add(HtmlTree.EMPTY);\n+            desc.add(Text.EMPTY);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PreviewListWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-        HtmlTree nameSpan = new HtmlTree(TagName.SPAN).setStyle(HtmlStyle.elementName);\n+        HtmlTree nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n@@ -95,1 +95,1 @@\n-        HtmlTree nameSpan = new HtmlTree(TagName.SPAN).setStyle(HtmlStyle.elementName);\n+        HtmlTree nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n@@ -132,1 +132,1 @@\n-            HtmlTree nameSpan = new HtmlTree(TagName.SPAN).setStyle(HtmlStyle.elementName);\n+            HtmlTree nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n@@ -150,2 +150,1 @@\n-                Content extendsImplements = new HtmlTree(TagName.SPAN)\n-                        .setStyle(HtmlStyle.extendsImplements);\n+                Content extendsImplements = HtmlTree.SPAN(HtmlStyle.extendsImplements);\n@@ -193,1 +192,1 @@\n-                Content permitsSpan = new HtmlTree(TagName.SPAN).setStyle(HtmlStyle.permits);\n+                Content permitsSpan = HtmlTree.SPAN(HtmlStyle.permits);\n@@ -476,1 +475,1 @@\n-            HtmlTree nameSpan = new HtmlTree(TagName.SPAN).setStyle(HtmlStyle.elementName);\n+            HtmlTree nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,1 +210,1 @@\n-            Content pre = new HtmlTree(TagName.PRE);\n+            HtmlTree pre = new HtmlTree(TagName.PRE);\n@@ -295,2 +295,1 @@\n-        HtmlTree span = new HtmlTree(TagName.SPAN);\n-        span.setStyle(HtmlStyle.sourceLineNo);\n+        HtmlTree span = HtmlTree.SPAN(HtmlStyle.sourceLineNo);\n@@ -314,1 +313,1 @@\n-    private void addLine(Content pre, String line, int currentLineNo) {\n+    private void addLine(HtmlTree pre, String line, int currentLineNo) {\n@@ -319,1 +318,1 @@\n-            pre.add(anchor);\n+            pre.addUnchecked(anchor);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SourceToHTMLConverter.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -341,2 +342,2 @@\n-            \/\/ Replace invalid content with HtmlTree.EMPTY to make sure the cell isn't dropped\n-            HtmlTree cell = HtmlTree.DIV(cellStyle, c.isValid() ? c : HtmlTree.EMPTY);\n+            \/\/ Always add content to make sure the cell isn't dropped\n+            HtmlTree cell = HtmlTree.DIV(cellStyle).addUnchecked(c.isEmpty() ? Text.EMPTY : c);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.function.Predicate;\n@@ -356,1 +357,1 @@\n-        links.stream().filter(Content::isValid).forEach(item -> {\n+        links.stream().filter(Predicate.not(Content::isEmpty)).forEach(item -> {\n@@ -391,1 +392,1 @@\n-                .add(HtmlTree.EMPTY); \/\/ Make sure the element is always rendered\n+                .addUnchecked(Text.EMPTY); \/\/ Make sure the element is always rendered\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-                .add(footer == null ? HtmlTree.EMPTY : footer);\n+                .add(footer == null ? Text.EMPTY : footer);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/BodyContents.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        } else\n+        } else {\n@@ -59,0 +59,1 @@\n+        }\n@@ -95,17 +96,0 @@\n-    \/**\n-     * {@inheritDoc}\n-     *\n-     * @implSpec\n-     * A content builder is valid if any of its content is; thus, it is\n-     * valid to be added to an HtmlTree, which checks the validity of\n-     * each content in this builder.\n-     *\/\n-    @Override\n-    public boolean isValid() {\n-        for (Content content: contents) {\n-            if (content.isValid())\n-                return true;\n-        }\n-        return false;\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ContentBuilder.java","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,6 +87,0 @@\n-    \/**\n-     * A sentinel value to explicitly indicate empty content.\n-     * The '==' identity of this object is significant.\n-     *\/\n-    public static final Content EMPTY = Text.of(\"\");\n-\n@@ -173,0 +167,4 @@\n+     * @implSpec In order to facilitate creation of succinct output this method\n+     * silently drops empty content as determined by {@link #isEmpty()}.\n+     * Use {@link #addUnchecked(Content)} to add content unconditionally.\n+     *\n@@ -174,0 +172,1 @@\n+     * @return this HTML tree\n@@ -179,0 +178,5 @@\n+        } else if (!content.isEmpty()) {\n+            \/\/ quietly avoid adding empty or invalid nodes\n+            if (this.content.isEmpty())\n+                this.content = new ArrayList<>();\n+            this.content.add(content);\n@@ -180,2 +184,13 @@\n-        else if (content == HtmlTree.EMPTY || content.isValid()) {\n-            \/\/ quietly avoid adding empty or invalid nodes (except EMPTY)\n+        return this;\n+    }\n+\n+    \/**\n+     * Adds content to this HTML tree without checking for emptiness.\n+     *\n+     * @param content the content to add\n+     * @return this HTML tree\n+     *\/\n+    public HtmlTree addUnchecked(Content content) {\n+        if (content instanceof ContentBuilder cb) {\n+            cb.contents.forEach(this::addUnchecked);\n+        } else {\n@@ -745,0 +760,11 @@\n+    \/**\n+     * Creates an HTML {@code SPAN} element with the given style.\n+     *\n+     * @param styleClass the style\n+     * @return the element\n+     *\/\n+    public static HtmlTree SPAN(HtmlStyle styleClass) {\n+        return new HtmlTree(TagName.SPAN)\n+                .setStyle(styleClass);\n+    }\n+\n@@ -877,5 +903,0 @@\n-    @Override\n-    public boolean isEmpty() {\n-        return (!hasContent() && !hasAttrs());\n-    }\n-\n@@ -911,3 +932,6 @@\n-     * Returns true if the HTML tree is valid. This check is more specific to\n-     * standard doclet and not exactly similar to W3C specifications. But it\n-     * ensures HTML validation.\n+     * Returns {@code true} if the HTML tree is empty.\n+     *\n+     * @implSpec This method always returns {@code false} for void elements (which are not\n+     * expected to have content) as well as elements that may be used without content, such\n+     * as the {@code script} or {@code a} elements. Other elements are considered empty\n+     * if they do not contain any content.\n@@ -915,1 +939,1 @@\n-     * @return true if the HTML tree is valid\n+     * @return true if the HTML tree is empty\n@@ -918,25 +942,5 @@\n-    public boolean isValid() {\n-        switch (tagName) {\n-            case A:\n-                return (hasAttr(HtmlAttr.ID) || (hasAttr(HtmlAttr.HREF) && hasContent()));\n-            case BR:\n-                return (!hasContent() && (!hasAttrs() || hasAttr(HtmlAttr.CLEAR)));\n-            case HR:\n-            case INPUT:\n-                return (!hasContent());\n-            case IMG:\n-                return (hasAttr(HtmlAttr.SRC) && hasAttr(HtmlAttr.ALT) && !hasContent());\n-            case LINK:\n-                return (hasAttr(HtmlAttr.HREF) && !hasContent());\n-            case META:\n-                return (hasAttr(HtmlAttr.CONTENT) && !hasContent());\n-            case SCRIPT:\n-                return ((hasAttr(HtmlAttr.TYPE) && hasAttr(HtmlAttr.SRC) && !hasContent()) ||\n-                        (hasAttr(HtmlAttr.TYPE) && hasContent()));\n-            case SPAN:\n-                return (hasAttr(HtmlAttr.ID) || hasContent());\n-            case WBR:\n-                return (!hasContent());\n-            default :\n-                return hasContent();\n-        }\n+    public boolean isEmpty() {\n+        return !isVoid()\n+            && !hasContent()\n+            && tagName != TagName.SCRIPT\n+            && tagName != TagName.A;\n@@ -953,8 +957,4 @@\n-        switch (tagName) {\n-            case A: case BUTTON: case BR: case CODE: case EM: case I: case IMG:\n-            case LABEL: case SMALL: case SPAN: case STRONG: case SUB: case SUP:\n-            case WBR:\n-                return true;\n-            default:\n-                return false;\n-        }\n+        return switch (tagName) {\n+            case A, BUTTON, BR, CODE, EM, I, IMG, LABEL, SMALL, SPAN, STRONG, SUB, SUP, WBR -> true;\n+            default -> false;\n+        };\n@@ -971,6 +971,4 @@\n-        switch (tagName) {\n-            case BR: case HR: case IMG: case INPUT: case LINK: case META: case WBR:\n-                return true;\n-            default:\n-                return false;\n-        }\n+        return switch (tagName) {\n+            case BR, HR, IMG, INPUT, LINK, META, WBR -> true;\n+            default -> false;\n+        };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlTree.java","additions":55,"deletions":57,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,10 +109,0 @@\n-    \/**\n-     * Returns true if the content is valid. This allows filtering during\n-     * {@link #add(Content) addition}.\n-     *\n-     * @return true if the content is valid else return false\n-     *\/\n-    public boolean isValid() {\n-        return !isEmpty();\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/Content.java","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,4 +85,0 @@\n-        \/\/ Test invalid META tag\n-        HtmlTree invmeta = new HtmlTree(TagName.META);\n-        head.add(invmeta);\n-        \/\/ Test LINK tag\n@@ -93,3 +89,0 @@\n-        \/\/ Test invalid LINK tag\n-        HtmlTree invlink = new HtmlTree(TagName.LINK);\n-        head.add(invlink);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlDocument\/TestHtmlDocument.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"}]}