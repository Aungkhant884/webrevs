{"files":[{"patch":"@@ -81,1 +81,1 @@\n-     * Volatile, will be used in a double-checked locking.\n+     * Volatile, will be used in double-checked locking.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/AbstractDrbg.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,2 +167,2 @@\n-            \/\/ we have already passed the Configuration.getInstance\n-            \/\/ security check.  also, this class is not freely accessible\n+            \/\/ We have already passed the Configuration.getInstance\n+            \/\/ security check.  Also, this class is not freely accessible\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ConfigFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1164,2 +1164,0 @@\n-\n-            \/\/ everything matched -- the 2 objects are equal\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/PolicyParser.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -369,1 +369,1 @@\n-     * URISyntaxException we make the best efforts for backwards\n+     * URISyntaxException we make a best effort for backwards\n@@ -392,1 +392,1 @@\n-             * Make the best effort to access this File.\n+             * Make a best effort to access this File.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SunEntries.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-            default:\n+        default:\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/BuildStep.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-     * Authority Information Access extension shall be enabled. Currently,\n+     * Authority Information Access extension shall be enabled. Currently\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/Builder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -337,2 +337,2 @@\n-                    idpExt.get (IssuingDistributionPointExtension.INDIRECT_CRL)\n-                    == (Boolean.FALSE)) {\n+                    idpExt.get(IssuingDistributionPointExtension.INDIRECT_CRL)\n+                    == Boolean.FALSE) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/DistributionPointFetcher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -542,1 +542,2 @@\n-                    if (distanceTto1 == distanceTto2) {\n+                    \/\/ at least one is positive\n+                    if (distanceTto2 <= 0) {        \/\/ only d1 is positive\n@@ -544,7 +545,1 @@\n-                    } else if (distanceTto1 > 0 && distanceTto2 <= 0) {\n-                        return -1;\n-                    } else if (distanceTto1 <= 0) {\n-                        return 1;\n-                    } else if (distanceTto1 < distanceTto2) {\n-                        return -1;\n-                    } else {    \/\/ distanceTto1 > distanceTto2\n+                    } else if (distanceTto1 <= 0) { \/\/ only d2 is positive\n@@ -552,0 +547,2 @@\n+                    } else {                        \/\/ all positive\n+                        return distanceTto1 > distanceTto2 ? 1 : -1;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ForwardBuilder.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}