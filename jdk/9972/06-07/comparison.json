{"files":[{"patch":"@@ -610,1 +610,1 @@\n-            \/\/ Find the key exchange algorithm used.\n+            \/\/ Find out the key exchange algorithm used.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateMessage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,2 +40,1 @@\n-    int    headerPlusMaxIVSize =\n-                                      headerSize        \/\/ header\n+    int    headerPlusMaxIVSize =      headerSize        \/\/ header\n@@ -48,2 +47,1 @@\n-    int    maxPlaintextPlusSize =\n-                                      headerSize        \/\/ header\n+    int    maxPlaintextPlusSize =     headerSize        \/\/ header\n@@ -57,2 +55,1 @@\n-    int    maxRecordSize =\n-                                      headerPlusMaxIVSize   \/\/ header + iv\n+    int    maxRecordSize =            headerPlusMaxIVSize   \/\/ header + iv\n@@ -73,2 +70,1 @@\n-    int    minCertPlaintextSize =\n-                                      headerSize            \/\/ record header\n+    int    minCertPlaintextSize =     headerSize            \/\/ record header\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DTLSRecord.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -287,0 +287,5 @@\n+                if (namedParams == null) {\n+                    throw shc.conContext.fatal(Alert.ILLEGAL_PARAMETER,\n+                        \"Unknown named parameters in server cert for \" +\n+                            \"ECDH client key exchange\");\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ECDHClientKeyExchange.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -70,20 +70,19 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new NullReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_NONE\n-        ),\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new NullReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_13\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new NullWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_NONE\n-        ),\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new NullWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_13\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new NullReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_NONE\n+            ),\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new NullReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_13\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new NullWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_NONE\n+            ),\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new NullWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_13\n+            )\n+        }),\n@@ -93,12 +92,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new StreamReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new StreamWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new StreamReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new StreamWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            )\n+        }),\n@@ -108,12 +106,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new StreamReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new StreamWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new StreamReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new StreamWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            )\n+        }),\n@@ -123,12 +120,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            )\n+        }),\n@@ -139,12 +135,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new StreamReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_12\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new StreamWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_12\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new StreamReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_12\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new StreamWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_12\n+            )\n+        }),\n@@ -154,20 +149,19 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        ),\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T11BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_11\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        ),\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T11BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_11\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            ),\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T11BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_11\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            ),\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T11BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_11\n+            )\n+        }),\n@@ -177,20 +171,19 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        ),\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T11BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_11_12\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        ),\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T11BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_11_12\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            ),\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T11BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_11_12\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            ),\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T11BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_11_12\n+            )\n+        }),\n@@ -200,12 +193,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            null,\n-            ProtocolVersion.PROTOCOLS_TO_12\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            null,\n-            ProtocolVersion.PROTOCOLS_TO_12\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                null,\n+                ProtocolVersion.PROTOCOLS_TO_12\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                null,\n+                ProtocolVersion.PROTOCOLS_TO_12\n+            )\n+        }),\n@@ -215,20 +207,19 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        ),\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T11BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_11_12\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        ),\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T11BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_11_12\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            ),\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T11BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_11_12\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            ),\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T11BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_11_12\n+            )\n+        }),\n@@ -238,20 +229,19 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        ),\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T11BlockReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_11_12\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T10BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_TO_10\n-        ),\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T11BlockWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_11_12\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            ),\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T11BlockReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_11_12\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T10BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_TO_10\n+            ),\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T11BlockWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_11_12\n+            )\n+        }),\n@@ -261,12 +251,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T12GcmReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_12\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T12GcmWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_12\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T12GcmReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_12\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T12GcmWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_12\n+            )\n+        }),\n@@ -276,12 +265,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T12GcmReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_12\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T12GcmWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_12\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T12GcmReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_12\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T12GcmWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_12\n+            )\n+        }),\n@@ -291,12 +279,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T13GcmReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_13\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T13GcmWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_13\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T13GcmReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_13\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T13GcmWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_13\n+            )\n+        }),\n@@ -306,12 +293,11 @@\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T13GcmReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_13\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T13GcmWriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_13\n-        )\n-    }),\n+        new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T13GcmReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_13\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T13GcmWriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_13\n+            )\n+        }),\n@@ -321,21 +307,19 @@\n-            12, true, false,\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T12CC20P1305ReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_12\n-        ),\n-        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-            new T13CC20P1305ReadCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_13\n-        )\n-    },\n-            new Map.Entry[] {\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T12CC20P1305WriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_12\n-        ),\n-        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-            new T13CC20P1305WriteCipherGenerator(),\n-            ProtocolVersion.PROTOCOLS_OF_13\n-        )\n-    });\n+        12, true, false, new Map.Entry[] {\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T12CC20P1305ReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_12\n+            ),\n+            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+                new T13CC20P1305ReadCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_13\n+            )\n+        }, new Map.Entry[] {\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T12CC20P1305WriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_12\n+            ),\n+            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+                new T13CC20P1305WriteCipherGenerator(),\n+                ProtocolVersion.PROTOCOLS_OF_13\n+            )\n+        });\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLCipher.java","additions":213,"deletions":229,"binary":false,"changes":442,"status":"modified"},{"patch":"@@ -304,2 +304,0 @@\n-                                                    \/\/ extension_type (2)\n-                                                    \/\/ extension_data length(2)\n@@ -308,0 +306,2 @@\n+                \/\/ extension_type (2)\n+                \/\/ extension_data length(2)\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLExtensions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLHandshakeBinding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -585,1 +585,3 @@\n-                for (String string : strings) {\n+                int len = strings.length;\n+                for (int i = 0; i < len; i++) {\n+                    String string = strings[i];\n@@ -587,1 +589,1 @@\n-                    if (!Objects.equals(string, strings[strings.length - 1])) {\n+                    if (i != len - 1) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLLogger.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -85,2 +85,1 @@\n-    public Socket createSocket(String host, int port)\n-    throws IOException {\n+    public Socket createSocket(String host, int port) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketFactoryImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -585,0 +585,1 @@\n+        \/\/ initial handshake\n@@ -587,1 +588,0 @@\n-        \/\/ initial handshake\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/TransportContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}