{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    private String theProp;\n+    private final String theProp;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/action\/GetBooleanAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,3 +70,3 @@\n-    private String theProp;\n-    private int defaultVal;\n-    private boolean defaultSet;\n+    private final String theProp;\n+    private final int defaultVal;\n+    private final boolean defaultSet;\n@@ -82,0 +82,2 @@\n+        this.defaultVal = 0;\n+        this.defaultSet = false;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/action\/GetIntegerAction.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,3 +67,3 @@\n-    private String theProp;\n-    private long defaultVal;\n-    private boolean defaultSet = false;\n+    private final String theProp;\n+    private final long defaultVal;\n+    private final boolean defaultSet;\n@@ -79,0 +79,2 @@\n+        this.defaultVal = 0;\n+        this.defaultSet = false;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/action\/GetLongAction.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n-    private String theProp;\n-    private String defaultVal;\n+    private final String theProp;\n+    private final String defaultVal;\n@@ -65,0 +65,1 @@\n+        this.defaultVal = null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/action\/GetPropertyAction.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    public static final long serialVersionUID = -461748105810469773L;\n+    long serialVersionUID = -461748105810469773L;\n@@ -65,1 +65,1 @@\n-    public int getMajorVersion();\n+    int getMajorVersion();\n@@ -76,1 +76,1 @@\n-    public int getMinorVersion();\n+    int getMinorVersion();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/internal\/interfaces\/TlsMasterSecret.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-        if (masterSecret.getAlgorithm().equals(\"TlsMasterSecret\") == false) {\n+        if (!masterSecret.getAlgorithm().equals(\"TlsMasterSecret\")) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/internal\/spec\/TlsKeyMaterialParameterSpec.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * This class encapsulates the information necessary to calculate a SSL\/TLS\n+ * This class encapsulates the information necessary to calculate an SSL\/TLS\n","filename":"src\/java.base\/share\/classes\/sun\/security\/internal\/spec\/TlsMasterSecretParameterSpec.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-     * Returns the label to use in the PRF calcuation.\n+     * Returns the label to use in the PRF calculation.\n@@ -104,1 +104,1 @@\n-     * @return the label to use in the PRF calcuation.\n+     * @return the label to use in the PRF calculation.\n@@ -111,1 +111,1 @@\n-     * Returns a copy of the seed to use in the PRF calcuation.\n+     * Returns a copy of the seed to use in the PRF calculation.\n@@ -113,1 +113,1 @@\n-     * @return a copy of the seed to use in the PRF calcuation.\n+     * @return a copy of the seed to use in the PRF calculation.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/internal\/spec\/TlsPrfParameterSpec.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-     * the specified algorithms. See getServices(String, String) for detals.\n+     * the specified algorithms. See getServices(String, String) for details.\n@@ -257,1 +257,1 @@\n-        if (superClass.isAssignableFrom(subClass) == false) {\n+        if (!superClass.isAssignableFrom(subClass)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/GetInstance.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,1 @@\n-import java.lang.ref.*;\n-import java.security.*;\n+import java.security.SecureRandom;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/JCAUtil.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -139,1 +139,1 @@\n-        if (obj instanceof ProviderConfig == false) {\n+        if (!(obj instanceof ProviderConfig other)) {\n@@ -142,1 +142,0 @@\n-        ProviderConfig other = (ProviderConfig)obj;\n@@ -176,1 +175,1 @@\n-            if (shouldLoad() == false) {\n+            if (!shouldLoad()) {\n@@ -414,1 +413,1 @@\n-                    t = ((InvocationTargetException)e).getCause();\n+                    t = e.getCause();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderConfig.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-            if (config.getProvider().getName().equals(name) == false) {\n+            if (!config.getProvider().getName().equals(name)) {\n@@ -153,1 +153,1 @@\n-    private final List<Provider> userList = new AbstractList<Provider>() {\n+    private final List<Provider> userList = new AbstractList<>() {\n@@ -157,0 +157,1 @@\n+\n@@ -198,1 +199,1 @@\n-            if (configList.contains(config) == false) {\n+            if (!configList.contains(config)) {\n@@ -367,1 +368,1 @@\n-        ArrayList<PreferredEntry> pList = null;\n+        ArrayList<PreferredEntry> pList;\n@@ -472,1 +473,1 @@\n-                    services = new ArrayList<Service>(4);\n+                    services = new ArrayList<>(4);\n@@ -565,1 +566,1 @@\n-            return new Iterator<Service>() {\n+            return new Iterator<>() {\n@@ -590,1 +591,1 @@\n-        ArrayList<PreferredEntry> list = new ArrayList<PreferredEntry>();\n+        ArrayList<PreferredEntry> list = new ArrayList<>();\n@@ -602,1 +603,1 @@\n-            ArrayList<PreferredEntry> l = new ArrayList<PreferredEntry>();\n+            ArrayList<PreferredEntry> l = new ArrayList<>();\n@@ -615,1 +616,1 @@\n-            ArrayList<PreferredEntry> l = new ArrayList<PreferredEntry>();\n+            ArrayList<PreferredEntry> l = new ArrayList<>();\n@@ -658,1 +659,1 @@\n-    private static final String SHA2Group[] = { \"SHA-224\", \"SHA-256\",\n+    private static final String[] SHA2_GROUP = { \"SHA-224\", \"SHA-256\",\n@@ -660,1 +661,1 @@\n-    private static final String HmacSHA2Group[] = { \"HmacSHA224\",\n+    private static final String[] HMACSHA2_GROUP = { \"HmacSHA224\",\n@@ -662,1 +663,1 @@\n-    private static final String SHA2RSAGroup[] = { \"SHA224withRSA\",\n+    private static final String[] SHA2RSA_GROUP = { \"SHA224withRSA\",\n@@ -664,1 +665,1 @@\n-    private static final String SHA2DSAGroup[] = { \"SHA224withDSA\",\n+    private static final String[] SHA2DSA_GROUP = { \"SHA224withDSA\",\n@@ -666,1 +667,1 @@\n-    private static final String SHA2ECDSAGroup[] = { \"SHA224withECDSA\",\n+    private static final String[] SHA2ECDSA_GROUP = { \"SHA224withECDSA\",\n@@ -668,1 +669,1 @@\n-    private static final String SHA3Group[] = { \"SHA3-224\", \"SHA3-256\",\n+    private static final String[] SHA3_GROUP = { \"SHA3-224\", \"SHA3-256\",\n@@ -670,1 +671,1 @@\n-    private static final String HmacSHA3Group[] = { \"HmacSHA3-224\",\n+    private static final String[] HMACSHA3_GROUP = { \"HmacSHA3-224\",\n@@ -675,4 +676,4 @@\n-        private String type = null;\n-        private String algorithm;\n-        private String provider;\n-        private String alternateNames[] = null;\n+        private final String type;\n+        private final String algorithm;\n+        private final String provider;\n+        private final String[] alternateNames;\n@@ -687,0 +688,1 @@\n+                type = null;\n@@ -695,1 +697,1 @@\n-                    alternateNames = SHA2Group;\n+                    alternateNames = SHA2_GROUP;\n@@ -697,1 +699,1 @@\n-                    alternateNames = HmacSHA2Group;\n+                    alternateNames = HMACSHA2_GROUP;\n@@ -699,1 +701,1 @@\n-                    alternateNames = SHA2RSAGroup;\n+                    alternateNames = SHA2RSA_GROUP;\n@@ -701,1 +703,1 @@\n-                    alternateNames = SHA2DSAGroup;\n+                    alternateNames = SHA2DSA_GROUP;\n@@ -703,1 +705,1 @@\n-                    alternateNames = SHA2ECDSAGroup;\n+                    alternateNames = SHA2ECDSA_GROUP;\n@@ -705,1 +707,1 @@\n-                    alternateNames = SHA3Group;\n+                    alternateNames = SHA3_GROUP;\n@@ -707,1 +709,3 @@\n-                    alternateNames = HmacSHA3Group;\n+                    alternateNames = HMACSHA3_GROUP;\n+                } else {\n+                    alternateNames = null;\n@@ -718,0 +722,2 @@\n+            } else {\n+                alternateNames = null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderList.java","additions":34,"deletions":28,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-    \/\/ However, for earlier releases, it need special handling to resolve\n+    \/\/ However, for earlier releases, it needs special handling to resolve\n@@ -104,1 +104,1 @@\n-     * method and you MUST call stopJarVerification() with that object\n+     * method, and you MUST call stopJarVerification() with that object\n@@ -134,1 +134,1 @@\n-     * it is returned. Otherwise, the system wide list is returned.\n+     * it is returned. Otherwise, the system-wide list is returned.\n@@ -146,1 +146,1 @@\n-     * otherwise the system wide list.\n+     * otherwise the system-wide list.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/Providers.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -93,2 +93,1 @@\n-        throws IOException, ParsingException\n-    {\n+        throws IOException {\n@@ -105,1 +104,1 @@\n-     * @param oldStyle flag indicating whether or not the given content info\n+     * @param oldStyle flag indicating whether the given content info\n@@ -109,2 +108,1 @@\n-        throws IOException, ParsingException\n-    {\n+        throws IOException {\n@@ -180,1 +178,1 @@\n-            DerValue taggedContent = null;\n+            DerValue taggedContent;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/ContentInfo.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 1999, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    private AlgorithmId algid;\n+    private final AlgorithmId algid;\n@@ -53,1 +53,1 @@\n-    private byte[] encryptedData;\n+    private final byte[] encryptedData;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/EncryptedPrivateKeyInfo.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-    public PKCS7(InputStream in) throws ParsingException, IOException {\n+    public PKCS7(InputStream in) throws IOException {\n@@ -161,1 +161,1 @@\n-     * @param oldStyle flag indicating whether or not the given PKCS#7 block\n+     * @param oldStyle flag indicating whether the given PKCS#7 block\n@@ -215,2 +215,1 @@\n-    private void parseNetscapeCertChain(DerValue val)\n-    throws ParsingException, IOException {\n+    private void parseNetscapeCertChain(DerValue val) throws IOException {\n@@ -262,3 +261,1 @@\n-    private void parseSignedData(DerValue val)\n-        throws ParsingException, IOException {\n-\n+    private void parseSignedData(DerValue val) throws IOException {\n@@ -388,3 +385,1 @@\n-    private void parseOldSignedData(DerValue val)\n-        throws ParsingException, IOException\n-    {\n+    private void parseOldSignedData(DerValue val) throws IOException {\n@@ -534,1 +529,1 @@\n-                    implCRLs.toArray(new X509CRLImpl[implCRLs.size()]));\n+                    implCRLs.toArray(new X509CRLImpl[0]));\n@@ -768,2 +763,2 @@\n-     * @param internalsf whether the content should be include in output\n-     * @param directsign if the content is signed directly or thru authattrs\n+     * @param internalsf whether the content should be included in output\n+     * @param directsign if the content is signed directly or through authattrs\n@@ -1015,2 +1010,2 @@\n-        MessageDigest messageDigest = null;\n-        TSRequest tsQuery = null;\n+        MessageDigest messageDigest;\n+        TSRequest tsQuery;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS7.java","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-     * Default constructor. Constructors in sub-classes that create a new key\n+     * Default constructor. Constructors in subclasses that create a new key\n@@ -88,1 +88,1 @@\n-     * Another constructor. Constructors in sub-classes that create a new key\n+     * Another constructor. Constructors in subclasses that create a new key\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS8Key.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+\n@@ -510,4 +511,1 @@\n-            value = elems[0].toByteArray();\n-            break;\n-\n-        case 18:    \/\/ CMSAlgorithmProtection\n+        case 18:     \/\/ CMSAlgorithmProtection\n@@ -641,3 +639,0 @@\n-            temp.write(DerValue.tag_Set, (byte[])value);\n-            break;\n-\n@@ -748,1 +743,0 @@\n-            return sb.toString();\n@@ -760,1 +754,0 @@\n-            return sb.toString();\n@@ -762,0 +755,1 @@\n+        return sb.toString();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+\n@@ -47,1 +48,1 @@\n-        new Hashtable<ObjectIdentifier, PKCS9Attribute>(3);\n+            new Hashtable<>(3);\n@@ -126,1 +127,1 @@\n-     * not supported by the PKCS9Attribute class are ignored. Otherwise\n+     * not supported by the PKCS9Attribute class are ignored. Otherwise,\n@@ -299,2 +300,1 @@\n-            Object value = getAttribute(oid).getValue();\n-            return value;\n+            return getAttribute(oid).getValue();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attributes.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -30,0 +29,1 @@\n+import java.io.OutputStream;\n@@ -31,5 +31,0 @@\n-import java.security.cert.CertPathValidatorException;\n-import java.security.cert.CertificateException;\n-import java.security.cert.CertificateFactory;\n-import java.security.cert.CertPath;\n-import java.security.cert.X509Certificate;\n@@ -37,0 +32,1 @@\n+import java.security.cert.*;\n@@ -38,7 +34,1 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;\n@@ -50,1 +40,0 @@\n-import sun.security.x509.X500Name;\n@@ -52,0 +41,1 @@\n+import sun.security.x509.X500Name;\n@@ -84,1 +74,1 @@\n-    private Map<AlgorithmId, AlgorithmInfo> algorithms = new HashMap<>();\n+    private final Map<AlgorithmId, AlgorithmInfo> algorithms = new HashMap<>();\n@@ -115,3 +105,1 @@\n-    public SignerInfo(DerInputStream derin)\n-        throws IOException, ParsingException\n-    {\n+    public SignerInfo(DerInputStream derin) throws IOException {\n@@ -128,1 +116,1 @@\n-     * @param oldStyle flag indicating whether or not the given signer info\n+     * @param oldStyle flag indicating whether the given signer info\n@@ -132,2 +120,1 @@\n-        throws IOException, ParsingException\n-    {\n+            throws IOException {\n@@ -360,1 +347,1 @@\n-            \/\/ if there are authenticate attributes, get the message\n+            \/\/ if there are authenticated attributes, get the message\n@@ -457,1 +444,1 @@\n-                    \/\/ We don't care whether or not this extension was marked\n+                    \/\/ We don't care whether this extension was marked\n@@ -740,1 +727,1 @@\n-     * Verify all of the algorithms in the array of SignerInfos against the\n+     * Verify all the algorithms in the array of SignerInfos against the\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":12,"deletions":25,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.ArrayList;\n@@ -31,2 +30,0 @@\n-import sun.security.util.HexDumpEncoder;\n-import sun.security.util.DerInputStream;\n@@ -34,0 +31,1 @@\n+import sun.security.util.HexDumpEncoder;\n@@ -86,2 +84,0 @@\n-    private byte[] ber = null;\n-\n@@ -135,3 +131,3 @@\n-    private byte[] certHash;\n-    private GeneralNames issuer;\n-    private SerialNumber serialNumber;\n+    private final byte[] certHash;\n+    private final GeneralNames issuer;\n+    private final SerialNumber serialNumber;\n@@ -150,0 +146,3 @@\n+        } else {\n+            issuer = null;\n+            serialNumber = null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SigningCertificateInfo.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -364,5 +364,5 @@\n-    private X500Name            subject;\n-    private PublicKey           subjectPublicKeyInfo;\n-    private String              sigAlg;\n-    private PKCS10Attributes    attributeSet;\n-    private byte[]              encoded;        \/\/ signed\n+    private X500Name                subject;\n+    private final PublicKey         subjectPublicKeyInfo;\n+    private String                  sigAlg;\n+    private final PKCS10Attributes  attributeSet;\n+    private byte[]                  encoded;        \/\/ signed\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -59,2 +59,2 @@\n-    protected ObjectIdentifier  attributeId = null;\n-    protected Object            attributeValue = null;\n+    protected ObjectIdentifier  attributeId;\n+    protected Object            attributeValue;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attribute.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.security.cert.CertificateException;\n@@ -36,1 +35,4 @@\n-import sun.security.util.*;\n+import sun.security.util.DerEncoder;\n+import sun.security.util.DerInputStream;\n+import sun.security.util.DerOutputStream;\n+import sun.security.util.DerValue;\n@@ -52,2 +54,2 @@\n-    private Hashtable<String, PKCS10Attribute> map =\n-                        new Hashtable<String, PKCS10Attribute>(3);\n+    private final Hashtable<String, PKCS10Attribute> map =\n+            new Hashtable<>(3);\n@@ -177,1 +179,1 @@\n-            othersAttribs.toArray(new PKCS10Attribute[othersAttribs.size()]);\n+            othersAttribs.toArray(new PKCS10Attribute[0]);\n@@ -182,1 +184,1 @@\n-        String key = null;\n+        String key;\n@@ -187,2 +189,0 @@\n-            if (key == null)\n-                return false;\n@@ -216,2 +216,1 @@\n-        String s = map.size() + \"\\n\" + map.toString();\n-        return s;\n+        return map.size() + \"\\n\" + map;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attributes.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    private String digestAlgorithmName;\n+    private final String digestAlgorithmName;\n@@ -48,3 +48,3 @@\n-    private byte[] digest;\n-    private byte[] macSalt;\n-    private int iterations;\n+    private final byte[] digest;\n+    private final byte[] macSalt;\n+    private final int iterations;\n@@ -58,3 +58,1 @@\n-    MacData(DerInputStream derin)\n-        throws IOException, ParsingException\n-    {\n+    MacData(DerInputStream derin) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/MacData.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-    };\n+    }\n@@ -220,1 +220,1 @@\n-    };\n+    }\n@@ -275,2 +275,2 @@\n-    private Map<String, Entry> entries =\n-        Collections.synchronizedMap(new LinkedHashMap<String, Entry>());\n+    private final Map<String, Entry> entries =\n+        Collections.synchronizedMap(new LinkedHashMap<>());\n@@ -278,3 +278,3 @@\n-    private ArrayList<KeyEntry> keyList = new ArrayList<KeyEntry>();\n-    private List<X509Certificate> allCerts = new ArrayList<>();\n-    private ArrayList<CertEntry> certEntries = new ArrayList<CertEntry>();\n+    private final ArrayList<KeyEntry> keyList = new ArrayList<>();\n+    private final List<X509Certificate> allCerts = new ArrayList<>();\n+    private final ArrayList<CertEntry> certEntries = new ArrayList<>();\n@@ -301,1 +301,1 @@\n-        Key key = null;\n+        Key key;\n@@ -308,1 +308,1 @@\n-        byte[] encrBytes = null;\n+        byte[] encrBytes;\n@@ -869,1 +869,1 @@\n-        SecretKey skey = null;\n+        SecretKey skey;\n@@ -903,1 +903,1 @@\n-        throws IOException, NoSuchAlgorithmException, UnrecoverableKeyException\n+        throws UnrecoverableKeyException\n@@ -905,1 +905,1 @@\n-        byte[] key = null;\n+        byte[] key;\n@@ -1046,2 +1046,1 @@\n-        if (entry instanceof PrivateKeyEntry) {\n-            PrivateKeyEntry keyEntry = (PrivateKeyEntry) entry;\n+        if (entry instanceof PrivateKeyEntry keyEntry) {\n@@ -1110,6 +1109,2 @@\n-        if (entry instanceof CertEntry certEntry &&\n-                certEntry.trustedKeyUsage != null) {\n-            return true;\n-        } else {\n-            return false;\n-        }\n+        return entry instanceof CertEntry certEntry &&\n+                certEntry.trustedKeyUsage != null;\n@@ -1458,1 +1453,1 @@\n-                    (Certificate[])null, ske.getAttributes());\n+                        null, ske.getAttributes());\n@@ -1517,1 +1512,1 @@\n-        byte[] mData = null;\n+        byte[] mData;\n@@ -1601,1 +1596,1 @@\n-     * NSS\/Netscape require it to be unique or null, where as IE\/OpenSSL\n+     * NSS\/Netscape require it to be unique or null, whereas IE\/OpenSSL\n@@ -1635,2 +1630,2 @@\n-        \/\/ return null if all three attributes are null\n-        if ((alias == null) && (keyId == null) && (trustedKeyUsage == null)) {\n+        \/\/ return null if both attributes are null\n+        if (alias == null && keyId == null) {\n@@ -1726,7 +1721,3 @@\n-            if (entry instanceof PrivateKeyEntry) {\n-                PrivateKeyEntry keyEntry = (PrivateKeyEntry) entry;\n-                if (keyEntry.chain != null) {\n-                    certs = keyEntry.chain;\n-                } else {\n-                    certs = new Certificate[0];\n-                }\n+            if (entry instanceof PrivateKeyEntry keyEntry) {\n+                certs = (keyEntry.chain != null) ?\n+                       keyEntry.chain : new Certificate[0];\n@@ -1770,1 +1761,1 @@\n-                byte[] bagAttrs = null;\n+                byte[] bagAttrs;\n@@ -1773,2 +1764,1 @@\n-                    if (entry instanceof KeyEntry) {\n-                        KeyEntry keyEntry = (KeyEntry) entry;\n+                    if (entry instanceof KeyEntry keyEntry) {\n@@ -1818,2 +1808,1 @@\n-    private byte[] createSafeContent()\n-        throws CertificateException, IOException {\n+    private byte[] createSafeContent() throws IOException {\n@@ -1838,1 +1827,1 @@\n-                EncryptedPrivateKeyInfo encrInfo = null;\n+                EncryptedPrivateKeyInfo encrInfo;\n@@ -1911,1 +1900,1 @@\n-        byte[] encryptedData = null;\n+        byte[] encryptedData;\n@@ -2218,1 +2207,1 @@\n-            keyList.toArray(new PrivateKeyEntry[keyList.size()]);\n+            keyList.toArray(new PrivateKeyEntry[0]);\n@@ -2222,2 +2211,1 @@\n-                ArrayList<X509Certificate> chain =\n-                                new ArrayList<X509Certificate>();\n+                ArrayList<X509Certificate> chain = new ArrayList<>();\n@@ -2251,1 +2239,1 @@\n-                    entry.chain = chain.toArray(new Certificate[chain.size()]);\n+                    entry.chain = chain.toArray(new Certificate[0]);\n@@ -2399,2 +2387,1 @@\n-        throws IOException, NoSuchAlgorithmException, CertificateException\n-    {\n+        throws IOException, CertificateException {\n@@ -2520,1 +2507,1 @@\n-             * are identified by their alias. Hence we need to have an\n+             * are identified by their alias. Hence, we need to have an\n@@ -2526,2 +2513,1 @@\n-            if (bagItem instanceof KeyEntry) {\n-                KeyEntry entry = (KeyEntry)bagItem;\n+            if (bagItem instanceof KeyEntry entry) {\n@@ -2554,1 +2540,1 @@\n-                        date = null;\n+                        \/\/ date has been initialized to null\n@@ -2563,1 +2549,1 @@\n-                    keyList.add((PrivateKeyEntry) entry);\n+                    keyList.add(entry);\n@@ -2575,2 +2561,1 @@\n-            } else if (bagItem instanceof X509Certificate) {\n-                X509Certificate cert = (X509Certificate)bagItem;\n+            } else if (bagItem instanceof X509Certificate cert) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":37,"deletions":52,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- * (instantiated, nonce) and DRBG states (v, c, key, reseedCounter, etc).\n+ * (instantiated, nonce) and DRBG states (v, c, key, reseedCounter, etc.).\n@@ -81,1 +81,1 @@\n-     * Volatile, will be used in a double checked locking.\n+     * Volatile, will be used in a double-checked locking.\n@@ -346,1 +346,1 @@\n-        if (params instanceof DrbgParameters.NextBytes) {\n+        if (params instanceof DrbgParameters.NextBytes dp) {\n@@ -350,2 +350,0 @@\n-            DrbgParameters.NextBytes dp = (DrbgParameters.NextBytes) params;\n-\n@@ -381,1 +379,1 @@\n-            \/\/ Double checked locking, safe because reseedCounter is volatile\n+            \/\/ Double-checked locking, safe because reseedCounter is volatile\n@@ -413,2 +411,1 @@\n-        if (params instanceof DrbgParameters.Reseed) {\n-            DrbgParameters.Reseed dp = (DrbgParameters.Reseed) params;\n+        if (params instanceof DrbgParameters.Reseed dp) {\n@@ -545,1 +542,1 @@\n-            \/\/ another DRBG with weaker strength. So we choose highest\n+            \/\/ another DRBG with weaker strength. So we choose the highest\n@@ -575,1 +572,1 @@\n-     * A mechanism shall override this constructor to setup {@link #mechName},\n+     * A mechanism shall override this constructor to set up {@link #mechName},\n@@ -578,1 +575,1 @@\n-     * or other features like {@link #DEFAULT_STRENGTH}. Finally it shall\n+     * or other features like {@link #DEFAULT_STRENGTH}. Finally, it shall\n@@ -622,2 +619,1 @@\n-        if (params instanceof MoreDrbgParameters) {\n-            MoreDrbgParameters m = (MoreDrbgParameters)params;\n+        if (params instanceof MoreDrbgParameters m) {\n@@ -631,4 +627,1 @@\n-        if (params != null) {\n-            if (params instanceof DrbgParameters.Instantiation) {\n-                DrbgParameters.Instantiation inst =\n-                        (DrbgParameters.Instantiation) params;\n+        if (params instanceof DrbgParameters.Instantiation inst) {\n@@ -636,1 +629,1 @@\n-                \/\/ 800-90Ar1 9.1: Instantiate Process. Steps 1-5.\n+            \/\/ 800-90Ar1 9.1: Instantiate Process. Steps 1-5.\n@@ -638,5 +631,5 @@\n-                \/\/ Step 1: Check requested_instantiation_security_strength\n-                if (inst.getStrength() > highestSupportedSecurityStrength) {\n-                    throw new IllegalArgumentException(\"strength too big: \"\n-                            + inst.getStrength());\n-                }\n+            \/\/ Step 1: Check requested_instantiation_security_strength\n+            if (inst.getStrength() > highestSupportedSecurityStrength) {\n+                throw new IllegalArgumentException(\"strength too big: \"\n+                        + inst.getStrength());\n+            }\n@@ -644,5 +637,5 @@\n-                \/\/ Step 2: Check prediction_resistance_flag\n-                if (inst.getCapability().supportsPredictionResistance()\n-                        && !supportPredictionResistance) {\n-                    throw new IllegalArgumentException(\"pr not supported\");\n-                }\n+            \/\/ Step 2: Check prediction_resistance_flag\n+            if (inst.getCapability().supportsPredictionResistance()\n+                    && !supportPredictionResistance) {\n+                throw new IllegalArgumentException(\"pr not supported\");\n+            }\n@@ -650,6 +643,6 @@\n-                \/\/ Step 3: Check personalization_string\n-                byte[] ps = inst.getPersonalizationString();\n-                if (ps != null && ps.length > maxPersonalizationStringLength) {\n-                    throw new IllegalArgumentException(\"ps too long: \"\n-                            + ps.length);\n-                }\n+            \/\/ Step 3: Check personalization_string\n+            byte[] ps = inst.getPersonalizationString();\n+            if (ps != null && ps.length > maxPersonalizationStringLength) {\n+                throw new IllegalArgumentException(\"ps too long: \"\n+                        + ps.length);\n+            }\n@@ -657,11 +650,3 @@\n-                if (inst.getCapability().supportsReseeding()\n-                        && !supportReseeding) {\n-                    throw new IllegalArgumentException(\"reseed not supported\");\n-                }\n-                this.personalizationString = ps;\n-                this.predictionResistanceFlag =\n-                        inst.getCapability().supportsPredictionResistance();\n-                this.requestedInstantiationSecurityStrength = inst.getStrength();\n-            } else {\n-                throw new IllegalArgumentException(\"unknown params: \"\n-                        + params.getClass());\n+            if (inst.getCapability().supportsReseeding()\n+                    && !supportReseeding) {\n+                throw new IllegalArgumentException(\"reseed not supported\");\n@@ -669,0 +654,7 @@\n+            this.personalizationString = ps;\n+            this.predictionResistanceFlag =\n+                    inst.getCapability().supportsPredictionResistance();\n+            this.requestedInstantiationSecurityStrength = inst.getStrength();\n+        } else {\n+            throw new IllegalArgumentException(\"unknown params: \"\n+                    + params.getClass());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/AbstractDrbg.java","additions":37,"deletions":45,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,2 +69,1 @@\n-                this.securityStrength = DEFAULT_STRENGTH > supportedStrength ?\n-                        supportedStrength : DEFAULT_STRENGTH;\n+                this.securityStrength = Math.min(DEFAULT_STRENGTH, supportedStrength);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/AbstractHashDrbg.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,2 +126,2 @@\n-        private static Debug debugConfig = Debug.getInstance(\"configfile\");\n-        private static Debug debugParser = Debug.getInstance(\"configparser\");\n+        private static final Debug debugConfig = Debug.getInstance(\"configfile\");\n+        private static final Debug debugParser = Debug.getInstance(\"configparser\");\n@@ -168,1 +168,1 @@\n-            \/\/ security check.  also this class is not freely accessible\n+            \/\/ security check.  also, this class is not freely accessible\n@@ -210,1 +210,1 @@\n-            \/\/ prop so we must check both to preserve compatibility).\n+            \/\/ prop, so we must check both to preserve compatibility).\n@@ -223,1 +223,1 @@\n-                \/**\n+                \/*\n@@ -235,1 +235,1 @@\n-            \/**\n+            \/*\n@@ -257,1 +257,1 @@\n-                    URL configURL = null;\n+                    URL configURL;\n@@ -305,1 +305,1 @@\n-            if (initialized == false && n == 1 && config_url == null) {\n+            if (!initialized && n == 1) {\n@@ -356,1 +356,1 @@\n-            List<AppConfigurationEntry> list = null;\n+            List<AppConfigurationEntry> list;\n@@ -378,1 +378,1 @@\n-         * Refresh and reload the Configuration by re-reading all of the\n+         * Refresh and reload the Configuration by re-reading all the\n@@ -451,1 +451,1 @@\n-            while (peek(\"}\") == false) {\n+            while (!peek(\"}\")) {\n@@ -479,1 +479,1 @@\n-                while (peek(\";\") == false) {\n+                while (!peek(\";\")) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ConfigFile.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,2 +96,1 @@\n-                this.securityStrength = (DEFAULT_STRENGTH > supportedStrength) ?\n-                        supportedStrength : DEFAULT_STRENGTH;\n+                this.securityStrength = Math.min(DEFAULT_STRENGTH, supportedStrength);\n@@ -247,1 +246,1 @@\n-                    \/\/ Length must be represented as a 32 bit integer in df()\n+                    \/\/ Length must be represented as a 32-bit integer in df()\n@@ -331,1 +330,1 @@\n-                \/\/ 14. requested_bits = leftmost(temp, nuumber_of_bits_to_return)\n+                \/\/ 14. requested_bits = leftmost(temp, number_of_bits_to_return)\n@@ -398,1 +397,1 @@\n-                    \/\/ Length must be represented as a 32 bit integer in df()\n+                    \/\/ Length must be represented as a 32-bit integer in df()\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/CtrDrbg.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,2 +157,1 @@\n-            if (params instanceof MoreDrbgParameters) {\n-                MoreDrbgParameters m = (MoreDrbgParameters) params;\n+            if (params instanceof MoreDrbgParameters m) {\n@@ -174,3 +173,1 @@\n-            if (params instanceof DrbgParameters.Instantiation) {\n-                DrbgParameters.Instantiation dp =\n-                        (DrbgParameters.Instantiation) params;\n+            if (params instanceof DrbgParameters.Instantiation dp) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DRBG.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * Algorithm), as described in fips186-3 of the National Instute of\n+ * Algorithm), as described in fips186-3 of the National Institute of\n@@ -144,1 +144,1 @@\n-        if (!(privateKey instanceof java.security.interfaces.DSAPrivateKey)) {\n+        if (!(privateKey instanceof java.security.interfaces.DSAPrivateKey priv)) {\n@@ -149,3 +149,0 @@\n-        java.security.interfaces.DSAPrivateKey priv =\n-            (java.security.interfaces.DSAPrivateKey)privateKey;\n-\n@@ -182,1 +179,1 @@\n-        if (!(publicKey instanceof java.security.interfaces.DSAPublicKey)) {\n+        if (!(publicKey instanceof java.security.interfaces.DSAPublicKey pub)) {\n@@ -186,2 +183,0 @@\n-        java.security.interfaces.DSAPublicKey pub =\n-            (java.security.interfaces.DSAPublicKey)publicKey;\n@@ -324,2 +319,2 @@\n-        BigInteger r = null;\n-        BigInteger s = null;\n+        BigInteger r;\n+        BigInteger s;\n@@ -493,1 +488,1 @@\n-     * Return a human readable rendition of the engine.\n+     * Return a human-readable rendition of the engine.\n@@ -508,1 +503,1 @@\n-            printable += \"\\n\\tUNINIIALIZED\";\n+            printable += \"\\n\\tUNINITIALIZED\";\n@@ -712,1 +707,1 @@\n-            protected final void engineUpdate(ByteBuffer input) {\n+            protected void engineUpdate(ByteBuffer input) {\n@@ -747,1 +742,1 @@\n-            protected final int engineGetDigestLength() {\n+            protected int engineGetDigestLength() {\n@@ -752,1 +747,1 @@\n-        private Raw(boolean p1363Format) throws NoSuchAlgorithmException {\n+        private Raw(boolean p1363Format) {\n@@ -762,1 +757,1 @@\n-        public RawDSA() throws NoSuchAlgorithmException {\n+        public RawDSA() {\n@@ -771,1 +766,1 @@\n-        public RawDSAinP1363Format() throws NoSuchAlgorithmException {\n+        public RawDSAinP1363Format() {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSA.java","additions":13,"deletions":18,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,1 @@\n-            if (keySpec instanceof DSAPublicKeySpec) {\n-                DSAPublicKeySpec dsaPubKeySpec = (DSAPublicKeySpec)keySpec;\n+            if (keySpec instanceof DSAPublicKeySpec dsaPubKeySpec) {\n@@ -99,2 +98,1 @@\n-            if (keySpec instanceof DSAPrivateKeySpec) {\n-                DSAPrivateKeySpec dsaPrivKeySpec = (DSAPrivateKeySpec)keySpec;\n+            if (keySpec instanceof DSAPrivateKeySpec dsaPrivKeySpec) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAKeyFactory.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-\n-import java.security.*;\n@@ -32,0 +30,1 @@\n+import java.security.*;\n@@ -34,1 +33,0 @@\n-import java.security.spec.InvalidParameterSpecException;\n@@ -172,2 +170,1 @@\n-            KeyPair pair = new KeyPair(pub, priv);\n-            return pair;\n+            return new KeyPair(pub, priv);\n@@ -186,1 +183,1 @@\n-        BigInteger x = null;\n+        BigInteger x;\n@@ -205,2 +202,1 @@\n-        BigInteger y = g.modPow(x, p);\n-        return y;\n+        return g.modPow(x, p);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAKeyPairGenerator.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-        if (!(genParamSpec instanceof DSAGenParameterSpec)) {\n+        if (!(genParamSpec instanceof DSAGenParameterSpec dsaGenParams)) {\n@@ -111,1 +111,0 @@\n-        DSAGenParameterSpec dsaGenParams = (DSAGenParameterSpec)genParamSpec;\n@@ -127,1 +126,1 @@\n-        AlgorithmParameters algParams = null;\n+        AlgorithmParameters algParams;\n@@ -145,1 +144,2 @@\n-        } catch (InvalidParameterSpecException e) {\n+        } catch (InvalidParameterSpecException | NoSuchAlgorithmException |\n+                NoSuchProviderException e) {\n@@ -148,3 +148,0 @@\n-        } catch (NoSuchAlgorithmException | NoSuchProviderException e) {\n-            \/\/ this should never happen, because we provide it\n-            throw new RuntimeException(e.getMessage());\n@@ -153,0 +150,1 @@\n+\n@@ -206,1 +204,1 @@\n-        BigInteger resultP, resultQ, seed = null;\n+        BigInteger resultP, resultQ, seed;\n@@ -254,1 +252,1 @@\n-                    BigInteger[] result = {resultP, resultQ, seed,\n+                    return new BigInteger[]{resultP, resultQ, seed,\n@@ -256,1 +254,0 @@\n-                    return result;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAParameterGenerator.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    private BigInteger x;\n+    private final BigInteger x;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAPrivateKey.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n-import java.util.*;\n-import java.io.*;\n+import java.io.IOException;\n+import java.io.Serializable;\n@@ -31,2 +31,0 @@\n-import java.security.InvalidKeyException;\n-import java.security.ProviderException;\n@@ -34,0 +32,2 @@\n+import java.security.InvalidKeyException;\n+import java.security.interfaces.DSAParams;\n@@ -36,1 +36,0 @@\n-import java.security.interfaces.DSAParams;\n@@ -38,2 +37,0 @@\n-import sun.security.x509.X509Key;\n-import sun.security.x509.AlgIdDSA;\n@@ -42,1 +39,0 @@\n-import sun.security.util.DerValue;\n@@ -44,1 +40,3 @@\n-import sun.security.util.DerOutputStream;\n+import sun.security.util.DerValue;\n+import sun.security.x509.AlgIdDSA;\n+import sun.security.x509.X509Key;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAPublicKey.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -399,2 +399,1 @@\n-        return new Enumeration<String>() {\n-            private int index = 0;\n+        return new Enumeration<>() {\n@@ -558,1 +557,1 @@\n-                    (Collection<KeyStore>) Collections.singleton(keystore));\n+                        Collections.singleton(keystore));\n@@ -564,2 +563,1 @@\n-        return new AbstractMap.SimpleEntry<>(\"\",\n-            (Collection<KeyStore>) Collections.<KeyStore>emptyList());\n+        return new AbstractMap.SimpleEntry<>(\"\", Collections.emptyList());\n@@ -655,3 +653,1 @@\n-        if (param instanceof DomainLoadStoreParameter) {\n-            DomainLoadStoreParameter domainParameter =\n-                (DomainLoadStoreParameter) param;\n+        if (param instanceof DomainLoadStoreParameter domainParameter) {\n@@ -717,1 +713,1 @@\n-            KeyStore keystore = null;\n+            KeyStore keystore;\n@@ -746,3 +742,1 @@\n-        if (param instanceof DomainLoadStoreParameter) {\n-            DomainLoadStoreParameter domainParameter =\n-                (DomainLoadStoreParameter) param;\n+        if (param instanceof DomainLoadStoreParameter domainParameter) {\n@@ -789,1 +783,1 @@\n-        Collection<PolicyParser.DomainEntry> domains = null;\n+        Collection<PolicyParser.DomainEntry> domains;\n@@ -815,1 +809,1 @@\n-                char ch = 0;\n+                char ch;\n@@ -870,1 +864,1 @@\n-                KeyStore.ProtectionParameter keystoreProtection = null;\n+                KeyStore.ProtectionParameter keystoreProtection;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DomainKeyStore.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,3 +141,0 @@\n-            seed = hashDf(seedLen, inputs);\n-        } else {\n-            seed = hashDf(seedLen, inputs);\n@@ -145,0 +142,1 @@\n+        seed = hashDf(seedLen, inputs);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/HashDrbg.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-                    len > outLen ? outLen : len);\n+                    Math.min(len, outLen));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/HmacDrbg.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    \/\/ special JKS that uses case sensitive aliases\n+    \/\/ special JKS that uses case-sensitive aliases\n@@ -106,1 +106,1 @@\n-    };\n+    }\n@@ -112,1 +112,1 @@\n-    };\n+    }\n@@ -121,1 +121,1 @@\n-        entries = new Hashtable<String, Object>();\n+        entries = new Hashtable<>();\n@@ -659,2 +659,2 @@\n-            ByteArrayInputStream bais = null;\n-            byte[] encoded = null;\n+            ByteArrayInputStream bais;\n+            byte[] encoded;\n@@ -687,1 +687,1 @@\n-                cfs = new Hashtable<String, CertificateFactory>(3);\n+                cfs = new Hashtable<>(3);\n@@ -717,1 +717,1 @@\n-                                numOfCerts > 10 ? 10 : numOfCerts);\n+                                Math.min(numOfCerts, 10));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/JavaKeyStore.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,4 +29,0 @@\n-import java.security.Key;\n-import java.security.KeyStoreException;\n-import java.security.MessageDigest;\n-import java.security.NoSuchAlgorithmException;\n@@ -34,2 +30,2 @@\n-import java.security.UnrecoverableKeyException;\n-import java.util.*;\n+import java.security.*;\n+import java.util.Arrays;\n@@ -37,1 +33,0 @@\n-import sun.security.pkcs.PKCS8Key;\n@@ -39,2 +34,1 @@\n-import sun.security.x509.AlgorithmId;\n-import sun.security.util.ObjectIdentifier;\n+import sun.security.pkcs.PKCS8Key;\n@@ -42,1 +36,2 @@\n-import sun.security.util.DerValue;\n+import sun.security.util.ObjectIdentifier;\n+import sun.security.x509.AlgorithmId;\n@@ -113,1 +108,1 @@\n-    private MessageDigest md;\n+    private final MessageDigest md;\n@@ -234,1 +229,1 @@\n-        int encrKeyLen; \/\/ the length of the encrpyted key\n+        int encrKeyLen; \/\/ the length of the encrypted key\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/KeyProtector.java","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Arrays;\n@@ -37,1 +36,1 @@\n- * MD4 algorithim as described in internet RFC 1320.\n+ * MD4 algorithm as described in internet RFC 1320.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD4.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,4 +28,0 @@\n-import java.lang.invoke.MethodHandles;\n-import java.lang.invoke.VarHandle;\n-import java.nio.ByteOrder;\n-import java.util.Arrays;\n@@ -34,2 +30,0 @@\n-import static sun.security.provider.ByteArrayAccess.*;\n-\n@@ -39,0 +33,2 @@\n+import static sun.security.provider.ByteArrayAccess.*;\n+\n@@ -42,1 +38,1 @@\n- * MD5 algorithim as described in internet RFC 1321.\n+ * MD5 algorithm as described in internet RFC 1321.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD5.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-     * sub prime. Do not lookup in cache and do not cache the newly generated\n+     * sub-prime. Do not look up in cache and do not cache the newly generated\n@@ -160,2 +160,1 @@\n-        DSAParameterSpec spec = params.getParameterSpec(DSAParameterSpec.class);\n-        return spec;\n+        return params.getParameterSpec(DSAParameterSpec.class);\n@@ -165,2 +164,2 @@\n-        dhCache = new ConcurrentHashMap<Integer,DHParameterSpec>();\n-        dsaCache = new ConcurrentHashMap<Integer,DSAParameterSpec>();\n+        dhCache = new ConcurrentHashMap<>();\n+        dsaCache = new ConcurrentHashMap<>();\n@@ -176,1 +175,1 @@\n-         * instead of SHA (for both the G function and the message\n+         * instead of SHA for both the G function and the message\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ParameterCache.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n- * The Policy object evaluates the global policy in light of who the\n+ * The Policy object evaluates the global policy in light of whom the\n@@ -82,1 +82,1 @@\n-    private Vector<GrantEntry> grantEntries;\n+    private final Vector<GrantEntry> grantEntries;\n@@ -117,1 +117,1 @@\n-        grantEntries = new Vector<GrantEntry>();\n+        grantEntries = new Vector<>();\n@@ -146,1 +146,1 @@\n-        \/**\n+        \/*\n@@ -172,1 +172,1 @@\n-        \/**\n+        \/*\n@@ -203,10 +203,8 @@\n-                if (de != null) {\n-                    String domainName = de.getName();\n-                    if (domainEntries.putIfAbsent(domainName, de) != null) {\n-                        LocalizedMessage localizedMsg = new LocalizedMessage(\n-                            \"duplicate.keystore.domain.name\");\n-                        Object[] source = {domainName};\n-                        String msg = \"duplicate keystore domain name: \" +\n-                                     domainName;\n-                        throw new ParsingException(msg, localizedMsg, source);\n-                    }\n+                String domainName = de.getName();\n+                if (domainEntries.putIfAbsent(domainName, de) != null) {\n+                    LocalizedMessage localizedMsg = new LocalizedMessage(\n+                        \"duplicate.keystore.domain.name\");\n+                    Object[] source = {domainName};\n+                    String msg = \"duplicate keystore domain name: \" +\n+                                 domainName;\n+                    throw new ParsingException(msg, localizedMsg, source);\n@@ -576,1 +574,1 @@\n-        return (ignoreEntry == true) ? null : e;\n+        return (ignoreEntry) ? null : e;\n@@ -621,1 +619,0 @@\n-        boolean ignoreEntry = false;\n@@ -623,1 +620,1 @@\n-        String name = null;\n+        String name;\n@@ -649,1 +646,1 @@\n-        return (ignoreEntry == true) ? null : domainEntry;\n+        return domainEntry;\n@@ -873,2 +870,2 @@\n-            principals = new LinkedList<PrincipalEntry>();\n-            permissionEntries = new Vector<PermissionEntry>();\n+            principals = new LinkedList<>();\n+            permissionEntries = new Vector<>();\n@@ -880,2 +877,2 @@\n-            principals = new LinkedList<PrincipalEntry>();\n-            permissionEntries = new Vector<PermissionEntry>();\n+            principals = new LinkedList<>();\n+            permissionEntries = new Vector<>();\n@@ -957,3 +954,2 @@\n-            ge.principals = new LinkedList<PrincipalEntry>(this.principals);\n-            ge.permissionEntries =\n-                        new Vector<PermissionEntry>(this.permissionEntries);\n+            ge.principals = new LinkedList<>(this.principals);\n+            ge.permissionEntries = new Vector<>(this.permissionEntries);\n@@ -1062,1 +1058,1 @@\n-            if (!(obj instanceof PrincipalEntry))\n+            if (!(obj instanceof PrincipalEntry that))\n@@ -1065,1 +1061,0 @@\n-            PrincipalEntry that = (PrincipalEntry)obj;\n@@ -1143,1 +1138,1 @@\n-            if (! (obj instanceof PermissionEntry))\n+            if (! (obj instanceof PermissionEntry that))\n@@ -1146,2 +1141,0 @@\n-            PermissionEntry that = (PermissionEntry) obj;\n-\n@@ -1167,1 +1160,1 @@\n-                if (that.signedBy != null) return false;\n+                return that.signedBy == null;\n@@ -1169,1 +1162,1 @@\n-                if (!this.signedBy.equals(that.signedBy)) return false;\n+                return this.signedBy.equals(that.signedBy);\n@@ -1173,1 +1166,0 @@\n-            return true;\n@@ -1188,1 +1180,1 @@\n-                out.print(name.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"\\\\\\\"\", \"\\\\\\\\\\\\\\\"\"));\n+                out.print(name.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"\\\"\", \"\\\\\\\\\\\\\\\"\"));\n@@ -1259,4 +1251,2 @@\n-            if (entries != null) {\n-                for (KeyStoreEntry entry : entries.values()) {\n-                    s.append(entry).append(\"\\n\");\n-                }\n+            for (KeyStoreEntry entry : entries.values()) {\n+                s.append(entry).append(\"\\n\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/PolicyParser.java","additions":29,"deletions":39,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -28,0 +28,4 @@\n+import java.security.ProviderException;\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n@@ -29,4 +33,2 @@\n-import static sun.security.provider.ByteArrayAccess.*;\n-import java.nio.*;\n-import java.util.*;\n-import java.security.*;\n+import static sun.security.provider.ByteArrayAccess.b2lLittle;\n+import static sun.security.provider.ByteArrayAccess.l2bLittle;\n@@ -197,1 +199,1 @@\n-            \/**\n+            \/*\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA3.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -242,1 +242,1 @@\n-    private final void implCompress0(byte[] buf, int ofs) {\n+    private void implCompress0(byte[] buf, int ofs) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA5.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.util.Arrays;\n@@ -35,1 +36,1 @@\n- * <p>This class provides a crytpographically strong pseudo-random number\n+ * <p>This class provides a cryptographically strong pseudo-random number\n@@ -160,3 +161,1 @@\n-            for (int i = 0; i < state.length; i++) {\n-                state[i] = 0;\n-            }\n+            Arrays.fill(state, (byte) 0);\n@@ -236,2 +235,1 @@\n-            todo = (result.length - index) < (DIGEST_SIZE - r) ?\n-                        (result.length - index) : (DIGEST_SIZE - r);\n+            todo = Math.min(result.length - index, DIGEST_SIZE - r);\n@@ -255,2 +253,1 @@\n-            todo = (result.length - index) > DIGEST_SIZE ?\n-                DIGEST_SIZE : result.length - index;\n+            todo = Math.min((result.length - index), DIGEST_SIZE);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SecureRandom.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * and then XORed together. This process is non linear and\n+ * and then XORed together. This process is non-linear and\n@@ -41,1 +41,1 @@\n- * was designed to have even statistical distribution; it's specific\n+ * was designed to have even statistical distribution; its specific\n@@ -48,1 +48,1 @@\n- * thus allowing the system to continue performing it's different\n+ * thus allowing the system to continue performing its different\n@@ -189,1 +189,1 @@\n-                            \/\/ should be used. Otherwise on a machine with too\n+                            \/\/ should be used. Otherwise, on a machine with too\n@@ -272,1 +272,1 @@\n-        private byte[] pool;\n+        private final byte[] pool;\n@@ -362,1 +362,1 @@\n-                            synchronized(this){};\n+                            synchronized(this){}\n@@ -488,1 +488,1 @@\n-        private String deviceName;\n+        private final String deviceName;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SeedGenerator.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-    private Subject subject;\n-    private LinkedList<PrincipalEntry> principals;\n+    private final Subject subject;\n+    private final LinkedList<PrincipalEntry> principals;\n@@ -58,1 +58,1 @@\n-    private ClassLoader sysClassLoader;\n+    private final ClassLoader sysClassLoader;\n@@ -234,1 +234,1 @@\n-                    subjectList = new LinkedList<PrincipalEntry>();\n+                    subjectList = new LinkedList<>();\n@@ -318,1 +318,1 @@\n-        if (super.equals(obj) == false)\n+        if (!super.equals(obj))\n@@ -321,1 +321,1 @@\n-        if (!(obj instanceof SubjectCodeSource))\n+        if (!(obj instanceof SubjectCodeSource that))\n@@ -324,2 +324,0 @@\n-        SubjectCodeSource that = (SubjectCodeSource)obj;\n-\n@@ -338,5 +336,3 @@\n-        if (this.principals != null && that.principals != null) {\n-            if (!this.principals.containsAll(that.principals) ||\n-                !that.principals.containsAll(this.principals))\n-\n-                return false;\n+        if (this.principals != null) {\n+            return this.principals.containsAll(that.principals) &&\n+                    that.principals.containsAll(this.principals);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SubjectCodeSource.java","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,4 +28,12 @@\n-import java.io.*;\n-import java.net.*;\n-import java.util.*;\n-import java.security.*;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.security.Provider;\n+import java.security.Security;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.LinkedHashSet;\n@@ -35,1 +43,1 @@\n-import sun.security.util.SecurityProviderConstants;\n+\n@@ -315,1 +323,1 @@\n-    private LinkedHashSet<Provider.Service> services;\n+    private final LinkedHashSet<Provider.Service> services;\n@@ -361,1 +369,1 @@\n-     * URISyntaxException we make best efforts for backwards\n+     * URISyntaxException we make the best efforts for backwards\n@@ -384,1 +392,1 @@\n-             * Make best effort to access this File.\n+             * Make the best effort to access this File.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SunEntries.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.util.*;\n@@ -32,0 +31,1 @@\n+import java.util.*;\n@@ -35,3 +35,1 @@\n-import sun.security.util.KeyUtil;\n-import sun.security.util.Pem;\n-import sun.security.x509.*;\n+\n@@ -39,0 +37,1 @@\n+import sun.security.pkcs.ParsingException;\n@@ -41,1 +40,0 @@\n-import sun.security.util.DerValue;\n@@ -43,2 +41,4 @@\n-import java.util.Base64;\n-import sun.security.pkcs.ParsingException;\n+import sun.security.util.DerValue;\n+import sun.security.util.KeyUtil;\n+import sun.security.x509.X509CRLImpl;\n+import sun.security.x509.X509CertImpl;\n@@ -133,1 +133,1 @@\n-            int n = in.read(buffer, 0, length<2048?length:2048);\n+            int n = in.read(buffer, 0, Math.min(length, 2048));\n@@ -679,1 +679,1 @@\n-     * encoding and will read all of the sub-sections in a recursive way\n+     * encoding and will read all the subsections in a recursive way\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/X509Factory.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,5 +199,1 @@\n-        if (!super.match(cert)) {\n-            return false;\n-        }\n-\n-        return true;\n+        return super.match(cert);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/AdaptableX509CertSelector.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-    private ArrayList<BuildStep> mStepList;\n+    private final ArrayList<BuildStep> mStepList;\n@@ -91,1 +91,1 @@\n-    private List<List<Vertex>> mOrigList;\n+    private final List<List<Vertex>> mOrigList;\n@@ -101,1 +101,1 @@\n-        mStepList = new ArrayList<BuildStep>();\n+        mStepList = new ArrayList<>();\n@@ -154,1 +154,1 @@\n-            \/\/ this point. This is based on whether or not any\n+            \/\/ this point. This is based on whether any\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/AdjacencyList.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,7 +28,0 @@\n-import java.security.AlgorithmConstraints;\n-import java.security.CryptoPrimitive;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Date;\n-import java.util.Set;\n-import java.util.EnumSet;\n@@ -36,4 +29,2 @@\n-import java.security.PublicKey;\n-import java.security.KeyFactory;\n-import java.security.AlgorithmParameters;\n-import java.security.GeneralSecurityException;\n+import java.security.*;\n+import java.security.cert.*;\n@@ -41,6 +32,0 @@\n-import java.security.cert.X509Certificate;\n-import java.security.cert.PKIXCertPathChecker;\n-import java.security.cert.TrustAnchor;\n-import java.security.cert.CRLException;\n-import java.security.cert.CertificateException;\n-import java.security.cert.CertPathValidatorException;\n@@ -48,1 +33,0 @@\n-import java.security.cert.PKIXReason;\n@@ -52,0 +36,1 @@\n+import java.util.*;\n@@ -53,1 +38,0 @@\n-import sun.security.util.ConstraintsParameters;\n@@ -178,1 +162,1 @@\n-        \/\/  will always returns false.\n+        \/\/  will always return false.\n@@ -218,3 +202,1 @@\n-        if (constraints instanceof DisabledAlgorithmConstraints) {\n-            DisabledAlgorithmConstraints dac =\n-                (DisabledAlgorithmConstraints)constraints;\n+        if (constraints instanceof DisabledAlgorithmConstraints dac) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/AlgorithmChecker.java","additions":6,"deletions":24,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    private Vertex          vertex;\n+    private final Vertex    vertex;\n@@ -44,1 +44,1 @@\n-    private int             result;\n+    private final int       result;\n@@ -190,7 +190,3 @@\n-        String resultString = \"\";\n-        switch (res) {\n-            case POSSIBLE:\n-                resultString = \"Certificate to be tried.\\n\";\n-                break;\n-            case BACK:\n-                resultString = \"Certificate backed out since path does not \"\n+        return switch (res) {\n+            case POSSIBLE -> \"Certificate to be tried.\\n\";\n+            case BACK -> \"Certificate backed out since path does not \"\n@@ -198,6 +194,2 @@\n-                break;\n-            case FOLLOW:\n-                resultString = \"Certificate satisfies conditions.\\n\";\n-                break;\n-            case FAIL:\n-                resultString = \"Certificate backed out since path does not \"\n+            case FOLLOW, SUCCEED -> \"Certificate satisfies conditions.\\n\";\n+            case FAIL -> \"Certificate backed out since path does not \"\n@@ -205,8 +197,2 @@\n-                break;\n-            case SUCCEED:\n-                resultString = \"Certificate satisfies conditions.\\n\";\n-                break;\n-            default:\n-                resultString = \"Internal error: Invalid step result value.\\n\";\n-        }\n-        return resultString;\n+            default -> \"Internal error: Invalid step result value.\\n\";\n+        };\n@@ -223,1 +209,1 @@\n-        String out = \"Internal Error\\n\";\n+        String out;\n@@ -259,3 +245,1 @@\n-        case POSSIBLE:\n-            break;\n-        default:\n+            default:\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/BuildStep.java","additions":12,"deletions":28,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-     * Authority Information Access extension shall be enabled. Currently\n+     * Authority Information Access extension shall be enabled. Currently,\n@@ -160,1 +160,0 @@\n-            break;\n@@ -206,1 +205,0 @@\n-            return (test.subtreeDepth()-base.subtreeDepth());\n@@ -332,1 +330,1 @@\n-            \/\/ going to modify this object later and we don't want to\n+            \/\/ going to modify this object later, and we don't want to\n@@ -406,1 +404,1 @@\n-                matchingPolicies = Collections.<String>emptySet();\n+                matchingPolicies = Collections.emptySet();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/Builder.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        MessageDigest md = null;\n+        MessageDigest md;\n@@ -209,8 +209,4 @@\n-        if (hashAlgId.equals(that.getHashAlgorithm()) &&\n-            Arrays.equals(issuerNameHash, that.getIssuerNameHash()) &&\n-            Arrays.equals(issuerKeyHash, that.getIssuerKeyHash()) &&\n-            certSerialNumber.getNumber().equals(that.getSerialNumber())) {\n-            return true;\n-        } else {\n-            return false;\n-        }\n+        return hashAlgId.equals(that.getHashAlgorithm()) &&\n+                Arrays.equals(issuerNameHash, that.getIssuerNameHash()) &&\n+                Arrays.equals(issuerKeyHash, that.getIssuerKeyHash()) &&\n+                certSerialNumber.getNumber().equals(that.getSerialNumber());\n@@ -223,4 +219,0 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(\"CertId \\n\");\n-        sb.append(\"Algorithm: \" + hashAlgId.toString() +\"\\n\");\n-        sb.append(\"issuerNameHash \\n\");\n@@ -228,5 +220,7 @@\n-        sb.append(encoder.encode(issuerNameHash));\n-        sb.append(\"\\nissuerKeyHash: \\n\");\n-        sb.append(encoder.encode(issuerKeyHash));\n-        sb.append(\"\\n\" +  certSerialNumber.toString());\n-        return sb.toString();\n+        return \"CertId \\n\" +\n+                \"Algorithm: \" + hashAlgId.toString() + \"\\n\" +\n+                \"issuerNameHash \\n\" +\n+                encoder.encode(issuerNameHash) +\n+                \"\\nissuerKeyHash: \\n\" +\n+                encoder.encode(issuerKeyHash) +\n+                \"\\n\" + certSerialNumber.toString();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/CertId.java","additions":12,"deletions":18,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        return (anchor == null) ? false : instance.implIsJdkCA(anchor);\n+        return anchor != null && instance.implIsJdkCA(anchor);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/CertPathHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,1 @@\n-import java.security.cert.Certificate;\n-import java.security.cert.CRL;\n+import java.security.cert.*;\n@@ -34,7 +33,0 @@\n-import java.security.cert.CertSelector;\n-import java.security.cert.CertStore;\n-import java.security.cert.CertStoreException;\n-import java.security.cert.CertStoreParameters;\n-import java.security.cert.CollectionCertStoreParameters;\n-import java.security.cert.CRLSelector;\n-import java.security.cert.CertStoreSpi;\n@@ -81,1 +73,1 @@\n-    private Collection<?> coll;\n+    private final Collection<?> coll;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/CollectionCertStore.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,1 +198,1 @@\n-                return newConstraints;\n+                return null;\n@@ -201,1 +201,1 @@\n-                \/\/ going to modify this object later and we don't want to\n+                \/\/ going to modify this object later, and we don't want to\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ConstraintsChecker.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-import java.io.*;\n+import java.io.IOException;\n@@ -30,1 +30,4 @@\n-import java.security.*;\n+import java.security.GeneralSecurityException;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.PublicKey;\n@@ -32,1 +35,0 @@\n-import javax.security.auth.x500.X500Principal;\n@@ -34,0 +36,1 @@\n+import javax.security.auth.x500.X500Principal;\n@@ -37,2 +40,0 @@\n-import sun.security.validator.Validator;\n-import static sun.security.x509.PKIXExtensions.*;\n@@ -41,0 +42,2 @@\n+import static sun.security.x509.PKIXExtensions.IssuingDistributionPoint_Id;\n+\n@@ -222,1 +225,1 @@\n-        CertStore ucs = null;\n+        CertStore ucs;\n@@ -334,3 +337,2 @@\n-                ((Boolean) idpExt.get\n-                    (IssuingDistributionPointExtension.INDIRECT_CRL)).equals\n-                        (Boolean.FALSE)) {\n+                    idpExt.get (IssuingDistributionPointExtension.INDIRECT_CRL)\n+                    == (Boolean.FALSE)) {\n@@ -343,1 +345,1 @@\n-                if (crlIssuer.equals(name) == true) {\n+                if (crlIssuer.equals(name)) {\n@@ -348,1 +350,1 @@\n-            if (match == false) {\n+            if (!match) {\n@@ -360,1 +362,1 @@\n-        } else if (crlIssuer.equals(certIssuer) == false) {\n+        } else if (!crlIssuer.equals(certIssuer)) {\n@@ -480,1 +482,1 @@\n-                         !match && t.hasNext(); ) {\n+                            !match && t.hasNext(); ) {\n@@ -483,1 +485,1 @@\n-                             !match && i.hasNext(); ) {\n+                                !match && i.hasNext(); ) {\n@@ -553,1 +555,1 @@\n-        } else if (idpExt == null || reasons == null) {\n+        } else {\n@@ -566,1 +568,1 @@\n-        for (int i = 0; i < interimReasonsMask.length && !oneOrMore; i++) {\n+        for (int i = 0; i < interimReasonsMask.length; i++) {\n@@ -568,2 +570,1 @@\n-                    !(i < reasonsMask.length && reasonsMask[i]))\n-            {\n+                    !(i < reasonsMask.length && reasonsMask[i])) {\n@@ -571,0 +572,1 @@\n+                break;\n@@ -586,1 +588,1 @@\n-            \/\/ Currently by default, forward builder does not enable\n+            \/\/ Currently, by default, forward builder does not enable\n@@ -635,1 +637,1 @@\n-            PKIXBuilderParameters params = null;\n+            PKIXBuilderParameters params;\n@@ -726,1 +728,1 @@\n-        boolean matched = false;\n+        boolean matched;\n@@ -760,1 +762,0 @@\n-                matched = true;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/DistributionPointFetcher.java","additions":24,"deletions":23,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    private boolean searchAllCertStores = true;\n+    private final boolean searchAllCertStores;\n@@ -101,1 +101,1 @@\n-     * PKIX state (name constraints, policy constraints, etc).\n+     * PKIX state (name constraints, policy constraints, etc.).\n@@ -110,1 +110,1 @@\n-        throws CertStoreException, CertificateException, IOException\n+        throws IOException\n@@ -200,1 +200,1 @@\n-        X509CertSelector sel = null;\n+        X509CertSelector sel;\n@@ -358,1 +358,1 @@\n-        if (Builder.USE_AIA == false) {\n+        if (!Builder.USE_AIA) {\n@@ -546,1 +546,1 @@\n-                    } else if (distanceTto1 <= 0 && distanceTto2 > 0) {\n+                    } else if (distanceTto1 <= 0) {\n@@ -578,1 +578,1 @@\n-                    } else if (distanceTto1 >= 0 && distanceTto2 < 0) {\n+                    } else if (distanceTto1 >= 0) {\n@@ -681,1 +681,1 @@\n-     * matches the target subject, then steps in 6.1.4 of the PKIX\n+     * matches the target subject) then steps in 6.1.4 of the PKIX\n@@ -683,1 +683,1 @@\n-     * regardless of whether or not the last cert is an end-entity\n+     * regardless of whether the last cert is an end-entity\n@@ -706,1 +706,1 @@\n-        currState.untrustedChecker.check(cert, Collections.<String>emptySet());\n+        currState.untrustedChecker.check(cert, Collections.emptySet());\n@@ -735,1 +735,1 @@\n-                unresCritExts = Collections.<String>emptySet();\n+                unresCritExts = Collections.emptySet();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ForwardBuilder.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,10 +116,8 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(\"State [\");\n-        sb.append(\"\\n  issuerDN of last cert: \").append(issuerDN);\n-        sb.append(\"\\n  traversedCACerts: \").append(traversedCACerts);\n-        sb.append(\"\\n  init: \").append(init);\n-        sb.append(\"\\n  keyParamsNeeded: \").append(keyParamsNeededFlag);\n-        sb.append(\"\\n  subjectNamesTraversed: \\n\").append\n-                 (subjectNamesTraversed);\n-        sb.append(\"]\\n\");\n-        return sb.toString();\n+        return \"State [\" +\n+                \"\\n  issuerDN of last cert: \" + issuerDN +\n+                \"\\n  traversedCACerts: \" + traversedCACerts +\n+                \"\\n  init: \" + init +\n+                \"\\n  keyParamsNeeded: \" + keyParamsNeededFlag +\n+                \"\\n  subjectNamesTraversed: \\n\" +\n+                subjectNamesTraversed +\n+                \"]\\n\";\n@@ -136,1 +134,1 @@\n-        subjectNamesTraversed = new HashSet<GeneralNameInterface>();\n+        subjectNamesTraversed = new HashSet<>();\n@@ -143,1 +141,1 @@\n-        forwardCheckers = new ArrayList<PKIXCertPathChecker>();\n+        forwardCheckers = new ArrayList<>();\n@@ -241,1 +239,1 @@\n-                if (checker instanceof Cloneable) {\n+                if (checker != null) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ForwardState.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,2 +141,2 @@\n-        certSubjects = new HashMap<X500Principal, Object>();\n-        crlIssuers = new HashMap<X500Principal, Object>();\n+        certSubjects = new HashMap<>();\n+        crlIssuers = new HashMap<>();\n@@ -152,1 +152,1 @@\n-                    otherCertificates = new HashSet<Certificate>();\n+                    otherCertificates = new HashSet<>();\n@@ -157,1 +157,1 @@\n-                    otherCRLs = new HashSet<CRL>();\n+                    otherCRLs = new HashSet<>();\n@@ -165,1 +165,1 @@\n-            otherCertificates = Collections.<Certificate>emptySet();\n+            otherCertificates = Collections.emptySet();\n@@ -168,1 +168,1 @@\n-            otherCRLs = Collections.<CRL>emptySet();\n+            otherCRLs = Collections.emptySet();\n@@ -190,1 +190,1 @@\n-                if (list.contains(cert) == false) {\n+                if (!list.contains(cert)) {\n@@ -217,1 +217,1 @@\n-                if (list.contains(crl) == false) {\n+                if (!list.contains(crl)) {\n@@ -249,1 +249,1 @@\n-        if (selector instanceof X509CertSelector == false) {\n+        if (!(selector instanceof X509CertSelector x509Selector)) {\n@@ -263,1 +263,0 @@\n-        X509CertSelector x509Selector = (X509CertSelector)selector;\n@@ -278,2 +277,1 @@\n-            if (entry instanceof X509Certificate) {\n-                X509Certificate x509Entry = (X509Certificate)entry;\n+            if (entry instanceof X509Certificate x509Entry) {\n@@ -312,2 +310,1 @@\n-            if (obj instanceof X509Certificate) {\n-                X509Certificate cert = (X509Certificate)obj;\n+            if (obj instanceof X509Certificate cert) {\n@@ -353,1 +350,1 @@\n-        if (selector instanceof X509CRLSelector == false) {\n+        if (!(selector instanceof X509CRLSelector x509Selector)) {\n@@ -365,1 +362,1 @@\n-            return Collections.<CRL>emptySet();\n+            return Collections.emptySet();\n@@ -367,1 +364,0 @@\n-        X509CRLSelector x509Selector = (X509CRLSelector)selector;\n@@ -376,2 +372,1 @@\n-                } else if (entry instanceof X509CRL) {\n-                    X509CRL crl = (X509CRL)entry;\n+                } else if (entry instanceof X509CRL crl) {\n@@ -406,2 +401,1 @@\n-            if (obj instanceof X509CRL) {\n-                X509CRL crl = (X509CRL)obj;\n+            if (obj instanceof X509CRL crl) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/IndexedCollectionCertStore.java","additions":16,"deletions":22,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-                targetConstraints.match(currCert) == false) {\n+                !targetConstraints.match(currCert)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/KeyChecker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n- * OCSP. It is not a PKIXCertPathChecker and therefore can be used outside of\n+ * OCSP. It is not a PKIXCertPathChecker and therefore can be used outside\n@@ -63,1 +63,1 @@\n- * incur the overhead of validating all of the certificates in the\n+ * incur the overhead of validating all the certificates in the\n@@ -131,1 +131,1 @@\n-        OCSPResponse ocspResponse = null;\n+        OCSPResponse ocspResponse;\n@@ -274,2 +274,2 @@\n-    public static interface RevocationStatus {\n-        public enum CertStatus { GOOD, REVOKED, UNKNOWN };\n+    public interface RevocationStatus {\n+        enum CertStatus { GOOD, REVOKED, UNKNOWN }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSP.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    private byte[] nonceData = null;\n+    private final byte[] nonceData;\n@@ -169,5 +169,3 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(EXTENSION_NAME).append(\": \");\n-        sb.append((nonceData == null) ? \"\" : Debug.toString(nonceData));\n-        sb.append(\"\\n\");\n-        return sb.toString();\n+        return super.toString() + EXTENSION_NAME + \": \" +\n+                ((nonceData == null) ? \"\" : Debug.toString(nonceData)) +\n+                \"\\n\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSPNonceExtension.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-        this.extensions = Collections.<Extension>emptyList();\n+        this.extensions = Collections.emptyList();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSPRequest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -132,1 +132,2 @@\n-    };\n+    }\n+\n@@ -174,1 +175,1 @@\n-    \/\/ an array of all of the CRLReasons (used in SingleResponse)\n+    \/\/ an array of all the CRLReasons (used in SingleResponse)\n@@ -183,1 +184,1 @@\n-    private List<X509CertImpl> certs;\n+    private final List<X509CertImpl> certs;\n@@ -221,1 +222,1 @@\n-            certs = new ArrayList<X509CertImpl>();\n+            certs = new ArrayList<>();\n@@ -246,1 +247,1 @@\n-        if (responseType.equals((Object)OCSP_BASIC_RESPONSE_OID)) {\n+        if (responseType.equals(OCSP_BASIC_RESPONSE_OID)) {\n@@ -354,1 +355,1 @@\n-            certs = new ArrayList<X509CertImpl>(derCerts.length);\n+            certs = new ArrayList<>(derCerts.length);\n@@ -370,1 +371,1 @@\n-            certs = new ArrayList<X509CertImpl>();\n+            certs = new ArrayList<>();\n@@ -393,1 +394,1 @@\n-        \/\/ Check that the response includes a response for all of the\n+        \/\/ Check that the response includes a response for all the\n@@ -442,1 +443,1 @@\n-                    if (certKeyId != null && ridKeyId.equals(certKeyId)) {\n+                    if (ridKeyId.equals(certKeyId)) {\n@@ -514,1 +515,1 @@\n-                algChecker.check(signerCert, Collections.<String>emptySet());\n+                algChecker.check(signerCert, Collections.emptySet());\n@@ -702,1 +703,1 @@\n-     *      if no responder ID is in the body of the response (e.g. a\n+     *      if no responder ID is in the body of the response, e.g. a\n@@ -1074,5 +1075,3 @@\n-            StringBuilder sb = new StringBuilder();\n-            sb.append(\"Issuer Info:\\n\");\n-            sb.append(\"Name: \").append(name.toString()).append(\"\\n\");\n-            sb.append(\"Public Key:\\n\").append(pubKey.toString()).append(\"\\n\");\n-            return sb.toString();\n+            return \"Issuer Info:\\n\" +\n+                    \"Name: \" + name.toString() + \"\\n\" +\n+                    \"Public Key:\\n\" + pubKey.toString() + \"\\n\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSPResponse.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-        private Set<TrustAnchor> anchors;\n+        private final Set<TrustAnchor> anchors;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/PKIX.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-                unresCritExts = Collections.<String>emptySet();\n+                unresCritExts = Collections.emptySet();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/PKIXMasterCertPathValidator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-            this.initPolicies = new HashSet<String>(initialPolicies);\n+            this.initPolicies = new HashSet<>(initialPolicies);\n@@ -216,1 +216,1 @@\n-        X509CertImpl currCertImpl = null;\n+        X509CertImpl currCertImpl;\n@@ -231,1 +231,1 @@\n-                                                 finalCert);\n+                    false);\n@@ -433,1 +433,1 @@\n-        PolicyNodeImpl rootNode = null;\n+        PolicyNodeImpl rootNode;\n@@ -548,2 +548,1 @@\n-        if ((rootNode != null) && (!initPolicies.contains(ANY_POLICY))\n-            && (currCertPolicies != null)) {\n+        if (rootNode != null && !initPolicies.contains(ANY_POLICY)) {\n@@ -564,1 +563,1 @@\n-                                             finalCert);\n+                    true);\n@@ -613,1 +612,1 @@\n-            if (rootNode.getChildren().hasNext() == false) {\n+            if (!rootNode.getChildren().hasNext()) {\n@@ -651,1 +650,0 @@\n-     * @exception CertPathValidatorException Exception thrown if error occurs.\n@@ -657,2 +655,1 @@\n-        boolean matchAny) throws CertPathValidatorException\n-    {\n+        boolean matchAny) {\n@@ -677,1 +674,0 @@\n-            String curParPolicy = curParent.getValidPolicy();\n@@ -680,1 +676,1 @@\n-            Set<String> curExpPols = null;\n+            Set<String> curExpPols;\n@@ -710,1 +706,1 @@\n-                curExpPols = new HashSet<String>();\n+                curExpPols = new HashSet<>();\n@@ -753,1 +749,1 @@\n-        List<CertificatePolicyMap> maps = null;\n+        List<CertificatePolicyMap> maps;\n@@ -860,1 +856,1 @@\n-        List<PolicyInformation> policyInfo = null;\n+        List<PolicyInformation> policyInfo;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/PolicyChecker.java","additions":13,"deletions":17,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,7 +28,1 @@\n-import sun.security.util.KnownOIDs;\n-\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.Iterator;\n-import java.util.Set;\n-\n+import java.util.*;\n@@ -37,0 +31,2 @@\n+import sun.security.util.KnownOIDs;\n+\n@@ -59,2 +55,2 @@\n-    private PolicyNodeImpl mParent;\n-    private HashSet<PolicyNodeImpl> mChildren;\n+    private final PolicyNodeImpl mParent;\n+    private final HashSet<PolicyNodeImpl> mChildren;\n@@ -63,4 +59,4 @@\n-    private String mValidPolicy;\n-    private HashSet<PolicyQualifierInfo> mQualifierSet;\n-    private boolean mCriticalityIndicator;\n-    private HashSet<String> mExpectedPolicySet;\n+    private final String mValidPolicy;\n+    private final HashSet<PolicyQualifierInfo> mQualifierSet;\n+    private final boolean mCriticalityIndicator;\n+    private final HashSet<String> mExpectedPolicySet;\n@@ -70,1 +66,1 @@\n-    private int mDepth;\n+    private final int mDepth;\n@@ -86,1 +82,1 @@\n-     * @param criticalityIndicator a boolean representing whether or not the\n+     * @param criticalityIndicator a boolean representing whether the\n@@ -97,1 +93,1 @@\n-        mChildren = new HashSet<PolicyNodeImpl>();\n+        mChildren = new HashSet<>();\n@@ -99,4 +95,1 @@\n-        if (validPolicy != null)\n-            mValidPolicy = validPolicy;\n-        else\n-            mValidPolicy = \"\";\n+        mValidPolicy = (validPolicy != null) ? validPolicy : \"\";\n@@ -105,1 +98,1 @@\n-            mQualifierSet = new HashSet<PolicyQualifierInfo>(qualifierSet);\n+            mQualifierSet = new HashSet<>(qualifierSet);\n@@ -107,1 +100,1 @@\n-            mQualifierSet = new HashSet<PolicyQualifierInfo>();\n+            mQualifierSet = new HashSet<>();\n@@ -112,1 +105,1 @@\n-            mExpectedPolicySet = new HashSet<String>(expectedPolicySet);\n+            mExpectedPolicySet = new HashSet<>(expectedPolicySet);\n@@ -114,1 +107,1 @@\n-            mExpectedPolicySet = new HashSet<String>();\n+            mExpectedPolicySet = new HashSet<>();\n@@ -316,1 +309,1 @@\n-        \/\/ if we've reached the desired depth, then return ourself\n+        \/\/ if we've reached the desired depth, then return\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/PolicyNodeImpl.java","additions":19,"deletions":26,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    public static enum Type {\n+    public enum Type {\n@@ -80,1 +80,1 @@\n-        private Type(int value, String name) {\n+        Type(int value, String name) {\n@@ -95,1 +95,1 @@\n-    private Type type;\n+    private final Type type;\n@@ -98,1 +98,1 @@\n-    private byte[] encodedRid;\n+    private final byte[] encodedRid;\n@@ -175,1 +175,1 @@\n-     * Return the type of {@ResponderId}\n+     * Return the type of {@code ResponderId}\n@@ -237,3 +237,2 @@\n-        if (obj instanceof ResponderId) {\n-            ResponderId respObj = (ResponderId)obj;\n-                return Arrays.equals(encodedRid, respObj.getEncoded());\n+        if (obj instanceof ResponderId respObj) {\n+            return Arrays.equals(encodedRid, respObj.getEncoded());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ResponderId.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    private LinkedList<CertPathValidatorException> softFailExceptions =\n+    private final LinkedList<CertPathValidatorException> softFailExceptions =\n@@ -75,1 +75,2 @@\n-    private enum Mode { PREFER_OCSP, PREFER_CRLS, ONLY_CRLS, ONLY_OCSP };\n+    private enum Mode { PREFER_OCSP, PREFER_CRLS, ONLY_CRLS, ONLY_OCSP }\n+\n@@ -296,1 +297,0 @@\n-                continue;\n@@ -391,1 +391,0 @@\n-            CertPathValidatorException cause = e;\n@@ -416,2 +415,2 @@\n-                    cause.addSuppressed(x);\n-                    throw cause;\n+                    e.addSuppressed(x);\n+                    throw e;\n@@ -421,1 +420,1 @@\n-                        throw cause;\n+                        throw e;\n@@ -491,2 +490,0 @@\n-                result = (t instanceof IOException);\n-                break;\n@@ -593,2 +590,1 @@\n-                if (e instanceof CertStoreTypeException) {\n-                    CertStoreTypeException cste = (CertStoreTypeException)e;\n+                if (e instanceof CertStoreTypeException cste) {\n@@ -613,1 +609,0 @@\n-                        return;\n@@ -654,1 +649,1 @@\n-        X509CRLEntryImpl entry = null;\n+        X509CRLEntryImpl entry;\n@@ -705,1 +700,1 @@\n-        X509CertImpl currCert = null;\n+        X509CertImpl currCert;\n@@ -716,2 +711,2 @@\n-        OCSPResponse response = null;\n-        CertId certId = null;\n+        OCSPResponse response;\n+        CertId certId;\n@@ -759,1 +754,1 @@\n-                                tmpExtensions = new ArrayList<Extension>(ocspExtensions);\n+                                tmpExtensions = new ArrayList<>(ocspExtensions);\n@@ -866,3 +861,1 @@\n-                                                   Set<TrustAnchor> anchors)\n-        throws CertPathValidatorException\n-    {\n+                                                   Set<TrustAnchor> anchors) {\n@@ -878,1 +871,1 @@\n-            List<DistributionPoint> points = null;\n+            List<DistributionPoint> points;\n@@ -1039,1 +1032,1 @@\n-        if (Builder.USE_AIA == true) {\n+        if (Builder.USE_AIA) {\n@@ -1070,1 +1063,1 @@\n-        CertPathBuilder builder = null;\n+        CertPathBuilder builder;\n@@ -1092,1 +1085,1 @@\n-                    stackedCerts = new HashSet<X509Certificate>();\n+                    stackedCerts = new HashSet<>();\n@@ -1210,6 +1203,4 @@\n-            StringBuilder sb = new StringBuilder();\n-            sb.append(\"RejectKeySelector: [\\n\");\n-            sb.append(super.toString());\n-            sb.append(badKeySet);\n-            sb.append(\"]\");\n-            return sb.toString();\n+            return \"RejectKeySelector: [\\n\" +\n+                    super.toString() +\n+                    badKeySet +\n+                    \"]\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/RevocationChecker.java","additions":21,"deletions":30,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    public void updateState(X509Certificate cert)\n+    void updateState(X509Certificate cert)\n@@ -56,1 +56,1 @@\n-    public Object clone();\n+    Object clone();\n@@ -64,1 +64,1 @@\n-    public boolean isInitial();\n+    boolean isInitial();\n@@ -72,1 +72,1 @@\n-    public boolean keyParamsNeeded();\n+    boolean keyParamsNeeded();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/State.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-    private CertificateFactory cf;\n+    private final CertificateFactory cf;\n@@ -221,1 +221,1 @@\n-        adjacencyList.add(new LinkedList<Vertex>());\n+        adjacencyList.add(new LinkedList<>());\n@@ -272,1 +272,1 @@\n-         * that hasn't been checked yet (signature, revocation, etc)\n+         * that hasn't been checked yet (signature, revocation, etc.)\n@@ -279,1 +279,1 @@\n-            \/**\n+            \/*\n@@ -281,1 +281,1 @@\n-             * This is important because some of the user-defined\n+             * This is important because some user-defined\n@@ -408,1 +408,1 @@\n-                        unresCritExts = Collections.<String>emptySet();\n+                        unresCritExts = Collections.emptySet();\n@@ -524,1 +524,1 @@\n-            adjList.add(new LinkedList<Vertex>());\n+            adjList.add(new LinkedList<>());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/SunCertPathBuilder.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.List;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/SunCertPathBuilderException.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    private AdjacencyList adjList;\n+    private final AdjacencyList adjList;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/SunCertPathBuilderResult.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-    private URI uri;\n+    private final URI uri;\n@@ -287,1 +287,1 @@\n-                    } else if (connection instanceof HttpURLConnection) {\n+                    } else if (connection instanceof HttpURLConnection hconn) {\n@@ -289,1 +289,0 @@\n-                        HttpURLConnection hconn = (HttpURLConnection)connection;\n@@ -393,1 +392,1 @@\n-                    } else if (connection instanceof HttpURLConnection) {\n+                    } else if (connection instanceof HttpURLConnection hconn) {\n@@ -395,1 +394,0 @@\n-                        HttpURLConnection hconn = (HttpURLConnection)connection;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/URICertStore.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    private X509Certificate cert;\n+    private final X509Certificate cert;\n@@ -137,1 +137,1 @@\n-        X509CertImpl x509Cert = null;\n+        X509CertImpl x509Cert;\n@@ -217,1 +217,1 @@\n-     * @return String form of index as \"Last cert?  [Yes\/No]\n+     * @return String form of index as \"Last cert?  [Yes\/No]\"\n@@ -220,4 +220,2 @@\n-        StringBuilder sb = new StringBuilder(\"Last cert?  \");\n-        sb.append((index == -1) ? \"Yes\" : \"No\");\n-        sb.append(\"\\n\");\n-        return sb.toString();\n+        return \"Last cert?  \" + ((index == -1) ? \"Yes\" : \"No\") +\n+                \"\\n\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/Vertex.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    private List<X509Certificate> certs;\n+    private final List<X509Certificate> certs;\n@@ -116,1 +116,1 @@\n-            if (obj instanceof X509Certificate == false) {\n+            if (!(obj instanceof X509Certificate)) {\n@@ -128,1 +128,1 @@\n-                new ArrayList<X509Certificate>((List<X509Certificate>)certs));\n+                new ArrayList<>((List<X509Certificate>) certs));\n@@ -179,2 +179,2 @@\n-        List<X509Certificate> certList = null;\n-        CertificateFactory certFac = null;\n+        List<X509Certificate> certList;\n+        CertificateFactory certFac;\n@@ -190,1 +190,1 @@\n-                return Collections.<X509Certificate>emptyList();\n+                return Collections.emptyList();\n@@ -194,1 +194,1 @@\n-            certList = new ArrayList<X509Certificate>(seq.length);\n+            certList = new ArrayList<>(seq.length);\n@@ -227,1 +227,1 @@\n-            if (is.markSupported() == false) {\n+            if (!is.markSupported()) {\n@@ -240,1 +240,1 @@\n-                certList = new ArrayList<X509Certificate>(0);\n+                certList = new ArrayList<>(0);\n@@ -311,1 +311,1 @@\n-                             certs.toArray(new X509Certificate[certs.size()]),\n+                             certs.toArray(new X509Certificate[0]),\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/X509CertPath.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-     * @throws CerticateEncodingException If an encoding exception occurs.\n+     * @throws CertificateEncodingException If an encoding exception occurs.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/X509CertificatePair.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.net.Socket;\n@@ -30,5 +31,1 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.List;\n+import java.net.URLConnection;\n@@ -38,19 +35,3 @@\n-import java.security.cert.CertificateException;\n-import java.security.cert.CertSelector;\n-import java.security.cert.CertStore;\n-import java.security.cert.CertStoreException;\n-import java.security.cert.CertStoreParameters;\n-import java.security.cert.CertStoreSpi;\n-import java.security.cert.CRLSelector;\n-import java.security.cert.X509Certificate;\n-import java.security.cert.X509CRL;\n-import java.net.Socket;\n-import java.net.URLConnection;\n-import javax.net.ssl.HostnameVerifier;\n-import javax.net.ssl.HttpsURLConnection;\n-import javax.net.ssl.SSLContext;\n-import javax.net.ssl.SSLSession;\n-import javax.net.ssl.SSLEngine;\n-import javax.net.ssl.SSLSocketFactory;\n-import javax.net.ssl.TrustManager;\n-import javax.net.ssl.X509ExtendedTrustManager;\n+import java.security.cert.*;\n+import java.util.*;\n+import javax.net.ssl.*;\n@@ -70,5 +51,1 @@\n-        hostnameVerifier = new HostnameVerifier() {\n-            public boolean verify(String hostname, SSLSession session) {\n-                return true;\n-            }\n-        };\n+        hostnameVerifier = (hostname, session) -> true;\n@@ -98,1 +75,1 @@\n-            if (urlConn instanceof HttpsURLConnection) {\n+            if (urlConn instanceof HttpsURLConnection https) {\n@@ -104,1 +81,0 @@\n-                HttpsURLConnection https = (HttpsURLConnection)urlConn;\n@@ -131,1 +107,1 @@\n-        return Collections.<X509Certificate>emptySet();\n+        return Collections.emptySet();\n@@ -170,1 +146,1 @@\n-                        Collections.<X509Certificate>emptyList();\n+                        Collections.emptyList();\n@@ -205,2 +181,2 @@\n-                           ? Collections.<X509Certificate>emptyList()\n-                           : Arrays.<X509Certificate>asList(chain);\n+                           ? Collections.emptyList()\n+                           : Arrays.asList(chain);\n@@ -226,1 +202,1 @@\n-            serverChain = Collections.<X509Certificate>emptyList();\n+            serverChain = Collections.emptyList();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ssl\/SSLServerCertStore.java","additions":13,"deletions":37,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        if (!(paramSpec instanceof PSSParameterSpec)) {\n+        if (!(paramSpec instanceof PSSParameterSpec spec)) {\n@@ -66,1 +66,0 @@\n-        PSSParameterSpec spec = (PSSParameterSpec) paramSpec;\n@@ -226,1 +225,1 @@\n-        if (!(mgfSpec instanceof MGF1ParameterSpec)) {\n+        if (!(mgfSpec instanceof MGF1ParameterSpec mgf1Spec)) {\n@@ -230,2 +229,0 @@\n-        MGF1ParameterSpec mgf1Spec = (MGF1ParameterSpec)mgfSpec;\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/PSSParameters.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,1 @@\n-        BlindingRandomPair brp = null;\n+        BlindingRandomPair brp;\n@@ -471,1 +471,1 @@\n-        \/\/ If this parameters are still usable, put them back into the queue.\n+        \/\/ If parameters are still usable, put them back into the queue.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSACore.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,2 +138,2 @@\n-     * Single test entry point for all of the mechanisms in the SunRsaSign\n-     * provider (RSA*KeyImpls).  All of the tests are the same.\n+     * Single test entry point for all the mechanisms in the SunRsaSign\n+     * provider (RSA*KeyImpls).  All the tests are the same.\n@@ -260,2 +260,1 @@\n-        if (key instanceof RSAPublicKey) {\n-            RSAPublicKey rsaKey = (RSAPublicKey)key;\n+        if (key instanceof RSAPublicKey rsaKey) {\n@@ -281,2 +280,1 @@\n-        if (key instanceof RSAPrivateCrtKey) {\n-            RSAPrivateCrtKey rsaKey = (RSAPrivateCrtKey)key;\n+        if (key instanceof RSAPrivateCrtKey rsaKey) {\n@@ -299,2 +297,1 @@\n-        } else if (key instanceof RSAPrivateKey) {\n-            RSAPrivateKey rsaKey = (RSAPrivateKey)key;\n+        } else if (key instanceof RSAPrivateKey rsaKey) {\n@@ -329,2 +326,1 @@\n-        } else if (keySpec instanceof RSAPublicKeySpec) {\n-            RSAPublicKeySpec rsaSpec = (RSAPublicKeySpec)keySpec;\n+        } else if (keySpec instanceof RSAPublicKeySpec rsaSpec) {\n@@ -356,2 +352,1 @@\n-        } else if (keySpec instanceof RSAPrivateCrtKeySpec) {\n-            RSAPrivateCrtKeySpec rsaSpec = (RSAPrivateCrtKeySpec)keySpec;\n+        } else if (keySpec instanceof RSAPrivateCrtKeySpec rsaSpec) {\n@@ -373,2 +368,1 @@\n-        } else if (keySpec instanceof RSAPrivateKeySpec) {\n-            RSAPrivateKeySpec rsaSpec = (RSAPrivateKeySpec)keySpec;\n+        } else if (keySpec instanceof RSAPrivateKeySpec rsaSpec) {\n@@ -401,2 +395,1 @@\n-        if (key instanceof RSAPublicKey) {\n-            RSAPublicKey rsaKey = (RSAPublicKey)key;\n+        if (key instanceof RSAPublicKey rsaKey) {\n@@ -426,2 +419,1 @@\n-                if (key instanceof RSAPrivateCrtKey) {\n-                    RSAPrivateCrtKey crtKey = (RSAPrivateCrtKey)key;\n+                if (key instanceof RSAPrivateCrtKey crtKey) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAKeyFactory.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        if (params instanceof RSAKeyGenParameterSpec == false) {\n+        if (!(params instanceof RSAKeyGenParameterSpec rsaSpec)) {\n@@ -102,1 +102,0 @@\n-        RSAKeyGenParameterSpec rsaSpec = (RSAKeyGenParameterSpec)params;\n@@ -122,1 +121,0 @@\n-            int maxBitLength = tmpKeySize;\n@@ -127,1 +125,1 @@\n-            if (tmpPubExp.bitLength() > maxBitLength) {\n+            if (tmpPubExp.bitLength() > tmpKeySize) {\n@@ -130,1 +128,1 @@\n-                        maxBitLength + \" bits\");\n+                                tmpKeySize + \" bits\");\n@@ -163,1 +161,1 @@\n-        int lp = (keySize + 1) >> 1;;\n+        int lp = (keySize + 1) >> 1;\n@@ -215,1 +213,1 @@\n-        BigInteger sqrt = null;\n+        BigInteger sqrt;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAKeyPairGenerator.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-        new Hashtable<KnownOIDs, Integer>();\n+            new Hashtable<>();\n@@ -116,1 +116,1 @@\n-     * Construct a new RSAPSSSignatur with arbitrary digest algorithm\n+     * Construct a new RSAPSSSignature with arbitrary digest algorithm\n@@ -172,1 +172,1 @@\n-        if (!(keyParams instanceof PSSParameterSpec)) {\n+        if (!(keyParams instanceof PSSParameterSpec pssKeyParams)) {\n@@ -179,1 +179,0 @@\n-        PSSParameterSpec pssKeyParams = (PSSParameterSpec) keyParams;\n@@ -294,1 +293,1 @@\n-        if (!(p instanceof PSSParameterSpec)) {\n+        if (!(p instanceof PSSParameterSpec params)) {\n@@ -299,1 +298,0 @@\n-        PSSParameterSpec params = (PSSParameterSpec) p;\n@@ -381,1 +379,1 @@\n-        if (digestReset == false) {\n+        if (!digestReset) {\n@@ -432,2 +430,1 @@\n-            byte[] encrypted = RSACore.rsa(encoded, privKey, true);\n-            return encrypted;\n+            return RSACore.rsa(encoded, privKey, true);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPSSSignature.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- * must be the same as the size of the modulus (i.e. 128 byte for a 1024 bit\n+ * must be the same as the size of the modulus (i.e. 128 byte for a 1024-bit\n@@ -71,1 +71,1 @@\n- * later versions based on real-world experience (e.g. stricter v1.5\n+ * latter versions based on real-world experience (e.g. stricter v1.5\n@@ -205,1 +205,1 @@\n-        Collections.synchronizedMap(new HashMap<String,byte[]>());\n+        Collections.synchronizedMap(new HashMap<>());\n@@ -293,1 +293,1 @@\n-    private byte[] padV15(byte[] data, int ofs, int len) throws BadPaddingException {\n+    private byte[] padV15(byte[] data, int ofs, int len) {\n@@ -382,1 +382,1 @@\n-    private byte[] padOAEP(byte[] M, int ofs, int len) throws BadPaddingException {\n+    private byte[] padOAEP(byte[] M, int ofs, int len) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPadding.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private transient KeyType type;\n+    private final transient KeyType type;\n@@ -75,1 +75,1 @@\n-    private transient AlgorithmParameterSpec keyParams;\n+    private final transient AlgorithmParameterSpec keyParams;\n@@ -174,1 +174,1 @@\n-     * Construct a RSA key from its components. Used by the\n+     * Construct an RSA key from its components. Used by the\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPrivateCrtKeyImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    private transient KeyType type;\n+    private final transient KeyType type;\n@@ -66,1 +66,1 @@\n-    private transient AlgorithmParameterSpec keyParams;\n+    private final transient AlgorithmParameterSpec keyParams;\n@@ -107,1 +107,1 @@\n-     * Construct a RSA key from the specified type and components. Used by\n+     * Construct an RSA key from the specified type and components. Used by\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPublicKeyImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-        if (digestReset == false) {\n+        if (!digestReset) {\n@@ -193,2 +193,1 @@\n-            byte[] encrypted = RSACore.rsa(padded, privateKey, true);\n-            return encrypted;\n+            return RSACore.rsa(padded, privateKey, true);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSASignature.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-        if (algId.getOID().equals(oid) == false) {\n+        if (!algId.getOID().equals(oid)) {\n@@ -206,2 +206,1 @@\n-        byte[] digest = values[1].getOctetString();\n-        return digest;\n+        return values[1].getOctetString();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAUtil.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-    private LinkedHashSet<Provider.Service> services;\n+    private final LinkedHashSet<Provider.Service> services;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/SunRsaSignEntries.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-    private Alert(byte id, String description, boolean handshakeOnly) {\n+    Alert(byte id, String description, boolean handshakeOnly) {\n@@ -149,1 +149,1 @@\n-        private Level(byte level, String description) {\n+        Level(byte level, String description) {\n@@ -200,4 +200,5 @@\n-                    \"\\\"Alert\\\": '{'\\n\" +\n-                    \"  \\\"level\\\"      : \\\"{0}\\\",\\n\" +\n-                    \"  \\\"description\\\": \\\"{1}\\\"\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"Alert\": '{'\n+                              \"level\"      : \"{0}\",\n+                              \"description\": \"{1}\"\n+                            '}'\"\"\",\n@@ -268,1 +269,1 @@\n-                        \/\/ Otherwise ignore the warning but remove the\n+                        \/\/ Otherwise, ignore the warning but remove the\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Alert.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,4 +34,1 @@\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.LinkedList;\n-import java.util.List;\n+import java.util.*;\n@@ -450,1 +447,1 @@\n-            \/\/ No further use of the request and respond extension any more.\n+            \/\/ No further use of the request and respond extension.\n@@ -477,1 +474,0 @@\n-                    requestedAlps.applicationProtocols == null ||\n@@ -509,1 +505,1 @@\n-            \/\/ No further use of the request and respond extension any more.\n+            \/\/ No further use of the request and respond extension.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/AlpnExtension.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-     * implementation would need to wrap a sequence number, it must\n+     * implementation needs to wrap a sequence number, it must\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Authenticator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -392,1 +392,1 @@\n-     * arises in future.\n+     * arises in the future.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/BaseSSLSocketImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -242,1 +242,1 @@\n-    static enum CertStatusRequestType {\n+    enum CertStatusRequestType {\n@@ -249,1 +249,1 @@\n-        private CertStatusRequestType(byte id, String name) {\n+        CertStatusRequestType(byte id, String name) {\n@@ -290,4 +290,5 @@\n-                \"\\\"certificate status type\\\": {0}\\n\" +\n-                \"\\\"encoded certificate status\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"certificate status type\": {0}\n+                            \"encoded certificate status\": '{'\n+                            {1}\n+                            '}'\"\"\",\n@@ -407,4 +408,5 @@\n-                \"\\\"certificate status type\\\": {0}\\n\" +\n-                \"\\\"OCSP status request\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"certificate status type\": {0}\n+                            \"OCSP status request\": '{'\n+                            {1}\n+                            '}'\"\"\",\n@@ -414,4 +416,5 @@\n-                \"\\\"responder_id\\\": {0}\\n\" +\n-                \"\\\"request extensions\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"responder_id\": {0}\n+                            \"request extensions\": '{'\n+                            {1}\n+                            '}'\"\"\",\n@@ -480,4 +483,5 @@\n-                \"\\\"certificate status response type\\\": {0}\\n\" +\n-                \"\\\"encoded certificate status\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"certificate status response type\": {0}\n+                            \"encoded certificate status\": '{'\n+                            {1}\n+                            '}'\"\"\",\n@@ -518,4 +522,5 @@\n-                \"\\\"certificate status response type\\\": {0}\\n\" +\n-                \"\\\"OCSP status response\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"certificate status response type\": {0}\n+                            \"OCSP status response\": '{'\n+                            {1}\n+                            '}'\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertStatusExtension.java","additions":27,"deletions":22,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-                    \/\/ If there too many trusts CAs such that they exceed the\n+                    \/\/ If there are too many trusts CAs such that they exceed the\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateAuthoritiesExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,8 +41,1 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n+import java.util.*;\n@@ -197,1 +190,1 @@\n-                        obj = (X509Certificate)cf.generateCertificate(\n+                        obj = cf.generateCertificate(\n@@ -213,3 +206,4 @@\n-                    \"\\\"Certificates\\\": [\\n\" +\n-                    \"{0}\\n\" +\n-                    \"]\",\n+                    \"\"\"\n+                            \"Certificates\": [\n+                            {0}\n+                            ]\"\"\",\n@@ -590,1 +584,1 @@\n-                    \/\/ Only allow the exactly match.  No wildcard character\n+                    \/\/ Only allow exact match.  No wildcard character\n@@ -616,2 +610,2 @@\n-            \/\/ find out the key exchange algorithm used\n-            \/\/ use \"RSA\" for non-ephemeral \"RSA_EXPORT\"\n+            \/\/ Find the key exchange algorithm used.\n+            \/\/ Use \"RSA\" for non-ephemeral \"RSA_EXPORT\".\n@@ -630,2 +624,1 @@\n-                    if (chc.conContext.transport instanceof SSLEngine) {\n-                        SSLEngine engine = (SSLEngine)chc.conContext.transport;\n+                    if (chc.conContext.transport instanceof SSLEngine engine) {\n@@ -680,2 +673,1 @@\n-                    if (shc.conContext.transport instanceof SSLEngine) {\n-                        SSLEngine engine = (SSLEngine)shc.conContext.transport;\n+                    if (shc.conContext.transport instanceof SSLEngine engine) {\n@@ -720,3 +712,1 @@\n-            if (baseCause instanceof CertPathValidatorException) {\n-                CertPathValidatorException cpve =\n-                        (CertPathValidatorException)baseCause;\n+            if (baseCause instanceof CertPathValidatorException cpve) {\n@@ -770,0 +760,1 @@\n+            \/\/ X.509 certificate\n@@ -771,6 +762,8 @@\n-                \"\\n'{'\\n\" +\n-                \"{0}\\n\" +                       \/\/ X.509 certificate\n-                \"  \\\"extensions\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"  '}'\\n\" +\n-                \"'}',\", Locale.ENGLISH);\n+                    \"\"\"\n+\n+                            '{'\n+                            {0}\n+                              \"extensions\": '{'\n+                            {1}\n+                              '}'\n+                            '}',\"\"\", Locale.ENGLISH);\n@@ -922,4 +915,6 @@\n-                \"\\\"Certificate\\\": '{'\\n\" +\n-                \"  \\\"certificate_request_context\\\": \\\"{0}\\\",\\n\" +\n-                \"  \\\"certificate_list\\\": [{1}\\n]\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"Certificate\": '{'\n+                              \"certificate_request_context\": \"{0}\",\n+                              \"certificate_list\": [{1}\n+                            ]\n+                            '}'\"\"\",\n@@ -976,1 +971,1 @@\n-            if (!(pos instanceof X509Possession)) {\n+            if (!(pos instanceof X509Possession x509Possession)) {\n@@ -981,1 +976,0 @@\n-            X509Possession x509Possession = (X509Possession)pos;\n@@ -1002,2 +996,2 @@\n-            \/\/ to get responses.  If the resulting stapleParams is non\n-            \/\/ null, it implies that stapling is enabled on the server side.\n+            \/\/ to get responses.  If the resulting stapleParams is non-null,\n+            \/\/ it implies that stapling is enabled on the server side.\n@@ -1035,1 +1029,1 @@\n-                ClientHelloMessage clientHello) throws IOException {\n+                ClientHelloMessage clientHello) {\n@@ -1081,1 +1075,1 @@\n-                if (!(pos instanceof X509Possession)) {\n+                if (!(pos instanceof X509Possession x509Possession)) {\n@@ -1088,1 +1082,0 @@\n-                    X509Possession x509Possession = (X509Possession)pos;\n@@ -1195,1 +1188,1 @@\n-                chc.sslConfig.getEnabledExtensions(SSLHandshake.CERTIFICATE);\n+                    chc.sslConfig.getEnabledExtensions(SSLHandshake.CERTIFICATE);\n@@ -1247,2 +1240,1 @@\n-                    if (shc.conContext.transport instanceof SSLEngine) {\n-                        SSLEngine engine = (SSLEngine)shc.conContext.transport;\n+                    if (shc.conContext.transport instanceof SSLEngine engine) {\n@@ -1303,2 +1295,1 @@\n-                    if (chc.conContext.transport instanceof SSLEngine) {\n-                        SSLEngine engine = (SSLEngine)chc.conContext.transport;\n+                    if (chc.conContext.transport instanceof SSLEngine engine) {\n@@ -1349,3 +1340,1 @@\n-            if (baseCause instanceof CertPathValidatorException) {\n-                CertPathValidatorException cpve =\n-                        (CertPathValidatorException)baseCause;\n+            if (baseCause instanceof CertPathValidatorException cpve) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateMessage.java","additions":36,"deletions":47,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -33,6 +33,1 @@\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n+import java.util.*;\n@@ -67,1 +62,1 @@\n-    private static enum ClientCertificateType {\n+    private enum ClientCertificateType {\n@@ -101,1 +96,1 @@\n-        private ClientCertificateType(byte id, String name) {\n+        ClientCertificateType(byte id, String name) {\n@@ -105,1 +100,1 @@\n-        private ClientCertificateType(byte id, String name,\n+        ClientCertificateType(byte id, String name,\n@@ -248,4 +243,5 @@\n-                    \"\\\"CertificateRequest\\\": '{'\\n\" +\n-                    \"  \\\"certificate types\\\": {0}\\n\" +\n-                    \"  \\\"certificate authorities\\\": {1}\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"CertificateRequest\": '{'\n+                              \"certificate types\": {0}\n+                              \"certificate authorities\": {1}\n+                            '}'\"\"\",\n@@ -371,1 +367,1 @@\n-            \/\/ An empty client Certificate handshake message may be allow.\n+            \/\/ An empty client Certificate handshake message may be allowed.\n@@ -476,1 +472,1 @@\n-            if (algs == null || algs.length == 0 || (algs.length & 0x01) != 0) {\n+            if (algs.length == 0 || (algs.length & 0x01) != 0) {\n@@ -566,5 +562,6 @@\n-                    \"\\\"CertificateRequest\\\": '{'\\n\" +\n-                    \"  \\\"certificate types\\\": {0}\\n\" +\n-                    \"  \\\"supported signature algorithms\\\": {1}\\n\" +\n-                    \"  \\\"certificate authorities\\\": {2}\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"CertificateRequest\": '{'\n+                              \"certificate types\": {0}\n+                              \"supported signature algorithms\": {1}\n+                              \"certificate authorities\": {2}\n+                            '}'\"\"\",\n@@ -620,2 +617,1 @@\n-            if (shc.localSupportedSignAlgs == null ||\n-                    shc.localSupportedSignAlgs.isEmpty()) {\n+            if (shc.localSupportedSignAlgs.isEmpty()) {\n@@ -707,1 +703,1 @@\n-            \/\/ An empty client Certificate handshake message may be allow.\n+            \/\/ An empty client Certificate handshake message may be allowed.\n@@ -716,1 +712,1 @@\n-            if (sss == null || sss.isEmpty()) {\n+            if (sss.isEmpty()) {\n@@ -742,1 +738,1 @@\n-                T12CertificateRequestMessage crm) throws IOException {\n+                T12CertificateRequestMessage crm) {\n@@ -800,1 +796,1 @@\n-                HandshakeContext handshakeContext) throws IOException {\n+                HandshakeContext handshakeContext) {\n@@ -855,6 +851,7 @@\n-                \"\\\"CertificateRequest\\\": '{'\\n\" +\n-                \"  \\\"certificate_request_context\\\": \\\"{0}\\\",\\n\" +\n-                \"  \\\"extensions\\\": [\\n\" +\n-                \"{1}\\n\" +\n-                \"  ]\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"CertificateRequest\": '{'\n+                              \"certificate_request_context\": \"{0}\",\n+                              \"extensions\": [\n+                            {1}\n+                              ]\n+                            '}'\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateRequest.java","additions":29,"deletions":32,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -249,4 +249,7 @@\n-                \"\\\"CertificateStatus\\\": '{'\\n\" +\n-                \"  \\\"type\\\"                : \\\"{0}\\\",\\n\" +\n-                \"  \\\"responses \\\"          : [\\n\" + \"{1}\\n\" + \"  ]\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"CertificateStatus\": '{'\n+                              \"type\"                : \"{0}\",\n+                              \"responses \"          : [\n+                            {1}\n+                              ]\n+                            '}'\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateStatus.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+\n@@ -175,5 +176,6 @@\n-                    \"\\\"CertificateVerify\\\": '{'\\n\" +\n-                    \"  \\\"signature\\\": '{'\\n\" +\n-                    \"{0}\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"CertificateVerify\": '{'\n+                              \"signature\": '{'\n+                            {0}\n+                              '}'\n+                            '}'\"\"\",\n@@ -213,6 +215,4 @@\n-            if (signer != null) {\n-                if (key instanceof PublicKey) {\n-                    signer.initVerify((PublicKey)(key));\n-                } else {\n-                    signer.initSign((PrivateKey)key);\n-                }\n+            if (key instanceof PublicKey) {\n+                signer.initVerify((PublicKey)(key));\n+            } else {\n+                signer.initSign((PrivateKey)key);\n@@ -429,5 +429,6 @@\n-                    \"\\\"CertificateVerify\\\": '{'\\n\" +\n-                    \"  \\\"signature\\\": '{'\\n\" +\n-                    \"{0}\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"CertificateVerify\": '{'\n+                              \"signature\": '{'\n+                            {0}\n+                              '}'\n+                            '}'\"\"\",\n@@ -470,6 +471,4 @@\n-            if (signer != null) {\n-                if (key instanceof PublicKey) {\n-                    signer.initVerify((PublicKey)(key));\n-                } else {\n-                    signer.initSign((PrivateKey)key);\n-                }\n+            if (key instanceof PublicKey) {\n+                signer.initVerify((PublicKey)(key));\n+            } else {\n+                signer.initSign((PrivateKey)key);\n@@ -599,1 +598,1 @@\n-                \/\/ Unlikely, the credentials generator should have\n+                \/\/ Unlikely, the credential's generator should have\n@@ -711,6 +710,7 @@\n-                    \"\\\"CertificateVerify\\\": '{'\\n\" +\n-                    \"  \\\"signature algorithm\\\": {0}\\n\" +\n-                    \"  \\\"signature\\\": '{'\\n\" +\n-                    \"{1}\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"CertificateVerify\": '{'\n+                              \"signature algorithm\": {0}\n+                              \"signature\": '{'\n+                            {1}\n+                              '}'\n+                            '}'\"\"\",\n@@ -909,1 +909,1 @@\n-                \/\/ Unlikely, the credentials generator should have\n+                \/\/ Unlikely, the credential's generator should have\n@@ -1047,6 +1047,7 @@\n-                    \"\\\"CertificateVerify\\\": '{'\\n\" +\n-                    \"  \\\"signature algorithm\\\": {0}\\n\" +\n-                    \"  \\\"signature\\\": '{'\\n\" +\n-                    \"{1}\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"CertificateVerify\": '{'\n+                              \"signature algorithm\": {0}\n+                              \"signature\": '{'\n+                            {1}\n+                              '}'\n+                            '}'\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateVerify.java","additions":38,"deletions":37,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-            if (!(kd instanceof LegacyTrafficKeyDerivation)) {\n+            if (!(kd instanceof LegacyTrafficKeyDerivation tkd)) {\n@@ -71,1 +71,0 @@\n-            LegacyTrafficKeyDerivation tkd = (LegacyTrafficKeyDerivation)kd;\n@@ -167,2 +166,1 @@\n-            if (kd instanceof LegacyTrafficKeyDerivation) {\n-                LegacyTrafficKeyDerivation tkd = (LegacyTrafficKeyDerivation)kd;\n+            if (kd instanceof LegacyTrafficKeyDerivation tkd) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ChangeCipherSpec.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -890,1 +890,1 @@\n-    private CipherSuite(String name, int id) {\n+    CipherSuite(String name, int id) {\n@@ -896,1 +896,1 @@\n-    private CipherSuite(int id, boolean isDefaultEnabled,\n+    CipherSuite(int id, boolean isDefaultEnabled,\n@@ -903,1 +903,1 @@\n-    private CipherSuite(int id, boolean isDefaultEnabled,\n+    CipherSuite(int id, boolean isDefaultEnabled,\n@@ -1084,1 +1084,1 @@\n-    static enum KeyExchange {\n+    enum KeyExchange {\n@@ -1155,1 +1155,1 @@\n-    static enum MacAlg {\n+    enum MacAlg {\n@@ -1194,1 +1194,1 @@\n-    static enum HashAlg {\n+    enum HashAlg {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CipherSuite.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,5 +33,1 @@\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n+import java.util.*;\n@@ -334,0 +330,2 @@\n+            MessageFormat messageFormat;\n+            Object[] messageFields;\n@@ -335,21 +333,22 @@\n-                MessageFormat messageFormat = new MessageFormat(\n-                    \"\\\"ClientHello\\\": '{'\\n\" +\n-                    \"  \\\"client version\\\"      : \\\"{0}\\\",\\n\" +\n-                    \"  \\\"random\\\"              : \\\"{1}\\\",\\n\" +\n-                    \"  \\\"session id\\\"          : \\\"{2}\\\",\\n\" +\n-                    \"  \\\"cookie\\\"              : \\\"{3}\\\",\\n\" +\n-                    \"  \\\"cipher suites\\\"       : \\\"{4}\\\",\\n\" +\n-                    \"  \\\"compression methods\\\" : \\\"{5}\\\",\\n\" +\n-                    \"  \\\"extensions\\\"          : [\\n\" +\n-                    \"{6}\\n\" +\n-                    \"  ]\\n\" +\n-                    \"'}'\",\n-                    Locale.ENGLISH);\n-                Object[] messageFields = {\n-                    ProtocolVersion.nameOf(clientVersion),\n-                    Utilities.toHexString(clientRandom.randomBytes),\n-                    sessionId.toString(),\n-                    Utilities.toHexString(cookie),\n-                    getCipherSuiteNames().toString(),\n-                    Utilities.toHexString(compressionMethod),\n-                    Utilities.indent(Utilities.indent(extensions.toString()))\n+                messageFormat = new MessageFormat(\n+                        \"\"\"\n+                                \"ClientHello\": '{'\n+                                  \"client version\"      : \"{0}\",\n+                                  \"random\"              : \"{1}\",\n+                                  \"session id\"          : \"{2}\",\n+                                  \"cookie\"              : \"{3}\",\n+                                  \"cipher suites\"       : \"{4}\",\n+                                  \"compression methods\" : \"{5}\",\n+                                  \"extensions\"          : [\n+                                {6}\n+                                  ]\n+                                '}'\"\"\",\n+                        Locale.ENGLISH);\n+                messageFields = new Object[]{\n+                        ProtocolVersion.nameOf(clientVersion),\n+                        Utilities.toHexString(clientRandom.randomBytes),\n+                        sessionId.toString(),\n+                        Utilities.toHexString(cookie),\n+                        getCipherSuiteNames().toString(),\n+                        Utilities.toHexString(compressionMethod),\n+                        Utilities.indent(Utilities.indent(extensions.toString()))\n@@ -358,1 +357,0 @@\n-                return messageFormat.format(messageFields);\n@@ -360,19 +358,20 @@\n-                MessageFormat messageFormat = new MessageFormat(\n-                    \"\\\"ClientHello\\\": '{'\\n\" +\n-                    \"  \\\"client version\\\"      : \\\"{0}\\\",\\n\" +\n-                    \"  \\\"random\\\"              : \\\"{1}\\\",\\n\" +\n-                    \"  \\\"session id\\\"          : \\\"{2}\\\",\\n\" +\n-                    \"  \\\"cipher suites\\\"       : \\\"{3}\\\",\\n\" +\n-                    \"  \\\"compression methods\\\" : \\\"{4}\\\",\\n\" +\n-                    \"  \\\"extensions\\\"          : [\\n\" +\n-                    \"{5}\\n\" +\n-                    \"  ]\\n\" +\n-                    \"'}'\",\n-                    Locale.ENGLISH);\n-                Object[] messageFields = {\n-                    ProtocolVersion.nameOf(clientVersion),\n-                    Utilities.toHexString(clientRandom.randomBytes),\n-                    sessionId.toString(),\n-                    getCipherSuiteNames().toString(),\n-                    Utilities.toHexString(compressionMethod),\n-                    Utilities.indent(Utilities.indent(extensions.toString()))\n+                messageFormat = new MessageFormat(\n+                        \"\"\"\n+                                \"ClientHello\": '{'\n+                                  \"client version\"      : \"{0}\",\n+                                  \"random\"              : \"{1}\",\n+                                  \"session id\"          : \"{2}\",\n+                                  \"cipher suites\"       : \"{3}\",\n+                                  \"compression methods\" : \"{4}\",\n+                                  \"extensions\"          : [\n+                                {5}\n+                                  ]\n+                                '}'\"\"\",\n+                        Locale.ENGLISH);\n+                messageFields = new Object[]{\n+                        ProtocolVersion.nameOf(clientVersion),\n+                        Utilities.toHexString(clientRandom.randomBytes),\n+                        sessionId.toString(),\n+                        getCipherSuiteNames().toString(),\n+                        Utilities.toHexString(compressionMethod),\n+                        Utilities.indent(Utilities.indent(extensions.toString()))\n@@ -381,1 +380,0 @@\n-                return messageFormat.format(messageFields);\n@@ -383,0 +381,1 @@\n+            return messageFormat.format(messageFields);\n@@ -387,1 +386,1 @@\n-     * The \"ClientHello\" handshake message kick start producer.\n+     * The \"ClientHello\" handshake message kick-start producer.\n@@ -475,1 +474,1 @@\n-                    SSLExtension.CH_EXTENDED_MASTER_SECRET, sessionVersion);\n+                        SSLExtension.CH_EXTENDED_MASTER_SECRET, sessionVersion);\n@@ -648,1 +647,1 @@\n-            \/\/ Reserve the initial ClientHello message for the follow on\n+            \/\/ Reserve the initial ClientHello message for the follow-on\n@@ -1200,1 +1199,1 @@\n-                \/\/ unlikely, but please double check.\n+                \/\/ unlikely, but please double-check.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ClientHello.java","additions":51,"deletions":52,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private ContentType(byte id, String name,\n+    ContentType(byte id, String name,\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ContentType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,3 +81,4 @@\n-                    \"\\\"cookie\\\": '{'\\n\" +\n-                    \"{0}\\n\" +\n-                    \"'}',\", Locale.ENGLISH);\n+                    \"\"\"\n+                            \"cookie\": '{'\n+                            {0}\n+                            '}',\"\"\", Locale.ENGLISH);\n@@ -130,2 +131,1 @@\n-            if (spec != null &&\n-                    spec.cookie != null && spec.cookie.length != 0) {\n+            if (spec != null && spec.cookie.length != 0) {\n@@ -294,2 +294,1 @@\n-            if (spec != null &&\n-                    spec.cookie != null && spec.cookie.length != 0) {\n+            if (spec != null && spec.cookie.length != 0) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CookieExtension.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -136,7 +136,8 @@\n-                \"\\\"DH ClientKeyExchange\\\": '{'\\n\" +\n-                \"  \\\"parameters\\\": '{'\\n\" +\n-                \"    \\\"dh_Yc\\\": '{'\\n\" +\n-                \"{0}\\n\" +\n-                \"    '}',\\n\" +\n-                \"  '}'\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"DH ClientKeyExchange\": '{'\n+                              \"parameters\": '{'\n+                                \"dh_Yc\": '{'\n+                            {0}\n+                                '}',\n+                              '}'\n+                            '}'\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DHClientKeyExchange.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,2 +201,1 @@\n-            if (key instanceof DHPublicKey) {\n-                DHPublicKey dhKey = (DHPublicKey)key;\n+            if (key instanceof DHPublicKey dhKey) {\n@@ -342,1 +341,1 @@\n-             * However, if applications want more stronger strength, setting\n+             * However, if applications want stronger strength, setting\n@@ -420,1 +419,1 @@\n-                if (!(poss instanceof DHEPossession)) {\n+                if (!(poss instanceof DHEPossession dhep)) {\n@@ -424,1 +423,0 @@\n-                DHEPossession dhep = (DHEPossession)poss;\n@@ -426,1 +424,1 @@\n-                    if (!(cred instanceof DHECredentials)) {\n+                    if (!(cred instanceof DHECredentials dhec)) {\n@@ -429,1 +427,0 @@\n-                    DHECredentials dhec = (DHECredentials)cred;\n@@ -452,1 +449,1 @@\n-            if (dhePossession == null || dheCredentials == null) {\n+            if (dhePossession == null) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DHKeyExchange.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -315,13 +315,14 @@\n-                    \"\\\"DH ServerKeyExchange\\\": '{'\\n\" +\n-                    \"  \\\"parameters\\\": '{'\\n\" +\n-                    \"    \\\"dh_p\\\": '{'\\n\" +\n-                    \"{0}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"    \\\"dh_g\\\": '{'\\n\" +\n-                    \"{1}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"    \\\"dh_Ys\\\": '{'\\n\" +\n-                    \"{2}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                        \"\"\"\n+                                \"DH ServerKeyExchange\": '{'\n+                                  \"parameters\": '{'\n+                                    \"dh_p\": '{'\n+                                {0}\n+                                    '}',\n+                                    \"dh_g\": '{'\n+                                {1}\n+                                    '}',\n+                                    \"dh_Ys\": '{'\n+                                {2}\n+                                    '}',\n+                                  '}'\n+                                '}'\"\"\",\n@@ -343,0 +344,3 @@\n+            MessageFormat messageFormat;\n+            HexDumpEncoder hexEncoder = new HexDumpEncoder();\n+            Object[] messageFields;\n@@ -344,33 +348,33 @@\n-                MessageFormat messageFormat = new MessageFormat(\n-                    \"\\\"DH ServerKeyExchange\\\": '{'\\n\" +\n-                    \"  \\\"parameters\\\": '{'\\n\" +\n-                    \"    \\\"dh_p\\\": '{'\\n\" +\n-                    \"{0}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"    \\\"dh_g\\\": '{'\\n\" +\n-                    \"{1}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"    \\\"dh_Ys\\\": '{'\\n\" +\n-                    \"{2}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"  '}',\\n\" +\n-                    \"  \\\"digital signature\\\":  '{'\\n\" +\n-                    \"    \\\"signature algorithm\\\": \\\"{3}\\\"\\n\" +\n-                    \"    \\\"signature\\\": '{'\\n\" +\n-                    \"{4}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n-                    Locale.ENGLISH);\n-\n-                HexDumpEncoder hexEncoder = new HexDumpEncoder();\n-                Object[] messageFields = {\n-                    Utilities.indent(\n-                            hexEncoder.encodeBuffer(p), \"      \"),\n-                    Utilities.indent(\n-                            hexEncoder.encodeBuffer(g), \"      \"),\n-                    Utilities.indent(\n-                            hexEncoder.encodeBuffer(y), \"      \"),\n-                    signatureScheme.name,\n-                    Utilities.indent(\n-                            hexEncoder.encodeBuffer(paramsSignature), \"      \")\n+                messageFormat = new MessageFormat(\n+                        \"\"\"\n+                                \"DH ServerKeyExchange\": '{'\n+                                  \"parameters\": '{'\n+                                    \"dh_p\": '{'\n+                                {0}\n+                                    '}',\n+                                    \"dh_g\": '{'\n+                                {1}\n+                                    '}',\n+                                    \"dh_Ys\": '{'\n+                                {2}\n+                                    '}',\n+                                  '}',\n+                                  \"digital signature\":  '{'\n+                                    \"signature algorithm\": \"{3}\"\n+                                    \"signature\": '{'\n+                                {4}\n+                                    '}',\n+                                  '}'\n+                                '}'\"\"\",\n+                        Locale.ENGLISH);\n+\n+                messageFields = new Object[]{\n+                        Utilities.indent(\n+                                hexEncoder.encodeBuffer(p), \"      \"),\n+                        Utilities.indent(\n+                                hexEncoder.encodeBuffer(g), \"      \"),\n+                        Utilities.indent(\n+                                hexEncoder.encodeBuffer(y), \"      \"),\n+                        signatureScheme.name,\n+                        Utilities.indent(\n+                                hexEncoder.encodeBuffer(paramsSignature), \"      \")\n@@ -379,1 +383,0 @@\n-                return messageFormat.format(messageFields);\n@@ -381,29 +384,29 @@\n-                MessageFormat messageFormat = new MessageFormat(\n-                    \"\\\"DH ServerKeyExchange\\\": '{'\\n\" +\n-                    \"  \\\"parameters\\\": '{'\\n\" +\n-                    \"    \\\"dh_p\\\": '{'\\n\" +\n-                    \"{0}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"    \\\"dh_g\\\": '{'\\n\" +\n-                    \"{1}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"    \\\"dh_Ys\\\": '{'\\n\" +\n-                    \"{2}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"  '}',\\n\" +\n-                    \"  \\\"signature\\\": '{'\\n\" +\n-                    \"{3}\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n-                    Locale.ENGLISH);\n-\n-                HexDumpEncoder hexEncoder = new HexDumpEncoder();\n-                Object[] messageFields = {\n-                    Utilities.indent(\n-                            hexEncoder.encodeBuffer(p), \"      \"),\n-                    Utilities.indent(\n-                            hexEncoder.encodeBuffer(g), \"      \"),\n-                    Utilities.indent(\n-                            hexEncoder.encodeBuffer(y), \"      \"),\n-                    Utilities.indent(\n-                            hexEncoder.encodeBuffer(paramsSignature), \"    \")\n+                messageFormat = new MessageFormat(\n+                        \"\"\"\n+                                \"DH ServerKeyExchange\": '{'\n+                                  \"parameters\": '{'\n+                                    \"dh_p\": '{'\n+                                {0}\n+                                    '}',\n+                                    \"dh_g\": '{'\n+                                {1}\n+                                    '}',\n+                                    \"dh_Ys\": '{'\n+                                {2}\n+                                    '}',\n+                                  '}',\n+                                  \"signature\": '{'\n+                                {3}\n+                                  '}'\n+                                '}'\"\"\",\n+                        Locale.ENGLISH);\n+\n+                messageFields = new Object[]{\n+                        Utilities.indent(\n+                                hexEncoder.encodeBuffer(p), \"      \"),\n+                        Utilities.indent(\n+                                hexEncoder.encodeBuffer(g), \"      \"),\n+                        Utilities.indent(\n+                                hexEncoder.encodeBuffer(y), \"      \"),\n+                        Utilities.indent(\n+                                hexEncoder.encodeBuffer(paramsSignature), \"    \")\n@@ -412,1 +415,0 @@\n-                return messageFormat.format(messageFields);\n@@ -414,0 +416,1 @@\n+            return messageFormat.format(messageFields);\n@@ -431,6 +434,4 @@\n-            if (signer != null) {\n-                if (key instanceof PublicKey) {\n-                    signer.initVerify((PublicKey)(key));\n-                } else {\n-                    signer.initSign((PrivateKey)key);\n-                }\n+            if (key instanceof PublicKey) {\n+                signer.initVerify((PublicKey)(key));\n+            } else {\n+                signer.initSign((PrivateKey)key);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DHServerKeyExchange.java","additions":85,"deletions":84,"binary":false,"changes":169,"status":"modified"},{"patch":"@@ -31,7 +31,1 @@\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.TreeSet;\n+import java.util.*;\n@@ -523,2 +517,1 @@\n-            if (o instanceof HandshakeFragment) {\n-                HandshakeFragment other = (HandshakeFragment)o;\n+            if (o instanceof HandshakeFragment other) {\n@@ -698,6 +691,2 @@\n-            boolean fragmented = false;\n-            if ((hsf.fragmentOffset) != 0 ||\n-                (hsf.fragmentLength != hsf.messageLength)) {\n-\n-                fragmented = true;\n-            }\n+            boolean fragmented = (hsf.fragmentOffset) != 0 ||\n+                    (hsf.fragmentLength != hsf.messageLength);\n@@ -711,1 +700,1 @@\n-                    holes = new LinkedList<HoleDescriptor>();\n+                    holes = new LinkedList<>();\n@@ -742,4 +731,1 @@\n-                    if (((hole.offset > hsf.fragmentOffset) &&\n-                         (hole.offset < fragmentLimit)) ||\n-                        ((hole.limit > hsf.fragmentOffset) &&\n-                         (hole.limit < fragmentLimit))) {\n+                    if (hole.offset > hsf.fragmentOffset || hole.limit < fragmentLimit) {\n@@ -850,2 +836,1 @@\n-                    if (rf instanceof HandshakeFragment) {\n-                        HandshakeFragment hsf = (HandshakeFragment)rf;\n+                    if (rf instanceof HandshakeFragment hsf) {\n@@ -885,2 +870,1 @@\n-                if (!isOld && (frag instanceof HandshakeFragment)) {\n-                    HandshakeFragment hsf = (HandshakeFragment)frag;\n+                if (!isOld && (frag instanceof HandshakeFragment hsf)) {\n@@ -907,1 +891,1 @@\n-            \/\/ Discard records old than the previous epoch.\n+            \/\/ Discard records older than the previous epoch.\n@@ -936,2 +920,1 @@\n-                    if (rf instanceof HandshakeFragment) {\n-                        HandshakeFragment hsf = (HandshakeFragment)rf;\n+                    if (rf instanceof HandshakeFragment hsf) {\n@@ -971,1 +954,1 @@\n-                \/\/ Should has been retransmitted. Discard this record.\n+                \/\/ Should have been retransmitted. Discard this record.\n@@ -1017,1 +1000,1 @@\n-                \/\/ check the fligth status\n+                \/\/ check the flight status\n@@ -1059,1 +1042,1 @@\n-                    \/\/ Need not to backup the holes map.  Clear up it at first.\n+                    \/\/ Need not backup the holes map.  Clear up it at first.\n@@ -1165,2 +1148,2 @@\n-            \/\/ The ciphtext handshake message can only be Finished (the\n-            \/\/ end of this flight), ClinetHello or HelloRequest (the\n+            \/\/ The ciphertext handshake message can only be Finished (the\n+            \/\/ end of this flight), ClientHello or HelloRequest (the\n@@ -1513,1 +1496,1 @@\n-            return hasFin && hasCCS;\n+            return false;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DTLSInputRecord.java","additions":16,"deletions":33,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-            boolean useChangeCipherSpec) throws IOException {\n+            boolean useChangeCipherSpec) {\n@@ -121,1 +121,1 @@\n-    void encodeAlert(byte level, byte description) throws IOException {\n+    void encodeAlert(byte level, byte description) {\n@@ -138,1 +138,1 @@\n-    void encodeChangeCipherSpec() throws IOException {\n+    void encodeChangeCipherSpec() {\n@@ -155,1 +155,1 @@\n-            int offset, int length) throws IOException {\n+            int offset, int length) {\n@@ -213,1 +213,1 @@\n-        \/\/ Don't process the incoming record until all of the buffered records\n+        \/\/ Don't process the incoming record until all buffered records\n@@ -359,1 +359,1 @@\n-                int offset, int length) throws IOException {\n+                int offset, int length) {\n@@ -421,1 +421,1 @@\n-        void queueUpAlert(byte level, byte description) throws IOException {\n+        void queueUpAlert(byte level, byte description) {\n@@ -584,6 +584,2 @@\n-            if (!flightIsReady || handshakeMemos.isEmpty() ||\n-                    acquireIndex >= handshakeMemos.size()) {\n-                return true;\n-            }\n-\n-            return false;\n+            return !flightIsReady || handshakeMemos.isEmpty() ||\n+                    acquireIndex >= handshakeMemos.size();\n@@ -610,2 +606,1 @@\n-                if (memo instanceof HandshakeMemo) {\n-                    HandshakeMemo hmemo = (HandshakeMemo)memo;\n+                if (memo instanceof HandshakeMemo hmemo) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DTLSOutputRecord.java","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-    static final int    headerSize = 13;            \/\/ DTLS record header\n+    int    headerSize = 13;            \/\/ DTLS record header\n@@ -35,1 +35,1 @@\n-    static final int    handshakeHeaderSize = 12;   \/\/ DTLS handshake header\n+    int    handshakeHeaderSize = 12;   \/\/ DTLS handshake header\n@@ -40,1 +40,1 @@\n-    static final int    headerPlusMaxIVSize =\n+    int    headerPlusMaxIVSize =\n@@ -48,1 +48,1 @@\n-    static final int    maxPlaintextPlusSize =\n+    int    maxPlaintextPlusSize =\n@@ -57,1 +57,1 @@\n-    static final int    maxRecordSize =\n+    int    maxRecordSize =\n@@ -73,1 +73,1 @@\n-    static final int    minCertPlaintextSize =\n+    int    minCertPlaintextSize =\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DTLSRecord.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,5 +114,6 @@\n-                \"\\\"ECDH ClientKeyExchange\\\": '{'\\n\" +\n-                \"  \\\"ecdh public\\\": '{'\\n\" +\n-                \"{0}\\n\" +\n-                \"  '}',\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"ECDH ClientKeyExchange\": '{'\n+                              \"ecdh public\": '{'\n+                            {0}\n+                              '}',\n+                            '}'\"\"\",\n@@ -278,1 +279,1 @@\n-            NamedParameterSpec namedParams = null;\n+            NamedParameterSpec namedParams;\n@@ -289,7 +290,0 @@\n-            \/\/ Can't figure this out, bail.\n-            if ((ecParams == null) && (namedParams == null)) {\n-                \/\/ unlikely, have been checked during cipher suite negotiation.\n-                throw shc.conContext.fatal(Alert.ILLEGAL_PARAMETER,\n-                    \"Not EC\/XDH server cert for ECDH client key exchange\");\n-            }\n-\n@@ -383,2 +377,1 @@\n-                if (cd instanceof NamedGroupCredentials) {\n-                    NamedGroupCredentials creds = (NamedGroupCredentials)cd;\n+                if (cd instanceof NamedGroupCredentials creds) {\n@@ -469,3 +462,1 @@\n-                if (possession instanceof NamedGroupPossession) {\n-                    NamedGroupPossession poss =\n-                            (NamedGroupPossession)possession;\n+                if (possession instanceof NamedGroupPossession poss) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ECDHClientKeyExchange.java","additions":10,"deletions":19,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -324,1 +324,1 @@\n-            if (x509Possession == null || ecdheCredentials == null) {\n+            if (x509Possession == null) {\n@@ -373,1 +373,1 @@\n-            if (ecdhePossession == null || x509Credentials == null) {\n+            if (ecdhePossession == null) {\n@@ -417,1 +417,1 @@\n-            if (ecdhePossession == null || ecdheCredentials == null) {\n+            if (ecdhePossession == null) {\n@@ -468,1 +468,1 @@\n-            if (namedGroupPossession == null || namedGroupCredentials == null) {\n+            if (namedGroupPossession == null) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ECDHKeyExchange.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -357,14 +357,15 @@\n-                    \"\\\"ECDH ServerKeyExchange\\\": '{'\\n\" +\n-                    \"  \\\"parameters\\\": '{'\\n\" +\n-                    \"    \\\"named group\\\": \\\"{0}\\\"\\n\" +\n-                    \"    \\\"ecdh public\\\": '{'\\n\" +\n-                    \"{1}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"  '}',\\n\" +\n-                    \"  \\\"digital signature\\\":  '{'\\n\" +\n-                    \"    \\\"signature algorithm\\\": \\\"{2}\\\"\\n\" +\n-                    \"    \\\"signature\\\": '{'\\n\" +\n-                    \"{3}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                        \"\"\"\n+                                \"ECDH ServerKeyExchange\": '{'\n+                                  \"parameters\": '{'\n+                                    \"named group\": \"{0}\"\n+                                    \"ecdh public\": '{'\n+                                {1}\n+                                    '}',\n+                                  '}',\n+                                  \"digital signature\":  '{'\n+                                    \"signature algorithm\": \"{2}\"\n+                                    \"signature\": '{'\n+                                {3}\n+                                    '}',\n+                                  '}'\n+                                '}'\"\"\",\n@@ -385,11 +386,12 @@\n-                    \"\\\"ECDH ServerKeyExchange\\\": '{'\\n\" +\n-                    \"  \\\"parameters\\\":  '{'\\n\" +\n-                    \"    \\\"named group\\\": \\\"{0}\\\"\\n\" +\n-                    \"    \\\"ecdh public\\\": '{'\\n\" +\n-                    \"{1}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"  '}',\\n\" +\n-                    \"  \\\"signature\\\": '{'\\n\" +\n-                    \"{2}\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                        \"\"\"\n+                                \"ECDH ServerKeyExchange\": '{'\n+                                  \"parameters\":  '{'\n+                                    \"named group\": \"{0}\"\n+                                    \"ecdh public\": '{'\n+                                {1}\n+                                    '}',\n+                                  '}',\n+                                  \"signature\": '{'\n+                                {2}\n+                                  '}'\n+                                '}'\"\"\",\n@@ -410,8 +412,9 @@\n-                    \"\\\"ECDH ServerKeyExchange\\\": '{'\\n\" +\n-                    \"  \\\"parameters\\\":  '{'\\n\" +\n-                    \"    \\\"named group\\\": \\\"{0}\\\"\\n\" +\n-                    \"    \\\"ecdh public\\\": '{'\\n\" +\n-                    \"{1}\\n\" +\n-                    \"    '}',\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                        \"\"\"\n+                                \"ECDH ServerKeyExchange\": '{'\n+                                  \"parameters\":  '{'\n+                                    \"named group\": \"{0}\"\n+                                    \"ecdh public\": '{'\n+                                {1}\n+                                    '}',\n+                                  '}'\n+                                '}'\"\"\",\n@@ -449,6 +452,4 @@\n-            if (signer != null) {\n-                if (key instanceof PublicKey) {\n-                    signer.initVerify((PublicKey)(key));\n-                } else {\n-                    signer.initSign((PrivateKey)key);\n-                }\n+            if (key instanceof PublicKey) {\n+                signer.initVerify((PublicKey)(key));\n+            } else {\n+                signer.initSign((PrivateKey)key);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ECDHServerKeyExchange.java","additions":41,"deletions":40,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,1 +132,1 @@\n-    private static enum ECPointFormat {\n+    private enum ECPointFormat {\n@@ -140,1 +140,1 @@\n-        private ECPointFormat(byte id, String name) {\n+        ECPointFormat(byte id, String name) {\n@@ -156,1 +156,1 @@\n-     * Network data producer of a \"ec_point_formats\" extension in\n+     * Network data producer of an \"ec_point_formats\" extension in\n@@ -205,1 +205,1 @@\n-     * Network data consumer of a \"ec_point_formats\" extension in\n+     * Network data consumer of an \"ec_point_formats\" extension in\n@@ -250,1 +250,1 @@\n-     * Network data consumer of a \"ec_point_formats\" extension in\n+     * Network data consumer of an \"ec_point_formats\" extension in\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ECPointFormatsExtension.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-                HandshakeContext handshakeContext) throws IOException {\n+                HandshakeContext handshakeContext) {\n@@ -101,3 +101,4 @@\n-                    \"\\\"EncryptedExtensions\\\": [\\n\" +\n-                    \"{0}\\n\" +\n-                    \"]\",\n+                    \"\"\"\n+                            \"EncryptedExtensions\": [\n+                            {0}\n+                            ]\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/EncryptedExtensions.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        \/\/ A nominal object that does not holding any real renegotiation info.\n+        \/\/ A nominal object that does not hold any real renegotiation info.\n@@ -102,1 +102,1 @@\n-     * Network data producer of a \"extended_master_secret\" extension in\n+     * Network data producer of an \"extended_master_secret\" extension in\n@@ -144,1 +144,1 @@\n-     * Network data producer of a \"extended_master_secret\" extension in\n+     * Network data producer of an \"extended_master_secret\" extension in\n@@ -202,1 +202,1 @@\n-     * The absence processing if a \"extended_master_secret\" extension is\n+     * The absence processing if an \"extended_master_secret\" extension is\n@@ -267,1 +267,1 @@\n-     * Network data producer of a \"extended_master_secret\" extension in\n+     * Network data producer of an \"extended_master_secret\" extension in\n@@ -296,1 +296,1 @@\n-     * Network data consumer of a \"extended_master_secret\" extension in\n+     * Network data consumer of an \"extended_master_secret\" extension in\n@@ -341,1 +341,1 @@\n-     * The absence processing if a \"extended_master_secret\" extension is\n+     * The absence processing if an \"extended_master_secret\" extension is\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ExtendedMasterSecretExtension.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -146,5 +146,6 @@\n-                    \"\\\"Finished\\\": '{'\\n\" +\n-                    \"  \\\"verify data\\\": '{'\\n\" +\n-                    \"{0}\\n\" +\n-                    \"  '}'\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"Finished\": '{'\n+                              \"verify data\": '{'\n+                            {0}\n+                              '}'\n+                            '}'\"\"\",\n@@ -217,1 +218,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Finished.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.*;\n@@ -35,10 +36,0 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.EnumMap;\n-import java.util.EnumSet;\n-import java.util.HashMap;\n-import java.util.LinkedHashMap;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Queue;\n@@ -439,1 +430,1 @@\n-                \/\/ To workaround this special user case, the follow-on call to\n+                \/\/ To work around this special user case, the follow-on call to\n@@ -588,4 +579,2 @@\n-        if (requestedServerNames == null) {\n-            return Collections.emptyList();\n-        }\n-        return requestedServerNames;\n+        return Objects.requireNonNullElse(requestedServerNames,\n+                Collections.emptyList());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/HandshakeContext.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        if (!(transcriptHash instanceof CacheOnlyHash)) {\n+        if (!(transcriptHash instanceof CacheOnlyHash coh)) {\n@@ -57,1 +57,0 @@\n-        CacheOnlyHash coh = (CacheOnlyHash)transcriptHash;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/HandshakeHash.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-        }   \/\/ otherwise, the handshake outstream is temporarily used only.\n+        }   \/\/ otherwise, the handshake output stream is temporarily used only.\n@@ -113,1 +113,1 @@\n-    void putInt24(int i) throws IOException {\n+    void putInt24(int i) {\n@@ -120,1 +120,1 @@\n-    void putInt32(int i) throws IOException {\n+    void putInt32(int i) {\n@@ -149,1 +149,1 @@\n-    void putBytes24(byte[] b) throws IOException {\n+    void putBytes24(byte[] b) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/HandshakeOutStream.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,1 @@\n-                ClientHelloMessage clientHello) throws IOException {\n+                ClientHelloMessage clientHello) {\n@@ -181,1 +181,1 @@\n-            ClientHelloMessage clientHello, byte[] cookie) throws IOException {\n+            ClientHelloMessage clientHello, byte[] cookie) {\n@@ -222,1 +222,1 @@\n-                ClientHelloMessage clientHello) throws IOException {\n+                ClientHelloMessage clientHello) {\n@@ -228,1 +228,1 @@\n-            ClientHelloMessage clientHello, byte[] cookie) throws IOException {\n+            ClientHelloMessage clientHello, byte[] cookie) {\n@@ -255,1 +255,1 @@\n-                ClientHelloMessage clientHello) throws IOException {\n+                ClientHelloMessage clientHello) {\n@@ -368,1 +368,1 @@\n-            \/\/ Use the ClientHello hash in the cookie for transtript\n+            \/\/ Use the ClientHello hash in the cookie for transcript\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/HelloCookieManager.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,4 +107,5 @@\n-                \"\\\"HelloVerifyRequest\\\": '{'\\n\" +\n-                \"  \\\"server version\\\"      : \\\"{0}\\\",\\n\" +\n-                \"  \\\"cookie\\\"              : \\\"{1}\\\",\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"HelloVerifyRequest\": '{'\n+                              \"server version\"      : \"{0}\",\n+                              \"cookie\"              : \"{1}\",\n+                            '}'\"\"\",\n@@ -206,1 +207,1 @@\n-            \/\/ negotiation.  Need not to check version values match for\n+            \/\/ negotiation.  Need not check version values match for\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/HelloVerifyRequest.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    \/\/ it to V3. Otherwise we throw an exception when encountering a V2 hello.\n+    \/\/ it to V3. Otherwise, we throw an exception when encountering a V2 hello.\n@@ -137,1 +137,1 @@\n-     * a inbound packet.\n+     * an inbound packet.\n@@ -160,1 +160,1 @@\n-            throws IOException, BadPaddingException {\n+            throws IOException {\n@@ -220,1 +220,1 @@\n-        \/\/ Note: need not to set the header actually.\n+        \/\/ Note: need not set the header.\n@@ -321,1 +321,1 @@\n-        \/\/ Note: need not to set the header actually.\n+        \/\/ Note: need not set the header.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/InputRecord.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-     * JCA identifier string for Raw RSA, i.e. a RSA PKCS#1 v1.5 signature\n+     * JCA identifier string for Raw RSA, i.e. an RSA PKCS#1 v1.5 signature\n@@ -121,1 +121,1 @@\n-     * an signature using RSA with PKCS#1 v1.5 padding signing a\n+     * a signature using RSA with PKCS#1 v1.5 padding signing a\n@@ -146,2 +146,1 @@\n-        if (key instanceof RSAPublicKey) {\n-            RSAPublicKey rsaKey = (RSAPublicKey)key;\n+        if (key instanceof RSAPublicKey rsaKey) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/JsseJce.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-                        Collections.<Builder>emptyList());\n+                        Collections.emptyList());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/KeyManagerFactoryImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,6 +33,1 @@\n-import java.util.Collections;\n-import java.util.EnumSet;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n+import java.util.*;\n@@ -116,6 +111,8 @@\n-                \"\\n'{'\\n\" +\n-                \"  \\\"named group\\\": {0}\\n\" +\n-                \"  \\\"key_exchange\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"  '}'\\n\" +\n-                \"'}',\", Locale.ENGLISH);\n+                    \"\"\"\n+\n+                            '{'\n+                              \"named group\": {0}\n+                              \"key_exchange\": '{'\n+                            {1}\n+                              '}'\n+                            '}',\"\"\", Locale.ENGLISH);\n@@ -475,6 +472,7 @@\n-                \"\\\"server_share\\\": '{'\\n\" +\n-                \"  \\\"named group\\\": {0}\\n\" +\n-                \"  \\\"key_exchange\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"  '}'\\n\" +\n-                \"'}',\", Locale.ENGLISH);\n+                    \"\"\"\n+                            \"server_share\": '{'\n+                              \"named group\": {0}\n+                              \"key_exchange\": '{'\n+                            {1}\n+                              '}'\n+                            '}',\"\"\", Locale.ENGLISH);\n@@ -558,2 +556,1 @@\n-                if (cd instanceof NamedGroupCredentials) {\n-                    NamedGroupCredentials creds = (NamedGroupCredentials)cd;\n+                if (cd instanceof NamedGroupCredentials creds) {\n@@ -714,1 +711,1 @@\n-            \/\/ Cannot use the previous requested key shares any more.\n+            \/\/ Cannot use the previous requested key shares anymore.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/KeyShareExtension.java","additions":18,"deletions":21,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,3 +114,4 @@\n-                    \"\\\"KeyUpdate\\\": '{'\\n\" +\n-                    \"  \\\"request_update\\\": {0}\\n\" +\n-                    \"'}'\",\n+                    \"\"\"\n+                            \"KeyUpdate\": '{'\n+                              \"request_update\": {0}\n+                            '}'\"\"\",\n@@ -134,1 +135,1 @@\n-        private KeyUpdateRequest(byte id, String name) {\n+        KeyUpdateRequest(byte id, String name) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/KeyUpdate.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-    static enum MaxFragLenEnum {\n+    enum MaxFragLenEnum {\n@@ -113,1 +113,1 @@\n-        private MaxFragLenEnum(byte id, int fragmentSize, String description) {\n+        MaxFragLenEnum(byte id, int fragmentSize, String description) {\n@@ -193,2 +193,2 @@\n-                \/\/ Maybe we can calculate the fragment size more accurate\n-                \/\/ by condering the enabled cipher suites in the future.\n+                \/\/ Maybe we can calculate the fragment size more accurately\n+                \/\/ by considering the enabled cipher suites in the future.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/MaxFragExtension.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import javax.crypto.spec.DHParameterSpec;\n-import javax.net.ssl.SSLException;\n@@ -31,1 +29,4 @@\n-import java.security.spec.*;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.security.spec.ECParameterSpec;\n+import java.security.spec.InvalidParameterSpecException;\n+import java.security.spec.NamedParameterSpec;\n@@ -37,1 +38,1 @@\n-import sun.security.ssl.DHKeyExchange.DHEPossession;\n+import javax.crypto.spec.DHParameterSpec;\n@@ -242,4 +243,4 @@\n-    private NamedGroup(int id, String name,\n-            NamedGroupSpec namedGroupSpec,\n-            ProtocolVersion[] supportedProtocols,\n-            AlgorithmParameterSpec keAlgParamSpec) {\n+    NamedGroup(int id, String name,\n+               NamedGroupSpec namedGroupSpec,\n+               ProtocolVersion[] supportedProtocols,\n+               AlgorithmParameterSpec keAlgParamSpec) {\n@@ -469,1 +470,1 @@\n-        private NamedGroupSpec(String algorithm, NamedGroupScheme scheme) {\n+        NamedGroupSpec(String algorithm, NamedGroupScheme scheme) {\n@@ -543,1 +544,1 @@\n-            return ((DHEPossession)namedGroupPossession).encode();\n+            return namedGroupPossession.encode();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/NamedGroup.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -141,6 +141,6 @@\n-                    \"\\\"NewSessionTicket\\\": '{'\\n\" +\n-                            \"  \\\"ticket_lifetime\\\"      : \\\"{0}\\\",\\n\" +\n-                            \"  \\\"ticket\\\"               : '{'\\n\" +\n-                            \"{1}\\n\" +\n-                            \"  '}'\" +\n-                            \"'}'\",\n+                    \"\"\"\n+                            \"NewSessionTicket\": '{'\n+                              \"ticket_lifetime\"      : \"{0}\",\n+                              \"ticket\"               : '{'\n+                            {1}\n+                              '}''}'\"\"\",\n@@ -270,11 +270,11 @@\n-                \"\\\"NewSessionTicket\\\": '{'\\n\" +\n-                \"  \\\"ticket_lifetime\\\"      : \\\"{0}\\\",\\n\" +\n-                \"  \\\"ticket_age_add\\\"       : \\\"{1}\\\",\\n\" +\n-                \"  \\\"ticket_nonce\\\"         : \\\"{2}\\\",\\n\" +\n-                \"  \\\"ticket\\\"               : '{'\\n\" +\n-                \"{3}\\n\" +\n-                \"  '}'\" +\n-                \"  \\\"extensions\\\"           : [\\n\" +\n-                \"{4}\\n\" +\n-                \"  ]\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"NewSessionTicket\": '{'\n+                              \"ticket_lifetime\"      : \"{0}\",\n+                              \"ticket_age_add\"       : \"{1}\",\n+                              \"ticket_nonce\"         : \"{2}\",\n+                              \"ticket\"               : '{'\n+                            {3}\n+                              '}'  \"extensions\"           : [\n+                            {4}\n+                              ]\n+                            '}'\"\"\",\n@@ -363,1 +363,1 @@\n-                \/\/ using a allowable PSK exchange key mode.\n+                \/\/ using an allowable PSK exchange key mode.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/NewSessionTicket.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -546,1 +546,1 @@\n-            byte[] fragment, int offset, int length) throws IOException {\n+            byte[] fragment, int offset, int length) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/OutputRecord.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    final ByteBuffer fragment;        \/\/ null if need to be reassembled\n+    final ByteBuffer fragment;        \/\/ null if it needs to be reassembled\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Plaintext.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,4 +31,1 @@\n-import java.util.List;\n-import java.util.ArrayList;\n-import java.util.Locale;\n-import java.util.Collection;\n+import java.util.*;\n@@ -220,6 +217,6 @@\n-                \"\\\"PreSharedKey\\\": '{'\\n\" +\n-                \"  \\\"identities\\\": '{'\\n\" +\n-                \"{0}\\n\" +\n-                \"  '}'\" +\n-                \"  \\\"binders\\\": \\\"{1}\\\",\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"PreSharedKey\": '{'\n+                              \"identities\": '{'\n+                            {0}\n+                              '}'  \"binders\": \"{1}\",\n+                            '}'\"\"\",\n@@ -302,3 +299,4 @@\n-                \"\\\"PreSharedKey\\\": '{'\\n\" +\n-                \"  \\\"selected_identity\\\"      : \\\"{0}\\\",\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"PreSharedKey\": '{'\n+                              \"selected_identity\"      : \"{0}\",\n+                            '}'\"\"\",\n@@ -447,1 +445,1 @@\n-        \/\/ client authentication was used in an initial session and it is\n+        \/\/ client authentication was used in an initial session, and it is\n@@ -686,1 +684,1 @@\n-            \/\/ The PSK ID can only be used in one connections, but this method\n+            \/\/ The PSK ID can only be used in one connection, but this method\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/PreSharedKeyExtension.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -219,2 +219,2 @@\n-            \"(\\\\{[0-9A-Fa-f]+,[0-9A-Fa-f]+\\\\})\" +\n-            \"(,\\\\{[0-9A-Fa-f]+,[0-9A-Fa-f]+\\\\})*\");\n+            \"(\\\\{[0-9A-Fa-f]+,[0-9A-Fa-f]+})\" +\n+            \"(,\\\\{[0-9A-Fa-f]+,[0-9A-Fa-f]+})*\");\n@@ -223,1 +223,1 @@\n-            \"\\\\{([0-9A-Fa-f]+),([0-9A-Fa-f]+)\\\\}\");\n+            \"\\\\{([0-9A-Fa-f]+),([0-9A-Fa-f]+)}\");\n@@ -310,1 +310,1 @@\n-            Collections.<Integer,DHParameterSpec>unmodifiableMap(tempFFDHEs);\n+            Collections.unmodifiableMap(tempFFDHEs);\n@@ -312,1 +312,1 @@\n-            Collections.<Integer,DHParameterSpec>unmodifiableMap(defaultParams);\n+            Collections.unmodifiableMap(defaultParams);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/PredefinedDHParameterSpecs.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-    private ProtocolVersion(int id, String name, boolean isDTLS) {\n+    ProtocolVersion(int id, String name, boolean isDTLS) {\n@@ -159,1 +159,1 @@\n-                EnumSet.<CryptoPrimitive>of(CryptoPrimitive.KEY_AGREEMENT),\n+                EnumSet.of(CryptoPrimitive.KEY_AGREEMENT),\n@@ -237,3 +237,1 @@\n-               if (!allowSSL20Hello || (v != SSL20Hello.id)) {\n-                   return false;\n-               }\n+                return allowSSL20Hello && (v == SSL20Hello.id);\n@@ -285,1 +283,1 @@\n-            return Collections.<ProtocolVersion>emptyList();\n+            return Collections.emptyList();\n@@ -387,1 +385,1 @@\n-     * Select the lower of that suggested protocol version and\n+     * Select the lower of the suggested protocol version and\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ProtocolVersion.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -286,1 +286,1 @@\n-            \/\/ No session resumptio is allowed.\n+            \/\/ No session resumption is allowed.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/PskKeyExchangeModesExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,6 +119,7 @@\n-                \"\\\"RSA ClientKeyExchange\\\": '{'\\n\" +\n-                \"  \\\"client_version\\\":  {0}\\n\" +\n-                \"  \\\"encncrypted\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"  '}'\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"RSA ClientKeyExchange\": '{'\n+                              \"client_version\":  {0}\n+                              \"encrypted\": '{'\n+                            {1}\n+                              '}'\n+                            '}'\"\"\",\n@@ -256,3 +257,0 @@\n-                    if (rsaPossession != null) {\n-                        break;\n-                    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/RSAClientKeyExchange.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,15 +167,16 @@\n-                \"\\\"RSA ServerKeyExchange\\\": '{'\\n\" +\n-                \"  \\\"parameters\\\": '{'\\n\" +\n-                \"    \\\"rsa_modulus\\\": '{'\\n\" +\n-                \"{0}\\n\" +\n-                \"    '}',\\n\" +\n-                \"    \\\"rsa_exponent\\\": '{'\\n\" +\n-                \"{1}\\n\" +\n-                \"    '}'\\n\" +\n-                \"  '}',\\n\" +\n-                \"  \\\"digital signature\\\":  '{'\\n\" +\n-                \"    \\\"signature\\\": '{'\\n\" +\n-                \"{2}\\n\" +\n-                \"    '}',\\n\" +\n-                \"  '}'\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"RSA ServerKeyExchange\": '{'\n+                              \"parameters\": '{'\n+                                \"rsa_modulus\": '{'\n+                            {0}\n+                                '}',\n+                                \"rsa_exponent\": '{'\n+                            {1}\n+                                '}'\n+                              '}',\n+                              \"digital signature\":  '{'\n+                                \"signature\": '{'\n+                            {2}\n+                                '}',\n+                              '}'\n+                            '}'\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/RSAServerKeyExchange.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-     * Follows the standard JCA getInstance() model, so it return the\n+     * Follows the standard JCA getInstance() model, so it returns the\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/RSASignature.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import sun.security.util.ByteArrays;\n-\n-import java.io.*;\n@@ -34,0 +31,1 @@\n+import sun.security.util.ByteArrays;\n@@ -102,1 +100,1 @@\n-    RandomCookie(ByteBuffer m) throws IOException {\n+    RandomCookie(ByteBuffer m) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/RandomCookie.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,5 +41,5 @@\n-    static final int    maxMacSize = 48;        \/\/ the max supported MAC or\n-                                                \/\/ AEAD tag size\n-    static final int    maxDataSize = 16384;    \/\/ 2^14 bytes of data\n-    static final int    maxPadding = 256;       \/\/ block cipher padding\n-    static final int    maxIVLength = 16;       \/\/ the max supported IV length\n+    int    maxMacSize = 48;        \/\/ the max supported MAC or\n+                                   \/\/ AEAD tag size\n+    int    maxDataSize = 16384;    \/\/ 2^14 bytes of data\n+    int    maxPadding = 256;       \/\/ block cipher padding\n+    int    maxIVLength = 16;       \/\/ the max supported IV length\n@@ -47,2 +47,2 @@\n-    static final int    maxFragmentSize = 18432;    \/\/ the max fragment size\n-                                                    \/\/ 2^14 + 2048\n+    int    maxFragmentSize = 18432;    \/\/ the max fragment size\n+                                       \/\/ 2^14 + 2048\n@@ -53,1 +53,1 @@\n-    static final boolean enableCBCProtection =\n+    boolean enableCBCProtection =\n@@ -59,3 +59,3 @@\n-    static final int OVERFLOW_OF_INT08 = (0x01 << 8);\n-    static final int OVERFLOW_OF_INT16 = (0x01 << 16);\n-    static final int OVERFLOW_OF_INT24 = (0x01 << 24);\n+    int OVERFLOW_OF_INT08 = (0x01 << 8);\n+    int OVERFLOW_OF_INT16 = (0x01 << 16);\n+    int OVERFLOW_OF_INT24 = (0x01 << 24);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Record.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        \/\/ A nominal object that does not holding any real renegotiation info.\n+        \/\/ A nominal object that does not hold any real renegotiation info.\n@@ -95,0 +95,1 @@\n+            Object[] messageFields;\n@@ -96,1 +97,1 @@\n-                Object[] messageFields = {\n+                messageFields = new Object[]{\n@@ -98,2 +99,1 @@\n-                    };\n-                return messageFormat.format(messageFields);\n+                };\n@@ -101,1 +101,1 @@\n-                Object[] messageFields = {\n+                messageFields = new Object[]{\n@@ -103,2 +103,1 @@\n-                    };\n-                return messageFormat.format(messageFields);\n+                };\n@@ -106,0 +105,1 @@\n+            return messageFormat.format(messageFields);\n@@ -422,1 +422,1 @@\n-            \/\/ or SCSV signling, which is mandatory for ClientHello message.\n+            \/\/ or SCSV signaling, which is mandatory for ClientHello message.\n@@ -500,1 +500,1 @@\n-            \/\/ or SCSV signling, which is mandatory for ClientHello message.\n+            \/\/ or SCSV signaling, which is mandatory for ClientHello message.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/RenegoInfoExtension.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -70,22 +70,20 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new NullReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_NONE\n-            ),\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new NullReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_13\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new NullWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_NONE\n-            ),\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new NullWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new NullReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_NONE\n+        ),\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new NullReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_13\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new NullWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_NONE\n+        ),\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new NullWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_13\n+        )\n+    }),\n@@ -95,14 +93,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new StreamReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new StreamWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new StreamReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new StreamWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        )\n+    }),\n@@ -112,14 +108,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new StreamReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new StreamWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new StreamReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new StreamWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        )\n+    }),\n@@ -129,14 +123,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        )\n+    }),\n@@ -147,14 +139,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new StreamReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new StreamWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new StreamReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_12\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new StreamWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_12\n+        )\n+    }),\n@@ -164,22 +154,20 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            ),\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T11BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_11\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            ),\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T11BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_11\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        ),\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T11BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_11\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        ),\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T11BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_11\n+        )\n+    }),\n@@ -189,22 +177,20 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            ),\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T11BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_11_12\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            ),\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T11BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_11_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        ),\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T11BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_11_12\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        ),\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T11BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_11_12\n+        )\n+    }),\n@@ -214,14 +200,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                null,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                null,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            null,\n+            ProtocolVersion.PROTOCOLS_TO_12\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            null,\n+            ProtocolVersion.PROTOCOLS_TO_12\n+        )\n+    }),\n@@ -231,22 +215,20 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            ),\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T11BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_11_12\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            ),\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T11BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_11_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        ),\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T11BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_11_12\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        ),\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T11BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_11_12\n+        )\n+    }),\n@@ -256,22 +238,20 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            ),\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T11BlockReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_11_12\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T10BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_TO_10\n-            ),\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T11BlockWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_11_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        ),\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T11BlockReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_11_12\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T10BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_TO_10\n+        ),\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T11BlockWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_11_12\n+        )\n+    }),\n@@ -281,14 +261,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T12GcmReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T12GcmWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T12GcmReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_12\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T12GcmWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_12\n+        )\n+    }),\n@@ -298,14 +276,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T12GcmReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T12GcmWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T12GcmReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_12\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T12GcmWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_12\n+        )\n+    }),\n@@ -315,14 +291,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T13GcmReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T13GcmWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T13GcmReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_13\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T13GcmWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_13\n+        )\n+    }),\n@@ -332,14 +306,12 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T13GcmReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T13GcmWriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T13GcmReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_13\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T13GcmWriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_13\n+        )\n+    }),\n@@ -350,22 +322,20 @@\n-        (Map.Entry<ReadCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T12CC20P1305ReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            ),\n-            new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n-                new T13CC20P1305ReadCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<WriteCipherGenerator,\n-                ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T12CC20P1305WriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            ),\n-            new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n-                new T13CC20P1305WriteCipherGenerator(),\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }));\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T12CC20P1305ReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_12\n+        ),\n+        new SimpleImmutableEntry<ReadCipherGenerator, ProtocolVersion[]>(\n+            new T13CC20P1305ReadCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_13\n+        )\n+    },\n+            new Map.Entry[] {\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T12CC20P1305WriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_12\n+        ),\n+        new SimpleImmutableEntry<WriteCipherGenerator, ProtocolVersion[]>(\n+            new T13CC20P1305WriteCipherGenerator(),\n+            ProtocolVersion.PROTOCOLS_OF_13\n+        )\n+    });\n@@ -486,8 +456,8 @@\n-    private SSLCipher(String transformation,\n-            CipherType cipherType, int keySize,\n-            int expandedKeySize, int ivSize,\n-            int fixedIvSize, boolean allowed, boolean exportable,\n-            Map.Entry<ReadCipherGenerator,\n-                    ProtocolVersion[]>[] readCipherGenerators,\n-            Map.Entry<WriteCipherGenerator,\n-                    ProtocolVersion[]>[] writeCipherGenerators) {\n+    SSLCipher(String transformation,\n+              CipherType cipherType, int keySize,\n+              int expandedKeySize, int ivSize,\n+              int fixedIvSize, boolean allowed, boolean exportable,\n+              Map.Entry<ReadCipherGenerator,\n+                      ProtocolVersion[]>[] readCipherGenerators,\n+              Map.Entry<WriteCipherGenerator,\n+                      ProtocolVersion[]>[] writeCipherGenerators) {\n@@ -1190,1 +1160,1 @@\n-                    minimal = (minimal >= blockSize) ? minimal : blockSize;\n+                    minimal = Math.max(minimal, blockSize);\n@@ -1469,1 +1439,1 @@\n-                    minimal = (minimal >= blockSize) ? minimal : blockSize;\n+                    minimal = Math.max(minimal, blockSize);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLCipher.java","additions":238,"deletions":268,"binary":false,"changes":506,"status":"modified"},{"patch":"@@ -102,5 +102,1 @@\n-        if (sr == null) {\n-            secureRandom = new SecureRandom();\n-        } else {\n-            secureRandom = sr;\n-        }\n+        secureRandom = Objects.requireNonNullElseGet(sr, SecureRandom::new);\n@@ -111,1 +107,1 @@\n-         * first connection to timeout and fail. Make sure it is\n+         * first connection to time out and fail. Make sure it is\n@@ -125,2 +121,1 @@\n-    private X509TrustManager chooseTrustManager(TrustManager[] tm)\n-            throws KeyManagementException {\n+    private X509TrustManager chooseTrustManager(TrustManager[] tm) {\n@@ -143,2 +138,1 @@\n-    private X509ExtendedKeyManager chooseKeyManager(KeyManager[] kms)\n-            throws KeyManagementException {\n+    private X509ExtendedKeyManager chooseKeyManager(KeyManager[] kms) {\n@@ -480,1 +474,1 @@\n-                Collections.<ProtocolVersion>emptyList();\n+                Collections.emptyList();\n@@ -976,1 +970,1 @@\n-                public Object run() throws Exception {\n+                public Object run() {\n@@ -1306,1 +1300,1 @@\n-        private static IllegalArgumentException reservedException;\n+        private static final IllegalArgumentException reservedException;\n@@ -1463,1 +1457,1 @@\n-                                    socket instanceof SSLSocket) {\n+                socket instanceof SSLSocket sslSocket) {\n@@ -1465,1 +1459,0 @@\n-            SSLSocket sslSocket = (SSLSocket)socket;\n@@ -1482,3 +1475,1 @@\n-                if (session instanceof ExtendedSSLSession) {\n-                    ExtendedSSLSession extSession =\n-                                    (ExtendedSSLSession)session;\n+                if (session instanceof ExtendedSSLSession extSession) {\n@@ -1522,3 +1513,1 @@\n-                if (session instanceof ExtendedSSLSession) {\n-                    ExtendedSSLSession extSession =\n-                                    (ExtendedSSLSession)session;\n+                if (session instanceof ExtendedSSLSession extSession) {\n@@ -1569,1 +1558,1 @@\n-                    checker.check(cert, Collections.<String>emptySet());\n+                    checker.check(cert, Collections.emptySet());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLContextImpl.java","additions":11,"deletions":22,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-            \/\/ mitigated by sending the last fligth twice.\n+            \/\/ mitigated by sending the last flight twice.\n@@ -1133,1 +1133,1 @@\n-                    } \/\/ otherwise report the hc delegatedThrown\n+                    } \/\/ otherwise, report the hc delegatedThrown\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLEngineImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-                \/\/ Gobblygook!\n+                \/\/ Gobbledygook!\n@@ -355,1 +355,1 @@\n-            throws IOException, BadPaddingException {\n+            throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLEngineInputRecord.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    void encodeAlert(byte level, byte description) throws IOException {\n+    void encodeAlert(byte level, byte description) {\n@@ -92,1 +92,1 @@\n-            int offset, int length) throws IOException {\n+            int offset, int length) {\n@@ -139,1 +139,1 @@\n-    void encodeChangeCipherSpec() throws IOException {\n+    void encodeChangeCipherSpec() {\n@@ -164,1 +164,1 @@\n-    void encodeV2NoCipher() throws IOException {\n+    void encodeV2NoCipher() {\n@@ -205,1 +205,1 @@\n-        \/\/ Don't process the incoming record until all of the\n+        \/\/ Don't process the incoming record until all the\n@@ -233,1 +233,0 @@\n-                needMorePayload = true;\n@@ -388,1 +387,1 @@\n-                int offset, int length) throws IOException {\n+                int offset, int length) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLEngineOutputRecord.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -510,1 +510,1 @@\n-     *                  to act until all of the message inputs have\n+     *                  to act until all the message inputs have\n@@ -532,1 +532,1 @@\n-    private SSLExtension(int id, String name) {\n+    SSLExtension(int id, String name) {\n@@ -546,1 +546,1 @@\n-    private SSLExtension(int id, String name, SSLHandshake handshakeType,\n+    SSLExtension(int id, String name, SSLHandshake handshakeType,\n@@ -665,3 +665,4 @@\n-            \"\\\"{0} ({1})\\\": '{'\\n\" +\n-            \"{2}\\n\" +\n-            \"'}'\",\n+                \"\"\"\n+                        \"{0} ({1})\": '{'\n+                        {2}\n+                        '}'\"\"\",\n@@ -690,1 +691,1 @@\n-    static interface ExtensionConsumer {\n+    interface ExtensionConsumer {\n@@ -703,1 +704,1 @@\n-    static interface SSLExtensionSpec {\n+    interface SSLExtensionSpec {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLExtension.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -302,1 +302,0 @@\n-                    encodedLength += encoded.length + 4;\n@@ -305,1 +304,0 @@\n-                    encodedLength += encoded.length + 4;\n@@ -309,0 +307,1 @@\n+                encodedLength += encoded.length + 4;\n@@ -368,1 +367,0 @@\n-                return builder.toString();\n@@ -379,1 +377,0 @@\n-                return builder.toString();\n@@ -381,0 +378,1 @@\n+            return builder.toString();\n@@ -387,3 +385,4 @@\n-            \"\\\"{0} ({1})\\\": '{'\\n\" +\n-            \"{2}\\n\" +\n-            \"'}'\",\n+                \"\"\"\n+                        \"{0} ({1})\": '{'\n+                        {2}\n+                        '}'\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLExtensions.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,12 +37,12 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                HelloRequest.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                HelloRequest.handshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            HelloRequest.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            HelloRequest.handshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            }),\n@@ -52,12 +52,12 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                ClientHello.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                ClientHello.handshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ClientHello.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ClientHello.handshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_13\n+                    )\n+            }),\n@@ -67,16 +67,16 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                ServerHello.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                ServerHello.t12HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            ),\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                ServerHello.t13HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ServerHello.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ServerHello.t12HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            ServerHello.t13HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            }),\n@@ -86,12 +86,13 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                ServerHello.handshakeConsumer,      \/\/ Use ServerHello consumer\n-                ProtocolVersion.PROTOCOLS_TO_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                ServerHello.hrrHandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            \/\/ Use ServerHello consumer\n+                            ServerHello.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ServerHello.hrrHandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            }),\n@@ -101,12 +102,12 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                HelloVerifyRequest.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                HelloVerifyRequest.handshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            HelloVerifyRequest.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            HelloVerifyRequest.handshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            }),\n@@ -116,16 +117,16 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                 NewSessionTicket.handshake12Consumer,\n-                 ProtocolVersion.PROTOCOLS_TO_12\n-            ),\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                 NewSessionTicket.handshakeConsumer,\n-                 ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                 NewSessionTicket.handshake12Producer,\n-                 ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            NewSessionTicket.handshake12Consumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            NewSessionTicket.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            NewSessionTicket.handshake12Producer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            }),\n@@ -136,12 +137,12 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                EncryptedExtensions.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                EncryptedExtensions.handshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            EncryptedExtensions.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            EncryptedExtensions.handshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            }),\n@@ -151,20 +152,20 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateMessage.t12HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            ),\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateMessage.t13HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateMessage.t12HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            ),\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateMessage.t13HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateMessage.t12HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateMessage.t13HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateMessage.t12HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateMessage.t13HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            }),\n@@ -174,12 +175,12 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                ServerKeyExchange.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                ServerKeyExchange.handshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ServerKeyExchange.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ServerKeyExchange.handshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            }),\n@@ -189,28 +190,28 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateRequest.t10HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_11\n-            ),\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateRequest.t12HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            ),\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateRequest.t13HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateRequest.t10HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_11\n-            ),\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateRequest.t12HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            ),\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateRequest.t13HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateRequest.t10HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_11\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateRequest.t12HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateRequest.t13HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateRequest.t10HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_11\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateRequest.t12HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateRequest.t13HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            }),\n@@ -220,12 +221,12 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                ServerHelloDone.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                ServerHelloDone.handshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ServerHelloDone.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ServerHelloDone.handshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            }),\n@@ -235,36 +236,36 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateVerify.s30HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_OF_30\n-            ),\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateVerify.t10HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_10_11\n-            ),\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateVerify.t12HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            ),\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateVerify.t13HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateVerify.s30HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_30\n-            ),\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateVerify.t10HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_10_11\n-            ),\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateVerify.t12HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_12\n-            ),\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateVerify.t13HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateVerify.s30HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_30\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateVerify.t10HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_10_11\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateVerify.t12HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateVerify.t13HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateVerify.s30HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_30\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateVerify.t10HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_10_11\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateVerify.t12HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            CertificateVerify.t13HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            }),\n@@ -274,12 +275,12 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                ClientKeyExchange.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                ClientKeyExchange.handshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ClientKeyExchange.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            ClientKeyExchange.handshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            }),\n@@ -289,20 +290,20 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                Finished.t12HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            ),\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                Finished.t13HandshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                Finished.t12HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            ),\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                Finished.t13HandshakeProducer,\n-                ProtocolVersion.PROTOCOLS_OF_13\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            Finished.t12HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            Finished.t13HandshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            Finished.t12HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    ),\n+                    new SimpleImmutableEntry<>(\n+                            Finished.t13HandshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_OF_13\n+                    )\n+            }),\n@@ -314,18 +315,18 @@\n-        (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n-                CertificateStatus.handshakeConsumer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n-                CertificateStatus.handshakeProducer,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        }),\n-        (Map.Entry<HandshakeAbsence, ProtocolVersion[]>[])(new Map.Entry[] {\n-            new SimpleImmutableEntry<HandshakeAbsence, ProtocolVersion[]>(\n-                CertificateStatus.handshakeAbsence,\n-                ProtocolVersion.PROTOCOLS_TO_12\n-            )\n-        })),\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateStatus.handshakeConsumer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateStatus.handshakeProducer,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n+                            CertificateStatus.handshakeAbsence,\n+                            ProtocolVersion.PROTOCOLS_TO_12\n+                    )\n+            }),\n@@ -337,2 +338,2 @@\n-            (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(new Map.Entry[] {\n-                    new SimpleImmutableEntry<SSLConsumer, ProtocolVersion[]>(\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n@@ -342,3 +343,3 @@\n-            }),\n-            (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(new Map.Entry[] {\n-                    new SimpleImmutableEntry<HandshakeProducer, ProtocolVersion[]>(\n+            },\n+            new Map.Entry[] {\n+                    new SimpleImmutableEntry<>(\n@@ -348,1 +349,1 @@\n-            })),\n+            }),\n@@ -361,6 +362,3 @@\n-                (Map.Entry<SSLConsumer, ProtocolVersion[]>[])(\n-                        new Map.Entry[0]),\n-                (Map.Entry<HandshakeProducer, ProtocolVersion[]>[])(\n-                        new Map.Entry[0]),\n-                (Map.Entry<HandshakeAbsence, ProtocolVersion[]>[])(\n-                        new Map.Entry[0]));\n+                new Map.Entry[0],\n+                new Map.Entry[0],\n+                new Map.Entry[0]);\n@@ -375,2 +373,1 @@\n-                (Map.Entry<HandshakeAbsence, ProtocolVersion[]>[])(\n-                        new Map.Entry[0]));\n+                new Map.Entry[0]);\n@@ -532,2 +529,2 @@\n-            \/\/ The server side can delivering kickstart message after the\n-            \/\/ connection has established.\n+            \/\/ The server side can deliver kickstart message after the\n+            \/\/ connection has been established.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLHandshake.java","additions":264,"deletions":267,"binary":false,"changes":531,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLHandshakeBinding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.*;\n@@ -30,4 +31,1 @@\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n+\n@@ -67,1 +65,1 @@\n-            } else if (context instanceof ServerHandshakeContext) {\n+            } else if (context instanceof ServerHandshakeContext shc) {\n@@ -70,1 +68,0 @@\n-                ServerHandshakeContext shc = (ServerHandshakeContext)context;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLKeyExchange.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -42,4 +42,1 @@\n-import java.util.HexFormat;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.ResourceBundle;\n+import java.util.*;\n@@ -274,8 +271,10 @@\n-                \"\\\"version\\\"            : \\\"v{0}\\\",\\n\" +\n-                \"\\\"serial number\\\"      : \\\"{1}\\\",\\n\" +\n-                \"\\\"signature algorithm\\\": \\\"{2}\\\",\\n\" +\n-                \"\\\"issuer\\\"             : \\\"{3}\\\",\\n\" +\n-                \"\\\"not before\\\"         : \\\"{4}\\\",\\n\" +\n-                \"\\\"not  after\\\"         : \\\"{5}\\\",\\n\" +\n-                \"\\\"subject\\\"            : \\\"{6}\\\",\\n\" +\n-                \"\\\"subject public key\\\" : \\\"{7}\\\"\\n\",\n+                \"\"\"\n+                        \"version\"            : \"v{0}\",\n+                        \"serial number\"      : \"{1}\",\n+                        \"signature algorithm\": \"{2}\",\n+                        \"issuer\"             : \"{3}\",\n+                        \"not before\"         : \"{4}\",\n+                        \"not  after\"         : \"{5}\",\n+                        \"subject\"            : \"{6}\",\n+                        \"subject public key\" : \"{7}\"\n+                        \"\"\",\n@@ -286,11 +285,13 @@\n-                \"\\\"version\\\"            : \\\"v{0}\\\",\\n\" +\n-                \"\\\"serial number\\\"      : \\\"{1}\\\",\\n\" +\n-                \"\\\"signature algorithm\\\": \\\"{2}\\\",\\n\" +\n-                \"\\\"issuer\\\"             : \\\"{3}\\\",\\n\" +\n-                \"\\\"not before\\\"         : \\\"{4}\\\",\\n\" +\n-                \"\\\"not  after\\\"         : \\\"{5}\\\",\\n\" +\n-                \"\\\"subject\\\"            : \\\"{6}\\\",\\n\" +\n-                \"\\\"subject public key\\\" : \\\"{7}\\\",\\n\" +\n-                \"\\\"extensions\\\"         : [\\n\" +\n-                \"{8}\\n\" +\n-                \"]\\n\",\n+                    \"\"\"\n+                            \"version\"            : \"v{0}\",\n+                            \"serial number\"      : \"{1}\",\n+                            \"signature algorithm\": \"{2}\",\n+                            \"issuer\"             : \"{3}\",\n+                            \"not before\"         : \"{4}\",\n+                            \"not  after\"         : \"{5}\",\n+                            \"subject\"            : \"{6}\",\n+                            \"subject public key\" : \"{7}\",\n+                            \"extensions\"         : [\n+                            {8}\n+                            ]\n+                            \"\"\",\n@@ -310,9 +311,11 @@\n-                \"'{'\\n\" +\n-                \"  \\\"logger\\\"      : \\\"{0}\\\",\\n\" +\n-                \"  \\\"level\\\"       : \\\"{1}\\\",\\n\" +\n-                \"  \\\"thread id\\\"   : \\\"{2}\\\",\\n\" +\n-                \"  \\\"thread name\\\" : \\\"{3}\\\",\\n\" +\n-                \"  \\\"time\\\"        : \\\"{4}\\\",\\n\" +\n-                \"  \\\"caller\\\"      : \\\"{5}\\\",\\n\" +\n-                \"  \\\"message\\\"     : \\\"{6}\\\"\\n\" +\n-                \"'}'\\n\",\n+                    \"\"\"\n+                            '{'\n+                              \"logger\"      : \"{0}\",\n+                              \"level\"       : \"{1}\",\n+                              \"thread id\"   : \"{2}\",\n+                              \"thread name\" : \"{3}\",\n+                              \"time\"        : \"{4}\",\n+                              \"caller\"      : \"{5}\",\n+                              \"message\"     : \"{6}\"\n+                            '}'\n+                            \"\"\",\n@@ -328,12 +331,14 @@\n-                \"'{'\\n\" +\n-                \"  \\\"logger\\\"      : \\\"{0}\\\",\\n\" +\n-                \"  \\\"level\\\"       : \\\"{1}\\\",\\n\" +\n-                \"  \\\"thread id\\\"   : \\\"{2}\\\",\\n\" +\n-                \"  \\\"thread name\\\" : \\\"{3}\\\",\\n\" +\n-                \"  \\\"time\\\"        : \\\"{4}\\\",\\n\" +\n-                \"  \\\"caller\\\"      : \\\"{5}\\\",\\n\" +\n-                \"  \\\"message\\\"     : \\\"{6}\\\",\\n\" +\n-                \"  \\\"specifics\\\"   : [\\n\" +\n-                \"{7}\\n\" +\n-                \"  ]\\n\" +\n-                \"'}'\\n\",\n+                    \"\"\"\n+                            '{'\n+                              \"logger\"      : \"{0}\",\n+                              \"level\"       : \"{1}\",\n+                              \"thread id\"   : \"{2}\",\n+                              \"thread name\" : \"{3}\",\n+                              \"time\"        : \"{4}\",\n+                              \"caller\"      : \"{5}\",\n+                              \"message\"     : \"{6}\",\n+                              \"specifics\"   : [\n+                            {7}\n+                              ]\n+                            '}'\n+                            \"\"\",\n@@ -344,3 +349,5 @@\n-                \"{0}|{1}|{2}|{3}|{4}|{5}|{6} (\\n\" +\n-                \"{7}\\n\" +\n-                \")\\n\",\n+                    \"\"\"\n+                            {0}|{1}|{2}|{3}|{4}|{5}|{6} (\n+                            {7}\n+                            )\n+                            \"\"\",\n@@ -350,3 +357,4 @@\n-                \"\\\"{0}\\\" : '{'\\n\" +\n-                \"{1}\" +\n-                \"'}'\\n\",\n+                \"\"\"\n+                        \"{0}\" : '{'\n+                        {1}'}'\n+                        \"\"\",\n@@ -569,2 +577,2 @@\n-                formatted = \"\\\"\" + key + \"\\\": \\\"\" + (String)value + \"\\\"\";\n-            } else if (value instanceof String[]) {\n+                formatted = \"\\\"\" + key + \"\\\": \\\"\" + value + \"\\\"\";\n+            } else if (value instanceof String[] strings) {\n@@ -576,1 +584,0 @@\n-                String[] strings = (String[])value;\n@@ -580,1 +587,1 @@\n-                    if (string != strings[strings.length - 1]) {\n+                    if (!Objects.equals(string, strings[strings.length - 1])) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLLogger.java","additions":61,"deletions":54,"binary":false,"changes":115,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    private SSLMasterKeyDerivation(String name) {\n+    SSLMasterKeyDerivation(String name) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLMasterKeyDerivation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,2 +35,2 @@\n-    static final int    headerSize = 5;             \/\/ SSLv3 record header\n-    static final int    handshakeHeaderSize = 4;    \/\/ SSLv3 handshake header\n+    int    headerSize = 5;             \/\/ SSLv3 record header\n+    int    handshakeHeaderSize = 4;    \/\/ SSLv3 handshake header\n@@ -41,1 +41,1 @@\n-    static final int    headerPlusMaxIVSize =\n+    int    headerPlusMaxIVSize =\n@@ -49,1 +49,1 @@\n-    static final int    maxPlaintextPlusSize =\n+    int    maxPlaintextPlusSize =\n@@ -64,1 +64,1 @@\n-    static final int    maxRecordSize =\n+    int    maxRecordSize =\n@@ -79,1 +79,1 @@\n-    static final int    maxLargeRecordSize =\n+    int    maxLargeRecordSize =\n@@ -88,1 +88,1 @@\n-    static final byte[] v2NoCipher = {\n+    byte[] v2NoCipher = {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLRecord.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * connections if they the authentication context has not been given\n+ * connections if the authentication context has not been given\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLServerSocketImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,1 +157,1 @@\n-        this.requestedServerNames = Collections.<SNIServerName>emptyList();\n+        this.requestedServerNames = Collections.emptyList();\n@@ -407,1 +407,1 @@\n-            this.requestedServerNames = Collections.<SNIServerName>emptyList();\n+            this.requestedServerNames = Collections.emptyList();\n@@ -443,1 +443,1 @@\n-            this.host = new String();\n+            this.host = \"\";\n@@ -1005,2 +1005,1 @@\n-        if (obj instanceof SSLSessionImpl) {\n-            SSLSessionImpl sess = (SSLSessionImpl) obj;\n+        if (obj instanceof SSLSessionImpl sess) {\n@@ -1374,2 +1373,1 @@\n-                return (maximumPacketSize > packetSize) ?\n-                        maximumPacketSize : packetSize;\n+                return Math.max(maximumPacketSize, packetSize);\n@@ -1411,2 +1409,1 @@\n-                return (negotiatedMaxFragLen > fragmentSize) ?\n-                        negotiatedMaxFragLen : fragmentSize;\n+                return Math.max(negotiatedMaxFragLen, fragmentSize);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSessionImpl.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,2 +86,1 @@\n-    throws IOException, UnknownHostException\n-    {\n+    throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketFactoryImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -271,1 +271,1 @@\n-     * protocols which negotiate use of a SSL based security.\n+     * protocols which negotiate use of an SSL based security.\n@@ -441,1 +441,1 @@\n-            \/\/ double check the context status\n+            \/\/ double-check the context status\n@@ -568,1 +568,1 @@\n-    \/\/ Please don't synchronized this method.  Otherwise, the read and close\n+    \/\/ Please don't synchronize this method.  Otherwise, the read and close\n@@ -673,2 +673,1 @@\n-            \/\/ don't wait more than SO_LINGER for obtaining the\n-            \/\/ the lock.\n+            \/\/ don't wait more than SO_LINGER for obtaining the lock.\n@@ -773,5 +772,3 @@\n-        boolean hasCloseReceipt = false;\n-        if (conContext.isNegotiated &&\n-                !conContext.protocolVersion.useTLS13PlusSpec()) {\n-            hasCloseReceipt = true;\n-        }   \/\/ No close receipt if handshake has no completed.\n+        boolean hasCloseReceipt = conContext.isNegotiated &&\n+                !conContext.protocolVersion.useTLS13PlusSpec();\n+        \/\/ No close receipt if handshake has not completed.\n@@ -821,1 +818,1 @@\n-    \/\/ Please don't synchronized this method.  Otherwise, the read and close\n+    \/\/ Please don't synchronize this method.  Otherwise, the read and close\n@@ -864,1 +861,1 @@\n-    \/\/ Please don't synchronized this method.  Otherwise, the read and close\n+    \/\/ Please don't synchronize this method.  Otherwise, the read and close\n@@ -918,1 +915,1 @@\n-            \/\/ double check the context status\n+            \/\/ double-check the context status\n@@ -963,1 +960,1 @@\n-            \/\/ Currently not synchronized.\n+            \/\/ Currently, not synchronized.\n@@ -1093,1 +1090,1 @@\n-                \/\/ If the deplete() did not hold the lock, clean up the\n+                \/\/ If deplete() did not hold the lock, clean up the\n@@ -1183,1 +1180,1 @@\n-         * Try the best to use up the input records so as to close the\n+         * Try to use up input records to close the\n@@ -1213,1 +1210,2 @@\n-            if (!(conContext.inputRecord instanceof SSLSocketInputRecord)) {\n+            if (!(conContext.inputRecord instanceof SSLSocketInputRecord\n+                    socketInputRecord)) {\n@@ -1217,2 +1215,0 @@\n-            SSLSocketInputRecord socketInputRecord =\n-                    (SSLSocketInputRecord)conContext.inputRecord;\n@@ -1445,1 +1441,1 @@\n-     * here so as to use the socket level synchronization.\n+     * here to use the socket level synchronization.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketImpl.java","additions":16,"deletions":20,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-                \/\/ Gobblygook!\n+                \/\/ Gobbledygook!\n@@ -150,1 +150,1 @@\n-    \/\/ Note that the input arguments are not used actually.\n+    \/\/ Note that the input arguments are not actually used.\n@@ -179,1 +179,1 @@\n-            \/\/ The record header should has consumed.\n+            \/\/ The record header should be consumed.\n@@ -225,1 +225,1 @@\n-        if (contentLen < 0 || contentLen > maxLargeRecordSize - headerSize) {\n+        if (contentLen > maxLargeRecordSize - headerSize) {\n@@ -231,1 +231,1 @@\n-        \/\/ Read a complete record and store in the recordBody\n+        \/\/ Read a complete record and store in the recordBody.\n@@ -233,1 +233,1 @@\n-        \/\/ read operation timedout\n+        \/\/ read operation timeout\n@@ -370,1 +370,1 @@\n-    private Plaintext[] handleUnknownRecord() throws IOException, BadPaddingException {\n+    private Plaintext[] handleUnknownRecord() throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-                byte[] label, int length) throws IOException {\n+                byte[] label, int length) {\n@@ -188,1 +188,1 @@\n-        private KeySchedule(String label, boolean isIv) {\n+        KeySchedule(String label, boolean isIv) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTrafficKeyDerivation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,7 +34,1 @@\n-import java.util.Arrays;\n-import java.util.EnumSet;\n-import java.util.HexFormat;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n+import java.util.*;\n@@ -218,1 +212,1 @@\n-                                            \/\/ extensions is mandatory.\n+                                            \/\/ extensions are mandatory.\n@@ -224,10 +218,11 @@\n-                \"\\\"{0}\\\": '{'\\n\" +\n-                \"  \\\"server version\\\"      : \\\"{1}\\\",\\n\" +\n-                \"  \\\"random\\\"              : \\\"{2}\\\",\\n\" +\n-                \"  \\\"session id\\\"          : \\\"{3}\\\",\\n\" +\n-                \"  \\\"cipher suite\\\"        : \\\"{4}\\\",\\n\" +\n-                \"  \\\"compression methods\\\" : \\\"{5}\\\",\\n\" +\n-                \"  \\\"extensions\\\"          : [\\n\" +\n-                \"{6}\\n\" +\n-                \"  ]\\n\" +\n-                \"'}'\",\n+                    \"\"\"\n+                            \"{0}\": '{'\n+                              \"server version\"      : \"{1}\",\n+                              \"random\"              : \"{2}\",\n+                              \"session id\"          : \"{3}\",\n+                              \"cipher suite\"        : \"{4}\",\n+                              \"compression methods\" : \"{5}\",\n+                              \"extensions\"          : [\n+                            {6}\n+                              ]\n+                            '}'\"\"\",\n@@ -311,2 +306,2 @@\n-                \/\/ to get responses.  If the resulting stapleParams is non\n-                \/\/ null, it implies that stapling is enabled on the server side.\n+                \/\/ to get responses.  If the resulting stapleParams is non-null,\n+                \/\/ it implies that stapling is enabled on the server side.\n@@ -704,1 +699,1 @@\n-                ClientHelloMessage clientHello) throws IOException {\n+                ClientHelloMessage clientHello) {\n@@ -843,1 +838,1 @@\n-                shc.sslConfig.getEnabledExtensions(\n+                    shc.sslConfig.getEnabledExtensions(\n@@ -1091,4 +1086,2 @@\n-                    if (chc.resumingSession != null) {\n-                        chc.resumingSession.invalidate();\n-                        chc.resumingSession = null;\n-                    }\n+                    chc.resumingSession.invalidate();\n+                    chc.resumingSession = null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ServerHello.java","additions":19,"deletions":26,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,2 +91,1 @@\n-        if (obj instanceof SessionId) {\n-            SessionId that = (SessionId)obj;\n+        if (obj instanceof SessionId that) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SessionId.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,6 +28,6 @@\n-import sun.security.action.GetPropertyAction;\n-import sun.security.ssl.SSLExtension.ExtensionConsumer;\n-import sun.security.ssl.SSLExtension.SSLExtensionSpec;\n-import sun.security.ssl.SSLHandshake.HandshakeMessage;\n-import sun.security.util.HexDumpEncoder;\n-\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.SecureRandom;\n+import java.text.MessageFormat;\n+import java.util.Locale;\n@@ -43,6 +43,5 @@\n-import java.io.IOException;\n-import java.nio.ByteBuffer;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.SecureRandom;\n-import java.text.MessageFormat;\n-import java.util.Locale;\n+import sun.security.action.GetPropertyAction;\n+import sun.security.ssl.SSLExtension.ExtensionConsumer;\n+import sun.security.ssl.SSLExtension.SSLExtensionSpec;\n+import sun.security.ssl.SSLHandshake.HandshakeMessage;\n+import sun.security.util.HexDumpEncoder;\n@@ -178,1 +177,1 @@\n-                \/\/ updated by a previous operation and we can return.\n+                \/\/ updated by a previous operation, and we can return.\n@@ -356,3 +355,4 @@\n-                    \"  \\\"ticket\\\" : '{'\\n\" +\n-                            \"{0}\\n\" +\n-                            \"  '}'\",\n+                    \"\"\"\n+                              \"ticket\" : '{'\n+                            {0}\n+                              '}'\"\"\",\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SessionTicketExtension.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-            if (algs == null || algs.length == 0 || (algs.length & 0x01) != 0) {\n+            if (algs.length == 0 || (algs.length & 0x01) != 0) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SignatureAlgorithmsExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,15 +33,2 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.Future;\n-import java.util.concurrent.ScheduledThreadPoolExecutor;\n-import java.util.concurrent.ThreadFactory;\n-import java.util.concurrent.ThreadPoolExecutor;\n-import java.util.concurrent.TimeUnit;\n+import java.util.*;\n+import java.util.concurrent.*;\n@@ -55,0 +42,1 @@\n+import sun.security.ssl.X509Authentication.X509Possession;\n@@ -58,1 +46,0 @@\n-import sun.security.ssl.X509Authentication.X509Possession;\n@@ -107,8 +94,5 @@\n-                new ThreadFactory() {\n-            @Override\n-            public Thread newThread(Runnable r) {\n-                Thread t = Executors.defaultThreadFactory().newThread(r);\n-                t.setDaemon(true);\n-                return t;\n-            }\n-        }, new ThreadPoolExecutor.DiscardPolicy());\n+                r -> {\n+                    Thread t = Executors.defaultThreadFactory().newThread(r);\n+                    t.setDaemon(true);\n+                    return t;\n+                }, new ThreadPoolExecutor.DiscardPolicy());\n@@ -408,1 +392,1 @@\n-        \/\/ If the response entry has a nextUpdate and it has expired\n+        \/\/ If the response entry has a nextUpdate, and it has expired\n@@ -496,1 +480,1 @@\n-         * This will do a member-wise copy with the exception of the\n+         * This will do a member-wise copy except for the\n@@ -516,10 +500,8 @@\n-            StringBuilder sb = new StringBuilder(\"StatusInfo:\");\n-            sb.append(\"\\n\\tCert: \").append(\n-                    this.cert.getSubjectX500Principal());\n-            sb.append(\"\\n\\tSerial: \").append(this.cert.getSerialNumber());\n-            sb.append(\"\\n\\tResponder: \").append(this.responder);\n-            sb.append(\"\\n\\tResponse data: \").append(\n-                    this.responseData != null ?\n-                        (this.responseData.ocspBytes.length + \" bytes\") :\n-                        \"<NULL>\");\n-            return sb.toString();\n+            return \"StatusInfo:\" + \"\\n\\tCert: \" +\n+                   this.cert.getSubjectX500Principal() +\n+                   \"\\n\\tSerial: \" + this.cert.getSerialNumber() +\n+                   \"\\n\\tResponder: \" + this.responder +\n+                   \"\\n\\tResponse data: \" +\n+                   (this.responseData != null ?\n+                                (this.responseData.ocspBytes.length + \" bytes\") :\n+                                \"<NULL>\");\n@@ -657,4 +639,3 @@\n-                if (respBytes != null) {\n-                    \/\/ Place the data into the response cache\n-                    cacheEntry = new ResponseCacheEntry(respBytes,\n-                            statInfo.cid);\n+                \/\/ Place the data into the response cache\n+                cacheEntry = new ResponseCacheEntry(respBytes,\n+                        statInfo.cid);\n@@ -662,9 +643,9 @@\n-                    \/\/ Get the response status and act on it appropriately\n-                    if (SSLLogger.isOn && SSLLogger.isOn(\"respmgr\")) {\n-                        SSLLogger.fine(\"OCSP Status: \" + cacheEntry.status +\n-                            \" (\" + respBytes.length + \" bytes)\");\n-                    }\n-                    if (cacheEntry.status ==\n-                            OCSPResponse.ResponseStatus.SUCCESSFUL) {\n-                        \/\/ Set the response in the returned StatusInfo\n-                        statInfo.responseData = cacheEntry;\n+                \/\/ Get the response status and act on it appropriately\n+                if (SSLLogger.isOn && SSLLogger.isOn(\"respmgr\")) {\n+                    SSLLogger.fine(\"OCSP Status: \" + cacheEntry.status +\n+                        \" (\" + respBytes.length + \" bytes)\");\n+                }\n+                if (cacheEntry.status ==\n+                        OCSPResponse.ResponseStatus.SUCCESSFUL) {\n+                    \/\/ Set the response in the returned StatusInfo\n+                    statInfo.responseData = cacheEntry;\n@@ -672,8 +653,2 @@\n-                        \/\/ Add the response to the cache (if applicable)\n-                        addToCache(statInfo.cid, cacheEntry);\n-                    }\n-                } else {\n-                    if (SSLLogger.isOn && SSLLogger.isOn(\"respmgr\")) {\n-                        SSLLogger.fine(\n-                            \"No data returned from OCSP Responder\");\n-                    }\n+                    \/\/ Add the response to the cache (if applicable)\n+                    addToCache(statInfo.cid, cacheEntry);\n@@ -758,1 +733,1 @@\n-        \/\/ is necessary.  Also we will only staple if we're doing a full\n+        \/\/ is necessary.  Also, we will only staple if we're doing a full\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/StatusResponseManager.java","additions":34,"deletions":59,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,1 +128,1 @@\n-        credentialsMap = new HashMap<String,X509Credentials>();\n+        credentialsMap = new HashMap<>();\n@@ -130,1 +130,1 @@\n-                            new HashMap<String,String[]>());\n+                new HashMap<>());\n@@ -328,1 +328,1 @@\n-     * Issuers comes to us in the form of X500Principal[].\n+     * Issuers come to us in the form of X500Principal[].\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SunX509KeyManagerImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,5 +32,1 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n+import java.util.*;\n@@ -98,1 +94,1 @@\n-            if ((ngs == null) || (ngs.length == 0) || (ngs.length % 2 != 0)) {\n+            if (ngs.length == 0 || ngs.length % 2 != 0) {\n@@ -388,1 +384,1 @@\n-                    Collections.<NamedGroup>unmodifiableList(namedGroups);\n+                    Collections.unmodifiableList(namedGroups);\n@@ -537,1 +533,1 @@\n-                    Collections.<NamedGroup>unmodifiableList(namedGroups);\n+                    Collections.unmodifiableList(namedGroups);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SupportedGroupsExtension.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-            if (vbs == null || vbs.length == 0 || (vbs.length & 0x01) != 0) {\n+            if (vbs.length == 0 || (vbs.length & 0x01) != 0) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SupportedVersionsExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-    \/\/ In order to workaround this case for TLS 1.3, the FINISHED status is\n+    \/\/ In order to work around this case for TLS 1.3, the FINISHED status is\n@@ -504,1 +504,1 @@\n-    void closeInbound() throws SSLException {\n+    void closeInbound() {\n@@ -512,1 +512,1 @@\n-            \/\/ to consider the case any more.\n+            \/\/ consider the case anymore.\n@@ -560,1 +560,1 @@\n-    \/\/ Initiate a inbound close when the handshake is not started.\n+    \/\/ Initiate an inbound close when the handshake is not started.\n@@ -585,5 +585,3 @@\n-        boolean useUserCanceled = false;\n-        if (!isNegotiated && (handshakeContext != null) && !peerUserCanceled) {\n-            \/\/ initial handshake\n-            useUserCanceled = true;\n-        }\n+        boolean useUserCanceled = !isNegotiated &&\n+                (handshakeContext != null) && !peerUserCanceled;\n+        \/\/ initial handshake\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/TransportContext.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-            if (!(params instanceof PKIXBuilderParameters)) {\n+            if (!(params instanceof PKIXBuilderParameters pkixParams)) {\n@@ -144,1 +144,0 @@\n-            PKIXBuilderParameters pkixParams = (PKIXBuilderParameters)params;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/TrustManagerFactoryImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,2 +184,1 @@\n-            if (obj instanceof TrustStoreDescriptor) {\n-                TrustStoreDescriptor that = (TrustStoreDescriptor)obj;\n+            if (obj instanceof TrustStoreDescriptor that) {\n@@ -412,1 +411,1 @@\n-                return Collections.<X509Certificate>emptySet();\n+                return Collections.emptySet();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/TrustStoreManager.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        return Collections.<SNIServerName>unmodifiableList(sniList);\n+        return Collections.unmodifiableList(sniList);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Utilities.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    \/\/ Note that this is a specifical scheme for TLS 1.2. (EC)DHE_RSA cipher\n+    \/\/ Note that this is a specific scheme for TLS 1.2. (EC)DHE_RSA cipher\n@@ -69,2 +69,2 @@\n-    private X509Authentication(String keyAlgorithm,\n-            String... keyTypes) {\n+    X509Authentication(String keyAlgorithm,\n+                       String... keyTypes) {\n@@ -325,1 +325,1 @@\n-            \/\/ For TLS 1.2 and prior versions, the public key of a EC cert\n+            \/\/ For TLS 1.2 and prior versions, the public key of an EC cert\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509Authentication.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * Note that this code is not explicitly performance optimzied yet.\n+ * Note that this code is not explicitly performance optimized yet.\n@@ -88,1 +88,1 @@\n-                        (new SizedMap<String,Reference<PrivateKeyEntry>>());\n+                        (new SizedMap<>());\n@@ -186,1 +186,1 @@\n-                                        socket instanceof SSLSocket) {\n+                socket instanceof SSLSocket sslSocket) {\n@@ -188,1 +188,0 @@\n-            SSLSocket sslSocket = (SSLSocket)socket;\n@@ -195,3 +194,1 @@\n-                    if (session instanceof ExtendedSSLSession) {\n-                        ExtendedSSLSession extSession =\n-                            (ExtendedSSLSession)session;\n+                    if (session instanceof ExtendedSSLSession extSession) {\n@@ -221,3 +218,1 @@\n-                    if (session instanceof ExtendedSSLSession) {\n-                        ExtendedSSLSession extSession =\n-                            (ExtendedSSLSession)session;\n+                    if (session instanceof ExtendedSSLSession extSession) {\n@@ -279,1 +274,1 @@\n-            entryCacheMap.put(alias, new SoftReference<PrivateKeyEntry>(entry));\n+            entryCacheMap.put(alias, new SoftReference<>(entry));\n@@ -394,1 +389,1 @@\n-                        allResults = new ArrayList<EntryStatus>();\n+                        allResults = new ArrayList<>();\n@@ -517,1 +512,1 @@\n-    private static enum CheckType {\n+    private enum CheckType {\n@@ -520,1 +515,1 @@\n-        NONE(Collections.<String>emptySet()),\n+        NONE(Collections.emptySet()),\n@@ -524,3 +519,3 @@\n-        CLIENT(new HashSet<String>(List.of(\n-            KnownOIDs.anyExtendedKeyUsage.value(),\n-            KnownOIDs.clientAuth.value()\n+        CLIENT(new HashSet<>(List.of(\n+                KnownOIDs.anyExtendedKeyUsage.value(),\n+                KnownOIDs.clientAuth.value()\n@@ -531,5 +526,5 @@\n-        SERVER(new HashSet<String>(List.of(\n-            KnownOIDs.anyExtendedKeyUsage.value(),\n-            KnownOIDs.serverAuth.value(),\n-            KnownOIDs.NETSCAPE_ExportApproved.value(),\n-            KnownOIDs.MICROSOFT_ExportApproved.value()\n+        SERVER(new HashSet<>(List.of(\n+                KnownOIDs.anyExtendedKeyUsage.value(),\n+                KnownOIDs.serverAuth.value(),\n+                KnownOIDs.NETSCAPE_ExportApproved.value(),\n+                KnownOIDs.MICROSOFT_ExportApproved.value()\n@@ -567,1 +562,1 @@\n-                    \/\/ if extension present and it does not contain any of\n+                    \/\/ if extension is present and does not contain any of\n@@ -662,1 +657,1 @@\n-                                    \"Server Name Inidication (SNI): \" +\n+                                    \"Server Name Indication (SNI): \" +\n@@ -689,1 +684,1 @@\n-    private static enum CheckResult {\n+    private enum CheckResult {\n@@ -857,1 +852,1 @@\n-                checker.check(cert, Collections.<String>emptySet());\n+                checker.check(cert, Collections.emptySet());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509KeyManagerImpl.java","additions":21,"deletions":26,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-            trustedCerts = Collections.<X509Certificate>emptySet();\n+            trustedCerts = Collections.emptySet();\n@@ -175,1 +175,1 @@\n-            \/\/ assume double checked locking with a volatile flag works\n+            \/\/ assume double-checked locking with a volatile flag works\n@@ -202,1 +202,1 @@\n-                                        (socket instanceof SSLSocket)) {\n+                (socket instanceof SSLSocket sslSocket)) {\n@@ -204,1 +204,0 @@\n-            SSLSocket sslSocket = (SSLSocket)socket;\n@@ -359,1 +358,1 @@\n-        return Collections.<SNIServerName>emptyList();\n+        return Collections.emptyList();\n@@ -368,1 +367,1 @@\n-        return Collections.<SNIServerName>emptyList();\n+        return Collections.emptyList();\n@@ -377,1 +376,1 @@\n-        return Collections.<SNIServerName>emptyList();\n+        return Collections.emptyList();\n@@ -393,1 +392,1 @@\n-     * may failove to peer host checking.\n+     * may failover to peer host checking.\n@@ -426,1 +425,1 @@\n-                    \/\/ otherwisw, failover to check peer host\n+                    \/\/ otherwise, failover to check peer host\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509TrustManagerImpl.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    private URI tsaURI = null;\n+    private final URI tsaURI;\n@@ -126,1 +126,1 @@\n-        byte[] replyBuffer = null;\n+        byte[] replyBuffer;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/timestamp\/HttpTimestamper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    private AlgorithmId hashAlgorithmId = null;\n+    private final AlgorithmId hashAlgorithmId;\n@@ -74,1 +74,1 @@\n-    private byte[] hashValue;\n+    private final byte[] hashValue;\n@@ -76,1 +76,1 @@\n-    private String policyId = null;\n+    private String policyId;\n@@ -135,1 +135,1 @@\n-     *                          certificate. By default it is not returned.\n+     *                          certificate. By default, it is not returned.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/timestamp\/TSRequest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    public TSResponse generateTimestamp(TSRequest tsQuery) throws IOException;\n+    TSResponse generateTimestamp(TSRequest tsQuery) throws IOException;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/timestamp\/Timestamper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-                URL url = null;\n+                URL url;\n@@ -193,1 +193,1 @@\n-     * Parses a option line likes\n+     * Parses an option line likes\n@@ -210,4 +210,1 @@\n-        while (true) {\n-            if (st.nextToken() == StreamTokenizer.TT_EOF) {\n-                break;\n-            }\n+        while (st.nextToken() != StreamTokenizer.TT_EOF) {\n@@ -270,1 +267,1 @@\n-            return result.toArray(new String[result.size()]);\n+            return result.toArray(new String[0]);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/KeyStoreUtil.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,4 +30,0 @@\n-import java.lang.String;\n-import java.util.StringTokenizer;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n@@ -35,0 +31,2 @@\n+import java.net.URL;\n+import java.util.StringTokenizer;\n@@ -71,3 +69,1 @@\n-            if (url != null) {\n-                urls[count++] = url;\n-            }\n+            urls[count++] = url;\n@@ -88,1 +84,1 @@\n-     * @return the resulting directory or JAR file URL, or null if unknown\n+     * @return the resulting directory or JAR file URL\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/PathList.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-     * generated key pair, regardless of whether or not it is an instance of\n+     * generated key pair, regardless of whether it is an instance of\n@@ -365,1 +365,1 @@\n-    private String              keyType;\n+    private final String        keyType;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/CertAndKeyGen.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -109,2 +109,0 @@\n-    private static final byte[] CRLF = new byte[] {'\\r', '\\n'};\n-\n@@ -119,1 +117,1 @@\n-    private long validity = (long)90;\n+    private long validity = 90;\n@@ -165,1 +163,0 @@\n-    private Set<char[]> passwords = new HashSet<>();\n@@ -172,2 +169,4 @@\n-    private List<String> ids = new ArrayList<>();   \/\/ used in GENCRL\n-    private List<String> v3ext = new ArrayList<>();\n+    private final Set<char[]> passwords = new HashSet<>();\n+    private final List<String> ids = new ArrayList<>();   \/\/ used in GENCRL\n+    private final List<String> v3ext = new ArrayList<>();\n+    private static final byte[] CRLF = new byte[] {'\\r', '\\n'};\n@@ -181,1 +180,2 @@\n-    private List<String> weakWarnings = new ArrayList<>();\n+    private boolean isPasswordlessKeyStore = false;\n+    private final List<String> weakWarnings = new ArrayList<>();\n@@ -183,1 +183,1 @@\n-    private Set<X509Certificate> trustedCerts = new HashSet<>();\n+    private final Set<X509Certificate> trustedCerts = new HashSet<>();\n@@ -195,1 +195,0 @@\n-    private boolean isPasswordlessKeyStore = false;\n@@ -321,1 +320,1 @@\n-    };\n+    }\n@@ -392,1 +391,1 @@\n-    };\n+    }\n@@ -405,1 +404,1 @@\n-        \/\/ this is for case insensitive string comparisons\n+        \/\/ this is for case-insensitive string comparisons\n@@ -407,1 +406,1 @@\n-    };\n+    }\n@@ -452,1 +451,1 @@\n-        int i=0;\n+        int i;\n@@ -644,1 +643,1 @@\n-                    providerClasses = new HashSet<Pair <String, String>> (3);\n+                    providerClasses = new HashSet<>(3);\n@@ -661,1 +660,1 @@\n-                    providers = new HashSet<Pair <String, String>> (3);\n+                    providers = new HashSet<>(3);\n@@ -821,1 +820,1 @@\n-            ClassLoader cl = null;\n+            ClassLoader cl;\n@@ -1025,1 +1024,1 @@\n-        } else if (storePass == null) {\n+        } else {\n@@ -1250,1 +1249,1 @@\n-            \/\/ added to make sure only key can go thru\n+            \/\/ added to make sure only key can go through\n@@ -1254,1 +1253,1 @@\n-            if (keyStore.containsAlias(alias) == false) {\n+            if (!keyStore.containsAlias(alias)) {\n@@ -1446,1 +1445,1 @@\n-        if (keyStore.containsAlias(alias) == false) {\n+        if (!keyStore.containsAlias(alias)) {\n@@ -1549,2 +1548,1 @@\n-            if (ca instanceof X509Certificate) {\n-                X509Certificate xca = (X509Certificate)ca;\n+            if (ca instanceof X509Certificate xca) {\n@@ -1669,1 +1667,1 @@\n-        if (keyStore.containsAlias(alias) == false) {\n+        if (!keyStore.containsAlias(alias)) {\n@@ -1693,1 +1691,1 @@\n-        if (keyStore.containsAlias(alias) == false) {\n+        if (!keyStore.containsAlias(alias)) {\n@@ -1830,1 +1828,1 @@\n-        SecretKey secKey = null;\n+        SecretKey secKey;\n@@ -2018,0 +2016,2 @@\n+        MessageFormat form;\n+        Object[] source;\n@@ -2019,1 +2019,1 @@\n-            MessageFormat form = new MessageFormat(rb.getString\n+            form = new MessageFormat(rb.getString\n@@ -2021,1 +2021,1 @@\n-            Object[] source = {\n+            source = new Object[]{\n@@ -2028,1 +2028,0 @@\n-            System.err.println(form.format(source));\n@@ -2030,1 +2029,1 @@\n-            MessageFormat form = new MessageFormat(rb.getString\n+            form = new MessageFormat(rb.getString\n@@ -2032,1 +2031,1 @@\n-            Object[] source = {\n+            source = new Object[]{\n@@ -2038,1 +2037,0 @@\n-            System.err.println(form.format(source));\n@@ -2040,0 +2038,1 @@\n+        System.err.println(form.format(source));\n@@ -2135,3 +2134,1 @@\n-    private void doImportIdentityDatabase(InputStream in)\n-        throws Exception\n-    {\n+    private void doImportIdentityDatabase(InputStream in) {\n@@ -2149,1 +2146,1 @@\n-        if (keyStore.containsAlias(alias) == false) {\n+        if (!keyStore.containsAlias(alias)) {\n@@ -2169,0 +2166,2 @@\n+            MessageFormat form;\n+            Object[] source;\n@@ -2170,4 +2169,3 @@\n-                MessageFormat form = new MessageFormat\n-                    (rb.getString(\"alias.keyStore.getCreationDate.alias.\"));\n-                Object[] source = {alias, keyStore.getCreationDate(alias)};\n-                out.print(form.format(source));\n+                form = new MessageFormat\n+                        (rb.getString(\"alias.keyStore.getCreationDate.alias.\"));\n+                source = new Object[]{alias, keyStore.getCreationDate(alias)};\n@@ -2175,4 +2173,3 @@\n-                MessageFormat form = new MessageFormat\n-                    (rb.getString(\"alias.\"));\n-                Object[] source = {alias};\n-                out.print(form.format(source));\n+                form = new MessageFormat\n+                        (rb.getString(\"alias.\"));\n+                source = new Object[]{alias};\n@@ -2180,0 +2177,1 @@\n+            out.print(form.format(source));\n@@ -2202,1 +2200,1 @@\n-                 * This may occurs for keystores such as JCEKS. Note that this\n+                 * This may occur for keystores such as JCEKS. Note that this\n@@ -2348,2 +2346,1 @@\n-            if (srcksfile != null && is != null && srcProviderName == null &&\n-                    srcstoretype == null) {\n+            if (srcksfile != null && srcProviderName == null && srcstoretype == null) {\n@@ -2682,1 +2679,1 @@\n-                                crls.add((X509CRL)crl);\n+                                crls.add(crl);\n@@ -2699,2 +2696,1 @@\n-            if (cert instanceof X509Certificate) {\n-                X509Certificate xcert = (X509Certificate)cert;\n+            if (cert instanceof X509Certificate xcert) {\n@@ -2783,2 +2779,1 @@\n-            if (crl instanceof X509CRLImpl) {\n-                X509CRLImpl x509crl = (X509CRLImpl) crl;\n+            if (crl instanceof X509CRLImpl x509crl) {\n@@ -2855,1 +2850,1 @@\n-     * a human readable format.\n+     * a human-readable format.\n@@ -2860,1 +2855,1 @@\n-        Collection<? extends Certificate> c = null;\n+        Collection<? extends Certificate> c;\n@@ -2869,1 +2864,1 @@\n-        Certificate[] certs = c.toArray(new Certificate[c.size()]);\n+        Certificate[] certs = c.toArray(new Certificate[0]);\n@@ -2874,1 +2869,1 @@\n-            X509Certificate x509Cert = null;\n+            X509Certificate x509Cert;\n@@ -3005,3 +3000,1 @@\n-                        if (!ss.contains(signer)) {\n-                            ss.add(signer);\n-                        }\n+                        ss.add(signer);\n@@ -3309,1 +3302,1 @@\n-        Certificate[] replyCerts = c.toArray(new Certificate[c.size()]);\n+        Certificate[] replyCerts = c.toArray(new Certificate[0]);\n@@ -3350,1 +3343,1 @@\n-        X509Certificate cert = null;\n+        X509Certificate cert;\n@@ -3453,1 +3446,1 @@\n-        char[] entered = null;\n+        char[] entered;\n@@ -3533,1 +3526,1 @@\n-        char[] keyPass = null;\n+        char[] keyPass;\n@@ -3536,0 +3529,3 @@\n+            MessageFormat form = new MessageFormat(rb.getString\n+                    (\"Enter.key.password.for.alias.\"));\n+            Object[] source = {alias};\n@@ -3537,3 +3533,0 @@\n-                MessageFormat form = new MessageFormat(rb.getString\n-                        (\"Enter.key.password.for.alias.\"));\n-                Object[] source = {alias};\n@@ -3547,3 +3540,0 @@\n-                MessageFormat form = new MessageFormat(rb.getString\n-                        (\"Enter.key.password.for.alias.\"));\n-                Object[] source = {alias};\n@@ -3617,1 +3607,1 @@\n-     * Prints a certificate in a human readable format.\n+     * Prints a certificate in a human-readable format.\n@@ -3646,2 +3636,1 @@\n-        if (cert instanceof X509CertImpl) {\n-            X509CertImpl impl = (X509CertImpl)cert;\n+        if (cert instanceof X509CertImpl impl) {\n@@ -3728,1 +3717,1 @@\n-        String userInput = null;\n+        String userInput;\n@@ -3829,1 +3818,1 @@\n-        Key key = null;\n+        Key key;\n@@ -3836,1 +3825,1 @@\n-        if (keyStore.containsAlias(alias) == false) {\n+        if (!keyStore.containsAlias(alias)) {\n@@ -3865,5 +3854,0 @@\n-            key = keyStore.getKey(alias, keyPass);\n-            return Pair.of(key, keyPass);\n-        } else {\n-            key = keyStore.getKey(alias, keyPass);\n-            return Pair.of(key, keyPass);\n@@ -3871,0 +3855,2 @@\n+        key = keyStore.getKey(alias, keyPass);\n+        return Pair.of(key, keyPass);\n@@ -3939,1 +3925,1 @@\n-     * Gets the requested finger print of the certificate.\n+     * Gets the requested fingerprint of the certificate.\n@@ -3989,1 +3975,1 @@\n-        replyCerts = nodup.toArray(new Certificate[nodup.size()]);\n+        replyCerts = nodup.toArray(new Certificate[0]);\n@@ -4162,1 +4148,1 @@\n-     * certToVerify and look for signer of certB, etc, etc.\n+     * certToVerify and look for signer of certB, etc., etc.\n@@ -4219,1 +4205,1 @@\n-        String reply = null;\n+        String reply;\n@@ -4300,1 +4286,1 @@\n-                    int sign = 0;\n+                    int sign;\n@@ -4314,1 +4300,1 @@\n-                    int unit = 0;\n+                    int unit;\n@@ -4343,1 +4329,1 @@\n-                    if (date.matches(\"\\\\d\\\\d\\\\d\\\\d\\\\\/\\\\d\\\\d\\\\\/\\\\d\\\\d\")) {\n+                    if (date.matches(\"\\\\d\\\\d\\\\d\\\\d\/\\\\d\\\\d\/\\\\d\\\\d\")) {\n@@ -4556,2 +4542,2 @@\n-        \/\/ using OID in -ext, either as a new extension, or in a\n-        \/\/ honored value. Thus here we (ab)use CertificateExtensions\n+        \/\/ using OID in -ext, either as a new extension, or in an\n+        \/\/ honored value. Thus, here we (ab)use CertificateExtensions\n@@ -4607,1 +4593,1 @@\n-                            String type = null;\n+                            String type;\n@@ -4868,1 +4854,1 @@\n-                        byte[] data = null;\n+                        byte[] data;\n@@ -4950,1 +4936,1 @@\n-                    String denyAfterDate = null;\n+                    String denyAfterDate;\n@@ -5019,1 +5005,1 @@\n-            throws KeyStoreException, Exception {\n+            throws Exception {\n@@ -5025,2 +5011,1 @@\n-            if (cert instanceof X509Certificate) {\n-                X509Certificate xc = (X509Certificate)cert;\n+            if (cert instanceof X509Certificate xc) {\n@@ -5032,1 +5017,1 @@\n-                CertPathConstraintsParameters cpcp = null;\n+                CertPathConstraintsParameters cpcp;\n@@ -5047,3 +5032,2 @@\n-            throws KeyStoreException, Exception {\n-        if (cert instanceof X509Certificate) {\n-            X509Certificate xc = (X509Certificate)cert;\n+            throws Exception {\n+        if (cert instanceof X509Certificate xc) {\n@@ -5096,2 +5080,1 @@\n-        if (crl instanceof X509CRLImpl) {\n-            X509CRLImpl impl = (X509CRLImpl)crl;\n+        if (crl instanceof X509CRLImpl impl) {\n@@ -5103,2 +5086,1 @@\n-        if (crl instanceof X509CRLImpl) {\n-            X509CRLImpl impl = (X509CRLImpl)crl;\n+        if (crl instanceof X509CRLImpl impl) {\n@@ -5232,2 +5214,2 @@\n-                    String s1 = i < lefts.length ? lefts[i] : \"\";\n-                    String s2 = i < rights.length ? rights[i] : \"\";\n+                    String s1 = lefts[i];\n+                    String s2 = rights[i];\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":87,"deletions":105,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import java.util.ArrayList;\n@@ -35,2 +34,0 @@\n-import java.util.TreeSet;\n-import java.util.List;\n@@ -38,0 +35,1 @@\n+import java.util.TreeSet;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/AbstractAlgorithmConstraints.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,6 +28,1 @@\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Map.Entry;\n-import java.util.Set;\n-import java.util.Arrays;\n-import java.util.Collection;\n+import java.util.*;\n@@ -90,1 +85,1 @@\n-     * Please override the method if need to support more name pattern.\n+     * Please override the method if you need to support more name pattern.\n@@ -160,3 +155,1 @@\n-                if (!elements.contains(e.getValue())) {\n-                    elements.add(e.getValue());\n-                }\n+                elements.add(e.getValue());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/AlgorithmDecomposer.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-        boolean result = (key == null ? false : certs.contains(key));\n+        boolean result = (key != null && certs.contains(key));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/AnchorCertificates.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.util.List;\n-import java.util.function.BiFunction;\n-import java.security.*;\n@@ -33,0 +30,2 @@\n+import java.security.ProviderException;\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ArrayUtil.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Arrays;\n@@ -42,2 +41,2 @@\n-    private byte[] repn;\n-    private int length;\n+    private final byte[] repn;\n+    private final int length;\n@@ -173,1 +172,1 @@\n-     * will be contain zeros in any bits that do not have corresponding\n+     * will contain zeros in any bits that do not have corresponding\n@@ -194,1 +193,1 @@\n-     * Return a boolean array with the same bit values a this BitArray.\n+     * Return a boolean array with the same bit values in this BitArray.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/BitArray.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-            if (obj instanceof EqualByteArray == false) {\n+            if (!(obj instanceof EqualByteArray other)) {\n@@ -193,1 +193,0 @@\n-            EqualByteArray other = (EqualByteArray)obj;\n@@ -199,1 +198,1 @@\n-        public void visit(Map<K,V> map);\n+        void visit(Map<K, V> map);\n@@ -272,1 +271,1 @@\n-        this.lifetime = lifetime * 1000;\n+        this.lifetime = lifetime * 1000L;\n@@ -337,1 +336,1 @@\n-            if (entry.isValid(time) == false) {\n+            if (!entry.isValid(time)) {\n@@ -406,1 +405,1 @@\n-        if (entry.isValid(time) == false) {\n+        if (!entry.isValid(time)) {\n@@ -459,1 +458,1 @@\n-        maxSize = size > 0 ? size : 0;\n+        maxSize = Math.max(size, 0);\n@@ -502,1 +501,1 @@\n-    private static interface CacheEntry<K,V> {\n+    private interface CacheEntry<K,V> {\n@@ -541,1 +540,1 @@\n-            if (valid == false) {\n+            if (!valid) {\n@@ -582,1 +581,1 @@\n-            if (valid == false) {\n+            if (!valid) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Cache.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,1 @@\n-            if (callbacks[i] instanceof TextOutputCallback) {\n-                TextOutputCallback tc = (TextOutputCallback) callbacks[i];\n+            if (callbacks[i] instanceof TextOutputCallback tc) {\n@@ -93,2 +92,1 @@\n-            } else if (callbacks[i] instanceof NameCallback) {\n-                NameCallback nc = (NameCallback) callbacks[i];\n+            } else if (callbacks[i] instanceof NameCallback nc) {\n@@ -111,2 +109,1 @@\n-            } else if (callbacks[i] instanceof PasswordCallback) {\n-                PasswordCallback pc = (PasswordCallback) callbacks[i];\n+            } else if (callbacks[i] instanceof PasswordCallback pc) {\n@@ -165,2 +162,2 @@\n-            String name;\n-            int value;\n+            final String name;\n+            final int value;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ConsoleCallbackHandler.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        new LinkedHashMap<String,NamedCurve>();\n+            new LinkedHashMap<>();\n@@ -50,1 +50,1 @@\n-        new HashMap<String,NamedCurve>();\n+            new HashMap<>();\n@@ -52,1 +52,1 @@\n-        new HashMap<Integer,NamedCurve>();\n+            new HashMap<>();\n@@ -54,1 +54,1 @@\n-    private static Collection<? extends NamedCurve> specCollection;\n+    private static final Collection<? extends NamedCurve> specCollection;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/CurveDB.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,1 +142,1 @@\n-     * option is set. Set the prefix to be prefix.\n+     * option is set. Set the prefix to prefix.\n@@ -217,1 +217,1 @@\n-     * PrintStream for debug methods. Currently only System.err is supported.\n+     * PrintStream for debug methods. Currently, only System.err is supported.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Debug.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 1999, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 1922, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-    public void derEncode(OutputStream out)\n+    void derEncode(OutputStream out)\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerEncoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private ArrayList<Object> ndefsList = new ArrayList<Object>();\n+    private final ArrayList<Object> ndefsList = new ArrayList<>();\n@@ -306,1 +306,1 @@\n-        int numOfLenBytes = 0;\n+        int numOfLenBytes;\n@@ -332,1 +332,1 @@\n-     * Converts a indefinite length DER encoded byte array to\n+     * Converts an indefinite length DER encoded byte array to\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerIndefLenConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -291,2 +291,2 @@\n-     * The {@code readAheadLimit} is useless here because\n-     * all data is available and we can go to anywhere at will.\n+     * The {@code readAheadLimit} is useless here, because\n+     * all data is available, and we can go to anywhere at will.\n@@ -327,1 +327,0 @@\n-     * @throws IOException if an I\/O error happens while peeking the byte\n@@ -338,1 +337,0 @@\n-     * @throws IOException if an I\/O error happens while peeking the byte\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerInputStream.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -347,1 +347,1 @@\n-     * before being output.  Hence sets with the same tags and\n+     * before being output.  Hence, sets with the same tags and\n@@ -361,1 +361,1 @@\n-     * before being output.  Hence sets with the same tags and\n+     * before being output.  Hence, sets with the same tags and\n@@ -375,1 +375,1 @@\n-    private static ByteArrayLexOrder lexOrder = new ByteArrayLexOrder();\n+    private static final ByteArrayLexOrder lexOrder = new ByteArrayLexOrder();\n@@ -381,1 +381,1 @@\n-    private static ByteArrayTagOrder tagOrder = new ByteArrayTagOrder();\n+    private static final ByteArrayTagOrder tagOrder = new ByteArrayTagOrder();\n@@ -385,1 +385,1 @@\n-     * encodings of its sorted in increasing order.\n+     * encoding of elements sorted in increasing order.\n@@ -403,1 +403,1 @@\n-        Arrays.<byte[]>sort(bufs, order);\n+        Arrays.sort(bufs, order);\n@@ -510,1 +510,1 @@\n-        String pattern = null;\n+        String pattern;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerOutputStream.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-    \/** Tag value indicating an ASN.1 \"GenerallString\" value. *\/\n+    \/** Tag value indicating an ASN.1 \"GeneralString\" value. *\/\n@@ -1019,1 +1019,1 @@\n-                time -= ((hr * 60) + min) * 60 * 1000;\n+                time -= ((hr * 60L) + min) * 60 * 1000;\n@@ -1035,1 +1035,1 @@\n-                time += ((hr * 60) + min) * 60 * 1000;\n+                time += ((hr * 60L) + min) * 60 * 1000;\n@@ -1107,1 +1107,1 @@\n-        if (!(o instanceof DerValue)) {\n+        if (!(o instanceof DerValue other)) {\n@@ -1110,1 +1110,0 @@\n-        DerValue other = (DerValue) o;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-        private Map<String, List<Constraint>> constraintsMap = new HashMap<>();\n+        private final Map<String, List<Constraint>> constraintsMap = new HashMap<>();\n@@ -361,1 +361,1 @@\n-                \/\/ If there is no whitespace, it is a algorithm name; however,\n+                \/\/ If there is no whitespace, it is an algorithm name; however,\n@@ -426,1 +426,1 @@\n-                        String s[] = (entry.substring(5)).trim().split(\" \");\n+                        String[] s = (entry.substring(5)).trim().split(\" \");\n@@ -592,1 +592,1 @@\n-         *         'false' ortherwise.\n+         *         'false' otherwise.\n@@ -697,2 +697,2 @@\n-        private ZonedDateTime zdt;\n-        private Instant denyAfterDate;\n+        private final ZonedDateTime zdt;\n+        private final Instant denyAfterDate;\n@@ -834,2 +834,2 @@\n-        private int minSize;            \/\/ the minimal available key size\n-        private int maxSize;            \/\/ the maximal available key size\n+        private final int minSize;          \/\/ the minimal available key size\n+        private final int maxSize;          \/\/ the maximal available key size\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DisabledAlgorithmConstraints.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n- * The general matching algorithm tries to find a longest match. So, the\n+ * The general matching algorithm tries to find the longest match. So, the\n@@ -558,2 +558,2 @@\n-        private String domain;\n-        private int publicSuffix; \/\/ index to\n+        private final String domain;\n+        private final int publicSuffix; \/\/ index to\n@@ -614,1 +614,1 @@\n-                \/\/ special case when registered domain is same as pub suff\n+                \/\/ special case when registered domain is same as pub suffix\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DomainName.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import sun.security.util.ObjectIdentifier;\n-\n@@ -41,1 +39,1 @@\n-    private int keySize;\n+    private final int keySize;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ECKeySizeParameterSpec.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        public void handle(String type, Object... args);\n+        void handle(String type, Object... args);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Event.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import sun.security.action.GetPropertyAction;\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/FilePermCompat.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import sun.security.util.HexDumpEncoder;\n-import sun.security.util.*;\n@@ -63,1 +61,1 @@\n-        if (!(paramSpec instanceof GCMParameterSpec)) {\n+        if (!(paramSpec instanceof GCMParameterSpec gps)) {\n@@ -67,1 +65,0 @@\n-        GCMParameterSpec gps = (GCMParameterSpec) paramSpec;\n@@ -146,3 +143,0 @@\n-        StringBuilder sb\n-            = new StringBuilder(LINE_SEP + \"    iv:\" + LINE_SEP + \"[\"\n-                + encoder.encodeBuffer(iv) + \"]\");\n@@ -150,2 +144,3 @@\n-        sb.append(LINE_SEP + \"tLen(bits):\" + LINE_SEP + tLen*8 + LINE_SEP);\n-        return sb.toString();\n+        return LINE_SEP + \"    iv:\" + LINE_SEP + \"[\"\n+                + encoder.encodeBuffer(iv) + \"]\" + LINE_SEP + \"tLen(bits):\"\n+                + LINE_SEP + tLen * 8 + LINE_SEP;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/GCMParameters.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    private byte thisLine[] = new byte[16];\n+    private final byte[] thisLine = new byte[16];\n@@ -90,1 +90,1 @@\n-    protected void encodeLinePrefix(OutputStream o, int len) throws IOException {\n+    protected void encodeLinePrefix(OutputStream o, int len) {\n@@ -98,1 +98,2 @@\n-    protected void encodeAtom(OutputStream o, byte buf[], int off, int len) throws IOException {\n+    protected void encodeAtom(OutputStream o, byte[] buf, int off, int len)\n+            throws IOException {\n@@ -134,1 +135,1 @@\n-    protected int readFully(InputStream in, byte buffer[])\n+    protected int readFully(InputStream in, byte[] buffer)\n@@ -156,1 +157,1 @@\n-        byte    tmpbuffer[] = new byte[bytesPerLine()];\n+        byte[]  tmpbuffer = new byte[bytesPerLine()];\n@@ -186,1 +187,1 @@\n-    public String encode(byte aBuffer[]) {\n+    public String encode(byte[] aBuffer) {\n@@ -267,1 +268,1 @@\n-        byte    tmpbuffer[] = new byte[bytesPerLine()];\n+        byte[]  tmpbuffer = new byte[bytesPerLine()];\n@@ -295,1 +296,1 @@\n-    public void encodeBuffer(byte aBuffer[], OutputStream aStream)\n+    public void encodeBuffer(byte[] aBuffer, OutputStream aStream)\n@@ -306,1 +307,1 @@\n-    public String encodeBuffer(byte aBuffer[]) {\n+    public String encodeBuffer(byte[] aBuffer) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/HexDumpEncoder.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-    \/\/ the algorithm to follow to perform the check. Currently unused.\n+    \/\/ the algorithm to follow to perform the check. Currently, unused.\n@@ -122,6 +122,2 @@\n-        if (IPAddressUtil.isIPv4LiteralAddress(name) ||\n-            IPAddressUtil.isIPv6LiteralAddress(name)) {\n-            return true;\n-        } else {\n-            return false;\n-        }\n+        return IPAddressUtil.isIPv4LiteralAddress(name) ||\n+                IPAddressUtil.isIPv6LiteralAddress(name);\n@@ -291,1 +287,1 @@\n-            \/\/ Replacing wildcard character '*' with 'z' so as to check\n+            \/\/ Replacing wildcard character '*' with 'z' to check\n@@ -417,1 +413,1 @@\n-        String beforeWildcard = \"\";\n+        String beforeWildcard;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/HostnameChecker.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,0 @@\n-import sun.security.util.AnchorCertificates;\n-import sun.security.util.ConstraintsParameters;\n@@ -52,1 +50,1 @@\n-    private Date timestamp;\n+    private final Date timestamp;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/JarConstraintsParameters.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,4 @@\n-import java.io.*;\n+import java.io.BufferedInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n@@ -31,1 +34,0 @@\n-import java.security.cert.CertificateFactory;\n@@ -33,3 +35,3 @@\n-import java.util.*;\n-\n-import sun.security.util.Debug;\n+import java.util.Date;\n+import java.util.Enumeration;\n+import java.util.Set;\n@@ -48,6 +50,6 @@\n-    private String primaryType;   \/\/ the primary keystore's type\n-    private String secondaryType; \/\/ the secondary keystore's type\n-    private Class<? extends KeyStoreSpi> primaryKeyStore;\n-                                  \/\/ the primary keystore's class\n-    private Class<? extends KeyStoreSpi> secondaryKeyStore;\n-                                  \/\/ the secondary keystore's class\n+    private final String primaryType;   \/\/ the primary keystore's type\n+    private final String secondaryType; \/\/ the secondary keystore's type\n+    private final Class<? extends KeyStoreSpi> primaryKeyStore;\n+                                        \/\/ the primary keystore's class\n+    private final Class<? extends KeyStoreSpi> secondaryKeyStore;\n+                                        \/\/ the secondary keystore's class\n@@ -56,1 +58,1 @@\n-    private boolean compatModeEnabled = true;\n+    private final boolean compatModeEnabled;\n@@ -311,1 +313,1 @@\n-            if (result == false) {\n+            if (!result) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KeyStoreDelegator.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.math.BigInteger;\n@@ -29,1 +30,0 @@\n-import java.security.Key;\n@@ -31,7 +31,1 @@\n-import java.security.interfaces.ECKey;\n-import java.security.interfaces.EdECKey;\n-import java.security.interfaces.EdECPublicKey;\n-import java.security.interfaces.RSAKey;\n-import java.security.interfaces.DSAKey;\n-import java.security.interfaces.DSAParams;\n-import java.security.interfaces.XECKey;\n+import java.security.Key;\n@@ -39,4 +33,3 @@\n-import java.security.spec.AlgorithmParameterSpec;\n-import java.security.spec.KeySpec;\n-import java.security.spec.ECParameterSpec;\n-import java.security.spec.InvalidParameterSpecException;\n+import java.security.interfaces.*;\n+import java.security.spec.*;\n+import java.util.Arrays;\n@@ -48,3 +41,0 @@\n-import java.math.BigInteger;\n-import java.security.spec.NamedParameterSpec;\n-import java.util.Arrays;\n@@ -55,1 +45,1 @@\n- * A utility class to get key length, valiate keys, etc.\n+ * A utility class to get key length, validate keys, etc.\n@@ -66,1 +56,1 @@\n-    public static final int getKeySize(Key key) {\n+    public static int getKeySize(Key key) {\n@@ -83,2 +73,1 @@\n-        if (key instanceof SecretKey) {\n-            SecretKey sk = (SecretKey)key;\n+        if (key instanceof SecretKey sk) {\n@@ -92,1 +81,1 @@\n-            }   \/\/ Otherwise, it may be a unextractable key of PKCS#11, or\n+            }   \/\/ Otherwise, it may be an unextractable key of PKCS#11, or\n@@ -94,2 +83,1 @@\n-        } else if (key instanceof RSAKey) {\n-            RSAKey pubk = (RSAKey)key;\n+        } else if (key instanceof RSAKey pubk) {\n@@ -97,2 +85,1 @@\n-        } else if (key instanceof ECKey) {\n-            ECKey pubk = (ECKey)key;\n+        } else if (key instanceof ECKey pubk) {\n@@ -100,2 +87,1 @@\n-        } else if (key instanceof DSAKey) {\n-            DSAKey pubk = (DSAKey)key;\n+        } else if (key instanceof DSAKey pubk) {\n@@ -104,2 +90,1 @@\n-        } else if (key instanceof DHKey) {\n-            DHKey pubk = (DHKey)key;\n+        } else if (key instanceof DHKey pubk) {\n@@ -107,2 +92,1 @@\n-        } else if (key instanceof XECKey) {\n-            XECKey pubk = (XECKey)key;\n+        } else if (key instanceof XECKey pubk) {\n@@ -132,1 +116,1 @@\n-        }   \/\/ Otherwise, it may be a unextractable key of PKCS#11, or\n+        }   \/\/ Otherwise, it may be an unextractable key of PKCS#11, or\n@@ -205,2 +189,1 @@\n-            if (paramSpec instanceof NamedCurve) {\n-                NamedCurve nc = (NamedCurve)paramSpec;\n+            if (paramSpec instanceof NamedCurve nc) {\n@@ -311,1 +294,1 @@\n-     * @param  isFailOver whether or not the previous decryption of the\n+     * @param  isFailOver whether the previous decryption of the\n@@ -359,1 +342,1 @@\n-     *    Otherwise the key is invalid.\n+     *    Otherwise, the key is invalid.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KeyUtil.java","additions":18,"deletions":35,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.List;\n@@ -434,3 +433,3 @@\n-    private String stdName;\n-    private String oid;\n-    private String[] aliases;\n+    private final String stdName;\n+    private final String oid;\n+    private final String[] aliases;\n@@ -460,1 +459,1 @@\n-        };\n+        }\n@@ -496,1 +495,1 @@\n-    private KnownOIDs(String oid) {\n+    KnownOIDs(String oid) {\n@@ -502,1 +501,1 @@\n-    private KnownOIDs(String oid, String stdName, String ... aliases) {\n+    KnownOIDs(String oid, String stdName, String... aliases) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KnownOIDs.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.util.List;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/LegacyAlgorithmConstraints.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    public int length();\n+    int length();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Length.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,0 @@\n-        int next;\n@@ -219,1 +218,1 @@\n-        private List<Section> sections = new ArrayList<>();\n+        private final List<Section> sections = new ArrayList<>();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ManifestDigester.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.io.IOException;\n@@ -29,1 +30,0 @@\n-import java.io.*;\n@@ -34,2 +34,0 @@\n-import sun.security.util.DisabledAlgorithmConstraints;\n-import sun.security.util.JarConstraintsParameters;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ManifestEntryVerifier.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,3 +30,3 @@\n-\n-import java.security.spec.*;\n-import java.util.Arrays;\n+import java.security.spec.ECParameterSpec;\n+import java.security.spec.ECPoint;\n+import java.security.spec.EllipticCurve;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/NamedCurve.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    private byte[] encoding = null;\n+    private byte[] encoding;\n@@ -127,1 +127,1 @@\n-    \/\/ Is the components field calculated?\n+    \/\/ Is the component's field calculated?\n@@ -181,1 +181,1 @@\n-        int end = 0;\n+        int end;\n@@ -185,1 +185,1 @@\n-        int first = 0, second;\n+        int first = 0;\n@@ -189,1 +189,1 @@\n-            String comp = null;\n+            String comp;\n@@ -191,1 +191,1 @@\n-                int length = 0; \/\/ length of one section\n+                int length; \/\/ length of one section\n@@ -209,1 +209,1 @@\n-                            bignum = bignum.add(BigInteger.valueOf(40*first));\n+                            bignum = bignum.add(BigInteger.valueOf(40L *first));\n@@ -272,1 +272,1 @@\n-            big = big.add(BigInteger.valueOf(components[0] * 40));\n+            big = big.add(BigInteger.valueOf(components[0] * 40L));\n@@ -286,2 +286,2 @@\n-    \/\/ oid cache index'ed by the oid string\n-    private static ConcurrentHashMap<String,ObjectIdentifier> oidTable =\n+    \/\/ oid cache indexed by the oid string\n+    private static final ConcurrentHashMap<String,ObjectIdentifier> oidTable =\n@@ -341,1 +341,1 @@\n-        if (obj instanceof ObjectIdentifier == false) {\n+        if (!(obj instanceof ObjectIdentifier other)) {\n@@ -344,1 +344,0 @@\n-        ObjectIdentifier other = (ObjectIdentifier)obj;\n@@ -602,1 +601,1 @@\n-    \/**\n+    \/*\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ObjectIdentifier.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-            Console con = null;\n+            Console con;\n@@ -72,1 +72,0 @@\n-            int i;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Password.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-        throws KeyStoreException, MalformedURLException, IOException,\n+        throws KeyStoreException, IOException,\n@@ -134,1 +134,0 @@\n-                return ks;\n@@ -140,1 +139,1 @@\n-                URL keyStoreUrl = null;\n+                URL keyStoreUrl;\n@@ -160,1 +159,0 @@\n-                return ks;\n@@ -162,0 +160,1 @@\n+            return ks;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/PolicyUtil.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -80,1 +80,0 @@\n-                i = p;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/PropertyExpander.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    public enum Type {\n+    enum Type {\n@@ -82,1 +82,1 @@\n-    public static Optional<RegisteredDomain> from(String domain) {\n+    static Optional<RegisteredDomain> from(String domain) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/RegisteredDomain.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-            \/\/ be done during initialization of system class loader.\n+            \/\/ done during initialization of system class loader.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ResourcesMgr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.net.SocketPermission;\n@@ -31,2 +30,1 @@\n-import java.security.Permission;\n-import java.security.SecurityPermission;\n+import java.net.SocketPermission;\n@@ -34,0 +32,1 @@\n+import java.security.SecurityPermission;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SecurityConstants.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -68,3 +68,1 @@\n-                    for (String ka : knownAliases) {\n-                        value.add(ka);\n-                    }\n+                    value.addAll(Arrays.asList(knownAliases));\n@@ -73,3 +71,1 @@\n-            for (String ea : extraAliases) {\n-                value.add(ea);\n-            }\n+            value.addAll(Arrays.asList(extraAliases));\n@@ -81,1 +77,1 @@\n-    \/\/ Return an aliases List for the specified algorithm name o\n+    \/\/ Return an aliases List for the specified algorithm name o.\n@@ -91,3 +87,1 @@\n-            ProviderException pe =\n-                    new ProviderException(\"Cannot find aliases for \" + o);\n-            throw pe;\n+            throw new ProviderException(\"Cannot find aliases for \" + o);\n@@ -173,1 +167,1 @@\n-                    int value = -1;\n+                    int value;\n@@ -258,1 +252,1 @@\n-        \/\/ For backward compatility, refer to PKCS1 mapping for RSA\n+        \/\/ For backward compatibility, refer to PKCS1 mapping for RSA\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SecurityProviderConstants.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,6 +30,1 @@\n-import java.security.CodeSigner;\n-import java.security.GeneralSecurityException;\n-import java.security.MessageDigest;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.PrivateKey;\n-import java.security.SignatureException;\n+import java.security.*;\n@@ -37,1 +32,0 @@\n-import java.security.cert.X509Certificate;\n@@ -40,10 +34,2 @@\n-import java.util.ArrayList;\n-import java.util.Base64;\n-import java.util.HashMap;\n-import java.util.Hashtable;\n-import java.util.HexFormat;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Set;\n+import java.security.cert.X509Certificate;\n+import java.util.*;\n@@ -51,2 +37,0 @@\n-import java.util.jar.JarException;\n-import java.util.jar.JarFile;\n@@ -64,1 +48,1 @@\n-    private ArrayList<CodeSigner[]> signerCache;\n+    private final ArrayList<CodeSigner[]> signerCache;\n@@ -70,1 +54,1 @@\n-    private PKCS7 block;\n+    private final PKCS7 block;\n@@ -75,1 +59,1 @@\n-    \/** the name of the signature block file, uppercased and without\n+    \/** the name of the signature block file, uppercase and without\n@@ -78,1 +62,1 @@\n-    private String name;\n+    private final String name;\n@@ -81,1 +65,1 @@\n-    private ManifestDigester md;\n+    private final ManifestDigester md;\n@@ -90,1 +74,1 @@\n-    private CertificateFactory certificateFactory = null;\n+    private final CertificateFactory certificateFactory;\n@@ -95,1 +79,1 @@\n-    private Map<String, Boolean> permittedAlgs = new HashMap<>();\n+    private final Map<String, Boolean> permittedAlgs = new HashMap<>();\n@@ -247,2 +231,1 @@\n-    private MessageDigest getDigest(String algorithm)\n-            throws SignatureException {\n+    private MessageDigest getDigest(String algorithm) {\n@@ -275,1 +258,1 @@\n-            JarException, CertificateException\n+            CertificateException\n@@ -292,1 +275,1 @@\n-            JarException, CertificateException\n+            CertificateException\n@@ -302,1 +285,1 @@\n-            \/\/ for now we just ignore this signature file\n+            \/\/ for now, we just ignore this signature file\n@@ -445,1 +428,1 @@\n-         throws IOException, SignatureException\n+         throws SignatureException\n@@ -516,1 +499,1 @@\n-         throws IOException, SignatureException\n+         throws SignatureException\n@@ -614,1 +597,1 @@\n-         throws IOException, SignatureException\n+         throws SignatureException\n@@ -748,1 +731,1 @@\n-            return signers.toArray(new CodeSigner[signers.size()]);\n+            return signers.toArray(new CodeSigner[0]);\n@@ -771,1 +754,0 @@\n-        boolean match;\n@@ -791,2 +773,0 @@\n-        boolean match;\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureFileVerifier.java","additions":19,"deletions":39,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-            \/\/ AlgorithmParameters.getAlgorithm() may returns oid if it's\n+            \/\/ AlgorithmParameters.getAlgorithm() may return oid if it's\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Azul Systems, Inc. All rights reserved.\n+ * Copyright (c) 2022, Azul Systems, Inc. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.util.Hashtable;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/TlsChannelBinding.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-        \/\/    this number must be non zero (modulo p).\n+        \/\/    this number must be non-zero (modulo p).\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/IntegerModuloP.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -454,1 +454,1 @@\n-        int maskValue = 0 - set;\n+        int maskValue = -set;\n@@ -469,1 +469,1 @@\n-        int maskValue = 0 - swap;\n+        int maskValue = -swap;\n@@ -526,1 +526,1 @@\n-            this.limbs[0] = v ? 1l : 0l;\n+            this.limbs[0] = v ? 1L : 0L;\n@@ -584,2 +584,1 @@\n-            ImmutableElement result = new ImmutableElement(newLimbs, numAdds);\n-            return result;\n+            return new ImmutableElement(newLimbs, numAdds);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/IntegerPolynomial.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.nio.ByteBuffer;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/IntegerPolynomialModBinP.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -223,1 +223,0 @@\n-     * @throws CertificateException if not\n@@ -225,2 +224,1 @@\n-    private boolean checkKeyUsage(X509Certificate cert, int bit)\n-            throws CertificateException {\n+    private boolean checkKeyUsage(X509Certificate cert, int bit) {\n@@ -241,1 +239,1 @@\n-        if (checkKeyUsage(cert, KU_SIGNATURE) == false) {\n+        if (!checkKeyUsage(cert, KU_SIGNATURE)) {\n@@ -247,1 +245,1 @@\n-        if (checkEKU(cert, exts, OID_EKU_TLS_CLIENT) == false) {\n+        if (!checkEKU(cert, exts, OID_EKU_TLS_CLIENT)) {\n@@ -274,1 +272,1 @@\n-            if (checkKeyUsage(cert, KU_KEY_ENCIPHERMENT) == false) {\n+            if (!checkKeyUsage(cert, KU_KEY_ENCIPHERMENT)) {\n@@ -280,1 +278,1 @@\n-            if (checkKeyUsage(cert, KU_SIGNATURE) == false) {\n+            if (!checkKeyUsage(cert, KU_SIGNATURE)) {\n@@ -286,1 +284,1 @@\n-            if (checkKeyUsage(cert, KU_KEY_AGREEMENT) == false) {\n+            if (!checkKeyUsage(cert, KU_KEY_AGREEMENT)) {\n@@ -295,1 +293,1 @@\n-        if (checkEKU(cert, exts, OID_EKU_TLS_SERVER) == false) {\n+        if (!checkEKU(cert, exts, OID_EKU_TLS_SERVER)) {\n@@ -298,2 +296,2 @@\n-            if ((checkEKU(cert, exts, OID_EKU_MS_SGC) == false) &&\n-                (checkEKU(cert, exts, OID_EKU_NS_SGC) == false)) {\n+            if ((!checkEKU(cert, exts, OID_EKU_MS_SGC)) &&\n+                (!checkEKU(cert, exts, OID_EKU_NS_SGC))) {\n@@ -325,1 +323,1 @@\n-        if (checkKeyUsage(cert, KU_SIGNATURE) == false) {\n+        if (!checkKeyUsage(cert, KU_SIGNATURE)) {\n@@ -331,1 +329,1 @@\n-        if (checkEKU(cert, exts, OID_EKU_CODE_SIGNING) == false) {\n+        if (!checkEKU(cert, exts, OID_EKU_CODE_SIGNING)) {\n@@ -339,1 +337,1 @@\n-        if (variant.equals(Validator.VAR_JCE_SIGNING) == false) {\n+        if (!variant.equals(Validator.VAR_JCE_SIGNING)) {\n@@ -375,1 +373,1 @@\n-        if (checkEKU(cert, exts, OID_EKU_TIME_STAMPING) == false) {\n+        if (!checkEKU(cert, exts, OID_EKU_TIME_STAMPING)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/EndEntityChecker.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-     * supports CRL distribution points as we do not manually setup CertStores.\n+     * supports CRL distribution points as we do not manually set up CertStores.\n@@ -85,2 +85,2 @@\n-                            (Set<X509Certificate>)trustedCerts :\n-                            new HashSet<X509Certificate>(trustedCerts);\n+                (Set<X509Certificate>)trustedCerts :\n+                new HashSet<>(trustedCerts);\n@@ -109,1 +109,1 @@\n-        trustedCerts = new HashSet<X509Certificate>();\n+        trustedCerts = new HashSet<>();\n@@ -143,1 +143,1 @@\n-                keys = new ArrayList<PublicKey>();\n+                keys = new ArrayList<>();\n@@ -371,1 +371,1 @@\n-                                        new ArrayList<X509Certificate>();\n+                    new ArrayList<>();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/PKIXValidator.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-                        new HashMap<X500Principal, List<X509Certificate>>();\n+                new HashMap<>();\n@@ -112,1 +112,1 @@\n-                \/\/ are not a problem and we can avoid the Set overhead\n+                \/\/ are not a problem, and we can avoid the Set overhead\n@@ -184,1 +184,1 @@\n-                untrustedChecker.check(cert, Collections.<String>emptySet());\n+                untrustedChecker.check(cert, Collections.emptySet());\n@@ -195,1 +195,1 @@\n-                defaultAlgChecker.check(cert, Collections.<String>emptySet());\n+                defaultAlgChecker.check(cert, Collections.emptySet());\n@@ -197,1 +197,1 @@\n-                    appAlgChecker.check(cert, Collections.<String>emptySet());\n+                    appAlgChecker.check(cert, Collections.emptySet());\n@@ -205,2 +205,2 @@\n-            if ((variant.equals(VAR_CODE_SIGNING) == false)\n-                        && (variant.equals(VAR_JCE_SIGNING) == false)) {\n+            if ((!variant.equals(VAR_CODE_SIGNING))\n+                        && (!variant.equals(VAR_JCE_SIGNING))) {\n@@ -211,2 +211,2 @@\n-            if (cert.getIssuerX500Principal().equals(\n-                        issuerCert.getSubjectX500Principal()) == false) {\n+            if (!cert.getIssuerX500Principal().equals(\n+                    issuerCert.getSubjectX500Principal())) {\n@@ -238,1 +238,1 @@\n-            critSet = Collections.<String>emptySet();\n+            critSet = Collections.emptySet();\n@@ -266,1 +266,1 @@\n-            if (getNetscapeCertTypeBit(cert, NSCT_SSL_CA) == false) {\n+            if (!getNetscapeCertTypeBit(cert, NSCT_SSL_CA)) {\n@@ -275,1 +275,1 @@\n-            if (getNetscapeCertTypeBit(cert, NSCT_CODE_SIGNING_CA) == false) {\n+            if (!getNetscapeCertTypeBit(cert, NSCT_CODE_SIGNING_CA)) {\n@@ -294,4 +294,3 @@\n-            if (cert instanceof X509CertImpl) {\n-                X509CertImpl certImpl = (X509CertImpl)cert;\n-                ObjectIdentifier oid = OBJID_NETSCAPE_CERT_TYPE;\n-                ext = (NetscapeCertTypeExtension)certImpl.getExtension(oid);\n+            if (cert instanceof X509CertImpl certImpl) {\n+                ext = (NetscapeCertTypeExtension)certImpl.\n+                        getExtension(OBJID_NETSCAPE_CERT_TYPE);\n@@ -363,1 +362,1 @@\n-            if ((keyUsageInfo.length < 6) || (keyUsageInfo[5] == false)) {\n+            if ((keyUsageInfo.length < 6) || (!keyUsageInfo[5])) {\n@@ -378,1 +377,1 @@\n-        List<X509Certificate> c = new ArrayList<X509Certificate>(chain.length);\n+        List<X509Certificate> c = new ArrayList<>(chain.length);\n@@ -402,1 +401,1 @@\n-                    \/\/ Look for a best match issuer.\n+                    \/\/ Look for the best match issuer.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/SimpleValidator.java","additions":19,"deletions":20,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n- * Currently supported are TYPE_SIMPLE and TYPE_PKIX. See SimpleValidator and\n+ * Currently, supported are TYPE_SIMPLE and TYPE_PKIX. See SimpleValidator and\n@@ -58,1 +58,1 @@\n- * Variant controls additional extension checks. Currently supported are\n+ * Variant controls additional extension checks. Currently, supported are\n@@ -186,1 +186,1 @@\n-        if (type.equals(TYPE_PKIX) == false) {\n+        if (!type.equals(TYPE_PKIX)) {\n@@ -244,1 +244,1 @@\n-     *        1) TLS_SERVER variant validators, where it must be non null and\n+     *        1) TLS_SERVER variant validators, where it must be non-null and\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/Validator.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-     * of current note are X.400 related ones (PRMD, ADMD, etc).\n+     * of current note are X.400 related ones (PRMD, ADMD, etc.).\n@@ -148,1 +148,1 @@\n-        this(in, format, Collections.<String, String>emptyMap());\n+        this(in, format, Collections.emptyMap());\n@@ -158,1 +158,1 @@\n-     *   If an entry does not exist, it will fallback to the builtin\n+     *   If an entry does not exist, it will fall back to the builtin\n@@ -307,1 +307,1 @@\n-                Byte hexByte = null;\n+                Byte hexByte;\n@@ -359,1 +359,1 @@\n-                PRESERVE_OLD_DC_ENCODING == false)) {\n+                    !PRESERVE_OLD_DC_ENCODING)) {\n@@ -376,1 +376,1 @@\n-        boolean escape = false;\n+        boolean escape;\n@@ -386,1 +386,1 @@\n-                Byte hexByte = null;\n+                Byte hexByte;\n@@ -446,3 +446,1 @@\n-                for (int i = 0; i < spaceCount; i++) {\n-                    temp.append(' ');\n-                }\n+                temp.append(\" \".repeat(spaceCount));\n@@ -458,1 +456,1 @@\n-            if (c == ' ' && escape == false) {\n+            if (c == ' ' && !escape) {\n@@ -464,3 +462,1 @@\n-                for (int i = 0; i < spaceCount; i++) {\n-                    temp.append(' ');\n-                }\n+                temp.append(\" \".repeat(spaceCount));\n@@ -472,1 +468,1 @@\n-        } while (isTerminator(c, format) == false);\n+        } while (!isTerminator(c, format));\n@@ -490,1 +486,1 @@\n-                PRESERVE_OLD_DC_ENCODING == false)) {\n+                    !PRESERVE_OLD_DC_ENCODING)) {\n@@ -551,1 +547,1 @@\n-        boolean trailing = false;\n+        boolean trailing;\n@@ -559,1 +555,1 @@\n-            \/\/ and StringReader ignores readAheadLimit anyways\n+            \/\/ and StringReader ignores readAheadLimit anyway\n@@ -608,1 +604,1 @@\n-        if (obj instanceof AVA == false) {\n+        if (!(obj instanceof AVA other)) {\n@@ -611,1 +607,0 @@\n-        AVA other = (AVA)obj;\n@@ -661,1 +656,1 @@\n-            (toKeyword(DEFAULT, Collections.<String, String>emptyMap()));\n+            (toKeyword(DEFAULT, Collections.emptyMap()));\n@@ -670,1 +665,1 @@\n-        return toRFC1779String(Collections.<String, String>emptyMap());\n+        return toRFC1779String(Collections.emptyMap());\n@@ -689,1 +684,1 @@\n-        return toRFC2253String(Collections.<String, String>emptyMap());\n+        return toRFC2253String(Collections.emptyMap());\n@@ -722,1 +717,1 @@\n-            byte[] data = null;\n+            byte[] data;\n@@ -739,1 +734,1 @@\n-            String valStr = null;\n+            String valStr;\n@@ -842,1 +837,1 @@\n-            (toKeyword(RFC2253, Collections.<String, String>emptyMap()));\n+            (toKeyword(RFC2253, Collections.emptyMap()));\n@@ -857,1 +852,1 @@\n-            byte[] data = null;\n+            byte[] data;\n@@ -874,1 +869,1 @@\n-            String valStr = null;\n+            String valStr;\n@@ -920,1 +915,1 @@\n-                        if (previousWhite == false) {\n+                        if (!previousWhite) {\n@@ -926,1 +921,0 @@\n-                            continue;\n@@ -1118,3 +1112,4 @@\n-    private String keyword;\n-    private ObjectIdentifier oid;\n-    private boolean rfc1779Compliant, rfc2253Compliant;\n+    private final String keyword;\n+    private final ObjectIdentifier oid;\n+    private final boolean rfc1779Compliant;\n+    private final boolean rfc2253Compliant;\n@@ -1154,1 +1149,1 @@\n-     *   If an entry does not exist, it will fallback to the builtin\n+     *   If an entry does not exist, it will fall back to the builtin\n@@ -1197,1 +1192,1 @@\n-        if (number == false) {\n+        if (!number) {\n@@ -1210,1 +1205,1 @@\n-            (oid, standard, Collections.<String, String>emptyMap());\n+            (oid, standard, Collections.emptyMap());\n@@ -1270,2 +1265,2 @@\n-        oidMap = new HashMap<ObjectIdentifier,AVAKeyword>();\n-        keywordMap = new HashMap<String,AVAKeyword>();\n+        oidMap = new HashMap<>();\n+        keywordMap = new HashMap<>();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":34,"deletions":39,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    private ObjectIdentifier accessMethod;\n+    private final ObjectIdentifier accessMethod;\n@@ -42,1 +42,1 @@\n-    private GeneralName accessLocation;\n+    private final GeneralName accessLocation;\n@@ -102,1 +102,1 @@\n-        String method = null;\n+        String method;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AccessDescription.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -256,1 +256,1 @@\n-     * of algorithm names, or need a user friendly name.\n+     * of algorithm names, or need a user-friendly name.\n@@ -311,5 +311,1 @@\n-            if (n != null) {\n-                return n;\n-            } else {\n-                return algid.toString();\n-            }\n+            return (n != null) ? n : algid.toString();\n@@ -349,1 +345,1 @@\n-        return algid.equals((Object)other.algid) &&\n+        return algid.equals(other.algid) &&\n@@ -558,1 +554,1 @@\n-    \/\/ oid string cache index'ed by algorithm name and oid strings\n+    \/\/ oid string cache indexed by algorithm name and oid strings\n@@ -568,1 +564,1 @@\n-        \/\/ Double checked locking; safe because aliasOidsTable is volatile\n+        \/\/ Double-checked locking; safe because aliasOidsTable is volatile\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.Enumeration;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AttributeNameEnumeration.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -124,1 +124,1 @@\n-        accessDescriptions = new ArrayList<AccessDescription>();\n+        accessDescriptions = new ArrayList<>();\n@@ -199,1 +199,1 @@\n-            accessDescriptions = new ArrayList<AccessDescription>();\n+            accessDescriptions = new ArrayList<>();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityInfoAccessExtension.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-            tmp.putBoolean(ca);\n+            tmp.putBoolean(true);\n@@ -197,5 +197,1 @@\n-             if (ca) {\n-                 critical = true;\n-             } else {\n-                 critical = false;\n-             }\n+             critical = ca;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/BasicConstraintsExtension.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- * scheme-specific-part is case sensitive.  Processing rules for other\n+ * scheme-specific-part is case-sensitive.  Processing rules for other\n@@ -104,1 +104,1 @@\n-    private String extensionName;\n+    private final String extensionName;\n@@ -180,1 +180,1 @@\n-        distributionPoints = new ArrayList<DistributionPoint>();\n+        distributionPoints = new ArrayList<>();\n@@ -260,1 +260,1 @@\n-                    Collections.<DistributionPoint>emptyList();\n+                    Collections.emptyList();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLDistributionPointsExtension.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -66,2 +66,2 @@\n-    private Map<String,Extension> map = Collections.synchronizedMap(\n-            new TreeMap<String,Extension>());\n+    private final Map<String,Extension> map = Collections.synchronizedMap(\n+            new TreeMap<>());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLExtensions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,3 +59,3 @@\n-    private BigInteger crlNumber = null;\n-    private String extensionName;\n-    private String extensionLabel;\n+    private BigInteger crlNumber;\n+    private final String extensionName;\n+    private final String extensionLabel;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLNumberExtension.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    private static CRLReason[] values = CRLReason.values();\n+    private static final CRLReason[] values = CRLReason.values();\n@@ -54,1 +54,1 @@\n-    private int reasonCode = 0;\n+    private int reasonCode;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLReasonCodeExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,2 +85,2 @@\n-    private int         verfCode;\n-    private String      moreData;\n+    private final int         verfCode;\n+    private final String      moreData;\n@@ -107,0 +107,1 @@\n+        moreData = null;;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertException.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    private Map<String,Extension> map = Collections.synchronizedMap(\n-            new TreeMap<String,Extension>());\n+    private final Map<String,Extension> map = Collections.synchronizedMap(\n+            new TreeMap<>());\n@@ -89,1 +89,1 @@\n-    private static Class<?>[] PARAMS = {Boolean.class, Object.class};\n+    private static final Class<?>[] PARAMS = {Boolean.class, Object.class};\n@@ -115,1 +115,1 @@\n-            if (ext.isCritical() == false) {\n+            if (!ext.isCritical()) {\n@@ -118,1 +118,1 @@\n-                    unparseableExtensions = new TreeMap<String,Extension>();\n+                    unparseableExtensions = new TreeMap<>();\n@@ -239,1 +239,1 @@\n-    public String getNameByOid(ObjectIdentifier oid) throws IOException {\n+    public String getNameByOid(ObjectIdentifier oid) {\n@@ -265,5 +265,2 @@\n-        if (unparseableExtensions == null) {\n-            return Collections.emptyMap();\n-        } else {\n-            return unparseableExtensions;\n-        }\n+        return (unparseableExtensions == null) ?\n+                Collections.emptyMap() : unparseableExtensions;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,1 @@\n-        certPolicies = new ArrayList<PolicyInformation>();\n+        certPolicies = new ArrayList<>();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePoliciesExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    private ObjectIdentifier id;\n+    private final ObjectIdentifier id;\n@@ -70,3 +70,0 @@\n-        String s = \"CertificatePolicyId: [\"\n-                 + id.toString()\n-                 + \"]\\n\";\n@@ -74,1 +71,3 @@\n-        return (s);\n+        return (\"CertificatePolicyId: [\"\n+                 + id.toString()\n+                 + \"]\\n\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePolicyId.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n-    private CertificatePolicyId issuerDomain;\n-    private CertificatePolicyId subjectDomain;\n+    private final CertificatePolicyId issuerDomain;\n+    private final CertificatePolicyId subjectDomain;\n@@ -85,1 +85,2 @@\n-        String s = \"CertificatePolicyMap: [\\n\"\n+\n+        return (\"CertificatePolicyMap: [\\n\"\n@@ -88,3 +89,1 @@\n-                 + \"]\\n\";\n-\n-        return (s);\n+                 + \"]\\n\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePolicyMap.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,3 +74,0 @@\n-        String s = \"CertificatePolicySet:[\\n\"\n-                 + ids.toString()\n-                 + \"]\\n\";\n@@ -78,1 +75,3 @@\n-        return (s);\n+        return (\"CertificatePolicySet:[\\n\"\n+                 + ids.toString()\n+                 + \"]\\n\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePolicySet.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    private String name;\n+    private final String name;\n@@ -176,1 +176,1 @@\n-        if (!(obj instanceof DNSName))\n+        if (!(obj instanceof DNSName other))\n@@ -179,2 +179,0 @@\n-        DNSName other = (DNSName)obj;\n-\n@@ -213,1 +211,1 @@\n-     * can be constructed by simply adding to the left hand side of the name\n+     * can be constructed by simply adding to the left-hand side of the name\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DNSName.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -331,1 +331,1 @@\n-        if (obj instanceof DistributionPoint == false) {\n+        if (!(obj instanceof DistributionPoint other)) {\n@@ -334,1 +334,0 @@\n-        DistributionPoint other = (DistributionPoint)obj;\n@@ -336,1 +335,1 @@\n-        boolean equal = Objects.equals(this.fullName, other.fullName)\n+        return Objects.equals(this.fullName, other.fullName)\n@@ -340,1 +339,0 @@\n-        return equal;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPoint.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-import java.util.*;\n+import java.util.Objects;\n@@ -31,1 +31,0 @@\n-import sun.security.util.BitArray;\n@@ -199,1 +198,1 @@\n-        if (obj instanceof DistributionPointName == false) {\n+        if (!(obj instanceof DistributionPointName other)) {\n@@ -202,1 +201,0 @@\n-        DistributionPointName other = (DistributionPointName)obj;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPointName.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,2 +184,1 @@\n-            if (otherParty != null)\n-                return false;\n+            return otherParty == null;\n@@ -187,2 +186,1 @@\n-            if (!(this.party.equals(otherParty)))\n-                return false;\n+            return this.party.equals(otherParty);\n@@ -190,1 +188,0 @@\n-        return true;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/EDIPartyName.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import java.util.HashMap;\n@@ -34,1 +33,0 @@\n-import java.util.Map;\n@@ -37,1 +35,4 @@\n-import sun.security.util.*;\n+import sun.security.util.DerOutputStream;\n+import sun.security.util.DerValue;\n+import sun.security.util.KnownOIDs;\n+import sun.security.util.ObjectIdentifier;\n@@ -161,1 +162,1 @@\n-        keyUsages = new Vector<ObjectIdentifier>();\n+        keyUsages = new Vector<>();\n@@ -276,1 +277,1 @@\n-        List<String> al = new ArrayList<String>(keyUsages.size());\n+        List<String> al = new ArrayList<>(keyUsages.size());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/ExtendedKeyUsageExtension.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * the driving license number as a extension.\n+ * the driving license number as an extension.\n@@ -68,1 +68,1 @@\n-     * Default constructor.  Used only by sub-classes.\n+     * Default constructor.  Used only by subclasses.\n@@ -89,1 +89,0 @@\n-            extensionValue = val.getOctetString();\n@@ -92,1 +91,0 @@\n-            extensionValue = val.getOctetString();\n@@ -94,0 +92,1 @@\n+        extensionValue = val.getOctetString();\n@@ -154,1 +153,1 @@\n-            dos1.putBoolean(critical);\n+            dos1.putBoolean(true);\n@@ -179,1 +178,1 @@\n-            dos.putBoolean(critical);\n+            dos.putBoolean(true);\n@@ -204,1 +203,1 @@\n-     * Returns the extension value as an byte array for further processing.\n+     * Returns the extension value as a byte array for further processing.\n@@ -262,1 +261,1 @@\n-        if (!(other instanceof Extension))\n+        if (!(other instanceof Extension otherExt))\n@@ -264,1 +263,0 @@\n-        Extension otherExt = (Extension) other;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/Extension.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,0 @@\n-import java.math.BigInteger;\n-import java.util.Enumeration;\n@@ -34,2 +32,0 @@\n-import sun.security.util.*;\n-\n@@ -66,1 +62,1 @@\n-     * Creates a freshest CRL extension.\n+     * Creates a fresh CRL extension.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/FreshestCRLExtension.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    private GeneralNameInterface name = null;\n+    private final GeneralNameInterface name;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,9 +43,9 @@\n-    public static final int NAME_ANY = 0;\n-    public static final int NAME_RFC822 = 1;\n-    public static final int NAME_DNS = 2;\n-    public static final int NAME_X400 = 3;\n-    public static final int NAME_DIRECTORY = 4;\n-    public static final int NAME_EDI = 5;\n-    public static final int NAME_URI = 6;\n-    public static final int NAME_IP = 7;\n-    public static final int NAME_OID = 8;\n+    int NAME_ANY = 0;\n+    int NAME_RFC822 = 1;\n+    int NAME_DNS = 2;\n+    int NAME_X400 = 3;\n+    int NAME_DIRECTORY = 4;\n+    int NAME_EDI = 5;\n+    int NAME_URI = 6;\n+    int NAME_IP = 7;\n+    int NAME_OID = 8;\n@@ -56,5 +56,5 @@\n-    public static final int NAME_DIFF_TYPE = -1; \/* input name is different type from name (i.e. does not constrain) *\/\n-    public static final int NAME_MATCH = 0;      \/* input name matches name *\/\n-    public static final int NAME_NARROWS = 1;    \/* input name narrows name *\/\n-    public static final int NAME_WIDENS = 2;     \/* input name widens name *\/\n-    public static final int NAME_SAME_TYPE = 3;  \/* input name does not match, narrow, or widen, but is same type *\/\n+    int NAME_DIFF_TYPE = -1; \/* input name is different type from name (i.e. does not constrain) *\/\n+    int NAME_MATCH = 0;      \/* input name matches name *\/\n+    int NAME_NARROWS = 1;    \/* input name narrows name *\/\n+    int NAME_WIDENS = 2;     \/* input name widens name *\/\n+    int NAME_SAME_TYPE = 3;  \/* input name does not match, narrow, or widen, but is same type *\/\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralNameInterface.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-        names = new ArrayList<GeneralName>();\n+        names = new ArrayList<>();\n@@ -135,1 +135,1 @@\n-        if (obj instanceof GeneralNames == false) {\n+        if (!(obj instanceof GeneralNames other)) {\n@@ -138,1 +138,0 @@\n-        GeneralNames other = (GeneralNames)obj;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralNames.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    private GeneralName name;\n+    private final GeneralName name;\n@@ -155,1 +155,1 @@\n-        if (!(other instanceof GeneralSubtree))\n+        if (!(other instanceof GeneralSubtree otherGS))\n@@ -157,1 +157,0 @@\n-        GeneralSubtree otherGS = (GeneralSubtree)other;\n@@ -168,3 +167,1 @@\n-        if (this.maximum != otherGS.maximum)\n-            return false;\n-        return true;\n+        return this.maximum == otherGS.maximum;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtree.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,1 +155,1 @@\n-        if (obj instanceof GeneralSubtrees == false) {\n+        if (!(obj instanceof GeneralSubtrees other)) {\n@@ -158,1 +158,0 @@\n-        GeneralSubtrees other = (GeneralSubtrees)obj;\n@@ -178,2 +177,1 @@\n-        GeneralNameInterface gni = gn.getName();\n-        return gni;\n+        return gn.getName();\n@@ -411,1 +409,1 @@\n-                if (intersection == false) {\n+                if (!intersection) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtrees.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    private boolean isIPv4;\n+    private final boolean isIPv4;\n@@ -214,2 +214,1 @@\n-            for (int i = 0; i < MASKSIZE; i++)\n-                address[MASKSIZE+i] = maskArray[i];\n+            System.arraycopy(maskArray, 0, address, MASKSIZE, MASKSIZE);\n@@ -281,2 +280,1 @@\n-                for (int i=16; i < 32; i++)\n-                    maskBytes[i-16] = address[i];\n+                System.arraycopy(address, 16, maskBytes, 0, 16);\n@@ -319,1 +317,1 @@\n-        if (!(obj instanceof IPAddressName))\n+        if (!(obj instanceof IPAddressName otherName))\n@@ -322,1 +320,0 @@\n-        IPAddressName otherName = (IPAddressName)obj;\n@@ -402,1 +399,1 @@\n-        else if (((IPAddressName)inputName).equals(this))\n+        else if (inputName.equals(this))\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IPAddressName.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-        this.critical = critical.booleanValue();\n+        this.critical = true;\n@@ -154,2 +154,1 @@\n-         String s = super.toString() + \"InhibitAnyPolicy: \" + skipCerts + \"\\n\";\n-         return s;\n+         return super.toString() + \"InhibitAnyPolicy: \" + skipCerts + \"\\n\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InhibitAnyPolicyExtension.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-    GeneralNames names = null;\n+    GeneralNames names;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuerAlternativeNameExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-        while (in != null && in.available() != 0) {\n+        while (in.available() != 0) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuingDistributionPointExtension.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    private byte[] octetString;\n+    private final byte[] octetString;\n@@ -93,1 +93,1 @@\n-        MessageDigest md = null;\n+        MessageDigest md;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/KeyIdentifier.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-    private void calcMinMax() throws IOException {\n+    private void calcMinMax() {\n@@ -445,2 +445,2 @@\n-        if (subject.isEmpty() == false) {\n-            if (verify(subject) == false) {\n+        if (!subject.isEmpty()) {\n+            if (!verify(subject)) {\n@@ -612,3 +612,1 @@\n-            if (sameType) {\n-                return false;\n-            }\n+            return !sameType;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NameConstraintsExtension.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * certificate. This extension has been superseded by IETF PKIX extensions\n+ * certificate). This extension has been superseded by IETF PKIX extensions\n@@ -90,1 +90,1 @@\n-    private static MapEntry[] mMapData = {\n+    private static final MapEntry[] mMapData = {\n@@ -101,1 +101,1 @@\n-    private static final Vector<String> mAttributeNames = new Vector<String>();\n+    private static final Vector<String> mAttributeNames = new Vector<>();\n@@ -302,1 +302,0 @@\n-        Boolean val = Boolean.TRUE;\n@@ -308,1 +307,1 @@\n-                keyUsage.set(KeyUsageExtension.DIGITAL_SIGNATURE, val);\n+                keyUsage.set(KeyUsageExtension.DIGITAL_SIGNATURE, true);\n@@ -311,1 +310,1 @@\n-                keyUsage.set(KeyUsageExtension.KEY_ENCIPHERMENT, val);\n+                keyUsage.set(KeyUsageExtension.KEY_ENCIPHERMENT, true);\n@@ -316,1 +315,1 @@\n-                keyUsage.set(KeyUsageExtension.KEY_CERTSIGN, val);\n+                keyUsage.set(KeyUsageExtension.KEY_CERTSIGN, true);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NetscapeCertTypeExtension.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -32,2 +31,0 @@\n-import sun.security.util.*;\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OCSPNoCheckExtension.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- * This class defines the mapping from OID {@literal &} name to classes and vice\n+ * This class defines the mapping from OID {@literal &} name to class and vice\n@@ -112,2 +112,2 @@\n-        oidMap = new HashMap<ObjectIdentifier,OIDInfo>();\n-        nameMap = new HashMap<String,OIDInfo>();\n+        oidMap = new HashMap<>();\n+        nameMap = new HashMap<>();\n@@ -246,1 +246,1 @@\n-     * Return user friendly name associated with the OID.\n+     * Return user-friendly name associated with the OID.\n@@ -249,1 +249,1 @@\n-     * @return the user friendly name or null if no name\n+     * @return the user-friendly name or null if no name\n@@ -260,1 +260,1 @@\n-     * @param name the user friendly name.\n+     * @param name the user-friendly name.\n@@ -270,1 +270,1 @@\n-     * Return the java class object associated with the user friendly name.\n+     * Return the java class object associated with the user-friendly name.\n@@ -272,1 +272,1 @@\n-     * @param name the user friendly name.\n+     * @param name the user-friendly name.\n@@ -284,1 +284,1 @@\n-     * @exception CertificateException if class cannot be instatiated.\n+     * @exception CertificateException if class cannot be instantiated.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OIDMap.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-     private ObjectIdentifier oid;\n+     private final ObjectIdentifier oid;\n@@ -118,1 +118,1 @@\n-        if (!(obj instanceof OIDName))\n+        if (!(obj instanceof OIDName other))\n@@ -121,2 +121,0 @@\n-        OIDName other = (OIDName)obj;\n-\n@@ -156,1 +154,1 @@\n-        else if (this.equals((OIDName)inputName))\n+        else if (this.equals(inputName))\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OIDName.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-     * Create the OtherName object from a passed ObjectIdentfier and\n+     * Create the OtherName object from a passed ObjectIdentifier and\n@@ -131,1 +131,0 @@\n-            Class<?>[] params = { Object.class };\n@@ -161,1 +160,0 @@\n-            return;\n@@ -180,1 +178,1 @@\n-        if (!(other instanceof OtherName)) {\n+        if (!(other instanceof OtherName otherOther)) {\n@@ -183,1 +181,0 @@\n-        OtherName otherOther = (OtherName)other;\n@@ -187,1 +184,1 @@\n-        GeneralNameInterface otherGNI = null;\n+        GeneralNameInterface otherGNI;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OtherName.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * <p>Extensions are addiitonal attributes which can be inserted in a X509\n+ * <p>Extensions are additional attributes which can be inserted in a X509\n@@ -36,1 +36,1 @@\n- * the driving license number as a extension.\n+ * the driving license number as an extension.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PKIXExtensions.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-            new LinkedHashSet<PolicyQualifierInfo>(policyQualifiers);\n+                new LinkedHashSet<>(policyQualifiers);\n@@ -107,1 +107,1 @@\n-            policyQualifiers = new LinkedHashSet<PolicyQualifierInfo>();\n+            policyQualifiers = new LinkedHashSet<>();\n@@ -128,1 +128,1 @@\n-        if (!(other instanceof PolicyInformation))\n+        if (!(other instanceof PolicyInformation piOther))\n@@ -130,1 +130,0 @@\n-        PolicyInformation piOther = (PolicyInformation)other;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyInformation.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * <p>Extensions are addiitonal attributes which can be inserted in a X509\n+ * <p>Extensions are additional attributes which can be inserted in a X509\n@@ -41,1 +41,1 @@\n- * the driving license number as a extension.\n+ * the driving license number as an extension.\n@@ -105,1 +105,1 @@\n-        maps = Collections.<CertificatePolicyMap>emptyList();\n+        maps = Collections.emptyList();\n@@ -127,1 +127,1 @@\n-        maps = new ArrayList<CertificatePolicyMap>();\n+        maps = new ArrayList<>();\n@@ -140,2 +140,0 @@\n-        String s = super.toString() + \"PolicyMappings [\\n\"\n-                 + maps.toString() + \"]\\n\";\n@@ -143,1 +141,2 @@\n-        return (s);\n+        return (super.toString() + \"PolicyMappings [\\n\"\n+                 + maps.toString() + \"]\\n\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyMappingsExtension.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-        this(name, Collections.<String, String>emptyMap());\n+        this(name, Collections.emptyMap());\n@@ -150,1 +150,1 @@\n-        assertion = avaVec.toArray(new AVA[avaVec.size()]);\n+        assertion = avaVec.toArray(new AVA[0]);\n@@ -165,1 +165,1 @@\n-        this(name, format, Collections.<String, String>emptyMap());\n+        this(name, format, Collections.emptyMap());\n@@ -182,1 +182,1 @@\n-        if (format.equalsIgnoreCase(\"RFC2253\") == false) {\n+        if (!format.equalsIgnoreCase(\"RFC2253\")) {\n@@ -185,1 +185,1 @@\n-        int searchOffset = 0;\n+        int searchOffset;\n@@ -226,1 +226,1 @@\n-        assertion = avaVec.toArray(new AVA[avaVec.size()]);\n+        assertion = avaVec.toArray(new AVA[0]);\n@@ -296,1 +296,1 @@\n-        if (obj instanceof RDN == false) {\n+        if (!(obj instanceof RDN other)) {\n@@ -299,1 +299,0 @@\n-        RDN other = (RDN)obj;\n@@ -344,1 +343,1 @@\n-     * Returns a printable form of this RDN, using RFC 1779 style catenation\n+     * Returns a printable form of this RDN, using RFC 1779 style concatenation\n@@ -365,1 +364,1 @@\n-        return toRFC1779String(Collections.<String, String>emptyMap());\n+        return toRFC1779String(Collections.emptyMap());\n@@ -391,1 +390,1 @@\n-            (false, Collections.<String, String>emptyMap());\n+            (false, Collections.emptyMap());\n@@ -410,1 +409,1 @@\n-        if (canonical == false) {\n+        if (!canonical) {\n@@ -412,1 +411,1 @@\n-                (false, Collections.<String, String>emptyMap());\n+                (false, Collections.emptyMap());\n@@ -417,1 +416,1 @@\n-                (true, Collections.<String, String>emptyMap());\n+                (true, Collections.emptyMap());\n@@ -430,1 +429,1 @@\n-         * Where there is a multi-valued RDN, the outputs from adjoining\n+         * Where there is a multivalued RDN, the outputs from adjoining\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/RDN.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    private String name;\n+    private final String name;\n@@ -140,1 +140,1 @@\n-        if (!(obj instanceof RFC822Name))\n+        if (!(obj instanceof RFC822Name other))\n@@ -143,2 +143,0 @@\n-        RFC822Name other = (RFC822Name)obj;\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/RFC822Name.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.io.InputStream;\n-import java.io.OutputStream;\n@@ -33,1 +31,4 @@\n-import sun.security.util.*;\n+import sun.security.util.BitArray;\n+import sun.security.util.DerInputStream;\n+import sun.security.util.DerOutputStream;\n+import sun.security.util.DerValue;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/ReasonFlags.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    GeneralNames        names = null;\n+    GeneralNames        names;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectAlternativeNameExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-        accessDescriptions = new ArrayList<AccessDescription>();\n+        accessDescriptions = new ArrayList<>();\n@@ -205,1 +205,1 @@\n-                Collections.<AccessDescription>emptyList();\n+                Collections.emptyList();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectInfoAccessExtension.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * <p>Extensions are addiitonal attributes which can be inserted in a X509\n+ * <p>Extensions are additional attributes which can be inserted in a X509\n@@ -43,1 +43,1 @@\n- * the driving license number as a extension.\n+ * the driving license number as an extension.\n@@ -70,1 +70,1 @@\n-    private KeyIdentifier id = null;\n+    private KeyIdentifier id;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectKeyIdentifierExtension.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- * the remainder of the scheme-specific-part is case sensitive.\n+ * the remainder of the scheme-specific-part is case-sensitive.\n@@ -71,1 +71,1 @@\n- * scheme-specific data.\n+ * scheme-specific data).\n@@ -84,2 +84,2 @@\n-    private URI uri;\n-    private String host;\n+    private final URI uri;\n+    private final String host;\n@@ -150,1 +150,1 @@\n-     * name constraints syntax is different than SubjectAltNames, etc. See\n+     * name constraints syntax is different from SubjectAltNames, etc. See\n@@ -223,1 +223,1 @@\n-        if (!(obj instanceof URIName)) {\n+        if (!(obj instanceof URIName other)) {\n@@ -227,2 +227,0 @@\n-        URIName other = (URIName) obj;\n-\n@@ -338,1 +336,1 @@\n-                    !(otherHostObject instanceof DNSName)) {\n+                    !(otherHostObject instanceof DNSName otherDNS)) {\n@@ -345,1 +343,0 @@\n-                    DNSName otherDNS = (DNSName) otherHostObject;\n@@ -384,1 +381,1 @@\n-        DNSName dnsName = null;\n+        DNSName dnsName;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/URIName.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.math.BigInteger;\n@@ -30,2 +29,4 @@\n-import sun.security.util.HexDumpEncoder;\n-import sun.security.util.*;\n+import sun.security.util.BitArray;\n+import sun.security.util.DerInputStream;\n+import sun.security.util.DerOutputStream;\n+import sun.security.util.DerValue;\n@@ -41,1 +42,1 @@\n-    private BitArray    id;\n+    private final BitArray    id;\n@@ -93,1 +94,1 @@\n-     * @param tag enocode it under the following tag.\n+     * @param tag encode it under the following tag.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/UniqueIdentity.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-    private String exceptionDescription;\n-    private String exceptionMessage;\n+    private final String exceptionDescription;\n+    private final String exceptionMessage;\n@@ -48,1 +48,1 @@\n-                name = (String)(field.get(null)) + \" \";\n+                name = field.get(null) + \" \";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/UnparseableExtension.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -338,1 +338,1 @@\n-    byte[] nameValue = null;\n+    byte[] nameValue;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X400Address.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-        this(dname, Collections.<String, String>emptyMap());\n+        this(dname, Collections.emptyMap());\n@@ -184,1 +184,1 @@\n-            parseDN(dname, Collections.<String, String>emptyMap());\n+            parseDN(dname, Collections.emptyMap());\n@@ -201,1 +201,1 @@\n-     * @param country two letter country code, e.g. \"CH\"\n+     * @param country two-letter country code, e.g. \"CH\"\n@@ -238,1 +238,1 @@\n-     * @param country two letter country code, e.g. \"CH\"\n+     * @param country two-letter country code, e.g. \"CH\"\n@@ -411,1 +411,1 @@\n-        if (obj instanceof X500Name == false) {\n+        if (!(obj instanceof X500Name other)) {\n@@ -414,1 +414,0 @@\n-        X500Name other = (X500Name)obj;\n@@ -639,1 +638,1 @@\n-        return getRFC1779Name(Collections.<String, String>emptyMap());\n+        return getRFC1779Name(Collections.emptyMap());\n@@ -652,3 +651,1 @@\n-            if (rfc1779Dn != null) {\n-                return rfc1779Dn;\n-            } else {\n+            if (rfc1779Dn == null) {\n@@ -656,1 +653,0 @@\n-                return rfc1779Dn;\n@@ -658,0 +654,1 @@\n+            return rfc1779Dn;\n@@ -668,1 +665,1 @@\n-        return getRFC2253Name(Collections.<String, String>emptyMap());\n+        return getRFC2253Name(Collections.emptyMap());\n@@ -680,3 +677,1 @@\n-            if (rfc2253Dn != null) {\n-                return rfc2253Dn;\n-            } else {\n+            if (rfc2253Dn == null) {\n@@ -684,1 +679,0 @@\n-                return rfc2253Dn;\n@@ -686,0 +680,1 @@\n+            return rfc2253Dn;\n@@ -792,1 +787,1 @@\n-        DerValue[] nameseq = null;\n+        DerValue[] nameseq;\n@@ -952,1 +947,1 @@\n-        names = dnVector.toArray(new RDN[dnVector.size()]);\n+        names = dnVector.toArray(new RDN[0]);\n@@ -1003,1 +998,1 @@\n-         names = dnVector.toArray(new RDN[dnVector.size()]);\n+         names = dnVector.toArray(new RDN[0]);\n@@ -1026,1 +1021,1 @@\n-        if (rdnEnd == 1 && dnString.charAt(rdnEnd - 1) == '\\\\') {\n+        if (rdnEnd == 1 && dnString.charAt(0) == '\\\\') {\n@@ -1057,1 +1052,1 @@\n-            return (count % 2) != 0 ? true : false;\n+            return (count % 2) != 0;\n@@ -1077,5 +1072,0 @@\n-        if (names == null) {\n-            dn = \"\";\n-            return;\n-        }\n-\n@@ -1103,4 +1093,0 @@\n-        if (names == null) {\n-            return \"\";\n-        }\n-\n@@ -1302,1 +1288,1 @@\n-        int minLen = (thisLen < otherLen) ? thisLen: otherLen;\n+        int minLen = Math.min(thisLen, otherLen);\n@@ -1319,3 +1305,1 @@\n-        for (int j=0; j < i; j++) {\n-            ancestor[j] = names[j];\n-        }\n+        System.arraycopy(names, 0, ancestor, 0, i);\n@@ -1323,1 +1307,1 @@\n-        X500Name commonAncestor = null;\n+        X500Name commonAncestor;\n@@ -1348,11 +1332,10 @@\n-                new PrivilegedExceptionAction<>() {\n-            public Object[] run() throws Exception {\n-                Class<X500Principal> pClass = X500Principal.class;\n-                Class<?>[] args = new Class<?>[] { X500Name.class };\n-                Constructor<X500Principal> cons = pClass.getDeclaredConstructor(args);\n-                cons.setAccessible(true);\n-                Field field = pClass.getDeclaredField(\"thisX500Name\");\n-                field.setAccessible(true);\n-                return new Object[] {cons, field};\n-            }\n-        };\n+                () -> {\n+                    Class<X500Principal> pClass = X500Principal.class;\n+                    Class<?>[] args = new Class<?>[] { X500Name.class };\n+                    Constructor<X500Principal> cons =\n+                        pClass.getDeclaredConstructor(args);\n+                    cons.setAccessible(true);\n+                    Field field = pClass.getDeclaredField(\"thisX500Name\");\n+                    field.setAccessible(true);\n+                    return new Object[] {cons, field};\n+                };\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X500Name.java","additions":29,"deletions":46,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n-    private String prefix = null;\n-    private String suffix = null;\n+    private final String prefix;\n+    private final String suffix;\n@@ -52,0 +52,1 @@\n+            suffix = null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509AttributeName.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -411,1 +411,1 @@\n-                Extension ex = null;\n+                Extension ex;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLEntryImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,2 +98,3 @@\n-    private Map<X509IssuerSerial,X509CRLEntry> revokedMap = new TreeMap<>();\n-    private List<X509CRLEntry> revokedList = new LinkedList<>();\n+    private final Map<X509IssuerSerial,X509CRLEntry> revokedMap =\n+            new TreeMap<>();\n+    private final List<X509CRLEntry> revokedList = new LinkedList<>();\n@@ -371,1 +372,1 @@\n-        Signature   sigVerf = null;\n+        Signature   sigVerf;\n@@ -424,1 +425,1 @@\n-        Signature sigVerf = null;\n+        Signature sigVerf;\n@@ -615,1 +616,2 @@\n-        if (revokedMap.isEmpty() || (!(cert instanceof X509Certificate))) {\n+        if (revokedMap.isEmpty() ||\n+                (!(cert instanceof X509Certificate xcert))) {\n@@ -618,1 +620,0 @@\n-        X509Certificate xcert = (X509Certificate) cert;\n@@ -743,1 +744,1 @@\n-            return new TreeSet<X509CRLEntry>(revokedList);\n+            return new TreeSet<>(revokedList);\n@@ -845,1 +846,1 @@\n-            KeyIdentifier keyId = (KeyIdentifier)aki.get(\n+            return (KeyIdentifier)aki.get(\n@@ -847,1 +848,0 @@\n-            return keyId;\n@@ -885,2 +885,1 @@\n-            BigInteger num = numExt.get(CRLNumberExtension.NUMBER);\n-            return num;\n+            return numExt.get(CRLNumberExtension.NUMBER);\n@@ -914,2 +913,1 @@\n-            BigInteger num = dciExt.get(DeltaCRLIndicatorExtension.NUMBER);\n-            return num;\n+            return dciExt.get(DeltaCRLIndicatorExtension.NUMBER);\n@@ -1019,1 +1017,1 @@\n-                Extension ex = null;\n+                Extension ex;\n@@ -1063,1 +1061,1 @@\n-        \/\/ check if can over write the certificate\n+        \/\/ check if we can overwrite the certificate\n@@ -1325,1 +1323,1 @@\n-            if (!(o instanceof X509IssuerSerial)) {\n+            if (!(o instanceof X509IssuerSerial other)) {\n@@ -1329,6 +1327,2 @@\n-            X509IssuerSerial other = (X509IssuerSerial) o;\n-            if (serial.equals(other.getSerial()) &&\n-                issuer.equals(other.getIssuer())) {\n-                return true;\n-            }\n-            return false;\n+            return serial.equals(other.getSerial()) &&\n+                    issuer.equals(other.getIssuer());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":16,"deletions":22,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-    \/\/ SubjectAlterntativeNames cache\n+    \/\/ SubjectAlternativeNames cache\n@@ -203,1 +203,1 @@\n-        DerValue der = null;\n+        DerValue der;\n@@ -244,1 +244,1 @@\n-        String line = null;\n+        String line;\n@@ -422,1 +422,1 @@\n-        Signature sigVerf = null;\n+        Signature sigVerf;\n@@ -447,1 +447,1 @@\n-        if (verificationResult == false) {\n+        if (!verificationResult) {\n@@ -476,1 +476,1 @@\n-        Signature sigVerf = null;\n+        Signature sigVerf;\n@@ -500,1 +500,1 @@\n-        if (verificationResult == false) {\n+        if (!verificationResult) {\n@@ -611,1 +611,1 @@\n-        CertificateValidity interval = null;\n+        CertificateValidity interval;\n@@ -706,1 +706,0 @@\n-                signedCert = null;  \/\/reset this as certificate data has changed\n@@ -709,1 +708,0 @@\n-                signedCert = null;  \/\/reset this as certificate data has changed\n@@ -711,0 +709,1 @@\n+            signedCert = null;  \/\/reset this as certificate data has changed\n@@ -807,1 +806,1 @@\n-            PublicKey key = (PublicKey)info.get(CertificateX509Key.NAME\n+            return (PublicKey)info.get(CertificateX509Key.NAME\n@@ -809,1 +808,0 @@\n-            return key;\n@@ -853,1 +851,1 @@\n-            SerialNumber ser = (SerialNumber)info.get(\n+            return (SerialNumber)info.get(\n@@ -856,1 +854,0 @@\n-            return ser;\n@@ -873,1 +870,1 @@\n-            Principal subject = (Principal)info.get(X509CertInfo.SUBJECT + DOT +\n+            return (Principal)info.get(X509CertInfo.SUBJECT + DOT +\n@@ -875,1 +872,0 @@\n-            return subject;\n@@ -891,1 +887,1 @@\n-            X500Principal subject = (X500Principal)info.get(\n+            return (X500Principal)info.get(\n@@ -894,1 +890,0 @@\n-            return subject;\n@@ -910,1 +905,1 @@\n-            Principal issuer = (Principal)info.get(X509CertInfo.ISSUER + DOT +\n+            return (Principal)info.get(X509CertInfo.ISSUER + DOT +\n@@ -912,1 +907,0 @@\n-            return issuer;\n@@ -928,1 +922,1 @@\n-            X500Principal issuer = (X500Principal)info.get(\n+            return (X500Principal)info.get(\n@@ -931,1 +925,0 @@\n-            return issuer;\n@@ -946,1 +939,1 @@\n-            Date d = (Date) info.get(CertificateValidity.NAME + DOT +\n+            return (Date) info.get(CertificateValidity.NAME + DOT +\n@@ -948,1 +941,0 @@\n-            return d;\n@@ -963,1 +955,1 @@\n-            Date d = (Date) info.get(CertificateValidity.NAME + DOT +\n+            return (Date) info.get(CertificateValidity.NAME + DOT +\n@@ -965,1 +957,0 @@\n-            return d;\n@@ -1316,3 +1307,1 @@\n-            if (extensions == null) {\n-                return null;\n-            } else {\n+            if (extensions != null) {\n@@ -1323,1 +1312,1 @@\n-                for (Extension ex2: extensions.getAllExtensions()) {\n+                for (Extension ex2 : extensions.getAllExtensions()) {\n@@ -1330,1 +1319,0 @@\n-                return null;\n@@ -1332,0 +1320,1 @@\n+            return null;\n@@ -1373,1 +1362,1 @@\n-                \/\/ get the extensions, search thru' for this oid\n+                \/\/ get the extensions, search through' for this oid\n@@ -1385,1 +1374,1 @@\n-            } else { \/\/ there's sub-class that can handle this extension\n+            } else { \/\/ there's subclass that can handle this extension\n@@ -1520,2 +1509,2 @@\n-            if (((Boolean)certExt.get(BasicConstraintsExtension.IS_CA)\n-                 ).booleanValue() == true)\n+            if (((Boolean) certExt.get(BasicConstraintsExtension.IS_CA)).\n+                    booleanValue())\n@@ -1542,1 +1531,1 @@\n-            return Collections.<List<?>>emptySet();\n+            return Collections.emptySet();\n@@ -1613,0 +1602,1 @@\n+                break;\n@@ -1659,1 +1649,1 @@\n-            return Collections.<List<?>>emptySet();\n+            return Collections.emptySet();\n@@ -1692,1 +1682,1 @@\n-                return Collections.<List<?>>emptySet();\n+                return Collections.emptySet();\n@@ -1725,1 +1715,1 @@\n-            return Collections.<List<?>>emptySet();\n+            return Collections.emptySet();\n@@ -1758,1 +1748,1 @@\n-                return Collections.<List<?>>emptySet();\n+                return Collections.emptySet();\n@@ -1785,1 +1775,1 @@\n-        \/\/ check if can over write the certificate\n+        \/\/ check if we can overwrite the certificate\n@@ -1851,1 +1841,1 @@\n-        if (getIssuer == false) {\n+        if (!getIssuer) {\n@@ -1945,1 +1935,1 @@\n-    private ConcurrentHashMap<String,String> fingerprints =\n+    private final ConcurrentHashMap<String,String> fingerprints =\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":33,"deletions":43,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-    private static final Map<String,Integer> map = new HashMap<String,Integer>();\n+    private static final Map<String,Integer> map = new HashMap<>();\n@@ -345,1 +345,1 @@\n-            if (invalid.isEmpty() == false) {\n+            if (!invalid.isEmpty()) {\n@@ -720,1 +720,1 @@\n-        throws CertificateParsingException, IOException {\n+        throws CertificateParsingException {\n@@ -729,2 +729,2 @@\n-            SubjectAlternativeNameExtension subjectAltNameExt = null;\n-            GeneralNames names = null;\n+            SubjectAlternativeNameExtension subjectAltNameExt;\n+            GeneralNames names;\n@@ -747,1 +747,1 @@\n-            } else if (subjectAltNameExt.isCritical() == false) {\n+            } else if (!subjectAltNameExt.isCritical()) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -273,2 +273,1 @@\n-        X509Key result = new X509Key(algid, key);\n-        return result;\n+        return new X509Key(algid, key);\n@@ -429,1 +428,1 @@\n-        if (obj instanceof Key == false) {\n+        if (!(obj instanceof Key)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509Key.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}