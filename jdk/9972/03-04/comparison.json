{"files":[{"patch":"@@ -659,1 +659,1 @@\n-    private static final String[] SHA2GROUP = { \"SHA-224\", \"SHA-256\",\n+    private static final String[] SHA2_GROUP = { \"SHA-224\", \"SHA-256\",\n@@ -661,1 +661,1 @@\n-    private static final String[] HMACSHA2GROUP = { \"HmacSHA224\",\n+    private static final String[] HMACSHA2_GROUP = { \"HmacSHA224\",\n@@ -663,1 +663,1 @@\n-    private static final String[] SHA2RSAGROUP = { \"SHA224withRSA\",\n+    private static final String[] SHA2RSA_GROUP = { \"SHA224withRSA\",\n@@ -665,1 +665,1 @@\n-    private static final String[] SHA2DSAGROUP = { \"SHA224withDSA\",\n+    private static final String[] SHA2DSA_GROUP = { \"SHA224withDSA\",\n@@ -667,1 +667,1 @@\n-    private static final String[] SHA2ECDSAGROUP = { \"SHA224withECDSA\",\n+    private static final String[] SHA2ECDSA_GROUP = { \"SHA224withECDSA\",\n@@ -669,1 +669,1 @@\n-    private static final String[] SHA3GROUP = { \"SHA3-224\", \"SHA3-256\",\n+    private static final String[] SHA3_GROUP = { \"SHA3-224\", \"SHA3-256\",\n@@ -671,1 +671,1 @@\n-    private static final String[] HMACSHA3GROUP = { \"HmacSHA3-224\",\n+    private static final String[] HMACSHA3_GROUP = { \"HmacSHA3-224\",\n@@ -697,1 +697,1 @@\n-                    alternateNames = SHA2GROUP;\n+                    alternateNames = SHA2_GROUP;\n@@ -699,1 +699,1 @@\n-                    alternateNames = HMACSHA2GROUP;\n+                    alternateNames = HMACSHA2_GROUP;\n@@ -701,1 +701,1 @@\n-                    alternateNames = SHA2RSAGROUP;\n+                    alternateNames = SHA2RSA_GROUP;\n@@ -703,1 +703,1 @@\n-                    alternateNames = SHA2DSAGROUP;\n+                    alternateNames = SHA2DSA_GROUP;\n@@ -705,1 +705,1 @@\n-                    alternateNames = SHA2ECDSAGROUP;\n+                    alternateNames = SHA2ECDSA_GROUP;\n@@ -707,1 +707,1 @@\n-                    alternateNames = SHA3GROUP;\n+                    alternateNames = SHA3_GROUP;\n@@ -709,1 +709,1 @@\n-                    alternateNames = HMACSHA3GROUP;\n+                    alternateNames = HMACSHA3_GROUP;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderList.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -98,0 +98,1 @@\n+        this.digestAlgorithmParams = algid.getParameters();\n@@ -127,0 +128,1 @@\n+        this.digestAlgorithmParams = algid.getParameters();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/MacData.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-                \/\/ If TrustAnchor is a DSA public key, and it has no params, it\n+                \/\/ If TrustAnchor is a DSA public key and it has no params, it\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/BasicChecker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -190,21 +190,9 @@\n-        String resultString;\n-        switch (res) {\n-        case POSSIBLE:\n-            resultString = \"Certificate to be tried.\\n\";\n-            break;\n-        case BACK:\n-            resultString = \"Certificate backed out since path does not \"\n-                + \"satisfy build requirements.\\n\";\n-            break;\n-        case FOLLOW:\n-        case SUCCEED:\n-            resultString = \"Certificate satisfies conditions.\\n\";\n-            break;\n-        case FAIL:\n-            resultString = \"Certificate backed out since path does not \"\n-                + \"satisfy conditions.\\n\";\n-            break;\n-        default:\n-            resultString = \"Internal error: Invalid step result value.\\n\";\n-        }\n-        return resultString;\n+        return switch (res) {\n+            case POSSIBLE -> \"Certificate to be tried.\\n\";\n+            case BACK -> \"Certificate backed out since path does not \"\n+                    + \"satisfy build requirements.\\n\";\n+            case FOLLOW, SUCCEED -> \"Certificate satisfies conditions.\\n\";\n+            case FAIL -> \"Certificate backed out since path does not \"\n+                    + \"satisfy conditions.\\n\";\n+            default -> \"Internal error: Invalid step result value.\\n\";\n+        };\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/BuildStep.java","additions":9,"deletions":21,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -337,3 +337,2 @@\n-                idpExt.get\n-                    (IssuingDistributionPointExtension.INDIRECT_CRL).equals\n-                        (Boolean.FALSE)) {\n+                    idpExt.get (IssuingDistributionPointExtension.INDIRECT_CRL)\n+                    == (Boolean.FALSE)) {\n@@ -571,2 +570,1 @@\n-                    !(i < reasonsMask.length && reasonsMask[i]))\n-            {\n+                    !(i < reasonsMask.length && reasonsMask[i])) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/DistributionPointFetcher.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -703,1 +703,1 @@\n-     *      if no responder ID is in the body of the response e.g. a\n+     *      if no responder ID is in the body of the response, e.g. a\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSPResponse.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-        mValidPolicy = Objects.requireNonNullElse(validPolicy, \"\");\n+        mValidPolicy = (validPolicy != null) ? validPolicy : \"\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/PolicyNodeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -479,17 +479,17 @@\n-        case \"LDAP\":\n-            if (t != null) {\n-                \/\/ These two exception classes are inside java.naming module\n-                String cn = t.getClass().getName();\n-                result = (cn.equals(\"javax.naming.ServiceUnavailableException\") ||\n-                    cn.equals(\"javax.naming.CommunicationException\"));\n-            } else {\n-                result = false;\n-            }\n-            break;\n-        case \"SSLServer\":\n-        case \"URI\":\n-            result = (t instanceof IOException);\n-            break;\n-        default:\n-            \/\/ we don't know about any other remote CertStore types\n-            return false;\n+            case \"LDAP\":\n+                if (t != null) {\n+                    \/\/ These two exception classes are inside java.naming module\n+                    String cn = t.getClass().getName();\n+                    result = (cn.equals(\"javax.naming.ServiceUnavailableException\") ||\n+                        cn.equals(\"javax.naming.CommunicationException\"));\n+                } else {\n+                    result = false;\n+                }\n+                break;\n+            case \"SSLServer\":\n+            case \"URI\":\n+                result = (t instanceof IOException);\n+                break;\n+            default:\n+                \/\/ we don't know about any other remote CertStore types\n+                return false;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/RevocationChecker.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-        boolean bp = padded[k++] != 0;\n+        boolean bp = false;\n@@ -337,0 +337,3 @@\n+        if (padded[k++] != 0) {\n+            bp = true;\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPadding.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-     * @return the resulting directory or JAR file URL, or null if unknown\n+     * @return the resulting directory or JAR file URL\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/PathList.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,2 +109,0 @@\n-    private static final byte[] CRLF = new byte[] {'\\r', '\\n'};\n-\n@@ -165,1 +163,0 @@\n-    private final Set<char[]> passwords = new HashSet<>();\n@@ -172,0 +169,1 @@\n+    private final Set<char[]> passwords = new HashSet<>();\n@@ -174,0 +172,1 @@\n+    private static final byte[] CRLF = new byte[] {'\\r', '\\n'};\n@@ -181,0 +180,1 @@\n+    private boolean isPasswordlessKeyStore = false;\n@@ -195,1 +195,0 @@\n-    private boolean isPasswordlessKeyStore = false;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -110,1 +110,2 @@\n-            } else if (elements.contains(e.getKey())) {\n+            } else if (elements.contains(e.getKey()) &&\n+                    !elements.contains(e.getValue())) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/AlgorithmDecomposer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -291,1 +291,1 @@\n-     * The {@code readAheadLimit} is useless here because\n+     * The {@code readAheadLimit} is useless here, because\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-        byte[] tmpbuffer = new byte[bytesPerLine()];\n+        byte[]  tmpbuffer = new byte[bytesPerLine()];\n@@ -268,1 +268,1 @@\n-        byte[] tmpbuffer = new byte[bytesPerLine()];\n+        byte[]  tmpbuffer = new byte[bytesPerLine()];\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/HexDumpEncoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -176,2 +176,2 @@\n-        if ((Objects.equals(variant, Validator.VAR_TLS_SERVER)) ||\n-                (Objects.equals(variant, Validator.VAR_TLS_CLIENT))) {\n+        if ((variant == Validator.VAR_TLS_SERVER) ||\n+                (variant == Validator.VAR_TLS_CLIENT)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/PKIXValidator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-                    !Objects.equals(type, TYPE_PKIX);\n+                    (type == TYPE_PKIX) ? false : true;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/Validator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -446,1 +446,1 @@\n-                temp.append(\" \".repeat(Math.max(0, spaceCount)));\n+                temp.append(\" \".repeat(spaceCount));\n@@ -462,1 +462,1 @@\n-                temp.append(\" \".repeat(Math.max(0, spaceCount)));\n+                temp.append(\" \".repeat(spaceCount));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * contain DSS\/DSA parameters, and we need to derive DSS\/DSA parameters\n+ * contain DSS\/DSA parameters and we need to derive DSS\/DSA parameters\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgIdDSA.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-            return Objects.requireNonNullElseGet(n, () -> algid.toString());\n+            return (n != null) ? n : algid.toString();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -265,2 +265,2 @@\n-        return Objects.requireNonNullElse(unparseableExtensions,\n-                Collections.emptyMap());\n+        return (unparseableExtensions == null) ? \n+                Collections.emptyMap() : unparseableExtensions;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-            System.arraycopy(maskArray, 0, address, 16, MASKSIZE);\n+            System.arraycopy(maskArray, 0, address, MASKSIZE, MASKSIZE);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IPAddressName.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,2 +142,3 @@\n-        if (hasOnlyUserCerts && (hasOnlyCACerts || hasOnlyAttributeCerts) ||\n-                hasOnlyCACerts && hasOnlyAttributeCerts) {\n+        if ((hasOnlyUserCerts && (hasOnlyCACerts || hasOnlyAttributeCerts)) ||\n+            (hasOnlyCACerts && (hasOnlyUserCerts || hasOnlyAttributeCerts)) ||\n+            (hasOnlyAttributeCerts && (hasOnlyUserCerts || hasOnlyCACerts))) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuingDistributionPointExtension.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -700,1 +700,0 @@\n-            \/\/reset this as certificate data has changed\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}