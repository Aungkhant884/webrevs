{"files":[{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1786,9 +1786,1 @@\n-      if (size_in_bits == 256 && UseAVX < 2) {\n-        return false; \/\/ Implementation limitation\n-      }\n-      break;\n-      if (is_integral_type(bt) && size_in_bits == 256 && UseAVX < 2) {\n-        return false;\n-      }\n-      break;\n-      if (is_integral_type(bt) && size_in_bits == 256 && UseAVX < 2) {\n+      if (bt != T_DOUBLE && size_in_bits == 256 && UseAVX < 2) {\n@@ -6917,2 +6909,3 @@\n-      case T_DOUBLE:\n-        __ vpmovsxbd($dst$$XMMRegister, $src$$XMMRegister, vlen_enc);\n+      case T_DOUBLE: {\n+        int mid_vlen_enc = (vlen_enc == Assembler::AVX_512bit) ? Assembler::AVX_256bit : Assembler::AVX_128bit;\n+        __ vpmovsxbd($dst$$XMMRegister, $src$$XMMRegister, mid_vlen_enc);\n@@ -6921,1 +6914,1 @@\n-\n+      }\n@@ -6988,2 +6981,3 @@\n-      case T_DOUBLE:\n-        __ vpmovsxwd($dst$$XMMRegister, $src$$XMMRegister, vlen_enc);\n+      case T_DOUBLE: {\n+        int mid_vlen_enc = (vlen_enc == Assembler::AVX_512bit) ? Assembler::AVX_256bit : Assembler::AVX_128bit;\n+        __ vpmovsxwd($dst$$XMMRegister, $src$$XMMRegister, mid_vlen_enc);\n@@ -6992,0 +6986,1 @@\n+      }\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -520,0 +520,1 @@\n+java\/awt\/GraphicsDevice\/CheckDisplayModes.java 8266242 macosx-aarch64\n@@ -609,0 +610,2 @@\n+java\/nio\/channels\/DatagramChannel\/ManySourcesAndTargets.java    8264385 macosx-aarch64\n+\n@@ -672,0 +675,1 @@\n+sun\/security\/ssl\/SSLSessionImpl\/NoInvalidateSocketException.java 8277970 linux-all,macosx-x64\n","filename":"test\/jdk\/ProblemList.txt","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}