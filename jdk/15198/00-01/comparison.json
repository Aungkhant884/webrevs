{"files":[{"patch":"@@ -589,0 +589,1 @@\n+#ifdef ASSERT\n@@ -598,0 +599,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1249,0 +1249,1 @@\n+#ifdef ASSERT\n@@ -1254,0 +1255,1 @@\n+#endif\n@@ -2064,0 +2066,1 @@\n+#ifdef ASSERT\n@@ -2070,0 +2073,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+ *          Requires a debug VM as it uses test.jvmci.compileMethodExceptionIsFatal\n+ *          which is only read in a debug VM.\n@@ -28,0 +30,1 @@\n+ * @requires vm.debug\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestUncaughtErrorInCompileMethod.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @library \/test\/lib\n@@ -56,0 +57,2 @@\n+import jdk.test.lib.Platform;\n+\n@@ -160,0 +163,5 @@\n+        if (!Platform.isDebugBuild()) {\n+            \/\/ The test.jvmci.forceEnomemOnLibjvmciInit property is only\n+            \/\/ read in a debug VM.\n+            return;\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\/jdk\/vm\/ci\/hotspot\/test\/TestHotSpotJVMCIRuntime.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}