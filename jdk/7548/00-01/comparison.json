{"files":[{"patch":"@@ -257,1 +257,1 @@\n-                            chunkWriter.write(pos, input.position());\n+                            chunkWriter.writeEvent(pos, input.position());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ChunkParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,3 +31,2 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n+import java.util.ArrayDeque;\n+import java.util.Deque;\n@@ -40,2 +39,0 @@\n-import jdk.jfr.internal.consumer.ChunkParser;\n-import jdk.jfr.internal.consumer.ChunkParser.ParserConfiguration;\n@@ -46,2 +43,0 @@\n-import jdk.jfr.internal.consumer.ParserFilter;\n-import jdk.jfr.internal.consumer.ParserState;\n@@ -59,1 +54,1 @@\n-    private final List<CheckPointEvent> checkPoints = new ArrayList<>();\n+    private final Deque<CheckPointEvent> checkPoints = new ArrayDeque<>();\n@@ -67,0 +62,1 @@\n+    private long lastCheckPoint;\n@@ -120,0 +116,19 @@\n+    public void writeEvent(long startPosition, long endPosition) throws IOException {\n+        writeCheckpointEvents(startPosition);\n+        write(startPosition, endPosition);\n+    }\n+\n+    \/\/ Write check point events before a position\n+    private void writeCheckpointEvents(long before) throws IOException {\n+        CheckPointEvent cp = checkPoints.peek();\n+        while (cp != null && cp.getStartPosition() < before) {\n+            checkPoints.poll();\n+            long delta = 0;\n+            if (lastCheckPoint != 0) {\n+                delta = lastCheckPoint - output.position();\n+            }\n+            lastCheckPoint = output.position();\n+            write(cp, delta);\n+            cp = checkPoints.peek();\n+        }\n+    }\n@@ -158,8 +173,2 @@\n-        long constants = 0;\n-        long delta = 0;\n-        Collections.reverse(checkPoints);\n-        for (CheckPointEvent event : checkPoints) {\n-            constants = output.position();\n-            write(event, delta);\n-            delta = constants - output.position();\n-        }\n+        \/\/ write all outstanding checkpoints\n+        writeCheckpointEvents(Long.MAX_VALUE);\n@@ -168,1 +177,1 @@\n-        updateHeader(output.position(), constants, metadata);\n+        updateHeader(output.position(), lastCheckPoint, metadata);\n@@ -170,1 +179,0 @@\n-        checkPoints.clear();\n@@ -172,0 +180,1 @@\n+        lastCheckPoint = 0;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/filter\/ChunkWriter.java","additions":27,"deletions":18,"binary":false,"changes":45,"status":"modified"}]}