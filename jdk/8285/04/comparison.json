{"files":[{"patch":"@@ -148,0 +148,7 @@\n+    GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.swappiness\",\n+                       \"Swappiness is: \" JULONG_FORMAT, JULONG_FORMAT, swappiness);\n+    if(swappiness == 0) {\n+      jlong memlimit = read_memory_limit_in_bytes();\n+      log_trace(os, container)(\"Memory and Swap Limit has been reset to \" JULONG_FORMAT \" because of Swappiness is 0\", memlimit);\n+      return memlimit;\n+    }\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -153,2 +153,3 @@\n-         long retval = getLongValue(controller, \"memory.memsw.limit_in_bytes\");\n-         return retval > 0;\n+        long memswBytes = getLongValue(controller, \"memory.memsw.limit_in_bytes\");\n+        long swappiness = getLongValue(controller, \"memory.swappiness\");\n+        return (memswBytes > 0 && swappiness > 0);\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1Subsystem.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-                \"150M\", Integer.toString(((int) Math.pow(2, 20)) * (150 - 100))\n+                    \"150M\", Integer.toString(((int) Math.pow(2, 20)) * (150 - 100))\n@@ -73,1 +73,1 @@\n-                \"256M\", Integer.toString(((int) Math.pow(2, 20)) * (256 - 128))\n+                    \"256M\", Integer.toString(((int) Math.pow(2, 20)) * (256 - 128))\n@@ -77,1 +77,1 @@\n-                \"1500M\", Integer.toString(((int) Math.pow(2, 20)) * (1500 - 1024))\n+                    \"1500M\", Integer.toString(((int) Math.pow(2, 20)) * (1500 - 1024))\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryAwareness.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+            testPrintContainerMemoryInfo(\"100M\", \"150M\");\n@@ -128,0 +129,15 @@\n+    private static void testPrintContainerMemoryInfo(String dockerMemLimit, String dockerSwapMemLimit)\n+            throws Exception {\n+        Common.logNewTestCase(\"Test print_container_info()\");\n+\n+        DockerRunOptions opts = Common.newOpts(imageName, \"PrintContainerInfo\").addJavaOpts(\"-XshowSettings:system\");\n+        opts.addDockerOpts(\"--memory\", dockerMemLimit, \"--memory-swappiness\", \"0\", \"--memory-swap\", dockerSwapMemLimit);\n+        Common.addWhiteBoxOpts(opts);\n+\n+        OutputAnalyzer out = Common.run(opts);\n+        System.out.println(out.getOutput());\n+        out.shouldContain(\"Memory and Swap Limit is: 157286400\")\n+           .shouldContain(\"Memory and Swap Limit has been reset to 104857600 because of Swappiness is 0\")\n+           .shouldContain(\"Memory & Swap Limit: 100.00M\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMisc.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}