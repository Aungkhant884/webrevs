{"files":[{"patch":"@@ -139,2 +139,2 @@\n-                             \"Hierarchical Memory and Swap Limit is : \" JULONG_FORMAT, format, hier_memlimit)\n-      if (hier_memlimit >= _unlimited_memory) {\n+                             \"Hierarchical Memory and Swap Limit is : \" JULONG_FORMAT, format, hier_memswlimit)\n+      if (hier_memswlimit >= _unlimited_memory) {\n@@ -143,1 +143,9 @@\n-        return (jlong)hier_memlimit;\n+        jlong swappiness = read_mem_swappiness();\n+        if (swappiness == 0) {\n+            const char* matchmemline = \"hierarchical_memory_limit\";\n+            GET_CONTAINER_INFO_LINE(julong, _memory->controller(), \"\/memory.stat\", matchmemline,\n+                             \"Hierarchical Memory Limit is : \" JULONG_FORMAT, format, hier_memlimit)\n+            log_trace(os, container)(\"Memory and Swap Limit has been reset to \" JULONG_FORMAT \" because swappiness is 0\", hier_memlimit);\n+            return (jlong)hier_memlimit;\n+        }\n+        return (jlong)hier_memswlimit;\n@@ -148,2 +156,1 @@\n-    GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.swappiness\",\n-                       \"Swappiness is: \" JULONG_FORMAT, JULONG_FORMAT, swappiness);\n+    jlong swappiness = read_mem_swappiness();\n@@ -159,0 +166,6 @@\n+jlong CgroupV1Subsystem::read_mem_swappiness() {\n+  GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.swappiness\",\n+                     \"Swappiness is: \" JULONG_FORMAT, JULONG_FORMAT, swappiness);\n+  return swappiness;\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -111,0 +111,2 @@\n+    jlong read_mem_swappiness();\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}