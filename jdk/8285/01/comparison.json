{"files":[{"patch":"@@ -148,0 +148,5 @@\n+    GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.swappiness\",\n+                       \"Swappiness is: \" JULONG_FORMAT, JULONG_FORMAT, swappiness);\n+    if(swappiness == 0) {\n+      return read_memory_limit_in_bytes();\n+    }\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -153,2 +153,3 @@\n-         long retval = getLongValue(controller, \"memory.memsw.limit_in_bytes\");\n-         return retval > 0;\n+        long memswBytes = getLongValue(controller, \"memory.memsw.limit_in_bytes\");\n+        long swappiness = getLongValue(controller, \"memory.swappiness\");\n+        return (memswBytes > 0 && swappiness > 0);\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1Subsystem.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -69,1 +69,2 @@\n-                \"150M\", Integer.toString(((int) Math.pow(2, 20)) * (150 - 100))\n+                \"150M\", Integer.toString(((int) Math.pow(2, 20)) * (150 - 100)),\n+                true\n@@ -73,1 +74,2 @@\n-                \"256M\", Integer.toString(((int) Math.pow(2, 20)) * (256 - 128))\n+                \"256M\", Integer.toString(((int) Math.pow(2, 20)) * (256 - 128)),\n+                true\n@@ -77,1 +79,7 @@\n-                \"1500M\", Integer.toString(((int) Math.pow(2, 20)) * (1500 - 1024))\n+                \"1500M\", Integer.toString(((int) Math.pow(2, 20)) * (1500 - 1024)),\n+                true\n+            );\n+            testOperatingSystemMXBeanAwareness(\n+                \"1G\", Integer.toString(((int) Math.pow(2, 20)) * 1024),\n+                \"1500M\", Integer.toString(0),\n+                false\n@@ -140,1 +148,1 @@\n-            String swapAllocation, String expectedSwap) throws Exception {\n+            String swapAllocation, String expectedSwap, boolean isUseSwap) throws Exception {\n@@ -153,0 +161,6 @@\n+        if (!isUseSwap) {\n+            opts.addDockerOpts(\"--memory-swappiness\", \"0\");\n+        } else {\n+            opts.addDockerOpts(\"--memory-swappiness\", \"60\");\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryAwareness.java","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"}]}