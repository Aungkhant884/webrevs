{"files":[{"patch":"@@ -37,1 +37,1 @@\n- * @build sun.hotspot.WhiteBox PrintContainerInfo\n+ * @build sun.hotspot.WhiteBox PrintContainerInfo CheckOperatingSystemMXBean\n@@ -43,1 +43,1 @@\n-    private static final String imageName = Common.imageName(\"misc\");\n+    private static final String imageName = Common.imageName(\"memory\");\n@@ -61,1 +61,4 @@\n-                testMemoryLimitWithSwappiness(\"100M\", \"150M\");\n+                testMemoryLimitWithSwappiness(\"100M\", \"150M\", \"100.00M\",\n+                        Integer.toString(((int) Math.pow(2, 20)) * 150),\n+                        Integer.toString(((int) Math.pow(2, 20)) * 100));\n+                testOperatingSystemMXBeanAwareness(\"200m\", \"250m\", \"0\", \"0\");\n@@ -71,1 +74,2 @@\n-    private static void testMemoryLimitWithSwappiness(String dockerMemLimit, String dockerSwapMemLimit)\n+    private static void testMemoryLimitWithSwappiness(String dockerMemLimit, String dockerSwapMemLimit,\n+            String expectedLimit, String expectedReadLimit, String expectedResetLimit)\n@@ -80,3 +84,28 @@\n-        out.shouldContain(\"Memory and Swap Limit is: 157286400\")\n-           .shouldContain(\"Memory and Swap Limit has been reset to 104857600 because swappiness is 0\")\n-           .shouldContain(\"Memory & Swap Limit: 100.00M\");\n+        out.shouldContain(\"Memory and Swap Limit is: \" + expectedReadLimit)\n+                .shouldContain(\n+                        \"Memory and Swap Limit has been reset to \" + expectedResetLimit + \" because swappiness is 0\")\n+                .shouldContain(\"Memory & Swap Limit: \" + expectedLimit);\n+    }\n+\n+    private static void testOperatingSystemMXBeanAwareness(String memoryAllocation, String swapAllocation,\n+            String swappiness, String expectedSwap) throws Exception {\n+        Common.logNewTestCase(\"Check OperatingSystemMXBean\");\n+        DockerRunOptions opts = Common.newOpts(imageName, \"CheckOperatingSystemMXBean\")\n+                .addDockerOpts(\n+                        \"--memory\", memoryAllocation,\n+                        \"--memory-swappiness\", swappiness,\n+                        \"--memory-swap\", swapAllocation)\n+                \/\/ CheckOperatingSystemMXBean uses Metrics (jdk.internal.platform) for\n+                \/\/ diagnostics\n+                .addJavaOpts(\"--add-exports\")\n+                .addJavaOpts(\"java.base\/jdk.internal.platform=ALL-UNNAMED\");\n+        OutputAnalyzer out = DockerTestUtils.dockerRunJava(opts);\n+        \/\/ in case of warnings like : \"Your kernel does not support swap limit\n+        \/\/ capabilities or the cgroup is not mounted. Memory limited without swap.\"\n+        \/\/ the getTotalSwapSpaceSize and getFreeSwapSpaceSize return the system\n+        \/\/ values as the container setup isn't supported in that case.\n+        try {\n+            out.shouldContain(\"OperatingSystemMXBean.getTotalSwapSpaceSize: \" + expectedSwap);\n+        } catch (RuntimeException ex) {\n+            out.shouldMatch(\"OperatingSystemMXBean.getTotalSwapSpaceSize: [0-9]+\");\n+        }\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryWithCgroupV1.java","additions":36,"deletions":7,"binary":false,"changes":43,"status":"modified"}]}