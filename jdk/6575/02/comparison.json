{"files":[{"patch":"@@ -4408,1 +4408,1 @@\n-        return (x < y) ? -1 : ((x == y) ? 0 : 1);\n+        return Long.compare(x, y);\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -450,7 +450,1 @@\n-            if (creation1 < creation2) {\n-                return -1;\n-            }\n-            if (creation1 > creation2) {\n-                return 1;\n-            }\n-            return 0;\n+            return Long.compare(creation1, creation2);\n","filename":"src\/java.base\/share\/classes\/java\/net\/CookieManager.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3420,1 +3420,1 @@\n-        return (thisTime > t) ? 1 : (thisTime == t) ? 0 : -1;\n+        return Long.compare(thisTime, t);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Calendar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.time.LocalDate;\n@@ -33,1 +32,0 @@\n-import java.lang.ref.SoftReference;\n@@ -36,1 +34,0 @@\n-import sun.util.calendar.CalendarDate;\n@@ -39,2 +36,0 @@\n-import sun.util.calendar.Era;\n-import sun.util.calendar.Gregorian;\n@@ -978,0 +973,1 @@\n+    @Override\n@@ -981,1 +977,1 @@\n-        return (thisTime<anotherTime ? -1 : (thisTime==anotherTime ? 0 : 1));\n+        return Long.compare(thisTime, anotherTime);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Date.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -517,3 +517,1 @@\n-                 (this.leastSigBits < val.leastSigBits ? -1 :\n-                  (this.leastSigBits > val.leastSigBits ? 1 :\n-                   0))));\n+                 Long.compare(this.leastSigBits, val.leastSigBits)));\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1536,6 +1536,1 @@\n-            Arrays.sort(rangeArray,\n-                        new Comparator<Range>() {\n-                            public int compare(Range s1, Range s2) {\n-                                return s1.base > s2.base ? 1 : s1.base == s2.base ? 0 : -1;\n-                            }\n-                        });\n+            Arrays.sort(rangeArray, Comparator.comparingInt(s -> s.base));\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/font\/NumericShaper.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-            return (double) x1;\n+            return x1;\n@@ -123,1 +123,1 @@\n-            return (double) y1;\n+            return y1;\n@@ -139,1 +139,1 @@\n-            return (double) x2;\n+            return x2;\n@@ -147,1 +147,1 @@\n-            return (double) y2;\n+            return y2;\n@@ -535,1 +535,1 @@\n-        return (ccw < 0.0) ? -1 : ((ccw > 0.0) ? 1 : 0);\n+        return java.lang.Double.compare(ccw, 0.0);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Line2D.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.awt.dnd.*;\n@@ -33,3 +32,0 @@\n-import java.util.EventObject;\n-import java.util.Hashtable;\n-import java.util.TooManyListenersException;\n@@ -39,1 +35,0 @@\n-import javax.swing.text.*;\n@@ -224,2 +219,2 @@\n-                dx = sign(dx);\n-                dy = sign(dy);\n+                dx = Integer.signum(dx);\n+                dy = Integer.signum(dy);\n@@ -253,4 +248,0 @@\n-        private static int sign(int num) {\n-            return (num < 0) ? -1 : ((num == 0) ? 0 : 1);\n-        }\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTableUI.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -507,7 +507,1 @@\n-        if (o1.index < o2.index) {\n-            return -1;\n-        } else if (o1.index > o2.index) {\n-            return 1;\n-        } else {\n-            return 0;\n-        }\n+      return Integer.compare(o1.index, o2.index);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/GapContent.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -733,7 +733,1 @@\n-        if (x1 < x2) {\n-            return -1;\n-        }\n-        if (x1 > x2) {\n-            return 1;\n-        }\n-        return 0;\n+      return Double.compare(x1, x2);\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/geom\/Curve.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -318,0 +318,1 @@\n+        @Override\n@@ -319,12 +320,1 @@\n-            float otherStart = otherSpan.getStart();\n-            int result;\n-\n-            if (mStart < otherStart) {\n-                result = -1;\n-            } else if (mStart > otherStart) {\n-                result = 1;\n-            } else {\n-                result = 0;\n-            }\n-\n-            return result;\n+            return Float.compare(mStart, otherSpan.getStart());\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/Spans.java","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-            return (id1 == id2 ? 0 : (id1 < id2 ? -1 : 1));\n+            return Integer.compare(id1, id2);\n@@ -91,1 +91,1 @@\n-            return (id1 == id2 ? 0 : (id1 < id2 ? -1 : 1));\n+            return Integer.compare(id1, id2);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/loops\/GraphicsPrimitiveMgr.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}