{"files":[{"patch":"@@ -95,0 +95,5 @@\n+    \/\/ Note to maintainers: anonymous class instances are used rather\n+    \/\/ than lambdas to initialize the functions used for the\n+    \/\/ cffvToLocations field to avoid using lambdas too early in JDK\n+    \/\/ initialization.\n+\n@@ -102,4 +107,7 @@\n-           cffv -> {\n-               return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n-                   Location.SET_CLASS_FIELD_METHOD:\n-                   Location.SET_PUBLIC_1;\n+           new Function<ClassFileFormatVersion, Set<Location>>() {\n+               @Override\n+               public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                   return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n+                       Location.SET_CLASS_FIELD_METHOD:\n+                       Location.SET_PUBLIC_1;\n+               }\n@@ -114,4 +122,7 @@\n-            cffv -> {\n-                return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n-                    Location.SET_FIELD_METHOD:\n-                    Location.SET_FIELD_METHOD_INNER_CLASS;\n+            new Function<ClassFileFormatVersion, Set<Location>>() {\n+                @Override\n+                    public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                    return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n+                        Location.SET_FIELD_METHOD:\n+                        Location.SET_FIELD_METHOD_INNER_CLASS;\n+                }\n@@ -126,1 +137,4 @@\n-              cffv -> {return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n+              new Function<ClassFileFormatVersion, Set<Location>>() {\n+                  @Override\n+                  public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                  return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n@@ -128,1 +142,3 @@\n-                      Location.SET_FIELD_METHOD_INNER_CLASS;}),\n+                      Location.SET_FIELD_METHOD_INNER_CLASS;\n+                  }\n+              }),\n@@ -136,3 +152,7 @@\n-           cffv -> {return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n-                Location.SET_FIELD_METHOD:\n-                Location.SET_FIELD_METHOD_INNER_CLASS;}),\n+           new Function<ClassFileFormatVersion, Set<Location>>() {\n+               @Override\n+               public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                   return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n+                       Location.SET_FIELD_METHOD:\n+                       Location.SET_FIELD_METHOD_INNER_CLASS;}\n+           }),\n@@ -147,7 +167,10 @@\n-          cffv -> {\n-              if (cffv.compareTo(ClassFileFormatVersion.RELEASE_8) >= 0) {\n-                  return Location.SET_FINAL_8;\n-              } else {\n-                  return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n-                      Location.SET_CLASS_FIELD_METHOD :\n-                      Location.SET_CLASS_FIELD_METHOD_INNER_CLASS;\n+           new Function<ClassFileFormatVersion, Set<Location>>() {\n+              @Override\n+              public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                  if (cffv.compareTo(ClassFileFormatVersion.RELEASE_8) >= 0) {\n+                      return Location.SET_FINAL_8;\n+                  } else {\n+                      return (cffv == ClassFileFormatVersion.RELEASE_0) ?\n+                          Location.SET_CLASS_FIELD_METHOD :\n+                          Location.SET_CLASS_FIELD_METHOD_INNER_CLASS;\n+                  }\n@@ -173,3 +196,7 @@\n-        cffv -> { return (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) ?\n-            Location.SET_MODULE:\n-            Location.EMPTY_SET;}),\n+             new Function<ClassFileFormatVersion, Set<Location>>() {\n+                 @Override\n+                 public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                     return (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) ?\n+                         Location.SET_MODULE:\n+                         Location.EMPTY_SET;}\n+             }),\n@@ -183,3 +210,7 @@\n-               cffv -> {return (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) ?\n-                       Location.SET_MODULE_REQUIRES:\n-                       Location.EMPTY_SET;}),\n+               new Function<ClassFileFormatVersion, Set<Location>>() {\n+                   @Override\n+                   public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                       return (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) ?\n+                           Location.SET_MODULE_REQUIRES:\n+                           Location.EMPTY_SET;}\n+               }),\n@@ -200,3 +231,7 @@\n-                 cffv -> {return (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) ?\n-                         Location.SET_MODULE_REQUIRES:\n-                         Location.EMPTY_SET;}),\n+                 new Function<ClassFileFormatVersion, Set<Location>>() {\n+                     @Override\n+                     public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                         return (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) ?\n+                             Location.SET_MODULE_REQUIRES:\n+                             Location.EMPTY_SET;}\n+                 }),\n@@ -217,3 +252,7 @@\n-           cffv -> {return (cffv.compareTo(ClassFileFormatVersion.RELEASE_5) >= 0 ) ?\n-                Location.SET_METHOD:\n-                Location.EMPTY_SET;}),\n+           new Function<ClassFileFormatVersion, Set<Location>>() {\n+               @Override\n+               public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                   return (cffv.compareTo(ClassFileFormatVersion.RELEASE_5) >= 0 ) ?\n+                       Location.SET_METHOD:\n+                       Location.EMPTY_SET;}\n+           }),\n@@ -234,4 +273,7 @@\n-            cffv -> {return (cffv.compareTo(ClassFileFormatVersion.RELEASE_5) >= 0 ) ?\n-                    Location.SET_METHOD:\n-                    Location.EMPTY_SET;}),\n-\n+            new Function<ClassFileFormatVersion, Set<Location>>() {\n+                @Override\n+                public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                    return (cffv.compareTo(ClassFileFormatVersion.RELEASE_5) >= 0 ) ?\n+                        Location.SET_METHOD:\n+                        Location.EMPTY_SET;}\n+            }),\n@@ -252,3 +294,7 @@\n-              cffv -> { return (cffv.compareTo(ClassFileFormatVersion.RELEASE_0) == 0 ) ?\n-                      Location.SET_CLASS:\n-                      Location.SET_CLASS_INNER_CLASS;}),\n+              new Function<ClassFileFormatVersion, Set<Location>>() {\n+                  @Override\n+                  public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                      return (cffv.compareTo(ClassFileFormatVersion.RELEASE_0) == 0 ) ?\n+                          Location.SET_CLASS:\n+                          Location.SET_CLASS_INNER_CLASS;}\n+              }),\n@@ -263,3 +309,7 @@\n-             cffv -> { return (cffv.compareTo(ClassFileFormatVersion.RELEASE_0) == 0 ) ?\n-                     Location.SET_CLASS_METHOD:\n-                     Location.SET_CLASS_METHOD_INNER_CLASS;}),\n+             new Function<ClassFileFormatVersion, Set<Location>>() {\n+                 @Override\n+                 public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                     return (cffv.compareTo(ClassFileFormatVersion.RELEASE_0) == 0 ) ?\n+                         Location.SET_CLASS_METHOD:\n+                         Location.SET_CLASS_METHOD_INNER_CLASS;}\n+             }),\n@@ -278,5 +328,8 @@\n-           cffv -> {return (cffv.compareTo(ClassFileFormatVersion.RELEASE_2)  >= 0 &&\n-                            cffv.compareTo(ClassFileFormatVersion.RELEASE_16) <= 0) ?\n-                   Location.SET_METHOD:\n-                   Location.EMPTY_SET;}),\n-\n+             new Function<ClassFileFormatVersion, Set<Location>>() {\n+               @Override\n+               public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                   return (cffv.compareTo(ClassFileFormatVersion.RELEASE_2)  >= 0 &&\n+                           cffv.compareTo(ClassFileFormatVersion.RELEASE_16) <= 0) ?\n+                       Location.SET_METHOD:\n+                       Location.EMPTY_SET;}\n+           }),\n@@ -292,10 +345,13 @@\n-              cffv -> {\n-                  if (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 )\n-                      return Location.SET_SYNTHETIC_9;\n-                  else {\n-                      return\n-                          switch(cffv) {\n-                          case RELEASE_7 -> Location.SET_SYNTHETIC_7;\n-                          case RELEASE_8 -> Location.SET_SYNTHETIC_8;\n-                          default        -> Location.EMPTY_SET;\n-                          };\n+              new Function<ClassFileFormatVersion, Set<Location>>() {\n+                  @Override\n+                  public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                      if (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 )\n+                          return Location.SET_SYNTHETIC_9;\n+                      else {\n+                          return\n+                              switch(cffv) {\n+                              case RELEASE_7 -> Location.SET_SYNTHETIC_7;\n+                              case RELEASE_8 -> Location.SET_SYNTHETIC_8;\n+                              default        -> Location.EMPTY_SET;\n+                              };\n+                      }\n@@ -311,3 +367,7 @@\n-               cffv -> {return (cffv.compareTo(ClassFileFormatVersion.RELEASE_5) >= 0 ) ?\n-                Location.SET_CLASS_INNER_CLASS:\n-                Location.EMPTY_SET;}),\n+               new Function<ClassFileFormatVersion, Set<Location>>() {\n+                   @Override\n+                   public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                       return (cffv.compareTo(ClassFileFormatVersion.RELEASE_5) >= 0 ) ?\n+                           Location.SET_CLASS_INNER_CLASS:\n+                           Location.EMPTY_SET;}\n+               }),\n@@ -321,3 +381,7 @@\n-         cffv -> {return (cffv.compareTo(ClassFileFormatVersion.RELEASE_5) >= 0 ) ?\n-                 Location.SET_CLASS_FIELD_INNER_CLASS:\n-                 Location.EMPTY_SET;}),\n+         new Function<ClassFileFormatVersion, Set<Location>>() {\n+             @Override\n+             public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                 return (cffv.compareTo(ClassFileFormatVersion.RELEASE_5) >= 0 ) ?\n+                     Location.SET_CLASS_FIELD_INNER_CLASS:\n+                     Location.EMPTY_SET;}\n+         }),\n@@ -330,7 +394,10 @@\n-             cffv -> {\n-                 if (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) {\n-                     return Location.SET_MANDATED_9;\n-                 } else {\n-                     return (cffv == ClassFileFormatVersion.RELEASE_8) ?\n-                         Location.SET_METHOD_PARAM:\n-                         Location.EMPTY_SET;\n+             new Function<ClassFileFormatVersion, Set<Location>>() {\n+                 @Override\n+                 public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                     if (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) {\n+                         return Location.SET_MANDATED_9;\n+                     } else {\n+                         return (cffv == ClassFileFormatVersion.RELEASE_8) ?\n+                             Location.SET_METHOD_PARAM:\n+                             Location.EMPTY_SET;\n+                     }\n@@ -345,3 +412,7 @@\n-           cffv -> {return (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) ?\n-                   Location.SET_CLASS:\n-                   Location.EMPTY_SET;})\n+           new Function<ClassFileFormatVersion, Set<Location>>() {\n+               @Override\n+               public Set<Location> apply(ClassFileFormatVersion cffv) {\n+                   return (cffv.compareTo(ClassFileFormatVersion.RELEASE_9) >= 0 ) ?\n+                       Location.SET_CLASS:\n+                       Location.EMPTY_SET;}\n+           })\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":144,"deletions":73,"binary":false,"changes":217,"status":"modified"},{"patch":"@@ -499,1 +499,0 @@\n-java\/lang\/invoke\/lambda\/LogGeneratedClassesTest.java            8292498 windows-x64\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}