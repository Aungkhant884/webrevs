{"files":[{"patch":"@@ -163,1 +163,1 @@\n- * receive multicast datagram packets. It is no necessary to join a multicast\n+ * receive multicast datagram packets. It is not necessary to join a multicast\n@@ -220,4 +220,4 @@\n- *        do not allow to specify the {@link ProtocolFamily} that corresponds\n- *        to the address type of the multicast groups that the {@code DatagramSocket}\n- *        will join. This is similar to a {@code DatagramChannel} that would be created\n- *        using {@link DatagramChannel#open()}.\n+ *        do not allow to specify the {@link ProtocolFamily} of the underlying socket.\n+ *        Consequently, the protocol family of the underlying socket may not\n+ *        correspond to the protocol family of the multicast groups that\n+ *        the {@code DatagramSocket} will attempt to join.\n@@ -1228,1 +1228,1 @@\n-     * Joins the specified multicast group at the specified interface.\n+     * Joins a multicast group.\n@@ -1250,0 +1250,5 @@\n+     * <p> It is possible to call this method several times to join\n+     * several different multicast groups, or join the same group\n+     * in several different networks. However, if the socket is already a\n+     * member of the group, an {@link IOException} will be thrown.\n+     *\n@@ -1286,4 +1291,10 @@\n-     *     The {@code mcastaddr} and {@code netIf} arguments should identify\n-     *     a multicast group that was previously {@linkplain\n-     *     #joinGroup(SocketAddress, NetworkInterface) joined} by\n-     *     this {@code DatagramSocket}.\n+     * The {@code mcastaddr} and {@code netIf} arguments should identify\n+     * a multicast group that was previously {@linkplain\n+     * #joinGroup(SocketAddress, NetworkInterface) joined} by\n+     * this {@code DatagramSocket}.\n+     * <p> It is possible to call this method several times to leave\n+     * multiple different multicast groups previously joined, or leave\n+     * the same group previously joined in multiple different networks.\n+     * However, if the socket is not a member of the specified group\n+     * in the specified network, an {@link IOException} will be\n+     * thrown.\n","filename":"src\/java.base\/share\/classes\/java\/net\/DatagramSocket.java","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"}]}