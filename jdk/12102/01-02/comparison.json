{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -783,1 +783,1 @@\n-  eval \\\"$CODESIGN\\\" $PARAMS \\\"$CODESIGN_TESTFILE\\\" 2>&AS_MESSAGE_LOG_FD \\\n+  $CODESIGN $PARAMS \"$CODESIGN_TESTFILE\" 2>&AS_MESSAGE_LOG_FD \\\n@@ -796,1 +796,1 @@\n-  JDKOPT_CHECK_CODESIGN_PARAMS([-s \\\"$MACOSX_CODESIGN_IDENTITY\\\" --option runtime],\n+  JDKOPT_CHECK_CODESIGN_PARAMS([-s \"$MACOSX_CODESIGN_IDENTITY\" --option runtime],\n","filename":"make\/autoconf\/jdk-options.m4","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1233,9 +1233,0 @@\n-    \/\/ handle pending exception thrown by freeze\n-    __ ldr(rscratch1, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n-    Label ok;\n-    __ cbz(rscratch1, ok);\n-    __ leave();\n-    __ lea(rscratch1, RuntimeAddress(StubRoutines::forward_exception_entry()));\n-    __ br(rscratch1);\n-    __ bind(ok);\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1993,13 +1993,0 @@\n-  \/\/ handle pending exception thrown by freeze\n-  Label ok;\n-  __ ld(tmp, in_bytes(JavaThread::pending_exception_offset()), R16_thread);\n-  __ cmpdi(CCR0, tmp, 0);\n-  __ beq(CCR0, ok);\n-  __ pop_frame();\n-  __ ld(R0, _abi0(lr), R1_SP); \/\/ Return pc\n-  __ mtlr(R0);\n-  __ load_const_optimized(tmp, StubRoutines::forward_exception_entry(), R0);\n-  __ mtctr(tmp);\n-  __ bctr();\n-  __ bind(ok);\n-\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1110,9 +1110,0 @@\n-  \/\/ handle pending exception thrown by freeze\n-  __ ld(t0, Address(xthread, in_bytes(Thread::pending_exception_offset())));\n-  Label ok;\n-  __ beqz(t0, ok);\n-  __ leave();\n-  __ la(t0, RuntimeAddress(StubRoutines::forward_exception_entry()));\n-  __ jr(t0);\n-  __ bind(ok);\n-\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1590,9 +1590,0 @@\n-\n-  \/\/ handle pending exception thrown by freeze\n-  __ cmpptr(Address(r15_thread, Thread::pending_exception_offset()), NULL_WORD);\n-  Label ok;\n-  __ jcc(Assembler::equal, ok);\n-  __ leave();\n-  __ jump(RuntimeAddress(StubRoutines::forward_exception_entry()));\n-  __ bind(ok);\n-\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-ArchiveBuilder* ArchiveBuilder::_current = nullptr;\n+ArchiveBuilder* ArchiveBuilder::_current = NULL;\n@@ -98,1 +98,1 @@\n-  assert(*field_addr != nullptr, \"should have checked\");\n+  assert(*field_addr != NULL, \"should have checked\");\n@@ -144,3 +144,3 @@\n-  _current_dump_space(nullptr),\n-  _buffer_bottom(nullptr),\n-  _last_verified_top(nullptr),\n+  _current_dump_space(NULL),\n+  _buffer_bottom(NULL),\n+  _last_verified_top(NULL),\n@@ -149,6 +149,6 @@\n-  _requested_static_archive_bottom(nullptr),\n-  _requested_static_archive_top(nullptr),\n-  _requested_dynamic_archive_bottom(nullptr),\n-  _requested_dynamic_archive_top(nullptr),\n-  _mapped_static_archive_bottom(nullptr),\n-  _mapped_static_archive_top(nullptr),\n+  _requested_static_archive_bottom(NULL),\n+  _requested_static_archive_top(NULL),\n+  _requested_dynamic_archive_bottom(NULL),\n+  _requested_dynamic_archive_top(NULL),\n+  _mapped_static_archive_bottom(NULL),\n+  _mapped_static_archive_top(NULL),\n@@ -172,1 +172,1 @@\n-  assert(_current == nullptr, \"must be\");\n+  assert(_current == NULL, \"must be\");\n@@ -178,1 +178,1 @@\n-  _current = nullptr;\n+  _current = NULL;\n@@ -210,1 +210,1 @@\n-  if (ref->obj() == nullptr) {\n+  if (ref->obj() == NULL) {\n@@ -433,1 +433,1 @@\n-    if (ref->obj() != nullptr) {\n+    if (ref->obj() != NULL) {\n@@ -442,1 +442,1 @@\n-  if (src_obj == nullptr) {\n+  if (src_obj == NULL) {\n@@ -479,1 +479,1 @@\n-  assert(ref->obj() != nullptr, \"should have checked\");\n+  assert(ref->obj() != NULL, \"should have checked\");\n@@ -481,1 +481,1 @@\n-  if (enclosing_ref != nullptr) {\n+  if (enclosing_ref != NULL) {\n@@ -483,1 +483,1 @@\n-    if (src_info == nullptr) {\n+    if (src_info == NULL) {\n@@ -644,1 +644,1 @@\n-  if (archived_vtable != nullptr) {\n+  if (archived_vtable != NULL) {\n@@ -657,1 +657,1 @@\n-  assert(p != nullptr, \"must be\");\n+  assert(p != NULL, \"must be\");\n@@ -665,1 +665,1 @@\n-  assert(src_p != nullptr && *src_p != nullptr, \"must be\");\n+  assert(src_p != NULL && *src_p != NULL, \"must be\");\n@@ -849,1 +849,1 @@\n-\/\/   [a] nullptr:\n+\/\/   [a] NULL:\n@@ -889,1 +889,1 @@\n-    if (*p == nullptr) {\n+    if (*p == NULL) {\n@@ -1067,1 +1067,1 @@\n-        if (original_oop != nullptr) {\n+        if (original_oop != NULL) {\n@@ -1146,1 +1146,1 @@\n-    if (closed_heap_regions != nullptr) {\n+    if (closed_heap_regions != NULL) {\n@@ -1149,1 +1149,1 @@\n-    if (open_heap_regions != nullptr) {\n+    if (open_heap_regions != NULL) {\n@@ -1183,1 +1183,1 @@\n-  if (closed_heap_regions != nullptr) {\n+  if (closed_heap_regions != NULL) {\n@@ -1242,1 +1242,1 @@\n-  if (closed_heap_regions != nullptr) {\n+  if (closed_heap_regions != NULL) {\n@@ -1258,1 +1258,1 @@\n-  int arr_len = regions == nullptr ? 0 : regions->length();\n+  int arr_len = regions == NULL ? 0 : regions->length();\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,1 +162,1 @@\n-        _buffered_addr = nullptr;\n+        _buffered_addr = NULL;\n@@ -170,2 +170,2 @@\n-      assert(_buffered_addr == nullptr, \"cannot be copied twice\");\n-      assert(addr != nullptr, \"must be a valid copy\");\n+      assert(_buffered_addr == NULL, \"cannot be copied twice\");\n+      assert(addr != NULL, \"must be a valid copy\");\n@@ -425,1 +425,1 @@\n-    return (_current != nullptr);\n+    return (_current != NULL);\n@@ -430,1 +430,1 @@\n-    assert(_current != nullptr, \"ArchiveBuilder must be active\");\n+    assert(_current != NULL, \"ArchiveBuilder must be active\");\n@@ -450,1 +450,1 @@\n-    assert(klass != nullptr && klass->is_klass(), \"must be\");\n+    assert(klass != NULL && klass->is_klass(), \"must be\");\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -452,1 +452,1 @@\n-    \/\/ must be null, or must point to a valid object in the loaded regions.\n+    \/\/ must be NULL, or must point to a valid object in the loaded regions.\n@@ -543,1 +543,1 @@\n-    if (r->mapped_base() != nullptr && r->has_ptrmap()) {\n+    if (r->mapped_base() != NULL && r->has_ptrmap()) {\n","filename":"src\/hotspot\/share\/cds\/archiveHeapLoader.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-  inline static oop decode_from_archive(narrowOop v) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n+  inline static oop decode_from_archive(narrowOop v) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n@@ -109,1 +109,1 @@\n-  inline static oop decode_from_mapped_archive(narrowOop v) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n+  inline static oop decode_from_mapped_archive(narrowOop v) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n@@ -175,1 +175,1 @@\n-  inline static oop decode_from_archive_impl(narrowOop v) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n+  inline static oop decode_from_archive_impl(narrowOop v) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n","filename":"src\/hotspot\/share\/cds\/archiveHeapLoader.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-CHeapBitMap* ArchivePtrMarker::_ptrmap = nullptr;\n+CHeapBitMap* ArchivePtrMarker::_ptrmap = NULL;\n@@ -53,1 +53,1 @@\n-  assert(_ptrmap == nullptr, \"initialize only once\");\n+  assert(_ptrmap == NULL, \"initialize only once\");\n@@ -70,1 +70,1 @@\n-  assert(_ptrmap != nullptr, \"not initialized\");\n+  assert(_ptrmap != NULL, \"not initialized\");\n@@ -77,1 +77,1 @@\n-    \/\/ to nothing (null) vs a pointer to an objects that happens to be at the very bottom\n+    \/\/ to nothing (NULL) vs a pointer to an objects that happens to be at the very bottom\n@@ -81,1 +81,1 @@\n-    if (value != nullptr) {\n+    if (value != NULL) {\n@@ -95,1 +95,1 @@\n-  assert(_ptrmap != nullptr, \"not initialized\");\n+  assert(_ptrmap != NULL, \"not initialized\");\n@@ -121,1 +121,1 @@\n-    if (ptr_value != nullptr) {\n+    if (ptr_value != NULL) {\n@@ -128,1 +128,1 @@\n-      DEBUG_ONLY(log_trace(cds, reloc)(\"Clearing pointer [\" PTR_FORMAT  \"] -> null @ \" SIZE_FORMAT_W(9), p2i(ptr_loc), offset));\n+      DEBUG_ONLY(log_trace(cds, reloc)(\"Clearing pointer [\" PTR_FORMAT  \"] -> NULL @ \" SIZE_FORMAT_W(9), p2i(ptr_loc), offset));\n@@ -256,1 +256,1 @@\n-  if (next != nullptr) {\n+  if (next != NULL) {\n@@ -265,1 +265,1 @@\n-  if (*o == nullptr) {\n+  if (*o == NULL) {\n@@ -291,1 +291,1 @@\n-  assert(*p == nullptr, \"initializing previous initialized pointer.\");\n+  assert(*p == NULL, \"initializing previous initialized pointer.\");\n@@ -320,1 +320,1 @@\n-      *p = nullptr;\n+      *p = NULL;\n@@ -329,1 +329,1 @@\n-      *p = nullptr;\n+      *p = NULL;\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-    : _name(name), _base(nullptr), _top(nullptr), _end(nullptr),\n+    : _name(name), _base(NULL), _top(NULL), _end(NULL),\n@@ -160,1 +160,1 @@\n-    return !is_packed() && _base != nullptr;\n+    return !is_packed() && _base != NULL;\n@@ -168,1 +168,1 @@\n-  void pack(DumpRegion* next = nullptr);\n+  void pack(DumpRegion* next = NULL);\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-  assert(old_ptr != nullptr, \"bits for null pointers should have been cleaned at dump time\");\n+  assert(old_ptr != NULL, \"bits for NULL pointers should have been cleaned at dump time\");\n@@ -41,1 +41,1 @@\n-  assert(new_ptr != nullptr, \"don't point to the bottom of the archive\"); \/\/ See ArchivePtrMarker::mark_pointer().\n+  assert(new_ptr != NULL, \"don't point to the bottom of the archive\"); \/\/ See ArchivePtrMarker::mark_pointer().\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-# define ADD_EXCL(...) { static const char* e[] = {__VA_ARGS__, nullptr}; add_exclusion(e); }\n+# define ADD_EXCL(...) { static const char* e[] = {__VA_ARGS__, NULL}; add_exclusion(e); }\n@@ -169,1 +169,1 @@\n-    if (static_obj_field != nullptr) {\n+    if (static_obj_field != NULL) {\n@@ -171,2 +171,2 @@\n-      if (_exclusions != nullptr) {\n-        for (const char** p = _exclusions; *p != nullptr; p++) {\n+      if (_exclusions != NULL) {\n+        for (const char** p = _exclusions; *p != NULL; p++) {\n@@ -231,1 +231,1 @@\n-  if (info != nullptr) {\n+  if (info != NULL) {\n@@ -239,1 +239,1 @@\n-    trace_to_root(&ls, orig_obj, nullptr, &value);\n+    trace_to_root(&ls, orig_obj, NULL, &value);\n@@ -270,2 +270,2 @@\n-  if (info != nullptr) {\n-    trace_to_root(st, orig_obj, nullptr, info);\n+  if (info != NULL) {\n+    trace_to_root(st, orig_obj, NULL, info);\n@@ -279,1 +279,1 @@\n-  if (info->_referrer != nullptr) {\n+  if (info->_referrer != NULL) {\n@@ -281,1 +281,1 @@\n-    assert(ref != nullptr, \"sanity\");\n+    assert(ref != NULL, \"sanity\");\n@@ -291,1 +291,1 @@\n-  if (orig_field != nullptr) {\n+  if (orig_field != NULL) {\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    return nullptr;\n+    return NULL;\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    assert(pkg_entry != nullptr, \"archived class in module image cannot be from unnamed package\");\n+    assert(pkg_entry != NULL, \"archived class in module image cannot be from unnamed package\");\n@@ -86,1 +86,1 @@\n-    \/\/   Note that if an element of these 3 _shared_xxx arrays is null, it will be initialized by\n+    \/\/   Note that if an element of these 3 _shared_xxx arrays is NULL, it will be initialized by\n@@ -92,1 +92,1 @@\n-      if (pkg_entry == nullptr || !pkg_entry->is_defined_by_cds_in_class_path(index_offset)) {\n+      if (pkg_entry == NULL || !pkg_entry->is_defined_by_cds_in_class_path(index_offset)) {\n@@ -96,1 +96,1 @@\n-        if (pkg_entry != nullptr) {\n+        if (pkg_entry != NULL) {\n@@ -111,1 +111,1 @@\n-  if (pkg != nullptr) { \/\/ Package prefix found\n+  if (pkg != NULL) { \/\/ Package prefix found\n@@ -121,1 +121,1 @@\n-  if (MetaspaceShared::use_full_module_graph() && ik->is_shared() && pkg_entry != nullptr) {\n+  if (MetaspaceShared::use_full_module_graph() && ik->is_shared() && pkg_entry != NULL) {\n@@ -128,1 +128,1 @@\n-  if (pkg_name != nullptr) {\n+  if (pkg_name != NULL) {\n@@ -131,1 +131,1 @@\n-    pkg_entry = nullptr;\n+    pkg_entry = NULL;\n@@ -145,1 +145,1 @@\n-  \/\/ get_package_name() returns a null handle if the class is in unnamed package\n+  \/\/ get_package_name() returns a NULL handle if the class is in unnamed package\n@@ -180,1 +180,1 @@\n-  if (shared_jar_manifest(shared_path_index) == nullptr) {\n+  if (shared_jar_manifest(shared_path_index) == NULL) {\n@@ -189,1 +189,1 @@\n-    assert(src != nullptr, \"No Manifest data\");\n+    assert(src != NULL, \"No Manifest data\");\n@@ -200,1 +200,1 @@\n-  if (shared_jar_url(shared_path_index) == nullptr) {\n+  if (shared_jar_url(shared_path_index) == NULL) {\n@@ -243,1 +243,1 @@\n-  if (shared_protection_domain(shared_path_index) == nullptr) {\n+  if (shared_protection_domain(shared_path_index) == NULL) {\n@@ -260,1 +260,1 @@\n-  if (mod->shared_protection_domain() == nullptr) {\n+  if (mod->shared_protection_domain() == NULL) {\n@@ -262,1 +262,1 @@\n-    if (location != nullptr) {\n+    if (location != NULL) {\n@@ -304,1 +304,1 @@\n-  if (_shared_protection_domains.resolve() == nullptr) {\n+  if (_shared_protection_domains.resolve() == NULL) {\n@@ -316,1 +316,1 @@\n-  if (_shared_jar_urls.resolve() == nullptr) {\n+  if (_shared_jar_urls.resolve() == NULL) {\n@@ -328,1 +328,1 @@\n-  if (_shared_jar_manifests.resolve() == nullptr) {\n+  if (_shared_jar_manifests.resolve() == NULL) {\n","filename":"src\/hotspot\/share\/cds\/cdsProtectionDomain.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-  product(ccstr, SharedArchiveConfigFile, nullptr,                             \\\n+  product(ccstr, SharedArchiveConfigFile, NULL,                             \\\n@@ -70,1 +70,1 @@\n-  develop(ccstr, ArchiveHeapTestClass, nullptr,                                \\\n+  develop(ccstr, ArchiveHeapTestClass, NULL,                                \\\n@@ -75,1 +75,1 @@\n-  product(ccstr, DumpLoadedClassList, nullptr,                                 \\\n+  product(ccstr, DumpLoadedClassList, NULL,                                 \\\n@@ -79,1 +79,1 @@\n-  product(ccstr, SharedClassListFile, nullptr,                                 \\\n+  product(ccstr, SharedClassListFile, NULL,                                 \\\n@@ -82,1 +82,1 @@\n-  product(ccstr, SharedArchiveFile, nullptr,                                   \\\n+  product(ccstr, SharedArchiveFile, NULL,                                   \\\n@@ -85,1 +85,1 @@\n-  product(ccstr, ArchiveClassesAtExit, nullptr,                                \\\n+  product(ccstr, ArchiveClassesAtExit, NULL,                                \\\n@@ -88,1 +88,1 @@\n-  product(ccstr, ExtraSharedClassListFile, nullptr,                            \\\n+  product(ccstr, ExtraSharedClassListFile, NULL,                            \\\n","filename":"src\/hotspot\/share\/cds\/cds_globals.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n-volatile Thread* ClassListParser::_parsing_thread = nullptr;\n-ClassListParser* ClassListParser::_instance = nullptr;\n+volatile Thread* ClassListParser::_parsing_thread = NULL;\n+ClassListParser* ClassListParser::_instance = NULL;\n@@ -61,1 +61,1 @@\n-  _file = nullptr;\n+  _file = NULL;\n@@ -70,1 +70,1 @@\n-  if (_file == nullptr) {\n+  if (_file == NULL) {\n@@ -81,1 +81,1 @@\n-  assert(_instance == nullptr, \"must be singleton\");\n+  assert(_instance == NULL, \"must be singleton\");\n@@ -91,1 +91,1 @@\n-  if (_file != nullptr) {\n+  if (_file != NULL) {\n@@ -94,1 +94,1 @@\n-  Atomic::store(&_parsing_thread, (Thread*)nullptr);\n+  Atomic::store(&_parsing_thread, (Thread*)NULL);\n@@ -97,1 +97,1 @@\n-  _instance = nullptr;\n+  _instance = NULL;\n@@ -133,1 +133,1 @@\n-      if (message != nullptr) {\n+      if (message != NULL) {\n@@ -144,1 +144,1 @@\n-    assert(klass != nullptr, \"sanity\");\n+    assert(klass != NULL, \"sanity\");\n@@ -168,1 +168,1 @@\n-    if (fgets(_line, sizeof(_line), _file) == nullptr) {\n+    if (fgets(_line, sizeof(_line), _file) == NULL) {\n@@ -210,1 +210,1 @@\n-  _source = nullptr;\n+  _source = NULL;\n@@ -219,1 +219,1 @@\n-  if ((_token = strchr(_line, ' ')) == nullptr) {\n+  if ((_token = strchr(_line, ' ')) == NULL) {\n@@ -245,1 +245,1 @@\n-      if (s == nullptr) {\n+      if (s == NULL) {\n@@ -287,1 +287,1 @@\n-  if ((ptr = strchr(_line, ' ')) == nullptr) {\n+  if ((ptr = strchr(_line, ' ')) == NULL) {\n@@ -448,1 +448,1 @@\n-  vm_exit_during_initialization(\"class list format error.\", nullptr);\n+  vm_exit_during_initialization(\"class list format error.\", NULL);\n@@ -547,1 +547,1 @@\n-    if (message != nullptr) {\n+    if (message != NULL) {\n@@ -643,1 +643,1 @@\n-    assert(obj != nullptr, \"jdk.internal.loader.BuiltinClassLoader::loadClass never returns null\");\n+    assert(obj != NULL, \"jdk.internal.loader.BuiltinClassLoader::loadClass never returns null\");\n@@ -651,1 +651,1 @@\n-  assert(klass != nullptr, \"exception should have been thrown\");\n+  assert(klass != NULL, \"exception should have been thrown\");\n@@ -672,1 +672,1 @@\n-  return (_source != nullptr);\n+  return (_source != NULL);\n@@ -677,1 +677,1 @@\n-  if (klass_ptr == nullptr) {\n+  if (klass_ptr == NULL) {\n@@ -680,1 +680,1 @@\n-  assert(*klass_ptr != nullptr, \"must be\");\n+  assert(*klass_ptr != NULL, \"must be\");\n@@ -687,1 +687,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -701,1 +701,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -724,1 +724,1 @@\n-  return nullptr;\n+  return NULL;\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-  CDSIndyInfo() : _items(nullptr) {}\n+  CDSIndyInfo() : _items(NULL) {}\n@@ -44,1 +44,1 @@\n-    if (_items == nullptr) {\n+    if (_items == NULL) {\n@@ -47,1 +47,1 @@\n-    assert(_items != nullptr, \"sanity\");\n+    assert(_items != NULL, \"sanity\");\n@@ -147,1 +147,1 @@\n-    assert(_instance != nullptr, \"must be\");\n+    assert(_instance != NULL, \"must be\");\n","filename":"src\/hotspot\/share\/cds\/classListParser.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-fileStream* ClassListWriter::_classlist_file = nullptr;\n+fileStream* ClassListWriter::_classlist_file = NULL;\n@@ -41,2 +41,2 @@\n-  if (DumpLoadedClassList != nullptr) {\n-    const char* list_name = make_log_name(DumpLoadedClassList, nullptr);\n+  if (DumpLoadedClassList != NULL) {\n+    const char* list_name = make_log_name(DumpLoadedClassList, NULL);\n@@ -59,1 +59,1 @@\n-    DumpLoadedClassList = nullptr;\n+    DumpLoadedClassList = NULL;\n@@ -72,1 +72,1 @@\n-ClassListWriter::IDTable* ClassListWriter::_id_table = nullptr;\n+ClassListWriter::IDTable* ClassListWriter::_id_table = NULL;\n@@ -77,1 +77,1 @@\n-  if (_id_table == nullptr) {\n+  if (_id_table == NULL) {\n@@ -90,2 +90,2 @@\n-  if (_id_table != nullptr) {\n-    return _id_table->get(k) != nullptr;\n+  if (_id_table != NULL) {\n+    return _id_table->get(k) != NULL;\n@@ -99,1 +99,1 @@\n-  if (_id_table != nullptr) {\n+  if (_id_table != NULL) {\n@@ -135,1 +135,1 @@\n-    if (super != nullptr && !has_id(super)) {\n+    if (super != NULL && !has_id(super)) {\n@@ -161,1 +161,1 @@\n-    assert(super != nullptr, \"must be\");\n+    assert(super != NULL, \"must be\");\n@@ -188,1 +188,1 @@\n-  if (_classlist_file != nullptr) {\n+  if (_classlist_file != NULL) {\n","filename":"src\/hotspot\/share\/cds\/classListWriter.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    return _classlist_file != nullptr && _classlist_file->is_open();\n+    return _classlist_file != NULL && _classlist_file->is_open();\n@@ -68,1 +68,1 @@\n-  static void write_to_stream(const InstanceKlass* k, outputStream* stream, const ClassFileStream* cfs = nullptr) NOT_CDS_RETURN;\n+  static void write_to_stream(const InstanceKlass* k, outputStream* stream, const ClassFileStream* cfs = NULL) NOT_CDS_RETURN;\n","filename":"src\/hotspot\/share\/cds\/classListWriter.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,2 @@\n-ClassPrelinker::ClassesTable* ClassPrelinker::_processed_classes = nullptr;\n-ClassPrelinker::ClassesTable* ClassPrelinker::_vm_classes = nullptr;\n+ClassPrelinker::ClassesTable* ClassPrelinker::_processed_classes = NULL;\n+ClassPrelinker::ClassesTable* ClassPrelinker::_vm_classes = NULL;\n@@ -40,1 +40,1 @@\n-  return (_vm_classes->get(ik) != nullptr);\n+  return (_vm_classes->get(ik) != NULL);\n@@ -48,1 +48,1 @@\n-    if (super != nullptr) {\n+    if (super != NULL) {\n@@ -59,1 +59,1 @@\n-  assert(_vm_classes == nullptr, \"must be\");\n+  assert(_vm_classes == NULL, \"must be\");\n@@ -68,1 +68,1 @@\n-  assert(_vm_classes != nullptr, \"must be\");\n+  assert(_vm_classes != NULL, \"must be\");\n@@ -71,2 +71,2 @@\n-  _vm_classes = nullptr;\n-  _processed_classes = nullptr;\n+  _vm_classes = NULL;\n+  _processed_classes = NULL;\n@@ -80,1 +80,1 @@\n-  assert(resolved_klass != nullptr, \"must be\");\n+  assert(resolved_klass != NULL, \"must be\");\n@@ -118,2 +118,2 @@\n-  if (cp->cache() == nullptr || cp->reference_map() == nullptr) {\n-    \/\/ The cache may be null if the pool_holder klass fails verification\n+  if (cp->cache() == NULL || cp->reference_map() == NULL) {\n+    \/\/ The cache may be NULL if the pool_holder klass fails verification\n@@ -149,1 +149,1 @@\n-  if (k != nullptr) {\n+  if (k != NULL) {\n@@ -155,1 +155,1 @@\n-    return find_loaded_class(THREAD, nullptr, name);\n+    return find_loaded_class(THREAD, NULL, name);\n@@ -158,1 +158,1 @@\n-  return nullptr;\n+  return NULL;\n@@ -169,1 +169,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -174,1 +174,1 @@\n-  if (resolved_klass != nullptr && can_archive_resolved_klass(cp_holder, resolved_klass)) {\n+  if (resolved_klass != NULL && can_archive_resolved_klass(cp_holder, resolved_klass)) {\n@@ -196,1 +196,1 @@\n-  if (!Thread::current()->is_VM_thread() || ArchiveBuilder::current() == nullptr) {\n+  if (!Thread::current()->is_VM_thread() || ArchiveBuilder::current() == NULL) {\n","filename":"src\/hotspot\/share\/cds\/classPrelinker.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-\/\/   class CppVtableTesterB: public InstanceKlass {virtual void* last_virtual_method() {return nullptr}; };\n+\/\/   class CppVtableTesterB: public InstanceKlass {virtual void* last_virtual_method() {return NULL}; };\n@@ -152,1 +152,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -215,1 +215,1 @@\n-CppVtableInfo** CppVtables::_index = nullptr;\n+CppVtableInfo** CppVtables::_index = NULL;\n@@ -280,1 +280,1 @@\n-    return nullptr;\n+    return NULL;\n","filename":"src\/hotspot\/share\/cds\/cppVtables.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-      return nullptr;\n+      return NULL;\n","filename":"src\/hotspot\/share\/cds\/dumpAllocStats.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,3 +49,3 @@\n-  _verifier_constraints = nullptr;\n-  _verifier_constraint_flags = nullptr;\n-  _loader_constraints = nullptr;\n+  _verifier_constraints = NULL;\n+  _verifier_constraint_flags = NULL;\n+  _loader_constraints = NULL;\n@@ -53,2 +53,2 @@\n-  assert(src._enum_klass_static_fields == nullptr, \"This should not happen with dynamic dump.\");\n-  _enum_klass_static_fields = nullptr;\n+  assert(src._enum_klass_static_fields == NULL, \"This should not happen with dynamic dump.\");\n+  _enum_klass_static_fields = NULL;\n@@ -80,2 +80,2 @@\n-  if (_verifier_constraints != nullptr) {\n-    assert(_verifier_constraint_flags != nullptr, \"must be\");\n+  if (_verifier_constraints != NULL) {\n+    assert(_verifier_constraint_flags != NULL, \"must be\");\n@@ -85,1 +85,1 @@\n-  if (_loader_constraints != nullptr) {\n+  if (_loader_constraints != NULL) {\n@@ -98,1 +98,1 @@\n-  if (_verifier_constraints == nullptr) {\n+  if (_verifier_constraints == NULL) {\n@@ -101,1 +101,1 @@\n-  if (_verifier_constraint_flags == nullptr) {\n+  if (_verifier_constraint_flags == NULL) {\n@@ -143,1 +143,1 @@\n-  if (_loader_constraints == nullptr) {\n+  if (_loader_constraints == NULL) {\n@@ -175,1 +175,1 @@\n-  if (_enum_klass_static_fields == nullptr) {\n+  if (_enum_klass_static_fields == NULL) {\n@@ -182,1 +182,1 @@\n-  assert(_enum_klass_static_fields != nullptr, \"must be\");\n+  assert(_enum_klass_static_fields != NULL, \"must be\");\n@@ -202,1 +202,1 @@\n-  assert(p != nullptr, \"we must not see any non-shared InstanceKlass* that's \"\n+  assert(p != NULL, \"we must not see any non-shared InstanceKlass* that's \"\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    DTLoaderConstraint() : _name(nullptr), _loader_type1('0'), _loader_type2('0') {}\n+    DTLoaderConstraint() : _name(NULL), _loader_type1('0'), _loader_type2('0') {}\n@@ -87,1 +87,1 @@\n-    DTVerifierConstraint() : _name(nullptr), _from_name(nullptr) {}\n+    DTVerifierConstraint() : _name(NULL), _from_name(NULL) {}\n@@ -133,2 +133,2 @@\n-    _klass = nullptr;\n-    _nest_host = nullptr;\n+    _klass = NULL;\n+    _nest_host = NULL;\n@@ -143,4 +143,4 @@\n-    _verifier_constraints = nullptr;\n-    _verifier_constraint_flags = nullptr;\n-    _loader_constraints = nullptr;\n-    _enum_klass_static_fields = nullptr;\n+    _verifier_constraints = NULL;\n+    _verifier_constraint_flags = NULL;\n+    _loader_constraints = NULL;\n+    _enum_klass_static_fields = NULL;\n@@ -162,1 +162,1 @@\n-    if (array == nullptr) {\n+    if (array == NULL) {\n@@ -186,1 +186,1 @@\n-    if (_verifier_constraints != nullptr) {\n+    if (_verifier_constraints != NULL) {\n@@ -191,1 +191,1 @@\n-    if (_loader_constraints != nullptr) {\n+    if (_loader_constraints != NULL) {\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,1 @@\n-  assert(mapinfo != nullptr && _header == mapinfo->dynamic_header(), \"must be\");\n+  assert(mapinfo != NULL && _header == mapinfo->dynamic_header(), \"must be\");\n@@ -207,1 +207,1 @@\n-  _header = nullptr;\n+  _header = NULL;\n@@ -228,1 +228,1 @@\n-  assert(ik != nullptr, \"DynamicArchiveBuilder currently doesn't support dumping the base archive\");\n+  assert(ik != NULL, \"DynamicArchiveBuilder currently doesn't support dumping the base archive\");\n@@ -234,2 +234,2 @@\n-  if (ik->java_mirror() == nullptr) {\n-    \/\/ null mirror means this class has already been visited and methods are already sorted\n+  if (ik->java_mirror() == NULL) {\n+    \/\/ NULL mirror means this class has already been visited and methods are already sorted\n@@ -260,1 +260,1 @@\n-  if (ik->methods() != nullptr) {\n+  if (ik->methods() != NULL) {\n@@ -266,1 +266,1 @@\n-  if (ik->default_methods() != nullptr) {\n+  if (ik->default_methods() != NULL) {\n@@ -275,1 +275,1 @@\n-  if (ik->default_methods() != nullptr) {\n+  if (ik->default_methods() != NULL) {\n@@ -323,1 +323,1 @@\n-  assert(dynamic_info != nullptr, \"Sanity\");\n+  assert(dynamic_info != NULL, \"Sanity\");\n@@ -326,1 +326,1 @@\n-  ArchiveBuilder::write_archive(dynamic_info, nullptr, nullptr, nullptr, nullptr);\n+  ArchiveBuilder::write_archive(dynamic_info, NULL, NULL, NULL, NULL);\n@@ -370,1 +370,1 @@\n-      vm_exit_during_initialization(\"-XX:+RecordDynamicDumpInfo\" __THEMSG, nullptr);\n+      vm_exit_during_initialization(\"-XX:+RecordDynamicDumpInfo\" __THEMSG, NULL);\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-  static bool is_mapped() { return FileMapInfo::dynamic_info() != nullptr; }\n+  static bool is_mapped() { return FileMapInfo::dynamic_info() != NULL; }\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-  vm_exit_during_initialization(\"Unable to use shared archive.\", nullptr);\n+  vm_exit_during_initialization(\"Unable to use shared archive.\", NULL);\n@@ -183,1 +183,1 @@\n-    assert(_current_info == nullptr, \"must be singleton\"); \/\/ not thread safe\n+    assert(_current_info == NULL, \"must be singleton\"); \/\/ not thread safe\n@@ -186,1 +186,1 @@\n-    assert(_dynamic_archive_info == nullptr, \"must be singleton\"); \/\/ not thread safe\n+    assert(_dynamic_archive_info == NULL, \"must be singleton\"); \/\/ not thread safe\n@@ -194,1 +194,1 @@\n-    _current_info = nullptr;\n+    _current_info = NULL;\n@@ -197,1 +197,1 @@\n-    _dynamic_archive_info = nullptr;\n+    _dynamic_archive_info = NULL;\n@@ -210,1 +210,1 @@\n-  assert(_header == nullptr, \"Sanity check\");\n+  assert(_header == NULL, \"Sanity check\");\n@@ -431,1 +431,1 @@\n-  if (ent->is_jar() && !ent->is_signed() && ent->manifest() != nullptr) {\n+  if (ent->is_jar() && !ent->is_signed() && ent->manifest() != NULL) {\n@@ -564,1 +564,1 @@\n-  assert(jrt != nullptr,\n+  assert(jrt != NULL,\n@@ -567,1 +567,1 @@\n-  if (_saved_shared_path_table_array != nullptr) {\n+  if (_saved_shared_path_table_array != NULL) {\n@@ -569,1 +569,1 @@\n-    _saved_shared_path_table_array = nullptr;\n+    _saved_shared_path_table_array = NULL;\n@@ -581,1 +581,1 @@\n-  assert(jrt != nullptr,\n+  assert(jrt != NULL,\n@@ -602,1 +602,1 @@\n-  while (cpe != nullptr) {\n+  while (cpe != NULL) {\n@@ -646,1 +646,1 @@\n-    ClassLoader::exit_with_path_failure(\"Cannot have non-empty directory in paths\", nullptr);\n+    ClassLoader::exit_with_path_failure(\"Cannot have non-empty directory in paths\", NULL);\n@@ -653,1 +653,1 @@\n-  if (_non_existent_class_paths == nullptr) {\n+  if (_non_existent_class_paths == NULL) {\n@@ -661,1 +661,1 @@\n-  if (_non_existent_class_paths != nullptr) {\n+  if (_non_existent_class_paths != NULL) {\n@@ -732,1 +732,1 @@\n-        if (value != nullptr) {\n+        if (value != NULL) {\n@@ -734,1 +734,1 @@\n-          if (strstr((char*)attr, \"-Digest\") != nullptr) {\n+          if (strstr((char*)attr, \"-Digest\") != NULL) {\n@@ -755,1 +755,1 @@\n-  if (manifest != nullptr) {\n+  if (manifest != NULL) {\n@@ -776,1 +776,1 @@\n-  if (p != nullptr) {\n+  if (p != NULL) {\n@@ -793,1 +793,1 @@\n-  if (path == nullptr) {\n+  if (path == NULL) {\n@@ -798,1 +798,1 @@\n-  while (p != nullptr) {\n+  while (p != NULL) {\n@@ -801,1 +801,1 @@\n-    if (p != nullptr) {\n+    if (p != NULL) {\n@@ -831,1 +831,1 @@\n-  while (cpe != nullptr) {\n+  while (cpe != NULL) {\n@@ -852,2 +852,2 @@\n-      if (canonical_path != nullptr) {\n-        char* error_msg = nullptr;\n+      if (canonical_path != NULL) {\n+        char* error_msg = NULL;\n@@ -855,1 +855,1 @@\n-        if (zip != nullptr && error_msg == nullptr) {\n+        if (zip != NULL && error_msg == NULL) {\n@@ -942,1 +942,1 @@\n-  if (dp_len == 0 && rp == nullptr) {\n+  if (dp_len == 0 && rp == NULL) {\n@@ -944,1 +944,1 @@\n-  } else if (dp_len == 0 && rp != nullptr) {\n+  } else if (dp_len == 0 && rp != NULL) {\n@@ -955,1 +955,1 @@\n-  } else if (dp_len > 0 && rp != nullptr) {\n+  } else if (dp_len > 0 && rp != NULL) {\n@@ -987,1 +987,1 @@\n-  assert(appcp != nullptr, \"null app classpath\");\n+  assert(appcp != NULL, \"NULL app classpath\");\n@@ -1112,1 +1112,1 @@\n-        if (_dynamic_archive_info != nullptr && _dynamic_archive_info->_is_static) {\n+        if (_dynamic_archive_info != NULL && _dynamic_archive_info->_is_static) {\n@@ -1121,1 +1121,1 @@\n-        if (_dynamic_archive_info != nullptr && _dynamic_archive_info->_is_static) {\n+        if (_dynamic_archive_info != NULL && _dynamic_archive_info->_is_static) {\n@@ -1147,1 +1147,1 @@\n-  if (_classpath_entries_for_jvmti != nullptr) {\n+  if (_classpath_entries_for_jvmti != NULL) {\n@@ -1212,1 +1212,1 @@\n-    assert(_archive_name != nullptr, \"Archive name is null\");\n+    assert(_archive_name != nullptr, \"Archive name is NULL\");\n@@ -1223,1 +1223,1 @@\n-    assert(_archive_name != nullptr, \"Archive name is null\");\n+    assert(_archive_name != nullptr, \"Archive name is NULL\");\n@@ -1361,1 +1361,1 @@\n-\/\/ true && (*base_archive_name) == nullptr:\n+\/\/ true && (*base_archive_name) == NULL:\n@@ -1363,1 +1363,1 @@\n-\/\/ true && (*base_archive_name) != nullptr:\n+\/\/ true && (*base_archive_name) != NULL:\n@@ -1368,1 +1368,1 @@\n-  *base_archive_name = nullptr;\n+  *base_archive_name = NULL;\n@@ -1568,1 +1568,1 @@\n-  _mapped_base = nullptr;\n+  _mapped_base = NULL;\n@@ -1630,1 +1630,1 @@\n-    requested_base = nullptr; \/\/ always null for bm region\n+    requested_base = NULL; \/\/ always NULL for bm region\n@@ -1633,1 +1633,1 @@\n-    requested_base = nullptr;\n+    requested_base = NULL;\n@@ -1663,1 +1663,1 @@\n-  if (base != nullptr) {\n+  if (base != NULL) {\n@@ -1691,1 +1691,1 @@\n-  if (closed_bitmaps != nullptr && open_bitmaps != nullptr) {\n+  if (closed_bitmaps != NULL && open_bitmaps != NULL) {\n@@ -1700,1 +1700,1 @@\n-  if (closed_bitmaps != nullptr && open_bitmaps != nullptr) {\n+  if (closed_bitmaps != NULL && open_bitmaps != NULL) {\n@@ -1745,1 +1745,1 @@\n-  int arr_len = regions == nullptr ? 0 : regions->length();\n+  int arr_len = regions == NULL ? 0 : regions->length();\n@@ -1756,1 +1756,1 @@\n-    char* start = nullptr;\n+    char* start = NULL;\n@@ -1853,1 +1853,1 @@\n-  if (base == nullptr) {\n+  if (base == NULL) {\n@@ -1870,1 +1870,1 @@\n-  DEBUG_ONLY(FileMapRegion* last_region = nullptr);\n+  DEBUG_ONLY(FileMapRegion* last_region = NULL);\n@@ -1884,1 +1884,1 @@\n-    DEBUG_ONLY(if (last_region != nullptr) {\n+    DEBUG_ONLY(if (last_region != NULL) {\n@@ -1933,2 +1933,2 @@\n-  assert(r->mapped_base() == nullptr, \"must be not mapped yet\");\n-  assert(requested_addr != nullptr, \"must be specified\");\n+  assert(r->mapped_base() == NULL, \"must be not mapped yet\");\n+  assert(requested_addr != NULL, \"must be specified\");\n@@ -1987,1 +1987,1 @@\n-  if (r->mapped_base() != nullptr) {\n+  if (r->mapped_base() != NULL) {\n@@ -1991,1 +1991,1 @@\n-  char* requested_addr = nullptr; \/\/ allow OS to pick any location\n+  char* requested_addr = NULL; \/\/ allow OS to pick any location\n@@ -1994,1 +1994,1 @@\n-  if (bitmap_base == nullptr) {\n+  if (bitmap_base == NULL) {\n@@ -1996,1 +1996,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -2004,1 +2004,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -2022,1 +2022,1 @@\n-  if (bitmap_base == nullptr) {\n+  if (bitmap_base == NULL) {\n@@ -2083,2 +2083,2 @@\n-static MemRegion *closed_heap_regions = nullptr;\n-static MemRegion *open_heap_regions = nullptr;\n+static MemRegion *closed_heap_regions = NULL;\n+static MemRegion *open_heap_regions = NULL;\n@@ -2099,1 +2099,1 @@\n-  address end   = nullptr;\n+  address end   = NULL;\n@@ -2119,1 +2119,1 @@\n-  assert(end != nullptr, \"must have at least one used heap region\");\n+  assert(end != NULL, \"must have at least one used heap region\");\n@@ -2322,1 +2322,1 @@\n-    if (bitmap_base == nullptr) {\n+    if (bitmap_base == NULL) {\n@@ -2350,1 +2350,1 @@\n-    assert(closed_heap_regions == nullptr &&\n+    assert(closed_heap_regions == NULL &&\n@@ -2355,1 +2355,1 @@\n-    assert(open_heap_regions == nullptr && num_open_heap_regions == 0, \"sanity\");\n+    assert(open_heap_regions == NULL && num_open_heap_regions == 0, \"sanity\");\n@@ -2416,1 +2416,1 @@\n-    if (base == nullptr || base != addr) {\n+    if (base == NULL || base != addr) {\n@@ -2466,1 +2466,1 @@\n-  assert(bitmap_base != nullptr, \"must have already been mapped\");\n+  assert(bitmap_base != NULL, \"must have already been mapped\");\n@@ -2483,1 +2483,1 @@\n-  \/\/ Note that closed_heap_regions may be non-null even if no regions were found.\n+  \/\/ Note that closed_heap_regions may be non-NULL even if no regions were found.\n@@ -2485,1 +2485,1 @@\n-    assert(closed_heap_regions != nullptr,\n+    assert(closed_heap_regions != NULL,\n@@ -2498,1 +2498,1 @@\n-    assert(open_heap_regions != nullptr, \"Null open_heap_regions array with non-zero count\");\n+    assert(open_heap_regions != NULL, \"NULL open_heap_regions array with non-zero count\");\n@@ -2514,1 +2514,1 @@\n-    assert(regions != nullptr, \"Null archive regions array with non-zero count\");\n+    assert(regions != NULL, \"Null archive regions array with non-zero count\");\n@@ -2555,1 +2555,1 @@\n-  if (mapped_base != nullptr) {\n+  if (mapped_base != NULL) {\n@@ -2563,1 +2563,1 @@\n-    r->set_mapped_base(nullptr);\n+    r->set_mapped_base(NULL);\n@@ -2581,2 +2581,2 @@\n-FileMapInfo* FileMapInfo::_current_info = nullptr;\n-FileMapInfo* FileMapInfo::_dynamic_archive_info = nullptr;\n+FileMapInfo* FileMapInfo::_current_info = NULL;\n+FileMapInfo* FileMapInfo::_dynamic_archive_info = NULL;\n@@ -2586,1 +2586,1 @@\n-Array<u8>*      FileMapInfo::_saved_shared_path_table_array = nullptr;\n+Array<u8>*      FileMapInfo::_saved_shared_path_table_array = NULL;\n@@ -2589,1 +2589,1 @@\n-GrowableArray<const char*>* FileMapInfo::_non_existent_class_paths = nullptr;\n+GrowableArray<const char*>* FileMapInfo::_non_existent_class_paths = NULL;\n@@ -2682,1 +2682,1 @@\n-  if (prop != nullptr) {\n+  if (prop != NULL) {\n@@ -2760,1 +2760,1 @@\n-  MetaspaceShared::set_shared_metaspace_range(nullptr, nullptr, nullptr);\n+  MetaspaceShared::set_shared_metaspace_range(NULL, NULL, NULL);\n@@ -2782,1 +2782,1 @@\n-ClassPathEntry** FileMapInfo::_classpath_entries_for_jvmti = nullptr;\n+ClassPathEntry** FileMapInfo::_classpath_entries_for_jvmti = NULL;\n@@ -2791,1 +2791,1 @@\n-  if (ent == nullptr) {\n+  if (ent == NULL) {\n@@ -2800,1 +2800,1 @@\n-      THROW_MSG_(vmSymbols::java_io_IOException(), msg, nullptr);\n+      THROW_MSG_(vmSymbols::java_io_IOException(), msg, NULL);\n@@ -2803,1 +2803,1 @@\n-      if (ent == nullptr) {\n+      if (ent == NULL) {\n@@ -2806,1 +2806,1 @@\n-        THROW_MSG_(vmSymbols::java_io_IOException(), msg, nullptr);\n+        THROW_MSG_(vmSymbols::java_io_IOException(), msg, NULL);\n@@ -2811,1 +2811,1 @@\n-    if (_classpath_entries_for_jvmti[i] == nullptr) {\n+    if (_classpath_entries_for_jvmti[i] == NULL) {\n@@ -2829,1 +2829,1 @@\n-  assert(cpe != nullptr, \"must be\");\n+  assert(cpe != NULL, \"must be\");\n@@ -2837,1 +2837,1 @@\n-  assert(cfs != nullptr, \"must be able to read the classfile data of shared classes for built-in loaders.\");\n+  assert(cfs != NULL, \"must be able to read the classfile data of shared classes for built-in loaders.\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":87,"deletions":87,"binary":false,"changes":174,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,1 +91,1 @@\n-    return (_manifest == nullptr) ? nullptr : (const char*)_manifest->data();\n+    return (_manifest == NULL) ? NULL : (const char*)_manifest->data();\n@@ -94,1 +94,1 @@\n-    return (_manifest == nullptr) ? 0 : _manifest->length();\n+    return (_manifest == NULL) ? 0 : _manifest->length();\n@@ -118,1 +118,1 @@\n-  SharedPathTable() : _table(nullptr), _size(0) {}\n+  SharedPathTable() : _table(NULL), _size(0) {}\n@@ -129,1 +129,1 @@\n-      return nullptr;\n+      return NULL;\n@@ -432,1 +432,1 @@\n-    NOT_CDS(return nullptr;)\n+    NOT_CDS(return NULL;)\n@@ -441,1 +441,1 @@\n-    NOT_CDS(return nullptr;)\n+    NOT_CDS(return NULL;)\n@@ -564,1 +564,1 @@\n-  char* skip_first_path_entry(const char* path) NOT_CDS_RETURN_(nullptr);\n+  char* skip_first_path_entry(const char* path) NOT_CDS_RETURN_(NULL);\n@@ -567,2 +567,2 @@\n-  GrowableArray<const char*>* create_dumptime_app_classpath_array() NOT_CDS_RETURN_(nullptr);\n-  GrowableArray<const char*>* create_path_array(const char* path) NOT_CDS_RETURN_(nullptr);\n+  GrowableArray<const char*>* create_dumptime_app_classpath_array() NOT_CDS_RETURN_(NULL);\n+  GrowableArray<const char*>* create_path_array(const char* path) NOT_CDS_RETURN_(NULL);\n@@ -593,3 +593,3 @@\n-  address heap_region_dumptime_address(FileMapRegion* r) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n-  address heap_region_requested_address(FileMapRegion* r) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n-  address heap_region_mapped_address(FileMapRegion* r) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n+  address heap_region_dumptime_address(FileMapRegion* r) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n+  address heap_region_requested_address(FileMapRegion* r) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n+  address heap_region_mapped_address(FileMapRegion* r) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-  : klass_name(k), field_name(f), klass(nullptr), offset(0), type(T_ILLEGAL) {}\n+  : klass_name(k), field_name(f), klass(NULL), offset(0), type(T_ILLEGAL) {}\n@@ -79,1 +79,1 @@\n-    return klass_name != nullptr;\n+    return klass_name != NULL;\n@@ -84,2 +84,2 @@\n-DumpedInternedStrings *HeapShared::_dumped_interned_strings = nullptr;\n-GrowableArrayCHeap<Metadata**, mtClassShared>* HeapShared::_native_pointers = nullptr;\n+DumpedInternedStrings *HeapShared::_dumped_interned_strings = NULL;\n+GrowableArrayCHeap<Metadata**, mtClassShared>* HeapShared::_native_pointers = NULL;\n@@ -94,4 +94,4 @@\n-static Array<char>* _archived_ArchiveHeapTestClass = nullptr;\n-static const char* _test_class_name = nullptr;\n-static const Klass* _test_class = nullptr;\n-static const ArchivedKlassSubGraphInfoRecord* _test_class_record = nullptr;\n+static Array<char>* _archived_ArchiveHeapTestClass = NULL;\n+static const char* _test_class_name = NULL;\n+static const Klass* _test_class = NULL;\n+static const ArchivedKlassSubGraphInfoRecord* _test_class_record = NULL;\n@@ -116,1 +116,1 @@\n-  {nullptr, nullptr},\n+  {NULL, NULL},\n@@ -126,1 +126,1 @@\n-  {nullptr, nullptr}, \/\/ Extra slot for -XX:ArchiveHeapTestClass\n+  {NULL, NULL}, \/\/ Extra slot for -XX:ArchiveHeapTestClass\n@@ -128,1 +128,1 @@\n-  {nullptr, nullptr},\n+  {NULL, NULL},\n@@ -136,1 +136,1 @@\n-  {nullptr, nullptr},\n+  {NULL, NULL},\n@@ -140,1 +140,1 @@\n-GrowableArrayCHeap<oop, mtClassShared>* HeapShared::_pending_roots = nullptr;\n+GrowableArrayCHeap<oop, mtClassShared>* HeapShared::_pending_roots = NULL;\n@@ -143,1 +143,1 @@\n-KlassToOopHandleTable* HeapShared::_scratch_java_mirror_table = nullptr;\n+KlassToOopHandleTable* HeapShared::_scratch_java_mirror_table = NULL;\n@@ -180,1 +180,1 @@\n-  while (klass != nullptr) {\n+  while (klass != NULL) {\n@@ -182,1 +182,1 @@\n-    if (method != nullptr) {\n+    if (method != NULL) {\n@@ -221,2 +221,2 @@\n-HeapShared::ArchivedObjectCache* HeapShared::_archived_object_cache = nullptr;\n-HeapShared::OriginalObjectTable* HeapShared::_original_object_table = nullptr;\n+HeapShared::ArchivedObjectCache* HeapShared::_archived_object_cache = NULL;\n+HeapShared::OriginalObjectTable* HeapShared::_original_object_table = NULL;\n@@ -227,1 +227,1 @@\n-  if (p != nullptr) {\n+  if (p != NULL) {\n@@ -230,1 +230,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -240,1 +240,1 @@\n-  if (_pending_roots == nullptr) {\n+  if (_pending_roots == NULL) {\n@@ -251,1 +251,1 @@\n-      return nullptr;\n+      return NULL;\n@@ -258,1 +258,1 @@\n-  assert(roots != nullptr, \"should have been initialized\");\n+  assert(roots != NULL, \"should have been initialized\");\n@@ -267,1 +267,1 @@\n-    assert(_pending_roots != nullptr, \"sanity\");\n+    assert(_pending_roots != NULL, \"sanity\");\n@@ -288,1 +288,1 @@\n-    roots()->obj_at_put(index, nullptr);\n+    roots()->obj_at_put(index, NULL);\n@@ -298,1 +298,1 @@\n-  if (ao != nullptr) {\n+  if (ao != NULL) {\n@@ -307,1 +307,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -311,1 +311,1 @@\n-  if (archived_oop != nullptr) {\n+  if (archived_oop != NULL) {\n@@ -330,1 +330,1 @@\n-    if (_original_object_table != nullptr) {\n+    if (_original_object_table != NULL) {\n@@ -358,1 +358,1 @@\n-    if (handle != nullptr) {\n+    if (handle != NULL) {\n@@ -361,1 +361,1 @@\n-      return nullptr;\n+      return NULL;\n@@ -373,1 +373,1 @@\n-    if (handle != nullptr) {\n+    if (handle != NULL) {\n@@ -416,1 +416,1 @@\n-      assert(m != nullptr, \"sanity\");\n+      assert(m != NULL, \"sanity\");\n@@ -418,1 +418,1 @@\n-      assert(archived_m != nullptr, \"sanity\");\n+      assert(archived_m != NULL, \"sanity\");\n@@ -429,1 +429,1 @@\n-  assert(klasses != nullptr, \"sanity\");\n+  assert(klasses != NULL, \"sanity\");\n@@ -433,1 +433,1 @@\n-    if (m != nullptr) {\n+    if (m != NULL) {\n@@ -436,1 +436,1 @@\n-      guarantee(archived_m != nullptr, \"scratch mirrors should not point to any unachivable objects\");\n+      guarantee(archived_m != NULL, \"scratch mirrors should not point to any unachivable objects\");\n@@ -463,1 +463,1 @@\n-  if (ptr != nullptr) {\n+  if (ptr != NULL) {\n@@ -523,1 +523,1 @@\n-        if (oop_field == nullptr) {\n+        if (oop_field == NULL) {\n@@ -548,1 +548,1 @@\n-  assert(info != nullptr, \"sanity\");\n+  assert(info != NULL, \"sanity\");\n@@ -665,1 +665,1 @@\n-  int length = _pending_roots != nullptr ? _pending_roots->length() : 0;\n+  int length = _pending_roots != NULL ? _pending_roots->length() : 0;\n@@ -692,1 +692,1 @@\n-HeapShared::DumpTimeKlassSubGraphInfoTable* HeapShared::_dump_time_subgraph_info_table = nullptr;\n+HeapShared::DumpTimeKlassSubGraphInfoTable* HeapShared::_dump_time_subgraph_info_table = NULL;\n@@ -712,1 +712,1 @@\n-  assert(info != nullptr, \"must have been initialized\");\n+  assert(info != NULL, \"must have been initialized\");\n@@ -720,1 +720,1 @@\n-  if (_subgraph_entry_fields == nullptr) {\n+  if (_subgraph_entry_fields == NULL) {\n@@ -734,1 +734,1 @@\n-  if (_subgraph_object_klasses == nullptr) {\n+  if (_subgraph_object_klasses == NULL) {\n@@ -790,1 +790,1 @@\n-    assert(ik->package() != nullptr, \"classes in java.base cannot be in unnamed package\");\n+    assert(ik->package() != NULL, \"classes in java.base cannot be in unnamed package\");\n@@ -795,1 +795,1 @@\n-  if (!ik->module()->is_named() && ik->package() == nullptr) {\n+  if (!ik->module()->is_named() && ik->package() == NULL) {\n@@ -830,2 +830,2 @@\n-  _entry_field_records = nullptr;\n-  _subgraph_object_klasses = nullptr;\n+  _entry_field_records = NULL;\n+  _subgraph_object_klasses = NULL;\n@@ -852,1 +852,1 @@\n-  if (entry_fields != nullptr) {\n+  if (entry_fields != NULL) {\n@@ -864,1 +864,1 @@\n-  if (subgraph_object_klasses != nullptr) {\n+  if (subgraph_object_klasses != NULL) {\n@@ -891,1 +891,1 @@\n-    if (info.subgraph_object_klasses() != nullptr || info.subgraph_entry_fields() != nullptr) {\n+    if (info.subgraph_object_klasses() != NULL || info.subgraph_entry_fields() != NULL) {\n@@ -925,1 +925,1 @@\n-  if (ArchiveHeapTestClass != nullptr) {\n+  if (ArchiveHeapTestClass != NULL) {\n@@ -938,1 +938,1 @@\n-  oop roots_oop = nullptr;\n+  oop roots_oop = NULL;\n@@ -944,1 +944,1 @@\n-    if (roots_oop != nullptr) {\n+    if (roots_oop != NULL) {\n@@ -959,1 +959,1 @@\n-  if (soc->reading() && _archived_ArchiveHeapTestClass != nullptr) {\n+  if (soc->reading() && _archived_ArchiveHeapTestClass != NULL) {\n@@ -1016,1 +1016,1 @@\n-    assert(k != nullptr && k->is_shared_boot_class(), \"sanity\");\n+    assert(k != NULL && k->is_shared_boot_class(), \"sanity\");\n@@ -1029,1 +1029,1 @@\n-  if (record == nullptr) {\n+  if (record == NULL) {\n@@ -1052,1 +1052,1 @@\n-  if (record != nullptr) {\n+  if (record != NULL) {\n@@ -1062,1 +1062,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -1068,1 +1068,1 @@\n-  if (_test_class_name != nullptr && k->name()->equals(_test_class_name) && record != nullptr) {\n+  if (_test_class_name != NULL && k->name()->equals(_test_class_name) && record != NULL) {\n@@ -1076,1 +1076,1 @@\n-  if (record != nullptr) {\n+  if (record != NULL) {\n@@ -1083,1 +1083,1 @@\n-      return nullptr;\n+      return NULL;\n@@ -1092,1 +1092,1 @@\n-      return nullptr;\n+      return NULL;\n@@ -1103,1 +1103,1 @@\n-    \/\/ nullptr class loader is used.\n+    \/\/ NULL class loader is used.\n@@ -1105,1 +1105,1 @@\n-    if (klasses != nullptr) {\n+    if (klasses != NULL) {\n@@ -1109,1 +1109,1 @@\n-          return nullptr;\n+          return NULL;\n@@ -1121,1 +1121,1 @@\n-    if (k->class_loader_data() == nullptr) {\n+    if (k->class_loader_data() == NULL) {\n@@ -1126,1 +1126,1 @@\n-    assert(k->class_loader_data() != nullptr, \"must have been resolved by HeapShared::resolve_classes\");\n+    assert(k->class_loader_data() != NULL, \"must have been resolved by HeapShared::resolve_classes\");\n@@ -1144,1 +1144,1 @@\n-  if (entry_field_records != nullptr) {\n+  if (entry_field_records != NULL) {\n@@ -1170,1 +1170,1 @@\n-  if (record != nullptr) {\n+  if (record != NULL) {\n@@ -1172,1 +1172,1 @@\n-    if (entry_field_records != nullptr) {\n+    if (entry_field_records != NULL) {\n@@ -1238,1 +1238,1 @@\n-      assert(archived != nullptr, \"VM should have exited with unarchivable objects for _level > 1\");\n+      assert(archived != NULL, \"VM should have exited with unarchivable objects for _level > 1\");\n@@ -1256,1 +1256,1 @@\n-WalkOopAndArchiveClosure* WalkOopAndArchiveClosure::_current = nullptr;\n+WalkOopAndArchiveClosure* WalkOopAndArchiveClosure::_current = NULL;\n@@ -1262,2 +1262,2 @@\n-  info._subgraph_info = (walker == nullptr) ? nullptr : walker->subgraph_info();\n-  info._referrer = (walker == nullptr) ? nullptr : walker->orig_referencing_obj();\n+  info._subgraph_info = (walker == NULL) ? NULL : walker->subgraph_info();\n+  info._referrer = (walker == NULL) ? NULL : walker->orig_referencing_obj();\n@@ -1293,1 +1293,1 @@\n-  assert(orig_obj != nullptr, \"must be\");\n+  assert(orig_obj != NULL, \"must be\");\n@@ -1316,1 +1316,1 @@\n-  if (java_lang_String::is_instance(orig_obj) && archived_obj != nullptr) {\n+  if (java_lang_String::is_instance(orig_obj) && archived_obj != NULL) {\n@@ -1329,2 +1329,2 @@\n-  bool record_klasses_only = (archived_obj != nullptr);\n-  if (archived_obj == nullptr) {\n+  bool record_klasses_only = (archived_obj != NULL);\n+  if (archived_obj == NULL) {\n@@ -1333,1 +1333,1 @@\n-    if (archived_obj == nullptr) {\n+    if (archived_obj == NULL) {\n@@ -1343,1 +1343,1 @@\n-        return nullptr;\n+        return NULL;\n@@ -1356,1 +1356,1 @@\n-      java_lang_Module::set_module_entry(archived_obj, nullptr);\n+      java_lang_Module::set_module_entry(archived_obj, NULL);\n@@ -1361,2 +1361,2 @@\n-                java_lang_ClassLoader::loader_data(orig_obj) == nullptr, \"must be\");\n-      java_lang_ClassLoader::release_set_loader_data(archived_obj, nullptr);\n+                java_lang_ClassLoader::loader_data(orig_obj) == NULL, \"must be\");\n+      java_lang_ClassLoader::release_set_loader_data(archived_obj, NULL);\n@@ -1366,1 +1366,1 @@\n-  assert(archived_obj != nullptr, \"must be\");\n+  assert(archived_obj != NULL, \"must be\");\n@@ -1439,1 +1439,1 @@\n-    if (af == nullptr) {\n+    if (af == NULL) {\n@@ -1452,1 +1452,1 @@\n-    subgraph_info->add_subgraph_entry_field(field_offset, nullptr, false);\n+    subgraph_info->add_subgraph_entry_field(field_offset, NULL, false);\n@@ -1489,1 +1489,1 @@\n-  if (archived_obj == nullptr) {\n+  if (archived_obj == NULL) {\n@@ -1516,1 +1516,1 @@\n-      assert(find_archived_heap_object(obj) == nullptr, \"must be\");\n+      assert(find_archived_heap_object(obj) == NULL, \"must be\");\n@@ -1519,1 +1519,1 @@\n-      assert(find_archived_heap_object(obj) != nullptr, \"must be\");\n+      assert(find_archived_heap_object(obj) != NULL, \"must be\");\n@@ -1553,1 +1553,1 @@\n-HeapShared::SeenObjectsTable* HeapShared::_seen_objects_table = nullptr;\n+HeapShared::SeenObjectsTable* HeapShared::_seen_objects_table = NULL;\n@@ -1565,1 +1565,1 @@\n-  return _seen_objects_table->get(obj) != nullptr;\n+  return _seen_objects_table->get(obj) != NULL;\n@@ -1630,1 +1630,1 @@\n-    bool is_test_class = (ArchiveHeapTestClass != nullptr) && (strcmp(info->klass_name, ArchiveHeapTestClass) == 0);\n+    bool is_test_class = (ArchiveHeapTestClass != NULL) && (strcmp(info->klass_name, ArchiveHeapTestClass) == 0);\n@@ -1666,1 +1666,1 @@\n-      if (ik->package() != nullptr) {\n+      if (ik->package() != NULL) {\n@@ -1715,2 +1715,2 @@\n-  assert(p[num_slots - 2].klass_name == nullptr, \"must have empty slot that's patched below\");\n-  assert(p[num_slots - 1].klass_name == nullptr, \"must have empty slot that marks the end of the list\");\n+  assert(p[num_slots - 2].klass_name == NULL, \"must have empty slot that's patched below\");\n+  assert(p[num_slots - 1].klass_name == NULL, \"must have empty slot that marks the end of the list\");\n@@ -1718,1 +1718,1 @@\n-  if (test_class_name != nullptr) {\n+  if (test_class_name != NULL) {\n@@ -1728,1 +1728,1 @@\n-  if (_test_class != nullptr) {\n+  if (_test_class != NULL) {\n@@ -1733,1 +1733,1 @@\n-    if (klasses == nullptr) {\n+    if (klasses == NULL) {\n@@ -1874,1 +1874,1 @@\n-    if ((*p) != nullptr) {\n+    if ((*p) != NULL) {\n@@ -1892,1 +1892,1 @@\n-  if (dumptime_addr == nullptr || UseCompressedOops) {\n+  if (dumptime_addr == NULL || UseCompressedOops) {\n@@ -1913,1 +1913,1 @@\n-  assert(REQUESTED_BASE != 0 && requested_addr != nullptr, \"sanity\");\n+  assert(REQUESTED_BASE != 0 && requested_addr != NULL, \"sanity\");\n@@ -1924,1 +1924,1 @@\n-  ArchiveBuilder* builder = DumpSharedSpaces ? ArchiveBuilder::current() : nullptr;\n+  ArchiveBuilder* builder = DumpSharedSpaces ? ArchiveBuilder::current() : NULL;\n@@ -1955,1 +1955,1 @@\n-      assert(*p != nullptr, \"must be non-null\");\n+      assert(*p != NULL, \"must be non-null\");\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":105,"deletions":105,"binary":false,"changes":210,"status":"modified"},{"patch":"@@ -79,2 +79,2 @@\n-    _k(k),  _subgraph_object_klasses(nullptr),\n-    _subgraph_entry_fields(nullptr),\n+    _k(k),  _subgraph_object_klasses(NULL),\n+    _subgraph_entry_fields(NULL),\n@@ -85,1 +85,1 @@\n-    if (_subgraph_object_klasses != nullptr) {\n+    if (_subgraph_object_klasses != NULL) {\n@@ -88,1 +88,1 @@\n-    if (_subgraph_entry_fields != nullptr) {\n+    if (_subgraph_entry_fields != NULL) {\n@@ -104,1 +104,1 @@\n-    return _subgraph_object_klasses == nullptr ? 0 :\n+    return _subgraph_object_klasses == NULL ? 0 :\n@@ -128,1 +128,1 @@\n-    _k(nullptr), _entry_field_records(nullptr), _subgraph_object_klasses(nullptr) {}\n+    _k(NULL), _entry_field_records(NULL), _subgraph_object_klasses(NULL) {}\n@@ -162,2 +162,2 @@\n-  static oop scratch_java_mirror(BasicType t) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n-  static oop scratch_java_mirror(Klass* k)    NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n+  static oop scratch_java_mirror(BasicType t) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n+  static oop scratch_java_mirror(Klass* k)    NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n@@ -292,1 +292,1 @@\n-    assert(_seen_objects_table == nullptr, \"must be\");\n+    assert(_seen_objects_table == NULL, \"must be\");\n@@ -296,1 +296,1 @@\n-    assert(_seen_objects_table != nullptr, \"must be\");\n+    assert(_seen_objects_table != NULL, \"must be\");\n@@ -298,1 +298,1 @@\n-    _seen_objects_table = nullptr;\n+    _seen_objects_table = NULL;\n@@ -350,1 +350,1 @@\n-      _original_object_table = nullptr;\n+      _original_object_table = NULL;\n@@ -355,2 +355,2 @@\n-    _archived_object_cache = nullptr;\n-    if (_original_object_table != nullptr) {\n+    _archived_object_cache = NULL;\n+    if (_original_object_table != NULL) {\n@@ -358,1 +358,1 @@\n-      _original_object_table = nullptr;\n+      _original_object_table = NULL;\n@@ -365,1 +365,1 @@\n-    assert(_original_object_table != nullptr, \"sanity\");\n+    assert(_original_object_table != NULL, \"sanity\");\n@@ -367,2 +367,2 @@\n-    if (r == nullptr) {\n-      return nullptr;\n+    if (r == NULL) {\n+      return NULL;\n@@ -448,1 +448,1 @@\n-  static address to_requested_address(address dumptime_addr) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n+  static address to_requested_address(address dumptime_addr) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-  if (_lambdaform_lines == nullptr) {\n+  if (_lambdaform_lines == NULL) {\n@@ -121,1 +121,1 @@\n-  guarantee(cds_klass != nullptr, \"jdk\/internal\/misc\/CDS must exist!\");\n+  guarantee(cds_klass != NULL, \"jdk\/internal\/misc\/CDS must exist!\");\n@@ -164,2 +164,2 @@\n-    assert(h_name != nullptr, \"Class name is null\");\n-    assert(h_bytes != nullptr, \"Class bytes is null\");\n+    assert(h_name != NULL, \"Class name is NULL\");\n+    assert(h_bytes != NULL, \"Class bytes is NULL\");\n@@ -174,1 +174,1 @@\n-      assert(klass != nullptr, \"must already be loaded\");\n+      assert(klass != NULL, \"must already be loaded\");\n@@ -187,1 +187,1 @@\n-      ClassFileStream st((u1*)buf, len, nullptr, ClassFileStream::verify);\n+      ClassFileStream st((u1*)buf, len, NULL, ClassFileStream::verify);\n@@ -196,1 +196,1 @@\n-  assert(klass != nullptr, \"must exist\");\n+  assert(klass != NULL, \"must exist\");\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,2 @@\n-  _proxy_klasses = nullptr;\n-  if (src._proxy_klasses != nullptr && src._proxy_klasses->length() > 0) {\n+  _proxy_klasses = NULL;\n+  if (src._proxy_klasses != NULL && src._proxy_klasses->length() > 0) {\n@@ -44,1 +44,1 @@\n-  if (_proxy_klasses != nullptr) {\n+  if (_proxy_klasses != NULL) {\n","filename":"src\/hotspot\/share\/cds\/lambdaProxyClassDictionary.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,2 +80,2 @@\n-    if (sym == nullptr) {\n-      \/\/ _invoked_name maybe null\n+    if (sym == NULL) {\n+      \/\/ _invoked_name maybe NULL\n@@ -110,1 +110,1 @@\n-  DumpTimeLambdaProxyClassInfo() : _proxy_klasses(nullptr) {}\n+  DumpTimeLambdaProxyClassInfo() : _proxy_klasses(NULL) {}\n@@ -116,1 +116,1 @@\n-    if (_proxy_klasses == nullptr) {\n+    if (_proxy_klasses == NULL) {\n@@ -119,1 +119,1 @@\n-    assert(_proxy_klasses != nullptr, \"sanity\");\n+    assert(_proxy_klasses != NULL, \"sanity\");\n","filename":"src\/hotspot\/share\/cds\/lambdaProxyClassDictionary.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-void* MetaspaceShared::_shared_metaspace_static_top = nullptr;\n+void* MetaspaceShared::_shared_metaspace_static_top = NULL;\n@@ -188,1 +188,1 @@\n-    for (Klass* klass = cld->klasses(); klass != nullptr; klass = klass->next_link()) {\n+    for (Klass* klass = cld->klasses(); klass != NULL; klass = klass->next_link()) {\n@@ -209,1 +209,1 @@\n-  if (specified_base != nullptr && aligned_base < specified_base) {\n+  if (specified_base != NULL && aligned_base < specified_base) {\n@@ -226,1 +226,1 @@\n-  const char* err = nullptr;\n+  const char* err = NULL;\n@@ -285,1 +285,1 @@\n-        if (FileMapInfo::dynamic_info() == nullptr) {\n+        if (FileMapInfo::dynamic_info() == NULL) {\n@@ -297,2 +297,2 @@\n-static GrowableArrayCHeap<OopHandle, mtClassShared>* _extra_interned_strings = nullptr;\n-static GrowableArrayCHeap<Symbol*, mtClassShared>* _extra_symbols = nullptr;\n+static GrowableArrayCHeap<OopHandle, mtClassShared>* _extra_interned_strings = NULL;\n+static GrowableArrayCHeap<Symbol*, mtClassShared>* _extra_symbols = NULL;\n@@ -347,1 +347,1 @@\n-        assert(str != nullptr, \"must succeed\");\n+        assert(str != NULL, \"must succeed\");\n@@ -462,4 +462,4 @@\n-    _closed_heap_regions(nullptr),\n-    _open_heap_regions(nullptr),\n-    _closed_heap_bitmaps(nullptr),\n-    _open_heap_bitmaps(nullptr) {}\n+    _closed_heap_regions(NULL),\n+    _open_heap_regions(NULL),\n+    _closed_heap_bitmaps(NULL),\n+    _open_heap_bitmaps(NULL) {}\n@@ -489,1 +489,1 @@\n-    if (_extra_symbols != nullptr) {\n+    if (_extra_symbols != NULL) {\n@@ -627,1 +627,1 @@\n-    \/\/ tolerate this. (Note that unregistered classes are loaded by the null\n+    \/\/ tolerate this. (Note that unregistered classes are loaded by the NULL\n@@ -665,1 +665,1 @@\n-      for (Klass* klass = cld->klasses(); klass != nullptr; klass = klass->next_link()) {\n+      for (Klass* klass = cld->klasses(); klass != NULL; klass = klass->next_link()) {\n@@ -743,1 +743,1 @@\n-    if (end != nullptr) *end = '\\0';\n+    if (end != NULL) *end = '\\0';\n@@ -768,1 +768,1 @@\n-  if (SharedClassListFile == nullptr) {\n+  if (SharedClassListFile == NULL) {\n@@ -839,1 +839,1 @@\n-    if (ik->is_shared_unregistered_class() && ik->class_loader() == nullptr) {\n+    if (ik->is_shared_unregistered_class() && ik->class_loader() == NULL) {\n@@ -841,1 +841,1 @@\n-      \/\/ for non-system classes. Since we are using the null classloader\n+      \/\/ for non-system classes. Since we are using the NULL classloader\n@@ -886,1 +886,1 @@\n-  if (_extra_interned_strings != nullptr) {\n+  if (_extra_interned_strings != NULL) {\n@@ -936,1 +936,1 @@\n-    buffer = nullptr;\n+    buffer = NULL;\n@@ -973,1 +973,1 @@\n-  FileMapInfo* dynamic_mapinfo = nullptr;\n+  FileMapInfo* dynamic_mapinfo = NULL;\n@@ -975,1 +975,1 @@\n-  if (static_mapinfo != nullptr) {\n+  if (static_mapinfo != NULL) {\n@@ -990,1 +990,1 @@\n-    bool dynamic_mapped = (dynamic_mapinfo != nullptr && dynamic_mapinfo->is_mapped());\n+    bool dynamic_mapped = (dynamic_mapinfo != NULL && dynamic_mapinfo->is_mapped());\n@@ -1004,1 +1004,1 @@\n-    set_shared_metaspace_range(nullptr, nullptr, nullptr);\n+    set_shared_metaspace_range(NULL, NULL, NULL);\n@@ -1018,1 +1018,1 @@\n-  if (static_mapinfo != nullptr && !static_mapinfo->is_mapped()) {\n+  if (static_mapinfo != NULL && !static_mapinfo->is_mapped()) {\n@@ -1021,1 +1021,1 @@\n-  if (dynamic_mapinfo != nullptr && !dynamic_mapinfo->is_mapped()) {\n+  if (dynamic_mapinfo != NULL && !dynamic_mapinfo->is_mapped()) {\n@@ -1028,1 +1028,1 @@\n-  assert(static_archive != nullptr, \"SharedArchivePath is nullptr\");\n+  assert(static_archive != nullptr, \"SharedArchivePath is NULL\");\n@@ -1032,1 +1032,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -1039,1 +1039,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -1043,1 +1043,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -1049,1 +1049,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -1059,1 +1059,1 @@\n-  if (use_requested_addr && static_mapinfo->requested_base_address() == nullptr) {\n+  if (use_requested_addr && static_mapinfo->requested_base_address() == NULL) {\n@@ -1077,1 +1077,1 @@\n-  if (dynamic_mapinfo != nullptr) {\n+  if (dynamic_mapinfo != NULL) {\n@@ -1091,1 +1091,1 @@\n-  if (mapped_base_address == nullptr) {\n+  if (mapped_base_address == NULL) {\n@@ -1166,1 +1166,1 @@\n-        assert(dynamic_mapinfo != nullptr && !dynamic_mapinfo->is_mapped(), \"must have failed\");\n+        assert(dynamic_mapinfo != NULL && !dynamic_mapinfo->is_mapped(), \"must have failed\");\n@@ -1271,1 +1271,1 @@\n-\/\/ - On error: null is returned and the spaces remain unreserved.\n+\/\/ - On error: NULL is returned and the spaces remain unreserved.\n@@ -1279,1 +1279,1 @@\n-  address const base_address = (address) (use_archive_base_addr ? static_mapinfo->requested_base_address() : nullptr);\n+  address const base_address = (address) (use_archive_base_addr ? static_mapinfo->requested_base_address() : NULL);\n@@ -1284,1 +1284,1 @@\n-  size_t archive_end_offset  = (dynamic_mapinfo == nullptr) ? static_mapinfo->mapping_end_offset() : dynamic_mapinfo->mapping_end_offset();\n+  size_t archive_end_offset  = (dynamic_mapinfo == NULL) ? static_mapinfo->mapping_end_offset() : dynamic_mapinfo->mapping_end_offset();\n@@ -1288,1 +1288,1 @@\n-  if (base_address != nullptr) {\n+  if (base_address != NULL) {\n@@ -1303,1 +1303,1 @@\n-      assert(base_address == nullptr ||\n+      assert(base_address == NULL ||\n@@ -1309,1 +1309,1 @@\n-    return nullptr;\n+    return NULL;\n@@ -1356,1 +1356,1 @@\n-      return nullptr;\n+      return NULL;\n@@ -1368,1 +1368,1 @@\n-      return nullptr;\n+      return NULL;\n@@ -1372,1 +1372,1 @@\n-    assert(base_address == nullptr || (address)total_space_rs.base() == base_address,\n+    assert(base_address == NULL || (address)total_space_rs.base() == base_address,\n@@ -1399,1 +1399,1 @@\n-  return nullptr;\n+  return NULL;\n@@ -1427,1 +1427,1 @@\n-  if (mapinfo == nullptr) {\n+  if (mapinfo == NULL) {\n@@ -1457,1 +1457,1 @@\n-  if (mapinfo != nullptr) {\n+  if (mapinfo != NULL) {\n@@ -1506,1 +1506,1 @@\n-  if (dynamic_mapinfo != nullptr) {\n+  if (dynamic_mapinfo != NULL) {\n@@ -1544,1 +1544,1 @@\n-    if (FileMapInfo::current_info() == nullptr || _archive_loading_failed) {\n+    if (FileMapInfo::current_info() == NULL || _archive_loading_failed) {\n@@ -1564,1 +1564,1 @@\n-    if (FileMapInfo::dynamic_info() != nullptr) {\n+    if (FileMapInfo::dynamic_info() != NULL) {\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":52,"deletions":52,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-  assert(name != nullptr, \"invariant\");\n+  assert(name != NULL, \"invariant\");\n@@ -80,1 +80,1 @@\n-static URLClassLoaderTable* _url_classloader_table = nullptr;\n+static URLClassLoaderTable* _url_classloader_table = NULL;\n@@ -104,1 +104,1 @@\n-  if (_url_classloader_table == nullptr) {\n+  if (_url_classloader_table == NULL) {\n@@ -108,1 +108,1 @@\n-  if (url_classloader_ptr != nullptr) {\n+  if (url_classloader_ptr != NULL) {\n","filename":"src\/hotspot\/share\/cds\/unregisteredClasses.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-  uint _collection_set_regions;\n+  uint _collectionset_regions;\n@@ -33,2 +33,2 @@\n-  size_t _collection_set_used_before;\n-  size_t _collection_set_used_after;\n+  size_t _collectionset_used_before;\n+  size_t _collectionset_used_after;\n@@ -41,2 +41,2 @@\n-    _collection_set_regions(0), _allocation_regions(0), _collection_set_used_before(0),\n-    _collection_set_used_after(0), _alloc_regions_used_before(0),\n+    _collectionset_regions(0), _allocation_regions(0), _collectionset_used_before(0),\n+    _collectionset_used_after(0), _alloc_regions_used_before(0),\n@@ -45,2 +45,2 @@\n-  void set_collection_set_regions(uint collection_set_regions) {\n-    _collection_set_regions = collection_set_regions;\n+  void set_collectionset_regions(uint collectionset_regions) {\n+    _collectionset_regions = collectionset_regions;\n@@ -53,2 +53,2 @@\n-  void set_collection_set_used_before(size_t used) {\n-    _collection_set_used_before = used;\n+  void set_collectionset_used_before(size_t used) {\n+    _collectionset_used_before = used;\n@@ -57,2 +57,2 @@\n-  void increment_collection_set_used_after(size_t used) {\n-    _collection_set_used_after += used;\n+  void increment_collectionset_used_after(size_t used) {\n+    _collectionset_used_after += used;\n@@ -73,7 +73,7 @@\n-  uint   collection_set_regions()     { return _collection_set_regions; }\n-  uint   allocation_regions()         { return _allocation_regions; }\n-  size_t collection_set_used_before() { return _collection_set_used_before; }\n-  size_t collection_set_used_after()  { return _collection_set_used_after; }\n-  size_t alloc_regions_used_before()  { return _alloc_regions_used_before; }\n-  size_t bytes_used()                 { return _bytes_used; }\n-  uint   regions_freed()              { return _regions_freed; }\n+  uint   collectionset_regions()     { return _collectionset_regions; }\n+  uint   allocation_regions()        { return _allocation_regions; }\n+  size_t collectionset_used_before() { return _collectionset_used_before; }\n+  size_t collectionset_used_after()  { return _collectionset_used_after; }\n+  size_t alloc_regions_used_before() { return _alloc_regions_used_before; }\n+  size_t bytes_used()                { return _bytes_used; }\n+  uint   regions_freed()             { return _regions_freed; }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacInfo.hpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -148,3 +148,3 @@\n-    e.set_cSetRegions(info->collection_set_regions());\n-    e.set_cSetUsedBefore(info->collection_set_used_before());\n-    e.set_cSetUsedAfter(info->collection_set_used_after());\n+    e.set_cSetRegions(info->collectionset_regions());\n+    e.set_cSetUsedBefore(info->collectionset_used_before());\n+    e.set_cSetUsedAfter(info->collectionset_used_after());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Trace.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-  evacuation_info->set_collection_set_regions(collection_set()->region_length() +\n+  evacuation_info->set_collectionset_regions(collection_set()->region_length() +\n@@ -1023,1 +1023,1 @@\n-  evacuation_info->set_collection_set_used_before(collection_set()->bytes_used_before());\n+  evacuation_info->set_collectionset_used_before(collection_set()->bytes_used_before());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -468,1 +468,1 @@\n-    evacuation_info->increment_collection_set_used_after(_after_used_bytes);\n+    evacuation_info->increment_collectionset_used_after(_after_used_bytes);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,1 +163,1 @@\n-  nonstatic_field(InstanceKlass,               _misc_flags._flags,                            u2)                                    \\\n+  nonstatic_field(InstanceKlass,               _misc_status._flags,                           u2)                                    \\\n@@ -656,2 +656,2 @@\n-  declare_constant(InstanceKlassFlags::_misc_has_nonstatic_concrete_methods)   \\\n-  declare_constant(InstanceKlassFlags::_misc_declares_nonstatic_concrete_methods) \\\n+  declare_constant(InstanceKlassMiscStatus::_misc_has_nonstatic_concrete_methods)   \\\n+  declare_constant(InstanceKlassMiscStatus::_misc_declares_nonstatic_concrete_methods) \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-#include \"oops\/instanceKlassFlags.hpp\"\n+#include \"oops\/instanceKlassMiscStatus.hpp\"\n@@ -226,1 +226,1 @@\n-  \/\/ _misc_flags right now.\n+  \/\/ _misc_status right now.\n@@ -234,1 +234,1 @@\n-  InstanceKlassFlags _misc_flags;\n+  InstanceKlassMiscStatus _misc_status;\n@@ -318,3 +318,3 @@\n-  bool is_shared_boot_class() const { return _misc_flags.is_shared_boot_class(); }\n-  bool is_shared_platform_class() const { return _misc_flags.is_shared_platform_class(); }\n-  bool is_shared_app_class() const {  return _misc_flags.is_shared_app_class(); }\n+  bool is_shared_boot_class() const { return _misc_status.is_shared_boot_class(); }\n+  bool is_shared_platform_class() const { return _misc_status.is_shared_platform_class(); }\n+  bool is_shared_app_class() const {  return _misc_status.is_shared_app_class(); }\n@@ -322,1 +322,1 @@\n-  bool is_shared_unregistered_class() const { return _misc_flags.is_shared_unregistered_class(); }\n+  bool is_shared_unregistered_class() const { return _misc_status.is_shared_unregistered_class(); }\n@@ -327,1 +327,1 @@\n-  bool shared_loading_failed() const { return _misc_flags.shared_loading_failed(); }\n+  bool shared_loading_failed() const { return _misc_status.shared_loading_failed(); }\n@@ -329,1 +329,1 @@\n-  void set_shared_loading_failed() { _misc_flags.set_shared_loading_failed(true); }\n+  void set_shared_loading_failed() { _misc_status.set_shared_loading_failed(true); }\n@@ -332,2 +332,2 @@\n-  void set_shared_class_loader_type(s2 loader_type) { _misc_flags.set_shared_class_loader_type(loader_type); }\n-  void assign_class_loader_type() { _misc_flags.assign_class_loader_type(_class_loader_data); }\n+  void set_shared_class_loader_type(s2 loader_type) { _misc_status.set_shared_class_loader_type(loader_type); }\n+  void assign_class_loader_type() { _misc_status.assign_class_loader_type(_class_loader_data); }\n@@ -336,2 +336,2 @@\n-  bool has_nonstatic_fields() const        { return _misc_flags.has_nonstatic_fields(); }\n-  void set_has_nonstatic_fields(bool b)    { _misc_flags.set_has_nonstatic_fields(b); }\n+  bool has_nonstatic_fields() const        { return _misc_status.has_nonstatic_fields(); }\n+  void set_has_nonstatic_fields(bool b)    { _misc_status.set_has_nonstatic_fields(b); }\n@@ -339,2 +339,2 @@\n-  bool has_localvariable_table() const     { return _misc_flags.has_localvariable_table(); }\n-  void set_has_localvariable_table(bool b) { _misc_flags.set_has_localvariable_table(b); }\n+  bool has_localvariable_table() const     { return _misc_status.has_localvariable_table(); }\n+  void set_has_localvariable_table(bool b) { _misc_status.set_has_localvariable_table(b); }\n@@ -517,1 +517,1 @@\n-  bool is_rewritten() const                { return _misc_flags.rewritten(); }\n+  bool is_rewritten() const                { return _misc_status.rewritten(); }\n@@ -538,2 +538,2 @@\n-  bool should_verify_class() const         { return _misc_flags.should_verify_class(); }\n-  void set_should_verify_class(bool value) { _misc_flags.set_should_verify_class(value); }\n+  bool should_verify_class() const         { return _misc_status.should_verify_class(); }\n+  void set_should_verify_class(bool value) { _misc_status.set_should_verify_class(value); }\n@@ -655,2 +655,2 @@\n-  bool is_contended() const                { return _misc_flags.is_contended(); }\n-  void set_is_contended(bool value)        { _misc_flags.set_is_contended(value); }\n+  bool is_contended() const                { return _misc_status.is_contended(); }\n+  void set_is_contended(bool value)        { _misc_status.set_is_contended(value); }\n@@ -685,2 +685,2 @@\n-  bool has_contended_annotations() const { return _misc_flags.has_contended_annotations(); }\n-  void set_has_contended_annotations(bool value)  { _misc_flags.set_has_contended_annotations(value); }\n+  bool has_contended_annotations() const { return _misc_status.has_contended_annotations(); }\n+  void set_has_contended_annotations(bool value)  { _misc_status.set_has_contended_annotations(value); }\n@@ -721,2 +721,2 @@\n-  bool has_been_redefined() const { return _misc_flags.has_been_redefined(); }\n-  void set_has_been_redefined() { _misc_flags.set_has_been_redefined(true); }\n+  bool has_been_redefined() const { return _misc_status.has_been_redefined(); }\n+  void set_has_been_redefined() { _misc_status.set_has_been_redefined(true); }\n@@ -724,2 +724,2 @@\n-  bool is_scratch_class() const { return _misc_flags.is_scratch_class(); }\n-  void set_is_scratch_class() { _misc_flags.set_is_scratch_class(true); }\n+  bool is_scratch_class() const { return _misc_status.is_scratch_class(); }\n+  void set_is_scratch_class() { _misc_status.set_is_scratch_class(true); }\n@@ -781,2 +781,2 @@\n-  bool has_nonstatic_concrete_methods() const { return _misc_flags.has_nonstatic_concrete_methods(); }\n-  void set_has_nonstatic_concrete_methods(bool b) { _misc_flags.set_has_nonstatic_concrete_methods(b); }\n+  bool has_nonstatic_concrete_methods() const { return _misc_status.has_nonstatic_concrete_methods(); }\n+  void set_has_nonstatic_concrete_methods(bool b) { _misc_status.set_has_nonstatic_concrete_methods(b); }\n@@ -784,2 +784,2 @@\n-  bool declares_nonstatic_concrete_methods() const { return _misc_flags.declares_nonstatic_concrete_methods(); }\n-  void set_declares_nonstatic_concrete_methods(bool b) { _misc_flags.set_declares_nonstatic_concrete_methods(b); }\n+  bool declares_nonstatic_concrete_methods() const { return _misc_status.declares_nonstatic_concrete_methods(); }\n+  void set_declares_nonstatic_concrete_methods(bool b) { _misc_status.set_declares_nonstatic_concrete_methods(b); }\n@@ -1079,1 +1079,1 @@\n-  void set_rewritten()                  { _misc_flags.set_rewritten(true); }\n+  void set_rewritten()                  { _misc_status.set_rewritten(true); }\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -1,69 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"classfile\/classLoader.hpp\"\n-#include \"classfile\/classLoaderData.inline.hpp\"\n-#include \"oops\/instanceKlassFlags.hpp\"\n-#include \"runtime\/safepoint.hpp\"\n-#include \"utilities\/macros.hpp\"\n-\n-#if INCLUDE_CDS\n-void InstanceKlassFlags::set_shared_class_loader_type(s2 loader_type) {\n-  switch (loader_type) {\n-  case ClassLoader::BOOT_LOADER:\n-    _flags |= _misc_is_shared_boot_class;\n-    break;\n-  case ClassLoader::PLATFORM_LOADER:\n-    _flags |= _misc_is_shared_platform_class;\n-    break;\n-  case ClassLoader::APP_LOADER:\n-    _flags |= _misc_is_shared_app_class;\n-    break;\n-  default:\n-    ShouldNotReachHere();\n-    break;\n-  }\n-}\n-\n-void InstanceKlassFlags::assign_class_loader_type(const ClassLoaderData* cld) {\n-  if (cld->is_boot_class_loader_data()) {\n-    set_shared_class_loader_type(ClassLoader::BOOT_LOADER);\n-  }\n-  else if (cld->is_platform_class_loader_data()) {\n-    set_shared_class_loader_type(ClassLoader::PLATFORM_LOADER);\n-  }\n-  else if (cld->is_system_class_loader_data()) {\n-    set_shared_class_loader_type(ClassLoader::APP_LOADER);\n-  }\n-}\n-#endif \/\/ INCLUDE_CDS\n-\n-#ifdef ASSERT\n-void InstanceKlassFlags::assert_is_safe(bool set) {\n-  \/\/ Setting a flag is safe if it's set once or at a safepoint. RedefineClasses can set or\n-  \/\/ reset flags at a safepoint.\n-  assert(!set || SafepointSynchronize::is_at_safepoint(), \"set once or at safepoint\");\n-}\n-#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.cpp","additions":0,"deletions":69,"binary":false,"changes":69,"status":"deleted"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"classfile\/classLoader.hpp\"\n+#include \"classfile\/classLoaderData.inline.hpp\"\n+#include \"oops\/instanceKlassMiscStatus.hpp\"\n+#include \"runtime\/safepoint.hpp\"\n+#include \"utilities\/macros.hpp\"\n+\n+#if INCLUDE_CDS\n+void InstanceKlassMiscStatus::set_shared_class_loader_type(s2 loader_type) {\n+  switch (loader_type) {\n+  case ClassLoader::BOOT_LOADER:\n+    _flags |= _misc_is_shared_boot_class;\n+    break;\n+  case ClassLoader::PLATFORM_LOADER:\n+    _flags |= _misc_is_shared_platform_class;\n+    break;\n+  case ClassLoader::APP_LOADER:\n+    _flags |= _misc_is_shared_app_class;\n+    break;\n+  default:\n+    ShouldNotReachHere();\n+    break;\n+  }\n+}\n+\n+void InstanceKlassMiscStatus::assign_class_loader_type(const ClassLoaderData* cld) {\n+  if (cld->is_boot_class_loader_data()) {\n+    set_shared_class_loader_type(ClassLoader::BOOT_LOADER);\n+  }\n+  else if (cld->is_platform_class_loader_data()) {\n+    set_shared_class_loader_type(ClassLoader::PLATFORM_LOADER);\n+  }\n+  else if (cld->is_system_class_loader_data()) {\n+    set_shared_class_loader_type(ClassLoader::APP_LOADER);\n+  }\n+}\n+#endif \/\/ INCLUDE_CDS\n+\n+#ifdef ASSERT\n+void InstanceKlassMiscStatus::assert_is_safe(bool set) {\n+  \/\/ Setting a flag is safe if it's set once or at a safepoint. RedefineClasses can set or\n+  \/\/ reset flags at a safepoint.\n+  assert(!set || SafepointSynchronize::is_at_safepoint(), \"set once or at safepoint\");\n+}\n+#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/oops\/instanceKlassMiscStatus.cpp","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_OOPS_INSTANCEKLASSFLAGS_HPP\n-#define SHARE_OOPS_INSTANCEKLASSFLAGS_HPP\n+#ifndef SHARE_OOPS_INSTANCEKLASSMISCSTATUS_HPP\n+#define SHARE_OOPS_INSTANCEKLASSMISCSTATUS_HPP\n@@ -30,1 +30,1 @@\n-class InstanceKlassFlags {\n+class InstanceKlassMiscStatus {\n@@ -66,1 +66,1 @@\n-  InstanceKlassFlags() : _flags(0) {}\n+  InstanceKlassMiscStatus() : _flags(0) {}\n@@ -92,1 +92,1 @@\n-#endif \/\/ SHARE_OOPS_INSTANCEKLASSFLAGS_HPP\n+#endif \/\/ SHARE_OOPS_INSTANCEKLASSMISCSTATUS_HPP\n","filename":"src\/hotspot\/share\/oops\/instanceKlassMiscStatus.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.hpp","status":"renamed"},{"patch":"@@ -3697,6 +3697,1 @@\n-\n-  \/\/ We need to pin the exact limit to prevent it from floating above the zero trip guard.\n-  Node* cast_ii = ConstraintCastNode::make(cl->in(LoopNode::EntryControl), exact_limit, phase->_igvn.type(exact_limit), ConstraintCastNode::UnconditionalDependency, T_INT);\n-  phase->register_new_node(cast_ii, cl->in(LoopNode::EntryControl));\n-\n-  Node* final_iv = new SubINode(cast_ii, cl->stride());\n+  Node* final_iv = new SubINode(exact_limit, cl->stride());\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -278,1 +278,1 @@\n-    if (sp - size < thread->stack_overflow_state()->shadow_zone_safe_limit()) {\n+    if (sp - size < thread->stack_overflow_state()->stack_overflow_limit()) {\n@@ -1263,1 +1263,1 @@\n-  if (os::current_stack_pointer() < t->stack_overflow_state()->shadow_zone_safe_limit()) {\n+  if (os::current_stack_pointer() < t->stack_overflow_state()->stack_overflow_limit()) {\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -477,1 +477,1 @@\n-  int64_t amount_diff = diff_in_current_scale(current_amount, early_amount);\n+  long amount_diff = diff_in_current_scale(current_amount, early_amount);\n@@ -479,1 +479,1 @@\n-    out->print(\" \" INT64_PLUS_FORMAT \"%s\", amount_diff, scale);\n+    out->print(\" %+ld%s\", amount_diff, scale);\n@@ -496,1 +496,1 @@\n-    out->print(\" \" INT64_PLUS_FORMAT \"d\", diff_in_current_scale(current_amount, early_amount));\n+    out->print(\" %+ld\", diff_in_current_scale(current_amount, early_amount));\n@@ -511,1 +511,1 @@\n-  int64_t reserved_diff = diff_in_current_scale(current_reserved, early_reserved);\n+  long reserved_diff = diff_in_current_scale(current_reserved, early_reserved);\n@@ -513,1 +513,1 @@\n-    out->print(\" \" INT64_PLUS_FORMAT \"%s\", reserved_diff, scale);\n+    out->print(\" %+ld%s\", reserved_diff, scale);\n@@ -517,1 +517,1 @@\n-  int64_t committed_diff = diff_in_current_scale(current_committed, early_committed);\n+  long committed_diff = diff_in_current_scale(current_committed, early_committed);\n@@ -519,1 +519,1 @@\n-    out->print(\" \" INT64_PLUS_FORMAT \"%s\", committed_diff, scale);\n+    out->print(\" %+ld%s\", committed_diff, scale);\n@@ -663,2 +663,2 @@\n-      int64_t overhead_diff = diff_in_current_scale(_current_baseline.malloc_tracking_overhead(),\n-                                                    _early_baseline.malloc_tracking_overhead());\n+      long overhead_diff = diff_in_current_scale(_current_baseline.malloc_tracking_overhead(),\n+           _early_baseline.malloc_tracking_overhead());\n@@ -666,1 +666,1 @@\n-        out->print(\" \" INT64_PLUS_FORMAT \"%s\", overhead_diff, scale);\n+        out->print(\" %+ld%s\", overhead_diff, scale);\n@@ -698,2 +698,2 @@\n-  int64_t diff_used = diff_in_current_scale(current_stats.used(),\n-                                            early_stats.used());\n+  long diff_used = diff_in_current_scale(current_stats.used(),\n+                                         early_stats.used());\n@@ -703,1 +703,1 @@\n-  int64_t diff_waste = diff_in_current_scale(current_waste, early_waste);\n+  long diff_waste = diff_in_current_scale(current_waste, early_waste);\n@@ -709,1 +709,1 @@\n-    out->print(\" \" INT64_PLUS_FORMAT \"%s\", diff_used, scale);\n+    out->print(\" %+ld%s\", diff_used, scale);\n@@ -719,1 +719,1 @@\n-    out->print(\" \" INT64_PLUS_FORMAT \"%s\", diff_waste, scale);\n+    out->print(\" %+ld%s\", diff_waste, scale);\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,31 +74,5 @@\n-  \/\/ We use int64_t instead of ssize_t because on 32-bit it allows us to express deltas larger than 2 gb.\n-  \/\/ On 64-bit we never expect memory sizes larger than INT64_MAX.\n-  int64_t diff_in_current_scale(size_t s1, size_t s2) const {\n-    assert(_scale != 0, \"wrong scale\");\n-\n-    assert(s1 < INT64_MAX, \"exceeded possible memory limits\");\n-    assert(s2 < INT64_MAX, \"exceeded possible memory limits\");\n-\n-    bool is_negative = false;\n-    if (s1 < s2) {\n-      is_negative = true;\n-      swap(s1, s2);\n-    }\n-\n-    size_t amount = s1 - s2;\n-    \/\/ We can split amount into p + q, where\n-    \/\/     q = amount % _scale\n-    \/\/ and p = amount - q   (which is also (amount \/ _scale) * _scale).\n-    \/\/ Then use\n-    \/\/   size_t scaled = (p + q + _scale\/2) \/ _scale;\n-    \/\/ =>\n-    \/\/   size_t scaled = (p \/ _scale) + ((q + _scale\/2) \/ _scale);\n-    \/\/ The lefthand side of the addition is exact.\n-    \/\/ The righthand side is 0 if q <= (_scale - 1)\/2, else 1. (The -1 is to account for odd _scale values.)\n-    size_t scaled = (amount \/ _scale);\n-    if ((amount % _scale) > (_scale - 1)\/2) {\n-      scaled += 1;\n-    }\n-\n-    int64_t result = static_cast<int64_t>(scaled);\n-    return is_negative ? -result : result;\n+  inline long diff_in_current_scale(size_t s1, size_t s2) const {\n+    long amount = (long)(s1 - s2);\n+    long scale = (long)_scale;\n+    amount = (amount > 0) ? (amount + scale \/ 2) : (amount - scale \/ 2);\n+    return amount \/ scale;\n","filename":"src\/hotspot\/share\/services\/memReporter.hpp","additions":6,"deletions":32,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -124,1 +124,0 @@\n-#define INT64_PLUS_FORMAT        \"%+\"         PRId64\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -121,2 +121,2 @@\n-                       ? new VarHandleReferences.FieldStaticReadOnly(refc, base, foffset, type)\n-                       : new VarHandleReferences.FieldStaticReadWrite(refc, base, foffset, type));\n+                       ? new VarHandleReferences.FieldStaticReadOnly(base, foffset, type)\n+                       : new VarHandleReferences.FieldStaticReadWrite(base, foffset, type));\n@@ -126,2 +126,2 @@\n-                       ? new VarHandleBooleans.FieldStaticReadOnly(refc, base, foffset)\n-                       : new VarHandleBooleans.FieldStaticReadWrite(refc, base, foffset));\n+                       ? new VarHandleBooleans.FieldStaticReadOnly(base, foffset)\n+                       : new VarHandleBooleans.FieldStaticReadWrite(base, foffset));\n@@ -131,2 +131,2 @@\n-                       ? new VarHandleBytes.FieldStaticReadOnly(refc, base, foffset)\n-                       : new VarHandleBytes.FieldStaticReadWrite(refc, base, foffset));\n+                       ? new VarHandleBytes.FieldStaticReadOnly(base, foffset)\n+                       : new VarHandleBytes.FieldStaticReadWrite(base, foffset));\n@@ -136,2 +136,2 @@\n-                       ? new VarHandleShorts.FieldStaticReadOnly(refc, base, foffset)\n-                       : new VarHandleShorts.FieldStaticReadWrite(refc, base, foffset));\n+                       ? new VarHandleShorts.FieldStaticReadOnly(base, foffset)\n+                       : new VarHandleShorts.FieldStaticReadWrite(base, foffset));\n@@ -141,2 +141,2 @@\n-                       ? new VarHandleChars.FieldStaticReadOnly(refc, base, foffset)\n-                       : new VarHandleChars.FieldStaticReadWrite(refc, base, foffset));\n+                       ? new VarHandleChars.FieldStaticReadOnly(base, foffset)\n+                       : new VarHandleChars.FieldStaticReadWrite(base, foffset));\n@@ -146,2 +146,2 @@\n-                       ? new VarHandleInts.FieldStaticReadOnly(refc, base, foffset)\n-                       : new VarHandleInts.FieldStaticReadWrite(refc, base, foffset));\n+                       ? new VarHandleInts.FieldStaticReadOnly(base, foffset)\n+                       : new VarHandleInts.FieldStaticReadWrite(base, foffset));\n@@ -151,2 +151,2 @@\n-                       ? new VarHandleLongs.FieldStaticReadOnly(refc, base, foffset)\n-                       : new VarHandleLongs.FieldStaticReadWrite(refc, base, foffset));\n+                       ? new VarHandleLongs.FieldStaticReadOnly(base, foffset)\n+                       : new VarHandleLongs.FieldStaticReadWrite(base, foffset));\n@@ -156,2 +156,2 @@\n-                       ? new VarHandleFloats.FieldStaticReadOnly(refc, base, foffset)\n-                       : new VarHandleFloats.FieldStaticReadWrite(refc, base, foffset));\n+                       ? new VarHandleFloats.FieldStaticReadOnly(base, foffset)\n+                       : new VarHandleFloats.FieldStaticReadWrite(base, foffset));\n@@ -161,2 +161,2 @@\n-                       ? new VarHandleDoubles.FieldStaticReadOnly(refc, base, foffset)\n-                       : new VarHandleDoubles.FieldStaticReadWrite(refc, base, foffset));\n+                       ? new VarHandleDoubles.FieldStaticReadOnly(base, foffset)\n+                       : new VarHandleDoubles.FieldStaticReadWrite(base, foffset));\n@@ -186,1 +186,1 @@\n-    static Field getStaticFieldFromBaseAndOffset(Class<?> receiverType,\n+    static Field getStaticFieldFromBaseAndOffset(Object base,\n@@ -189,0 +189,2 @@\n+        \/\/ @@@ This is a little fragile assuming the base is the class\n+        Class<?> receiverType = (Class<?>) base;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java","additions":21,"deletions":19,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -385,1 +385,0 @@\n-        final Class<?> receiverType;\n@@ -392,2 +391,2 @@\n-        FieldStaticReadOnly(Class<?> receiverType, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType}) {\n-            this(receiverType, base, fieldOffset{#if[Object]?, fieldType}, FieldStaticReadOnly.FORM, false);\n+        FieldStaticReadOnly(Object base, long fieldOffset{#if[Object]?, Class<?> fieldType}) {\n+            this(base, fieldOffset{#if[Object]?, fieldType}, FieldStaticReadOnly.FORM, false);\n@@ -396,1 +395,1 @@\n-        protected FieldStaticReadOnly(Class<?> receiverType, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType},\n+        protected FieldStaticReadOnly(Object base, long fieldOffset{#if[Object]?, Class<?> fieldType},\n@@ -399,1 +398,0 @@\n-            this.receiverType = receiverType;\n@@ -411,1 +409,1 @@\n-                : new FieldStaticReadOnly(receiverType, base, fieldOffset{#if[Object]?, fieldType}, vform, true);\n+                : new FieldStaticReadOnly(base, fieldOffset{#if[Object]?, fieldType}, vform, true);\n@@ -418,1 +416,1 @@\n-                : new FieldStaticReadOnly(receiverType, base, fieldOffset{#if[Object]?, fieldType}, vform, false);\n+                : new FieldStaticReadOnly(base, fieldOffset{#if[Object]?, fieldType}, vform, false);\n@@ -429,1 +427,1 @@\n-                receiverType, fieldOffset, {#if[Object]?fieldType:$type$.class});\n+                base, fieldOffset, {#if[Object]?fieldType:$type$.class});\n@@ -474,2 +472,2 @@\n-        FieldStaticReadWrite(Class<?> receiverType, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType}) {\n-            this(receiverType, base, fieldOffset{#if[Object]?, fieldType}, false);\n+        FieldStaticReadWrite(Object base, long fieldOffset{#if[Object]?, Class<?> fieldType}) {\n+            this(base, fieldOffset{#if[Object]?, fieldType}, false);\n@@ -478,1 +476,1 @@\n-        private FieldStaticReadWrite(Class<?> receiverType, Object base, long fieldOffset{#if[Object]?, Class<?> fieldType},\n+        private FieldStaticReadWrite(Object base, long fieldOffset{#if[Object]?, Class<?> fieldType},\n@@ -480,1 +478,1 @@\n-            super(receiverType, base, fieldOffset{#if[Object]?, fieldType}, FieldStaticReadWrite.FORM, exact);\n+            super(base, fieldOffset{#if[Object]?, fieldType}, FieldStaticReadWrite.FORM, exact);\n@@ -487,1 +485,1 @@\n-                : new FieldStaticReadWrite(receiverType, base, fieldOffset{#if[Object]?, fieldType}, true);\n+                : new FieldStaticReadWrite(base, fieldOffset{#if[Object]?, fieldType}, true);\n@@ -494,1 +492,1 @@\n-                : new FieldStaticReadWrite(receiverType, base, fieldOffset{#if[Object]?, fieldType}, false);\n+                : new FieldStaticReadWrite(base, fieldOffset{#if[Object]?, fieldType}, false);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandle.java.template","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -271,2 +271,0 @@\n-     * @since 21\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ClassFileFormatVersion.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,9 +79,11 @@\n- * {@snippet lang=java :\n- * String testString = \"This is a test\";\n- * Collator col = Collator.getInstance();\n- * if (col instanceof RuleBasedCollator ruleBasedCollator) {\n- *     CollationElementIterator collationElementIterator = ruleBasedCollator.getCollationElementIterator(testString);\n- *     int primaryOrder = CollationElementIterator.primaryOrder(collationElementIterator.next());\n- *         \\u22ee\n- * }\n- * }\n+ * <pre>\n+ *\n+ *  String testString = \"This is a test\";\n+ *  Collator col = Collator.getInstance();\n+ *  if (col instanceof RuleBasedCollator) {\n+ *      RuleBasedCollator ruleBasedCollator = (RuleBasedCollator)col;\n+ *      CollationElementIterator collationElementIterator = ruleBasedCollator.getCollationElementIterator(testString);\n+ *      int primaryOrder = CollationElementIterator.primaryOrder(collationElementIterator.next());\n+ *          :\n+ *  }\n+ * <\/pre>\n","filename":"src\/java.base\/share\/classes\/java\/text\/CollationElementIterator.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n- * {@snippet lang=java :\n+ * <pre>{@code\n@@ -78,1 +78,1 @@\n- * if (myCollator.compare(\"abc\", \"ABC\") < 0) {\n+ * if( myCollator.compare(\"abc\", \"ABC\") < 0 )\n@@ -80,1 +80,1 @@\n- * } else {\n+ * else\n@@ -82,2 +82,1 @@\n- * }\n- * }\n+ * }<\/pre>\n@@ -98,2 +97,2 @@\n- * {@snippet lang=java :\n- * \/\/ Get the Collator for US English and set its strength to PRIMARY\n+ * <pre>\n+ * \/\/Get the Collator for US English and set its strength to PRIMARY\n@@ -102,1 +101,1 @@\n- * if (usCollator.compare(\"abc\", \"ABC\") == 0) {\n+ * if( usCollator.compare(\"abc\", \"ABC\") == 0 ) {\n@@ -105,1 +104,1 @@\n- * }\n+ * <\/pre>\n","filename":"src\/java.base\/share\/classes\/java\/text\/Collator.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -593,2 +593,1 @@\n-     * this class are not associated with any map nor with any\n-     * map's entry-set view.\n+     * this class are not associated with any map's entry-set view.\n@@ -734,2 +733,1 @@\n-     * this class are not associated with any map nor with any map's\n-     * entry-set view.\n+     * this class are not associated with any map's entry-set view.\n","filename":"src\/java.base\/share\/classes\/java\/util\/AbstractMap.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -393,9 +393,11 @@\n-     * An Entry maintains a connection to its underlying map if the Entry was obtained by\n-     * iterating the {@link Map#entrySet} view of a map, either explicitly by using an\n-     * {@link Iterator} or implicitly via the enhanced {@code for} statement. This connection\n-     * to the backing map is valid <i>only<\/i> during iteration of the entry-set view. During\n-     * the iteration, if supported by the backing map, a change to an Entry's value via\n-     * the {@link Map.Entry#setValue setValue} method will be visible in the backing map.\n-     * The behavior of such an Entry is undefined outside of iteration of the map's entry-set\n-     * view. It is also undefined if the backing map has been modified after the Entry was\n-     * returned by the iterator, except through the {@code setValue} method. In addition,\n+     * Instances of the {@code Map.Entry} interface may be obtained by iterating\n+     * the entry-set view of a map. These instances maintain a connection to the\n+     * original, backing map. This connection to the backing map is valid\n+     * <i>only<\/i> for the duration of iteration over the entry-set view.\n+     * During iteration of the entry-set view, if supported by the backing map,\n+     * a change to a {@code Map.Entry}'s value via the\n+     * {@link Map.Entry#setValue setValue} method will be visible in the backing map.\n+     * The behavior of such a {@code Map.Entry} instance is undefined outside of\n+     * iteration of the map's entry-set view. It is also undefined if the backing\n+     * map has been modified after the {@code Map.Entry} was returned by the\n+     * iterator, except through the {@code Map.Entry.setValue} method. In particular,\n@@ -403,24 +405,1 @@\n-     * visible in the corresponding Entry of the entry-set view.\n-     * <p>\n-     * An Entry may also be obtained from a map's entry-set view by other means, for\n-     * example, using the\n-     * {@link Set#parallelStream parallelStream},\n-     * {@link Set#stream stream},\n-     * {@link Set#spliterator spliterator} methods,\n-     * any of the\n-     * {@link Set#toArray toArray} overloads,\n-     * or by copying the entry-set view into another collection. It is unspecified whether\n-     * the obtained Entry instances are connected to the underlying map, whether changes\n-     * to such an Entry will affect the underlying the map and vice-versa, and whether\n-     * such an Entry supports the optional {@link Map.Entry#setValue setValue} method.\n-     * <p>\n-     * In addition, an Entry may be obtained directly from a map, for example via calls\n-     * to methods directly on the {@link NavigableMap} interface. An entry thus obtained\n-     * is generally not connected to the map and is an unmodifiable snapshot of the mapping\n-     * as of the time of the call. Such an Entry also does not generally support the\n-     * {@code setValue} method.\n-     * <p>\n-     * An Entry obtained by direct construction of the {@link AbstractMap.SimpleEntry}\n-     * or {@link AbstractMap.SimpleImmutableEntry} classes or from a call to the\n-     * {@link Map#entry Map.entry} or {@link Map.Entry#copyOf Map.Entry.copyOf} methods\n-     * is not connected to any map.\n+     * visible in the corresponding {@code Map.Entry} element of the entry-set view.\n@@ -429,6 +408,4 @@\n-     * The exact behavior of Entry instances obtained from a map's entry-set view other than\n-     * via iteration varies across different map implementations; some are connected to the\n-     * backing map, and some are not. To guarantee that an Entry is disconnected from its\n-     * backing map, use the {@link Map.Entry#copyOf copyOf} method. For example, the following\n-     * creates a snapshot of a map's entries that is guaranteed not to change even if the\n-     * original map is modified:\n+     * It is possible to create a {@code Map.Entry} instance that is disconnected\n+     * from a backing map by using the {@link Map.Entry#copyOf copyOf} method. For example,\n+     * the following creates a snapshot of a map's entries that is guaranteed not to\n+     * change even if the original map is modified:\n@@ -607,1 +584,1 @@\n-         * The {@code copyOf} method may be used to create a {@code Map.Entry} instance,\n+         * The {@code copyOf}  method may be used to create a {@code Map.Entry} instance,\n","filename":"src\/java.base\/share\/classes\/java\/util\/Map.java","additions":17,"deletions":40,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -69,12 +69,6 @@\n- * <p>The methods\n- * {@link #ceilingEntry},\n- * {@link #firstEntry},\n- * {@link #floorEntry},\n- * {@link #higherEntry},\n- * {@link #lastEntry},\n- * {@link #lowerEntry},\n- * {@link #pollFirstEntry}, and\n- * {@link #pollLastEntry}\n- * return {@link Map.Entry} instances that represent snapshots of mappings as\n- * of the time of the call. They do <em>not<\/em> support mutation of the\n- * underlying map via the optional {@link Map.Entry#setValue setValue} method.\n+ * <p>Implementations of entry-returning methods are expected to\n+ * return {@code Map.Entry} pairs representing snapshots of mappings\n+ * at the time they were produced, and thus generally do <em>not<\/em>\n+ * support the optional {@code Entry.setValue} method. Note however\n+ * that it is possible to change mappings in the associated map using\n+ * method {@code put}.\n","filename":"src\/java.base\/share\/classes\/java\/util\/NavigableMap.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -89,12 +89,5 @@\n- * <p>The methods\n- * {@link #ceilingEntry},\n- * {@link #firstEntry},\n- * {@link #floorEntry},\n- * {@link #higherEntry},\n- * {@link #lastEntry},\n- * {@link #lowerEntry},\n- * {@link #pollFirstEntry}, and\n- * {@link #pollLastEntry}\n- * return {@link Map.Entry} instances that represent snapshots of mappings as\n- * of the time of the call. They do <em>not<\/em> support mutation of the\n- * underlying map via the optional {@link Map.Entry#setValue setValue} method.\n+ * <p>All {@code Map.Entry} pairs returned by methods in this class\n+ * and its views represent snapshots of mappings at the time they were\n+ * produced. They do <strong>not<\/strong> support the {@code Entry.setValue}\n+ * method. (Note however that it is possible to change mappings in the\n+ * associated map using {@code put}.)\n@@ -429,2 +422,1 @@\n-     * key; if no such entry exists (i.e., the least key in the Tree is greater\n-     * than the specified key), returns {@code null}.\n+     * key; if no such entry exists, returns {@code null}.\n@@ -461,3 +453,4 @@\n-     * Returns the entry for the least key greater than the specified key; if\n-     * no such entry exists (i.e., the greatest key in the Tree is less than\n-     * or equal to the specified key), returns {@code null}.\n+     * Gets the entry for the least key greater than the specified\n+     * key; if no such entry exists, returns the entry for the least\n+     * key greater than the specified key; if no such entry exists\n+     * returns {@code null}.\n@@ -494,1 +487,1 @@\n-     * or equal to the specified key), returns {@code null}.\n+     * the specified key), returns {@code null}.\n","filename":"src\/java.base\/share\/classes\/java\/util\/TreeMap.java","additions":11,"deletions":18,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,10 @@\n-        return create(e, String.join(\": \", e.getMessage(), addr.toString()));\n+        int port = addr.getPort();\n+        String host = addr.getHostString();\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(e.getMessage());\n+        sb.append(\": \");\n+        sb.append(host);\n+        sb.append(':');\n+        sb.append(Integer.toString(port));\n+        String enhancedMsg = sb.toString();\n+        return create(e, enhancedMsg);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/SocketExceptions.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -130,2 +130,0 @@\n-        ByteOrder currOrder = buf.order();\n-        buf.order(ByteOrder.LITTLE_ENDIAN);\n@@ -139,1 +137,0 @@\n-        buf.order(currOrder);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/IntegerPolynomial1305.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -239,1 +239,1 @@\n-header extends java\/lang\/Object implements java\/lang\/foreign\/Linker$Option nestHost java\/lang\/foreign\/Linker sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+header extends java\/lang\/Object implements java\/lang\/foreign\/Linker$Option nestHost java\/lang\/foreign\/Linker sealed true flags 601\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.base-K.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-    final int instanceKlassMiscFlagsOffset = getFieldOffset(\"InstanceKlass::_misc_flags._flags\", Integer.class, \"u2\");\n+    final int instanceKlassMiscFlagsOffset = getFieldOffset(\"InstanceKlass::_misc_status._flags\", Integer.class, \"u2\");\n@@ -143,2 +143,2 @@\n-    final int jvmMiscFlagsHasDefaultMethods = getConstant(\"InstanceKlassFlags::_misc_has_nonstatic_concrete_methods\", Integer.class);\n-    final int jvmMiscFlagsDeclaresDefaultMethods = getConstant(\"InstanceKlassFlags::_misc_declares_nonstatic_concrete_methods\", Integer.class);\n+    final int jvmMiscFlagsHasDefaultMethods = getConstant(\"InstanceKlassMiscStatus::_misc_has_nonstatic_concrete_methods\", Integer.class);\n+    final int jvmMiscFlagsDeclaresDefaultMethods = getConstant(\"InstanceKlassMiscStatus::_misc_declares_nonstatic_concrete_methods\", Integer.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfig.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,5 +48,6 @@\n-import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.LINK_TYPE_PARAMS;\n-import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS;\n-import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.PLAIN;\n-import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.SHOW_PREVIEW;\n-import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.EXECUTABLE_MEMBER_PARAM;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.MEMBER;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.MEMBER_TYPE_PARAMS;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.RECEIVER_TYPE;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.THROWS_TYPE;\n@@ -75,3 +76,1 @@\n-        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration, LINK_TYPE_PARAMS_AND_BOUNDS, member);\n-        linkInfo.addLineBreaksInTypeParameters = true;\n-        linkInfo.showTypeParameterAnnotations = true;\n+        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration, MEMBER_TYPE_PARAMS, member);\n@@ -95,1 +94,1 @@\n-        return writer.getDocLink(SHOW_PREVIEW, utils.getEnclosingTypeElement(member),\n+        return writer.getDocLink(MEMBER_DEPRECATED_PREVIEW, utils.getEnclosingTypeElement(member),\n@@ -111,1 +110,1 @@\n-        target.add(writer.getDocLink(PLAIN, te, member, name(member)));\n+        target.add(writer.getDocLink(MEMBER, te, member, name(member)));\n@@ -124,4 +123,2 @@\n-        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration, LINK_TYPE_PARAMS,\n-                paramType).varargs(isVarArg);\n-        linkInfo.showTypeParameterAnnotations = true;\n-        Content link = writer.getLink(linkInfo);\n+        Content link = writer.getLink(new HtmlLinkInfo(configuration, EXECUTABLE_MEMBER_PARAM,\n+                paramType).varargs(isVarArg));\n@@ -145,1 +142,1 @@\n-        var info = new HtmlLinkInfo(configuration, SHOW_TYPE_PARAMS_AND_BOUNDS, rcvrType);\n+        var info = new HtmlLinkInfo(configuration, RECEIVER_TYPE, rcvrType);\n@@ -276,1 +273,1 @@\n-            Content link = writer.getLink(new HtmlLinkInfo(configuration, PLAIN, t));\n+            Content link = writer.getLink(new HtmlLinkInfo(configuration, THROWS_TYPE, t));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractExecutableMemberWriter.java","additions":14,"deletions":17,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-        addSummaryLink(HtmlLinkInfo.Kind.PLAIN, typeElement, member, content);\n+        addSummaryLink(HtmlLinkInfo.Kind.MEMBER, typeElement, member, content);\n@@ -215,1 +215,1 @@\n-                            HtmlLinkInfo.Kind.LINK_TYPE_PARAMS, type)));\n+                            HtmlLinkInfo.Kind.SUMMARY_RETURN_TYPE, type)));\n@@ -326,2 +326,2 @@\n-                    ? HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS\n-                    : HtmlLinkInfo.Kind.PLAIN,\n+                    ? HtmlLinkInfo.Kind.CLASS_USE\n+                    : HtmlLinkInfo.Kind.MEMBER,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-                        addPreQualifiedClassLink(HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS, intf, content);\n+                        addPreQualifiedClassLink(HtmlLinkInfo.Kind.TREE, intf, content);\n@@ -162,1 +162,1 @@\n-        addPreQualifiedStrongClassLink(HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS, typeElement, content);\n+        addPreQualifiedStrongClassLink(HtmlLinkInfo.Kind.TREE, typeElement, content);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractTreeWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,1 +152,1 @@\n-                configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, klass));\n+                configuration, HtmlLinkInfo.Kind.INDEX, klass));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -251,1 +251,1 @@\n-        return writer.getDocLink(HtmlLinkInfo.Kind.SHOW_PREVIEW, member, name);\n+        return writer.getDocLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeMemberWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,1 +244,1 @@\n-                        HtmlLinkInfo.Kind.PLAIN, typeElement)));\n+                        HtmlLinkInfo.Kind.CLASS_USE_HEADER, typeElement)));\n@@ -269,1 +269,1 @@\n-                        HtmlLinkInfo.Kind.PLAIN, typeElement)));\n+                        HtmlLinkInfo.Kind.CLASS_USE_HEADER, typeElement)));\n@@ -294,1 +294,1 @@\n-                    getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PLAIN,\n+                    getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.CLASS_USE_HEADER,\n@@ -328,1 +328,1 @@\n-            HtmlLinkInfo.Kind.PLAIN, typeElement));\n+            HtmlLinkInfo.Kind.CLASS_USE_HEADER, typeElement));\n@@ -428,1 +428,1 @@\n-                configuration, HtmlLinkInfo.Kind.PLAIN, typeElement)\n+                configuration, HtmlLinkInfo.Kind.CLASS_USE_HEADER, typeElement)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-                HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement);\n+                HtmlLinkInfo.Kind.CLASS_HEADER, typeElement);\n@@ -243,1 +243,1 @@\n-                    new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS,\n+                    new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.TREE,\n@@ -254,1 +254,1 @@\n-                    HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS, type)\n+                    HtmlLinkInfo.Kind.CLASS_TREE_PARENT, type)\n@@ -292,1 +292,1 @@\n-                dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.PLAIN, subclasses)));\n+                dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SUBCLASSES, subclasses)));\n@@ -305,1 +305,1 @@\n-                dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS, subInterfaces)));\n+                dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SUBINTERFACES, subInterfaces)));\n@@ -325,1 +325,1 @@\n-            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.PLAIN, implcl)));\n+            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.IMPLEMENTED_CLASSES, implcl)));\n@@ -337,1 +337,1 @@\n-            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS, interfaces)));\n+            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.IMPLEMENTED_INTERFACES, interfaces)));\n@@ -351,1 +351,1 @@\n-            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS, interfaces)));\n+            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SUPER_INTERFACES, interfaces)));\n@@ -368,1 +368,1 @@\n-                dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, List.of(e))));\n+                dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.CLASS, List.of(e))));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,1 +174,1 @@\n-                    HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, typeElement)) :\n+                    HtmlLinkInfo.Kind.CONSTANT_SUMMARY, typeElement)) :\n@@ -211,1 +211,1 @@\n-                HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, member.asType()));\n+                HtmlLinkInfo.Kind.CONSTANT_SUMMARY, member.asType()));\n@@ -224,1 +224,1 @@\n-        Content nameContent = getDocLink(HtmlLinkInfo.Kind.PLAIN,\n+        Content nameContent = getDocLink(HtmlLinkInfo.Kind.CONSTANT_SUMMARY,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriterImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,1 +175,1 @@\n-        return writer.getDocLink(HtmlLinkInfo.Kind.SHOW_PREVIEW, member, name);\n+        return writer.getDocLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,1 +159,1 @@\n-                HtmlLinkInfo.Kind.PLAIN, typeElement);\n+                HtmlLinkInfo.Kind.MEMBER, typeElement);\n@@ -190,1 +190,1 @@\n-                writer.getDocLink(HtmlLinkInfo.Kind.PLAIN, typeElement, member, name(member)));\n+                writer.getDocLink(HtmlLinkInfo.Kind.MEMBER, typeElement, member, name(member)));\n@@ -201,1 +201,1 @@\n-        return writer.getDocLink(HtmlLinkInfo.Kind.SHOW_PREVIEW, member, name);\n+        return writer.getDocLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriterImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.util.Objects;\n@@ -46,0 +47,1 @@\n+import javax.lang.model.element.ElementKind;\n@@ -73,0 +75,1 @@\n+import com.sun.source.doctree.SeeTree;\n@@ -980,1 +983,1 @@\n-                .fragment(id.name())\n+                .where(id.name())\n@@ -988,1 +991,1 @@\n-                .fragment(element.getSimpleName().toString())\n+                .where(element.getSimpleName().toString())\n@@ -1695,1 +1698,1 @@\n-                                                     HtmlLinkInfo.Kind.PLAIN, annotationElement);\n+                                                     HtmlLinkInfo.Kind.ANNOTATION, annotationElement);\n@@ -1796,1 +1799,1 @@\n-                    annotation.add(getDocLink(HtmlLinkInfo.Kind.PLAIN, element, simpleName));\n+                    annotation.add(getDocLink(HtmlLinkInfo.Kind.ANNOTATION, element, simpleName));\n@@ -1886,1 +1889,1 @@\n-                                HtmlLinkInfo.Kind.PLAIN, t);\n+                                HtmlLinkInfo.Kind.ANNOTATION, t);\n@@ -1912,1 +1915,1 @@\n-                return getDocLink(HtmlLinkInfo.Kind.PLAIN, c, c.getSimpleName());\n+                return getDocLink(HtmlLinkInfo.Kind.ANNOTATION, c, c.getSimpleName());\n@@ -2189,1 +2192,1 @@\n-                .map(te -> getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, te)\n+                .map(te -> getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.CLASS, te)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-        boolean hasWhere = classLinkInfo.fragment != null && classLinkInfo.fragment.length() != 0;\n+        boolean hasWhere = classLinkInfo.where != null && classLinkInfo.where.length() != 0;\n@@ -92,2 +92,2 @@\n-        } else if (classLinkInfo.context == HtmlLinkInfo.Kind.SHOW_PREVIEW\n-                && classLinkInfo.targetMember != null && showPreview) {\n+        } else if ((classLinkInfo.context == HtmlLinkInfo.Kind.SEE_TAG || classLinkInfo.context == HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW) &&\n+                   classLinkInfo.targetMember != null && showPreview) {\n@@ -118,1 +118,1 @@\n-                                filename.fragment(classLinkInfo.fragment),\n+                                filename.fragment(classLinkInfo.where),\n@@ -132,1 +132,1 @@\n-                typeElement, classLinkInfo.fragment,\n+                typeElement, classLinkInfo.where,\n@@ -180,1 +180,1 @@\n-                    if (linkInfo.addLineBreaksInTypeParameters) {\n+                    if (((HtmlLinkInfo) linkInfo).getContext() == HtmlLinkInfo.Kind.MEMBER_TYPE_PARAMS) {\n@@ -202,2 +202,2 @@\n-        typeLinkInfo.showTypeBounds = linkInfo.showTypeBounds;\n-        typeLinkInfo.linkTypeParameters = linkInfo.linkTypeParameters;\n+        typeLinkInfo.excludeTypeBounds = linkInfo.excludeTypeBounds;\n+        typeLinkInfo.excludeTypeParameterLinks = linkInfo.excludeTypeParameterLinks;\n@@ -205,2 +205,0 @@\n-        typeLinkInfo.addLineBreaksInTypeParameters = linkInfo.addLineBreaksInTypeParameters;\n-        typeLinkInfo.showTypeParameterAnnotations = linkInfo.showTypeParameterAnnotations;\n@@ -216,3 +214,15 @@\n-        } else if (utils.isTypeVariable(linkInfo.type) && linkInfo.showTypeParameterAnnotations) {\n-            Element element = utils.typeUtils.asElement(linkInfo.type);\n-            annotations = element.getAnnotationMirrors();\n+        } else if (utils.isTypeVariable(linkInfo.type)) {\n+            \/\/ TODO: use the context for now, and special case for Receiver_Types,\n+            \/\/ which takes the default case.\n+            switch (((HtmlLinkInfo)linkInfo).context) {\n+                case MEMBER_TYPE_PARAMS:\n+                case EXECUTABLE_MEMBER_PARAM:\n+                case CLASS_SIGNATURE:\n+                    Element element = utils.typeUtils.asElement(linkInfo.type);\n+                    annotations = element.getAnnotationMirrors();\n+                    break;\n+                default:\n+                    annotations = linkInfo.type.getAnnotationMirrors();\n+                    break;\n+            }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":24,"deletions":14,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n- * HTML-specific information about a link.\n@@ -47,0 +46,2 @@\n+        DEFAULT,\n+\n@@ -48,1 +49,1 @@\n-         * Link with just the element name as label.\n+         * Indicate that the link appears in a class documentation.\n@@ -50,1 +51,2 @@\n-        PLAIN,\n+        CLASS,\n+\n@@ -52,1 +54,1 @@\n-         * Link with additional preview flag if appropriate.\n+         * Indicate that the link appears in member documentation.\n@@ -54,1 +56,2 @@\n-        SHOW_PREVIEW,\n+        MEMBER,\n+\n@@ -56,1 +59,1 @@\n-         * Link with additional type parameters as plain text if appropriate.\n+         * Indicate that the link appears in member documentation on the Deprecated or Preview page.\n@@ -58,1 +61,2 @@\n-        SHOW_TYPE_PARAMS,\n+        MEMBER_DEPRECATED_PREVIEW,\n+\n@@ -60,1 +64,1 @@\n-         * Link with additional type parameters and bounds as plain text if appropriate.\n+         * Indicate that the link appears in class use documentation.\n@@ -62,1 +66,2 @@\n-        SHOW_TYPE_PARAMS_AND_BOUNDS,\n+        CLASS_USE,\n+\n@@ -64,1 +69,1 @@\n-         * Link with additional type parameters as separate link if appropriate.\n+         * Indicate that the link appears in index documentation.\n@@ -66,1 +71,2 @@\n-        LINK_TYPE_PARAMS,\n+        INDEX,\n+\n@@ -68,1 +74,1 @@\n-         * Link with additional type parameters and bounds as separate links if approprate.\n+         * Indicate that the link appears in constant value summary.\n@@ -70,1 +76,146 @@\n-        LINK_TYPE_PARAMS_AND_BOUNDS;\n+        CONSTANT_SUMMARY,\n+\n+        \/**\n+         * Indicate that the link appears in serialized form documentation.\n+         *\/\n+        SERIALIZED_FORM,\n+\n+        \/**\n+         * Indicate that the link appears in serial member documentation.\n+         *\/\n+        SERIAL_MEMBER,\n+\n+        \/**\n+         * Indicate that the link appears in package documentation.\n+         *\/\n+        PACKAGE,\n+\n+        \/**\n+         * Indicate that the link appears in see tag documentation.\n+         *\/\n+        SEE_TAG,\n+\n+        \/**\n+         * Indicate that the link appears in value tag documentation.\n+         *\/\n+        VALUE_TAG,\n+\n+        \/**\n+         * Indicate that the link appears in tree documentation.\n+         *\/\n+        TREE,\n+\n+        \/**\n+         * The header in the class documentation.\n+         *\/\n+        CLASS_HEADER,\n+\n+        \/**\n+         * The signature in the class documentation.\n+         *\/\n+        CLASS_SIGNATURE,\n+\n+        \/**\n+         * The return type of a method.\n+         *\/\n+        RETURN_TYPE,\n+\n+        \/**\n+         * The return type of a method in a member summary.\n+         *\/\n+        SUMMARY_RETURN_TYPE,\n+\n+        \/**\n+         * The type of a method\/constructor parameter.\n+         *\/\n+        EXECUTABLE_MEMBER_PARAM,\n+\n+        \/**\n+         * Superinterface links.\n+         *\/\n+        SUPER_INTERFACES,\n+\n+        \/**\n+         * Implemented interface links.\n+         *\/\n+        IMPLEMENTED_INTERFACES,\n+\n+        \/**\n+         * Implemented class links.\n+         *\/\n+        IMPLEMENTED_CLASSES,\n+\n+        \/**\n+         * Subinterface links.\n+         *\/\n+        SUBINTERFACES,\n+\n+        \/**\n+         * Subclasses links.\n+         *\/\n+        SUBCLASSES,\n+\n+        \/**\n+         * The signature in the class documentation (implements\/extends portion).\n+         *\/\n+        CLASS_SIGNATURE_PARENT_NAME,\n+\n+        \/**\n+         * Permitted subclasses of a sealed type.\n+         *\/\n+        PERMITTED_SUBCLASSES,\n+\n+        \/**\n+         * The header for method documentation copied from parent.\n+         *\/\n+        EXECUTABLE_ELEMENT_COPY,\n+\n+        \/**\n+         * Method \"specified by\" link.\n+         *\/\n+        METHOD_SPECIFIED_BY,\n+\n+        \/**\n+         * Method \"overrides\" link.\n+         *\/\n+        METHOD_OVERRIDES,\n+\n+        \/**\n+         * Annotation link.\n+         *\/\n+        ANNOTATION,\n+\n+        \/**\n+         * The parent nodes in the class tree.\n+         *\/\n+        CLASS_TREE_PARENT,\n+\n+        \/**\n+         * The type parameters of a method or constructor.\n+         *\/\n+        MEMBER_TYPE_PARAMS,\n+\n+        \/**\n+         * Indicate that the link appears in class use documentation.\n+         *\/\n+        CLASS_USE_HEADER,\n+\n+        \/**\n+         * The header for property documentation copied from parent.\n+         *\/\n+        PROPERTY_COPY,\n+\n+        \/**\n+         * A receiver type.\n+         *\/\n+        RECEIVER_TYPE,\n+\n+        \/**\n+         * A record component within a class signature.\n+         *\/\n+        RECORD_COMPONENT,\n+\n+        \/**\n+         * A type thrown from a method.\n+         *\/\n+        THROWS_TYPE\n@@ -76,1 +227,1 @@\n-     * The context of the link.\n+     * The location of the link.\n@@ -78,1 +229,1 @@\n-    public Kind context = Kind.PLAIN;\n+    public Kind context = Kind.DEFAULT;\n@@ -81,1 +232,1 @@\n-     * The fragment of the link.\n+     * The value of the marker #.\n@@ -83,1 +234,1 @@\n-    public String fragment = \"\";\n+    public String where = \"\";\n@@ -180,2 +331,2 @@\n-    public HtmlLinkInfo fragment(String fragment) {\n-        this.fragment = fragment;\n+    public HtmlLinkInfo where(String where) {\n+        this.where = where;\n@@ -212,2 +363,28 @@\n-        linkTypeParameters = c == Kind.LINK_TYPE_PARAMS || c == Kind.LINK_TYPE_PARAMS_AND_BOUNDS;\n-        showTypeBounds = c == Kind.SHOW_TYPE_PARAMS_AND_BOUNDS || c == Kind.LINK_TYPE_PARAMS_AND_BOUNDS;\n+        switch (c) {\n+            case ANNOTATION:\n+            case IMPLEMENTED_INTERFACES:\n+            case SUPER_INTERFACES:\n+            case SUBINTERFACES:\n+            case CLASS_TREE_PARENT:\n+            case TREE:\n+            case CLASS_SIGNATURE_PARENT_NAME:\n+            case PERMITTED_SUBCLASSES:\n+                excludeTypeParameterLinks = true;\n+                excludeTypeBounds = true;\n+                break;\n+\n+            case PACKAGE:\n+            case CLASS_USE:\n+            case CLASS_HEADER:\n+            case CLASS_SIGNATURE:\n+            case RECEIVER_TYPE:\n+                excludeTypeParameterLinks = true;\n+                break;\n+\n+            case RETURN_TYPE:\n+            case SUMMARY_RETURN_TYPE:\n+            case EXECUTABLE_MEMBER_PARAM:\n+            case THROWS_TYPE:\n+                excludeTypeBounds = true;\n+                break;\n+        }\n@@ -230,2 +407,24 @@\n-    public boolean showTypeParameters() {\n-        return context != Kind.PLAIN && context != Kind.SHOW_PREVIEW;\n+    public boolean includeTypeParameterLinks() {\n+        return switch (context) {\n+            case IMPLEMENTED_INTERFACES,\n+                 SUPER_INTERFACES,\n+                 SUBINTERFACES,\n+                 CLASS_TREE_PARENT,\n+                 TREE,\n+                 CLASS_SIGNATURE_PARENT_NAME,\n+                 PERMITTED_SUBCLASSES,\n+                 PACKAGE,\n+                 CLASS_USE,\n+                 CLASS_HEADER,\n+                 CLASS_SIGNATURE,\n+                 RECEIVER_TYPE,\n+                 MEMBER_TYPE_PARAMS -> true;\n+\n+            case IMPLEMENTED_CLASSES,\n+                 SUBCLASSES,\n+                 EXECUTABLE_ELEMENT_COPY,\n+                 PROPERTY_COPY,\n+                 CLASS_USE_HEADER -> false;\n+\n+            default -> label == null || label.isEmpty();\n+        };\n@@ -238,1 +437,1 @@\n-                \", fragment=\" + fragment +\n+                \", where=\" + where +\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkInfo.java","additions":224,"deletions":25,"binary":false,"changes":249,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.CommentHelper;\n@@ -90,1 +91,1 @@\n-                configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, fieldType));\n+                configuration, HtmlLinkInfo.Kind.SERIAL_MEMBER, fieldType));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialFieldWriter.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.util.stream.Collectors;\n@@ -212,1 +213,1 @@\n-                        HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, (TypeElement) element).style(HtmlStyle.typeNameLink)));\n+                        HtmlLinkInfo.Kind.INDEX, (TypeElement) element).style(HtmlStyle.typeNameLink)));\n@@ -222,1 +223,1 @@\n-                dt = HtmlTree.DT(getDocLink(HtmlLinkInfo.Kind.PLAIN, containingType, element,\n+                dt = HtmlTree.DT(getDocLink(HtmlLinkInfo.Kind.INDEX, containingType, element,\n@@ -334,1 +335,1 @@\n-        addPreQualifiedClassLink(HtmlLinkInfo.Kind.PLAIN, enclosing,\n+        addPreQualifiedClassLink(HtmlLinkInfo.Kind.INDEX, enclosing,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexWriter.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,1 +143,1 @@\n-                            writer.getDocLink(HtmlLinkInfo.Kind.PLAIN,\n+                            writer.getDocLink(HtmlLinkInfo.Kind.EXECUTABLE_ELEMENT_COPY,\n@@ -207,1 +207,1 @@\n-                HtmlLinkInfo.Kind.PLAIN, typeElement);\n+                HtmlLinkInfo.Kind.MEMBER, typeElement);\n@@ -270,1 +270,1 @@\n-            context = HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS;\n+            context = HtmlLinkInfo.Kind.METHOD_SPECIFIED_BY;\n@@ -273,1 +273,1 @@\n-            context = HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS;\n+            context = HtmlLinkInfo.Kind.METHOD_OVERRIDES;\n@@ -280,2 +280,2 @@\n-                new HtmlLinkInfo(writer.configuration, HtmlLinkInfo.Kind.PLAIN, holder)\n-                        .fragment(writer.htmlIds.forMember(method).name())\n+                new HtmlLinkInfo(writer.configuration, HtmlLinkInfo.Kind.MEMBER, holder)\n+                        .where(writer.htmlIds.forMember(method).name())\n@@ -317,1 +317,1 @@\n-                    writer.configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, intfac));\n+                    writer.configuration, HtmlLinkInfo.Kind.METHOD_SPECIFIED_BY, intfac));\n@@ -321,1 +321,1 @@\n-                    HtmlLinkInfo.Kind.PLAIN, implementedMeth,\n+                    HtmlLinkInfo.Kind.MEMBER, implementedMeth,\n@@ -342,1 +342,1 @@\n-            return writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS, type));\n+            return writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.RETURN_TYPE, type));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriterImpl.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -706,1 +706,1 @@\n-            typeLinkContent = getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, t));\n+            typeLinkContent = getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PACKAGE, t));\n@@ -736,1 +736,1 @@\n-            Content srvLinkContent = getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, srv));\n+            Content srvLinkContent = getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PACKAGE, srv));\n@@ -758,1 +758,1 @@\n-                    desc.add(getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, impl)));\n+                    desc.add(getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PACKAGE, impl)));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-        Content classLink = writer.getPreQualifiedClassLink(HtmlLinkInfo.Kind.PLAIN, typeElement);\n+        Content classLink = writer.getPreQualifiedClassLink(HtmlLinkInfo.Kind.MEMBER, typeElement);\n@@ -129,1 +129,1 @@\n-                writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS,\n+                writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.MEMBER,\n@@ -138,5 +138,0 @@\n-    @Override\n-    protected void addSummaryLink(TypeElement typeElement, Element member, Content content) {\n-        addSummaryLink(HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, typeElement, member, content);\n-    }\n-\n@@ -145,1 +140,1 @@\n-        return writer.getQualifiedClassLink(HtmlLinkInfo.Kind.SHOW_PREVIEW, member);\n+        return writer.getQualifiedClassLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NestedClassWriterImpl.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -258,1 +258,1 @@\n-                        configuration, HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement));\n+                        configuration, HtmlLinkInfo.Kind.PACKAGE, typeElement));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-                            writer.getDocLink(HtmlLinkInfo.Kind.PLAIN,\n+                            writer.getDocLink(HtmlLinkInfo.Kind.PROPERTY_COPY,\n@@ -167,1 +167,1 @@\n-                HtmlLinkInfo.Kind.PLAIN, typeElement);\n+                HtmlLinkInfo.Kind.MEMBER, typeElement);\n@@ -202,1 +202,1 @@\n-        Content content = writer.getDocLink(HtmlLinkInfo.Kind.PLAIN, typeElement, member,\n+        Content content = writer.getDocLink(HtmlLinkInfo.Kind.MEMBER, typeElement, member,\n@@ -214,1 +214,1 @@\n-        return writer.getDocLink(HtmlLinkInfo.Kind.SHOW_PREVIEW, member,\n+        return writer.getDocLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriterImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,1 +128,1 @@\n-                ? getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PLAIN, typeElement)\n+                ? getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.DEFAULT, typeElement)\n@@ -134,1 +134,1 @@\n-                ? getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS,\n+                ? getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.SERIALIZED_FORM,\n@@ -137,1 +137,1 @@\n-        Content interfaceLink = getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS,\n+        Content interfaceLink = getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.SERIALIZED_FORM,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerializedFormWriterImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,2 +138,1 @@\n-                    HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_AND_BOUNDS, typeElement);\n-            linkInfo.showTypeParameterAnnotations = true;\n+                    HtmlLinkInfo.Kind.CLASS_SIGNATURE, typeElement);\n@@ -156,1 +155,1 @@\n-                                HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS,\n+                                HtmlLinkInfo.Kind.CLASS_SIGNATURE_PARENT_NAME,\n@@ -177,1 +176,1 @@\n-                                HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS,\n+                                HtmlLinkInfo.Kind.CLASS_SIGNATURE_PARENT_NAME,\n@@ -203,1 +202,1 @@\n-                            HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS,\n+                            HtmlLinkInfo.Kind.PERMITTED_SUBCLASSES,\n@@ -225,1 +224,1 @@\n-                Content link = writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS,\n+                Content link = writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.RECORD_COMPONENT,\n@@ -406,1 +405,1 @@\n-            this.returnType = memberWriter.writer.getLink(new HtmlLinkInfo(memberWriter.configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, type));\n+            this.returnType = memberWriter.writer.getLink(new HtmlLinkInfo(memberWriter.configuration, HtmlLinkInfo.Kind.MEMBER, type));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -552,1 +552,1 @@\n-                            new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, referencedType)));\n+                            new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.DEFAULT, referencedType)));\n@@ -556,1 +556,1 @@\n-            return htmlWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PLAIN, refClass)\n+            return htmlWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.DEFAULT, refClass)\n@@ -560,1 +560,1 @@\n-            return htmlWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PLAIN, refClass)\n+            return htmlWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.SEE_TAG, refClass)\n@@ -562,1 +562,1 @@\n-                    .fragment(refFragment)\n+                    .where(refFragment)\n@@ -613,1 +613,1 @@\n-            return htmlWriter.getDocLink(HtmlLinkInfo.Kind.SHOW_PREVIEW, containing,\n+            return htmlWriter.getDocLink(HtmlLinkInfo.Kind.SEE_TAG, containing,\n@@ -819,1 +819,1 @@\n-            excName = htmlWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PLAIN,\n+            excName = htmlWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.MEMBER,\n@@ -826,1 +826,1 @@\n-            HtmlLinkInfo link = new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PLAIN,\n+            HtmlLinkInfo link = new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.MEMBER,\n@@ -828,0 +828,1 @@\n+            link.excludeTypeBounds = true;\n@@ -842,1 +843,2 @@\n-        var linkInfo = new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PLAIN, throwsType);\n+        var linkInfo = new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.MEMBER, throwsType);\n+        linkInfo.excludeTypeBounds = true;\n@@ -855,1 +857,1 @@\n-                ? htmlWriter.getDocLink(HtmlLinkInfo.Kind.LINK_TYPE_PARAMS_AND_BOUNDS, field, constantVal)\n+                ? htmlWriter.getDocLink(HtmlLinkInfo.Kind.VALUE_TAG, field, constantVal)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,1 +126,1 @@\n-                    if (linkInfo.linkTypeParameters && utils.isTypeElement(owner)) {\n+                    if (!linkInfo.excludeTypeParameterLinks && utils.isTypeElement(owner)) {\n@@ -138,2 +138,2 @@\n-                    if (linkInfo.showTypeBounds) {\n-                        linkInfo.showTypeBounds = false;\n+                    if (!linkInfo.excludeTypeBounds) {\n+                        linkInfo.excludeTypeBounds = true;\n@@ -175,1 +175,1 @@\n-                    if (linkInfo.showTypeParameters()) {\n+                    if (linkInfo.includeTypeParameterLinks()) {\n@@ -185,1 +185,1 @@\n-            if (linkInfo.showTypeParameters()) {\n+            if (linkInfo.includeTypeParameterLinks()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/links\/LinkFactory.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-     * True if we should print the type bounds for the type parameter.\n+     * True if we should exclude the type bounds for the type parameter.\n@@ -72,1 +72,1 @@\n-    public boolean showTypeBounds = true;\n+    public boolean excludeTypeBounds = false;\n@@ -75,1 +75,1 @@\n-     * True if type parameters should be rendered as links.\n+     * True if we should print the type parameters, but not link them.\n@@ -77,1 +77,1 @@\n-    public boolean linkTypeParameters = true;\n+    public boolean excludeTypeParameterLinks = false;\n@@ -90,10 +90,0 @@\n-    \/**\n-     * True if type parameters should be separated by line breaks.\n-     *\/\n-    public boolean addLineBreaksInTypeParameters = false;\n-\n-    \/**\n-     * True if annotations on type parameters should be shown.\n-     *\/\n-    public boolean showTypeParameterAnnotations = false;\n-\n@@ -115,1 +105,2 @@\n-     * Returns true if links to declared types should include type parameters.\n+     * Returns true if links to declared types should include links to the\n+     * type parameters.\n@@ -119,1 +110,1 @@\n-    public abstract boolean showTypeParameters();\n+    public abstract boolean includeTypeParameterLinks();\n@@ -152,5 +143,3 @@\n-                \", showTypeBounds=\" + showTypeBounds +\n-                \", linkTypeParameters=\" + linkTypeParameters +\n-                \", linkToSelf=\" + linkToSelf +\n-                \", addLineBreaksInTypeParameters=\" + addLineBreaksInTypeParameters +\n-                \", showTypeParameterAnnotations=\" + showTypeParameterAnnotations + '}';\n+                \", excludeTypeBounds=\" + excludeTypeBounds +\n+                \", excludeTypeParameterLinks=\" + excludeTypeParameterLinks +\n+                \", linkToSelf=\" + linkToSelf + '}';\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/links\/LinkInfo.java","additions":11,"deletions":22,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-serviceability\/jvmti\/Heap\/IterateHeapWithEscapeAnalysisEnabled.java 8264699 generic-all\n+serviceability\/jvmti\/Heap\/IterateHeapWithEscapeAnalysisEnabled.java          8264699 generic-all\n@@ -30,1 +30,1 @@\n-## Classes not unloaded as expected (TODO, need to check if FJ keeps a reference)\n+## Classes not unloaded as expected (TODO, need to check if FJ keep link)\n@@ -32,1 +32,1 @@\n-vmTestbase\/nsk\/jvmti\/CompiledMethodUnload\/compmethunload001\/TestDescription.java 8300711 generic-all\n+vmTestbase\/nsk\/jvmti\/CompiledMethodUnload\/compmethunload001\/TestDescription.java\n@@ -37,12 +37,12 @@\n-vmTestbase\/nsk\/jvmti\/GetCurrentThreadCpuTime\/curthrcputime001\/TestDescription.java 8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime001\/TestDescription.java 8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop002\/TestDescription.java    8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop003\/TestDescription.java    8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/PopFrame\/popframe004\/TestDescription.java           8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/StopThread\/stopthrd006\/TestDescription.java         8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t012\/TestDescription.java 8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal004\/TestDescription.java   8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal003\/TestDescription.java   8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal002\/TestDescription.java   8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal001\/TestDescription.java   8300708 generic-all\n-vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal003\/TestDescription.java 8300708 generic-all\n+vmTestbase\/nsk\/jvmti\/GetCurrentThreadCpuTime\/curthrcputime001\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime001\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop002\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/NotifyFramePop\/nframepop003\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/PopFrame\/popframe004\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/StopThread\/stopthrd006\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/scenarios\/events\/EM02\/em02t012\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal004\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal003\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal002\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/SetLocalVariable\/setlocal001\/TestDescription.java\n+vmTestbase\/nsk\/jvmti\/unit\/GetLocalVariable\/getlocal003\/TestDescription.java\n@@ -51,2 +51,2 @@\n-## Test fails because it expects to find vthreads in GetAllThreads\n-vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP11\/ap11t001\/TestDescription.java 8300712 generic-all\n+## Test fails because expect to find vthread in GetAllThreads\n+vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP11\/ap11t001\/TestDescription.java\n@@ -55,2 +55,7 @@\n-## assert in src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp:1042\n-vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage006\/TestDescription.java 8300709 generic-all\n+## Breakpoint expects name of virtual thread which is set by test.\n+\n+vmTestbase\/nsk\/jvmti\/Breakpoint\/breakpoint001\/TestDescription.java\n+\n+####\n+## assert in \/scratch\/sspitsyn\/loom2\/open\/src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp:1042\n+vmTestbase\/nsk\/jvmti\/GetObjectMonitorUsage\/objmonusage006\/TestDescription.java\n@@ -67,0 +72,6 @@\n+####\n+## JVMTI PopFrame not supported for vthreads (JVMTI_ERROR_OPAQUE_FRAME)\n+\n+vmTestbase\/nsk\/jdb\/pop_exception\/pop_exception001\/pop_exception001.java\n+vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses002\/TestDescription.java\n+\n@@ -79,2 +90,2 @@\n-vmTestbase\/nsk\/jdb\/list\/list003\/list003.java        8300707 generic-all\n-vmTestbase\/nsk\/jdb\/repeat\/repeat001\/repeat001.java  8300707 generic-all\n+vmTestbase\/nsk\/jdb\/list\/list003\/list003.java\n+vmTestbase\/nsk\/jdb\/repeat\/repeat001\/repeat001.java\n@@ -93,0 +104,1 @@\n+\n@@ -99,4 +111,0 @@\n-vmTestbase\/nsk\/jdb\/pop_exception\/pop_exception001\/pop_exception001.java 8285414 generic-all\n-\n-vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses002\/TestDescription.java 8285414 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList-svc-vthread.txt","additions":34,"deletions":26,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -3,1 +3,0 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,1 +198,1 @@\n-        testStrideNegScalePosInIntLoop2(0, 100, 200, 0);\n+        testStrideNegScalePosInIntLoop1(0, 100, 200, 0);\n@@ -247,1 +246,1 @@\n-        testStridePosScaleNegInIntLoop2(0, 100, 200, 198);\n+        testStridePosScaleNegInIntLoop1(0, 100, 200, 198);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestLongRangeChecks.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,70 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * @test\n- * @bug 8289748\n- * @summary SIGFPE caused by C2 IdealLoopTree::do_remove_empty_loop\n- * @key stress randomness\n- *\n- * @run main\/othervm -XX:-TieredCompilation -Xcomp -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM\n- *                   -XX:CompileOnly=compiler.loopopts.TestRemoveEmptyCountedLoop::test*\n- *                   compiler.loopopts.TestRemoveEmptyCountedLoop\n- * @run main\/othervm -XX:-TieredCompilation -Xcomp -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:StressSeed=2160808391\n- *                   -XX:CompileOnly=compiler.loopopts.TestRemoveEmptyCountedLoop::test*\n- *                   compiler.loopopts.TestRemoveEmptyCountedLoop\n- *\/\n-\n-package compiler.loopopts;\n-\n-public class TestRemoveEmptyCountedLoop {\n-\n-    public static void test1() {\n-        int k = 3;\n-        for (int i=9; i>0; i--) {\n-            for (int j=2; j<i; j++) {\n-                k = k;\n-                k = (1 % j);\n-            }\n-        }\n-    }\n-\n-    public static void test2() {\n-        int k = 3;\n-        for (int i=9; i>0; i--) {\n-            int j = 2;\n-            do {\n-                try {\n-                    k = k;\n-                    k = (1 % j);\n-                } catch (Exception e) {}\n-            } while (++j < i);\n-        }\n-    }\n-\n-    public static void main(String[] args) {\n-        test1();\n-        test2();\n-        System.out.println(\"Test passed.\");\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestRemoveEmptyCountedLoop.java","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @requires vm.cds & vm.bits == \"64\"\n+ * @requires os.family == \"linux\" & vm.bits == \"64\" & (os.arch==\"amd64\" | os.arch==\"x86_64\")\n@@ -37,3 +37,0 @@\n-import java.util.HashMap;\n-import jdk.test.lib.artifacts.ArtifactResolver;\n-import jdk.test.lib.artifacts.ArtifactResolverException;\n@@ -41,1 +38,0 @@\n-import jdk.test.lib.Platform;\n@@ -44,1 +40,0 @@\n-import jtreg.SkippedException;\n@@ -47,1 +42,0 @@\n-\n@@ -57,5 +51,2 @@\n-    \/\/ the test.boot.jdk property is normally passed by make\/RunTests.gmk\n-    private static String BOOT_JDK = System.getProperty(\"test.boot.jdk\", null);\n-\n-    \/\/ Comma separated list of JDK major versions that will be tested\n-    private static String JDK_VERSIONS = System.getProperty(\"test.autocreatesharedarchive.jdk.version\", null);\n+    \/\/ the test.boot.jdk property is passed by make\/RunTests.gmk\n+    private static final String BOOT_JDK = System.getProperty(\"test.boot.jdk\", null);\n@@ -73,24 +64,2 @@\n-        \/\/ Earliest testable version is 19\n-        int n = java.lang.Runtime.version().major();\n-\n-        \/\/ If JDK_VERSIONS is specified, test against each specified version;\n-        \/\/ otherwise test with PREV_JDK if specified;\n-        \/\/ otherwise test with BOOT_JDK if specified;\n-        \/\/ otherwise throw SkippedException.\n-        if (JDK_VERSIONS == null) {\n-            System.out.println(\"JDK_VERSIONS not specified\");\n-            setupJVMs(0);\n-            doTest();\n-            return;\n-        }\n-\n-        String[] versions = JDK_VERSIONS.split(\",\");\n-        for (int i = 0; i < versions.length; i++) {\n-            System.out.println(\"Testing JDK: \" + versions[i]);\n-            try {\n-                setupJVMs(Integer.parseInt(versions[i]));\n-                doTest();\n-            } catch (NumberFormatException e) {\n-                throw new RuntimeException(\"Invalid AutoCreateSharedArchive JDK version: \" + versions[i]);\n-            }\n-        }\n+        setupJVMs();\n+        doTest();\n@@ -99,1 +68,1 @@\n-    static void setupJVMs(int fetchVersion) throws Throwable {\n+    static void setupJVMs() throws Throwable {\n@@ -106,3 +75,1 @@\n-        if (fetchVersion >= 19) {\n-            oldJVM = fetchJDK(fetchVersion) + FS + \"bin\" + FS + \"java\";\n-        } else if (PREV_JDK != null) {\n+        if (PREV_JDK != null) {\n@@ -113,1 +80,1 @@\n-            throw new SkippedException(\"Use -Dtest.previous.jdk or -Dtest.boot.jdk to specify a \" +\n+            throw new RuntimeException(\"Use -Dtest.previous.jdk or -Dtest.boot.jdk to specify a \" +\n@@ -137,0 +104,1 @@\n+        assertJSAVersionMismatch(output);\n@@ -144,0 +112,1 @@\n+        assertJSAVersionMismatch(output);\n@@ -168,51 +137,2 @@\n-    static void assertUsedJSA(OutputAnalyzer output) {\n-        output.shouldContain(\"Mapped dynamic region #0\");\n-    }\n-\n-    \/\/ Fetch JDK artifact depending on platform\n-    \/\/ If the artifact cannot be found, throw RuntimeException\n-    private static String fetchJDK(int version) throws Throwable {\n-        int build;\n-        String architecture;\n-        HashMap<String, Object> jdkArtifactMap = new HashMap<>();\n-        jdkArtifactMap.put(\"server\", \"jpg\");\n-        jdkArtifactMap.put(\"product\", \"jdk\");\n-\n-        \/\/ Select the correct release build number for each version\n-        \/\/ *UPDATE THIS* after each release\n-        switch(version) {\n-            case 19:\n-                build = 36;\n-                break;\n-            case 20:\n-                build = 29;\n-                break;\n-            default:\n-                throw new RuntimeException(\"Unsupported JDK version \" + version);\n-        }\n-        jdkArtifactMap.put(\"version\", version);\n-        jdkArtifactMap.put(\"build_number\", build);\n-\n-        \/\/ Get correct file name for architecture\n-        if (Platform.isX64()) {\n-            architecture = \"x64\";\n-        } else if (Platform.isAArch64()) {\n-            architecture = \"aarch64\";\n-        } else {\n-            throw new RuntimeException(\"Unsupported architecture \" + Platform.getOsArch());\n-        }\n-\n-        \/\/ File name is bundles\/<os>-<architecture>\/jdk-<version>_<os>-<architecture>_bin.<extension>\n-        \/\/ Ex: bundles\/linux-x64\/jdk-19_linux-x64_bin.tar.gz\n-        if (Platform.isWindows()) {\n-            jdkArtifactMap.put(\"file\", \"bundles\/windows-\" + architecture + \"\/jdk-\" + version + \"_windows-\" + architecture + \"_bin.zip\");\n-            return fetchJDK(jdkArtifactMap, version);\n-        } else if (Platform.isOSX()) {\n-            jdkArtifactMap.put(\"file\", \"bundles\/macos-\" + architecture + \"\/jdk-\" + version + \"_macos-\" + architecture + \"_bin.tar.gz\");\n-            return fetchJDK(jdkArtifactMap, version) +  \".jdk\" + FS + \"Contents\" + FS + \"Home\";\n-        } else if (Platform.isLinux()) {\n-            jdkArtifactMap.put(\"file\", \"bundles\/linux-\" + architecture + \"\/jdk-\" + version + \"_linux-\" + architecture + \"_bin.tar.gz\");\n-            return fetchJDK(jdkArtifactMap, version);\n-        } else {\n-            throw new RuntimeException(\"Unsupported operating system \" + Platform.getOsName());\n-        }\n+    static void assertJSAVersionMismatch(OutputAnalyzer output) {\n+        output.shouldContain(\"does not match the required version\");\n@@ -221,12 +141,2 @@\n-    \/\/ Fetch JDK artifact\n-    private static String fetchJDK(HashMap<String, Object> jdkArtifactMap, int version) {\n-        try {\n-            String path = null;\n-            path = ArtifactResolver.resolve(\"jdk\", jdkArtifactMap, true) + \"\/jdk-\" + version;\n-            System.out.println(\"Boot JDK path: \" + path);\n-            return path;\n-        } catch (ArtifactResolverException e) {\n-            Throwable cause = e.getCause();\n-            throw new RuntimeException(\"Fetch artifact failed: \"\n-                    + \"\\nPlease make sure the artifact is available.\", e);\n-        }\n+    static void assertUsedJSA(OutputAnalyzer output) {\n+        output.shouldContain(\"Mapped dynamic region #0\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/TestAutoCreateSharedArchiveUpgrade.java","additions":15,"deletions":105,"binary":false,"changes":120,"status":"modified"},{"patch":"@@ -106,1 +106,2 @@\n-                                buf = ByteBuffer.wrap(message, offset, len);\n+                                buf = ByteBuffer.wrap(message, offset, len)\n+                                                .order(java.nio.ByteOrder.LITTLE_ENDIAN);\n@@ -111,0 +112,1 @@\n+                                                .order(java.nio.ByteOrder.LITTLE_ENDIAN)\n@@ -116,1 +118,2 @@\n-                                                .asReadOnlyBuffer();\n+                                                .asReadOnlyBuffer()\n+                                                .order(java.nio.ByteOrder.LITTLE_ENDIAN);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/ChaCha20\/unittest\/java.base\/com\/sun\/crypto\/provider\/Poly1305IntrinsicFuzzTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,0 @@\n-import java.net.InetAddress;\n@@ -87,1 +86,0 @@\n-    static final InetAddress ADDRESS = dest.getAddress();\n@@ -109,2 +107,1 @@\n-            if (!msg.contains(HOST) || !msg.contains(PORT) ||\n-                !msg.contains(ADDRESS.getHostAddress())) {\n+            if (!msg.contains(HOST) || !msg.contains(PORT)) {\n@@ -113,1 +110,2 @@\n-                throw new RuntimeException(\"Test failed: message '\" + msg + \"' is missing address info \" + dest);\n+                System.err.println(\"msg = \" + msg);\n+                throw new RuntimeException(\"Test failed: exception does not contain address info\");\n","filename":"test\/jdk\/java\/net\/Socket\/ExceptionText.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-import org.junit.jupiter.api.Test;\n+import org.junit.Test;\n","filename":"test\/jdk\/java\/net\/URL\/URLFromURITest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,2 +65,0 @@\n-\n-import jdk.internal.net.http.common.OperationTrackers.Tracker;\n@@ -97,2 +95,0 @@\n-    static final ReferenceTracker TRACKER = ReferenceTracker.INSTANCE;\n-\n@@ -137,1 +133,1 @@\n-                    .build();\n+                                         .build();\n@@ -142,19 +138,0 @@\n-\n-            \/\/ if sameClient we will reuse the client for the next\n-            \/\/ operation, so there's nothing more to do.\n-            if (sameClient) continue;\n-\n-            \/\/ if no error and not same client then wait for the\n-            \/\/ client to be GC'ed before performing the nex operation\n-            Tracker tracker = TRACKER.getTracker(client);\n-            client = null;\n-            System.gc();\n-            AssertionError error = TRACKER.check(tracker, 1500);\n-            if (error != null) throw error; \/\/ the client didn't shut down properly\n-        }\n-        if (sameClient) {\n-            Tracker tracker = TRACKER.getTracker(client);\n-            client = null;\n-            System.gc();\n-            AssertionError error = TRACKER.check(tracker,1500);\n-            if (error != null) throw error; \/\/ the client didn't shut down properly\n","filename":"test\/jdk\/java\/net\/httpclient\/MappingResponseSubscriber.java","additions":2,"deletions":25,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.awt.Component;\n@@ -33,2 +34,0 @@\n-import java.util.Arrays;\n-import java.util.Collection;\n@@ -38,0 +37,1 @@\n+import javax.swing.BorderFactory;\n@@ -39,1 +39,1 @@\n-import javax.swing.JComponent;\n+import javax.swing.BoxLayout;\n@@ -44,3 +44,0 @@\n-import static javax.swing.BorderFactory.createEmptyBorder;\n-import static javax.swing.BorderFactory.createEtchedBorder;\n-\n@@ -49,1 +46,1 @@\n- * @bug 8279614 8294921\n+ * @bug 8279614\n@@ -54,0 +51,1 @@\n+\n@@ -56,1 +54,1 @@\n-    private static final Dimension SIZE = new Dimension(125, 25);\n+    public static final Dimension SIZE = new Dimension(120, 20);\n@@ -58,5 +56,2 @@\n-    private static final Color OUTER_COLOR = Color.BLACK;\n-    private static final Color INSIDE_COLOR = Color.WHITE;\n-    private static final Color HIGHLIGHT = Color.RED;\n-    private static final Color SHADOW = Color.BLUE;\n-    private static final Color TRANSPARENT_COLOR = new Color(0x00000000, true);\n+    public static Color highlight = Color.RED;\n+    public static Color shadow = Color.BLUE;\n@@ -74,4 +69,2 @@\n-        Collection<String> params = Arrays.asList(args);\n-        final boolean showFrame = params.contains(\"-show\");\n-        final boolean saveImages = params.contains(\"-save\");\n-        SwingUtilities.invokeAndWait(() -> testScaling(showFrame, saveImages));\n+        boolean showFrame = args.length > 0 && \"-show\".equals(args[0]);\n+        SwingUtilities.invokeAndWait(() -> testScaling(showFrame));\n@@ -80,9 +73,2 @@\n-    private static void testScaling(boolean showFrame, boolean saveImages) {\n-        JComponent content = createUI();\n-        if (showFrame) {\n-            showFrame(content);\n-        }\n-\n-        paintToImages(content, saveImages);\n-        verifyBorderRendering(saveImages);\n-    }\n+    private static void testScaling(boolean show) {\n+        createGUI(show);\n@@ -90,4 +76,1 @@\n-    private static void verifyBorderRendering(final boolean saveImages) {\n-        String errorMessage = null;\n-        int errorCount = 0;\n-        for (int i = 0; i < images.size(); i++) {\n+        for (int i = 0; i < scales.length; i++) {\n@@ -96,4 +79,1 @@\n-            try {\n-                int thickness = (int) Math.floor(scaling);\n-\n-                checkVerticalBorders(SIZE.width \/ 2, thickness, img);\n+            System.out.println(\"Testing scaling: \" + scaling);\n@@ -101,9 +81,0 @@\n-                for (Point p : panelLocations) {\n-                    int y = (int) (p.y * scaling) + SIZE.height \/ 2;\n-                    checkHorizontalBorder(y, thickness, img);\n-                }\n-            } catch (Error e) {\n-                if (errorMessage == null) {\n-                    errorMessage = e.getMessage();\n-                }\n-                errorCount++;\n@@ -111,2 +82,3 @@\n-                System.err.printf(\"Scaling: %.2f\\n\", scaling);\n-                e.printStackTrace();\n+            \/\/ checking vertical border\n+            int x = SIZE.width \/ 2;\n+            checkVerticalBorder(x, img, scaling);\n@@ -114,4 +86,3 @@\n-                \/\/ Save the image if it wasn't already saved\n-                if (!saveImages) {\n-                    saveImage(img, getImageFileName(scaling));\n-                }\n+            for (Point p : panelLocations) {\n+                int y = (int) (p.y * scaling) + SIZE.height \/ 2;\n+                checkHorizontalBorder(y, img, scaling);\n@@ -120,6 +91,0 @@\n-\n-        if (errorCount > 0) {\n-            throw new Error(\"Test failed: \"\n-                            + errorCount + \" error(s) detected - \"\n-                            + errorMessage);\n-        }\n@@ -128,113 +93,33 @@\n-    private static void checkVerticalBorders(final int x,\n-                                             final int thickness,\n-                                             final BufferedImage img) {\n-        checkBorder(x, 0,\n-                    0, 1,\n-                    thickness, img);\n-    }\n-\n-    private static void checkHorizontalBorder(final int y,\n-                                              final int thickness,\n-                                              final BufferedImage img) {\n-        checkBorder(0, y,\n-                    1, 0,\n-                    thickness, img);\n-    }\n-\n-    private enum State {\n-        BACKGROUND,\n-        LEFT_SHADOW, LEFT_HIGHLIGHT,\n-        INSIDE,\n-        RIGHT_SHADOW, RIGHT_HIGHLIGHT\n-    }\n-\n-    private static void checkBorder(final int xStart, final int yStart,\n-                                    final int xStep,  final int yStep,\n-                                    final int thickness,\n-                                    final BufferedImage img) {\n-        final int width = img.getWidth();\n-        final int height = img.getHeight();\n-\n-        State state = State.BACKGROUND;\n-        int borderThickness = 0;\n-\n-        int x = xStart;\n-        int y = yStart;\n-        do {\n-            do {\n-                final int color = img.getRGB(x, y);\n-                switch (state) {\n-                    case BACKGROUND:\n-                        if (color == SHADOW.getRGB()) {\n-                            state = State.LEFT_SHADOW;\n-                            borderThickness = 1;\n-                        } else if (color != OUTER_COLOR.getRGB()\n-                                   && color != TRANSPARENT_COLOR.getRGB()) {\n-                            throwUnexpectedColor(x, y, color);\n-                        }\n-                        break;\n-\n-                    case LEFT_SHADOW:\n-                        if (color == SHADOW.getRGB()) {\n-                            borderThickness++;\n-                        } else if (color == HIGHLIGHT.getRGB()) {\n-                            if (borderThickness != thickness) {\n-                                throwWrongThickness(thickness, borderThickness, x, y);\n-                            }\n-                            borderThickness = 1;\n-                            state = State.LEFT_HIGHLIGHT;\n-                        } else {\n-                            throwUnexpectedColor(x, y, color);\n-                        }\n-                        break;\n-\n-                    case LEFT_HIGHLIGHT:\n-                        if (color == HIGHLIGHT.getRGB()) {\n-                            borderThickness++;\n-                        } else if (color == INSIDE_COLOR.getRGB()) {\n-                            if (borderThickness != thickness) {\n-                                throwWrongThickness(thickness, borderThickness, x, y);\n-                            }\n-                            borderThickness = 0;\n-                            state = State.INSIDE;\n-                        } else {\n-                            throwUnexpectedColor(x, y, color);\n-                        }\n-                        break;\n-\n-                    case INSIDE:\n-                        if (color == SHADOW.getRGB()) {\n-                            state = State.RIGHT_SHADOW;\n-                            borderThickness = 1;\n-                        } else if (color != INSIDE_COLOR.getRGB()) {\n-                            throwUnexpectedColor(x, y, color);\n-                        }\n-                        break;\n-\n-                    case RIGHT_SHADOW:\n-                        if (color == SHADOW.getRGB()) {\n-                            borderThickness++;\n-                        } else if (color == HIGHLIGHT.getRGB()) {\n-                            if (borderThickness != thickness) {\n-                                throwWrongThickness(thickness, borderThickness, x, y);\n-                            }\n-                            borderThickness = 1;\n-                            state = State.RIGHT_HIGHLIGHT;\n-                        } else {\n-                            throwUnexpectedColor(x, y, color);\n-                        }\n-                        break;\n-\n-                    case RIGHT_HIGHLIGHT:\n-                        if (color == HIGHLIGHT.getRGB()) {\n-                            borderThickness++;\n-                        } else if (color == OUTER_COLOR.getRGB()) {\n-                            if (borderThickness != thickness) {\n-                                throwWrongThickness(thickness, borderThickness, x, y);\n-                            }\n-                            borderThickness = 0;\n-                            state = State.BACKGROUND;\n-                        } else {\n-                            throwUnexpectedColor(x, y, color);\n-                        }\n-                        break;\n+    private static void checkHorizontalBorder(int y, BufferedImage img, double scaling) {\n+        int thickness = 0;\n+        boolean checkShadow = false;\n+        boolean checkHighlight = false;\n+        for (int x = 0; x < img.getWidth(); x++) {\n+            int color = img.getRGB(x, y);\n+            if (!checkHighlight && !checkShadow) {\n+                if (color == shadow.getRGB()) {\n+                    checkHighlight = true;\n+                    thickness++;\n+                } else if (color == highlight.getRGB()) {\n+                    throw new RuntimeException(\"Horizontal Border was clipped or overdrawn.\");\n+                }\n+            } else if (checkHighlight) {\n+                if (color == shadow.getRGB()) {\n+                    thickness++;\n+                } else if (color == highlight.getRGB()) {\n+                    verifyThickness(x, y, thickness, scaling, \"Horizontal\");\n+                    checkHighlight = false;\n+                    checkShadow = true;\n+                    thickness = 1;\n+                } else {\n+                    throw new RuntimeException(\"Horizontal Border has empty space between highlight and shadow.\");\n+                }\n+            } else {\n+                if (color == shadow.getRGB()) {\n+                    throw new RuntimeException(\"Border colors reversed.\");\n+                } else if (color == highlight.getRGB()) {\n+                    thickness++;\n+                } else {\n+                    verifyThickness(x, y, thickness, scaling, \"Horizontal\");\n+                    checkShadow = false;\n+                    thickness = 0;\n@@ -242,2 +127,2 @@\n-            } while (yStep > 0 && ((y += yStep) < height));\n-        } while (xStep > 0 && ((x += xStep) < width));\n+            }\n+        }\n@@ -246,5 +131,6 @@\n-    private static void throwWrongThickness(int thickness, int borderThickness,\n-                                            int x, int y) {\n-        throw new Error(\n-                String.format(\"Wrong border thickness at %d, %d: %d vs %d\",\n-                              x, y, borderThickness, thickness));\n+    private static void verifyThickness(int x, int y, int thickness, double scaling, String orientation) {\n+        int expected = (int) Math.floor(scaling);\n+        if (thickness != expected) {\n+            throw new RuntimeException(\"Unexpected \" + orientation + \" Border thickness at x:\"\n+                                       + x + \" y: \" + y + \". Expected: \" + expected + \" Actual: \" + thickness);\n+        }\n@@ -253,4 +139,36 @@\n-    private static void throwUnexpectedColor(int x, int y, int color) {\n-        throw new Error(\n-                String.format(\"Unexpected color at %d, %d: %08x\",\n-                              x, y, color));\n+    private static void checkVerticalBorder(int x, BufferedImage img, double scaling) {\n+        int thickness = 0;\n+        boolean checkShadow = false;\n+        boolean checkHighlight = false;\n+        for (int y = 0; y < img.getHeight(); y++) {\n+            int color = img.getRGB(x, y);\n+            if (!checkHighlight && !checkShadow) {\n+                if (color == shadow.getRGB()) {\n+                    checkHighlight = true;\n+                    thickness++;\n+                } else if (color == highlight.getRGB()) {\n+                    throw new RuntimeException(\"Vertical Border was clipped or overdrawn.\");\n+                }\n+            } else if (checkHighlight) {\n+                if (color == shadow.getRGB()) {\n+                    thickness++;\n+                } else if (color == highlight.getRGB()) {\n+                    verifyThickness(x, y, thickness, scaling, \"Vertical\");\n+                    checkHighlight = false;\n+                    checkShadow = true;\n+                    thickness = 1;\n+                } else {\n+                    throw new RuntimeException(\"Vertical Border has empty space between highlight and shadow.\");\n+                }\n+            } else {\n+                if (color == shadow.getRGB()) {\n+                    throw new RuntimeException(\"Border colors reversed.\");\n+                } else if (color == highlight.getRGB()) {\n+                    thickness++;\n+                } else {\n+                    verifyThickness(x, y, thickness, scaling, \"Vertical\");\n+                    checkShadow = false;\n+                    thickness = 0;\n+                }\n+            }\n+        }\n@@ -259,3 +177,4 @@\n-    private static JComponent createUI() {\n-        Box contentPanel = Box.createVerticalBox();\n-        contentPanel.setBackground(OUTER_COLOR);\n+    private static void createGUI(boolean show) {\n+        \/\/ Render content panel\n+        JPanel contentPanel = new JPanel();\n+        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));\n@@ -265,6 +184,0 @@\n-            JComponent filler = new JPanel(null);\n-            filler.setBackground(INSIDE_COLOR);\n-            filler.setPreferredSize(SIZE);\n-            filler.setBounds(i, 0, SIZE.width, SIZE.height);\n-            filler.setBorder(createEtchedBorder(HIGHLIGHT, SHADOW));\n-\n@@ -272,3 +185,4 @@\n-            childPanel.setBorder(createEmptyBorder(0, i, 4, 4));\n-            childPanel.add(filler, BorderLayout.CENTER);\n-            childPanel.setBackground(OUTER_COLOR);\n+            childPanel.setBorder(BorderFactory.createCompoundBorder(\n+                    BorderFactory.createEmptyBorder(0, i, 4, 4),\n+                    BorderFactory.createEtchedBorder(highlight, shadow)));\n+            childPanel.add(Box.createRigidArea(SIZE), BorderLayout.CENTER);\n@@ -280,4 +194,1 @@\n-            childPanel.setBounds(0, childSize.height * i,\n-                                 childSize.width, childSize.height);\n-\n-            panelLocations.add(childPanel.getLocation());\n+            childPanel.setBounds(0, childSize.height * i, childSize.width, childSize.height);\n@@ -288,14 +199,0 @@\n-        return contentPanel;\n-    }\n-\n-    private static void showFrame(final JComponent content) {\n-        JFrame frame = new JFrame(\"Scaled Etched Border Test\");\n-        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n-        frame.getContentPane().add(content, BorderLayout.CENTER);\n-        frame.pack();\n-        frame.setLocationRelativeTo(null);\n-        frame.setVisible(true);\n-    }\n-\n-    private static void paintToImages(final JComponent content,\n-                                      final boolean saveImages) {\n@@ -303,14 +200,16 @@\n-            BufferedImage image =\n-                    new BufferedImage((int) Math.ceil(content.getWidth() * scaling),\n-                                      (int) Math.ceil(content.getHeight() * scaling),\n-                                      BufferedImage.TYPE_INT_ARGB);\n-\n-            Graphics2D g2d = image.createGraphics();\n-            g2d.scale(scaling, scaling);\n-            content.paint(g2d);\n-            g2d.dispose();\n-\n-            if (saveImages) {\n-                saveImage(image, getImageFileName(scaling));\n-            }\n-            images.add(image);\n+            \/\/ Create BufferedImage\n+            BufferedImage buff = new BufferedImage((int) Math.ceil(contentPanel.getWidth() * scaling),\n+                    (int) Math.ceil(contentPanel.getHeight() * scaling),\n+                    BufferedImage.TYPE_INT_ARGB);\n+            Graphics2D graph = buff.createGraphics();\n+            graph.scale(scaling, scaling);\n+            \/\/ Painting panel onto BufferedImage\n+            contentPanel.paint(graph);\n+            graph.dispose();\n+            \/\/ Save each image ? -- Here it's useful for debugging\n+            saveImage(buff, String.format(\"test%.2f.png\", scaling));\n+            images.add(buff);\n+        }\n+        \/\/ Save coordinates of the panels\n+        for (Component comp : contentPanel.getComponents()) {\n+            panelLocations.add(comp.getLocation());\n@@ -318,1 +217,0 @@\n-    }\n@@ -320,2 +218,8 @@\n-    private static String getImageFileName(final double scaling) {\n-        return String.format(\"test%.2f.png\", scaling);\n+        if (show) {\n+            JFrame frame = new JFrame(\"Swing Test\");\n+            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n+            frame.getContentPane().add(contentPanel, BorderLayout.CENTER);\n+            frame.pack();\n+            frame.setLocationRelativeTo(null);\n+            frame.setVisible(true);\n+        }\n","filename":"test\/jdk\/javax\/swing\/border\/EtchedBorder\/ScaledEtchedBorderTest.java","additions":131,"deletions":227,"binary":false,"changes":358,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.awt.Component;\n@@ -140,4 +141,0 @@\n-    private enum State {\n-        BACKGROUND, LEFT, INSIDE, RIGHT\n-    }\n-\n@@ -210,0 +207,4 @@\n+    private enum State {\n+        BACKGROUND, LEFT, INSIDE, RIGHT\n+    }\n+\n@@ -245,2 +246,0 @@\n-\n-            panelLocations.add(childPanel.getLocation());\n@@ -251,0 +250,5 @@\n+        \/\/ Save coordinates of the panels\n+        for (Component comp : contentPanel.getComponents()) {\n+            panelLocations.add(comp.getLocation());\n+        }\n+\n","filename":"test\/jdk\/javax\/swing\/border\/LineBorder\/ScaledLineBorderTest.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.awt.Component;\n","filename":"test\/jdk\/javax\/swing\/border\/LineBorder\/ScaledTextFieldBorderTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -211,92 +211,0 @@\n-        checkOutput(\"pkg2\/Spliterator.html\", true,\n-            \"\"\"\n-                <div class=\"caption\"><span>Nested Classes<\/span><\/div>\n-                <div class=\"summary-table three-column-summary\">\n-                <div class=\"table-header col-first\">Modifier and Type<\/div>\n-                <div class=\"table-header col-second\">Interface<\/div>\n-                <div class=\"table-header col-last\">Description<\/div>\n-                <div class=\"col-first even-row-color\"><code>static interface&nbsp;<\/code><\/div>\n-                <div class=\"col-second even-row-color\"><code><a href=\"Spliterator.OfDouble.html\"\\\n-                 class=\"type-name-link\" title=\"interface in pkg2\">Spliterator.OfDouble<\/a><\/code><\/div>\n-                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n-                <div class=\"col-first odd-row-color\"><code>static interface&nbsp;<\/code><\/div>\n-                <div class=\"col-second odd-row-color\"><code><a href=\"Spliterator.OfInt.html\" cla\\\n-                ss=\"type-name-link\" title=\"interface in pkg2\">Spliterator.OfInt<\/a>&lt;<a href=\"\\\n-                Spliterator.OfInt.html\" title=\"type parameter in Spliterator.OfInt\">Integer<\/a>&\\\n-                gt;<\/code><\/div>\n-                <div class=\"col-last odd-row-color\">&nbsp;<\/div>\n-                <div class=\"col-first even-row-color\"><code>static interface&nbsp;<\/code><\/div>\n-                <div class=\"col-second even-row-color\"><code><a href=\"Spliterator.OfPrimitive.ht\\\n-                ml\" class=\"type-name-link\" title=\"interface in pkg2\">Spliterator.OfPrimitive<\/a>\\\n-                &lt;<a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.\\\n-                OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\"type param\\\n-                eter in Spliterator.OfPrimitive\">T_CONS<\/a>,<wbr><a href=\"Spliterator.OfPrimitiv\\\n-                e.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a> extends <\\\n-                a href=\"Spliterator.OfPrimitive.html\" title=\"interface in pkg2\">Spliterator.OfPr\\\n-                imitive<\/a>&lt;<a href=\"Spliterator.OfPrimitive.html\" title=\"type parameter in S\\\n-                pliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"Spliterator.OfPrimitive.html\" title=\\\n-                \"type parameter in Spliterator.OfPrimitive\">T_CONS<\/a>,<wbr><a href=\"Spliterator\\\n-                .OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a\\\n-                >&gt;&gt;<\/code><\/div>\n-                <div class=\"col-last even-row-color\">&nbsp;<\/div>\n-                <\/div>\"\"\");\n-        checkOutput(\"allclasses-index.html\", true,\n-                \"\"\"\n-                <div class=\"col-first even-row-color all-classes-table all-classes-table-tab2\"><\\\n-                a href=\"pkg2\/Abstract.html\" title=\"class in pkg2\">Abstract<\/a><\/div>\n-                <div class=\"col-last even-row-color all-classes-table all-classes-table-tab2\">&n\\\n-                bsp;<\/div>\n-                <div class=\"col-first odd-row-color all-classes-table all-classes-table-tab1\"><a\\\n-                 href=\"pkg2\/Spliterator.html\" title=\"interface in pkg2\">Spliterator<\/a>&lt;<a hr\\\n-                ef=\"pkg2\/Spliterator.html\" title=\"type parameter in Spliterator\">T<\/a>&gt;<\/div>\n-                <div class=\"col-last odd-row-color all-classes-table all-classes-table-tab1\">&nbsp;<\/div>\n-                <div class=\"col-first even-row-color all-classes-table all-classes-table-tab1\"><\\\n-                a href=\"pkg2\/Spliterator.OfDouble.html\" title=\"interface in pkg2\">Spliterator.Of\\\n-                Double<\/a><\/div>\n-                <div class=\"col-last even-row-color all-classes-table all-classes-table-tab1\">&nbsp;<\/div>\n-                <div class=\"col-first odd-row-color all-classes-table all-classes-table-tab1\"><a\\\n-                 href=\"pkg2\/Spliterator.OfInt.html\" title=\"interface in pkg2\">Spliterator.OfInt<\\\n-                \/a>&lt;<a href=\"pkg2\/Spliterator.OfInt.html\" title=\"type parameter in Spliterato\\\n-                r.OfInt\">Integer<\/a>&gt;<\/div>\n-                <div class=\"col-last odd-row-color all-classes-table all-classes-table-tab1\">&nbsp;<\/div>\n-                <div class=\"col-first even-row-color all-classes-table all-classes-table-tab1\"><\\\n-                a href=\"pkg2\/Spliterator.OfPrimitive.html\" title=\"interface in pkg2\">Spliterator\\\n-                .OfPrimitive<\/a>&lt;<a href=\"pkg2\/Spliterator.OfPrimitive.html\" title=\"type para\\\n-                meter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a href=\"pkg2\/Spliterator.OfPrimiti\\\n-                ve.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_CONS<\/a>,<wbr><a hr\\\n-                ef=\"pkg2\/Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfPr\\\n-                imitive\">T_SPLITR<\/a> extends <a href=\"pkg2\/Spliterator.OfPrimitive.html\" title=\\\n-                \"interface in pkg2\">Spliterator.OfPrimitive<\/a>&lt;<a href=\"pkg2\/Spliterator.OfP\\\n-                rimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a h\\\n-                ref=\"pkg2\/Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfP\\\n-                rimitive\">T_CONS<\/a>,<wbr><a href=\"pkg2\/Spliterator.OfPrimitive.html\" title=\"typ\\\n-                e parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a>&gt;&gt;<\/div>\n-                <div class=\"col-last even-row-color all-classes-table all-classes-table-tab1\">&nbsp;<\/div>\"\"\");\n-        checkOutput(\"index-all.html\", true,\n-                \"\"\"\n-                <dt><a href=\"pkg2\/Spliterator.html\" class=\"type-name-link\" title=\"interface in p\\\n-                kg2\">Spliterator<\/a>&lt;<a href=\"pkg2\/Spliterator.html\" title=\"type parameter in\\\n-                 Spliterator\">T<\/a>&gt; - Interface in <a href=\"pkg2\/package-summary.html\">pkg2<\/a><\/dt>\n-                <dd>&nbsp;<\/dd>\n-                <dt><a href=\"pkg2\/Spliterator.OfDouble.html\" class=\"type-name-link\" title=\"inter\\\n-                face in pkg2\">Spliterator.OfDouble<\/a> - Interface in <a href=\"pkg2\/package-summ\\\n-                ary.html\">pkg2<\/a><\/dt>\n-                <dd>&nbsp;<\/dd>\n-                <dt><a href=\"pkg2\/Spliterator.OfInt.html\" class=\"type-name-link\" title=\"interfac\\\n-                e in pkg2\">Spliterator.OfInt<\/a>&lt;<a href=\"pkg2\/Spliterator.OfInt.html\" title=\\\n-                \"type parameter in Spliterator.OfInt\">Integer<\/a>&gt; - Interface in <a href=\"pk\\\n-                g2\/package-summary.html\">pkg2<\/a><\/dt>\n-                <dd>&nbsp;<\/dd>\n-                <dt><a href=\"pkg2\/Spliterator.OfPrimitive.html\" class=\"type-name-link\" title=\"in\\\n-                terface in pkg2\">Spliterator.OfPrimitive<\/a>&lt;<a href=\"pkg2\/Spliterator.OfPrim\\\n-                itive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T<\/a>,<wbr><a href\\\n-                =\"pkg2\/Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrim\\\n-                itive\">T_CONS<\/a>,<wbr><a href=\"pkg2\/Spliterator.OfPrimitive.html\" title=\"type p\\\n-                arameter in Spliterator.OfPrimitive\">T_SPLITR<\/a> extends <a href=\"pkg2\/Splitera\\\n-                tor.OfPrimitive.html\" title=\"interface in pkg2\">Spliterator.OfPrimitive<\/a>&lt;<\\\n-                a href=\"pkg2\/Spliterator.OfPrimitive.html\" title=\"type parameter in Spliterator.\\\n-                OfPrimitive\">T<\/a>,<wbr><a href=\"pkg2\/Spliterator.OfPrimitive.html\" title=\"type \\\n-                parameter in Spliterator.OfPrimitive\">T_CONS<\/a>,<wbr><a href=\"pkg2\/Spliterator.\\\n-                OfPrimitive.html\" title=\"type parameter in Spliterator.OfPrimitive\">T_SPLITR<\/a>\\\n-                &gt;&gt; - Interface in <a href=\"pkg2\/package-summary.html\">pkg2<\/a><\/dt>\n-                <dd>&nbsp;<\/dd>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInterface\/TestInterface.java","additions":1,"deletions":93,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.util.Map;\n@@ -31,4 +30,0 @@\n-    default public Path resolve(String name, Map<String, Object> artifactDescription,\n-                        boolean unpack) throws ArtifactResolverException {\n-        throw new ArtifactResolverException(\"not implemented\");\n-    }\n","filename":"test\/lib\/jdk\/test\/lib\/artifacts\/ArtifactManager.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-    private static ArtifactManager getManager() throws ArtifactResolverException {\n+    public static Map<String, Path> resolve(Class<?> klass) throws ArtifactResolverException {\n@@ -45,2 +45,0 @@\n-        return manager;\n-    }\n@@ -48,2 +46,0 @@\n-    public static Map<String, Path> resolve(Class<?> klass) throws ArtifactResolverException {\n-        ArtifactManager manager = getManager();\n@@ -66,5 +62,0 @@\n-    public static Path resolve(String name, Map<String, Object> artifactDescription, boolean unpack) throws ArtifactResolverException {\n-        ArtifactManager manager = getManager();\n-        return  manager.resolve(name, artifactDescription, unpack);\n-    }\n-\n","filename":"test\/lib\/jdk\/test\/lib\/artifacts\/ArtifactResolver.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"}]}