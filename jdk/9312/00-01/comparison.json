{"files":[{"patch":"@@ -555,23 +555,0 @@\n-\/**\n- * Used to calculate the offset between two tm structs.\n- *\/\n-static time_t\n-calculateTimeOffset(struct tm tm1, struct tm tm2)\n-{\n-    time_t offset;\n-    const int seconds_per_minute = 60;\n-    const int seconds_per_hour = seconds_per_minute * 60;\n-    const int seconds_per_day = seconds_per_hour * 24;\n-    \/\/ The conversion of years and months is not important, as offset should never exceed a day.\n-    const int seconds_per_month = seconds_per_day * 31;\n-    const int seconds_per_year = seconds_per_month * 12;\n-\n-    \/\/ Apply mod to the result in order to normalize offset result to be under a day.\n-    offset = ((tm1.tm_year - tm2.tm_year) * seconds_per_year +\n-        (tm1.tm_mon - tm2.tm_mon) * seconds_per_month +\n-        (tm1.tm_mday - tm2.tm_mday) * seconds_per_day +\n-        (tm1.tm_hour - tm2.tm_hour) * seconds_per_hour +\n-        (tm1.tm_min - tm2.tm_min) * seconds_per_minute) % seconds_per_day;\n-    return offset;\n-}\n-\n@@ -581,32 +558,0 @@\n-\n-#if defined(MACOSX)\n-\n-char *\n-getGMTOffsetID()\n-{\n-    time_t offset;\n-    char sign, buf[32];\n-    struct tm local_tm;\n-    time_t clock;\n-\n-    clock = time(NULL);\n-    if (localtime_r(&clock, &local_tm) == NULL) {\n-        return strdup(\"GMT\");\n-    }\n-    offset = (time_t)local_tm.tm_gmtoff;\n-    if (offset == 0) {\n-        return strdup(\"GMT\");\n-    }\n-    if (offset > 0) {\n-        sign = '+';\n-    } else {\n-        offset = -offset;\n-        sign = '-';\n-    }\n-    sprintf(buf, (const char *)\"GMT%c%02d:%02d\",\n-            sign, (int)(offset\/3600), (int)((offset%3600)\/60));\n-    return strdup(buf);\n-}\n-\n-#else\n-\n@@ -616,2 +561,2 @@\n-    time_t offset;\n-    char sign, buf[32];\n+    char buf[32];\n+    char offset[6];\n@@ -619,3 +564,1 @@\n-    time_t clock;\n-\n-    clock = time(NULL);\n+    time_t clock = time(NULL);\n@@ -626,1 +569,2 @@\n-    struct tm gmt;\n+    strftime(offset, 6, \"%z\", &localtm);\n+    char gmt_offset[] = {offset[0], offset[1], offset[2], ':', offset[3], offset[4], '\\0'};\n@@ -628,18 +572,1 @@\n-    if (gmtime_r(&clock, &gmt) == NULL) {\n-        return strdup(\"GMT\");\n-    }\n-\n-    offset = calculateTimeOffset(localtm, gmt);\n-\n-    if (offset == 0) {\n-        return strdup(\"GMT\");\n-    }\n-\n-    if (offset > 0) {\n-        sign = '+';\n-    } else {\n-        offset = -offset;\n-        sign = '-';\n-    }\n-    sprintf(buf, (const char *)\"GMT%c%02d:%02d\",\n-            sign, (int)(offset\/3600), (int)((offset%3600)\/60));\n+    sprintf(buf, (const char *)\"GMT%s\", gmt_offset);\n@@ -648,1 +575,0 @@\n-#endif \/* MACOSX *\/\n","filename":"src\/java.base\/unix\/native\/libjava\/TimeZone_md.c","additions":6,"deletions":80,"binary":false,"changes":86,"status":"modified"}]}