{"files":[{"patch":"@@ -47,0 +47,1 @@\n+        \/\/ This test run in othervm so change in environment need not to be recovered at the end of test.\n@@ -59,0 +60,1 @@\n+        \/\/ This test run in othervm so change in environment need not to be recovered at the end of test.\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/common\/Bug6350682.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    public void testSAXParserFactoryCreationWithDefaultContextClassLoader() {\n+    public void testWithDefaultContextClassLoader() {\n@@ -59,1 +59,1 @@\n-    public void testSAXParserFactoryCreationWithGivenURLContextClassLoader() {\n+    public void testWithGivenURLContextClassLoader() {\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/common\/Bug6723276Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,4 +59,0 @@\n-    private static final String FIELD_UNDEFINED = \"FIELD_UNDEFINED\";\n-    private static final DatatypeConstants.Field[] FIELDS = { DatatypeConstants.YEARS, DatatypeConstants.MONTHS, DatatypeConstants.DAYS, DatatypeConstants.HOURS,\n-            DatatypeConstants.MINUTES, DatatypeConstants.SECONDS };\n-\n@@ -67,1 +63,0 @@\n-        int years = d.getYears();\n@@ -185,3 +180,2 @@\n-            if (expectedLex.equals(TEST_VALUE_FAIL)) {\n-                Assert.fail(\"the value \\\"\" + actualLex + \"\\\" is invalid yet it created the Duration \\\"\" + duration.toString() + \"\\\"\");\n-            }\n+            Assert.assertNotEquals(expectedLex, TEST_VALUE_FAIL, \"the value \\\"\" + actualLex + \"\\\" is invalid \" +\n+                    \"yet it created the Duration \\\"\" + duration.toString() + \"\\\"\" );\n@@ -194,4 +188,3 @@\n-                if (!xmlSchemaType.equals(DatatypeConstants.DURATION_YEARMONTH)) {\n-                    Assert.fail(\"Duration created with XMLSchemaType of\\\"\" + xmlSchemaType + \"\\\" was expected to be \\\"\"\n-                                + DatatypeConstants.DURATION_YEARMONTH + \"\\\" and has the value \\\"\" + duration.toString() + \"\\\"\");\n-                }\n+                Assert.assertEquals(xmlSchemaType, DatatypeConstants.DURATION_YEARMONTH, \"Duration created with \" +\n+                        \"XMLSchemaType of\\\"\" + xmlSchemaType + \"\\\" was expected to be \\\"\"\n+                        + DatatypeConstants.DURATION_YEARMONTH + \"\\\" and has the value \\\"\" + duration.toString() + \"\\\"\");\n@@ -204,5 +197,2 @@\n-                if (!expectedLex.equals(duration.toString())) {\n-                    Assert.fail(\"Duration created with \\\"\" + actualLex + \"\\\" was expected to be \\\"\"\n-                            + expectedLex + \"\\\" and has the value \\\"\" + duration.toString() + \"\\\"\");\n-                }\n-\n+                Assert.assertEquals(duration.toString(), expectedLex, \"Duration created with \\\"\" + actualLex +\n+                        \"\\\" was expected to be \\\"\" + expectedLex + \"\\\" and has the value \\\"\" + duration.toString() + \"\\\"\");\n@@ -211,1 +201,0 @@\n-\n@@ -217,3 +206,2 @@\n-                if (!expectedLex.equals(TEST_VALUE_FAIL)) {\n-                    Assert.fail(\"the value \\\"\" + actualLex + \"\\\" is valid yet it failed with \\\"\" + exception.toString() + \"\\\"\");\n-                }\n+                Assert.assertEquals(TEST_VALUE_FAIL, expectedLex, \"the value \\\"\" + actualLex + \"\\\" is valid yet \" +\n+                        \"it failed with \\\"\" + exception.toString() + \"\\\"\");\n@@ -300,1 +288,1 @@\n-        if (result.length() > 0) {\n+        if(result.length() > 0) {\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/datatype\/Bug6937964Test.java","additions":10,"deletions":22,"binary":false,"changes":32,"status":"modified"}]}