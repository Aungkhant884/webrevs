{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,0 @@\n-import static java.lang.invoke.GenerateJLIClassesHelper.traceSpeciesType;\n@@ -479,1 +478,0 @@\n-                traceSpeciesType(className, salvage);\n@@ -481,0 +479,3 @@\n+                \/\/ ignore\n+            } finally {\n+                traceSpeciesType(className, salvage);\n@@ -491,1 +492,0 @@\n-                    traceSpeciesType(className, salvage);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import jdk.internal.misc.CDS;\n@@ -42,2 +41,0 @@\n-import static java.lang.invoke.LambdaForm.basicTypeSignature;\n-import static java.lang.invoke.LambdaForm.shortenSignature;\n@@ -45,1 +42,0 @@\n-import static java.lang.invoke.MethodHandleStatics.TRACE_RESOLVE;\n@@ -54,23 +50,0 @@\n-    private static final String LF_RESOLVE = \"[LF_RESOLVE]\";\n-    private static final String SPECIES_RESOLVE = \"[SPECIES_RESOLVE]\";\n-\n-    static void traceLambdaForm(String name, MethodType type, Class<?> holder, MemberName resolvedMember) {\n-        if (TRACE_RESOLVE) {\n-            System.out.println(LF_RESOLVE + \" \" + holder.getName() + \" \" + name + \" \" +\n-                    shortenSignature(basicTypeSignature(type)) +\n-                    (resolvedMember != null ? \" (success)\" : \" (fail)\"));\n-        }\n-        if (CDS.isDumpingClassList()) {\n-            CDS.traceLambdaFormInvoker(LF_RESOLVE, holder.getName(), name, shortenSignature(basicTypeSignature(type)));\n-        }\n-    }\n-\n-    static void traceSpeciesType(String cn, Class<?> salvage) {\n-        if (TRACE_RESOLVE) {\n-            System.out.println(SPECIES_RESOLVE + \" \" + cn + (salvage != null ? \" (salvaged)\" : \" (generated)\"));\n-        }\n-        if (CDS.isDumpingClassList()) {\n-            CDS.traceSpeciesType(SPECIES_RESOLVE, cn);\n-        }\n-    }\n-\n@@ -326,1 +299,1 @@\n-                        case SPECIES_RESOLVE:\n+                        case \"[SPECIES_RESOLVE]\":\n@@ -336,1 +309,1 @@\n-                        case LF_RESOLVE:\n+                        case \"[LF_RESOLVE]\":\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java","additions":3,"deletions":30,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,0 @@\n-import static java.lang.invoke.GenerateJLIClassesHelper.traceLambdaForm;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import jdk.internal.misc.CDS;\n@@ -33,0 +34,3 @@\n+import static java.lang.invoke.LambdaForm.basicTypeSignature;\n+import static java.lang.invoke.LambdaForm.shortenSignature;\n+\n@@ -111,0 +115,29 @@\n+    \/**\n+     * If requested, logs the result of resolving the LambdaForm to stdout\n+     * and informs the CDS subsystem about it.\n+     *\/\n+    \/*non-public*\/\n+    static void traceLambdaForm(String name, MethodType type, Class<?> holder, MemberName resolvedMember) {\n+        if (TRACE_RESOLVE) {\n+            System.out.println(\"[LF_RESOLVE] \" + holder.getName() + \" \" + name + \" \" +\n+                    shortenSignature(basicTypeSignature(type)) +\n+                    (resolvedMember != null ? \" (success)\" : \" (fail)\"));\n+        }\n+        if (CDS.isDumpingClassList()) {\n+            CDS.traceLambdaFormInvoker(\"[LF_RESOLVE]\", holder.getName(), name, shortenSignature(basicTypeSignature(type)));\n+        }\n+    }\n+\n+    \/**\n+     * If requested, logs the result of resolving the species type to stdout\n+     * and the CDS subsystem.\n+     *\/\n+    \/*non-public*\/\n+    static void traceSpeciesType(String cn, Class<?> salvage) {\n+        if (TRACE_RESOLVE) {\n+            System.out.println(\"[SPECIES_RESOLVE] \" + cn + (salvage != null ? \" (salvaged)\" : \" (generated)\"));\n+        }\n+        if (CDS.isDumpingClassList()) {\n+            CDS.traceSpeciesType(\"[SPECIES_RESOLVE]\", cn);\n+        }\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleStatics.java","additions":34,"deletions":1,"binary":false,"changes":35,"status":"modified"}]}