{"files":[{"patch":"@@ -42,0 +42,1 @@\n+#include \"utilities\/formatBuffer.hpp\"\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -119,0 +119,8 @@\n+#ifdef ASSERT\n+bool HeapShared::is_archived_object_during_dumptime(oop p) {\n+  assert(HeapShared::is_heap_object_archiving_allowed(), \"must be\");\n+  assert(DumpSharedSpaces, \"must be called during dump time only\");\n+  return Universe::heap()->is_archived_object(p);\n+}\n+#endif\n+\n@@ -876,1 +884,1 @@\n-      assert(!HeapShared::is_archived_object(obj),\n+      assert(!HeapShared::is_archived_object_during_dumptime(obj),\n@@ -895,1 +903,1 @@\n-      assert(HeapShared::is_archived_object(archived), \"must be\");\n+      assert(HeapShared::is_archived_object_during_dumptime(archived), \"must be\");\n@@ -951,1 +959,1 @@\n-  assert(!is_archived_object(orig_obj), \"sanity\");\n+  assert(!is_archived_object_during_dumptime(orig_obj), \"sanity\");\n@@ -1169,1 +1177,1 @@\n-      assert(is_archived_object(obj), \"must be\");\n+      assert(is_archived_object_during_dumptime(obj), \"must be\");\n@@ -1172,1 +1180,1 @@\n-      assert(!is_archived_object(obj), \"must be\");\n+      assert(!is_archived_object_during_dumptime(obj), \"must be\");\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -379,1 +379,1 @@\n-  inline static bool is_archived_object(oop p) NOT_CDS_JAVA_HEAP_RETURN_(false);\n+  static bool is_archived_object_during_dumptime(oop p) NOT_CDS_JAVA_HEAP_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-\n-#include \"gc\/shared\/collectedHeap.inline.hpp\"\n@@ -36,4 +34,0 @@\n-bool HeapShared::is_archived_object(oop p) {\n-  return Universe::heap()->is_archived_object(p);\n-}\n-\n","filename":"src\/hotspot\/share\/cds\/heapShared.inline.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"gc\/shared\/collectedHeap.inline.hpp\"\n@@ -819,8 +820,5 @@\n-  if (HeapShared::is_archived_object(mirror())) {\n-    \/\/ Archive the String field and update the pointer.\n-    oop s = mirror()->obj_field(fd->offset());\n-    oop archived_s = StringTable::create_archived_string(s);\n-    mirror()->obj_field_put(fd->offset(), archived_s);\n-  } else {\n-    guarantee(false, \"Unexpected\");\n-  }\n+  assert(HeapShared::is_archived_object_during_dumptime(mirror()), \"must be\");\n+  \/\/ Archive the String field and update the pointer.\n+  oop s = mirror()->obj_field(fd->offset());\n+  oop archived_s = StringTable::create_archived_string(s);\n+  mirror()->obj_field_put(fd->offset(), archived_s);\n@@ -1345,1 +1343,1 @@\n-  assert(HeapShared::is_archived_object(m), \"must be archived mirror object\");\n+  assert(Universe::heap()->is_archived_object(m), \"must be archived mirror object\");\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -723,1 +723,1 @@\n-  assert(!HeapShared::is_archived_object(s), \"sanity\");\n+  assert(!HeapShared::is_archived_object_during_dumptime(s), \"sanity\");\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"cds\/heapShared.inline.hpp\"\n@@ -29,0 +28,2 @@\n+#include \"gc\/shared\/collectedHeap.inline.hpp\"\n+#include \"gc\/shared\/gc_globals.hpp\"\n@@ -221,1 +222,1 @@\n-  assert(!HeapShared::is_archived_object(forwardee) && !HeapShared::is_archived_object(this),\n+  assert(!Universe::heap()->is_archived_object(forwardee) && !Universe::heap()->is_archived_object(this),\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1936,1 +1936,1 @@\n-  return HeapShared::is_archived_object(obj_oop);\n+  return Universe::heap()->is_archived_object(obj_oop);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}