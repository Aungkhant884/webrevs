[{"commit":{"message":"8292587: AArch64: Support SVE fabd instruction\n\nScalar and NEON fabd instructions were initially supported in\nJDK-8256318. In this patch, we support SVE fabd instruction [1] and add\none Jtreg test case as well.\n\nWith this patch, two instructions `fsub + fabs` would be combined into\none single `fabd` instruction.\n\n```\n  fsub    z16.s, z16.s, z17.s\n  fabs    z16.s, p7\/m, z16.s\n\n  -->\n\n  fabd    z16.s, p7\/m, z16.s, z17.s\n```\n\nIn the initial evaluation of JMH case, i.e.\nFloatingScalarVectorAbsDiff.java, we found the performance uplift done\nby this optimization was easily hidden by the heavy memory load\/store\ninstructions. To avoid that, we updated the JMH case a bit, adding one\nmore group of subtraction and Math.abs operations in the loop body.\n\nHere shows the data with the new JMH case on one 256-bit SVE machine. We\ncan observe about 39% and 35% improvements for the two functions\nrespectively.\n\n```\nBenchmark                                             Before    After  Units\nFloatingScalarVectorAbsDiff.testVectorAbsDiffDouble  260.468  160.965  ns\/op\nFloatingScalarVectorAbsDiff.testVectorAbsDiffFloat   133.963   87.292  ns\/op\n```\n\n[1] https:\/\/developer.arm.com\/documentation\/ddi0596\/2021-12\/SVE-Instructions\/FABD--Floating-point-absolute-difference--predicated--"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorAbsDiffTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/FloatingScalarVectorAbsDiff.java"}],"sha":"c6157252148f4e17863b713c1d7c9e05a4c5af6c"}]