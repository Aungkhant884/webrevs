{"files":[{"patch":"@@ -1044,1 +1044,1 @@\n-            return owntype == Type.noType ?\n+            return (owntype == Type.noType || owntype instanceof ArgumentAttr.ExplicitLambdaType) ?\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/DeferredAttr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8213766\n+ * @summary Assertion error in TypeAnnotations$TypeAnnotationPositions.resolveFrame\n+ * @run compile AttribTreeOfExplicitLambdaType.java\n+ *\/\n+\n+import java.lang.annotation.Target;\n+import java.util.List;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import static java.lang.annotation.ElementType.TYPE_USE;\n+\n+public abstract class AttribTreeOfExplicitLambdaType {\n+    @Target({ TYPE_USE })\n+    public @interface TestAnnotation { }\n+\n+    public abstract void get(final Function<Consumer<Runnable>, Object> function);\n+\n+    public void buggyMethod() {\n+        get(consumer -> {\n+            new Runnable() {\n+                @Override\n+                public void run() {\n+                    consumer.accept(() -> {\n+                        final List<@TestAnnotation Object> buggyDeclaration;\n+                    });\n+                }\n+            };\n+            return null;\n+        });\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/speculative\/AttribTreeOfExplicitLambdaType.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}