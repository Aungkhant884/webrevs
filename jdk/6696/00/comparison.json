{"files":[{"patch":"@@ -81,1 +81,1 @@\n-    static final boolean DEBUG = Boolean.getBoolean(\"jlink.debug\");\n+    public static final boolean DEBUG = Boolean.getBoolean(\"jlink.debug\");\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JlinkTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import jdk.tools.jlink.internal.JlinkTask;\n@@ -30,0 +31,4 @@\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n@@ -33,0 +38,1 @@\n+import jdk.internal.org.objectweb.asm.ClassReader;\n@@ -64,0 +70,29 @@\n+\n+    private void dumpClassFile(String path, byte[] buf) {\n+        try {\n+            String fullPath = String.format(\"%d-%s%s%s\",\n+                 ProcessHandle.current().pid(),\n+                 getName(), File.separator,\n+                 path.replace('\/', File.separatorChar));\n+            System.err.printf(\"Dumping class file %s\\n\", fullPath);\n+            new File(fullPath.substring(0, fullPath.lastIndexOf('\/'))).mkdirs();\n+            Files.write(Paths.get(fullPath), buf);\n+        } catch (IOException ioExp) {\n+            System.err.println(\"writing \" + path + \" failed\");\n+            ioExp.printStackTrace();\n+        }\n+    }\n+\n+    protected ClassReader newClassReader(String path, byte[] buf) {\n+        try {\n+            return new ClassReader(buf);\n+        } catch (IllegalArgumentException iae) {\n+            if (JlinkTask.DEBUG) {\n+                System.err.printf(\"Failed to parse class file: %s\\n\", path);\n+                iae.printStackTrace();\n+                dumpClassFile(path, buf);\n+            }\n+            throw iae;\n+        }\n+    }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/AbstractPlugin.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-                    ClassReader cr = new ClassReader(bytes);\n+                    ClassReader cr = newClassReader(path, bytes);\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/IncludeLocalesPlugin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-                        ClassReader reader = new ClassReader(resource.contentBytes());\n+                        ClassReader reader = newClassReader(path, resource.contentBytes());\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/StripJavaDebugAttributesPlugin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-    private byte[] redefine(byte[] classFile) {\n+    private byte[] redefine(String path, byte[] classFile) {\n@@ -101,1 +101,1 @@\n-        var cr = new ClassReader(classFile);\n+        var cr = newClassReader(path, classFile);\n@@ -192,1 +192,1 @@\n-                        return res.copyWithContent(redefine(res.contentBytes()));\n+                        return res.copyWithContent(redefine(res.path(), res.contentBytes()));\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/VersionPropsPlugin.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}