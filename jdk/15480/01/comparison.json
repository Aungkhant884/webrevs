{"files":[{"patch":"@@ -702,2 +702,2 @@\n-  Node* tlab_top_adr = macro->basic_plus_adr(macro->top()\/*not oop*\/, thread, in_bytes(JavaThread::tlab_top_offset()));\n-  Node* tlab_end_adr = macro->basic_plus_adr(macro->top()\/*not oop*\/, thread, in_bytes(JavaThread::tlab_end_offset()));\n+  Node* tlab_top_adr = AddPNode::make(&macro->igvn(), macro->top()\/*not oop*\/, thread, in_bytes(JavaThread::tlab_top_offset()));\n+  Node* tlab_end_adr = AddPNode::make(&macro->igvn(), macro->top()\/*not oop*\/, thread, in_bytes(JavaThread::tlab_end_offset()));\n@@ -715,1 +715,3 @@\n-  Node* tlab_end = macro->make_load(toobig_false, mem, tlab_end_adr, 0, TypeRawPtr::BOTTOM, T_ADDRESS);\n+  const TypePtr* adr_type = tlab_end_adr->bottom_type()->is_ptr();\n+  Node* tlab_end = LoadNode::make(macro->igvn(), toobig_false, mem, tlab_end_adr, adr_type, TypeRawPtr::BOTTOM, T_ADDRESS, MemNode::unordered);\n+  macro->transform_later(tlab_end);\n@@ -768,2 +770,2 @@\n-  Node* payload_src = phase->basic_plus_adr(src, src_offset);\n-  Node* payload_dst = phase->basic_plus_adr(dest, dest_offset);\n+  Node* payload_src = AddPNode::make(&phase->igvn(), src, src_offset);\n+  Node* payload_dst = AddPNode::make(&phase->igvn(), dest, dest_offset);\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -819,2 +819,2 @@\n-  Node* src = phase->basic_plus_adr(src_base, src_offset);\n-  Node* dest = phase->basic_plus_adr(dest_base, dest_offset);\n+  Node* src = AddPNode::make(&phase->igvn(), src_base, src_offset);\n+  Node* dest = AddPNode::make(&phase->igvn(), dest_base, dest_offset);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -308,2 +308,2 @@\n-    Node* payload_src = phase->basic_plus_adr(src, src_offset);\n-    Node* payload_dst = phase->basic_plus_adr(dest, dest_offset);\n+    Node* payload_src = AddPNode::make(&phase->igvn(), src, src_offset);\n+    Node* payload_dst = AddPNode::make(&phase->igvn(), dest, dest_offset);\n","filename":"src\/hotspot\/share\/gc\/x\/c2\/xBarrierSetC2.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -490,2 +490,2 @@\n-    Node* const payload_src = phase->basic_plus_adr(src, src_offset);\n-    Node* const payload_dst = phase->basic_plus_adr(dest, dest_offset);\n+    Node* const payload_src = AddPNode::make(&phase->igvn(), src, src_offset);\n+    Node* const payload_dst = AddPNode::make(&phase->igvn(), dest, dest_offset);\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#include \"opto\/phaseX.hpp\"\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"opto\/phaseX.hpp\"\n@@ -175,0 +176,17 @@\n+  \/\/ Helper methods roughly modeled after GraphKit:\n+  static Node* make(PhaseIterGVN* igvn, Node* base, Node* ptr, Node* offset) {\n+    return igvn->register_new_node_with_optimizer(new AddPNode(base, ptr, offset));\n+  }\n+\n+  static Node* make(PhaseIterGVN* igvn, Node* base, int offset) {\n+    return (offset == 0) ? base : make(igvn, base, base, (Node*) igvn->makecon(offset));\n+  }\n+\n+  static Node* make(PhaseIterGVN* igvn, Node* base, Node* ptr, int offset) {\n+    return (offset == 0) ? ptr : make(igvn, base, ptr, (Node*) igvn->makecon(offset));\n+  }\n+\n+  static Node* make(PhaseIterGVN* igvn, Node* base, Node* offset) {\n+    return make(igvn, base, base, offset);\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/addnode.hpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1150,7 +1150,0 @@\n-Node* PhaseMacroExpand::make_load(Node* ctl, Node* mem, Node* base, int offset, const Type* value_type, BasicType bt) {\n-  Node* adr = basic_plus_adr(base, offset);\n-  const TypePtr* adr_type = adr->bottom_type()->is_ptr();\n-  Node* value = LoadNode::make(_igvn, ctl, mem, adr, adr_type, value_type, bt, MemNode::unordered);\n-  transform_later(value);\n-  return value;\n-}\n@@ -1159,6 +1152,0 @@\n-Node* PhaseMacroExpand::make_store(Node* ctl, Node* mem, Node* base, int offset, Node* value, BasicType bt) {\n-  Node* adr = basic_plus_adr(base, offset);\n-  mem = StoreNode::make(_igvn, ctl, mem, adr, nullptr, value, bt, MemNode::unordered);\n-  transform_later(mem);\n-  return mem;\n-}\n@@ -1694,1 +1681,0 @@\n-  rawmem = make_store(control, rawmem, object, oopDesc::mark_offset_in_bytes(), mark_node, TypeX_X->basic_type());\n@@ -1696,1 +1682,5 @@\n-  rawmem = make_store(control, rawmem, object, oopDesc::klass_offset_in_bytes(), klass_node, T_METADATA);\n+  Node* memadr = AddPNode::make(&_igvn, object, oopDesc::mark_offset_in_bytes());\n+  rawmem = transform_later(StoreNode::make(_igvn, control, rawmem, memadr, nullptr, mark_node, TypeX_X->basic_type(), MemNode::unordered));\n+\n+  memadr = AddPNode::make(&_igvn, object, oopDesc::klass_offset_in_bytes());\n+  rawmem = transform_later(StoreNode::make(_igvn, control, rawmem, memadr, nullptr, klass_node, T_METADATA, MemNode::unordered));\n@@ -1701,1 +1691,2 @@\n-    rawmem = make_store(control, rawmem, object, arrayOopDesc::length_offset_in_bytes(), length, T_INT);\n+    memadr = AddPNode::make(&_igvn, object, arrayOopDesc::length_offset_in_bytes());\n+    rawmem = transform_later(StoreNode::make(_igvn, control, rawmem, memadr, nullptr, length, T_INT, MemNode::unordered));\n@@ -2315,1 +2306,1 @@\n-      Node* k_adr = basic_plus_adr(obj_or_subklass, oopDesc::klass_offset_in_bytes());\n+      Node* k_adr = AddPNode::make(&_igvn, obj_or_subklass, oopDesc::klass_offset_in_bytes());\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":8,"deletions":17,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -42,14 +42,0 @@\n-  \/\/ Helper methods roughly modeled after GraphKit:\n-  Node* basic_plus_adr(Node* base, int offset) {\n-    return (offset == 0)? base: basic_plus_adr(base, MakeConX(offset));\n-  }\n-  Node* basic_plus_adr(Node* base, Node* ptr, int offset) {\n-    return (offset == 0)? ptr: basic_plus_adr(base, ptr, MakeConX(offset));\n-  }\n-  Node* basic_plus_adr(Node* base, Node* offset) {\n-    return basic_plus_adr(base, base, offset);\n-  }\n-  Node* basic_plus_adr(Node* base, Node* ptr, Node* offset) {\n-    Node* adr = new AddPNode(base, ptr, offset);\n-    return transform_later(adr);\n-  }\n@@ -61,4 +47,0 @@\n-  Node* make_load( Node* ctl, Node* mem, Node* base, int offset,\n-                   const Type* value_type, BasicType bt);\n-  Node* make_store(Node* ctl, Node* mem, Node* base, int offset,\n-                   Node* value, BasicType bt);\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  Node* base =  basic_plus_adr(ary, header);\n+  Node* base =  AddPNode::make(&igvn(), ary, header);\n@@ -64,1 +64,1 @@\n-  return basic_plus_adr(ary, base, scale);\n+  return AddPNode::make(&igvn(), ary, base, scale);\n@@ -645,1 +645,1 @@\n-        Node* p1 = basic_plus_adr(dest_klass, ek_offset);\n+        Node* p1 = AddPNode::make(&igvn(), dest_klass, ek_offset);\n@@ -961,1 +961,1 @@\n-        Node* p1 = basic_plus_adr(dest, x1);\n+        Node* p1 = AddPNode::make(&_igvn, dest, dest, x1);\n@@ -1010,2 +1010,2 @@\n-      Node* sptr = basic_plus_adr(src,  src_off);\n-      Node* dptr = basic_plus_adr(dest, dest_off);\n+      Node* sptr = AddPNode::make(&igvn(), src,  src_off);\n+      Node* dptr = AddPNode::make(&igvn(), dest, dest_off);\n@@ -1038,2 +1038,2 @@\n-  Node* sptr  = basic_plus_adr(src,  src_off);\n-  Node* dptr  = basic_plus_adr(dest, dest_off);\n+  Node* sptr  = AddPNode::make(&igvn(), src,  src_off);\n+  Node* dptr  = AddPNode::make(&igvn(), dest, dest_off);\n@@ -1131,1 +1131,1 @@\n-  Node* p3 = basic_plus_adr(dest_elem_klass, sco_offset);\n+  Node* p3 = AddPNode::make(&igvn(), dest_elem_klass, sco_offset);\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"opto\/connode.hpp\"\n@@ -333,0 +334,1 @@\n+  ConNode* makecon(int value) { return MakeConX(value); }\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}