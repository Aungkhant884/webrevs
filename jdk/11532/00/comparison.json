{"files":[{"patch":"@@ -1089,1 +1089,5 @@\n-\n+                case DECONSTRUCTION_PATTERN: {\n+                    \/\/ TODO: Treat case labels as full type contexts for complete type annotation support in Record Patterns\n+                    \/\/    https:\/\/bugs.openjdk.org\/browse\/JDK-8298154\n+                    return TypeAnnotationPosition.unknown;\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeAnnotations.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8297602\n+ * @summary Compiler crash with type annotation and generic record during pattern matching\n+ * @enablePreview\n+ * @compile --enable-preview -source ${jdk.version} -XDrawDiagnostics T8297602.java\n+ *\/\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+public class T8297602\n+{\n+    void meth(Foo<Integer> p) {\n+        switch(p) {\n+            case Foo<@Annot(field = \"\") Integer>(): {}\n+        };\n+\n+        if (p instanceof Foo<@Annot(field = \"\") Integer>()) {\n+\n+        }\n+    }\n+\n+    @Target({ElementType.TYPE_USE})\n+    @interface Annot {\n+        String field();\n+    }\n+\n+    record Foo<T>() { }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8297602.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"}]}