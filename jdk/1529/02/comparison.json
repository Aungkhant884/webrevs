{"files":[{"patch":"@@ -40,1 +40,0 @@\n-Also 2 different ways of setting signal handlers are tested: sigaction, sigset.\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/README","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -78,2 +78,0 @@\n-                \"-mode\",\n-                null, \/\/ modeIdx\n@@ -83,2 +81,1 @@\n-        int modeIdx = 4;\n-        int scenarioIdx = 6;\n+        int scenarioIdx = 4;\n@@ -96,18 +93,15 @@\n-        for (String mode : new String[] {\"sigset\", \"sigaction\"}) {\n-            for (String scenario : new String[] {\"nojvm\", \"prepre\", \"prepost\", \"postpre\", \"postpost\"}) {\n-                cmd.set(modeIdx, mode);\n-                cmd.set(scenarioIdx, scenario);\n-                System.out.printf(\"START TESTING: SIGNAL = %s, MODE = %s, SCENARIO=%s%n\", signame, mode, scenario);\n-                System.out.printf(\"Do execute: %s%n\", cmd.toString());\n-\n-                ProcessBuilder pb = new ProcessBuilder(cmd);\n-                pb.environment().merge(envVar, Platform.jvmLibDir().toString(),\n-                        (x, y) -> y + File.pathSeparator + x);\n-                pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n-\n-                switch (scenario) {\n-                    case \"postpre\":\n-                    case \"postpost\": {\n-                        pb.environment().merge(\"LD_PRELOAD\", libjsig().toString(),\n-                                (x, y) -> y + File.pathSeparator + x);\n-                    }\n+        for (String scenario : new String[] {\"nojvm\", \"prepre\", \"prepost\", \"postpre\", \"postpost\"}) {\n+            cmd.set(scenarioIdx, scenario);\n+            System.out.printf(\"START TESTING: SIGNAL = %s, SCENARIO=%s%n\", signame, scenario);\n+            System.out.printf(\"Do execute: %s%n\", cmd.toString());\n+\n+            ProcessBuilder pb = new ProcessBuilder(cmd);\n+            pb.environment().merge(envVar, Platform.jvmLibDir().toString(),\n+                    (x, y) -> y + File.pathSeparator + x);\n+            pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+\n+            switch (scenario) {\n+                case \"postpre\":\n+                case \"postpost\": {\n+                    pb.environment().merge(\"LD_PRELOAD\", libjsig().toString(),\n+                            (x, y) -> y + File.pathSeparator + x);\n@@ -115,0 +109,1 @@\n+            }\n@@ -116,12 +111,9 @@\n-                try {\n-                    OutputAnalyzer oa = ProcessTools.executeProcess(pb);\n-                    oa.reportDiagnosticSummary();\n-                    int exitCode = oa.getExitValue();\n-                    if (exitCode == 0) {\n-                        System.out.println(\"PASSED with exit code 0\");\n-                    } else {\n-                        System.out.println(\"FAILED with exit code \" + exitCode);\n-                        passed = false;\n-                    }\n-                } catch (Exception e) {\n-                    throw new Error(\"execution failed\", e);\n+            try {\n+                OutputAnalyzer oa = ProcessTools.executeProcess(pb);\n+                oa.reportDiagnosticSummary();\n+                int exitCode = oa.getExitValue();\n+                if (exitCode == 0) {\n+                    System.out.println(\"PASSED with exit code 0\");\n+                } else {\n+                    System.out.println(\"FAILED with exit code \" + exitCode);\n+                    passed = false;\n@@ -129,0 +121,2 @@\n+            } catch (Exception e) {\n+                throw new Error(\"execution failed\", e);\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/SigTestDriver.java","additions":28,"deletions":34,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,0 @@\n-static char *mode = 0;\n@@ -145,14 +144,0 @@\n-boolean isSupportedSigMode ()\n-{\n-    if ( (!strcmp(mode, \"sigset\")) || (!strcmp(mode, \"sigaction\")) )\n-    {\n-        \/\/ printf(\"%s is a supported mode\\n\", mode);\n-        return TRUE;\n-    }\n-    else\n-    {\n-        printf(\"ERROR: %s is not a supported mode\\n\", mode);\n-        return FALSE;\n-    }\n-}\n-\n@@ -231,17 +216,10 @@\n-    if (!strcmp(mode, \"sigaction\"))\n-    {\n-        struct sigaction act;\n-        act.sa_handler = handler;\n-        sigemptyset(&act.sa_mask);\n-        act.sa_flags = 0;\n-        retval = sigaction(signal_num, &act, 0);\n-        if (retval != 0) {\n-           printf(\"ERROR: failed to set signal handler using function %s, error=%s\\n\", mode, strerror(errno));\n-           exit(TEST_FAILED);\n-        }\n-    } \/\/ end - dealing with sigaction\n-    else if (!strcmp(mode, \"sigset\"))\n-    {\n-        sigset(signal_num, handler);\n-    } \/\/ end dealing with sigset\n-    printf(\"%s: signal handler using function '%s' has been set\\n\", signal_name, mode);\n+    struct sigaction act;\n+    act.sa_handler = handler;\n+    sigemptyset(&act.sa_mask);\n+    act.sa_flags = 0;\n+    retval = sigaction(signal_num, &act, 0);\n+    if (retval != 0) {\n+       printf(\"ERROR: failed to set signal handler error=%s\\n\", strerror(errno));\n+       exit(TEST_FAILED);\n+    }\n+    printf(\"%s: signal handler has been set\\n\", signal_name);\n@@ -292,1 +270,1 @@\n-    printf(\"Usage: sigtest -sig {signal_name} -mode {signal | sigset | sigaction } -scenario {nojvm | postpre | postpost | prepre | prepost}> [-vmopt jvm_option] \\n\");\n+    printf(\"Usage: sigtest -sig {signal_name} -scenario {nojvm | postpre | postpost | prepre | prepost}> [-vmopt jvm_option] \\n\");\n@@ -380,9 +358,0 @@\n-        else if (!strcmp(argv[i], \"-mode\"))\n-        {\n-            i++;\n-            if ( i >= argc )\n-            {\n-                printUsage();\n-            }\n-            mode = argv[i];\n-        }\n@@ -413,1 +382,1 @@\n-    if ( !isSupportedSigScenario() || !isSupportedSigMode() )\n+    if ( !isSupportedSigScenario() )\n@@ -449,1 +418,1 @@\n-    printf(\"%s: start testing: signal_num=%d,  mode=%s, scenario=%s\\n\", signal_name, signal_num, mode, scenario);\n+    printf(\"%s: start testing: signal_num=%d,  scenario=%s\\n\", signal_name, signal_num, scenario);\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/exesigtest.c","additions":14,"deletions":45,"binary":false,"changes":59,"status":"modified"}]}