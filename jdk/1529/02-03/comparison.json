{"files":[{"patch":"@@ -40,0 +40,1 @@\n+Also 2 different ways of setting signal handlers are tested: sigaction, sigset.\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/README","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -78,0 +78,2 @@\n+                \"-mode\",\n+                null, \/\/ modeIdx\n@@ -81,1 +83,2 @@\n-        int scenarioIdx = 4;\n+        int modeIdx = 4;\n+        int scenarioIdx = 6;\n@@ -93,15 +96,18 @@\n-        for (String scenario : new String[] {\"nojvm\", \"prepre\", \"prepost\", \"postpre\", \"postpost\"}) {\n-            cmd.set(scenarioIdx, scenario);\n-            System.out.printf(\"START TESTING: SIGNAL = %s, SCENARIO=%s%n\", signame, scenario);\n-            System.out.printf(\"Do execute: %s%n\", cmd.toString());\n-\n-            ProcessBuilder pb = new ProcessBuilder(cmd);\n-            pb.environment().merge(envVar, Platform.jvmLibDir().toString(),\n-                    (x, y) -> y + File.pathSeparator + x);\n-            pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n-\n-            switch (scenario) {\n-                case \"postpre\":\n-                case \"postpost\": {\n-                    pb.environment().merge(\"LD_PRELOAD\", libjsig().toString(),\n-                            (x, y) -> y + File.pathSeparator + x);\n+        for (String mode : new String[] {\"sigset\", \"sigaction\"}) {\n+            for (String scenario : new String[] {\"nojvm\", \"prepre\", \"prepost\", \"postpre\", \"postpost\"}) {\n+                cmd.set(modeIdx, mode);\n+                cmd.set(scenarioIdx, scenario);\n+                System.out.printf(\"START TESTING: SIGNAL = %s, MODE = %s, SCENARIO=%s%n\", signame, mode, scenario);\n+                System.out.printf(\"Do execute: %s%n\", cmd.toString());\n+\n+                ProcessBuilder pb = new ProcessBuilder(cmd);\n+                pb.environment().merge(envVar, Platform.jvmLibDir().toString(),\n+                        (x, y) -> y + File.pathSeparator + x);\n+                pb.environment().put(\"CLASSPATH\", Utils.TEST_CLASS_PATH);\n+\n+                switch (scenario) {\n+                    case \"postpre\":\n+                    case \"postpost\": {\n+                        pb.environment().merge(\"LD_PRELOAD\", libjsig().toString(),\n+                                (x, y) -> y + File.pathSeparator + x);\n+                    }\n@@ -109,1 +115,0 @@\n-            }\n@@ -111,9 +116,12 @@\n-            try {\n-                OutputAnalyzer oa = ProcessTools.executeProcess(pb);\n-                oa.reportDiagnosticSummary();\n-                int exitCode = oa.getExitValue();\n-                if (exitCode == 0) {\n-                    System.out.println(\"PASSED with exit code 0\");\n-                } else {\n-                    System.out.println(\"FAILED with exit code \" + exitCode);\n-                    passed = false;\n+                try {\n+                    OutputAnalyzer oa = ProcessTools.executeProcess(pb);\n+                    oa.reportDiagnosticSummary();\n+                    int exitCode = oa.getExitValue();\n+                    if (exitCode == 0) {\n+                        System.out.println(\"PASSED with exit code 0\");\n+                    } else {\n+                        System.out.println(\"FAILED with exit code \" + exitCode);\n+                        passed = false;\n+                    }\n+                } catch (Exception e) {\n+                    throw new Error(\"execution failed\", e);\n@@ -121,2 +129,0 @@\n-            } catch (Exception e) {\n-                throw new Error(\"execution failed\", e);\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/SigTestDriver.java","additions":34,"deletions":28,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+static char *mode = 0;\n@@ -144,0 +145,14 @@\n+boolean isSupportedSigMode ()\n+{\n+    if ( (!strcmp(mode, \"sigset\")) || (!strcmp(mode, \"sigaction\")) )\n+    {\n+        \/\/ printf(\"%s is a supported mode\\n\", mode);\n+        return TRUE;\n+    }\n+    else\n+    {\n+        printf(\"ERROR: %s is not a supported mode\\n\", mode);\n+        return FALSE;\n+    }\n+}\n+\n@@ -216,10 +231,24 @@\n-    struct sigaction act;\n-    act.sa_handler = handler;\n-    sigemptyset(&act.sa_mask);\n-    act.sa_flags = 0;\n-    retval = sigaction(signal_num, &act, 0);\n-    if (retval != 0) {\n-       printf(\"ERROR: failed to set signal handler error=%s\\n\", strerror(errno));\n-       exit(TEST_FAILED);\n-    }\n-    printf(\"%s: signal handler has been set\\n\", signal_name);\n+    if (!strcmp(mode, \"sigaction\"))\n+    {\n+        struct sigaction act;\n+        act.sa_handler = handler;\n+        sigemptyset(&act.sa_mask);\n+        act.sa_flags = 0;\n+        retval = sigaction(signal_num, &act, 0);\n+        if (retval != 0) {\n+           printf(\"ERROR: failed to set signal handler using function %s, error=%s\\n\", mode, strerror(errno));\n+           exit(TEST_FAILED);\n+        }\n+    } \/\/ end - dealing with sigaction\n+    else if (!strcmp(mode, \"sigset\"))\n+    {\n+#ifdef __GNUC__\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n+#endif\n+        sigset(signal_num, handler);\n+#ifdef __GNUC__\n+#pragma GCC diagnostic pop\n+#endif\n+    } \/\/ end dealing with sigset\n+    printf(\"%s: signal handler using function '%s' has been set\\n\", signal_name, mode);\n@@ -270,1 +299,1 @@\n-    printf(\"Usage: sigtest -sig {signal_name} -scenario {nojvm | postpre | postpost | prepre | prepost}> [-vmopt jvm_option] \\n\");\n+    printf(\"Usage: sigtest -sig {signal_name} -mode {signal | sigset | sigaction } -scenario {nojvm | postpre | postpost | prepre | prepost}> [-vmopt jvm_option] \\n\");\n@@ -358,0 +387,9 @@\n+        else if (!strcmp(argv[i], \"-mode\"))\n+        {\n+            i++;\n+            if ( i >= argc )\n+            {\n+                printUsage();\n+            }\n+            mode = argv[i];\n+        }\n@@ -382,1 +420,1 @@\n-    if ( !isSupportedSigScenario() )\n+    if ( !isSupportedSigScenario() || !isSupportedSigMode() )\n@@ -418,1 +456,1 @@\n-    printf(\"%s: start testing: signal_num=%d,  scenario=%s\\n\", signal_name, signal_num, scenario);\n+    printf(\"%s: start testing: signal_num=%d,  mode=%s, scenario=%s\\n\", signal_name, signal_num, mode, scenario);\n","filename":"test\/hotspot\/jtreg\/runtime\/signal\/exesigtest.c","additions":51,"deletions":13,"binary":false,"changes":64,"status":"modified"}]}