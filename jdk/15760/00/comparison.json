{"files":[{"patch":"@@ -845,10 +845,0 @@\n-Space* GenCollectedHeap::space_containing(const void* addr) const {\n-  Space* res = _young_gen->space_containing(addr);\n-  if (res != nullptr) {\n-    return res;\n-  }\n-  res = _old_gen->space_containing(addr);\n-  assert(res != nullptr, \"Could not find containing space\");\n-  return res;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -200,1 +200,0 @@\n-  Space* space_containing(const void* addr) const;\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -175,7 +175,0 @@\n-Space* Generation::space_containing(const void* p) const {\n-  GenerationIsInReservedClosure blk(p);\n-  \/\/ Cast away const\n-  ((Generation*)this)->space_iterate(&blk);\n-  return blk.sp;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/generation.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -179,4 +179,0 @@\n-  \/\/ If some space in the generation contains the given \"addr\", return a\n-  \/\/ pointer to that space, else return \"null\".\n-  virtual Space* space_containing(const void* addr) const;\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/generation.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}