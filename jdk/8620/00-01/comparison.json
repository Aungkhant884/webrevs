{"files":[{"patch":"@@ -2860,1 +2860,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -2922,1 +2922,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3078,1 +3078,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3257,1 +3257,1 @@\n-        if (offset >= 0 && offset <= (bb.limit() - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n@@ -3331,1 +3331,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3488,1 +3488,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3611,1 +3611,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -3649,1 +3649,1 @@\n-            if (offset < 0 || offset > (bb.limit() - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2685,1 +2685,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -2747,1 +2747,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -2972,1 +2972,1 @@\n-        if (offset >= 0 && offset <= (bb.limit() - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n@@ -3046,1 +3046,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3195,1 +3195,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -3233,1 +3233,1 @@\n-            if (offset < 0 || offset > (bb.limit() - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2709,1 +2709,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -2771,1 +2771,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -2978,1 +2978,1 @@\n-        if (offset >= 0 && offset <= (bb.limit() - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n@@ -3052,1 +3052,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3182,1 +3182,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -3220,1 +3220,1 @@\n-            if (offset < 0 || offset > (bb.limit() - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2852,1 +2852,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -2914,1 +2914,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3121,1 +3121,1 @@\n-        if (offset >= 0 && offset <= (bb.limit() - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n@@ -3195,1 +3195,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3325,1 +3325,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -3363,1 +3363,1 @@\n-            if (offset < 0 || offset > (bb.limit() - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2713,1 +2713,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -2775,1 +2775,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3000,1 +3000,1 @@\n-        if (offset >= 0 && offset <= (bb.limit() - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n@@ -3074,1 +3074,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3223,1 +3223,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -3261,1 +3261,1 @@\n-            if (offset < 0 || offset > (bb.limit() - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2860,1 +2860,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -2922,1 +2922,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3071,1 +3071,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3256,1 +3256,1 @@\n-        if (offset >= 0 && offset <= (bb.limit() - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n@@ -3330,1 +3330,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3479,1 +3479,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3597,1 +3597,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -3635,1 +3635,1 @@\n-            if (offset < 0 || offset > (bb.limit() - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,5 @@\n+    @ForceInline\n+    static boolean indexInRange(int ix, int vlen, int length) {\n+        return ix >= 0 && ix <= (length - vlen);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorIntrinsics.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3378,1 +3378,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -3440,1 +3440,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3661,1 +3661,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -3820,1 +3820,1 @@\n-        if (offset >= 0 && offset <= (a.length - species.length())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -4012,1 +4012,1 @@\n-        if (offset >= 0 && offset <= (bb.limit() - species.vectorByteSize())) {\n+        if (VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n@@ -4086,1 +4086,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -4306,1 +4306,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -4470,1 +4470,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.length())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.length(), a.length)) {\n@@ -4594,1 +4594,1 @@\n-            if (offset < 0 || offset > (a.length - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), a.length)) {\n@@ -4632,1 +4632,1 @@\n-            if (offset < 0 || offset > (bb.limit() - vsp.vectorByteSize())) {\n+            if (!VectorIntrinsics.indexInRange(offset, vsp.vectorByteSize(), bb.limit())) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}