[{"commit":{"message":"Add IR test\n\nCurrently, the peephole only works for branches, not conditional moves."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestTestRemovalPeephole.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"71737a770967aab6ff5d146f3d90ca070ad24b74"},{"commit":{"message":"Add assert to verify that the machProj and the test operate on the same register.\n\nAlso fix compilation on macos"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/adlc\/formssel.hpp"}],"sha":"ca8fac7e390ead3f28b62160218aa2a5911e604c"},{"commit":{"message":"Use a new approach by telling the peephole which rules set and clear which flags\n\nBy using this approach, the peephole rule is much more general and can cover more cases. This also means we can remove test instructions after add instructions if only specific flags are required."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/adlparse.cpp"},{"filename":"src\/hotspot\/share\/adlc\/adlparse.hpp"},{"filename":"src\/hotspot\/share\/adlc\/forms.hpp"},{"filename":"src\/hotspot\/share\/adlc\/formsopt.hpp"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/adlc\/formssel.hpp"},{"filename":"src\/hotspot\/share\/adlc\/output_c.cpp"}],"sha":"c434ade8989c6e22d926cc117bd91d33ee1ba6f4"},{"commit":{"message":"Merge remote-tracking branch 'upstream\/master' into testPeephole"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/output_c.cpp"}],"sha":"68fb377b9a5a5d310aa177d6edd9d09daeb179a5"},{"commit":{"message":"Remove the old peepreplace empty block - we didn't use them"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/output_c.cpp"}],"sha":"14209e635cd87e46988bb76f2bafd7c9e48159ea"},{"commit":{"message":"Add more benchmark cases"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/x86\/TestRemovalPeephole.java"}],"sha":"2c1a895056f37eb095ae71e29cabaa77107cfb0e"},{"commit":{"message":"Add new benchmarks\n\nAlso fix an error in the xor long peep definition"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/x86\/TestRemovalPeephole.java"}],"sha":"24b7184c3c0a2dfeb10af13a6099f408c6895dc9"},{"commit":{"message":"Merge remote-tracking branch 'upstream\/master' into testPeephole"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"4e74810613eba851a06d3b11a8665f54dcbbfd98"},{"commit":{"message":"Add new matching rules for xor\/or"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"214ddaf909c30531cddd71a41bbe4ed65ef3fb1c"},{"commit":{"message":"Do not use stdlib in peephole func"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"}],"sha":"0cc6af95c42a9e33241e322a03c1d131ef11510d"},{"commit":{"message":"Add comment indication how the new peepprocedures work"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"71761960b6c74618f578c25561c8690bd2752fdd"},{"commit":{"message":"Merge peephole rules into two large peephole operations"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"637326dc30a917d52f532852f904420874479e85"},{"commit":{"message":"Replace test by machProjNode instead of adding a new dummy node"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"}],"sha":"08fb93574904901b72cd896ec374ea570c6b78fd"},{"commit":{"message":"Small cleanup"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"}],"sha":"976a570054cb745e023440cac1f0ed59744143c5"},{"commit":{"message":"Merge remote-tracking branch 'upstream\/master' into testPeephole"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"5540d254e6dd23b6c5789892b576268958a135f3"},{"commit":{"message":"Remove debug define\n\nI just used this as code highlighting was off, oops"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"}],"sha":"8a443ea429abc0763f27749010263f4dded9af06"},{"commit":{"message":"Add new peephole rules to removes TEST instructions right after AND instructions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"32677ca44559674b40d53a2b5d998ec252a094ce"}]