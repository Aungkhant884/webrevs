{"files":[{"patch":"@@ -54,10 +54,0 @@\n-tstring addLibPath(tstring path) {\n-    char *value = ::getenv(\"LD_LIBRARY_PATH\");\n-    tstring env = path;\n-    if (value) {\n-        env = tstring(value) + _T(\";\") + path;\n-    }\n-    ::setenv(\"LD_LIBRARY_PATH\", env.c_str(), 1);\n-    return env;\n-}\n-\n","filename":"src\/jdk.jpackage\/linux\/native\/common\/LinuxSysInfo.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+            .setLibEnvVariableName(_T(\"LD_LIBRARY_PATH\"))\n","filename":"src\/jdk.jpackage\/linux\/native\/libapplauncher\/LinuxLauncherLib.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,1 @@\n+        .setLibEnvVariableName(_T(\"DYLD_LIBRARY_PATH\"))\n","filename":"src\/jdk.jpackage\/macosx\/native\/applauncher\/MacLauncher.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -93,11 +93,0 @@\n-tstring addLibPath(tstring path) {\n-    char *value = ::getenv(\"DYLD_LIBRARY_PATH\");\n-    tstring env = path;\n-    if (value) {\n-        env = tstring(value) + _T(\";\") + path;\n-    }\n-    ::setenv(\"DYLD_LIBRARY_PATH\", env.c_str(), 1);\n-    return env;\n-}\n-\n-\n","filename":"src\/jdk.jpackage\/macosx\/native\/common\/MacSysInfo.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -115,1 +115,2 @@\n-    SysInfo::addLibPath(appDirPath);\n+    SysInfo::setEnvVariable(libEnvVarName, SysInfo::getEnvVariable(\n+            std::nothrow, libEnvVarName) + _T(\";\") + appDirPath);\n","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,5 @@\n+    AppLauncher& setLibEnvVariableName(const tstring& v) {\n+        libEnvVarName = v;\n+        return *this;\n+    }\n+\n@@ -72,0 +77,1 @@\n+    tstring libEnvVarName;\n","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.h","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,0 +86,5 @@\n+    \/**\n+     * Sets the value of environment variable with the given name to the given value.\n+     *\/\n+    void setEnvVariable(const tstring& name, const tstring& value);\n+\n@@ -91,4 +96,0 @@\n-    \/*\n-     * sets value of the appropriate environment variable to include path\n-     *\/\n-    tstring addLibPath(tstring path);\n","filename":"src\/jdk.jpackage\/share\/native\/common\/SysInfo.h","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,4 @@\n+void setEnvVariable(const tstring& name, const tstring& value) {\n+    ::setenv(name.c_str(), value.c_str(), 1);\n+}\n+\n","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixSysInfo.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,0 +148,1 @@\n+        .setLibEnvVariableName(_T(\"PATH\"))\n","filename":"src\/jdk.jpackage\/windows\/native\/applauncher\/WinLauncher.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -212,13 +212,0 @@\n-tstring addLibPath(tstring path) {\n-    bool errorOccured = false;\n-    tstring env = getEnvVariableImpl(_T(\"PATH\"), &errorOccured)\n-            + _T(\";\")\n-            + path;\n-\n-    if (errorOccured) {\n-        env = path;\n-    }\n-    setEnvVariable(_T(\"PATH\"), env);\n-    return env;\n-}\n-\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinSysInfo.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,2 +46,0 @@\n-\n-    void setEnvVariable(const tstring& name, const tstring& value);\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinSysInfo.h","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}