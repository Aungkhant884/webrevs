{"files":[{"patch":"@@ -54,0 +54,10 @@\n+tstring addLibPath(tstring path) {\n+    char *value = ::getenv(\"LD_LIBRARY_PATH\");\n+    tstring env = path;\n+    if (value) {\n+        env = tstring(value) + _T(\";\") + path;\n+    }\n+    ::setenv(\"LD_LIBRARY_PATH\", env.c_str(), 1);\n+    return env;\n+}\n+\n","filename":"src\/jdk.jpackage\/linux\/native\/common\/LinuxSysInfo.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -93,0 +93,11 @@\n+tstring addLibPath(tstring path) {\n+    char *value = ::getenv(\"DYLD_LIBRARY_PATH\");\n+    tstring env = path;\n+    if (value) {\n+        env = tstring(value) + _T(\";\") + path;\n+    }\n+    ::setenv(\"DYLD_LIBRARY_PATH\", env.c_str(), 1);\n+    return env;\n+}\n+\n+\n","filename":"src\/jdk.jpackage\/macosx\/native\/common\/MacSysInfo.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -115,0 +115,2 @@\n+    SysInfo::addLibPath(appDirPath);\n+\n@@ -119,4 +121,1 @@\n-        .addArgument(launcherPath)\n-        .addArgument(_T(\"-Djava.library.path=\")\n-            + appDirPath + FileUtils::pathSeparator\n-            + FileUtils::dirname(launcherPath));\n+        .addArgument(launcherPath);\n","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -90,0 +90,5 @@\n+\n+    \/*\n+     * sets value of the appropriate environment variable to include path\n+     *\/\n+    tstring addLibPath(tstring path);\n","filename":"src\/jdk.jpackage\/share\/native\/common\/SysInfo.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -125,0 +125,4 @@\n+\n+    if (0 != _tputenv_s(name.c_str(), value.c_str())) {\n+        JP_THROW(tstrings::any() << \"_tputenv_s(\" << name << \", \" << value << \") failed: \" << lastCRTError());\n+    }\n@@ -208,0 +212,13 @@\n+tstring addLibPath(tstring path) {\n+    bool errorOccured = false;\n+    tstring env = getEnvVariableImpl(_T(\"PATH\"), &errorOccured)\n+            + _T(\";\")\n+            + path;\n+\n+    if (errorOccured) {\n+        env = path;\n+    }\n+    setEnvVariable(_T(\"PATH\"), env);\n+    return env;\n+}\n+\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinSysInfo.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}