{"files":[{"patch":"@@ -88,3 +88,0 @@\n-    \/\/ Used to ensure that each spun class name is unique\n-    private static final AtomicInteger counter = new AtomicInteger();\n-\n@@ -212,1 +209,1 @@\n-        return name.replace('.', '\/') + \"$$Lambda$\" + counter.incrementAndGet();\n+        return name.replace('.', '\/') + \"$$Lambda$\";\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -101,1 +101,3 @@\n-        StringBuilder sb = new StringBuilder(len);\n+        \/\/ stamp can be up to 19 digits, in theory, plus one hyphen\n+        StringBuilder sb = new StringBuilder(len + 20);\n+        sb.append(System.currentTimeMills()).append('-');\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ProxyClassesDumper.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}