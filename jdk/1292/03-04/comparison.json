{"files":[{"patch":"@@ -31,0 +31,3 @@\n+import java.util.stream.DoubleStream;\n+import java.util.stream.IntStream;\n+import java.util.stream.LongStream;\n@@ -77,0 +80,1 @@\n+@SuppressWarnings(\"exports\")\n@@ -605,0 +609,60 @@\n+\n+    @Override\n+    public IntStream ints(long streamSize) {\n+        return super.ints(streamSize);\n+    }\n+\n+    @Override\n+    public IntStream ints() {\n+        return super.ints();\n+    }\n+\n+    @Override\n+    public IntStream ints(long streamSize, int randomNumberOrigin, int randomNumberBound) {\n+        return super.ints(streamSize, randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public IntStream ints(int randomNumberOrigin, int randomNumberBound) {\n+        return super.ints(randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public LongStream longs(long streamSize) {\n+        return super.longs(streamSize);\n+    }\n+\n+    @Override\n+    public LongStream longs() {\n+        return super.longs();\n+    }\n+\n+    @Override\n+    public LongStream longs(long streamSize, long randomNumberOrigin, long randomNumberBound) {\n+        return super.longs(streamSize, randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public LongStream longs(long randomNumberOrigin, long randomNumberBound) {\n+        return super.longs(randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public DoubleStream doubles(long streamSize) {\n+        return super.doubles(streamSize);\n+    }\n+\n+    @Override\n+    public DoubleStream doubles() {\n+        return super.doubles();\n+    }\n+\n+    @Override\n+    public DoubleStream doubles(long streamSize, double randomNumberOrigin, double randomNumberBound) {\n+        return super.doubles(streamSize, randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public DoubleStream doubles(double randomNumberOrigin, double randomNumberBound) {\n+        return super.doubles(randomNumberOrigin, randomNumberBound);\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/util\/Random.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -29,0 +29,4 @@\n+import java.util.stream.DoubleStream;\n+import java.util.stream.IntStream;\n+import java.util.stream.LongStream;\n+import java.util.stream.Stream;\n@@ -85,0 +89,1 @@\n+@SuppressWarnings(\"exports\")\n@@ -308,0 +313,94 @@\n+    @Override\n+    public Spliterator.OfInt makeIntsSpliterator(long index, long fence, int origin, int bound) {\n+        return super.makeIntsSpliterator(index, fence, origin, bound);\n+    }\n+\n+    @Override\n+    public Spliterator.OfLong makeLongsSpliterator(long index, long fence, long origin, long bound) {\n+        return super.makeLongsSpliterator(index, fence, origin, bound);\n+    }\n+\n+    @Override\n+    public Spliterator.OfDouble makeDoublesSpliterator(long index, long fence, double origin, double bound) {\n+        return super.makeDoublesSpliterator(index, fence, origin, bound);\n+    }\n+\n+    @Override\n+    public Stream<SplittableGenerator> splits() {\n+        return super.splits();\n+    }\n+\n+    @Override\n+    public Stream<SplittableGenerator> splits(long streamSize) {\n+        return super.splits(streamSize);\n+    }\n+\n+    @Override\n+    public Stream<SplittableGenerator> splits(SplittableGenerator source) {\n+        return super.splits(source);\n+    }\n+\n+    @Override\n+    public Stream<SplittableGenerator> splits(long streamSize, SplittableGenerator source) {\n+        return super.splits(streamSize, source);\n+    }\n+\n+    @Override\n+    public IntStream ints(long streamSize) {\n+        return super.ints(streamSize);\n+    }\n+\n+    @Override\n+    public IntStream ints() {\n+        return super.ints();\n+    }\n+\n+    @Override\n+    public IntStream ints(long streamSize, int randomNumberOrigin, int randomNumberBound) {\n+        return super.ints(streamSize, randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public IntStream ints(int randomNumberOrigin, int randomNumberBound) {\n+        return super.ints(randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public LongStream longs(long streamSize) {\n+        return super.longs(streamSize);\n+    }\n+\n+    @Override\n+    public LongStream longs() {\n+        return super.longs();\n+    }\n+\n+    @Override\n+    public LongStream longs(long streamSize, long randomNumberOrigin, long randomNumberBound) {\n+        return super.longs(streamSize, randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public LongStream longs(long randomNumberOrigin, long randomNumberBound) {\n+        return super.longs(randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public DoubleStream doubles(long streamSize) {\n+        return super.doubles(streamSize);\n+    }\n+\n+    @Override\n+    public DoubleStream doubles() {\n+        return super.doubles();\n+    }\n+\n+    @Override\n+    public DoubleStream doubles(long streamSize, double randomNumberOrigin, double randomNumberBound) {\n+        return super.doubles(streamSize, randomNumberOrigin, randomNumberBound);\n+    }\n+\n+    @Override\n+    public DoubleStream doubles(double randomNumberOrigin, double randomNumberBound) {\n+        return super.doubles(randomNumberOrigin, randomNumberBound);\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/util\/SplittableRandom.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -250,1 +250,2 @@\n-    exports jdk.internal.util.random;\n+    exports jdk.internal.util.random to\n+        jdk.random;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}