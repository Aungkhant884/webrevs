{"files":[{"patch":"@@ -126,1 +126,1 @@\n-    private volatile Constructor<T> ctorLong;\n+    private Constructor<T> ctorLong;\n@@ -131,1 +131,1 @@\n-    private volatile Constructor<T> ctorBytes;\n+    private Constructor<T> ctorBytes;\n@@ -148,1 +148,2 @@\n-        if (factoryMap == null) {\n+        Map<String, Provider<? extends RandomGenerator>> fm = RandomGeneratorFactory.factoryMap;\n+        if (fm == null) {\n@@ -150,2 +151,2 @@\n-                if (factoryMap == null) {\n-                    factoryMap =\n+                if (RandomGeneratorFactory.factoryMap == null) {\n+                    fm = RandomGeneratorFactory.factoryMap =\n@@ -161,1 +162,1 @@\n-        return factoryMap;\n+        return fm;\n@@ -171,1 +172,2 @@\n-        if (properties == null) {\n+        Map<RandomGeneratorProperty, Object> props = properties;\n+        if (props == null) {\n@@ -180,1 +182,1 @@\n-                        properties = AccessController.doPrivileged(getAction);\n+                        props = properties = AccessController.doPrivileged(getAction);\n@@ -182,1 +184,1 @@\n-                        properties = Map.of();\n+                        props = properties = Map.of();\n@@ -188,1 +190,1 @@\n-        return properties;\n+        return props;\n@@ -298,1 +300,1 @@\n-    private synchronized void getConstructors(Class<? extends RandomGenerator> randomGeneratorClass) {\n+    private void getConstructors(Class<? extends RandomGenerator> randomGeneratorClass) {\n@@ -300,6 +302,17 @@\n-            PrivilegedExceptionAction<Constructor<?>[]> ctorAction = randomGeneratorClass::getConstructors;\n-            try {\n-                Constructor<?>[] ctors = AccessController.doPrivileged(ctorAction);\n-                for (Constructor<?> ctorGeneric : ctors) {\n-                    Constructor<T> ctorSpecific = (Constructor<T>)ctorGeneric;\n-                    final Class<?>[] parameterTypes = ctorSpecific.getParameterTypes();\n+            synchronized (provider) {\n+                if (ctor == null) {\n+                    PrivilegedExceptionAction<Constructor<?>[]> ctorAction = randomGeneratorClass::getConstructors;\n+                    try {\n+                        Constructor<?>[] ctors = AccessController.doPrivileged(ctorAction);\n+\n+                        Constructor<T> tmpCtor = null;\n+                        Constructor<T> tmpCtorLong = null;\n+                        Constructor<T> tmpCtorBytes = null;\n+                        for (Constructor<?> ctorGeneric : ctors) {\n+                            Constructor<T> ctorSpecific = (Constructor<T>) ctorGeneric;\n+                            final Class<?>[] parameterTypes = ctorSpecific.getParameterTypes();\n+\n+                            if (parameterTypes.length == 0) {\n+                                tmpCtor = ctorSpecific;\n+                            } else if (parameterTypes.length == 1) {\n+                                Class<?> argType = parameterTypes[0];\n@@ -307,4 +320,7 @@\n-                    if (parameterTypes.length == 0) {\n-                        ctor = ctorSpecific;\n-                    } else if (parameterTypes.length == 1) {\n-                        Class<?> argType = parameterTypes[0];\n+                                if (argType == long.class) {\n+                                    tmpCtorLong = ctorSpecific;\n+                                } else if (argType == byte[].class) {\n+                                    tmpCtorBytes = ctorSpecific;\n+                                }\n+                            }\n+                        }\n@@ -312,4 +328,2 @@\n-                        if (argType == long.class) {\n-                            ctorLong = ctorSpecific;\n-                        } else if (argType == byte[].class) {\n-                            ctorBytes = ctorSpecific;\n+                        if (tmpCtor == null) {\n+                            throw new IllegalStateException(\"Random algorithm \" + name() + \" is missing a default constructor\");\n@@ -317,0 +331,7 @@\n+\n+                        \/\/ Store specialized constructors first, guarded by ctor\n+                        ctorBytes = tmpCtorBytes;\n+                        ctorLong = tmpCtorLong;\n+                        ctor = tmpCtor;\n+                    } catch (PrivilegedActionException ex) {\n+                        \/\/ Do nothing\n@@ -319,3 +340,0 @@\n-                assert ctor != null : \"RandomGenerator missing default constructor\";\n-            } catch (PrivilegedActionException ex) {\n-                \/\/ Do nothing\n@@ -330,3 +348,1 @@\n-        if (ctor == null) {\n-            getConstructors(provider.type());\n-        }\n+        getConstructors(provider.type());\n","filename":"src\/java.base\/share\/classes\/java\/util\/random\/RandomGeneratorFactory.java","additions":47,"deletions":31,"binary":false,"changes":78,"status":"modified"}]}