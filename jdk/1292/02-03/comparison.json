{"files":[{"patch":"@@ -214,8 +214,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"SecureRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"Legacy\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, true),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"SecureRandom\",\n+                RandomGeneratorProperty.GROUP, \"Legacy\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, true,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/java.base\/share\/classes\/java\/security\/SecureRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -120,8 +120,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"Random\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"Legacy\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"Random\",\n+                RandomGeneratorProperty.GROUP, \"Legacy\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/java.base\/share\/classes\/java\/util\/Random.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -172,8 +172,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"SplittableRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"Legacy\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"SplittableRandom\",\n+                RandomGeneratorProperty.GROUP, \"Legacy\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/java.base\/share\/classes\/java\/util\/SplittableRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -161,8 +161,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"ThreadLocalRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"Legacy\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"ThreadLocalRandom\",\n+                RandomGeneratorProperty.GROUP, \"Legacy\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n@@ -429,1 +429,1 @@\n-    static final ThreadLocalRandom instance = new ThreadLocalRandom();\n+    private static final ThreadLocalRandom instance = new ThreadLocalRandom();\n@@ -435,3 +435,0 @@\n-       public int nextInt() {\n-           return ThreadLocalRandom.current().nextInt();\n-       }\n@@ -439,4 +436,6 @@\n-       public long nextLong() {\n-           return ThreadLocalRandom.current().nextLong();\n-       }\n-    }\n+        static final AbstractSpliteratorGenerator proxy = new ThreadLocalRandomProxy();\n+\n+\n+        public int nextInt() {\n+            return ThreadLocalRandom.current().nextInt();\n+        }\n@@ -444,1 +443,4 @@\n-    private static final AbstractSpliteratorGenerator proxy = new ThreadLocalRandomProxy();\n+        public long nextLong() {\n+            return ThreadLocalRandom.current().nextLong();\n+        }\n+    }\n@@ -454,1 +456,1 @@\n-        return proxy;\n+        return ThreadLocalRandomProxy.proxy;\n@@ -459,1 +461,1 @@\n-        return new RandomIntsSpliterator(proxy, index, fence, origin, bound);\n+        return new RandomIntsSpliterator(ThreadLocalRandomProxy.proxy, index, fence, origin, bound);\n@@ -462,1 +464,1 @@\n-        return new RandomLongsSpliterator(proxy, index, fence, origin, bound);\n+        return new RandomLongsSpliterator(ThreadLocalRandomProxy.proxy, index, fence, origin, bound);\n@@ -465,1 +467,1 @@\n-        return new RandomDoublesSpliterator(proxy, index, fence, origin, bound);\n+        return new RandomDoublesSpliterator(ThreadLocalRandomProxy.proxy, index, fence, origin, bound);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ThreadLocalRandom.java","additions":23,"deletions":21,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n- *         .sorted((f, g) -> Integer.compare(g.stateBits(), f.stateBits()))\n+ *         .sorted(Comparator.comparingInt(RandomGenerator::stateBits).reversed())\n@@ -116,1 +116,1 @@\n-    private volatile Map<RandomGeneratorProperty, Object> properties = null;\n+    private volatile Map<RandomGeneratorProperty, Object> properties;\n@@ -133,0 +133,18 @@\n+\n+    private static class FactoryMapHolder {\n+        static final Map<String, Provider<? extends RandomGenerator>> FACTORY_MAP = createFactoryMap();\n+\n+        \/**\n+         * Returns the factory map, lazily constructing map on first use.\n+         *\n+         * @return Map of RandomGeneratorFactory classes.\n+         *\/\n+        private static Map<String, Provider<? extends RandomGenerator>> createFactoryMap() {\n+            return ServiceLoader\n+                .load(RandomGenerator.class)\n+                .stream()\n+                .filter(p -> !p.type().isInterface())\n+                .collect(Collectors.toMap(p -> p.type().getSimpleName(), Function.identity()));\n+        }\n+    }\n+\n@@ -148,15 +166,1 @@\n-        Map<String, Provider<? extends RandomGenerator>> fm = RandomGeneratorFactory.factoryMap;\n-        if (fm == null) {\n-            synchronized (RandomGeneratorFactory.class) {\n-                if (RandomGeneratorFactory.factoryMap == null) {\n-                    fm = RandomGeneratorFactory.factoryMap =\n-                        ServiceLoader\n-                            .load(RandomGenerator.class)\n-                            .stream()\n-                            .filter(p -> !p.type().isInterface())\n-                            .collect(Collectors.toMap(p -> p.type().getSimpleName().toUpperCase(),\n-                                    Function.identity()));\n-                }\n-            }\n-        }\n-        return fm;\n+        return FactoryMapHolder.FACTORY_MAP;\n@@ -235,1 +239,1 @@\n-        Provider<? extends RandomGenerator> provider = fm.get(name.toUpperCase());\n+        Provider<? extends RandomGenerator> provider = fm.get(name);\n@@ -250,1 +254,1 @@\n-    static <T extends RandomGenerator> Stream<RandomGeneratorFactory<T>> all(Class<? extends RandomGenerator> category) {\n+    static <T extends RandomGenerator> Stream<RandomGeneratorFactory<T>> all(Class<T> category) {\n@@ -269,1 +273,1 @@\n-    static <T> T of(String name, Class<? extends RandomGenerator> category)\n+    static <T extends RandomGenerator> T of(String name, Class<T> category)\n@@ -288,1 +292,1 @@\n-    static <T extends RandomGenerator> RandomGeneratorFactory<T> factoryOf(String name, Class<? extends RandomGenerator> category)\n+    static <T extends RandomGenerator> RandomGeneratorFactory<T> factoryOf(String name, Class<T> category)\n","filename":"src\/java.base\/share\/classes\/java\/util\/random\/RandomGeneratorFactory.java","additions":25,"deletions":21,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -146,8 +146,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"L128X1024MixRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"LXM\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"L128X1024MixRandom\",\n+                RandomGeneratorProperty.GROUP, \"LXM\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X1024MixRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -136,8 +136,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"L128X128MixRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"LXM\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"L128X128MixRandom\",\n+                RandomGeneratorProperty.GROUP, \"LXM\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X128MixRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -135,8 +135,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"L128X256MixRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"LXM\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"L128X256MixRandom\",\n+                RandomGeneratorProperty.GROUP, \"LXM\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X256MixRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -135,8 +135,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"L32X64MixRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"LXM\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"L32X64MixRandom\",\n+                RandomGeneratorProperty.GROUP, \"LXM\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L32X64MixRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -142,8 +142,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"L64X1024MixRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"LXM\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"L64X1024MixRandom\",\n+                RandomGeneratorProperty.GROUP, \"LXM\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L64X1024MixRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -136,8 +136,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"L64X128MixRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"LXM\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"L64X128MixRandom\",\n+                RandomGeneratorProperty.GROUP, \"LXM\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L64X128MixRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -136,8 +136,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"L64X128StarStarRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"LXM\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"L64X128StarStarRandom\",\n+                RandomGeneratorProperty.GROUP, \"LXM\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L64X128StarStarRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -137,8 +137,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"L64X256MixRandom\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"LXM\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"L64X256MixRandom\",\n+                RandomGeneratorProperty.GROUP, \"LXM\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L64X256MixRandom.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -142,8 +142,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"Xoroshiro128PlusPlus\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"Xoroshiro\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"Xoroshiro128PlusPlus\",\n+                RandomGeneratorProperty.GROUP, \"Xoroshiro\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/Xoroshiro128PlusPlus.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -151,8 +151,8 @@\n-        return Map.ofEntries(\n-                Map.entry(RandomGeneratorProperty.NAME, \"Xoshiro256PlusPlus\"),\n-                Map.entry(RandomGeneratorProperty.GROUP, \"Xoshiro\"),\n-                Map.entry(RandomGeneratorProperty.PERIOD, PERIOD),\n-                Map.entry(RandomGeneratorProperty.STATE_BITS, STATE_BITS),\n-                Map.entry(RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION),\n-                Map.entry(RandomGeneratorProperty.IS_STOCHASTIC, false),\n-                Map.entry(RandomGeneratorProperty.IS_HARDWARE, false)\n+        return Map.of(\n+                RandomGeneratorProperty.NAME, \"Xoshiro256PlusPlus\",\n+                RandomGeneratorProperty.GROUP, \"Xoshiro\",\n+                RandomGeneratorProperty.PERIOD, PERIOD,\n+                RandomGeneratorProperty.STATE_BITS, STATE_BITS,\n+                RandomGeneratorProperty.EQUIDISTRIBUTION, EQUIDISTRIBUTION,\n+                RandomGeneratorProperty.IS_STOCHASTIC, false,\n+                RandomGeneratorProperty.IS_HARDWARE, false\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/Xoshiro256PlusPlus.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}