{"files":[{"patch":"@@ -348,1 +348,1 @@\n-            if (a.type.tsym.isAnnotationType()) {\n+            if (a.type.isErroneous() || a.type.tsym.isAnnotationType()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Annotate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.io.Writer;\n+import java.util.Set;\n+import javax.annotation.processing.AbstractProcessor;\n+import javax.annotation.processing.RoundEnvironment;\n+import javax.annotation.processing.SupportedAnnotationTypes;\n+import javax.lang.model.SourceVersion;\n+import javax.lang.model.element.Element;\n+import javax.lang.model.element.ExecutableElement;\n+import javax.lang.model.element.AnnotationMirror;\n+import javax.lang.model.element.TypeElement;\n+import javax.lang.model.element.VariableElement;\n+import javax.tools.Diagnostic.Kind;\n+import javax.tools.JavaFileObject;\n+import java.util.List;\n+\n+@SupportedAnnotationTypes(\"*\")\n+public class Processor extends AbstractProcessor {\n+\n+  @Override\n+  public SourceVersion getSupportedSourceVersion() {\n+    return SourceVersion.latestSupported();\n+  }\n+\n+  int round = 1;\n+\n+  @Override\n+  public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n+    processingEnv.getMessager().printMessage(Kind.NOTE, \"round \" + round);\n+    Element t = processingEnv.getElementUtils().getTypeElement(\"T8268575\");\n+    for (Element e : t.getEnclosedElements()) {\n+      if (e instanceof ExecutableElement) {\n+        for (VariableElement p : ((ExecutableElement) e).getParameters()) {\n+            List<? extends AnnotationMirror> annos = p.getAnnotationMirrors();\n+            if (annos.size() != 1) {\n+                throw new RuntimeException(\"Missing annotation in round \" + round);\n+            }\n+        }\n+      }\n+    }\n+    if (round == 1) {\n+      String name = \"A\";\n+      try {\n+        JavaFileObject jfo = processingEnv.getFiler().createSourceFile(name);\n+        try (Writer w = jfo.openWriter()) {\n+          w.write(\"@interface \" + name + \" {}\");\n+        }\n+      } catch (IOException e) {\n+        throw new UncheckedIOException(e);\n+      }\n+    }\n+    round++;\n+    return false;\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/8268575\/Processor.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug     8268575\n+ * @summary Annotations not visible on model elements before they are generated\n+ * @build   Processor\n+ * @compile -processor Processor T8268575.java\n+ *\/\n+\n+class T8268575 {\n+  void f(@A int x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/8268575\/T8268575.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"}]}