{"files":[{"patch":"@@ -706,1 +706,1 @@\n-              | MIIM_STATE | MIIM_SUBMENU | MIIM_TYPE;\n+              | MIIM_STATE | MIIM_SUBMENU | MIIM_FTYPE;\n@@ -798,4 +798,0 @@\n-\n-        if (badAlloc) {\n-            throw std::bad_alloc();\n-        }\n@@ -983,1 +979,1 @@\n- * Signature: (Ljava\/lang\/String;)V\n+ * Signature: ()V\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_MenuItem.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-import java.awt.Dimension;\n@@ -32,1 +31,0 @@\n-import java.awt.Rectangle;\n@@ -34,3 +32,0 @@\n-import java.awt.Toolkit;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n@@ -38,0 +33,3 @@\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.image.BufferedImage;\n@@ -48,1 +46,0 @@\n- * @run main\/othervm -Dsun.java2d.uiScale=1 SetLabelTest\n@@ -51,1 +48,1 @@\n-public class SetLabelTest implements ActionListener {\n+public class SetLabelTest {\n@@ -55,0 +52,1 @@\n+    private static PopupMenu pm;\n@@ -56,3 +54,1 @@\n-    private static boolean passed = true;\n-    private static final String[][] newLabels = {new String[]{\"New Menu-1\", \"New MI-1\"},\n-                                                 new String[]{\"New PM-1\", \"New PMI-1\"}};\n+    private static StringBuffer errorLog = new StringBuffer();\n@@ -61,5 +57,0 @@\n-        SetLabelTest obj = new SetLabelTest();\n-        obj.start();\n-    }\n-\n-    public void start() throws Exception {\n@@ -71,1 +62,1 @@\n-            EventQueue.invokeAndWait(this::createTestUI);\n+            EventQueue.invokeAndWait(() -> createTestUI());\n@@ -75,25 +66,6 @@\n-            \/\/ First Menu\n-            robot.mouseMove(frameLoc.x + 35, frameLoc.y + 35);\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.delay(300);\n-            robot.mouseMove(frameLoc.x + 35, frameLoc.y + 90);\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.delay(500);\n-            captureScreen(\"Img_1\");\n-\n-            \/\/Second Menu\n-            robot.mouseMove(frameLoc.x + 130, frameLoc.y + 35);\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.delay(300);\n-            robot.mouseMove(frameLoc.x + 130, frameLoc.y + 90);\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.delay(500);\n-            captureScreen(\"Img_2\");\n-\n-            if(!checkLabels()) {\n-                captureScreen(\"Img_Failed\");\n-                throw new RuntimeException(\"Test Failed! setLabel does not work\");\n+            checkMenu();\n+            checkPopupMenu();\n+\n+            if (!errorLog.isEmpty()) {\n+                throw new RuntimeException(\"Before & After screenshots are same.\" +\n+                        \" Test fails for the following case(s):\\n\" + errorLog);\n@@ -110,2 +82,3 @@\n-    private void createTestUI() {\n-        frame = new Frame(\"Menu & MenuItem SetLabel Test\");\n+    private static void createTestUI() {\n+        frame = new Frame(\"Menu SetLabel Test\");\n+        frame.setUndecorated(true);\n@@ -117,1 +90,0 @@\n-        mi1.addActionListener(this);\n@@ -120,2 +92,1 @@\n-        MenuItem mi2 = new MenuItem(\"Change Menu1\");\n-        mi2.addActionListener(this);\n+        MenuItem mi2 = new MenuItem(\"MI-2\");\n@@ -126,1 +97,1 @@\n-        PopupMenu pm = new PopupMenu(\"PopupMenu1\");\n+        pm = new PopupMenu();\n@@ -128,1 +99,0 @@\n-        pm1.addActionListener(this);\n@@ -130,5 +100,13 @@\n-        pm.addSeparator();\n-        MenuItem pm2 = new MenuItem(\"Change Menu2\");\n-        pm2.addActionListener(this);\n-        pm.add(pm2);\n-        mb.add(pm);\n+        frame.add(pm);\n+\n+        frame.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mousePressed(MouseEvent e) {\n+            }\n+\n+            @Override\n+            public void mouseReleased(MouseEvent e) {\n+                if (e.getButton() != InputEvent.BUTTON1_DOWN_MASK) {\n+                    showPopup(e);\n+                }\n+            }\n@@ -136,0 +114,7 @@\n+            private void showPopup(MouseEvent e) {\n+                if (e.isPopupTrigger()) {\n+                    pm.show(e.getComponent(),\n+                            e.getX(), e.getY());\n+                }\n+            }\n+        });\n@@ -138,1 +123,1 @@\n-        frame.setLocationRelativeTo(null);\n+        frame.setLocation(500,500);\n@@ -142,17 +127,13 @@\n-    private static void changeLabels(int menuIndex, String[] labels) {\n-            Menu m1 = mb.getMenu(menuIndex);\n-            m1.setLabel(labels[0]);\n-            MenuItem mItem1 = m1.getItem(0);\n-            mItem1.setLabel(labels[1]);\n-    }\n-\n-    private static boolean checkLabels() {\n-        for (int i = 0; i < 2; i++) {\n-            Menu m1 = mb.getMenu(i);\n-            String menuLabel = m1.getLabel();\n-            String menuItemLabel = m1.getItem(0).getLabel();\n-            if (!(menuLabel.equals(newLabels[i][0])\n-                    && menuItemLabel.equals(newLabels[i][1]))) {\n-                passed = false;\n-                break;\n-            }\n+    private static void checkMenu() throws IOException {\n+        BufferedImage beforeImgMenu = robot.createScreenCapture(frame.getBounds());\n+        Menu m1 = mb.getMenu(0);\n+        m1.setLabel(\"New Menu\");\n+        MenuItem mItem1 = m1.getItem(0);\n+        mItem1.setLabel(\"New Menu Item\");\n+        robot.delay(200);\n+        BufferedImage afterImgMenu = robot.createScreenCapture(frame.getBounds());\n+\n+        if (compareImages(beforeImgMenu, afterImgMenu)) {\n+            ImageIO.write(beforeImgMenu, \"png\", new File(\"MenuBefore.png\"));\n+            ImageIO.write(afterImgMenu, \"png\", new File(\"MenuAfter.png\"));\n+            errorLog.append(\"Menu case\\n\");\n@@ -160,1 +141,0 @@\n-        return passed;\n@@ -163,6 +143,17 @@\n-    @Override\n-    public void actionPerformed(ActionEvent e) {\n-        if (e.getActionCommand().equals(\"Change Menu1\")) {\n-            changeLabels(0, newLabels[0]);\n-        } else {\n-            changeLabels(1, newLabels[1]);\n+    private static void checkPopupMenu() throws IOException {\n+        BufferedImage beforeImgPopup = robot.createScreenCapture(frame.getBounds());\n+        robot.mouseMove(frameLoc.x + (frame.getWidth() \/ 2),\n+                frameLoc.y + (frame.getHeight() \/2));\n+        robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+        robot.delay(200);\n+        pm.getItem(0).setLabel(\"Changed Label\");\n+        BufferedImage afterImgPopup = robot.createScreenCapture(frame.getBounds());\n+        robot.delay(300);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+        if (compareImages(beforeImgPopup, afterImgPopup)) {\n+            ImageIO.write(beforeImgPopup, \"png\", new File(\"PopupBefore.png\"));\n+            ImageIO.write(afterImgPopup, \"png\", new File(\"PopupAfter.png\"));\n+            errorLog.append(\"Popup case\\n\");\n@@ -172,9 +163,7 @@\n-    private static void captureScreen(String filename) {\n-        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n-        try {\n-            ImageIO.write(\n-                    robot.createScreenCapture(new Rectangle(0, 0, screenSize.width, screenSize.height)),\n-                    \"png\",\n-                    new File(filename + \".png\")\n-            );\n-        } catch (IOException ignored) {\n+    private static boolean compareImages(BufferedImage beforeImg, BufferedImage afterImg) {\n+        for (int x = 0; x < beforeImg.getWidth(); x++) {\n+            for (int y = 0; y < beforeImg.getHeight(); y++) {\n+                if (beforeImg.getRGB(x, y) != afterImg.getRGB(x, y)) {\n+                    return false;\n+                }\n+            }\n@@ -182,0 +171,1 @@\n+        return true;\n","filename":"test\/jdk\/java\/awt\/MenuItem\/SetLabelTest.java","additions":77,"deletions":87,"binary":false,"changes":164,"status":"modified"}]}