{"files":[{"patch":"@@ -41,0 +41,4 @@\n+  enum Phase {\n+    \/\/ Implicit phase values for oopstorages.\n+  };\n+\n@@ -48,1 +52,1 @@\n-typedef uint WeakProcessorPhase;\n+typedef WeakProcessorPhases::Phase WeakProcessorPhase;\n","filename":"src\/hotspot\/share\/gc\/shared\/weakProcessorPhases.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -122,0 +122,3 @@\n+\/\/ This checks for posting and rehashing before operations that\n+\/\/ this tagmap table.  The calls from a JavaThread only rehash, posting is\n+\/\/ only done before heap walks.\n@@ -1173,1 +1176,1 @@\n-void JvmtiTagMap::post_dead_object_on_vm_thread() {\n+void JvmtiTagMap::post_dead_objects_on_vm_thread() {\n@@ -1186,1 +1189,1 @@\n-  bool _some_dead;\n+  bool _some_dead_found;\n@@ -1197,1 +1200,1 @@\n-    _some_dead(false),\n+    _some_dead_found(false),\n@@ -1206,1 +1209,1 @@\n-  bool some_dead() const { return _some_dead; }\n+  bool some_dead_found() const { return _some_dead_found; }\n@@ -1221,1 +1224,1 @@\n-          _some_dead = true;\n+          _some_dead_found = true;\n@@ -1286,2 +1289,2 @@\n-  if (collector.some_dead() && env()->is_enabled(JVMTI_EVENT_OBJECT_FREE)) {\n-    post_dead_object_on_vm_thread();\n+  if (collector.some_dead_found() && env()->is_enabled(JVMTI_EVENT_OBJECT_FREE)) {\n+    post_dead_objects_on_vm_thread();\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  void post_dead_object_on_vm_thread();\n+  void post_dead_objects_on_vm_thread();\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  assert (find(index, hash, obj) == NULL, \"shouldn't already be present\");\n+  assert(find(index, hash, obj) == NULL, \"shouldn't already be present\");\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMapTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-const int _small_table_sizes[] = {107, 1009, 2017, 4049, 5051, 10103, 20201, 40423 } ;\n+const int _small_table_sizes[] = { 107, 1009, 2017, 4049, 5051, 10103, 20201, 40423 } ;\n","filename":"src\/hotspot\/share\/utilities\/hashtable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}