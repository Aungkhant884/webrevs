{"files":[{"patch":"@@ -224,0 +224,9 @@\n+    if (src->hOutputBuffer) {\n+        assert(src->outbuf.ip == 0);\n+        src->outbufSize = (*env)->GetArrayLength(env, src->hOutputBuffer);\n+        src->outbuf.ip = (int *)(*env)->GetPrimitiveArrayCritical\n+            (env, src->hOutputBuffer, 0);\n+        if (src->outbuf.ip == 0) {\n+            return 0;\n+        }\n+    }\n@@ -229,0 +238,1 @@\n+            RELEASE_ARRAYS(env, src);\n@@ -235,10 +245,0 @@\n-    if (src->hOutputBuffer) {\n-        assert(src->outbuf.ip == 0);\n-        src->outbufSize = (*env)->GetArrayLength(env, src->hOutputBuffer);\n-        src->outbuf.ip = (int *)(*env)->GetPrimitiveArrayCritical\n-            (env, src->hOutputBuffer, 0);\n-        if (src->outbuf.ip == 0) {\n-            RELEASE_ARRAYS(env, src);\n-            return 0;\n-        }\n-    }\n","filename":"src\/java.desktop\/share\/native\/libjavajpeg\/jpegdecoder.c","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Image;\n+import java.awt.MediaTracker;\n+import java.awt.Toolkit;\n+\n+public class GetImageJNICheck extends Component {\n+\n+     public static void main(String[] args) throws Exception {\n+        System.setProperty(\"java.awt.headless\", \"true\");\n+        Toolkit tk = Toolkit.getDefaultToolkit();\n+        String testPath = System.getProperty(\"test.src\", \".\");\n+        String imgFile = testPath + java.io.File.separator + \"duke.jpg\";\n+        Image image = tk.getImage(imgFile);\n+        MediaTracker mt = new MediaTracker(new GetImageJNICheck() );\n+        mt.addImage(image, 0);\n+        mt.waitForAll();\n+        System.exit(0);\n+     }\n+}\n","filename":"test\/jdk\/java\/awt\/image\/GetImageJNICheck\/GetImageJNICheck.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+#!\/bin\/ksh -p\n+#\n+# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+#\n+#   @test\n+#   @bug        8257809\n+#   @summary    Tests that there are no JNI warnings.\n+#   @compile GetImageJNICheck.java\n+#   @run shell\/timeout=300 GetImageJNICheck.sh\n+#\n+OS=`uname`\n+\n+if [ \"${TESTJAVA}\" = \"\" ]\n+then\n+  echo \"TESTJAVA not set.  Test cannot execute.  Failed.\"\n+  exit 1\n+fi\n+\n+# pick up the compiled class files.\n+if [ -z \"${TESTCLASSES}\" ]; then\n+  CP=\".\"\n+  $TESTJAVA\/bin\/javac GetImageJNICheck.java\n+else\n+  CP=\"${TESTCLASSES}\"\n+fi\n+\n+$TESTJAVA\/bin\/java ${TESTVMOPTS} \\\n+    -cp \"${CP}\" -Xcheck:jni GetImageJNICheck | grep ReleasePrimitiveArrayCritical > \"${CP}\"\/log.txt\n+\n+#if [ $? -ne 0 ]\n+#    then\n+#      echo \"Test fails: exception thrown!\"\n+#      exit 1\n+#fi\n+\n+# any messages logged indicate a failure.\n+if [ -s \"${CP}\"\/log.txt ]; then\n+    echo \"Test failed\"\n+    cat \"${CP}\"\/log.txt\n+    exit 1\n+fi\n+\n+echo \"Test passed\"\n+exit 0\n","filename":"test\/jdk\/java\/awt\/image\/GetImageJNICheck\/GetImageJNICheck.sh","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"","filename":"test\/jdk\/java\/awt\/image\/GetImageJNICheck\/duke.jpg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sanity\/client\/SwingSet\/src\/resources\/images\/duke.jpg","status":"copied"}]}