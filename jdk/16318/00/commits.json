[{"commit":{"message":"8318051: Avoid try\/catch in Duration.between\n\nThe existing logic uses nanosecond arithmetic to compute\nDuration.between. Since that can overflow for durations greater than 292\nyears, it has a try\/catch that falls back to computing the seconds part\nand adjusting that for nanoseconds. However, exception handling is\ntypically very expensive, so in cases like the one in the linked bug\nthis method was a performance trap.\n\nThe new logic is essentially the old catch block. It needs a special\ncase for when the number of seconds is 0, so it is slightly slower in\nthat case. But in other cases it is probably somewhat faster, because it\navoids a\n[division](https:\/\/github.com\/openjdk\/jdk\/blob\/8d9a4b43f4fff30fd217dab2c224e641cb913c18\/src\/java.base\/share\/classes\/java\/time\/Duration.java#L283)\nand associated mod.\n\nThe test coverage in\n[`TCKDuration`](https:\/\/github.com\/openjdk\/jdk\/blob\/8d9a4b43f4fff30fd217dab2c224e641cb913c18\/test\/jdk\/java\/time\/tck\/java\/time\/TCKDuration.java#L780)\nis already very thorough so no new tests are needed."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java"}],"sha":"27df17ffd5816dbe8844824c2f194b023887ec58"}]