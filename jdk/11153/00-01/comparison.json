{"files":[{"patch":"@@ -62,3 +62,4 @@\n-            String previewFeatureInOtherMajorVersion, boolean isAcceptable) throws Throwable {\n-        Path baseVersionClassesDir = compileLibClass(baseMajorVersion, \"\");\n-        Path otherVersionClassesDir = compileLibClass(otherMajorVersion, previewFeatureInOtherMajorVersion);\n+            boolean enablePreviewForBaseVersion, boolean enablePreviewForOtherVersion, boolean isAcceptable)\n+            throws Throwable {\n+        Path baseVersionClassesDir = compileLibClass(baseMajorVersion, enablePreviewForBaseVersion);\n+        Path otherVersionClassesDir = compileLibClass(otherMajorVersion, enablePreviewForOtherVersion);\n@@ -78,1 +79,1 @@\n-    private Path compileLibClass(String majorVersion, String previewFeature) throws Throwable {\n+    private Path compileLibClass(String majorVersion, boolean enablePreview) throws Throwable {\n@@ -81,4 +82,1 @@\n-                    public static void method() {\n-                        System.out.println($VERSION);\n-                        $PREVIEW_FEATURE\n-                    }\n+                    public static int version = $VERSION;\n@@ -89,2 +87,1 @@\n-        Files.write(sourceFile,\n-                classTemplate.replace(\"$VERSION\", majorVersion).replace(\"$PREVIEW_FEATURE\", previewFeature).getBytes());\n+        Files.write(sourceFile, classTemplate.replace(\"$VERSION\", majorVersion).getBytes());\n@@ -94,4 +91,4 @@\n-        javac(classesDir,\n-                previewFeature.isBlank() ? List.of(\"--release\", majorVersion)\n-                        : List.of(\"--enable-preview\", \"--release\", majorVersion),\n-                sourceFile);\n+        javac(classesDir, List.of(\"--release\", majorVersion), sourceFile);\n+        if (enablePreview) {\n+            rewriteMinorVersionForEnablePreviewClass(classesDir.resolve(\"Lib.class\"));\n+        }\n@@ -101,0 +98,7 @@\n+    private void rewriteMinorVersionForEnablePreviewClass(Path classFile) throws Throwable {\n+        byte[] classBytes = Files.readAllBytes(classFile);\n+        classBytes[4] = -1;\n+        classBytes[5] = -1;\n+        Files.write(classFile, classBytes);\n+    }\n+\n@@ -104,3 +108,8 @@\n-                { \"19\", \"20\", \"java.lang.foreign.Linker.nativeLinker();\", true },\n-                { \"19\", \"20\", \"\", true },\n-                { \"20\", \"19\", \"\", false },\n+                { \"19\", \"20\", false, true, true },\n+                { \"19\", \"20\", false, false, true },\n+                { \"19\", \"20\", true, true, true },\n+                { \"19\", \"20\", true, false, true },\n+                { \"20\", \"19\", false, true, false },\n+                { \"20\", \"19\", false, false, false },\n+                { \"20\", \"19\", true, true, false },\n+                { \"20\", \"19\", true, false, false },\n","filename":"test\/jdk\/tools\/jar\/multiRelease\/VersionValidatorTest.java","additions":26,"deletions":17,"binary":false,"changes":43,"status":"modified"}]}