{"files":[{"patch":"@@ -430,0 +430,4 @@\n+  <Event name=\"OutOfMemory\" category=\"Java Virtual Machine, Runtime\" label=\"Out of Memory\" startTime=\"false\" stackTrace=\"true\">\n+    <Field type=\"string\" name=\"message\" label=\"Exception message\" \/>\n+  <\/Event>\n+\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,0 +44,3 @@\n+#if INCLUDE_JFR\n+#include \"jfr\/jfrEvents.hpp\"\n+#endif\n@@ -166,0 +169,8 @@\n+#if INCLUDE_JFR\n+    EventOutOfMemory event;\n+    if (event.should_commit()) {\n+      oop msg = java_lang_Throwable::message(h_exception());\n+      event.set_message(java_lang_String::as_utf8_string(msg));\n+      event.commit();\n+    }\n+#endif\n","filename":"src\/hotspot\/share\/utilities\/exceptions.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -457,0 +457,5 @@\n+    <event name=\"jdk.OutOfMemory\">\n+      <setting name=\"enabled\">true<\/setting>\n+      <setting name=\"stackTrace\">true<\/setting>\n+    <\/event>\n+\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -457,0 +457,5 @@\n+    <event name=\"jdk.OutOfMemory\">\n+      <setting name=\"enabled\">true<\/setting>\n+      <setting name=\"stackTrace\">true<\/setting>\n+    <\/event>\n+\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, NTT DATA.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Test jdk.OutOfMemory event\n+ * @requires vm.hasJFR\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc java.compiler\n+ * @run main\/othervm -Xmx200m -XX:StartFlightRecording\n+ *      jdk.jfr.event.runtime.TestOutOfMemory\n+ *\/\n+package jdk.jfr.event.runtime;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import jdk.jfr.consumer.RecordingStream;\n+\n+public class TestOutOfMemory implements Runnable {\n+\n+    public void run() {\n+        List<byte[]> list = new ArrayList<>();\n+        try {\n+            while (true) {\n+                list.add(new byte[10 * 1024 * 1024]);\n+            }\n+        } catch (OutOfMemoryError e) {\n+            \/\/ expected\n+            System.out.println(\"OutOfMemoryError was thrown in consumer thread\");\n+        }\n+    }\n+\n+    public static void main(String... args) throws Exception {\n+        CountDownLatch eventArrived = new CountDownLatch(1);\n+\n+        try (RecordingStream r = new RecordingStream()) {\n+            r.onEvent(\"jdk.OutOfMemory\", e -> eventArrived.countDown());\n+            r.startAsync();\n+\n+            Thread heapConsumer = new Thread(new TestOutOfMemory(), \"Java heap consumer\");\n+            heapConsumer.start();\n+\n+            eventArrived.await();\n+            heapConsumer.join();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestOutOfMemory.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"}]}