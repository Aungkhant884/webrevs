[{"commit":{"message":"Fix the interleaving cases using as index offset and add new reduced case from JDK-8293216\n\nChange-Id: Ia20009e262e49ef0d6096133f00acad614b4a1dc"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/superword.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestPickLastMemoryState.java"}],"sha":"c733f0399be4553497dec7e157aa07fbba6a6e40"},{"commit":{"message":"Merge branch 'master' into fg8290910\n\nChange-Id: I2393a1f4f744b2ed258803c82f3198c2f2e5a8ac"},"files":[],"sha":"bfed81d3d4380f5b08fc53e9074dc5c8bb171363"},{"commit":{"message":"Code style change: add one space\n\nChange-Id: I2794060ac0f9dbe006e32f202111ee08f09d96a1"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"}],"sha":"01d64113d646b4c370802ff2df49b2238d81125a"},{"commit":{"message":"8290910: Wrong memory state is picked in SuperWord::co_locate_pack()\n\nAfter JDK-8283091, the loop below can be vectorized partially.\nStatement 1 can be vectorized but statement 2 can't.\n```\n\/\/ int[] iArr; long[] lArrFld; int i1,i2;\nfor (i1 = 6; i1 < 227; i1++) {\n  iArr[i1] += lArrFld[i1]++; \/\/ statement 1\n  iArr[i1 + 1] -= (i2++); \/\/ statement 2\n}\n```\n\nBut we got incorrect results because the vector packs of iArr are\nscheduled incorrectly like:\n```\n...\nload_vector XMM1,[R8 + #16 + R11 << #2]\nmovl    RDI, [R8 + #20 + R11 << #2] # int\nload_vector XMM2,[R9 + #8 + R11 << #3]\nsubl    RDI, R11    # int\nvpaddq  XMM3,XMM2,XMM0  ! add packedL\nstore_vector [R9 + #8 + R11 << #3],XMM3\nvector_cast_l2x  XMM2,XMM2  !\nvpaddd  XMM1,XMM2,XMM1  ! add packedI\naddl    RDI, #228   # int\nmovl    [R8 + #20 + R11 << #2], RDI # int\nmovl    RBX, [R8 + #24 + R11 << #2] # int\nsubl    RBX, R11    # int\naddl    RBX, #227   # int\nmovl    [R8 + #24 + R11 << #2], RBX # int\n...\nmovl    RBX, [R8 + #40 + R11 << #2] # int\nsubl    RBX, R11    # int\naddl    RBX, #223   # int\nmovl    [R8 + #40 + R11 << #2], RBX # int\nmovl    RDI, [R8 + #44 + R11 << #2] # int\nsubl    RDI, R11    # int\naddl    RDI, #222   # int\nmovl    [R8 + #44 + R11 << #2], RDI # int\nstore_vector [R8 + #16 + R11 << #2],XMM1\n...\n```\nsimplified as:\n```\nload_vector iArr in statement 1\nunvectorized loads\/stores in statement 2\nstore_vector iArr in statement 1\n```\nWe cannot pick the memory state from the first load for LoadI pack\nhere, as the LoadI vector operation must load the new values in memory\nafter iArr writes 'iArr[i1 + 1] - (i2++)' to 'iArr[i1 + 1]'(statement 2).\nWe must take the memory state of the last load where we have assigned\nnew values ('iArr[i1 + 1] - (i2++)') to the iArr array.\n\nIn JDK-8240281, we picked the memory state of the first load. Different\nfrom the scenario in JDK-8240281, the store, which is dependent on an\nearlier load here, is in a pack to be scheduled and the LoadI pack\ndepends on the last_mem. As designed[2], to schedule the StoreI pack,\nall memory operations in another single pack should be moved in the same\ndirection. We know that the store in the pack depends on one of loads in\nthe LoadI pack, so the LoadI pack should be scheduled before the StoreI\npack. And the LoadI pack depends on the last_mem, so the last_mem must\nbe scheduled before the LoadI pack and also before the store pack.\nTherefore, we need to take the memory state of the last load for the\nLoadI pack here.\n\nTo fix it, the pack adds additional checks while picking the memory state\nof the first load. When the store locates in a pack and the load pack\nrelies on the last_mem, we shouldn't choose the memory state of the\nfirst load but choose the memory state of the last load.\n\n[1]https:\/\/github.com\/openjdk\/jdk\/blob\/0ae834105740f7cf73fe96be22e0f564ad29b18d\/src\/hotspot\/share\/opto\/superword.cpp#L2380\n[2]https:\/\/github.com\/openjdk\/jdk\/blob\/0ae834105740f7cf73fe96be22e0f564ad29b18d\/src\/hotspot\/share\/opto\/superword.cpp#L2232\n\nJira: ENTLLT-5482\nChange-Id: I341d10b91957b60a1b4aff8116723e54083a5fb8\nCustomizedGitHooks: yes"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/superword.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestPickLastMemoryState.java"}],"sha":"77277fed754295685810501ce987e2ff29810cfe"}]