{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,2 @@\n- * <pre>{@code    HttpClient client = HttpClient.newBuilder()\n+ * {@snippet :\n+ *   HttpClient client = HttpClient.newBuilder()\n@@ -97,1 +98,1 @@\n- *   System.out.println(response.body());  }<\/pre>\n+ *   System.out.println(response.body());  }\n@@ -100,1 +101,2 @@\n- * <pre>{@code    HttpRequest request = HttpRequest.newBuilder()\n+ * {@snippet :\n+ *    HttpRequest request = HttpRequest.newBuilder()\n@@ -108,1 +110,1 @@\n- *        .thenAccept(System.out::println);  }<\/pre>\n+ *        .thenAccept(System.out::println);  }\n@@ -691,1 +693,2 @@\n-     * <pre>{@code    HttpClient client = HttpClient.newHttpClient();\n+     * {@snippet :\n+     *   HttpClient client = HttpClient.newHttpClient();\n@@ -693,1 +696,1 @@\n-     *           .buildAsync(URI.create(\"ws:\/\/websocket.example.com\"), listener); }<\/pre>\n+     *      .buildAsync(URI.create(\"ws:\/\/websocket.example.com\"), listener);  }\n@@ -699,1 +702,2 @@\n-     * <pre>{@code    InetSocketAddress addr = new InetSocketAddress(\"proxy.example.com\", 80);\n+     * {@snippet :\n+     *   InetSocketAddress addr = new InetSocketAddress(\"proxy.example.com\", 80);\n@@ -703,0 +707,1 @@\n+     *\n@@ -704,1 +709,1 @@\n-     *           .buildAsync(URI.create(\"ws:\/\/websocket.example.com\"), listener); }<\/pre>\n+     *           .buildAsync(URI.create(\"ws:\/\/websocket.example.com\"), listener);  }\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpClient.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,3 @@\n- * <pre>{@code    HttpClient client = HttpClient.newHttpClient();\n+ * {@snippet :\n+ *   HttpClient client = HttpClient.newHttpClient();\n+ *\n@@ -73,0 +75,1 @@\n+ *\n@@ -76,1 +79,1 @@\n- *         .join(); }<\/pre>\n+ *         .join(); }\n@@ -344,1 +347,2 @@\n-     *  <pre>{@code HttpRequest.newBuilder(request, (n, v) -> true)}<\/pre>\n+     *  {@snippet :\n+     *  HttpRequest.newBuilder(request, (n, v) -> true) }\n@@ -347,1 +351,2 @@\n-     *  <pre>{@code HttpRequest.newBuilder(request, (n, v) -> false)}<\/pre>\n+     *  {@snippet :\n+     *  HttpRequest.newBuilder(request, (n, v) -> false) }\n@@ -350,1 +355,2 @@\n-     *  <pre>{@code HttpRequest.newBuilder(request, (name, value) -> !name.equalsIgnoreCase(\"Foo-Bar\"))}<\/pre>\n+     *  {@snippet :\n+     *  HttpRequest.newBuilder(request, (name, value) -> !name.equalsIgnoreCase(\"Foo-Bar\")) }\n@@ -564,1 +570,2 @@\n-     *  <pre>{@code    \/\/ Request body from a String\n+     * {@snippet :\n+     *   \/\/ Request body from a String\n@@ -582,1 +589,1 @@\n-     *        .build(); }<\/pre>\n+     *        .build(); }\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpRequest.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,2 +80,3 @@\n- * <pre>{@code    HttpResponse<String> response = client\n- *     .send(request, BodyHandlers.ofString()); }<\/pre>\n+ * {@snippet :\n+ *     HttpResponse<String> response = client\n+ *       .send(request, BodyHandlers.ofString()); }\n@@ -214,1 +215,2 @@\n-     * <pre>{@code   HttpRequest request = HttpRequest.newBuilder()\n+     * {@snippet :\n+     *    HttpRequest request = HttpRequest.newBuilder()\n@@ -217,0 +219,1 @@\n+     *\n@@ -219,1 +222,1 @@\n-     *        .thenAccept(System.out::println); }<\/pre>\n+     *        .thenAccept(System.out::println); }\n@@ -227,1 +230,2 @@\n-     * <pre>{@code   HttpRequest request = HttpRequest.newBuilder()\n+     * {@snippet :\n+     *    HttpRequest request = HttpRequest.newBuilder()\n@@ -235,1 +239,1 @@\n-     *        .thenAccept(System.out::println); }<\/pre>\n+     *        .thenAccept(System.out::println); }\n@@ -275,1 +279,2 @@\n-     * <pre>{@code    \/\/ Receives the response body as a String\n+     * {@snippet :\n+     *   \/\/ Receives the response body as a String\n@@ -289,1 +294,1 @@\n-     *     .send(request, BodyHandlers.discarding());  }<\/pre>\n+     *     .send(request, BodyHandlers.discarding());  }\n@@ -313,1 +318,2 @@\n-         * <pre> {@code  TextSubscriber subscriber = new TextSubscriber();\n+         * {@snippet :\n+         *  TextSubscriber subscriber = new TextSubscriber();\n@@ -316,1 +322,1 @@\n-         *  System.out.println(response.statusCode()); }<\/pre>\n+         *  System.out.println(response.statusCode()); }\n@@ -343,1 +349,2 @@\n-         * <pre> {@code  TextSubscriber subscriber = ...;  \/\/ accumulates bytes and transforms them into a String\n+         * {@snippet :\n+         *  TextSubscriber subscriber = ...;  \/\/ accumulates bytes and transforms them into a String\n@@ -346,1 +353,1 @@\n-         *  String text = response.body(); }<\/pre>\n+         *  String text = response.body(); }\n@@ -383,1 +390,2 @@\n-         * <pre> {@code  \/\/ A PrintSubscriber that implements Flow.Subscriber<String>\n+         * {@snippet :\n+         *  \/\/ A PrintSubscriber that implements Flow.Subscriber<String>\n@@ -392,1 +400,1 @@\n-         *      }); }<\/pre>\n+         *      }); }\n@@ -426,1 +434,2 @@\n-         * <pre> {@code  \/\/ A LineParserSubscriber that implements Flow.Subscriber<String>\n+         * {@snippet :\n+         *  \/\/ A LineParserSubscriber that implements Flow.Subscriber<String>\n@@ -434,1 +443,1 @@\n-         *  } }<\/pre>\n+         *  } }\n@@ -907,1 +916,2 @@\n-     * <pre>{@code    \/\/ Streams the response body to a File\n+     * {@snippet :\n+     *   \/\/ Streams the response body to a File\n@@ -922,2 +932,1 @@\n-     *        BodySubscribers.mapping(BodySubscribers.ofString(UTF_8), String::getBytes));\n-     * }<\/pre>\n+     *        BodySubscribers.mapping(BodySubscribers.ofString(UTF_8), String::getBytes)); }\n@@ -991,3 +1000,2 @@\n-         * @implNote This is equivalent to calling <pre>{@code\n-         *      fromLineSubscriber(subscriber, s -> null, StandardCharsets.UTF_8, null)\n-         * }<\/pre>\n+         * @implNote This is equivalent to calling {@snippet :\n+         *      fromLineSubscriber(subscriber, s -> null, StandardCharsets.UTF_8, null) }\n@@ -1333,1 +1341,2 @@\n-         * <pre> {@code  public static <W> BodySubscriber<Supplier<W>> asJSON(Class<W> targetType) {\n+         * {@snippet :\n+         *   public static <W> BodySubscriber<Supplier<W>> asJSON(Class<W> targetType) {\n@@ -1347,1 +1356,1 @@\n-         *  } }<\/pre>\n+         *  } }\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpResponse.java","additions":34,"deletions":25,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -261,1 +261,2 @@\n-     * <pre>{@code     WebSocket.Listener listener = new WebSocket.Listener() {\n+     * {@snippet :\n+     *        WebSocket.Listener listener = new WebSocket.Listener() {\n@@ -281,2 +282,1 @@\n-     *    ...\n-     *    } } <\/pre>\n+     *    }; }\n@@ -295,1 +295,2 @@\n-         * <pre>{@code     webSocket.request(1); }<\/pre>\n+         * {@snippet :\n+         *  webSocket.request(1); }\n@@ -311,2 +312,3 @@\n-         * <pre>{@code     webSocket.request(1);\n-         *    return null; }<\/pre>\n+         * {@snippet :\n+         *    webSocket.request(1);\n+         *    return null; }\n@@ -346,2 +348,3 @@\n-         * <pre>{@code     webSocket.request(1);\n-         *    return null; }<\/pre>\n+         * {@snippet :\n+         *    webSocket.request(1);\n+         *    return null; }\n@@ -384,2 +387,3 @@\n-         * <pre>{@code     webSocket.request(1);\n-         *    return null; }<\/pre>\n+         * {@snippet :\n+         *    webSocket.request(1);\n+         *    return null; }\n@@ -415,2 +419,3 @@\n-         * <pre>{@code     webSocket.request(1);\n-         *    return null; }<\/pre>\n+         * {@snippet :\n+         *    webSocket.request(1);\n+         *    return null; }\n@@ -459,3 +464,4 @@\n-         * <pre>{@code     public CompletionStage<?> onClose(WebSocket webSocket,\n-         *                                      int statusCode,\n-         *                                      String reason) {\n+         * {@snippet :\n+         *       public CompletionStage<?> onClose(WebSocket webSocket,\n+         *                            int statusCode,\n+         *                            String reason) {\n@@ -464,1 +470,1 @@\n-         *    } } <\/pre>\n+         *    } }\n@@ -657,2 +663,3 @@\n-     * <pre>{@code     CompletableFuture<WebSocket> webSocket = ...\n-     *    webSocket.thenCompose(ws -> ws.sendText(\"Hello, \", false))\n+     * {@snippet :\n+     *      CompletableFuture<WebSocket> webSocket = ...\n+     *      webSocket.thenCompose(ws -> ws.sendText(\"Hello, \", false))\n@@ -661,1 +668,2 @@\n-     *             .join(); }<\/pre>\n+     *             .join();\n+     * }\n@@ -669,1 +677,2 @@\n-     * <pre>{@code     MyAlarm alarm = new MyAlarm(webSocket::abort);\n+     * {@snippet :\n+     *    MyAlarm alarm = new MyAlarm(webSocket::abort);\n@@ -685,2 +694,1 @@\n-     *    webSocket.sendClose(WebSocket.NORMAL_CLOSURE, \"ok\").thenRun(startTimer);\n-     * } <\/pre>\n+     *    webSocket.sendClose(WebSocket.NORMAL_CLOSURE, \"ok\").thenRun(startTimer); }\n@@ -720,1 +728,2 @@\n-     * <pre>{@code     WebSocket.Listener listener = new WebSocket.Listener() {\n+     * {@snippet :\n+     *        WebSocket.Listener listener = new WebSocket.Listener() {\n@@ -735,2 +744,1 @@\n-     *    ...\n-     *    } } <\/pre>\n+     *    }; }\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/WebSocket.java","additions":34,"deletions":26,"binary":false,"changes":60,"status":"modified"}]}