{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,0 +174,5 @@\n+        \/** Check to see if the property is managed by the security property manager **\/\n+        if (propertyValue == null){\n+            propertyValue = (fSecurityPropertyMgr != null) ?\n+                fSecurityPropertyMgr.getValue(property) : null;\n+        }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/PropertyManager.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package stream.XMLInputFactoryTest;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+\/*\n+ * @test\n+ * @bug 8276050\n+ * @library \/javax\/xml\/jaxp\/libs \/javax\/xml\/jaxp\/unittest\n+ * @run testng\/othervm stream.XMLInputFactoryTest.InputFactoryTest\n+ * @summary Test XMLInputFactory functionalities.\n+ *\/\n+public class InputFactoryTest {\n+    @DataProvider(name = \"AEProperties\")\n+    public Object[][] getAEProperties() throws Exception {\n+        return new Object[][]{\n+            {XMLConstants.ACCESS_EXTERNAL_DTD, \"all\", \"all\"},\n+            {XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"all\", \"all\"},\n+            {XMLConstants.ACCESS_EXTERNAL_DTD, \"\", \"\"},\n+            {XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\", \"\"},\n+        };\n+    }\n+\n+    \/*\n+     * Verifies that the XMLInputFactory returns security properties correctly.\n+    *\/\n+    @Test(dataProvider = \"AEProperties\")\n+    public void testProperty(String name, String value, String expected) {\n+        XMLInputFactory xif = XMLInputFactory.newInstance();\n+        xif.setProperty(name, value);\n+        Assert.assertEquals(expected, (String)xif.getProperty(name));\n+    }\n+}\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/stream\/XMLInputFactoryTest\/InputFactoryTest.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}