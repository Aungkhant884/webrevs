{"files":[{"patch":"@@ -47,1 +47,1 @@\n- * As such, native segments allocated with the global arena are associated are always accessible and their backing regions\n+ * As such, native segments allocated with the global arena are always accessible and their backing regions\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Arena.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -463,2 +463,2 @@\n-     * on the returned var handle will return a new memory segment. The segment is associated with a scope that is\n-     * always alive. Moreover, the size of the segment depends on whether the address layout has a\n+     * on the returned var handle will return a new memory segment. The segment is associated with the global scope.\n+     * Moreover, the size of the segment depends on whether the address layout has a\n@@ -484,1 +484,1 @@\n-     * VarHandle targetHandle = target.varHandle(P');\n+     * VarHandle targetHandle = target.varHandle(P);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2367,1 +2367,1 @@\n-     * for equality. That is, two scopes are considered {@linkplain #equals(Object)} if they denote the same lifetime.\n+     * for equality. That is, two scopes are considered {@linkplain #equals(Object) equal} if they denote the same lifetime.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}