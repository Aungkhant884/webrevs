{"files":[{"patch":"@@ -28,1 +28,5 @@\n- * @run main\/othervm -Xmx4M TypeConverterFactoryMemoryLeakTest\n+ * @run main\/othervm -XX:+UseG1GC TypeConverterFactoryMemoryLeakTest\n+ * @run main\/othervm -XX:+UseSerialGC TypeConverterFactoryMemoryLeakTest\n+ * @run main\/othervm -XX:+UseParallelGC TypeConverterFactoryMemoryLeakTest\n+ * @run main\/othervm -XX:+UseZGC TypeConverterFactoryMemoryLeakTest\n+ * @run main\/othervm -XX:+UseShenandoahGC TypeConverterFactoryMemoryLeakTest\n@@ -55,4 +59,3 @@\n-    \/\/ With -Xmx4M it succeeds in 30 iterations; with 40M it needs\n-    \/\/ 926 iterations, so 5000 should be safe. If this ever fails\n-    \/\/ in future, you can just increase the number of iterations.\n-    private static final int MAX_ITERATIONS = 5000;\n+    \/\/ With explicit GC calls succeeds in 11-12 iterations depending on GC used.\n+    \/\/ 1000 should be a safe upper limit after which we can consider it failed.\n+    private static final int MAX_ITERATIONS = 1000;\n@@ -79,1 +82,1 @@\n-        for (int count = 0; count < MAX_ITERATIONS; ++count) {\n+        for (int count = 0; count < MAX_ITERATIONS; count++) {\n@@ -82,0 +85,1 @@\n+            System.gc();\n","filename":"test\/jdk\/jdk\/dynalink\/TypeConverterFactoryMemoryLeakTest.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n- * @run main\/othervm -Xmx4M TypeConverterFactoryRetentionTests\n+ * @run main\/othervm -XX:+UseG1GC TypeConverterFactoryRetentionTests\n+ * @run main\/othervm -XX:+UseSerialGC TypeConverterFactoryRetentionTests\n+ * @run main\/othervm -XX:+UseParallelGC TypeConverterFactoryRetentionTests\n+ * @run main\/othervm -XX:+UseZGC TypeConverterFactoryRetentionTests\n+ * @run main\/othervm -XX:+UseShenandoahGC TypeConverterFactoryRetentionTests\n@@ -53,5 +57,3 @@\n-    \/\/ With -Xmx4M the three tests succeeds in 219, 145, and 130\n-    \/\/ iteration, respectively, so 5000 should be safe; that works up to\n-    \/\/ -Xmx38M. If this ever fails in future, you can just increase the\n-    \/\/ number of iterations.\n-    private static final int MAX_ITERATIONS = 5000;\n+    \/\/ With explicit GC calls succeeds in 1-2 iterations depending on GC used.\n+    \/\/ 1000 should be a safe upper limit after which we can consider it failed.\n+    private static final int MAX_ITERATIONS = 1000;\n@@ -140,1 +142,1 @@\n-        for (int count = 0; count < MAX_ITERATIONS; ++count) {\n+        for (int count = 0; count < MAX_ITERATIONS; count++) {\n@@ -147,0 +149,1 @@\n+            System.gc();\n@@ -169,1 +172,1 @@\n-        for (int count = 0; count < MAX_ITERATIONS; ++count) {\n+        for (int count = 0; count < MAX_ITERATIONS; count++) {\n@@ -180,0 +183,1 @@\n+            System.gc();\n","filename":"test\/jdk\/jdk\/dynalink\/TypeConverterFactoryRetentionTests.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"}]}