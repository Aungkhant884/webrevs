{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,2 +49,1 @@\n-        OutputAnalyzer out = CDSTestUtils.createArchive(createCompactStringsArgument);\n-        CDSTestUtils.checkDump(out);\n+        CDSTestUtils.createArchiveAndCheck(createCompactStringsArgument);\n@@ -52,1 +51,1 @@\n-        out = CDSTestUtils.runWithArchive(loadCompactStringsArgument);\n+        OutputAnalyzer out = CDSTestUtils.runWithArchive(loadCompactStringsArgument);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/CdsDifferentCompactStrings.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -86,2 +85,1 @@\n-        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n-        CDSTestUtils.checkDump(out);\n+        CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/DeterministicDump.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -42,2 +41,1 @@\n-        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n-        CDSTestUtils.checkDump(out);\n+        CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/PrintSharedArchiveAndExit.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import jdk.test.lib.cds.CDSOptions;\n@@ -37,0 +36,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -45,7 +45,9 @@\n-        CDSOptions opts = (new CDSOptions())\n-            .addPrefix(\"-XX:+UnlockDiagnosticVMOptions\",\n-                       \"-Xlog:cds,cds+hashtables\",\n-                       \/\/ Needed for bootclasspath match, for CDS to work with WhiteBox API\n-                       \"-Xbootclasspath\/a:\" + ClassFileInstaller.getJarPath(\"whitebox.jar\"))\n-            .setArchiveName(\".\/SharedStrings.jsa\");\n-        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:SharedArchiveFile=.\/SharedStrings.jsa\",\n+            \"-Xlog:cds,cds+hashtables\",\n+            \/\/ Needed for bootclasspath match, for CDS to work with WhiteBox API\n+            \"-Xbootclasspath\/a:\" + ClassFileInstaller.getJarPath(\"whitebox.jar\"),\n+            \"-Xshare:dump\");\n+\n+        OutputAnalyzer out = CDSTestUtils.executeAndLog(pb, \"dump\");\n@@ -54,14 +56,11 @@\n-        opts = (new CDSOptions())\n-            .setUseVersion(false)\n-            \/\/ This test is run with the -Xshare:off vmoption prepended in tier3.\n-            \/\/ Set CDSOptions.xShareMode to \"off\" so that the result checking\n-            \/\/ would not always expect the word \"sharing\" in the output.\n-            .setXShareMode(\"off\")\n-            .addPrefix(\"-XX:+UnlockDiagnosticVMOptions\",\n-                       \"-XX:SharedArchiveFile=.\/SharedStrings.jsa\",\n-                       \/\/ needed for access to white box test API\n-                       \"-Xbootclasspath\/a:\" + ClassFileInstaller.getJarPath(\"whitebox.jar\"),\n-                       \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+WhiteBoxAPI\",\n-                       \"-Xshare:on\", \"-showversion\", \"SharedStringsWb\");\n-        CDSTestUtils.run(opts)\n-                    .assertNormalExit();\n+\n+        pb = ProcessTools.createJavaProcessBuilder(\n+                \"-XX:+UnlockDiagnosticVMOptions\",\n+                \"-XX:SharedArchiveFile=.\/SharedStrings.jsa\",\n+                \/\/ needed for access to white box test API\n+                \"-Xbootclasspath\/a:\" + ClassFileInstaller.getJarPath(\"whitebox.jar\"),\n+                \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+WhiteBoxAPI\",\n+                \"-Xshare:on\", \"-showversion\", \"SharedStringsWb\");\n+\n+        out = CDSTestUtils.executeAndLog(pb, \"exec\");\n+        CDSTestUtils.checkExec(out);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStrings.java","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n-import java.io.File;\n@@ -42,3 +40,2 @@\n-        OutputAnalyzer out =\n-            CDSTestUtils.createArchive();\n-        CDSTestUtils.checkDump(out, \"Shared string table stats\");\n+        CDSTestUtils.createArchiveAndCheck()\n+            .shouldContain(\"Shared string table stats\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStringsDedup.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n-import java.io.File;\n@@ -38,3 +36,2 @@\n-        OutputAnalyzer out =\n-            CDSTestUtils.createArchive();\n-        CDSTestUtils.checkDump(out, \"Shared string table stats\");\n+        CDSTestUtils.createArchiveAndCheck()\n+            .shouldContain( \"Shared string table stats\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStringsRunAuto.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,3 +42,2 @@\n-            CDSTestUtils.createArchive(\"-XX:SharedSymbolTableBucketSize=\"\n-                                       + Integer.valueOf(bucket_size));\n-        CDSTestUtils.checkDump(output);\n+            CDSTestUtils.createArchiveAndCheck(\"-XX:SharedSymbolTableBucketSize=\"\n+                                               + Integer.valueOf(bucket_size));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedSymbolTableBucketSize.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,2 +58,1 @@\n-        OutputAnalyzer output = CDSTestUtils.createArchive(opts);\n-        CDSTestUtils.checkDump(output);\n+        OutputAnalyzer output = CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SpaceUtilizationCheck.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -190,2 +189,1 @@\n-      OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n-      CDSTestUtils.checkDump(out);\n+      CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/BootClassPathMismatch.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -78,10 +77,6 @@\n-        CDSOptions opts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addPrefix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"--patch-module=java.base=\" + patchJar,\n-                       \"-Xbootclasspath\/a:\" + appendJar,\n-                       \"-cp\",\n-                       appJar,\n-                       appClass[0]);\n-        CDSTestUtils.run(opts)\n+        CDSTestUtils.dumpClassList(classList,\n+                                   \"--patch-module=java.base=\" + patchJar,\n+                                   \"-Xbootclasspath\/a:\" + appendJar,\n+                                   \"-cp\",\n+                                   appJar,\n+                                   appClass[0])\n@@ -96,1 +91,1 @@\n-        opts = (new CDSOptions())\n+        CDSOptions opts = (new CDSOptions())\n@@ -102,2 +97,1 @@\n-        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n-        CDSTestUtils.checkDump(out, \"[info][class,load] boot.append.Foo\")\n+        CDSTestUtils.createArchiveAndCheck(opts)\n@@ -105,1 +99,2 @@\n-            .shouldNotContain(\"Preload Warning: Cannot find boot\/append\/Foo\");\n+            .shouldNotContain(\"Preload Warning: Cannot find boot\/append\/Foo\")\n+            .shouldContain(\"[info][class,load] boot.append.Foo\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpClassList.java","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -86,4 +86,2 @@\n-        CDSOptions opts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addPrefix(\"-XX:DumpLoadedClassList=\" + CLASSLIST_FILE,\n+        CDSTestUtils.dumpClassList(\n+                       CLASSLIST_FILE,\n@@ -98,2 +96,1 @@\n-                       TEST_OUT);\n-        CDSTestUtils.run(opts)\n+                       TEST_OUT)\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/GraalWithLimitedMetaspace.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -53,8 +53,1 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", appJar,\n-                       mainClass);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, mainClass);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaWithOldClass.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -55,2 +54,1 @@\n-        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n-        CDSTestUtils.checkDump(out);\n+        CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LotsOfClasses.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,8 +47,1 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", appJar,\n-                       appClass);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, appClass);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/StaticArchiveWithLambda.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -61,9 +61,1 @@\n-        CDSOptions opts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addPrefix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\",\n-                       appJar,\n-                       appClass);\n-        CDSTestUtils.run(opts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, appClass);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaForClassInBaseArchive.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -55,8 +55,1 @@\n-        CDSOptions opts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", appJar,\n-                       mainClass);\n-        CDSTestUtils.run(opts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, mainClass);\n@@ -65,1 +58,1 @@\n-        opts = (new CDSOptions())\n+        CDSOptions opts = (new CDSOptions())\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaInBaseArchive.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -110,11 +110,4 @@\n-        CDSOptions opts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\",\n-                       appJar,\n-                       appClass);\n-        CDSTestUtils.run(opts)\n-                    .assertNormalExit(output -> {\n-                        output.shouldContain(\"length = 0\");\n-                    });\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, appClass)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"length = 0\");\n+            });\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/NoClassToArchive.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -116,8 +116,2 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", jars,\n-                       mainClass, testPackageName + \".\" + testClassName);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/CDSMHTest_generate.sh","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,8 +84,2 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", jars,\n-                       mainClass, testPackageName + \".\" + testClassName);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesAsCollectorTest.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,8 +84,2 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", jars,\n-                       mainClass, testPackageName + \".\" + testClassName);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesCastFailureTest.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,8 +84,2 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", jars,\n-                       mainClass, testPackageName + \".\" + testClassName);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesGeneralTest.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,8 +84,2 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", jars,\n-                       mainClass, testPackageName + \".\" + testClassName);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesInvokersTest.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,8 +84,2 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", jars,\n-                       mainClass, testPackageName + \".\" + testClassName);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesPermuteArgumentsTest.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,8 +84,2 @@\n-        CDSOptions dumpOpts = (new CDSOptions())\n-            .setUseVersion(false)\n-            .setXShareMode(\"auto\")\n-            .addSuffix(\"-XX:DumpLoadedClassList=\" + classList,\n-                       \"-cp\", jars,\n-                       mainClass, testPackageName + \".\" + testClassName);\n-        CDSTestUtils.run(dumpOpts)\n-                    .assertNormalExit();\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesSpreadArgumentsTest.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -60,2 +59,2 @@\n-        OutputAnalyzer output = CDSTestUtils.createArchiveAndCheck(opts);\n-        output.shouldContain(\"Shared string table stats\");\n+        CDSTestUtils.createArchiveAndCheck(opts)\n+            .shouldContain(\"Shared string table stats\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsBasic.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -390,0 +390,12 @@\n+    \/\/ Dump a classlist using the -XX:DumpLoadedClassList option.\n+    public static Result dumpClassList(String classListName, String... cli)\n+        throws Exception {\n+        CDSOptions opts = (new CDSOptions())\n+            .setUseVersion(false)\n+            .setXShareMode(\"auto\")\n+            .addPrefix(\"-XX:DumpLoadedClassList=\" + classListName)\n+            .addSuffix(cli);\n+        Result res = run(opts).assertNormalExit();\n+        return res;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSTestUtils.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}