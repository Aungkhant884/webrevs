{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,2 +49,1 @@\n-        OutputAnalyzer out = CDSTestUtils.createArchive(createCompactStringsArgument);\n-        CDSTestUtils.checkDump(out);\n+        CDSTestUtils.createArchiveAndCheck(createCompactStringsArgument);\n@@ -52,1 +51,1 @@\n-        out = CDSTestUtils.runWithArchive(loadCompactStringsArgument);\n+        OutputAnalyzer out = CDSTestUtils.runWithArchive(loadCompactStringsArgument);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/CdsDifferentCompactStrings.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import jdk.test.lib.cds.CDSOptions;\n@@ -35,2 +36,0 @@\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -82,10 +81,5 @@\n-        args = (ArrayList<String>)args.clone();\n-        args.add(\"-XX:SharedArchiveFile=\" + archiveName);\n-        args.add(\"-Xshare:dump\");\n-        args.add(\"-Xlog:cds=debug\");\n-        for (String m : more) {\n-            args.add(m);\n-        }\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n-        OutputAnalyzer out = CDSTestUtils.executeAndLog(pb, logName);\n-        CDSTestUtils.checkDump(out);\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(\"-Xlog:cds=debug\")\n+            .setArchiveName(archiveName)\n+            .addSuffix(more);\n+        CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/DeterministicDump.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import jdk.test.lib.cds.CDSOptions;\n@@ -43,6 +44,3 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                \"-XX:SharedArchiveFile=.\/DumpSharedDictionary.jsa\",\n-                \"-Xshare:dump\");\n-\n-            OutputAnalyzer out = CDSTestUtils.executeAndLog(pb, \"dump\");\n-            out.shouldHaveExitValue(0);\n+            CDSOptions opts = (new CDSOptions())\n+                .setArchiveName(\".\/DumpSharedDictionary.jsa\");\n+            CDSTestUtils.createArchiveAndCheck(opts);\n@@ -52,9 +50,7 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\n-                    \"-XX:SharedArchiveFile=.\/DumpSharedDictionary.jsa\",\n-                    \"-Dtest.jdk=\" + testjdkPath,\n-                    \"-Xshare:on\", \"DumpSharedDictionary\", \"test\");\n-\n-            out = CDSTestUtils.executeAndLog(pb, \"exec\");\n-            if (!CDSTestUtils.isUnableToMap(out)) {\n-                out.shouldHaveExitValue(0);\n-            }\n+            opts = (new CDSOptions())\n+                .setUseVersion(false)\n+                .addSuffix(\"-XX:SharedArchiveFile=.\/DumpSharedDictionary.jsa\",\n+                           \"-Dtest.jdk=\" + testjdkPath,\n+                           \"DumpSharedDictionary\", \"test\");\n+            CDSTestUtils.run(opts)\n+                        .assertNormalExit();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/DumpSharedDictionary.java","additions":12,"deletions":16,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -42,2 +41,1 @@\n-        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n-        CDSTestUtils.checkDump(out);\n+        CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/PrintSharedArchiveAndExit.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import jdk.test.lib.cds.CDSOptions;\n@@ -35,2 +36,0 @@\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -44,5 +43,4 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-                                \"-XX:SharedArchiveFile=.\/SharedArchiveFile.jsa\",\n-                                \"-Xshare:dump\", \"-Xlog:cds\");\n-        OutputAnalyzer out = CDSTestUtils.executeAndLog(pb, \"SharedArchiveFile\");\n-        CDSTestUtils.checkDump(out);\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(\"-Xlog:cds\")\n+            .setArchiveName(\".\/SharedArchiveFile.jsa\");\n+        CDSTestUtils.createArchiveAndCheck(opts);\n@@ -51,5 +49,4 @@\n-        pb = ProcessTools.createTestJvm(\n-                                \"-XX:SharedArchiveFile=.\/SharedArchiveFile.jsa\",\n-                                \"-XX:+DumpSharedSpaces\", \"-Xlog:cds\");\n-        out = CDSTestUtils.executeAndLog(pb, \"SharedArchiveFile\");\n-        CDSTestUtils.checkDump(out);\n+        opts = (new CDSOptions())\n+            .addPrefix(\"-XX:+DumpSharedSpaces\", \"-Xlog:cds\")\n+            .setArchiveName(\".\/SharedArchiveFile.jsa\");\n+        CDSTestUtils.createArchiveAndCheck(opts);\n@@ -57,5 +54,4 @@\n-        pb = ProcessTools.createTestJvm(\n-                              \"-XX:SharedArchiveFile=.\/SharedArchiveFile.jsa\",\n-                              \"-Xshare:on\", \"-version\");\n-        out = CDSTestUtils.executeAndLog(pb, \"SharedArchiveFile\");\n-        CDSTestUtils.checkExec(out);\n+        opts = (new CDSOptions())\n+            .setArchiveName(\".\/SharedArchiveFile.jsa\");\n+        CDSTestUtils.run(opts)\n+                    .assertNormalExit();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedArchiveFile.java","additions":14,"deletions":18,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n-import java.io.File;\n@@ -42,3 +40,2 @@\n-        OutputAnalyzer out =\n-            CDSTestUtils.createArchive();\n-        CDSTestUtils.checkDump(out, \"Shared string table stats\");\n+        CDSTestUtils.createArchiveAndCheck()\n+            .shouldContain(\"Shared string table stats\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStringsDedup.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n-import java.io.File;\n@@ -38,3 +36,2 @@\n-        OutputAnalyzer out =\n-            CDSTestUtils.createArchive();\n-        CDSTestUtils.checkDump(out, \"Shared string table stats\");\n+        CDSTestUtils.createArchiveAndCheck()\n+            .shouldContain( \"Shared string table stats\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStringsRunAuto.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,3 +42,2 @@\n-            CDSTestUtils.createArchive(\"-XX:SharedSymbolTableBucketSize=\"\n-                                       + Integer.valueOf(bucket_size));\n-        CDSTestUtils.checkDump(output);\n+            CDSTestUtils.createArchiveAndCheck(\"-XX:SharedSymbolTableBucketSize=\"\n+                                               + Integer.valueOf(bucket_size));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedSymbolTableBucketSize.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,2 +58,1 @@\n-        OutputAnalyzer output = CDSTestUtils.createArchive(opts);\n-        CDSTestUtils.checkDump(output);\n+        OutputAnalyzer output = CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SpaceUtilizationCheck.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -190,2 +189,1 @@\n-      OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n-      CDSTestUtils.checkDump(out);\n+      CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/BootClassPathMismatch.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n@@ -36,2 +38,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n@@ -77,12 +77,13 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"--patch-module=java.base=\" + patchJar,\n-            \"-Xbootclasspath\/a:\" + appendJar,\n-            \"-cp\",\n-            appJar,\n-            appClass[0]);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n-        TestCommon.checkExecReturn(output, 0, true,\n-                                   \"hello world\",\n-                                   \"skip writing class java\/lang\/NewClass\") \/\/ skip classes outside of jrt image\n-            .shouldNotContain(\"skip writing class boot\/append\/Foo\");        \/\/ but classes on -Xbootclasspath\/a should not be skipped\n+        CDSTestUtils.dumpClassList(classList,\n+                                   \"--patch-module=java.base=\" + patchJar,\n+                                   \"-Xbootclasspath\/a:\" + appendJar,\n+                                   \"-cp\",\n+                                   appJar,\n+                                   appClass[0])\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"hello world\");\n+                \/\/ skip classes outside of jrt image\n+                output.shouldContain(\"skip writing class java\/lang\/NewClass\");\n+                \/\/ but classes on -Xbootclasspath\/a should not be skipped\n+                output.shouldNotContain(\"skip writing class boot\/append\/Foo\");\n+            });\n@@ -90,5 +91,7 @@\n-        output = TestCommon.createArchive(appJar, appClass,\n-                                          \"-Xbootclasspath\/a:\" + appendJar,\n-                                          \"-Xlog:class+load\",\n-                                          \"-XX:SharedClassListFile=\" + classList);\n-        TestCommon.checkDump(output)\n+        CDSOptions opts = (new CDSOptions())\n+            .setClassList(appClass)\n+            .addPrefix(\"-cp\", appJar,\n+                       \"-Xbootclasspath\/a:\" + appendJar,\n+                       \"-Xlog:class+load\",\n+                       \"-XX:SharedClassListFile=\" + classList);\n+        CDSTestUtils.createArchiveAndCheck(opts)\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpClassList.java","additions":23,"deletions":20,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import jdk.test.lib.cds.CDSOptions;\n@@ -40,1 +41,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -86,15 +86,14 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + CLASSLIST_FILE,\n-            \/\/ trigger JVMCI runtime init so that JVMCI classes will be\n-            \/\/ included in the classlist\n-            \"-XX:+UnlockExperimentalVMOptions\",\n-            \"-XX:+EnableJVMCI\",\n-            \"-XX:+EagerJVMCI\",\n-            \"-cp\",\n-            TESTJAR,\n-            TESTNAME,\n-            TEST_OUT);\n-\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dump-loaded-classes\")\n-            .shouldHaveExitValue(0)\n-            .shouldContain(TEST_OUT);\n+        CDSTestUtils.dumpClassList(\n+                       CLASSLIST_FILE,\n+                       \/\/ trigger JVMCI runtime init so that JVMCI classes will be\n+                       \/\/ included in the classlist\n+                       \"-XX:+UnlockExperimentalVMOptions\",\n+                       \"-XX:+EnableJVMCI\",\n+                       \"-XX:+EagerJVMCI\",\n+                       \"-cp\",\n+                       TESTJAR,\n+                       TESTNAME,\n+                       TEST_OUT)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(TEST_OUT);\n+            });\n@@ -113,11 +112,10 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-cp\",\n-            TESTJAR,\n-            \"-XX:SharedClassListFile=\" + CLASSLIST_FILE,\n-            \"-XX:SharedArchiveFile=\" + ARCHIVE_FILE,\n-            \"-Xlog:cds\",\n-            \"-Xshare:dump\",\n-            \"-XX:MetaspaceSize=12M\",\n-            \"-XX:MaxMetaspaceSize=12M\");\n-\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dump-archive\");\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(\"-cp\",\n+                       TESTJAR,\n+                       \"-XX:SharedClassListFile=\" + CLASSLIST_FILE,\n+                       \"-Xlog:cds\",\n+                       \"-Xshare:dump\",\n+                       \"-XX:MetaspaceSize=12M\",\n+                       \"-XX:MaxMetaspaceSize=12M\")\n+            .setArchiveName(ARCHIVE_FILE);\n+        OutputAnalyzer output = CDSTestUtils.createArchive(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/GraalWithLimitedMetaspace.java","additions":26,"deletions":28,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -54,6 +53,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", appJar,\n-            mainClass);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, namePrefix);\n-        output.shouldHaveExitValue(0);\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, mainClass);\n@@ -75,1 +69,1 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaWithOldClass.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -55,2 +54,1 @@\n-        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n-        CDSTestUtils.checkDump(out);\n+        CDSTestUtils.createArchiveAndCheck(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LotsOfClasses.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -48,5 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", appJar,\n-            appClass);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, appClass);\n@@ -68,1 +63,1 @@\n-       output = CDSTestUtils.runWithArchive(runOpts);\n+       OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/StaticArchiveWithLambda.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import jdk.test.lib.cds.CDSOptions;\n@@ -42,1 +43,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -61,7 +61,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\",\n-            appJar,\n-            appClass);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n-        TestCommon.checkExecReturn(output, 0, true);\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, appClass);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaForClassInBaseArchive.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n@@ -57,6 +55,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", appJar,\n-            mainClass);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n-        output.shouldHaveExitValue(0);\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, mainClass);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaInBaseArchive.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+import jdk.test.lib.cds.CDSOptions;\n@@ -50,1 +51,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -110,7 +110,4 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\",\n-            appJar,\n-            appClass);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n-        TestCommon.checkExecReturn(output, 0, true, \"length = 0\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, appClass)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"length = 0\");\n+            });\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/NoClassToArchive.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import jdk.test.lib.cds.CDSOptions;\n@@ -41,2 +42,0 @@\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -70,8 +69,11 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-            \"-Xlog:cds\",\n-            \"-Xlog:module=debug\",\n-            \"-Dtest.src=\" + TEST_SRC,\n-            \"NewModuleFinderTest$Helper\");\n-        OutputAnalyzer out = CDSTestUtils.executeAndLog(pb, \"exec\");\n-        out.shouldHaveExitValue(0);\n-        out.shouldContain(\"define_module(): creation of module: com.simple,\");\n+        CDSOptions opts = (new CDSOptions())\n+            .setUseVersion(false)\n+            .setXShareMode(\"auto\")\n+            .addSuffix(\"-Xlog:cds\",\n+                       \"-Xlog:module=debug\",\n+                       \"-Dtest.src=\" + TEST_SRC,\n+                       \"NewModuleFinderTest$Helper\");\n+        CDSTestUtils.run(opts)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"define_module(): creation of module: com.simple,\");\n+            });\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/NewModuleFinderTest.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import jdk.test.lib.cds.CDSTestUtils;\n@@ -38,2 +39,0 @@\n-import jdk.test.lib.process.ProcessTools;\n-\n@@ -58,8 +57,11 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                \"-XX:+UnlockDiagnosticVMOptions\",\n-                \"-XX:+WhiteBoxAPI\",\n-                useWb,\n-                \"-agentlib:SimpleClassFileLoadHook=LoadMe,beforeHook,after_Hook\",\n-                \"ClassFileLoadHook\",\n-                \"\" + ClassFileLoadHook.TestCaseId.SHARING_OFF_CFLH_ON);\n-        TestCommon.executeAndLog(pb, \"no-sharing\").shouldHaveExitValue(0);\n+        CDSOptions opts = (new CDSOptions())\n+            .setUseVersion(false)\n+            .setXShareMode(\"off\")\n+            .addSuffix(\"-XX:+UnlockDiagnosticVMOptions\",\n+                       \"-XX:+WhiteBoxAPI\",\n+                       useWb,\n+                       \"-agentlib:SimpleClassFileLoadHook=LoadMe,beforeHook,after_Hook\",\n+                       \"ClassFileLoadHook\",\n+                       \"\" + ClassFileLoadHook.TestCaseId.SHARING_OFF_CFLH_ON);\n+        CDSTestUtils.run(opts)\n+                    .assertNormalExit();\n@@ -86,1 +88,1 @@\n-        CDSOptions opts = (new CDSOptions()).setXShareMode(\"auto\");\n+        opts = (new CDSOptions()).setXShareMode(\"auto\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jvmti\/ClassFileLoadHookTest.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+import jdk.test.lib.cds.CDSTestUtils;\n@@ -49,1 +50,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -112,9 +112,12 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                bootCP,\n-                \"-cp\", appJar,\n-                \"-XX:+UnlockDiagnosticVMOptions\",\n-                \"-XX:+WhiteBoxAPI\",\n-                \"-Xshare:off\",\n-                agentCmdArg,\n-                \"InstrumentationApp\", flagFile, bootJar, appJar, custJar);\n-        TestCommon.executeAndLog(pb, \"no-sharing\").shouldHaveExitValue(0);\n+        CDSOptions opts = (new CDSOptions())\n+            .setUseVersion(false)\n+            .setXShareMode(\"off\")\n+            .addSuffix(bootCP,\n+                       \"-cp\", appJar,\n+                       \"-XX:+UnlockDiagnosticVMOptions\",\n+                       \"-XX:+WhiteBoxAPI\",\n+                       \"-Xshare:off\",\n+                       agentCmdArg,\n+                       \"InstrumentationApp\", flagFile, bootJar, appJar, custJar);\n+        CDSTestUtils.run(opts)\n+                    .assertNormalExit();\n@@ -156,1 +159,1 @@\n-        CDSOptions opts = (new CDSOptions()).setXShareMode(\"auto\");\n+        opts = (new CDSOptions()).setXShareMode(\"auto\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jvmti\/InstrumentationTest.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -117,5 +116,2 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", jars,\n-            mainClass, testPackageName + \".\" + testClassName);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n@@ -137,1 +133,1 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/CDSMHTest_generate.sh","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -85,5 +84,2 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", jars,\n-            mainClass, testPackageName + \".\" + testClassName);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n@@ -105,1 +101,1 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesAsCollectorTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -85,5 +84,2 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", jars,\n-            mainClass, testPackageName + \".\" + testClassName);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n@@ -105,1 +101,1 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesCastFailureTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -85,5 +84,2 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", jars,\n-            mainClass, testPackageName + \".\" + testClassName);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n@@ -105,1 +101,1 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesGeneralTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -85,5 +84,2 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", jars,\n-            mainClass, testPackageName + \".\" + testClassName);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n@@ -105,1 +101,1 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesInvokersTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -85,5 +84,2 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", jars,\n-            mainClass, testPackageName + \".\" + testClassName);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n@@ -105,1 +101,1 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesPermuteArgumentsTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -85,5 +84,2 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-            \"-XX:DumpLoadedClassList=\" + classList,\n-            \"-cp\", jars,\n-            mainClass, testPackageName + \".\" + testClassName);\n-        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dumpClassList\");\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", jars, mainClass,\n+                                   testPackageName + \".\" + testClassName);\n@@ -105,1 +101,1 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/methodHandles\/MethodHandlesSpreadArgumentsTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,2 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n@@ -53,2 +53,2 @@\n-        ProcessBuilder dumpPb = ProcessTools.createTestJvm(\n-          TestCommon.concat(vmOptionsPrefix,\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(vmOptionsPrefix,\n@@ -57,7 +57,4 @@\n-            \"-XX:SharedArchiveFile=.\/SharedStringsBasic.jsa\",\n-            \"-Xshare:dump\",\n-            \"-Xlog:cds,cds+hashtables\"));\n-\n-        TestCommon.executeAndLog(dumpPb, \"dump\")\n-            .shouldContain(\"Shared string table stats\")\n-            .shouldHaveExitValue(0);\n+            \"-Xlog:cds,cds+hashtables\")\n+            .setArchiveName(\".\/SharedStringsBasic.jsa\");\n+        CDSTestUtils.createArchiveAndCheck(opts)\n+            .shouldContain(\"Shared string table stats\");\n@@ -65,2 +62,4 @@\n-        ProcessBuilder runPb = ProcessTools.createTestJvm(\n-          TestCommon.concat(vmOptionsPrefix,\n+        opts = (new CDSOptions())\n+            .setUseVersion(false)\n+            .setXShareMode(\"auto\")\n+            .addSuffix(vmOptionsPrefix,\n@@ -69,1 +68,0 @@\n-            \"-Xshare:auto\",\n@@ -71,3 +69,3 @@\n-            \"HelloString\"));\n-\n-        TestCommon.executeAndLog(runPb, \"run\").shouldHaveExitValue(0);\n+            \"HelloString\");\n+        CDSTestUtils.run(opts)\n+                    .assertNormalExit();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SharedStringsBasic.java","additions":16,"deletions":18,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n@@ -35,1 +37,0 @@\n-import jdk.test.lib.process.ProcessTools;\n@@ -46,8 +47,0 @@\n-        ProcessBuilder dumpPb = ProcessTools.createTestJvm(\n-          TestCommon.concat(vmOptionsPrefix,\n-            \"-XX:+UseG1GC\", \"-XX:MaxRAMPercentage=12.5\",\n-            \"-cp\", \".\",\n-            \"-XX:SharedBaseAddress=0\", \"-XX:SharedArchiveFile=.\/SysDictCrash.jsa\",\n-            \"-Xshare:dump\",\n-            \"-showversion\", \"-Xlog:cds,cds+hashtables\"));\n-\n@@ -55,1 +48,9 @@\n-        OutputAnalyzer output = TestCommon.executeAndLog(dumpPb, \"dump\");\n+\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(vmOptionsPrefix,\n+                       \"-XX:+UseG1GC\", \"-XX:MaxRAMPercentage=12.5\",\n+                       \"-cp\", \".\",\n+                       \"-XX:SharedBaseAddress=0\",\n+                       \"-showversion\", \"-Xlog:cds,cds+hashtables\")\n+            .setArchiveName(\".\/SysDictCrash.jsa\");\n+        OutputAnalyzer output = CDSTestUtils.createArchive(opts);\n@@ -71,8 +72,10 @@\n-        ProcessBuilder runPb = ProcessTools.createTestJvm(\n-          TestCommon.concat(vmOptionsPrefix,\n-            \"-XX:+UseG1GC\", \"-XX:MaxRAMPercentage=12.5\",\n-            \"-XX:SharedArchiveFile=.\/SysDictCrash.jsa\",\n-            \"-Xshare:on\",\n-            \"-version\"));\n-\n-        TestCommon.checkExec(TestCommon.executeAndLog(runPb, \"exec\"));\n+        opts = (new CDSOptions())\n+            .setArchiveName(\".\/SysDictCrash.jsa\") \/\/ prevents the assignment of a default archive name\n+            .setUseVersion(false) \/\/ the -version must be the last arg for this test to work\n+            .addSuffix(vmOptionsPrefix,\n+                       \"-Xlog:cds\",\n+                       \"-XX:+UseG1GC\", \"-XX:MaxRAMPercentage=12.5\",\n+                       \"-XX:SharedArchiveFile=.\/SysDictCrash.jsa\",\n+                       \"-version\");\n+        CDSTestUtils.run(opts)\n+                    .assertNormalExit();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/SysDictCrash.java","additions":22,"deletions":19,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,5 @@\n+    public CDSOptions addPrefix(String prefix[], String... extra) {\n+        for (String s : prefix) this.prefix.add(s);\n+        for (String s : extra) this.prefix.add(s);\n+        return this;\n+    }\n@@ -59,0 +64,6 @@\n+    public CDSOptions addSuffix(String suffix[], String... extra) {\n+        for (String s : suffix) this.suffix.add(s);\n+        for (String s : extra) this.suffix.add(s);\n+        return this;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSOptions.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -390,0 +390,12 @@\n+    \/\/ Dump a classlist using the -XX:DumpLoadedClassList option.\n+    public static Result dumpClassList(String classListName, String... cli)\n+        throws Exception {\n+        CDSOptions opts = (new CDSOptions())\n+            .setUseVersion(false)\n+            .setXShareMode(\"auto\")\n+            .addPrefix(\"-XX:DumpLoadedClassList=\" + classListName)\n+            .addSuffix(cli);\n+        Result res = run(opts).assertNormalExit();\n+        return res;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSTestUtils.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}