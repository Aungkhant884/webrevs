{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -586,3 +586,1 @@\n-            } catch (BufferUnderflowException x) {\n-                throw new CoderMalfunctionError(x);\n-            } catch (BufferOverflowException x) {\n+            } catch (RuntimeException x) {\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset-X-Coder.java.template","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8253832\n+ * @run testng CoderMalfunctionErrorTest\n+ * @summary Check CoderMalfunctionError is thrown for any RuntimeException\n+ *      on CharsetDecoder.decodeLoop() invocation.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.charset.*;\n+\n+@Test\n+public class CoderMalfunctionErrorTest {\n+    @Test (expectedExceptions = CoderMalfunctionError.class)\n+    public void testDecodeLoop() {\n+        new CharsetDecoder(StandardCharsets.US_ASCII, 1, 1) {\n+            @Override\n+            protected CoderResult decodeLoop(ByteBuffer byteBuffer, CharBuffer charBuffer) {\n+                throw new RuntimeException(\"This exception should be wrapped in CoderMalfunctionError\");\n+            }\n+        }.decode(null, null, true);\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/charset\/CharsetDecoder\/CoderMalfunctionErrorTest.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8253832\n+ * @run testng CoderMalfunctionErrorTest\n+ * @summary Check CoderMalfunctionError is thrown for any RuntimeException\n+ *      on CharsetEncoder.encodeLoop() invocation.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.charset.*;\n+\n+@Test\n+public class CoderMalfunctionErrorTest {\n+    @Test (expectedExceptions = CoderMalfunctionError.class)\n+    public void testEncodeLoop() {\n+        new CharsetEncoder(StandardCharsets.US_ASCII, 1, 1) {\n+            @Override\n+            protected CoderResult encodeLoop(CharBuffer charBuffer, ByteBuffer byteBuffer) {\n+                throw new RuntimeException(\"This exception should be wrapped in CoderMalfunctionError\");\n+            }\n+        }.encode(null, null, true);\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/charset\/CharsetEncoder\/CoderMalfunctionErrorTest.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"}]}