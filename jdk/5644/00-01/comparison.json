{"files":[{"patch":"@@ -31,1 +31,1 @@\n- * @library ..\/..\/lib\n+ * @library \/tools\/lib ..\/..\/lib\n@@ -33,1 +33,1 @@\n- * @build javadoc.tester.*\n+ * @build toolbox.ToolBox javadoc.tester.*\n@@ -38,0 +38,1 @@\n+import toolbox.ToolBox;\n@@ -46,0 +47,2 @@\n+    ToolBox tb = new ToolBox();\n+\n@@ -49,1 +52,1 @@\n-        copyDir(testSrc(\"pkg\"), \"pkg\");\n+        tb.copyDir(testSrc(\"pkg\"), \"pkg\");\n@@ -61,1 +64,1 @@\n-        copyDir(testSrc(\"pkg\"), outdir + \"\/pkg\");\n+        tb.copyDir(testSrc(\"pkg\"), outdir + \"\/pkg\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDocFileDir\/TestDocFileDir.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+import java.util.Comparator;\n@@ -222,1 +223,1 @@\n-                try (DirectoryStream<Path> ds = Files.newDirectoryStream(dir, filter)) {\n+                try (var ds = Files.newDirectoryStream(dir, filter)) {\n@@ -778,44 +779,0 @@\n-    \/**\n-     * Copies the contents of a directory to another directory.\n-     *\n-     * @param fromDir the directory containing the files to be copied\n-     * @param toDir   the destination to which to copy the files\n-     *\/\n-    public void copyDir(String fromDir, String toDir) {\n-        copyDir(Path.of(fromDir), Path.of(toDir));\n-    }\n-\n-    \/**\n-     * Copies the contents of a directory to another directory.\n-     *\n-     * @param fromDir the directory containing the files to be copied\n-     * @param toDir   the destination to which to copy the files\n-     *\/\n-    public void copyDir(Path fromDir, Path toDir) {\n-        out.println(\"Copying \" + fromDir + \" to \" + toDir);\n-        try {\n-            Files.createDirectories(toDir);\n-            Files.walkFileTree(fromDir, new SimpleFileVisitor<>() {\n-                @Override\n-                public FileVisitResult preVisitDirectory(Path fromSubdir, BasicFileAttributes attrs) throws IOException {\n-                    Path toSubdir = toDir.resolve(fromDir.relativize(fromSubdir));\n-                    if (Files.exists(toSubdir)) {\n-                        Files.createDirectories(toSubdir);\n-                    }\n-                    return FileVisitResult.CONTINUE;\n-                }\n-\n-                @Override\n-                public FileVisitResult visitFile(Path fromFile, BasicFileAttributes attrs)\n-                        throws IOException {\n-                    Path toFile = toDir.resolve(fromDir.relativize(fromFile));\n-                    out.println(\"Copying \" + fromFile + \" to \" + toFile);\n-                    Files.copy(fromFile, toFile);\n-                    return FileVisitResult.CONTINUE;\n-                }\n-            });\n-        } catch (IOException e) {\n-            throw new Error(\"Could not copy \" + fromDir + \" to \" + toDir + \": \" + e, e);\n-        }\n-    }\n-\n@@ -873,1 +830,1 @@\n-            content = new String(Files.readAllBytes(file), charset);\n+            content = Files.readString(file, charset);\n@@ -1114,2 +1071,2 @@\n-            tests.sort((a, b) -> a.compareTo(b));\n-            try (BufferedWriter bw = Files.newBufferedWriter(Path.of(\"tester.log\"))) {\n+            tests.sort(Comparator.naturalOrder());\n+            try (var bw = Files.newBufferedWriter(Path.of(\"tester.log\"))) {\n","filename":"test\/langtools\/jdk\/javadoc\/lib\/javadoc\/tester\/JavadocTester.java","additions":5,"deletions":48,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import java.nio.file.FileAlreadyExistsException;\n+import java.nio.file.FileVisitOption;\n@@ -51,0 +53,1 @@\n+import java.util.EnumSet;\n@@ -248,1 +251,50 @@\n-     * Creates one of more directories.\n+     * Copies the contents of a directory to another directory.\n+     * <p>Similar to the shell command: {@code rsync fromDir\/ toDir\/}.\n+     *\n+     * @param fromDir the directory containing the files to be copied\n+     * @param toDir   the destination to which to copy the files\n+     *\/\n+    public void copyDir(String fromDir, String toDir) {\n+        copyDir(Path.of(fromDir), Path.of(toDir));\n+    }\n+\n+    \/**\n+     * Copies the contents of a directory to another directory.\n+     * <p>Similar to the shell command: {@code rsync fromDir\/ toDir\/}.\n+     *\n+     * @param fromDir the directory containing the files to be copied\n+     * @param toDir   the destination to which to copy the files\n+     *\/\n+    public void copyDir(Path fromDir, Path toDir) {\n+        try {\n+            Files.createDirectories(toDir);\n+            \/\/ See second example in java.nio.file.FileVisitor, Usage Examples\n+            Files.walkFileTree(fromDir, EnumSet.of(FileVisitOption.FOLLOW_LINKS), Integer.MAX_VALUE,\n+                    new SimpleFileVisitor<Path>() {\n+                        @Override\n+                        public FileVisitResult preVisitDirectory(Path fromSubdir, BasicFileAttributes attrs)\n+                                throws IOException {\n+                            Path toSubdir = toDir.resolve(fromDir.relativize(fromSubdir));\n+                            try {\n+                                Files.copy(fromSubdir, toSubdir);\n+                            } catch (FileAlreadyExistsException e) {\n+                                if (!Files.isDirectory(toSubdir))\n+                                    throw e;\n+                            }\n+                            return FileVisitResult.CONTINUE;\n+                        }\n+\n+                        @Override\n+                        public FileVisitResult visitFile(Path fromFile, BasicFileAttributes attrs)\n+                                throws IOException {\n+                            Files.copy(fromFile, toDir.resolve(fromDir.relativize(fromFile)));\n+                            return FileVisitResult.CONTINUE;\n+                        }\n+                    });\n+        } catch (IOException e) {\n+            throw new Error(\"Could not copy \" + fromDir + \" to \" + toDir + \": \" + e, e);\n+        }\n+    }\n+\n+    \/**\n+     * Creates one or more directories.\n","filename":"test\/langtools\/tools\/lib\/toolbox\/ToolBox.java","additions":53,"deletions":1,"binary":false,"changes":54,"status":"modified"}]}