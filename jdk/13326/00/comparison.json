{"files":[{"patch":"@@ -3599,1 +3599,1 @@\n-        return (this.precision() - this.scale) <= 0;\n+        return this.precision() <= this.scale;\n@@ -3627,2 +3627,9 @@\n-        \/\/ If more than 19 digits in integer part it cannot possibly fit\n-        if ((precision() - scale) > 19) \/\/ [OK for negative scale too]\n+        \/*\n+         * If more than 19 digits in integer part it cannot possibly fit.\n+         * Ensure that arithmetic does not overflow, so instead of\n+         *      precision() - scale > 19\n+         * prefer\n+         *      precision() - 19 > scale\n+         * since precision() > 0, so the lhs cannot overflow.\n+         *\/\n+        if (precision() - 19 > scale) \/\/ [OK for negative scale too]\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6806261 8211936\n+ * @bug 6806261 8211936 8305343\n@@ -40,0 +40,1 @@\n+        failures += longValueExactExceptional8305343();\n@@ -120,0 +121,23 @@\n+\n+    private static int longValueExactExceptional8305343() {\n+        int failures = 0;\n+        List<BigDecimal> exceptionalCases =\n+                List.of(new BigDecimal(\"1e\" + (Integer.MAX_VALUE - 1)),\n+                        new BigDecimal(\"1e\" + (Integer.MAX_VALUE))\n+                );\n+\n+        for (BigDecimal bd : exceptionalCases) {\n+            try {\n+                bd.longValueExact();\n+                failures++;\n+                System.err.println(\"Unexpected non-exceptional longValueExact on \" + bd);\n+            } catch (ArithmeticException e) {\n+                if (!e.getMessage().toLowerCase().contains(\"overflow\")) {\n+                    failures++;\n+                    System.err.println(\"Unexpected non-exceptional longValueExact on \" + bd);\n+                }\n+            }\n+        }\n+        return failures;\n+    }\n+\n","filename":"test\/jdk\/java\/math\/BigDecimal\/LongValueExactTests.java","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"}]}