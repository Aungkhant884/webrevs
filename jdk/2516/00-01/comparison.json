{"files":[{"patch":"@@ -47,6 +47,6 @@\n-import static jdk.javadoc.internal.doclets.formats.html.LinkInfoImpl.Kind.EXECUTABLE_MEMBER_PARAM;\n-import static jdk.javadoc.internal.doclets.formats.html.LinkInfoImpl.Kind.MEMBER;\n-import static jdk.javadoc.internal.doclets.formats.html.LinkInfoImpl.Kind.MEMBER_DEPRECATED_PREVIEW;\n-import static jdk.javadoc.internal.doclets.formats.html.LinkInfoImpl.Kind.MEMBER_TYPE_PARAMS;\n-import static jdk.javadoc.internal.doclets.formats.html.LinkInfoImpl.Kind.RECEIVER_TYPE;\n-import static jdk.javadoc.internal.doclets.formats.html.LinkInfoImpl.Kind.THROWS_TYPE;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.EXECUTABLE_MEMBER_PARAM;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.MEMBER;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.MEMBER_TYPE_PARAMS;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.RECEIVER_TYPE;\n+import static jdk.javadoc.internal.doclets.formats.html.HtmlLinkInfo.Kind.THROWS_TYPE;\n@@ -80,1 +80,1 @@\n-        LinkInfoImpl linkInfo = new LinkInfoImpl(configuration, MEMBER_TYPE_PARAMS, member);\n+        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration, MEMBER_TYPE_PARAMS, member);\n@@ -111,2 +111,2 @@\n-    protected void addSummaryLink(LinkInfoImpl.Kind context, TypeElement te, Element member,\n-            Content tdSummary) {\n+    protected void addSummaryLink(HtmlLinkInfo.Kind context, TypeElement te, Element member,\n+                                  Content tdSummary) {\n@@ -129,1 +129,1 @@\n-        linksTree.add(writer.getDocLink(MEMBER, te, member, name(member), null));\n+        linksTree.add(writer.getDocLink(MEMBER, te, member, name(member)));\n@@ -142,1 +142,1 @@\n-        Content link = writer.getLink(new LinkInfoImpl(configuration, EXECUTABLE_MEMBER_PARAM,\n+        Content link = writer.getLink(new HtmlLinkInfo(configuration, EXECUTABLE_MEMBER_PARAM,\n@@ -161,1 +161,1 @@\n-        var info = new LinkInfoImpl(configuration, RECEIVER_TYPE, rcvrType);\n+        var info = new HtmlLinkInfo(configuration, RECEIVER_TYPE, rcvrType);\n@@ -292,1 +292,1 @@\n-            Content link = writer.getLink(new LinkInfoImpl(configuration, THROWS_TYPE, t));\n+            Content link = writer.getLink(new HtmlLinkInfo(configuration, THROWS_TYPE, t));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractExecutableMemberWriter.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-        addSummaryLink(LinkInfoImpl.Kind.MEMBER, typeElement, member, tdSummary);\n+        addSummaryLink(HtmlLinkInfo.Kind.MEMBER, typeElement, member, tdSummary);\n@@ -161,2 +161,2 @@\n-    protected abstract void addSummaryLink(LinkInfoImpl.Kind context,\n-            TypeElement typeElement, Element member, Content tdSummary);\n+    protected abstract void addSummaryLink(HtmlLinkInfo.Kind context,\n+                                           TypeElement typeElement, Element member, Content tdSummary);\n@@ -213,2 +213,2 @@\n-                    writer.getLink(new LinkInfoImpl(configuration,\n-                            LinkInfoImpl.Kind.SUMMARY_RETURN_TYPE, type)));\n+                    writer.getLink(new HtmlLinkInfo(configuration,\n+                            HtmlLinkInfo.Kind.SUMMARY_RETURN_TYPE, type)));\n@@ -339,2 +339,2 @@\n-                    ? LinkInfoImpl.Kind.CLASS_USE\n-                    : LinkInfoImpl.Kind.MEMBER,\n+                    ? HtmlLinkInfo.Kind.CLASS_USE\n+                    : HtmlLinkInfo.Kind.MEMBER,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,1 +157,1 @@\n-                        addPreQualifiedClassLink(LinkInfoImpl.Kind.TREE, intf, contentTree);\n+                        addPreQualifiedClassLink(HtmlLinkInfo.Kind.TREE, intf, contentTree);\n@@ -174,1 +174,1 @@\n-        addPreQualifiedStrongClassLink(LinkInfoImpl.Kind.TREE, typeElement, contentTree);\n+        addPreQualifiedStrongClassLink(HtmlLinkInfo.Kind.TREE, typeElement, contentTree);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractTreeWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -154,2 +154,2 @@\n-        Content classLink = getLink(new LinkInfoImpl(\n-                configuration, LinkInfoImpl.Kind.INDEX, klass));\n+        Content classLink = getLink(new HtmlLinkInfo(\n+                configuration, HtmlLinkInfo.Kind.INDEX, klass));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -187,2 +187,2 @@\n-    protected void addSummaryLink(LinkInfoImpl.Kind context, TypeElement typeElement, Element member,\n-            Content tdSummary) {\n+    protected void addSummaryLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element member,\n+                                  Content tdSummary) {\n@@ -209,1 +209,1 @@\n-        return writer.getDocLink(LinkInfoImpl.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n+        return writer.getDocLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeRequiredMemberWriterImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -255,2 +255,2 @@\n-                getLink(new LinkInfoImpl(configuration,\n-                        LinkInfoImpl.Kind.CLASS_USE_HEADER, typeElement)));\n+                getLink(new HtmlLinkInfo(configuration,\n+                        HtmlLinkInfo.Kind.CLASS_USE_HEADER, typeElement)));\n@@ -280,2 +280,2 @@\n-                getLink(new LinkInfoImpl(configuration,\n-                        LinkInfoImpl.Kind.CLASS_USE_HEADER, typeElement)));\n+                getLink(new HtmlLinkInfo(configuration,\n+                        HtmlLinkInfo.Kind.CLASS_USE_HEADER, typeElement)));\n@@ -307,1 +307,1 @@\n-                    getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.CLASS_USE_HEADER,\n+                    getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.CLASS_USE_HEADER,\n@@ -340,2 +340,2 @@\n-        Content classLink = getLink(new LinkInfoImpl(configuration,\n-            LinkInfoImpl.Kind.CLASS_USE_HEADER, typeElement));\n+        Content classLink = getLink(new HtmlLinkInfo(configuration,\n+            HtmlLinkInfo.Kind.CLASS_USE_HEADER, typeElement));\n@@ -440,2 +440,2 @@\n-        Content classLinkContent = getLink(new LinkInfoImpl(\n-                configuration, LinkInfoImpl.Kind.CLASS_USE_HEADER, typeElement)\n+        Content classLinkContent = getLink(new HtmlLinkInfo(\n+                configuration, HtmlLinkInfo.Kind.CLASS_USE_HEADER, typeElement)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -130,2 +130,2 @@\n-        LinkInfoImpl linkInfo = new LinkInfoImpl(configuration,\n-                LinkInfoImpl.Kind.CLASS_HEADER, typeElement);\n+        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration,\n+                HtmlLinkInfo.Kind.CLASS_HEADER, typeElement);\n@@ -270,1 +270,1 @@\n-                    new LinkInfoImpl(configuration, LinkInfoImpl.Kind.TREE,\n+                    new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.TREE,\n@@ -280,2 +280,2 @@\n-            Content link = getLink(new LinkInfoImpl(configuration,\n-                    LinkInfoImpl.Kind.CLASS_TREE_PARENT, type)\n+            Content link = getLink(new HtmlLinkInfo(configuration,\n+                    HtmlLinkInfo.Kind.CLASS_TREE_PARENT, type)\n@@ -319,1 +319,1 @@\n-                dl.add(HtmlTree.DD(getClassLinks(LinkInfoImpl.Kind.SUBCLASSES, subclasses)));\n+                dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SUBCLASSES, subclasses)));\n@@ -332,1 +332,1 @@\n-                dl.add(HtmlTree.DD(getClassLinks(LinkInfoImpl.Kind.SUBINTERFACES, subInterfaces)));\n+                dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SUBINTERFACES, subInterfaces)));\n@@ -352,1 +352,1 @@\n-            dl.add(HtmlTree.DD(getClassLinks(LinkInfoImpl.Kind.IMPLEMENTED_CLASSES, implcl)));\n+            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.IMPLEMENTED_CLASSES, implcl)));\n@@ -364,1 +364,1 @@\n-            dl.add(HtmlTree.DD(getClassLinks(LinkInfoImpl.Kind.IMPLEMENTED_INTERFACES, interfaces)));\n+            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.IMPLEMENTED_INTERFACES, interfaces)));\n@@ -378,1 +378,1 @@\n-            dl.add(HtmlTree.DD(getClassLinks(LinkInfoImpl.Kind.SUPER_INTERFACES, interfaces)));\n+            dl.add(HtmlTree.DD(getClassLinks(HtmlLinkInfo.Kind.SUPER_INTERFACES, interfaces)));\n@@ -396,2 +396,2 @@\n-                dd.add(getLink(new LinkInfoImpl(configuration,\n-                        LinkInfoImpl.Kind.CLASS, e)));\n+                dd.add(getLink(new HtmlLinkInfo(configuration,\n+                        HtmlLinkInfo.Kind.CLASS, e)));\n@@ -453,1 +453,1 @@\n-    private Content getClassLinks(LinkInfoImpl.Kind context, Collection<?> list) {\n+    private Content getClassLinks(HtmlLinkInfo.Kind context, Collection<?> list) {\n@@ -466,1 +466,1 @@\n-                        new LinkInfoImpl(configuration, context, (TypeElement)(type)));\n+                        new HtmlLinkInfo(configuration, context, (TypeElement)(type)));\n@@ -470,1 +470,1 @@\n-                        new LinkInfoImpl(configuration, context, ((TypeMirror)type)));\n+                        new HtmlLinkInfo(configuration, context, ((TypeMirror)type)));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -187,2 +187,2 @@\n-            getLink(new LinkInfoImpl(configuration,\n-                    LinkInfoImpl.Kind.CONSTANT_SUMMARY, typeElement)) :\n+            getLink(new HtmlLinkInfo(configuration,\n+                    HtmlLinkInfo.Kind.CONSTANT_SUMMARY, typeElement)) :\n@@ -225,2 +225,2 @@\n-        Content type = getLink(new LinkInfoImpl(configuration,\n-                LinkInfoImpl.Kind.CONSTANT_SUMMARY, member.asType()));\n+        Content type = getLink(new HtmlLinkInfo(configuration,\n+                HtmlLinkInfo.Kind.CONSTANT_SUMMARY, member.asType()));\n@@ -239,1 +239,1 @@\n-        Content nameContent = getDocLink(LinkInfoImpl.Kind.CONSTANT_SUMMARY,\n+        Content nameContent = getDocLink(HtmlLinkInfo.Kind.CONSTANT_SUMMARY,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriterImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -160,2 +160,2 @@\n-    protected void addSummaryLink(LinkInfoImpl.Kind context, TypeElement typeElement, Element member,\n-            Content tdSummary) {\n+    protected void addSummaryLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element member,\n+                                  Content tdSummary) {\n@@ -180,1 +180,1 @@\n-        return writer.getDocLink(LinkInfoImpl.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n+        return writer.getDocLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriterImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-                LinkInfoImpl.Kind.MEMBER, typeElement);\n+                HtmlLinkInfo.Kind.MEMBER, typeElement);\n@@ -184,2 +184,2 @@\n-    protected void addSummaryLink(LinkInfoImpl.Kind context, TypeElement typeElement, Element member,\n-            Content tdSummary) {\n+    protected void addSummaryLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element member,\n+                                  Content tdSummary) {\n@@ -195,1 +195,1 @@\n-                writer.getDocLink(LinkInfoImpl.Kind.MEMBER, typeElement, member, name(member), null));\n+                writer.getDocLink(HtmlLinkInfo.Kind.MEMBER, typeElement, member, name(member)));\n@@ -206,1 +206,1 @@\n-        return writer.getDocLink(LinkInfoImpl.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n+        return writer.getDocLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member, name);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriterImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -753,2 +753,2 @@\n-    public Content getLink(LinkInfoImpl linkInfo) {\n-        LinkFactoryImpl factory = new LinkFactoryImpl(this);\n+    public Content getLink(HtmlLinkInfo linkInfo) {\n+        HtmlLinkFactory factory = new HtmlLinkFactory(this);\n@@ -764,2 +764,2 @@\n-    public Content getTypeParameterLinks(LinkInfoImpl linkInfo) {\n-        LinkFactoryImpl factory = new LinkFactoryImpl(this);\n+    public Content getTypeParameterLinks(HtmlLinkInfo linkInfo) {\n+        HtmlLinkFactory factory = new HtmlLinkFactory(this);\n@@ -833,3 +833,3 @@\n-    public Content getQualifiedClassLink(LinkInfoImpl.Kind context, Element element) {\n-        LinkInfoImpl linkInfoImpl = new LinkInfoImpl(configuration, context, (TypeElement)element);\n-        return getLink(linkInfoImpl.label(utils.getFullyQualifiedName(element)));\n+    public Content getQualifiedClassLink(HtmlLinkInfo.Kind context, Element element) {\n+        HtmlLinkInfo htmlLinkInfo = new HtmlLinkInfo(configuration, context, (TypeElement)element);\n+        return getLink(htmlLinkInfo.label(utils.getFullyQualifiedName(element)));\n@@ -845,1 +845,1 @@\n-    public void addPreQualifiedClassLink(LinkInfoImpl.Kind context, TypeElement typeElement, Content contentTree) {\n+    public void addPreQualifiedClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Content contentTree) {\n@@ -857,1 +857,1 @@\n-    public Content getPreQualifiedClassLink(LinkInfoImpl.Kind context, TypeElement typeElement) {\n+    public Content getPreQualifiedClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement) {\n@@ -863,1 +863,1 @@\n-        classlink.add(getLink(new LinkInfoImpl(configuration,\n+        classlink.add(getLink(new HtmlLinkInfo(configuration,\n@@ -878,2 +878,2 @@\n-    public void addPreQualifiedClassLink(LinkInfoImpl.Kind context,\n-            TypeElement typeElement, HtmlStyle style, Content contentTree) {\n+    public void addPreQualifiedClassLink(HtmlLinkInfo.Kind context,\n+                                         TypeElement typeElement, HtmlStyle style, Content contentTree) {\n@@ -884,1 +884,1 @@\n-        LinkInfoImpl linkinfo = new LinkInfoImpl(configuration, context, typeElement)\n+        HtmlLinkInfo linkinfo = new HtmlLinkInfo(configuration, context, typeElement)\n@@ -920,1 +920,1 @@\n-    public void addPreQualifiedStrongClassLink(LinkInfoImpl.Kind context, TypeElement typeElement, Content contentTree) {\n+    public void addPreQualifiedStrongClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Content contentTree) {\n@@ -932,1 +932,1 @@\n-    public Content getDocLink(LinkInfoImpl.Kind context, Element element, CharSequence label) {\n+    public Content getDocLink(HtmlLinkInfo.Kind context, Element element, CharSequence label) {\n@@ -937,0 +937,16 @@\n+    \/**\n+     * Return the link for the given member.\n+     *\n+     * @param context the id of the context where the link will be printed.\n+     * @param typeElement the typeElement that we should link to. This is not\n+     *            not necessarily the type containing element since we may be\n+     *            inheriting comments.\n+     * @param element the member being linked to.\n+     * @param label the label for the link.\n+     * @return the link for the given member.\n+     *\/\n+    public Content getDocLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element element,\n+                              CharSequence label) {\n+        return getDocLink(context, typeElement, element, new StringContent(label), null, false);\n+    }\n+\n@@ -949,1 +965,1 @@\n-    public Content getDocLink(LinkInfoImpl.Kind context, TypeElement typeElement, Element element,\n+    public Content getDocLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element element,\n@@ -965,1 +981,1 @@\n-    public Content getDocLink(LinkInfoImpl.Kind context, TypeElement typeElement, Element element,\n+    public Content getDocLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element element,\n@@ -983,2 +999,2 @@\n-    public Content getDocLink(LinkInfoImpl.Kind context, TypeElement typeElement, Element element,\n-            Content label, HtmlStyle style, boolean isProperty) {\n+    public Content getDocLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element element,\n+                              Content label, HtmlStyle style, boolean isProperty) {\n@@ -992,1 +1008,1 @@\n-            return getLink(new LinkInfoImpl(configuration, context, typeElement)\n+            return getLink(new HtmlLinkInfo(configuration, context, typeElement)\n@@ -1000,1 +1016,1 @@\n-            return getLink(new LinkInfoImpl(configuration, context, typeElement)\n+            return getLink(new HtmlLinkInfo(configuration, context, typeElement)\n@@ -1077,1 +1093,1 @@\n-                                new LinkInfoImpl(configuration, LinkInfoImpl.Kind.DEFAULT, refType)));\n+                                new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.DEFAULT, refType)));\n@@ -1082,1 +1098,1 @@\n-            return getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.DEFAULT, refClass)\n+            return getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.DEFAULT, refClass)\n@@ -1138,1 +1154,1 @@\n-            return getDocLink(LinkInfoImpl.Kind.SEE_TAG, containing,\n+            return getDocLink(HtmlLinkInfo.Kind.SEE_TAG, containing,\n@@ -1758,2 +1774,2 @@\n-            LinkInfoImpl linkInfo = new LinkInfoImpl(configuration,\n-                                                     LinkInfoImpl.Kind.ANNOTATION, annotationElement);\n+            HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration,\n+                                                     HtmlLinkInfo.Kind.ANNOTATION, annotationElement);\n@@ -1834,1 +1850,1 @@\n-    private void addAnnotations(TypeElement annotationDoc, LinkInfoImpl linkInfo,\n+    private void addAnnotations(TypeElement annotationDoc, HtmlLinkInfo linkInfo,\n@@ -1861,1 +1877,1 @@\n-                    annotation.add(getDocLink(LinkInfoImpl.Kind.ANNOTATION, element, simpleName));\n+                    annotation.add(getDocLink(HtmlLinkInfo.Kind.ANNOTATION, element, simpleName));\n@@ -1950,2 +1966,2 @@\n-                        LinkInfoImpl linkInfo = new LinkInfoImpl(configuration,\n-                                LinkInfoImpl.Kind.ANNOTATION, t);\n+                        HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration,\n+                                HtmlLinkInfo.Kind.ANNOTATION, t);\n@@ -1975,1 +1991,1 @@\n-                return getDocLink(LinkInfoImpl.Kind.ANNOTATION, c, c.getSimpleName());\n+                return getDocLink(HtmlLinkInfo.Kind.ANNOTATION, c, c.getSimpleName());\n@@ -2263,1 +2279,1 @@\n-                .map(te -> getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.CLASS, te).label(HtmlTree.CODE(new StringContent(te.getSimpleName()))).skipPreview(true)))\n+                .map(te -> getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.CLASS, te).label(HtmlTree.CODE(new StringContent(te.getSimpleName()))).skipPreview(true)))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":48,"deletions":32,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-public class LinkFactoryImpl extends LinkFactory {\n+public class HtmlLinkFactory extends LinkFactory {\n@@ -65,1 +65,1 @@\n-    public LinkFactoryImpl(HtmlDocletWriter writer) {\n+    public HtmlLinkFactory(HtmlDocletWriter writer) {\n@@ -79,1 +79,1 @@\n-        LinkInfoImpl classLinkInfo = (LinkInfoImpl) linkInfo;\n+        HtmlLinkInfo classLinkInfo = (HtmlLinkInfo) linkInfo;\n@@ -97,1 +97,1 @@\n-        } else if ((classLinkInfo.context == LinkInfoImpl.Kind.SEE_TAG || classLinkInfo.context == LinkInfoImpl.Kind.MEMBER_DEPRECATED_PREVIEW) &&\n+        } else if ((classLinkInfo.context == HtmlLinkInfo.Kind.SEE_TAG || classLinkInfo.context == HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW) &&\n@@ -175,1 +175,1 @@\n-                    if (((LinkInfoImpl) linkInfo).getContext() == LinkInfoImpl.Kind.MEMBER_TYPE_PARAMS) {\n+                    if (((HtmlLinkInfo) linkInfo).getContext() == HtmlLinkInfo.Kind.MEMBER_TYPE_PARAMS) {\n@@ -195,2 +195,2 @@\n-        LinkInfoImpl typeLinkInfo = new LinkInfoImpl(m_writer.configuration,\n-                ((LinkInfoImpl) linkInfo).getContext(), typeParam).skipPreview(true);\n+        HtmlLinkInfo typeLinkInfo = new HtmlLinkInfo(m_writer.configuration,\n+                ((HtmlLinkInfo) linkInfo).getContext(), typeParam).skipPreview(true);\n@@ -212,1 +212,1 @@\n-            switch (((LinkInfoImpl)linkInfo).context) {\n+            switch (((HtmlLinkInfo)linkInfo).context) {\n@@ -274,1 +274,1 @@\n-    private DocPath getPath(LinkInfoImpl linkInfo) {\n+    private DocPath getPath(HtmlLinkInfo linkInfo) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":9,"deletions":9,"binary":false,"changes":18,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/LinkFactoryImpl.java","status":"renamed"},{"patch":"@@ -47,1 +47,1 @@\n-public class LinkInfoImpl extends LinkInfo {\n+public class HtmlLinkInfo extends LinkInfo {\n@@ -259,1 +259,1 @@\n-    public LinkInfoImpl(HtmlConfiguration configuration, Kind context, ExecutableElement ee) {\n+    public HtmlLinkInfo(HtmlConfiguration configuration, Kind context, ExecutableElement ee) {\n@@ -278,1 +278,1 @@\n-    public LinkInfoImpl(HtmlConfiguration configuration, Kind context, TypeElement typeElement) {\n+    public HtmlLinkInfo(HtmlConfiguration configuration, Kind context, TypeElement typeElement) {\n@@ -292,1 +292,1 @@\n-    public LinkInfoImpl(HtmlConfiguration configuration, Kind context, TypeMirror type) {\n+    public HtmlLinkInfo(HtmlConfiguration configuration, Kind context, TypeMirror type) {\n@@ -303,1 +303,1 @@\n-    public LinkInfoImpl label(CharSequence label) {\n+    public HtmlLinkInfo label(CharSequence label) {\n@@ -311,1 +311,1 @@\n-    public LinkInfoImpl label(Content label) {\n+    public HtmlLinkInfo label(Content label) {\n@@ -319,1 +319,1 @@\n-    public LinkInfoImpl style(HtmlStyle style) {\n+    public HtmlLinkInfo style(HtmlStyle style) {\n@@ -327,1 +327,1 @@\n-    public LinkInfoImpl varargs(boolean varargs) {\n+    public HtmlLinkInfo varargs(boolean varargs) {\n@@ -335,1 +335,1 @@\n-    public LinkInfoImpl where(String where) {\n+    public HtmlLinkInfo where(String where) {\n@@ -343,1 +343,1 @@\n-    public LinkInfoImpl targetMember(Element el) {\n+    public HtmlLinkInfo targetMember(Element el) {\n@@ -351,1 +351,1 @@\n-    public LinkInfoImpl skipPreview(boolean skipPreview) {\n+    public HtmlLinkInfo skipPreview(boolean skipPreview) {\n@@ -439,1 +439,1 @@\n-        return \"LinkInfoImpl{\" +\n+        return \"HtmlLinkInfo{\" +\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkInfo.java","additions":12,"deletions":12,"binary":false,"changes":24,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/LinkInfoImpl.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n@@ -45,1 +44,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.taglets.TagletWriter;\n@@ -124,2 +122,2 @@\n-            Content fieldContent = writer.getLink(new LinkInfoImpl(\n-                    configuration, LinkInfoImpl.Kind.SERIAL_MEMBER, fieldType));\n+            Content fieldContent = writer.getLink(new HtmlLinkInfo(\n+                    configuration, HtmlLinkInfo.Kind.SERIAL_MEMBER, fieldType));\n@@ -139,2 +137,2 @@\n-        Content fieldContent = writer.getLink(new LinkInfoImpl(\n-                configuration, LinkInfoImpl.Kind.SERIAL_MEMBER, fieldType));\n+        Content fieldContent = writer.getLink(new HtmlLinkInfo(\n+                configuration, HtmlLinkInfo.Kind.SERIAL_MEMBER, fieldType));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialFieldWriter.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -217,2 +217,2 @@\n-                dt = HtmlTree.DT(getLink(new LinkInfoImpl(configuration,\n-                        LinkInfoImpl.Kind.INDEX, (TypeElement) element).style(HtmlStyle.typeNameLink)));\n+                dt = HtmlTree.DT(getLink(new HtmlLinkInfo(configuration,\n+                        HtmlLinkInfo.Kind.INDEX, (TypeElement) element).style(HtmlStyle.typeNameLink)));\n@@ -228,1 +228,1 @@\n-                dt = HtmlTree.DT(getDocLink(LinkInfoImpl.Kind.INDEX, containingType, element,\n+                dt = HtmlTree.DT(getDocLink(HtmlLinkInfo.Kind.INDEX, containingType, element,\n@@ -341,1 +341,1 @@\n-        addPreQualifiedClassLink(LinkInfoImpl.Kind.INDEX, enclosing,\n+        addPreQualifiedClassLink(HtmlLinkInfo.Kind.INDEX, enclosing,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-                        writer.getDocLink(LinkInfoImpl.Kind.EXECUTABLE_ELEMENT_COPY,\n+                        writer.getDocLink(HtmlLinkInfo.Kind.EXECUTABLE_ELEMENT_COPY,\n@@ -157,2 +157,1 @@\n-                                : utils.getFullyQualifiedName(holder),\n-                        null);\n+                                : utils.getFullyQualifiedName(holder));\n@@ -217,1 +216,1 @@\n-                LinkInfoImpl.Kind.MEMBER, typeElement);\n+                HtmlLinkInfo.Kind.MEMBER, typeElement);\n@@ -273,1 +272,1 @@\n-            LinkInfoImpl.Kind context;\n+            HtmlLinkInfo.Kind context;\n@@ -278,1 +277,1 @@\n-                context = LinkInfoImpl.Kind.METHOD_SPECIFIED_BY;\n+                context = HtmlLinkInfo.Kind.METHOD_SPECIFIED_BY;\n@@ -281,1 +280,1 @@\n-                context = LinkInfoImpl.Kind.METHOD_OVERRIDES;\n+                context = HtmlLinkInfo.Kind.METHOD_OVERRIDES;\n@@ -285,1 +284,1 @@\n-                    writer.getLink(new LinkInfoImpl(writer.configuration, context, overriddenType));\n+                    writer.getLink(new HtmlLinkInfo(writer.configuration, context, overriddenType));\n@@ -288,1 +287,1 @@\n-                    new LinkInfoImpl(writer.configuration, LinkInfoImpl.Kind.MEMBER, holder)\n+                    new HtmlLinkInfo(writer.configuration, HtmlLinkInfo.Kind.MEMBER, holder)\n@@ -325,2 +324,2 @@\n-            Content intfaclink = writer.getLink(new LinkInfoImpl(\n-                    writer.configuration, LinkInfoImpl.Kind.METHOD_SPECIFIED_BY, intfac));\n+            Content intfaclink = writer.getLink(new HtmlLinkInfo(\n+                    writer.configuration, HtmlLinkInfo.Kind.METHOD_SPECIFIED_BY, intfac));\n@@ -330,1 +329,1 @@\n-                    LinkInfoImpl.Kind.MEMBER, implementedMeth,\n+                    HtmlLinkInfo.Kind.MEMBER, implementedMeth,\n@@ -351,1 +350,1 @@\n-            return writer.getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.RETURN_TYPE, type));\n+            return writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.RETURN_TYPE, type));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriterImpl.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -729,1 +729,1 @@\n-            typeLinkContent = getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.PACKAGE, t));\n+            typeLinkContent = getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PACKAGE, t));\n@@ -759,1 +759,1 @@\n-            Content srvLinkContent = getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.PACKAGE, srv));\n+            Content srvLinkContent = getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PACKAGE, srv));\n@@ -779,1 +779,1 @@\n-                    desc.add(getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.PACKAGE, impl)));\n+                    desc.add(getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.PACKAGE, impl)));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-        Content classLink = writer.getPreQualifiedClassLink(LinkInfoImpl.Kind.MEMBER, typeElement);\n+        Content classLink = writer.getPreQualifiedClassLink(HtmlLinkInfo.Kind.MEMBER, typeElement);\n@@ -123,3 +123,3 @@\n-    protected void addSummaryLink(LinkInfoImpl.Kind context, TypeElement typeElement, Element member,\n-            Content tdSummary) {\n-        Content memberLink = writer.getLink(new LinkInfoImpl(configuration, context, (TypeElement)member)\n+    protected void addSummaryLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element member,\n+                                  Content tdSummary) {\n+        Content memberLink = writer.getLink(new HtmlLinkInfo(configuration, context, (TypeElement)member)\n@@ -134,1 +134,1 @@\n-                writer.getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.MEMBER,\n+                writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.MEMBER,\n@@ -145,1 +145,1 @@\n-        return writer.getQualifiedClassLink(LinkInfoImpl.Kind.MEMBER_DEPRECATED_PREVIEW, member);\n+        return writer.getQualifiedClassLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NestedClassWriterImpl.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -216,2 +216,2 @@\n-                Content classLink = getLink(new LinkInfoImpl(\n-                        configuration, LinkInfoImpl.Kind.PACKAGE, klass));\n+                Content classLink = getLink(new HtmlLinkInfo(\n+                        configuration, HtmlLinkInfo.Kind.PACKAGE, klass));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-                        writer.getDocLink(LinkInfoImpl.Kind.PROPERTY_COPY,\n+                        writer.getDocLink(HtmlLinkInfo.Kind.PROPERTY_COPY,\n@@ -118,2 +118,1 @@\n-                                ? holder.getSimpleName() : holder.getQualifiedName(),\n-                        null);\n+                                ? holder.getSimpleName() : holder.getQualifiedName());\n@@ -171,1 +170,1 @@\n-                LinkInfoImpl.Kind.MEMBER, typeElement);\n+                HtmlLinkInfo.Kind.MEMBER, typeElement);\n@@ -191,2 +190,2 @@\n-    protected void addSummaryLink(LinkInfoImpl.Kind context, TypeElement typeElement, Element member,\n-            Content tdSummary) {\n+    protected void addSummaryLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Element member,\n+                                  Content tdSummary) {\n@@ -206,1 +205,1 @@\n-        Content content = writer.getDocLink(LinkInfoImpl.Kind.MEMBER, typeElement, member,\n+        Content content = writer.getDocLink(HtmlLinkInfo.Kind.MEMBER, typeElement, member,\n@@ -218,1 +217,1 @@\n-        return writer.getDocLink(LinkInfoImpl.Kind.MEMBER_DEPRECATED_PREVIEW, member,\n+        return writer.getDocLink(HtmlLinkInfo.Kind.MEMBER_DEPRECATED_PREVIEW, member,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriterImpl.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-                ? getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.DEFAULT, typeElement)\n+                ? getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.DEFAULT, typeElement)\n@@ -158,1 +158,1 @@\n-                ? getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.SERIALIZED_FORM,\n+                ? getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.SERIALIZED_FORM,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerializedFormWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -100,2 +100,2 @@\n-            LinkInfoImpl linkInfo = new LinkInfoImpl(configuration,\n-                    LinkInfoImpl.Kind.CLASS_SIGNATURE, typeElement);\n+            HtmlLinkInfo linkInfo = new HtmlLinkInfo(configuration,\n+                    HtmlLinkInfo.Kind.CLASS_SIGNATURE, typeElement);\n@@ -118,2 +118,2 @@\n-                        Content link = classWriter.getLink(new LinkInfoImpl(configuration,\n-                                LinkInfoImpl.Kind.CLASS_SIGNATURE_PARENT_NAME,\n+                        Content link = classWriter.getLink(new HtmlLinkInfo(configuration,\n+                                HtmlLinkInfo.Kind.CLASS_SIGNATURE_PARENT_NAME,\n@@ -139,2 +139,2 @@\n-                        Content link = classWriter.getLink(new LinkInfoImpl(configuration,\n-                                LinkInfoImpl.Kind.CLASS_SIGNATURE_PARENT_NAME,\n+                        Content link = classWriter.getLink(new HtmlLinkInfo(configuration,\n+                                HtmlLinkInfo.Kind.CLASS_SIGNATURE_PARENT_NAME,\n@@ -169,2 +169,2 @@\n-                    Content link = classWriter.getLink(new LinkInfoImpl(configuration,\n-                            LinkInfoImpl.Kind.PERMITTED_SUBCLASSES,\n+                    Content link = classWriter.getLink(new HtmlLinkInfo(configuration,\n+                            HtmlLinkInfo.Kind.PERMITTED_SUBCLASSES,\n@@ -193,1 +193,1 @@\n-                Content link = classWriter.getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.RECORD_COMPONENT,\n+                Content link = classWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.RECORD_COMPONENT,\n@@ -268,1 +268,1 @@\n-            this.returnType = memberWriter.writer.getLink(new LinkInfoImpl(memberWriter.configuration, LinkInfoImpl.Kind.MEMBER, type));\n+            this.returnType = memberWriter.writer.getLink(new HtmlLinkInfo(memberWriter.configuration, HtmlLinkInfo.Kind.MEMBER, type));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -322,1 +322,1 @@\n-           excName = htmlWriter.getLink(new LinkInfoImpl(configuration, LinkInfoImpl.Kind.MEMBER,\n+           excName = htmlWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.MEMBER,\n@@ -329,1 +329,1 @@\n-            LinkInfoImpl link = new LinkInfoImpl(configuration, LinkInfoImpl.Kind.MEMBER,\n+            HtmlLinkInfo link = new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.MEMBER,\n@@ -348,1 +348,1 @@\n-                new LinkInfoImpl(configuration, LinkInfoImpl.Kind.MEMBER, throwsType))));\n+                new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.MEMBER, throwsType))));\n@@ -355,1 +355,1 @@\n-                ? htmlWriter.getDocLink(LinkInfoImpl.Kind.VALUE_TAG, field, constantVal)\n+                ? htmlWriter.getDocLink(HtmlLinkInfo.Kind.VALUE_TAG, field, constantVal)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -104,2 +104,1 @@\n-     * If {@code strong} is set, the label will be wrapped in\n-     *      {@code <span style=\"typeNameLink\">...<\/span>}.\n+     * If {@code style} is not null, it will be added as {@code class=\"style\"} to the link.\n@@ -109,1 +108,1 @@\n-     * @param style     optional style for the link\n+     * @param style     the style for the link, or null\n@@ -158,2 +157,1 @@\n-     * If {@code strong} is set, the label will be wrapped in\n-     *      {@code <span style=\"typeNameLink\">...<\/span>}.\n+     * If {@code style} is not null, it will be added as {@code class=\"style\"} to the link.\n@@ -163,1 +161,1 @@\n-     * @param style    whether to wrap the {@code label} in a SPAN element\n+     * @param style     the style for the link, or null\n@@ -174,2 +172,1 @@\n-     * If {@code strong} is set, the label will be wrapped in\n-     *      {@code <span style=\"typeNameLink\">...<\/span>}.\n+     * If {@code style} is not null, it will be added as {@code class=\"style\"} to the link.\n@@ -179,1 +176,1 @@\n-     * @param style      optional style for the link\n+     * @param style      the style for the link, or null\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Links.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"}]}