{"files":[{"patch":"@@ -47,24 +47,7 @@\n-G1CardSetConfiguration::G1CardSetConfiguration() :\n-  _inline_ptr_bits_per_card(HeapRegion::LogCardsPerRegion) {\n-\n-  \/\/ Array of Cards card set container size calculation\n-  _num_cards_in_array = G1RemSetArrayOfCardsEntries;\n-\n-  \/\/ Full card set container size calculation\n-  _max_cards_in_card_set = (uint)HeapRegion::CardsPerRegion;\n-  assert(is_power_of_2(_max_cards_in_card_set),\n-        \"max_cards_in_card_set must be a power of 2: %u\", _max_cards_in_card_set);\n-  _cards_in_howl_threshold = _max_cards_in_card_set * (double)G1RemSetCoarsenHowlToFullPercent \/ 100;\n-\n-  \/\/ Howl card set container size calculation.\n-  _num_buckets_in_howl = G1RemSetHowlNumBuckets;\n-\n-  \/\/ Howl Bitmap card set container size calculation.\n-  _num_cards_in_howl_bitmap = G1CardSetHowl::bitmap_size(_max_cards_in_card_set, _num_buckets_in_howl);\n-  _log2_num_cards_in_howl_bitmap = log2i_exact(_num_cards_in_howl_bitmap);\n-  _cards_in_howl_bitmap_threshold = _num_cards_in_howl_bitmap * (double)G1RemSetCoarsenHowlBitmapToHowlFullPercent \/ 100;\n-  _bitmap_hash_mask = ~(~(0) << _log2_num_cards_in_howl_bitmap);\n-\n-  init_card_set_alloc_options();\n-\n-  log_configuration();\n+G1CardSetConfiguration::G1CardSetConfiguration() {\n+  init(HeapRegion::LogCardsPerRegion,\n+       G1RemSetArrayOfCardsEntries,\n+       (double)G1RemSetCoarsenHowlBitmapToHowlFullPercent \/ 100,\n+       0,\n+       (double)G1RemSetCoarsenHowlToFullPercent \/ 100,\n+       (uint)HeapRegion::CardsPerRegion);\n@@ -78,5 +61,12 @@\n-                                               uint max_cards_in_cardset) :\n-  _inline_ptr_bits_per_card(inline_ptr_bits_per_card),\n-  _num_cards_in_array(num_cards_in_array),\n-  _max_cards_in_card_set(max_cards_in_cardset),\n-  _cards_in_howl_threshold(max_cards_in_cardset * cards_in_howl_threshold) {\n+                                               uint max_cards_in_cardset) {\n+  init(inline_ptr_bits_per_card,\n+       num_cards_in_array,\n+       cards_in_bitmap_threshold,\n+       max_buckets_in_howl,\n+       cards_in_howl_threshold,\n+       max_cards_in_cardset);\n+}\n+\n+G1CardSetConfiguration::~G1CardSetConfiguration() {\n+  FREE_C_HEAP_ARRAY(size_t, _card_set_alloc_options);\n+}\n@@ -84,0 +74,9 @@\n+void G1CardSetConfiguration::init(uint inline_ptr_bits_per_card,\n+                                  uint num_cards_in_array,\n+                                  double cards_in_bitmap_threshold,\n+                                  uint max_buckets_in_howl,\n+                                  double cards_in_howl_threshold,\n+                                  uint max_cards_in_cardset) {\n+  _inline_ptr_bits_per_card = inline_ptr_bits_per_card;\n+  _num_cards_in_array = num_cards_in_array;\n+  _max_cards_in_card_set = max_cards_in_cardset;\n@@ -85,1 +84,2 @@\n-        \"max_cards_in_card_set must be a power of 2: %u\", _max_cards_in_card_set);\n+         \"max_cards_in_card_set must be a power of 2: %u\", _max_cards_in_card_set);\n+  _cards_in_howl_threshold = max_cards_in_cardset * cards_in_howl_threshold;\n@@ -87,1 +87,5 @@\n-  _num_buckets_in_howl = G1CardSetHowl::num_buckets(_max_cards_in_card_set, _num_cards_in_array, max_buckets_in_howl);\n+  if (max_buckets_in_howl == 0) {\n+    _num_buckets_in_howl = G1RemSetHowlNumBuckets;\n+  } else {\n+    _num_buckets_in_howl = G1CardSetHowl::num_buckets(_max_cards_in_card_set, _num_cards_in_array, max_buckets_in_howl);\n+  }\n@@ -99,4 +103,0 @@\n-G1CardSetConfiguration::~G1CardSetConfiguration() {\n-  FREE_C_HEAP_ARRAY(size_t, _card_set_alloc_options);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.cpp","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -65,0 +65,6 @@\n+  void init(uint inline_ptr_bits_per_card,\n+            uint num_cards_in_array,\n+            double cards_in_bitmap_threshold,\n+            uint max_buckets_in_howl,\n+            double cards_in_howl_threshold,\n+            uint max_cards_in_cardset);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}