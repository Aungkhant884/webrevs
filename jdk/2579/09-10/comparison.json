{"files":[{"patch":"@@ -218,1 +218,1 @@\n-  \n+\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -448,1 +448,4 @@\n-  size_t    _dead_space;\n+  size_t    _live_estimate;\n+\n+  \/\/ Update the cached '_live_estimate' value to current usage decreased by the given dead space.\n+  inline void update_live_estimate(size_t dead_space);\n@@ -553,1 +556,1 @@\n-  size_t live() const            { return used() - _dead_space;       }\n+  size_t live() const            { return _live_estimate;             }\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -216,1 +216,0 @@\n-  space->_dead_space = dead_spacer.get_dead_space();\n@@ -225,0 +224,3 @@\n+\n+  \/\/ Update the live size estimate using the known dead space size.\n+  space->update_live_estimate(dead_spacer.get_dead_space());\n@@ -358,0 +360,3 @@\n+\n+  \/\/ Update the live size estimate - this happens after compaction so there is no dead space to subtract.\n+  space->update_live_estimate(0);\n@@ -386,0 +391,4 @@\n+inline void CompactibleSpace::update_live_estimate(size_t dead_space) {\n+  _live_estimate = used() - dead_space;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}