{"files":[{"patch":"@@ -1406,1 +1406,1 @@\n-  _live_size(0),\n+  _live(0),\n@@ -1846,2 +1846,1 @@\n-  size_t size = Atomic::load(&_live_size);\n-  return size > 0 ? size : used();\n+  return Atomic::load(&_live);\n@@ -4575,1 +4574,1 @@\n-  Atomic::store(&_live_size, bytes);\n+  Atomic::store(&_live, bytes);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-  volatile size_t _live_size;\n+  volatile size_t _live;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-  return _live_estimate > 0 ? _live_estimate : used();\n+  return _live;\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-  size_t _live_estimate;\n+  size_t _live;\n@@ -111,1 +111,1 @@\n-    _live_estimate(0) { }\n+    _live(0) { }\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  _live_estimate = young_gen()->used_in_bytes() + old_gen()->used_in_bytes();\n+  _live = young_gen()->used_in_bytes() + old_gen()->used_in_bytes();\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -220,1 +220,2 @@\n-  \/\/ are most precise right after the GC cycle.\n+  \/\/ are most precise right after the GC cycle. If no GC cycle has happened yet\n+  \/\/ the reported value will be 0.\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-  _live_size(0),\n+  _live(0),\n@@ -248,2 +248,1 @@\n-  size_t live = _live_size;\n-  return live > 0 ? live : used();\n+  return _live;\n@@ -1265,1 +1264,1 @@\n-  _live_size = _young_gen->live() + _old_gen->live();\n+  _live = _young_gen->live() + _old_gen->live();\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  size_t _live_size;\n+  size_t _live;\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -628,2 +628,1 @@\n-  size_t live = Atomic::load(&_live);\n-  return live > 0 ? live : used();\n+  return Atomic::load(&_live);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -112,2 +112,1 @@\n-  size_t live = ZStatHeap::live_at_mark_end();\n-  return live > 0 ? live : used();\n+  return ZStatHeap::live_at_mark_end();\n","filename":"src\/hotspot\/share\/gc\/z\/zCollectedHeap.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -204,1 +204,1 @@\n-    <Field type=\"ulong\" contentType=\"bytes\" name=\"live\" label=\"Heap Live\" description=\"Estimate of live bytes allocated by objects in the heap\" \/>\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"live\" label=\"Heap Live\" description=\"Estimate of live bytes allocated by objects in the heap or '0' if that estimate is not avaialable\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}