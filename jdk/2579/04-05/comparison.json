{"files":[{"patch":"@@ -975,0 +975,1 @@\n+  size_t volatile _live;\n@@ -985,0 +986,1 @@\n+    size_t _live; \/\/ Cumulative live set size over iterated regions\n@@ -1057,1 +1059,1 @@\n-      _g1h(g1h), _cm(cm), _cl(cl), _num_regions_selected_for_rebuild(0) { }\n+      _g1h(g1h), _cm(cm), _cl(cl), _num_regions_selected_for_rebuild(0), _live(0) { }\n@@ -1063,0 +1065,1 @@\n+      _live += r->live_bytes();\n@@ -1067,0 +1070,1 @@\n+    size_t live_estimate() const { return _live; }\n@@ -1072,1 +1076,1 @@\n-    _g1h(g1h), _cm(cm), _hrclaimer(num_workers), _total_selected_for_rebuild(0), _cl(\"Post-Marking\") { }\n+    _g1h(g1h), _cm(cm), _hrclaimer(num_workers), _total_selected_for_rebuild(0), _live(0), _cl(\"Post-Marking\") { }\n@@ -1078,0 +1082,1 @@\n+    Atomic::add(&_live, update_cl.live_estimate());\n@@ -1081,0 +1086,1 @@\n+  size_t live_estimate() const { return _live; }\n@@ -1106,10 +1112,0 @@\n-  \/\/ collect the liveness info from all referenced regions\n-  \/\/ the info should be consistent form the previous marking phase\n-  size_t live_size = 0;\n-  uint max_reserved_regions = _g1h->max_reserved_regions();\n-  for (uint i = 0; i < max_reserved_regions; i++) {\n-    live_size += _region_mark_stats[i]._live_words;\n-  }\n-\n-  _g1h->set_live(live_size * HeapWordSize);\n-\n@@ -1160,0 +1156,1 @@\n+      _g1h->set_live(cl.live_estimate());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"}]}