{"files":[{"patch":"@@ -179,1 +179,1 @@\n- * Convenience method.\n+ * Convenience function.\n@@ -189,2 +189,2 @@\n- * Convenience method.\n- * Call JNU_ThrowByNameWithMessageAndLastError for java.io.IOException.\n+ * Throw java.io.IOException using a given message and the string\n+ * returned by getLastErrorString to construct the detail string.\n","filename":"src\/java.base\/share\/native\/libjava\/jni_util.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-        JNU_ThrowIOExceptionWithMessageAndLastError(env, \"madvise with parameter MADV_WILLNEED failed\");\n+        JNU_ThrowIOExceptionWithMessageAndLastError(env, \"madvise with advise MADV_WILLNEED failed\");\n@@ -124,1 +124,1 @@\n-        JNU_ThrowIOExceptionWithMessageAndLastError(env, \"madvise with parameter MADV_DONTNEED failed\");\n+        JNU_ThrowIOExceptionWithMessageAndLastError(env, \"madvise with advise MADV_DONTNEED failed\");\n","filename":"src\/java.base\/unix\/native\/libnio\/MappedMemoryUtils.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}