{"files":[{"patch":"@@ -32,0 +32,2 @@\n+import jdk.internal.misc.Unsafe;\n+\n@@ -372,0 +374,1 @@\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n@@ -376,2 +379,11 @@\n-            if ((map = type.classValueMap) == null)\n-                type.classValueMap = map = new ClassValueMap();\n+            if ((map = type.classValueMap) == null) {\n+                map = new ClassValueMap();\n+                \/\/ Place a Store fence after construction and before publishing to emulate\n+                \/\/ ClassValueMap containing final fields. This ensures it can be\n+                \/\/ published safely in the non-volatile field Class.classValueMap,\n+                \/\/ since stores to the fields of ClassValueMap will not be reordered\n+                \/\/ to occur after the store to the field type.classValueMap\n+                UNSAFE.storeFence();\n+\n+                type.classValueMap = map;\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassValue.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"}]}