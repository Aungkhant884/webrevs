{"files":[{"patch":"@@ -555,1 +555,0 @@\n-java\/lang\/StringCoding\/CheckEncodings.sh                        7008363 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,70 +0,0 @@\n-#\n-# Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @summary Verify that unsupported encodings are handled gracefully.\n-# @bug 4629543 4785473\n-#\n-# @run shell\/timeout=300 CheckEncodings.sh\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Linux | Darwin | AIX ) ;;\n-  Windows* | CYGWIN* )\n-    echo \"Passed\"; exit 0 ;;\n-  * ) echo \"Unrecognized system!\" ;  exit 1 ;;\n-esac\n-\n-expectPass() {\n-  if [ $1 -eq 0 ]\n-  then echo \"--- passed as expected\"\n-  else\n-    echo \"--- failed\"\n-    exit $1\n-  fi\n-}\n-\n-runTest() {\n-  echo \"Testing:\" ${1}\n-  set LC_ALL=\"${1}\"; export LC_ALL\n-  locale\n-  ${TESTJAVA}\/bin\/java ${TESTVMOPTS} -version 2>&1\n-  expectPass $?\n-}\n-\n-\n-locale -a > machine_locales.txt\n-\n-# ${TESTSRC}\/locales.txt contains the list of \"fully supported\" locales\n-# as defined by the i18n doc for 1.4\n-cat ${TESTSRC}\/locales.txt machine_locales.txt | sort | uniq > locale_union.txt\n-\n-for i in `xargs < locale_union.txt` ; do\n-  runTest ${i}\n-done\n-\n-# random strings\n-for i in FOO 1234 ZZ; do\n-  runTest ${i}\n-done\n","filename":"test\/jdk\/java\/lang\/StringCoding\/CheckEncodings.sh","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -1,25 +0,0 @@\n-ar_SA\n-zh_CN \n-zh_TW \n-nl_NL \n-nl_NL_EURO \n-en_AU \n-en_CA \n-en_GB \n-en_US \n-fr_CA\n-fr_FR \n-fr_FR_EURO \n-de_DE \n-de_DE_EURO \n-iw_IL \n-hi_IN \n-it_IT \n-it_IT_EURO \n-ja_JP\n-ko_KR \n-pt_BR \n-es_ES \n-es_ES_EURO \n-sv_SE \n-th_TH \n","filename":"test\/jdk\/java\/lang\/StringCoding\/locales.txt","additions":0,"deletions":25,"binary":false,"changes":25,"status":"deleted"}]}