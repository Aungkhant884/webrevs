{"files":[{"patch":"@@ -53,3 +53,0 @@\n-  Arena* arena = new (mtCompiler) Arena(mtCompiler);\n-  \/\/ Ignore leaked arena, it is used by ValueType and Interval during initialization.\n-  LSAN_IGNORE_OBJECT(arena);\n@@ -59,1 +56,1 @@\n-  ValueType::initialize(arena);\n+  ValueType::initialize();\n@@ -63,1 +60,1 @@\n-  Interval::initialize(arena);\n+  Interval::initialize();\n","filename":"src\/hotspot\/share\/c1\/c1_Compiler.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -4136,2 +4136,4 @@\n-void Range::initialize(Arena* arena) {\n-  _end = new (arena) Range(max_jint, max_jint, NULL);\n+void Range::initialize() {\n+  assert(_end == nullptr, \"Range initialized more than once\");\n+  alignas(Range) static uint8_t end_storage[sizeof(Range)];\n+  _end = ::new(static_cast<void*>(end_storage)) Range(max_jint, max_jint, NULL);\n@@ -4183,3 +4185,5 @@\n-void Interval::initialize(Arena* arena) {\n-  Range::initialize(arena);\n-  _end = new (arena) Interval(-1);\n+void Interval::initialize() {\n+  Range::initialize();\n+  assert(_end == nullptr, \"Interval initialized more than once\");\n+  alignas(Interval) static uint8_t end_storage[sizeof(Interval)];\n+  _end = ::new(static_cast<void*>(end_storage)) Interval(-1);\n","filename":"src\/hotspot\/share\/c1\/c1_LinearScan.cpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -477,1 +477,1 @@\n-  static void      initialize(Arena* arena);\n+  static void      initialize();\n@@ -544,1 +544,1 @@\n-  static void      initialize(Arena* arena);\n+  static void      initialize();\n","filename":"src\/hotspot\/share\/c1\/c1_LinearScan.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-void ValueType::initialize(Arena* arena) {\n+void ValueType::initialize() {\n@@ -57,12 +57,6 @@\n-  \/\/ types\n-  voidType     = new (arena) VoidType();\n-  intType      = new (arena) IntType();\n-  longType     = new (arena) LongType();\n-  floatType    = new (arena) FloatType();\n-  doubleType   = new (arena) DoubleType();\n-  objectType   = new (arena) ObjectType();\n-  arrayType    = new (arena) ArrayType();\n-  instanceType = new (arena) InstanceType();\n-  classType    = new (arena) ClassType();\n-  addressType  = new (arena) AddressType();\n-  illegalType  = new (arena) IllegalType();\n+#define VALUE_TYPE_STORAGE_NAME(name) name##_storage\n+#define VALUE_TYPE_STORAGE(name, type) alignas(type) static uint8_t VALUE_TYPE_STORAGE_NAME(name)[sizeof(type)]\n+#define VALUE_TYPE(name, type, ...)                                \\\n+  assert(name == nullptr, \"ValueType initialized more than once\"); \\\n+  VALUE_TYPE_STORAGE(name, type);                                  \\\n+  name = ::new(static_cast<void*>(VALUE_TYPE_STORAGE_NAME(name))) type(__VA_ARGS__)\n@@ -70,4 +64,20 @@\n-  intZero     = new (arena) IntConstant(0);\n-  intOne      = new (arena) IntConstant(1);\n-  objectNull  = new (arena) ObjectConstant(ciNullObject::make());\n-};\n+  VALUE_TYPE(voidType    , VoidType);\n+  VALUE_TYPE(intType     , IntType);\n+  VALUE_TYPE(longType    , LongType);\n+  VALUE_TYPE(floatType   , FloatType);\n+  VALUE_TYPE(doubleType  , DoubleType);\n+  VALUE_TYPE(objectType  , ObjectType);\n+  VALUE_TYPE(arrayType   , ArrayType);\n+  VALUE_TYPE(instanceType, InstanceType);\n+  VALUE_TYPE(classType   , ClassType);\n+  VALUE_TYPE(addressType , AddressType);\n+  VALUE_TYPE(illegalType , IllegalType);\n+\n+  VALUE_TYPE(intZero     , IntConstant   , 0);\n+  VALUE_TYPE(intOne      , IntConstant   , 1);\n+  VALUE_TYPE(objectNull  , ObjectConstant, ciNullObject::Make());\n+\n+#undef VALUE_TYPE\n+#undef VALUE_TYPE_STORAGE\n+#undef VALUE_TYPE_STORAGE_NAME\n+}\n","filename":"src\/hotspot\/share\/c1\/c1_ValueType.cpp","additions":27,"deletions":17,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-  static void initialize(Arena* arena);\n+  static void initialize();\n","filename":"src\/hotspot\/share\/c1\/c1_ValueType.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}