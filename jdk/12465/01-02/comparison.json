{"files":[{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8301202\n+ * @build Tests\n+ * @build LogTests\n+ * @run main LogTests\n+ * @summary Tests for {Math, StrictMath}.log\n+ *\/\n+\n+public class LogTests {\n+    private LogTests(){}\n+\n+    public static void main(String... args) {\n+        int failures = 0;\n+\n+        failures += testLogSpecialCases();\n+\n+        if (failures > 0) {\n+            System.err.println(\"Testing log incurred \"\n+                               + failures + \" failures.\");\n+            throw new RuntimeException();\n+        }\n+    }\n+\n+    private static final double infinityD = Double.POSITIVE_INFINITY;\n+    private static final double NaNd = Double.NaN;\n+\n+    \/**\n+     * From the spec for Math.log:\n+     * \"Special cases:\n+     *\n+     * If the argument is NaN or less than zero, then the result is NaN.\n+     * If the argument is positive infinity, then the result is positive infinity.\n+     * If the argument is positive zero or negative zero, then the result is negative infinity.\n+     * If the argument is 1.0, then the result is positive zero.\n+     *\/\n+    private static int testLogSpecialCases() {\n+        int failures = 0;\n+\n+        double [][] testCases = {\n+            {Double.NaN,                NaNd},\n+            {Double.NEGATIVE_INFINITY,  NaNd},\n+            {-Double.MAX_VALUE,         NaNd},\n+            {-1.0,                      NaNd},\n+            {-Double.MIN_NORMAL,        NaNd},\n+            {-Double.MIN_VALUE,         NaNd},\n+\n+            {Double.POSITIVE_INFINITY,  infinityD},\n+\n+            {-0.0,                      -infinityD},\n+            {+0.0,                      -infinityD},\n+\n+            {+1.0,                      0.0},\n+        };\n+\n+        for(int i = 0; i < testCases.length; i++) {\n+            failures += testLogCase(testCases[i][0],\n+                                    testCases[i][1]);\n+        }\n+\n+        return failures;\n+    }\n+\n+    private static int testLogCase(double input, double expected) {\n+        int failures=0;\n+\n+        failures+=Tests.test(\"Math.log\",       input, Math::log,       expected);\n+        failures+=Tests.test(\"StrictMath.log\", input, StrictMath::log, expected);\n+\n+        return failures;\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Math\/LogTests.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"@@ -60,1 +60,2 @@\n-    \/\/ TODO: Find inputs where Math.log and StrictMath.log differ.\n+    \/\/ Inputs where Math.log and StrictMath.log differ for at least\n+    \/\/ one Math.log implementation.\n@@ -65,0 +66,5 @@\n+            {0x1.000000089cd6fp-43, -0x1.dce2a0697a102p4},\n+            {0x1.0000000830698p182,  0x1.f89c7428dd67ap6},\n+            {0x1.0000000744b3ap632,  0x1.b611ab2bd53cep8},\n+            {0x1.000000037d81fp766,  0x1.0979b1dbc4a42p9},\n+            {0x1.000000024028p991,   0x1.577455642bb92p9},\n","filename":"test\/jdk\/java\/lang\/StrictMath\/LogTests.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}