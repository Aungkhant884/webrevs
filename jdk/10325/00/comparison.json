{"files":[{"patch":"@@ -285,1 +285,1 @@\n-  void emit_int8(   int8_t x1)                                  { code_section()->emit_int8(x1); }\n+  void emit_int8(   uint8_t x1)                                     { code_section()->emit_int8(x1); }\n@@ -287,2 +287,2 @@\n-  void emit_int16(  int16_t x)                                  { code_section()->emit_int16(x); }\n-  void emit_int16(  int8_t x1, int8_t x2)                       { code_section()->emit_int16(x1, x2); }\n+  void emit_int16(  uint16_t x)                                     { code_section()->emit_int16(x); }\n+  void emit_int16(  uint8_t x1, uint8_t x2)                         { code_section()->emit_int16(x1, x2); }\n@@ -290,1 +290,1 @@\n-  void emit_int24(  int8_t x1, int8_t x2, int8_t x3)            { code_section()->emit_int24(x1, x2, x3); }\n+  void emit_int24(  uint8_t x1, uint8_t x2, uint8_t x3)             { code_section()->emit_int24(x1, x2, x3); }\n@@ -292,2 +292,2 @@\n-  void emit_int32(  int32_t x)                                  { code_section()->emit_int32(x); }\n-  void emit_int32(  int8_t x1, int8_t x2, int8_t x3, int8_t x4) { code_section()->emit_int32(x1, x2, x3, x4); }\n+  void emit_int32(  uint32_t x)                                     { code_section()->emit_int32(x); }\n+  void emit_int32(  uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4) { code_section()->emit_int32(x1, x2, x3, x4); }\n@@ -295,1 +295,1 @@\n-  void emit_int64(  int64_t x)                                  { code_section()->emit_int64(x); }\n+  void emit_int64(  uint64_t x)                                     { code_section()->emit_int64(x); }\n@@ -297,3 +297,3 @@\n-  void emit_float(  jfloat  x)                                  { code_section()->emit_float(x); }\n-  void emit_double( jdouble x)                                  { code_section()->emit_double(x); }\n-  void emit_address(address x)                                  { code_section()->emit_address(x); }\n+  void emit_float(  jfloat  x)                                      { code_section()->emit_float(x); }\n+  void emit_double( jdouble x)                                      { code_section()->emit_double(x); }\n+  void emit_address(address x)                                      { code_section()->emit_address(x); }\n","filename":"src\/hotspot\/share\/asm\/assembler.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-  void emit_int8(int8_t x1) {\n+  void emit_int8(uint8_t x1) {\n@@ -209,1 +209,1 @@\n-    *((int8_t*)  curr++) = x1;\n+    *((uint8_t*)  curr++) = x1;\n@@ -213,2 +213,2 @@\n-  void emit_int16(int16_t x) { *((int16_t*) end()) = x; set_end(end() + sizeof(int16_t)); }\n-  void emit_int16(int8_t x1, int8_t x2) {\n+  void emit_int16(uint16_t x) { *((uint16_t*) end()) = x; set_end(end() + sizeof(uint16_t)); }\n+  void emit_int16(uint8_t x1, uint8_t x2) {\n@@ -216,2 +216,2 @@\n-    *((int8_t*)  curr++) = x1;\n-    *((int8_t*)  curr++) = x2;\n+    *((uint8_t*)  curr++) = x1;\n+    *((uint8_t*)  curr++) = x2;\n@@ -221,1 +221,1 @@\n-  void emit_int24(int8_t x1, int8_t x2, int8_t x3)  {\n+  void emit_int24(uint8_t x1, uint8_t x2, uint8_t x3)  {\n@@ -223,3 +223,3 @@\n-    *((int8_t*)  curr++) = x1;\n-    *((int8_t*)  curr++) = x2;\n-    *((int8_t*)  curr++) = x3;\n+    *((uint8_t*)  curr++) = x1;\n+    *((uint8_t*)  curr++) = x2;\n+    *((uint8_t*)  curr++) = x3;\n@@ -229,1 +229,1 @@\n-  void emit_int32(int32_t x) {\n+  void emit_int32(uint32_t x) {\n@@ -231,2 +231,2 @@\n-    *((int32_t*) curr) = x;\n-    set_end(curr + sizeof(int32_t));\n+    *((uint32_t*) curr) = x;\n+    set_end(curr + sizeof(uint32_t));\n@@ -234,1 +234,1 @@\n-  void emit_int32(int8_t x1, int8_t x2, int8_t x3, int8_t x4)  {\n+  void emit_int32(uint8_t x1, uint8_t x2, uint8_t x3, uint8_t x4)  {\n@@ -236,4 +236,4 @@\n-    *((int8_t*)  curr++) = x1;\n-    *((int8_t*)  curr++) = x2;\n-    *((int8_t*)  curr++) = x3;\n-    *((int8_t*)  curr++) = x4;\n+    *((uint8_t*)  curr++) = x1;\n+    *((uint8_t*)  curr++) = x2;\n+    *((uint8_t*)  curr++) = x3;\n+    *((uint8_t*)  curr++) = x4;\n@@ -243,1 +243,1 @@\n-  void emit_int64( int64_t x)  { *((int64_t*) end()) = x; set_end(end() + sizeof(int64_t)); }\n+  void emit_int64( uint64_t x)  { *((uint64_t*) end()) = x; set_end(end() + sizeof(uint64_t)); }\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"}]}