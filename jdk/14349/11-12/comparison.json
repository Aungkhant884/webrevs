{"files":[{"patch":"@@ -140,26 +140,1 @@\n-    \/**\n-     * Ensure that the data structures nodes and layerNodes are consistent\n-     *\/\n-    private void sanityCheckNodesAndLayerNodes() {\n-        int nodeCount = 0;\n-        for (int i = 0; i < layers.keySet().size(); i++) {\n-            assert layers.containsKey(i);\n-            layers.get(i).sort(HierarchicalLayoutManager.nodePositionComparator);\n-            int nodePos = 0;\n-            for (LayoutNode n : layers.get(i)) {\n-                assert n.layer == i;\n-                assert nodes.contains(n);\n-                assert n.pos == nodePos;\n-                nodePos += 1;\n-                nodeCount += 1;\n-            }\n-        }\n-        for (LayoutNode n : nodes) {\n-            assert n.vertex == null || vertexToLayoutNode.get(n.vertex).equals(n);\n-            assert n.layer < layers.keySet().size();\n-            assert layers.get(n.layer).contains(n);\n-        }\n-        assert nodeCount == nodes.size();\n-    }\n-\n-    private void sanityCheckEdges() {\n+    private void ensureNeighborEdgeConsistency() {\n@@ -167,20 +142,2 @@\n-            for (LayoutEdge e : List.copyOf(n.succs)) {\n-                assert e.from.equals(n);\n-                if (nodes.contains(e.to)) {\n-                    assert e.to.preds.contains(e);\n-                    assert layers.get(n.layer + 1).contains(e.to);\n-                    assert e.to.layer == n.layer + 1;\n-                } else {\n-                    n.succs.remove(e);\n-                }\n-            }\n-            for (LayoutEdge e : List.copyOf(n.preds)) {\n-                assert e.to.equals(n);\n-                if (nodes.contains(e.from)) {\n-                    assert e.from.succs.contains(e);\n-                    assert layers.get(n.layer - 1).contains(e.from);\n-                    assert e.from.layer == n.layer - 1;\n-                } else {\n-                    n.preds.remove(e);\n-                }\n-            }\n+            n.succs.removeIf(e -> !nodes.contains(e.to));\n+            n.preds.removeIf(e -> !nodes.contains(e.from));\n@@ -904,1 +861,1 @@\n-            sanityCheckEdges();\n+            ensureNeighborEdgeConsistency();\n@@ -1031,1 +988,1 @@\n-            sanityCheckEdges();\n+            ensureNeighborEdgeConsistency();\n@@ -1206,1 +1163,1 @@\n-            sanityCheckEdges();\n+            ensureNeighborEdgeConsistency();\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalStableLayoutManager.java","additions":6,"deletions":49,"binary":false,"changes":55,"status":"modified"}]}