{"files":[{"patch":"@@ -570,1 +570,1 @@\n-static TriBoolArray<vmIntrinsics::number_of_intrinsics(), int> vm_intrinsic_control_words;\n+static TriBoolArray<(size_t)vmIntrinsics::number_of_intrinsics(), int> vm_intrinsic_control_words;\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1085,4 +1085,2 @@\n-  static constexpr size_t number_of_intrinsics() {\n-    \/\/static_assert(NO_SID == 0, \"must be a valid array index\");\n-    \/\/static_assert(FIRST_SID == 1, \"must not be the same as NO_SID\");\n-    return static_cast<size_t>(ID_LIMIT);\n+  static constexpr int number_of_intrinsics() {\n+    return static_cast<int>(ID_LIMIT);\n@@ -1093,1 +1091,1 @@\n-    return (raw_id >= (int)_none && raw_id < (int)ID_LIMIT);\n+    return (raw_id >= static_cast<int>(_none) && raw_id < static_cast<int>(ID_LIMIT));\n@@ -1102,1 +1100,1 @@\n-    return (ID)raw_id;\n+    return static_cast<ID>(raw_id);\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-  TriBoolArray<vmIntrinsics::number_of_intrinsics(), int> _intrinsic_control_words;\n+  TriBoolArray<(size_t)vmIntrinsics::number_of_intrinsics(), int> _intrinsic_control_words;\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,3 +117,3 @@\n-    MethodKind kind = (MethodKind)( method_handle_invoke_FIRST +\n-                                    vmIntrinsics::as_int(id) -\n-                                    static_cast<int>(vmIntrinsics::FIRST_MH_SIG_POLY) );\n+    MethodKind kind = (MethodKind)(method_handle_invoke_FIRST +\n+                                   vmIntrinsics::as_int(id) -\n+                                   static_cast<int>(vmIntrinsics::FIRST_MH_SIG_POLY));\n","filename":"src\/hotspot\/share\/interpreter\/abstractInterpreter.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-      return vmIntrinsics::ID_from(static_cast<int>(vmIntrinsics::FIRST_MH_SIG_POLY) + (kind - method_handle_invoke_FIRST) );\n+      return vmIntrinsics::ID_from(static_cast<int>(vmIntrinsics::FIRST_MH_SIG_POLY) + (kind - method_handle_invoke_FIRST));\n","filename":"src\/hotspot\/share\/interpreter\/abstractInterpreter.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-  int len = static_cast<int>(vmIntrinsics::ID_LIMIT) - 1;\n+  int len = vmIntrinsics::number_of_intrinsics() - 1; \/\/ Exclude vmIntrinsics::_none, which is 0\n@@ -183,0 +183,1 @@\n+  \/\/ VM_INTRINSICS_DO does *not* iterate over vmIntrinsics::_none\n@@ -186,1 +187,0 @@\n-    assert(index == len, \"must be\");\n@@ -188,0 +188,1 @@\n+  assert(index == len, \"must be\");\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}