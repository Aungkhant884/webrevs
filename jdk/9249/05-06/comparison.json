{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import org.testng.annotations.BeforeMethod;\n@@ -49,1 +50,1 @@\n-    private Path NON_EXISTENT_FILE;\n+    private Path nonExistentFile;\n@@ -51,1 +52,1 @@\n-    private Path TEMP_DIRECTORY;\n+    private Path tempDirectory;\n@@ -53,1 +54,1 @@\n-    private Path FILE_THAT_EXISTS;\n+    private Path fileThatExists;\n@@ -55,1 +56,1 @@\n-    private MyProvider PROVIDER;\n+    private MyProvider myProvider;\n@@ -66,2 +67,2 @@\n-        PROVIDER = new MyProvider();\n-        FileSystem fs = PROVIDER.getFileSystem(URI.create(\"\/\"));\n+        myProvider = new MyProvider();\n+        FileSystem fs = myProvider.getFileSystem(URI.create(\"\/\"));\n@@ -70,3 +71,3 @@\n-        TEMP_DIRECTORY = Files.createTempDirectory(cwd, \"tmp\");\n-        FILE_THAT_EXISTS = Files.createFile(TEMP_DIRECTORY.resolve(\"file\"));\n-        NON_EXISTENT_FILE = TEMP_DIRECTORY.resolve(\"doesNotExist\");\n+        tempDirectory = Files.createTempDirectory(cwd, \"tmp\");\n+        fileThatExists = Files.createFile(tempDirectory.resolve(\"file\"));\n+        nonExistentFile = tempDirectory.resolve(\"doesNotExist\");\n@@ -87,3 +88,3 @@\n-                {TEMP_DIRECTORY, true},\n-                {FILE_THAT_EXISTS, true},\n-                {NON_EXISTENT_FILE, false}\n+                {tempDirectory, true},\n+                {fileThatExists, true},\n+                {nonExistentFile, false}\n@@ -105,3 +106,3 @@\n-                {TEMP_DIRECTORY, true},\n-                {FILE_THAT_EXISTS, false},\n-                {NON_EXISTENT_FILE, false}\n+                {tempDirectory, true},\n+                {fileThatExists, false},\n+                {nonExistentFile, false}\n@@ -122,3 +123,3 @@\n-                {TEMP_DIRECTORY, false},\n-                {FILE_THAT_EXISTS, true},\n-                {NON_EXISTENT_FILE, false}\n+                {tempDirectory, false},\n+                {fileThatExists, true},\n+                {nonExistentFile, false}\n@@ -128,0 +129,8 @@\n+    \/**\n+     * Clear our Map prior to each test run\n+     *\/\n+    @BeforeMethod\n+    public void resetParams() {\n+        myProvider.resetCalls();\n+    }\n+\n@@ -139,3 +148,2 @@\n-        assertEquals(1, PROVIDER.findCall(\"exists\").size());\n-        assertEquals(0, PROVIDER.findCall(\"readAttributesIfExists\").size());\n-        PROVIDER.resetCalls();\n+        assertEquals(1, myProvider.findCall(\"exists\").size());\n+        assertEquals(0, myProvider.findCall(\"readAttributesIfExists\").size());\n@@ -155,3 +163,2 @@\n-        assertEquals(0, PROVIDER.findCall(\"exists\").size());\n-        assertEquals(1, PROVIDER.findCall(\"readAttributesIfExists\").size());\n-        PROVIDER.resetCalls();\n+        assertEquals(0, myProvider.findCall(\"exists\").size());\n+        assertEquals(1, myProvider.findCall(\"readAttributesIfExists\").size());\n@@ -171,3 +178,2 @@\n-        assertEquals(0, PROVIDER.findCall(\"exists\").size());\n-        assertEquals(1, PROVIDER.findCall(\"readAttributesIfExists\").size());\n-        PROVIDER.resetCalls();\n+        assertEquals(0, myProvider.findCall(\"exists\").size());\n+        assertEquals(1, myProvider.findCall(\"readAttributesIfExists\").size());\n","filename":"test\/jdk\/java\/nio\/file\/spi\/TestDelegation.java","additions":33,"deletions":27,"binary":false,"changes":60,"status":"modified"}]}