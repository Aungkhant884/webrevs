{"files":[{"patch":"@@ -8055,2 +8055,2 @@\n-void MacroAssembler::evmovdqu(BasicType typ, KRegister kmask, XMMRegister dst, Address src, int vector_len) {\n-  switch(typ) {\n+void MacroAssembler::evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, int vector_len) {\n+  switch(type) {\n@@ -8074,1 +8074,1 @@\n-      assert(false,\"Should not reach here.\");\n+      fatal(\"Unexpected type argument %s\", type2name(type));\n@@ -8079,2 +8079,2 @@\n-void MacroAssembler::evmovdqu(BasicType typ, KRegister kmask, Address dst, XMMRegister src, int vector_len) {\n-  switch(typ) {\n+void MacroAssembler::evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, int vector_len) {\n+  switch(type) {\n@@ -8098,1 +8098,1 @@\n-      assert(false,\"Should not reach here.\");\n+      fatal(\"Unexpected type argument %s\", type2name(type));\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1092,2 +1092,2 @@\n-  void evmovdqu(BasicType typ, KRegister kmask, Address dst, XMMRegister src, int vector_len);\n-  void evmovdqu(BasicType typ, KRegister kmask, XMMRegister dst, Address src, int vector_len);\n+  void evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, int vector_len);\n+  void evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1409,3 +1409,3 @@\n-      int pi_size = 0;\n-      if (MaxVectorSize > 32 && AVX3Threshold == 0) {\n-        pi_size = 64;\n+      int inline_size = 0;\n+      if (MaxVectorSize >= 64 && AVX3Threshold == 0) {\n+        inline_size = 64;\n@@ -1413,1 +1413,3 @@\n-        pi_size = 32;\n+        inline_size = 32;\n+      } else if (MaxVectorSize >= 16) {\n+        inline_size = 16;\n@@ -1416,1 +1418,1 @@\n-        warning(\"Setting ArrayCopyPartialInlineSize as %d\", pi_size);\n+        warning(\"Setting ArrayCopyPartialInlineSize as %d\", inline_size);\n@@ -1418,1 +1420,1 @@\n-      ArrayCopyPartialInlineSize = pi_size;\n+      ArrayCopyPartialInlineSize = inline_size;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -741,1 +741,1 @@\n-int ArrayCopyNode::get_partial_inline_vector_lane_count(BasicType type, int con_len) {\n+int ArrayCopyNode::get_partial_inline_vector_lane_count(BasicType type, int const_len) {\n@@ -743,2 +743,2 @@\n-  if (con_len > 0) {\n-    int size_in_bytes = con_len * type2aelembytes(type);\n+  if (const_len > 0) {\n+    int size_in_bytes = const_len * type2aelembytes(type);\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-  static int get_partial_inline_vector_lane_count(BasicType type, int con_len);\n+  static int get_partial_inline_vector_lane_count(BasicType type, int const_len);\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-  int con_len = -1;\n+  int const_len = -1;\n@@ -213,1 +213,1 @@\n-    con_len = lty->get_con() << shift;\n+    const_len = lty->get_con() << shift;\n@@ -215,1 +215,1 @@\n-    con_len = lty->get_con() << shift;\n+    const_len = lty->get_con() << shift;\n@@ -220,2 +220,2 @@\n-  int lane_count = ArrayCopyNode::get_partial_inline_vector_lane_count(type, con_len);\n-  if ( con_len > ArrayCopyPartialInlineSize ||\n+  int lane_count = ArrayCopyNode::get_partial_inline_vector_lane_count(type, const_len);\n+  if ( const_len > ArrayCopyPartialInlineSize ||\n@@ -230,1 +230,1 @@\n-  if (con_len < 0) {\n+  if (const_len < 0) {\n@@ -267,1 +267,1 @@\n-  if (con_len < 0) {\n+  if (const_len < 0) {\n@@ -1214,1 +1214,1 @@\n-    Matcher::vector_width_in_bytes(basic_elem_type) >= 32) {\n+    Matcher::vector_width_in_bytes(basic_elem_type) >= 16) {\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}