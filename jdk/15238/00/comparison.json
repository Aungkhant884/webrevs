{"files":[{"patch":"@@ -69,2 +69,3 @@\n-                if (!Platform.isRoot() && !canAddPrivileges()) {\n-                    throw new SkippedException(\"SA Attach not expected to work. Insufficient privileges (not root and can't use sudo).\");\n+                if (needsPrivileges() && !canAddPrivileges()) {\n+                    throw new SkippedException(\"SA Attach not expected to work. Insufficient privileges \" +\n+                                               \"(developer mode disabled, not root, and can't use sudo).\");\n@@ -80,0 +81,1 @@\n+     * If we are running as root or developer mode is enabled, then sudo is not needed.\n@@ -82,1 +84,7 @@\n-        return Platform.isOSX() && !Platform.isRoot();\n+        if (!Platform.isOSX()) {\n+            return false;\n+        }\n+        if (Platform.isRoot()) {\n+            return false;\n+        }\n+        return !developerModeEnabled();\n@@ -85,0 +93,36 @@\n+    \/*\n+     * Run \"DevToolsSecurity --status\" to see if developer mode is enabled.\n+     *\/\n+    private static boolean developerModeEnabled() {\n+        List<String> cmd = new ArrayList<String>();\n+        cmd.add(\"DevToolsSecurity\");\n+        cmd.add(\"--status\");\n+        ProcessBuilder pb = new ProcessBuilder(cmd);\n+        Process p;\n+        try {\n+            p = pb.start();\n+            try {\n+                p.waitFor();\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(\"DevToolsSecurity process interrupted\", e);\n+            }\n+\n+            String out = new String(p.getInputStream().readAllBytes());\n+            String err = new String(p.getErrorStream().readAllBytes());\n+            System.out.print(\"DevToolsSecurity stdout: \" + out);\n+            if (out.equals(\"\")) System.out.println();\n+            System.out.print(\"DevToolsSecurity stderr: \" + err);\n+            if (err.equals(\"\")) System.out.println();\n+\n+            if (out.contains(\"Developer mode is currently enabled\")) {\n+                return true;\n+            }\n+            if (out.contains(\"Developer mode is currently disabled\")) {\n+                return false;\n+            }\n+            throw new RuntimeException(\"DevToolsSecurity failed to generate expected output: \" + out);\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+  }\n+\n@@ -221,0 +265,7 @@\n+     *\n+     * Note that we also can't run these tests even if OSX developer mode is enabled (see\n+     * developerModeEnabled()). For the most part the test runs fine, but some reason you end up\n+     * needing to provide admin credentials as the test shuts down. If you don't, it just hangs forever.\n+     * And even after providing the credetials, the test still fails with a timeout.\n+     *\n+     * JDK-8314133 has been filed for these issues.\n@@ -223,1 +274,1 @@\n-        if (needsPrivileges()) {\n+        if (Platform.isOSX() && !Platform.isRoot()) {\n","filename":"test\/lib\/jdk\/test\/lib\/SA\/SATestUtils.java","additions":55,"deletions":4,"binary":false,"changes":59,"status":"modified"}]}