{"files":[{"patch":"@@ -1271,1 +1271,1 @@\n-       int index2, TRAPS) {\n+       int index2) {\n@@ -1290,2 +1290,2 @@\n-    Klass* k1 = klass_at(index1, CHECK_false);\n-    Klass* k2 = cp2->klass_at(index2, CHECK_false);\n+    Klass* k1 = resolved_klass_at(index1);\n+    Klass* k2 = cp2->resolved_klass_at(index2);\n@@ -1301,2 +1301,1 @@\n-    bool match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n-    if (match) {\n+    if (compare_entry_to(recur1, cp2, recur2)) {\n@@ -1322,1 +1321,1 @@\n-    bool match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n+    bool match = compare_entry_to(recur1, cp2, recur2);\n@@ -1326,2 +1325,1 @@\n-      match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n-      if (match) {\n+      if (compare_entry_to(recur1, cp2, recur2)) {\n@@ -1364,2 +1362,1 @@\n-    bool match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n-    if (match) {\n+    if (compare_entry_to(recur1, cp2, recur2)) {\n@@ -1368,2 +1365,1 @@\n-      match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n-      if (match) {\n+      if (compare_entry_to(recur1, cp2, recur2)) {\n@@ -1379,2 +1375,1 @@\n-    bool match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n-    if (match) {\n+    if (compare_entry_to(recur1, cp2, recur2)) {\n@@ -1398,2 +1393,1 @@\n-    bool match = compare_entry_to(k1, cp2, k2, CHECK_false);\n-    if (match) {\n+    if (compare_entry_to(k1, cp2, k2)) {\n@@ -1411,2 +1405,1 @@\n-      bool match = compare_entry_to(i1, cp2, i2, CHECK_false);\n-      if (match) {\n+      if (compare_entry_to(i1, cp2, i2)) {\n@@ -1424,3 +1417,2 @@\n-    \/\/ separate statements and variables because CHECK_false is used\n-    bool match_entry = compare_entry_to(k1, cp2, k2, CHECK_false);\n-    bool match_operand = compare_operand_to(i1, cp2, i2, CHECK_false);\n+    bool match_entry = compare_entry_to(k1, cp2, k2);\n+    bool match_operand = compare_operand_to(i1, cp2, i2);\n@@ -1436,3 +1428,2 @@\n-    \/\/ separate statements and variables because CHECK_false is used\n-    bool match_entry = compare_entry_to(k1, cp2, k2, CHECK_false);\n-    bool match_operand = compare_operand_to(i1, cp2, i2, CHECK_false);\n+    bool match_entry = compare_entry_to(k1, cp2, k2);\n+    bool match_operand = compare_operand_to(i1, cp2, i2);\n@@ -1619,1 +1610,1 @@\n-    copy_entry_to(from_cp, src_i, to_cp, dest_i, CHECK);\n+    copy_entry_to(from_cp, src_i, to_cp, dest_i);\n@@ -1644,2 +1635,1 @@\n-                                        const constantPoolHandle& to_cp, int to_i,\n-                                        TRAPS) {\n+                                        const constantPoolHandle& to_cp, int to_i) {\n@@ -1789,1 +1779,1 @@\n-      const constantPoolHandle& search_cp, TRAPS) {\n+      const constantPoolHandle& search_cp) {\n@@ -1793,1 +1783,1 @@\n-    bool found = compare_entry_to(pattern_i, search_cp, i, CHECK_0);\n+    bool found = compare_entry_to(pattern_i, search_cp, i);\n@@ -1805,1 +1795,1 @@\n-bool ConstantPool::compare_operand_to(int idx1, const constantPoolHandle& cp2, int idx2, TRAPS) {\n+bool ConstantPool::compare_operand_to(int idx1, const constantPoolHandle& cp2, int idx2) {\n@@ -1808,1 +1798,1 @@\n-  bool match = compare_entry_to(k1, cp2, k2, CHECK_false);\n+  bool match = compare_entry_to(k1, cp2, k2);\n@@ -1818,1 +1808,1 @@\n-      match = compare_entry_to(k1, cp2, k2, CHECK_false);\n+      match = compare_entry_to(k1, cp2, k2);\n@@ -1832,1 +1822,1 @@\n-                    const constantPoolHandle& search_cp, int search_len, TRAPS) {\n+                    const constantPoolHandle& search_cp, int search_len) {\n@@ -1834,1 +1824,1 @@\n-    bool found = compare_operand_to(pattern_i, search_cp, i, CHECK_(-1));\n+    bool found = compare_operand_to(pattern_i, search_cp, i);\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":24,"deletions":34,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -663,1 +663,1 @@\n-                          int bsms_attribute_index2, TRAPS);\n+                          int bsms_attribute_index2);\n@@ -666,1 +666,1 @@\n-                            int operands_cur_len, TRAPS);\n+                            int operands_cur_len);\n@@ -906,1 +906,1 @@\n-  bool compare_entry_to(int index1, const constantPoolHandle& cp2, int index2, TRAPS);\n+  bool compare_entry_to(int index1, const constantPoolHandle& cp2, int index2);\n@@ -912,1 +912,1 @@\n-  static void copy_entry_to(const constantPoolHandle& from_cp, int from_i, const constantPoolHandle& to_cp, int to_i, TRAPS);\n+  static void copy_entry_to(const constantPoolHandle& from_cp, int from_i, const constantPoolHandle& to_cp, int to_i);\n@@ -914,1 +914,1 @@\n-  int  find_matching_entry(int pattern_i, const constantPoolHandle& search_cp, TRAPS);\n+  int  find_matching_entry(int pattern_i, const constantPoolHandle& search_cp);\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-  _res = load_new_class_versions(Thread::current());\n+  _res = load_new_class_versions();\n@@ -357,2 +357,1 @@\n-       int scratch_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p,\n-       TRAPS) {\n+       int scratch_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p) {\n@@ -380,1 +379,1 @@\n-                                                     merge_cp_length_p, THREAD);\n+                                                     merge_cp_length_p);\n@@ -402,2 +401,1 @@\n-      ConstantPool::copy_entry_to(scratch_cp, scratch_i, *merge_cp_p, *merge_cp_length_p,\n-        THREAD);\n+      ConstantPool::copy_entry_to(scratch_cp, scratch_i, *merge_cp_p, *merge_cp_length_p);\n@@ -422,2 +420,1 @@\n-      ConstantPool::copy_entry_to(scratch_cp, scratch_i, *merge_cp_p, *merge_cp_length_p,\n-        THREAD);\n+      ConstantPool::copy_entry_to(scratch_cp, scratch_i, *merge_cp_p, *merge_cp_length_p);\n@@ -438,1 +435,1 @@\n-                                                         merge_cp_length_p, THREAD);\n+                                                         merge_cp_length_p);\n@@ -442,2 +439,1 @@\n-                                                              merge_cp_p, merge_cp_length_p,\n-                                                              THREAD);\n+                                                              merge_cp_p, merge_cp_length_p);\n@@ -476,1 +472,1 @@\n-                                                          merge_cp_p, merge_cp_length_p, THREAD);\n+                                                          merge_cp_p, merge_cp_length_p);\n@@ -480,1 +476,1 @@\n-                                                          merge_cp_p, merge_cp_length_p, THREAD);\n+                                                          merge_cp_p, merge_cp_length_p);\n@@ -527,1 +523,1 @@\n-                                                    merge_cp_length_p, THREAD);\n+                                                    merge_cp_length_p);\n@@ -547,1 +543,1 @@\n-                                                    merge_cp_length_p, THREAD);\n+                                                    merge_cp_length_p);\n@@ -568,1 +564,1 @@\n-                                            merge_cp_length_p, THREAD);\n+                                            merge_cp_length_p);\n@@ -572,1 +568,1 @@\n-                                                    merge_cp_length_p, THREAD);\n+                                                    merge_cp_length_p);\n@@ -622,1 +618,1 @@\n-      int ref_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS) {\n+      int ref_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p) {\n@@ -626,1 +622,1 @@\n-               scratch_cp->compare_entry_to(ref_i, *merge_cp_p, ref_i, THREAD);\n+               scratch_cp->compare_entry_to(ref_i, *merge_cp_p, ref_i);\n@@ -630,1 +626,1 @@\n-    int found_i = scratch_cp->find_matching_entry(ref_i, *merge_cp_p, THREAD);\n+    int found_i = scratch_cp->find_matching_entry(ref_i, *merge_cp_p);\n@@ -638,1 +634,1 @@\n-      append_entry(scratch_cp, ref_i, merge_cp_p, merge_cp_length_p, THREAD);\n+      append_entry(scratch_cp, ref_i, merge_cp_p, merge_cp_length_p);\n@@ -654,1 +650,1 @@\n-       constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS) {\n+       constantPoolHandle *merge_cp_p, int *merge_cp_length_p) {\n@@ -658,1 +654,1 @@\n-                                                merge_cp_length_p, THREAD);\n+                                                merge_cp_length_p);\n@@ -679,1 +675,1 @@\n-                                                      merge_cp_length_p, THREAD);\n+                                                      merge_cp_length_p);\n@@ -697,1 +693,1 @@\n-      int old_bs_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS) {\n+      int old_bs_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p) {\n@@ -701,1 +697,1 @@\n-               scratch_cp->compare_operand_to(old_bs_i, *merge_cp_p, old_bs_i, THREAD);\n+               scratch_cp->compare_operand_to(old_bs_i, *merge_cp_p, old_bs_i);\n@@ -706,1 +702,1 @@\n-                                                    _operands_cur_length, THREAD);\n+                                                    _operands_cur_length);\n@@ -714,1 +710,1 @@\n-      append_operand(scratch_cp, old_bs_i, merge_cp_p, merge_cp_length_p, THREAD);\n+      append_operand(scratch_cp, old_bs_i, merge_cp_p, merge_cp_length_p);\n@@ -1348,1 +1344,1 @@\n-jvmtiError VM_RedefineClasses::load_new_class_versions(TRAPS) {\n+jvmtiError VM_RedefineClasses::load_new_class_versions() {\n@@ -1361,1 +1357,2 @@\n-  ResourceMark rm(THREAD);\n+  JavaThread* current = JavaThread::current();\n+  ResourceMark rm(current);\n@@ -1363,1 +1360,1 @@\n-  JvmtiThreadState *state = JvmtiThreadState::state_for(JavaThread::current());\n+  JvmtiThreadState *state = JvmtiThreadState::state_for(current);\n@@ -1371,1 +1368,1 @@\n-    HandleMark hm(THREAD);\n+    HandleMark hm(current);\n@@ -1385,2 +1382,2 @@\n-    Handle the_class_loader(THREAD, the_class->class_loader());\n-    Handle protection_domain(THREAD, the_class->protection_domain());\n+    Handle the_class_loader(current, the_class->class_loader());\n+    Handle protection_domain(current, the_class->protection_domain());\n@@ -1392,0 +1389,2 @@\n+    Thread* THREAD = current;  \/\/ for exception processing\n+    ExceptionMark em(THREAD);\n@@ -1648,1 +1647,1 @@\n-        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i, CHECK_false);\n+        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i);\n@@ -1654,1 +1653,1 @@\n-        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i, CHECK_false);\n+        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i);\n@@ -1693,2 +1692,1 @@\n-      bool match = scratch_cp->compare_entry_to(scratch_i, *merge_cp_p,\n-        scratch_i, CHECK_false);\n+      bool match = scratch_cp->compare_entry_to(scratch_i, *merge_cp_p, scratch_i);\n@@ -1708,2 +1706,1 @@\n-      int found_i = scratch_cp->find_matching_entry(scratch_i, *merge_cp_p,\n-        CHECK_false);\n+      int found_i = scratch_cp->find_matching_entry(scratch_i, *merge_cp_p);\n@@ -1729,2 +1726,1 @@\n-      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p,\n-        CHECK_false);\n+      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p);\n@@ -1758,1 +1754,1 @@\n-        scratch_cp->find_matching_entry(scratch_i, *merge_cp_p, CHECK_false);\n+        scratch_cp->find_matching_entry(scratch_i, *merge_cp_p);\n@@ -1768,2 +1764,1 @@\n-      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p,\n-        CHECK_false);\n+      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p);\n@@ -1776,1 +1771,1 @@\n-  finalize_operands_merge(*merge_cp_p, THREAD);\n+  finalize_operands_merge(*merge_cp_p, CHECK_false);\n@@ -1921,1 +1916,1 @@\n-    if (!rewrite_cp_refs(scratch_class, THREAD)) {\n+    if (!rewrite_cp_refs(scratch_class)) {\n@@ -1941,2 +1936,1 @@\n-bool VM_RedefineClasses::rewrite_cp_refs(InstanceKlass* scratch_class,\n-       TRAPS) {\n+bool VM_RedefineClasses::rewrite_cp_refs(InstanceKlass* scratch_class) {\n@@ -1951,1 +1945,1 @@\n-  if (!rewrite_cp_refs_in_record_attribute(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_record_attribute(scratch_class)) {\n@@ -1963,1 +1957,1 @@\n-  if (!rewrite_cp_refs_in_methods(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_methods(scratch_class)) {\n@@ -1969,1 +1963,1 @@\n-  if (!rewrite_cp_refs_in_class_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_class_annotations(scratch_class)) {\n@@ -1975,1 +1969,1 @@\n-  if (!rewrite_cp_refs_in_fields_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_fields_annotations(scratch_class)) {\n@@ -1981,1 +1975,1 @@\n-  if (!rewrite_cp_refs_in_methods_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_methods_annotations(scratch_class)) {\n@@ -1987,2 +1981,1 @@\n-  if (!rewrite_cp_refs_in_methods_parameter_annotations(scratch_class,\n-         THREAD)) {\n+  if (!rewrite_cp_refs_in_methods_parameter_annotations(scratch_class)) {\n@@ -1994,2 +1987,1 @@\n-  if (!rewrite_cp_refs_in_methods_default_annotations(scratch_class,\n-         THREAD)) {\n+  if (!rewrite_cp_refs_in_methods_default_annotations(scratch_class)) {\n@@ -2001,1 +1993,1 @@\n-  if (!rewrite_cp_refs_in_class_type_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_class_type_annotations(scratch_class)) {\n@@ -2007,1 +1999,1 @@\n-  if (!rewrite_cp_refs_in_fields_type_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_fields_type_annotations(scratch_class)) {\n@@ -2013,1 +2005,1 @@\n-  if (!rewrite_cp_refs_in_methods_type_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_methods_type_annotations(scratch_class)) {\n@@ -2061,2 +2053,1 @@\n-bool VM_RedefineClasses::rewrite_cp_refs_in_record_attribute(\n-       InstanceKlass* scratch_class, TRAPS) {\n+bool VM_RedefineClasses::rewrite_cp_refs_in_record_attribute(InstanceKlass* scratch_class) {\n@@ -2079,1 +2070,1 @@\n-        if (!rewrite_cp_refs_in_annotations_typeArray(annotations, byte_i, THREAD)) {\n+        if (!rewrite_cp_refs_in_annotations_typeArray(annotations, byte_i)) {\n@@ -2089,1 +2080,1 @@\n-        if (!rewrite_cp_refs_in_annotations_typeArray(type_annotations, byte_i, THREAD)) {\n+        if (!rewrite_cp_refs_in_annotations_typeArray(type_annotations, byte_i)) {\n@@ -2114,2 +2105,1 @@\n-bool VM_RedefineClasses::rewrite_cp_refs_in_methods(\n-       InstanceKlass* scratch_class, TRAPS) {\n+bool VM_RedefineClasses::rewrite_cp_refs_in_methods(InstanceKlass* scratch_class) {\n@@ -2124,0 +2114,3 @@\n+  Thread* THREAD = Thread::current();  \/\/ For exception processing\n+  ExceptionMark em(THREAD);\n+\n@@ -2295,2 +2288,1 @@\n-bool VM_RedefineClasses::rewrite_cp_refs_in_class_annotations(\n-       InstanceKlass* scratch_class, TRAPS) {\n+bool VM_RedefineClasses::rewrite_cp_refs_in_class_annotations(InstanceKlass* scratch_class) {\n@@ -2307,2 +2299,1 @@\n-  return rewrite_cp_refs_in_annotations_typeArray(class_annotations, byte_i,\n-           THREAD);\n+  return rewrite_cp_refs_in_annotations_typeArray(class_annotations, byte_i);\n@@ -2322,1 +2313,1 @@\n-       AnnotationArray* annotations_typeArray, int &byte_i_ref, TRAPS) {\n+       AnnotationArray* annotations_typeArray, int &byte_i_ref) {\n@@ -2338,2 +2329,1 @@\n-    if (!rewrite_cp_refs_in_annotation_struct(annotations_typeArray,\n-           byte_i_ref, THREAD)) {\n+    if (!rewrite_cp_refs_in_annotation_struct(annotations_typeArray, byte_i_ref)) {\n@@ -2365,1 +2355,1 @@\n-       AnnotationArray* annotations_typeArray, int &byte_i_ref, TRAPS) {\n+       AnnotationArray* annotations_typeArray, int &byte_i_ref) {\n@@ -2373,1 +2363,1 @@\n-                    byte_i_ref, \"type_index\", THREAD);\n+                    byte_i_ref, \"type_index\");\n@@ -2394,1 +2384,1 @@\n-                              \"element_name_index\", THREAD);\n+                              \"element_name_index\");\n@@ -2398,2 +2388,1 @@\n-    if (!rewrite_cp_refs_in_element_value(annotations_typeArray,\n-           byte_i_ref, THREAD)) {\n+    if (!rewrite_cp_refs_in_element_value(annotations_typeArray, byte_i_ref)) {\n@@ -2418,1 +2407,1 @@\n-     const char * trace_mesg, TRAPS) {\n+     const char * trace_mesg) {\n@@ -2456,1 +2445,1 @@\n-       AnnotationArray* annotations_typeArray, int &byte_i_ref, TRAPS) {\n+       AnnotationArray* annotations_typeArray, int &byte_i_ref) {\n@@ -2494,1 +2483,1 @@\n-                               \"const_value_index\", THREAD);\n+                               \"const_value_index\");\n@@ -2511,1 +2500,1 @@\n-                             \"type_name_index\", THREAD);\n+                             \"type_name_index\");\n@@ -2515,1 +2504,1 @@\n-                              \"const_name_index\", THREAD);\n+                              \"const_name_index\");\n@@ -2533,1 +2522,1 @@\n-                              \"class_info_index\", THREAD);\n+                              \"class_info_index\");\n@@ -2541,2 +2530,1 @@\n-      if (!rewrite_cp_refs_in_annotation_struct(annotations_typeArray,\n-             byte_i_ref, THREAD)) {\n+      if (!rewrite_cp_refs_in_annotation_struct(annotations_typeArray, byte_i_ref)) {\n@@ -2565,2 +2553,1 @@\n-        if (!rewrite_cp_refs_in_element_value(\n-               annotations_typeArray, byte_i_ref, THREAD)) {\n+        if (!rewrite_cp_refs_in_element_value(annotations_typeArray, byte_i_ref)) {\n@@ -2586,1 +2573,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2605,2 +2592,1 @@\n-    if (!rewrite_cp_refs_in_annotations_typeArray(field_annotations, byte_i,\n-           THREAD)) {\n+    if (!rewrite_cp_refs_in_annotations_typeArray(field_annotations, byte_i)) {\n@@ -2619,1 +2605,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2631,2 +2617,1 @@\n-    if (!rewrite_cp_refs_in_annotations_typeArray(method_annotations, byte_i,\n-           THREAD)) {\n+    if (!rewrite_cp_refs_in_annotations_typeArray(method_annotations, byte_i)) {\n@@ -2657,1 +2642,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2683,2 +2668,1 @@\n-      if (!rewrite_cp_refs_in_annotations_typeArray(\n-             method_parameter_annotations, byte_i, THREAD)) {\n+      if (!rewrite_cp_refs_in_annotations_typeArray(method_parameter_annotations, byte_i)) {\n@@ -2706,1 +2690,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2720,1 +2704,1 @@\n-           method_default_annotations, byte_i, THREAD)) {\n+           method_default_annotations, byte_i)) {\n@@ -2733,1 +2717,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2745,1 +2729,1 @@\n-      byte_i, \"ClassFile\", THREAD);\n+      byte_i, \"ClassFile\");\n@@ -2750,2 +2734,1 @@\n-bool VM_RedefineClasses::rewrite_cp_refs_in_fields_type_annotations(\n-       InstanceKlass* scratch_class, TRAPS) {\n+bool VM_RedefineClasses::rewrite_cp_refs_in_fields_type_annotations(InstanceKlass* scratch_class) {\n@@ -2770,1 +2753,1 @@\n-           byte_i, \"field_info\", THREAD)) {\n+           byte_i, \"field_info\")) {\n@@ -2783,1 +2766,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2798,1 +2781,1 @@\n-           byte_i, \"method_info\", THREAD)) {\n+           byte_i, \"method_info\")) {\n@@ -2821,1 +2804,1 @@\n-       const char * location_mesg, TRAPS) {\n+       const char * location_mesg) {\n@@ -2838,1 +2821,1 @@\n-           byte_i_ref, location_mesg, THREAD)) {\n+           byte_i_ref, location_mesg)) {\n@@ -2882,1 +2865,1 @@\n-       const char * location_mesg, TRAPS) {\n+       const char * location_mesg) {\n@@ -2885,1 +2868,1 @@\n-         byte_i_ref, location_mesg, THREAD)) {\n+         byte_i_ref, location_mesg)) {\n@@ -2889,2 +2872,1 @@\n-  if (!skip_type_annotation_type_path(type_annotations_typeArray,\n-         byte_i_ref, THREAD)) {\n+  if (!skip_type_annotation_type_path(type_annotations_typeArray, byte_i_ref)) {\n@@ -2894,2 +2876,1 @@\n-  if (!rewrite_cp_refs_in_annotation_struct(type_annotations_typeArray,\n-         byte_i_ref, THREAD)) {\n+  if (!rewrite_cp_refs_in_annotation_struct(type_annotations_typeArray, byte_i_ref)) {\n@@ -2922,1 +2903,1 @@\n-       const char * location_mesg, TRAPS) {\n+       const char * location_mesg) {\n@@ -3234,1 +3215,1 @@\n-       AnnotationArray* type_annotations_typeArray, int &byte_i_ref, TRAPS) {\n+       AnnotationArray* type_annotations_typeArray, int &byte_i_ref) {\n@@ -3289,1 +3270,1 @@\n-       const methodHandle& method, TRAPS) {\n+       const methodHandle& method) {\n@@ -3338,1 +3319,1 @@\n-        calc_number_of_entries, frame_type, THREAD);\n+        calc_number_of_entries, frame_type);\n@@ -3354,1 +3335,1 @@\n-        calc_number_of_entries, frame_type, THREAD);\n+        calc_number_of_entries, frame_type);\n@@ -3385,1 +3366,1 @@\n-          calc_number_of_entries, frame_type, THREAD);\n+          calc_number_of_entries, frame_type);\n@@ -3407,1 +3388,1 @@\n-          calc_number_of_entries, frame_type, THREAD);\n+          calc_number_of_entries, frame_type);\n@@ -3417,1 +3398,1 @@\n-          calc_number_of_entries, frame_type, THREAD);\n+          calc_number_of_entries, frame_type);\n@@ -3448,1 +3429,1 @@\n-       u1 frame_type, TRAPS) {\n+       u1 frame_type) {\n@@ -3717,1 +3698,1 @@\n-    rewrite_cp_refs_in_stack_map_table(method, THREAD);\n+    rewrite_cp_refs_in_stack_map_table(method);\n@@ -4457,1 +4438,1 @@\n-  increment_class_counter((InstanceKlass *)the_class, THREAD);\n+  increment_class_counter((InstanceKlass *)the_class);\n@@ -4486,1 +4467,1 @@\n-void VM_RedefineClasses::increment_class_counter(InstanceKlass *ik, TRAPS) {\n+void VM_RedefineClasses::increment_class_counter(InstanceKlass *ik) {\n@@ -4503,1 +4484,1 @@\n-      increment_class_counter(subik, THREAD);\n+      increment_class_counter(subik);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":109,"deletions":128,"binary":false,"changes":237,"status":"modified"},{"patch":"@@ -403,1 +403,1 @@\n-  jvmtiError load_new_class_versions(TRAPS);\n+  jvmtiError load_new_class_versions();\n@@ -432,1 +432,1 @@\n-  void increment_class_counter(InstanceKlass *ik, TRAPS);\n+  void increment_class_counter(InstanceKlass *ik);\n@@ -436,1 +436,1 @@\n-    constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS);\n+    constantPoolHandle *merge_cp_p, int *merge_cp_length_p);\n@@ -438,1 +438,1 @@\n-    constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS);\n+    constantPoolHandle *merge_cp_p, int *merge_cp_length_p);\n@@ -441,1 +441,1 @@\n-    constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS);\n+    constantPoolHandle *merge_cp_p, int *merge_cp_length_p);\n@@ -443,1 +443,1 @@\n-    constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS);\n+    constantPoolHandle *merge_cp_p, int *merge_cp_length_p);\n@@ -457,2 +457,2 @@\n-    const char * trace_mesg, TRAPS);\n-  bool rewrite_cp_refs(InstanceKlass* scratch_class, TRAPS);\n+    const char * trace_mesg);\n+  bool rewrite_cp_refs(InstanceKlass* scratch_class);\n@@ -460,1 +460,1 @@\n-    AnnotationArray* class_annotations, int &byte_i_ref, TRAPS);\n+    AnnotationArray* class_annotations, int &byte_i_ref);\n@@ -462,3 +462,2 @@\n-    AnnotationArray* annotations_typeArray, int &byte_i_ref, TRAPS);\n-  bool rewrite_cp_refs_in_class_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n+    AnnotationArray* annotations_typeArray, int &byte_i_ref);\n+  bool rewrite_cp_refs_in_class_annotations(InstanceKlass* scratch_class);\n@@ -466,1 +465,1 @@\n-    AnnotationArray* class_annotations, int &byte_i_ref, TRAPS);\n+    AnnotationArray* class_annotations, int &byte_i_ref);\n@@ -469,1 +468,1 @@\n-    const char * location_mesg, TRAPS);\n+    const char * location_mesg);\n@@ -472,1 +471,1 @@\n-    const char * location_mesg, TRAPS);\n+    const char * location_mesg);\n@@ -475,1 +474,1 @@\n-    const char * location_mesg, TRAPS);\n+    const char * location_mesg);\n@@ -477,3 +476,2 @@\n-    AnnotationArray* type_annotations_typeArray, int &byte_i_ref, TRAPS);\n-  bool rewrite_cp_refs_in_fields_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n+    AnnotationArray* type_annotations_typeArray, int &byte_i_ref);\n+  bool rewrite_cp_refs_in_fields_annotations(InstanceKlass* scratch_class);\n@@ -481,1 +479,1 @@\n-  bool rewrite_cp_refs_in_record_attribute(InstanceKlass* scratch_class, TRAPS);\n+  bool rewrite_cp_refs_in_record_attribute(InstanceKlass* scratch_class);\n@@ -483,0 +481,1 @@\n+\n@@ -485,14 +484,10 @@\n-  bool rewrite_cp_refs_in_methods(InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_methods_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_methods_default_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_methods_parameter_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_class_type_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_fields_type_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_methods_type_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  void rewrite_cp_refs_in_stack_map_table(const methodHandle& method, TRAPS);\n+  bool rewrite_cp_refs_in_methods(InstanceKlass* scratch_class);\n+\n+  bool rewrite_cp_refs_in_methods_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_methods_default_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_methods_parameter_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_class_type_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_fields_type_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_methods_type_annotations(InstanceKlass* scratch_class);\n+\n+  void rewrite_cp_refs_in_stack_map_table(const methodHandle& method);\n@@ -501,1 +496,1 @@\n-         u1 frame_size, TRAPS);\n+         u1 frame_size);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.hpp","additions":30,"deletions":35,"binary":false,"changes":65,"status":"modified"}]}