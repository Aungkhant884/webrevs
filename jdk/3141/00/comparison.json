{"files":[{"patch":"@@ -1271,1 +1271,1 @@\n-       int index2, TRAPS) {\n+       int index2) {\n@@ -1290,2 +1290,2 @@\n-    Klass* k1 = klass_at(index1, CHECK_false);\n-    Klass* k2 = cp2->klass_at(index2, CHECK_false);\n+    Klass* k1 = resolved_klass_at(index1);\n+    Klass* k2 = cp2->resolved_klass_at(index2);\n@@ -1301,1 +1301,1 @@\n-    bool match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n+    bool match = compare_entry_to(recur1, cp2, recur2);\n@@ -1322,1 +1322,1 @@\n-    bool match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n+    bool match = compare_entry_to(recur1, cp2, recur2);\n@@ -1326,1 +1326,1 @@\n-      match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n+      match = compare_entry_to(recur1, cp2, recur2);\n@@ -1364,1 +1364,1 @@\n-    bool match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n+    bool match = compare_entry_to(recur1, cp2, recur2);\n@@ -1368,1 +1368,1 @@\n-      match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n+      match = compare_entry_to(recur1, cp2, recur2);\n@@ -1379,1 +1379,1 @@\n-    bool match = compare_entry_to(recur1, cp2, recur2, CHECK_false);\n+    bool match = compare_entry_to(recur1, cp2, recur2);\n@@ -1398,1 +1398,1 @@\n-    bool match = compare_entry_to(k1, cp2, k2, CHECK_false);\n+    bool match = compare_entry_to(k1, cp2, k2);\n@@ -1411,1 +1411,1 @@\n-      bool match = compare_entry_to(i1, cp2, i2, CHECK_false);\n+      bool match = compare_entry_to(i1, cp2, i2);\n@@ -1424,3 +1424,2 @@\n-    \/\/ separate statements and variables because CHECK_false is used\n-    bool match_entry = compare_entry_to(k1, cp2, k2, CHECK_false);\n-    bool match_operand = compare_operand_to(i1, cp2, i2, CHECK_false);\n+    bool match_entry = compare_entry_to(k1, cp2, k2);\n+    bool match_operand = compare_operand_to(i1, cp2, i2);\n@@ -1436,3 +1435,2 @@\n-    \/\/ separate statements and variables because CHECK_false is used\n-    bool match_entry = compare_entry_to(k1, cp2, k2, CHECK_false);\n-    bool match_operand = compare_operand_to(i1, cp2, i2, CHECK_false);\n+    bool match_entry = compare_entry_to(k1, cp2, k2);\n+    bool match_operand = compare_operand_to(i1, cp2, i2);\n@@ -1619,1 +1617,1 @@\n-    copy_entry_to(from_cp, src_i, to_cp, dest_i, CHECK);\n+    copy_entry_to(from_cp, src_i, to_cp, dest_i);\n@@ -1644,2 +1642,1 @@\n-                                        const constantPoolHandle& to_cp, int to_i,\n-                                        TRAPS) {\n+                                        const constantPoolHandle& to_cp, int to_i) {\n@@ -1789,1 +1786,1 @@\n-      const constantPoolHandle& search_cp, TRAPS) {\n+      const constantPoolHandle& search_cp) {\n@@ -1793,1 +1790,1 @@\n-    bool found = compare_entry_to(pattern_i, search_cp, i, CHECK_0);\n+    bool found = compare_entry_to(pattern_i, search_cp, i);\n@@ -1805,1 +1802,1 @@\n-bool ConstantPool::compare_operand_to(int idx1, const constantPoolHandle& cp2, int idx2, TRAPS) {\n+bool ConstantPool::compare_operand_to(int idx1, const constantPoolHandle& cp2, int idx2) {\n@@ -1808,1 +1805,1 @@\n-  bool match = compare_entry_to(k1, cp2, k2, CHECK_false);\n+  bool match = compare_entry_to(k1, cp2, k2);\n@@ -1818,1 +1815,1 @@\n-      match = compare_entry_to(k1, cp2, k2, CHECK_false);\n+      match = compare_entry_to(k1, cp2, k2);\n@@ -1832,1 +1829,1 @@\n-                    const constantPoolHandle& search_cp, int search_len, TRAPS) {\n+                    const constantPoolHandle& search_cp, int search_len) {\n@@ -1834,1 +1831,1 @@\n-    bool found = compare_operand_to(pattern_i, search_cp, i, CHECK_(-1));\n+    bool found = compare_operand_to(pattern_i, search_cp, i);\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":24,"deletions":27,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -663,1 +663,1 @@\n-                          int bsms_attribute_index2, TRAPS);\n+                          int bsms_attribute_index2);\n@@ -666,1 +666,1 @@\n-                            int operands_cur_len, TRAPS);\n+                            int operands_cur_len);\n@@ -906,1 +906,1 @@\n-  bool compare_entry_to(int index1, const constantPoolHandle& cp2, int index2, TRAPS);\n+  bool compare_entry_to(int index1, const constantPoolHandle& cp2, int index2);\n@@ -912,1 +912,1 @@\n-  static void copy_entry_to(const constantPoolHandle& from_cp, int from_i, const constantPoolHandle& to_cp, int to_i, TRAPS);\n+  static void copy_entry_to(const constantPoolHandle& from_cp, int from_i, const constantPoolHandle& to_cp, int to_i);\n@@ -914,1 +914,1 @@\n-  int  find_matching_entry(int pattern_i, const constantPoolHandle& search_cp, TRAPS);\n+  int  find_matching_entry(int pattern_i, const constantPoolHandle& search_cp);\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -357,2 +357,1 @@\n-       int scratch_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p,\n-       TRAPS) {\n+       int scratch_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p) {\n@@ -380,1 +379,1 @@\n-                                                     merge_cp_length_p, THREAD);\n+                                                     merge_cp_length_p);\n@@ -402,2 +401,1 @@\n-      ConstantPool::copy_entry_to(scratch_cp, scratch_i, *merge_cp_p, *merge_cp_length_p,\n-        THREAD);\n+      ConstantPool::copy_entry_to(scratch_cp, scratch_i, *merge_cp_p, *merge_cp_length_p);\n@@ -422,2 +420,1 @@\n-      ConstantPool::copy_entry_to(scratch_cp, scratch_i, *merge_cp_p, *merge_cp_length_p,\n-        THREAD);\n+      ConstantPool::copy_entry_to(scratch_cp, scratch_i, *merge_cp_p, *merge_cp_length_p);\n@@ -438,1 +435,1 @@\n-                                                         merge_cp_length_p, THREAD);\n+                                                         merge_cp_length_p);\n@@ -442,2 +439,1 @@\n-                                                              merge_cp_p, merge_cp_length_p,\n-                                                              THREAD);\n+                                                              merge_cp_p, merge_cp_length_p);\n@@ -476,1 +472,1 @@\n-                                                          merge_cp_p, merge_cp_length_p, THREAD);\n+                                                          merge_cp_p, merge_cp_length_p);\n@@ -480,1 +476,1 @@\n-                                                          merge_cp_p, merge_cp_length_p, THREAD);\n+                                                          merge_cp_p, merge_cp_length_p);\n@@ -527,1 +523,1 @@\n-                                                    merge_cp_length_p, THREAD);\n+                                                    merge_cp_length_p);\n@@ -547,1 +543,1 @@\n-                                                    merge_cp_length_p, THREAD);\n+                                                    merge_cp_length_p);\n@@ -568,1 +564,1 @@\n-                                            merge_cp_length_p, THREAD);\n+                                            merge_cp_length_p);\n@@ -572,1 +568,1 @@\n-                                                    merge_cp_length_p, THREAD);\n+                                                    merge_cp_length_p);\n@@ -622,1 +618,1 @@\n-      int ref_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS) {\n+      int ref_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p) {\n@@ -626,1 +622,1 @@\n-               scratch_cp->compare_entry_to(ref_i, *merge_cp_p, ref_i, THREAD);\n+               scratch_cp->compare_entry_to(ref_i, *merge_cp_p, ref_i);\n@@ -630,1 +626,1 @@\n-    int found_i = scratch_cp->find_matching_entry(ref_i, *merge_cp_p, THREAD);\n+    int found_i = scratch_cp->find_matching_entry(ref_i, *merge_cp_p);\n@@ -638,1 +634,1 @@\n-      append_entry(scratch_cp, ref_i, merge_cp_p, merge_cp_length_p, THREAD);\n+      append_entry(scratch_cp, ref_i, merge_cp_p, merge_cp_length_p);\n@@ -654,1 +650,1 @@\n-       constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS) {\n+       constantPoolHandle *merge_cp_p, int *merge_cp_length_p) {\n@@ -658,1 +654,1 @@\n-                                                merge_cp_length_p, THREAD);\n+                                                merge_cp_length_p);\n@@ -679,1 +675,1 @@\n-                                                      merge_cp_length_p, THREAD);\n+                                                      merge_cp_length_p);\n@@ -697,1 +693,1 @@\n-      int old_bs_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS) {\n+      int old_bs_i, constantPoolHandle *merge_cp_p, int *merge_cp_length_p) {\n@@ -701,1 +697,1 @@\n-               scratch_cp->compare_operand_to(old_bs_i, *merge_cp_p, old_bs_i, THREAD);\n+               scratch_cp->compare_operand_to(old_bs_i, *merge_cp_p, old_bs_i);\n@@ -706,1 +702,1 @@\n-                                                    _operands_cur_length, THREAD);\n+                                                    _operands_cur_length);\n@@ -714,1 +710,1 @@\n-      append_operand(scratch_cp, old_bs_i, merge_cp_p, merge_cp_length_p, THREAD);\n+      append_operand(scratch_cp, old_bs_i, merge_cp_p, merge_cp_length_p);\n@@ -1648,1 +1644,1 @@\n-        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i, CHECK_false);\n+        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i);\n@@ -1654,1 +1650,1 @@\n-        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i, CHECK_false);\n+        ConstantPool::copy_entry_to(old_cp, old_i, *merge_cp_p, old_i);\n@@ -1693,2 +1689,1 @@\n-      bool match = scratch_cp->compare_entry_to(scratch_i, *merge_cp_p,\n-        scratch_i, CHECK_false);\n+      bool match = scratch_cp->compare_entry_to(scratch_i, *merge_cp_p, scratch_i);\n@@ -1708,2 +1703,1 @@\n-      int found_i = scratch_cp->find_matching_entry(scratch_i, *merge_cp_p,\n-        CHECK_false);\n+      int found_i = scratch_cp->find_matching_entry(scratch_i, *merge_cp_p);\n@@ -1729,2 +1723,1 @@\n-      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p,\n-        CHECK_false);\n+      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p);\n@@ -1758,1 +1751,1 @@\n-        scratch_cp->find_matching_entry(scratch_i, *merge_cp_p, CHECK_false);\n+        scratch_cp->find_matching_entry(scratch_i, *merge_cp_p);\n@@ -1768,2 +1761,1 @@\n-      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p,\n-        CHECK_false);\n+      append_entry(scratch_cp, scratch_i, merge_cp_p, merge_cp_length_p);\n@@ -1951,1 +1943,1 @@\n-  if (!rewrite_cp_refs_in_record_attribute(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_record_attribute(scratch_class)) {\n@@ -1969,1 +1961,1 @@\n-  if (!rewrite_cp_refs_in_class_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_class_annotations(scratch_class)) {\n@@ -1975,1 +1967,1 @@\n-  if (!rewrite_cp_refs_in_fields_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_fields_annotations(scratch_class)) {\n@@ -1981,1 +1973,1 @@\n-  if (!rewrite_cp_refs_in_methods_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_methods_annotations(scratch_class)) {\n@@ -1987,2 +1979,1 @@\n-  if (!rewrite_cp_refs_in_methods_parameter_annotations(scratch_class,\n-         THREAD)) {\n+  if (!rewrite_cp_refs_in_methods_parameter_annotations(scratch_class)) {\n@@ -1994,2 +1985,1 @@\n-  if (!rewrite_cp_refs_in_methods_default_annotations(scratch_class,\n-         THREAD)) {\n+  if (!rewrite_cp_refs_in_methods_default_annotations(scratch_class)) {\n@@ -2001,1 +1991,1 @@\n-  if (!rewrite_cp_refs_in_class_type_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_class_type_annotations(scratch_class)) {\n@@ -2007,1 +1997,1 @@\n-  if (!rewrite_cp_refs_in_fields_type_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_fields_type_annotations(scratch_class)) {\n@@ -2013,1 +2003,1 @@\n-  if (!rewrite_cp_refs_in_methods_type_annotations(scratch_class, THREAD)) {\n+  if (!rewrite_cp_refs_in_methods_type_annotations(scratch_class)) {\n@@ -2061,2 +2051,1 @@\n-bool VM_RedefineClasses::rewrite_cp_refs_in_record_attribute(\n-       InstanceKlass* scratch_class, TRAPS) {\n+bool VM_RedefineClasses::rewrite_cp_refs_in_record_attribute(InstanceKlass* scratch_class) {\n@@ -2079,1 +2068,1 @@\n-        if (!rewrite_cp_refs_in_annotations_typeArray(annotations, byte_i, THREAD)) {\n+        if (!rewrite_cp_refs_in_annotations_typeArray(annotations, byte_i)) {\n@@ -2089,1 +2078,1 @@\n-        if (!rewrite_cp_refs_in_annotations_typeArray(type_annotations, byte_i, THREAD)) {\n+        if (!rewrite_cp_refs_in_annotations_typeArray(type_annotations, byte_i)) {\n@@ -2295,2 +2284,1 @@\n-bool VM_RedefineClasses::rewrite_cp_refs_in_class_annotations(\n-       InstanceKlass* scratch_class, TRAPS) {\n+bool VM_RedefineClasses::rewrite_cp_refs_in_class_annotations(InstanceKlass* scratch_class) {\n@@ -2307,2 +2295,1 @@\n-  return rewrite_cp_refs_in_annotations_typeArray(class_annotations, byte_i,\n-           THREAD);\n+  return rewrite_cp_refs_in_annotations_typeArray(class_annotations, byte_i);\n@@ -2322,1 +2309,1 @@\n-       AnnotationArray* annotations_typeArray, int &byte_i_ref, TRAPS) {\n+       AnnotationArray* annotations_typeArray, int &byte_i_ref) {\n@@ -2338,2 +2325,1 @@\n-    if (!rewrite_cp_refs_in_annotation_struct(annotations_typeArray,\n-           byte_i_ref, THREAD)) {\n+    if (!rewrite_cp_refs_in_annotation_struct(annotations_typeArray, byte_i_ref)) {\n@@ -2365,1 +2351,1 @@\n-       AnnotationArray* annotations_typeArray, int &byte_i_ref, TRAPS) {\n+       AnnotationArray* annotations_typeArray, int &byte_i_ref) {\n@@ -2373,1 +2359,1 @@\n-                    byte_i_ref, \"type_index\", THREAD);\n+                    byte_i_ref, \"type_index\");\n@@ -2394,1 +2380,1 @@\n-                              \"element_name_index\", THREAD);\n+                              \"element_name_index\");\n@@ -2398,2 +2384,1 @@\n-    if (!rewrite_cp_refs_in_element_value(annotations_typeArray,\n-           byte_i_ref, THREAD)) {\n+    if (!rewrite_cp_refs_in_element_value(annotations_typeArray, byte_i_ref)) {\n@@ -2418,1 +2403,1 @@\n-     const char * trace_mesg, TRAPS) {\n+     const char * trace_mesg) {\n@@ -2456,1 +2441,1 @@\n-       AnnotationArray* annotations_typeArray, int &byte_i_ref, TRAPS) {\n+       AnnotationArray* annotations_typeArray, int &byte_i_ref) {\n@@ -2494,1 +2479,1 @@\n-                               \"const_value_index\", THREAD);\n+                               \"const_value_index\");\n@@ -2511,1 +2496,1 @@\n-                             \"type_name_index\", THREAD);\n+                             \"type_name_index\");\n@@ -2515,1 +2500,1 @@\n-                              \"const_name_index\", THREAD);\n+                              \"const_name_index\");\n@@ -2533,1 +2518,1 @@\n-                              \"class_info_index\", THREAD);\n+                              \"class_info_index\");\n@@ -2541,2 +2526,1 @@\n-      if (!rewrite_cp_refs_in_annotation_struct(annotations_typeArray,\n-             byte_i_ref, THREAD)) {\n+      if (!rewrite_cp_refs_in_annotation_struct(annotations_typeArray, byte_i_ref)) {\n@@ -2565,2 +2549,1 @@\n-        if (!rewrite_cp_refs_in_element_value(\n-               annotations_typeArray, byte_i_ref, THREAD)) {\n+        if (!rewrite_cp_refs_in_element_value(annotations_typeArray, byte_i_ref)) {\n@@ -2586,1 +2569,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2605,2 +2588,1 @@\n-    if (!rewrite_cp_refs_in_annotations_typeArray(field_annotations, byte_i,\n-           THREAD)) {\n+    if (!rewrite_cp_refs_in_annotations_typeArray(field_annotations, byte_i)) {\n@@ -2619,1 +2601,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2631,2 +2613,1 @@\n-    if (!rewrite_cp_refs_in_annotations_typeArray(method_annotations, byte_i,\n-           THREAD)) {\n+    if (!rewrite_cp_refs_in_annotations_typeArray(method_annotations, byte_i)) {\n@@ -2657,1 +2638,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2683,2 +2664,1 @@\n-      if (!rewrite_cp_refs_in_annotations_typeArray(\n-             method_parameter_annotations, byte_i, THREAD)) {\n+      if (!rewrite_cp_refs_in_annotations_typeArray(method_parameter_annotations, byte_i)) {\n@@ -2706,1 +2686,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2720,1 +2700,1 @@\n-           method_default_annotations, byte_i, THREAD)) {\n+           method_default_annotations, byte_i)) {\n@@ -2733,1 +2713,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2745,1 +2725,1 @@\n-      byte_i, \"ClassFile\", THREAD);\n+      byte_i, \"ClassFile\");\n@@ -2750,2 +2730,1 @@\n-bool VM_RedefineClasses::rewrite_cp_refs_in_fields_type_annotations(\n-       InstanceKlass* scratch_class, TRAPS) {\n+bool VM_RedefineClasses::rewrite_cp_refs_in_fields_type_annotations(InstanceKlass* scratch_class) {\n@@ -2770,1 +2749,1 @@\n-           byte_i, \"field_info\", THREAD)) {\n+           byte_i, \"field_info\")) {\n@@ -2783,1 +2762,1 @@\n-       InstanceKlass* scratch_class, TRAPS) {\n+       InstanceKlass* scratch_class) {\n@@ -2798,1 +2777,1 @@\n-           byte_i, \"method_info\", THREAD)) {\n+           byte_i, \"method_info\")) {\n@@ -2821,1 +2800,1 @@\n-       const char * location_mesg, TRAPS) {\n+       const char * location_mesg) {\n@@ -2838,1 +2817,1 @@\n-           byte_i_ref, location_mesg, THREAD)) {\n+           byte_i_ref, location_mesg)) {\n@@ -2882,1 +2861,1 @@\n-       const char * location_mesg, TRAPS) {\n+       const char * location_mesg) {\n@@ -2885,1 +2864,1 @@\n-         byte_i_ref, location_mesg, THREAD)) {\n+         byte_i_ref, location_mesg)) {\n@@ -2889,2 +2868,1 @@\n-  if (!skip_type_annotation_type_path(type_annotations_typeArray,\n-         byte_i_ref, THREAD)) {\n+  if (!skip_type_annotation_type_path(type_annotations_typeArray, byte_i_ref)) {\n@@ -2894,2 +2872,1 @@\n-  if (!rewrite_cp_refs_in_annotation_struct(type_annotations_typeArray,\n-         byte_i_ref, THREAD)) {\n+  if (!rewrite_cp_refs_in_annotation_struct(type_annotations_typeArray, byte_i_ref)) {\n@@ -2922,1 +2899,1 @@\n-       const char * location_mesg, TRAPS) {\n+       const char * location_mesg) {\n@@ -3234,1 +3211,1 @@\n-       AnnotationArray* type_annotations_typeArray, int &byte_i_ref, TRAPS) {\n+       AnnotationArray* type_annotations_typeArray, int &byte_i_ref) {\n@@ -3289,1 +3266,1 @@\n-       const methodHandle& method, TRAPS) {\n+       const methodHandle& method) {\n@@ -3338,1 +3315,1 @@\n-        calc_number_of_entries, frame_type, THREAD);\n+        calc_number_of_entries, frame_type);\n@@ -3354,1 +3331,1 @@\n-        calc_number_of_entries, frame_type, THREAD);\n+        calc_number_of_entries, frame_type);\n@@ -3385,1 +3362,1 @@\n-          calc_number_of_entries, frame_type, THREAD);\n+          calc_number_of_entries, frame_type);\n@@ -3407,1 +3384,1 @@\n-          calc_number_of_entries, frame_type, THREAD);\n+          calc_number_of_entries, frame_type);\n@@ -3417,1 +3394,1 @@\n-          calc_number_of_entries, frame_type, THREAD);\n+          calc_number_of_entries, frame_type);\n@@ -3448,1 +3425,1 @@\n-       u1 frame_type, TRAPS) {\n+       u1 frame_type) {\n@@ -3717,1 +3694,1 @@\n-    rewrite_cp_refs_in_stack_map_table(method, THREAD);\n+    rewrite_cp_refs_in_stack_map_table(method);\n@@ -4457,1 +4434,1 @@\n-  increment_class_counter((InstanceKlass *)the_class, THREAD);\n+  increment_class_counter((InstanceKlass *)the_class);\n@@ -4486,1 +4463,1 @@\n-void VM_RedefineClasses::increment_class_counter(InstanceKlass *ik, TRAPS) {\n+void VM_RedefineClasses::increment_class_counter(InstanceKlass *ik) {\n@@ -4503,1 +4480,1 @@\n-      increment_class_counter(subik, THREAD);\n+      increment_class_counter(subik);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":91,"deletions":114,"binary":false,"changes":205,"status":"modified"},{"patch":"@@ -432,1 +432,1 @@\n-  void increment_class_counter(InstanceKlass *ik, TRAPS);\n+  void increment_class_counter(InstanceKlass *ik);\n@@ -436,1 +436,1 @@\n-    constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS);\n+    constantPoolHandle *merge_cp_p, int *merge_cp_length_p);\n@@ -438,1 +438,1 @@\n-    constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS);\n+    constantPoolHandle *merge_cp_p, int *merge_cp_length_p);\n@@ -441,1 +441,1 @@\n-    constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS);\n+    constantPoolHandle *merge_cp_p, int *merge_cp_length_p);\n@@ -443,1 +443,1 @@\n-    constantPoolHandle *merge_cp_p, int *merge_cp_length_p, TRAPS);\n+    constantPoolHandle *merge_cp_p, int *merge_cp_length_p);\n@@ -457,1 +457,1 @@\n-    const char * trace_mesg, TRAPS);\n+    const char * trace_mesg);\n@@ -460,1 +460,1 @@\n-    AnnotationArray* class_annotations, int &byte_i_ref, TRAPS);\n+    AnnotationArray* class_annotations, int &byte_i_ref);\n@@ -462,3 +462,2 @@\n-    AnnotationArray* annotations_typeArray, int &byte_i_ref, TRAPS);\n-  bool rewrite_cp_refs_in_class_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n+    AnnotationArray* annotations_typeArray, int &byte_i_ref);\n+  bool rewrite_cp_refs_in_class_annotations(InstanceKlass* scratch_class);\n@@ -466,1 +465,1 @@\n-    AnnotationArray* class_annotations, int &byte_i_ref, TRAPS);\n+    AnnotationArray* class_annotations, int &byte_i_ref);\n@@ -469,1 +468,1 @@\n-    const char * location_mesg, TRAPS);\n+    const char * location_mesg);\n@@ -472,1 +471,1 @@\n-    const char * location_mesg, TRAPS);\n+    const char * location_mesg);\n@@ -475,1 +474,1 @@\n-    const char * location_mesg, TRAPS);\n+    const char * location_mesg);\n@@ -477,3 +476,2 @@\n-    AnnotationArray* type_annotations_typeArray, int &byte_i_ref, TRAPS);\n-  bool rewrite_cp_refs_in_fields_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n+    AnnotationArray* type_annotations_typeArray, int &byte_i_ref);\n+  bool rewrite_cp_refs_in_fields_annotations(InstanceKlass* scratch_class);\n@@ -481,1 +479,1 @@\n-  bool rewrite_cp_refs_in_record_attribute(InstanceKlass* scratch_class, TRAPS);\n+  bool rewrite_cp_refs_in_record_attribute(InstanceKlass* scratch_class);\n@@ -483,0 +481,1 @@\n+\n@@ -486,13 +485,9 @@\n-  bool rewrite_cp_refs_in_methods_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_methods_default_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_methods_parameter_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_class_type_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_fields_type_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  bool rewrite_cp_refs_in_methods_type_annotations(\n-    InstanceKlass* scratch_class, TRAPS);\n-  void rewrite_cp_refs_in_stack_map_table(const methodHandle& method, TRAPS);\n+\n+  bool rewrite_cp_refs_in_methods_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_methods_default_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_methods_parameter_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_class_type_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_fields_type_annotations(InstanceKlass* scratch_class);\n+  bool rewrite_cp_refs_in_methods_type_annotations(InstanceKlass* scratch_class);\n+\n+  void rewrite_cp_refs_in_stack_map_table(const methodHandle& method);\n@@ -501,1 +496,1 @@\n-         u1 frame_size, TRAPS);\n+         u1 frame_size);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.hpp","additions":27,"deletions":32,"binary":false,"changes":59,"status":"modified"}]}