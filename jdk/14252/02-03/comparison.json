{"files":[{"patch":"@@ -45,3 +45,2 @@\n-     private static final String VALID = \"https:\/\/ssltest-active.actalis.it\/\";\n-     private static final String REVOKED = \"https:\/\/ssltest-revoked.actalis.it\/\";\n-     private static final String CA_ALIAS = \"actalisauthenticationrootca [jdk]\";\n+    public static void main(String[] args) throws Exception {\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -49,15 +48,6 @@\n-     public static void main(String[] args) throws Exception {\n-\n-         if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-             ValidatePathWithURL.enableCRLOnly();\n-         } else {\n-             \/\/ OCSP check by default\n-             ValidatePathWithURL.enableOCSPOnly();\n-         }\n-\n-         ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-         validatePathWithURL.validateDomain(VALID, false);\n-         validatePathWithURL.validateDomain(REVOKED, true);\n-     }\n-}\n+        \/\/ CN=Actalis Authentication Root CA, O=Actalis S.p.A.\/03358520967, L=Milan, C=IT\n+        caInterop.validate(\"actalisauthenticationrootca [jdk]\",\n+                \"https:\/\/ssltest-active.actalis.it\/\",\n+                \"https:\/\/ssltest-revoked.actalis.it\/\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/ActalisCA.java","additions":8,"deletions":18,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-\n@@ -53,39 +52,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n-\n-        new AmazonCA_1().runTest();\n-        new AmazonCA_2().runTest();\n-        new AmazonCA_3().runTest();\n-        new AmazonCA_4().runTest();\n-    }\n-}\n-\n-class AmazonCA_1 {\n-    private static final String VALID = \"https:\/\/valid.rootca1.demo.amazontrust.com\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.rootca1.demo.amazontrust.com\/\";\n-    private static final String CA_ALIAS = \"amazonrootca1 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class AmazonCA_2 {\n-    private static final String VALID = \"https:\/\/valid.rootca2.demo.amazontrust.com\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.rootca2.demo.amazontrust.com\/\";\n-    private static final String CA_ALIAS = \"amazonrootca2 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -93,12 +54,4 @@\n-class AmazonCA_3 {\n-    private static final String VALID = \"https:\/\/valid.rootca3.demo.amazontrust.com\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.rootca3.demo.amazontrust.com\/\";\n-    private static final String CA_ALIAS = \"amazonrootca3 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n+        \/\/ CN=Amazon Root CA 1, O=Amazon, C=US\n+        caInterop.validate(\"amazonrootca1 [jdk]\",\n+                \"https:\/\/valid.rootca1.demo.amazontrust.com\/\",\n+                \"https:\/\/revoked.rootca1.demo.amazontrust.com\/\");\n@@ -106,4 +59,4 @@\n-class AmazonCA_4 {\n-    private static final String VALID = \"https:\/\/valid.rootca4.demo.amazontrust.com\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.rootca4.demo.amazontrust.com\/\";\n-    private static final String CA_ALIAS = \"amazonrootca4 [jdk]\";\n+        \/\/ CN=Amazon Root CA 2, O=Amazon, C=US\n+        caInterop.validate(\"amazonrootca2 [jdk]\",\n+                \"https:\/\/valid.rootca2.demo.amazontrust.com\/\",\n+                \"https:\/\/revoked.rootca2.demo.amazontrust.com\/\");\n@@ -111,2 +64,4 @@\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+        \/\/ CN=Amazon Root CA 3, O=Amazon, C=US\n+        caInterop.validate(\"amazonrootca3 [jdk]\",\n+                \"https:\/\/valid.rootca3.demo.amazontrust.com\/\",\n+                \"https:\/\/revoked.rootca3.demo.amazontrust.com\/\");\n@@ -114,2 +69,4 @@\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        \/\/ CN=Amazon Root CA 4, O=Amazon, C=US\n+        caInterop.validate(\"amazonrootca4 [jdk]\",\n+                \"https:\/\/valid.rootca4.demo.amazontrust.com\/\",\n+                \"https:\/\/revoked.rootca4.demo.amazontrust.com\/\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/AmazonCA.java","additions":17,"deletions":60,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -48,6 +48,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -55,31 +50,4 @@\n-        new BuypassClass2().runTest();\n-        new BuypassClass3().runTest();\n-    }\n-}\n-\n-class BuypassClass2 {\n-    private static final String VALID_BUSINESS = \"https:\/\/valid.business.ca22.ssl.buypass.no\";\n-    private static final String REVOKED_BUSINESS = \"https:\/\/revoked.business.ca22.ssl.buypass.no\";\n-    private static final String VALID_DOMAIN = \"https:\/\/valid.domain.ca22.ssl.buypass.no\";\n-    private static final String REVOKED_DOMAIN = \"https:\/\/revoked.domain.ca22.ssl.buypass.no\";\n-    private static final String CA_ALIAS = \"buypassclass2ca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID_BUSINESS, false);\n-        validatePathWithURL.validateDomain(REVOKED_BUSINESS, true);\n-\n-        validatePathWithURL.validateDomain(VALID_DOMAIN, false);\n-        validatePathWithURL.validateDomain(REVOKED_DOMAIN, true);\n-    }\n-}\n-\n-class BuypassClass3 {\n-    private static final String VALID_QC = \"https:\/\/valid.qcevident.ca23.ssl.buypass.no\";\n-    private static final String REVOKED_QC = \"https:\/\/revoked.qcevident.ca23.ssl.buypass.no\";\n-    private static final String VALID_EVIDENT = \"https:\/\/valid.evident.ca23.ssl.buypass.no\";\n-    private static final String REVOKED_EVIDENT = \"https:\/\/revoked.evident.ca23.ssl.buypass.no\";\n-    private static final String VALID_BUSINESSPLUS = \"https:\/\/valid.businessplus.ca23.ssl.buypass.no\";\n-    private static final String REVOKED_BUSINESSPLUS = \"https:\/\/revoked.businessplus.ca23.ssl.buypass.no\";\n-    private static final String CA_ALIAS = \"buypassclass3ca [jdk]\";\n+        \/\/ CN=Buypass Class 2 Root CA, O=Buypass AS-983163327, C=NO\n+        caInterop.validate(\"buypassclass2ca [jdk]\",\n+                \"https:\/\/valid.business.ca22.ssl.buypass.no\",\n+                \"https:\/\/revoked.business.ca22.ssl.buypass.no\");\n@@ -87,2 +55,3 @@\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+        caInterop.validate(\"buypassclass2ca [jdk]\",\n+                \"https:\/\/valid.domain.ca22.ssl.buypass.no\",\n+                \"https:\/\/revoked.domain.ca22.ssl.buypass.no\");\n@@ -90,2 +59,4 @@\n-        validatePathWithURL.validateDomain(VALID_QC, false);\n-        validatePathWithURL.validateDomain(REVOKED_QC, true);\n+        \/\/ CN=Buypass Class 3 Root CA, O=Buypass AS-983163327, C=NO\n+        caInterop.validate(\"buypassclass3ca [jdk]\",\n+                \"https:\/\/valid.qcevident.ca23.ssl.buypass.no\",\n+                \"https:\/\/revoked.qcevident.ca23.ssl.buypass.no\");\n@@ -93,2 +64,3 @@\n-        validatePathWithURL.validateDomain(VALID_EVIDENT, false);\n-        validatePathWithURL.validateDomain(REVOKED_EVIDENT, true);\n+        caInterop.validate(\"buypassclass3ca [jdk]\",\n+                \"https:\/\/valid.evident.ca23.ssl.buypass.no\",\n+                \"https:\/\/revoked.evident.ca23.ssl.buypass.no\");\n@@ -96,2 +68,3 @@\n-        validatePathWithURL.validateDomain(VALID_BUSINESSPLUS, false);\n-        validatePathWithURL.validateDomain(REVOKED_BUSINESSPLUS, true);\n+        caInterop.validate(\"buypassclass3ca [jdk]\",\n+                \"https:\/\/valid.businessplus.ca23.ssl.buypass.n\",\n+                \"https:\/\/revoked.businessplus.ca23.ssl.buypass.no\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/BuypassCA.java","additions":18,"deletions":45,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+public final class CAInterop {\n+    \/**\n+     * Constructor for interoperability test with third party CA.\n+     * @param revocationMode revocation checking mode to use\n+     *\/\n+    public CAInterop(String revocationMode){\n+        if (\"CRL\".equalsIgnoreCase(revocationMode)) {\n+            ValidatePathWithURL.enableCRLOnly();\n+        } if (\"OCSP\".equalsIgnoreCase(revocationMode)) {\n+            ValidatePathWithURL.enableOCSPOnly();\n+        }else {\n+            \/\/ OCSP and CRL check by default\n+            ValidatePathWithURL.enableOCSPAndCRL();\n+        }\n+    }\n+\n+    \/**\n+     * Validates provided URLs using <code>HttpsURLConnection<\/code> making sure they\n+     * anchor to the root CA found in <code>cacerts<\/code> using provided alias.\n+     * @param caAlias CA alis from <code>cacerts<\/code> file\n+     * @param validCert valid test URL\n+     * @param revokedCert revoked test URL\n+     * @throws Exception thrown when certificate can't be validated as valid or revoked\n+     *\/\n+    public void validate(String caAlias,\n+                                String validCert,\n+                                String revokedCert) throws Exception {\n+\n+        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(caAlias);\n+\n+        if (validCert != null) {\n+            validatePathWithURL.validateDomain(validCert, false);\n+        }\n+\n+        if (revokedCert != null) {\n+            validatePathWithURL.validateDomain(revokedCert, true);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/CAInterop.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -50,63 +50,21 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n-\n-        new ComodoRSA().runTest();\n-        new ComodoECC().runTest();\n-        new ComodoUserTrustRSA().runTest();\n-        new ComodoUserTrustECC().runTest();\n-    }\n-}\n-\n-class ComodoRSA {\n-    private static final String VALID = \"https:\/\/comodorsacertificationauthority-ev.comodoca.com\";\n-    private static final String REVOKED = \"https:\/\/comodorsacertificationauthority-ev.comodoca.com:444\";\n-    private static final String CA_ALIAS = \"comodorsaca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class ComodoECC {\n-    private static final String VALID = \"https:\/\/comodoecccertificationauthority-ev.comodoca.com\";\n-    private static final String REVOKED = \"https:\/\/comodoecccertificationauthority-ev.comodoca.com:444\";\n-    private static final String CA_ALIAS = \"comodoeccca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class ComodoUserTrustRSA {\n-    private static final String VALID = \"https:\/\/usertrustrsacertificationauthority-ev.comodoca.com\";\n-    private static final String REVOKED = \"https:\/\/usertrustrsacertificationauthority-ev.comodoca.com:444\";\n-    private static final String CA_ALIAS = \"usertrustrsaca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class ComodoUserTrustECC {\n-    private static final String VALID = \"https:\/\/usertrustecccertificationauthority-ev.comodoca.com\";\n-    private static final String REVOKED = \"https:\/\/usertrustecccertificationauthority-ev.comodoca.com:444\";\n-    private static final String CA_ALIAS = \"usertrusteccca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        CAInterop caInterop = new CAInterop(args[0]);\n+\n+        \/\/ CN=COMODO RSA Certification Authority, O=COMODO CA Limited, L=Salford, ST=Greater Manchester, C=GB\n+        caInterop.validate(\"comodorsaca [jdk]\",\n+                \"https:\/\/comodorsacertificationauthority-ev.comodoca.com\",\n+                \"https:\/\/comodorsacertificationauthority-ev.comodoca.com:444\");\n+\n+        \/\/ CN=COMODO ECC Certification Authority, O=COMODO CA Limited, L=Salford, ST=Greater Manchester, C=GB\n+        caInterop.validate(\"comodoeccca [jdk]\",\n+                \"https:\/\/comodoecccertificationauthority-ev.comodoca.com\",\n+                \"https:\/\/comodoecccertificationauthority-ev.comodoca.com:444\");\n+\n+        \/\/ CN=USERTrust RSA Certification Authority, O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US\n+        caInterop.validate(\"usertrustrsaca [jdk]\",\n+                \"https:\/\/usertrustrsacertificationauthority-ev.comodoca.com\",\n+                \"https:\/\/usertrustrsacertificationauthority-ev.comodoca.com:444\");\n+\n+        \/\/ CN=USERTrust ECC Certification Authority, O=The USERTRUST Network, L=Jersey City, ST=New Jersey, C=US\n+        caInterop.validate(\"usertrusteccca [jdk]\",\n+                \"https:\/\/usertrustecccertificationauthority-ev.comodoca.com\",\n+                \"https:\/\/usertrustecccertificationauthority-ev.comodoca.com:444\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/ComodoCA.java","additions":21,"deletions":63,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -48,6 +48,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -55,25 +50,6 @@\n-        new Entrust_ECCA().runTest();\n-        new Entrust_G4().runTest();\n-    }\n-}\n-\n-class Entrust_ECCA {\n-    private static final String VALID = \"https:\/\/validec.entrust.net\";\n-    private static final String REVOKED = \"https:\/\/revokedec.entrust.net\";\n-    private static final String CA_ALIAS = \"entrustrootcaec1 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class Entrust_G4 {\n-    private static final String VALID = \"https:\/\/validg4.entrust.net\";\n-    private static final String REVOKED = \"https:\/\/revokedg4.entrust.net\";\n-    private static final String CA_ALIAS = \"entrustrootcag4 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+        \/\/ CN=Entrust Root Certification Authority - EC1,\n+        \/\/ OU=\"(c) 2012 Entrust, Inc. - for authorized use only\",\n+        \/\/ OU=See www.entrust.net\/legal-terms, O=\"Entrust, Inc.\", C=US\n+        caInterop.validate(\"entrustrootcaec1 [jdk]\",\n+                \"https:\/\/validec.entrust.net\",\n+                \"https:\/\/revokedec.entrust.net\");\n@@ -81,2 +57,6 @@\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        \/\/ CN=Entrust Root Certification Authority - G4,\n+        \/\/ OU=\"(c) 2015 Entrust, Inc. - for authorized use only\",\n+        \/\/ OU=See www.entrust.net\/legal-terms, O=\"Entrust, Inc.\", C=US\n+        caInterop.validate(\"entrustrootcag4 [jdk]\",\n+                \"https:\/\/validg4.entrust.net\",\n+                \"https:\/\/revokedg4.entrust.net\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/EntrustCA.java","additions":13,"deletions":33,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -44,5 +44,0 @@\n-\n-     private static final String VALID = \"https:\/\/valid.r6.roots.globalsign.com\/\";\n-     private static final String REVOKED = \"https:\/\/revoked.r6.roots.globalsign.com\/\";\n-    private static final String CA_ALIAS = \"globalsignrootcar6 [jdk]\";\n-\n@@ -51,6 +46,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -58,4 +48,4 @@\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        \/\/ CN=GlobalSign, O=GlobalSign, OU=GlobalSign Root CA - R6\n+        caInterop.validate(\"globalsignrootcar6 [jdk]\",\n+                \"https:\/\/valid.r6.roots.globalsign.com\",\n+                \"https:\/\/revoked.r6.roots.globalsign.com\");\n@@ -64,1 +54,0 @@\n-\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/GlobalSignR6CA.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -47,22 +47,13 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n-\n-        new GoDaddyGdig2().runTest();\n-        new GoDaddySfig2().runTest();\n-    }\n-}\n-\n-class GoDaddyGdig2 {\n-    private static final String VALID = \"https:\/\/valid.gdig2.catest.godaddy.com\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.gdig2.catest.godaddy.com\/\";\n-    private static final String CA_ALIAS = \"godaddyrootg2ca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        CAInterop caInterop = new CAInterop(args[0]);\n+\n+        \/\/ CN=Go Daddy Root Certificate Authority - G2, O=\"GoDaddy.com, Inc.\",\n+        \/\/ L=Scottsdale, ST=Arizona, C=US\n+        caInterop.validate(\"godaddyrootg2ca [jdk]\",\n+                \"https:\/\/valid.gdig2.catest.godaddy.com\",\n+                \"https:\/\/revoked.gdig2.catest.godaddy.com\");\n+\n+        \/\/ CN=Starfield Root Certificate Authority - G2, O=\"Starfield Technologies, Inc.\",\n+        \/\/ L=Scottsdale, ST=Arizona, C=US\n+        caInterop.validate(\"starfieldrootg2ca [jdk]\",\n+                \"https:\/\/valid.sfig2.catest.starfieldtech.com\",\n+                \"https:\/\/revoked.sfig2.catest.starfieldtech.com\");\n@@ -71,14 +62,0 @@\n-\n-class GoDaddySfig2 {\n-    private static final String VALID = \"https:\/\/valid.sfig2.catest.starfieldtech.com\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.sfig2.catest.starfieldtech.com\/\";\n-    private static final String CA_ALIAS = \"starfieldrootg2ca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/GoDaddyCA.java","additions":13,"deletions":36,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -53,77 +53,26 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n-\n-        new GoogleGSR4().runTest();\n-        new GoogleGTSR1().runTest();\n-        new GoogleGTSR2().runTest();\n-        new GoogleGTSR3().runTest();\n-        new GoogleGTSR4().runTest();\n-    }\n-}\n-\n-class GoogleGSR4 {\n-    private static final String VALID = \"https:\/\/good.gsr4.demo.pki.goog\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.gsr4.demo.pki.goog\/\";\n-    private static final String CA_ALIAS = \"globalsigneccrootcar4 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class GoogleGTSR1 {\n-    private static final String VALID = \"https:\/\/good.gtsr1.demo.pki.goog\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.gtsr1.demo.pki.goog\/\";\n-    private static final String CA_ALIAS = \"gtsrootcar1 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class GoogleGTSR2 {\n-    private static final String VALID = \"https:\/\/good.gtsr2.demo.pki.goog\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.gtsr2.demo.pki.goog\/\";\n-    private static final String CA_ALIAS = \"gtsrootcar2 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class GoogleGTSR3 {\n-    private static final String VALID = \"https:\/\/good.gtsr3.demo.pki.goog\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.gtsr3.demo.pki.goog\/\";\n-    private static final String CA_ALIAS = \"gtsrootecccar3 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class GoogleGTSR4 {\n-    private static final String VALID = \"https:\/\/good.gtsr4.demo.pki.goog\/\";\n-    private static final String REVOKED = \"https:\/\/revoked.gtsr4.demo.pki.goog\/\";\n-    private static final String CA_ALIAS = \"gtsrootecccar4 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        CAInterop caInterop = new CAInterop(args[0]);\n+\n+        \/\/ CN=GlobalSign, O=GlobalSign, OU=GlobalSign ECC Root CA - R4\n+        caInterop.validate(\"globalsigneccrootcar4 [jdk]\",\n+                \"https:\/\/good.gsr4.demo.pki.goog\",\n+                \"https:\/\/revoked.gsr4.demo.pki.goog\");\n+\n+        \/\/ CN=GTS Root R1, O=Google Trust Services LLC, C=US\n+        caInterop.validate(\"gtsrootcar1 [jdk]\",\n+                \"https:\/\/good.gtsr1.demo.pki.goog\",\n+                \"https:\/\/revoked.gtsr1.demo.pki.goog\");\n+\n+        \/\/ CN=GTS Root R2, O=Google Trust Services LLC, C=US\n+        caInterop.validate(\"gtsrootcar2 [jdk]\",\n+                \"https:\/\/good.gtsr2.demo.pki.goog\",\n+                \"https:\/\/revoked.gtsr2.demo.pki.goog\");\n+\n+        \/\/ CN=GTS Root R3, O=Google Trust Services LLC, C=US\n+        caInterop.validate(\"gtsrootecccar3 [jdk]\",\n+                \"https:\/\/good.gtsr3.demo.pki.goog\",\n+                \"https:\/\/revoked.gtsr3.demo.pki.goog\");\n+\n+        \/\/ CN=GTS Root R4, O=Google Trust Services LLC, C=US\n+        caInterop.validate(\"gtsrootecccar4 [jdk]\",\n+                \"https:\/\/good.gtsr4.demo.pki.goog\",\n+                \"https:\/\/revoked.gtsr4.demo.pki.goog\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/GoogleCA.java","additions":26,"deletions":77,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -35,4 +35,0 @@\n-     private static final String VALID = \"https:\/\/valid-isrgrootx1.letsencrypt.org\/\";\n-     private static final String REVOKED = \"https:\/\/revoked-isrgrootx1.letsencrypt.org\/\";\n-    private static final String CA_ALIAS = \"letsencryptisrgx1 [jdk]\";\n-\n@@ -41,10 +37,1 @@\n-         if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-             ValidatePathWithURL.enableCRLOnly();\n-         } if (args.length >= 1 && \"OCSP\".equalsIgnoreCase(args[0])){\n-             ValidatePathWithURL.enableOCSPOnly();\n-         } else {\n-             \/\/ EE certs don't have CRLs, intermediate cert doesn't specify OCSP responder\n-             ValidatePathWithURL.enableOCSPAndCRL();\n-         }\n-\n-         ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+         CAInterop caInterop = new CAInterop(args[0]);\n@@ -52,2 +39,4 @@\n-         validatePathWithURL.validateDomain(VALID, false);\n-         validatePathWithURL.validateDomain(REVOKED, true);\n+         \/\/ CN=ISRG Root X1, O=Internet Security Research Group, C=US\n+         caInterop.validate(\"letsencryptisrgx1 [jdk]\",\n+                 \"https:\/\/valid-isrgrootx1.letsencrypt.org\",\n+                 \"https:\/\/revoked-isrgrootx1.letsencrypt.org\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/LetsEncryptCA.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -48,6 +48,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -55,25 +50,4 @@\n-        new MicrosoftECCTLS().runTest();\n-        new MicrosoftRSATLS().runTest();\n-    }\n-}\n-\n-class MicrosoftECCTLS {\n-    private static final String VALID = \"https:\/\/acteccroot2017.pki.microsoft.com\/\";\n-    private static final String REVOKED = \"https:\/\/rvkeccroot2017.pki.microsoft.com\/\";\n-    private static final String CA_ALIAS = \"microsoftecc2017 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class MicrosoftRSATLS {\n-    private static final String VALID = \"https:\/\/actrsaroot2017.pki.microsoft.com\/\";\n-    private static final String REVOKED = \"https:\/\/rvkrsaroot2017.pki.microsoft.com\/\";\n-    private static final String CA_ALIAS = \"microsoftrsa2017 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+        \/\/ CN=Microsoft ECC Root Certificate Authority 2017, O=Microsoft Corporation, C=US\n+        caInterop.validate(\"microsoftecc2017 [jdk]\",\n+                \"https:\/\/acteccroot2017.pki.microsoft.com\",\n+                \"https:\/\/rvkeccroot2017.pki.microsoft.com\");\n@@ -81,2 +55,4 @@\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        \/\/ CN=Microsoft RSA Root Certificate Authority 2017, O=Microsoft Corporation, C=US\n+        caInterop.validate(\"microsoftrsa2017 [jdk]\",\n+                \"https:\/\/actrsaroot2017.pki.microsoft.com\",\n+                \"https:\/\/rvkrsaroot2017.pki.microsoft.com\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/MicrosoftTLS.java","additions":9,"deletions":33,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -53,6 +53,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -60,36 +55,4 @@\n-        new RootCA1G3().runTest();\n-        new RootCA2G3().runTest();\n-        new RootCA3G3().runTest();\n-    }\n-}\n-\n-class RootCA1G3 {\n-    private static final String VALID = \"https:\/\/quovadis-root-ca-1-g3.chain-demos.digicert.com\/\";\n-    private static final String REVOKED = \"https:\/\/quovadis-root-ca-1-g3-revoked.chain-demos.digicert.com\/\";\n-    private static final String CA_ALIAS = \"quovadisrootca1g3 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class RootCA2G3 {\n-    private static final String VALID = \"https:\/\/quovadis-root-ca-2-g3.chain-demos.digicert.com\";\n-    private static final String REVOKED = \"https:\/\/quovadis-root-ca-2-g3-revoked.chain-demos.digicert.com\";\n-    private static final String CA_ALIAS = \"quovadisrootca2g3 [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class RootCA3G3 {\n-    private static final String VALID = \"https:\/\/quovadis-root-ca-3-g3.chain-demos.digicert.com\";\n-    private static final String REVOKED = \"https:\/\/quovadis-root-ca-3-g3-revoked.chain-demos.digicert.com\";\n-    private static final String CA_ALIAS = \"quovadisrootca3g3 [jdk]\";\n+        \/\/ CN=QuoVadis Root CA 1 G3, O=QuoVadis Limited, C=BM\n+        caInterop.validate(\"quovadisrootca1g3 [jdk]\",\n+                \"https:\/\/quovadis-root-ca-1-g3.chain-demos.digicert.com\",\n+                \"https:\/\/quovadis-root-ca-1-g3-revoked.chain-demos.digicert.com\");\n@@ -97,2 +60,4 @@\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+        \/\/ CN=QuoVadis Root CA 2 G3, O=QuoVadis Limited, C=BM\n+        caInterop.validate(\"quovadisrootca2g3 [jdk]\",\n+                \"https:\/\/quovadis-root-ca-2-g3.chain-demos.digicert.com\",\n+                \"https:\/\/quovadis-root-ca-2-g3-revoked.chain-demos.digicert.com\");\n@@ -100,2 +65,4 @@\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        \/\/ CN=QuoVadis Root CA 3 G3, O=QuoVadis Limited, C=BM\n+        caInterop.validate(\"quovadisrootca3g3 [jdk]\",\n+                \"https:\/\/quovadis-root-ca-3-g3.chain-demos.digicert.com\",\n+                \"https:\/\/quovadis-root-ca-3-g3-revoked.chain-demos.digicert.com\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/QuoVadisCA.java","additions":13,"deletions":46,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -48,6 +48,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -55,36 +50,4 @@\n-        new SSLCA_RSA().runTest();\n-        new SSLCA_EV_RSA().runTest();\n-        new SSLCA_ECC().runTest();\n-    }\n-}\n-\n-class SSLCA_RSA {\n-    private static final String VALID = \"https:\/\/test-dv-rsa.ssl.com\";\n-    private static final String REVOKED = \"https:\/\/revoked-rsa-dv.ssl.com\";\n-    private static final String CA_ALIAS = \"sslrootrsaca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class SSLCA_EV_RSA {\n-    private static final String VALID = \"https:\/\/test-ev-rsa.ssl.com\";\n-    private static final String REVOKED = \"https:\/\/revoked-rsa-ev.ssl.com\";\n-    private static final String CA_ALIAS = \"sslrootevrsaca [jdk]\";\n-\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n-\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n-    }\n-}\n-\n-class SSLCA_ECC {\n-    private static final String VALID = \"https:\/\/test-dv-ecc.ssl.com\";\n-    private static final String REVOKED = \"https:\/\/revoked-ecc-dv.ssl.com\";\n-    private static final String CA_ALIAS = \"sslrooteccca [jdk]\";\n+        \/\/ CN=SSL.com Root Certification Authority RSA, O=SSL Corporation, L=Houston, ST=Texas, C=US\n+        caInterop.validate(\"sslrootrsaca [jdk]\",\n+                \"https:\/\/test-dv-rsa.ssl.com\",\n+                \"https:\/\/revoked-rsa-dv.ssl.com\");\n@@ -92,2 +55,4 @@\n-    public void runTest() throws Exception {\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+        \/\/ CN=SSL.com EV Root Certification Authority RSA R2, O=SSL Corporation, L=Houston, ST=Texas, C=US\n+        caInterop.validate(\"sslrootevrsaca [jdk]\",\n+                \"https:\/\/test-ev-rsa.ssl.com\",\n+                \"https:\/\/revoked-rsa-ev.ssl.com\");\n@@ -95,2 +60,4 @@\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        \/\/ CN=SSL.com Root Certification Authority ECC, O=SSL Corporation, L=Houston, ST=Texas, C=US\n+        caInterop.validate(\"sslrooteccca [jdk]\",\n+                \"https:\/\/test-dv-ecc.ssl.com\",\n+                \"https:\/\/revoked-ecc-dv.ssl.com\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/SSLCA.java","additions":13,"deletions":46,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -45,5 +45,0 @@\n-\n-    private static final String VALID = \"https:\/\/evssldemo6.twca.com.tw\";\n-    private static final String REVOKED = \"https:\/\/evssldemo7.twca.com.tw\";\n-    private static final String CA_ALIAS = \"twcaglobalrootca [jdk]\";\n-\n@@ -52,8 +47,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n-\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -61,2 +49,4 @@\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        \/\/ CN=TWCA Global Root CA, OU=Root CA, O=TAIWAN-CA, C=TW\n+        caInterop.validate(\"twcaglobalrootca [jdk]\",\n+                \"hhttps:\/\/evssldemo6.twca.com.tw\",\n+                \"https:\/\/evssldemo7.twca.com.tw\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/TWCAGlobalCA.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -45,5 +45,0 @@\n-\n-    private static final String VALID = \"https:\/\/juolukka.cover.sonera.net:10443\/\";\n-    private static final String REVOKED = \"https:\/\/juolukka.cover.sonera.net:10444\/\";\n-    private static final String CA_ALIAS = \"teliasonerarootcav1 [jdk]\";\n-\n@@ -52,8 +47,1 @@\n-        if (args.length >= 1 && \"CRL\".equalsIgnoreCase(args[0])) {\n-            ValidatePathWithURL.enableCRLOnly();\n-        } else {\n-            \/\/ OCSP check by default\n-            ValidatePathWithURL.enableOCSPOnly();\n-        }\n-\n-        ValidatePathWithURL validatePathWithURL = new ValidatePathWithURL(CA_ALIAS);\n+        CAInterop caInterop = new CAInterop(args[0]);\n@@ -61,2 +49,4 @@\n-        validatePathWithURL.validateDomain(VALID, false);\n-        validatePathWithURL.validateDomain(REVOKED, true);\n+        \/\/ CN=TeliaSonera Root CA v1, O=TeliaSonera\n+        caInterop.validate(\"teliasonerarootcav1 [jdk]\",\n+                \"https:\/\/juolukka.cover.sonera.net:10443\",\n+                \"https:\/\/juolukka.cover.sonera.net:10444\");\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/TeliaSoneraCA.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -40,0 +40,6 @@\n+    \/**\n+     * Enables the certificate revocation checking and loads the certificate from\n+     * <code>cacerts<\/code> file for give caAlias\n+     * @param caAlias CA alias for CA certificate in <code>cacerts<\/code> file\n+     * @throws Exception when fails to get CA certificate from <code>cacerts<\/code> file\n+     *\/\n@@ -60,0 +66,3 @@\n+    \/**\n+     * Enable revocation checking using OCSP and disables CRL check\n+     *\/\n@@ -65,0 +74,3 @@\n+    \/**\n+     * Enable revocation checking using CRL\n+     *\/\n@@ -69,0 +81,3 @@\n+    \/**\n+     * Enable revocation checking using OCSP or CRL\n+     *\/\n@@ -74,0 +89,8 @@\n+    \/**\n+     * Validates end entity certificate used in provided test URL using\n+     * <code>HttpsURLConnection<\/code>. Validation is skipped on network error or if\n+     * the certificate is expired.\n+     * @param testURL URL to validate\n+     * @param revokedCert if <code>true<\/code> then validate is REVOKED certificate\n+     * @throws Exception on failure to validate certificate\n+     *\/\n@@ -76,2 +99,1 @@\n-            throws CertificateException, NoSuchAlgorithmException, SignatureException,\n-                    InvalidKeyException, NoSuchProviderException {\n+            throws Exception {\n@@ -88,2 +110,1 @@\n-            throws CertificateException, NoSuchAlgorithmException, SignatureException,\n-                    InvalidKeyException, NoSuchProviderException {\n+            throws Exception {\n@@ -101,28 +122,1 @@\n-            X509Certificate interCert = null;\n-\n-            \/\/ fail if there is no intermediate CA or self-signed\n-            if (chain.length < 2) {\n-                throw new RuntimeException(\"Cert chain too short \" + chain.length);\n-            } else {\n-                System.out.println(\"Finding intermediate certificate issued by CA\");\n-                for (Certificate cert: chain){\n-                    if(cert instanceof X509Certificate certificate) {\n-                        System.out.println(\"Checking: \" + certificate.getSubjectX500Principal());\n-                        System.out.println(\"Issuer: \" + certificate.getIssuerX500Principal());\n-                        if (certificate.getIssuerX500Principal().equals(rootPrincipal)){\n-                            interCert = certificate;\n-                            break;\n-                        }\n-                    }\n-                }\n-            }\n-\n-            if (interCert == null){\n-                throw new RuntimeException(\"Intermediate Root CA not found in the chain\");\n-            }\n-\n-            \/\/ validate intermediate CA signed by root CA under test\n-            System.out.println(\"Found intermediate root CA: \" + interCert.getSubjectX500Principal());\n-            System.out.println(\"intermediate CA Issuer: \" + interCert.getIssuerX500Principal());\n-            interCert.verify(rootCertificate.getPublicKey());\n-            System.out.println(\"Verified: Intermediate CA signed by test root CA\");\n+            validateAnchor(chain);\n@@ -166,0 +160,31 @@\n+    private void validateAnchor(Certificate[] chain) throws Exception {\n+        X509Certificate interCert = null;\n+\n+        \/\/ fail if there is no intermediate CA or self-signed\n+        if (chain.length < 2) {\n+            throw new RuntimeException(\"Cert chain too short \" + chain.length);\n+        } else {\n+            System.out.println(\"Finding intermediate certificate issued by CA\");\n+            for (Certificate cert: chain){\n+                if(cert instanceof X509Certificate certificate) {\n+                    System.out.println(\"Checking: \" + certificate.getSubjectX500Principal());\n+                    System.out.println(\"Issuer: \" + certificate.getIssuerX500Principal());\n+                    if (certificate.getIssuerX500Principal().equals(rootPrincipal)){\n+                        interCert = certificate;\n+                        break;\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (interCert == null){\n+            throw new RuntimeException(\"Intermediate Root CA not found in the chain\");\n+        }\n+\n+        \/\/ validate intermediate CA signed by root CA under test\n+        System.out.println(\"Found intermediate root CA: \" + interCert.getSubjectX500Principal());\n+        System.out.println(\"intermediate CA Issuer: \" + interCert.getIssuerX500Principal());\n+        interCert.verify(rootCertificate.getPublicKey());\n+        System.out.println(\"Verified: Intermediate CA signed by test root CA\");\n+    }\n+\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/ValidatePathWithURL.java","additions":57,"deletions":32,"binary":false,"changes":89,"status":"modified"}]}