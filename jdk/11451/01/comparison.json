{"files":[{"patch":"@@ -289,1 +289,1 @@\n-  void do_MemRegion(MemRegion mr);\n+  void do_MemRegion(MemRegion mr) override;\n@@ -333,2 +333,2 @@\n-  virtual void initialize(MemRegion mr, bool clear_space, bool mangle_space);\n-  virtual void clear(bool mangle_space);\n+  void initialize(MemRegion mr, bool clear_space, bool mangle_space) override;\n+  void clear(bool mangle_space) override;\n@@ -375,1 +375,1 @@\n-  virtual void adjust_pointers();\n+  void adjust_pointers() override;\n@@ -441,2 +441,2 @@\n-  virtual void initialize(MemRegion mr, bool clear_space, bool mangle_space);\n-  virtual void clear(bool mangle_space);\n+  void initialize(MemRegion mr, bool clear_space, bool mangle_space) override;\n+  void clear(bool mangle_space) override;\n@@ -463,1 +463,1 @@\n-  void mangle_unused_area() PRODUCT_RETURN;\n+  void mangle_unused_area() override PRODUCT_RETURN;\n@@ -465,1 +465,1 @@\n-  void mangle_unused_area_complete() PRODUCT_RETURN;\n+  void mangle_unused_area_complete() override PRODUCT_RETURN;\n@@ -475,2 +475,2 @@\n-  size_t used() const            { return byte_size(bottom(), top()); }\n-  size_t free() const            { return byte_size(top(),    end()); }\n+  size_t used() const override   { return byte_size(bottom(), top()); }\n+  size_t free() const override   { return byte_size(top(),    end()); }\n@@ -478,1 +478,1 @@\n-  virtual bool is_free_block(const HeapWord* p) const;\n+  bool is_free_block(const HeapWord* p) const override;\n@@ -482,1 +482,1 @@\n-  MemRegion used_region() const { return MemRegion(bottom(), top()); }\n+  MemRegion used_region() const override { return MemRegion(bottom(), top()); }\n@@ -485,2 +485,2 @@\n-  virtual HeapWord* allocate(size_t word_size);\n-  virtual HeapWord* par_allocate(size_t word_size);\n+  HeapWord* allocate(size_t word_size) override;\n+  HeapWord* par_allocate(size_t word_size) override;\n@@ -489,2 +489,2 @@\n-  void oop_iterate(OopIterateClosure* cl);\n-  void object_iterate(ObjectClosure* blk);\n+  void oop_iterate(OopIterateClosure* cl) override;\n+  void object_iterate(ObjectClosure* blk) override;\n@@ -493,1 +493,1 @@\n-  virtual void reset_after_compaction() {\n+  void reset_after_compaction() override {\n@@ -501,1 +501,1 @@\n-                                     HeapWord* boundary);\n+                                     HeapWord* boundary) override;\n@@ -519,2 +519,2 @@\n-  virtual HeapWord* block_start_const(const void* p) const;\n-  size_t block_size(const HeapWord* p) const;\n+  HeapWord* block_start_const(const void* p) const override;\n+  size_t block_size(const HeapWord* p) const override;\n@@ -522,1 +522,1 @@\n-  bool block_is_obj(const HeapWord* p) const { return p < top(); }\n+  bool block_is_obj(const HeapWord* p) const override { return p < top(); }\n@@ -530,1 +530,1 @@\n-  void prepare_for_compaction(CompactPoint* cp);\n+  void prepare_for_compaction(CompactPoint* cp) override;\n@@ -533,1 +533,1 @@\n-  virtual void print_on(outputStream* st) const;\n+  void print_on(outputStream* st) const override;\n@@ -536,1 +536,1 @@\n-  virtual ContiguousSpace* toContiguousSpace() {\n+  ContiguousSpace* toContiguousSpace() override {\n@@ -541,1 +541,1 @@\n-  virtual void verify() const;\n+  void verify() const override;\n@@ -557,1 +557,1 @@\n-                       HeapWord* bottom, HeapWord* top);\n+                       HeapWord* bottom, HeapWord* top) override;\n@@ -559,1 +559,1 @@\n-  HeapWord* get_actual_top(HeapWord* top, HeapWord* top_obj);\n+  HeapWord* get_actual_top(HeapWord* top, HeapWord* top_obj) override;\n@@ -600,2 +600,2 @@\n-  void set_bottom(HeapWord* value);\n-  void set_end(HeapWord* value);\n+  void set_bottom(HeapWord* value) override;\n+  void set_end(HeapWord* value) override;\n@@ -603,1 +603,1 @@\n-  void clear(bool mangle_space);\n+  void clear(bool mangle_space) override;\n@@ -605,1 +605,1 @@\n-  inline HeapWord* block_start_const(const void* p) const;\n+  inline HeapWord* block_start_const(const void* p) const override;\n@@ -608,2 +608,2 @@\n-  virtual inline HeapWord* allocate(size_t word_size);\n-  inline HeapWord* par_allocate(size_t word_size);\n+  inline HeapWord* allocate(size_t word_size) override;\n+  inline HeapWord* par_allocate(size_t word_size) override;\n@@ -612,2 +612,2 @@\n-  virtual void initialize_threshold();\n-  virtual void alloc_block(HeapWord* start, HeapWord* end);\n+  void initialize_threshold() override;\n+  void alloc_block(HeapWord* start, HeapWord* end) override;\n@@ -615,1 +615,1 @@\n-  virtual void print_on(outputStream* st) const;\n+  void print_on(outputStream* st) const override;\n@@ -618,1 +618,1 @@\n-  void verify() const;\n+  void verify() const override;\n@@ -628,1 +628,1 @@\n-  size_t allowed_dead_ratio() const;\n+  size_t allowed_dead_ratio() const override;\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":38,"deletions":38,"binary":false,"changes":76,"status":"modified"}]}