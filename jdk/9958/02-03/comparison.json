{"files":[{"patch":"@@ -224,2 +224,2 @@\n-    private static final int TIMEOUT = 200;\n-    public volatile int SERVER_PORT = 0;\n+    \/\/private static final int TIMEOUT = 200;\n+    private volatile int SERVER_PORT = 0;\n@@ -227,1 +227,1 @@\n-     * isProxySet and serverReady are shared variables between server thread and client thread(main) and it should be set and reset to false for each and\n+     * isProxySet are shared variables between server thread and client thread(main) and it should be set and reset to false for each and\n@@ -232,1 +232,1 @@\n-    private volatile boolean serverReady = false;\n+    \/\/private volatile boolean serverReady = false;\n@@ -263,2 +263,23 @@\n-    private static Logger logger = Logger.getLogger(\"sun.net.www.protocol.http.HttpURLConnection\");\n-    private String[] serverScenarios = {\n+    private static final Logger logger = Logger.getLogger(\"sun.net.www.protocol.http.HttpURLConnection\");\n+    \n+   \/*\n+    * There are 160 scenarios run by this program.\n+    * For every scenario there is mapping between serverScenarios[int],clientScenarios[int] and expectedOutput[int]\n+    *\n+    * serverScenarios[0] clientScenarios[0] expectedOutput[0]\n+    * serverScenarios[1] clientScenarios[1] expectedOutput[1]\n+    * serverScenarios[2] clientScenarios[2] expectedOutput[2]\n+    *\n+    * ...\n+    *\n+    * serverScenarios[159] cientScenarios[159] expectedOutput[159]\n+    *\n+    * whereas serverScenarios[int] is retrieved using getServerScenario(int)\n+    * whereas clientScenarios[int] is retrieved using clientScenario[getClientScenarioNumber[int]]\n+    * and\n+    * expectedOutput[int] is retrieved using expectedOuput[int] directly.\n+    *\n+    *\/\n+   \n+   \/*serverScenarios[int] will be retreived using method getServerScenario(int)*\/\n+   \/* private static final String[] serverScenarios = {\n@@ -275,1 +296,1 @@\n-    };\n+    }; *\/\n@@ -279,1 +300,1 @@\n-    private String[] a = {\n+    private static final String[] a = {\n@@ -287,1 +308,1 @@\n-    private String[] clientScenarios = {\n+   \/* private String[] clientScenarios = {\n@@ -298,0 +319,4 @@\n+    }; *\/\n+\n+    private static final String[] clientScenarios = {\n+        a[0] , a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]\n@@ -299,1 +324,2 @@\n-    private int[] expectedValues = {\n+    \n+    private static final int[] expectedValues = {\n@@ -311,2 +337,36 @@\n-    private CountDownLatch countDownLatch = null;\n-    private void myinit(int scenarioNumber) throws Exception {\n+    \n+    private final CountDownLatch countDownLatch = new CountDownLatch(1);\n+\n+    private final CountDownLatch serverCountDownLatch = new CountDownLatch(1);\n+    \n+    private int getClientScenarioNumber(int scenarioNumber) {\n+        return scenarioNumber % 16 ;\n+    }\n+\n+    private String getServerScenario(int scenarioNumber) {\n+        if(scenarioNumber >= 0 && scenarioNumber <= 15) {\n+            return A;\n+        } else if (scenarioNumber >= 16 && scenarioNumber <= 31){\n+            return B;\n+        } else if (scenarioNumber >= 32 && scenarioNumber <= 47){\n+            return C;\n+        } else if (scenarioNumber >= 48 && scenarioNumber <= 63){\n+            return D;\n+        } else if (scenarioNumber >= 64 && scenarioNumber <= 79){\n+            return E;\n+        } else if (scenarioNumber >= 80 && scenarioNumber <= 95){\n+            return NI;\n+        } else if (scenarioNumber >= 96 && scenarioNumber <= 111){\n+            return F;\n+        } else if (scenarioNumber >= 112 && scenarioNumber <= 127){\n+            return G;\n+        } else if (scenarioNumber >= 128 && scenarioNumber <= 143){\n+            return H;\n+        } else if (scenarioNumber >= 144 && scenarioNumber <= 159) {\n+            return I;\n+        }\n+        \/*Invalid Case*\/\n+        return null;\n+    }\n+    \n+    private void startScenario(int scenarioNumber) throws Exception {\n@@ -314,1 +374,0 @@\n-        countDownLatch = new CountDownLatch(1);\n@@ -317,1 +376,1 @@\n-            countDownLatch = new CountDownLatch(0);\n+            this.countDownLatch.countDown();\n@@ -320,2 +379,2 @@\n-        System.out.println(\"serverScenarios[\" + scenarioNumber + \"]=\" + serverScenarios[scenarioNumber]);\n-        System.out.println(\"clientScenarios[\" + scenarioNumber + \"]=\" + clientScenarios[scenarioNumber]);\n+        System.out.println(\"serverScenarios[\" + scenarioNumber + \"]=\" + getServerScenario(scenarioNumber));\n+        System.out.println(\"clientScenarios[\" + scenarioNumber + \"]=\" + clientScenarios[getClientScenarioNumber(scenarioNumber)]);\n@@ -328,3 +387,3 @@\n-        serverInit(scenarioNumber);\n-        clientInit(scenarioNumber);\n-        serverReady = false;\n+        startServer(scenarioNumber);\n+        runClient(scenarioNumber);\n+        \/\/serverReady = false;\n@@ -332,1 +391,2 @@\n-    private void serverInit(int scenarioNumber) {\n+    \n+    private void startServer(int scenarioNumber) {\n@@ -365,2 +425,2 @@\n-        if (!serverScenarios[scenarioNumber].equalsIgnoreCase(NI)) {\n-            serverScenarioContent = serverScenarios[scenarioNumber] + NEW_LINE;\n+        if (!getServerScenario(scenarioNumber).equalsIgnoreCase(NI)) {\n+            serverScenarioContent = getServerScenario(scenarioNumber) + NEW_LINE;\n@@ -384,1 +444,2 @@\n-            serverReady = true;\n+            \/\/serverReady = true;\n+            this.serverCountDownLatch.countDown();\n@@ -386,1 +447,1 @@\n-                .println(\"SERVER_PORT= \" + SERVER_PORT + \" ServerReady=\" + serverReady + \" isProxySet=\" + isProxySet);\n+                .println(\"SERVER_PORT= \" + SERVER_PORT +\" isProxySet=\" + isProxySet);\n@@ -427,1 +488,1 @@\n-    private void clientInit(int scenarioNumber) throws Exception {\n+    private void runClient(int scenarioNumber) throws Exception {\n@@ -429,1 +490,1 @@\n-            createURLClient(scenarioNumber);\n+            connectToServerURL(scenarioNumber);\n@@ -438,1 +499,1 @@\n-    private void createURLClient(int scenarioNumber) throws Exception {\n+    private void connectToServerURL(int scenarioNumber) throws Exception {\n@@ -455,1 +516,1 @@\n-        if (!clientScenarios[scenarioNumber].equalsIgnoreCase(NI)) {\n+        if (!clientScenarios[getClientScenarioNumber(scenarioNumber)].equalsIgnoreCase(NI)) {\n@@ -457,1 +518,1 @@\n-            for (String clientScenarioString : clientScenarios[scenarioNumber].split(CLIENT_SEPARATOR)) {\n+            for (String clientScenarioString : clientScenarios[getClientScenarioNumber(scenarioNumber)].split(CLIENT_SEPARATOR)) {\n@@ -464,1 +525,0 @@\n-\n@@ -466,3 +526,4 @@\n-        while (!serverReady) {\n-            Thread.sleep(TIMEOUT);\n-        }\n+        \/\/while (!serverReady) {\n+        \/\/    Thread.sleep(TIMEOUT);\n+        \/\/}\n+        this.serverCountDownLatch.await();\n@@ -509,1 +570,0 @@\n-\n@@ -571,1 +631,2 @@\n-        }\n+    }\n+    \n@@ -574,3 +635,1 @@\n-            System.out.println(\"Usage:java KeepAliveTest.java <scenarioNumber>\");\n-            System.out.println(\"e.g.:java KeepAliveTest.java 1\");\n-            System.exit(1);\n+            throw new IllegalArgumentException(\"Usage:java KeepAliveTest.java <scenarioNumber>\");\n@@ -584,1 +643,1 @@\n-            keepAliveTest.myinit(Integer.valueOf(args[0]));\n+            keepAliveTest.startScenario(Integer.valueOf(args[0]));\n@@ -590,1 +649,0 @@\n-\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/KeepAliveTest.java","additions":98,"deletions":40,"binary":false,"changes":138,"status":"modified"}]}