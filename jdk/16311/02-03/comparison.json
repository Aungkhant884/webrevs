{"files":[{"patch":"@@ -532,1 +532,0 @@\n-     * @throws OutOfMemoryError if the runtime does not have the memory needed to create the downcall handle.\n@@ -582,1 +581,0 @@\n-     * @throws OutOfMemoryError if the runtime does not have the memory needed to create the downcall handle.\n@@ -623,1 +621,0 @@\n-     * @throws OutOfMemoryError if the runtime does not have the memory needed to create the upcall stub.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import java.util.function.Consumer;\n-import java.util.stream.Stream;\n@@ -52,6 +50,0 @@\n-    @Test\n-    public void testUDowncallAllocFailure() throws IOException, InterruptedException {\n-        runInNewProcess(DowncallRunner.class, true, List.of(\"-XX:ReservedCodeCacheSize=3M\"), List.of())\n-                .assertSuccess();\n-    }\n-\n@@ -74,28 +66,0 @@\n-\n-    public static class DowncallRunner extends NativeTestHelper {\n-\n-        private static final int MAX_ARITY = 5;\n-\n-        private static void mapper(FunctionDescriptor fd, Consumer<FunctionDescriptor> sink) {\n-            for (MemoryLayout l : List.of(C_INT, C_LONG_LONG, C_DOUBLE, C_FLOAT, C_SHORT)) {\n-                sink.accept(fd.appendArgumentLayouts(l));\n-            }\n-        }\n-\n-        public static void main(String[] args) throws Throwable {\n-            Linker linker = Linker.nativeLinker();\n-            Stream<FunctionDescriptor> stream = Stream.of(FunctionDescriptor.ofVoid());\n-            for (int i = 0; i < MAX_ARITY; i++) {\n-                stream = stream.mapMulti(DowncallRunner::mapper);\n-            }\n-\n-            try {\n-                stream.forEach(linker::downcallHandle);\n-            } catch (OutOfMemoryError e) {\n-                assertTrue(e.getMessage().contains(\"Failed to allocate downcall stub\"));\n-            } catch (VirtualMachineError e) {\n-                \/\/ Other allocation failure when creating MethodHandle. Let it pass\n-                \/\/ The important thing for this test is that we don't see a hard VM crash\n-            }\n-        }\n-    }\n","filename":"test\/jdk\/java\/foreign\/TestStubAllocFailure.java","additions":0,"deletions":36,"binary":false,"changes":36,"status":"modified"}]}