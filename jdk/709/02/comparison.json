{"files":[{"patch":"@@ -1788,0 +1788,2 @@\n+        private final boolean isVarargs;\n+\n@@ -1795,0 +1797,6 @@\n+            \/* it is better to store the original information for this one, instead of relying\n+             * on the info in the type of the symbol. This is because on the presence of APs\n+             * the symbol will be blown out and we won't be able to know if the original\n+             * record component was declared varargs or not.\n+             *\/\n+            this.isVarargs = type.hasTag(TypeTag.ARRAY) && ((ArrayType)type).isVarargs();\n@@ -1800,1 +1808,1 @@\n-            return type.hasTag(TypeTag.ARRAY) && ((ArrayType)type).isVarargs();\n+            return isVarargs;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1675,0 +1675,35 @@\n+\n+    public void testAnnotationsOnVarargsRecComp() {\n+        assertOK(\n+                \"\"\"\n+                import java.lang.annotation.*;\n+\n+                @Target({ElementType.TYPE_USE})\n+                @interface Simple {}\n+\n+                record R(@Simple int... val) {\n+                    static void test() {\n+                        R rec = new R(10, 20);\n+                    }\n+                }\n+                \"\"\"\n+        );\n+        assertOK(\n+                \"\"\"\n+                import java.lang.annotation.*;\n+\n+                @Target({ElementType.TYPE_USE})\n+                @interface SimpleContainer{ Simple[] value(); }\n+\n+                @Repeatable(SimpleContainer.class)\n+                @Target({ElementType.TYPE_USE})\n+                @interface Simple {}\n+\n+                record R(@Simple int... val) {\n+                    static void test() {\n+                        R rec = new R(10, 20);\n+                    }\n+                }\n+                \"\"\"\n+        );\n+    }\n","filename":"test\/langtools\/tools\/javac\/records\/RecordCompilationTests.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"}]}