{"files":[{"patch":"@@ -164,1 +164,1 @@\n-        assertEquals(struct.byteAlignment(), 8);\n+        assertEquals(struct.byteAlignment(), ADDRESS.byteSize());\n@@ -195,1 +195,1 @@\n-        assertEquals(struct.byteAlignment(), 8);\n+        assertEquals(struct.byteAlignment(), ADDRESS.byteSize());\n@@ -367,7 +367,0 @@\n-    @Test\n-    public void testLongDoubleLayoutConstants() {\n-        \/\/ check that alignment of long\/double constants is set to reflect address size\n-        assertEquals(ValueLayout.JAVA_LONG.byteAlignment(), ValueLayout.ADDRESS.byteSize());\n-        assertEquals(ValueLayout.JAVA_DOUBLE.byteAlignment(), ValueLayout.ADDRESS.byteSize());\n-    }\n-\n@@ -441,1 +434,1 @@\n-        for (MemoryLayout l : basicLayouts) {\n+        for (MemoryLayout l : basicLayoutsNoLongDouble) {\n@@ -445,1 +438,1 @@\n-        for (MemoryLayout l : basicLayouts) {\n+        for (MemoryLayout l : basicLayoutsNoLongDouble) {\n@@ -449,2 +442,2 @@\n-        for (MemoryLayout l1 : basicLayouts) {\n-            for (MemoryLayout l2 : basicLayouts) {\n+        for (MemoryLayout l1 : basicLayoutsNoLongDouble) {\n+            for (MemoryLayout l2 : basicLayoutsNoLongDouble) {\n@@ -457,2 +450,2 @@\n-        for (MemoryLayout l1 : basicLayouts) {\n-            for (MemoryLayout l2 : basicLayouts) {\n+        for (MemoryLayout l1 : basicLayoutsNoLongDouble) {\n+            for (MemoryLayout l2 : basicLayoutsNoLongDouble) {\n@@ -499,1 +492,1 @@\n-    static MemoryLayout[] basicLayouts = {\n+    static ValueLayout[] basicLayouts = {\n@@ -508,0 +501,4 @@\n+\n+    static MemoryLayout[] basicLayoutsNoLongDouble = Stream.of(basicLayouts)\n+            .filter(l -> l.carrier() != long.class && l.carrier() != double.class)\n+            .toArray(MemoryLayout[]::new);\n","filename":"test\/jdk\/java\/foreign\/TestLayouts.java","additions":13,"deletions":16,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        testAligned(JAVA_LONG, long.class, Long.SIZE);\n+        testAligned(JAVA_LONG, long.class, Long.SIZE, ADDRESS.bitSize());\n@@ -94,1 +94,1 @@\n-        testAligned(JAVA_DOUBLE, double.class, Double.SIZE);\n+        testAligned(JAVA_DOUBLE, double.class, Double.SIZE, ADDRESS.bitSize());\n@@ -128,0 +128,7 @@\n+    void testAligned(ValueLayout layout,\n+                     Class<?> carrier,\n+                     long bitSize,\n+                     long bitAlignment) {\n+        test(layout, carrier, bitSize, bitAlignment);\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestValueLayouts.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}