{"files":[{"patch":"@@ -2095,0 +2095,28 @@\n+#ifdef __GLIBC__\n+\/\/ For Glibc, print a one-liner with the malloc tunables.\n+\/\/ Most important and popular is MALLOC_ARENA_MAX, but we are\n+\/\/ thorough and print them all.\n+static void print_glibc_malloc_tunables(outputStream* st) {\n+  static const char* var[] = {\n+      \/\/ the new variant\n+      \"GLIBC_TUNABLES\",\n+      \/\/ legacy variants\n+      \"MALLOC_CHECK_\", \"MALLOC_TOP_PAD_\", \"MALLOC_PERTURB_\",\n+      \"MALLOC_MMAP_THRESHOLD_\", \"MALLOC_TRIM_THRESHOLD_\",\n+      \"MALLOC_MMAP_MAX_\", \"MALLOC_ARENA_TEST\", \"MALLOC_ARENA_MAX\",\n+      NULL};\n+  st->print(\"glibc malloc tunables: \");\n+  bool printed = false;\n+  for (int i = 0; var[i] != NULL; i ++) {\n+    const char* const val = ::getenv(var[i]);\n+    if (val != NULL) {\n+      st->print(\"%s%s=%s\", (printed ? \", \" : \"\"), var[i], val);\n+      printed = true;\n+    }\n+  }\n+  if (!printed) {\n+    st->print(\"(default)\");\n+  }\n+}\n+#endif \/\/ __GLIBC__\n+\n@@ -2117,1 +2145,1 @@\n-  \/\/ Print glibc outstanding allocations.\n+  \/\/ Print outstanding allocations.\n@@ -2141,0 +2169,4 @@\n+#ifdef __GLIBC__\n+  print_glibc_malloc_tunables(st);\n+  st->cr();\n+#endif\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"}]}