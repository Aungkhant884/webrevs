{"files":[{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/serial\/serialStringDedup.hpp\"\n+#include \"gc\/serial\/serialStringDedup.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-  MarkSweep::_string_dedup_requests = new (ResourceObj::C_HEAP, mtGC) StringDedup::Requests();\n+  MarkSweep::_string_dedup_requests = new StringDedup::Requests();\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/serial\/serialStringDedup.hpp\"\n+#include \"gc\/serial\/serialStringDedup.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Alibaba Group Holding Limited. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/serial\/serialHeap.hpp\"\n-#include \"gc\/serial\/serialStringDedup.hpp\"\n-#include \"oops\/oop.inline.hpp\"\n-\n-bool SerialStringDedup::is_candidate_from_mark(oop java_string) {\n-  \/\/ Candidate if string is being evacuated from young to old but has not\n-  \/\/ reached the deduplication age threshold, i.e. has not previously been a\n-  \/\/ candidate during its life in the young generation.\n-  return SerialHeap::heap()->young_gen()->is_in_reserved(java_string) &&\n-         StringDedup::is_below_threshold_age(java_string->age());\n-}\n","filename":"src\/hotspot\/share\/gc\/serial\/serialStringDedup.cpp","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -38,1 +38,1 @@\n-  static bool is_candidate_from_mark(oop java_string);\n+  static inline bool is_candidate_from_mark(oop java_string);\n@@ -43,8 +43,2 @@\n-  static bool is_candidate_from_evacuation(oop java_string,\n-                                           bool obj_is_tenured) {\n-    return StringDedup::is_enabled() &&\n-           java_lang_String::is_instance_inlined(java_string) &&\n-           (obj_is_tenured ?\n-            StringDedup::is_below_threshold_age(java_string->age()) :\n-            StringDedup::is_threshold_age(java_string->age()));\n-  }\n+  static inline bool is_candidate_from_evacuation(oop java_string,\n+                                                  bool obj_is_tenured);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialStringDedup.hpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2021, Alibaba Group Holding Limited. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef SHARE_GC_SERIAL_STRINGDEDUP_INLINE_HPP\n+#define SHARE_GC_SERIAL_STRINGDEDUP_INLINE_HPP\n+\n+#include \"gc\/serial\/serialHeap.hpp\"\n+#include \"gc\/serial\/serialStringDedup.hpp\"\n+#include \"classfile\/javaClasses.inline.hpp\"\n+#include \"oops\/oop.inline.hpp\"\n+\n+bool SerialStringDedup::is_candidate_from_mark(oop java_string) {\n+  \/\/ Candidate if string is being evacuated from young to old but has not\n+  \/\/ reached the deduplication age threshold, i.e. has not previously been a\n+  \/\/ candidate during its life in the young generation.\n+  return SerialHeap::heap()->young_gen()->is_in_reserved(java_string) &&\n+         StringDedup::is_below_threshold_age(java_string->age());\n+}\n+\n+bool SerialStringDedup::is_candidate_from_evacuation(oop java_string,\n+                                                     bool obj_is_tenured) {\n+  return StringDedup::is_enabled() &&\n+         java_lang_String::is_instance_inlined(java_string) &&\n+         (obj_is_tenured ?\n+          StringDedup::is_below_threshold_age(java_string->age()) :\n+          StringDedup::is_threshold_age(java_string->age()));\n+}\n+\n+#endif \/\/ SHARE_GC_SERIAL_STRINGDEDUP_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/serial\/serialStringDedup.inline.hpp","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -198,1 +198,1 @@\n-class StringDedup::Requests : public ResourceObj {\n+class StringDedup::Requests : public CHeapObj<mtGC> {\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedup.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}