{"files":[{"patch":"@@ -37,1 +37,1 @@\n-  static inline bool is_candidate_from_mark(oop java_string);\n+  static bool is_candidate_from_mark(oop java_string);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialStringDedup.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"gc\/serial\/serialHeap.hpp\"\n@@ -33,8 +32,0 @@\n-bool SerialStringDedup::is_candidate_from_mark(oop java_string) {\n-  \/\/ Candidate if string is being evacuated from young to old but has not\n-  \/\/ reached the deduplication age threshold, i.e. has not previously been a\n-  \/\/ candidate during its life in the young generation.\n-  return SerialHeap::heap()->young_gen()->is_in_reserved(java_string) &&\n-         StringDedup::is_below_threshold_age(java_string->age());\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/serialStringDedup.inline.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}