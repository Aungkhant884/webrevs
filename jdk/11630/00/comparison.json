{"files":[{"patch":"@@ -1229,1 +1229,1 @@\n-uint ciEnv::compile_id() {\n+int ciEnv::compile_id() {\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -369,1 +369,1 @@\n-  uint compile_id();  \/\/ task()->compile_id()\n+  int compile_id();  \/\/ task()->compile_id()\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -261,1 +261,1 @@\n-static unsigned int  latest_compilation_id   = 0;\n+static int           latest_compilation_id   = 0;\n@@ -662,14 +662,14 @@\n-    unsigned int highest_compilation_id = 0;\n-    size_t       usedSpace     = 0;\n-    size_t       t1Space       = 0;\n-    size_t       t2Space       = 0;\n-    size_t       aliveSpace    = 0;\n-    size_t       disconnSpace  = 0;\n-    size_t       notentrSpace  = 0;\n-    size_t       stubSpace     = 0;\n-    size_t       freeSpace     = 0;\n-    size_t       maxFreeSize   = 0;\n-    HeapBlock*   maxFreeBlock  = NULL;\n-    bool         insane        = false;\n-\n-    unsigned int n_methods     = 0;\n+    int          highest_compilation_id = 0;\n+    size_t       usedSpace              = 0;\n+    size_t       t1Space                = 0;\n+    size_t       t2Space                = 0;\n+    size_t       aliveSpace             = 0;\n+    size_t       disconnSpace           = 0;\n+    size_t       notentrSpace           = 0;\n+    size_t       stubSpace              = 0;\n+    size_t       freeSpace              = 0;\n+    size_t       maxFreeSize            = 0;\n+    HeapBlock*   maxFreeBlock           = NULL;\n+    bool         insane                 = false;\n+\n+    unsigned int n_methods              = 0;\n@@ -682,1 +682,1 @@\n-      unsigned int compile_id = 0;\n+      int compile_id = 0;\n@@ -1962,4 +1962,4 @@\n-      unsigned int age1      = StatArray[ix].t1_age;\n-      unsigned int age2      = StatArray[ix].t2_age;\n-      unsigned int agex      = StatArray[ix].tx_age;\n-      unsigned int age       = age1 > age2 ? age1 : age2;\n+      int age1      = StatArray[ix].t1_age;\n+      int age2      = StatArray[ix].t2_age;\n+      int agex      = StatArray[ix].tx_age;\n+      int age       = age1 > age2 ? age1 : age2;\n@@ -2250,3 +2250,1 @@\n-  unsigned int indicator = 0;\n-  unsigned int age_range = 256;\n-  unsigned int range_beg = latest_compilation_id;\n+  int range_beg = latest_compilation_id;\n@@ -2266,2 +2264,2 @@\n-  unsigned int age_range = 256;\n-  unsigned int range_beg = latest_compilation_id;\n+  int age_range = 256;\n+  int range_beg = latest_compilation_id;\n@@ -2271,1 +2269,1 @@\n-    out->print_cr(\"  %d - %6d to %6d\", indicator, range_beg, latest_compilation_id - latest_compilation_id\/age_range);\n+    out->print_cr(\"  %u - %6d to %6d\", indicator, range_beg, latest_compilation_id - latest_compilation_id\/age_range);\n@@ -2296,1 +2294,1 @@\n-void CodeHeapState::print_age_single(outputStream* out, unsigned int age) {\n+void CodeHeapState::print_age_single(outputStream* out, int age) {\n@@ -2298,1 +2296,1 @@\n-  unsigned int age_range = 256;\n+  int age_range = 256;\n","filename":"src\/hotspot\/share\/code\/codeHeapState.cpp","additions":26,"deletions":28,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  static void print_age_single(outputStream *ast, unsigned int age);\n+  static void print_age_single(outputStream *ast, int age);\n@@ -122,3 +122,3 @@\n-    unsigned int       t1_age;      \/\/ oldest compilation_id of tier1 nMethods.\n-    unsigned int       t2_age;      \/\/ oldest compilation_id of tier2 nMethods.\n-    unsigned int       tx_age;      \/\/ oldest compilation_id of inactive\/not entrant nMethods.\n+    int       t1_age;      \/\/ oldest compilation_id of tier1 nMethods.\n+    int       t2_age;      \/\/ oldest compilation_id of tier2 nMethods.\n+    int       tx_age;      \/\/ oldest compilation_id of inactive\/not entrant nMethods.\n","filename":"src\/hotspot\/share\/code\/codeHeapState.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1569,1 +1569,1 @@\n-uint CompileBroker::assign_compile_id_unlocked(Thread* thread, const methodHandle& method, int osr_bci) {\n+int CompileBroker::assign_compile_id_unlocked(Thread* thread, const methodHandle& method, int osr_bci) {\n@@ -2112,1 +2112,1 @@\n-  uint compile_id = task->compile_id();\n+  int compile_id = task->compile_id();\n@@ -2435,1 +2435,1 @@\n-  uint compile_id = task->compile_id();\n+  int compile_id = task->compile_id();\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-  static uint assign_compile_id_unlocked(Thread* thread, const methodHandle& method, int osr_bci);\n+  static int assign_compile_id_unlocked(Thread* thread, const methodHandle& method, int osr_bci);\n@@ -318,1 +318,1 @@\n-  static uint get_compilation_id() { return _compilation_id; }\n+  static int get_compilation_id() { return _compilation_id; }\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-  uint                 _compile_id;\n+  int                  _compile_id;\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -580,1 +580,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n@@ -594,1 +594,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n@@ -602,1 +602,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n@@ -614,1 +614,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n@@ -640,1 +640,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1069,1 +1069,1 @@\n-  nonstatic_field(CompileTask,                 _compile_id,                                   uint)                                  \\\n+  nonstatic_field(CompileTask,                 _compile_id,                                   int)                                   \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}