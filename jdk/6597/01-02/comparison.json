{"files":[{"patch":"@@ -361,1 +361,1 @@\n-  fr.set_from_anchor();\n+  fr.set_sp_is_trusted();\n@@ -472,2 +472,2 @@\n-  intptr_t* l_sender_sp = (!PreserveFramePointer || _from_anchor) ? unextended_sp() + _cb->frame_size()\n-                                                                  : sender_sp();\n+  intptr_t* l_sender_sp = (!PreserveFramePointer || _sp_is_trusted) ? unextended_sp() + _cb->frame_size()\n+                                                                    : sender_sp();\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -127,1 +127,4 @@\n-  bool _from_anchor;\n+  \/\/ true means _sp value is correct and we can use it to get the sender's sp\n+  \/\/ of the compiled frame, otherwise, _sp value may be invalid and we can use\n+  \/\/ _fp to get the sender's sp if PreserveFramePointer is enabled.\n+  bool _sp_is_trusted;\n@@ -170,1 +173,1 @@\n-  void set_from_anchor() { _from_anchor = true; }\n+  void set_sp_is_trusted() { _sp_is_trusted = true; }\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  _from_anchor = false;\n+  _sp_is_trusted = false;\n@@ -68,1 +68,1 @@\n-  _from_anchor = false;\n+  _sp_is_trusted = false;\n@@ -96,1 +96,1 @@\n-  _from_anchor = false;\n+  _sp_is_trusted = false;\n@@ -128,1 +128,1 @@\n-  _from_anchor = false;\n+  _sp_is_trusted = false;\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  f.set_from_anchor();\n+  f.set_sp_is_trusted();\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/thread_linux_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}