{"files":[{"patch":"@@ -467,3 +467,11 @@\n-  \/\/ we cannot rely upon the last fp having been saved to the thread\n-  \/\/ in C2 code but it will have been pushed onto the stack. so we\n-  \/\/ have to find it relative to the unextended sp\n+  \/\/ When the sp of a compiled frame is correct, we can get the correct sender sp\n+  \/\/ by unextended sp + frame size.\n+  \/\/ For the following two scenarios, the sp of a compiled frame is correct:\n+  \/\/  a) This compiled frame is built from the anchor.\n+  \/\/  b) This compiled frame is built from a callee frame, and the callee frame can\n+  \/\/    calculate its sp correctly.\n+  \/\/\n+  \/\/ For b), if the callee frame is a native code frame (such as leaf call), the sp of\n+  \/\/ the compiled frame cannot be calculated correctly. There is currently no suitable\n+  \/\/ solution to solve this problem perfectly. But when PreserveFramePointer is enabled,\n+  \/\/ we can get the correct sender sp by fp + 2 (that is sender_sp()).\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}