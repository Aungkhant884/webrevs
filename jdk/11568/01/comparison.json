{"files":[{"patch":"@@ -34,0 +34,10 @@\n+\/\/ Diff two counters, express them as signed, with range checks\n+static ssize_t counter_diff(size_t c1, size_t c2) {\n+  assert(c1 <= SSIZE_MAX, \"counter out of range: \" SIZE_FORMAT \".\", c1);\n+  assert(c2 <= SSIZE_MAX, \"counter out of range: \" SIZE_FORMAT \".\", c2);\n+  if (c1 > SSIZE_MAX || c2 > SSIZE_MAX) {\n+    return 0;\n+  }\n+  return c1 - c2;\n+}\n+\n@@ -465,2 +475,3 @@\n-    if (current_count != early_count) {\n-      out->print(\" %+d\", (int)(current_count - early_count));\n+    const ssize_t delta_count = counter_diff(current_count, early_count);\n+    if (delta_count != 0) {\n+      out->print(\" \" SSIZE_PLUS_FORMAT, delta_count);\n@@ -481,2 +492,3 @@\n-  if (current_count != early_count) {\n-    out->print(\" %+d\", (int)(current_count - early_count));\n+  const ssize_t delta_count = counter_diff(current_count, early_count);\n+  if (delta_count != 0) {\n+    out->print(\" \" SSIZE_PLUS_FORMAT, delta_count);\n@@ -554,4 +566,4 @@\n-      int class_count_diff = (int)(_current_baseline.class_count() -\n-        _early_baseline.class_count());\n-      if (_current_baseline.class_count() != _early_baseline.class_count()) {\n-        out->print(\" %+d\", (int)(_current_baseline.class_count() - _early_baseline.class_count()));\n+      const ssize_t class_count_diff =\n+          counter_diff(_current_baseline.class_count(), _early_baseline.class_count());\n+      if (class_count_diff != 0) {\n+        out->print(\" \" SSIZE_PLUS_FORMAT, class_count_diff);\n@@ -562,2 +574,4 @@\n-      if (_current_baseline.instance_class_count() != _early_baseline.instance_class_count()) {\n-        out->print(\" %+d\", (int)(_current_baseline.instance_class_count() - _early_baseline.instance_class_count()));\n+      const ssize_t instance_class_count_diff =\n+          counter_diff(_current_baseline.instance_class_count(), _early_baseline.instance_class_count());\n+      if (instance_class_count_diff != 0) {\n+        out->print(\" \" SSIZE_PLUS_FORMAT, instance_class_count_diff);\n@@ -566,2 +580,4 @@\n-      if (_current_baseline.array_class_count() != _early_baseline.array_class_count()) {\n-        out->print(\" %+d\", (int)(_current_baseline.array_class_count() - _early_baseline.array_class_count()));\n+      const ssize_t array_class_count_diff =\n+          counter_diff(_current_baseline.array_class_count(), _early_baseline.array_class_count());\n+      if (array_class_count_diff != 0) {\n+        out->print(\" \" SSIZE_PLUS_FORMAT, array_class_count_diff);\n@@ -574,2 +590,1 @@\n-      int thread_count_diff = (int)(_current_baseline.thread_count() -\n-          _early_baseline.thread_count());\n+      const ssize_t thread_count_diff = counter_diff(_current_baseline.thread_count(), _early_baseline.thread_count());\n@@ -577,1 +592,1 @@\n-        out->print(\" %+d\", thread_count_diff);\n+        out->print(\" \" SSIZE_PLUS_FORMAT, thread_count_diff);\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":30,"deletions":15,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -133,0 +133,1 @@\n+#define SSIZE_PLUS_FORMAT        \"%+\"         PRIdPTR\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -267,0 +267,7 @@\n+  check_format(SSIZE_FORMAT,           (ssize_t)-123,     \"-123\");\n+  check_format(SSIZE_FORMAT,           (ssize_t)2147483647, \"2147483647\");\n+  check_format(SSIZE_FORMAT,           (ssize_t)-2147483648, \"-2147483648\");\n+  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)123,      \"+123\");\n+  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)-123,     \"-123\");\n+  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)2147483647, \"+2147483647\");\n+  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)-2147483648, \"-2147483648\");\n","filename":"test\/hotspot\/gtest\/utilities\/test_globalDefinitions.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}