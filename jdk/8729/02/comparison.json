{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,4 @@\n+import static java.lang.Double.MIN_EXPONENT;\n+import static java.lang.Double.PRECISION;\n+import static java.lang.Double.SIZE;\n+\n@@ -45,1 +49,1 @@\n-    public static final int SIGNIFICAND_WIDTH   = 53;\n+    public static final int SIGNIFICAND_WIDTH = PRECISION;\n@@ -51,2 +55,2 @@\n-    public static final int     MIN_SUB_EXPONENT = Double.MIN_EXPONENT -\n-                                                   (SIGNIFICAND_WIDTH - 1);\n+    public static final int MIN_SUB_EXPONENT =\n+            MIN_EXPONENT - (SIGNIFICAND_WIDTH - 1); \/\/ -1074\n@@ -57,1 +61,2 @@\n-    public static final int     EXP_BIAS        = 1023;\n+    public static final int EXP_BIAS =\n+            (1 << (SIZE - SIGNIFICAND_WIDTH - 1)) - 1; \/\/ 1023\n@@ -62,1 +67,1 @@\n-    public static final long    SIGN_BIT_MASK   = 0x8000000000000000L;\n+    public static final long SIGN_BIT_MASK = 1L << (SIZE - 1);\n@@ -65,2 +70,1 @@\n-     * Bit mask to isolate the exponent field of a\n-     * {@code double}.\n+     * Bit mask to isolate the exponent field of a {@code double}.\n@@ -68,1 +72,2 @@\n-    public static final long    EXP_BIT_MASK    = 0x7FF0000000000000L;\n+    public static final long EXP_BIT_MASK =\n+            ((1L << (SIZE - SIGNIFICAND_WIDTH)) - 1) << (SIGNIFICAND_WIDTH - 1);\n@@ -71,2 +76,1 @@\n-     * Bit mask to isolate the significand field of a\n-     * {@code double}.\n+     * Bit mask to isolate the significand field of a {@code double}.\n@@ -74,1 +78,1 @@\n-    public static final long    SIGNIF_BIT_MASK = 0x000FFFFFFFFFFFFFL;\n+    public static final long SIGNIF_BIT_MASK = (1L << (SIGNIFICAND_WIDTH - 1)) - 1;\n@@ -80,1 +84,1 @@\n-    public static final long    MAG_BIT_MASK = ~SIGN_BIT_MASK;\n+    public static final long MAG_BIT_MASK = EXP_BIT_MASK | SIGNIF_BIT_MASK;\n@@ -90,1 +94,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/DoubleConsts.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,4 @@\n+import static java.lang.Float.MIN_EXPONENT;\n+import static java.lang.Float.PRECISION;\n+import static java.lang.Float.SIZE;\n+\n@@ -45,1 +49,1 @@\n-    public static final int SIGNIFICAND_WIDTH   = 24;\n+    public static final int SIGNIFICAND_WIDTH = PRECISION;\n@@ -48,2 +52,2 @@\n-     * The exponent the smallest positive {@code float} subnormal\n-     * value would have if it could be normalized.\n+     * The exponent the smallest positive {@code float}\n+     * subnormal value would have if it could be normalized.\n@@ -51,2 +55,2 @@\n-    public static final int     MIN_SUB_EXPONENT = Float.MIN_EXPONENT -\n-                                                   (SIGNIFICAND_WIDTH - 1);\n+    public static final int MIN_SUB_EXPONENT =\n+            MIN_EXPONENT - (SIGNIFICAND_WIDTH - 1); \/\/ -149\n@@ -57,1 +61,2 @@\n-    public static final int     EXP_BIAS        = 127;\n+    public static final int EXP_BIAS =\n+            (1 << (SIZE - SIGNIFICAND_WIDTH - 1)) - 1; \/\/ 127\n@@ -62,1 +67,1 @@\n-    public static final int     SIGN_BIT_MASK   = 0x80000000;\n+    public static final int SIGN_BIT_MASK = 1 << (SIZE - 1);\n@@ -65,2 +70,1 @@\n-     * Bit mask to isolate the exponent field of a\n-     * {@code float}.\n+     * Bit mask to isolate the exponent field of a {@code float}.\n@@ -68,1 +72,2 @@\n-    public static final int     EXP_BIT_MASK    = 0x7F800000;\n+    public static final int EXP_BIT_MASK =\n+            ((1 << (SIZE - SIGNIFICAND_WIDTH)) - 1) << (SIGNIFICAND_WIDTH - 1);\n@@ -71,2 +76,1 @@\n-     * Bit mask to isolate the significand field of a\n-     * {@code float}.\n+     * Bit mask to isolate the significand field of a {@code float}.\n@@ -74,1 +78,1 @@\n-    public static final int     SIGNIF_BIT_MASK = 0x007FFFFF;\n+    public static final int SIGNIF_BIT_MASK = (1 << (SIGNIFICAND_WIDTH - 1)) - 1;\n@@ -80,1 +84,1 @@\n-    public static final int     MAG_BIT_MASK = ~SIGN_BIT_MASK;\n+    public static final int MAG_BIT_MASK = EXP_BIT_MASK | SIGNIF_BIT_MASK;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatConsts.java","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"}]}