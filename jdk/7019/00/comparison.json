{"files":[{"patch":"@@ -2038,1 +2038,1 @@\n-            accept(RPAREN);\n+            accept(RPAREN, tk -> Errors.Expected2(RPAREN, COMMA));\n@@ -2126,1 +2126,1 @@\n-                    args.append(syntaxError(token.pos, Errors.Expected(GT)));\n+                    args.append(syntaxError(token.pos, Errors.Expected2(GT, COMMA)));\n@@ -3382,1 +3382,1 @@\n-            accept(RBRACE);\n+            accept(RBRACE, tk -> Errors.AnnotationMissingElementValue);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -121,0 +121,3 @@\n+compiler.err.annotation.missing.element.value=\\\n+    annotation is missing element value\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8036019\n+ * @summary Insufficient alternatives listed in some errors produced by the parser\n+ * @compile\/fail\/ref=T8036019.out -XDrawDiagnostics T8036019.java\n+ *\/\n+\n+\n+public class T8036019 {\n+    enum E {\n+        E(String value) {  }\n+    }\n+\n+    interface A {}\n+    interface B {}\n+    public class Foo<T> {\n+        Foo<? extends A|B> foo1 = null;\n+    }\n+\n+    @SuppressWarnings({,0})\n+    public class AV {\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8036019.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,10 @@\n+T8036019.java:34:17: compiler.err.expected2: ')', ','\n+T8036019.java:34:23: compiler.err.expected3: ',', '}', ';'\n+T8036019.java:34:25: compiler.err.enum.constant.expected\n+T8036019.java:40:24: compiler.err.expected2: >, ','\n+T8036019.java:40:26: compiler.err.expected: token.identifier\n+T8036019.java:40:32: compiler.err.expected: token.identifier\n+T8036019.java:43:25: compiler.err.annotation.missing.element.value\n+T8036019.java:43:27: compiler.err.expected4: class, interface, enum, record\n+T8036019.java:46:1: compiler.err.expected4: class, interface, enum, record\n+9 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/T8036019.out","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -1,1 +1,1 @@\n-T6967002.java:10:22: compiler.err.expected: ')'\n+T6967002.java:10:22: compiler.err.expected2: ')', ','\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/6967002\/T6967002.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.annotation.missing.element.value\n+\n+@SuppressWarnings({,0})\n+public class AV {\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/AnnotationMissingElementValue.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -1,1 +1,1 @@\n-EnumMembersOrder.java:11:16: compiler.err.expected: ')'\n+EnumMembersOrder.java:11:16: compiler.err.expected2: ')', ','\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumMembersOrder.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T7157165.java:11:20: compiler.err.expected: >\n+T7157165.java:11:20: compiler.err.expected2: >, ','\n","filename":"test\/langtools\/tools\/javac\/parser\/7157165\/T7157165.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-SingleCommaAnnotationValueFail.java:11:12: compiler.err.expected: '}'\n+SingleCommaAnnotationValueFail.java:11:12: compiler.err.annotation.missing.element.value\n","filename":"test\/langtools\/tools\/javac\/parser\/SingleCommaAnnotationValueFail.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}