{"files":[{"patch":"@@ -51,2 +51,0 @@\n-  \/\/ We pad the capacity three times given that the young generation\n-  \/\/ contains three spaces (eden and two survivors).\n@@ -55,3 +53,1 @@\n-                         G1MonitoringSupport::pad_capacity(0, 3) \/* min_capacity *\/,\n-                         G1MonitoringSupport::pad_capacity(max_size, 3),\n-                         G1MonitoringSupport::pad_capacity(0, 3) \/* curr_capacity *\/) {\n+                         0 \/* min_capacity *\/, max_size, 0 \/* curr_capacity *\/) {\n@@ -64,2 +60,1 @@\n-    size_t committed =\n-              G1MonitoringSupport::pad_capacity(_monitoring_support->young_gen_committed(), 3);\n+    size_t committed = _monitoring_support->young_gen_committed();\n@@ -74,3 +69,1 @@\n-                         G1MonitoringSupport::pad_capacity(0) \/* min_capacity *\/,\n-                         G1MonitoringSupport::pad_capacity(max_size),\n-                         G1MonitoringSupport::pad_capacity(0) \/* curr_capacity *\/) {\n+                         0 \/* min_capacity *\/, max_size, 0 \/* curr_capacity *\/) {\n@@ -83,2 +76,1 @@\n-    size_t committed =\n-              G1MonitoringSupport::pad_capacity(_monitoring_support->old_gen_committed());\n+    size_t committed = _monitoring_support->old_gen_committed();\n@@ -148,2 +140,2 @@\n-    pad_capacity(g1h->max_capacity()) \/* max_capacity *\/,\n-    pad_capacity(_old_gen_committed) \/* init_capacity *\/);\n+    g1h->max_capacity() \/* max_capacity *\/,\n+    _old_gen_committed \/* init_capacity *\/);\n@@ -163,2 +155,2 @@\n-    pad_capacity(g1h->max_capacity()) \/* max_capacity *\/,\n-    pad_capacity(_eden_space_committed) \/* init_capacity *\/);\n+    g1h->max_capacity() \/* max_capacity *\/,\n+    _eden_space_committed \/* init_capacity *\/);\n@@ -171,2 +163,2 @@\n-    pad_capacity(0) \/* max_capacity *\/,\n-    pad_capacity(0) \/* init_capacity *\/);\n+    0 \/* max_capacity *\/,\n+    0 \/* init_capacity *\/);\n@@ -184,2 +176,2 @@\n-    pad_capacity(g1h->max_capacity()) \/* max_capacity *\/,\n-    pad_capacity(_survivor_space_committed) \/* init_capacity *\/);\n+    g1h->max_capacity() \/* max_capacity *\/,\n+    _survivor_space_committed \/* init_capacity *\/);\n@@ -299,1 +291,1 @@\n-    _eden_space_counters->update_capacity(pad_capacity(_eden_space_committed));\n+    _eden_space_counters->update_capacity(_eden_space_committed);\n@@ -303,1 +295,1 @@\n-    _to_space_counters->update_capacity(pad_capacity(_survivor_space_committed));\n+    _to_space_counters->update_capacity(_survivor_space_committed);\n@@ -305,1 +297,1 @@\n-    _old_space_counters->update_capacity(pad_capacity(_old_gen_committed));\n+    _old_space_counters->update_capacity(_old_gen_committed);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.cpp","additions":15,"deletions":23,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -195,15 +195,0 @@\n-  \/\/ Unfortunately, the jstat tool assumes that no space has 0\n-  \/\/ capacity. In our case, given that each space is logical, it's\n-  \/\/ possible that no regions will be allocated to it, hence to have 0\n-  \/\/ capacity (e.g., if there are no survivor regions, the survivor\n-  \/\/ space has 0 capacity). The way we deal with this is to always pad\n-  \/\/ each capacity value we report to jstat by a very small amount to\n-  \/\/ make sure that it's never zero. Given that we sometimes have to\n-  \/\/ report a capacity of a generation that contains several spaces\n-  \/\/ (e.g., young gen includes one eden, two survivor spaces), the\n-  \/\/ mult parameter is provided in order to adding the appropriate\n-  \/\/ padding multiple times so that the capacities add up correctly.\n-  static size_t pad_capacity(size_t size_bytes, size_t mult = 1) {\n-    return size_bytes + MinObjAlignmentInBytes * mult;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.hpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"}]}