{"files":[{"patch":"@@ -43,2 +43,2 @@\n-                       size_t curr_capacity)\n-  : GenerationCounters(name, ordinal, spaces, min_capacity,\n+                       size_t curr_capacity) :\n+    GenerationCounters(name, ordinal, spaces, min_capacity,\n@@ -51,7 +51,8 @@\n-  \/\/ We pad the capacity three times given that the young generation\n-  \/\/ contains three spaces (eden and two survivors).\n-  G1YoungGenerationCounters(G1MonitoringSupport* monitoring_support, const char* name, size_t max_size)\n-  : G1GenerationCounters(monitoring_support, name, 0 \/* ordinal *\/, 3 \/* spaces *\/,\n-                         G1MonitoringSupport::pad_capacity(0, 3) \/* min_capacity *\/,\n-                         G1MonitoringSupport::pad_capacity(max_size, 3),\n-                         G1MonitoringSupport::pad_capacity(0, 3) \/* curr_capacity *\/) {\n+  G1YoungGenerationCounters(G1MonitoringSupport* monitoring_support, const char* name, size_t max_size) :\n+    G1GenerationCounters(monitoring_support,\n+                         name,\n+                         0 \/* ordinal *\/,\n+                         3 \/* spaces *\/,\n+                         0 \/* min_capacity *\/,\n+                         max_size,\n+                         0 \/* curr_capacity *\/) {\n@@ -64,2 +65,1 @@\n-    size_t committed =\n-              G1MonitoringSupport::pad_capacity(_monitoring_support->young_gen_committed(), 3);\n+    size_t committed = _monitoring_support->young_gen_committed();\n@@ -72,5 +72,8 @@\n-  G1OldGenerationCounters(G1MonitoringSupport* monitoring_support, const char* name, size_t max_size)\n-  : G1GenerationCounters(monitoring_support, name, 1 \/* ordinal *\/, 1 \/* spaces *\/,\n-                         G1MonitoringSupport::pad_capacity(0) \/* min_capacity *\/,\n-                         G1MonitoringSupport::pad_capacity(max_size),\n-                         G1MonitoringSupport::pad_capacity(0) \/* curr_capacity *\/) {\n+  G1OldGenerationCounters(G1MonitoringSupport* monitoring_support, const char* name, size_t max_size) :\n+    G1GenerationCounters(monitoring_support,\n+                         name,\n+                         1 \/* ordinal *\/,\n+                         1 \/* spaces *\/,\n+                         0 \/* min_capacity *\/,\n+                         max_size,\n+                         0 \/* curr_capacity *\/) {\n@@ -83,2 +86,1 @@\n-    size_t committed =\n-              G1MonitoringSupport::pad_capacity(_monitoring_support->old_gen_committed());\n+    size_t committed = _monitoring_support->old_gen_committed();\n@@ -147,3 +149,3 @@\n-    \"space\", 0 \/* ordinal *\/,\n-    pad_capacity(g1h->max_capacity()) \/* max_capacity *\/,\n-    pad_capacity(_old_gen_committed) \/* init_capacity *\/);\n+                                           \"space\", 0 \/* ordinal *\/,\n+                                           g1h->max_capacity() \/* max_capacity *\/,\n+                                           _old_gen_committed \/* init_capacity *\/);\n@@ -162,3 +164,3 @@\n-    \"eden\", 0 \/* ordinal *\/,\n-    pad_capacity(g1h->max_capacity()) \/* max_capacity *\/,\n-    pad_capacity(_eden_space_committed) \/* init_capacity *\/);\n+                                            \"eden\", 0 \/* ordinal *\/,\n+                                            g1h->max_capacity() \/* max_capacity *\/,\n+                                            _eden_space_committed \/* init_capacity *\/);\n@@ -170,3 +172,3 @@\n-    \"s0\", 1 \/* ordinal *\/,\n-    pad_capacity(0) \/* max_capacity *\/,\n-    pad_capacity(0) \/* init_capacity *\/);\n+                                            \"s0\", 1 \/* ordinal *\/,\n+                                            0 \/* max_capacity *\/,\n+                                            0 \/* init_capacity *\/);\n@@ -183,3 +185,3 @@\n-    \"s1\", 2 \/* ordinal *\/,\n-    pad_capacity(g1h->max_capacity()) \/* max_capacity *\/,\n-    pad_capacity(_survivor_space_committed) \/* init_capacity *\/);\n+                                          \"s1\", 2 \/* ordinal *\/,\n+                                          g1h->max_capacity() \/* max_capacity *\/,\n+                                          _survivor_space_committed \/* init_capacity *\/);\n@@ -299,1 +301,1 @@\n-    _eden_space_counters->update_capacity(pad_capacity(_eden_space_committed));\n+    _eden_space_counters->update_capacity(_eden_space_committed);\n@@ -303,1 +305,1 @@\n-    _to_space_counters->update_capacity(pad_capacity(_survivor_space_committed));\n+    _to_space_counters->update_capacity(_survivor_space_committed);\n@@ -305,1 +307,1 @@\n-    _old_space_counters->update_capacity(pad_capacity(_old_gen_committed));\n+    _old_space_counters->update_capacity(_old_gen_committed);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.cpp","additions":35,"deletions":33,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -195,15 +195,0 @@\n-  \/\/ Unfortunately, the jstat tool assumes that no space has 0\n-  \/\/ capacity. In our case, given that each space is logical, it's\n-  \/\/ possible that no regions will be allocated to it, hence to have 0\n-  \/\/ capacity (e.g., if there are no survivor regions, the survivor\n-  \/\/ space has 0 capacity). The way we deal with this is to always pad\n-  \/\/ each capacity value we report to jstat by a very small amount to\n-  \/\/ make sure that it's never zero. Given that we sometimes have to\n-  \/\/ report a capacity of a generation that contains several spaces\n-  \/\/ (e.g., young gen includes one eden, two survivor spaces), the\n-  \/\/ mult parameter is provided in order to adding the appropriate\n-  \/\/ padding multiple times so that the capacities add up correctly.\n-  static size_t pad_capacity(size_t size_bytes, size_t mult = 1) {\n-    return size_bytes + MinObjAlignmentInBytes * mult;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.hpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"}]}