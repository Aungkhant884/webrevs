{"files":[{"patch":"@@ -40,1 +40,0 @@\n-import sun.security.jca.JCAUtil;\n@@ -348,1 +347,0 @@\n-            JCAUtil.tryCommitCertEvent(cert);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/CertAndKeyGen.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,3 +69,3 @@\n-            \/\/ most interested in just detecting this cert being recorded\n-            \/\/ Root CA certs get loaded by keytool - difficult to determine exact\n-            \/\/ number of certificate events for this test (cacerts factor)\n+            \/\/ The keytool test will load the dedicated keystore\n+            \/\/ and call CertificateFactory.generateCertificate\n+            \/\/ cacerts\n@@ -74,6 +74,0 @@\n-\n-        testCall(() -> {\n-            \/\/ test CertAndKeyGen functionality\n-            \/\/ most interested in just detecting this cert being created\n-            TestCertificate.certAndGenTest();\n-        }, 1, false);\n","filename":"test\/jdk\/jdk\/jfr\/event\/security\/TestX509CertificateEvent.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -181,18 +181,0 @@\n-    public static void certAndGenTest() throws CertificateException {\n-        CertAndKeyGen ckg;\n-        try {\n-            ckg = new CertAndKeyGen(\"RSA\", \"SHA256withRSA\");\n-        } catch (NoSuchAlgorithmException e) {\n-            throw new RuntimeException(\"Unexpected failure\", e);\n-        }\n-        \/\/ just some arbitrary dates\n-        long validity = (System.currentTimeMillis() + 10_000L)\/1000L + 3600;\n-        Date firstDate = new Date(System.currentTimeMillis());\n-        ckg.generate(2048);\n-        try {\n-            ckg.getSelfCertificate(new X500Name(\"CN=Me\"), firstDate, validity);\n-        } catch (GeneralSecurityException | IOException e) {\n-            throw new RuntimeException(\"Unexpected failure\", e);\n-        }\n-    }\n-\n@@ -213,1 +195,1 @@\n-            \"-validity\", \"365\", \"-storetype\", \"PKCS12\", \"-keystore\", \"keystore.pkcs12\", \"-storepass\", \"changeit\")\n+            \"-validity\", \"365\", \"-keystore\", \"keystore.pkcs12\", \"-storepass\", \"changeit\")\n@@ -215,0 +197,1 @@\n+        \/\/ The keytool command will load the keystore and call CertificateFactory.generateCertificate\n@@ -216,2 +199,1 @@\n-            .shouldContain(\"8292033.oracle.com\")\n-            .shouldContain(\"SHA384withRSA\")\n+            .shouldContain(\"8292033.oracle.com\") \/\/ should record our new cert\n@@ -220,1 +202,0 @@\n-\n","filename":"test\/lib\/jdk\/test\/lib\/security\/TestCertificate.java","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"}]}