{"files":[{"patch":"@@ -29,4 +29,0 @@\n-import java.util.Collection;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Objects;\n@@ -37,0 +33,4 @@\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Objects;\n@@ -355,1 +355,3 @@\n-        return certFacSpi.engineGenerateCertificate(inStream);\n+        Certificate c = certFacSpi.engineGenerateCertificate(inStream);\n+        JCAUtil.tryCommitCertEvent(c);\n+        return c;\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertificateFactory.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,9 @@\n+    private static final X509CertificateEvent EVENT = new X509CertificateEvent();\n+\n+    \/**\n+     * Returns {@code true} if event is enabled, {@code false} otherwise.\n+     *\/\n+    public static boolean isTurnedOn() {\n+        return EVENT.isEnabled();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/event\/X509CertificateEvent.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.security.PublicKey;\n@@ -29,0 +30,6 @@\n+import java.security.cert.Certificate;\n+import java.security.cert.X509Certificate;\n+\n+import jdk.internal.event.EventHelper;\n+import jdk.internal.event.X509CertificateEvent;\n+import sun.security.util.KeyUtil;\n@@ -93,0 +100,1 @@\n+    }\n@@ -94,0 +102,38 @@\n+    public static void tryCommitCertEvent(Certificate cert) {\n+        if ((X509CertificateEvent.isTurnedOn() || EventHelper.isLoggingSecurity()) &&\n+                (cert instanceof X509Certificate x509)) {\n+            PublicKey pKey = x509.getPublicKey();\n+            String algId = x509.getSigAlgName();\n+            String serNum = x509.getSerialNumber().toString(16);\n+            String subject = x509.getSubjectX500Principal().getName();\n+            String issuer = x509.getIssuerX500Principal().getName();\n+            String keyType = pKey.getAlgorithm();\n+            int length = KeyUtil.getKeySize(pKey);\n+            int hashCode = x509.hashCode();\n+            long beginDate = x509.getNotBefore().getTime();\n+            long endDate = x509.getNotAfter().getTime();\n+            if (X509CertificateEvent.isTurnedOn()) {\n+                X509CertificateEvent xce = new X509CertificateEvent();\n+                xce.algorithm = algId;\n+                xce.serialNumber = serNum;\n+                xce.subject = subject;\n+                xce.issuer = issuer;\n+                xce.keyType = keyType;\n+                xce.keyLength = length;\n+                xce.certificateId = hashCode;\n+                xce.validFrom = beginDate;\n+                xce.validUntil = endDate;\n+                xce.commit();\n+            }\n+            if (EventHelper.isLoggingSecurity()) {\n+                EventHelper.logX509CertificateEvent(algId,\n+                        serNum,\n+                        subject,\n+                        issuer,\n+                        keyType,\n+                        length,\n+                        hashCode,\n+                        beginDate,\n+                        endDate);\n+            }\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/JCAUtil.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import java.security.PublicKey;\n+\n@@ -33,3 +33,0 @@\n-import jdk.internal.event.EventHelper;\n-import jdk.internal.event.X509CertificateEvent;\n-\n@@ -42,1 +39,0 @@\n-import sun.security.util.KeyUtil;\n@@ -119,2 +115,0 @@\n-        \/\/ record cert details if necessary\n-        commitEvent(cert);\n@@ -775,39 +769,0 @@\n-\n-    private static void commitEvent(X509CertImpl info) {\n-        X509CertificateEvent xce = new X509CertificateEvent();\n-        if (xce.shouldCommit() || EventHelper.isLoggingSecurity()) {\n-            PublicKey pKey = info.getPublicKey();\n-            String algId = info.getSigAlgName();\n-            String serNum = info.getSerialNumber().toString(16);\n-            String subject = info.getSubjectDN().getName();\n-            String issuer = info.getIssuerDN().getName();\n-            String keyType = pKey.getAlgorithm();\n-            int length = KeyUtil.getKeySize(pKey);\n-            int hashCode = info.hashCode();\n-            long beginDate = info.getNotBefore().getTime();\n-            long endDate = info.getNotAfter().getTime();\n-            if (xce.shouldCommit()) {\n-                xce.algorithm = algId;\n-                xce.serialNumber = serNum;\n-                xce.subject = subject;\n-                xce.issuer = issuer;\n-                xce.keyType = keyType;\n-                xce.keyLength = length;\n-                xce.certificateId = hashCode;\n-                xce.validFrom = beginDate;\n-                xce.validUntil = endDate;\n-                xce.commit();\n-            }\n-            if (EventHelper.isLoggingSecurity()) {\n-                EventHelper.logX509CertificateEvent(algId,\n-                        serNum,\n-                        subject,\n-                        issuer,\n-                        keyType,\n-                        length,\n-                        hashCode,\n-                        beginDate,\n-                        endDate);\n-            }\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/X509Factory.java","additions":1,"deletions":46,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-            \/\/ Generate twice to make sure only one event per certificate is generated\n+            \/\/ Generate twice to make sure we (now) capture all generate cert events\n@@ -60,1 +60,1 @@\n-            Asserts.assertEquals(events.size(), 2, \"Incorrect number of X509Certificate events\");\n+            Asserts.assertEquals(events.size(), 4, \"Incorrect number of X509Certificate events\");\n","filename":"test\/jdk\/jdk\/jfr\/event\/security\/TestX509CertificateEvent.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,2 +44,2 @@\n-        \"CN=SSLCertificate, O=SomeCompany\",\n-        \"CN=Intermediate CA Cert, O=SomeCompany\",\n+        \"CN=SSLCertificate,O=SomeCompany\",\n+        \"CN=Intermediate CA Cert,O=SomeCompany\",\n@@ -73,2 +73,2 @@\n-        \"CN=Intermediate CA Cert, O=SomeCompany\",\n-        \"CN=Root CA Cert, O=SomeCompany\",\n+        \"CN=Intermediate CA Cert,O=SomeCompany\",\n+        \"CN=Root CA Cert,O=SomeCompany\",\n@@ -101,2 +101,2 @@\n-        \"CN=Root CA Cert, O=SomeCompany\",\n-        \"CN=Root CA Cert, O=SomeCompany\",\n+        \"CN=Root CA Cert,O=SomeCompany\",\n+        \"CN=Root CA Cert,O=SomeCompany\",\n@@ -190,1 +190,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/security\/TestCertificate.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}