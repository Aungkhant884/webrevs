{"files":[{"patch":"@@ -603,14 +603,19 @@\n-                    \/\/ Try loading providers\n-                    PrivilegedAction<Console> pa = () -> {\n-                        var consModName = System.getProperty(\"jdk.console\",\n-                                JdkConsoleProvider.DEFAULT_PROVIDER);\n-                        return ServiceLoader.load(JdkConsoleProvider.class).stream()\n-                                .map(ServiceLoader.Provider::get)\n-                                .filter(jcp -> consModName.equals(jcp.getClass().getModule().getName()))\n-                                .map(jcp -> jcp.console(istty))\n-                                .filter(Objects::nonNull)\n-                                .findAny()\n-                                .map(jc -> (Console)new ProxyingConsole(jc))\n-                                .orElse(istty ? new Console() : null);\n-                    };\n-                    cons = AccessController.doPrivileged(pa);\n+                    try {\n+                        \/\/ Try loading providers\n+                        PrivilegedAction<Console> pa = () -> {\n+                            var consModName = System.getProperty(\"jdk.console\",\n+                                    JdkConsoleProvider.DEFAULT_PROVIDER);\n+                            return ServiceLoader.load(JdkConsoleProvider.class).stream()\n+                                    .map(ServiceLoader.Provider::get)\n+                                    .filter(jcp -> consModName.equals(jcp.getClass().getModule().getName()))\n+                                    .map(jcp -> jcp.console(istty))\n+                                    .filter(Objects::nonNull)\n+                                    .findAny()\n+                                    .map(jc -> (Console) new ProxyingConsole(jc))\n+                                    .orElse(istty ? new Console() : null);\n+                        };\n+                        cons = AccessController.doPrivileged(pa);\n+                    } catch (ServiceConfigurationError ignore) {\n+                        \/\/ default to built-in Console\n+                        cons = istty ? new Console() : null;\n+                    }\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":19,"deletions":14,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -32,4 +32,2 @@\n-        var con = System.console();\n-        if (con == null) {\n-            throw new RuntimeException(\"jline console could not be instantiated with the Security Manager\");\n-        }\n+        System.console();\n+        \/\/ consider it successful if ServiceConfigurationError was not thrown here\n","filename":"test\/jdk\/java\/io\/Console\/SecurityManagerTest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,5 +3,0 @@\n-    permission java.lang.RuntimePermission \"accessClassInPackage.jdk.internal.io\";\n-    permission java.lang.RuntimePermission \"getenv.*\";\n-    permission java.lang.RuntimePermission \"readFileDescriptor\";\n-    permission java.lang.RuntimePermission \"writeFileDescriptor\";\n-    permission java.util.PropertyPermission \"org.jline.*\",\"read\";\n","filename":"test\/jdk\/java\/io\/Console\/test.policy","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}