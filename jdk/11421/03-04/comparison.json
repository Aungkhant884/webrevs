{"files":[{"patch":"@@ -598,0 +598,2 @@\n+        cons = instantiateConsoleole(istty);\n+\n@@ -600,1 +602,0 @@\n-            @SuppressWarnings(\"removal\")\n@@ -602,21 +603,0 @@\n-                if (cons == null) {\n-                    try {\n-                        \/\/ Try loading providers\n-                        PrivilegedAction<Console> pa = () -> {\n-                            var consModName = System.getProperty(\"jdk.console\",\n-                                    JdkConsoleProvider.DEFAULT_PROVIDER);\n-                            return ServiceLoader.load(JdkConsoleProvider.class).stream()\n-                                    .map(ServiceLoader.Provider::get)\n-                                    .filter(jcp -> consModName.equals(jcp.getClass().getModule().getName()))\n-                                    .map(jcp -> jcp.console(istty))\n-                                    .filter(Objects::nonNull)\n-                                    .findAny()\n-                                    .map(jc -> (Console) new ProxyingConsole(jc))\n-                                    .orElse(istty ? new Console() : null);\n-                        };\n-                        cons = AccessController.doPrivileged(pa);\n-                    } catch (ServiceConfigurationError ignore) {\n-                        \/\/ default to built-in Console\n-                        cons = istty ? new Console() : null;\n-                    }\n-                }\n@@ -627,1 +607,25 @@\n-    private static Console cons;\n+\n+    @SuppressWarnings(\"removal\")\n+    private static Console instantiateConsoleole(boolean istty) {\n+        try {\n+            \/\/ Try loading providers\n+            PrivilegedAction<Console> pa = () -> {\n+                var consModName = System.getProperty(\"jdk.console\",\n+                        JdkConsoleProvider.DEFAULT_PROVIDER_MODULE_NAME);\n+                return ServiceLoader.load(JdkConsoleProvider.class).stream()\n+                        .map(ServiceLoader.Provider::get)\n+                        .filter(jcp -> consModName.equals(jcp.getClass().getModule().getName()))\n+                        .map(jcp -> jcp.console(istty))\n+                        .filter(Objects::nonNull)\n+                        .findAny()\n+                        .map(jc -> (Console) new ProxyingConsole(jc))\n+                        .orElse(istty ? new Console() : null);\n+            };\n+            return AccessController.doPrivileged(pa);\n+        } catch (ServiceConfigurationError ignore) {\n+            \/\/ default to built-in Console\n+            return istty ? new Console() : null;\n+        }\n+    }\n+\n+    private static final Console cons;\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":27,"deletions":23,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    public Console format(String fmt, Object ...args) {\n+    public Console format(String fmt, Object ... args) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/ProxyingConsole.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * Methods defined here are duplicating ones in Console class.\n+ * Methods defined here duplicates the ones in Console class.\n@@ -40,1 +40,1 @@\n-    JdkConsole format(String fmt, Object ...args);\n+    JdkConsole format(String fmt, Object ... args);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/io\/JdkConsole.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-     * The default provider of JdkConsole.\n+     * The module name of the JdkConsole default provider.\n@@ -40,1 +40,1 @@\n-    String DEFAULT_PROVIDER = \"jdk.internal.le\";\n+    String DEFAULT_PROVIDER_MODULE_NAME = \"jdk.internal.le\";\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/io\/JdkConsoleProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        public synchronized JdkConsole format(String fmt, Object ...args) {\n+        public JdkConsole format(String fmt, Object ... args) {\n@@ -76,1 +76,1 @@\n-        public synchronized String readLine(String fmt, Object ... args) {\n+        public String readLine(String fmt, Object ... args) {\n@@ -88,1 +88,1 @@\n-        public synchronized char[] readPassword(String fmt, Object ... args) {\n+        public char[] readPassword(String fmt, Object ... args) {\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/JdkConsoleProviderImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}