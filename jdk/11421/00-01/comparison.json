{"files":[{"patch":"@@ -615,4 +615,0 @@\n-\n-            public Charset charset() {\n-                return cons.charset();\n-            }\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.nio.charset.Charset;\n@@ -33,1 +32,0 @@\n-    Charset charset();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaIOAccess.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+\/**\n+ * @test\n+ * @bug 8295803\n+ * @summary Tests System.console() works with standard input redirection.\n+ * @library \/test\/lib\n+ *\/\n+public class RedirectTest {\n+    public static void main(String... args) throws Throwable {\n+        if (args.length == 0) {\n+            \/\/ no arg will launch the child process that actually perform tests\n+            var pb = ProcessTools.createTestJvm(\"RedirectTest\", \"dummy\");\n+            var input = new File(System.getProperty(\"test.src\", \".\"), \"input.txt\");\n+            pb.redirectInput(input);\n+            var oa = ProcessTools.executeProcess(pb);\n+            var output = oa.asLines();\n+            var expected = Files.readAllLines(input.toPath());\n+            if (!output.equals(expected)) {\n+                throw new RuntimeException(\"\"\"\n+                        Standard out had unexpected strings:\n+                        Actual output: %s\n+                        Expected output: %s\n+                        \"\"\".formatted(output, expected));\n+            }\n+            oa.shouldHaveExitValue(0);\n+        } else {\n+            var con = System.console();\n+            String line;\n+            while ((line = con.readLine()) != null) {\n+                System.out.println(line);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/Console\/RedirectTest.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+This is line 1\n+This is line 2\n+This is the last line\n","filename":"test\/jdk\/java\/io\/Console\/input.txt","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"}]}