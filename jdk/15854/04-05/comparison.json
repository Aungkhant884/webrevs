{"files":[{"patch":"@@ -199,0 +199,4 @@\n+        int aoffset = UNSAFE.arrayBaseOffset(arrayClass);\n+        int ascale = UNSAFE.arrayIndexScale(arrayClass);\n+        int ashift = 31 - Integer.numberOfLeadingZeros(ascale);\n+\n@@ -200,3 +204,0 @@\n-            int aoffset = UNSAFE.arrayBaseOffset(arrayClass);\n-            int ascale = UNSAFE.arrayIndexScale(arrayClass);\n-            int ashift = 31 - Integer.numberOfLeadingZeros(ascale);\n@@ -206,1 +207,1 @@\n-            return maybeAdapt(VarHandleBooleans.Array.INSTANCE);\n+            return maybeAdapt(new VarHandleBooleans.Array(aoffset, ashift));\n@@ -209,1 +210,1 @@\n-            return maybeAdapt(VarHandleBytes.Array.INSTANCE);\n+            return maybeAdapt(new VarHandleBytes.Array(aoffset, ashift));\n@@ -212,1 +213,1 @@\n-            return maybeAdapt(VarHandleShorts.Array.INSTANCE);\n+            return maybeAdapt(new VarHandleShorts.Array(aoffset, ashift));\n@@ -215,1 +216,1 @@\n-            return maybeAdapt(VarHandleChars.Array.INSTANCE);\n+            return maybeAdapt(new VarHandleChars.Array(aoffset, ashift));\n@@ -218,1 +219,1 @@\n-            return maybeAdapt(VarHandleInts.Array.INSTANCE);\n+            return maybeAdapt(new VarHandleInts.Array(aoffset, ashift));\n@@ -221,1 +222,1 @@\n-            return maybeAdapt(VarHandleLongs.Array.INSTANCE);\n+            return maybeAdapt(new VarHandleLongs.Array(aoffset, ashift));\n@@ -224,1 +225,1 @@\n-            return maybeAdapt(VarHandleFloats.Array.INSTANCE);\n+            return maybeAdapt(new VarHandleFloats.Array(aoffset, ashift));\n@@ -227,1 +228,1 @@\n-            return maybeAdapt(VarHandleDoubles.Array.INSTANCE);\n+            return maybeAdapt(new VarHandleDoubles.Array(aoffset, ashift));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -732,1 +732,0 @@\n-#if[Object]\n@@ -735,1 +734,2 @@\n-        final Class<?> arrayType;\n+#if[Object]\n+        final Class<{#if[Object]??:$type$[]}> arrayType;\n@@ -737,3 +737,0 @@\n-#else[Object]\n-        private static final int BASE = UNSAFE.arrayBaseOffset($type$[].class);\n-        private static final int SHIFT = 31 - Integer.numberOfLeadingZeros(UNSAFE.arrayIndexScale($type$[].class));\n@@ -742,3 +739,2 @@\n-#if[Object]\n-        Array(int abase, int ashift, Class<?> arrayType) {\n-            this(abase, ashift, arrayType, false);\n+        Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}) {\n+            this(abase, ashift{#if[Object]?, arrayType}, false);\n@@ -747,2 +743,1 @@\n-#end[Object]\n-        private Array({#if[Object]?int abase, int ashift, Class<?> arrayType, }boolean exact) {\n+        private Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}, boolean exact) {\n@@ -750,1 +745,0 @@\n-#if[Object]\n@@ -753,1 +747,2 @@\n-            this.arrayType = arrayType;\n+#if[Object]\n+            this.arrayType = {#if[Object]?arrayType:$type$[].class};\n@@ -762,1 +757,1 @@\n-                : {#if[Object]?new Array(abase, ashift, arrayType, true):EXACT_INSTANCE};\n+                : new Array(abase, ashift{#if[Object]?, arrayType}, true);\n@@ -769,1 +764,1 @@\n-                : {#if[Object]?new Array(abase, ashift, arrayType, false):INSTANCE};\n+                : new Array(abase, ashift{#if[Object]?, arrayType}, false);\n@@ -806,1 +801,0 @@\n-\n@@ -808,4 +802,0 @@\n-        @ForceInline\n-        static long offset({#if[Object]?Array handle, Object:$type$}[] array, int index)  {\n-            return (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << {#if[Object]?handle.ashift:SHIFT}) + {#if[Object]?handle.abase:BASE};\n-        }\n@@ -815,1 +805,0 @@\n-#if[Object]\n@@ -817,0 +806,1 @@\n+#if[Object]\n@@ -826,1 +816,0 @@\n-#if[Object]\n@@ -828,0 +817,1 @@\n+#if[Object]\n@@ -837,1 +827,0 @@\n-#if[Object]\n@@ -839,0 +828,1 @@\n+#if[Object]\n@@ -844,1 +834,1 @@\n-                    offset({#if[Object]?handle, }array, index));\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase);\n@@ -849,1 +839,0 @@\n-#if[Object]\n@@ -851,0 +840,1 @@\n+#if[Object]\n@@ -856,1 +846,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -862,1 +852,0 @@\n-#if[Object]\n@@ -864,0 +853,1 @@\n+#if[Object]\n@@ -869,1 +859,1 @@\n-                    offset({#if[Object]?handle, }array, index));\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase);\n@@ -874,1 +864,0 @@\n-#if[Object]\n@@ -876,0 +865,1 @@\n+#if[Object]\n@@ -881,1 +871,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -887,1 +877,0 @@\n-#if[Object]\n@@ -889,0 +878,1 @@\n+#if[Object]\n@@ -894,1 +884,1 @@\n-                    offset({#if[Object]?handle, }array, index));\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase);\n@@ -899,1 +889,0 @@\n-#if[Object]\n@@ -901,0 +890,1 @@\n+#if[Object]\n@@ -906,1 +896,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -913,1 +903,0 @@\n-#if[Object]\n@@ -915,0 +904,1 @@\n+#if[Object]\n@@ -920,1 +910,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -927,1 +917,0 @@\n-#if[Object]\n@@ -929,0 +918,1 @@\n+#if[Object]\n@@ -934,1 +924,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -941,1 +931,0 @@\n-#if[Object]\n@@ -943,0 +932,1 @@\n+#if[Object]\n@@ -948,1 +938,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -955,1 +945,0 @@\n-#if[Object]\n@@ -957,0 +946,1 @@\n+#if[Object]\n@@ -962,1 +952,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -969,1 +959,0 @@\n-#if[Object]\n@@ -971,0 +960,1 @@\n+#if[Object]\n@@ -976,1 +966,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -983,1 +973,0 @@\n-#if[Object]\n@@ -985,0 +974,1 @@\n+#if[Object]\n@@ -990,1 +980,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -997,1 +987,0 @@\n-#if[Object]\n@@ -999,0 +988,1 @@\n+#if[Object]\n@@ -1004,1 +994,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1011,1 +1001,0 @@\n-#if[Object]\n@@ -1013,0 +1002,1 @@\n+#if[Object]\n@@ -1018,1 +1008,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1025,1 +1015,0 @@\n-#if[Object]\n@@ -1027,0 +1016,1 @@\n+#if[Object]\n@@ -1032,1 +1022,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1038,1 +1028,0 @@\n-#if[Object]\n@@ -1040,0 +1029,1 @@\n+#if[Object]\n@@ -1045,1 +1035,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1051,1 +1041,0 @@\n-#if[Object]\n@@ -1053,0 +1042,1 @@\n+#if[Object]\n@@ -1058,1 +1048,1 @@\n-                    offset({#if[Object]?handle, }array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1066,0 +1056,1 @@\n+            Array handle = (Array)ob;\n@@ -1068,1 +1059,1 @@\n-                    offset(array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1074,0 +1065,1 @@\n+            Array handle = (Array)ob;\n@@ -1076,1 +1068,1 @@\n-                    offset(array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1082,0 +1074,1 @@\n+            Array handle = (Array)ob;\n@@ -1084,1 +1077,1 @@\n-                    offset(array, index),\n+                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1092,0 +1085,1 @@\n+            Array handle = (Array)ob;\n@@ -1094,1 +1088,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1100,0 +1094,1 @@\n+            Array handle = (Array)ob;\n@@ -1102,1 +1097,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1108,0 +1103,1 @@\n+            Array handle = (Array)ob;\n@@ -1110,1 +1106,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1116,0 +1112,1 @@\n+            Array handle = (Array)ob;\n@@ -1118,1 +1115,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1124,0 +1121,1 @@\n+            Array handle = (Array)ob;\n@@ -1126,1 +1124,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1132,0 +1130,1 @@\n+            Array handle = (Array)ob;\n@@ -1134,1 +1133,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1140,0 +1139,1 @@\n+            Array handle = (Array)ob;\n@@ -1142,1 +1142,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1148,0 +1148,1 @@\n+            Array handle = (Array)ob;\n@@ -1150,1 +1151,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1156,0 +1157,1 @@\n+            Array handle = (Array)ob;\n@@ -1158,1 +1160,1 @@\n-                                       offset(array, index),\n+                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n@@ -1164,7 +1166,0 @@\n-#if[Object]\n-#else[Object]\n-\n-        \/\/ Must be initialized after FORM is ready\n-        static final Array INSTANCE = new Array(false);\n-        static final Array EXACT_INSTANCE = new Array(true);\n-#end[Object]\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandle.java.template","additions":69,"deletions":74,"binary":false,"changes":143,"status":"modified"}]}