{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,0 +128,1 @@\n+                \/\/ wsdo->invalid is set by GDIWindowSurfaceData_GetComp\n@@ -131,0 +132,4 @@\n+            if (hDC == NULL) {\n+                wsdo->invalid = JNI_TRUE;\n+                return;\n+            }\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/windows\/GDIWindowSurfaceData.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Graphics;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.JTable;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+\n+\/**\n+ * @test\n+ * @bug 6847157\n+ * @key headful\n+ * @summary the java2D\/AWT should die silently without exceptions\n+ * @run main\/othervm                           RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=1    RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=1.2  RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=1.25 RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=1.5  RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=1.75 RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=2    RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=2.25 RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=5    RepaintOnAWTShutdown\n+ * @run main\/othervm -Dsun.java2d.uiScale=10   RepaintOnAWTShutdown\n+ *\/\n+public final class RepaintOnAWTShutdown implements Runnable {\n+\n+    private static final CountDownLatch go = new CountDownLatch(1);\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeLater(new RepaintOnAWTShutdown());\n+        go.await(5, TimeUnit.SECONDS);\n+        \/\/ The test will check that no exception is thrown when the jtreg will\n+        \/\/ kill this test at the moment the frame will be painted\n+    }\n+\n+    public void run() {\n+        JFrame frame = new JFrame();\n+        JPanel panel = new MyPanel();\n+        panel.setPreferredSize(new Dimension(100, 100));\n+        panel.setLayout(new FlowLayout());\n+        panel.add(new JTree());\n+        panel.add(new JList(new String[]{\"one\", \"two\"}));\n+        panel.add(new JTable(new String[][]{{\"one\", \"two\"}},\n+                             new String[]{\"one\", \"two\"}));\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        \/\/ the frame is not disposed intentionally\n+    }\n+\n+\n+    private final class MyPanel extends JPanel {\n+\n+        public void paint(Graphics g) {\n+            super.paint(g);\n+            go.countDown();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Paint\/RepaintOnAWTShutdown.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}