{"files":[{"patch":"@@ -167,1 +167,0 @@\n-        char lastC = 0;\n@@ -171,4 +170,0 @@\n-                if (lastC == ' ')\n-                    throw new InvalidPathException(path,\n-                                                   \"Trailing char <\" + lastC + \">\",\n-                                                   off - 1);\n@@ -185,1 +180,0 @@\n-                lastC = c;\n@@ -190,4 +184,0 @@\n-            if (lastC == ' ')\n-                throw new InvalidPathException(path,\n-                                               \"Trailing char <\" + lastC + \">\",\n-                                               off - 1);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPathParser.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1415,2 +1415,2 @@\n-        test(\"C:\\\\foo \")                \/\/ trailing space\n-             .invalid();\n+        test(\"C:\\\\foo \")\n+            .string(\"C:\\\\foo \");\/\/ trailing space\n@@ -1418,1 +1418,1 @@\n-            .invalid();\n+            .string(\"C:\\\\foo \\\\bar\");\n","filename":"test\/jdk\/java\/nio\/file\/Path\/PathOps.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright 2022 JetBrains s.r.o.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8190546\n+ * @summary Verifies that a path name that ends with a space can be\n+ *          successfully created and deleted.\n+ *\/\n+\n+import java.nio.file.Path;\n+import java.nio.file.Files;\n+import java.io.IOException;\n+\n+public class TrailingSpace {\n+    static void testResolve(String parent, String... paths) {\n+        final Path p = Path.of(parent, paths);\n+        System.out.println(\"Path successfully created: \" + p);\n+    }\n+\n+    static void testResolve(String path) {\n+        final Path p = Path.of(path);\n+        System.out.println(\"Path successfully created: \" + p);\n+    }\n+\n+    static void testDelete(String path) throws IOException {\n+        final Path p = Files.createDirectories(Path.of(path));\n+        Files.delete(p);\n+    }\n+\n+    public static void main(String args[]) throws IOException {\n+        testResolve(\".\/\", \"ends-with-space \");\n+        testResolve(\"ends-with-space \");\n+        testResolve(\"1\", \"2\", \"ends-with-space \", \"3\");\n+        testResolve(\"1\\\\2\\\\ends-with-space \\\\3\");\n+        testResolve(\"1\/2\/ends-with-space \/3\");\n+        testResolve(\"1\/2\/ends-with-space \\\\3\");\n+        testResolve(\"ends-with-space \/\");\n+        testResolve(\"ends-with-space \/\/\/\");\n+        testResolve(\"ends-with-space \\\\\");\n+        testResolve(\"ends-with-space \\\\\\\\\\\\\");\n+\n+        testDelete(\"ends-with-space \");\n+        testDelete(\"ends-with-space-1 \\\\\");\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/file\/Path\/TrailingSpace.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}