{"files":[{"patch":"@@ -636,2 +636,2 @@\n-                  _type_array(nullptr),\n-                  _node_hash_table(nullptr),\n+                  _types(nullptr),\n+                  _node_hash(nullptr),\n@@ -715,2 +715,2 @@\n-  _type_array = new (comp_arena()) Type_Array(comp_arena());\n-  _node_hash_table = new (comp_arena()) NodeHash(comp_arena(), estimated_size);\n+  _types = new (comp_arena()) Type_Array(comp_arena());\n+  _node_hash = new (comp_arena()) NodeHash(comp_arena(), estimated_size);\n@@ -925,2 +925,2 @@\n-    _type_array(nullptr),\n-    _node_hash_table(nullptr),\n+    _types(nullptr),\n+    _node_hash(nullptr),\n@@ -959,2 +959,2 @@\n-  _type_array = new (comp_arena()) Type_Array(comp_arena());\n-  _node_hash_table = new (comp_arena()) NodeHash(comp_arena(), 255);\n+  _types = new (comp_arena()) Type_Array(comp_arena());\n+  _node_hash = new (comp_arena()) NodeHash(comp_arena(), 255);\n@@ -2443,1 +2443,1 @@\n- C->node_hash_table().clear();\n+ C->node_hash()->clear();\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -425,2 +425,2 @@\n-  \/\/ Shared type array for GVN, IGVN and CCP. It maps node ID -> Type*.\n-  Type_Array*           _type_array;\n+  \/\/ Shared type array for GVN, IGVN and CCP. It maps node idx -> Type*.\n+  Type_Array*           _types;\n@@ -429,1 +429,1 @@\n-  NodeHash*             _node_hash_table;\n+  NodeHash*             _node_hash;\n@@ -953,3 +953,3 @@\n-  Type_Array& type_array() {\n-    assert(_type_array != nullptr, \"must be created in Compile::Compile\");\n-    return *_type_array;\n+  Type_Array* types() {\n+    assert(_types != nullptr, \"must be created in Compile::Compile\");\n+    return _types;\n@@ -957,3 +957,3 @@\n-  NodeHash& node_hash_table() {\n-    assert(_node_hash_table != nullptr, \"must be created in Compile::Compile\");\n-    return *_node_hash_table;\n+  NodeHash* node_hash() {\n+    assert(_node_hash != nullptr, \"must be created in Compile::Compile\");\n+    return _node_hash;\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -421,2 +421,2 @@\n-  assert(&worklist == &C->igvn_worklist(), \"sanity\");\n-  assert(&gvn->types() == &C->type_array(), \"sanity\");\n+  assert(&worklist == &C->igvn_worklist(), \"reference still same as the one from Compile\");\n+  assert(&gvn->types() == C->types(), \"reference still same as that from Compile\");\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-  \/\/ Hash table for value-numbering. Reference to \"C->node_hash_table()\",\n+  \/\/ Hash table for value-numbering. Reference to \"C->node_hash()\",\n@@ -233,1 +233,1 @@\n-  \/\/ Type array mapping node idx to Type*. Reference to \"C->type_array()\".\n+  \/\/ Type array mapping node idx to Type*. Reference to \"C->types()\".\n@@ -252,1 +252,1 @@\n-                  _table(C->node_hash_table()), _types(C->type_array())\n+                  _table(*C->node_hash()), _types(*C->types())\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}