{"files":[{"patch":"@@ -675,1 +675,1 @@\n-bool ArrayCopyNode::may_modify_helper(const TypeOopPtr* t_oop, Node* n, PhaseValues* phase, CallNode* &call) {\n+bool ArrayCopyNode::may_modify_helper(const TypeOopPtr* t_oop, Node* n, PhaseValues* phase, CallNode*& call) {\n@@ -686,1 +686,1 @@\n-bool ArrayCopyNode::may_modify(const TypeOopPtr* t_oop, MemBarNode* mb, PhaseValues* phase, ArrayCopyNode* &ac) {\n+bool ArrayCopyNode::may_modify(const TypeOopPtr* t_oop, MemBarNode* mb, PhaseValues* phase, ArrayCopyNode*& ac) {\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-  static bool may_modify_helper(const TypeOopPtr* t_oop, Node* n, PhaseValues* phase, CallNode* &call);\n+  static bool may_modify_helper(const TypeOopPtr* t_oop, Node* n, PhaseValues* phase, CallNode*& call);\n@@ -182,1 +182,1 @@\n-  static bool may_modify(const TypeOopPtr* t_oop, MemBarNode* mb, PhaseValues* phase, ArrayCopyNode* &ac);\n+  static bool may_modify(const TypeOopPtr* t_oop, MemBarNode* mb, PhaseValues* phase, ArrayCopyNode*& ac);\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -410,1 +410,1 @@\n-void Compile::disconnect_useless_nodes(Unique_Node_List &useful, Unique_Node_List &worklist) {\n+void Compile::disconnect_useless_nodes(Unique_Node_List& useful, Unique_Node_List& worklist) {\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -972,1 +972,1 @@\n-  void              disconnect_useless_nodes(Unique_Node_List &useful, Unique_Node_List &worklist);\n+  void              disconnect_useless_nodes(Unique_Node_List& useful, Unique_Node_List& worklist);\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1661,2 +1661,2 @@\n-#ifndef PRODUCT\n-  bool is_subset_of(Unique_Node_List &other) {\n+#ifdef ASSERT\n+  bool is_subset_of(Unique_Node_List& other) {\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -366,1 +366,1 @@\n-PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN* gvn, Unique_Node_List &worklist, PhaseNumber phase_num) : Phase(phase_num) {\n+PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN* gvn, Unique_Node_List& worklist, PhaseNumber phase_num) : Phase(phase_num) {\n@@ -410,1 +410,1 @@\n-                                     Unique_Node_List &worklist,\n+                                     Unique_Node_List& worklist,\n@@ -456,1 +456,1 @@\n-  \/\/ VectorSet in Unique_Node_Set must be recomputed, since ID's have changed.\n+  \/\/ VectorSet in Unique_Node_Set must be recomputed, since IDs have changed.\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -468,1 +468,1 @@\n-  \/\/ Acheives the same as the following (but without move constructors):\n+  \/\/ Achieves the same as the following (but without move constructors):\n@@ -478,1 +478,1 @@\n-  \/\/ Acheives the same as the following (but without move constructors):\n+  \/\/ Achieves the same as the following (but without move constructors):\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}