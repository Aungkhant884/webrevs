{"files":[{"patch":"@@ -2016,2 +2016,0 @@\n-    BLOCK_COMMENT(err_msg(\"push_Block counterMode_AESCrypt%d {\", parmBlk_len*8));\n-\n@@ -2044,0 +2042,2 @@\n+    BLOCK_COMMENT(err_msg(\"push_Block (%d bytes) counterMode_AESCrypt%d {\", resize_len, parmBlk_len*8));\n+\n@@ -2066,1 +2066,1 @@\n-    BLOCK_COMMENT(err_msg(\"} push_Block counterMode_AESCrypt%d\", parmBlk_len*8));\n+    BLOCK_COMMENT(err_msg(\"} push_Block (%d bytes) counterMode_AESCrypt%d\", resize_len, parmBlk_len*8));\n@@ -2095,2 +2095,0 @@\n-    BLOCK_COMMENT(\"push parmBlk counterMode_AESCrypt {\");\n-\n@@ -2139,1 +2137,0 @@\n-    BLOCK_COMMENT(\"} push parmBlk counterMode_AESCrypt\");\n@@ -2161,1 +2158,0 @@\n-    BLOCK_COMMENT(\"push aux_block counterMode_AESCrypt {\");\n@@ -2165,1 +2161,2 @@\n-    int stackSpace = ((linkSpace + regSpace + spillSpace)+(AES_parmBlk_align-1)) & (~(AES_parmBlk_align-1));\n+    int stackSpace = roundup(linkSpace + regSpace + spillSpace, AES_parmBlk_align);\n+    BLOCK_COMMENT(err_msg(\"push aux_block (%d bytes) counterMode_AESCrypt {\", stackSpace));\n@@ -2170,1 +2167,1 @@\n-    BLOCK_COMMENT(\"} push aux_block counterMode_AESCrypt\");\n+    BLOCK_COMMENT(err_msg(\"} push aux_block (%d bytes) counterMode_AESCrypt\", stackSpace));\n@@ -2183,1 +2180,1 @@\n-  void generate_counterMode_AES_impl(bool is_decipher, int timerNum) {\n+  void generate_counterMode_AES_impl(bool is_decipher) {\n@@ -2204,4 +2201,0 @@\n-#if defined(JIT_TIMER)\n-    __ JIT_TIMER_emit_start(-1, timerNum);\n-#endif\n-\n@@ -2345,3 +2338,0 @@\n-#if defined(JIT_TIMER)\n-    __ JIT_TIMER_emit_stop(-1, timerNum, msglen);\n-#endif\n@@ -2378,1 +2368,1 @@\n-  void generate_counterMode_AES(bool is_decipher, int timerNum) {\n+  void generate_counterMode_AES(bool is_decipher) {\n@@ -2391,1 +2381,1 @@\n-    BLOCK_COMMENT(err_msg(\"counterMode_AESCrypt (len <= %d, block size = %d) {\", threshold, vec_short*16));\n+    BLOCK_COMMENT(err_msg(\"counterMode_AESCrypt (text len <= %d, block size = %d) {\", threshold, vec_short*16));\n@@ -2395,1 +2385,1 @@\n-    generate_counterMode_AES_impl(false, timerNum);   \/\/ control of generated code will not return\n+    generate_counterMode_AES_impl(false);   \/\/ control of generated code will not return\n@@ -2397,1 +2387,1 @@\n-    BLOCK_COMMENT(err_msg(\"} counterMode_AESCrypt (len <= %d, block size = %d)\", threshold, vec_short*16));\n+    BLOCK_COMMENT(err_msg(\"} counterMode_AESCrypt (text len <= %d, block size = %d)\", threshold, vec_short*16));\n@@ -2401,1 +2391,1 @@\n-    BLOCK_COMMENT(err_msg(\"counterMode_AESCrypt (len > %d, block size = %d) {\", threshold, vec_long*16));\n+    BLOCK_COMMENT(err_msg(\"counterMode_AESCrypt (text len > %d, block size = %d) {\", threshold, vec_long*16));\n@@ -2405,1 +2395,1 @@\n-    generate_counterMode_AES_impl(false, timerNum+1); \/\/ control of generated code will not return\n+    generate_counterMode_AES_impl(false);   \/\/ control of generated code will not return\n@@ -2407,1 +2397,1 @@\n-    BLOCK_COMMENT(err_msg(\"} counterMode_AESCrypt (len > %d, block size = %d)\", threshold, vec_long*16));\n+    BLOCK_COMMENT(err_msg(\"} counterMode_AESCrypt (text len > %d, block size = %d)\", threshold, vec_long*16));\n@@ -2418,1 +2408,1 @@\n-    generate_counterMode_AES(false, 5);\n+    generate_counterMode_AES(false);\n","filename":"src\/hotspot\/cpu\/s390\/stubGenerator_s390.cpp","additions":15,"deletions":25,"binary":false,"changes":40,"status":"modified"}]}