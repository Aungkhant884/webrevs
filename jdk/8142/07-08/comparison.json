{"files":[{"patch":"@@ -2002,0 +2002,3 @@\n+  \/\/ IBM s390 (IBM z\/Architecture, to be more exact) uses Big-Endian number representation.\n+  \/\/ Therefore, the bits are ordered from most significant to least significant. The address\n+  \/\/ of a number in memory points to its lowest location where the most significant bit is stored.\n@@ -2920,0 +2923,2 @@\n+        \/\/ In PRODUCT builds, the function pointers will keep their initial (NULL) value.\n+        \/\/ LibraryCallKit::try_to_inline() will return false then, preventing the intrinsic to be called.\n@@ -2928,0 +2933,2 @@\n+        \/\/ In PRODUCT builds, the function pointers will keep their initial (NULL) value.\n+        \/\/ LibraryCallKit::try_to_inline() will return false then, preventing the intrinsic to be called.\n","filename":"src\/hotspot\/cpu\/s390\/stubGenerator_s390.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}