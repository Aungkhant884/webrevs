{"files":[{"patch":"@@ -1,212 +0,0 @@\n-#!\/bin\/sh\n-#\n-#  Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n-#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-# \n-#  This code is free software; you can redistribute it and\/or modify it\n-#  under the terms of the GNU General Public License version 2 only, as\n-#  published by the Free Software Foundation.\n-# \n-#  This code is distributed in the hope that it will be useful, but WITHOUT\n-#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-#  version 2 for more details (a copy is included in the LICENSE file that\n-#  accompanied this code).\n-# \n-#  You should have received a copy of the GNU General Public License version\n-#  2 along with this work; if not, write to the Free Software Foundation,\n-#  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-# \n-#  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-#  or visit www.oracle.com if you need additional information or have any\n-#  questions.\n-# \n-\n-#\n-# This Environment script was written to capture typically used environment\n-# setup for a given shell test. \n-#\n-\n-# TESTJAVA can be a JDK or JRE. If JRE you need to set COMPILEJAVA\n-if [ \"${TESTJAVA}\" = \"\" ]\n-then\n-  echo \"TESTJAVA not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-echo \"TESTJAVA=${TESTJAVA}\"\n-\n-# COMPILEJAVA requires a JDK, some shell test use javac,jar,etc \n-if [ \"${COMPILEJAVA}\" = \"\" ]\n-then\n- echo \"COMPILEJAVA not set.  Using TESTJAVA as default\"\n- COMPILEJAVA=${TESTJAVA}\n-fi\n-echo \"COMPILEJAVA=${COMPILEJAVA}\"\n-\n-if [ \"${TESTCLASSES}\" = \"\" ]\n-then\n-  echo \"TESTCLASES not set.  Using \".\" as default\"\n-  TESTCLASSES=.\n-fi\n-echo \"TESTCLASSES=${TESTCLASSES}\"\n-\n-TESTOPTS=\"${TESTVMOPTS} ${TESTJAVAOPTS}\"\n-echo \"TESTOPTS=${TESTOPTS}\"\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  AIX | Darwin | Linux )\n-    NULL=\/dev\/null\n-    PS=\":\"\n-    FS=\"\/\"\n-    RM=\/bin\/rm\n-    CP=\/bin\/cp\n-    MV=\/bin\/mv\n-    ;;\n-  Windows_* )\n-    NULL=NUL\n-    PS=\";\"\n-    FS=\"\\\\\"\n-    RM=rm\n-    CP=cp\n-    MV=mv\n-    ;;\n-  CYGWIN_* )\n-    NULL=\/dev\/null\n-    PS=\";\"\n-    FS=\"\/\"\n-    RM=rm\n-    CP=cp\n-    MV=mv\n-    ;;\n-  * )\n-    echo \"Unrecognized system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-export NULL PS FS RM CP MV\n-echo \"NULL =${NULL}\"\n-echo \"PS =${PS}\"\n-echo \"FS =${FS}\"\n-echo \"RM =${RM}\"\n-echo \"CP =${CP}\"\n-echo \"MV =${MV}\"\n-\n-# jtreg -classpathappend:<path>\n-JEMMYPATH=${CPAPPEND}\n-CLASSPATH=.${PS}${TESTCLASSES}${PS}${JEMMYPATH} ; export CLASSPATH\n-echo \"CLASSPATH =${CLASSPATH}\"\n-\n-# Current directory is scratch directory \n-THIS_DIR=.\n-echo \"THIS_DIR=${THIS_DIR}\"\n-\n-# Check to ensure the java defined actually works\n-${TESTJAVA}${FS}bin${FS}java ${TESTOPTS} -version\n-if [ $? != 0 ]; then\n-  echo \"Wrong TESTJAVA or TESTJAVAOPTS or TESTVMOPTS:\"\n-  echo ''$TESTJAVA'' ''$TESTJAVAOPTS'' ''$TESTVMOPTS''\n-  exit 1\n-fi\n-\n-${TESTJAVA}${FS}bin${FS}java ${TESTOPTS} -Xinternalversion | sed -e 's\/[(][^)]*[)]\/\/g' -e 's\/ by \"[^\"]*\"\/\/g' > vm_version.out 2>&1\n-echo \"INT_VERSION=`cat vm_version.out 2>&1`\"\n-\n-VM_TYPE=\"unknown\"\n-grep \"Server\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_TYPE=\"server\"\n-fi\n-grep \"Client\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_TYPE=\"client\"\n-fi\n-\n-VM_BITS=\"32\"\n-grep \"64-Bit\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_BITS=\"64\"\n-fi\n-\n-VM_OS=\"unknown\"\n-grep \"aix\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_OS=\"aix\"\n-fi\n-grep \"bsd\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_OS=\"bsd\"\n-fi\n-grep \"linux\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_OS=\"linux\"\n-fi\n-grep \"windows\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_OS=\"windows\"\n-fi\n-\n-VM_CPU=\"unknown\"\n-grep \"x86\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_CPU=\"i386\"\n-fi\n-grep \"amd64\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_CPU=\"amd64\"\n-fi\n-grep \"arm\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_CPU=\"arm\"\n-fi\n-grep \"ppc\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_CPU=\"ppc\"\n-  if [ $VM_BITS = \"64\" ]\n-  then\n-    VM_CPU=\"ppc64\"\n-    grep \"ppc64le\" vm_version.out > ${NULL}\n-    if [ $? = 0 ]\n-    then\n-      VM_CPU=\"ppc64le\"\n-    fi\n-  fi\n-fi\n-grep \"ia64\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_CPU=\"ia64\"\n-fi\n-grep \"s390x\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_CPU=\"s390x\"\n-fi\n-grep \"aarch64\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_CPU=\"aarch64\"\n-fi\n-grep \"arm64\" vm_version.out > ${NULL}\n-if [ $? = 0 ]\n-then\n-  VM_CPU=\"aarch64\"\n-fi\n-export VM_TYPE VM_BITS VM_OS VM_CPU\n-echo \"VM_TYPE=${VM_TYPE}\"\n-echo \"VM_BITS=${VM_BITS}\"\n-echo \"VM_OS=${VM_OS}\"\n-echo \"VM_CPU=${VM_CPU}\"\n","filename":"test\/hotspot\/jtreg\/test_env.sh","additions":0,"deletions":212,"binary":false,"changes":212,"status":"deleted"}]}