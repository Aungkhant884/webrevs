{"files":[{"patch":"@@ -747,0 +747,4 @@\n+            if (!getFileChooser().isEnabled()) {\n+                return;\n+            }\n+\n@@ -1503,0 +1507,3 @@\n+            if (!getFileChooser().isEnabled()) {\n+                return;\n+            }\n@@ -1843,0 +1850,4 @@\n+            if (!getFileChooser().isEnabled()) {\n+                return;\n+            }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileChooserUI.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -438,0 +438,5 @@\n+\n+            if (!getFileChooser().isEnabled()) {\n+                return;\n+            }\n+\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKFileChooserUI.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2081,0 +2081,16 @@\n+\n+    @Override\n+    public void setEnabled(boolean enabled) {\n+        super.setEnabled(enabled);\n+        setEnabled(this, enabled);\n+    }\n+\n+    private static void setEnabled(Container container, boolean enabled) {\n+        for (Component component : container.getComponents()) {\n+            component.setEnabled(enabled);\n+            if (component instanceof Container) {\n+                setEnabled((Container) component, enabled);\n+            }\n+        }\n+    }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JFileChooser.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -646,0 +646,3 @@\n+            if (!getFileChooser().isEnabled()) {\n+                return;\n+            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicFileChooserUI.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2231,1 +2231,1 @@\n-                    if(src != null) {\n+                    if(src != null && src.isEnabled()) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicLookAndFeel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1001,1 +1001,2 @@\n-                e.getWheelRotation() != 0) {\n+                    scrollpane.isEnabled() &&\n+                    e.getWheelRotation() != 0) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicScrollPaneUI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1957,0 +1957,4 @@\n+            if (!source.isEnabled()) {\n+                return;\n+            }\n+\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/FilePane.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -374,0 +374,4 @@\n+                if (!getFileChooser().isEnabled()) {\n+                    return;\n+                }\n+\n@@ -383,0 +387,4 @@\n+                if (!getFileChooser().isEnabled()) {\n+                    return;\n+                }\n+\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsFileChooserUI.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+\n+import javax.swing.AbstractButton;\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.WindowConstants;\n+\n+import java.util.function.Predicate;\n+\n+\/*\n+ * @test\n+ * @bug 4365952\n+ * @key headful\n+ * @summary Test to check is File chooser can be Disabled\n+ * @run main FileChooserDisableTest\n+ *\/\n+public class FileChooserDisableTest {\n+    static Robot robot;\n+    static JFrame frame;\n+    static JFileChooser jfc;\n+    static volatile Point movePoint;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        try {\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                initialize();\n+            });\n+            String defaultDirectory = jfc.getCurrentDirectory().toString();\n+            robot.delay(1000);\n+            robot.waitForIdle();\n+            final AbstractButton[] desktopBtn = new AbstractButton[1];\n+            SwingUtilities.invokeAndWait(() -> {\n+                desktopBtn[0] = clickDetails();\n+                movePoint = desktopBtn[0].getLocationOnScreen();\n+            });\n+            Dimension btnSize = desktopBtn[0].getSize();\n+            robot.mouseMove(movePoint.x + btnSize.width \/ 2, movePoint.y + btnSize.height \/ 2);\n+            robot.delay(2000);\n+            robot.waitForIdle();\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(2000);\n+            robot.waitForIdle();\n+            String currentDirectory = jfc.getCurrentDirectory().toString();\n+            if (!currentDirectory.equals(defaultDirectory)) {\n+                throw new RuntimeException(\"File chooser disable failed\");\n+            }\n+            System.out.println(\"Test Pass\");\n+\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static AbstractButton clickDetails() {\n+        AbstractButton details = findDetailsButton(jfc);\n+        if (details == null) {\n+            throw new Error(\"Didn't find 'Home' button in JFileChooser\");\n+        }\n+        return details;\n+    }\n+\n+    private static Component findComponent(final Container container,\n+                                           final Predicate<Component> predicate) {\n+        for (Component child : container.getComponents()) {\n+            if (predicate.test(child)) {\n+                return child;\n+            }\n+            if (child instanceof Container cont && cont.getComponentCount() > 0) {\n+                Component result = findComponent(cont, predicate);\n+                if (result != null) {\n+                    return result;\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private static AbstractButton findDetailsButton(final Container container) {\n+        Component result = findComponent(container,\n+                c -> c instanceof JButton button\n+                        && \"Home\".equals(button.getToolTipText()));\n+        return (AbstractButton) result;\n+    }\n+\n+    static void initialize() {\n+        frame = new JFrame(\"JFileChooser Disable test\");\n+        jfc = new JFileChooser();\n+        jfc.setEnabled(false);\n+        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+        frame.add(jfc, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileChooserDisableTest.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"}]}