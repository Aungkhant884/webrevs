{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import javax.swing.UnsupportedLookAndFeelException;\n@@ -50,1 +51,0 @@\n-    static Robot robot;\n@@ -54,0 +54,2 @@\n+    static String buttonToolTip;\n+    static volatile AbstractButton openBtn;\n@@ -56,3 +58,1 @@\n-        robot = new Robot();\n-        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n-        try {\n+        Robot robot = new Robot();\n@@ -60,22 +60,3 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                initialize();\n-            });\n-            String defaultDirectory = jfc.getCurrentDirectory().toString();\n-            robot.delay(1000);\n-            robot.waitForIdle();\n-            final AbstractButton[] desktopBtn = new AbstractButton[1];\n-            SwingUtilities.invokeAndWait(() -> {\n-                desktopBtn[0] = clickDetails();\n-                movePoint = desktopBtn[0].getLocationOnScreen();\n-            });\n-            Dimension btnSize = desktopBtn[0].getSize();\n-            robot.mouseMove(movePoint.x + btnSize.width \/ 2, movePoint.y + btnSize.height \/ 2);\n-            robot.delay(2000);\n-            robot.waitForIdle();\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.delay(2000);\n-            robot.waitForIdle();\n-            String currentDirectory = jfc.getCurrentDirectory().toString();\n-            if (!currentDirectory.equals(defaultDirectory)) {\n-                throw new RuntimeException(\"File chooser disable failed\");\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            if (laf.getClassName().toLowerCase().contains(\"motif\")) {\n+                continue;\n@@ -83,1 +64,0 @@\n-            System.out.println(\"Test Pass\");\n@@ -85,4 +65,30 @@\n-        } finally {\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (frame != null) {\n-                    frame.dispose();\n+            if (laf.getClassName().toLowerCase().contains(\"gtk\")) {\n+                buttonToolTip = \"Open selected file.\";\n+            } else {\n+                buttonToolTip = \"Open selected file\";\n+            }\n+\n+            System.out.println(\"Testing LAF: \" + laf.getClassName());\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            try {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    initialize();\n+                });\n+                String defaultDirectory = jfc.getCurrentDirectory().toString();\n+                robot.delay(1000);\n+                robot.waitForIdle();\n+                SwingUtilities.invokeAndWait(() -> {\n+                    openBtn = clickOpenButton();\n+                    movePoint = openBtn.getLocationOnScreen();\n+                });\n+                Dimension btnSize = openBtn.getSize();\n+                robot.mouseMove(movePoint.x + btnSize.width \/ 2, movePoint.y + btnSize.height \/ 2);\n+                robot.delay(100);\n+                robot.waitForIdle();\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.delay(100);\n+                robot.waitForIdle();\n+                String currentDirectory = jfc.getCurrentDirectory().toString();\n+                if (!currentDirectory.equals(defaultDirectory)) {\n+                    throw new RuntimeException(\"File chooser disable failed\");\n@@ -90,1 +96,11 @@\n-            });\n+                System.out.println(\"Test Pass\");\n+\n+            } finally {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    if (frame != null) {\n+                        frame.dispose();\n+                    }\n+                });\n+            }\n+            robot.delay(200);\n+            robot.waitForIdle();\n@@ -94,2 +110,2 @@\n-    private static AbstractButton clickDetails() {\n-        AbstractButton details = findDetailsButton(jfc);\n+    private static AbstractButton clickOpenButton() {\n+        AbstractButton details = findOpenButton(jfc);\n@@ -97,1 +113,1 @@\n-            throw new Error(\"Didn't find 'Home' button in JFileChooser\");\n+            throw new Error(\"Didn't find 'Open Selected File' button in JFileChooser\");\n@@ -118,1 +134,1 @@\n-    private static AbstractButton findDetailsButton(final Container container) {\n+    private static AbstractButton findOpenButton(final Container container) {\n@@ -121,1 +137,1 @@\n-                        && \"Home\".equals(button.getToolTipText()));\n+                        && buttonToolTip.equals(button.getToolTipText()));\n@@ -134,0 +150,11 @@\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileChooserDisableTest.java","additions":64,"deletions":37,"binary":false,"changes":101,"status":"modified"}]}