{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.ref.SoftReference;\n@@ -63,0 +64,13 @@\n+    private SoftReference<byte[]> skipBufferReference;\n+\n+    private byte[] skipBufferReference(long remaining) {\n+        int size = (int) Math.min(MAX_SKIP_BUFFER_SIZE, remaining);\n+        SoftReference<byte[]> ref = this.skipBufferReference;\n+        byte[] buffer;\n+        if (ref == null || (buffer = ref.get()) == null || buffer.length < size) {\n+            buffer = new byte[size];\n+            this.skipBufferReference = new SoftReference<>(buffer);\n+        }\n+        return buffer;\n+    }\n+\n@@ -548,1 +562,1 @@\n-        int size = (int)Math.min(MAX_SKIP_BUFFER_SIZE, remaining);\n+        int size = (int) Math.min(MAX_SKIP_BUFFER_SIZE, remaining);\n@@ -550,4 +564,1 @@\n-        byte[] skipBuffer = this.skipBuffer;\n-        if ((skipBuffer == null) || (skipBuffer.length < size)) {\n-            this.skipBuffer = skipBuffer = new byte[size < MIN_SKIP_BUFFER_SIZE ? MIN_SKIP_BUFFER_SIZE : MAX_SKIP_BUFFER_SIZE];\n-        }\n+        byte[] skipBuffer = this.skipBufferReference(size);\n@@ -556,1 +567,1 @@\n-            int nr = read(skipBuffer, 0, (int)Math.min(size, remaining));\n+            int nr = read(skipBuffer, 0, (int) Math.min(size, remaining));\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStream.java","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -245,2 +245,0 @@\n-        private static final int MIN_SKIP_BUFFER_SIZE = 128;\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/io\/InputStreamSkipBenchmark.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}