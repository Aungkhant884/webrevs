{"files":[{"patch":"@@ -4949,1 +4949,1 @@\n-    fill64_avx(base,  0, xtmp, use64byteVector);\n+    fill64_avx(base, 0, xtmp, use64byteVector);\n@@ -5016,1 +5016,15 @@\n-      case 7:\n+      case 1:\n+        movq(Address(base, disp), xtmp);\n+        break;\n+      case 2:\n+        evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_128bit);\n+        break;\n+      case 3:\n+        movl(rtmp, 0x7);\n+        kmovwl(k2, rtmp);\n+        evmovdqu(T_LONG, k2, Address(base, disp), xtmp, Assembler::AVX_256bit);\n+        break;\n+      case 4:\n+        evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_256bit);\n+        break;\n+      case 5:\n@@ -5018,1 +5032,1 @@\n-          movl(rtmp, 0x7F);\n+          movl(rtmp, 0x1F);\n@@ -5023,3 +5037,1 @@\n-          movl(rtmp, 0x7);\n-          kmovwl(k2, rtmp);\n-          evmovdqu(T_LONG, k2, Address(base, disp + 32), xtmp, Assembler::AVX_256bit);\n+          movq(Address(base, disp + 32), xtmp);\n@@ -5038,1 +5050,1 @@\n-      case 5:\n+      case 7:\n@@ -5040,1 +5052,1 @@\n-          movl(rtmp, 0x1F);\n+          movl(rtmp, 0x7F);\n@@ -5045,1 +5057,3 @@\n-          movq(Address(base, disp + 32), xtmp);\n+          movl(rtmp, 0x7);\n+          kmovwl(k2, rtmp);\n+          evmovdqu(T_LONG, k2, Address(base, disp + 32), xtmp, Assembler::AVX_256bit);\n@@ -5048,14 +5062,0 @@\n-      case 4:\n-        evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_256bit);\n-        break;\n-      case 3:\n-        movl(rtmp, 0x7);\n-        kmovwl(k2, rtmp);\n-        evmovdqu(T_LONG, k2, Address(base, disp), xtmp, Assembler::AVX_256bit);\n-        break;\n-      case 2:\n-        evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_128bit);\n-        break;\n-      case 1:\n-        movq(Address(base, disp), xtmp);\n-        break;\n@@ -8184,1 +8184,0 @@\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":23,"deletions":24,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -1853,2 +1853,0 @@\n-\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -251,1 +251,0 @@\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_arrayCopy_avx3.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -11553,1 +11553,1 @@\n-  effect(TEMP tmp,TEMP zero,  KILL cr);\n+  effect(TEMP tmp, TEMP zero, KILL cr);\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10860,1 +10860,1 @@\n-  effect(TEMP tmp,TEMP zero,  KILL cr);\n+  effect(TEMP tmp, TEMP zero, KILL cr);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,9 +44,9 @@\n-  class Payload8 {\n-    public long f0;\n-    public long f1;\n-    public long f2;\n-    public long f3;\n-    public long f4;\n-    public long f5;\n-    public long f6;\n-    public long f7;\n+    class Payload8 {\n+        public long f0;\n+        public long f1;\n+        public long f2;\n+        public long f3;\n+        public long f4;\n+        public long f5;\n+        public long f6;\n+        public long f7;\n@@ -54,2 +54,3 @@\n-    public Payload8() {\n-      this.f0 = 1;\n+        public Payload8() {\n+            this.f0 = 1;\n+        }\n@@ -57,1 +58,0 @@\n-  }\n@@ -59,8 +59,8 @@\n-  class Payload7 {\n-    public long f0;\n-    public long f1;\n-    public long f2;\n-    public long f3;\n-    public long f4;\n-    public long f5;\n-    public long f6;\n+    class Payload7 {\n+        public long f0;\n+        public long f1;\n+        public long f2;\n+        public long f3;\n+        public long f4;\n+        public long f5;\n+        public long f6;\n@@ -68,2 +68,3 @@\n-    public Payload7() {\n-      this.f0 = 1;\n+        public Payload7() {\n+            this.f0 = 1;\n+        }\n@@ -71,1 +72,0 @@\n-  }\n@@ -73,7 +73,7 @@\n-  class Payload6 {\n-    public long f0;\n-    public long f1;\n-    public long f2;\n-    public long f3;\n-    public long f4;\n-    public long f5;\n+    class Payload6 {\n+        public long f0;\n+        public long f1;\n+        public long f2;\n+        public long f3;\n+        public long f4;\n+        public long f5;\n@@ -81,2 +81,3 @@\n-    public Payload6() {\n-      this.f0 = 1;\n+        public Payload6() {\n+            this.f0 = 1;\n+        }\n@@ -84,1 +85,0 @@\n-  }\n@@ -86,6 +86,6 @@\n-  class Payload5 {\n-    public long f0;\n-    public long f1;\n-    public long f2;\n-    public long f3;\n-    public long f4;\n+    class Payload5 {\n+        public long f0;\n+        public long f1;\n+        public long f2;\n+        public long f3;\n+        public long f4;\n@@ -93,2 +93,3 @@\n-    public Payload5() {\n-      this.f0 = 1;\n+        public Payload5() {\n+            this.f0 = 1;\n+        }\n@@ -96,1 +97,0 @@\n-  }\n@@ -98,5 +98,5 @@\n-  class Payload4 {\n-    public long f0;\n-    public long f1;\n-    public long f2;\n-    public long f3;\n+    class Payload4 {\n+        public long f0;\n+        public long f1;\n+        public long f2;\n+        public long f3;\n@@ -104,2 +104,3 @@\n-    public Payload4() {\n-      this.f0 = 1;\n+        public Payload4() {\n+            this.f0 = 1;\n+        }\n@@ -107,1 +108,0 @@\n-  }\n@@ -109,3 +109,3 @@\n-  @Setup\n-  public void Setup() {\n-  }\n+    @Setup\n+    public void Setup() {\n+    }\n@@ -113,65 +113,65 @@\n-  @Benchmark\n-  public void testClearMemory1K(Blackhole bh)  {\n-    Object [] objs = new Object[64];\n-    bh.consume(objs);\n-  }\n-  @Benchmark\n-  public void testClearMemory2K(Blackhole bh)  {\n-    Object [] objs = new Object[128];\n-    bh.consume(objs);\n-  }\n-  @Benchmark\n-  public void testClearMemory4K(Blackhole bh)  {\n-    Object [] objs = new Object[256];\n-    bh.consume(objs);\n-  }\n-  @Benchmark\n-  public void testClearMemory8K(Blackhole bh)  {\n-    Object [] objs = new Object[512];\n-    bh.consume(objs);\n-  }\n-  @Benchmark\n-  public void testClearMemory16K(Blackhole bh)  {\n-    Object [] objs = new Object[1024];\n-    bh.consume(objs);\n-  }\n-  @Benchmark\n-  public void testClearMemory32K(Blackhole bh)  {\n-    Object [] objs = new Object[2048];\n-    bh.consume(objs);\n-  }\n-  @Benchmark\n-  public void testClearMemory1M(Blackhole bh)  {\n-    Object [] objs = new Object[65536];\n-    bh.consume(objs);\n-  }\n-  @Benchmark\n-  public void testClearMemory8M(Blackhole bh)  {\n-    Object [] objs = new Object[524288];\n-    bh.consume(objs);\n-  }\n-  @Benchmark\n-  public void testClearMemory56B(Blackhole bh)  {\n-    Payload7 obj = new Payload7();\n-    bh.consume(obj);\n-  }\n-  @Benchmark\n-  public void testClearMemory48B(Blackhole bh)  {\n-    Payload6 obj = new Payload6();\n-    bh.consume(obj);\n-  }\n-  @Benchmark\n-  public void testClearMemory40B(Blackhole bh)  {\n-    Payload5 obj = new Payload5();\n-    bh.consume(obj);\n-  }\n-  @Benchmark\n-  public void testClearMemory32B(Blackhole bh)  {\n-    Payload4 obj = new Payload4();\n-    bh.consume(obj);\n-  }\n-  @Benchmark\n-  public void testClearMemory24B(Blackhole bh)  {\n-    Payload4 obj = new Payload4();\n-    bh.consume(obj);\n-  }\n+    @Benchmark\n+    public void testClearMemory1K(Blackhole bh)  {\n+        Object [] objs = new Object[64];\n+        bh.consume(objs);\n+    }\n+    @Benchmark\n+    public void testClearMemory2K(Blackhole bh)  {\n+        Object [] objs = new Object[128];\n+        bh.consume(objs);\n+    }\n+    @Benchmark\n+    public void testClearMemory4K(Blackhole bh)  {\n+        Object [] objs = new Object[256];\n+        bh.consume(objs);\n+    }\n+    @Benchmark\n+    public void testClearMemory8K(Blackhole bh)  {\n+        Object [] objs = new Object[512];\n+        bh.consume(objs);\n+    }\n+    @Benchmark\n+    public void testClearMemory16K(Blackhole bh)  {\n+        Object [] objs = new Object[1024];\n+        bh.consume(objs);\n+    }\n+    @Benchmark\n+    public void testClearMemory32K(Blackhole bh)  {\n+        Object [] objs = new Object[2048];\n+        bh.consume(objs);\n+    }\n+    @Benchmark\n+    public void testClearMemory1M(Blackhole bh)  {\n+        Object [] objs = new Object[65536];\n+        bh.consume(objs);\n+    }\n+    @Benchmark\n+    public void testClearMemory8M(Blackhole bh)  {\n+        Object [] objs = new Object[524288];\n+        bh.consume(objs);\n+    }\n+    @Benchmark\n+    public void testClearMemory56B(Blackhole bh)  {\n+        Payload7 obj = new Payload7();\n+        bh.consume(obj);\n+    }\n+    @Benchmark\n+    public void testClearMemory48B(Blackhole bh)  {\n+        Payload6 obj = new Payload6();\n+        bh.consume(obj);\n+    }\n+    @Benchmark\n+    public void testClearMemory40B(Blackhole bh)  {\n+        Payload5 obj = new Payload5();\n+        bh.consume(obj);\n+    }\n+    @Benchmark\n+    public void testClearMemory32B(Blackhole bh)  {\n+        Payload4 obj = new Payload4();\n+        bh.consume(obj);\n+    }\n+    @Benchmark\n+    public void testClearMemory24B(Blackhole bh)  {\n+        Payload4 obj = new Payload4();\n+        bh.consume(obj);\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ClearMemory.java","additions":118,"deletions":118,"binary":false,"changes":236,"status":"modified"}]}