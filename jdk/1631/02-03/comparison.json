{"files":[{"patch":"@@ -4937,1 +4937,1 @@\n-  bool use64byteVector = UseAVX> 2 && MaxVectorSize > 32 && AVX3Threshold == 0;\n+  bool use64byteVector = MaxVectorSize == 64 && AVX3Threshold == 0;\n@@ -4940,1 +4940,1 @@\n-  } else if (UseAVX > 0) {\n+  } else if (MaxVectorSize >= 32) {\n@@ -4948,1 +4948,1 @@\n-  if (UseAVX > 0) {\n+  if (MaxVectorSize >= 32) {\n@@ -4971,1 +4971,1 @@\n-    if (UseAVX > 0) {\n+    if (MaxVectorSize >= 32) {\n@@ -4984,1 +4984,1 @@\n-  if (UseAVX > 2 && VM_Version::supports_avx512vl()) {\n+  if (UseAVX > 2 && MaxVectorSize >= 32 && VM_Version::supports_avx512vl()) {\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1531,0 +1531,8 @@\n+#ifdef COMPILER2\n+  if (is_intel() && MaxVectorSize > 16) {\n+    if (FLAG_IS_DEFAULT(UseFastStosb)) {\n+      UseFastStosb = false;\n+    }\n+  }\n+#endif\n+\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  class Payload7 {\n+  class Payload8 {\n@@ -52,0 +52,1 @@\n+    public long f7;\n@@ -53,1 +54,1 @@\n-    public Payload7() {\n+    public Payload8() {\n@@ -58,1 +59,1 @@\n-  class Payload6 {\n+  class Payload7 {\n@@ -65,0 +66,1 @@\n+    public long f6;\n@@ -66,1 +68,1 @@\n-    public Payload6() {\n+    public Payload7() {\n@@ -71,1 +73,1 @@\n-  class Payload5 {\n+  class Payload6 {\n@@ -77,0 +79,1 @@\n+    public long f5;\n@@ -78,1 +81,1 @@\n-    public Payload5() {\n+    public Payload6() {\n@@ -83,1 +86,1 @@\n-  class Payload4 {\n+  class Payload5 {\n@@ -88,0 +91,1 @@\n+    public long f4;\n@@ -89,1 +93,1 @@\n-    public Payload4() {\n+    public Payload5() {\n@@ -94,1 +98,1 @@\n-  class Payload3 {\n+  class Payload4 {\n@@ -98,0 +102,1 @@\n+    public long f3;\n@@ -99,1 +104,1 @@\n-    public Payload3() {\n+    public Payload4() {\n@@ -109,5 +114,2 @@\n-  public void testClearMemory7(Blackhole bh)  {\n-    Payload7 [] objs = new Payload7[1000];\n-    for(int i = 0 ; i < objs.length ; i++) {\n-      objs[i] = new Payload7();\n-    }\n+  public void testClearMemory1K(Blackhole bh)  {\n+    Object [] objs = new Object[64];\n@@ -117,5 +119,2 @@\n-  public void testClearMemory6(Blackhole bh)  {\n-    Payload6 [] objs = new Payload6[1000];\n-    for(int i = 0 ; i < objs.length ; i++) {\n-      objs[i] = new Payload6();\n-    }\n+  public void testClearMemory2K(Blackhole bh)  {\n+    Object [] objs = new Object[128];\n@@ -125,5 +124,2 @@\n-  public void testClearMemory5(Blackhole bh)  {\n-    Payload5 [] objs = new Payload5[1000];\n-    for(int i = 0 ; i < objs.length ; i++) {\n-      objs[i] = new Payload5();\n-    }\n+  public void testClearMemory4K(Blackhole bh)  {\n+    Object [] objs = new Object[256];\n@@ -133,5 +129,2 @@\n-  public void testClearMemory4(Blackhole bh)  {\n-    Payload4 [] objs = new Payload4[1000];\n-    for(int i = 0 ; i < objs.length ; i++) {\n-      objs[i] = new Payload4();\n-    }\n+  public void testClearMemory8K(Blackhole bh)  {\n+    Object [] objs = new Object[512];\n@@ -141,5 +134,17 @@\n-  public void testClearMemory3(Blackhole bh)  {\n-    Payload3 [] objs = new Payload3[1000];\n-    for(int i = 0 ; i < objs.length ; i++) {\n-      objs[i] = new Payload3();\n-    }\n+  public void testClearMemory16K(Blackhole bh)  {\n+    Object [] objs = new Object[1024];\n+    bh.consume(objs);\n+  }\n+  @Benchmark\n+  public void testClearMemory32K(Blackhole bh)  {\n+    Object [] objs = new Object[2048];\n+    bh.consume(objs);\n+  }\n+  @Benchmark\n+  public void testClearMemory1M(Blackhole bh)  {\n+    Object [] objs = new Object[65536];\n+    bh.consume(objs);\n+  }\n+  @Benchmark\n+  public void testClearMemory8M(Blackhole bh)  {\n+    Object [] objs = new Object[524288];\n@@ -148,0 +153,25 @@\n+  @Benchmark\n+  public void testClearMemory56B(Blackhole bh)  {\n+    Payload7 obj = new Payload7();\n+    bh.consume(obj);\n+  }\n+  @Benchmark\n+  public void testClearMemory48B(Blackhole bh)  {\n+    Payload6 obj = new Payload6();\n+    bh.consume(obj);\n+  }\n+  @Benchmark\n+  public void testClearMemory40B(Blackhole bh)  {\n+    Payload5 obj = new Payload5();\n+    bh.consume(obj);\n+  }\n+  @Benchmark\n+  public void testClearMemory32B(Blackhole bh)  {\n+    Payload4 obj = new Payload4();\n+    bh.consume(obj);\n+  }\n+  @Benchmark\n+  public void testClearMemory24B(Blackhole bh)  {\n+    Payload4 obj = new Payload4();\n+    bh.consume(obj);\n+  }\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ClearMemory.java","additions":65,"deletions":35,"binary":false,"changes":100,"status":"modified"}]}