{"files":[{"patch":"@@ -102,2 +102,1 @@\n-                            stackSize, Thread.MAX_PRIORITY);\n-                    t.setDaemon(true);\n+                            stackSize, Thread.MAX_PRIORITY, true);\n@@ -118,0 +117,8 @@\n+    @SuppressWarnings(\"removal\")\n+    private static void privilegedThreadSetName(Thread thread, String name) {\n+        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n+            thread.setName(name);\n+            return null;\n+        });\n+    }\n+\n@@ -143,2 +150,3 @@\n-                        String threadName = Thread.currentThread().getName();\n-                        Thread.currentThread().setName(\"process reaper (pid \" + pid + \")\");\n+                        Thread t = Thread.currentThread();\n+                        String threadName = t.getName();\n+                        privilegedThreadSetName(t, \"process reaper (pid \" + pid + \")\");\n@@ -175,1 +183,1 @@\n-                            Thread.currentThread().setName(threadName);\n+                            privilegedThreadSetName(t, threadName);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ProcessHandleImpl.java","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-                    ClassLoader.getSystemClassLoader(), priority);\n+                    ClassLoader.getSystemClassLoader(), priority, false);\n@@ -83,1 +83,1 @@\n-                                ClassLoader.getSystemClassLoader(), priority);\n+                                ClassLoader.getSystemClassLoader(), priority, false);\n@@ -109,1 +109,1 @@\n-            return createThread(name, target, 0L, null, priority);\n+            return createThread(name, target, 0L, null, priority, false);\n@@ -116,1 +116,1 @@\n-                                null, priority);\n+                                null, priority, false);\n@@ -127,0 +127,11 @@\n+        return newSystemThread(name, target, stackSize, priority, false);\n+    }\n+\n+    \/**\n+     * Returns a new InnocuousThread with null context class loader.\n+     * Thread priority is set to the given priority.\n+     * If {@code daemon} is {@code true}, the thread is set as a daemon thread.\n+     *\/\n+    public static Thread newSystemThread(String name, Runnable target,\n+                                         long stackSize, int priority,\n+                                         boolean daemon) {\n@@ -128,1 +139,1 @@\n-            return createThread(name, target, stackSize, null, priority);\n+            return createThread(name, target, stackSize, null, priority, daemon);\n@@ -135,1 +146,1 @@\n-                                null, priority);\n+                                null, priority, daemon);\n@@ -141,1 +152,1 @@\n-                                       ClassLoader loader, int priority) {\n+                                       ClassLoader loader, int priority, boolean daemon) {\n@@ -147,0 +158,1 @@\n+        t.setDaemon(daemon);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/InnocuousThread.java","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @bug 6980747\n+ * @bug 6980747 8297451\n@@ -55,0 +55,11 @@\n+    \/\/ Security manager that unconditionally performs Thread Modify Access checks.\n+    @SuppressWarnings(\"removal\")\n+    private static class TMACSecurityManager extends SecurityManager {\n+        static final RuntimePermission MODIFY_THREAD_PERMISSION =\n+                new RuntimePermission(\"modifyThread\");\n+        @Override\n+        public void checkAccess(Thread thread) {\n+            checkPermission(MODIFY_THREAD_PERMISSION);\n+        }\n+    }\n+\n@@ -63,1 +74,2 @@\n-             new RuntimePermission(\"setSecurityManager\"));\n+             new RuntimePermission(\"setSecurityManager\"),\n+             new RuntimePermission(\"modifyThread\"));\n@@ -66,1 +78,1 @@\n-        System.setSecurityManager(new SecurityManager());\n+        System.setSecurityManager(new TMACSecurityManager());\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/SecurityManagerClinit.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}