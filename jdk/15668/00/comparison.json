{"files":[{"patch":"@@ -36,0 +36,2 @@\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n@@ -83,1 +85,1 @@\n-    private static final Timer timer = new Timer(0, null);\n+\n@@ -86,0 +88,2 @@\n+    private static TimeoutHandler timeoutHandler;\n+\n@@ -230,0 +234,4 @@\n+        JLabel testTimeoutLabel = new JLabel(\"\", JLabel.CENTER);\n+        timeoutHandler = new TimeoutHandler(testTimeoutLabel, testTimeOut);\n+        frame.add(testTimeoutLabel, BorderLayout.NORTH);\n+\n@@ -235,19 +243,0 @@\n-        long tTimeout = TimeUnit.MINUTES.toMillis(testTimeOut);\n-\n-        final JLabel testTimeoutLabel = new JLabel(String.format(\"Test \" +\n-                \"timeout: %s\", convertMillisToTimeStr(tTimeout)), JLabel.CENTER);\n-        final long startTime = System.currentTimeMillis();\n-        timer.setDelay(1000);\n-        timer.addActionListener((e) -> {\n-            long leftTime = tTimeout - (System.currentTimeMillis() - startTime);\n-            if ((leftTime < 0) || failed) {\n-                timer.stop();\n-                testFailedReason = FAILURE_REASON\n-                                   + \"Timeout User did not perform testing.\";\n-                timeout = true;\n-                latch.countDown();\n-            }\n-            testTimeoutLabel.setText(String.format(\"Test timeout: %s\", convertMillisToTimeStr(leftTime)));\n-        });\n-        timer.start();\n-        frame.add(testTimeoutLabel, BorderLayout.NORTH);\n@@ -259,1 +248,1 @@\n-            timer.stop();\n+            timeoutHandler.stop();\n@@ -265,1 +254,1 @@\n-            timer.stop();\n+            timeoutHandler.stop();\n@@ -317,0 +306,48 @@\n+    private static final class TimeoutHandler implements ActionListener {\n+        private final long endTime;\n+\n+        private final Timer timer;\n+\n+        private final JLabel label;\n+\n+        public TimeoutHandler(final JLabel label, final long testTimeOut) {\n+            endTime = System.currentTimeMillis() + TimeUnit.MINUTES.toMillis(testTimeOut);\n+\n+            this.label = label;\n+\n+            timer = new Timer(1000, this);\n+            timer.start();\n+            updateTime(testTimeOut);\n+        }\n+\n+        @Override\n+        public void actionPerformed(ActionEvent e) {\n+            long leftTime = endTime - System.currentTimeMillis();\n+            if ((leftTime < 0) || failed) {\n+                timer.stop();\n+                testFailedReason = FAILURE_REASON\n+                                   + \"Timeout User did not perform testing.\";\n+                timeout = true;\n+                latch.countDown();\n+            }\n+            updateTime(leftTime);\n+        }\n+\n+        private void updateTime(final long leftTime) {\n+            if (leftTime < 0) {\n+                label.setText(\"Test timeout: 00:00:00\");\n+                return;\n+            }\n+            long hours = leftTime \/ 3_600_000;\n+            long minutes = (leftTime - hours * 3_600_000) \/ 60_000;\n+            long seconds = (leftTime - hours * 3_600_000 - minutes * 60_000) \/ 1_000;\n+            label.setText(String.format(\"Test timeout: %02d:%02d:%02d\",\n+                                        hours, minutes, seconds));\n+        }\n+\n+        public void stop() {\n+            timer.stop();\n+        }\n+    }\n+\n+\n@@ -416,10 +453,0 @@\n-    private static String convertMillisToTimeStr(long millis) {\n-        if (millis < 0) {\n-            return \"00:00:00\";\n-        }\n-        long hours = millis \/ 3_600_000;\n-        long minutes = (millis - hours * 3_600_000) \/ 60_000;\n-        long seconds = (millis - hours * 3_600_000 - minutes * 60_000) \/ 1_000;\n-        return String.format(\"%02d:%02d:%02d\", hours, minutes, seconds);\n-    }\n-\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":59,"deletions":32,"binary":false,"changes":91,"status":"modified"}]}