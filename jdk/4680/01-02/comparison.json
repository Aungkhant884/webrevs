{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import java.util.ArrayList;\n@@ -273,1 +274,1 @@\n-        Vector<String> names = new Vector<String>();\n+        ArrayList<String> names = new ArrayList<String>();\n@@ -276,1 +277,1 @@\n-                names.addElement(propertyNames[i]);\n+                names.add(propertyNames[i]);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/common\/SimpleRenderedImage.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.ArrayList;\n@@ -141,1 +142,1 @@\n-        Vector<Line.Info> vec = new Vector<>();\n+        ArrayList<Line.Info> vec = new ArrayList<>();\n@@ -146,1 +147,1 @@\n-                vec.addElement(sourceLineInfo[i]);\n+                vec.add(sourceLineInfo[i]);\n@@ -152,1 +153,1 @@\n-            returnedArray[i] = vec.elementAt(i);\n+            returnedArray[i] = vec.get(i);\n@@ -162,1 +163,1 @@\n-        Vector<Line.Info> vec = new Vector<>();\n+        ArrayList<Line.Info> vec = new ArrayList<>();\n@@ -167,1 +168,1 @@\n-                vec.addElement(targetLineInfo[i]);\n+                vec.add(targetLineInfo[i]);\n@@ -173,1 +174,1 @@\n-            returnedArray[i] = vec.elementAt(i);\n+            returnedArray[i] = vec.get(i);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/AbstractMixer.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.ArrayList;\n@@ -30,1 +31,0 @@\n-import java.util.Vector;\n@@ -209,1 +209,1 @@\n-        Vector<AudioFormat> formats = new Vector<>();\n+        ArrayList<AudioFormat> formats = new ArrayList<>();\n@@ -219,1 +219,1 @@\n-            formats.addElement(format);\n+            formats.add(format);\n@@ -228,1 +228,1 @@\n-            formats.addElement(format);\n+            formats.add(format);\n@@ -234,1 +234,1 @@\n-            formats.addElement(format);\n+            formats.add(format);\n@@ -239,1 +239,1 @@\n-            formatArray[i] = formats.elementAt(i);\n+            formatArray[i] = formats.get(i);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/AlawCodec.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.ArrayList;\n@@ -30,1 +31,0 @@\n-import java.util.Vector;\n@@ -90,1 +90,1 @@\n-        Vector<AudioFormat> newFormats = new Vector<>();\n+        ArrayList<AudioFormat> newFormats = new ArrayList<>();\n@@ -93,1 +93,1 @@\n-                newFormats.addElement( formats[i] );\n+                newFormats.add( formats[i] );\n@@ -100,1 +100,1 @@\n-            formatArray[i] = newFormats.elementAt(i);\n+            formatArray[i] = newFormats.get(i);\n@@ -170,1 +170,1 @@\n-        Vector<AudioFormat> formats = new Vector<>();\n+        ArrayList<AudioFormat> formats = new ArrayList<>();\n@@ -187,1 +187,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -199,1 +199,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -213,1 +213,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -221,1 +221,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -229,1 +229,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -241,1 +241,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -249,1 +249,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -257,1 +257,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -269,1 +269,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -277,1 +277,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -285,1 +285,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -297,1 +297,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -305,1 +305,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -313,1 +313,1 @@\n-                formats.addElement(format);\n+                formats.add(format);\n@@ -316,1 +316,1 @@\n-        AudioFormat[] formatArray;\n+        AudioFormat[] formatArray = new AudioFormat[formats.size()];\n@@ -318,5 +318,1 @@\n-        synchronized(formats) {\n-\n-            formatArray = new AudioFormat[formats.size()];\n-\n-            for (int i = 0; i < formatArray.length; i++) {\n+        for (int i = 0; i < formatArray.length; i++) {\n@@ -324,2 +320,1 @@\n-                formatArray[i] = formats.elementAt(i);\n-            }\n+            formatArray[i] = formats.get(i);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/PCMtoPCMCodec.java","additions":23,"deletions":28,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.ArrayList;\n@@ -30,1 +31,0 @@\n-import java.util.Vector;\n@@ -196,1 +196,1 @@\n-        Vector<AudioFormat> formats = new Vector<>();\n+        ArrayList<AudioFormat> formats = new ArrayList<>();\n@@ -208,1 +208,1 @@\n-            formats.addElement(format);\n+            formats.add(format);\n@@ -217,1 +217,1 @@\n-            formats.addElement(format);\n+            formats.add(format);\n@@ -224,1 +224,1 @@\n-            formats.addElement(format);\n+            formats.add(format);\n@@ -229,1 +229,1 @@\n-            formatArray[i] = formats.elementAt(i);\n+            formatArray[i] = formats.get(i);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/UlawCodec.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -244,1 +244,7 @@\n-        return list.toArray(new Line.Info[0]);\n+        Line.Info[] returnedArray = new Line.Info[list.size()];\n+\n+        for (int i = 0; i < returnedArray.length; i++) {\n+            returnedArray[i] = list.get(i);\n+        }\n+\n+        return returnedArray;\n@@ -276,1 +282,7 @@\n-        return list.toArray(new Line.Info[0]);\n+        Line.Info[] returnedArray = new Line.Info[list.size()];\n+\n+        for (int i = 0; i < returnedArray.length; i++) {\n+            returnedArray[i] = list.get(i);\n+        }\n+\n+        return returnedArray;\n","filename":"src\/java.desktop\/share\/classes\/javax\/sound\/sampled\/AudioSystem.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+import java.util.ArrayList;\n@@ -1459,1 +1460,1 @@\n-                Vector<File> fList = new Vector<File>();\n+                ArrayList<File> fList = new ArrayList<File>();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JFileChooser.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-import java.util.Vector;\n+import java.util.ArrayList;\n@@ -1316,1 +1316,1 @@\n-        Vector<MenuElement> elements = new Vector<>();\n+        ArrayList<MenuElement> elements = new ArrayList<>();\n@@ -1325,1 +1325,1 @@\n-                elements.insertElementAt(pop, 0);\n+                elements.add(0, pop);\n@@ -1329,1 +1329,1 @@\n-                elements.insertElementAt(menu, 0);\n+                elements.add(0, menu);\n@@ -1333,1 +1333,1 @@\n-                elements.insertElementAt(bar, 0);\n+                elements.add(0, bar);\n@@ -1340,1 +1340,1 @@\n-        elements.copyInto(me);\n+        elements.toArray(me);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JMenu.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-import java.util.Vector;\n+import java.util.ArrayList;\n@@ -430,1 +430,1 @@\n-        Vector<MenuElement> tmp = new Vector<MenuElement>();\n+        ArrayList<MenuElement> tmp = new ArrayList<MenuElement>();\n@@ -438,1 +438,1 @@\n-                tmp.addElement((MenuElement) m);\n+                tmp.add((MenuElement) m);\n@@ -443,1 +443,1 @@\n-            result[i] = tmp.elementAt(i);\n+            result[i] = tmp.get(i);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JMenuBar.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+import java.util.ArrayList;\n@@ -2344,1 +2345,1 @@\n-            Vector<Object> serOptions = new Vector<Object>();\n+            ArrayList<Object> serOptions = new ArrayList<Object>();\n@@ -2349,1 +2350,1 @@\n-                    serOptions.addElement(options[counter]);\n+                    serOptions.add(options[counter]);\n@@ -2354,1 +2355,1 @@\n-                serOptions.copyInto(arrayOptions);\n+                serOptions.toArray(arrayOptions);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JOptionPane.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+import java.util.ArrayList;\n@@ -603,1 +604,1 @@\n-        Vector<Component> tempItems = new Vector<Component>();\n+        ArrayList<Component> tempItems = new ArrayList<Component>();\n@@ -610,1 +611,1 @@\n-            tempItems.addElement(getComponent(index));\n+            tempItems.add(getComponent(index));\n@@ -1531,1 +1532,1 @@\n-        Vector<MenuElement> tmp = new Vector<MenuElement>();\n+        ArrayList<MenuElement> tmp = new ArrayList<MenuElement>();\n@@ -1539,1 +1540,1 @@\n-                tmp.addElement((MenuElement) m);\n+                tmp.add((MenuElement) m);\n@@ -1544,1 +1545,1 @@\n-            result[i] = tmp.elementAt(i);\n+            result[i] = tmp.get(i);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JPopupMenu.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1356,1 +1356,1 @@\n-        Vector<String> lafs = new Vector<String>();\n+        ArrayList<String> lafs = new ArrayList<String>();\n@@ -1359,1 +1359,1 @@\n-            lafs.addElement(st.nextToken());\n+            lafs.add(st.nextToken());\n@@ -1366,1 +1366,1 @@\n-        Vector<LookAndFeelInfo> ilafs = new Vector<LookAndFeelInfo>(lafs.size());\n+        ArrayList<LookAndFeelInfo> ilafs = new ArrayList<LookAndFeelInfo>(lafs.size());\n@@ -1371,1 +1371,1 @@\n-                ilafs.addElement(new LookAndFeelInfo(name, cls));\n+                ilafs.add(new LookAndFeelInfo(name, cls));\n@@ -1377,1 +1377,1 @@\n-            installedLAFs[i] = ilafs.elementAt(i);\n+            installedLAFs[i] = ilafs.get(i);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/UIManager.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.util.ArrayList;\n@@ -1086,1 +1087,1 @@\n-        Vector<Element> newElements = new Vector<Element>();\n+        ArrayList<Element> newElements = new ArrayList<Element>();\n@@ -1105,3 +1106,3 @@\n-                newElements.addElement(new BidiElement(bidiRoot,\n-                                                       prevElem.getStartOffset(),\n-                                                       firstPStart, prevLevel));\n+                newElements.add(new BidiElement(bidiRoot,\n+                                                prevElem.getStartOffset(),\n+                                                firstPStart, prevLevel));\n@@ -1154,2 +1155,2 @@\n-            newElements.addElement(new BidiElement(bidiRoot, firstSpanStart,\n-                                                   lastSpanEnd, levels[0]));\n+            newElements.add(new BidiElement(bidiRoot, firstSpanStart,\n+                                            lastSpanEnd, levels[0]));\n@@ -1158,3 +1159,3 @@\n-            newElements.addElement(new BidiElement(bidiRoot, firstSpanStart,\n-                                                   firstSpanEnd+firstPStart,\n-                                                   levels[0]));\n+            newElements.add(new BidiElement(bidiRoot, firstSpanStart,\n+                                            firstSpanEnd+firstPStart,\n+                                            levels[0]));\n@@ -1166,3 +1167,3 @@\n-                newElements.addElement(new BidiElement(bidiRoot, firstPStart+i,\n-                                                       firstPStart+j,\n-                                                       (int)levels[i]));\n+                newElements.add(new BidiElement(bidiRoot, firstPStart+i,\n+                                                firstPStart+j,\n+                                                (int)levels[i]));\n@@ -1172,4 +1173,4 @@\n-            newElements.addElement(new BidiElement(bidiRoot,\n-                                                   lastSpanStart+firstPStart,\n-                                                   lastSpanEnd,\n-                                                   levels[levels.length-1]));\n+            newElements.add(new BidiElement(bidiRoot,\n+                                            lastSpanStart+firstPStart,\n+                                            lastSpanEnd,\n+                                            levels[levels.length-1]));\n@@ -1179,1 +1180,1 @@\n-            newElements.addElement( newNextElem );\n+            newElements.add( newNextElem );\n@@ -1194,1 +1195,1 @@\n-        newElements.copyInto( addedElems );\n+        newElements.toArray( addedElems );\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/AbstractDocument.java","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -836,2 +836,2 @@\n-            Vector<Element> leftParents = new Vector<Element>();\n-            Vector<Element> rightParents = new Vector<Element>();\n+            ArrayList<Element> leftParents = new ArrayList<Element>();\n+            ArrayList<Element> rightParents = new ArrayList<Element>();\n@@ -840,1 +840,1 @@\n-                leftParents.addElement(e);\n+                leftParents.add(e);\n@@ -846,1 +846,1 @@\n-                rightParents.addElement(e);\n+                rightParents.add(e);\n@@ -861,1 +861,1 @@\n-                    spec = new ElementSpec(rightParents.elementAt(counter).getAttributes(),\n+                    spec = new ElementSpec(rightParents.get(counter).getAttributes(),\n@@ -2084,1 +2084,1 @@\n-                Vector<Element> children = new Vector<Element>();\n+                ArrayList<Element> children = new ArrayList<Element>();\n@@ -2088,1 +2088,1 @@\n-                    children.addElement(clone(to, left.getElement(i)));\n+                    children.add(clone(to, left.getElement(i)));\n@@ -2094,1 +2094,1 @@\n-                    children.addElement(e);\n+                    children.add(e);\n@@ -2097,1 +2097,1 @@\n-                        children.addElement(cloneAsNecessary(to, lj, rmOffs0, rmOffs1));\n+                        children.add(cloneAsNecessary(to, lj, rmOffs0, rmOffs1));\n@@ -2100,1 +2100,1 @@\n-                        children.addElement(cloneAsNecessary(to, rj, rmOffs0, rmOffs1));\n+                        children.add(cloneAsNecessary(to, rj, rmOffs0, rmOffs1));\n@@ -2107,1 +2107,1 @@\n-                    children.addElement(clone(to, right.getElement(i)));\n+                    children.add(clone(to, right.getElement(i)));\n@@ -2112,1 +2112,1 @@\n-                children.copyInto(c);\n+                children.toArray(c);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/DefaultStyledDocument.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.ArrayList;\n@@ -38,1 +39,0 @@\n-import java.util.Vector;\n@@ -4219,1 +4219,1 @@\n-            Vector<KeyStroke> keyStrokes = null;\n+            ArrayList<KeyStroke> keyStrokes = null;\n@@ -4224,1 +4224,1 @@\n-                        keyStrokes = new Vector<KeyStroke>();\n+                        keyStrokes = new ArrayList<KeyStroke>();\n@@ -4226,1 +4226,1 @@\n-                    keyStrokes.addElement(key);\n+                    keyStrokes.add(key);\n@@ -4245,1 +4245,1 @@\n-                            keyStrokes = new Vector<KeyStroke>();\n+                            keyStrokes = new ArrayList<>();\n@@ -4250,1 +4250,1 @@\n-                                keyStrokes.addElement(pStrokes[counter]);\n+                                keyStrokes.add(pStrokes[counter]);\n@@ -4261,1 +4261,1 @@\n-                            keyStrokes.copyInto(retValue);\n+                            keyStrokes.toArray(retValue);\n@@ -4271,1 +4271,1 @@\n-                keyStrokes.copyInto(retValue);\n+                keyStrokes.toArray(retValue);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/JTextComponent.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.util.ArrayList;\n@@ -296,1 +297,1 @@\n-        Vector<View> zones = new Vector<View>();\n+        ArrayList<View> zones = new ArrayList<View>();\n@@ -301,1 +302,1 @@\n-            zones.addElement(createZone(offs0, offs));\n+            zones.add(createZone(offs0, offs));\n@@ -305,1 +306,1 @@\n-        zones.copyInto(newZones);\n+        zones.toArray(newZones);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/ZoneView.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1971,1 +1971,1 @@\n-                    Vector<Integer> vec = new Vector<Integer>();\n+                    ArrayList<Integer> vec = new ArrayList<Integer>();\n@@ -1975,1 +1975,1 @@\n-                            vec.addElement(Integer.valueOf(i));\n+                            vec.add(Integer.valueOf(i));\n@@ -1980,1 +1980,1 @@\n-                        retval[i] = vec.elementAt(i).intValue();\n+                        retval[i] = vec.get(i).intValue();\n@@ -1996,1 +1996,1 @@\n-                    Vector<Integer> vec = new Vector<Integer>();\n+                    ArrayList<Integer> vec = new ArrayList<Integer>();\n@@ -2000,1 +2000,1 @@\n-                            vec.addElement(Integer.valueOf(i));\n+                            vec.add(Integer.valueOf(i));\n@@ -2005,1 +2005,1 @@\n-                        retval[i] = vec.elementAt(i).intValue();\n+                        retval[i] = vec.get(i).intValue();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/AccessibleHTML.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.ArrayList;\n@@ -1549,1 +1550,1 @@\n-        Vector<String> temp = new Vector<String>(4);\n+        ArrayList<String> temp = new ArrayList<String>(4);\n@@ -1572,1 +1573,1 @@\n-                temp.addElement(value.substring(last, current));\n+                temp.add(value.substring(last, current));\n@@ -1577,1 +1578,1 @@\n-        temp.copyInto(retValue);\n+        temp.toArray(retValue);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        Vector<RTFAttribute> a = new Vector<RTFAttribute>();\n+        ArrayList<RTFAttribute> a = new ArrayList<RTFAttribute>();\n@@ -48,4 +48,4 @@\n-        a.addElement(new BooleanAttribute(CHR, StyleConstants.Italic, \"i\"));\n-        a.addElement(new BooleanAttribute(CHR, StyleConstants.Bold, \"b\"));\n-        a.addElement(new BooleanAttribute(CHR, StyleConstants.Underline, \"ul\"));\n-        a.addElement(NumericAttribute.NewTwips(PGF, StyleConstants.LeftIndent, \"li\",\n+        a.add(new BooleanAttribute(CHR, StyleConstants.Italic, \"i\"));\n+        a.add(new BooleanAttribute(CHR, StyleConstants.Bold, \"b\"));\n+        a.add(new BooleanAttribute(CHR, StyleConstants.Underline, \"ul\"));\n+        a.add(NumericAttribute.NewTwips(PGF, StyleConstants.LeftIndent, \"li\",\n@@ -53,1 +53,1 @@\n-        a.addElement(NumericAttribute.NewTwips(PGF, StyleConstants.RightIndent, \"ri\",\n+        a.add(NumericAttribute.NewTwips(PGF, StyleConstants.RightIndent, \"ri\",\n@@ -55,1 +55,1 @@\n-        a.addElement(NumericAttribute.NewTwips(PGF, StyleConstants.FirstLineIndent, \"fi\",\n+        a.add(NumericAttribute.NewTwips(PGF, StyleConstants.FirstLineIndent, \"fi\",\n@@ -58,1 +58,1 @@\n-        a.addElement(new AssertiveAttribute(PGF, StyleConstants.Alignment,\n+        a.add(new AssertiveAttribute(PGF, StyleConstants.Alignment,\n@@ -60,1 +60,1 @@\n-        a.addElement(new AssertiveAttribute(PGF, StyleConstants.Alignment,\n+        a.add(new AssertiveAttribute(PGF, StyleConstants.Alignment,\n@@ -62,1 +62,1 @@\n-        a.addElement(new AssertiveAttribute(PGF, StyleConstants.Alignment,\n+        a.add(new AssertiveAttribute(PGF, StyleConstants.Alignment,\n@@ -64,1 +64,1 @@\n-        a.addElement(new AssertiveAttribute(PGF, StyleConstants.Alignment,\n+        a.add(new AssertiveAttribute(PGF, StyleConstants.Alignment,\n@@ -66,1 +66,1 @@\n-        a.addElement(NumericAttribute.NewTwips(PGF, StyleConstants.SpaceAbove,\n+        a.add(NumericAttribute.NewTwips(PGF, StyleConstants.SpaceAbove,\n@@ -68,1 +68,1 @@\n-        a.addElement(NumericAttribute.NewTwips(PGF, StyleConstants.SpaceBelow,\n+        a.add(NumericAttribute.NewTwips(PGF, StyleConstants.SpaceBelow,\n@@ -71,1 +71,1 @@\n-        a.addElement(new AssertiveAttribute(PST, RTFReader.TabAlignmentKey,\n+        a.add(new AssertiveAttribute(PST, RTFReader.TabAlignmentKey,\n@@ -73,1 +73,1 @@\n-        a.addElement(new AssertiveAttribute(PST, RTFReader.TabAlignmentKey,\n+        a.add(new AssertiveAttribute(PST, RTFReader.TabAlignmentKey,\n@@ -75,1 +75,1 @@\n-        a.addElement(new AssertiveAttribute(PST, RTFReader.TabAlignmentKey,\n+        a.add(new AssertiveAttribute(PST, RTFReader.TabAlignmentKey,\n@@ -79,1 +79,1 @@\n-        a.addElement(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n+        a.add(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n@@ -81,1 +81,1 @@\n-        a.addElement(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n+        a.add(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n@@ -83,1 +83,1 @@\n-        a.addElement(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n+        a.add(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n@@ -85,1 +85,1 @@\n-        a.addElement(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n+        a.add(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n@@ -87,1 +87,1 @@\n-        a.addElement(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n+        a.add(new AssertiveAttribute(PST, RTFReader.TabLeaderKey,\n@@ -91,6 +91,6 @@\n-        a.addElement(new BooleanAttribute(CHR, Constants.Caps,      \"caps\"));\n-        a.addElement(new BooleanAttribute(CHR, Constants.Outline,   \"outl\"));\n-        a.addElement(new BooleanAttribute(CHR, Constants.SmallCaps, \"scaps\"));\n-        a.addElement(new BooleanAttribute(CHR, Constants.Shadow,    \"shad\"));\n-        a.addElement(new BooleanAttribute(CHR, Constants.Hidden,    \"v\"));\n-        a.addElement(new BooleanAttribute(CHR, Constants.Strikethrough,\n+        a.add(new BooleanAttribute(CHR, Constants.Caps,      \"caps\"));\n+        a.add(new BooleanAttribute(CHR, Constants.Outline,   \"outl\"));\n+        a.add(new BooleanAttribute(CHR, Constants.SmallCaps, \"scaps\"));\n+        a.add(new BooleanAttribute(CHR, Constants.Shadow,    \"shad\"));\n+        a.add(new BooleanAttribute(CHR, Constants.Hidden,    \"v\"));\n+        a.add(new BooleanAttribute(CHR, Constants.Strikethrough,\n@@ -98,1 +98,1 @@\n-        a.addElement(new BooleanAttribute(CHR, Constants.Deleted,\n+        a.add(new BooleanAttribute(CHR, Constants.Deleted,\n@@ -103,2 +103,2 @@\n-        a.addElement(new AssertiveAttribute(DOC, \"saveformat\", \"defformat\", \"RTF\"));\n-        a.addElement(new AssertiveAttribute(DOC, \"landscape\", \"landscape\"));\n+        a.add(new AssertiveAttribute(DOC, \"saveformat\", \"defformat\", \"RTF\"));\n+        a.add(new AssertiveAttribute(DOC, \"landscape\", \"landscape\"));\n@@ -106,1 +106,1 @@\n-        a.addElement(NumericAttribute.NewTwips(DOC, Constants.PaperWidth,\n+        a.add(NumericAttribute.NewTwips(DOC, Constants.PaperWidth,\n@@ -108,1 +108,1 @@\n-        a.addElement(NumericAttribute.NewTwips(DOC, Constants.PaperHeight,\n+        a.add(NumericAttribute.NewTwips(DOC, Constants.PaperHeight,\n@@ -110,1 +110,1 @@\n-        a.addElement(NumericAttribute.NewTwips(DOC, Constants.MarginLeft,\n+        a.add(NumericAttribute.NewTwips(DOC, Constants.MarginLeft,\n@@ -112,1 +112,1 @@\n-        a.addElement(NumericAttribute.NewTwips(DOC, Constants.MarginRight,\n+        a.add(NumericAttribute.NewTwips(DOC, Constants.MarginRight,\n@@ -114,1 +114,1 @@\n-        a.addElement(NumericAttribute.NewTwips(DOC, Constants.MarginTop,\n+        a.add(NumericAttribute.NewTwips(DOC, Constants.MarginTop,\n@@ -116,1 +116,1 @@\n-        a.addElement(NumericAttribute.NewTwips(DOC, Constants.MarginBottom,\n+        a.add(NumericAttribute.NewTwips(DOC, Constants.MarginBottom,\n@@ -118,1 +118,1 @@\n-        a.addElement(NumericAttribute.NewTwips(DOC, Constants.GutterWidth,\n+        a.add(NumericAttribute.NewTwips(DOC, Constants.GutterWidth,\n@@ -121,1 +121,1 @@\n-        a.addElement(new AssertiveAttribute(PGF, Constants.WidowControl,\n+        a.add(new AssertiveAttribute(PGF, Constants.WidowControl,\n@@ -123,1 +123,1 @@\n-        a.addElement(new AssertiveAttribute(PGF, Constants.WidowControl,\n+        a.add(new AssertiveAttribute(PGF, Constants.WidowControl,\n@@ -125,1 +125,1 @@\n-        a.addElement(new AssertiveAttribute(DOC, Constants.WidowControl,\n+        a.add(new AssertiveAttribute(DOC, Constants.WidowControl,\n@@ -130,1 +130,1 @@\n-        a.copyInto(attrs);\n+        a.toArray(attrs);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/rtf\/RTFAttributes.java","additions":42,"deletions":42,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-        Vector<CharacterKeywordPair> tempPairs = new Vector<CharacterKeywordPair>();\n+        ArrayList<CharacterKeywordPair> tempPairs = new ArrayList<CharacterKeywordPair>();\n@@ -102,1 +102,1 @@\n-            tempPairs.addElement(pair);\n+            tempPairs.add(pair);\n@@ -105,1 +105,1 @@\n-        tempPairs.copyInto(textKeywords);\n+        tempPairs.toArray(textKeywords);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/rtf\/RTFGenerator.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.ArrayList;\n@@ -30,1 +31,0 @@\n-import java.util.Vector;\n@@ -181,1 +181,1 @@\n-        Vector<Object> uselessKeys = new Vector<>();\n+        ArrayList<Object> uselessKeys = new ArrayList<>();\n@@ -189,1 +189,1 @@\n-                uselessKeys.addElement(myKey);\n+                uselessKeys.add(myKey);\n@@ -195,1 +195,1 @@\n-            Object myKey = uselessKeys.elementAt(i);\n+            Object myKey = uselessKeys.get(i);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/undo\/StateEdit.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.util.ArrayList;\n@@ -41,1 +42,0 @@\n-import java.util.Vector;\n@@ -139,1 +139,1 @@\n-            Vector<File> v = new Vector<>();\n+            ArrayList<File> v = new ArrayList<>();\n@@ -143,1 +143,1 @@\n-                    v.addElement(files[i]);\n+                    v.add(files[i]);\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/shell\/ShellFolder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1547,1 +1547,1 @@\n-        Vector<Long> v = new Vector<Long>();\n+        ArrayList<Long> v = new ArrayList<Long>();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindowPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -542,1 +542,1 @@\n-            Vector<PrintService> matchedServices = new Vector<>();\n+            ArrayList<PrintService> matchedServices = new ArrayList<>();\n@@ -551,1 +551,1 @@\n-                services[i] = matchedServices.elementAt(i);\n+                services[i] = matchedServices.get(i);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/PrintServiceLookupProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}