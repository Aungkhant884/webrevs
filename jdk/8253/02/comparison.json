{"files":[{"patch":"@@ -5288,1 +5288,1 @@\n-        UNKNOWN;\n+        UNKNOWN; \/\/ must be the last enum constant for calculating the size of \"aliases\" hash map.\n@@ -8574,1 +8574,1 @@\n-            aliases = HashMap.newHashMap(162);\n+            aliases = HashMap.newHashMap(UNKNOWN.ordinal() + 1);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Character.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8080535 8191410 8215194 8221431 8239383 8268081 8283465\n+ * @bug 8080535 8191410 8215194 8221431 8239383 8268081 8283465 8284856\n@@ -28,1 +28,2 @@\n- *      of Character.UnicodeBlock constants.\n+ *      of Character.UnicodeBlock constants. Also checks the size of\n+ *      Character.UnicodeScript's \"aliases\" map.\n@@ -41,1 +42,1 @@\n-    public void test_NumberEntities() throws Throwable {\n+    public void test_UnicodeBlock_NumberEntities() throws Throwable {\n@@ -50,0 +51,7 @@\n+    public void test_UnicodeScript_aliases() throws Throwable {\n+        \/\/ The number of entries in Character.UnicodeScript.aliases.\n+        \/\/ See src\/java.base\/share\/classes\/java\/lang\/Character.java\n+        Field aliases = Character.UnicodeScript.class.getDeclaredField(\"aliases\");\n+        aliases.setAccessible(true);\n+        assertEquals(((Map)aliases.get(null)).size(), Character.UnicodeScript.UNKNOWN.ordinal() + 1);\n+    }\n","filename":"test\/jdk\/java\/lang\/Character\/UnicodeBlock\/NumberEntities.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}