{"files":[{"patch":"@@ -180,0 +180,6 @@\n+  ifneq ($$($1_MODULE), )\n+    $1_MODULE_SUBDIR := \/$$($1_MODULE)\n+  endif\n+\n+  $1_SAFE_NAME := $$(strip $$(subst \/,_, $1))\n+\n@@ -218,5 +224,3 @@\n-      # How to launch the server. This must use JAVA_DETACH, which is the \"big\" java\n-      # with an ability to detach from fixpath (on Windows)\n-      # This will be executed by the client, if needed.\n-      $1_JAVAC_SERVER_CMD := $$(JAVA_DETACH) $$($1_JAVA_FLAGS) $$($1_JAVAC)\n-      $1_ESCAPED_CMD := $$(subst $$(SPACE),%20,$$(subst $$(COMMA),%2C,$$(strip $$($1_JAVAC_SERVER_CMD))))\n+      # Create a configuration file with the needed information for the javac\n+      # server to function properly.\n+      $1_JAVAC_SERVER_CONFIG := $$($1_BIN)$$($1_MODULE_SUBDIR)\/_the.$$($1_SAFE_NAME)-server.conf\n@@ -224,1 +228,1 @@\n-      # The port file contains the tcp\/ip on which the server listens\n+      # The portfile contains the tcp\/ip on which the server listens\n@@ -226,1 +230,10 @@\n-      $1_JAVA_SERVER_FLAGS := --server:portfile=$$(JAVAC_SERVER_DIR)\/server.port,sjavac=$$($1_ESCAPED_CMD)\n+      $1_JAVAC_PORT_FILE := $$(JAVAC_SERVER_DIR)\/server.port\n+\n+      # The servercmd specified how to launch the server. This must use\n+      # JAVA_DETACH, which is the \"big\" java with an ability to detach from\n+      # fixpath (on Windows) This will be executed by the client, if needed.\n+      $1_JAVAC_SERVER_CMD := $$(JAVA_DETACH) $$($1_JAVA_FLAGS) $$($1_JAVAC)\n+\n+      $1_CONFIG_VARDEPS := $$($1_JAVAC_PORT_FILE) $$($1_JAVAC_SERVER_CMD)\n+      $1_CONFIG_VARDEPS_FILE := $$(call DependOnVariable, $1_CONFIG_VARDEPS, \\\n+          $$($1_BIN)$$($1_MODULE_SUBDIR)\/_the.$1.config_vardeps)\n@@ -228,2 +241,12 @@\n-      # Always use small to launch client\n-      $1_JAVAC_CMD := $$(JAVA_SMALL) $$($1_JAVA_FLAGS) $$($1_JAVAC) $$($1_JAVA_SERVER_FLAGS)\n+      ifeq ($(call isBuildOs, windows), true)\n+        $1_ECHO_COMMAND := $(FIXPATH) cmd \/c echo\n+      else\n+        $1_ECHO_COMMAND := $(ECHO)\n+      endif\n+      $$($1_JAVAC_SERVER_CONFIG): $$($1_CONFIG_VARDEPS_FILE)\n+\t$$($1_ECHO_COMMAND) portfile=$$($1_JAVAC_PORT_FILE) > $$@\n+\t$$($1_ECHO_COMMAND) servercmd=$$($1_JAVAC_SERVER_CMD) >> $$@\n+\n+      # Always use small java to launch client\n+      $1_JAVAC_CMD := $$(JAVA_SMALL) $$($1_JAVA_FLAGS) $$($1_JAVAC) \\\n+          --server:conf=$$($1_JAVAC_SERVER_CONFIG)\n@@ -266,4 +289,0 @@\n-  ifneq ($$($1_MODULE), )\n-    $1_MODULE_SUBDIR := \/$$($1_MODULE)\n-  endif\n-\n@@ -334,3 +353,0 @@\n-\n-    $1_SAFE_NAME := $$(strip $$(subst \/,_, $1))\n-\n@@ -445,1 +461,1 @@\n-        $$($1_VARDEPS_FILE) $$($1_EXTRA_DEPS)\n+        $$($1_VARDEPS_FILE) $$($1_EXTRA_DEPS) $$($1_JAVAC_SERVER_CONFIG)\n","filename":"make\/common\/JavaCompilation.gmk","additions":33,"deletions":17,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-    public static String extractStringOption(String opName, String s, String deflt) {\n+    private static String extractStringOptionWithDelimiter(String opName, String s, String deflt, char delimiter) {\n@@ -86,1 +86,1 @@\n-        int pe = s.indexOf(',', p);\n+        int pe = s.indexOf(delimiter, p);\n@@ -91,0 +91,8 @@\n+    public static String extractStringOption(String opName, String s, String deflt) {\n+        return extractStringOptionWithDelimiter(opName, s, deflt, ',');\n+    }\n+\n+    public static String extractStringOptionLine(String opName, String s, String deflt) {\n+        return extractStringOptionWithDelimiter(opName, s, deflt, '\\n').strip();\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/Util.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,3 @@\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -45,1 +48,0 @@\n-import com.sun.tools.sjavac.options.OptionHelper;\n@@ -47,1 +49,0 @@\n-import com.sun.tools.sjavac.server.CompilationSubResult;\n@@ -52,2 +53,0 @@\n-import static java.util.stream.Collectors.joining;\n-\n@@ -64,9 +63,1 @@\n-    \/\/ The id can perhaps be used in the future by the javac server to reuse the\n-    \/\/ JavaCompiler instance for several compiles using the same id.\n-    private final String id;\n-    private final PortFile portFile;\n-\n-    \/\/ Default keepalive for server is 120 seconds.\n-    \/\/ I.e. it will accept 120 seconds of inactivity before quitting.\n-    private final int keepalive;\n-    private final int poolsize;\n+    private PortFile portFile;\n@@ -74,5 +65,3 @@\n-    \/\/ The sjavac option specifies how the server part of sjavac is spawned.\n-    \/\/ If you have the experimental sjavac in your path, you are done. If not, you have\n-    \/\/ to point to a com.sun.tools.sjavac.Main that supports --startserver\n-    \/\/ for example by setting: sjavac=java%20-jar%20...javac.jar%com.sun.tools.sjavac.Main\n-    private final String sjavacForkCmd;\n+    \/\/ The servercmd option specifies how the server part of sjavac is spawned.\n+    \/\/ It should point to a com.sun.tools.sjavac.Main that supports --startserver\n+    private String serverCommand;\n@@ -80,0 +69,3 @@\n+    \/\/ Accept 120 seconds of inactivity before quitting.\n+    private static final int KEEPALIVE = 120;\n+    private static final int POOLSIZE = Runtime.getRuntime().availableProcessors();\n@@ -81,6 +73,3 @@\n-    static int CONNECTION_TIMEOUT = 2000;\n-    static int MAX_CONNECT_ATTEMPTS = 3;\n-    static int WAIT_BETWEEN_CONNECT_ATTEMPTS = 2000;\n-\n-    \/\/ Store the server conf settings here.\n-    private final String settings;\n+    private static final int CONNECTION_TIMEOUT = 2000;\n+    private static final int MAX_CONNECT_ATTEMPTS = 3;\n+    private static final int WAIT_BETWEEN_CONNECT_ATTEMPTS = 2000;\n@@ -89,13 +78,2 @@\n-        String tmpServerConf = options.getServerConf();\n-        String serverConf = (tmpServerConf!=null)? tmpServerConf : \"\";\n-        String tmpId = Util.extractStringOption(\"id\", serverConf);\n-        id = (tmpId!=null) ? tmpId : \"id\"+(((new java.util.Random()).nextLong())&Long.MAX_VALUE);\n-        String defaultPortfile = options.getDestDir()\n-                                        .resolve(\"javac_server\")\n-                                        .toAbsolutePath()\n-                                        .toString();\n-        String portfileName = Util.extractStringOption(\"portfile\", serverConf, defaultPortfile);\n-        portFile = SjavacServer.getPortFile(portfileName);\n-        sjavacForkCmd = Util.extractStringOption(\"sjavac\", serverConf, \"sjavac\");\n-        int poolsize = Util.extractIntOption(\"poolsize\", serverConf);\n-        keepalive = Util.extractIntOption(\"keepalive\", serverConf, 120);\n+        String serverConf = options.getServerConf();\n+        String configFile = Util.extractStringOption(\"conf\", serverConf, \"\");\n@@ -103,3 +81,3 @@\n-        this.poolsize = poolsize > 0 ? poolsize : Runtime.getRuntime().availableProcessors();\n-        settings = (serverConf.equals(\"\")) ? \"id=\"+id+\",portfile=\"+portfileName : serverConf;\n-    }\n+        try {\n+            List<String> configFileLines = Files.readAllLines(Path.of(configFile), StandardCharsets.UTF_8);\n+            String configFileContent = String.join(\"\\n\", configFileLines);\n@@ -107,6 +85,21 @@\n-    \/**\n-     * Hand out the server settings.\n-     * @return The server settings, possibly a default value.\n-     *\/\n-    public String serverSettings() {\n-        return settings;\n+            String portfileName = Util.extractStringOptionLine(\"portfile\", configFileContent, \"\");\n+            if (portfileName.isEmpty()) {\n+                Log.error(\"Configuration file missing value for 'portfile'\");\n+                portFile = null;\n+            } else  {\n+                portFile = SjavacServer.getPortFile(portfileName);\n+            }\n+\n+            String serverCommandString = Util.extractStringOptionLine(\"servercmd\", configFileContent, \"\");\n+            if (serverCommandString.isEmpty()) {\n+                Log.error(\"Configuration file missing value for 'servercmd'\");\n+                serverCommand = null;\n+            } else  {\n+                serverCommand = serverCommandString;\n+            }\n+        } catch (IOException e) {\n+            Log.error(\"Cannot read configuration file \" + configFile);\n+            Log.debug(e);\n+            portFile = null;\n+            serverCommand = null;\n+        }\n@@ -117,0 +110,5 @@\n+        if (portFile == null || serverCommand == null) {\n+            Log.error(\"Incorrect configuration, portfile and\/or servercmd missing\");\n+            return Result.ERROR;\n+        }\n+\n@@ -179,1 +177,1 @@\n-        makeSureServerIsRunning(portFile);\n+        makeSureServerIsRunning();\n@@ -209,1 +207,1 @@\n-    private void makeSureServerIsRunning(PortFile portFile)\n+    private void makeSureServerIsRunning()\n@@ -224,4 +222,1 @@\n-        SjavacClient.fork(sjavacForkCmd,\n-                          portFile,\n-                          poolsize,\n-                          keepalive);\n+        startNewServer();\n@@ -238,1 +233,1 @@\n-    public static void fork(String sjavacCmd, PortFile portFile, int poolsize, int keepalive)\n+    public void startNewServer()\n@@ -241,1 +236,1 @@\n-        cmd.addAll(Arrays.asList(OptionHelper.unescapeCmdArg(sjavacCmd).split(\" \")));\n+        cmd.addAll(Arrays.asList(serverCommand.split(\" \")));\n@@ -244,2 +239,2 @@\n-              + \",poolsize=\" + poolsize\n-              + \",keepalive=\"+ keepalive);\n+              + \",poolsize=\" + POOLSIZE\n+              + \",keepalive=\"+ KEEPALIVE);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/client\/SjavacClient.java","additions":52,"deletions":57,"binary":false,"changes":109,"status":"modified"}]}