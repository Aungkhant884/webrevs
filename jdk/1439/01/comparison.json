{"files":[{"patch":"@@ -310,0 +310,1 @@\n+  static void set_enabled_events_with_lock(JvmtiEnvBase *env, jlong now_enabled);\n@@ -412,0 +413,13 @@\n+void\n+JvmtiEventControllerPrivate::set_enabled_events_with_lock(JvmtiEnvBase* env, jlong now_enabled) {\n+  \/\/ The state for ObjectFree events must be enabled or disabled\n+  \/\/ under the TagMap lock, to allow pending object posting events to complete.\n+  JvmtiTagMap* tag_map = env->tag_map_acquire();\n+  if (tag_map != NULL) {\n+    MutexLocker ml(tag_map->lock(), Mutex::_no_safepoint_check_flag);\n+    env->env_event_enable()->_event_enabled.set_bits(now_enabled);\n+  } else {\n+    env->env_event_enable()->_event_enabled.set_bits(now_enabled);\n+  }\n+}\n+\n@@ -445,2 +459,2 @@\n-  \/\/ will we really send these events to this env\n-  env->env_event_enable()->_event_enabled.set_bits(now_enabled);\n+  \/\/ Set\/reset the event enabled under the tagmap lock.\n+  set_enabled_events_with_lock(env, now_enabled);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1161,0 +1161,2 @@\n+    \/\/ Recheck whether to post object free events under the lock.\n+    post_object_free = post_object_free && env()->is_enabled(JVMTI_EVENT_OBJECT_FREE);\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-  inline Mutex* lock()                      { return &_lock; }\n@@ -63,0 +62,1 @@\n+  inline Mutex* lock()                      { return &_lock; }\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}