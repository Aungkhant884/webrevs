{"files":[{"patch":"@@ -30,1 +30,3 @@\n-LineReader::LineReader(const char* filename, size_t initial_length, size_t max_length) :\n+#include <errno.h>\n+\n+LineReader::LineReader(const char* filename, size_t initial_length) :\n@@ -32,1 +34,1 @@\n-  _buffer_length(initial_length), _max_buffer_length(max_length), _buffer(nullptr)\n+  _buffer_length(initial_length), _buffer(nullptr)\n@@ -34,1 +36,0 @@\n-  assert(_buffer_length < _max_buffer_length, \"sanity\");\n@@ -74,29 +75,8 @@\n-  char tmp[128];\n-  char* s;\n-  bool has_input = false;\n-  while ((s = fgets(tmp, sizeof(tmp), _stream)) != nullptr) {\n-    char c;\n-    has_input = true;\n-    \/\/ Get up to 127 characters, followed by '\\0' (fgets always terminates the line),\n-    \/\/ Iff the last character is not '\\n', that means we have read a partial line\n-    \/\/ and should keep going.\n-    while ((c = *s++) != '\\0') {\n-      \/\/ Grow buffer if necessary\n-      if (buffer_pos + 1 >= _buffer_length) {\n-        size_t new_length = _buffer_length * 2;\n-        if (new_length < _buffer_length) {\n-          \/\/ This could happen on 32-bit. On 64-bit, the VM would have exited\n-          \/\/ due to OOM before we ever get to here.\n-          fatal(\"Cannot handle excessively long lines\");\n-        }\n-        _buffer = REALLOC_RESOURCE_ARRAY(char, _buffer, _buffer_length, new_length);\n-        assert(_buffer != nullptr, \"OOM would have exited JVM\");\n-        _buffer_length = new_length;\n-      }\n-\n-      if (c == '\\n') {\n-        break;\n-      } else if (c == '\\r') {\n-        \/\/ skip LF\n-      } else {\n-        _buffer[buffer_pos++] = c;\n+  int c;\n+  while ((c = getc(_stream)) != EOF) {\n+    if (buffer_pos + 1 >= _buffer_length) {\n+      size_t new_length = _buffer_length * 2;\n+      if (new_length < _buffer_length) {\n+        \/\/ This could happen on 32-bit. On 64-bit, the VM would have exited\n+        \/\/ due to OOM before we ever get to here.\n+        fatal(\"Cannot handle excessively long lines\");\n@@ -104,0 +84,3 @@\n+      _buffer = REALLOC_RESOURCE_ARRAY(char, _buffer, _buffer_length, new_length);\n+      assert(_buffer != nullptr, \"OOM would have exited JVM\");\n+      _buffer_length = new_length;\n@@ -105,1 +88,0 @@\n-\n@@ -108,0 +90,4 @@\n+    } else if (c == '\\r') {\n+      \/\/ skip LF\n+    } else {\n+      _buffer[buffer_pos++] = c;\n@@ -114,2 +100,1 @@\n-  if (buffer_pos == 0 && !has_input) {\n-    \/\/ fgets() has not returned anything. We may have an error or EOF\n+  if (buffer_pos == 0 && c == EOF) {\n","filename":"src\/hotspot\/share\/utilities\/lineReader.cpp","additions":20,"deletions":35,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-  size_t _max_buffer_length;\n@@ -42,1 +41,1 @@\n-  LineReader(const char* filename, size_t initial_length = 160, size_t max_length = (SIZE_MAX \/ 2) - 1);\n+  LineReader(const char* filename, size_t initial_length = 160);\n","filename":"src\/hotspot\/share\/utilities\/lineReader.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}