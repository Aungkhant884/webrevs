{"files":[{"patch":"@@ -115,1 +115,1 @@\n-    private transient volatile String [] compName;\n+    private transient volatile String[] compName;\n@@ -330,1 +330,1 @@\n-    public boolean isCS_sRGB () {\n+    public boolean isCS_sRGB() {\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ColorSpace.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.io.ObjectInputStream;\n@@ -133,2 +134,2 @@\n-    public ICC_ColorSpace (ICC_Profile profile) {\n-        super (profile.getColorSpaceType(), profile.getNumComponents());\n+    public ICC_ColorSpace(ICC_Profile profile) {\n+        super(profile.getColorSpaceType(), profile.getNumComponents());\n@@ -139,6 +140,6 @@\n-        if ((profileClass != ICC_Profile.CLASS_INPUT) &&\n-            (profileClass != ICC_Profile.CLASS_DISPLAY) &&\n-            (profileClass != ICC_Profile.CLASS_OUTPUT) &&\n-            (profileClass != ICC_Profile.CLASS_COLORSPACECONVERSION) &&\n-            (profileClass != ICC_Profile.CLASS_NAMEDCOLOR) &&\n-            (profileClass != ICC_Profile.CLASS_ABSTRACT)) {\n+        if (profileClass != ICC_Profile.CLASS_INPUT\n+                && profileClass != ICC_Profile.CLASS_DISPLAY\n+                && profileClass != ICC_Profile.CLASS_OUTPUT\n+                && profileClass != ICC_Profile.CLASS_COLORSPACECONVERSION\n+                && profileClass != ICC_Profile.CLASS_NAMEDCOLOR\n+                && profileClass != ICC_Profile.CLASS_ABSTRACT) {\n@@ -161,3 +162,2 @@\n-    private void readObject(java.io.ObjectInputStream s)\n-        throws ClassNotFoundException, java.io.IOException {\n-\n+    private void readObject(ObjectInputStream s)\n+            throws ClassNotFoundException, IOException {\n@@ -225,1 +225,1 @@\n-        float[] result = new float [3];\n+        float[] result = new float[3];\n@@ -276,1 +276,1 @@\n-        float[] result = new float [nc];\n+        float[] result = new float[nc];\n@@ -417,1 +417,1 @@\n-        float[] result = new float [3];\n+        float[] result = new float[3];\n@@ -557,1 +557,1 @@\n-        float[] result = new float [nc];\n+        float[] result = new float[nc];\n@@ -624,1 +624,1 @@\n-            maxVal[0] = maxVal[1] = maxVal[2] = 1.0f + (32767.0f\/ 32768.0f);\n+            maxVal[0] = maxVal[1] = maxVal[2] = 1.0f + (32767.0f \/ 32768.0f);\n@@ -645,1 +645,0 @@\n-\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_ColorSpace.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-                \"LINEAR_RGB.pf\", ColorSpace.TYPE_RGB, 3, CLASS_DISPLAY));\n+               \"LINEAR_RGB.pf\", ColorSpace.TYPE_RGB, 3, CLASS_DISPLAY));\n@@ -773,1 +773,1 @@\n-    protected void finalize () {\n+    protected void finalize() {\n@@ -787,4 +787,0 @@\n-    ICC_Profile thisProfile;\n-\n-        Profile p = null;\n-\n@@ -792,1 +788,1 @@\n-\n+        Profile p;\n@@ -798,1 +794,0 @@\n-\n@@ -800,14 +795,4 @@\n-            if ((getColorSpaceType (p) == ColorSpace.TYPE_GRAY) &&\n-                (getData (p, icSigMediaWhitePointTag) != null) &&\n-                (getData (p, icSigGrayTRCTag) != null)) {\n-                thisProfile = new ICC_ProfileGray (p);\n-            }\n-            else if ((getColorSpaceType (p) == ColorSpace.TYPE_RGB) &&\n-                (getData (p, icSigMediaWhitePointTag) != null) &&\n-                (getData (p, icSigRedColorantTag) != null) &&\n-                (getData (p, icSigGreenColorantTag) != null) &&\n-                (getData (p, icSigBlueColorantTag) != null) &&\n-                (getData (p, icSigRedTRCTag) != null) &&\n-                (getData (p, icSigGreenTRCTag) != null) &&\n-                (getData (p, icSigBlueTRCTag) != null)) {\n-                thisProfile = new ICC_ProfileRGB (p);\n+            if (getColorSpaceType(p) == ColorSpace.TYPE_GRAY\n+                    && getData(p, icSigMediaWhitePointTag) != null\n+                    && getData(p, icSigGrayTRCTag) != null) {\n+                return new ICC_ProfileGray(p);\n@@ -815,2 +800,9 @@\n-            else {\n-                thisProfile = new ICC_Profile (p);\n+            if (getColorSpaceType(p) == ColorSpace.TYPE_RGB\n+                    && getData(p, icSigMediaWhitePointTag) != null\n+                    && getData(p, icSigRedColorantTag) != null\n+                    && getData(p, icSigGreenColorantTag) != null\n+                    && getData(p, icSigBlueColorantTag) != null\n+                    && getData(p, icSigRedTRCTag) != null\n+                    && getData(p, icSigGreenTRCTag) != null\n+                    && getData(p, icSigBlueTRCTag) != null) {\n+                return new ICC_ProfileRGB(p);\n@@ -819,1 +811,1 @@\n-            thisProfile = new ICC_Profile (p);\n+            \/\/ will try to create a general icc profile\n@@ -821,1 +813,1 @@\n-        return thisProfile;\n+        return new ICC_Profile(p);\n@@ -909,1 +901,0 @@\n-\n@@ -911,1 +902,0 @@\n-\n@@ -920,4 +910,1 @@\n-        int profileSize = ((header[0] & 0xff) << 24) |\n-                          ((header[1] & 0xff) << 16) |\n-                          ((header[2] & 0xff) << 8) |\n-                          (header[3] & 0xff);\n+        int profileSize = intFromBigEndian(header, 0);\n@@ -967,6 +954,1 @@\n-    byte[] theHeader;\n-\n-        theHeader = getData(icSigHead); \/* getData will activate deferred\n-                                           profiles if necessary *\/\n-\n-        return (int) theHeader[8];\n+        return getData(icSigHead)[8];\n@@ -981,6 +963,1 @@\n-    byte[] theHeader;\n-\n-        theHeader = getData(icSigHead); \/* getData will activate deferred\n-                                           profiles if necessary *\/\n-\n-        return (int) theHeader[9];\n+        return getData(icSigHead)[9];\n@@ -995,3 +972,0 @@\n-    byte[] theHeader;\n-    int theClassSig, theClass;\n-\n@@ -1002,39 +976,14 @@\n-\n-        theHeader = getData(icSigHead);\n-\n-        theClassSig = intFromBigEndian (theHeader, icHdrDeviceClass);\n-\n-        switch (theClassSig) {\n-        case icSigInputClass:\n-            theClass = CLASS_INPUT;\n-            break;\n-\n-        case icSigDisplayClass:\n-            theClass = CLASS_DISPLAY;\n-            break;\n-\n-        case icSigOutputClass:\n-            theClass = CLASS_OUTPUT;\n-            break;\n-\n-        case icSigLinkClass:\n-            theClass = CLASS_DEVICELINK;\n-            break;\n-\n-        case icSigColorSpaceClass:\n-            theClass = CLASS_COLORSPACECONVERSION;\n-            break;\n-\n-        case icSigAbstractClass:\n-            theClass = CLASS_ABSTRACT;\n-            break;\n-\n-        case icSigNamedColorClass:\n-            theClass = CLASS_NAMEDCOLOR;\n-            break;\n-\n-        default:\n-            throw new IllegalArgumentException(\"Unknown profile class\");\n-        }\n-\n-        return theClass;\n+        byte[] theHeader = getData(icSigHead);\n+        int theClassSig = intFromBigEndian(theHeader, icHdrDeviceClass);\n+        return switch (theClassSig) {\n+            case icSigInputClass -> CLASS_INPUT;\n+            case icSigDisplayClass -> CLASS_DISPLAY;\n+            case icSigOutputClass -> CLASS_OUTPUT;\n+            case icSigLinkClass -> CLASS_DEVICELINK;\n+            case icSigColorSpaceClass -> CLASS_COLORSPACECONVERSION;\n+            case icSigAbstractClass -> CLASS_ABSTRACT;\n+            case icSigNamedColorClass -> CLASS_NAMEDCOLOR;\n+            default -> {\n+                throw new IllegalArgumentException(\"Unknown profile class\");\n+            }\n+        };\n@@ -1061,1 +1010,1 @@\n-        return    getColorSpaceType(cmmProfile);\n+        return getColorSpaceType(cmmProfile);\n@@ -1064,8 +1013,4 @@\n-    static int getColorSpaceType(Profile p) {\n-    byte[] theHeader;\n-    int theColorSpaceSig, theColorSpace;\n-\n-        theHeader = getData(p, icSigHead);\n-        theColorSpaceSig = intFromBigEndian(theHeader, icHdrColorSpace);\n-        theColorSpace = iccCStoJCS (theColorSpaceSig);\n-        return theColorSpace;\n+    private static int getColorSpaceType(Profile p) {\n+        byte[] theHeader = getData(p, icSigHead);\n+        int theColorSpaceSig = intFromBigEndian(theHeader, icHdrColorSpace);\n+        return iccCStoJCS(theColorSpaceSig);\n@@ -1089,12 +1034,3 @@\n-        return getPCSType(cmmProfile);\n-    }\n-\n-\n-    static int getPCSType(Profile p) {\n-    byte[] theHeader;\n-    int thePCSSig, thePCS;\n-\n-        theHeader = getData(p, icSigHead);\n-        thePCSSig = intFromBigEndian(theHeader, icHdrPcs);\n-        thePCS = iccCStoJCS(thePCSSig);\n-        return thePCS;\n+        byte[] theHeader = getData(cmmProfile, icSigHead);\n+        int thePCSSig = intFromBigEndian(theHeader, icHdrPcs);\n+        return iccCStoJCS(thePCSSig);\n@@ -1152,1 +1088,0 @@\n-\n@@ -1154,1 +1089,0 @@\n-\n@@ -1158,1 +1092,0 @@\n-\n@@ -1185,1 +1118,0 @@\n-\n@@ -1187,1 +1119,0 @@\n-\n@@ -1200,3 +1131,0 @@\n-    byte[]    theHeader;\n-    int    theColorSpaceSig, theNumComponents;\n-\n@@ -1207,80 +1135,24 @@\n-        theHeader = getData(icSigHead);\n-\n-        theColorSpaceSig = intFromBigEndian (theHeader, icHdrColorSpace);\n-\n-        switch (theColorSpaceSig) {\n-        case icSigGrayData:\n-            theNumComponents = 1;\n-            break;\n-\n-        case icSigSpace2CLR:\n-            theNumComponents = 2;\n-            break;\n-\n-        case icSigXYZData:\n-        case icSigLabData:\n-        case icSigLuvData:\n-        case icSigYCbCrData:\n-        case icSigYxyData:\n-        case icSigRgbData:\n-        case icSigHsvData:\n-        case icSigHlsData:\n-        case icSigCmyData:\n-        case icSigSpace3CLR:\n-            theNumComponents = 3;\n-            break;\n-\n-        case icSigCmykData:\n-        case icSigSpace4CLR:\n-            theNumComponents = 4;\n-            break;\n-\n-        case icSigSpace5CLR:\n-            theNumComponents = 5;\n-            break;\n-\n-        case icSigSpace6CLR:\n-            theNumComponents = 6;\n-            break;\n-\n-        case icSigSpace7CLR:\n-            theNumComponents = 7;\n-            break;\n-\n-        case icSigSpace8CLR:\n-            theNumComponents = 8;\n-            break;\n-\n-        case icSigSpace9CLR:\n-            theNumComponents = 9;\n-            break;\n-\n-        case icSigSpaceACLR:\n-            theNumComponents = 10;\n-            break;\n-\n-        case icSigSpaceBCLR:\n-            theNumComponents = 11;\n-            break;\n-\n-        case icSigSpaceCCLR:\n-            theNumComponents = 12;\n-            break;\n-\n-        case icSigSpaceDCLR:\n-            theNumComponents = 13;\n-            break;\n-\n-        case icSigSpaceECLR:\n-            theNumComponents = 14;\n-            break;\n-\n-        case icSigSpaceFCLR:\n-            theNumComponents = 15;\n-            break;\n-\n-        default:\n-            throw new ProfileDataException (\"invalid ICC color space\");\n-        }\n-\n-        return theNumComponents;\n+        byte[] theHeader = getData(icSigHead);\n+        int theColorSpaceSig = intFromBigEndian(theHeader, icHdrColorSpace);\n+        return switch (theColorSpaceSig) {\n+            case icSigGrayData -> 1;\n+            case icSigSpace2CLR -> 2;\n+            case icSigXYZData, icSigLabData, icSigLuvData, icSigYCbCrData,\n+                    icSigYxyData, icSigRgbData, icSigHsvData, icSigHlsData,\n+                    icSigCmyData, icSigSpace3CLR -> 3;\n+            case icSigCmykData, icSigSpace4CLR -> 4;\n+            case icSigSpace5CLR -> 5;\n+            case icSigSpace6CLR -> 6;\n+            case icSigSpace7CLR -> 7;\n+            case icSigSpace8CLR -> 8;\n+            case icSigSpace9CLR -> 9;\n+            case icSigSpaceACLR -> 10;\n+            case icSigSpaceBCLR -> 11;\n+            case icSigSpaceCCLR -> 12;\n+            case icSigSpaceDCLR -> 13;\n+            case icSigSpaceECLR -> 14;\n+            case icSigSpaceFCLR -> 15;\n+            default -> {\n+                throw new ProfileDataException(\"invalid ICC color space\");\n+            }\n+        };\n@@ -1295,1 +1167,0 @@\n-                                           \/* get the media white point tag *\/\n@@ -1302,10 +1173,3 @@\n-    float[] getXYZTag(int theTagSignature) {\n-    byte[] theData;\n-    float[] theXYZNumber;\n-    int i1, i2, theS15Fixed16;\n-\n-        theData = getData(theTagSignature); \/* get the tag data *\/\n-                                            \/* getData will activate deferred\n-                                               profiles if necessary *\/\n-\n-        theXYZNumber = new float [3];        \/* array to return *\/\n+    float[] getXYZTag(int tagSignature) {\n+        byte[] theData = getData(tagSignature);\n+        float[] theXYZNumber = new float[3]; \/* array to return *\/\n@@ -1314,3 +1178,3 @@\n-        for (i1 = 0, i2 = icXYZNumberX; i1 < 3; i1++, i2 += 4) {\n-            theS15Fixed16 = intFromBigEndian(theData, i2);\n-            theXYZNumber [i1] = ((float) theS15Fixed16) \/ 65536.0f;\n+        for (int i1 = 0, i2 = icXYZNumberX; i1 < 3; i1++, i2 += 4) {\n+            int theS15Fixed16 = intFromBigEndian(theData, i2);\n+            theXYZNumber[i1] = ((float) theS15Fixed16) \/ 65536.0f;\n@@ -1325,1 +1189,1 @@\n-     * obtained via {@link #getTRC}. {@code theTagSignature} should be one of\n+     * obtained via {@link #getTRC}. {@code tagSignature} should be one of\n@@ -1333,11 +1197,4 @@\n-    float getGamma(int theTagSignature) {\n-    byte[] theTRCData;\n-    float theGamma;\n-    int theU8Fixed8;\n-\n-        theTRCData = getData(theTagSignature); \/* get the TRC *\/\n-                                               \/* getData will activate deferred\n-                                                  profiles if necessary *\/\n-\n-        if (intFromBigEndian (theTRCData, icCurveCount) != 1) {\n-            throw new ProfileDataException (\"TRC is not a gamma\");\n+    float getGamma(int tagSignature) {\n+        byte[] theTRCData = getData(tagSignature);\n+        if (intFromBigEndian(theTRCData, icCurveCount) != 1) {\n+            throw new ProfileDataException(\"TRC is not a gamma\");\n@@ -1347,5 +1204,2 @@\n-        theU8Fixed8 = (shortFromBigEndian(theTRCData, icCurveData)) & 0xffff;\n-\n-        theGamma = ((float) theU8Fixed8) \/ 256.0f;\n-\n-        return theGamma;\n+        int theU8Fixed8 = shortFromBigEndian(theTRCData, icCurveData) & 0xffff;\n+        return theU8Fixed8 \/ 256.0f;\n@@ -1366,1 +1220,1 @@\n-     * short array. {@code theTagSignature} should be one of\n+     * short array. {@code tagSignature} should be one of\n@@ -1374,11 +1228,3 @@\n-    short[] getTRC(int theTagSignature) {\n-    byte[] theTRCData;\n-    short[] theTRC;\n-    int i1, i2, nElements, theU8Fixed8;\n-\n-        theTRCData = getData(theTagSignature); \/* get the TRC *\/\n-                                               \/* getData will activate deferred\n-                                                  profiles if necessary *\/\n-\n-        nElements = intFromBigEndian(theTRCData, icCurveCount);\n-\n+    short[] getTRC(int tagSignature) {\n+        byte[] theTRCData = getData(tagSignature);\n+        int nElements = intFromBigEndian(theTRCData, icCurveCount);\n@@ -1389,4 +1235,2 @@\n-        \/* make the short array *\/\n-        theTRC = new short [nElements];\n-\n-        for (i1 = 0, i2 = icCurveData; i1 < nElements; i1++, i2 += 2) {\n+        short[] theTRC = new short[nElements]; \/* array to return *\/\n+        for (int i1 = 0, i2 = icCurveData; i1 < nElements; i1++, i2 += 2) {\n@@ -1395,1 +1239,0 @@\n-\n@@ -1402,108 +1245,31 @@\n-    static int iccCStoJCS(int theColorSpaceSig) {\n-    int theColorSpace;\n-\n-        switch (theColorSpaceSig) {\n-        case icSigXYZData:\n-            theColorSpace = ColorSpace.TYPE_XYZ;\n-            break;\n-\n-        case icSigLabData:\n-            theColorSpace = ColorSpace.TYPE_Lab;\n-            break;\n-\n-        case icSigLuvData:\n-            theColorSpace = ColorSpace.TYPE_Luv;\n-            break;\n-\n-        case icSigYCbCrData:\n-            theColorSpace = ColorSpace.TYPE_YCbCr;\n-            break;\n-\n-        case icSigYxyData:\n-            theColorSpace = ColorSpace.TYPE_Yxy;\n-            break;\n-\n-        case icSigRgbData:\n-            theColorSpace = ColorSpace.TYPE_RGB;\n-            break;\n-\n-        case icSigGrayData:\n-            theColorSpace = ColorSpace.TYPE_GRAY;\n-            break;\n-\n-        case icSigHsvData:\n-            theColorSpace = ColorSpace.TYPE_HSV;\n-            break;\n-\n-        case icSigHlsData:\n-            theColorSpace = ColorSpace.TYPE_HLS;\n-            break;\n-\n-        case icSigCmykData:\n-            theColorSpace = ColorSpace.TYPE_CMYK;\n-            break;\n-\n-        case icSigCmyData:\n-            theColorSpace = ColorSpace.TYPE_CMY;\n-            break;\n-\n-        case icSigSpace2CLR:\n-            theColorSpace = ColorSpace.TYPE_2CLR;\n-            break;\n-\n-        case icSigSpace3CLR:\n-            theColorSpace = ColorSpace.TYPE_3CLR;\n-            break;\n-\n-        case icSigSpace4CLR:\n-            theColorSpace = ColorSpace.TYPE_4CLR;\n-            break;\n-\n-        case icSigSpace5CLR:\n-            theColorSpace = ColorSpace.TYPE_5CLR;\n-            break;\n-\n-        case icSigSpace6CLR:\n-            theColorSpace = ColorSpace.TYPE_6CLR;\n-            break;\n-\n-        case icSigSpace7CLR:\n-            theColorSpace = ColorSpace.TYPE_7CLR;\n-            break;\n-\n-        case icSigSpace8CLR:\n-            theColorSpace = ColorSpace.TYPE_8CLR;\n-            break;\n-\n-        case icSigSpace9CLR:\n-            theColorSpace = ColorSpace.TYPE_9CLR;\n-            break;\n-\n-        case icSigSpaceACLR:\n-            theColorSpace = ColorSpace.TYPE_ACLR;\n-            break;\n-\n-        case icSigSpaceBCLR:\n-            theColorSpace = ColorSpace.TYPE_BCLR;\n-            break;\n-\n-        case icSigSpaceCCLR:\n-            theColorSpace = ColorSpace.TYPE_CCLR;\n-            break;\n-\n-        case icSigSpaceDCLR:\n-            theColorSpace = ColorSpace.TYPE_DCLR;\n-            break;\n-\n-        case icSigSpaceECLR:\n-            theColorSpace = ColorSpace.TYPE_ECLR;\n-            break;\n-\n-        case icSigSpaceFCLR:\n-            theColorSpace = ColorSpace.TYPE_FCLR;\n-            break;\n-\n-        default:\n-            throw new IllegalArgumentException (\"Unknown color space\");\n-        }\n-        return theColorSpace;\n+    private static int iccCStoJCS(int theColorSpaceSig) {\n+        return switch (theColorSpaceSig) {\n+            case icSigXYZData -> ColorSpace.TYPE_XYZ;\n+            case icSigLabData -> ColorSpace.TYPE_Lab;\n+            case icSigLuvData -> ColorSpace.TYPE_Luv;\n+            case icSigYCbCrData -> ColorSpace.TYPE_YCbCr;\n+            case icSigYxyData -> ColorSpace.TYPE_Yxy;\n+            case icSigRgbData -> ColorSpace.TYPE_RGB;\n+            case icSigGrayData -> ColorSpace.TYPE_GRAY;\n+            case icSigHsvData -> ColorSpace.TYPE_HSV;\n+            case icSigHlsData -> ColorSpace.TYPE_HLS;\n+            case icSigCmykData -> ColorSpace.TYPE_CMYK;\n+            case icSigCmyData -> ColorSpace.TYPE_CMY;\n+            case icSigSpace2CLR -> ColorSpace.TYPE_2CLR;\n+            case icSigSpace3CLR -> ColorSpace.TYPE_3CLR;\n+            case icSigSpace4CLR -> ColorSpace.TYPE_4CLR;\n+            case icSigSpace5CLR -> ColorSpace.TYPE_5CLR;\n+            case icSigSpace6CLR -> ColorSpace.TYPE_6CLR;\n+            case icSigSpace7CLR -> ColorSpace.TYPE_7CLR;\n+            case icSigSpace8CLR -> ColorSpace.TYPE_8CLR;\n+            case icSigSpace9CLR -> ColorSpace.TYPE_9CLR;\n+            case icSigSpaceACLR -> ColorSpace.TYPE_ACLR;\n+            case icSigSpaceBCLR -> ColorSpace.TYPE_BCLR;\n+            case icSigSpaceCCLR -> ColorSpace.TYPE_CCLR;\n+            case icSigSpaceDCLR -> ColorSpace.TYPE_DCLR;\n+            case icSigSpaceECLR -> ColorSpace.TYPE_ECLR;\n+            case icSigSpaceFCLR -> ColorSpace.TYPE_FCLR;\n+            default -> {\n+                throw new IllegalArgumentException(\"Unknown color space\");\n+            }\n+        };\n@@ -1536,2 +1302,0 @@\n-        String path, dir, fullPath;\n-\n@@ -1544,12 +1308,11 @@\n-        if ((!f.isFile()) &&\n-                ((path = System.getProperty(\"java.iccprofile.path\")) != null)){\n-                                    \/* try relative to java.iccprofile.path *\/\n-                StringTokenizer st =\n-                    new StringTokenizer(path, File.pathSeparator);\n-                while (st.hasMoreTokens() && ((f == null) || (!f.isFile()))) {\n-                    dir = st.nextToken();\n-                        fullPath = dir + File.separatorChar + fileName;\n-                    f = new File(fullPath);\n-                    if (!isChildOf(f, dir)) {\n-                        f = null;\n-                    }\n+        String path, dir, fullPath;\n+        if (!f.isFile() &&\n+                (path = System.getProperty(\"java.iccprofile.path\")) != null) {\n+            \/* try relative to java.iccprofile.path *\/\n+            StringTokenizer st = new StringTokenizer(path, File.pathSeparator);\n+            while (st.hasMoreTokens() && ((f == null) || (!f.isFile()))) {\n+                dir = st.nextToken();\n+                fullPath = dir + File.separatorChar + fileName;\n+                f = new File(fullPath);\n+                if (!isChildOf(f, dir)) {\n+                    f = null;\n@@ -1558,0 +1321,1 @@\n+        }\n@@ -1559,10 +1323,9 @@\n-        if (((f == null) || (!f.isFile())) &&\n-                ((path = System.getProperty(\"java.class.path\")) != null)) {\n-                                    \/* try relative to java.class.path *\/\n-                StringTokenizer st =\n-                    new StringTokenizer(path, File.pathSeparator);\n-                while (st.hasMoreTokens() && ((f == null) || (!f.isFile()))) {\n-                    dir = st.nextToken();\n-                        fullPath = dir + File.separatorChar + fileName;\n-                    f = new File(fullPath);\n-                }\n+        if ((f == null || !f.isFile())\n+                && (path = System.getProperty(\"java.class.path\")) != null) {\n+            \/* try relative to java.class.path *\/\n+            StringTokenizer st = new StringTokenizer(path, File.pathSeparator);\n+            while (st.hasMoreTokens() && ((f == null) || (!f.isFile()))) {\n+                dir = st.nextToken();\n+                fullPath = dir + File.separatorChar + fileName;\n+                f = new File(fullPath);\n+            }\n@@ -1584,5 +1347,2 @@\n-            new PrivilegedAction<InputStream>() {\n-                public InputStream run () {\n-                    return\n-                        PCMM.class.getResourceAsStream(\"profiles\/\" + fileName);\n-                }\n+            (PrivilegedAction<InputStream>) () -> {\n+                return PCMM.class.getResourceAsStream(\"profiles\/\" + fileName);\n@@ -1667,3 +1427,1 @@\n-    private void writeObject(ObjectOutputStream s)\n-      throws IOException\n-    {\n+    private void writeObject(ObjectOutputStream s) throws IOException {\n@@ -1724,2 +1482,1 @@\n-     *         are\n-     *         ignored. Otherwise the object will be resolved into profile\n+     *         are ignored. Otherwise the object will be resolved into profile\n@@ -1734,2 +1491,1 @@\n-      throws IOException, ClassNotFoundException\n-    {\n+            throws IOException, ClassNotFoundException {\n@@ -1738,2 +1494,2 @@\n-        String csName = (String)s.readObject();\n-        byte[] data = (byte[])s.readObject();\n+        String csName = (String) s.readObject();\n+        byte[] data = (byte[]) s.readObject();\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_Profile.java","additions":145,"deletions":389,"binary":false,"changes":534,"status":"modified"},{"patch":"@@ -53,3 +53,2 @@\n- * The advantage of this class is that it provides a lookup table that Java\n- * or native methods can use directly to optimize color conversion in some\n- * cases.\n+ * The advantage of this class is that it provides a lookup table that Java or\n+ * native methods can use directly to optimize color conversion in some cases.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_ProfileGray.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}