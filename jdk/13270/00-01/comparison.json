{"files":[{"patch":"@@ -511,13 +511,2 @@\n-  Handle loader;\n-  Handle domain;\n-  if (accessing_klass != nullptr) {\n-    loader = Handle(current, accessing_klass->loader());\n-    domain = Handle(current, accessing_klass->protection_domain());\n-  }\n-\n-  Klass* found_klass;\n-  if (!require_local) {\n-    found_klass = SystemDictionary::find_constrained_instance_or_array_klass(current, sym, loader);\n-  } else {\n-    found_klass = SystemDictionary::find_instance_or_array_klass(current, sym, loader, domain);\n-  }\n+  Klass* found_klass = SystemDictionary::find_constrained_or_local_klass(current, sym,\n+                                               accessing_klass->get_Klass(), require_local);\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1735,0 +1735,16 @@\n+\/\/ Called by the compiler to find a loaded class directly or referenced in the loader constraint table.\n+Klass* SystemDictionary::find_constrained_or_local_klass(Thread* current, Symbol* sym,\n+                                                         Klass* accessing_klass,\n+                                                         bool require_local) {\n+  HandleMark hm(current);\n+  Handle loader;\n+  Handle domain;\n+  if (accessing_klass != nullptr) {\n+    loader = Handle(current, accessing_klass->class_loader());\n+    domain = Handle(current, accessing_klass->protection_domain());\n+  }\n+\n+  return require_local ? find_instance_or_array_klass(current, sym, loader, domain) :\n+                         find_constrained_instance_or_array_klass(current, sym, loader);\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -153,0 +153,1 @@\n+ private:\n@@ -178,0 +179,7 @@\n+ public:\n+  \/\/ Called by the compiler to find a loaded class directly or referenced in the\n+  \/\/ loader constraint table.\n+  static Klass* find_constrained_or_local_klass(Thread* current, Symbol* sym,\n+                                                Klass* accessing_klass,\n+                                                bool require_local);\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1667,13 +1667,2 @@\n-  Handle loader;\n-  Handle domain;\n-  if (accessing_klass != nullptr) {\n-    loader = Handle(THREAD, accessing_klass->class_loader());\n-    domain = Handle(THREAD, accessing_klass->protection_domain());\n-  }\n-\n-  Klass* found_klass;\n-  if (!require_local) {\n-    found_klass = SystemDictionary::find_constrained_instance_or_array_klass(THREAD, sym, loader);\n-  } else {\n-    found_klass = SystemDictionary::find_instance_or_array_klass(THREAD, sym, loader, domain);\n-  }\n+  Klass* found_klass = SystemDictionary::find_constrained_or_local_klass(THREAD, sym,\n+                                                      accessing_klass, require_local);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"}]}