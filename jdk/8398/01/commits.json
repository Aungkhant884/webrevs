[{"commit":{"message":"Add micros using non-constant arguments to assess performance in absense of constant folding"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/MethodTypeAcquire.java"}],"sha":"fcc020e657ac85def6964332673af700f414d329"},{"commit":{"message":"Copyrights"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaForm.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MemberName.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodTypeForm.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/MethodTypeAcquire.java"}],"sha":"6d2edc59bb5b0902b0aec32cdc3055adf65e083b"},{"commit":{"message":"8285633: Take better advantage of generic MethodType cache"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaForm.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MemberName.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodTypeForm.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/MethodTypeAcquire.java"}],"sha":"e2a7af83620031996fce1e460140fbb5f56c4dd5"}]