{"files":[{"patch":"@@ -26,0 +26,1 @@\n+ * @library \/test\/lib\n@@ -50,0 +51,3 @@\n+import static jdk.test.lib.Utils.runAndCheckException;\n+\n+\n@@ -51,6 +55,0 @@\n-    private static void Unreached (Object o)\n-        throws Exception\n-    {\n-        \/\/ Should never get here\n-        throw new Exception (\"Expected exception was not thrown\");\n-    }\n@@ -74,10 +72,3 @@\n-            \/\/ Read entry by name\n-            ZipEntry ze = Objects.requireNonNull(jf.getEntry(\"getprop.class\"));\n-            JarEntry je = Objects.requireNonNull(jf.getJarEntry(\"getprop.class\"));\n-\n-            \/\/ Make sure we throw NPE on null objects\n-            try { Unreached (jf.getEntry(null)); }\n-            catch (NullPointerException e) {}\n-\n-            try { Unreached (jf.getJarEntry(null)); }\n-            catch (NullPointerException e) {}\n+            \/\/ Read ZIP and JAR entries by name\n+            Objects.requireNonNull(jf.getEntry(\"getprop.class\"));\n+            Objects.requireNonNull(jf.getJarEntry(\"getprop.class\"));\n@@ -85,2 +76,4 @@\n-            try { Unreached (jf.getInputStream(null)); }\n-            catch (NullPointerException e) {}\n+            \/\/ Make sure we throw NPE on null parameters\n+            runAndCheckException(() -> jf.getEntry(null), NullPointerException.class);\n+            runAndCheckException(() -> jf.getJarEntry(null), NullPointerException.class);\n+            runAndCheckException(() -> jf.getInputStream(null), NullPointerException.class);\n","filename":"test\/jdk\/java\/util\/jar\/JarFile\/VerifySignedJar.java","additions":11,"deletions":18,"binary":false,"changes":29,"status":"modified"}]}