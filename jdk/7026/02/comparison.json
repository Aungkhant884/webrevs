{"files":[{"patch":"@@ -1287,2 +1287,1 @@\n-        char c;\n-        while (sp < sl && (c = StringUTF16.getChar(val, sp)) < '\\u0080') {\n+        while (sp < sl) {\n@@ -1290,0 +1289,4 @@\n+            char c = StringUTF16.getChar(val, sp);\n+            if (c >= '\\u0080') {\n+                break;\n+            }\n@@ -1294,1 +1297,1 @@\n-            c = StringUTF16.getChar(val, sp++);\n+            char c = StringUTF16.getChar(val, sp++);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(value = 3, jvmArgs = \"-Xmx1g\")\n+@Fork(value = 3)\n@@ -39,7 +39,7 @@\n-    @BenchmarkMode(Mode.AverageTime)\n-    @OutputTimeUnit(TimeUnit.NANOSECONDS)\n-    @Fork(value = 3, jvmArgs = \"-Xmx1g\")\n-    @Warmup(iterations = 5, time = 2)\n-    @Measurement(iterations = 5, time = 2)\n-    @State(Scope.Thread)\n-    public static class WithCharset {\n+    @Param({\"US-ASCII\", \"ISO-8859-1\", \"UTF-8\", \"MS932\", \"ISO-8859-6\"})\n+    private String charsetName;\n+    private Charset charset;\n+    private String asciiString;\n+    private String utf16String;\n+    private String longUtf16String;\n+    private String longUtf16StartString;\n@@ -47,2 +47,15 @@\n-        @Param({\"US-ASCII\", \"ISO-8859-1\", \"UTF-8\", \"MS932\", \"ISO-8859-6\"})\n-        private String charsetName;\n+    @Setup\n+    public void setup() {\n+        charset = Charset.forName(charsetName);\n+        asciiString = \"ascii string\";\n+        utf16String = \"UTF-\\uFF11\\uFF16 string\";\n+        longUtf16String = \"\"\"\n+                 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ac sem eu\n+                 urna egestas placerat. Etiam finibus ipsum nulla, non mattis dolor cursus a.\n+                 Nulla nec nisl consectetur, lacinia neque id, accumsan ante. Curabitur et\n+                 sapien in magna porta ultricies. Sed vel pellentesque nibh. Pellentesque dictum\n+                 dignissim diam eu ultricies. Class aptent taciti sociosqu ad litora torquent\n+                 per conubia nostra, per inceptos himenaeos. Suspendisse erat diam, fringilla\n+                 sed massa sed, posuere viverra orci. Suspendisse tempor libero non gravida\n+                 efficitur. Vivamus lacinia risus non orci viverra, at consectetur odio laoreet.\n+                 Suspendisse potenti.\n@@ -50,3 +63,21 @@\n-        private Charset charset;\n-        private String asciiString;\n-        private String utf16String;\n+                 Phasellus vel nisi iaculis, accumsan quam sed, bibendum eros. Sed venenatis\n+                 nulla tortor, et eleifend urna sodales id. Nullam tempus ac metus sit amet\n+                 sollicitudin. Nam sed ex diam. Praesent vitae eros et neque condimentum\n+                 consectetur eget non tortor. Praesent bibendum vel felis nec dignissim.\n+                 Maecenas a enim diam. Suspendisse quis ligula at nisi accumsan lacinia id\n+                 hendrerit sapien. Donec aliquam mattis lectus eu ultrices. Duis eu nisl\n+                 euismod, blandit mauris vel, placerat urna. Etiam malesuada enim purus,\n+                 tristique mollis odio blandit quis. Vivamus posuere.\n+                 \\uFF11\n+                \"\"\";\n+        longUtf16StartString = \"\"\"\n+                 \\uFF11\n+                 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ac sem eu\n+                 urna egestas placerat. Etiam finibus ipsum nulla, non mattis dolor cursus a.\n+                 Nulla nec nisl consectetur, lacinia neque id, accumsan ante. Curabitur et\n+                 sapien in magna porta ultricies. Sed vel pellentesque nibh. Pellentesque dictum\n+                 dignissim diam eu ultricies. Class aptent taciti sociosqu ad litora torquent\n+                 per conubia nostra, per inceptos himenaeos. Suspendisse erat diam, fringilla\n+                 sed massa sed, posuere viverra orci. Suspendisse tempor libero non gravida\n+                 efficitur. Vivamus lacinia risus non orci viverra, at consectetur odio laoreet.\n+                 Suspendisse potenti.\n@@ -54,6 +85,10 @@\n-        @Setup\n-        public void setup() {\n-            charset = Charset.forName(charsetName);\n-            asciiString = \"ascii string\";\n-            utf16String = \"UTF-\\uFF11\\uFF16 string\";\n-        }\n+                 Phasellus vel nisi iaculis, accumsan quam sed, bibendum eros. Sed venenatis\n+                 nulla tortor, et eleifend urna sodales id. Nullam tempus ac metus sit amet\n+                 sollicitudin. Nam sed ex diam. Praesent vitae eros et neque condimentum\n+                 consectetur eget non tortor. Praesent bibendum vel felis nec dignissim.\n+                 Maecenas a enim diam. Suspendisse quis ligula at nisi accumsan lacinia id\n+                 hendrerit sapien. Donec aliquam mattis lectus eu ultrices. Duis eu nisl\n+                 euismod, blandit mauris vel, placerat urna. Etiam malesuada enim purus,\n+                 tristique mollis odio blandit quis. Vivamus posuere.\n+                \"\"\";\n+    }\n@@ -61,5 +96,9 @@\n-        @Benchmark\n-        public void encodeCharsetName(Blackhole bh) throws Exception {\n-            bh.consume(asciiString.getBytes(charsetName));\n-            bh.consume(utf16String.getBytes(charsetName));\n-        }\n+    @Benchmark\n+    public byte[] encodeAsciiCharsetName() throws Exception {\n+        return asciiString.getBytes(charset);\n+    }\n+\n+    @Benchmark\n+    public byte[] encodeAscii() throws Exception {\n+        return asciiString.getBytes(charset);\n+    }\n@@ -67,5 +106,4 @@\n-        @Benchmark\n-        public void encodeCharset(Blackhole bh) throws Exception {\n-            bh.consume(asciiString.getBytes(charset));\n-            bh.consume(utf16String.getBytes(charset));\n-        }\n+    @Benchmark\n+    public void encodeMix(Blackhole bh) throws Exception {\n+        bh.consume(asciiString.getBytes(charset));\n+        bh.consume(utf16String.getBytes(charset));\n@@ -74,2 +112,4 @@\n-    private String asciiDefaultString;\n-    private String utf16DefaultString;\n+    @Benchmark\n+    public byte[] encodeUTF16LongEnd() throws Exception {\n+        return longUtf16String.getBytes(charset);\n+    }\n@@ -77,4 +117,3 @@\n-    @Setup\n-    public void setup() {\n-        asciiDefaultString = \"ascii string\";\n-        utf16DefaultString = \"UTF-\\uFF11\\uFF16 string\";\n+    @Benchmark\n+    public byte[] encodeUTF16LongStart() throws Exception {\n+        return longUtf16StartString.getBytes(charset);\n@@ -84,3 +123,2 @@\n-    public void encodeDefault(Blackhole bh) throws Exception {\n-        bh.consume(asciiDefaultString.getBytes());\n-        bh.consume(utf16DefaultString.getBytes());\n+    public byte[] encodeUTF16() throws Exception {\n+        return utf16String.getBytes(charset);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringEncode.java","additions":76,"deletions":38,"binary":false,"changes":114,"status":"modified"}]}