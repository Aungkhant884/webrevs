{"files":[{"patch":"@@ -41,1 +41,1 @@\n-  static const char field[] = \"FILE_DELTA_CHANGE\";\n+  static const char field[] = \"CHUNK_ROTATION_MONITOR\";\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrChunkRotation.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+  template(jfr_chunk_rotation_monitor,                                \"jdk\/jfr\/internal\/JVM$ChunkRotationMonitor\")   \\\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrIntrinsics.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1419,0 +1419,6 @@\n+static inline bool is_excluded(const Klass* monitor_klass) {\n+  assert(monitor_klass != nullptr, \"invariant\");\n+  NOT_JFR_RETURN_(false);\n+  JFR_ONLY(return vmSymbols::jfr_chunk_rotation_monitor() == monitor_klass->name());\n+}\n+\n@@ -1426,1 +1432,5 @@\n-  event->set_monitorClass(monitor->object()->klass());\n+  const Klass* monitor_klass = monitor->object()->klass();\n+  if (is_excluded(monitor_klass)) {\n+    return;\n+  }\n+  event->set_monitorClass(monitor_klass);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,3 +42,0 @@\n-    \/\/ JVM signals file changes by doing Object#notify on this object\n-    static final Object FILE_DELTA_CHANGE = new Object();\n-\n@@ -47,0 +44,9 @@\n+    private static class ChunkRotationMonitor {}\n+\n+    \/*\n+     * The JVM uses the chunk rotation monitor to notify Java that a rotation is warranted.\n+     * The monitor type is used to exclude jdk.JavaMonitorWait events from being generated\n+     * when Object.wait() is called on this monitor.\n+     *\/\n+    static final Object CHUNK_ROTATION_MONITOR = new ChunkRotationMonitor();\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVM.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -523,2 +523,2 @@\n-            synchronized (JVM.FILE_DELTA_CHANGE) {\n-                JVM.FILE_DELTA_CHANGE.wait(duration < 10 ? 10 : duration);\n+            synchronized (JVM.CHUNK_ROTATION_MONITOR) {\n+                JVM.CHUNK_ROTATION_MONITOR.wait(duration < 10 ? 10 : duration);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -305,2 +305,2 @@\n-            synchronized (JVM.FILE_DELTA_CHANGE) {\n-                JVM.FILE_DELTA_CHANGE.notifyAll();\n+            synchronized (JVM.CHUNK_ROTATION_MONITOR) {\n+                JVM.CHUNK_ROTATION_MONITOR.notifyAll();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/RequestEngine.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}