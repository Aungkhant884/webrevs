{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.awt.ComponentOrientation;\n@@ -539,0 +540,5 @@\n+                \/\/ direction traversal to be reversed for RTL orientation\n+                if (path[0].getComponent().getComponentOrientation().\n+                        equals(ComponentOrientation.RIGHT_TO_LEFT)) {\n+                    direction = !direction;\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicPopupMenuUI.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,178 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+import java.awt.BorderLayout;\n+import java.awt.ComponentOrientation;\n+import java.awt.Point;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.Robot;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.event.MenuEvent;\n+import javax.swing.event.MenuListener;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug  8277369\n+ * @summary Verifies arrow traversal in RTL orientation in JMenuBar\n+ *\/\n+public class MenuBarRTLBug {\n+\n+    static JFrame frame;\n+    static JMenuBar menuBar;\n+    static JMenu firstMenu;\n+    static JMenuItem a;\n+    static JMenuItem b;\n+    static JMenu secondMenu;\n+    static JMenuItem c;\n+    static JMenuItem d;\n+    static JMenu thirdMenu;\n+    static JMenuItem e;\n+    static JMenuItem f;\n+    static JMenu forthMenu;\n+    static JMenu fifthMenu;\n+\n+    static Point p;\n+    static int width;\n+    static int height;\n+\n+    static volatile boolean passed = false;\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws  Exception {\n+\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing L&F: \" + laf.getClassName());\n+            passed = false;\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            try {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    frame = new JFrame();\n+                    frame.setLayout(new BorderLayout());\n+\n+                    firstMenu = new JMenu(\"first\");\n+                    a = new JMenuItem(\"a\");\n+                    b = new JMenuItem(\"b\");\n+                    firstMenu.add(a);\n+                    firstMenu.add(b);\n+\n+                    secondMenu = new JMenu(\"second\");\n+                    c = new JMenuItem(\"c\");\n+                    d = new JMenuItem(\"d\");\n+                    secondMenu.add(c);\n+                    secondMenu.add(d);\n+                    secondMenu.addMenuListener(new MenuListener() {\n+                        @Override\n+                        public void menuSelected(MenuEvent e) {\n+                            passed = true;\n+                        }\n+                        @Override\n+                        public void menuDeselected(MenuEvent e) {\n+                        }\n+\n+                        @Override\n+                        public void menuCanceled(MenuEvent e) {\n+                        }\n+                    });\n+\n+                    thirdMenu = new JMenu(\"third\");\n+                    e = new JMenuItem(\"e\");\n+                    f = new JMenuItem(\"f\");\n+                    thirdMenu.add(e);\n+                    thirdMenu.add(f);\n+\n+                    forthMenu = new JMenu(\"fourth\");\n+                    e = new JMenuItem(\"e\");\n+                    f = new JMenuItem(\"f\");\n+                    forthMenu.add(e);\n+                    forthMenu.add(f);\n+\n+                    fifthMenu = new JMenu(\"fifth\");\n+                    e = new JMenuItem(\"e\");\n+                    f = new JMenuItem(\"f\");\n+                    fifthMenu.add(e);\n+                    fifthMenu.add(f);\n+\n+                    menuBar = new JMenuBar();\n+                    menuBar.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+                    menuBar.add(firstMenu);\n+                    menuBar.add(secondMenu);\n+                    menuBar.add(thirdMenu);\n+                    menuBar.add(forthMenu);\n+                    menuBar.add(fifthMenu);\n+                    frame.setJMenuBar(menuBar);\n+\n+                    frame.setLocationRelativeTo(null);\n+                    frame.pack();\n+                    frame.setVisible(true);\n+                });\n+                Robot robot = new Robot();\n+                robot.setAutoDelay(100);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                SwingUtilities.invokeAndWait(() -> {\n+                    p = thirdMenu.getLocationOnScreen();\n+                    width = thirdMenu.getWidth();\n+                    height = thirdMenu.getHeight();\n+                });\n+                robot.mouseMove(p.x + width \/ 2, p.y + height \/ 2);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.delay(1000);\n+                robot.keyPress(KeyEvent.VK_RIGHT);\n+                robot.keyRelease(KeyEvent.VK_RIGHT);\n+                robot.delay(1000);\n+                if (!passed) {\n+                    throw new RuntimeException(\"Arrow traversal order not correct in RTL orientation\");\n+                }\n+            } finally {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    if (frame != null) {\n+                        frame.dispose();\n+                    }\n+                });\n+            }\n+\t}\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenuBar\/MenuBarRTLBug.java","additions":178,"deletions":0,"binary":false,"changes":178,"status":"added"}]}