{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -235,2 +235,1 @@\n-      try {\n-        for (int i = 0 ; i < 1000000 ; i++ ) {\n+      for (int i = 0 ; i < 30_000 ; i++ ) {\n@@ -265,4 +264,0 @@\n-        }\n-        System.out.println(\"PASS : \" + validate_ctr);\n-      } catch (Exception e) {\n-        System.out.println(e.getMessage());\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyConjoint.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -205,21 +205,16 @@\n-      try {\n-        for (int i = 0 ; i < 1000000 ; i++ ) {\n-          testByte(lengths[i % lengths.length], r.nextInt(2048) , r.nextInt(2048));\n-          testByte_constant_LT32B (r.nextInt(2048) , r.nextInt(2048));\n-          testByte_constant_LT64B (r.nextInt(2048) , r.nextInt(2048));\n-\n-          testChar(lengths[i % lengths.length] >> 1, r.nextInt(2048) , r.nextInt(2048));\n-          testChar_constant_LT32B (r.nextInt(2048) , r.nextInt(2048));\n-          testChar_constant_LT64B (r.nextInt(2048) , r.nextInt(2048));\n-\n-          testInt(lengths[i % lengths.length]  >> 2, r.nextInt(2048) , r.nextInt(2048));\n-          testInt_constant_LT32B (r.nextInt(2048) , r.nextInt(2048));\n-          testInt_constant_LT64B (r.nextInt(2048) , r.nextInt(2048));\n-\n-          testLong(lengths[i % lengths.length] >> 3, r.nextInt(2048) , r.nextInt(2048));\n-          testLong_constant_LT32B (r.nextInt(2048) , r.nextInt(2048));\n-          testLong_constant_LT64B (r.nextInt(2048) , r.nextInt(2048));\n-        }\n-        System.out.println(\"PASS : \" + validate_ctr);\n-      } catch (Exception e) {\n-         System.out.println(e.getMessage());\n+      for (int i = 0 ; i < 30_000 ; i++ ) {\n+        testByte(lengths[i % lengths.length], r.nextInt(2048) , r.nextInt(2048));\n+        testByte_constant_LT32B (r.nextInt(2048) , r.nextInt(2048));\n+        testByte_constant_LT64B (r.nextInt(2048) , r.nextInt(2048));\n+\n+        testChar(lengths[i % lengths.length] >> 1, r.nextInt(2048) , r.nextInt(2048));\n+        testChar_constant_LT32B (r.nextInt(2048) , r.nextInt(2048));\n+        testChar_constant_LT64B (r.nextInt(2048) , r.nextInt(2048));\n+\n+        testInt(lengths[i % lengths.length]  >> 2, r.nextInt(2048) , r.nextInt(2048));\n+        testInt_constant_LT32B (r.nextInt(2048) , r.nextInt(2048));\n+        testInt_constant_LT64B (r.nextInt(2048) , r.nextInt(2048));\n+\n+        testLong(lengths[i % lengths.length] >> 3, r.nextInt(2048) , r.nextInt(2048));\n+        testLong_constant_LT32B (r.nextInt(2048) , r.nextInt(2048));\n+        testLong_constant_LT64B (r.nextInt(2048) , r.nextInt(2048));\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyDisjoint.java","additions":16,"deletions":21,"binary":false,"changes":37,"status":"modified"}]}