{"files":[{"patch":"@@ -146,1 +146,1 @@\n- *    KeyStore.ProtectionParameter protParam =\n+ *    KeyStore.PasswordProtection protParam =\n@@ -148,15 +148,18 @@\n- *\n- *    \/\/ get my private key\n- *    KeyStore.PrivateKeyEntry pkEntry = (KeyStore.PrivateKeyEntry)\n- *        ks.getEntry(\"privateKeyAlias\", protParam);\n- *    PrivateKey myPrivateKey = pkEntry.getPrivateKey();\n- *\n- *    \/\/ save my secret key\n- *    javax.crypto.SecretKey mySecretKey;\n- *    KeyStore.SecretKeyEntry skEntry =\n- *        new KeyStore.SecretKeyEntry(mySecretKey);\n- *    ks.setEntry(\"secretKeyAlias\", skEntry, protParam);\n- *\n- *    \/\/ store away the keystore\n- *    try (FileOutputStream fos = new FileOutputStream(\"newKeyStoreName\")) {\n- *        ks.store(fos, password);\n+ *    try {\n+ *        \/\/ get my private key\n+ *        KeyStore.PrivateKeyEntry pkEntry = (KeyStore.PrivateKeyEntry)\n+ *            ks.getEntry(\"privateKeyAlias\", protParam);\n+ *        PrivateKey myPrivateKey = pkEntry.getPrivateKey();\n+ *\n+ *        \/\/ save my secret key\n+ *        javax.crypto.SecretKey mySecretKey;\n+ *        KeyStore.SecretKeyEntry skEntry =\n+ *            new KeyStore.SecretKeyEntry(mySecretKey);\n+ *        ks.setEntry(\"secretKeyAlias\", skEntry, protParam);\n+ *\n+ *        \/\/ store away the keystore\n+ *        try (FileOutputStream fos = new FileOutputStream(\"newKeyStoreName\")) {\n+ *            ks.store(fos, password);\n+ *        }\n+ *    } finally {\n+ *        protParam.destroy();\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyStore.java","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"}]}