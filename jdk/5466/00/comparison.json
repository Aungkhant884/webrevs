{"files":[{"patch":"@@ -76,0 +76,1 @@\n+    private static native void selectedCellsChanged(long ptr);\n@@ -129,0 +130,13 @@\n+                        if (newValue instanceof Accessible) {\n+                            Accessible a = (Accessible)newValue;\n+                            AccessibleContext ac = a.getAccessibleContext();\n+                            if (ac !=  null) {\n+                                Accessible p = ac.getAccessibleParent();\n+                                if (p != null) {\n+                                    AccessibleContext pac = p.getAccessibleContext();\n+                                    if ((pac != null) && (pac.getAccessibleRole() == AccessibleRole.TABLE)) {\n+                                        selectedCellsChanged(ptr);\n+                                    }\n+                                }\n+                            }\n+                        }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessible.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -56,0 +56,5 @@\n+- (NSInteger)accessibilityIndex\n+{\n+    return self->fIndex;\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CellAccessibility.m","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -52,55 +52,0 @@\n-- (NSArray *)accessibilityChildren\n-{\n-    NSArray *children = [super accessibilityChildren];\n-    if (children == NULL) {\n-        JNIEnv *env = [ThreadUtilities getJNIEnv];\n-        CommonComponentAccessibility *parent = [self accessibilityParent];\n-        if (parent->fAccessible == NULL) return nil;\n-        GET_CHILDRENANDROLES_METHOD_RETURN(nil);\n-        jobjectArray jchildrenAndRoles = (jobjectArray)(*env)->CallStaticObjectMethod(env, sjc_CAccessibility, jm_getChildrenAndRoles,\n-                                                                                      parent->fAccessible, parent->fComponent, sun_lwawt_macosx_CAccessibility_JAVA_AX_ALL_CHILDREN, NO);\n-        CHECK_EXCEPTION();\n-        if (jchildrenAndRoles == NULL) return nil;\n-\n-        jsize arrayLen = (*env)->GetArrayLength(env, jchildrenAndRoles);\n-        NSMutableArray *childrenCells = [NSMutableArray arrayWithCapacity:arrayLen\/2];\n-\n-        NSUInteger childIndex = fIndex;\n-\n-        int inc = [(TableAccessibility *)[self accessibilityParent] accessibilityRowCount] * 2;\n-        NSInteger i = childIndex * 2;\n-        for(i; i < arrayLen; i += inc)\n-        {\n-            jobject \/* Accessible *\/ jchild = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i);\n-            jobject \/* String *\/ jchildJavaRole = (*env)->GetObjectArrayElement(env, jchildrenAndRoles, i+1);\n-\n-            NSString *childJavaRole = nil;\n-            if (jchildJavaRole != NULL) {\n-                DECLARE_CLASS_RETURN(sjc_AccessibleRole, \"javax\/accessibility\/AccessibleRole\", nil);\n-                DECLARE_FIELD_RETURN(sjf_key, sjc_AccessibleRole, \"key\", \"Ljava\/lang\/String;\", nil);\n-                jobject jkey = (*env)->GetObjectField(env, jchildJavaRole, sjf_key);\n-                CHECK_EXCEPTION();\n-                childJavaRole = JavaStringToNSString(env, jkey);\n-                (*env)->DeleteLocalRef(env, jkey);\n-            }\n-\n-            CellAccessibility *child = [[CellAccessibility alloc] initWithParent:self\n-                                                                         withEnv:env\n-                                                                  withAccessible:jchild\n-                                                                       withIndex:childIndex\n-                                                                        withView:self->fView\n-                                                                    withJavaRole:childJavaRole];\n-            [childrenCells addObject:[[child retain] autorelease]];\n-\n-            (*env)->DeleteLocalRef(env, jchild);\n-            (*env)->DeleteLocalRef(env, jchildJavaRole);\n-\n-            childIndex += (inc \/ 2);\n-        }\n-        (*env)->DeleteLocalRef(env, jchildrenAndRoles);\n-        return childrenCells;\n-    } else {\n-        return children;\n-    }\n-}\n-\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ColumnAccessibility.m","additions":0,"deletions":55,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+- (void)postSelectedCellsChanged;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -381,0 +381,6 @@\n+- (void)postSelectedCellsChanged\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+    NSAccessibilityPostNotification(self, NSAccessibilitySelectedCellsChangedNotification);\n+}\n+\n@@ -1233,0 +1239,16 @@\n+\n+\/*\n+ * Class:     sun_lwawt_macosx_CAccessible\n+ * Method:    selectedCellsChanged\n+ * Signature: (J)V\n+ *\/\n+JNIEXPORT void JNICALL Java_sun_lwawt_macosx_CAccessible_selectedCellsChanged\n+  (JNIEnv *env, jclass jklass, jlong element)\n+{\n+    JNI_COCOA_ENTER(env);\n+        [ThreadUtilities performOnMainThread:@selector(postSelectedCellsChanged)\n+                         on:(CommonComponentAccessibility *)jlong_to_ptr(element)\n+                         withObject:nil\n+                         waitUntilDone:NO];\n+    JNI_COCOA_EXIT(env);\n+}\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -222,15 +222,0 @@\n-- (nullable NSArray *)accessibilitySelectedCells\n-{\n-    NSArray *children = [super accessibilitySelectedChildren];\n-    NSMutableArray *cells = [NSMutableArray arrayWithCapacity:[children count]];\n-    for (CommonComponentAccessibility *child in children) {\n-        [cells addObject:[[CellAccessibility alloc] initWithParent:self\n-                                                           withEnv:[ThreadUtilities getJNIEnv]\n-                                                    withAccessible:child->fAccessible\n-                                                         withIndex:child->fIndex\n-                                                          withView:fView\n-                                                      withJavaRole:child->fJavaRole]];\n-    }\n-    return [NSArray arrayWithArray:cells];\n-}\n-\n@@ -241,0 +226,16 @@\n+- (NSArray *)accessibilitySelectedCells\n+{\n+    NSArray *selectedRows = [self getTableSelectedInfo:sun_lwawt_macosx_CAccessibility_JAVA_AX_ROWS];\n+    NSArray *selectedColumns = [self getTableSelectedInfo:sun_lwawt_macosx_CAccessibility_JAVA_AX_COLS];\n+    NSMutableArray *selectedCells = [NSMutableArray arrayWithCapacity:[selectedRows count] * [selectedColumns count]];\n+    for (NSNumber *row in selectedRows) {\n+        for (NSNumber *col in selectedColumns ) {\n+            CellAccessibility *cell = [self accessibilityCellForColumn:[col integerValue] row:[row integerValue]];\n+            if ([self isAccessibleChildSelectedFromIndex:[cell accessibilityIndex]]) {\n+                [selectedCells addObject:cell];\n+            }\n+        }\n+    }\n+    return [NSArray arrayWithArray:selectedCells];\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableAccessibility.m","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -145,0 +145,5 @@\n+- (BOOL)isAccessibilityOrderedByRow\n+{\n+    return YES;\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableRowAccessibility.m","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}