{"files":[{"patch":"@@ -127,1 +127,2 @@\n-            this.pubKey = (RSAPublicKey) isPublicKeyValid(rsaPubKey);\n+            isPublicKeyValid(rsaPubKey);\n+            this.pubKey = rsaPubKey;\n@@ -147,1 +148,2 @@\n-            this.privKey = (RSAPrivateKey) isPrivateKeyValid(rsaPrivateKey);\n+            isPrivateKeyValid(rsaPrivateKey);\n+            this.privKey = rsaPrivateKey;\n@@ -209,1 +211,2 @@\n-    private RSAKey isPrivateKeyValid(RSAPrivateKey prKey)  throws InvalidKeyException {\n+    private void isPrivateKeyValid(RSAPrivateKey prKey)  throws InvalidKeyException {\n+        InvalidKeyException ikException = null;\n@@ -212,4 +215,8 @@\n-                RSAPrivateCrtKeyImpl.isValid(crtKey);\n-                RSAKeyFactory.checkRSAProviderKeyLengths(\n-                        crtKey.getModulus().bitLength(),\n-                        crtKey.getPublicExponent());\n+                if (RSAPrivateCrtKeyImpl.checkComponents(crtKey)) {\n+                    RSAKeyFactory.checkRSAProviderKeyLengths(\n+                            crtKey.getModulus().bitLength(),\n+                            crtKey.getPublicExponent());\n+                } else {\n+                    ikException = new InvalidKeyException(\n+                            \"Some of the CRT-specific components are not available\");\n+                }\n@@ -222,1 +229,1 @@\n-            throw ikEx;\n+            ikException = ikEx;\n@@ -227,1 +234,3 @@\n-        return isValid(prKey);\n+        if (ikException != null)\n+            throw ikException;\n+        isValid(prKey);\n@@ -233,1 +242,1 @@\n-    private RSAKey isPublicKeyValid(RSAPublicKey pKey)  throws InvalidKeyException {\n+    private void isPublicKeyValid(RSAPublicKey pKey)  throws InvalidKeyException {\n@@ -244,1 +253,1 @@\n-        return isValid(pKey);\n+        isValid(pKey);\n@@ -251,1 +260,1 @@\n-    private RSAKey isValid(RSAKey rsaKey) throws InvalidKeyException {\n+    private void isValid(RSAKey rsaKey) throws InvalidKeyException {\n@@ -278,2 +287,0 @@\n-\n-        return rsaKey;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPSSSignature.java","additions":21,"deletions":14,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -94,3 +94,3 @@\n-            try {\n-                return isValid(key);\n-            } catch (InvalidKeyException ikEx) {\n+            if (checkComponents(key)) {\n+                return key;\n+            } else {\n@@ -125,3 +125,2 @@\n-    static RSAPrivateCrtKey isValid(RSAPrivateCrtKey key)\n-            throws InvalidKeyException {\n-        if ((key.getPublicExponent().signum() == 0) ||\n+    static boolean checkComponents(RSAPrivateCrtKey key) {\n+        return !((key.getPublicExponent().signum() == 0) ||\n@@ -132,5 +131,1 @@\n-            (key.getCrtCoefficient().signum() == 0)) {\n-            throw new InvalidKeyException(\n-                    \"Some of the CRT-specific components are not available\");\n-        }\n-        return key;\n+            (key.getCrtCoefficient().signum() == 0));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPrivateCrtKeyImpl.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"}]}