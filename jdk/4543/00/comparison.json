{"files":[{"patch":"@@ -81,18 +81,1 @@\n-#if defined(__linux__)\n-    \/\/ Transfer within the kernel\n-    const size_t count = cancel != NULL ?\n-        1048576 :   \/\/ 1 MB to give cancellation a chance\n-        0x7ffff000; \/\/ maximum number of bytes that sendfile() can transfer\n-    ssize_t bytes_sent;\n-    do {\n-        RESTARTABLE(sendfile64(dst, src, NULL, count), bytes_sent);\n-        if (bytes_sent == -1) {\n-            throwUnixException(env, errno);\n-            return;\n-        }\n-        if (cancel != NULL && *cancel != 0) {\n-            throwUnixException(env, ECANCELED);\n-            return;\n-        }\n-    } while (bytes_sent > 0);\n-#elif defined(_ALLBSD_SOURCE)\n+#if defined(_ALLBSD_SOURCE)\n@@ -116,1 +99,23 @@\n-#else\n+#elif defined(__linux__)\n+    \/\/ Transfer within the kernel\n+    const size_t count = cancel != NULL ?\n+        1048576 :   \/\/ 1 MB to give cancellation a chance\n+        0x7ffff000; \/\/ maximum number of bytes that sendfile() can transfer\n+    ssize_t bytes_sent;\n+    do {\n+        RESTARTABLE(sendfile64(dst, src, NULL, count), bytes_sent);\n+        if (bytes_sent == -1) {\n+            if (errno == EINVAL) {\n+                \/\/ Fall back to copying via user-space buffers\n+                break;\n+            }\n+            throwUnixException(env, errno);\n+            return;\n+        }\n+        if (cancel != NULL && *cancel != 0) {\n+            throwUnixException(env, ECANCELED);\n+            return;\n+        }\n+    } while (bytes_sent > 0);\n+#endif\n+#if !defined(_ALLBSD_SOURCE)\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixCopyFile.c","additions":24,"deletions":19,"binary":false,"changes":43,"status":"modified"}]}