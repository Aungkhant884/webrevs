{"files":[{"patch":"@@ -220,1 +220,1 @@\n-    guarantee(val < (1U << nbits), \"Field too big for insn\");\n+    guarantee(val < (1ULL << nbits), \"Field too big for insn\");\n@@ -448,2 +448,2 @@\n-    guarantee((_mode == base_plus_offset | _mode == base_plus_offset_reg\n-               | _mode == post | _mode == post_reg),\n+    guarantee((_mode == base_plus_offset || _mode == base_plus_offset_reg\n+               || _mode == post || _mode == post_reg),\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -654,5 +654,6 @@\n-#define DESCRIBE_FP_OFFSET(name)                                        \\\n-  {                                                                     \\\n-    uintptr_t *p = (uintptr_t *)fp;                                     \\\n-    printf(\"0x%016lx 0x%016lx %s\\n\", (uintptr_t)(p + frame::name##_offset), \\\n-           p[frame::name##_offset], #name);                             \\\n+#define DESCRIBE_FP_OFFSET(name)                     \\\n+  {                                                  \\\n+    uintptr_t *p = (uintptr_t *)fp;                  \\\n+    printf(INTPTR_FORMAT \" \" INTPTR_FORMAT \" %s\\n\",  \\\n+           (uintptr_t)(p + frame::name##_offset),    \\\n+           p[frame::name##_offset], #name);          \\\n@@ -715,1 +716,1 @@\n-  if (bcx == -1ULL)\n+  if (bcx == (uintptr_t)-1)\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  return (N == 64 ? -1ULL : (1ULL << N) - 1);\n+  return (N == 64 ? ~0 : (1ULL << N) - 1);\n","filename":"src\/hotspot\/cpu\/aarch64\/immediate_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1837,1 +1837,1 @@\n-    const unsigned mask = size_in_bytes - 1;\n+    const uint64_t mask = size_in_bytes - 1;\n@@ -2756,1 +2756,1 @@\n-    offset &= -1u<<12;\n+    offset &= ~0u<<12;\n@@ -2901,1 +2901,1 @@\n-  const int sz = prev_ldst->size_in_bytes();\n+  const size_t sz = prev_ldst->size_in_bytes();\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -658,1 +658,1 @@\n-  size_t size_in_bytes() { return 1 << size(); }\n+  size_t size_in_bytes() { return 1ull << size(); }\n","filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -371,1 +371,1 @@\n-    uint32_t first = _bitset & -_bitset;\n+    uint32_t first = _bitset & (~_bitset + 1);\n","filename":"src\/hotspot\/cpu\/aarch64\/register_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1527,1 +1527,1 @@\n-    __ bang_stack_with_offset(JavaThread::stack_shadow_zone_size());\n+    __ bang_stack_with_offset((int)JavaThread::stack_shadow_zone_size());\n@@ -2472,1 +2472,1 @@\n-  __ mov(rscratch1, (address)0xDEADDEAD);        \/\/ Make a recognizable pattern\n+  __ mov(rscratch1, (uint64_t)0xDEADDEAD);        \/\/ Make a recognizable pattern\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1312,1 +1312,1 @@\n-    __ add(rscratch2, rscratch2, size);\n+    __ add(rscratch2, rscratch2, (int)size);\n@@ -1370,1 +1370,1 @@\n-      copy_memory(aligned, s, d, count, rscratch1, size);\n+      copy_memory(aligned, s, d, count, rscratch1, (int)size);\n@@ -1441,1 +1441,1 @@\n-      copy_memory(aligned, s, d, count, rscratch1, -size);\n+      copy_memory(aligned, s, d, count, rscratch1, -(int)size);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1123,1 +1123,1 @@\n-    const int n_shadow_pages = JavaThread::stack_shadow_zone_size() \/ os::vm_page_size();\n+    const int n_shadow_pages = (int)(JavaThread::stack_shadow_zone_size() \/ os::vm_page_size());\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}