{"files":[{"patch":"@@ -32,0 +32,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -100,1 +101,5 @@\n-    thread->set_thread_state_fence(_thread_in_vm);\n+    if (!UseSystemMemoryBarrier) {\n+      thread->set_thread_state_fence(_thread_in_vm);\n+    } else {\n+      thread->set_thread_state(_thread_in_vm);\n+    }\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-  return (JavaThreadState) Atomic::load_acquire((volatile jint*)&_thread_state);\n+  return Atomic::load_acquire(&_thread_state);\n@@ -150,1 +150,1 @@\n-  return _thread_state;\n+  return Atomic::load(&_thread_state);\n@@ -160,1 +160,1 @@\n-  Atomic::release_store((volatile jint*)&_thread_state, (jint)s);\n+  Atomic::release_store(&_thread_state, s);\n@@ -162,1 +162,1 @@\n-  _thread_state = s;\n+  Atomic::store(&_thread_state, s);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}