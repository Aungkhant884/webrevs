{"files":[{"patch":"@@ -28,0 +28,1 @@\n+#include \"classfile\/classLoaderData.inline.hpp\"\n@@ -128,1 +129,1 @@\n-    pkg_entry = SystemDictionaryShared::class_loader_data(class_loader)->packages()->lookup_only(pkg_name);\n+    pkg_entry = ClassLoaderData::class_loader_data(class_loader())->packages()->lookup_only(pkg_name);\n","filename":"src\/hotspot\/share\/cds\/cdsProtectionDomain.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  LoaderConstraint(InstanceKlass* klass, oop class_loader1, oop class_loader2) :\n+  LoaderConstraint(InstanceKlass* klass, ClassLoaderData* loader1, ClassLoaderData* loader2) :\n@@ -53,2 +53,2 @@\n-    add_loader(class_loader1);\n-    add_loader(class_loader2);\n+    add_loader_data(loader1);\n+    add_loader_data(loader2);\n@@ -64,1 +64,1 @@\n-  void extend_loader_constraint(Symbol* class_name, Handle loader, InstanceKlass* klass);\n+  void extend_loader_constraint(Symbol* class_name, ClassLoaderData* loader, InstanceKlass* klass);\n@@ -74,5 +74,0 @@\n-\n-  \/\/ convenience\n-  void add_loader(oop p) {\n-    _loaders->push(ClassLoaderData::class_loader_data(p));\n-  }\n@@ -117,1 +112,1 @@\n-                                                Handle loader,\n+                                                ClassLoaderData* loader,\n@@ -119,1 +114,1 @@\n-  add_loader(loader());\n+  add_loader_data(loader);\n@@ -125,1 +120,1 @@\n-               ClassLoaderData::class_loader_data(loader())->loader_name_and_id(),\n+               loader->loader_name_and_id(),\n@@ -140,1 +135,1 @@\n-                                    Symbol* name, Handle loader) {\n+                                    Symbol* name, ClassLoaderData* loader_data) {\n@@ -148,2 +143,0 @@\n-  ClassLoaderData* loader_data = ClassLoaderData::class_loader_data(loader());\n-\n@@ -165,1 +158,2 @@\n-void LoaderConstraintTable::add_loader_constraint(Symbol* name, InstanceKlass* klass, oop class_loader1, oop class_loader2) {\n+void LoaderConstraintTable::add_loader_constraint(Symbol* name, InstanceKlass* klass,\n+                                                  ClassLoaderData* loader1, ClassLoaderData* loader2) {\n@@ -167,1 +161,1 @@\n-  LoaderConstraint* constraint = new LoaderConstraint(klass, class_loader1, class_loader2);\n+  LoaderConstraint* constraint = new LoaderConstraint(klass, loader1, loader2);\n@@ -259,1 +253,1 @@\n-                        Handle class_loader1, Handle class_loader2) {\n+                        ClassLoaderData* loader1, ClassLoaderData* loader2) {\n@@ -266,2 +260,2 @@\n-                  ClassLoaderData::class_loader_data(class_loader1())->loader_name_and_id(),\n-                  ClassLoaderData::class_loader_data(class_loader2())->loader_name_and_id(),\n+                  loader1->loader_name_and_id(),\n+                  loader2->loader_name_and_id(),\n@@ -273,2 +267,2 @@\n-                                      InstanceKlass* klass1, Handle class_loader1,\n-                                      InstanceKlass* klass2, Handle class_loader2) {\n+                                      InstanceKlass* klass1, ClassLoaderData* loader1,\n+                                      InstanceKlass* klass2, ClassLoaderData* loader2) {\n@@ -285,1 +279,1 @@\n-                             class_loader1, class_loader2);\n+                             loader1, loader2);\n@@ -291,1 +285,1 @@\n-  LoaderConstraint* pp1 = find_loader_constraint(class_name, class_loader1);\n+  LoaderConstraint* pp1 = find_loader_constraint(class_name, loader1);\n@@ -298,1 +292,1 @@\n-                               class_loader1, class_loader2);\n+                               loader1, loader2);\n@@ -306,1 +300,1 @@\n-  LoaderConstraint* pp2 = find_loader_constraint(class_name, class_loader2);\n+  LoaderConstraint* pp2 = find_loader_constraint(class_name, loader2);\n@@ -313,1 +307,1 @@\n-                               class_loader1, class_loader2);\n+                               loader1, loader2);\n@@ -323,1 +317,1 @@\n-    add_loader_constraint(class_name, klass, class_loader1(), class_loader2());\n+    add_loader_constraint(class_name, klass, loader1, loader2);\n@@ -329,3 +323,2 @@\n-                    ClassLoaderData::class_loader_data(class_loader1())->loader_name_and_id(),\n-                    ClassLoaderData::class_loader_data(class_loader2())->loader_name_and_id()\n-                    );\n+                    loader1->loader_name_and_id(),\n+                    loader2->loader_name_and_id());\n@@ -342,2 +335,1 @@\n-                      ClassLoaderData::class_loader_data(class_loader1())->loader_name_and_id()\n-                      );\n+                      loader1->loader_name_and_id());\n@@ -349,1 +341,1 @@\n-    pp2->extend_loader_constraint(class_name, class_loader1, klass);\n+    pp2->extend_loader_constraint(class_name, loader1, klass);\n@@ -351,1 +343,1 @@\n-    pp1->extend_loader_constraint(class_name, class_loader2, klass);\n+    pp1->extend_loader_constraint(class_name, loader1, klass);\n@@ -362,1 +354,1 @@\n-                                            Handle loader,\n+                                            ClassLoaderData* loader,\n@@ -372,1 +364,1 @@\n-                 ClassLoaderData::class_loader_data(loader())->loader_name_and_id());\n+                 loader->loader_name_and_id());\n@@ -383,1 +375,1 @@\n-                   ClassLoaderData::class_loader_data(loader())->loader_name_and_id());\n+                   loader->loader_name_and_id());\n@@ -391,1 +383,1 @@\n-                                                       Handle loader) {\n+                                                             ClassLoaderData* loader) {\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.cpp","additions":31,"deletions":39,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  static LoaderConstraint* find_loader_constraint(Symbol* name, Handle loader);\n+  static LoaderConstraint* find_loader_constraint(Symbol* name, ClassLoaderData* loader);\n@@ -40,1 +40,2 @@\n-  static void add_loader_constraint(Symbol* name, InstanceKlass* klass, oop class_loader1, oop class_loader2);\n+  static void add_loader_constraint(Symbol* name, InstanceKlass* klass,\n+                                    ClassLoaderData* loader1, ClassLoaderData* loader2);\n@@ -47,2 +48,2 @@\n-  static bool add_entry(Symbol* name, InstanceKlass* klass1, Handle loader1,\n-                        InstanceKlass* klass2, Handle loader2);\n+  static bool add_entry(Symbol* name, InstanceKlass* klass1, ClassLoaderData* loader1,\n+                        InstanceKlass* klass2, ClassLoaderData* loader2);\n@@ -56,1 +57,1 @@\n-  static InstanceKlass* find_constrained_klass(Symbol* name, Handle loader);\n+  static InstanceKlass* find_constrained_klass(Symbol* name, ClassLoaderData* loader);\n@@ -59,1 +60,1 @@\n-  static bool check_or_update(InstanceKlass* k, Handle loader, Symbol* name);\n+  static bool check_or_update(InstanceKlass* k, ClassLoaderData* loader, Symbol* name);\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.hpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -183,0 +183,5 @@\n+\/\/ Helper function\n+inline ClassLoaderData* class_loader_data(Handle class_loader) {\n+  return ClassLoaderData::class_loader_data(class_loader());\n+}\n+\n@@ -1067,1 +1072,1 @@\n-      pkg_entry = ClassLoaderData::class_loader_data(class_loader())->packages()->lookup_only(pkg_name);\n+      pkg_entry = class_loader_data(class_loader)->packages()->lookup_only(pkg_name);\n@@ -1183,1 +1188,1 @@\n-  assert(shared_nest_host->class_loader_data() == ClassLoaderData::class_loader_data(class_loader()), \"mismatched class loader data\");\n+  assert(shared_nest_host->class_loader_data() == class_loader_data(class_loader), \"mismatched class loader data\");\n@@ -1231,1 +1236,1 @@\n-  ClassLoaderData* loader_data = ClassLoaderData::class_loader_data(class_loader());\n+  ClassLoaderData* loader_data = class_loader_data(class_loader);\n@@ -1267,1 +1272,0 @@\n-    ClassLoaderData *loader_data = class_loader_data(class_loader);\n@@ -1272,1 +1276,1 @@\n-      pkg_entry = loader_data->packages()->lookup_only(pkg_name);\n+      pkg_entry = class_loader_data(class_loader)->packages()->lookup_only(pkg_name);\n@@ -1413,1 +1417,1 @@\n-    loaded_class->class_loader() != class_loader()) {\n+      loaded_class->class_loader() != class_loader()) {\n@@ -1415,1 +1419,2 @@\n-    check_constraints(loaded_class, class_loader, false, CHECK_NULL);\n+    ClassLoaderData* loader_data = class_loader_data(class_loader);\n+    check_constraints(loaded_class, loader_data, false, CHECK_NULL);\n@@ -1422,1 +1427,0 @@\n-    ClassLoaderData* loader_data = class_loader_data(class_loader);\n@@ -1428,1 +1432,1 @@\n-      update_dictionary(THREAD, loaded_class, class_loader);\n+      update_dictionary(THREAD, loaded_class, loader_data);\n@@ -1472,3 +1476,1 @@\n-  Symbol*  name_h = k->name();\n-  Dictionary* dictionary = loader_data->dictionary();\n-  check_constraints(k, class_loader, true, CHECK);\n+  check_constraints(k, loader_data, true, CHECK);\n@@ -1498,1 +1500,1 @@\n-    update_dictionary(THREAD, k, class_loader);\n+    update_dictionary(THREAD, k, loader_data);\n@@ -1531,1 +1533,1 @@\n-  Symbol*  name_h = k->name(); \/\/ passed in class_name may be null\n+  Symbol* name_h = k->name();\n@@ -1728,1 +1730,1 @@\n-                                         Handle class_loader,\n+                                         ClassLoaderData* loader_data,\n@@ -1736,2 +1738,1 @@\n-    Symbol *name = k->name();\n-    ClassLoaderData *loader_data = class_loader_data(class_loader);\n+    Symbol* name = k->name();\n@@ -1758,1 +1759,1 @@\n-      if (LoaderConstraintTable::check_or_update(k, class_loader, name) == false) {\n+      if (LoaderConstraintTable::check_or_update(k, loader_data, name) == false) {\n@@ -1763,2 +1764,2 @@\n-        Klass *existing_klass = LoaderConstraintTable::find_constrained_klass(name, class_loader);\n-        if (existing_klass != NULL && existing_klass->class_loader() != class_loader()) {\n+        Klass *existing_klass = LoaderConstraintTable::find_constrained_klass(name, loader_data);\n+        if (existing_klass != NULL && existing_klass->class_loader_data() != loader_data) {\n@@ -1787,1 +1788,1 @@\n-                                         Handle class_loader) {\n+                                         ClassLoaderData* loader_data) {\n@@ -1790,2 +1791,1 @@\n-  Symbol*  name  = k->name();\n-  ClassLoaderData *loader_data = class_loader_data(class_loader);\n+  Symbol* name  = k->name();\n@@ -1793,2 +1793,1 @@\n-  {\n-    MutexLocker mu1(SystemDictionary_lock);\n+  MutexLocker mu1(SystemDictionary_lock);\n@@ -1796,7 +1795,5 @@\n-    \/\/ Make a new dictionary entry.\n-    Dictionary* dictionary = loader_data->dictionary();\n-    InstanceKlass* sd_check = dictionary->find_class(current, name);\n-    if (sd_check == NULL) {\n-      dictionary->add_klass(current, name, k);\n-    }\n-    SystemDictionary_lock->notify_all();\n+  \/\/ Make a new dictionary entry.\n+  Dictionary* dictionary = loader_data->dictionary();\n+  InstanceKlass* sd_check = dictionary->find_class(current, name);\n+  if (sd_check == NULL) {\n+    dictionary->add_klass(current, name, k);\n@@ -1804,0 +1801,1 @@\n+  SystemDictionary_lock->notify_all();\n@@ -1834,1 +1832,1 @@\n-      klass = LoaderConstraintTable::find_constrained_klass(ss.as_symbol(), class_loader);\n+      klass = LoaderConstraintTable::find_constrained_klass(ss.as_symbol(), class_loader_data(class_loader));\n@@ -1843,1 +1841,1 @@\n-    klass = LoaderConstraintTable::find_constrained_klass(class_name, class_loader);\n+    klass = LoaderConstraintTable::find_constrained_klass(class_name, class_loader_data(class_loader));\n@@ -1883,2 +1881,2 @@\n-    bool result = LoaderConstraintTable::add_entry(constraint_name, klass1, class_loader1,\n-                                                   klass2, class_loader2);\n+    bool result = LoaderConstraintTable::add_entry(constraint_name, klass1, loader_data1,\n+                                                   klass2, loader_data2);\n@@ -2446,4 +2444,0 @@\n-ClassLoaderData* SystemDictionary::class_loader_data(Handle class_loader) {\n-  return ClassLoaderData::class_loader_data(class_loader());\n-}\n-\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":34,"deletions":40,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -204,4 +204,0 @@\n-  \/\/ Returns the class loader data to be used when looking up\/updating the\n-  \/\/ system dictionary.\n-  static ClassLoaderData *class_loader_data(Handle class_loader);\n-\n@@ -384,1 +380,1 @@\n-  static void check_constraints(InstanceKlass* k, Handle loader,\n+  static void check_constraints(InstanceKlass* k, ClassLoaderData* loader,\n@@ -386,1 +382,1 @@\n-  static void update_dictionary(JavaThread* current, InstanceKlass* k, Handle loader);\n+  static void update_dictionary(JavaThread* current, InstanceKlass* k, ClassLoaderData* loader_data);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}