{"files":[{"patch":"@@ -84,1 +84,1 @@\n-    oop_task_queues()->register_queue(i, _manager_array[i]->marking_stack());\n+    oop_task_queues()->register_queue(i, _manager_array[i]->oop_stack());\n@@ -120,2 +120,2 @@\n-  while (marking_stack()->pop_overflow(obj)) {\n-    if (!marking_stack()->try_push_to_taskqueue(obj)) {\n+  while (oop_stack()->pop_overflow(obj)) {\n+    if (!oop_stack()->try_push_to_taskqueue(obj)) {\n@@ -125,1 +125,1 @@\n-  while (marking_stack()->pop_local(obj)) {\n+  while (oop_stack()->pop_local(obj)) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  typedef GenericTaskQueue<oop, mtGC>             OopTaskQueue;\n+  typedef OverflowTaskQueue<oop, mtGC>            OopTaskQueue;\n@@ -69,1 +69,1 @@\n-  OverflowTaskQueue<oop, mtGC>        _marking_stack;\n+  OopTaskQueue                  _oop_stack;\n@@ -73,1 +73,1 @@\n-  \/\/ Is there a way to reuse the _marking_stack for the\n+  \/\/ Is there a way to reuse the _oop_stack for the\n@@ -111,1 +111,1 @@\n-  OverflowTaskQueue<oop, mtGC>*  marking_stack()       { return &_marking_stack; }\n+  OopTaskQueue*  oop_stack()       { return &_oop_stack; }\n@@ -224,1 +224,1 @@\n-  return _marking_stack.is_empty() && _objarray_stack.is_empty();\n+  return _oop_stack.is_empty() && _objarray_stack.is_empty();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-  _marking_stack.push(obj);\n+  _oop_stack.push(obj);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}