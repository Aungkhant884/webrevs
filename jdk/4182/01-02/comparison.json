{"files":[{"patch":"@@ -2170,2 +2170,2 @@\n-                switch (typeCodes[i]) {\n-                    case 'L', '[' -> vals[offsets[i]] = unsafe.getReference(obj, readKeys[i]);\n+                vals[offsets[i]] = switch (typeCodes[i]) {\n+                    case 'L', '[' -> unsafe.getReference(obj, readKeys[i]);\n@@ -2173,2 +2173,1 @@\n-                }\n-            }\n+                };\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -781,1 +781,0 @@\n-\n@@ -783,5 +782,5 @@\n-            case TT_EOF     -> ret = \"EOF\";\n-            case TT_EOL     -> ret = \"EOL\";\n-            case TT_WORD    -> ret = sval;\n-            case TT_NUMBER  -> ret = \"n=\" + nval;\n-            case TT_NOTHING -> ret = \"NOTHING\";\n+            case TT_EOF     -> \"EOF\";\n+            case TT_EOL     -> \"EOL\";\n+            case TT_WORD    -> sval;\n+            case TT_NUMBER  -> \"n=\" + nval;\n+            case TT_NOTHING -> \"NOTHING\";\n@@ -796,1 +795,1 @@\n-                    ret = sval;\n+                    yield sval;\n@@ -798,1 +797,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/java\/io\/StreamTokenizer.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -133,8 +133,12 @@\n-        switch (strength) {\n-            case Collator.IDENTICAL -> toAddTo.append('=');\n-            case Collator.TERTIARY  -> toAddTo.append(',');\n-            case Collator.SECONDARY -> toAddTo.append(';');\n-            case Collator.PRIMARY   -> toAddTo.append('<');\n-            case RESET              -> toAddTo.append('&');\n-            case UNSET              -> toAddTo.append('?');\n-        }\n+        var c = switch (strength) {\n+            case Collator.IDENTICAL -> '=';\n+            case Collator.TERTIARY  -> ',';\n+            case Collator.SECONDARY -> ';';\n+            case Collator.PRIMARY   -> '<';\n+            case RESET              -> '&';\n+            case UNSET              -> '?';\n+\n+            default -> throw new IllegalStateException(\"Unexpected value: \" + strength);\n+        };\n+        toAddTo.append(c);\n+        \n","filename":"src\/java.base\/share\/classes\/java\/text\/PatternEntry.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"}]}