{"files":[{"patch":"@@ -1,99 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package compiler.integerArithmetic;\n-\n-import jdk.test.lib.Asserts;\n-\n-\/*\n- * @test TestDivision\n- * @bug 8284742\n- * @summary Tests to verify compiled code correctly handles integral divisions.\n- * @library \/test\/lib\n- *\n- * @run main\/othervm -Xcomp -XX:-TieredCompilation\n- *      -XX:CompileCommand=compileonly,*.TestDivision::divide\n- *      -XX:CompileCommand=compileonly,*.TestDivision::remainder\n- *      compiler.integerArithmetic.TestDivision\n- *\/\n-public class TestDivision {\n-    public static void main(String[] args) {\n-        Asserts.assertEquals(divide(19, 7), 19 \/ 7);\n-        Asserts.assertEquals(remainder(19, 7), 19 % 7);\n-        Asserts.assertEquals(divide(19L, 7L), 19L \/ 7L);\n-        Asserts.assertEquals(remainder(19L, 7L), 19L % 7L);\n-\n-        Asserts.assertEquals(divide(19, -7), 19 \/ -7);\n-        Asserts.assertEquals(remainder(19, -7), 19 % -7);\n-        Asserts.assertEquals(divide(19L, -7L), 19L \/ -7L);\n-        Asserts.assertEquals(remainder(19L, -7L), 19L % -7L);\n-\n-        Asserts.assertEquals(divide(-19, 7), -19 \/ 7);\n-        Asserts.assertEquals(remainder(-19, 7), -19 % 7);\n-        Asserts.assertEquals(divide(-19L, 7L), -19L \/ 7L);\n-        Asserts.assertEquals(remainder(-19L, 7L), -19L % 7L);\n-\n-        Asserts.assertEquals(divide(-19, -7), -19 \/ -7);\n-        Asserts.assertEquals(remainder(-19, -7), -19 % -7);\n-        Asserts.assertEquals(divide(-19L, -7L), -19L \/ -7L);\n-        Asserts.assertEquals(remainder(-19L, -7L), -19L % -7L);\n-\n-        Asserts.assertEquals(divide(Integer.MIN_VALUE, -1), Integer.MIN_VALUE \/ -1);\n-        Asserts.assertEquals(remainder(Integer.MIN_VALUE, -1), Integer.MIN_VALUE % -1);\n-        Asserts.assertEquals(divide(Long.MIN_VALUE, -1), Long.MIN_VALUE \/ -1L);\n-        Asserts.assertEquals(remainder(Long.MIN_VALUE, -1), Long.MIN_VALUE % -1L);\n-\n-        try {\n-            divide(19, 0);\n-            Asserts.fail();\n-        } catch (ArithmeticException e) {}\n-        try {\n-            remainder(19, 0);\n-            Asserts.fail();\n-        } catch (ArithmeticException e) {}\n-        try {\n-            divide(19L, 0L);\n-            Asserts.fail();\n-        } catch (ArithmeticException e) {}\n-        try {\n-            remainder(19L, 0L);\n-            Asserts.fail();\n-        } catch (ArithmeticException e) {}\n-    }\n-\n-    static int divide(int x, int y) {\n-        return x \/ y;\n-    }\n-\n-    static int remainder(int x, int y) {\n-        return x % y;\n-    }\n-\n-    static long divide(long x, long y) {\n-        return x \/ y;\n-    }\n-\n-    static long remainder(long x, long y) {\n-        return x % y;\n-    }\n-}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/integerArithmetic\/TestDivision.java","additions":0,"deletions":99,"binary":false,"changes":99,"status":"deleted"}]}