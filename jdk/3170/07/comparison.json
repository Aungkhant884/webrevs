{"files":[{"patch":"@@ -733,5 +733,3 @@\n-            if (obj instanceof TickClock) {\n-                TickClock other = (TickClock) obj;\n-                return baseClock.equals(other.baseClock) && tickNanos == other.tickNanos;\n-            }\n-            return false;\n+            return (obj instanceof TickClock other)\n+                    && tickNanos == other.tickNanos\n+                    && baseClock.equals(other.baseClock);\n","filename":"src\/java.base\/share\/classes\/java\/time\/Clock.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -722,2 +722,2 @@\n-        if (unit instanceof ChronoUnit) {\n-            switch ((ChronoUnit) unit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n+            switch (chronoUnit) {\n@@ -1424,1 +1424,1 @@\n-     * @param otherDuration the other duration, null returns false\n+     * @param other the other duration, null returns false\n@@ -1428,2 +1428,2 @@\n-    public boolean equals(Object otherDuration) {\n-        if (this == otherDuration) {\n+    public boolean equals(Object other) {\n+        if (this == other) {\n@@ -1432,6 +1432,3 @@\n-        if (otherDuration instanceof Duration) {\n-            Duration other = (Duration) otherDuration;\n-            return this.seconds == other.seconds &&\n-                   this.nanos == other.nanos;\n-        }\n-        return false;\n+        return (other instanceof Duration otherDuration)\n+                && this.seconds == otherDuration.seconds\n+                && this.nanos == otherDuration.nanos;\n","filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1295,1 +1295,1 @@\n-     * @param otherInstant  the other instant, null returns false\n+     * @param other  the other instant, null returns false\n@@ -1299,2 +1299,2 @@\n-    public boolean equals(Object otherInstant) {\n-        if (this == otherInstant) {\n+    public boolean equals(Object other) {\n+        if (this == other) {\n@@ -1303,6 +1303,3 @@\n-        if (otherInstant instanceof Instant) {\n-            Instant other = (Instant) otherInstant;\n-            return this.seconds == other.seconds &&\n-                   this.nanos == other.nanos;\n-        }\n-        return false;\n+        return (other instanceof Instant otherInstant)\n+                && this.seconds == otherInstant.seconds\n+                && this.nanos == otherInstant.nanos;\n","filename":"src\/java.base\/share\/classes\/java\/time\/Instant.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1943,1 +1943,1 @@\n-        if (zone instanceof ZoneOffset == false) {\n+        if (!(zone instanceof ZoneOffset)) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1686,1 +1686,1 @@\n-        if (unit instanceof ChronoUnit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n@@ -1700,1 +1700,1 @@\n-                switch ((ChronoUnit) unit) {\n+                switch (chronoUnit) {\n@@ -1938,5 +1938,3 @@\n-        if (obj instanceof LocalDateTime) {\n-            LocalDateTime other = (LocalDateTime) obj;\n-            return date.equals(other.date) && time.equals(other.time);\n-        }\n-        return false;\n+        return (obj instanceof LocalDateTime other)\n+                && date.equals(other.date)\n+                && time.equals(other.time);\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDateTime.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1069,2 +1069,2 @@\n-        if (unit instanceof ChronoUnit) {\n-            switch ((ChronoUnit) unit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n+            switch (chronoUnit) {\n@@ -1410,1 +1410,1 @@\n-        if (unit instanceof ChronoUnit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n@@ -1412,1 +1412,1 @@\n-            switch ((ChronoUnit) unit) {\n+            switch (chronoUnit) {\n@@ -1586,6 +1586,5 @@\n-        if (obj instanceof LocalTime) {\n-            LocalTime other = (LocalTime) obj;\n-            return hour == other.hour && minute == other.minute &&\n-                    second == other.second && nano == other.nano;\n-        }\n-        return false;\n+        return (obj instanceof LocalTime other)\n+                && hour == other.hour\n+                && minute == other.minute\n+                && second == other.second\n+                && nano == other.nano;\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalTime.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -447,2 +447,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n@@ -723,5 +723,3 @@\n-        if (obj instanceof MonthDay) {\n-            MonthDay other = (MonthDay) obj;\n-            return month == other.month && day == other.day;\n-        }\n-        return false;\n+        return (obj instanceof MonthDay other)\n+                && month == other.month\n+                && day == other.day;\n","filename":"src\/java.base\/share\/classes\/java\/time\/MonthDay.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -599,2 +599,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n@@ -636,2 +636,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n@@ -1884,5 +1884,3 @@\n-        if (obj instanceof OffsetDateTime) {\n-            OffsetDateTime other = (OffsetDateTime) obj;\n-            return dateTime.equals(other.dateTime) && offset.equals(other.offset);\n-        }\n-        return false;\n+        return (obj instanceof OffsetDateTime other)\n+                && dateTime.equals(other.dateTime)\n+                && offset.equals(other.offset);\n","filename":"src\/java.base\/share\/classes\/java\/time\/OffsetDateTime.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1181,1 +1181,1 @@\n-        if (unit instanceof ChronoUnit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n@@ -1183,1 +1183,1 @@\n-            switch ((ChronoUnit) unit) {\n+            switch (chronoUnit) {\n@@ -1363,5 +1363,3 @@\n-        if (obj instanceof OffsetTime) {\n-            OffsetTime other = (OffsetTime) obj;\n-            return time.equals(other.time) && offset.equals(other.offset);\n-        }\n-        return false;\n+        return (obj instanceof OffsetTime other)\n+                && time.equals(other.time)\n+                && offset.equals(other.offset);\n","filename":"src\/java.base\/share\/classes\/java\/time\/OffsetTime.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -995,7 +995,4 @@\n-        if (obj instanceof Period) {\n-            Period other = (Period) obj;\n-            return years == other.years &&\n-                    months == other.months &&\n-                    days == other.days;\n-        }\n-        return false;\n+        return (obj instanceof Period other)\n+                && years == other.years\n+                && months == other.months\n+                && days == other.days;\n","filename":"src\/java.base\/share\/classes\/java\/time\/Period.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -499,2 +499,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n@@ -711,2 +711,2 @@\n-        if (unit instanceof ChronoUnit) {\n-            switch ((ChronoUnit) unit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n+            switch (chronoUnit) {\n@@ -917,1 +917,1 @@\n-        if (unit instanceof ChronoUnit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n@@ -919,1 +919,1 @@\n-            switch ((ChronoUnit) unit) {\n+            switch (chronoUnit) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/Year.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -488,2 +488,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n@@ -808,2 +808,2 @@\n-        if (unit instanceof ChronoUnit) {\n-            switch ((ChronoUnit) unit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n+            switch (chronoUnit) {\n@@ -1049,1 +1049,1 @@\n-        if (unit instanceof ChronoUnit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n@@ -1051,1 +1051,1 @@\n-            switch ((ChronoUnit) unit) {\n+            switch (chronoUnit) {\n@@ -1171,5 +1171,3 @@\n-        if (obj instanceof YearMonth) {\n-            YearMonth other = (YearMonth) obj;\n-            return year == other.year && month == other.month;\n-        }\n-        return false;\n+        return (obj instanceof YearMonth other)\n+                && year == other.year\n+                && month == other.month;\n","filename":"src\/java.base\/share\/classes\/java\/time\/YearMonth.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -605,5 +605,2 @@\n-        if (obj instanceof ZoneId) {\n-            ZoneId other = (ZoneId) obj;\n-            return getId().equals(other.getId());\n-        }\n-        return false;\n+        return (obj instanceof ZoneId other)\n+                && getId().equals(other.getId());\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZoneId.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -816,2 +816,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n@@ -853,2 +853,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZonedDateTime.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -380,2 +380,2 @@\n-        if (unit instanceof ChronoUnit) {\n-            switch ((ChronoUnit) unit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n+            switch (chronoUnit) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoLocalDateImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -376,1 +376,1 @@\n-        if (unit instanceof ChronoUnit) {\n+        if (unit instanceof ChronoUnit chronoUnit) {\n@@ -379,1 +379,1 @@\n-                switch ((ChronoUnit) unit) {\n+                switch (chronoUnit) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoLocalDateTimeImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-        if (amount instanceof ChronoPeriodImpl == false) {\n+        if (!(amount instanceof ChronoPeriodImpl)) {\n@@ -206,1 +206,1 @@\n-        if (chrono.equals(period.getChronology()) == false) {\n+        if (!(chrono.equals(period.getChronology()))) {\n@@ -323,6 +323,3 @@\n-        if (obj instanceof ChronoPeriodImpl) {\n-            ChronoPeriodImpl other = (ChronoPeriodImpl) obj;\n-            return years == other.years && months == other.months &&\n-                    days == other.days && chrono.equals(other.chrono);\n-        }\n-        return false;\n+        return (obj instanceof ChronoPeriodImpl other)\n+                && years == other.years && months == other.months\n+                && days == other.days && chrono.equals(other.chrono);\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoPeriodImpl.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -198,2 +198,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n@@ -212,2 +212,2 @@\n-        if (field instanceof ChronoField) {\n-            switch ((ChronoField) field) {\n+        if (field instanceof ChronoField chronoField) {\n+            switch (chronoField) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoZonedDateTime.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -501,1 +501,1 @@\n-        if (era instanceof HijrahEra == false) {\n+        if (!(era instanceof HijrahEra)) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/HijrahChronology.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -631,3 +631,2 @@\n-        if (obj instanceof HijrahDate) {\n-            HijrahDate otherDate = (HijrahDate) obj;\n-            return prolepticYear == otherDate.prolepticYear\n+        return (obj instanceof HijrahDate otherDate)\n+                && prolepticYear == otherDate.prolepticYear\n@@ -637,2 +636,0 @@\n-        }\n-        return false;\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/HijrahDate.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -482,1 +482,1 @@\n-        if (era instanceof IsoEra == false) {\n+        if (!(era instanceof IsoEra)) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/IsoChronology.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-        if (era instanceof JapaneseEra == false) {\n+        if (!(era instanceof JapaneseEra jera)) {\n@@ -208,1 +208,1 @@\n-        return JapaneseDate.of((JapaneseEra) era, yearOfEra, month, dayOfMonth);\n+        return JapaneseDate.of(jera, yearOfEra, month, dayOfMonth);\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/JapaneseChronology.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -700,5 +700,2 @@\n-        if (obj instanceof JapaneseDate) {\n-            JapaneseDate otherDate = (JapaneseDate) obj;\n-            return this.isoDate.equals(otherDate.isoDate);\n-        }\n-        return false;\n+        return (obj instanceof JapaneseDate otherDate)\n+            && this.isoDate.equals(otherDate.isoDate);\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/JapaneseDate.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -296,1 +296,1 @@\n-        if (era instanceof MinguoEra == false) {\n+        if (!(era instanceof MinguoEra)) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/MinguoChronology.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -462,5 +462,2 @@\n-        if (obj instanceof MinguoDate) {\n-            MinguoDate otherDate = (MinguoDate) obj;\n-            return this.isoDate.equals(otherDate.isoDate);\n-        }\n-        return false;\n+        return (obj instanceof MinguoDate otherDate)\n+                && this.isoDate.equals(otherDate.isoDate);\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/MinguoDate.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-        if (era instanceof ThaiBuddhistEra == false) {\n+        if (!(era instanceof ThaiBuddhistEra)) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ThaiBuddhistChronology.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -462,5 +462,2 @@\n-        if (obj instanceof ThaiBuddhistDate) {\n-            ThaiBuddhistDate otherDate = (ThaiBuddhistDate) obj;\n-            return this.isoDate.equals(otherDate.isoDate);\n-        }\n-        return false;\n+        return (obj instanceof ThaiBuddhistDate otherDate)\n+                && this.isoDate.equals(otherDate.isoDate);\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ThaiBuddhistDate.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2211,1 +2211,1 @@\n-            if (obj instanceof TemporalAccessor == false) {\n+            if (!(obj instanceof TemporalAccessor)) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-        return (zone != null && zone instanceof ZoneOffset == false ? zone : null);\n+        return zone instanceof ZoneOffset ? null : zone;\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -192,1 +192,1 @@\n-        return field != null && (field instanceof ChronoField == false) && field.isSupportedBy(this);\n+        return field != null && (!(field instanceof ChronoField)) && field.isSupportedBy(this);\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/Parsed.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -396,6 +396,5 @@\n-        if (obj instanceof ValueRange) {\n-            ValueRange other = (ValueRange) obj;\n-            return minSmallest == other.minSmallest && minLargest == other.minLargest &&\n-                   maxSmallest == other.maxSmallest && maxLargest == other.maxLargest;\n-        }\n-        return false;\n+        return (obj instanceof ValueRange other)\n+                && minSmallest == other.minSmallest\n+                && minLargest == other.minLargest\n+                && maxSmallest == other.maxSmallest\n+                && maxLargest == other.maxLargest;\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/ValueRange.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -424,6 +424,4 @@\n-        if (other instanceof ZoneOffsetTransition) {\n-            ZoneOffsetTransition d = (ZoneOffsetTransition) other;\n-            return epochSecond == d.epochSecond &&\n-                offsetBefore.equals(d.offsetBefore) && offsetAfter.equals(d.offsetAfter);\n-        }\n-        return false;\n+        return (other instanceof ZoneOffsetTransition d)\n+                && epochSecond == d.epochSecond\n+                && offsetBefore.equals(d.offsetBefore)\n+                && offsetAfter.equals(d.offsetAfter);\n","filename":"src\/java.base\/share\/classes\/java\/time\/zone\/ZoneOffsetTransition.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -522,11 +522,10 @@\n-        if (otherRule instanceof ZoneOffsetTransitionRule) {\n-            ZoneOffsetTransitionRule other = (ZoneOffsetTransitionRule) otherRule;\n-            return month == other.month && dom == other.dom && dow == other.dow &&\n-                timeDefinition == other.timeDefinition &&\n-                time.equals(other.time) &&\n-                timeEndOfDay == other.timeEndOfDay &&\n-                standardOffset.equals(other.standardOffset) &&\n-                offsetBefore.equals(other.offsetBefore) &&\n-                offsetAfter.equals(other.offsetAfter);\n-        }\n-        return false;\n+        return (otherRule instanceof ZoneOffsetTransitionRule other)\n+                && month == other.month\n+                && dom == other.dom\n+                && dow == other.dow\n+                && timeDefinition == other.timeDefinition\n+                && timeEndOfDay == other.timeEndOfDay\n+                && time.equals(other.time)\n+                && standardOffset.equals(other.standardOffset)\n+                && offsetBefore.equals(other.offsetBefore)\n+                && offsetAfter.equals(other.offsetAfter);\n","filename":"src\/java.base\/share\/classes\/java\/time\/zone\/ZoneOffsetTransitionRule.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1030,9 +1030,6 @@\n-        if (otherRules instanceof ZoneRules) {\n-            ZoneRules other = (ZoneRules) otherRules;\n-            return Arrays.equals(standardTransitions, other.standardTransitions) &&\n-                    Arrays.equals(standardOffsets, other.standardOffsets) &&\n-                    Arrays.equals(savingsInstantTransitions, other.savingsInstantTransitions) &&\n-                    Arrays.equals(wallOffsets, other.wallOffsets) &&\n-                    Arrays.equals(lastRules, other.lastRules);\n-        }\n-        return false;\n+        return (otherRules instanceof ZoneRules other)\n+                && Arrays.equals(standardTransitions, other.standardTransitions)\n+                && Arrays.equals(standardOffsets, other.standardOffsets)\n+                && Arrays.equals(savingsInstantTransitions, other.savingsInstantTransitions)\n+                && Arrays.equals(wallOffsets, other.wallOffsets)\n+                && Arrays.equals(lastRules, other.lastRules);\n","filename":"src\/java.base\/share\/classes\/java\/time\/zone\/ZoneRules.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"}]}