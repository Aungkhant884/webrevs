{"files":[{"patch":"@@ -3242,0 +3242,1 @@\n+            int qreg = p;\n@@ -3253,1 +3254,1 @@\n-            regChars = (scan(p, n, L_REG_NAME, H_REG_NAME) == n);\n+            regChars = ((qreg = scan(p, n, L_REG_NAME, H_REG_NAME)) == n);\n@@ -3297,1 +3298,1 @@\n-                    fail(\"Illegal character in authority\", q);\n+                    fail(\"Illegal character in authority\", serverChars ? q : qreg);\n","filename":"src\/java.base\/share\/classes\/java\/net\/URI.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- *      7171415 6339649 6933879 8037396 8272072 8051627\n+ *      7171415 6339649 6933879 8037396 8272072 8051627 8297687\n@@ -1622,0 +1622,47 @@\n+        b8297687();\n+    }\n+\n+    private static void b8297687() {\n+        \/\/ constructors that take a hostname should fail\n+        test(\"ftps\", \"p.e.local|SIT@p.e.local\", \"\/path\", null)\n+                .x().z();\n+        test(\"ftps\", null,\"p.e.local|SIT@p.e.local\", -1, \"\/path\", null, null)\n+                .x().z();\n+        \/\/ constructors that take an authority component should succeed\n+        test(\"ftps\", \"p.e.local|SIT@p.e.local\", \"\/path\", null,null)\n+                .s(\"ftps\")\n+                .sp(\"\/\/p.e.local%7CSIT@p.e.local\/path\")\n+                .spd(\"\/\/p.e.local|SIT@p.e.local\/path\")\n+                .u(\"p.e.local%7CSIT\")\n+                .ud(\"p.e.local|SIT\")\n+                .h(\"p.e.local\")\n+                .n(-1)\n+                .p(\"\/path\")\n+                .pd(\"\/path\")\n+                .z();\n+\n+        \/\/ check index in exception for constructors that should fail\n+        try {\n+            URI uri = new URI(\"ftps\", \"p.e.local|SIT@p.e.local\", \"\/path\", null);\n+            throw new AssertionError(\"Expected URISyntaxException not thrown for \" + uri);\n+        } catch (URISyntaxException ex) {\n+            if (ex.getMessage().contains(\"at index 16\")) {\n+                 System.out.println(\"Got expected exception: \" + ex);\n+            } else {\n+                throw new AssertionError(\"Exception does not point at index 16\", ex);\n+            }\n+        }\n+        testCount++;\n+\n+        \/\/ check index in exception for constructors that should fail\n+        try {\n+            URI uri = new URI(\"ftps\", null, \"p.e.local|SIT@p.e.local\", -1, \"\/path\", null, null);\n+            throw new AssertionError(\"Expected URISyntaxException not thrown for \" + uri);\n+        } catch (URISyntaxException ex) {\n+            if (ex.getMessage().contains(\"at index 16\")) {\n+                System.out.println(\"Got expected exception: \" + ex);\n+            } else {\n+                throw new AssertionError(\"Exception does not point at index 16\", ex);\n+            }\n+        }\n+        testCount++;\n","filename":"test\/jdk\/java\/net\/URI\/Test.java","additions":48,"deletions":1,"binary":false,"changes":49,"status":"modified"}]}