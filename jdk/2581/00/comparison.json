{"files":[{"patch":"@@ -720,0 +720,8 @@\n+jzfile* ClassLoader::open_zip_file(const char* canonical_path, char** error_msg, JavaThread* thread) {\n+  \/\/ enable call to C land\n+  ThreadToNativeFromVM ttn(thread);\n+  HandleMark hm(thread);\n+  load_zip_library_if_needed();\n+  return (*ZipOpen)(canonical_path, error_msg);\n+}\n+\n@@ -731,2 +739,2 @@\n-    char* canonical_path = NEW_RESOURCE_ARRAY_IN_THREAD(thread, char, JVM_MAXPATHLEN);\n-    if (!get_canonical_path(path, canonical_path, JVM_MAXPATHLEN)) {\n+    const char* canonical_path = get_canonical_path(path, thread);\n+    if (canonical_path == NULL) {\n@@ -746,8 +754,1 @@\n-      jzfile* zip;\n-      {\n-        \/\/ enable call to C land\n-        ThreadToNativeFromVM ttn(thread);\n-        HandleMark hm(thread);\n-        load_zip_library_if_needed();\n-        zip = (*ZipOpen)(canonical_path, &error_msg);\n-      }\n+      jzfile* zip = open_zip_file(canonical_path, &error_msg, thread);\n@@ -792,2 +793,4 @@\n-      char canonical_path[JVM_MAXPATHLEN];\n-      if (get_canonical_path(path, canonical_path, JVM_MAXPATHLEN)) {\n+      JavaThread* thread = JavaThread::current();\n+      ResourceMark rm(thread);\n+      const char* canonical_path = get_canonical_path(path, thread);\n+      if (canonical_path != NULL) {\n@@ -795,9 +798,1 @@\n-        jzfile* zip;\n-        {\n-          \/\/ enable call to C land\n-          JavaThread* thread = JavaThread::current();\n-          ThreadToNativeFromVM ttn(thread);\n-          HandleMark hm(thread);\n-          load_zip_library_if_needed();\n-          zip = (*ZipOpen)(canonical_path, &error_msg);\n-        }\n+        jzfile* zip = open_zip_file(canonical_path, &error_msg, thread);\n@@ -1294,0 +1289,6 @@\n+char* ClassLoader::get_native_path(char* path) {\n+  char* native_path = os::strdup(path);\n+  assert(native_path != NULL, \"sanity\");\n+  return os::native_path(native_path);\n+}\n+\n@@ -1342,2 +1343,0 @@\n-    char* canonical_path_table_entry = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, JVM_MAXPATHLEN);\n-\n@@ -1347,2 +1346,1 @@\n-    char* canonical_class_src_path = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, JVM_MAXPATHLEN);\n-    bool success = get_canonical_path(path, canonical_class_src_path, JVM_MAXPATHLEN);\n+    char* native_path = get_native_path(path);\n@@ -1351,1 +1349,1 @@\n-    assert(success, \"must be valid path\");\n+    assert(native_path != NULL, \"sanity\");\n@@ -1354,1 +1352,1 @@\n-      success = get_canonical_path(ent->name(), canonical_path_table_entry, JVM_MAXPATHLEN);\n+      char* native_path_table_entry = get_native_path((char*)ent->name());\n@@ -1357,1 +1355,1 @@\n-      assert(success, \"must be valid path\");\n+      assert(native_path_table_entry != NULL, \"sanity\");\n@@ -1360,1 +1358,1 @@\n-      if (strcmp(canonical_path_table_entry, canonical_class_src_path) == 0) {\n+      if (os::same_files(native_path_table_entry, native_path)) {\n@@ -1394,0 +1392,1 @@\n+      os::free(native_path_table_entry);\n@@ -1402,0 +1401,2 @@\n+    os::free(native_path);\n+\n@@ -1602,5 +1603,5 @@\n-bool ClassLoader::get_canonical_path(const char* orig, char* out, int len) {\n-  assert(orig != NULL && out != NULL && len > 0, \"bad arguments\");\n-  JavaThread* THREAD = JavaThread::current();\n-  ResourceMark rm(THREAD);\n-\n+char* ClassLoader::get_canonical_path(const char* orig, Thread* thread) {\n+  assert(orig != NULL, \"bad arguments\");\n+  \/\/ caller needs to allocate ResourceMark for the following output buffer\n+  char* canonical_path = NEW_RESOURCE_ARRAY_IN_THREAD(thread, char, JVM_MAXPATHLEN);\n+  ResourceMark rm(thread);\n@@ -1608,1 +1609,1 @@\n-  char* orig_copy = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, strlen(orig)+1);\n+  char* orig_copy = NEW_RESOURCE_ARRAY_IN_THREAD(thread, char, strlen(orig)+1);\n@@ -1610,2 +1611,2 @@\n-  if ((CanonicalizeEntry)(os::native_path(orig_copy), out, len) < 0) {\n-    return false;\n+  if ((CanonicalizeEntry)(os::native_path(orig_copy), canonical_path, JVM_MAXPATHLEN) < 0) {\n+    return NULL;\n@@ -1613,1 +1614,1 @@\n-  return true;\n+  return canonical_path;\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":39,"deletions":38,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -257,0 +257,1 @@\n+  static jzfile* open_zip_file(const char* canonical_path, char** error_msg, JavaThread* thread);\n@@ -266,1 +267,1 @@\n-  static bool get_canonical_path(const char* orig, char* out, int len);\n+  static char* get_canonical_path(const char* orig, Thread* thread);\n@@ -368,0 +369,1 @@\n+  static char* get_native_path(char* path);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}