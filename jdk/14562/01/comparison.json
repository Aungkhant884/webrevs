{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @summary Test verifies that jhsdb jmap could generate heap dump from core when metspace is full\n+ * @summary Test verifies that jhsdb jmap could generate heap dump from core when metaspace is full\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestJmapCoreMetaspace.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-                \"isHardenedOSX\");\n+                \"isHardenedOSX\", \"hasPlistEntriesOSX\");\n","filename":"test\/lib-test\/jdk\/test\/lib\/TestMutuallyExclusivePlatformPredicates.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,0 +263,30 @@\n+    private static codesignProcess launchCodesignOnJavaBinary(String javaFileName) {\n+        ProcessBuilder pb = new ProcessBuilder(\"codesign\", \"--display\", \"--verbose\", javaFileName);\n+        pb.redirectErrorStream(true); \/\/ redirect stderr to stdout\n+        Process codesignProcess = pb.start();\n+        return codesignProcess;\n+    }\n+\n+    public static boolean hasPlistEntriesOSX() throws IOException {\n+        Path javaPath = Utils.javaPath();\n+        String javaFileName = javaPath.toAbsolutePath().toString();\n+        if (Files.notExists(javaPath)) {\n+            throw new FileNotFoundException(\"Could not find file \" + javaFileName);\n+        }\n+\n+        Process codesignProcess = launchCodesignOnJavaBinary(javaFileName);\n+        BufferedReader is = new BufferedReader(new InputStreamReader(codesignProcess.getInputStream()));\n+        String line;\n+        while ((line = is.readLine()) != null) {\n+            System.out.println(\"STDOUT: \" + line);\n+            if (line.indexOf(\"Info.plist=not bound\") != -1) {\n+                return false;\n+            }\n+            if (line.indexOf(\"Info.plist entries=\") != -1) {\n+                return true;\n+            }\n+        }\n+        System.out.println(\"No matching Info.plist entry was found\");\n+        return false;\n+    }\n+\n@@ -273,3 +303,1 @@\n-        \/\/ Find the path to the java binary.\n-        String jdkPath = System.getProperty(\"java.home\");\n-        Path javaPath = Paths.get(jdkPath + \"\/bin\/java\");\n+        Path javaPath = Utils.javaPath();\n@@ -281,4 +309,1 @@\n-        \/\/ Run codesign on the java binary.\n-        ProcessBuilder pb = new ProcessBuilder(\"codesign\", \"--display\", \"--verbose\", javaFileName);\n-        pb.redirectErrorStream(true); \/\/ redirect stderr to stdout\n-        Process codesignProcess = pb.start();\n+        Process codesignProcess = launchCodesignOnJavaBinary(javaFileName);\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":33,"deletions":8,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1053,0 +1053,10 @@\n+\n+    \/**\n+     * Returns path to the Java binary.\n+     *\n+     * @return path to the Java binary\n+     *\/\n+    public static Path javaPath() {\n+        String jdkPath = System.getProperty(\"java.home\");\n+        return Paths.get(jdkPath + \"\/bin\/java\");\n+    }\n","filename":"test\/lib\/jdk\/test\/lib\/Utils.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,0 +130,2 @@\n+        } else {\n+            System.out.println(\"Core file not found. Trying to find a reason why...\");\n@@ -151,0 +153,5 @@\n+            } else {\n+                \/\/ codesign has to add entitlements using the plist, if this is not present we might not generate a core file\n+                if (!Platform.hasPlistEntriesOSX()) {\n+                    throw new SkippedException(\"Cannot produce core file with binary having no plist entitlement entries\");\n+                }\n","filename":"test\/lib\/jdk\/test\/lib\/util\/CoreUtils.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}