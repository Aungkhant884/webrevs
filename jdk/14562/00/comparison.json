{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @summary Test verifies that jhsdb jmap could generate heap dump from core when metspace is full\n+ * @summary Test verifies that jhsdb jmap could generate heap dump from core when metaspace is full\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestJmapCoreMetaspace.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -263,0 +263,28 @@\n+\n+    public static boolean hasPlistEntriesOSX() throws IOException {\n+        \/\/ Find the path to the java binary.\n+        String jdkPath = System.getProperty(\"java.home\");\n+        Path javaPath = Paths.get(jdkPath + \"\/bin\/java\");\n+        String javaFileName = javaPath.toAbsolutePath().toString();\n+        if (Files.notExists(javaPath)) {\n+            throw new FileNotFoundException(\"Could not find file \" + javaFileName);\n+        }\n+\n+        \/\/ Run codesign on the java binary.\n+        ProcessBuilder pb = new ProcessBuilder(\"codesign\", \"--display\", \"--verbose\", javaFileName);\n+        pb.redirectErrorStream(true); \/\/ redirect stderr to stdout\n+        Process codesignProcess = pb.start();\n+        BufferedReader is = new BufferedReader(new InputStreamReader(codesignProcess.getInputStream()));\n+        String line;\n+        while ((line = is.readLine()) != null) {\n+            System.out.println(\"STDOUT: \" + line);\n+            if (line.indexOf(\"Info.plist=not bound\") != -1) {\n+                return false;\n+            }\n+            if (line.indexOf(\"Info.plist entries=\") != -1) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -130,0 +130,2 @@\n+        } else {\n+            System.out.println(\"Core file not found, try to find a reason for this\");\n@@ -151,0 +153,5 @@\n+            } else {\n+                \/\/ codesign has to add entitlements using the plist, if this is not present we might not generate a core file\n+                if (!Platform.hasPlistEntriesOSX()) {\n+                    throw new SkippedException(\"Cannot produce core file with binary having no plist entitlement entries\");\n+                }\n","filename":"test\/lib\/jdk\/test\/lib\/util\/CoreUtils.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}