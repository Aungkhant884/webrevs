{"files":[{"patch":"@@ -28,0 +28,1 @@\n+ * @library \/test\/lib\n@@ -37,0 +38,2 @@\n+import static jdk.test.lib.Asserts.assertNotEquals;\n+\n@@ -57,3 +60,3 @@\n-            for (int i = 0; i < MAX_TRIES; i++) {\n-                if (!testNoPUEBeforeConnection(dc, refuser, sel, i)) {\n-                    break;\n+            for (int i = 1; i <= MAX_TRIES; i++) {\n+                if (testNoPUEBeforeConnection(dc, refuser, sel, i)) {\n+                    break; \/\/ test succeeded\n@@ -61,0 +64,1 @@\n+                assertNotEquals(i, MAX_TRIES, \"testNoPUEBeforeConnection: too many retries\");\n@@ -66,3 +70,3 @@\n-                for (int i = 0; i < MAX_TRIES; i++) {\n-                    if (!testPUEOnConnect(dc, refuser, sel, i)) {\n-                        break;\n+                for (int i = 1; i <= MAX_TRIES; i++) {\n+                    if (testPUEOnConnect(dc, refuser, sel, i)) {\n+                        break; \/\/ test passed\n@@ -70,0 +74,1 @@\n+                    assertNotEquals(i, MAX_TRIES, \"testPUEOnConnect: too many retries\");\n@@ -76,3 +81,3 @@\n-            for (int i = 0; i < MAX_TRIES; i++) {\n-                if (!testNoPUEAfterDisconnect(dc, refuser, sel, i)) {\n-                    break;\n+            for (int i = 1; i <= MAX_TRIES; i++) {\n+                if (testNoPUEAfterDisconnect(dc, refuser, sel, i)) {\n+                    break; \/\/ test passed\n@@ -80,0 +85,1 @@\n+                assertNotEquals(i, MAX_TRIES, \"testNoPUEAfterDisconnect: too many retries\");\n@@ -103,1 +109,2 @@\n-            boolean ignoreStrayWakeup = checkUnexpectedWakeup(sel.selectedKeys());\n+            boolean mayRetry = checkUnexpectedWakeup(sel.selectedKeys());\n+            boolean tooManyRetries = retryCount >= MAX_TRIES;\n@@ -106,4 +113,2 @@\n-            if (ignoreStrayWakeup) {\n-                if (retryCount < MAX_TRIES - 1) {\n-                    return true;\n-                }\n+            if (mayRetry && !tooManyRetries) {\n+                return false; \/\/ will retry\n@@ -117,1 +122,1 @@\n-        return false;\n+        return true; \/\/ test passed\n@@ -154,2 +159,3 @@\n-                if (retryCount < MAX_TRIES - 1) {\n-                    return true;\n+                boolean mayRetry = retryCount < MAX_TRIES;\n+                if (mayRetry) {\n+                    return false; \/\/ will retry\n@@ -162,1 +168,1 @@\n-        return false;\n+        return true; \/\/ test passed\n@@ -179,1 +185,2 @@\n-            boolean ignoreStrayWakeup = checkUnexpectedWakeup(sel.selectedKeys());\n+            boolean mayRetry = checkUnexpectedWakeup(sel.selectedKeys());\n+            boolean tooManyRetries = retryCount >= MAX_TRIES;\n@@ -182,4 +189,2 @@\n-            if (ignoreStrayWakeup) {\n-                if (retryCount < MAX_TRIES - 1) {\n-                    return true;\n-                }\n+            if (mayRetry && !tooManyRetries) {\n+                return false; \/\/ will retry\n@@ -190,1 +195,1 @@\n-        return false;\n+        return true; \/\/ test passed\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/SelectWhenRefused.java","additions":29,"deletions":24,"binary":false,"changes":53,"status":"modified"}]}