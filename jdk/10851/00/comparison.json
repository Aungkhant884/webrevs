{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 6935563 7044870\n+ * @bug 6935563 7044870 8293696\n@@ -28,0 +28,1 @@\n+ * @run main\/othervm SelectWhenRefused\n@@ -34,0 +35,1 @@\n+import java.util.Set;\n@@ -56,0 +58,1 @@\n+                logUnexpectedWakeup(dc, sel.selectedKeys());\n@@ -71,1 +74,4 @@\n-                        n = dc.read(ByteBuffer.allocate(100));\n+                        ByteBuffer buf = ByteBuffer.allocate(100);\n+                        n = dc.read(buf);\n+                        String message = new String(buf.array());\n+                        System.out.format(\"received %s at %s%n\", message, dc.getLocalAddress());\n@@ -85,0 +91,1 @@\n+                logUnexpectedWakeup(dc, sel.selectedKeys());\n@@ -102,0 +109,18 @@\n+\n+    static void logUnexpectedWakeup(DatagramChannel dc, Set<SelectionKey> selectedKeys) {\n+        for (SelectionKey key : selectedKeys) {\n+            if (!key.isValid() || !key.isReadable()) {\n+                System.out.println(\"Invalid or unreadable key: \" + key);\n+                return;\n+            }\n+            try {\n+                System.out.println(\"Attempting to read datagram from key: \" + key);\n+                ByteBuffer buf = ByteBuffer.allocate(100);\n+                SocketAddress sa = dc.receive(buf);\n+                String message = new String(buf.array());\n+                System.out.format(\"received %s from %s%n\", message, sa);\n+            } catch (IOException io) {\n+                System.out.println(\"Unable to read from datagram \" + io);\n+            }\n+        }\n+    }\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/SelectWhenRefused.java","additions":28,"deletions":3,"binary":false,"changes":31,"status":"modified"}]}