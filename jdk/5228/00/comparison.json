{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-            Collections.sort(list, InputEdge.OUTGOING_COMPARATOR);\n+            list.sort(InputEdge.OUTGOING_COMPARATOR);\n@@ -121,1 +121,1 @@\n-            Collections.sort(list, InputEdge.INGOING_COMPARATOR);\n+            list.sort(InputEdge.INGOING_COMPARATOR);\n@@ -136,1 +136,1 @@\n-        Collections.sort(result, InputEdge.OUTGOING_COMPARATOR);\n+        result.sort(InputEdge.OUTGOING_COMPARATOR);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputGraph.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-        Collections.sort(pairs, new Comparator<String[]>() {\n+        pairs.sort(new Comparator<String[]>() {\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/Properties.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,1 +178,1 @@\n-            Collections.sort(filterSettings, new Comparator<FilterSetting>() {\n+            filterSettings.sort(new Comparator<FilterSetting>() {\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterTopComponent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-        Collections.sort(figuresSorted, new Comparator<Figure>() {\n+        figuresSorted.sort(new Comparator<Figure>() {\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Diagram.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-        Collections.sort(inputSlots, Slot.slotIndexComparator);\n+        inputSlots.sort(Slot.slotIndexComparator);\n@@ -245,1 +245,1 @@\n-        Collections.sort(outputSlots, Slot.slotIndexComparator);\n+        outputSlots.sort(Slot.slotIndexComparator);\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Figure.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -617,2 +617,2 @@\n-                Collections.sort(downProcessingOrder[i], nodeProcessingDownComparator);\n-                Collections.sort(upProcessingOrder[i], nodeProcessingUpComparator);\n+                downProcessingOrder[i].sort(nodeProcessingDownComparator);\n+                upProcessingOrder[i].sort(nodeProcessingUpComparator);\n@@ -927,1 +927,1 @@\n-                Collections.sort(layers[i], crossingNodeComparator);\n+                layers[i].sort(crossingNodeComparator);\n@@ -998,1 +998,1 @@\n-                Collections.sort(layers[i], crossingNodeComparator);\n+                layers[i].sort(crossingNodeComparator);\n@@ -1188,1 +1188,1 @@\n-                            Collections.sort(list, comparator);\n+                            list.sort(comparator);\n@@ -1752,1 +1752,1 @@\n-            Collections.sort(links, linkComparator);\n+            links.sort(linkComparator);\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/HierarchicalLayoutManager.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -640,1 +640,1 @@\n-            Collections.sort(list, edgeComparator);\n+            list.sort(edgeComparator);\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/java\/com\/sun\/hotspot\/igv\/servercompiler\/ServerCompilerScheduler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.util.Collections;\n@@ -138,5 +137,4 @@\n-                Collections.sort(matches,\n-                                 (InputNode a, InputNode b) ->\n-                                 compareByRankThenNumVal(rawValue,\n-                                                         a.getProperties().get(name),\n-                                                         b.getProperties().get(name)));\n+                matches.sort((InputNode a, InputNode b) ->\n+                        compareByRankThenNumVal(rawValue,\n+                                a.getProperties().get(name),\n+                                b.getProperties().get(name)));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/NodeQuickSearch.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"}]}