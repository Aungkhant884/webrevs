{"files":[{"patch":"@@ -38,1 +38,1 @@\n-  { \"GenericCDSFileMapHeader::_common_app_classpath_size\", offset_of(GenericCDSFileMapHeader, _common_app_classpath_size) },\n+  { \"GenericCDSFileMapHeader::_common_app_classpath_prefix_size\", offset_of(GenericCDSFileMapHeader, _common_app_classpath_prefix_size) },\n","filename":"src\/hotspot\/share\/cds\/cdsConstants.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -208,1 +208,0 @@\n-  size_t longest_common_prefix_offset = 0;\n@@ -229,1 +228,1 @@\n-  longest_common_prefix_size = longest_common_app_classpath_len(len, app_cp_array);\n+  longest_common_prefix_size = longest_common_app_classpath_prefix_len(len, app_cp_array);\n@@ -237,2 +236,1 @@\n-                    longest_common_prefix_size,\n-                    longest_common_prefix_offset);\n+                    longest_common_prefix_size);\n@@ -243,2 +241,1 @@\n-                             size_t base_archive_name_offset, size_t common_app_classpath_size,\n-                             size_t common_app_classpath_offset) {\n+                             size_t base_archive_name_offset, size_t common_app_classpath_prefix_size) {\n@@ -251,1 +248,1 @@\n-  set_common_app_classpath_size((unsigned int)common_app_classpath_size);\n+  set_common_app_classpath_prefix_size((unsigned int)common_app_classpath_prefix_size);\n@@ -324,0 +321,1 @@\n+  st->print_cr(\"- common_app_classpath_size:      \" UINT32_FORMAT, common_app_classpath_prefix_size());\n@@ -326,1 +324,0 @@\n-  st->print_cr(\"- common_app_classpath_size:      \" UINT32_FORMAT, common_app_classpath_size());\n@@ -867,2 +864,2 @@\n-unsigned int FileMapInfo::longest_common_app_classpath_len(int num_paths,\n-                                                  GrowableArray<const char*>* rp_array) {\n+unsigned int FileMapInfo::longest_common_app_classpath_prefix_len(int num_paths,\n+                                                                  GrowableArray<const char*>* rp_array) {\n@@ -881,1 +878,2 @@\n-      return pos;\n+      \/\/ return the file separator char position\n+      return pos + 1;\n@@ -887,3 +885,3 @@\n-bool FileMapInfo::check_paths_ignoring_common_path(int shared_path_start_idx, int num_paths,\n-                                                   GrowableArray<const char*>* rp_array,\n-                                                   unsigned int dumptime_prefix_len, unsigned int runtime_prefix_len) {\n+bool FileMapInfo::check_paths_ignoring_common_prefix(int shared_path_start_idx, int num_paths,\n+                                                     GrowableArray<const char*>* rp_array,\n+                                                     unsigned int dumptime_prefix_len, unsigned int runtime_prefix_len) {\n@@ -1032,4 +1030,4 @@\n-      unsigned int dumptime_prefix_len = header()->common_app_classpath_size();\n-      unsigned int runtime_prefix_len = longest_common_app_classpath_len(shared_app_paths_len, rp_array);\n-      mismatch = check_paths_ignoring_common_path(j, shared_app_paths_len, rp_array,\n-                                                  dumptime_prefix_len, runtime_prefix_len);\n+      unsigned int dumptime_prefix_len = header()->common_app_classpath_prefix_size();\n+      unsigned int runtime_prefix_len = longest_common_app_classpath_prefix_len(shared_app_paths_len, rp_array);\n+      mismatch = check_paths_ignoring_common_prefix(j, shared_app_paths_len, rp_array,\n+                                                    dumptime_prefix_len, runtime_prefix_len);\n@@ -1280,1 +1278,1 @@\n-    if (!check_common_app_classpath()) {\n+    if (!check_common_app_classpath_prefix_len()) {\n@@ -1365,2 +1363,2 @@\n-  bool check_common_app_classpath() {\n-    int common_path_size = _header->_common_app_classpath_size;\n+  bool check_common_app_classpath_prefix_len() {\n+    int common_path_size = _header->_common_app_classpath_prefix_size;\n@@ -1368,1 +1366,1 @@\n-      FileMapInfo::fail_continue(\"common app classpath size < 0\");\n+      FileMapInfo::fail_continue(\"common app classpath prefix len < 0\");\n@@ -1453,1 +1451,1 @@\n-      log_info(cds)(\"common_app_classpath_size: \" UINT32_FORMAT, header()->common_app_classpath_size());\n+      log_info(cds)(\"common_app_classpath_size: \" UINT32_FORMAT, header()->common_app_classpath_prefix_size());\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":21,"deletions":23,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -247,1 +247,1 @@\n-  unsigned int common_app_classpath_size()   const { return _generic_header._common_app_classpath_size; }\n+  unsigned int common_app_classpath_prefix_size() const { return _generic_header._common_app_classpath_prefix_size; }\n@@ -255,1 +255,1 @@\n-  void set_common_app_classpath_size(unsigned int s)   { _generic_header._common_app_classpath_size = s; }\n+  void set_common_app_classpath_prefix_size(unsigned int s) { _generic_header._common_app_classpath_prefix_size = s; }\n@@ -316,1 +316,1 @@\n-                size_t common_app_classpath_size, size_t common_app_classpath_offset);\n+                size_t common_app_classpath_size);\n@@ -564,6 +564,7 @@\n-  unsigned int longest_common_app_classpath_len(int num_paths,\n-                                       GrowableArray<const char*>* rp_array) NOT_CDS_RETURN_(0);\n-  bool  check_paths_ignoring_common_path(int shared_path_start_idx, int num_paths,\n-                                         GrowableArray<const char*>* rp_array,\n-                                         unsigned int dumptime_prefix_len, unsigned int runtime_prefix_len)\n-                                         NOT_CDS_RETURN_(false);\n+  unsigned int longest_common_app_classpath_prefix_len(int num_paths,\n+                                                       GrowableArray<const char*>* rp_array)\n+                                                       NOT_CDS_RETURN_(0);\n+  bool  check_paths_ignoring_common_prefix(int shared_path_start_idx, int num_paths,\n+                                           GrowableArray<const char*>* rp_array,\n+                                           unsigned int dumptime_prefix_len, unsigned int runtime_prefix_len)\n+                                           NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -72,2 +72,2 @@\n-  unsigned int _common_app_classpath_size; \/\/ size of the common prefix of app class paths\n-                                           \/\/    0 if no common prefix exists\n+  unsigned int _common_app_classpath_prefix_size; \/\/ size of the common prefix of app class paths\n+                                                  \/\/    0 if no common prefix exists\n","filename":"src\/hotspot\/share\/include\/cds.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private static void runtimeTest(String classPath, int expectedExitValue,\n+    private static void runtimeTest(String classPath, String mainClass, int expectedExitValue,\n@@ -55,1 +55,1 @@\n-            \"HelloMore\");\n+            mainClass);\n@@ -74,0 +74,9 @@\n+        \/\/ dump an archive with only appJar in the original location\n+        String jars = appJar;\n+        TestCommon.testDump(jars, TestCommon.list(\"Hello\"));\n+\n+        \/\/ copy hello.jar to tmp dir\n+        Path destPath = CDSTestUtils.copyFile(appJar, System.getProperty(\"java.io.tmpdir\"));\n+\n+        \/\/ Run with appJar relocated to tmp dir - should PASS\n+        runtimeTest(destPath.toString(), \"Hello\", 0, successMessage1);\n@@ -76,1 +85,1 @@\n-        String jars = appJar + File.pathSeparator + appJar2;\n+        jars = appJar + File.pathSeparator + appJar2;\n@@ -81,1 +90,1 @@\n-        Path destPath = CDSTestUtils.copyFile(appJar, newDir);\n+        destPath = CDSTestUtils.copyFile(appJar, newDir);\n@@ -88,1 +97,1 @@\n-                    0, successMessage1, successMessage2);\n+                    \"HelloMore\", 0, successMessage1, successMessage2);\n@@ -92,1 +101,1 @@\n-                    1, failedMessage);\n+                    \"HelloMore\", 1, failedMessage);\n@@ -96,1 +105,1 @@\n-                    1, failedMessage);\n+                    \"HelloMore\", 1, failedMessage);\n@@ -104,1 +113,1 @@\n-                    0, successMessage1, successMessage2);\n+                    \"HelloMore\", 0, successMessage1, successMessage2);\n@@ -108,1 +117,1 @@\n-                    1, failedMessage);\n+                    \"HelloMore\", 1, failedMessage);\n@@ -130,1 +139,1 @@\n-                    0, successMessage1, successMessage2);\n+                    \"HelloMore\", 0, successMessage1, successMessage2);\n@@ -137,1 +146,1 @@\n-                    1, failedMessage);\n+                    \"HelloMore\", 1, failedMessage);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/CommonAppClasspath.java","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -278,5 +278,5 @@\n-        int commonAppClasspathSize = CDSArchiveUtils.commonAppClasspathSize(copiedJsa);\n-        System.out.println(\"    commonAppClasspathSize = \" + commonAppClasspathSize);\n-        CDSArchiveUtils.writeData(copiedJsa, CDSArchiveUtils.offsetCommonAppClasspathSize(), commonAppClasspathSize * 2);\n-        commonAppClasspathSize = CDSArchiveUtils.commonAppClasspathSize(copiedJsa);\n-        System.out.println(\"new commonAppClasspathSize = \" + commonAppClasspathSize);\n+        int commonAppClasspathPrefixSize = CDSArchiveUtils.commonAppClasspathPrefixSize(copiedJsa);\n+        System.out.println(\"    commonAppClasspathPrefixSize = \" + commonAppClasspathPrefixSize);\n+        CDSArchiveUtils.writeData(copiedJsa, CDSArchiveUtils.offsetCommonAppClasspathPrefixSize(), commonAppClasspathPrefixSize * 2);\n+        commonAppClasspathPrefixSize = CDSArchiveUtils.commonAppClasspathPrefixSize(copiedJsa);\n+        System.out.println(\"new commonAppClasspathPrefixSize = \" + commonAppClasspathPrefixSize);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -156,2 +156,2 @@\n-        int commonAppClasspathSize = CDSArchiveUtils.commonAppClasspathSize(copiedJsa);\n-        CDSArchiveUtils.writeData(copiedJsa, CDSArchiveUtils.offsetCommonAppClasspathSize(), -1);\n+        int commonAppClasspathPrefixSize = CDSArchiveUtils.commonAppClasspathPrefixSize(copiedJsa);\n+        CDSArchiveUtils.writeData(copiedJsa, CDSArchiveUtils.offsetCommonAppClasspathPrefixSize(), -1);\n@@ -160,1 +160,1 @@\n-               \"common app classpath size < 0\");\n+               \"common app classpath prefix len < 0\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ArchiveConsistency.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,0 +86,17 @@\n+        \/\/ dump an archive with only appJar in the original location\n+        String jars = appJar;\n+        dump(topArchiveName,\n+             \"-Xlog:cds\",\n+             \"-Xlog:cds+dynamic=debug\",\n+             \"-cp\", jars, \"Hello\")\n+            .assertNormalExit(output -> {\n+                    output.shouldContain(\"Written dynamic archive 0x\");\n+                });\n+\n+        \/\/ copy hello.jar to tmp dir\n+        Path destPath = CDSTestUtils.copyFile(appJar, System.getProperty(\"java.io.tmpdir\"));\n+\n+        \/\/ Run with appJar relocated to tmp dir - should PASS\n+        jars = destPath.toString();\n+        runtimeTest(topArchiveName, jars, \"Hello\", 0, successMessage1);\n+\n@@ -87,1 +104,1 @@\n-        String jars = appJar + File.pathSeparator + appJar2;\n+        jars = appJar + File.pathSeparator + appJar2;\n@@ -98,1 +115,1 @@\n-        Path destPath = CDSTestUtils.copyFile(appJar, newDir);\n+        destPath = CDSTestUtils.copyFile(appJar, newDir);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/CommonAppClasspath.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    private static int offsetCommonAppClasspathSize;\/\/ offset of GenericCDSFileMapHeader::_common_app_classpath_size\n+    private static int offsetCommonAppClasspathPrefixSize;\/\/ offset of GenericCDSFileMapHeader::_common_app_classpath_size\n@@ -97,1 +97,1 @@\n-            offsetCommonAppClasspathSize = wb.getCDSOffsetForName(\"GenericCDSFileMapHeader::_common_app_classpath_size\");\n+            offsetCommonAppClasspathPrefixSize = wb.getCDSOffsetForName(\"GenericCDSFileMapHeader::_common_app_classpath_prefix_size\");\n@@ -136,1 +136,1 @@\n-    public static int offsetCommonAppClasspathSize() { return offsetCommonAppClasspathSize; }\n+    public static int offsetCommonAppClasspathPrefixSize() { return offsetCommonAppClasspathPrefixSize; }\n@@ -164,2 +164,2 @@\n-    public static int commonAppClasspathSize(File jsaFile) throws Exception {\n-        return (int)readInt(jsaFile, offsetCommonAppClasspathSize, 4);\n+    public static int commonAppClasspathPrefixSize(File jsaFile) throws Exception {\n+        return (int)readInt(jsaFile, offsetCommonAppClasspathPrefixSize, 4);\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSArchiveUtils.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}