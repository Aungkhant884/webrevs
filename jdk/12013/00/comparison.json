{"files":[{"patch":"@@ -65,0 +65,2 @@\n+\n+import jdk.internal.net.http.common.OperationTrackers.Tracker;\n@@ -95,0 +97,2 @@\n+    static final ReferenceTracker TRACKER = ReferenceTracker.INSTANCE;\n+\n@@ -129,2 +133,3 @@\n-            if (!sameClient || client == null)\n-                client = newHttpClient();\n+            try {\n+                if (!sameClient || client == null)\n+                    client = newHttpClient();\n@@ -132,6 +137,21 @@\n-            HttpRequest req = HttpRequest.newBuilder(URI.create(uri))\n-                                         .build();\n-            BodyHandler<byte[]> handler = new CRSBodyHandler();\n-            HttpResponse<byte[]> response = client.send(req, handler);\n-            byte[] body = response.body();\n-            assertEquals(body, bytes);\n+                HttpRequest req = HttpRequest.newBuilder(URI.create(uri))\n+                        .build();\n+                BodyHandler<byte[]> handler = new CRSBodyHandler();\n+                HttpResponse<byte[]> response = client.send(req, handler);\n+                byte[] body = response.body();\n+                assertEquals(body, bytes);\n+            } finally {\n+                if (sameClient) continue;\n+                Tracker tracker = TRACKER.getTracker(client);\n+                client = null;\n+                System.gc();\n+                AssertionError error = TRACKER.check(tracker, 1500);\n+                if (error != null) throw error;\n+            }\n+        }\n+        if (sameClient) {\n+            Tracker tracker = TRACKER.getTracker(client);\n+            client = null;\n+            System.gc();\n+            AssertionError error = TRACKER.check(tracker,1500);\n+            if (error != null) throw error;\n","filename":"test\/jdk\/java\/net\/httpclient\/MappingResponseSubscriber.java","additions":28,"deletions":8,"binary":false,"changes":36,"status":"modified"}]}