{"files":[{"patch":"@@ -60,1 +60,1 @@\n- * StringPrep API implements the StingPrep framework as described by\n+ * StringPrep API implements the StringPrep framework as described by\n@@ -63,1 +63,1 @@\n- * Profiles of StingPrep are set of rules and data according to which the\n+ * Profiles of StringPrep are set of rules and data according to which the\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/text\/StringPrep.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n- * all java type having been removed from the descriptor and added to the sting table.\n+ * all java type having been removed from the descriptor and added to the string table.\n","filename":"src\/java.base\/share\/native\/libjimage\/imageDecompressor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-   * @param value Sting to add to the vector\n+   * @param value String to add to the vector\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/StringVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-message.version-string-too-many-components=Version sting may have up to 3 components - major.minor.build .\n+message.version-string-too-many-components=Version string may have up to 3 components - major.minor.build .\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -402,1 +402,1 @@\n-        \/\/ Then find toSting\n+        \/\/ Then find toString\n","filename":"test\/jdk\/com\/sun\/jdi\/InvokeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-                parList[i] = null; \/\/getting rid of Stings produced by randomArgs\n+                parList[i] = null; \/\/getting rid of Strings produced by randomArgs\n","filename":"test\/jdk\/java\/lang\/invoke\/ExplicitCastArgumentsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,6 +67,6 @@\n-            Asserts.assertTrue(toString.contains(\"hello, world\"), \"Missing String field value in RecordedEvent#toSting()\");\n-            Asserts.assertTrue(toString.contains(\"4711\"), \"Missing integer fields value in RecordedEvent#toSting()\");\n-            Asserts.assertTrue(toString.contains(\"313\"), \"Missing double value in RecordedEvent#toSting()\");\n-            Asserts.assertTrue(toString.contains(\"HashMap\"), \"Missing class value in RecordedEvent#toSting()\");\n-            Asserts.assertTrue(toString.contains(\"1234567890\"), \"Missing long value in RecordedEvent#toSting()\");\n-            Asserts.assertTrue(toString.contains(\"&\"), \"Missing char value in RecordedEvent#toSting()\");\n+            Asserts.assertTrue(toString.contains(\"hello, world\"), \"Missing String field value in RecordedEvent#toString()\");\n+            Asserts.assertTrue(toString.contains(\"4711\"), \"Missing integer fields value in RecordedEvent#toString()\");\n+            Asserts.assertTrue(toString.contains(\"313\"), \"Missing double value in RecordedEvent#toString()\");\n+            Asserts.assertTrue(toString.contains(\"HashMap\"), \"Missing class value in RecordedEvent#toString()\");\n+            Asserts.assertTrue(toString.contains(\"1234567890\"), \"Missing long value in RecordedEvent#toString()\");\n+            Asserts.assertTrue(toString.contains(\"&\"), \"Missing char value in RecordedEvent#toString()\");\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/TestToString.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}