{"files":[{"patch":"@@ -1045,1 +1045,1 @@\n-            (java_thread->is_bound_vthread() && !java_thread->is_suspended())) &&\n+            (vt_oop->is_a(vmClasses::BoundVirtualThread_klass()) && !java_thread->is_suspended())) &&\n@@ -1156,1 +1156,1 @@\n-          (java_thread->is_bound_vthread() && java_thread->is_suspended())) &&\n+          (vt_oop->is_a(vmClasses::BoundVirtualThread_klass()) && java_thread->is_suspended())) &&\n@@ -3894,3 +3894,2 @@\n-    JavaThread* jt = JavaThread::cast(thread);\n-    if (jt->is_vthread_mounted() || jt->is_bound_vthread()) {\n-      \/\/ No support for virtual threads (yet).\n+    if (JavaThread::cast(thread)->is_vthread_mounted()) {\n+      \/\/ No support for a VirtualThread (yet).\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1840,1 +1840,1 @@\n-        !jt->is_bound_vthread()) {\n+        !thread_oop->is_a(vmClasses::BoundVirtualThread_klass())) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1471,1 +1471,1 @@\n-  if (JvmtiExport::can_support_virtual_threads() && thread->is_bound_vthread()) {\n+  if (JvmtiExport::can_support_virtual_threads() && thread->threadObj()->is_a(vmClasses::BoundVirtualThread_klass())) {\n@@ -1515,1 +1515,1 @@\n-  if (JvmtiExport::can_support_virtual_threads() && thread->is_bound_vthread()) {\n+  if (JvmtiExport::can_support_virtual_threads() && thread->threadObj()->is_a(vmClasses::BoundVirtualThread_klass())) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-  _jvmti_vthread = OopHandle(_thread_oop_storage, nullptr);\n+  _jvmti_vthread = OopHandle(_thread_oop_storage, p->is_a(vmClasses::BoundVirtualThread_klass()) ? p : nullptr);\n@@ -438,1 +438,0 @@\n-  _is_bound_vthread(false),\n@@ -1653,7 +1652,0 @@\n-#if INCLUDE_JVMTI\n-  if (thread_oop()->is_a(vmClasses::BoundVirtualThread_klass())) {\n-    set_is_bound_vthread(true);\n-    set_jvmti_vthread(thread_oop());\n-  }\n-#endif\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -319,1 +319,0 @@\n-  bool                  _is_bound_vthread;               \/\/ Cache of threadObj()->is_a(vmClasses::BoundVirtualThread_klass())\n@@ -654,3 +653,0 @@\n-  bool is_bound_vthread()                        { return _is_bound_vthread; }\n-  void set_is_bound_vthread(bool val)            { _is_bound_vthread = val; }\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -134,7 +134,0 @@\n-  jthread cur_thread = get_current_thread(jvmti, jni);\n-  if (jni->IsVirtualThread(cur_thread)) {\n-    LOG(\"Testing GetCurrentThreadCpuTime\\n\");\n-    err = jvmti->GetCurrentThreadCpuTime(&nanos);\n-    check_jvmti_error_unsupported_operation(jni, \"GetCurrentThreadCpuTime\", err);\n-  }\n-\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/BoundVThreadTest\/libBoundVThreadTest.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"}]}