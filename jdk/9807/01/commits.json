[{"commit":{"message":"Merge sve_facgt with int\/fp compare and few optimizations"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"b5d6931f02cf2013a0ae8f635363c16d83e347d9"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp"}],"sha":"133396c7aba9684f801ed6f96e56fa3ff8f7fdbe"},{"commit":{"message":"8290249: Vectorize signum on AArch64\n\nThis patch auto-vectorizes Math.signum intrinsic for float and  double\ntypes on aarch64 (Neon and SVE). On SVE supporting machines, if the\nMaxVectorSize <=16 the Neon code would be emitted and if the\nMaxVectorSize > 16, the SVE code for the intrinsic would be emitted.\n\nFollowing is the performance data for the micro test here -\ntest\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorSignum.java\n\nBenchmark\t                Size    A\tB       C\nVectorSignum.doubleSignum\t256\t1.79\t1.70\t3.18\nVectorSignum.doubleSignum\t512\t1.86\t1.73\t3.69\nVectorSignum.doubleSignum\t1024\t1.89\t1.74\t2.98\nVectorSignum.doubleSignum\t2048\t1.92\t1.75\t3.04\nVectorSignum.floatSignum\t256\t3.34\t3.06\t3.92\nVectorSignum.floatSignum\t512\t3.63\t3.22\t5.27\nVectorSignum.floatSignum\t1024\t3.76\t3.35\t4.77\nVectorSignum.floatSignum\t2048\t3.85\t3.47\t5.59\n\nA, B , C machine descriptions given below -\nA : 128-bit Neon machine\nB : 256-bit SVE machine\nC : 512-bit SVE machine\n\nThe numbers in the table are the gain ratios between the runtime (ns\/op)\nof the scalar, non-vectorized intrinsic code and the vectorized version\nof the intrinsic (this patch)."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestDoubleVect.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestFloatVect.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestSignumVector.java"}],"sha":"5f9683addb8bc68db7b556285552f5f201719287"}]