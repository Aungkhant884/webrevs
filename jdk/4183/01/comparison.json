{"files":[{"patch":"@@ -471,1 +471,3 @@\n-               \"9 the strongest compression.\", \"INT\", false, \"1\") {\n+               \"9 the strongest compression.\", \"INT\", false, \"1\"),\n+  _rewrite(\"-rewrite\", \"If specified, the dump file will be rewritten if it exists\",\n+           \"BOOLEAN\", false, \"false\") {\n@@ -475,0 +477,1 @@\n+  _dcmdparser.add_dcmd_option(&_rewrite);\n@@ -493,1 +496,1 @@\n-  dumper.dump(_filename.value(), output(), (int) level);\n+  dumper.dump(_filename.value(), output(), (int) level, _rewrite.value());\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -317,0 +317,1 @@\n+  DCmdArgument<bool> _rewrite;\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1908,1 +1908,1 @@\n-int HeapDumper::dump(const char* path, outputStream* out, int compression) {\n+int HeapDumper::dump(const char* path, outputStream* out, int compression, bool rewrite) {\n@@ -1931,1 +1931,1 @@\n-  DumpWriter writer(new (std::nothrow) FileWriter(path), compressor);\n+  DumpWriter writer(new (std::nothrow) FileWriter(path, rewrite), compressor);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-  int dump(const char* path, outputStream* out = NULL, int compression = -1);\n+  int dump(const char* path, outputStream* out = NULL, int compression = -1, bool rewrite = false);\n","filename":"src\/hotspot\/share\/services\/heapDumper.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  _fd = os::create_binary_file(_path, false);    \/\/ don't replace existing file\n+  _fd = os::create_binary_file(_path, _rewrite);\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+  bool _rewrite;\n@@ -67,1 +68,1 @@\n-  FileWriter(char const* path) : _path(path), _fd(-1) { }\n+  FileWriter(char const* path, bool rewrite) : _path(path), _rewrite(rewrite), _fd(-1) { }\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    public void run(CommandExecutor executor) throws IOException {\n+    public void run(CommandExecutor executor, boolean rewrite) throws IOException {\n@@ -55,1 +55,1 @@\n-        if (dump.exists()) {\n+        if (!rewrite && dump.exists()) {\n@@ -57,0 +57,2 @@\n+        } else if (rewrite) {\n+            dump.createNewFile();\n@@ -59,1 +61,1 @@\n-        String cmd = \"GC.heap_dump \" + heapDumpArgs + \" \" + dump.getAbsolutePath();\n+        String cmd = \"GC.heap_dump \" + (rewrite ? \"-rewrite \" : \"\") + heapDumpArgs + \" \" + dump.getAbsolutePath();\n@@ -88,1 +90,6 @@\n-        run(new PidJcmdExecutor());\n+        run(new PidJcmdExecutor(), false);\n+    }\n+\n+    @Test\n+    public void pidRewrite() throws IOException {\n+        run(new PidJcmdExecutor(), true);\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/HeapDumpTest.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"}]}