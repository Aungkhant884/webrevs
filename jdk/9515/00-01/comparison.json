{"files":[{"patch":"@@ -519,10 +519,1 @@\n-class ParallelSPCleanupThreadClosure : public ThreadClosure {\n-public:\n-  void do_thread(Thread* thread) {\n-    if (thread->is_Java_thread()) {\n-      StackWatermarkSet::start_processing(JavaThread::cast(thread), StackWatermarkKind::gc);\n-    }\n-  }\n-};\n-\n-class ParallelSPCleanupTask : public WorkerTask {\n+class ParallelCleanupTask : public WorkerTask {\n@@ -550,0 +541,7 @@\n+  class SafepointCleanupThreadClosure : public ThreadClosure {\n+  public:\n+    void do_thread(Thread* thread) {\n+      StackWatermarkSet::start_processing(JavaThread::cast(thread), StackWatermarkKind::gc);\n+    }\n+  };\n+\n@@ -551,1 +549,1 @@\n-  ParallelSPCleanupTask(uint num_workers) :\n+  ParallelCleanupTask(uint num_workers) :\n@@ -559,0 +557,1 @@\n+    \/\/ These tasks are ordered by relative length of time to execute so that potentially longer tasks start first.\n@@ -583,2 +582,2 @@\n-        ParallelSPCleanupThreadClosure cl;\n-        Threads::threads_do(&cl);\n+        SafepointCleanupThreadClosure cl;\n+        Threads::java_threads_do(&cl);\n@@ -614,1 +613,1 @@\n-    ParallelSPCleanupTask cleanup(num_cleanup_workers);\n+    ParallelCleanupTask cleanup(num_cleanup_workers);\n@@ -618,1 +617,1 @@\n-    ParallelSPCleanupTask cleanup(1);\n+    ParallelCleanupTask cleanup(1);\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"}]}