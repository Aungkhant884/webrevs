{"files":[{"patch":"@@ -115,1 +115,1 @@\n-    if (count == ERROR_INSUFFICIENT_BUFFER || count == ERROR_BUFFER_OVERFLOW) {\n+    if (count == ERROR_INSUFFICIENT_BUFFER) {\n@@ -190,1 +190,1 @@\n-    if (ret == ERROR_INSUFFICIENT_BUFFER || ret == ERROR_BUFFER_OVERFLOW) {\n+    if (ret == ERROR_INSUFFICIENT_BUFFER) {\n@@ -203,3 +203,10 @@\n-\n-        JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                \"IP Helper Library GetIfTable function failed\");\n+        switch (ret) {\n+            case ERROR_INVALID_PARAMETER:\n+                JNU_ThrowInternalError(env, \"IP Helper Library GetIfTable function failed: invalid parameter\");\n+                break;\n+            default:\n+                SetLastError(ret);\n+                JNU_ThrowByNameWithMessageAndLastError(env, JNU_JAVANETPKG \"SocketException\",\n+                        \"IP Helper Library GetIfTable function failed\");\n+                break;\n+        }\n@@ -311,2 +318,1 @@\n-                JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                       \"Cannot get multibyte char for interface display name\");\n+                JNU_ThrowInternalError(env, \"Cannot get multibyte char for interface display name\");\n@@ -377,1 +383,1 @@\n-    if (ret == ERROR_INSUFFICIENT_BUFFER || ret == ERROR_BUFFER_OVERFLOW) {\n+    if (ret == ERROR_INSUFFICIENT_BUFFER) {\n@@ -392,2 +398,10 @@\n-        JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                \"IP Helper Library GetIpAddrTable function failed\");\n+        switch (ret) {\n+            case ERROR_INVALID_PARAMETER:\n+                JNU_ThrowInternalError(env, \"IP Helper Library GetIpAddrTable function failed: invalid parameter\");\n+                break;\n+            default:\n+                SetLastError(ret);\n+                JNU_ThrowByNameWithMessageAndLastError(env, JNU_JAVANETPKG \"SocketException\",\n+                        \"IP Helper Library GetIpAddrTable function failed\");\n+                break;\n+        }\n","filename":"src\/java.base\/windows\/native\/libnet\/NetworkInterface.c","additions":24,"deletions":10,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -113,20 +113,16 @@\n-        if (ret == ERROR_INSUFFICIENT_BUFFER) {\n-            JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                \"IP Helper Library GetAdaptersAddresses function failed \"\n-                \"with ERROR_INSUFFICIENT_BUFFER\");\n-        } else if (ret == ERROR_ADDRESS_NOT_ASSOCIATED ) {\n-            JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                \"IP Helper Library GetAdaptersAddresses function failed \"\n-                \"with ERROR_ADDRESS_NOT_ASSOCIATED\");\n-        } else {\n-            char error_msg_buf[100];\n-            int _sr;\n-            _sr = _snprintf_s(error_msg_buf, sizeof(error_msg_buf),\n-                _TRUNCATE, \"IP Helper Library GetAdaptersAddresses \"\n-                            \"function failed with error == %d\", ret);\n-            if (_sr != -1) {\n-                JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\", error_msg_buf);\n-            } else {\n-                JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                    \"IP Helper Library GetAdaptersAddresses function failure\");\n-            }\n+        switch (ret) {\n+            case ERROR_INVALID_PARAMETER:\n+                JNU_ThrowInternalError(env, \"IP Helper Library GetAdaptersAddresses function failed: invalid parameter\");\n+                break;\n+            case ERROR_NOT_ENOUGH_MEMORY:\n+                JNU_ThrowOutOfMemoryError(env, \"IP Helper Library GetAdaptersAddresses function failed: not enough memory\");\n+                break;\n+            case ERROR_NO_DATA:\n+                \/\/ not an error\n+                *adapters = NULL;\n+                return ERROR_SUCCESS;\n+            default:\n+                SetLastError(ret);\n+                JNU_ThrowByNameWithMessageAndLastError(env, JNU_JAVANETPKG \"SocketException\",\n+                        \"IP Helper Library GetAdaptersAddresses function failed\");\n+                break;\n@@ -134,0 +130,1 @@\n+\n@@ -182,20 +179,15 @@\n-        if (val == ERROR_INSUFFICIENT_BUFFER) {\n-            JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                \"IP Helper Library GetAdaptersAddresses function failed \"\n-                \"with ERROR_INSUFFICIENT_BUFFER\");\n-        } else if (val == ERROR_ADDRESS_NOT_ASSOCIATED ) {\n-            JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                \"IP Helper Library GetAdaptersAddresses function failed \"\n-                \"with ERROR_ADDRESS_NOT_ASSOCIATED\");\n-        } else {\n-            char error_msg_buf[100];\n-            int _sr;\n-            _sr = _snprintf_s(error_msg_buf, sizeof(error_msg_buf),\n-                _TRUNCATE, \"IP Helper Library GetAdaptersAddresses function failed \"\n-                           \"with error == %d\", val);\n-            if (_sr != -1) {\n-                JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\", error_msg_buf);\n-            } else {\n-                JNU_ThrowByName(env, JNU_JAVANETPKG \"SocketException\",\n-                    \"IP Helper Library GetAdaptersAddresses function failure\");\n-            }\n+        switch (val) {\n+            case ERROR_INVALID_PARAMETER:\n+                JNU_ThrowInternalError(env, \"IP Helper Library GetAdaptersAddresses function failed: invalid parameter\");\n+                break;\n+            case ERROR_NOT_ENOUGH_MEMORY:\n+                JNU_ThrowOutOfMemoryError(env, \"IP Helper Library GetAdaptersAddresses function failed: not enough memory\");\n+                break;\n+            case ERROR_NO_DATA:\n+                \/\/ not an error\n+                break;\n+            default:\n+                SetLastError(val);\n+                JNU_ThrowByNameWithMessageAndLastError(env, JNU_JAVANETPKG \"SocketException\",\n+                        \"IP Helper Library GetAdaptersAddresses function failed\");\n+                break;\n","filename":"src\/java.base\/windows\/native\/libnet\/NetworkInterface_winXP.c","additions":32,"deletions":40,"binary":false,"changes":72,"status":"modified"}]}