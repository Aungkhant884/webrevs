{"files":[{"patch":"@@ -119,6 +119,7 @@\n- * Double#equals equals} uses <a href=#repEquivalence> representation equivalence<\/a>, defining NaN arguments to be equal to each\n- * other, restoring reflexivity, and defining {@code +0.0} to <em>not<\/em> be equal to {@code\n- * -0.0}. For comparisons, {@link\n- * Double#compareTo compareTo} defines a total order where {@code\n- * -0.0} is less than {@code +0.0} and where a NaN is equal to itself\n- * and considered greater than positive infinity.\n+ * Double#equals equals} uses <a href=#repEquivalence> representation\n+ * equivalence<\/a>, defining NaN arguments to be equal to each other,\n+ * restoring reflexivity, and defining {@code +0.0} to <em>not<\/em> be\n+ * equal to {@code -0.0}. For comparisons, {@link Double#compareTo\n+ * compareTo} defines a total order where {@code -0.0} is less than\n+ * {@code +0.0} and where a NaN is equal to itself and considered\n+ * greater than positive infinity.\n@@ -150,2 +151,2 @@\n- * <dt><a id=fpNumericalEq><i>numerical equality<\/i><\/a> ({@code ==} operator): (<em>Not<\/em>\n- * an equivalence relation)<\/dt>\n+ * <dt><a id=fpNumericalEq><i>numerical equality<\/i><\/a> ({@code ==}\n+ * operator): (<em>Not<\/em> an equivalence relation)<\/dt>\n@@ -162,2 +163,2 @@\n- * equivalence relation for {@code double} values {@code a} and {@code b} is\n- * implemented by the expression\n+ * equivalence relation for {@code double} values {@code a} and {@code\n+ * b} is implemented by the expression\n@@ -165,3 +166,3 @@\n- * Under this relation, {@code +0.0} and {@code -0.0} are distinguished\n- * from each other and every bit pattern encoding a NaN is distinguished\n- * from every other bit pattern encoding a NaN.\n+ * Under this relation, {@code +0.0} and {@code -0.0} are\n+ * distinguished from each other and every bit pattern encoding a NaN\n+ * is distinguished from every other bit pattern encoding a NaN.\n@@ -179,1 +180,2 @@\n- * <li> positive infinity is equivalent to positive infinity; negative infinity is equivalent to negative infinity; \n+ * <li> positive infinity is equivalent to positive infinity; negative\n+ *      infinity is equivalent to negative infinity.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"}]}