{"files":[{"patch":"@@ -61,1 +61,1 @@\n- * {@linkplain Double#POSITIVE_INFINITY positive infinity} and\n+ * ({@linkplain Double#POSITIVE_INFINITY positive infinity} and\n@@ -119,3 +119,3 @@\n- * Double#equals equals} defines NaN arguments to be equal to each\n- * other and defines {@code +0.0} to <em>not<\/em> be equal to {@code\n- * -0.0}, restoring reflexivity. For comparisons, {@link\n+ * Double#equals equals} uses <a href=#repEquivalence> representation equivalence<\/a>, defining NaN arguments to be equal to each\n+ * other, restoring reflexivity, and defining {@code +0.0} to <em>not<\/em> be equal to {@code\n+ * -0.0}. For comparisons, {@link\n@@ -146,0 +146,55 @@\n+ * <p>Comparing numerical equality to various useful equivalence\n+ * relations that can be defined over floating-point values:\n+ *\n+ * <dl>\n+ * <dt><a id=fpNumericalEq><i>numerical equality<\/i><\/a> ({@code ==} operator): (<em>Not<\/em>\n+ * an equivalence relation)<\/dt>\n+ * <dd>Two floating-point values represent the same extended real\n+ * number. The extended real numbers are the real numbers augmented\n+ * with positive infinity and negative infinity. Under numerical\n+ * equality, {@code +0.0} and {@code -0.0} are equal since they both\n+ * map to the same real value, 0. A NaN does not map to any real\n+ * number and is not equal to any value, including itself.\n+ * <\/dd>\n+ *\n+ * <dt><i>bit-wise equivalence<\/i>:<\/dt>\n+ * <dd>The bits of the two floating-point values are the same. This\n+ * equivalence relation for {@code double} values {@code a} and {@code b} is\n+ * implemented by the expression\n+ * <br>{@code Double.doubleTo}<code><b>Raw<\/b><\/code>{@code LongBits(a) == Double.doubleTo}<code><b>Raw<\/b><\/code>{@code LongBits(b)}<br>\n+ * Under this relation, {@code +0.0} and {@code -0.0} are distinguished\n+ * from each other and every bit pattern encoding a NaN is distinguished\n+ * from every other bit pattern encoding a NaN.\n+ * <\/dd>\n+ *\n+ * <dt><i><a id=repEquivalence>representation equivalence<\/a><\/i>:<\/dt>\n+ * <dd>The two floating-point values represent the the same IEEE 754\n+ * <i>datum<\/i>. In particular, for {@linkplain #isFinite(double)\n+ * finite} values, the sign, {@linkplain Math#getExponent(double)\n+ * exponent}, and significand components of the\n+ * floating-point values are the same. Under this relation:\n+ * <ul>\n+ * <li> {@code +0.0} and {@code -0.0} are distinguished from each other.\n+ * <li> every bit pattern encoding a NaN is considered equivalent to each other\n+ * <li> positive infinity is equivalent to positive infinity; negative infinity is equivalent to negative infinity; \n+ * <\/ul>\n+ * Expressions implementing this equivalence relation include:\n+ * <ul>\n+ * <li>{@code Double.doubleToLongBits(a) == Double.doubleToLongBits(b)}\n+ * <li>{@code Double.valueOf(a).equals(Double.valueOf(b))}\n+ * <li>{@code Double.compare(a, b) == 0}\n+ * <\/ul>\n+ * Note that representation equivalence is often an appropriate notion\n+ * of equivalence to test the behavior of {@linkplain StrictMath math\n+ * libraries}.\n+ * <\/dd>\n+ * <\/dl>\n+ *\n+ * For two binary floating-point values {@code a} and {@code b}, if\n+ * neither of {@code a} and {@code b} is zero or NaN, then the three\n+ * relations numerical equality, bit-wise equivalence, and\n+ * representation equivalence of {@code a} and {@code b} have the same\n+ * {@code true}\/{@code false} value. In other words, for binary\n+ * floating-point values, the three relations only differ if at least\n+ * one argument is zero or NaN.\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":59,"deletions":4,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -3090,0 +3090,4 @@\n+     * The behavior of comparing the result of this method for\n+     * equality to 0 is analogous to checking the <a\n+     * href=\"{@docRoot}\/java.base\/java\/lang\/Double.html#fpNumericalEq\">numerical\n+     * equality<\/a> of {@code double} values.\n@@ -3182,0 +3186,3 @@\n+     * The behavior of this method is analogous to checking the <a\n+     * href=\"{@docRoot}\/java.base\/java\/lang\/Double.html#repEquivalence\">representation\n+     * equivalence<\/a> of {@code double} values.\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}