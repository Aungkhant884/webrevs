{"files":[{"patch":"@@ -454,1 +454,0 @@\n-  ShenandoahControlThread*   control_thread()          { return _control_thread;    }\n@@ -457,0 +456,3 @@\n+public:\n+  ShenandoahControlThread*   control_thread() const    { return _control_thread;    }\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -150,0 +150,6 @@\n+    Thread* const thr = Thread::current();\n+    \/\/ Shenandoah GC specific safepoints are scheduled by control thread,\n+    \/\/ so that, querying from control thread can not happen during those\n+    \/\/ safepoints.\n+    if (thr == ShenandoahHeap::heap()->control_thread()) return false;\n+\n@@ -152,1 +158,1 @@\n-    if (!Thread::current()->is_VM_thread()) return true;\n+    if (!thr->is_VM_thread()) return true;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}