{"files":[{"patch":"@@ -94,0 +94,5 @@\n+    \/**\n+     * The implementation specific CMM profile, {@code null} if this\n+     * {@code ICC_Profile} is not activated by the {@link #cmmProfile()} method.\n+     * This field must not be used directly and only via {@link #cmmProfile()}.\n+     *\/\n@@ -95,0 +100,7 @@\n+\n+    \/**\n+     * Stores some information about {@code ICC_Profile} without causing a\n+     * deferred profile to be loaded. Note that we can defer the loading of\n+     * standard profiles only. If this field is null, then {@link #cmmProfile}\n+     * should be used to access profile information.\n+     *\/\n@@ -920,4 +932,6 @@\n-     * Activates the deferred standard profiles. Implementation of this method\n-     * mimics the old behaviour when the CMMException and IOException were\n-     * wrapped by the ProfileDataException, and the ProfileDataException itself\n-     * was ignored during activation.\n+     * Activates and returns the deferred standard profiles. Implementation of\n+     * this method mimics the old behaviour when the {@code CMMException} and\n+     * {@code IOException} were wrapped by the {@code ProfileDataException}, and\n+     * the {@code ProfileDataException} itself was ignored during activation.\n+     *\n+     * @return the implementation specific CMM profile, or {@code null}\n@@ -925,18 +939,19 @@\n-    private void activate() {\n-        if (cmmProfile == null) {\n-            synchronized (this) {\n-                if (cmmProfile != null) {\n-                    return;\n-                }\n-                var is = getStandardProfileInputStream(deferralInfo.filename);\n-                if (is == null) {\n-                    return;\n-                }\n-                try (is) {\n-                    byte[] data = getProfileDataFromStream(is);\n-                    if (data != null) {\n-                        cmmProfile = CMSManager.getModule().loadProfile(data);\n-                        \/\/ from now we cannot use the deferred value, drop it\n-                        deferralInfo = null;\n-                    }\n-                } catch (CMMException | IOException ignore) {\n+    private Profile cmmProfile() {\n+        Profile p = cmmProfile;\n+        if (p != null) {\n+            return p; \/\/ one volatile read on common path\n+        }\n+        synchronized (this) {\n+            if (cmmProfile != null) {\n+                return cmmProfile;\n+            }\n+            var is = getStandardProfileInputStream(deferralInfo.filename);\n+            if (is == null) {\n+                return null;\n+            }\n+            try (is) {\n+                byte[] data = getProfileDataFromStream(is);\n+                if (data != null) {\n+                    p = cmmProfile = CMSManager.getModule().loadProfile(data);\n+                    \/\/ from now we cannot use the deferred value, drop it\n+                    deferralInfo = null;\n@@ -944,0 +959,1 @@\n+            } catch (CMMException | IOException ignore) {\n@@ -946,0 +962,1 @@\n+        return p;\n@@ -1009,2 +1026,1 @@\n-        activate();\n-        return getColorSpaceType(cmmProfile);\n+        return getColorSpaceType(cmmProfile());\n@@ -1033,2 +1049,1 @@\n-        activate();\n-        byte[] theHeader = getData(cmmProfile, icSigHead);\n+        byte[] theHeader = getData(icSigHead);\n@@ -1070,2 +1085,1 @@\n-        activate();\n-        return CMSManager.getModule().getProfileData(cmmProfile);\n+        return CMSManager.getModule().getProfileData(cmmProfile());\n@@ -1088,2 +1102,2 @@\n-        activate();\n-        return getData(cmmProfile, tagSignature);\n+        byte[] t = getData(cmmProfile(), tagSignature);\n+        return t != null ? t.clone() : null;\n@@ -1118,2 +1132,1 @@\n-        activate();\n-        CMSManager.getModule().setTagData(cmmProfile, tagSignature, tagData);\n+        CMSManager.getModule().setTagData(cmmProfile(), tagSignature, tagData);\n@@ -1173,1 +1186,1 @@\n-    float[] getXYZTag(int tagSignature) {\n+    final float[] getXYZTag(int tagSignature) {\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_Profile.java","additions":46,"deletions":33,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    private static PCMM cmmImpl = null;\n+    private static volatile PCMM cmmImpl;\n@@ -38,1 +38,6 @@\n-    public static synchronized PCMM getModule() {\n+    public static PCMM getModule() {\n+        PCMM loc = cmmImpl;\n+        return loc != null ? loc : createModule();\n+    }\n+\n+    private static synchronized PCMM createModule() {\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/CMSManager.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import sun.java2d.cmm.lcms.LCMSProfile.TagData;\n@@ -36,1 +35,1 @@\n-public class LCMS implements PCMM {\n+final class LCMS implements PCMM {\n@@ -51,3 +50,1 @@\n-    private native long loadProfileNative(byte[] data, Object ref);\n-\n-    private LCMSProfile getLcmsProfile(Profile p) {\n+    private static LCMSProfile getLcmsProfile(Profile p) {\n@@ -60,39 +57,0 @@\n-    @Override\n-    public byte[] getProfileData(final Profile p) {\n-        LCMSProfile lcmsProfile = getLcmsProfile(p);\n-        synchronized (lcmsProfile) {\n-            return getProfileDataNative(lcmsProfile.getLcmsPtr());\n-        }\n-    }\n-\n-    private native byte[] getProfileDataNative(long ptr);\n-\n-    static native byte[] getTagNative(long profileID, int signature);\n-\n-    @Override\n-    public byte[] getTagData(Profile p, int tagSignature) {\n-        final LCMSProfile lcmsProfile = getLcmsProfile(p);\n-        synchronized (lcmsProfile) {\n-            TagData t = lcmsProfile.getTag(tagSignature);\n-            return t != null ? t.getData() : null;\n-        }\n-    }\n-\n-    @Override\n-    public synchronized void setTagData(Profile p, int tagSignature, byte[] data) {\n-        final LCMSProfile profile = getLcmsProfile(p);\n-\n-        synchronized (profile) {\n-            profile.clearTagCache();\n-\n-            \/\/ Now we are going to update the profile with new tag data\n-            \/\/ In some cases, we may change the pointer to the native\n-            \/\/ profile.\n-            \/\/\n-            \/\/ If we fail to write tag data for any reason, the old pointer\n-            \/\/ should be used.\n-            setTagDataNative(profile.getLcmsPtr(),\n-                    tagSignature, data);\n-        }\n-    }\n-\n@@ -109,2 +67,19 @@\n-    private native void setTagDataNative(long ptr, int tagSignature,\n-                                               byte[] data);\n+    static native void setTagDataNative(long ptr, int tagSignature, byte[] data);\n+    static native byte[] getProfileDataNative(long ptr);\n+    static native byte[] getTagNative(long profileID, int signature);\n+    private static native long loadProfileNative(byte[] data, Object ref);\n+\n+    @Override\n+    public byte[] getProfileData(Profile p) {\n+        return getLcmsProfile(p).getProfileData();\n+    }\n+\n+    @Override\n+    public byte[] getTagData(Profile p, int tagSignature) {\n+        return getLcmsProfile(p).getTag(tagSignature);\n+    }\n+\n+    @Override\n+    public synchronized void setTagData(Profile p, int tagSignature, byte[] data) {\n+        getLcmsProfile(p).setTag(tagSignature, data);\n+    }\n@@ -112,1 +87,1 @@\n-    public static synchronized native LCMSProfile getProfileID(ICC_Profile profile);\n+    static synchronized native LCMSProfile getProfileID(ICC_Profile profile);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMS.java","additions":22,"deletions":47,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -28,1 +28,3 @@\n-import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.locks.StampedLock;\n@@ -33,1 +35,0 @@\n-    private final TagCache tagCache;\n@@ -36,0 +37,2 @@\n+    private final Map<Integer, byte[]> tags = new ConcurrentHashMap<>();\n+    private final StampedLock lock = new StampedLock();\n@@ -39,1 +42,0 @@\n-\n@@ -41,2 +43,0 @@\n-\n-        tagCache = new TagCache(this);\n@@ -46,5 +46,1 @@\n-        return this.getNativePtr();\n-    }\n-\n-    TagData getTag(int sig) {\n-        return tagCache.getTag(sig);\n+        return getNativePtr();\n@@ -53,10 +49,6 @@\n-    void clearTagCache() {\n-        tagCache.clear();\n-    }\n-\n-    private static final class TagCache  {\n-        private final LCMSProfile profile;\n-        private final HashMap<Integer, TagData> tags = new HashMap<>();\n-\n-        private TagCache(LCMSProfile p) {\n-            profile = p;\n+    byte[] getProfileData() {\n+        long stamp = lock.readLock();\n+        try {\n+            return LCMS.getProfileDataNative(getNativePtr());\n+        } finally {\n+            lock.unlockRead(stamp);\n@@ -64,0 +56,1 @@\n+    }\n@@ -65,9 +58,3 @@\n-        private TagData getTag(int sig) {\n-            TagData t = tags.get(sig);\n-            if (t == null) {\n-                byte[] tagData = LCMS.getTagNative(profile.getNativePtr(), sig);\n-                if (tagData != null) {\n-                    t = new TagData(tagData);\n-                    tags.put(sig, t);\n-                }\n-            }\n+    byte[] getTag(int sig) {\n+        byte[] t = tags.get(sig);\n+        if (t != null) {\n@@ -76,3 +63,7 @@\n-\n-        private void clear() {\n-            tags.clear();\n+        long stamp = lock.readLock();\n+        try {\n+            return tags.computeIfAbsent(sig, (key) -> {\n+                return LCMS.getTagNative(getNativePtr(), key);\n+            });\n+        } finally {\n+            lock.unlockRead(stamp);\n@@ -82,9 +73,12 @@\n-    static final class TagData {\n-        private final byte[] data;\n-\n-        TagData(byte[] data) {\n-            this.data = data;\n-        }\n-\n-        byte[] getData() {\n-            return data.clone();\n+    void setTag(int tagSignature, byte[] data) {\n+        long stamp = lock.writeLock();\n+        try {\n+            tags.clear();\n+            \/\/ Now we are going to update the profile with new tag data\n+            \/\/ In some cases, we may change the pointer to the native profile.\n+            \/\/\n+            \/\/ If we fail to write tag data for any reason, the old pointer\n+            \/\/ should be used.\n+            LCMS.setTagDataNative(getNativePtr(), tagSignature, data);\n+        } finally {\n+            lock.unlockWrite(stamp);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMSProfile.java","additions":35,"deletions":41,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n- * Signature: ([JI)J\n+ * Signature: ([JIIZIZLjava\/lang\/Object;)J\n@@ -251,2 +251,2 @@\n- * Method:    loadProfile\n- * Signature: ([B,Lsun\/java2d\/cmm\/lcms\/LCMSProfile;)V\n+ * Method:    loadProfileNative\n+ * Signature: ([BLjava\/lang\/Object;)J\n@@ -255,1 +255,1 @@\n-  (JNIEnv *env, jobject obj, jbyteArray data, jobject disposerRef)\n+  (JNIEnv *env, jclass cls, jbyteArray data, jobject disposerRef)\n@@ -315,1 +315,1 @@\n- * Signature: (J[B)V\n+ * Signature: (J)[B\n@@ -318,1 +318,1 @@\n-  (JNIEnv *env, jobject obj, jlong id)\n+  (JNIEnv *env, jclass cls, jlong id)\n@@ -362,2 +362,2 @@\n- * Method:    getTagData\n- * Signature: (JI[B)V\n+ * Method:    getTagNative\n+ * Signature: (JI)[B\n@@ -366,1 +366,1 @@\n-  (JNIEnv *env, jobject obj, jlong id, jint tagSig)\n+  (JNIEnv *env, jclass cls, jlong id, jint tagSig)\n@@ -447,1 +447,1 @@\n- * Method:    setTagData\n+ * Method:    setTagDataNative\n@@ -451,1 +451,1 @@\n-  (JNIEnv *env, jobject obj, jlong id, jint tagSig, jbyteArray data)\n+  (JNIEnv *env, jclass cls, jlong id, jint tagSig, jbyteArray data)\n@@ -547,1 +547,1 @@\n-  (JNIEnv *env, jclass obj, jobject trans, jobject src, jobject dst)\n+  (JNIEnv *env, jclass cls, jobject trans, jobject src, jobject dst)\n@@ -616,1 +616,1 @@\n- * Signature: (Ljava\/awt\/color\/ICC_Profile;)Lsun\/java2d\/cmm\/lcms\/LCMSProfile\n+ * Signature: (Ljava\/awt\/color\/ICC_Profile;)Lsun\/java2d\/cmm\/lcms\/LCMSProfile;\n@@ -621,4 +621,0 @@\n-    jclass clsLcmsProfile;\n-    jobject cmmProfile;\n-    jfieldID fid;\n-\n@@ -628,1 +624,0 @@\n-\n@@ -633,1 +628,2 @@\n-    jmethodID mid = (*env)->GetMethodID(env, pcls, \"activate\", \"()V\");\n+    jmethodID mid = (*env)->GetMethodID(env, pcls, \"cmmProfile\",\n+                                        \"()Lsun\/java2d\/cmm\/Profile;\");\n@@ -637,1 +633,1 @@\n-    (*env)->CallVoidMethod(env, pf, mid);\n+    jobject cmmProfile = (*env)->CallObjectMethod(env, pf, mid);\n@@ -641,16 +637,2 @@\n-\n-    fid = (*env)->GetFieldID(env, pcls, \"cmmProfile\",\n-                             \"Lsun\/java2d\/cmm\/Profile;\");\n-    if (fid == NULL) {\n-        return NULL;\n-    }\n-\n-    clsLcmsProfile = (*env)->FindClass(env,\n-            \"sun\/java2d\/cmm\/lcms\/LCMSProfile\");\n-    if (clsLcmsProfile == NULL) {\n-        return NULL;\n-    }\n-\n-    cmmProfile = (*env)->GetObjectField (env, pf, fid);\n-\n-    if (JNU_IsNull(env, cmmProfile)) {\n+    jclass lcmsPCls = (*env)->FindClass(env, \"sun\/java2d\/cmm\/lcms\/LCMSProfile\");\n+    if (lcmsPCls == NULL) {\n@@ -659,1 +641,1 @@\n-    if ((*env)->IsInstanceOf(env, cmmProfile, clsLcmsProfile)) {\n+    if ((*env)->IsInstanceOf(env, cmmProfile, lcmsPCls)) {\n","filename":"src\/java.desktop\/share\/native\/liblcms\/LCMS.c","additions":19,"deletions":37,"binary":false,"changes":56,"status":"modified"}]}