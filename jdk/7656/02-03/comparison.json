{"files":[{"patch":"@@ -247,1 +247,2 @@\n-`--current-platform=x86_64-unknown-linux-gnu --openjdk-target=x86_64-unknown-linux-gnu` to `configure`.\n+`--build=x86_64-unknown-linux-gnu --openjdk-target=x86_64-unknown-linux-gnu`\n+to `configure`.\n@@ -989,10 +990,8 @@\n-autoconf, and if `--current-platform` is not set, `--build` as well, which can otherwise be confusing. (In autoconf terminology, the \"target\" is known as \"host\",\n-and \"target\" is used for building a Canadian cross-compiler.)\n-\n-### Specifying the Build Platform\n-\n-You can explicitly specify the build platform when compiling, by simply \n-passing the `--current-platform=<platform>` argument to `configure`.\n-This will set the `--build` option for autoconf, but it *will* override\n-platform autodetection for the build platform, so be sure that you know what\n-you are doing when using this option.\n+autoconf, which can otherwise be confusing. (In autoconf terminology, the\n+\"target\" is known as \"host\", and \"target\" is used for building a Canadian\n+cross-compiler.)\n+\n+If `--build` has not been explicitly passed to configure, `--openjdk-target`\n+will autodetect the build platform and internally set the flag automatically,\n+otherwise the platform that was explicitly passed to `--build` will be used\n+instead.\n","filename":"doc\/building.md","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -277,1 +277,1 @@\n-      conf_build_set=true\n+      conf_build_set=true ;;\n","filename":"make\/autoconf\/configure","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}